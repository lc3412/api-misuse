; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--atrac3plusdsp.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--atrac3plusdsp.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.Atrac3pChanUnitCtx = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i8], [16 x i8], [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pWaveSynthParams], %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams*, [24 x i8], [2 x %struct.Atrac3pIPQFChannelCtx], [2 x [2048 x float]] }
%struct.Atrac3pChanParams = type { i32, i32, i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], [2048 x i16], [5 x i8], [2 x [16 x i8]], i8*, i8*, [2 x [16 x %struct.AtracGainInfo]], %struct.AtracGainInfo*, %struct.AtracGainInfo*, i32, [2 x [16 x %struct.Atrac3pWavesData]], %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData* }
%struct.AtracGainInfo = type { i32, [7 x i32], [7 x i32] }
%struct.Atrac3pWavesData = type { %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope, i32, i32 }
%struct.Atrac3pWaveEnvelope = type { i32, i32, i32, i32 }
%struct.Atrac3pWaveSynthParams = type { i32, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, [48 x %struct.Atrac3pWaveParam] }
%struct.Atrac3pWaveParam = type { i32, i32, i32, i32 }
%struct.Atrac3pIPQFChannelCtx = type { [24 x [8 x float]], [24 x [8 x float]], i32, [28 x i8] }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }

@ff_atrac3p_qu_to_spec_pos = constant [33 x i16] [i16 0, i16 16, i16 32, i16 48, i16 64, i16 80, i16 96, i16 112, i16 128, i16 160, i16 192, i16 224, i16 256, i16 288, i16 320, i16 352, i16 384, i16 448, i16 512, i16 576, i16 640, i16 704, i16 768, i16 896, i16 1024, i16 1152, i16 1280, i16 1408, i16 1536, i16 1664, i16 1792, i16 1920, i16 2048], align 16
@ff_atrac3p_sf_tab = constant [64 x float] [float 0x3F9C854000000000, float 0x3FA1F78000000000, float 0x3FA6A30000000000, float 0x3FAC854000000000, float 0x3FB1F78000000000, float 0x3FB6A30000000000, float 0x3FBC854000000000, float 0x3FC1F78000000000, float 0x3FC6A30000000000, float 0x3FCC854000000000, float 0x3FD1F78000000000, float 0x3FD6A30000000000, float 0x3FDC854000000000, float 0x3FE1F78000000000, float 0x3FE6A30000000000, float 0x3FEC854000000000, float 0x3FF1F78000000000, float 0x3FF6A30000000000, float 0x3FFC854000000000, float 0x4001F78000000000, float 0x4006A30000000000, float 0x400C854000000000, float 0x4011F78000000000, float 0x4016A30000000000, float 0x401C854000000000, float 0x4021F78000000000, float 0x4026A30000000000, float 0x402C854000000000, float 0x4031F78000000000, float 0x4036A30000000000, float 0x403C854000000000, float 0x4041F78000000000, float 0x4046A30000000000, float 0x404C854000000000, float 0x4051F78000000000, float 0x4056A30000000000, float 0x405C854000000000, float 0x4061F78000000000, float 0x4066A30000000000, float 0x406C854000000000, float 0x4071F78000000000, float 3.621875e+02, float 0x407C854000000000, float 5.749375e+02, float 7.243750e+02, float 0x408C854000000000, float 1.149875e+03, float 1.448750e+03, float 0x409C854000000000, float 2.299750e+03, float 2.897500e+03, float 3.650625e+03, float 4.599500e+03, float 5.795000e+03, float 7.301250e+03, float 9.199000e+03, float 1.159000e+04, float 1.460250e+04, float 1.839800e+04, float 2.318000e+04, float 2.920500e+04, float 3.679600e+04, float 4.636000e+04, float 5.841000e+04], align 16
@ff_atrac3p_mant_tab = constant [8 x float] [float 0.000000e+00, float 0x3FE7EFC000000000, float 0x3FDCB98000000000, float 0x3FD4848000000000, float 0x3FCA1CC000000000, float 0x3FC3264000000000, float 0x3FB2884000000000, float 0x3FA23CC000000000], align 16
@sine_table = internal global [2048 x float] zeroinitializer, align 32
@hann_window = internal global [256 x float] zeroinitializer, align 32
@amp_sf_tab = internal global [64 x float] zeroinitializer, align 16
@subband_to_powgrp = internal constant [16 x i32] [i32 0, i32 1, i32 1, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 4], align 16
@noise_tab = internal constant [1024 x float] [float 0xBF8BCFFFC0000000, float 0xBFACA40000000000, float 0x3F915FFFC0000000, float 0xBFC3090000000000, float 0xBFD0E78000000000, float 0xBFB9540000000000, float 0x3FD0768000000000, float 0x3F94900040000000, float 0xBFE71D8000000000, float 0xBFDC628000000000, float 0xBFCD6C0000000000, float 0x3FC58C0000000000, float 0x3FDE048000000000, float 0x3FAE4BFFE0000000, float 0xBFC36E0000000000, float 0x3FDA6E8000000000, float 0xBF8A600040000000, float 0x3FC11A0000000000, float 0x3FDBE08000000000, float 0xBFB8660000000000, float 0xBFE2B20000000000, float 0x3FD9218000000000, float 0xBFB55C0000000000, float 0xBFD0630000000000, float 0x3FCD3F0000000000, float 0x3FD0A60000000000, float 0xBFE4FD0000000000, float 0x3FC6210000000000, float 0xBFB6340000000000, float 0xBFAAA40000000000, float 0x3FB2B00000000000, float 0xBFD2588000000000, float 0xBFD6EA8000000000, float 0x3FB0C60000000000, float 0xBFB8080000000000, float 0x3FCB020000000000, float 0xBFD2248000000000, float 0xBFE72B4000000000, float 0x3FA9DC0000000000, float 0xBFBB3A0000000000, float 0xBFC8220000000000, float 0x3FD3060000000000, float 0x3FCA800000000000, float 0xBFD3110000000000, float 0xBFD8160000000000, float 0x3FDEB38000000000, float 0xBFB98A0000000000, float 0x3FD4E40000000000, float 0xBFD2B80000000000, float 0xBFD2128000000000, float 0x3FD0A88000000000, float 0xBFD7240000000000, float 0x3FCC370000000000, float 0xBFA07FFFE0000000, float 0xBFD7DA0000000000, float 0xBFA3400020000000, float 0x3FB95E0020000000, float 0x3FCDCE0000000000, float 0x3FC8BB0000000000, float 0x3FC2800000000000, float 0xBF95E7FFE0000000, float 0xBFC9380000000000, float 0x3FD42E8000000000, float 0xBFC56E0000000000, float 0x3FD66B8000000000, float 0xBFD6D20000000000, float 0xBFE5294000000000, float 0xBF7CBFFF40000000, float 0x3FCAC00000000000, float 0x3FD12D0000000000, float 0xBFD5928000000000, float 0xBFA763FFE0000000, float 0x3FC0210000000000, float 0x3FBA540000000000, float 0x3FB2BE0000000000, float 0xBFC7660000000000, float 0x3FD8628000000000, float 0x3FCB440000000000, float 0x3FA7400020000000, float 0x3F87AFFFC0000000, float 0xBFD0E40000000000, float 0xBF98080020000000, float 0xBFCC520000000000, float 0x3FD30C0000000000, float 0xBFD7308000000000, float 0xBFD40A8000000000, float 0xBFC1E10000000000, float 0xBFBCDE0000000000, float 0xBFC8E00000000000, float 0x3FD6130000000000, float 2.343750e-02, float 0x3FCC1D0000000000, float 0xBF9C700040000000, float 0xBFE5A84000000000, float 0xBFB70A0000000000, float 0x3FC2380000000000, float 0xBFD1BA0000000000, float 0x3FE0748000000000, float 0xBFA9D7FFE0000000, float 0x3FDEEE0000000000, float 0x3FD7C98000000000, float 0xBFE3754000000000, float 0x3FC7F90000000000, float 0xBFC3720000000000, float 0x3F7A1FFF00000000, float 0x3F9CFFFFE0000000, float 0xBFC3FE0000000000, float 0x3FE3680000000000, float 0x3FCBF00000000000, float 0x3FB0580000000000, float 0xBFD4648000000000, float 0x3FB6920000000000, float 0x3FC3C60000000000, float 0xBFB1F60000000000, float 0xBFB4E00000000000, float 0xBFDA380000000000, float 0xBFD9768000000000, float 0xBFBDFA0000000000, float 0x3FCC3A0000000000, float 0x3FC7A30000000000, float 0xBFC6170000000000, float 0x3FA3400020000000, float 0xBFAFB7FFE0000000, float 0x3F71C00100000000, float 0x3FBF2C0000000000, float 0x3FD5C48000000000, float 0x3FD0640000000000, float 0xBFAB1C0020000000, float 0x3FDA430000000000, float 0x3FC5930000000000, float 0xBFE8614000000000, float 0x3FC1B90000000000, float 0xBFC8DB0000000000, float 0xBFCB8D0000000000, float 0xBFDC6C8000000000, float 0xBFB4E3FFE0000000, float 0xBFD20B8000000000, float 0xBF932FFFC0000000, float 0x3FC3DF0000000000, float 0xBFD7F60000000000, float 0xBFDCB60000000000, float 0x3FDB950000000000, float 0xBFCFAD0000000000, float 0x3FDFE88000000000, float 0x3FC3050000000000, float 0x3FD86C0000000000, float 0x3FCA4B0000000000, float 0xBFD9128000000000, float 0xBFE5128000000000, float 0xBFDBFA8000000000, float 0x3FC0B00000000000, float 0xBFAA2BFFE0000000, float 0x3FD9928000000000, float 0x3FCB740000000000, float 0xBFA8E3FFE0000000, float 0x3FD58A0000000000, float 0x3FBB1C0020000000, float 0xBFEC300000000000, float 0xBFD3BA0000000000, float 0x3FD8B08000000000, float 0x3FD33B0000000000, float 0x3FD8DB0000000000, float 0x3FB7580000000000, float 0xBFD7588000000000, float 0xBF90D00040000000, float 0xBFCD7B0000000000, float 0x3FD0AD8000000000, float 0x3FC8240000000000, float 0xBFCBFE0000000000, float 0xBFC6DD0000000000, float 0xBFD30B0000000000, float 0x3FB9080000000000, float 0x3FBBA9FFE0000000, float 0xBFE0838000000000, float 0x3F49000120000000, float 0x3FC0F90000000000, float 0x3FBC640000000000, float 0xBFCED40000000000, float 0x3FCFF20000000000, float 0x3F8C4000A0000000, float 0xBFA533FFE0000000, float 0xBFA9480000000000, float 0x3FE25DC000000000, float 0x3FD18B0000000000, float 0x3FD1A80000000000, float 0x3FDCCF0000000000, float 0xBFD4DC0000000000, float 0x3FBC920000000000, float 0xBF83E00000000000, float 0x3FD29E8000000000, float 0x3FA1300020000000, float 0xBFE6B24000000000, float 0x3FA8FFFFE0000000, float 0x3FDBD70000000000, float 0x3FB3C40000000000, float 0xBFD1A28000000000, float 0xBF91D80040000000, float 0xBFB58A0000000000, float 0xBFA49FFFE0000000, float 0xBFE0E98000000000, float 0xBFB2C40000000000, float 0x3FAA880020000000, float 0x3FCB580000000000, float 0xBFC8050000000000, float 0x3FB2120000000000, float 0xBF9ECFFFE0000000, float 0x3FD4E78000000000, float 0x3FD14B8000000000, float 0xBFD1EC0000000000, float 0x3FC67D0000000000, float 0x3FA1180000000000, float 0x3FD35B0000000000, float 0xBFA4140020000000, float 0x3FD4978000000000, float 0xBFCE610000000000, float 0x3FB5F3FFE0000000, float 0xBFD87E0000000000, float 0x3FB78A0000000000, float 0xBFB2880020000000, float 0x3FC6F70000000000, float 0xBFE068C000000000, float 0xBFD0180000000000, float 0x3FC9550000000000, float 0xBFC8920000000000, float 0x3FC52F0000000000, float 0x3FDB2C0000000000, float 0x3FD90B0000000000, float 0xBF9D5FFFC0000000, float 0x3FC7040000000000, float 0x3FCFE00000000000, float 0xBFE881C000000000, float 0xBFCAD40000000000, float 0x3FE3864000000000, float 0x3FD7B00000000000, float 0x3FD7970000000000, float 0xBFA6F80000000000, float 0x3FBB560020000000, float 0xBFC4790000000000, float 0xBFAB480000000000, float 0x3FD2378000000000, float 0xBFB06FFFE0000000, float 0xBFD7AC0000000000, float 0xBFD1ED0000000000, float 0xBFBE1E0000000000, float 0x3FA6140020000000, float 0xBFB4940000000000, float 0x3FA903FFE0000000, float 0xBF9F680040000000, float 0xBF3C0010C0000000, float 0x3FD5F20000000000, float 0xBF844000A0000000, float 0x3FD64C0000000000, float 0x3FD4CF8000000000, float 0xBFC4D40000000000, float 0x3FD87E0000000000, float 0x3FA0980020000000, float 0x3FBFCA0020000000, float 0xBFC2580000000000, float 0xBFD6568000000000, float 0xBFC7750000000000, float 0x3FD2D48000000000, float 0x3FDC578000000000, float 0x3FE80E0000000000, float 0xBFE584C000000000, float 0xBFBF2C0000000000, float 0x3FD1DD8000000000, float 0xBFD3138000000000, float 0x3FC96D0000000000, float 0x3FD3418000000000, float 0x3FCD080000000000, float 0xBFD7720000000000, float 0xBFD4D28000000000, float 0xBFE26AC000000000, float 0xBFC54D0000000000, float 0x3FDC0A0000000000, float 0x3FB5540000000000, float 0x3FC4680000000000, float 0x3FD0F88000000000, float 0xBFCF070000000000, float 0xBFBE1C0020000000, float 0xBFC58A0000000000, float 0xBFC2410000000000, float 0x3FDDA90000000000, float 0x3FBE380000000000, float 0xBFE1C3C000000000, float 0xBF99D00000000000, float 0xBFC2510000000000, float 0x3F725FFEE0000000, float 0x3F9C280020000000, float 0xBFD38C8000000000, float 0x3FE6B58000000000, float 0x3FDCDE8000000000, float 0x3FE542C000000000, float 0xBFE5D78000000000, float 0xBFBFFE0000000000, float 0x3FB76A0000000000, float 0xBFCB050000000000, float 0xBFCE740000000000, float 0x3FE9950000000000, float 0xBFD6880000000000, float 0xBFCFF40000000000, float 0x3FC7F60000000000, float 0xBFC86C0000000000, float 0x3FB3180000000000, float 0x3FB3840000000000, float 0xBFD26B8000000000, float 0xBFD7C20000000000, float 0xBFC9100000000000, float 0xBF9227FFC0000000, float 0xBFC5660000000000, float 0x3FC0B10000000000, float 0x3FC2C80000000000, float 0x3FDB1F8000000000, float 0x3FA2580020000000, float 0x3FBD440000000000, float 0x3FAA580020000000, float 0x3FDC9C0000000000, float 0x3FB6F20000000000, float 0x3F8C0000A0000000, float 0xBFE1724000000000, float 0xBFC03F0000000000, float 0x3FCB1B0000000000, float 0x3FA9380000000000, float 0x3FD3A10000000000, float 0xBFBC3C0000000000, float 0x3FC9080000000000, float 0xBFD1C10000000000, float 0x3FCD7F0000000000, float 0x3FC3E90000000000, float 0xBFC8B40000000000, float 0xBFD0778000000000, float 0x3FC6C90000000000, float 0xBFA2540000000000, float 0xBFA9F00000000000, float 0xBFB1C00000000000, float 0xBFB8520000000000, float 0xBFB4060000000000, float 0x3FCE940000000000, float 0xBFD46A8000000000, float 0x3F9F77FFE0000000, float 0xBF70FFFFE0000000, float 0x3FE39F0000000000, float 0x3FD7CB0000000000, float 0xBFC1350000000000, float 0xBFC3E30000000000, float 0xBFC8990000000000, float 0xBFD8418000000000, float 0x3FC9970000000000, float 0x3F9AEFFFE0000000, float 0xBFC0180000000000, float 0x3FD0980000000000, float 0xBF99100020000000, float 0x3FD2F68000000000, float 0xBFDA118000000000, float 0xBFC6300000000000, float 0x3FCF1E0000000000, float 0xBFBB280000000000, float 0x3FC2FB0000000000, float 0x3FB6820000000000, float 0xBFC7FE0000000000, float 0xBFAC880020000000, float 0xBFA8BFFFE0000000, float 0x3FBAD00000000000, float 0xBFD2940000000000, float 0xBFE5A90000000000, float 0xBFD2078000000000, float 0xBFDAAE0000000000, float 0x3FABB7FFE0000000, float 0xBFCDCE0000000000, float 0x3FB8760000000000, float 0xBFB6F60000000000, float 0xBFC3580000000000, float 0x3FC04E0000000000, float 0x3FD7080000000000, float 0x3FD2870000000000, float 0x3FD3A48000000000, float 0x3FCEAA0000000000, float 0x3FB1DA0020000000, float 0xBFD3F78000000000, float 0xBFC79E0000000000, float 0x3FCC850000000000, float 0xBFCBA60000000000, float 0x3FCE1C0000000000, float 0xBFE3CA0000000000, float 0xBFC0A80000000000, float 0x3FD0E78000000000, float 0x3FDE490000000000, float 0xBFD0EC0000000000, float 0x3FD8CE0000000000, float 0x3FC6360000000000, float 0xBFD0B50000000000, float 0xBFD08E0000000000, float 0xBFBF6C0000000000, float 0xBFD3078000000000, float 0x3FB3AE0000000000, float 0x3FC7CB0000000000, float 0xBFB6BC0000000000, float 0x3FD3F58000000000, float 0x3FAB33FFE0000000, float 0xBFBBDE0000000000, float 0xBFC3130000000000, float 0xBFCC930000000000, float 0xBFB5DC0000000000, float 0x3FC95C0000000000, float 0x3FC9420000000000, float 0xBFC83A0000000000, float 0x3FD2990000000000, float 0x3FD05B0000000000, float 0xBFDF1A8000000000, float 0x3FC8060000000000, float 0x3F8B8FFFC0000000, float 0x3FD6540000000000, float 0x3FCB8F0000000000, float 0x3FC96B0000000000, float 0x3FC7E30000000000, float 0xBF8C8FFFA0000000, float 0xBFB7340000000000, float 0xBFD8D20000000000, float 0x3FD1620000000000, float 0xBFCA160000000000, float 0xBFD48E8000000000, float 0xBFCE940000000000, float 0x3FD1578000000000, float 0x3FCFF00000000000, float 0x3FB4480000000000, float 0x3FB325FFE0000000, float 0xBFE04D8000000000, float 0x3FBA2A0000000000, float 0x3FE2AD4000000000, float 0xBFC8F70000000000, float 0xBFC7C20000000000, float 0xBF87DFFF60000000, float 0x3FDE348000000000, float 0x3FCCB60000000000, float 0xBFD8BA0000000000, float 0xBFA31C0020000000, float 0xBFB7800020000000, float 0x3FB1E60000000000, float 0x3FC3560000000000, float 0x3FCA600000000000, float 0xBFAE8FFFE0000000, float 0xBFDAC40000000000, float 0x3FBF500000000000, float 0xBFA7EBFFE0000000, float 0xBFAA340000000000, float 0xBFBD800020000000, float 0xBFE0978000000000, float 0xBFA4DFFFE0000000, float 0x3FDC578000000000, float 0xBFE4820000000000, float 0x3FC5C90000000000, float 0x3F96E7FFA0000000, float 0x3FCD3F0000000000, float 0xBFCDB70000000000, float 0xBFD4B50000000000, float 0xBFC2020000000000, float 0xBFD3008000000000, float 0xBFC9760000000000, float 0x3F9C680020000000, float 0xBFCAD60000000000, float 0xBFE0B38000000000, float 0xBFC8B40000000000, float 0xBFB2A9FFE0000000, float 0x3FDF650000000000, float 0xBFCC8C0000000000, float 0x3FACE3FFE0000000, float 0x3FC0CC0000000000, float 0xBFCAA60000000000, float 0xBFEABFC000000000, float 0xBFB4F20000000000, float 0x3FD1268000000000, float 0xBF4E0005C0000000, float 0xBFB835FFE0000000, float 0x3FC5E00000000000, float 0xBFD14B0000000000, float 0x3FD35F8000000000, float 0x3FAC240000000000, float 0x3FB87C0000000000, float 0xBFB5FE0000000000, float 0x3F95D00000000000, float 0x3FD6FF0000000000, float 0x3FCBD00000000000, float 0xBFC3B50000000000, float 0xBFA9E00000000000, float 0x3F9BD7FFE0000000, float 0x3FC4DE0000000000, float 0x3FDBA80000000000, float 0x3FBA300000000000, float 0xBFDA200000000000, float 0x3FCBB50000000000, float 0x3FB5980020000000, float 0xBFBC880020000000, float 0xBFD9938000000000, float 0xBFACC40000000000, float 0xBFBA2C0000000000, float 0xBFE3780000000000, float 0x3FD5958000000000, float 0xBFB03C0000000000, float 0xBFDE510000000000, float 0xBFD5068000000000, float 0x3FAAD80000000000, float 0x3FC9220000000000, float 0xBFC87F0000000000, float 0xBFE5BA8000000000, float 0x3FC4B60000000000, float 0x3FAA480020000000, float 0xBFCC860000000000, float 0x3FB8B1FFE0000000, float 0x3FCF170000000000, float 0xBFDCCE0000000000, float 0x3FB68A0000000000, float 0x3FC1FD0000000000, float 0x3FCCF40000000000, float 0xBF848000A0000000, float 0x3FD7448000000000, float 0xBFC96D0000000000, float 0xBFD36F0000000000, float 0xBFCEDF0000000000, float 0xBFE2634000000000, float 0x3FD0F58000000000, float 0x3FA6400000000000, float 0xBFB9140020000000, float 0xBFDE898000000000, float 0xBFCE630000000000, float 0x3FC7FC0000000000, float 0x3FB6DA0020000000, float 0xBF9C9FFFE0000000, float 0x3F69000120000000, float 0xBFB6460020000000, float 0xBFD8C68000000000, float 0x3FA07FFFE0000000, float 0x3FBC020000000000, float 0xBFDAD20000000000, float 0xBF9097FFC0000000, float 0xBFDE1E8000000000, float 0x3FD84F8000000000, float 0xBFCBAE0000000000, float 0x3FDEB48000000000, float 0xBFC9A90000000000, float 0xBFE402C000000000, float 0xBFD1388000000000, float 0xBF9D780040000000, float 0x3F7B8000C0000000, float 0xBFD29B0000000000, float 0xBFCF990000000000, float 0xBFC4200000000000, float 0xBFD0AD0000000000, float 0x3FD32E0000000000, float 0x3FD2108000000000, float 0xBFB7040020000000, float 0xBFC5700000000000, float 0xBFDDED0000000000, float 0xBFD00B0000000000, float 0xBFD01E0000000000, float 0xBFDD658000000000, float 0x3FADD7FFE0000000, float 0x3FD2908000000000, float 0x3FCE840000000000, float 0xBFC7020000000000, float 0x3FD13C8000000000, float 0x3FBB620000000000, float 0xBFB1880020000000, float 0xBFC5EC0000000000, float 0xBFBAF00000000000, float 0xBFE1B94000000000, float 0xBFDB138000000000, float 0xBFB37A0000000000, float 0x3FCF350000000000, float 0x3FD8B20000000000, float 0x3FC59C0000000000, float 0x3FD11F0000000000, float 0x3FC6260000000000, float 0x3FD6EB0000000000, float 0xBFCC480000000000, float 0xBFD3A68000000000, float 0xBFD23D0000000000, float 0xBFA6200000000000, float 0x3FC37B0000000000, float 0xBFC5DA0000000000, float 0xBFD92C8000000000, float 0x3FA19C0000000000, float 0xBFBBAC0000000000, float 0xBFD3940000000000, float 0x3FD0ED8000000000, float 0xBFB2FA0000000000, float 0x3FC1750000000000, float 0xBF85C00060000000, float 0x3FD1EB0000000000, float 0x3FA6840000000000, float 0xBFAC740000000000, float 0xBFE2380000000000, float 0x3FA1380000000000, float 0xBF83700060000000, float 0x3FE0D88000000000, float 0xBFDC5F0000000000, float 0x3FD21E0000000000, float 0xBFAC280020000000, float 0xBFCDD70000000000, float 0xBFD31E0000000000, float 0xBFAA3BFFE0000000, float 0x3FD12C0000000000, float 0xBFD68D8000000000, float 0xBFD3D60000000000, float 0x3FD62C8000000000, float 0xBFC9500000000000, float 0x3FDC8A8000000000, float 0x3FC1A00000000000, float 0x3FDD078000000000, float 0x3FC98D0000000000, float 0x3FDB510000000000, float 0x3FC4200000000000, float 0x3F550001E0000000, float 0x3FCE690000000000, float 0x3FDA3B8000000000, float 0x3FD01B0000000000, float 0xBF7E000060000000, float 0xBFBFC20020000000, float 0xBFDBCA0000000000, float 0xBF707FFFE0000000, float 0x3FD5EA8000000000, float 0x3FD7358000000000, float 0x3FC8130000000000, float 0xBFB7D00000000000, float 0xBFBA5C0000000000, float 0x3FAC540000000000, float 0xBFD4420000000000, float 0x3FC25A0000000000, float 0x3FD66D0000000000, float 0x3FD4D38000000000, float 0x3FAD53FFE0000000, float 0xBFBECC0000000000, float 0xBFD09A8000000000, float -2.031250e-01, float 0xBFC51C0000000000, float 0xBFDD790000000000, float 0xBFB47E0000000000, float 0x3FE03F4000000000, float 0x3FC4B20000000000, float 0x3FD2338000000000, float 0x3FB4C00000000000, float 0xBFC8740000000000, float 0x3FD8B28000000000, float 0xBFC4FE0000000000, float 0xBFD04A8000000000, float 0x3FC9F60000000000, float 0xBFCA890000000000, float 0xBFB0280000000000, float 0x3FD5148000000000, float 0x3FC33E0000000000, float 0xBFAB580000000000, float 0x3FD3830000000000, float 0xBFBDD20020000000, float 0x3FD8538000000000, float 0xBFC9AE0000000000, float 0x3FDBD18000000000, float 0x3F87900060000000, float 0x3FD6E20000000000, float 0xBFC0D40000000000, float 0x3FE598C000000000, float 0x3FAAAFFFE0000000, float 0x3FD1DD8000000000, float 0xBFD93C8000000000, float 0x3FE8194000000000, float 0xBFC11C0000000000, float 0x3FCF4D0000000000, float 0x3FDB0A0000000000, float 0xBFE5170000000000, float 0xBF76600100000000, float 0xBFA1E00000000000, float 0xBFC17C0000000000, float 0xBFB53C0000000000, float 0xBFDD3A0000000000, float 0x3FD1668000000000, float 0x3FC04C0000000000, float 0x3FE3914000000000, float 0x3FBAC00000000000, float 0xBFD2748000000000, float 0x3F4E0005C0000000, float 0x3FCF830000000000, float 0x3FC0CB0000000000, float 0x3FAD1C0020000000, float 0x3FC6370000000000, float 0x3FDAE70000000000, float 0x3FB5CC0000000000, float 0x3FCF680000000000, float 0x3FC8420000000000, float 0xBFC8750000000000, float 0xBFC33F0000000000, float 0x3F97E80020000000, float 0x3FE1988000000000, float 0x3FD4AF8000000000, float 0xBFC49D0000000000, float 0xBF9F480040000000, float 0x3FDBE68000000000, float 0x3FC6280000000000, float 0x3FE3898000000000, float 0x3FCFA80000000000, float 0x3FD5558000000000, float 0x3FC3820000000000, float 0x3FC3F40000000000, float 0x3FD7500000000000, float 0xBFD3760000000000, float 0xBFC1070000000000, float 0x3F717FFFC0000000, float 0x3FA55C0000000000, float 0xBFD53C0000000000, float 0x3FD5E60000000000, float 0xBFBFE80000000000, float 0xBF9C500040000000, float 0x3FAE3BFFE0000000, float 0xBFD41E8000000000, float 0x3FC5290000000000, float 0x3FD61B8000000000, float 0xBFA0DC0020000000, float 0x3FC0090000000000, float 0xBFBF860000000000, float 0xBFC0DC0000000000, float 0x3FA85BFFE0000000, float 0xBFDCDC8000000000, float 0xBFC86E0000000000, float 0x3FD69E8000000000, float 0xBFCDBF0000000000, float 0xBFD6020000000000, float 0x3FBCD60000000000, float 0xBFC4260000000000, float 0x3FAB000020000000, float 0x3FE7FB4000000000, float 0x3FCB870000000000, float 0x3FB5CC0000000000, float 0xBFDB218000000000, float -1.953125e-01, float 0x3FD6968000000000, float 0x3FD0320000000000, float 0x3FC4230000000000, float 0xBFE6810000000000, float 0xBFCBA30000000000, float 0x3FD6C98000000000, float 0x3FC2170000000000, float 0x3FBE040020000000, float 0x3FC44B0000000000, float 0xBFCF7C0000000000, float 0x3FB1F80000000000, float 0x3F95C7FFE0000000, float 0x3FC0340000000000, float 0x3FB05C0000000000, float 0xBFBF77FFE0000000, float 0x3FC3C40000000000, float 0xBFDE7D8000000000, float 0x3FAFB7FFE0000000, float 0x3FE2DFC000000000, float 0xBFC3650000000000, float 0xBFA2740000000000, float 0xBFDCD68000000000, float 0xBF911FFFC0000000, float 0xBFDE140000000000, float 0x3FD07B0000000000, float 0x3FC7260000000000, float 0x3FB10E0000000000, float 0x3FC0F70000000000, float 0x3FE5B48000000000, float 0x3FBD1C0020000000, float 0x3FBCFE0000000000, float 0xBFA79C0000000000, float 0xBFB3F20000000000, float 0xBFD7638000000000, float 0xBFB1460020000000, float 0xBFD4388000000000, float 0x3FC4A60000000000, float 0x3FDADE8000000000, float 0x3FBC580000000000, float 0xBFD79C0000000000, float 0x3FD3D10000000000, float 0xBFD83D8000000000, float 0x3FE2B90000000000, float 0x3F702000A0000000, float 0x3FBF960000000000, float 0x3FA187FFE0000000, float 0xBFCBD00000000000, float 0xBFC06F0000000000, float 0xBFDE118000000000, float 0x3FAE0BFFE0000000, float 0xBFD0028000000000, float 0x3FD18A8000000000, float 0x3FE4E08000000000, float 0xBFD6090000000000, float 0xBFC36E0000000000, float 0x3FC1FE0000000000, float 0x3FD5718000000000, float 0x3FD2730000000000, float 0x3FB9660000000000, float 0x3FD6028000000000, float 0x3FC17B0000000000, float 0xBFCE380000000000, float 0x3F81AFFF60000000, float 0x3F9AE7FFA0000000, float 0xBFC8790000000000, float 0x3FC9500000000000, float 0xBFB277FFE0000000, float 0x3FB3FE0000000000, float 0x3FA1B00000000000, float 0xBFA1800020000000, float 0x3F35FFF1A0000000, float 0xBFCD900000000000, float 0x3FC7E70000000000, float 0x3FADB00000000000, float 0x3FA387FFE0000000, float 0xBFA61BFFE0000000, float 0x3FAC180020000000, float 0x3FB61A0000000000, float 0x3FE1E78000000000, float 0xBFB0400000000000, float 0x3FBA740000000000, float 0x3FD0320000000000, float 0x3FADF7FFE0000000, float 0x3FBF5A0000000000, float 0xBFD0590000000000, float 0xBFD5ED8000000000, float 0xBFD7520000000000, float 0xBFCB450000000000, float 0xBFAA140020000000, float 0x3F9C700040000000, float 0x3FB3820000000000, float 0xBFCB280000000000, float 0xBFB7E00000000000, float 0x3FC8590000000000, float 0xBFD9F88000000000, float 0xBF886FFFA0000000, float 0x3FC9670000000000, float 0xBFD69D8000000000, float 0xBFB2F00000000000, float 0x3FC9BC0000000000, float 0x3FB60E0000000000, float 0xBFDC668000000000, float 0x3FBD3C0000000000, float 0x3FCF4D0000000000, float 0xBFC5310000000000, float 0xBFAA040020000000, float 0xBF8CCFFF80000000, float 0x3FD1DA0000000000, float 0xBFC7ED0000000000, float 0x3FB3220000000000, float 0x3FA1AC0000000000, float 0xBFD96E0000000000, float 0x3FCB950000000000, float 0xBFCCD80000000000, float 0xBFD9608000000000, float 0xBFA98C0000000000, float 0xBFE273C000000000, float 0x3FB05C0000000000, float 0x3FE3D8C000000000, float 0xBFC13E0000000000, float 0x3FA6400000000000, float 0xBFCBFC0000000000, float 0xBF9C900040000000, float 0x3FE08B0000000000, float 0xBFD1A80000000000, float 0x3FD8F68000000000, float 0x3FB93C0000000000, float 0xBF7E3FFF00000000, float 0x3FD40B0000000000, float 0x3F3FFFFAA0000000, float 0xBFDDCE8000000000, float 0x3FD2E68000000000, float 0xBFB9A00020000000, float 0xBFD1D40000000000, float 0x3FA2680020000000, float 0x3FD0080000000000, float 0xBFE7DE0000000000, float 0xBFD0398000000000, float 0xBFA0E80000000000, float 0x3FD3F60000000000, float 0x3F9017FFE0000000, float 0x3FDDE50000000000, float 0x3FCBA30000000000, float 0x3FB2960000000000, float 0xBFDAF70000000000, float 0xBFE13F8000000000, float 0xBFC1810000000000, float 0xBFC5360000000000, float 0xBFD60D0000000000, float 0x3FBFA40000000000, float 0xBFBCA1FFE0000000, float 0x3F83CFFFC0000000, float 0x3FD6210000000000, float 0xBFAD800020000000, float 0x3FD64D8000000000, float 0x3FC6960000000000, float 0xBFD9368000000000, float 0x3FBA77FFE0000000, float 0x3FC7510000000000, float 0x3FCA7E0000000000, float 0x3FE2EA4000000000, float 0xBFBD980020000000, float 0xBFB2E80000000000, float 0x3FBA9E0000000000, float 0x3FD6AE0000000000, float 0xBFCD440000000000, float 0x3F92600040000000, float 0x3FC67A0000000000, float 0xBFC6650000000000, float 0x3FBF160000000000, float 0x3FBBFA0000000000, float -1.000000e+00, float 0xBF8C4000A0000000, float 0x3FCB2F0000000000, float 0xBFD14D8000000000, float 0x3FD17C0000000000, float 0xBFD7B90000000000, float 0x3FDA778000000000, float 0xBFD9A28000000000, float 0x3F7C3FFF40000000, float 0x3FD0D88000000000, float 0x3FD9218000000000, float 0x3FE4E54000000000, float 0x3FDAA40000000000, float 0xBFC1CE0000000000, float 0x3FE9148000000000, float 0xBFD3CD8000000000, float 0x3FC9D10000000000, float 0xBFD9320000000000, float 0x3FEE164000000000, float 0xBFCECE0000000000, float 0x3FAC740000000000, float 0xBFCF670000000000, float 0xBFABE00000000000, float 0xBFE88FC000000000, float 0xBFC8CD0000000000, float 0xBFBC440000000000, float 0xBFC6710000000000, float 0x3FC47D0000000000, float 0x3F9667FFC0000000, float 0x3FC65B0000000000, float 0xBFA63BFFE0000000, float 0xBFE22B4000000000, float 0xBFDA3B8000000000, float 0x3FD1148000000000, float 0x3FBDF3FFE0000000, float 0xBF6C400200000000, float 0xBFABA00020000000, float 0x3FD7F40000000000, float 0xBFDA0F8000000000, float 0xBFC33E0000000000, float 0xBF90FFFFE0000000, float 0x3FA57C0000000000, float 0xBFA7580000000000, float 0xBFC09A0000000000, float 0x3FBEC00000000000, float 0x3FB58E0000000000, float 0xBFBCAC0000000000, float 0x3FD6830000000000, float 0x3FBA4E0020000000, float 0xBFD0708000000000, float 0x3FDF018000000000, float 0x3FA0840000000000, float 0x3FD22E8000000000, float 0xBFC7F00000000000, float 0x3FD7388000000000, float 0xBFA0CC0020000000, float 0x3FD4AC8000000000, float 0x3FC60F0000000000, float 0x3FDEE48000000000, float 0x3FD3E98000000000, float 0xBFA953FFE0000000, float 0x3FC05A0000000000, float 0x3FE0DC0000000000, float 0x3FBA240000000000, float 0x3FAE7BFFE0000000, float 0x3FAEB80000000000, float 0x3FC9C90000000000, float 0x3F7E800040000000, float 0x3FD17B8000000000, float 0x3FCF340000000000, float 0x3FD9640000000000, float 0x3F91700020000000, float 0xBFD6BA8000000000, float 0x3FBD180000000000, float 0xBFC15A0000000000, float 0x3FDF488000000000, float 0xBFC3BC0000000000, float 0xBFB76C0000000000, float 0xBF9AC7FFC0000000, float 0x3FDD990000000000, float 0xBFE71EC000000000, float 0x3FCC960000000000, float 0x3FCE870000000000, float 0xBFD0708000000000, float 0xBFB5CC0000000000, float 0xBF951FFFC0000000, float 0xBFD6138000000000, float 0xBF97880040000000, float 0xBFE9B94000000000, float 0xBFB4AC0000000000, float 0xBFC03E0000000000, float 0xBFB1A80000000000, float 0x3FCED90000000000, float 0xBFD6D10000000000, float 0xBFB877FFE0000000, float 0x3FD2B90000000000, float 0x3FCD9C0000000000, float 0xBFC5690000000000, float 0.000000e+00, float 0xBFCF060000000000, float 0x3FD3C68000000000, float 0x3FD2E20000000000, float 0xBFCAC00000000000, float 0x3FC5D60000000000, float 0xBFB3A40000000000, float 0xBFC26D0000000000, float 0x3FAC880020000000, float 0x3FCA5F0000000000, float 0xBFE07F0000000000, float 0xBFA0380020000000, float 0xBFDF420000000000, float 0xBFCA250000000000, float 0x3FC21B0000000000, float 0x3FB2A00020000000, float 0xBFE888C000000000, float 0xBFCCC90000000000, float 0x3FCA6F0000000000, float 0x3FA0AFFFE0000000, float 0x3F4BFFFB40000000, float 0x3F9F200020000000, float 0x3FDE6F8000000000, float 0x3FD88B8000000000], align 16
@pwc_levs = internal constant [16 x float] [float 3.968750e+00, float 3.156250e+00, float 2.500000e+00, float 2.000000e+00, float 1.593750e+00, float 1.250000e+00, float 1.000000e+00, float 7.812500e-01, float 6.250000e-01, float 5.000000e-01, float 4.062500e-01, float 3.125000e-01, float 2.500000e-01, float 1.875000e-01, float 1.562500e-01, float 0.000000e+00], align 16
@subband_to_qu = internal constant [17 x i32] [i32 0, i32 8, i32 12, i32 16, i32 18, i32 20, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32], align 16
@ff_sine_64 = external global [64 x float], align 32
@ff_sine_128 = external global [128 x float], align 32
@mod23_lut = internal constant [26 x i32] [i32 23, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 0], align 16
@ipqf_coeffs1 = internal constant [12 x [16 x float]] [[16 x float] [float 0xBEA3930AC0000000, float 0xBEAB0BD9C0000000, float 0xBE9C307980000000, float 0xBE67D65E40000000, float 0x3E61521EC0000000, float 0x3E62F4C580000000, float 0x3E4B301DA0000000, float 0x3EE60E27A0000000, float 0xBEE8D3CF40000000, float 0x3EA4269700000000, float 0x3EB80C4CE0000000, float 0x3EC3628D60000000, float 0x3ECB524C80000000, float 0x3ED35FDFA0000000, float 0x3EDACC9800000000, float 0x3EDD7CB960000000], [16 x float] [float 0xBEE336F680000000, float 0xBEE606B860000000, float 0xBEE09CB440000000, float 0xBED17ECB60000000, float 0xBEC617BF80000000, float 0xBEB9E46340000000, float 0xBEA32EBF20000000, float 0x3EBE630660000000, float 0x3EF8AC83C0000000, float 0x3EFD2803A0000000, float 0x3F00EF8B60000000, float 0x3F0361E260000000, float 0x3F05CC2F40000000, float 0x3F07C52480000000, float 0x3F0823EA00000000, float 0x3F09790BE0000000], [16 x float] [float 0xBF10E62480000000, float 0xBF11E80080000000, float 0xBF13286A20000000, float 0xBF13F4DA80000000, float 0xBF139F2620000000, float 0xBF12679D00000000, float 0xBF1053E2C0000000, float 0xBF0E8CED20000000, float 0xBF0D83F720000000, float 0xBF0A27F680000000, float 0xBF02AC3540000000, float 0xBEF36EE620000000, float 0x3EBBF24760000000, float 0x3EFB5FBDC0000000, float 0x3F0BFED540000000, float 0x3F152E1AE0000000], [16 x float] [float 0xBF41DAD4C0000000, float 0xBF41372460000000, float 0xBF404BC340000000, float 0xBF3E004620000000, float 0xBF3A9DA0C0000000, float 0xBF367AD980000000, float 0xBF319B6C60000000, float 0xBF27EB50A0000000, float 0xBF1619CF20000000, float 0x3EFA4CAC00000000, float 0x3F22871D60000000, float 0x3F31771EC0000000, float 0x3F3A2DAB20000000, float 0x3F41ABD8A0000000, float 0x3F466BB9E0000000, float 0x3F4B3A67E0000000], [16 x float] [float 0xBF58339660000000, float 0xBF55063E80000000, float 0xBF51500BC0000000, float 0xBF4A247E00000000, float 0xBF40A3EFE0000000, float 0xBF28B6FEA0000000, float 0x3F24AC0C60000000, float 0x3F414A9F60000000, float 0x3F4E19F620000000, float 0x3F55BB2500000000, float 0x3F5C9F3B80000000, float 0x3F61D25140000000, float 0x3F655ACA20000000, float 0x3F68DD7680000000, float 0x3F6C4D8880000000, float 0x3F6F9D32A0000000], [16 x float] [float 0xBF62D66E40000000, float 0xBF57A6ABC0000000, float 0xBF4024C780000000, float 0x3F420B8580000000, float 0x3F5B9292C0000000, float 0x3F67C03F00000000, float 0x3F712E0EE0000000, float 0x3F76C7A0C0000000, float 0x3F7CA53AA0000000, float 0x3F815F32A0000000, float 0x3F8484D280000000, float 0x3F87BE85E0000000, float 0x3F8B06F620000000, float 0x3F8E588980000000, float 0x3F90D6B500000000, float 0x3F927FC560000000], [16 x float] [float 0xBFA1A05260000000, float 0xBFA18D5620000000, float 0xBFA1678760000000, float 0xBFA12F33C0000000, float 0xBFA0E4D240000000, float 0xBFA0890000000000, float 0xBFA01C7D80000000, float 0xBF9F4058E0000000, float 0xBF9E2A2620000000, float 0xBF9CF890E0000000, float 0xBF9BAE1580000000, float 0xBF9A4D4FA0000000, float 0xBF98D904A0000000, float 0xBF97541AE0000000, float 0xBF95C18F40000000, float 0xBF94246A40000000], [16 x float] [float 0xBF690E8300000000, float 0xBF6E7A13E0000000, float 0xBF718CEC20000000, float 0xBF7377DB60000000, float 0xBF74FFDF60000000, float 0xBF7627E700000000, float 0xBF76F39D80000000, float 0xBF7767D640000000, float 0xBF7787A2A0000000, float 0xBF775B9980000000, float 0xBF76E7A600000000, float 0xBF7632BDC0000000, float 0xBF7543A300000000, float 0xBF74216280000000, float 0xBF72D33280000000, float 0xBF715FE0C0000000], [16 x float] [float 0xBF5AD4F440000000, float 0xBF5CEBBE40000000, float 0xBF5E7CF380000000, float 0xBF5F8AEEE0000000, float 0xBF600D1DA0000000, float 0xBF601991A0000000, float 0xBF5FDE2E40000000, float 0xBF5F1D00E0000000, float 0xBF5E1D7760000000, float 0xBF5CACC080000000, float 0xBF5B00AA40000000, float 0xBF5919FC20000000, float 0xBF5703B2C0000000, float 0xBF54C8AC60000000, float 0xBF527201A0000000, float 0xBF500C0EC0000000], [16 x float] [float 0xBF422A0140000000, float 0xBF422D6800000000, float 0xBF41F391E0000000, float 0xBF41753120000000, float 0xBF40C194C0000000, float 0xBF3FC34180000000, float 0xBF3DB9F720000000, float 0xBF3BDA43C0000000, float 0xBF3835F3A0000000, float 0xBF363BDEC0000000, float 0xBF33A976C0000000, float 0xBF3107C740000000, float 0xBF2CCC97E0000000, float 0xBF27BEC6E0000000, float 0xBF234199C0000000, float 0xBF1D917FA0000000], [16 x float] [float 0xBF10D0DBC0000000, float 0xBF102FE240000000, float 0xBF0C73B300000000, float 0xBF08B631E0000000, float 0xBF0681A480000000, float 0xBF04B28E00000000, float 0xBF030D9280000000, float 0xBEFF212EA0000000, float 0xBF0A1A65A0000000, float 0xBF05CC7D60000000, float 0xBF01C13FC0000000, float 0xBEFBD2DE00000000, float 0xBEF4CE1C20000000, float 0xBEEF040B80000000, float 0xBEEB89C020000000, float 0xBEE4CDB2E0000000], [16 x float] [float 0xBEDA6B85A0000000, float 0xBEDE7E3D00000000, float 0xBEE921E3A0000000, float 0xBEF230D720000000, float 0xBEF4DFC5E0000000, float 0xBEF662C480000000, float 0xBEF7075EC0000000, float 0xBEE997BEC0000000, float 0xBEE6BC36A0000000, float 0x3E9F123380000000, float 0x3EA1A55720000000, float 0x3E92A6BF40000000, float 0xBE8FBDFA00000000, float 0xBEB2489000000000, float 0xBEAEC636C0000000, float 0xBEA189CDE0000000]], align 16
@ipqf_coeffs2 = internal constant [12 x [16 x float]] [[16 x float] [float 0x3EA189CDE0000000, float 0x3EAEC636C0000000, float 0x3EB2489000000000, float 0x3E8FBDFA00000000, float 0xBE92A6BF40000000, float 0xBEA1A55720000000, float 0xBE9F123380000000, float 0x3EE6BC36A0000000, float 0xBEE997BEC0000000, float 0xBEF7075EC0000000, float 0xBEF662C480000000, float 0xBEF4DFC5E0000000, float 0xBEF230D720000000, float 0xBEE921E3A0000000, float 0xBEDE7E3D00000000, float 0xBEDA6B85A0000000], [16 x float] [float 0x3EE4CDB2E0000000, float 0x3EEB89C020000000, float 0x3EEF040B80000000, float 0x3EF4CE1C20000000, float 0x3EFBD2DE00000000, float 0x3F01C13FC0000000, float 0x3F05CC7D60000000, float 0x3F0A1A65A0000000, float 0xBEFF212EA0000000, float 0xBF030D9280000000, float 0xBF04B28E00000000, float 0xBF0681A480000000, float 0xBF08B631E0000000, float 0xBF0C73B300000000, float 0xBF102FE240000000, float 0xBF10D0DBC0000000], [16 x float] [float 0x3F1D917FA0000000, float 0x3F234199C0000000, float 0x3F27BEC6E0000000, float 0x3F2CCC97E0000000, float 0x3F3107C740000000, float 0x3F33A976C0000000, float 0x3F363BDEC0000000, float 0x3F3835F3A0000000, float 0xBF3BDA43C0000000, float 0xBF3DB9F720000000, float 0xBF3FC34180000000, float 0xBF40C194C0000000, float 0xBF41753120000000, float 0xBF41F391E0000000, float 0xBF422D6800000000, float 0xBF422A0140000000], [16 x float] [float 0x3F500C0EC0000000, float 0x3F527201A0000000, float 0x3F54C8AC60000000, float 0x3F5703B2C0000000, float 0x3F5919FC20000000, float 0x3F5B00AA40000000, float 0x3F5CACC080000000, float 0x3F5E1D7760000000, float 0xBF5F1D00E0000000, float 0xBF5FDE2E40000000, float 0xBF601991A0000000, float 0xBF600D1DA0000000, float 0xBF5F8AEEE0000000, float 0xBF5E7CF380000000, float 0xBF5CEBBE40000000, float 0xBF5AD4F440000000], [16 x float] [float 0x3F715FE0C0000000, float 0x3F72D33280000000, float 0x3F74216280000000, float 0x3F7543A300000000, float 0x3F7632BDC0000000, float 0x3F76E7A600000000, float 0x3F775B9980000000, float 0x3F7787A2A0000000, float 0xBF7767D640000000, float 0xBF76F39D80000000, float 0xBF7627E700000000, float 0xBF74FFDF60000000, float 0xBF7377DB60000000, float 0xBF718CEC20000000, float 0xBF6E7A13E0000000, float 0xBF690E8300000000], [16 x float] [float 0x3F94246A40000000, float 0x3F95C18F40000000, float 0x3F97541AE0000000, float 0x3F98D904A0000000, float 0x3F9A4D4FA0000000, float 0x3F9BAE1580000000, float 0x3F9CF890E0000000, float 0x3F9E2A2620000000, float 0xBF9F4058E0000000, float 0xBFA01C7D80000000, float 0xBFA0890000000000, float 0xBFA0E4D240000000, float 0xBFA12F33C0000000, float 0xBFA1678760000000, float 0xBFA18D5620000000, float 0xBFA1A05260000000], [16 x float] [float 0xBF927FC560000000, float 0xBF90D6B500000000, float 0xBF8E588980000000, float 0xBF8B06F620000000, float 0xBF87BE85E0000000, float 0xBF8484D280000000, float 0xBF815F32A0000000, float 0xBF7CA53AA0000000, float 0x3F76C7A0C0000000, float 0x3F712E0EE0000000, float 0x3F67C03F00000000, float 0x3F5B9292C0000000, float 0x3F420B8580000000, float 0xBF4024C780000000, float 0xBF57A6ABC0000000, float 0xBF62D66E40000000], [16 x float] [float 0xBF6F9D32A0000000, float 0xBF6C4D8880000000, float 0xBF68DD7680000000, float 0xBF655ACA20000000, float 0xBF61D25140000000, float 0xBF5C9F3B80000000, float 0xBF55BB2500000000, float 0xBF4E19F620000000, float 0x3F414A9F60000000, float 0x3F24AC0C60000000, float 0xBF28B6FEA0000000, float 0xBF40A3EFE0000000, float 0xBF4A247E00000000, float 0xBF51500BC0000000, float 0xBF55063E80000000, float 0xBF58339660000000], [16 x float] [float 0xBF4B3A67E0000000, float 0xBF466BB9E0000000, float 0xBF41ABD8A0000000, float 0xBF3A2DAB20000000, float 0xBF31771EC0000000, float 0xBF22871D60000000, float 0xBEFA4CAC00000000, float 0x3F1619CF20000000, float 0xBF27EB50A0000000, float 0xBF319B6C60000000, float 0xBF367AD980000000, float 0xBF3A9DA0C0000000, float 0xBF3E004620000000, float 0xBF404BC340000000, float 0xBF41372460000000, float 0xBF41DAD4C0000000], [16 x float] [float 0xBF152E1AE0000000, float 0xBF0BFED540000000, float 0xBEFB5FBDC0000000, float 0xBEBBF24760000000, float 0x3EF36EE620000000, float 0x3F02AC3540000000, float 0x3F0A27F680000000, float 0x3F0D83F720000000, float 0xBF0E8CED20000000, float 0xBF1053E2C0000000, float 0xBF12679D00000000, float 0xBF139F2620000000, float 0xBF13F4DA80000000, float 0xBF13286A20000000, float 0xBF11E80080000000, float 0xBF10E62480000000], [16 x float] [float 0xBF09790BE0000000, float 0xBF0823EA00000000, float 0xBF07C52480000000, float 0xBF05CC2F40000000, float 0xBF0361E260000000, float 0xBF00EF8B60000000, float 0xBEFD2803A0000000, float 0xBEF8AC83C0000000, float 0x3EBE630660000000, float 0xBEA32EBF20000000, float 0xBEB9E46340000000, float 0xBEC617BF80000000, float 0xBED17ECB60000000, float 0xBEE09CB440000000, float 0xBEE606B860000000, float 0xBEE336F680000000], [16 x float] [float 0xBEDD7CB960000000, float 0xBEDACC9800000000, float 0xBED35FDFA0000000, float 0xBECB524C80000000, float 0xBEC3628D60000000, float 0xBEB80C4CE0000000, float 0xBEA4269700000000, float 0x3EE8D3CF40000000, float 0x3EE60E27A0000000, float 0x3E4B301DA0000000, float 0x3E62F4C580000000, float 0x3E61521EC0000000, float 0xBE67D65E40000000, float 0xBE9C307980000000, float 0xBEAB0BD9C0000000, float 0xBEA3930AC0000000]], align 16

; Function Attrs: cold nounwind optsize uwtable
define void @ff_atrac3p_init_imdct(%struct.AVCodecContext* %avctx, %struct.FFTContext* %mdct_ctx) #0 !dbg !962 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %mdct_ctx.addr = alloca %struct.FFTContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1604, metadata !1605), !dbg !1606
  store %struct.FFTContext* %mdct_ctx, %struct.FFTContext** %mdct_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFTContext** %mdct_ctx.addr, metadata !1607, metadata !1605), !dbg !1608
  call void @ff_init_ff_sine_windows(i32 7), !dbg !1609
  call void @ff_init_ff_sine_windows(i32 6), !dbg !1610
  %0 = load %struct.FFTContext*, %struct.FFTContext** %mdct_ctx.addr, align 8, !dbg !1611
  %call = call i32 @ff_mdct_init(%struct.FFTContext* %0, i32 8, i32 1, double -1.000000e+00), !dbg !1612
  ret void, !dbg !1613
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @ff_init_ff_sine_windows(i32) #2

declare i32 @ff_mdct_init(%struct.FFTContext*, i32, i32, double) #2

; Function Attrs: cold nounwind optsize uwtable
define void @ff_atrac3p_init_wave_synth() #0 !dbg !1614 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1617, metadata !1605), !dbg !1618
  store i32 0, i32* %i, align 4, !dbg !1619
  br label %for.cond, !dbg !1621

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1622
  %cmp = icmp slt i32 %0, 2048, !dbg !1625
  br i1 %cmp, label %for.body, label %for.end, !dbg !1626

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !1627
  %conv = sitofp i32 %1 to double, !dbg !1627
  %mul = fmul double 0x401921FB54442D18, %conv, !dbg !1628
  %div = fdiv double %mul, 2.048000e+03, !dbg !1629
  %call = call double @sin(double %div) #6, !dbg !1630
  %conv1 = fptrunc double %call to float, !dbg !1630
  %2 = load i32, i32* %i, align 4, !dbg !1631
  %idxprom = sext i32 %2 to i64, !dbg !1632
  %arrayidx = getelementptr inbounds [2048 x float], [2048 x float]* @sine_table, i64 0, i64 %idxprom, !dbg !1632
  store float %conv1, float* %arrayidx, align 4, !dbg !1633
  br label %for.inc, !dbg !1632

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !1634
  %inc = add nsw i32 %3, 1, !dbg !1634
  store i32 %inc, i32* %i, align 4, !dbg !1634
  br label %for.cond, !dbg !1636, !llvm.loop !1637

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !1639
  br label %for.cond2, !dbg !1641

for.cond2:                                        ; preds = %for.inc14, %for.end
  %4 = load i32, i32* %i, align 4, !dbg !1642
  %cmp3 = icmp slt i32 %4, 256, !dbg !1645
  br i1 %cmp3, label %for.body5, label %for.end16, !dbg !1646

for.body5:                                        ; preds = %for.cond2
  %5 = load i32, i32* %i, align 4, !dbg !1647
  %conv6 = sitofp i32 %5 to double, !dbg !1647
  %mul7 = fmul double 0x401921FB54442D18, %conv6, !dbg !1648
  %div8 = fdiv double %mul7, 2.560000e+02, !dbg !1649
  %call9 = call double @cos(double %div8) #6, !dbg !1650
  %sub = fsub double 1.000000e+00, %call9, !dbg !1651
  %mul10 = fmul double %sub, 5.000000e-01, !dbg !1652
  %conv11 = fptrunc double %mul10 to float, !dbg !1653
  %6 = load i32, i32* %i, align 4, !dbg !1654
  %idxprom12 = sext i32 %6 to i64, !dbg !1655
  %arrayidx13 = getelementptr inbounds [256 x float], [256 x float]* @hann_window, i64 0, i64 %idxprom12, !dbg !1655
  store float %conv11, float* %arrayidx13, align 4, !dbg !1656
  br label %for.inc14, !dbg !1655

for.inc14:                                        ; preds = %for.body5
  %7 = load i32, i32* %i, align 4, !dbg !1657
  %inc15 = add nsw i32 %7, 1, !dbg !1657
  store i32 %inc15, i32* %i, align 4, !dbg !1657
  br label %for.cond2, !dbg !1659, !llvm.loop !1660

for.end16:                                        ; preds = %for.cond2
  store i32 0, i32* %i, align 4, !dbg !1662
  br label %for.cond17, !dbg !1664

for.cond17:                                       ; preds = %for.inc27, %for.end16
  %8 = load i32, i32* %i, align 4, !dbg !1665
  %cmp18 = icmp slt i32 %8, 64, !dbg !1668
  br i1 %cmp18, label %for.body20, label %for.end29, !dbg !1669

for.body20:                                       ; preds = %for.cond17
  %9 = load i32, i32* %i, align 4, !dbg !1670
  %sub21 = sub nsw i32 %9, 3, !dbg !1671
  %conv22 = sitofp i32 %sub21 to float, !dbg !1672
  %div23 = fdiv float %conv22, 4.000000e+00, !dbg !1673
  %call24 = call float @exp2f(float %div23) #6, !dbg !1674
  %10 = load i32, i32* %i, align 4, !dbg !1675
  %idxprom25 = sext i32 %10 to i64, !dbg !1676
  %arrayidx26 = getelementptr inbounds [64 x float], [64 x float]* @amp_sf_tab, i64 0, i64 %idxprom25, !dbg !1676
  store float %call24, float* %arrayidx26, align 4, !dbg !1677
  br label %for.inc27, !dbg !1676

for.inc27:                                        ; preds = %for.body20
  %11 = load i32, i32* %i, align 4, !dbg !1678
  %inc28 = add nsw i32 %11, 1, !dbg !1678
  store i32 %inc28, i32* %i, align 4, !dbg !1678
  br label %for.cond17, !dbg !1680, !llvm.loop !1681

for.end29:                                        ; preds = %for.cond17
  ret void, !dbg !1683
}

; Function Attrs: nounwind
declare double @sin(double) #3

; Function Attrs: nounwind
declare double @cos(double) #3

; Function Attrs: nounwind
declare float @exp2f(float) #3

; Function Attrs: nounwind uwtable
define void @ff_atrac3p_generate_tones(%struct.Atrac3pChanUnitCtx* %ch_unit, %struct.AVFloatDSPContext* %fdsp, i32 %ch_num, i32 %sb, float* %out) #4 !dbg !1684 {
entry:
  %ch_unit.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %fdsp.addr = alloca %struct.AVFloatDSPContext*, align 8
  %ch_num.addr = alloca i32, align 4
  %sb.addr = alloca i32, align 4
  %out.addr = alloca float*, align 8
  %wavreg1 = alloca [128 x float], align 32
  %wavreg2 = alloca [128 x float], align 32
  %i = alloca i32, align 4
  %reg1_env_nonzero = alloca i32, align 4
  %reg2_env_nonzero = alloca i32, align 4
  %tones_now = alloca %struct.Atrac3pWavesData*, align 8
  %tones_next = alloca %struct.Atrac3pWavesData*, align 8
  store %struct.Atrac3pChanUnitCtx* %ch_unit, %struct.Atrac3pChanUnitCtx** %ch_unit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ch_unit.addr, metadata !1854, metadata !1605), !dbg !1855
  store %struct.AVFloatDSPContext* %fdsp, %struct.AVFloatDSPContext** %fdsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFloatDSPContext** %fdsp.addr, metadata !1856, metadata !1605), !dbg !1857
  store i32 %ch_num, i32* %ch_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_num.addr, metadata !1858, metadata !1605), !dbg !1859
  store i32 %sb, i32* %sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb.addr, metadata !1860, metadata !1605), !dbg !1861
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !1862, metadata !1605), !dbg !1863
  call void @llvm.dbg.declare(metadata [128 x float]* %wavreg1, metadata !1864, metadata !1605), !dbg !1868
  %0 = bitcast [128 x float]* %wavreg1 to i8*, !dbg !1868
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 512, i32 32, i1 false), !dbg !1868
  call void @llvm.dbg.declare(metadata [128 x float]* %wavreg2, metadata !1869, metadata !1605), !dbg !1870
  %1 = bitcast [128 x float]* %wavreg2 to i8*, !dbg !1870
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 512, i32 32, i1 false), !dbg !1870
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1871, metadata !1605), !dbg !1872
  call void @llvm.dbg.declare(metadata i32* %reg1_env_nonzero, metadata !1873, metadata !1605), !dbg !1874
  call void @llvm.dbg.declare(metadata i32* %reg2_env_nonzero, metadata !1875, metadata !1605), !dbg !1876
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWavesData** %tones_now, metadata !1877, metadata !1605), !dbg !1878
  %2 = load i32, i32* %sb.addr, align 4, !dbg !1879
  %idxprom = sext i32 %2 to i64, !dbg !1880
  %3 = load i32, i32* %ch_num.addr, align 4, !dbg !1881
  %idxprom1 = sext i32 %3 to i64, !dbg !1880
  %4 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ch_unit.addr, align 8, !dbg !1880
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %4, i32 0, i32 12, !dbg !1882
  %arrayidx = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom1, !dbg !1880
  %tones_info_prev = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx, i32 0, i32 19, !dbg !1883
  %5 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info_prev, align 8, !dbg !1883
  %arrayidx2 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %5, i64 %idxprom, !dbg !1880
  store %struct.Atrac3pWavesData* %arrayidx2, %struct.Atrac3pWavesData** %tones_now, align 8, !dbg !1878
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWavesData** %tones_next, metadata !1884, metadata !1605), !dbg !1885
  %6 = load i32, i32* %sb.addr, align 4, !dbg !1886
  %idxprom3 = sext i32 %6 to i64, !dbg !1887
  %7 = load i32, i32* %ch_num.addr, align 4, !dbg !1888
  %idxprom4 = sext i32 %7 to i64, !dbg !1887
  %8 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ch_unit.addr, align 8, !dbg !1887
  %channels5 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %8, i32 0, i32 12, !dbg !1889
  %arrayidx6 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels5, i64 0, i64 %idxprom4, !dbg !1887
  %tones_info = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx6, i32 0, i32 18, !dbg !1890
  %9 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_info, align 8, !dbg !1890
  %arrayidx7 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %9, i64 %idxprom3, !dbg !1887
  store %struct.Atrac3pWavesData* %arrayidx7, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1885
  %10 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1891
  %pend_env = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %10, i32 0, i32 0, !dbg !1893
  %has_start_point = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env, i32 0, i32 0, !dbg !1894
  %11 = load i32, i32* %has_start_point, align 4, !dbg !1894
  %tobool = icmp ne i32 %11, 0, !dbg !1891
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !1895

land.lhs.true:                                    ; preds = %entry
  %12 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1896
  %pend_env8 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %12, i32 0, i32 0, !dbg !1897
  %start_pos = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env8, i32 0, i32 2, !dbg !1898
  %13 = load i32, i32* %start_pos, align 4, !dbg !1898
  %14 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1899
  %pend_env9 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %14, i32 0, i32 0, !dbg !1900
  %stop_pos = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env9, i32 0, i32 3, !dbg !1901
  %15 = load i32, i32* %stop_pos, align 4, !dbg !1901
  %cmp = icmp slt i32 %13, %15, !dbg !1902
  br i1 %cmp, label %if.then, label %if.else, !dbg !1903

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1905
  %curr_env = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %16, i32 0, i32 1, !dbg !1907
  %has_start_point10 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env, i32 0, i32 0, !dbg !1908
  store i32 1, i32* %has_start_point10, align 4, !dbg !1909
  %17 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1910
  %pend_env11 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %17, i32 0, i32 0, !dbg !1911
  %start_pos12 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env11, i32 0, i32 2, !dbg !1912
  %18 = load i32, i32* %start_pos12, align 4, !dbg !1912
  %add = add nsw i32 %18, 32, !dbg !1913
  %19 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1914
  %curr_env13 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %19, i32 0, i32 1, !dbg !1915
  %start_pos14 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env13, i32 0, i32 2, !dbg !1916
  store i32 %add, i32* %start_pos14, align 4, !dbg !1917
  br label %if.end30, !dbg !1918

if.else:                                          ; preds = %land.lhs.true, %entry
  %20 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_now, align 8, !dbg !1919
  %pend_env15 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %20, i32 0, i32 0, !dbg !1922
  %has_start_point16 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env15, i32 0, i32 0, !dbg !1923
  %21 = load i32, i32* %has_start_point16, align 4, !dbg !1923
  %tobool17 = icmp ne i32 %21, 0, !dbg !1919
  br i1 %tobool17, label %if.then18, label %if.else25, !dbg !1919

if.then18:                                        ; preds = %if.else
  %22 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1924
  %curr_env19 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %22, i32 0, i32 1, !dbg !1926
  %has_start_point20 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env19, i32 0, i32 0, !dbg !1927
  store i32 1, i32* %has_start_point20, align 4, !dbg !1928
  %23 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_now, align 8, !dbg !1929
  %pend_env21 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %23, i32 0, i32 0, !dbg !1930
  %start_pos22 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env21, i32 0, i32 2, !dbg !1931
  %24 = load i32, i32* %start_pos22, align 4, !dbg !1931
  %25 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1932
  %curr_env23 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %25, i32 0, i32 1, !dbg !1933
  %start_pos24 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env23, i32 0, i32 2, !dbg !1934
  store i32 %24, i32* %start_pos24, align 4, !dbg !1935
  br label %if.end, !dbg !1936

if.else25:                                        ; preds = %if.else
  %26 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1937
  %curr_env26 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %26, i32 0, i32 1, !dbg !1939
  %has_start_point27 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env26, i32 0, i32 0, !dbg !1940
  store i32 0, i32* %has_start_point27, align 4, !dbg !1941
  %27 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1942
  %curr_env28 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %27, i32 0, i32 1, !dbg !1943
  %start_pos29 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env28, i32 0, i32 2, !dbg !1944
  store i32 0, i32* %start_pos29, align 4, !dbg !1945
  br label %if.end

if.end:                                           ; preds = %if.else25, %if.then18
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  %28 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_now, align 8, !dbg !1946
  %pend_env31 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %28, i32 0, i32 0, !dbg !1948
  %has_stop_point = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env31, i32 0, i32 1, !dbg !1949
  %29 = load i32, i32* %has_stop_point, align 4, !dbg !1949
  %tobool32 = icmp ne i32 %29, 0, !dbg !1946
  br i1 %tobool32, label %land.lhs.true33, label %if.else46, !dbg !1950

land.lhs.true33:                                  ; preds = %if.end30
  %30 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_now, align 8, !dbg !1951
  %pend_env34 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %30, i32 0, i32 0, !dbg !1952
  %stop_pos35 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env34, i32 0, i32 3, !dbg !1953
  %31 = load i32, i32* %stop_pos35, align 4, !dbg !1953
  %32 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1954
  %curr_env36 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %32, i32 0, i32 1, !dbg !1955
  %start_pos37 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env36, i32 0, i32 2, !dbg !1956
  %33 = load i32, i32* %start_pos37, align 4, !dbg !1956
  %cmp38 = icmp sge i32 %31, %33, !dbg !1957
  br i1 %cmp38, label %if.then39, label %if.else46, !dbg !1958

if.then39:                                        ; preds = %land.lhs.true33
  %34 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1959
  %curr_env40 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %34, i32 0, i32 1, !dbg !1961
  %has_stop_point41 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env40, i32 0, i32 1, !dbg !1962
  store i32 1, i32* %has_stop_point41, align 4, !dbg !1963
  %35 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_now, align 8, !dbg !1964
  %pend_env42 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %35, i32 0, i32 0, !dbg !1965
  %stop_pos43 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env42, i32 0, i32 3, !dbg !1966
  %36 = load i32, i32* %stop_pos43, align 4, !dbg !1966
  %37 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1967
  %curr_env44 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %37, i32 0, i32 1, !dbg !1968
  %stop_pos45 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env44, i32 0, i32 3, !dbg !1969
  store i32 %36, i32* %stop_pos45, align 4, !dbg !1970
  br label %if.end64, !dbg !1971

if.else46:                                        ; preds = %land.lhs.true33, %if.end30
  %38 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1972
  %pend_env47 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %38, i32 0, i32 0, !dbg !1975
  %has_stop_point48 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env47, i32 0, i32 1, !dbg !1976
  %39 = load i32, i32* %has_stop_point48, align 4, !dbg !1976
  %tobool49 = icmp ne i32 %39, 0, !dbg !1972
  br i1 %tobool49, label %if.then50, label %if.else58, !dbg !1972

if.then50:                                        ; preds = %if.else46
  %40 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1977
  %curr_env51 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %40, i32 0, i32 1, !dbg !1979
  %has_stop_point52 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env51, i32 0, i32 1, !dbg !1980
  store i32 1, i32* %has_stop_point52, align 4, !dbg !1981
  %41 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1982
  %pend_env53 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %41, i32 0, i32 0, !dbg !1983
  %stop_pos54 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %pend_env53, i32 0, i32 3, !dbg !1984
  %42 = load i32, i32* %stop_pos54, align 4, !dbg !1984
  %add55 = add nsw i32 %42, 32, !dbg !1985
  %43 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1986
  %curr_env56 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %43, i32 0, i32 1, !dbg !1987
  %stop_pos57 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env56, i32 0, i32 3, !dbg !1988
  store i32 %add55, i32* %stop_pos57, align 4, !dbg !1989
  br label %if.end63, !dbg !1990

if.else58:                                        ; preds = %if.else46
  %44 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1991
  %curr_env59 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %44, i32 0, i32 1, !dbg !1993
  %has_stop_point60 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env59, i32 0, i32 1, !dbg !1994
  store i32 0, i32* %has_stop_point60, align 4, !dbg !1995
  %45 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !1996
  %curr_env61 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %45, i32 0, i32 1, !dbg !1997
  %stop_pos62 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env61, i32 0, i32 3, !dbg !1998
  store i32 64, i32* %stop_pos62, align 4, !dbg !1999
  br label %if.end63

if.end63:                                         ; preds = %if.else58, %if.then50
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then39
  %46 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_now, align 8, !dbg !2000
  %curr_env65 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %46, i32 0, i32 1, !dbg !2001
  %stop_pos66 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env65, i32 0, i32 3, !dbg !2002
  %47 = load i32, i32* %stop_pos66, align 4, !dbg !2002
  %cmp67 = icmp slt i32 %47, 32, !dbg !2003
  %cond = select i1 %cmp67, i32 0, i32 1, !dbg !2004
  store i32 %cond, i32* %reg1_env_nonzero, align 4, !dbg !2005
  %48 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !2006
  %curr_env68 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %48, i32 0, i32 1, !dbg !2007
  %start_pos69 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env68, i32 0, i32 2, !dbg !2008
  %49 = load i32, i32* %start_pos69, align 4, !dbg !2008
  %cmp70 = icmp sge i32 %49, 32, !dbg !2009
  %cond71 = select i1 %cmp70, i32 0, i32 1, !dbg !2010
  store i32 %cond71, i32* %reg2_env_nonzero, align 4, !dbg !2011
  %50 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_now, align 8, !dbg !2012
  %num_wavs = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %50, i32 0, i32 2, !dbg !2014
  %51 = load i32, i32* %num_wavs, align 4, !dbg !2014
  %tobool72 = icmp ne i32 %51, 0, !dbg !2012
  br i1 %tobool72, label %land.lhs.true73, label %if.end80, !dbg !2015

land.lhs.true73:                                  ; preds = %if.end64
  %52 = load i32, i32* %reg1_env_nonzero, align 4, !dbg !2016
  %tobool74 = icmp ne i32 %52, 0, !dbg !2016
  br i1 %tobool74, label %if.then75, label %if.end80, !dbg !2018

if.then75:                                        ; preds = %land.lhs.true73
  %53 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ch_unit.addr, align 8, !dbg !2019
  %waves_info_prev = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %53, i32 0, i32 15, !dbg !2020
  %54 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info_prev, align 32, !dbg !2020
  %55 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_now, align 8, !dbg !2021
  %56 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_now, align 8, !dbg !2022
  %curr_env76 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %56, i32 0, i32 1, !dbg !2023
  %57 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !2024
  %58 = load i32, i32* %sb.addr, align 4, !dbg !2025
  %idxprom77 = sext i32 %58 to i64, !dbg !2026
  %59 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ch_unit.addr, align 8, !dbg !2026
  %waves_info_prev78 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %59, i32 0, i32 15, !dbg !2027
  %60 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info_prev78, align 32, !dbg !2027
  %invert_phase = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %60, i32 0, i32 5, !dbg !2028
  %arrayidx79 = getelementptr inbounds [16 x i8], [16 x i8]* %invert_phase, i64 0, i64 %idxprom77, !dbg !2026
  %61 = load i8, i8* %arrayidx79, align 1, !dbg !2026
  %conv = zext i8 %61 to i32, !dbg !2026
  %62 = load i32, i32* %ch_num.addr, align 4, !dbg !2029
  %and = and i32 %conv, %62, !dbg !2030
  %arraydecay = getelementptr inbounds [128 x float], [128 x float]* %wavreg1, i32 0, i32 0, !dbg !2031
  call void @waves_synth(%struct.Atrac3pWaveSynthParams* %54, %struct.Atrac3pWavesData* %55, %struct.Atrac3pWaveEnvelope* %curr_env76, %struct.AVFloatDSPContext* %57, i32 %and, i32 128, float* %arraydecay), !dbg !2032
  br label %if.end80, !dbg !2032

if.end80:                                         ; preds = %if.then75, %land.lhs.true73, %if.end64
  %63 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !2033
  %num_wavs81 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %63, i32 0, i32 2, !dbg !2035
  %64 = load i32, i32* %num_wavs81, align 4, !dbg !2035
  %tobool82 = icmp ne i32 %64, 0, !dbg !2033
  br i1 %tobool82, label %land.lhs.true83, label %if.end94, !dbg !2036

land.lhs.true83:                                  ; preds = %if.end80
  %65 = load i32, i32* %reg2_env_nonzero, align 4, !dbg !2037
  %tobool84 = icmp ne i32 %65, 0, !dbg !2037
  br i1 %tobool84, label %if.then85, label %if.end94, !dbg !2039

if.then85:                                        ; preds = %land.lhs.true83
  %66 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ch_unit.addr, align 8, !dbg !2040
  %waves_info = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %66, i32 0, i32 14, !dbg !2041
  %67 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info, align 8, !dbg !2041
  %68 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !2042
  %69 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !2043
  %curr_env86 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %69, i32 0, i32 1, !dbg !2044
  %70 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !2045
  %71 = load i32, i32* %sb.addr, align 4, !dbg !2046
  %idxprom87 = sext i32 %71 to i64, !dbg !2047
  %72 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ch_unit.addr, align 8, !dbg !2047
  %waves_info88 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %72, i32 0, i32 14, !dbg !2048
  %73 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %waves_info88, align 8, !dbg !2048
  %invert_phase89 = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %73, i32 0, i32 5, !dbg !2049
  %arrayidx90 = getelementptr inbounds [16 x i8], [16 x i8]* %invert_phase89, i64 0, i64 %idxprom87, !dbg !2047
  %74 = load i8, i8* %arrayidx90, align 1, !dbg !2047
  %conv91 = zext i8 %74 to i32, !dbg !2047
  %75 = load i32, i32* %ch_num.addr, align 4, !dbg !2050
  %and92 = and i32 %conv91, %75, !dbg !2051
  %arraydecay93 = getelementptr inbounds [128 x float], [128 x float]* %wavreg2, i32 0, i32 0, !dbg !2052
  call void @waves_synth(%struct.Atrac3pWaveSynthParams* %67, %struct.Atrac3pWavesData* %68, %struct.Atrac3pWaveEnvelope* %curr_env86, %struct.AVFloatDSPContext* %70, i32 %and92, i32 0, float* %arraydecay93), !dbg !2053
  br label %if.end94, !dbg !2053

if.end94:                                         ; preds = %if.then85, %land.lhs.true83, %if.end80
  %76 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_now, align 8, !dbg !2054
  %num_wavs95 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %76, i32 0, i32 2, !dbg !2056
  %77 = load i32, i32* %num_wavs95, align 4, !dbg !2056
  %tobool96 = icmp ne i32 %77, 0, !dbg !2054
  br i1 %tobool96, label %land.lhs.true97, label %if.else110, !dbg !2057

land.lhs.true97:                                  ; preds = %if.end94
  %78 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !2058
  %num_wavs98 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %78, i32 0, i32 2, !dbg !2060
  %79 = load i32, i32* %num_wavs98, align 4, !dbg !2060
  %tobool99 = icmp ne i32 %79, 0, !dbg !2058
  br i1 %tobool99, label %land.lhs.true100, label %if.else110, !dbg !2061

land.lhs.true100:                                 ; preds = %land.lhs.true97
  %80 = load i32, i32* %reg1_env_nonzero, align 4, !dbg !2062
  %tobool101 = icmp ne i32 %80, 0, !dbg !2062
  br i1 %tobool101, label %land.lhs.true102, label %if.else110, !dbg !2063

land.lhs.true102:                                 ; preds = %land.lhs.true100
  %81 = load i32, i32* %reg2_env_nonzero, align 4, !dbg !2064
  %tobool103 = icmp ne i32 %81, 0, !dbg !2064
  br i1 %tobool103, label %if.then104, label %if.else110, !dbg !2065

if.then104:                                       ; preds = %land.lhs.true102
  %82 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !2067
  %vector_fmul = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %82, i32 0, i32 0, !dbg !2069
  %83 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul, align 8, !dbg !2069
  %arraydecay105 = getelementptr inbounds [128 x float], [128 x float]* %wavreg1, i32 0, i32 0, !dbg !2070
  %arraydecay106 = getelementptr inbounds [128 x float], [128 x float]* %wavreg1, i32 0, i32 0, !dbg !2071
  call void %83(float* %arraydecay105, float* %arraydecay106, float* getelementptr inbounds ([256 x float], [256 x float]* @hann_window, i64 0, i64 128), i32 128), !dbg !2067
  %84 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !2072
  %vector_fmul107 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %84, i32 0, i32 0, !dbg !2073
  %85 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul107, align 8, !dbg !2073
  %arraydecay108 = getelementptr inbounds [128 x float], [128 x float]* %wavreg2, i32 0, i32 0, !dbg !2074
  %arraydecay109 = getelementptr inbounds [128 x float], [128 x float]* %wavreg2, i32 0, i32 0, !dbg !2075
  call void %85(float* %arraydecay108, float* %arraydecay109, float* getelementptr inbounds ([256 x float], [256 x float]* @hann_window, i32 0, i32 0), i32 128), !dbg !2072
  br label %if.end133, !dbg !2076

if.else110:                                       ; preds = %land.lhs.true102, %land.lhs.true100, %land.lhs.true97, %if.end94
  %86 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_now, align 8, !dbg !2077
  %num_wavs111 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %86, i32 0, i32 2, !dbg !2080
  %87 = load i32, i32* %num_wavs111, align 4, !dbg !2080
  %tobool112 = icmp ne i32 %87, 0, !dbg !2077
  br i1 %tobool112, label %land.lhs.true113, label %if.end121, !dbg !2081

land.lhs.true113:                                 ; preds = %if.else110
  %88 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_now, align 8, !dbg !2082
  %curr_env114 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %88, i32 0, i32 1, !dbg !2084
  %has_stop_point115 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env114, i32 0, i32 1, !dbg !2085
  %89 = load i32, i32* %has_stop_point115, align 4, !dbg !2085
  %tobool116 = icmp ne i32 %89, 0, !dbg !2082
  br i1 %tobool116, label %if.end121, label %if.then117, !dbg !2086

if.then117:                                       ; preds = %land.lhs.true113
  %90 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !2087
  %vector_fmul118 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %90, i32 0, i32 0, !dbg !2088
  %91 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul118, align 8, !dbg !2088
  %arraydecay119 = getelementptr inbounds [128 x float], [128 x float]* %wavreg1, i32 0, i32 0, !dbg !2089
  %arraydecay120 = getelementptr inbounds [128 x float], [128 x float]* %wavreg1, i32 0, i32 0, !dbg !2090
  call void %91(float* %arraydecay119, float* %arraydecay120, float* getelementptr inbounds ([256 x float], [256 x float]* @hann_window, i64 0, i64 128), i32 128), !dbg !2087
  br label %if.end121, !dbg !2087

if.end121:                                        ; preds = %if.then117, %land.lhs.true113, %if.else110
  %92 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !2091
  %num_wavs122 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %92, i32 0, i32 2, !dbg !2093
  %93 = load i32, i32* %num_wavs122, align 4, !dbg !2093
  %tobool123 = icmp ne i32 %93, 0, !dbg !2091
  br i1 %tobool123, label %land.lhs.true124, label %if.end132, !dbg !2094

land.lhs.true124:                                 ; preds = %if.end121
  %94 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %tones_next, align 8, !dbg !2095
  %curr_env125 = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %94, i32 0, i32 1, !dbg !2097
  %has_start_point126 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %curr_env125, i32 0, i32 0, !dbg !2098
  %95 = load i32, i32* %has_start_point126, align 4, !dbg !2098
  %tobool127 = icmp ne i32 %95, 0, !dbg !2095
  br i1 %tobool127, label %if.end132, label %if.then128, !dbg !2099

if.then128:                                       ; preds = %land.lhs.true124
  %96 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !2100
  %vector_fmul129 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %96, i32 0, i32 0, !dbg !2101
  %97 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul129, align 8, !dbg !2101
  %arraydecay130 = getelementptr inbounds [128 x float], [128 x float]* %wavreg2, i32 0, i32 0, !dbg !2102
  %arraydecay131 = getelementptr inbounds [128 x float], [128 x float]* %wavreg2, i32 0, i32 0, !dbg !2103
  call void %97(float* %arraydecay130, float* %arraydecay131, float* getelementptr inbounds ([256 x float], [256 x float]* @hann_window, i32 0, i32 0), i32 128), !dbg !2100
  br label %if.end132, !dbg !2100

if.end132:                                        ; preds = %if.then128, %land.lhs.true124, %if.end121
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then104
  store i32 0, i32* %i, align 4, !dbg !2104
  br label %for.cond, !dbg !2106

for.cond:                                         ; preds = %for.inc, %if.end133
  %98 = load i32, i32* %i, align 4, !dbg !2107
  %cmp134 = icmp slt i32 %98, 128, !dbg !2110
  br i1 %cmp134, label %for.body, label %for.end, !dbg !2111

for.body:                                         ; preds = %for.cond
  %99 = load i32, i32* %i, align 4, !dbg !2112
  %idxprom136 = sext i32 %99 to i64, !dbg !2113
  %arrayidx137 = getelementptr inbounds [128 x float], [128 x float]* %wavreg1, i64 0, i64 %idxprom136, !dbg !2113
  %100 = load float, float* %arrayidx137, align 4, !dbg !2113
  %101 = load i32, i32* %i, align 4, !dbg !2114
  %idxprom138 = sext i32 %101 to i64, !dbg !2115
  %arrayidx139 = getelementptr inbounds [128 x float], [128 x float]* %wavreg2, i64 0, i64 %idxprom138, !dbg !2115
  %102 = load float, float* %arrayidx139, align 4, !dbg !2115
  %add140 = fadd float %100, %102, !dbg !2116
  %103 = load i32, i32* %i, align 4, !dbg !2117
  %idxprom141 = sext i32 %103 to i64, !dbg !2118
  %104 = load float*, float** %out.addr, align 8, !dbg !2118
  %arrayidx142 = getelementptr inbounds float, float* %104, i64 %idxprom141, !dbg !2118
  %105 = load float, float* %arrayidx142, align 4, !dbg !2119
  %add143 = fadd float %105, %add140, !dbg !2119
  store float %add143, float* %arrayidx142, align 4, !dbg !2119
  br label %for.inc, !dbg !2118

for.inc:                                          ; preds = %for.body
  %106 = load i32, i32* %i, align 4, !dbg !2120
  %inc = add nsw i32 %106, 1, !dbg !2120
  store i32 %inc, i32* %i, align 4, !dbg !2120
  br label %for.cond, !dbg !2122, !llvm.loop !2123

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2125
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define internal void @waves_synth(%struct.Atrac3pWaveSynthParams* %synth_param, %struct.Atrac3pWavesData* %waves_info, %struct.Atrac3pWaveEnvelope* %envelope, %struct.AVFloatDSPContext* %fdsp, i32 %invert_phase, i32 %reg_offset, float* %out) #4 !dbg !2126 {
entry:
  %synth_param.addr = alloca %struct.Atrac3pWaveSynthParams*, align 8
  %waves_info.addr = alloca %struct.Atrac3pWavesData*, align 8
  %envelope.addr = alloca %struct.Atrac3pWaveEnvelope*, align 8
  %fdsp.addr = alloca %struct.AVFloatDSPContext*, align 8
  %invert_phase.addr = alloca i32, align 4
  %reg_offset.addr = alloca i32, align 4
  %out.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %wn = alloca i32, align 4
  %inc = alloca i32, align 4
  %pos = alloca i32, align 4
  %amp = alloca double, align 8
  %wave_param = alloca %struct.Atrac3pWaveParam*, align 8
  store %struct.Atrac3pWaveSynthParams* %synth_param, %struct.Atrac3pWaveSynthParams** %synth_param.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWaveSynthParams** %synth_param.addr, metadata !2130, metadata !1605), !dbg !2131
  store %struct.Atrac3pWavesData* %waves_info, %struct.Atrac3pWavesData** %waves_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWavesData** %waves_info.addr, metadata !2132, metadata !1605), !dbg !2133
  store %struct.Atrac3pWaveEnvelope* %envelope, %struct.Atrac3pWaveEnvelope** %envelope.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWaveEnvelope** %envelope.addr, metadata !2134, metadata !1605), !dbg !2135
  store %struct.AVFloatDSPContext* %fdsp, %struct.AVFloatDSPContext** %fdsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFloatDSPContext** %fdsp.addr, metadata !2136, metadata !1605), !dbg !2137
  store i32 %invert_phase, i32* %invert_phase.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %invert_phase.addr, metadata !2138, metadata !1605), !dbg !2139
  store i32 %reg_offset, i32* %reg_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_offset.addr, metadata !2140, metadata !1605), !dbg !2141
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !2142, metadata !1605), !dbg !2143
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2144, metadata !1605), !dbg !2145
  call void @llvm.dbg.declare(metadata i32* %wn, metadata !2146, metadata !1605), !dbg !2147
  call void @llvm.dbg.declare(metadata i32* %inc, metadata !2148, metadata !1605), !dbg !2149
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !2150, metadata !1605), !dbg !2151
  call void @llvm.dbg.declare(metadata double* %amp, metadata !2152, metadata !1605), !dbg !2153
  call void @llvm.dbg.declare(metadata %struct.Atrac3pWaveParam** %wave_param, metadata !2154, metadata !1605), !dbg !2156
  %0 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %waves_info.addr, align 8, !dbg !2157
  %start_index = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %0, i32 0, i32 3, !dbg !2158
  %1 = load i32, i32* %start_index, align 4, !dbg !2158
  %idxprom = sext i32 %1 to i64, !dbg !2159
  %2 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %synth_param.addr, align 8, !dbg !2159
  %waves = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %2, i32 0, i32 7, !dbg !2160
  %arrayidx = getelementptr inbounds [48 x %struct.Atrac3pWaveParam], [48 x %struct.Atrac3pWaveParam]* %waves, i64 0, i64 %idxprom, !dbg !2159
  store %struct.Atrac3pWaveParam* %arrayidx, %struct.Atrac3pWaveParam** %wave_param, align 8, !dbg !2156
  store i32 0, i32* %wn, align 4, !dbg !2161
  br label %for.cond, !dbg !2163

for.cond:                                         ; preds = %for.inc22, %entry
  %3 = load i32, i32* %wn, align 4, !dbg !2164
  %4 = load %struct.Atrac3pWavesData*, %struct.Atrac3pWavesData** %waves_info.addr, align 8, !dbg !2167
  %num_wavs = getelementptr inbounds %struct.Atrac3pWavesData, %struct.Atrac3pWavesData* %4, i32 0, i32 2, !dbg !2168
  %5 = load i32, i32* %num_wavs, align 4, !dbg !2168
  %cmp = icmp slt i32 %3, %5, !dbg !2169
  br i1 %cmp, label %for.body, label %for.end24, !dbg !2170

for.body:                                         ; preds = %for.cond
  %6 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %wave_param, align 8, !dbg !2171
  %amp_sf = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %6, i32 0, i32 1, !dbg !2173
  %7 = load i32, i32* %amp_sf, align 4, !dbg !2173
  %idxprom1 = sext i32 %7 to i64, !dbg !2174
  %arrayidx2 = getelementptr inbounds [64 x float], [64 x float]* @amp_sf_tab, i64 0, i64 %idxprom1, !dbg !2174
  %8 = load float, float* %arrayidx2, align 4, !dbg !2174
  %9 = load %struct.Atrac3pWaveSynthParams*, %struct.Atrac3pWaveSynthParams** %synth_param.addr, align 8, !dbg !2175
  %amplitude_mode = getelementptr inbounds %struct.Atrac3pWaveSynthParams, %struct.Atrac3pWaveSynthParams* %9, i32 0, i32 1, !dbg !2176
  %10 = load i32, i32* %amplitude_mode, align 4, !dbg !2176
  %tobool = icmp ne i32 %10, 0, !dbg !2175
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2177

cond.true:                                        ; preds = %for.body
  %11 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %wave_param, align 8, !dbg !2178
  %amp_index = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %11, i32 0, i32 2, !dbg !2179
  %12 = load i32, i32* %amp_index, align 4, !dbg !2179
  %add = add nsw i32 %12, 1, !dbg !2180
  %conv = sitofp i32 %add to float, !dbg !2181
  %div = fdiv float %conv, 0x402E428F60000000, !dbg !2182
  br label %cond.end, !dbg !2183

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !2185

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %div, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !2187
  %mul = fmul float %8, %cond, !dbg !2189
  %conv3 = fpext float %mul to double, !dbg !2190
  store double %conv3, double* %amp, align 8, !dbg !2191
  %13 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %wave_param, align 8, !dbg !2192
  %freq_index = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %13, i32 0, i32 0, !dbg !2193
  %14 = load i32, i32* %freq_index, align 4, !dbg !2193
  store i32 %14, i32* %inc, align 4, !dbg !2194
  %15 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %wave_param, align 8, !dbg !2195
  %phase_index = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %15, i32 0, i32 3, !dbg !2196
  %16 = load i32, i32* %phase_index, align 4, !dbg !2196
  %and = and i32 %16, 31, !dbg !2197
  %shl = shl i32 %and, 6, !dbg !2198
  %17 = load i32, i32* %reg_offset.addr, align 4, !dbg !2199
  %xor = xor i32 %17, 128, !dbg !2200
  %18 = load i32, i32* %inc, align 4, !dbg !2201
  %mul4 = mul nsw i32 %xor, %18, !dbg !2202
  %sub = sub nsw i32 %shl, %mul4, !dbg !2203
  %and5 = and i32 %sub, 2047, !dbg !2204
  store i32 %and5, i32* %pos, align 4, !dbg !2205
  store i32 0, i32* %i, align 4, !dbg !2206
  br label %for.cond6, !dbg !2208

for.cond6:                                        ; preds = %for.inc, %cond.end
  %19 = load i32, i32* %i, align 4, !dbg !2209
  %cmp7 = icmp slt i32 %19, 128, !dbg !2212
  br i1 %cmp7, label %for.body9, label %for.end, !dbg !2213

for.body9:                                        ; preds = %for.cond6
  %20 = load i32, i32* %pos, align 4, !dbg !2214
  %idxprom10 = sext i32 %20 to i64, !dbg !2216
  %arrayidx11 = getelementptr inbounds [2048 x float], [2048 x float]* @sine_table, i64 0, i64 %idxprom10, !dbg !2216
  %21 = load float, float* %arrayidx11, align 4, !dbg !2216
  %conv12 = fpext float %21 to double, !dbg !2216
  %22 = load double, double* %amp, align 8, !dbg !2217
  %mul13 = fmul double %conv12, %22, !dbg !2218
  %23 = load i32, i32* %i, align 4, !dbg !2219
  %idxprom14 = sext i32 %23 to i64, !dbg !2220
  %24 = load float*, float** %out.addr, align 8, !dbg !2220
  %arrayidx15 = getelementptr inbounds float, float* %24, i64 %idxprom14, !dbg !2220
  %25 = load float, float* %arrayidx15, align 4, !dbg !2221
  %conv16 = fpext float %25 to double, !dbg !2221
  %add17 = fadd double %conv16, %mul13, !dbg !2221
  %conv18 = fptrunc double %add17 to float, !dbg !2221
  store float %conv18, float* %arrayidx15, align 4, !dbg !2221
  %26 = load i32, i32* %pos, align 4, !dbg !2222
  %27 = load i32, i32* %inc, align 4, !dbg !2223
  %add19 = add nsw i32 %26, %27, !dbg !2224
  %and20 = and i32 %add19, 2047, !dbg !2225
  store i32 %and20, i32* %pos, align 4, !dbg !2226
  br label %for.inc, !dbg !2227

for.inc:                                          ; preds = %for.body9
  %28 = load i32, i32* %i, align 4, !dbg !2228
  %inc21 = add nsw i32 %28, 1, !dbg !2228
  store i32 %inc21, i32* %i, align 4, !dbg !2228
  br label %for.cond6, !dbg !2230, !llvm.loop !2231

for.end:                                          ; preds = %for.cond6
  br label %for.inc22, !dbg !2233

for.inc22:                                        ; preds = %for.end
  %29 = load i32, i32* %wn, align 4, !dbg !2234
  %inc23 = add nsw i32 %29, 1, !dbg !2234
  store i32 %inc23, i32* %wn, align 4, !dbg !2234
  %30 = load %struct.Atrac3pWaveParam*, %struct.Atrac3pWaveParam** %wave_param, align 8, !dbg !2236
  %incdec.ptr = getelementptr inbounds %struct.Atrac3pWaveParam, %struct.Atrac3pWaveParam* %30, i32 1, !dbg !2236
  store %struct.Atrac3pWaveParam* %incdec.ptr, %struct.Atrac3pWaveParam** %wave_param, align 8, !dbg !2236
  br label %for.cond, !dbg !2237, !llvm.loop !2238

for.end24:                                        ; preds = %for.cond
  %31 = load i32, i32* %invert_phase.addr, align 4, !dbg !2240
  %tobool25 = icmp ne i32 %31, 0, !dbg !2240
  br i1 %tobool25, label %if.then, label %if.end, !dbg !2242

if.then:                                          ; preds = %for.end24
  %32 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !2243
  %vector_fmul_scalar = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %32, i32 0, i32 3, !dbg !2244
  %33 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmul_scalar, align 8, !dbg !2244
  %34 = load float*, float** %out.addr, align 8, !dbg !2245
  %35 = load float*, float** %out.addr, align 8, !dbg !2246
  call void %33(float* %34, float* %35, float -1.000000e+00, i32 128), !dbg !2243
  br label %if.end, !dbg !2243

if.end:                                           ; preds = %if.then, %for.end24
  %36 = load %struct.Atrac3pWaveEnvelope*, %struct.Atrac3pWaveEnvelope** %envelope.addr, align 8, !dbg !2247
  %has_start_point = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %36, i32 0, i32 0, !dbg !2249
  %37 = load i32, i32* %has_start_point, align 4, !dbg !2249
  %tobool26 = icmp ne i32 %37, 0, !dbg !2247
  br i1 %tobool26, label %if.then27, label %if.end60, !dbg !2250

if.then27:                                        ; preds = %if.end
  %38 = load %struct.Atrac3pWaveEnvelope*, %struct.Atrac3pWaveEnvelope** %envelope.addr, align 8, !dbg !2251
  %start_pos = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %38, i32 0, i32 2, !dbg !2253
  %39 = load i32, i32* %start_pos, align 4, !dbg !2253
  %shl28 = shl i32 %39, 2, !dbg !2254
  %40 = load i32, i32* %reg_offset.addr, align 4, !dbg !2255
  %sub29 = sub nsw i32 %shl28, %40, !dbg !2256
  store i32 %sub29, i32* %pos, align 4, !dbg !2257
  %41 = load i32, i32* %pos, align 4, !dbg !2258
  %cmp30 = icmp sgt i32 %41, 0, !dbg !2260
  br i1 %cmp30, label %land.lhs.true, label %if.end59, !dbg !2261

land.lhs.true:                                    ; preds = %if.then27
  %42 = load i32, i32* %pos, align 4, !dbg !2262
  %cmp32 = icmp sle i32 %42, 128, !dbg !2264
  br i1 %cmp32, label %if.then34, label %if.end59, !dbg !2265

if.then34:                                        ; preds = %land.lhs.true
  %43 = load float*, float** %out.addr, align 8, !dbg !2266
  %44 = bitcast float* %43 to i8*, !dbg !2268
  %45 = load i32, i32* %pos, align 4, !dbg !2269
  %conv35 = sext i32 %45 to i64, !dbg !2269
  %mul36 = mul i64 %conv35, 4, !dbg !2270
  call void @llvm.memset.p0i8.i64(i8* %44, i8 0, i64 %mul36, i32 4, i1 false), !dbg !2268
  %46 = load %struct.Atrac3pWaveEnvelope*, %struct.Atrac3pWaveEnvelope** %envelope.addr, align 8, !dbg !2271
  %has_stop_point = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %46, i32 0, i32 1, !dbg !2273
  %47 = load i32, i32* %has_stop_point, align 4, !dbg !2273
  %tobool37 = icmp ne i32 %47, 0, !dbg !2271
  br i1 %tobool37, label %lor.lhs.false, label %if.then41, !dbg !2274

lor.lhs.false:                                    ; preds = %if.then34
  %48 = load %struct.Atrac3pWaveEnvelope*, %struct.Atrac3pWaveEnvelope** %envelope.addr, align 8, !dbg !2275
  %start_pos38 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %48, i32 0, i32 2, !dbg !2276
  %49 = load i32, i32* %start_pos38, align 4, !dbg !2276
  %50 = load %struct.Atrac3pWaveEnvelope*, %struct.Atrac3pWaveEnvelope** %envelope.addr, align 8, !dbg !2277
  %stop_pos = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %50, i32 0, i32 3, !dbg !2278
  %51 = load i32, i32* %stop_pos, align 4, !dbg !2278
  %cmp39 = icmp ne i32 %49, %51, !dbg !2279
  br i1 %cmp39, label %if.then41, label %if.end58, !dbg !2280

if.then41:                                        ; preds = %lor.lhs.false, %if.then34
  %52 = load float, float* getelementptr inbounds ([256 x float], [256 x float]* @hann_window, i64 0, i64 0), align 32, !dbg !2282
  %53 = load i32, i32* %pos, align 4, !dbg !2284
  %add42 = add nsw i32 %53, 0, !dbg !2285
  %idxprom43 = sext i32 %add42 to i64, !dbg !2286
  %54 = load float*, float** %out.addr, align 8, !dbg !2286
  %arrayidx44 = getelementptr inbounds float, float* %54, i64 %idxprom43, !dbg !2286
  %55 = load float, float* %arrayidx44, align 4, !dbg !2287
  %mul45 = fmul float %55, %52, !dbg !2287
  store float %mul45, float* %arrayidx44, align 4, !dbg !2287
  %56 = load float, float* getelementptr inbounds ([256 x float], [256 x float]* @hann_window, i64 0, i64 32), align 32, !dbg !2288
  %57 = load i32, i32* %pos, align 4, !dbg !2289
  %add46 = add nsw i32 %57, 1, !dbg !2290
  %idxprom47 = sext i32 %add46 to i64, !dbg !2291
  %58 = load float*, float** %out.addr, align 8, !dbg !2291
  %arrayidx48 = getelementptr inbounds float, float* %58, i64 %idxprom47, !dbg !2291
  %59 = load float, float* %arrayidx48, align 4, !dbg !2292
  %mul49 = fmul float %59, %56, !dbg !2292
  store float %mul49, float* %arrayidx48, align 4, !dbg !2292
  %60 = load float, float* getelementptr inbounds ([256 x float], [256 x float]* @hann_window, i64 0, i64 64), align 32, !dbg !2293
  %61 = load i32, i32* %pos, align 4, !dbg !2294
  %add50 = add nsw i32 %61, 2, !dbg !2295
  %idxprom51 = sext i32 %add50 to i64, !dbg !2296
  %62 = load float*, float** %out.addr, align 8, !dbg !2296
  %arrayidx52 = getelementptr inbounds float, float* %62, i64 %idxprom51, !dbg !2296
  %63 = load float, float* %arrayidx52, align 4, !dbg !2297
  %mul53 = fmul float %63, %60, !dbg !2297
  store float %mul53, float* %arrayidx52, align 4, !dbg !2297
  %64 = load float, float* getelementptr inbounds ([256 x float], [256 x float]* @hann_window, i64 0, i64 96), align 32, !dbg !2298
  %65 = load i32, i32* %pos, align 4, !dbg !2299
  %add54 = add nsw i32 %65, 3, !dbg !2300
  %idxprom55 = sext i32 %add54 to i64, !dbg !2301
  %66 = load float*, float** %out.addr, align 8, !dbg !2301
  %arrayidx56 = getelementptr inbounds float, float* %66, i64 %idxprom55, !dbg !2301
  %67 = load float, float* %arrayidx56, align 4, !dbg !2302
  %mul57 = fmul float %67, %64, !dbg !2302
  store float %mul57, float* %arrayidx56, align 4, !dbg !2302
  br label %if.end58, !dbg !2303

if.end58:                                         ; preds = %if.then41, %lor.lhs.false
  br label %if.end59, !dbg !2304

if.end59:                                         ; preds = %if.end58, %land.lhs.true, %if.then27
  br label %if.end60, !dbg !2305

if.end60:                                         ; preds = %if.end59, %if.end
  %68 = load %struct.Atrac3pWaveEnvelope*, %struct.Atrac3pWaveEnvelope** %envelope.addr, align 8, !dbg !2306
  %has_stop_point61 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %68, i32 0, i32 1, !dbg !2308
  %69 = load i32, i32* %has_stop_point61, align 4, !dbg !2308
  %tobool62 = icmp ne i32 %69, 0, !dbg !2306
  br i1 %tobool62, label %if.then63, label %if.end96, !dbg !2309

if.then63:                                        ; preds = %if.end60
  %70 = load %struct.Atrac3pWaveEnvelope*, %struct.Atrac3pWaveEnvelope** %envelope.addr, align 8, !dbg !2310
  %stop_pos64 = getelementptr inbounds %struct.Atrac3pWaveEnvelope, %struct.Atrac3pWaveEnvelope* %70, i32 0, i32 3, !dbg !2312
  %71 = load i32, i32* %stop_pos64, align 4, !dbg !2312
  %add65 = add nsw i32 %71, 1, !dbg !2313
  %shl66 = shl i32 %add65, 2, !dbg !2314
  %72 = load i32, i32* %reg_offset.addr, align 4, !dbg !2315
  %sub67 = sub nsw i32 %shl66, %72, !dbg !2316
  store i32 %sub67, i32* %pos, align 4, !dbg !2317
  %73 = load i32, i32* %pos, align 4, !dbg !2318
  %cmp68 = icmp sgt i32 %73, 0, !dbg !2320
  br i1 %cmp68, label %land.lhs.true70, label %if.end95, !dbg !2321

land.lhs.true70:                                  ; preds = %if.then63
  %74 = load i32, i32* %pos, align 4, !dbg !2322
  %cmp71 = icmp sle i32 %74, 128, !dbg !2324
  br i1 %cmp71, label %if.then73, label %if.end95, !dbg !2325

if.then73:                                        ; preds = %land.lhs.true70
  %75 = load float, float* getelementptr inbounds ([256 x float], [256 x float]* @hann_window, i64 0, i64 96), align 32, !dbg !2326
  %76 = load i32, i32* %pos, align 4, !dbg !2328
  %sub74 = sub nsw i32 %76, 4, !dbg !2329
  %idxprom75 = sext i32 %sub74 to i64, !dbg !2330
  %77 = load float*, float** %out.addr, align 8, !dbg !2330
  %arrayidx76 = getelementptr inbounds float, float* %77, i64 %idxprom75, !dbg !2330
  %78 = load float, float* %arrayidx76, align 4, !dbg !2331
  %mul77 = fmul float %78, %75, !dbg !2331
  store float %mul77, float* %arrayidx76, align 4, !dbg !2331
  %79 = load float, float* getelementptr inbounds ([256 x float], [256 x float]* @hann_window, i64 0, i64 64), align 32, !dbg !2332
  %80 = load i32, i32* %pos, align 4, !dbg !2333
  %sub78 = sub nsw i32 %80, 3, !dbg !2334
  %idxprom79 = sext i32 %sub78 to i64, !dbg !2335
  %81 = load float*, float** %out.addr, align 8, !dbg !2335
  %arrayidx80 = getelementptr inbounds float, float* %81, i64 %idxprom79, !dbg !2335
  %82 = load float, float* %arrayidx80, align 4, !dbg !2336
  %mul81 = fmul float %82, %79, !dbg !2336
  store float %mul81, float* %arrayidx80, align 4, !dbg !2336
  %83 = load float, float* getelementptr inbounds ([256 x float], [256 x float]* @hann_window, i64 0, i64 32), align 32, !dbg !2337
  %84 = load i32, i32* %pos, align 4, !dbg !2338
  %sub82 = sub nsw i32 %84, 2, !dbg !2339
  %idxprom83 = sext i32 %sub82 to i64, !dbg !2340
  %85 = load float*, float** %out.addr, align 8, !dbg !2340
  %arrayidx84 = getelementptr inbounds float, float* %85, i64 %idxprom83, !dbg !2340
  %86 = load float, float* %arrayidx84, align 4, !dbg !2341
  %mul85 = fmul float %86, %83, !dbg !2341
  store float %mul85, float* %arrayidx84, align 4, !dbg !2341
  %87 = load float, float* getelementptr inbounds ([256 x float], [256 x float]* @hann_window, i64 0, i64 0), align 32, !dbg !2342
  %88 = load i32, i32* %pos, align 4, !dbg !2343
  %sub86 = sub nsw i32 %88, 1, !dbg !2344
  %idxprom87 = sext i32 %sub86 to i64, !dbg !2345
  %89 = load float*, float** %out.addr, align 8, !dbg !2345
  %arrayidx88 = getelementptr inbounds float, float* %89, i64 %idxprom87, !dbg !2345
  %90 = load float, float* %arrayidx88, align 4, !dbg !2346
  %mul89 = fmul float %90, %87, !dbg !2346
  store float %mul89, float* %arrayidx88, align 4, !dbg !2346
  %91 = load i32, i32* %pos, align 4, !dbg !2347
  %idxprom90 = sext i32 %91 to i64, !dbg !2348
  %92 = load float*, float** %out.addr, align 8, !dbg !2348
  %arrayidx91 = getelementptr inbounds float, float* %92, i64 %idxprom90, !dbg !2348
  %93 = bitcast float* %arrayidx91 to i8*, !dbg !2349
  %94 = load i32, i32* %pos, align 4, !dbg !2350
  %sub92 = sub nsw i32 128, %94, !dbg !2351
  %conv93 = sext i32 %sub92 to i64, !dbg !2352
  %mul94 = mul i64 %conv93, 4, !dbg !2353
  call void @llvm.memset.p0i8.i64(i8* %93, i8 0, i64 %mul94, i32 4, i1 false), !dbg !2349
  br label %if.end95, !dbg !2354

if.end95:                                         ; preds = %if.then73, %land.lhs.true70, %if.then63
  br label %if.end96, !dbg !2355

if.end96:                                         ; preds = %if.end95, %if.end60
  ret void, !dbg !2356
}

; Function Attrs: nounwind uwtable
define void @ff_atrac3p_power_compensation(%struct.Atrac3pChanUnitCtx* %ctx, %struct.AVFloatDSPContext* %fdsp, i32 %ch_index, float* %sp, i32 %rng_index, i32 %sb) #4 !dbg !2357 {
entry:
  %ctx.addr = alloca %struct.Atrac3pChanUnitCtx*, align 8
  %fdsp.addr = alloca %struct.AVFloatDSPContext*, align 8
  %ch_index.addr = alloca i32, align 4
  %sp.addr = alloca float*, align 8
  %rng_index.addr = alloca i32, align 4
  %sb.addr = alloca i32, align 4
  %g1 = alloca %struct.AtracGainInfo*, align 8
  %g2 = alloca %struct.AtracGainInfo*, align 8
  %la_pwcsp = alloca [128 x float], align 32
  %pwcsp = alloca float*, align 8
  %dst = alloca float*, align 8
  %grp_lev = alloca float, align 4
  %qu_lev = alloca float, align 4
  %i = alloca i32, align 4
  %gain_lev = alloca i32, align 4
  %gcv = alloca i32, align 4
  %qu = alloca i32, align 4
  %nsp = alloca i32, align 4
  %swap_ch = alloca i32, align 4
  store %struct.Atrac3pChanUnitCtx* %ctx, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pChanUnitCtx** %ctx.addr, metadata !2360, metadata !1605), !dbg !2361
  store %struct.AVFloatDSPContext* %fdsp, %struct.AVFloatDSPContext** %fdsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFloatDSPContext** %fdsp.addr, metadata !2362, metadata !1605), !dbg !2363
  store i32 %ch_index, i32* %ch_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch_index.addr, metadata !2364, metadata !1605), !dbg !2365
  store float* %sp, float** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sp.addr, metadata !2366, metadata !1605), !dbg !2367
  store i32 %rng_index, i32* %rng_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rng_index.addr, metadata !2368, metadata !1605), !dbg !2369
  store i32 %sb, i32* %sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb.addr, metadata !2370, metadata !1605), !dbg !2371
  call void @llvm.dbg.declare(metadata %struct.AtracGainInfo** %g1, metadata !2372, metadata !1605), !dbg !2373
  call void @llvm.dbg.declare(metadata %struct.AtracGainInfo** %g2, metadata !2374, metadata !1605), !dbg !2375
  call void @llvm.dbg.declare(metadata [128 x float]* %la_pwcsp, metadata !2376, metadata !1605), !dbg !2377
  call void @llvm.dbg.declare(metadata float** %pwcsp, metadata !2378, metadata !1605), !dbg !2379
  %arraydecay = getelementptr inbounds [128 x float], [128 x float]* %la_pwcsp, i32 0, i32 0, !dbg !2380
  store float* %arraydecay, float** %pwcsp, align 8, !dbg !2379
  call void @llvm.dbg.declare(metadata float** %dst, metadata !2381, metadata !1605), !dbg !2382
  call void @llvm.dbg.declare(metadata float* %grp_lev, metadata !2383, metadata !1605), !dbg !2384
  call void @llvm.dbg.declare(metadata float* %qu_lev, metadata !2385, metadata !1605), !dbg !2386
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2387, metadata !1605), !dbg !2388
  call void @llvm.dbg.declare(metadata i32* %gain_lev, metadata !2389, metadata !1605), !dbg !2390
  call void @llvm.dbg.declare(metadata i32* %gcv, metadata !2391, metadata !1605), !dbg !2392
  store i32 0, i32* %gcv, align 4, !dbg !2392
  call void @llvm.dbg.declare(metadata i32* %qu, metadata !2393, metadata !1605), !dbg !2394
  call void @llvm.dbg.declare(metadata i32* %nsp, metadata !2395, metadata !1605), !dbg !2396
  call void @llvm.dbg.declare(metadata i32* %swap_ch, metadata !2397, metadata !1605), !dbg !2398
  %0 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2399
  %unit_type = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %0, i32 0, i32 0, !dbg !2400
  %1 = load i32, i32* %unit_type, align 32, !dbg !2400
  %cmp = icmp eq i32 %1, 1, !dbg !2401
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !2402

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %sb.addr, align 4, !dbg !2403
  %idxprom = sext i32 %2 to i64, !dbg !2405
  %3 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2405
  %swap_channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %3, i32 0, i32 10, !dbg !2406
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %swap_channels, i64 0, i64 %idxprom, !dbg !2405
  %4 = load i8, i8* %arrayidx, align 1, !dbg !2405
  %conv = zext i8 %4 to i32, !dbg !2405
  %tobool = icmp ne i32 %conv, 0, !dbg !2407
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ]
  %cond = select i1 %5, i32 1, i32 0, !dbg !2408
  store i32 %cond, i32* %swap_ch, align 4, !dbg !2410
  %6 = load i32, i32* %sb.addr, align 4, !dbg !2411
  %idxprom1 = sext i32 %6 to i64, !dbg !2413
  %arrayidx2 = getelementptr inbounds [16 x i32], [16 x i32]* @subband_to_powgrp, i64 0, i64 %idxprom1, !dbg !2413
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !2413
  %idxprom3 = sext i32 %7 to i64, !dbg !2414
  %8 = load i32, i32* %ch_index.addr, align 4, !dbg !2415
  %9 = load i32, i32* %swap_ch, align 4, !dbg !2416
  %xor = xor i32 %8, %9, !dbg !2417
  %idxprom4 = sext i32 %xor to i64, !dbg !2414
  %10 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2414
  %channels = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %10, i32 0, i32 12, !dbg !2418
  %arrayidx5 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels, i64 0, i64 %idxprom4, !dbg !2414
  %power_levs = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx5, i32 0, i32 9, !dbg !2419
  %arrayidx6 = getelementptr inbounds [5 x i8], [5 x i8]* %power_levs, i64 0, i64 %idxprom3, !dbg !2414
  %11 = load i8, i8* %arrayidx6, align 1, !dbg !2414
  %conv7 = zext i8 %11 to i32, !dbg !2414
  %cmp8 = icmp eq i32 %conv7, 15, !dbg !2420
  br i1 %cmp8, label %if.then, label %if.end, !dbg !2421

if.then:                                          ; preds = %land.end
  br label %for.end150, !dbg !2422

if.end:                                           ; preds = %land.end
  store i32 0, i32* %i, align 4, !dbg !2423
  br label %for.cond, !dbg !2425

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !2426
  %cmp10 = icmp slt i32 %12, 128, !dbg !2429
  br i1 %cmp10, label %for.body, label %for.end, !dbg !2430

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %rng_index.addr, align 4, !dbg !2431
  %and = and i32 %13, 1023, !dbg !2432
  %idxprom12 = sext i32 %and to i64, !dbg !2433
  %arrayidx13 = getelementptr inbounds [1024 x float], [1024 x float]* @noise_tab, i64 0, i64 %idxprom12, !dbg !2433
  %14 = load float, float* %arrayidx13, align 4, !dbg !2433
  %15 = load i32, i32* %i, align 4, !dbg !2434
  %idxprom14 = sext i32 %15 to i64, !dbg !2435
  %16 = load float*, float** %pwcsp, align 8, !dbg !2435
  %arrayidx15 = getelementptr inbounds float, float* %16, i64 %idxprom14, !dbg !2435
  store float %14, float* %arrayidx15, align 4, !dbg !2436
  br label %for.inc, !dbg !2435

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !2437
  %inc = add nsw i32 %17, 1, !dbg !2437
  store i32 %inc, i32* %i, align 4, !dbg !2437
  %18 = load i32, i32* %rng_index.addr, align 4, !dbg !2439
  %inc16 = add nsw i32 %18, 1, !dbg !2439
  store i32 %inc16, i32* %rng_index.addr, align 4, !dbg !2439
  br label %for.cond, !dbg !2440, !llvm.loop !2441

for.end:                                          ; preds = %for.cond
  %19 = load i32, i32* %sb.addr, align 4, !dbg !2443
  %idxprom17 = sext i32 %19 to i64, !dbg !2444
  %20 = load i32, i32* %ch_index.addr, align 4, !dbg !2445
  %21 = load i32, i32* %swap_ch, align 4, !dbg !2446
  %xor18 = xor i32 %20, %21, !dbg !2447
  %idxprom19 = sext i32 %xor18 to i64, !dbg !2444
  %22 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2444
  %channels20 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %22, i32 0, i32 12, !dbg !2448
  %arrayidx21 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels20, i64 0, i64 %idxprom19, !dbg !2444
  %gain_data = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx21, i32 0, i32 14, !dbg !2449
  %23 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data, align 8, !dbg !2449
  %arrayidx22 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %23, i64 %idxprom17, !dbg !2444
  store %struct.AtracGainInfo* %arrayidx22, %struct.AtracGainInfo** %g1, align 8, !dbg !2450
  %24 = load i32, i32* %sb.addr, align 4, !dbg !2451
  %idxprom23 = sext i32 %24 to i64, !dbg !2452
  %25 = load i32, i32* %ch_index.addr, align 4, !dbg !2453
  %26 = load i32, i32* %swap_ch, align 4, !dbg !2454
  %xor24 = xor i32 %25, %26, !dbg !2455
  %idxprom25 = sext i32 %xor24 to i64, !dbg !2452
  %27 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2452
  %channels26 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %27, i32 0, i32 12, !dbg !2456
  %arrayidx27 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels26, i64 0, i64 %idxprom25, !dbg !2452
  %gain_data_prev = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx27, i32 0, i32 15, !dbg !2457
  %28 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %gain_data_prev, align 8, !dbg !2457
  %arrayidx28 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %28, i64 %idxprom23, !dbg !2452
  store %struct.AtracGainInfo* %arrayidx28, %struct.AtracGainInfo** %g2, align 8, !dbg !2458
  %29 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %g1, align 8, !dbg !2459
  %num_points = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %29, i32 0, i32 0, !dbg !2460
  %30 = load i32, i32* %num_points, align 4, !dbg !2460
  %cmp29 = icmp sgt i32 %30, 0, !dbg !2461
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !2462

cond.true:                                        ; preds = %for.end
  %31 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %g1, align 8, !dbg !2463
  %lev_code = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %31, i32 0, i32 1, !dbg !2464
  %arrayidx31 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code, i64 0, i64 0, !dbg !2463
  %32 = load i32, i32* %arrayidx31, align 4, !dbg !2463
  %sub = sub nsw i32 6, %32, !dbg !2465
  br label %cond.end, !dbg !2466

cond.false:                                       ; preds = %for.end
  br label %cond.end, !dbg !2467

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond32 = phi i32 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !2468
  store i32 %cond32, i32* %gain_lev, align 4, !dbg !2470
  store i32 0, i32* %i, align 4, !dbg !2471
  br label %for.cond33, !dbg !2473

for.cond33:                                       ; preds = %for.inc54, %cond.end
  %33 = load i32, i32* %i, align 4, !dbg !2474
  %34 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %g2, align 8, !dbg !2477
  %num_points34 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %34, i32 0, i32 0, !dbg !2478
  %35 = load i32, i32* %num_points34, align 4, !dbg !2478
  %cmp35 = icmp slt i32 %33, %35, !dbg !2479
  br i1 %cmp35, label %for.body37, label %for.end56, !dbg !2480

for.body37:                                       ; preds = %for.cond33
  %36 = load i32, i32* %gcv, align 4, !dbg !2481
  %37 = load i32, i32* %gain_lev, align 4, !dbg !2482
  %38 = load i32, i32* %i, align 4, !dbg !2483
  %idxprom38 = sext i32 %38 to i64, !dbg !2484
  %39 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %g2, align 8, !dbg !2484
  %lev_code39 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %39, i32 0, i32 1, !dbg !2485
  %arrayidx40 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code39, i64 0, i64 %idxprom38, !dbg !2484
  %40 = load i32, i32* %arrayidx40, align 4, !dbg !2484
  %sub41 = sub nsw i32 %40, 6, !dbg !2486
  %sub42 = sub nsw i32 %37, %sub41, !dbg !2487
  %cmp43 = icmp sgt i32 %36, %sub42, !dbg !2488
  br i1 %cmp43, label %cond.true45, label %cond.false46, !dbg !2489

cond.true45:                                      ; preds = %for.body37
  %41 = load i32, i32* %gcv, align 4, !dbg !2490
  br label %cond.end52, !dbg !2491

cond.false46:                                     ; preds = %for.body37
  %42 = load i32, i32* %gain_lev, align 4, !dbg !2492
  %43 = load i32, i32* %i, align 4, !dbg !2494
  %idxprom47 = sext i32 %43 to i64, !dbg !2495
  %44 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %g2, align 8, !dbg !2495
  %lev_code48 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %44, i32 0, i32 1, !dbg !2496
  %arrayidx49 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code48, i64 0, i64 %idxprom47, !dbg !2495
  %45 = load i32, i32* %arrayidx49, align 4, !dbg !2495
  %sub50 = sub nsw i32 %45, 6, !dbg !2497
  %sub51 = sub nsw i32 %42, %sub50, !dbg !2498
  br label %cond.end52, !dbg !2499

cond.end52:                                       ; preds = %cond.false46, %cond.true45
  %cond53 = phi i32 [ %41, %cond.true45 ], [ %sub51, %cond.false46 ], !dbg !2500
  store i32 %cond53, i32* %gcv, align 4, !dbg !2502
  br label %for.inc54, !dbg !2503

for.inc54:                                        ; preds = %cond.end52
  %46 = load i32, i32* %i, align 4, !dbg !2504
  %inc55 = add nsw i32 %46, 1, !dbg !2504
  store i32 %inc55, i32* %i, align 4, !dbg !2504
  br label %for.cond33, !dbg !2505, !llvm.loop !2506

for.end56:                                        ; preds = %for.cond33
  store i32 0, i32* %i, align 4, !dbg !2508
  br label %for.cond57, !dbg !2510

for.cond57:                                       ; preds = %for.inc76, %for.end56
  %47 = load i32, i32* %i, align 4, !dbg !2511
  %48 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %g1, align 8, !dbg !2514
  %num_points58 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %48, i32 0, i32 0, !dbg !2515
  %49 = load i32, i32* %num_points58, align 4, !dbg !2515
  %cmp59 = icmp slt i32 %47, %49, !dbg !2516
  br i1 %cmp59, label %for.body61, label %for.end78, !dbg !2517

for.body61:                                       ; preds = %for.cond57
  %50 = load i32, i32* %gcv, align 4, !dbg !2518
  %51 = load i32, i32* %i, align 4, !dbg !2519
  %idxprom62 = sext i32 %51 to i64, !dbg !2520
  %52 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %g1, align 8, !dbg !2520
  %lev_code63 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %52, i32 0, i32 1, !dbg !2521
  %arrayidx64 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code63, i64 0, i64 %idxprom62, !dbg !2520
  %53 = load i32, i32* %arrayidx64, align 4, !dbg !2520
  %sub65 = sub nsw i32 6, %53, !dbg !2522
  %cmp66 = icmp sgt i32 %50, %sub65, !dbg !2523
  br i1 %cmp66, label %cond.true68, label %cond.false69, !dbg !2524

cond.true68:                                      ; preds = %for.body61
  %54 = load i32, i32* %gcv, align 4, !dbg !2525
  br label %cond.end74, !dbg !2526

cond.false69:                                     ; preds = %for.body61
  %55 = load i32, i32* %i, align 4, !dbg !2527
  %idxprom70 = sext i32 %55 to i64, !dbg !2529
  %56 = load %struct.AtracGainInfo*, %struct.AtracGainInfo** %g1, align 8, !dbg !2529
  %lev_code71 = getelementptr inbounds %struct.AtracGainInfo, %struct.AtracGainInfo* %56, i32 0, i32 1, !dbg !2530
  %arrayidx72 = getelementptr inbounds [7 x i32], [7 x i32]* %lev_code71, i64 0, i64 %idxprom70, !dbg !2529
  %57 = load i32, i32* %arrayidx72, align 4, !dbg !2529
  %sub73 = sub nsw i32 6, %57, !dbg !2531
  br label %cond.end74, !dbg !2532

cond.end74:                                       ; preds = %cond.false69, %cond.true68
  %cond75 = phi i32 [ %54, %cond.true68 ], [ %sub73, %cond.false69 ], !dbg !2533
  store i32 %cond75, i32* %gcv, align 4, !dbg !2535
  br label %for.inc76, !dbg !2536

for.inc76:                                        ; preds = %cond.end74
  %58 = load i32, i32* %i, align 4, !dbg !2537
  %inc77 = add nsw i32 %58, 1, !dbg !2537
  store i32 %inc77, i32* %i, align 4, !dbg !2537
  br label %for.cond57, !dbg !2538, !llvm.loop !2539

for.end78:                                        ; preds = %for.cond57
  %59 = load i32, i32* %sb.addr, align 4, !dbg !2541
  %idxprom79 = sext i32 %59 to i64, !dbg !2542
  %arrayidx80 = getelementptr inbounds [16 x i32], [16 x i32]* @subband_to_powgrp, i64 0, i64 %idxprom79, !dbg !2542
  %60 = load i32, i32* %arrayidx80, align 4, !dbg !2542
  %idxprom81 = sext i32 %60 to i64, !dbg !2543
  %61 = load i32, i32* %ch_index.addr, align 4, !dbg !2544
  %62 = load i32, i32* %swap_ch, align 4, !dbg !2545
  %xor82 = xor i32 %61, %62, !dbg !2546
  %idxprom83 = sext i32 %xor82 to i64, !dbg !2543
  %63 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2543
  %channels84 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %63, i32 0, i32 12, !dbg !2547
  %arrayidx85 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels84, i64 0, i64 %idxprom83, !dbg !2543
  %power_levs86 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx85, i32 0, i32 9, !dbg !2548
  %arrayidx87 = getelementptr inbounds [5 x i8], [5 x i8]* %power_levs86, i64 0, i64 %idxprom81, !dbg !2543
  %64 = load i8, i8* %arrayidx87, align 1, !dbg !2543
  %idxprom88 = zext i8 %64 to i64, !dbg !2549
  %arrayidx89 = getelementptr inbounds [16 x float], [16 x float]* @pwc_levs, i64 0, i64 %idxprom88, !dbg !2549
  %65 = load float, float* %arrayidx89, align 4, !dbg !2549
  %66 = load i32, i32* %gcv, align 4, !dbg !2550
  %shl = shl i32 1, %66, !dbg !2551
  %conv90 = sitofp i32 %shl to float, !dbg !2552
  %div = fdiv float %65, %conv90, !dbg !2553
  store float %div, float* %grp_lev, align 4, !dbg !2554
  %67 = load i32, i32* %sb.addr, align 4, !dbg !2555
  %idxprom91 = sext i32 %67 to i64, !dbg !2557
  %arrayidx92 = getelementptr inbounds [17 x i32], [17 x i32]* @subband_to_qu, i64 0, i64 %idxprom91, !dbg !2557
  %68 = load i32, i32* %arrayidx92, align 4, !dbg !2557
  %69 = load i32, i32* %sb.addr, align 4, !dbg !2558
  %tobool93 = icmp ne i32 %69, 0, !dbg !2559
  %lnot = xor i1 %tobool93, true, !dbg !2559
  %cond94 = select i1 %lnot, i32 2, i32 0, !dbg !2559
  %add = add nsw i32 %68, %cond94, !dbg !2560
  store i32 %add, i32* %qu, align 4, !dbg !2561
  br label %for.cond95, !dbg !2562

for.cond95:                                       ; preds = %for.inc148, %for.end78
  %70 = load i32, i32* %qu, align 4, !dbg !2563
  %71 = load i32, i32* %sb.addr, align 4, !dbg !2566
  %add96 = add nsw i32 %71, 1, !dbg !2567
  %idxprom97 = sext i32 %add96 to i64, !dbg !2568
  %arrayidx98 = getelementptr inbounds [17 x i32], [17 x i32]* @subband_to_qu, i64 0, i64 %idxprom97, !dbg !2568
  %72 = load i32, i32* %arrayidx98, align 4, !dbg !2568
  %cmp99 = icmp slt i32 %70, %72, !dbg !2569
  br i1 %cmp99, label %for.body101, label %for.end150, !dbg !2570

for.body101:                                      ; preds = %for.cond95
  %73 = load i32, i32* %qu, align 4, !dbg !2571
  %idxprom102 = sext i32 %73 to i64, !dbg !2574
  %74 = load i32, i32* %ch_index.addr, align 4, !dbg !2575
  %idxprom103 = sext i32 %74 to i64, !dbg !2574
  %75 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2574
  %channels104 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %75, i32 0, i32 12, !dbg !2576
  %arrayidx105 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels104, i64 0, i64 %idxprom103, !dbg !2574
  %qu_wordlen = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx105, i32 0, i32 5, !dbg !2577
  %arrayidx106 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen, i64 0, i64 %idxprom102, !dbg !2574
  %76 = load i32, i32* %arrayidx106, align 4, !dbg !2574
  %cmp107 = icmp sle i32 %76, 0, !dbg !2578
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !2579

if.then109:                                       ; preds = %for.body101
  br label %for.inc148, !dbg !2580

if.end110:                                        ; preds = %for.body101
  %77 = load i32, i32* %qu, align 4, !dbg !2581
  %idxprom111 = sext i32 %77 to i64, !dbg !2582
  %78 = load i32, i32* %ch_index.addr, align 4, !dbg !2583
  %idxprom112 = sext i32 %78 to i64, !dbg !2582
  %79 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2582
  %channels113 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %79, i32 0, i32 12, !dbg !2584
  %arrayidx114 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels113, i64 0, i64 %idxprom112, !dbg !2582
  %qu_sf_idx = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx114, i32 0, i32 6, !dbg !2585
  %arrayidx115 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_sf_idx, i64 0, i64 %idxprom111, !dbg !2582
  %80 = load i32, i32* %arrayidx115, align 4, !dbg !2582
  %idxprom116 = sext i32 %80 to i64, !dbg !2586
  %arrayidx117 = getelementptr inbounds [64 x float], [64 x float]* @ff_atrac3p_sf_tab, i64 0, i64 %idxprom116, !dbg !2586
  %81 = load float, float* %arrayidx117, align 4, !dbg !2586
  %82 = load i32, i32* %qu, align 4, !dbg !2587
  %idxprom118 = sext i32 %82 to i64, !dbg !2588
  %83 = load i32, i32* %ch_index.addr, align 4, !dbg !2589
  %idxprom119 = sext i32 %83 to i64, !dbg !2588
  %84 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2588
  %channels120 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %84, i32 0, i32 12, !dbg !2590
  %arrayidx121 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels120, i64 0, i64 %idxprom119, !dbg !2588
  %qu_wordlen122 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx121, i32 0, i32 5, !dbg !2591
  %arrayidx123 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen122, i64 0, i64 %idxprom118, !dbg !2588
  %85 = load i32, i32* %arrayidx123, align 4, !dbg !2588
  %idxprom124 = sext i32 %85 to i64, !dbg !2592
  %arrayidx125 = getelementptr inbounds [8 x float], [8 x float]* @ff_atrac3p_mant_tab, i64 0, i64 %idxprom124, !dbg !2592
  %86 = load float, float* %arrayidx125, align 4, !dbg !2592
  %mul = fmul float %81, %86, !dbg !2593
  %87 = load i32, i32* %qu, align 4, !dbg !2594
  %idxprom126 = sext i32 %87 to i64, !dbg !2595
  %88 = load i32, i32* %ch_index.addr, align 4, !dbg !2596
  %idxprom127 = sext i32 %88 to i64, !dbg !2595
  %89 = load %struct.Atrac3pChanUnitCtx*, %struct.Atrac3pChanUnitCtx** %ctx.addr, align 8, !dbg !2595
  %channels128 = getelementptr inbounds %struct.Atrac3pChanUnitCtx, %struct.Atrac3pChanUnitCtx* %89, i32 0, i32 12, !dbg !2597
  %arrayidx129 = getelementptr inbounds [2 x %struct.Atrac3pChanParams], [2 x %struct.Atrac3pChanParams]* %channels128, i64 0, i64 %idxprom127, !dbg !2595
  %qu_wordlen130 = getelementptr inbounds %struct.Atrac3pChanParams, %struct.Atrac3pChanParams* %arrayidx129, i32 0, i32 5, !dbg !2598
  %arrayidx131 = getelementptr inbounds [32 x i32], [32 x i32]* %qu_wordlen130, i64 0, i64 %idxprom126, !dbg !2595
  %90 = load i32, i32* %arrayidx131, align 4, !dbg !2595
  %shl132 = shl i32 1, %90, !dbg !2599
  %conv133 = sitofp i32 %shl132 to float, !dbg !2600
  %div134 = fdiv float %mul, %conv133, !dbg !2601
  %91 = load float, float* %grp_lev, align 4, !dbg !2602
  %mul135 = fmul float %div134, %91, !dbg !2603
  store float %mul135, float* %qu_lev, align 4, !dbg !2604
  %92 = load i32, i32* %qu, align 4, !dbg !2605
  %idxprom136 = sext i32 %92 to i64, !dbg !2606
  %arrayidx137 = getelementptr inbounds [33 x i16], [33 x i16]* @ff_atrac3p_qu_to_spec_pos, i64 0, i64 %idxprom136, !dbg !2606
  %93 = load i16, i16* %arrayidx137, align 2, !dbg !2606
  %idxprom138 = zext i16 %93 to i64, !dbg !2607
  %94 = load float*, float** %sp.addr, align 8, !dbg !2607
  %arrayidx139 = getelementptr inbounds float, float* %94, i64 %idxprom138, !dbg !2607
  store float* %arrayidx139, float** %dst, align 8, !dbg !2608
  %95 = load i32, i32* %qu, align 4, !dbg !2609
  %add140 = add nsw i32 %95, 1, !dbg !2610
  %idxprom141 = sext i32 %add140 to i64, !dbg !2611
  %arrayidx142 = getelementptr inbounds [33 x i16], [33 x i16]* @ff_atrac3p_qu_to_spec_pos, i64 0, i64 %idxprom141, !dbg !2611
  %96 = load i16, i16* %arrayidx142, align 2, !dbg !2611
  %conv143 = zext i16 %96 to i32, !dbg !2611
  %97 = load i32, i32* %qu, align 4, !dbg !2612
  %idxprom144 = sext i32 %97 to i64, !dbg !2613
  %arrayidx145 = getelementptr inbounds [33 x i16], [33 x i16]* @ff_atrac3p_qu_to_spec_pos, i64 0, i64 %idxprom144, !dbg !2613
  %98 = load i16, i16* %arrayidx145, align 2, !dbg !2613
  %conv146 = zext i16 %98 to i32, !dbg !2613
  %sub147 = sub nsw i32 %conv143, %conv146, !dbg !2614
  store i32 %sub147, i32* %nsp, align 4, !dbg !2615
  %99 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !2616
  %vector_fmac_scalar = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %99, i32 0, i32 1, !dbg !2617
  %100 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmac_scalar, align 8, !dbg !2617
  %101 = load float*, float** %dst, align 8, !dbg !2618
  %102 = load float*, float** %pwcsp, align 8, !dbg !2619
  %103 = load float, float* %qu_lev, align 4, !dbg !2620
  %104 = load i32, i32* %nsp, align 4, !dbg !2621
  call void %100(float* %101, float* %102, float %103, i32 %104), !dbg !2616
  br label %for.inc148, !dbg !2622

for.inc148:                                       ; preds = %if.end110, %if.then109
  %105 = load i32, i32* %qu, align 4, !dbg !2623
  %inc149 = add nsw i32 %105, 1, !dbg !2623
  store i32 %inc149, i32* %qu, align 4, !dbg !2623
  br label %for.cond95, !dbg !2625, !llvm.loop !2626

for.end150:                                       ; preds = %if.then, %for.cond95
  ret void, !dbg !2628
}

; Function Attrs: nounwind uwtable
define void @ff_atrac3p_imdct(%struct.AVFloatDSPContext* %fdsp, %struct.FFTContext* %mdct_ctx, float* %pIn, float* %pOut, i32 %wind_id, i32 %sb) #4 !dbg !2629 {
entry:
  %fdsp.addr = alloca %struct.AVFloatDSPContext*, align 8
  %mdct_ctx.addr = alloca %struct.FFTContext*, align 8
  %pIn.addr = alloca float*, align 8
  %pOut.addr = alloca float*, align 8
  %wind_id.addr = alloca i32, align 4
  %sb.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %SWAP_tmp = alloca float, align 4
  store %struct.AVFloatDSPContext* %fdsp, %struct.AVFloatDSPContext** %fdsp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFloatDSPContext** %fdsp.addr, metadata !2632, metadata !1605), !dbg !2633
  store %struct.FFTContext* %mdct_ctx, %struct.FFTContext** %mdct_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFTContext** %mdct_ctx.addr, metadata !2634, metadata !1605), !dbg !2635
  store float* %pIn, float** %pIn.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pIn.addr, metadata !2636, metadata !1605), !dbg !2637
  store float* %pOut, float** %pOut.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pOut.addr, metadata !2638, metadata !1605), !dbg !2639
  store i32 %wind_id, i32* %wind_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wind_id.addr, metadata !2640, metadata !1605), !dbg !2641
  store i32 %sb, i32* %sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb.addr, metadata !2642, metadata !1605), !dbg !2643
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2644, metadata !1605), !dbg !2645
  %0 = load i32, i32* %sb.addr, align 4, !dbg !2646
  %and = and i32 %0, 1, !dbg !2648
  %tobool = icmp ne i32 %and, 0, !dbg !2648
  br i1 %tobool, label %if.then, label %if.end, !dbg !2649

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !2650
  br label %for.cond, !dbg !2652

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %i, align 4, !dbg !2653
  %cmp = icmp slt i32 %1, 64, !dbg !2656
  br i1 %cmp, label %for.body, label %for.end, !dbg !2657

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !2658, !llvm.loop !2659

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata float* %SWAP_tmp, metadata !2660, metadata !1605), !dbg !2662
  %2 = load i32, i32* %i, align 4, !dbg !2663
  %sub = sub nsw i32 127, %2, !dbg !2665
  %idxprom = sext i32 %sub to i64, !dbg !2666
  %3 = load float*, float** %pIn.addr, align 8, !dbg !2666
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !2666
  %4 = load float, float* %arrayidx, align 4, !dbg !2666
  store float %4, float* %SWAP_tmp, align 4, !dbg !2667
  %5 = load i32, i32* %i, align 4, !dbg !2668
  %idxprom1 = sext i32 %5 to i64, !dbg !2669
  %6 = load float*, float** %pIn.addr, align 8, !dbg !2669
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 %idxprom1, !dbg !2669
  %7 = load float, float* %arrayidx2, align 4, !dbg !2669
  %8 = load i32, i32* %i, align 4, !dbg !2670
  %sub3 = sub nsw i32 127, %8, !dbg !2671
  %idxprom4 = sext i32 %sub3 to i64, !dbg !2672
  %9 = load float*, float** %pIn.addr, align 8, !dbg !2672
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 %idxprom4, !dbg !2672
  store float %7, float* %arrayidx5, align 4, !dbg !2673
  %10 = load float, float* %SWAP_tmp, align 4, !dbg !2674
  %11 = load i32, i32* %i, align 4, !dbg !2675
  %idxprom6 = sext i32 %11 to i64, !dbg !2676
  %12 = load float*, float** %pIn.addr, align 8, !dbg !2676
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 %idxprom6, !dbg !2676
  store float %10, float* %arrayidx7, align 4, !dbg !2677
  br label %do.end, !dbg !2678

do.end:                                           ; preds = %do.body
  br label %for.inc, !dbg !2679

for.inc:                                          ; preds = %do.end
  %13 = load i32, i32* %i, align 4, !dbg !2681
  %inc = add nsw i32 %13, 1, !dbg !2681
  store i32 %inc, i32* %i, align 4, !dbg !2681
  br label %for.cond, !dbg !2683, !llvm.loop !2684

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !2686

if.end:                                           ; preds = %for.end, %entry
  %14 = load %struct.FFTContext*, %struct.FFTContext** %mdct_ctx.addr, align 8, !dbg !2688
  %imdct_calc = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %14, i32 0, i32 10, !dbg !2689
  %15 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_calc, align 8, !dbg !2689
  %16 = load %struct.FFTContext*, %struct.FFTContext** %mdct_ctx.addr, align 8, !dbg !2690
  %17 = load float*, float** %pOut.addr, align 8, !dbg !2691
  %18 = load float*, float** %pIn.addr, align 8, !dbg !2692
  call void %15(%struct.FFTContext* %16, float* %17, float* %18), !dbg !2688
  %19 = load i32, i32* %wind_id.addr, align 4, !dbg !2693
  %and8 = and i32 %19, 2, !dbg !2695
  %tobool9 = icmp ne i32 %and8, 0, !dbg !2695
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !2696

if.then10:                                        ; preds = %if.end
  %20 = load float*, float** %pOut.addr, align 8, !dbg !2697
  %21 = bitcast float* %20 to i8*, !dbg !2699
  call void @llvm.memset.p0i8.i64(i8* %21, i8 0, i64 128, i32 4, i1 false), !dbg !2699
  %22 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !2700
  %vector_fmul = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %22, i32 0, i32 0, !dbg !2701
  %23 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul, align 8, !dbg !2701
  %24 = load float*, float** %pOut.addr, align 8, !dbg !2702
  %arrayidx11 = getelementptr inbounds float, float* %24, i64 32, !dbg !2702
  %25 = load float*, float** %pOut.addr, align 8, !dbg !2703
  %arrayidx12 = getelementptr inbounds float, float* %25, i64 32, !dbg !2703
  call void %23(float* %arrayidx11, float* %arrayidx12, float* getelementptr inbounds ([64 x float], [64 x float]* @ff_sine_64, i32 0, i32 0), i32 64), !dbg !2700
  br label %if.end14, !dbg !2704

if.else:                                          ; preds = %if.end
  %26 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !2705
  %vector_fmul13 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %26, i32 0, i32 0, !dbg !2706
  %27 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul13, align 8, !dbg !2706
  %28 = load float*, float** %pOut.addr, align 8, !dbg !2707
  %29 = load float*, float** %pOut.addr, align 8, !dbg !2708
  call void %27(float* %28, float* %29, float* getelementptr inbounds ([128 x float], [128 x float]* @ff_sine_128, i32 0, i32 0), i32 128), !dbg !2705
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then10
  %30 = load i32, i32* %wind_id.addr, align 4, !dbg !2709
  %and15 = and i32 %30, 1, !dbg !2711
  %tobool16 = icmp ne i32 %and15, 0, !dbg !2711
  br i1 %tobool16, label %if.then17, label %if.else21, !dbg !2712

if.then17:                                        ; preds = %if.end14
  %31 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !2713
  %vector_fmul_reverse = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %31, i32 0, i32 7, !dbg !2715
  %32 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse, align 8, !dbg !2715
  %33 = load float*, float** %pOut.addr, align 8, !dbg !2716
  %arrayidx18 = getelementptr inbounds float, float* %33, i64 160, !dbg !2716
  %34 = load float*, float** %pOut.addr, align 8, !dbg !2717
  %arrayidx19 = getelementptr inbounds float, float* %34, i64 160, !dbg !2717
  call void %32(float* %arrayidx18, float* %arrayidx19, float* getelementptr inbounds ([64 x float], [64 x float]* @ff_sine_64, i32 0, i32 0), i32 64), !dbg !2713
  %35 = load float*, float** %pOut.addr, align 8, !dbg !2718
  %arrayidx20 = getelementptr inbounds float, float* %35, i64 224, !dbg !2718
  %36 = bitcast float* %arrayidx20 to i8*, !dbg !2719
  call void @llvm.memset.p0i8.i64(i8* %36, i8 0, i64 128, i32 4, i1 false), !dbg !2719
  br label %if.end25, !dbg !2720

if.else21:                                        ; preds = %if.end14
  %37 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp.addr, align 8, !dbg !2721
  %vector_fmul_reverse22 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %37, i32 0, i32 7, !dbg !2722
  %38 = load void (float*, float*, float*, i32)*, void (float*, float*, float*, i32)** %vector_fmul_reverse22, align 8, !dbg !2722
  %39 = load float*, float** %pOut.addr, align 8, !dbg !2723
  %arrayidx23 = getelementptr inbounds float, float* %39, i64 128, !dbg !2723
  %40 = load float*, float** %pOut.addr, align 8, !dbg !2724
  %arrayidx24 = getelementptr inbounds float, float* %40, i64 128, !dbg !2724
  call void %38(float* %arrayidx23, float* %arrayidx24, float* getelementptr inbounds ([128 x float], [128 x float]* @ff_sine_128, i32 0, i32 0), i32 128), !dbg !2721
  br label %if.end25

if.end25:                                         ; preds = %if.else21, %if.then17
  ret void, !dbg !2725
}

; Function Attrs: nounwind uwtable
define void @ff_atrac3p_ipqf(%struct.FFTContext* %dct_ctx, %struct.Atrac3pIPQFChannelCtx* %hist, float* %in, float* %out) #4 !dbg !2726 {
entry:
  %dct_ctx.addr = alloca %struct.FFTContext*, align 8
  %hist.addr = alloca %struct.Atrac3pIPQFChannelCtx*, align 8
  %in.addr = alloca float*, align 8
  %out.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %s = alloca i32, align 4
  %sb = alloca i32, align 4
  %t = alloca i32, align 4
  %pos_now = alloca i32, align 4
  %pos_next = alloca i32, align 4
  %la_idct_in = alloca [16 x float], align 32
  %idct_in = alloca float*, align 8
  %la_idct_out = alloca [16 x float], align 32
  %idct_out = alloca float*, align 8
  store %struct.FFTContext* %dct_ctx, %struct.FFTContext** %dct_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFTContext** %dct_ctx.addr, metadata !2730, metadata !1605), !dbg !2731
  store %struct.Atrac3pIPQFChannelCtx* %hist, %struct.Atrac3pIPQFChannelCtx** %hist.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Atrac3pIPQFChannelCtx** %hist.addr, metadata !2732, metadata !1605), !dbg !2733
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !2734, metadata !1605), !dbg !2735
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !2736, metadata !1605), !dbg !2737
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2738, metadata !1605), !dbg !2739
  call void @llvm.dbg.declare(metadata i32* %s, metadata !2740, metadata !1605), !dbg !2741
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !2742, metadata !1605), !dbg !2743
  call void @llvm.dbg.declare(metadata i32* %t, metadata !2744, metadata !1605), !dbg !2745
  call void @llvm.dbg.declare(metadata i32* %pos_now, metadata !2746, metadata !1605), !dbg !2747
  call void @llvm.dbg.declare(metadata i32* %pos_next, metadata !2748, metadata !1605), !dbg !2749
  call void @llvm.dbg.declare(metadata [16 x float]* %la_idct_in, metadata !2750, metadata !1605), !dbg !2752
  call void @llvm.dbg.declare(metadata float** %idct_in, metadata !2753, metadata !1605), !dbg !2754
  %arraydecay = getelementptr inbounds [16 x float], [16 x float]* %la_idct_in, i32 0, i32 0, !dbg !2755
  store float* %arraydecay, float** %idct_in, align 8, !dbg !2754
  call void @llvm.dbg.declare(metadata [16 x float]* %la_idct_out, metadata !2756, metadata !1605), !dbg !2757
  call void @llvm.dbg.declare(metadata float** %idct_out, metadata !2758, metadata !1605), !dbg !2759
  %arraydecay1 = getelementptr inbounds [16 x float], [16 x float]* %la_idct_out, i32 0, i32 0, !dbg !2760
  store float* %arraydecay1, float** %idct_out, align 8, !dbg !2759
  %0 = load float*, float** %out.addr, align 8, !dbg !2761
  %1 = bitcast float* %0 to i8*, !dbg !2762
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 8192, i32 4, i1 false), !dbg !2762
  store i32 0, i32* %s, align 4, !dbg !2763
  br label %for.cond, !dbg !2765

for.cond:                                         ; preds = %for.inc111, %entry
  %2 = load i32, i32* %s, align 4, !dbg !2766
  %cmp = icmp slt i32 %2, 128, !dbg !2769
  br i1 %cmp, label %for.body, label %for.end113, !dbg !2770

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %sb, align 4, !dbg !2771
  br label %for.cond2, !dbg !2774

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %sb, align 4, !dbg !2775
  %cmp3 = icmp slt i32 %3, 16, !dbg !2778
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !2779

for.body4:                                        ; preds = %for.cond2
  %4 = load i32, i32* %sb, align 4, !dbg !2780
  %mul = mul nsw i32 %4, 128, !dbg !2781
  %5 = load i32, i32* %s, align 4, !dbg !2782
  %add = add nsw i32 %mul, %5, !dbg !2783
  %idxprom = sext i32 %add to i64, !dbg !2784
  %6 = load float*, float** %in.addr, align 8, !dbg !2784
  %arrayidx = getelementptr inbounds float, float* %6, i64 %idxprom, !dbg !2784
  %7 = load float, float* %arrayidx, align 4, !dbg !2784
  %8 = load i32, i32* %sb, align 4, !dbg !2785
  %idxprom5 = sext i32 %8 to i64, !dbg !2786
  %9 = load float*, float** %idct_in, align 8, !dbg !2786
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 %idxprom5, !dbg !2786
  store float %7, float* %arrayidx6, align 4, !dbg !2787
  br label %for.inc, !dbg !2786

for.inc:                                          ; preds = %for.body4
  %10 = load i32, i32* %sb, align 4, !dbg !2788
  %inc = add nsw i32 %10, 1, !dbg !2788
  store i32 %inc, i32* %sb, align 4, !dbg !2788
  br label %for.cond2, !dbg !2790, !llvm.loop !2791

for.end:                                          ; preds = %for.cond2
  %11 = load %struct.FFTContext*, %struct.FFTContext** %dct_ctx.addr, align 8, !dbg !2793
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %11, i32 0, i32 11, !dbg !2794
  %12 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half, align 8, !dbg !2794
  %13 = load %struct.FFTContext*, %struct.FFTContext** %dct_ctx.addr, align 8, !dbg !2795
  %14 = load float*, float** %idct_out, align 8, !dbg !2796
  %15 = load float*, float** %idct_in, align 8, !dbg !2797
  call void %12(%struct.FFTContext* %13, float* %14, float* %15), !dbg !2793
  store i32 0, i32* %i, align 4, !dbg !2798
  br label %for.cond7, !dbg !2800

for.cond7:                                        ; preds = %for.inc24, %for.end
  %16 = load i32, i32* %i, align 4, !dbg !2801
  %cmp8 = icmp slt i32 %16, 8, !dbg !2804
  br i1 %cmp8, label %for.body9, label %for.end26, !dbg !2805

for.body9:                                        ; preds = %for.cond7
  %17 = load i32, i32* %i, align 4, !dbg !2806
  %add10 = add nsw i32 %17, 8, !dbg !2808
  %idxprom11 = sext i32 %add10 to i64, !dbg !2809
  %18 = load float*, float** %idct_out, align 8, !dbg !2809
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 %idxprom11, !dbg !2809
  %19 = load float, float* %arrayidx12, align 4, !dbg !2809
  %20 = load i32, i32* %i, align 4, !dbg !2810
  %idxprom13 = sext i32 %20 to i64, !dbg !2811
  %21 = load %struct.Atrac3pIPQFChannelCtx*, %struct.Atrac3pIPQFChannelCtx** %hist.addr, align 8, !dbg !2812
  %pos = getelementptr inbounds %struct.Atrac3pIPQFChannelCtx, %struct.Atrac3pIPQFChannelCtx* %21, i32 0, i32 2, !dbg !2813
  %22 = load i32, i32* %pos, align 32, !dbg !2813
  %idxprom14 = sext i32 %22 to i64, !dbg !2811
  %23 = load %struct.Atrac3pIPQFChannelCtx*, %struct.Atrac3pIPQFChannelCtx** %hist.addr, align 8, !dbg !2811
  %buf1 = getelementptr inbounds %struct.Atrac3pIPQFChannelCtx, %struct.Atrac3pIPQFChannelCtx* %23, i32 0, i32 0, !dbg !2814
  %arrayidx15 = getelementptr inbounds [24 x [8 x float]], [24 x [8 x float]]* %buf1, i64 0, i64 %idxprom14, !dbg !2811
  %arrayidx16 = getelementptr inbounds [8 x float], [8 x float]* %arrayidx15, i64 0, i64 %idxprom13, !dbg !2811
  store float %19, float* %arrayidx16, align 4, !dbg !2815
  %24 = load i32, i32* %i, align 4, !dbg !2816
  %sub = sub nsw i32 7, %24, !dbg !2817
  %idxprom17 = sext i32 %sub to i64, !dbg !2818
  %25 = load float*, float** %idct_out, align 8, !dbg !2818
  %arrayidx18 = getelementptr inbounds float, float* %25, i64 %idxprom17, !dbg !2818
  %26 = load float, float* %arrayidx18, align 4, !dbg !2818
  %27 = load i32, i32* %i, align 4, !dbg !2819
  %idxprom19 = sext i32 %27 to i64, !dbg !2820
  %28 = load %struct.Atrac3pIPQFChannelCtx*, %struct.Atrac3pIPQFChannelCtx** %hist.addr, align 8, !dbg !2821
  %pos20 = getelementptr inbounds %struct.Atrac3pIPQFChannelCtx, %struct.Atrac3pIPQFChannelCtx* %28, i32 0, i32 2, !dbg !2822
  %29 = load i32, i32* %pos20, align 32, !dbg !2822
  %idxprom21 = sext i32 %29 to i64, !dbg !2820
  %30 = load %struct.Atrac3pIPQFChannelCtx*, %struct.Atrac3pIPQFChannelCtx** %hist.addr, align 8, !dbg !2820
  %buf2 = getelementptr inbounds %struct.Atrac3pIPQFChannelCtx, %struct.Atrac3pIPQFChannelCtx* %30, i32 0, i32 1, !dbg !2823
  %arrayidx22 = getelementptr inbounds [24 x [8 x float]], [24 x [8 x float]]* %buf2, i64 0, i64 %idxprom21, !dbg !2820
  %arrayidx23 = getelementptr inbounds [8 x float], [8 x float]* %arrayidx22, i64 0, i64 %idxprom19, !dbg !2820
  store float %26, float* %arrayidx23, align 4, !dbg !2824
  br label %for.inc24, !dbg !2825

for.inc24:                                        ; preds = %for.body9
  %31 = load i32, i32* %i, align 4, !dbg !2826
  %inc25 = add nsw i32 %31, 1, !dbg !2826
  store i32 %inc25, i32* %i, align 4, !dbg !2826
  br label %for.cond7, !dbg !2828, !llvm.loop !2829

for.end26:                                        ; preds = %for.cond7
  %32 = load %struct.Atrac3pIPQFChannelCtx*, %struct.Atrac3pIPQFChannelCtx** %hist.addr, align 8, !dbg !2831
  %pos27 = getelementptr inbounds %struct.Atrac3pIPQFChannelCtx, %struct.Atrac3pIPQFChannelCtx* %32, i32 0, i32 2, !dbg !2832
  %33 = load i32, i32* %pos27, align 32, !dbg !2832
  store i32 %33, i32* %pos_now, align 4, !dbg !2833
  %34 = load i32, i32* %pos_now, align 4, !dbg !2834
  %add28 = add nsw i32 %34, 2, !dbg !2835
  %idxprom29 = sext i32 %add28 to i64, !dbg !2836
  %arrayidx30 = getelementptr inbounds [26 x i32], [26 x i32]* @mod23_lut, i64 0, i64 %idxprom29, !dbg !2836
  %35 = load i32, i32* %arrayidx30, align 4, !dbg !2836
  store i32 %35, i32* %pos_next, align 4, !dbg !2837
  store i32 0, i32* %t, align 4, !dbg !2838
  br label %for.cond31, !dbg !2840

for.cond31:                                       ; preds = %for.inc104, %for.end26
  %36 = load i32, i32* %t, align 4, !dbg !2841
  %cmp32 = icmp slt i32 %36, 12, !dbg !2844
  br i1 %cmp32, label %for.body33, label %for.end106, !dbg !2845

for.body33:                                       ; preds = %for.cond31
  store i32 0, i32* %i, align 4, !dbg !2846
  br label %for.cond34, !dbg !2849

for.cond34:                                       ; preds = %for.inc95, %for.body33
  %37 = load i32, i32* %i, align 4, !dbg !2850
  %cmp35 = icmp slt i32 %37, 8, !dbg !2853
  br i1 %cmp35, label %for.body36, label %for.end97, !dbg !2854

for.body36:                                       ; preds = %for.cond34
  %38 = load i32, i32* %i, align 4, !dbg !2855
  %idxprom37 = sext i32 %38 to i64, !dbg !2857
  %39 = load i32, i32* %pos_now, align 4, !dbg !2858
  %idxprom38 = sext i32 %39 to i64, !dbg !2857
  %40 = load %struct.Atrac3pIPQFChannelCtx*, %struct.Atrac3pIPQFChannelCtx** %hist.addr, align 8, !dbg !2857
  %buf139 = getelementptr inbounds %struct.Atrac3pIPQFChannelCtx, %struct.Atrac3pIPQFChannelCtx* %40, i32 0, i32 0, !dbg !2859
  %arrayidx40 = getelementptr inbounds [24 x [8 x float]], [24 x [8 x float]]* %buf139, i64 0, i64 %idxprom38, !dbg !2857
  %arrayidx41 = getelementptr inbounds [8 x float], [8 x float]* %arrayidx40, i64 0, i64 %idxprom37, !dbg !2857
  %41 = load float, float* %arrayidx41, align 4, !dbg !2857
  %42 = load i32, i32* %i, align 4, !dbg !2860
  %idxprom42 = sext i32 %42 to i64, !dbg !2861
  %43 = load i32, i32* %t, align 4, !dbg !2862
  %idxprom43 = sext i32 %43 to i64, !dbg !2861
  %arrayidx44 = getelementptr inbounds [12 x [16 x float]], [12 x [16 x float]]* @ipqf_coeffs1, i64 0, i64 %idxprom43, !dbg !2861
  %arrayidx45 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx44, i64 0, i64 %idxprom42, !dbg !2861
  %44 = load float, float* %arrayidx45, align 4, !dbg !2861
  %mul46 = fmul float %41, %44, !dbg !2863
  %45 = load i32, i32* %i, align 4, !dbg !2864
  %idxprom47 = sext i32 %45 to i64, !dbg !2865
  %46 = load i32, i32* %pos_next, align 4, !dbg !2866
  %idxprom48 = sext i32 %46 to i64, !dbg !2865
  %47 = load %struct.Atrac3pIPQFChannelCtx*, %struct.Atrac3pIPQFChannelCtx** %hist.addr, align 8, !dbg !2865
  %buf249 = getelementptr inbounds %struct.Atrac3pIPQFChannelCtx, %struct.Atrac3pIPQFChannelCtx* %47, i32 0, i32 1, !dbg !2867
  %arrayidx50 = getelementptr inbounds [24 x [8 x float]], [24 x [8 x float]]* %buf249, i64 0, i64 %idxprom48, !dbg !2865
  %arrayidx51 = getelementptr inbounds [8 x float], [8 x float]* %arrayidx50, i64 0, i64 %idxprom47, !dbg !2865
  %48 = load float, float* %arrayidx51, align 4, !dbg !2865
  %49 = load i32, i32* %i, align 4, !dbg !2868
  %idxprom52 = sext i32 %49 to i64, !dbg !2869
  %50 = load i32, i32* %t, align 4, !dbg !2870
  %idxprom53 = sext i32 %50 to i64, !dbg !2869
  %arrayidx54 = getelementptr inbounds [12 x [16 x float]], [12 x [16 x float]]* @ipqf_coeffs2, i64 0, i64 %idxprom53, !dbg !2869
  %arrayidx55 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx54, i64 0, i64 %idxprom52, !dbg !2869
  %51 = load float, float* %arrayidx55, align 4, !dbg !2869
  %mul56 = fmul float %48, %51, !dbg !2871
  %add57 = fadd float %mul46, %mul56, !dbg !2872
  %52 = load i32, i32* %s, align 4, !dbg !2873
  %mul58 = mul nsw i32 %52, 16, !dbg !2874
  %53 = load i32, i32* %i, align 4, !dbg !2875
  %add59 = add nsw i32 %mul58, %53, !dbg !2876
  %add60 = add nsw i32 %add59, 0, !dbg !2877
  %idxprom61 = sext i32 %add60 to i64, !dbg !2878
  %54 = load float*, float** %out.addr, align 8, !dbg !2878
  %arrayidx62 = getelementptr inbounds float, float* %54, i64 %idxprom61, !dbg !2878
  %55 = load float, float* %arrayidx62, align 4, !dbg !2879
  %add63 = fadd float %55, %add57, !dbg !2879
  store float %add63, float* %arrayidx62, align 4, !dbg !2879
  %56 = load i32, i32* %i, align 4, !dbg !2880
  %sub64 = sub nsw i32 7, %56, !dbg !2881
  %idxprom65 = sext i32 %sub64 to i64, !dbg !2882
  %57 = load i32, i32* %pos_now, align 4, !dbg !2883
  %idxprom66 = sext i32 %57 to i64, !dbg !2882
  %58 = load %struct.Atrac3pIPQFChannelCtx*, %struct.Atrac3pIPQFChannelCtx** %hist.addr, align 8, !dbg !2882
  %buf167 = getelementptr inbounds %struct.Atrac3pIPQFChannelCtx, %struct.Atrac3pIPQFChannelCtx* %58, i32 0, i32 0, !dbg !2884
  %arrayidx68 = getelementptr inbounds [24 x [8 x float]], [24 x [8 x float]]* %buf167, i64 0, i64 %idxprom66, !dbg !2882
  %arrayidx69 = getelementptr inbounds [8 x float], [8 x float]* %arrayidx68, i64 0, i64 %idxprom65, !dbg !2882
  %59 = load float, float* %arrayidx69, align 4, !dbg !2882
  %60 = load i32, i32* %i, align 4, !dbg !2885
  %add70 = add nsw i32 %60, 8, !dbg !2886
  %idxprom71 = sext i32 %add70 to i64, !dbg !2887
  %61 = load i32, i32* %t, align 4, !dbg !2888
  %idxprom72 = sext i32 %61 to i64, !dbg !2887
  %arrayidx73 = getelementptr inbounds [12 x [16 x float]], [12 x [16 x float]]* @ipqf_coeffs1, i64 0, i64 %idxprom72, !dbg !2887
  %arrayidx74 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx73, i64 0, i64 %idxprom71, !dbg !2887
  %62 = load float, float* %arrayidx74, align 4, !dbg !2887
  %mul75 = fmul float %59, %62, !dbg !2889
  %63 = load i32, i32* %i, align 4, !dbg !2890
  %sub76 = sub nsw i32 7, %63, !dbg !2891
  %idxprom77 = sext i32 %sub76 to i64, !dbg !2892
  %64 = load i32, i32* %pos_next, align 4, !dbg !2893
  %idxprom78 = sext i32 %64 to i64, !dbg !2892
  %65 = load %struct.Atrac3pIPQFChannelCtx*, %struct.Atrac3pIPQFChannelCtx** %hist.addr, align 8, !dbg !2892
  %buf279 = getelementptr inbounds %struct.Atrac3pIPQFChannelCtx, %struct.Atrac3pIPQFChannelCtx* %65, i32 0, i32 1, !dbg !2894
  %arrayidx80 = getelementptr inbounds [24 x [8 x float]], [24 x [8 x float]]* %buf279, i64 0, i64 %idxprom78, !dbg !2892
  %arrayidx81 = getelementptr inbounds [8 x float], [8 x float]* %arrayidx80, i64 0, i64 %idxprom77, !dbg !2892
  %66 = load float, float* %arrayidx81, align 4, !dbg !2892
  %67 = load i32, i32* %i, align 4, !dbg !2895
  %add82 = add nsw i32 %67, 8, !dbg !2896
  %idxprom83 = sext i32 %add82 to i64, !dbg !2897
  %68 = load i32, i32* %t, align 4, !dbg !2898
  %idxprom84 = sext i32 %68 to i64, !dbg !2897
  %arrayidx85 = getelementptr inbounds [12 x [16 x float]], [12 x [16 x float]]* @ipqf_coeffs2, i64 0, i64 %idxprom84, !dbg !2897
  %arrayidx86 = getelementptr inbounds [16 x float], [16 x float]* %arrayidx85, i64 0, i64 %idxprom83, !dbg !2897
  %69 = load float, float* %arrayidx86, align 4, !dbg !2897
  %mul87 = fmul float %66, %69, !dbg !2899
  %add88 = fadd float %mul75, %mul87, !dbg !2900
  %70 = load i32, i32* %s, align 4, !dbg !2901
  %mul89 = mul nsw i32 %70, 16, !dbg !2902
  %71 = load i32, i32* %i, align 4, !dbg !2903
  %add90 = add nsw i32 %mul89, %71, !dbg !2904
  %add91 = add nsw i32 %add90, 8, !dbg !2905
  %idxprom92 = sext i32 %add91 to i64, !dbg !2906
  %72 = load float*, float** %out.addr, align 8, !dbg !2906
  %arrayidx93 = getelementptr inbounds float, float* %72, i64 %idxprom92, !dbg !2906
  %73 = load float, float* %arrayidx93, align 4, !dbg !2907
  %add94 = fadd float %73, %add88, !dbg !2907
  store float %add94, float* %arrayidx93, align 4, !dbg !2907
  br label %for.inc95, !dbg !2908

for.inc95:                                        ; preds = %for.body36
  %74 = load i32, i32* %i, align 4, !dbg !2909
  %inc96 = add nsw i32 %74, 1, !dbg !2909
  store i32 %inc96, i32* %i, align 4, !dbg !2909
  br label %for.cond34, !dbg !2911, !llvm.loop !2912

for.end97:                                        ; preds = %for.cond34
  %75 = load i32, i32* %pos_next, align 4, !dbg !2914
  %add98 = add nsw i32 %75, 2, !dbg !2915
  %idxprom99 = sext i32 %add98 to i64, !dbg !2916
  %arrayidx100 = getelementptr inbounds [26 x i32], [26 x i32]* @mod23_lut, i64 0, i64 %idxprom99, !dbg !2916
  %76 = load i32, i32* %arrayidx100, align 4, !dbg !2916
  store i32 %76, i32* %pos_now, align 4, !dbg !2917
  %77 = load i32, i32* %pos_now, align 4, !dbg !2918
  %add101 = add nsw i32 %77, 2, !dbg !2919
  %idxprom102 = sext i32 %add101 to i64, !dbg !2920
  %arrayidx103 = getelementptr inbounds [26 x i32], [26 x i32]* @mod23_lut, i64 0, i64 %idxprom102, !dbg !2920
  %78 = load i32, i32* %arrayidx103, align 4, !dbg !2920
  store i32 %78, i32* %pos_next, align 4, !dbg !2921
  br label %for.inc104, !dbg !2922

for.inc104:                                       ; preds = %for.end97
  %79 = load i32, i32* %t, align 4, !dbg !2923
  %inc105 = add nsw i32 %79, 1, !dbg !2923
  store i32 %inc105, i32* %t, align 4, !dbg !2923
  br label %for.cond31, !dbg !2925, !llvm.loop !2926

for.end106:                                       ; preds = %for.cond31
  %80 = load %struct.Atrac3pIPQFChannelCtx*, %struct.Atrac3pIPQFChannelCtx** %hist.addr, align 8, !dbg !2928
  %pos107 = getelementptr inbounds %struct.Atrac3pIPQFChannelCtx, %struct.Atrac3pIPQFChannelCtx* %80, i32 0, i32 2, !dbg !2929
  %81 = load i32, i32* %pos107, align 32, !dbg !2929
  %idxprom108 = sext i32 %81 to i64, !dbg !2930
  %arrayidx109 = getelementptr inbounds [26 x i32], [26 x i32]* @mod23_lut, i64 0, i64 %idxprom108, !dbg !2930
  %82 = load i32, i32* %arrayidx109, align 4, !dbg !2930
  %83 = load %struct.Atrac3pIPQFChannelCtx*, %struct.Atrac3pIPQFChannelCtx** %hist.addr, align 8, !dbg !2931
  %pos110 = getelementptr inbounds %struct.Atrac3pIPQFChannelCtx, %struct.Atrac3pIPQFChannelCtx* %83, i32 0, i32 2, !dbg !2932
  store i32 %82, i32* %pos110, align 32, !dbg !2933
  br label %for.inc111, !dbg !2934

for.inc111:                                       ; preds = %for.end106
  %84 = load i32, i32* %s, align 4, !dbg !2935
  %inc112 = add nsw i32 %84, 1, !dbg !2935
  store i32 %inc112, i32* %s, align 4, !dbg !2935
  br label %for.cond, !dbg !2937, !llvm.loop !2938

for.end113:                                       ; preds = %for.cond
  ret void, !dbg !2940
}

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!959, !960}
!llvm.ident = !{!961}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, globals: !904)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--atrac3plusdsp.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887, !893, !897}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !888, line: 77, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!891 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!892 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !888, line: 83, size: 32, align: 32, elements: !894)
!894 = !{!895, !896}
!895 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!896 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Atrac3pChannelUnitTypes", file: !898, line: 50, size: 32, align: 32, elements: !899)
!898 = !DIFile(filename: "libavcodec/atrac3plus.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!899 = !{!900, !901, !902, !903}
!900 = !DIEnumerator(name: "CH_UNIT_MONO", value: 0)
!901 = !DIEnumerator(name: "CH_UNIT_STEREO", value: 1)
!902 = !DIEnumerator(name: "CH_UNIT_EXTENSION", value: 2)
!903 = !DIEnumerator(name: "CH_UNIT_TERMINATOR", value: 3)
!904 = !{!905, !914, !920, !924, !928, !932, !934, !940, !944, !946, !950, !954, !958}
!905 = distinct !DIGlobalVariable(name: "ff_atrac3p_qu_to_spec_pos", scope: !0, file: !906, line: 42, type: !907, isLocal: false, isDefinition: true, variable: [33 x i16]* @ff_atrac3p_qu_to_spec_pos)
!906 = !DIFile(filename: "libavcodec/atrac3plusdsp.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !908, size: 528, align: 16, elements: !912)
!908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !909)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !910, line: 49, baseType: !911)
!910 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!911 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!912 = !{!913}
!913 = !DISubrange(count: 33)
!914 = distinct !DIGlobalVariable(name: "ff_atrac3p_sf_tab", scope: !0, file: !906, line: 52, type: !915, isLocal: false, isDefinition: true, variable: [64 x float]* @ff_atrac3p_sf_tab)
!915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 2048, align: 32, elements: !918)
!916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!917 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!918 = !{!919}
!919 = !DISubrange(count: 64)
!920 = distinct !DIGlobalVariable(name: "ff_atrac3p_mant_tab", scope: !0, file: !906, line: 67, type: !921, isLocal: false, isDefinition: true, variable: [8 x float]* @ff_atrac3p_mant_tab)
!921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 256, align: 32, elements: !922)
!922 = !{!923}
!923 = !DISubrange(count: 8)
!924 = distinct !DIGlobalVariable(name: "sine_table", scope: !0, file: !906, line: 93, type: !925, isLocal: true, isDefinition: true, variable: [2048 x float]* @sine_table)
!925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 65536, align: 32, elements: !926)
!926 = !{!927}
!927 = !DISubrange(count: 2048)
!928 = distinct !DIGlobalVariable(name: "hann_window", scope: !0, file: !906, line: 94, type: !929, isLocal: true, isDefinition: true, variable: [256 x float]* @hann_window)
!929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 8192, align: 32, elements: !930)
!930 = !{!931}
!931 = !DISubrange(count: 256)
!932 = distinct !DIGlobalVariable(name: "amp_sf_tab", scope: !0, file: !906, line: 95, type: !933, isLocal: true, isDefinition: true, variable: [64 x float]* @amp_sf_tab)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 2048, align: 32, elements: !918)
!934 = distinct !DIGlobalVariable(name: "subband_to_powgrp", scope: !0, file: !906, line: 251, type: !935, isLocal: true, isDefinition: true, variable: [16 x i32]* @subband_to_powgrp)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 512, align: 32, elements: !938)
!936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !937)
!937 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!938 = !{!939}
!939 = !DISubrange(count: 16)
!940 = distinct !DIGlobalVariable(name: "noise_tab", scope: !0, file: !906, line: 256, type: !941, isLocal: true, isDefinition: true, variable: [1024 x float]* @noise_tab)
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 32768, align: 32, elements: !942)
!942 = !{!943}
!943 = !DISubrange(count: 1024)
!944 = distinct !DIGlobalVariable(name: "pwc_levs", scope: !0, file: !906, line: 408, type: !945, isLocal: true, isDefinition: true, variable: [16 x float]* @pwc_levs)
!945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 512, align: 32, elements: !938)
!946 = distinct !DIGlobalVariable(name: "subband_to_qu", scope: !0, file: !906, line: 414, type: !947, isLocal: true, isDefinition: true, variable: [17 x i32]* @subband_to_qu)
!947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 544, align: 32, elements: !948)
!948 = !{!949}
!949 = !DISubrange(count: 17)
!950 = distinct !DIGlobalVariable(name: "mod23_lut", scope: !0, file: !906, line: 496, type: !951, isLocal: true, isDefinition: true, variable: [26 x i32]* @mod23_lut)
!951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 832, align: 32, elements: !952)
!952 = !{!953}
!953 = !DISubrange(count: 26)
!954 = distinct !DIGlobalVariable(name: "ipqf_coeffs1", scope: !0, file: !906, line: 502, type: !955, isLocal: true, isDefinition: true, variable: [12 x [16 x float]]* @ipqf_coeffs1)
!955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 6144, align: 32, elements: !956)
!956 = !{!957, !939}
!957 = !DISubrange(count: 12)
!958 = distinct !DIGlobalVariable(name: "ipqf_coeffs2", scope: !0, file: !906, line: 554, type: !955, isLocal: true, isDefinition: true, variable: [12 x [16 x float]]* @ipqf_coeffs2)
!959 = !{i32 2, !"Dwarf Version", i32 4}
!960 = !{i32 2, !"Debug Info Version", i32 3}
!961 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!962 = distinct !DISubprogram(name: "ff_atrac3p_init_imdct", scope: !906, file: !906, line: 80, type: !963, isLocal: false, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1603)
!963 = !DISubroutineType(types: !964)
!964 = !{null, !965, !1558}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64, align: 64)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !968)
!968 = !{!969, !1014, !1015, !1016, !1282, !1283, !1284, !1285, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1311, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1496, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !967, file: !35, line: 1561, baseType: !970, size: 64, align: 64)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !973)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !974)
!974 = !{!975, !979, !984, !988, !989, !990, !991, !995, !1001, !1003, !1007}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !973, file: !4, line: 72, baseType: !976, size: 64, align: 64)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64, align: 64)
!977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !978)
!978 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !973, file: !4, line: 78, baseType: !980, size: 64, align: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64, align: 64)
!981 = !DISubroutineType(types: !982)
!982 = !{!976, !983}
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !973, file: !4, line: 85, baseType: !985, size: 64, align: 64, offset: 128)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64, align: 64)
!986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!987 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !973, file: !4, line: 93, baseType: !937, size: 32, align: 32, offset: 192)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !973, file: !4, line: 99, baseType: !937, size: 32, align: 32, offset: 224)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !973, file: !4, line: 108, baseType: !937, size: 32, align: 32, offset: 256)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !973, file: !4, line: 113, baseType: !992, size: 64, align: 64, offset: 320)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64, align: 64)
!993 = !DISubroutineType(types: !994)
!994 = !{!983, !983, !983}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !973, file: !4, line: 123, baseType: !996, size: 64, align: 64, offset: 384)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64, align: 64)
!997 = !DISubroutineType(types: !998)
!998 = !{!999, !999}
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64, align: 64)
!1000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !973)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !973, file: !4, line: 130, baseType: !1002, size: 32, align: 32, offset: 448)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !973, file: !4, line: 136, baseType: !1004, size: 64, align: 64, offset: 512)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64, align: 64)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!1002, !983}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !973, file: !4, line: 142, baseType: !1008, size: 64, align: 64, offset: 576)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64, align: 64)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!937, !1011, !983, !976, !937}
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64, align: 64)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64, align: 64)
!1013 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !967, file: !35, line: 1562, baseType: !937, size: 32, align: 32, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !967, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !967, file: !35, line: 1565, baseType: !1017, size: 64, align: 64, offset: 128)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64, align: 64)
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1019)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1020)
!1020 = !{!1021, !1022, !1023, !1024, !1025, !1026, !1035, !1038, !1040, !1043, !1048, !1051, !1052, !1060, !1061, !1062, !1064, !1068, !1074, !1079, !1083, !1084, !1132, !1253, !1257, !1258, !1262, !1266, !1271, !1275, !1276, !1277}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1019, file: !35, line: 3475, baseType: !976, size: 64, align: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1019, file: !35, line: 3480, baseType: !976, size: 64, align: 64, offset: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1019, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1019, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1019, file: !35, line: 3487, baseType: !937, size: 32, align: 32, offset: 192)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1019, file: !35, line: 3488, baseType: !1027, size: 64, align: 64, offset: 256)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64, align: 64)
!1028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1029)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1030, line: 61, baseType: !1031)
!1030 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1030, line: 58, size: 64, align: 32, elements: !1032)
!1032 = !{!1033, !1034}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1031, file: !1030, line: 59, baseType: !937, size: 32, align: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1031, file: !1030, line: 60, baseType: !937, size: 32, align: 32, offset: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1019, file: !35, line: 3489, baseType: !1036, size: 64, align: 64, offset: 320)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64, align: 64)
!1037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1019, file: !35, line: 3490, baseType: !1039, size: 64, align: 64, offset: 384)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64, align: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1019, file: !35, line: 3491, baseType: !1041, size: 64, align: 64, offset: 448)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1019, file: !35, line: 3492, baseType: !1044, size: 64, align: 64, offset: 512)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64, align: 64)
!1045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1046)
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !910, line: 55, baseType: !1047)
!1047 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1019, file: !35, line: 3493, baseType: !1049, size: 8, align: 8, offset: 576)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !910, line: 48, baseType: !1050)
!1050 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1019, file: !35, line: 3494, baseType: !970, size: 64, align: 64, offset: 640)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1019, file: !35, line: 3495, baseType: !1053, size: 64, align: 64, offset: 704)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64, align: 64)
!1054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1055)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1056)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1057)
!1057 = !{!1058, !1059}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1056, file: !35, line: 3402, baseType: !937, size: 32, align: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1056, file: !35, line: 3403, baseType: !976, size: 64, align: 64, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1019, file: !35, line: 3507, baseType: !976, size: 64, align: 64, offset: 768)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1019, file: !35, line: 3516, baseType: !937, size: 32, align: 32, offset: 832)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1019, file: !35, line: 3517, baseType: !1063, size: 64, align: 64, offset: 896)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64, align: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1019, file: !35, line: 3527, baseType: !1065, size: 64, align: 64, offset: 960)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64, align: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!937, !965}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1019, file: !35, line: 3535, baseType: !1069, size: 64, align: 64, offset: 1024)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64, align: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!937, !965, !1072}
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64, align: 64)
!1073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !966)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1019, file: !35, line: 3541, baseType: !1075, size: 64, align: 64, offset: 1088)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1078)
!1078 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !35, line: 3461, flags: DIFlagFwdDecl)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1019, file: !35, line: 3549, baseType: !1080, size: 64, align: 64, offset: 1152)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64, align: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{null, !1063}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1019, file: !35, line: 3551, baseType: !1065, size: 64, align: 64, offset: 1216)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1019, file: !35, line: 3552, baseType: !1085, size: 64, align: 64, offset: 1280)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64, align: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!937, !965, !1088, !937, !1089}
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64, align: 64)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64, align: 64)
!1090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1091)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1092)
!1092 = !{!1093, !1094, !1097, !1098, !1099, !1129}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1091, file: !35, line: 3921, baseType: !909, size: 16, align: 16)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1091, file: !35, line: 3922, baseType: !1095, size: 32, align: 32, offset: 32)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !910, line: 51, baseType: !1096)
!1096 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1091, file: !35, line: 3923, baseType: !1095, size: 32, align: 32, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1091, file: !35, line: 3924, baseType: !1096, size: 32, align: 32, offset: 96)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1091, file: !35, line: 3925, baseType: !1100, size: 64, align: 64, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64, align: 64)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64, align: 64)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1103)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1104)
!1104 = !{!1105, !1106, !1107, !1108, !1109, !1110, !1118, !1122, !1124, !1125, !1127, !1128}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1103, file: !35, line: 3886, baseType: !937, size: 32, align: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1103, file: !35, line: 3887, baseType: !937, size: 32, align: 32, offset: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1103, file: !35, line: 3888, baseType: !937, size: 32, align: 32, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1103, file: !35, line: 3889, baseType: !937, size: 32, align: 32, offset: 96)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1103, file: !35, line: 3890, baseType: !937, size: 32, align: 32, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1103, file: !35, line: 3897, baseType: !1111, size: 768, align: 64, offset: 192)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1113)
!1113 = !{!1114, !1116}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1112, file: !35, line: 3855, baseType: !1115, size: 512, align: 64)
!1115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1088, size: 512, align: 64, elements: !922)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1112, file: !35, line: 3857, baseType: !1117, size: 256, align: 32, offset: 512)
!1117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !937, size: 256, align: 32, elements: !922)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1103, file: !35, line: 3903, baseType: !1119, size: 256, align: 64, offset: 960)
!1119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1088, size: 256, align: 64, elements: !1120)
!1120 = !{!1121}
!1121 = !DISubrange(count: 4)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1103, file: !35, line: 3904, baseType: !1123, size: 128, align: 32, offset: 1216)
!1123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !937, size: 128, align: 32, elements: !1120)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1103, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1103, file: !35, line: 3908, baseType: !1126, size: 64, align: 64, offset: 1408)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64, align: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1103, file: !35, line: 3915, baseType: !1126, size: 64, align: 64, offset: 1472)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1103, file: !35, line: 3917, baseType: !937, size: 32, align: 32, offset: 1536)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1091, file: !35, line: 3926, baseType: !1130, size: 64, align: 64, offset: 192)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !910, line: 40, baseType: !1131)
!1131 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1019, file: !35, line: 3564, baseType: !1133, size: 64, align: 64, offset: 1344)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64, align: 64)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!937, !965, !1136, !1170, !1252}
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64, align: 64)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1138)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1139)
!1139 = !{!1140, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1166, !1167, !1168, !1169}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1138, file: !35, line: 1451, baseType: !1141, size: 64, align: 64)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1143, line: 94, baseType: !1144)
!1143 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1143, line: 81, size: 192, align: 64, elements: !1145)
!1145 = !{!1146, !1150, !1151}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1144, file: !1143, line: 82, baseType: !1147, size: 64, align: 64)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64, align: 64)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1143, line: 73, baseType: !1149)
!1149 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1143, line: 73, flags: DIFlagFwdDecl)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1144, file: !1143, line: 89, baseType: !1088, size: 64, align: 64, offset: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1144, file: !1143, line: 93, baseType: !937, size: 32, align: 32, offset: 128)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1138, file: !35, line: 1461, baseType: !1130, size: 64, align: 64, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1138, file: !35, line: 1467, baseType: !1130, size: 64, align: 64, offset: 128)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1138, file: !35, line: 1468, baseType: !1088, size: 64, align: 64, offset: 192)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1138, file: !35, line: 1469, baseType: !937, size: 32, align: 32, offset: 256)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1138, file: !35, line: 1470, baseType: !937, size: 32, align: 32, offset: 288)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1138, file: !35, line: 1474, baseType: !937, size: 32, align: 32, offset: 320)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1138, file: !35, line: 1479, baseType: !1159, size: 64, align: 64, offset: 384)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64, align: 64)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1162)
!1162 = !{!1163, !1164, !1165}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1161, file: !35, line: 1412, baseType: !1088, size: 64, align: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1161, file: !35, line: 1413, baseType: !937, size: 32, align: 32, offset: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1161, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1138, file: !35, line: 1480, baseType: !937, size: 32, align: 32, offset: 448)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1138, file: !35, line: 1486, baseType: !1130, size: 64, align: 64, offset: 512)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1138, file: !35, line: 1488, baseType: !1130, size: 64, align: 64, offset: 576)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1138, file: !35, line: 1497, baseType: !1130, size: 64, align: 64, offset: 640)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64, align: 64)
!1171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1172)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1174)
!1174 = !{!1175, !1176, !1177, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1204, !1206, !1207, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1240, !1241, !1242, !1243, !1244, !1245, !1248, !1249, !1250, !1251}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1173, file: !758, line: 282, baseType: !1115, size: 512, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1173, file: !758, line: 299, baseType: !1117, size: 256, align: 32, offset: 512)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1173, file: !758, line: 315, baseType: !1178, size: 64, align: 64, offset: 768)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64, align: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1173, file: !758, line: 326, baseType: !937, size: 32, align: 32, offset: 832)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1173, file: !758, line: 326, baseType: !937, size: 32, align: 32, offset: 864)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1173, file: !758, line: 334, baseType: !937, size: 32, align: 32, offset: 896)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1173, file: !758, line: 341, baseType: !937, size: 32, align: 32, offset: 928)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1173, file: !758, line: 346, baseType: !937, size: 32, align: 32, offset: 960)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1173, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1173, file: !758, line: 356, baseType: !1029, size: 64, align: 32, offset: 1024)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1173, file: !758, line: 361, baseType: !1130, size: 64, align: 64, offset: 1088)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1173, file: !758, line: 369, baseType: !1130, size: 64, align: 64, offset: 1152)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1173, file: !758, line: 377, baseType: !1130, size: 64, align: 64, offset: 1216)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1173, file: !758, line: 382, baseType: !937, size: 32, align: 32, offset: 1280)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1173, file: !758, line: 386, baseType: !937, size: 32, align: 32, offset: 1312)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1173, file: !758, line: 391, baseType: !937, size: 32, align: 32, offset: 1344)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1173, file: !758, line: 396, baseType: !983, size: 64, align: 64, offset: 1408)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1173, file: !758, line: 403, baseType: !1194, size: 512, align: 64, offset: 1472)
!1194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1046, size: 512, align: 64, elements: !922)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1173, file: !758, line: 410, baseType: !937, size: 32, align: 32, offset: 1984)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1173, file: !758, line: 415, baseType: !937, size: 32, align: 32, offset: 2016)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1173, file: !758, line: 420, baseType: !937, size: 32, align: 32, offset: 2048)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1173, file: !758, line: 425, baseType: !937, size: 32, align: 32, offset: 2080)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1173, file: !758, line: 435, baseType: !1130, size: 64, align: 64, offset: 2112)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1173, file: !758, line: 440, baseType: !937, size: 32, align: 32, offset: 2176)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1173, file: !758, line: 445, baseType: !1046, size: 64, align: 64, offset: 2240)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1173, file: !758, line: 459, baseType: !1203, size: 512, align: 64, offset: 2304)
!1203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1141, size: 512, align: 64, elements: !922)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1173, file: !758, line: 473, baseType: !1205, size: 64, align: 64, offset: 2816)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1173, file: !758, line: 477, baseType: !937, size: 32, align: 32, offset: 2880)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1173, file: !758, line: 479, baseType: !1208, size: 64, align: 64, offset: 2944)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64, align: 64)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1221}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1211, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1211, file: !758, line: 203, baseType: !1088, size: 64, align: 64, offset: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1211, file: !758, line: 204, baseType: !937, size: 32, align: 32, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1211, file: !758, line: 205, baseType: !1217, size: 64, align: 64, offset: 192)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1219, line: 86, baseType: !1220)
!1219 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1220 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1219, line: 86, flags: DIFlagFwdDecl)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1211, file: !758, line: 206, baseType: !1141, size: 64, align: 64, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1173, file: !758, line: 480, baseType: !937, size: 32, align: 32, offset: 3008)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1173, file: !758, line: 505, baseType: !937, size: 32, align: 32, offset: 3040)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1173, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1173, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1173, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1173, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1173, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1173, file: !758, line: 532, baseType: !1130, size: 64, align: 64, offset: 3264)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1173, file: !758, line: 539, baseType: !1130, size: 64, align: 64, offset: 3328)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1173, file: !758, line: 547, baseType: !1130, size: 64, align: 64, offset: 3392)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1173, file: !758, line: 554, baseType: !1217, size: 64, align: 64, offset: 3456)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1173, file: !758, line: 563, baseType: !937, size: 32, align: 32, offset: 3520)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1173, file: !758, line: 572, baseType: !937, size: 32, align: 32, offset: 3552)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1173, file: !758, line: 581, baseType: !937, size: 32, align: 32, offset: 3584)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1173, file: !758, line: 588, baseType: !1237, size: 64, align: 64, offset: 3648)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64, align: 64)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !910, line: 36, baseType: !1239)
!1239 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1173, file: !758, line: 593, baseType: !937, size: 32, align: 32, offset: 3712)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1173, file: !758, line: 596, baseType: !937, size: 32, align: 32, offset: 3744)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1173, file: !758, line: 599, baseType: !1141, size: 64, align: 64, offset: 3776)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1173, file: !758, line: 605, baseType: !1141, size: 64, align: 64, offset: 3840)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1173, file: !758, line: 616, baseType: !1141, size: 64, align: 64, offset: 3904)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1173, file: !758, line: 626, baseType: !1246, size: 64, align: 64, offset: 3968)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1247, line: 216, baseType: !1047)
!1247 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1173, file: !758, line: 627, baseType: !1246, size: 64, align: 64, offset: 4032)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1173, file: !758, line: 628, baseType: !1246, size: 64, align: 64, offset: 4096)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1173, file: !758, line: 629, baseType: !1246, size: 64, align: 64, offset: 4160)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1173, file: !758, line: 645, baseType: !1141, size: 64, align: 64, offset: 4224)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64, align: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1019, file: !35, line: 3566, baseType: !1254, size: 64, align: 64, offset: 1408)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64, align: 64)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!937, !965, !983, !1252, !1136}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1019, file: !35, line: 3567, baseType: !1065, size: 64, align: 64, offset: 1472)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1019, file: !35, line: 3576, baseType: !1259, size: 64, align: 64, offset: 1536)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64, align: 64)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!937, !965, !1170}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1019, file: !35, line: 3577, baseType: !1263, size: 64, align: 64, offset: 1600)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64, align: 64)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!937, !965, !1136}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1019, file: !35, line: 3584, baseType: !1267, size: 64, align: 64, offset: 1664)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64, align: 64)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!937, !965, !1270}
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64, align: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1019, file: !35, line: 3589, baseType: !1272, size: 64, align: 64, offset: 1728)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64, align: 64)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{null, !965}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1019, file: !35, line: 3594, baseType: !937, size: 32, align: 32, offset: 1792)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1019, file: !35, line: 3600, baseType: !976, size: 64, align: 64, offset: 1856)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1019, file: !35, line: 3609, baseType: !1278, size: 64, align: 64, offset: 1920)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64, align: 64)
!1280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1281)
!1281 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !967, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !967, file: !35, line: 1581, baseType: !1096, size: 32, align: 32, offset: 224)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !967, file: !35, line: 1583, baseType: !983, size: 64, align: 64, offset: 256)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !967, file: !35, line: 1591, baseType: !1286, size: 64, align: 64, offset: 320)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64, align: 64)
!1287 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !35, line: 1532, flags: DIFlagFwdDecl)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !967, file: !35, line: 1598, baseType: !983, size: 64, align: 64, offset: 384)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !967, file: !35, line: 1606, baseType: !1130, size: 64, align: 64, offset: 448)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !967, file: !35, line: 1614, baseType: !937, size: 32, align: 32, offset: 512)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !967, file: !35, line: 1622, baseType: !937, size: 32, align: 32, offset: 544)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !967, file: !35, line: 1628, baseType: !937, size: 32, align: 32, offset: 576)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !967, file: !35, line: 1636, baseType: !937, size: 32, align: 32, offset: 608)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !967, file: !35, line: 1643, baseType: !937, size: 32, align: 32, offset: 640)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !967, file: !35, line: 1657, baseType: !1088, size: 64, align: 64, offset: 704)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !967, file: !35, line: 1658, baseType: !937, size: 32, align: 32, offset: 768)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !967, file: !35, line: 1679, baseType: !1029, size: 64, align: 32, offset: 800)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !967, file: !35, line: 1688, baseType: !937, size: 32, align: 32, offset: 864)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !967, file: !35, line: 1712, baseType: !937, size: 32, align: 32, offset: 896)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !967, file: !35, line: 1729, baseType: !937, size: 32, align: 32, offset: 928)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !967, file: !35, line: 1729, baseType: !937, size: 32, align: 32, offset: 960)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !967, file: !35, line: 1744, baseType: !937, size: 32, align: 32, offset: 992)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !967, file: !35, line: 1744, baseType: !937, size: 32, align: 32, offset: 1024)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !967, file: !35, line: 1751, baseType: !937, size: 32, align: 32, offset: 1056)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !967, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !967, file: !35, line: 1791, baseType: !1307, size: 64, align: 64, offset: 1152)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64, align: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{null, !1310, !1170, !1252, !937, !937, !937}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64, align: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !967, file: !35, line: 1808, baseType: !1312, size: 64, align: 64, offset: 1216)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64, align: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!494, !1310, !1036}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !967, file: !35, line: 1816, baseType: !937, size: 32, align: 32, offset: 1280)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !967, file: !35, line: 1825, baseType: !917, size: 32, align: 32, offset: 1312)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !967, file: !35, line: 1830, baseType: !937, size: 32, align: 32, offset: 1344)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !967, file: !35, line: 1838, baseType: !917, size: 32, align: 32, offset: 1376)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !967, file: !35, line: 1846, baseType: !937, size: 32, align: 32, offset: 1408)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !967, file: !35, line: 1851, baseType: !937, size: 32, align: 32, offset: 1440)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !967, file: !35, line: 1861, baseType: !917, size: 32, align: 32, offset: 1472)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !967, file: !35, line: 1868, baseType: !917, size: 32, align: 32, offset: 1504)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !967, file: !35, line: 1875, baseType: !917, size: 32, align: 32, offset: 1536)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !967, file: !35, line: 1882, baseType: !917, size: 32, align: 32, offset: 1568)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !967, file: !35, line: 1889, baseType: !917, size: 32, align: 32, offset: 1600)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !967, file: !35, line: 1896, baseType: !917, size: 32, align: 32, offset: 1632)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !967, file: !35, line: 1903, baseType: !917, size: 32, align: 32, offset: 1664)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !967, file: !35, line: 1910, baseType: !937, size: 32, align: 32, offset: 1696)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !967, file: !35, line: 1915, baseType: !937, size: 32, align: 32, offset: 1728)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !967, file: !35, line: 1926, baseType: !1252, size: 64, align: 64, offset: 1792)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !967, file: !35, line: 1935, baseType: !1029, size: 64, align: 32, offset: 1856)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !967, file: !35, line: 1942, baseType: !937, size: 32, align: 32, offset: 1920)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !967, file: !35, line: 1948, baseType: !937, size: 32, align: 32, offset: 1952)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !967, file: !35, line: 1954, baseType: !937, size: 32, align: 32, offset: 1984)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !967, file: !35, line: 1960, baseType: !937, size: 32, align: 32, offset: 2016)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !967, file: !35, line: 1984, baseType: !937, size: 32, align: 32, offset: 2048)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !967, file: !35, line: 1991, baseType: !937, size: 32, align: 32, offset: 2080)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !967, file: !35, line: 1996, baseType: !937, size: 32, align: 32, offset: 2112)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !967, file: !35, line: 2004, baseType: !937, size: 32, align: 32, offset: 2144)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !967, file: !35, line: 2011, baseType: !937, size: 32, align: 32, offset: 2176)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !967, file: !35, line: 2018, baseType: !937, size: 32, align: 32, offset: 2208)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !967, file: !35, line: 2027, baseType: !937, size: 32, align: 32, offset: 2240)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !967, file: !35, line: 2034, baseType: !937, size: 32, align: 32, offset: 2272)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !967, file: !35, line: 2044, baseType: !937, size: 32, align: 32, offset: 2304)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !967, file: !35, line: 2054, baseType: !1346, size: 64, align: 64, offset: 2368)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64, align: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !967, file: !35, line: 2061, baseType: !1346, size: 64, align: 64, offset: 2432)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !967, file: !35, line: 2066, baseType: !937, size: 32, align: 32, offset: 2496)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !967, file: !35, line: 2070, baseType: !937, size: 32, align: 32, offset: 2528)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !967, file: !35, line: 2078, baseType: !937, size: 32, align: 32, offset: 2560)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !967, file: !35, line: 2085, baseType: !937, size: 32, align: 32, offset: 2592)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !967, file: !35, line: 2092, baseType: !937, size: 32, align: 32, offset: 2624)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !967, file: !35, line: 2099, baseType: !937, size: 32, align: 32, offset: 2656)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !967, file: !35, line: 2106, baseType: !937, size: 32, align: 32, offset: 2688)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !967, file: !35, line: 2113, baseType: !937, size: 32, align: 32, offset: 2720)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !967, file: !35, line: 2120, baseType: !937, size: 32, align: 32, offset: 2752)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !967, file: !35, line: 2125, baseType: !937, size: 32, align: 32, offset: 2784)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !967, file: !35, line: 2133, baseType: !937, size: 32, align: 32, offset: 2816)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !967, file: !35, line: 2140, baseType: !937, size: 32, align: 32, offset: 2848)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !967, file: !35, line: 2145, baseType: !937, size: 32, align: 32, offset: 2880)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !967, file: !35, line: 2153, baseType: !937, size: 32, align: 32, offset: 2912)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !967, file: !35, line: 2158, baseType: !937, size: 32, align: 32, offset: 2944)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !967, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !967, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !967, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !967, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !967, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !967, file: !35, line: 2203, baseType: !937, size: 32, align: 32, offset: 3136)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !967, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !967, file: !35, line: 2212, baseType: !937, size: 32, align: 32, offset: 3200)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !967, file: !35, line: 2213, baseType: !937, size: 32, align: 32, offset: 3232)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !967, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !967, file: !35, line: 2232, baseType: !937, size: 32, align: 32, offset: 3296)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !967, file: !35, line: 2243, baseType: !937, size: 32, align: 32, offset: 3328)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !967, file: !35, line: 2249, baseType: !937, size: 32, align: 32, offset: 3360)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !967, file: !35, line: 2256, baseType: !937, size: 32, align: 32, offset: 3392)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !967, file: !35, line: 2263, baseType: !1046, size: 64, align: 64, offset: 3456)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !967, file: !35, line: 2270, baseType: !1046, size: 64, align: 64, offset: 3520)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !967, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !967, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !967, file: !35, line: 2367, baseType: !1382, size: 64, align: 64, offset: 3648)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64, align: 64)
!1383 = !DISubroutineType(types: !1384)
!1384 = !{!937, !1310, !1270, !937}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !967, file: !35, line: 2383, baseType: !937, size: 32, align: 32, offset: 3712)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !967, file: !35, line: 2386, baseType: !917, size: 32, align: 32, offset: 3744)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !967, file: !35, line: 2387, baseType: !917, size: 32, align: 32, offset: 3776)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !967, file: !35, line: 2394, baseType: !937, size: 32, align: 32, offset: 3808)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !967, file: !35, line: 2401, baseType: !937, size: 32, align: 32, offset: 3840)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !967, file: !35, line: 2408, baseType: !937, size: 32, align: 32, offset: 3872)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !967, file: !35, line: 2415, baseType: !937, size: 32, align: 32, offset: 3904)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !967, file: !35, line: 2422, baseType: !937, size: 32, align: 32, offset: 3936)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !967, file: !35, line: 2423, baseType: !1394, size: 64, align: 64, offset: 3968)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64, align: 64)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !1396)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !1397)
!1397 = !{!1398, !1399, !1400, !1401}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1396, file: !35, line: 827, baseType: !937, size: 32, align: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1396, file: !35, line: 828, baseType: !937, size: 32, align: 32, offset: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1396, file: !35, line: 829, baseType: !937, size: 32, align: 32, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1396, file: !35, line: 830, baseType: !917, size: 32, align: 32, offset: 96)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !967, file: !35, line: 2430, baseType: !1130, size: 64, align: 64, offset: 4032)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !967, file: !35, line: 2437, baseType: !1130, size: 64, align: 64, offset: 4096)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !967, file: !35, line: 2444, baseType: !917, size: 32, align: 32, offset: 4160)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !967, file: !35, line: 2451, baseType: !917, size: 32, align: 32, offset: 4192)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !967, file: !35, line: 2458, baseType: !937, size: 32, align: 32, offset: 4224)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !967, file: !35, line: 2469, baseType: !937, size: 32, align: 32, offset: 4256)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !967, file: !35, line: 2475, baseType: !937, size: 32, align: 32, offset: 4288)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !967, file: !35, line: 2481, baseType: !937, size: 32, align: 32, offset: 4320)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !967, file: !35, line: 2485, baseType: !937, size: 32, align: 32, offset: 4352)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !967, file: !35, line: 2489, baseType: !937, size: 32, align: 32, offset: 4384)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !967, file: !35, line: 2493, baseType: !937, size: 32, align: 32, offset: 4416)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !967, file: !35, line: 2501, baseType: !937, size: 32, align: 32, offset: 4448)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !967, file: !35, line: 2506, baseType: !937, size: 32, align: 32, offset: 4480)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !967, file: !35, line: 2510, baseType: !937, size: 32, align: 32, offset: 4512)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !967, file: !35, line: 2514, baseType: !1130, size: 64, align: 64, offset: 4544)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !967, file: !35, line: 2528, baseType: !1418, size: 64, align: 64, offset: 4608)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64, align: 64)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{null, !1310, !983, !937, !937}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !967, file: !35, line: 2534, baseType: !937, size: 32, align: 32, offset: 4672)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !967, file: !35, line: 2545, baseType: !937, size: 32, align: 32, offset: 4704)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !967, file: !35, line: 2547, baseType: !937, size: 32, align: 32, offset: 4736)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !967, file: !35, line: 2549, baseType: !937, size: 32, align: 32, offset: 4768)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !967, file: !35, line: 2551, baseType: !937, size: 32, align: 32, offset: 4800)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !967, file: !35, line: 2553, baseType: !937, size: 32, align: 32, offset: 4832)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !967, file: !35, line: 2555, baseType: !937, size: 32, align: 32, offset: 4864)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !967, file: !35, line: 2557, baseType: !937, size: 32, align: 32, offset: 4896)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !967, file: !35, line: 2559, baseType: !937, size: 32, align: 32, offset: 4928)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !967, file: !35, line: 2563, baseType: !937, size: 32, align: 32, offset: 4960)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !967, file: !35, line: 2571, baseType: !1126, size: 64, align: 64, offset: 4992)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !967, file: !35, line: 2579, baseType: !1126, size: 64, align: 64, offset: 5056)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !967, file: !35, line: 2586, baseType: !937, size: 32, align: 32, offset: 5120)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !967, file: !35, line: 2615, baseType: !937, size: 32, align: 32, offset: 5152)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !967, file: !35, line: 2627, baseType: !937, size: 32, align: 32, offset: 5184)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !967, file: !35, line: 2637, baseType: !937, size: 32, align: 32, offset: 5216)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !967, file: !35, line: 2681, baseType: !937, size: 32, align: 32, offset: 5248)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !967, file: !35, line: 2709, baseType: !1130, size: 64, align: 64, offset: 5312)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !967, file: !35, line: 2716, baseType: !1440, size: 64, align: 64, offset: 5376)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64, align: 64)
!1441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1442)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447, !1448, !1449, !1450, !1456, !1460, !1461, !1462, !1463, !1469, !1470, !1471, !1472, !1473}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1442, file: !35, line: 3642, baseType: !976, size: 64, align: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1442, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1442, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1442, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1442, file: !35, line: 3669, baseType: !937, size: 32, align: 32, offset: 160)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1442, file: !35, line: 3682, baseType: !1267, size: 64, align: 64, offset: 192)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1442, file: !35, line: 3698, baseType: !1451, size: 64, align: 64, offset: 256)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64, align: 64)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!937, !965, !1454, !1095}
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64, align: 64)
!1455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1442, file: !35, line: 3712, baseType: !1457, size: 64, align: 64, offset: 320)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64, align: 64)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!937, !965, !937, !1454, !1095}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1442, file: !35, line: 3726, baseType: !1451, size: 64, align: 64, offset: 384)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1442, file: !35, line: 3737, baseType: !1065, size: 64, align: 64, offset: 448)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1442, file: !35, line: 3746, baseType: !937, size: 32, align: 32, offset: 512)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1442, file: !35, line: 3757, baseType: !1464, size: 64, align: 64, offset: 576)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64, align: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{null, !1467}
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64, align: 64)
!1468 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1442, file: !35, line: 3766, baseType: !1065, size: 64, align: 64, offset: 640)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1442, file: !35, line: 3774, baseType: !1065, size: 64, align: 64, offset: 704)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1442, file: !35, line: 3780, baseType: !937, size: 32, align: 32, offset: 768)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1442, file: !35, line: 3785, baseType: !937, size: 32, align: 32, offset: 800)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1442, file: !35, line: 3795, baseType: !1474, size: 64, align: 64, offset: 832)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64, align: 64)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{!937, !965, !1141}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !967, file: !35, line: 2728, baseType: !983, size: 64, align: 64, offset: 5440)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !967, file: !35, line: 2735, baseType: !1194, size: 512, align: 64, offset: 5504)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !967, file: !35, line: 2742, baseType: !937, size: 32, align: 32, offset: 6016)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !967, file: !35, line: 2755, baseType: !937, size: 32, align: 32, offset: 6048)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !967, file: !35, line: 2776, baseType: !937, size: 32, align: 32, offset: 6080)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !967, file: !35, line: 2783, baseType: !937, size: 32, align: 32, offset: 6112)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !967, file: !35, line: 2791, baseType: !937, size: 32, align: 32, offset: 6144)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !967, file: !35, line: 2802, baseType: !1270, size: 64, align: 64, offset: 6208)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !967, file: !35, line: 2811, baseType: !937, size: 32, align: 32, offset: 6272)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !967, file: !35, line: 2821, baseType: !937, size: 32, align: 32, offset: 6304)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !967, file: !35, line: 2830, baseType: !937, size: 32, align: 32, offset: 6336)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !967, file: !35, line: 2840, baseType: !937, size: 32, align: 32, offset: 6368)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !967, file: !35, line: 2851, baseType: !1490, size: 64, align: 64, offset: 6400)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64, align: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!937, !1310, !1493, !983, !1252, !937, !937}
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 64, align: 64)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!937, !1310, !983}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !967, file: !35, line: 2871, baseType: !1497, size: 64, align: 64, offset: 6464)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64, align: 64)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!937, !1310, !1500, !983, !1252, !937}
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64, align: 64)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!937, !1310, !983, !937, !937}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !967, file: !35, line: 2878, baseType: !937, size: 32, align: 32, offset: 6528)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !967, file: !35, line: 2885, baseType: !937, size: 32, align: 32, offset: 6560)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !967, file: !35, line: 3005, baseType: !937, size: 32, align: 32, offset: 6592)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !967, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !967, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !967, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !967, file: !35, line: 3037, baseType: !1088, size: 64, align: 64, offset: 6720)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !967, file: !35, line: 3038, baseType: !937, size: 32, align: 32, offset: 6784)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !967, file: !35, line: 3050, baseType: !1046, size: 64, align: 64, offset: 6848)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !967, file: !35, line: 3065, baseType: !937, size: 32, align: 32, offset: 6912)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !967, file: !35, line: 3083, baseType: !937, size: 32, align: 32, offset: 6944)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !967, file: !35, line: 3092, baseType: !1029, size: 64, align: 32, offset: 6976)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !967, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !967, file: !35, line: 3106, baseType: !1029, size: 64, align: 32, offset: 7072)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !967, file: !35, line: 3113, baseType: !1518, size: 64, align: 64, offset: 7168)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64, align: 64)
!1519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1520)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !1522)
!1522 = !{!1523, !1524, !1525, !1526, !1527, !1528, !1531}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1521, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1521, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1521, file: !35, line: 720, baseType: !976, size: 64, align: 64, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1521, file: !35, line: 724, baseType: !976, size: 64, align: 64, offset: 128)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1521, file: !35, line: 728, baseType: !937, size: 32, align: 32, offset: 192)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1521, file: !35, line: 734, baseType: !1529, size: 64, align: 64, offset: 256)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64, align: 64)
!1530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1521, file: !35, line: 739, baseType: !1532, size: 64, align: 64, offset: 320)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64, align: 64)
!1533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1056)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !967, file: !35, line: 3129, baseType: !1130, size: 64, align: 64, offset: 7232)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !967, file: !35, line: 3130, baseType: !1130, size: 64, align: 64, offset: 7296)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !967, file: !35, line: 3131, baseType: !1130, size: 64, align: 64, offset: 7360)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !967, file: !35, line: 3132, baseType: !1130, size: 64, align: 64, offset: 7424)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !967, file: !35, line: 3139, baseType: !1126, size: 64, align: 64, offset: 7488)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !967, file: !35, line: 3147, baseType: !937, size: 32, align: 32, offset: 7552)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !967, file: !35, line: 3165, baseType: !937, size: 32, align: 32, offset: 7584)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !967, file: !35, line: 3172, baseType: !937, size: 32, align: 32, offset: 7616)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !967, file: !35, line: 3180, baseType: !937, size: 32, align: 32, offset: 7648)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !967, file: !35, line: 3191, baseType: !1346, size: 64, align: 64, offset: 7680)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !967, file: !35, line: 3199, baseType: !1088, size: 64, align: 64, offset: 7744)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !967, file: !35, line: 3207, baseType: !1126, size: 64, align: 64, offset: 7808)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !967, file: !35, line: 3214, baseType: !1096, size: 32, align: 32, offset: 7872)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !967, file: !35, line: 3224, baseType: !1159, size: 64, align: 64, offset: 7936)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !967, file: !35, line: 3225, baseType: !937, size: 32, align: 32, offset: 8000)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !967, file: !35, line: 3249, baseType: !1141, size: 64, align: 64, offset: 8064)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !967, file: !35, line: 3256, baseType: !937, size: 32, align: 32, offset: 8128)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !967, file: !35, line: 3271, baseType: !937, size: 32, align: 32, offset: 8160)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !967, file: !35, line: 3279, baseType: !1130, size: 64, align: 64, offset: 8192)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !967, file: !35, line: 3301, baseType: !1141, size: 64, align: 64, offset: 8256)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !967, file: !35, line: 3310, baseType: !937, size: 32, align: 32, offset: 8320)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !967, file: !35, line: 3337, baseType: !937, size: 32, align: 32, offset: 8352)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !967, file: !35, line: 3351, baseType: !937, size: 32, align: 32, offset: 8384)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !967, file: !35, line: 3359, baseType: !937, size: 32, align: 32, offset: 8416)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64, align: 64)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !1560, line: 41, baseType: !1561)
!1560 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !888, line: 88, size: 896, align: 64, elements: !1562)
!1562 = !{!1563, !1564, !1565, !1566, !1574, !1575, !1576, !1578, !1579, !1584, !1585, !1591, !1592, !1593, !1599, !1600, !1601}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1561, file: !888, line: 89, baseType: !937, size: 32, align: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1561, file: !888, line: 90, baseType: !937, size: 32, align: 32, offset: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1561, file: !888, line: 91, baseType: !1346, size: 64, align: 64, offset: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1561, file: !888, line: 92, baseType: !1567, size: 64, align: 64, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64, align: 64)
!1568 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !1560, line: 39, baseType: !1569)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !1560, line: 37, size: 64, align: 32, elements: !1570)
!1570 = !{!1571, !1573}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !1569, file: !1560, line: 38, baseType: !1572, size: 32, align: 32)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !1560, line: 35, baseType: !917)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1569, file: !1560, line: 38, baseType: !1572, size: 32, align: 32, offset: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1561, file: !888, line: 93, baseType: !937, size: 32, align: 32, offset: 192)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1561, file: !888, line: 94, baseType: !937, size: 32, align: 32, offset: 224)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1561, file: !888, line: 96, baseType: !1577, size: 64, align: 64, offset: 256)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64, align: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1561, file: !888, line: 97, baseType: !1577, size: 64, align: 64, offset: 320)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1561, file: !888, line: 101, baseType: !1580, size: 64, align: 64, offset: 384)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64, align: 64)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{null, !1583, !1567}
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64, align: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1561, file: !888, line: 106, baseType: !1580, size: 64, align: 64, offset: 448)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1561, file: !888, line: 107, baseType: !1586, size: 64, align: 64, offset: 512)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64, align: 64)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{null, !1583, !1577, !1589}
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64, align: 64)
!1590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1572)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1561, file: !888, line: 108, baseType: !1586, size: 64, align: 64, offset: 576)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1561, file: !888, line: 109, baseType: !1586, size: 64, align: 64, offset: 640)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1561, file: !888, line: 110, baseType: !1594, size: 64, align: 64, offset: 704)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64, align: 64)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{null, !1583, !1597, !1589}
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64, align: 64)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !888, line: 43, baseType: !917)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1561, file: !888, line: 111, baseType: !887, size: 32, align: 32, offset: 768)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1561, file: !888, line: 112, baseType: !893, size: 32, align: 32, offset: 800)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1561, file: !888, line: 113, baseType: !1602, size: 64, align: 64, offset: 832)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64, align: 64)
!1603 = !{}
!1604 = !DILocalVariable(name: "avctx", arg: 1, scope: !962, file: !906, line: 80, type: !965)
!1605 = !DIExpression()
!1606 = !DILocation(line: 80, column: 66, scope: !962)
!1607 = !DILocalVariable(name: "mdct_ctx", arg: 2, scope: !962, file: !906, line: 80, type: !1558)
!1608 = !DILocation(line: 80, column: 85, scope: !962)
!1609 = !DILocation(line: 82, column: 5, scope: !962)
!1610 = !DILocation(line: 83, column: 5, scope: !962)
!1611 = !DILocation(line: 86, column: 18, scope: !962)
!1612 = !DILocation(line: 86, column: 5, scope: !962)
!1613 = !DILocation(line: 87, column: 1, scope: !962)
!1614 = distinct !DISubprogram(name: "ff_atrac3p_init_wave_synth", scope: !906, file: !906, line: 97, type: !1615, isLocal: false, isDefinition: true, scopeLine: 98, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1603)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{null}
!1617 = !DILocalVariable(name: "i", scope: !1614, file: !906, line: 99, type: !937)
!1618 = !DILocation(line: 99, column: 9, scope: !1614)
!1619 = !DILocation(line: 102, column: 12, scope: !1620)
!1620 = distinct !DILexicalBlock(scope: !1614, file: !906, line: 102, column: 5)
!1621 = !DILocation(line: 102, column: 10, scope: !1620)
!1622 = !DILocation(line: 102, column: 17, scope: !1623)
!1623 = !DILexicalBlockFile(scope: !1624, file: !906, discriminator: 1)
!1624 = distinct !DILexicalBlock(scope: !1620, file: !906, line: 102, column: 5)
!1625 = !DILocation(line: 102, column: 19, scope: !1623)
!1626 = !DILocation(line: 102, column: 5, scope: !1623)
!1627 = !DILocation(line: 103, column: 32, scope: !1624)
!1628 = !DILocation(line: 103, column: 30, scope: !1624)
!1629 = !DILocation(line: 103, column: 34, scope: !1624)
!1630 = !DILocation(line: 103, column: 25, scope: !1624)
!1631 = !DILocation(line: 103, column: 20, scope: !1624)
!1632 = !DILocation(line: 103, column: 9, scope: !1624)
!1633 = !DILocation(line: 103, column: 23, scope: !1624)
!1634 = !DILocation(line: 102, column: 28, scope: !1635)
!1635 = !DILexicalBlockFile(scope: !1624, file: !906, discriminator: 2)
!1636 = !DILocation(line: 102, column: 5, scope: !1635)
!1637 = distinct !{!1637, !1638}
!1638 = !DILocation(line: 102, column: 5, scope: !1614)
!1639 = !DILocation(line: 106, column: 12, scope: !1640)
!1640 = distinct !DILexicalBlock(scope: !1614, file: !906, line: 106, column: 5)
!1641 = !DILocation(line: 106, column: 10, scope: !1640)
!1642 = !DILocation(line: 106, column: 17, scope: !1643)
!1643 = !DILexicalBlockFile(scope: !1644, file: !906, discriminator: 1)
!1644 = distinct !DILexicalBlock(scope: !1640, file: !906, line: 106, column: 5)
!1645 = !DILocation(line: 106, column: 19, scope: !1643)
!1646 = !DILocation(line: 106, column: 5, scope: !1643)
!1647 = !DILocation(line: 107, column: 41, scope: !1644)
!1648 = !DILocation(line: 107, column: 39, scope: !1644)
!1649 = !DILocation(line: 107, column: 43, scope: !1644)
!1650 = !DILocation(line: 107, column: 34, scope: !1644)
!1651 = !DILocation(line: 107, column: 32, scope: !1644)
!1652 = !DILocation(line: 107, column: 54, scope: !1644)
!1653 = !DILocation(line: 107, column: 26, scope: !1644)
!1654 = !DILocation(line: 107, column: 21, scope: !1644)
!1655 = !DILocation(line: 107, column: 9, scope: !1644)
!1656 = !DILocation(line: 107, column: 24, scope: !1644)
!1657 = !DILocation(line: 106, column: 27, scope: !1658)
!1658 = !DILexicalBlockFile(scope: !1644, file: !906, discriminator: 2)
!1659 = !DILocation(line: 106, column: 5, scope: !1658)
!1660 = distinct !{!1660, !1661}
!1661 = !DILocation(line: 106, column: 5, scope: !1614)
!1662 = !DILocation(line: 110, column: 12, scope: !1663)
!1663 = distinct !DILexicalBlock(scope: !1614, file: !906, line: 110, column: 5)
!1664 = !DILocation(line: 110, column: 10, scope: !1663)
!1665 = !DILocation(line: 110, column: 17, scope: !1666)
!1666 = !DILexicalBlockFile(scope: !1667, file: !906, discriminator: 1)
!1667 = distinct !DILexicalBlock(scope: !1663, file: !906, line: 110, column: 5)
!1668 = !DILocation(line: 110, column: 19, scope: !1666)
!1669 = !DILocation(line: 110, column: 5, scope: !1666)
!1670 = !DILocation(line: 111, column: 32, scope: !1667)
!1671 = !DILocation(line: 111, column: 34, scope: !1667)
!1672 = !DILocation(line: 111, column: 31, scope: !1667)
!1673 = !DILocation(line: 111, column: 39, scope: !1667)
!1674 = !DILocation(line: 111, column: 25, scope: !1667)
!1675 = !DILocation(line: 111, column: 20, scope: !1667)
!1676 = !DILocation(line: 111, column: 9, scope: !1667)
!1677 = !DILocation(line: 111, column: 23, scope: !1667)
!1678 = !DILocation(line: 110, column: 26, scope: !1679)
!1679 = !DILexicalBlockFile(scope: !1667, file: !906, discriminator: 2)
!1680 = !DILocation(line: 110, column: 5, scope: !1679)
!1681 = distinct !{!1681, !1682}
!1682 = !DILocation(line: 110, column: 5, scope: !1614)
!1683 = !DILocation(line: 112, column: 1, scope: !1614)
!1684 = distinct !DISubprogram(name: "ff_atrac3p_generate_tones", scope: !906, file: !906, line: 184, type: !1685, isLocal: false, isDefinition: true, scopeLine: 186, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1603)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{null, !1687, !1810, !937, !937, !1819}
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64, align: 64)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pChanUnitCtx", file: !898, line: 154, baseType: !1689)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pChanUnitCtx", file: !898, line: 131, size: 295168, align: 256, elements: !1690)
!1690 = !{!1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1703, !1704, !1770, !1793, !1795, !1796, !1807}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "unit_type", scope: !1689, file: !898, line: 133, baseType: !937, size: 32, align: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "num_quant_units", scope: !1689, file: !898, line: 134, baseType: !937, size: 32, align: 32, offset: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "num_subbands", scope: !1689, file: !898, line: 135, baseType: !937, size: 32, align: 32, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "used_quant_units", scope: !1689, file: !898, line: 136, baseType: !937, size: 32, align: 32, offset: 96)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "num_coded_subbands", scope: !1689, file: !898, line: 137, baseType: !937, size: 32, align: 32, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "mute_flag", scope: !1689, file: !898, line: 138, baseType: !937, size: 32, align: 32, offset: 160)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "use_full_table", scope: !1689, file: !898, line: 139, baseType: !937, size: 32, align: 32, offset: 192)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "noise_present", scope: !1689, file: !898, line: 140, baseType: !937, size: 32, align: 32, offset: 224)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "noise_level_index", scope: !1689, file: !898, line: 141, baseType: !937, size: 32, align: 32, offset: 256)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "noise_table_index", scope: !1689, file: !898, line: 142, baseType: !937, size: 32, align: 32, offset: 288)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "swap_channels", scope: !1689, file: !898, line: 143, baseType: !1702, size: 128, align: 8, offset: 320)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 128, align: 8, elements: !938)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "negate_coeffs", scope: !1689, file: !898, line: 144, baseType: !1702, size: 128, align: 8, offset: 448)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1689, file: !898, line: 145, baseType: !1705, size: 124800, align: 64, offset: 576)
!1705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1706, size: 124800, align: 64, elements: !1769)
!1706 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pChanParams", file: !898, line: 116, baseType: !1707)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pChanParams", file: !898, line: 89, size: 62400, align: 64, elements: !1708)
!1708 = !{!1709, !1710, !1711, !1712, !1713, !1714, !1718, !1719, !1720, !1724, !1728, !1732, !1733, !1734, !1746, !1748, !1749, !1750, !1766, !1768}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "ch_num", scope: !1707, file: !898, line: 90, baseType: !937, size: 32, align: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "num_coded_vals", scope: !1707, file: !898, line: 91, baseType: !937, size: 32, align: 32, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "fill_mode", scope: !1707, file: !898, line: 92, baseType: !937, size: 32, align: 32, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "split_point", scope: !1707, file: !898, line: 93, baseType: !937, size: 32, align: 32, offset: 96)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "table_type", scope: !1707, file: !898, line: 94, baseType: !937, size: 32, align: 32, offset: 128)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "qu_wordlen", scope: !1707, file: !898, line: 95, baseType: !1715, size: 1024, align: 32, offset: 160)
!1715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !937, size: 1024, align: 32, elements: !1716)
!1716 = !{!1717}
!1717 = !DISubrange(count: 32)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "qu_sf_idx", scope: !1707, file: !898, line: 96, baseType: !1715, size: 1024, align: 32, offset: 1184)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "qu_tab_idx", scope: !1707, file: !898, line: 97, baseType: !1715, size: 1024, align: 32, offset: 2208)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "spectrum", scope: !1707, file: !898, line: 98, baseType: !1721, size: 32768, align: 16, offset: 3232)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1722, size: 32768, align: 16, elements: !926)
!1722 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !910, line: 37, baseType: !1723)
!1723 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "power_levs", scope: !1707, file: !898, line: 99, baseType: !1725, size: 40, align: 8, offset: 36000)
!1725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 40, align: 8, elements: !1726)
!1726 = !{!1727}
!1727 = !DISubrange(count: 5)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "wnd_shape_hist", scope: !1707, file: !898, line: 102, baseType: !1729, size: 256, align: 8, offset: 36040)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1049, size: 256, align: 8, elements: !1730)
!1730 = !{!1731, !939}
!1731 = !DISubrange(count: 2)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "wnd_shape", scope: !1707, file: !898, line: 103, baseType: !1088, size: 64, align: 64, offset: 36352)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "wnd_shape_prev", scope: !1707, file: !898, line: 104, baseType: !1088, size: 64, align: 64, offset: 36416)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "gain_data_hist", scope: !1707, file: !898, line: 107, baseType: !1735, size: 15360, align: 32, offset: 36480)
!1735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1736, size: 15360, align: 32, elements: !1730)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "AtracGainInfo", file: !1737, line: 39, baseType: !1738)
!1737 = !DIFile(filename: "libavcodec/atrac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AtracGainInfo", file: !1737, line: 35, size: 480, align: 32, elements: !1739)
!1739 = !{!1740, !1741, !1745}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "num_points", scope: !1738, file: !1737, line: 36, baseType: !937, size: 32, align: 32)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "lev_code", scope: !1738, file: !1737, line: 37, baseType: !1742, size: 224, align: 32, offset: 32)
!1742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !937, size: 224, align: 32, elements: !1743)
!1743 = !{!1744}
!1744 = !DISubrange(count: 7)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "loc_code", scope: !1738, file: !1737, line: 38, baseType: !1742, size: 224, align: 32, offset: 256)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "gain_data", scope: !1707, file: !898, line: 108, baseType: !1747, size: 64, align: 64, offset: 51840)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64, align: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "gain_data_prev", scope: !1707, file: !898, line: 109, baseType: !1747, size: 64, align: 64, offset: 51904)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "num_gain_subbands", scope: !1707, file: !898, line: 110, baseType: !937, size: 32, align: 32, offset: 51968)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "tones_info_hist", scope: !1707, file: !898, line: 113, baseType: !1751, size: 10240, align: 32, offset: 52000)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1752, size: 10240, align: 32, elements: !1730)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pWavesData", file: !898, line: 78, baseType: !1753)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pWavesData", file: !898, line: 73, size: 320, align: 32, elements: !1754)
!1754 = !{!1755, !1763, !1764, !1765}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "pend_env", scope: !1753, file: !898, line: 74, baseType: !1756, size: 128, align: 32)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pWaveEnvelope", file: !898, line: 70, baseType: !1757)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pWaveEnvelope", file: !898, line: 65, size: 128, align: 32, elements: !1758)
!1758 = !{!1759, !1760, !1761, !1762}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "has_start_point", scope: !1757, file: !898, line: 66, baseType: !937, size: 32, align: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "has_stop_point", scope: !1757, file: !898, line: 67, baseType: !937, size: 32, align: 32, offset: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "start_pos", scope: !1757, file: !898, line: 68, baseType: !937, size: 32, align: 32, offset: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "stop_pos", scope: !1757, file: !898, line: 69, baseType: !937, size: 32, align: 32, offset: 96)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "curr_env", scope: !1753, file: !898, line: 75, baseType: !1756, size: 128, align: 32, offset: 128)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "num_wavs", scope: !1753, file: !898, line: 76, baseType: !937, size: 32, align: 32, offset: 256)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "start_index", scope: !1753, file: !898, line: 77, baseType: !937, size: 32, align: 32, offset: 288)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "tones_info", scope: !1707, file: !898, line: 114, baseType: !1767, size: 64, align: 64, offset: 62272)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64, align: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "tones_info_prev", scope: !1707, file: !898, line: 115, baseType: !1767, size: 64, align: 64, offset: 62336)
!1769 = !{!1731}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "wave_synth_hist", scope: !1689, file: !898, line: 148, baseType: !1771, size: 13312, align: 32, offset: 125376)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1772, size: 13312, align: 32, elements: !1769)
!1772 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pWaveSynthParams", file: !898, line: 128, baseType: !1773)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pWaveSynthParams", file: !898, line: 119, size: 6656, align: 32, elements: !1774)
!1774 = !{!1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "tones_present", scope: !1773, file: !898, line: 120, baseType: !937, size: 32, align: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude_mode", scope: !1773, file: !898, line: 121, baseType: !937, size: 32, align: 32, offset: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "num_tone_bands", scope: !1773, file: !898, line: 122, baseType: !937, size: 32, align: 32, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "tone_sharing", scope: !1773, file: !898, line: 123, baseType: !1702, size: 128, align: 8, offset: 96)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "tone_master", scope: !1773, file: !898, line: 124, baseType: !1702, size: 128, align: 8, offset: 224)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "invert_phase", scope: !1773, file: !898, line: 125, baseType: !1702, size: 128, align: 8, offset: 352)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "tones_index", scope: !1773, file: !898, line: 126, baseType: !937, size: 32, align: 32, offset: 480)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "waves", scope: !1773, file: !898, line: 127, baseType: !1783, size: 6144, align: 32, offset: 512)
!1783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1784, size: 6144, align: 32, elements: !1791)
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pWaveParam", file: !898, line: 86, baseType: !1785)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pWaveParam", file: !898, line: 81, size: 128, align: 32, elements: !1786)
!1786 = !{!1787, !1788, !1789, !1790}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "freq_index", scope: !1785, file: !898, line: 82, baseType: !937, size: 32, align: 32)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "amp_sf", scope: !1785, file: !898, line: 83, baseType: !937, size: 32, align: 32, offset: 32)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "amp_index", scope: !1785, file: !898, line: 84, baseType: !937, size: 32, align: 32, offset: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "phase_index", scope: !1785, file: !898, line: 85, baseType: !937, size: 32, align: 32, offset: 96)
!1791 = !{!1792}
!1792 = !DISubrange(count: 48)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "waves_info", scope: !1689, file: !898, line: 149, baseType: !1794, size: 64, align: 64, offset: 138688)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64, align: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "waves_info_prev", scope: !1689, file: !898, line: 150, baseType: !1794, size: 64, align: 64, offset: 138752)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ipqf_ctx", scope: !1689, file: !898, line: 152, baseType: !1797, size: 25088, align: 256, offset: 139008)
!1797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1798, size: 25088, align: 256, elements: !1769)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "Atrac3pIPQFChannelCtx", file: !898, line: 62, baseType: !1799)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Atrac3pIPQFChannelCtx", file: !898, line: 58, size: 12544, align: 256, elements: !1800)
!1800 = !{!1801, !1805, !1806}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "buf1", scope: !1799, file: !898, line: 59, baseType: !1802, size: 6144, align: 32)
!1802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 6144, align: 32, elements: !1803)
!1803 = !{!1804, !923}
!1804 = !DISubrange(count: 24)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "buf2", scope: !1799, file: !898, line: 60, baseType: !1802, size: 6144, align: 32, offset: 6144)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1799, file: !898, line: 61, baseType: !937, size: 32, align: 32, offset: 12288)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "prev_buf", scope: !1689, file: !898, line: 153, baseType: !1808, size: 131072, align: 32, offset: 164096)
!1808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 131072, align: 32, elements: !1809)
!1809 = !{!1731, !927}
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64, align: 64)
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1812, line: 192, baseType: !1813)
!1812 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1812, line: 24, size: 704, align: 64, elements: !1814)
!1814 = !{!1815, !1821, !1825, !1833, !1834, !1835, !1839, !1840, !1841, !1846, !1850}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1813, file: !1812, line: 38, baseType: !1816, size: 64, align: 64)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64, align: 64)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{null, !1819, !1820, !1820, !937}
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64, align: 64)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64, align: 64)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1813, file: !1812, line: 54, baseType: !1822, size: 64, align: 64, offset: 64)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64, align: 64)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{null, !1819, !1820, !917, !937}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1813, file: !1812, line: 70, baseType: !1826, size: 64, align: 64, offset: 128)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64, align: 64)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{null, !1829, !1831, !1830, !937}
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64, align: 64)
!1830 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64, align: 64)
!1832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1830)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1813, file: !1812, line: 85, baseType: !1822, size: 64, align: 64, offset: 192)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1813, file: !1812, line: 100, baseType: !1826, size: 64, align: 64, offset: 256)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1813, file: !1812, line: 119, baseType: !1836, size: 64, align: 64, offset: 320)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64, align: 64)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{null, !1819, !1820, !1820, !1820, !937}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1813, file: !1812, line: 137, baseType: !1836, size: 64, align: 64, offset: 384)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1813, file: !1812, line: 154, baseType: !1816, size: 64, align: 64, offset: 448)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1813, file: !1812, line: 164, baseType: !1842, size: 64, align: 64, offset: 512)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64, align: 64)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{null, !1845, !1845, !937}
!1845 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1819)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1813, file: !1812, line: 175, baseType: !1847, size: 64, align: 64, offset: 576)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64, align: 64)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{!917, !1820, !1820, !937}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1813, file: !1812, line: 190, baseType: !1851, size: 64, align: 64, offset: 640)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64, align: 64)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{null, !1829, !1831, !1831, !937}
!1854 = !DILocalVariable(name: "ch_unit", arg: 1, scope: !1684, file: !906, line: 184, type: !1687)
!1855 = !DILocation(line: 184, column: 52, scope: !1684)
!1856 = !DILocalVariable(name: "fdsp", arg: 2, scope: !1684, file: !906, line: 184, type: !1810)
!1857 = !DILocation(line: 184, column: 80, scope: !1684)
!1858 = !DILocalVariable(name: "ch_num", arg: 3, scope: !1684, file: !906, line: 185, type: !937)
!1859 = !DILocation(line: 185, column: 36, scope: !1684)
!1860 = !DILocalVariable(name: "sb", arg: 4, scope: !1684, file: !906, line: 185, type: !937)
!1861 = !DILocation(line: 185, column: 48, scope: !1684)
!1862 = !DILocalVariable(name: "out", arg: 5, scope: !1684, file: !906, line: 185, type: !1819)
!1863 = !DILocation(line: 185, column: 59, scope: !1684)
!1864 = !DILocalVariable(name: "wavreg1", scope: !1684, file: !906, line: 187, type: !1865)
!1865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 4096, align: 32, elements: !1866)
!1866 = !{!1867}
!1867 = !DISubrange(count: 128)
!1868 = !DILocation(line: 187, column: 42, scope: !1684)
!1869 = !DILocalVariable(name: "wavreg2", scope: !1684, file: !906, line: 188, type: !1865)
!1870 = !DILocation(line: 188, column: 42, scope: !1684)
!1871 = !DILocalVariable(name: "i", scope: !1684, file: !906, line: 189, type: !937)
!1872 = !DILocation(line: 189, column: 9, scope: !1684)
!1873 = !DILocalVariable(name: "reg1_env_nonzero", scope: !1684, file: !906, line: 189, type: !937)
!1874 = !DILocation(line: 189, column: 12, scope: !1684)
!1875 = !DILocalVariable(name: "reg2_env_nonzero", scope: !1684, file: !906, line: 189, type: !937)
!1876 = !DILocation(line: 189, column: 30, scope: !1684)
!1877 = !DILocalVariable(name: "tones_now", scope: !1684, file: !906, line: 190, type: !1767)
!1878 = !DILocation(line: 190, column: 23, scope: !1684)
!1879 = !DILocation(line: 190, column: 78, scope: !1684)
!1880 = !DILocation(line: 190, column: 36, scope: !1684)
!1881 = !DILocation(line: 190, column: 54, scope: !1684)
!1882 = !DILocation(line: 190, column: 45, scope: !1684)
!1883 = !DILocation(line: 190, column: 62, scope: !1684)
!1884 = !DILocalVariable(name: "tones_next", scope: !1684, file: !906, line: 191, type: !1767)
!1885 = !DILocation(line: 191, column: 23, scope: !1684)
!1886 = !DILocation(line: 191, column: 74, scope: !1684)
!1887 = !DILocation(line: 191, column: 37, scope: !1684)
!1888 = !DILocation(line: 191, column: 55, scope: !1684)
!1889 = !DILocation(line: 191, column: 46, scope: !1684)
!1890 = !DILocation(line: 191, column: 63, scope: !1684)
!1891 = !DILocation(line: 195, column: 9, scope: !1892)
!1892 = distinct !DILexicalBlock(scope: !1684, file: !906, line: 195, column: 9)
!1893 = !DILocation(line: 195, column: 21, scope: !1892)
!1894 = !DILocation(line: 195, column: 30, scope: !1892)
!1895 = !DILocation(line: 195, column: 46, scope: !1892)
!1896 = !DILocation(line: 196, column: 9, scope: !1892)
!1897 = !DILocation(line: 196, column: 21, scope: !1892)
!1898 = !DILocation(line: 196, column: 30, scope: !1892)
!1899 = !DILocation(line: 196, column: 42, scope: !1892)
!1900 = !DILocation(line: 196, column: 54, scope: !1892)
!1901 = !DILocation(line: 196, column: 63, scope: !1892)
!1902 = !DILocation(line: 196, column: 40, scope: !1892)
!1903 = !DILocation(line: 195, column: 9, scope: !1904)
!1904 = !DILexicalBlockFile(scope: !1684, file: !906, discriminator: 1)
!1905 = !DILocation(line: 197, column: 9, scope: !1906)
!1906 = distinct !DILexicalBlock(scope: !1892, file: !906, line: 196, column: 73)
!1907 = !DILocation(line: 197, column: 21, scope: !1906)
!1908 = !DILocation(line: 197, column: 30, scope: !1906)
!1909 = !DILocation(line: 197, column: 46, scope: !1906)
!1910 = !DILocation(line: 198, column: 42, scope: !1906)
!1911 = !DILocation(line: 198, column: 54, scope: !1906)
!1912 = !DILocation(line: 198, column: 63, scope: !1906)
!1913 = !DILocation(line: 198, column: 73, scope: !1906)
!1914 = !DILocation(line: 198, column: 9, scope: !1906)
!1915 = !DILocation(line: 198, column: 21, scope: !1906)
!1916 = !DILocation(line: 198, column: 30, scope: !1906)
!1917 = !DILocation(line: 198, column: 40, scope: !1906)
!1918 = !DILocation(line: 199, column: 5, scope: !1906)
!1919 = !DILocation(line: 199, column: 16, scope: !1920)
!1920 = !DILexicalBlockFile(scope: !1921, file: !906, discriminator: 1)
!1921 = distinct !DILexicalBlock(scope: !1892, file: !906, line: 199, column: 16)
!1922 = !DILocation(line: 199, column: 27, scope: !1920)
!1923 = !DILocation(line: 199, column: 36, scope: !1920)
!1924 = !DILocation(line: 200, column: 9, scope: !1925)
!1925 = distinct !DILexicalBlock(scope: !1921, file: !906, line: 199, column: 53)
!1926 = !DILocation(line: 200, column: 21, scope: !1925)
!1927 = !DILocation(line: 200, column: 30, scope: !1925)
!1928 = !DILocation(line: 200, column: 46, scope: !1925)
!1929 = !DILocation(line: 201, column: 42, scope: !1925)
!1930 = !DILocation(line: 201, column: 53, scope: !1925)
!1931 = !DILocation(line: 201, column: 62, scope: !1925)
!1932 = !DILocation(line: 201, column: 9, scope: !1925)
!1933 = !DILocation(line: 201, column: 21, scope: !1925)
!1934 = !DILocation(line: 201, column: 30, scope: !1925)
!1935 = !DILocation(line: 201, column: 40, scope: !1925)
!1936 = !DILocation(line: 202, column: 5, scope: !1925)
!1937 = !DILocation(line: 203, column: 9, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1921, file: !906, line: 202, column: 12)
!1939 = !DILocation(line: 203, column: 21, scope: !1938)
!1940 = !DILocation(line: 203, column: 30, scope: !1938)
!1941 = !DILocation(line: 203, column: 46, scope: !1938)
!1942 = !DILocation(line: 204, column: 9, scope: !1938)
!1943 = !DILocation(line: 204, column: 21, scope: !1938)
!1944 = !DILocation(line: 204, column: 30, scope: !1938)
!1945 = !DILocation(line: 204, column: 40, scope: !1938)
!1946 = !DILocation(line: 207, column: 9, scope: !1947)
!1947 = distinct !DILexicalBlock(scope: !1684, file: !906, line: 207, column: 9)
!1948 = !DILocation(line: 207, column: 20, scope: !1947)
!1949 = !DILocation(line: 207, column: 29, scope: !1947)
!1950 = !DILocation(line: 207, column: 44, scope: !1947)
!1951 = !DILocation(line: 208, column: 9, scope: !1947)
!1952 = !DILocation(line: 208, column: 20, scope: !1947)
!1953 = !DILocation(line: 208, column: 29, scope: !1947)
!1954 = !DILocation(line: 208, column: 41, scope: !1947)
!1955 = !DILocation(line: 208, column: 53, scope: !1947)
!1956 = !DILocation(line: 208, column: 62, scope: !1947)
!1957 = !DILocation(line: 208, column: 38, scope: !1947)
!1958 = !DILocation(line: 207, column: 9, scope: !1904)
!1959 = !DILocation(line: 209, column: 9, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1947, file: !906, line: 208, column: 73)
!1961 = !DILocation(line: 209, column: 21, scope: !1960)
!1962 = !DILocation(line: 209, column: 30, scope: !1960)
!1963 = !DILocation(line: 209, column: 45, scope: !1960)
!1964 = !DILocation(line: 210, column: 41, scope: !1960)
!1965 = !DILocation(line: 210, column: 52, scope: !1960)
!1966 = !DILocation(line: 210, column: 61, scope: !1960)
!1967 = !DILocation(line: 210, column: 9, scope: !1960)
!1968 = !DILocation(line: 210, column: 21, scope: !1960)
!1969 = !DILocation(line: 210, column: 30, scope: !1960)
!1970 = !DILocation(line: 210, column: 39, scope: !1960)
!1971 = !DILocation(line: 211, column: 5, scope: !1960)
!1972 = !DILocation(line: 211, column: 16, scope: !1973)
!1973 = !DILexicalBlockFile(scope: !1974, file: !906, discriminator: 1)
!1974 = distinct !DILexicalBlock(scope: !1947, file: !906, line: 211, column: 16)
!1975 = !DILocation(line: 211, column: 28, scope: !1973)
!1976 = !DILocation(line: 211, column: 37, scope: !1973)
!1977 = !DILocation(line: 212, column: 9, scope: !1978)
!1978 = distinct !DILexicalBlock(scope: !1974, file: !906, line: 211, column: 53)
!1979 = !DILocation(line: 212, column: 21, scope: !1978)
!1980 = !DILocation(line: 212, column: 30, scope: !1978)
!1981 = !DILocation(line: 212, column: 45, scope: !1978)
!1982 = !DILocation(line: 213, column: 41, scope: !1978)
!1983 = !DILocation(line: 213, column: 53, scope: !1978)
!1984 = !DILocation(line: 213, column: 62, scope: !1978)
!1985 = !DILocation(line: 213, column: 71, scope: !1978)
!1986 = !DILocation(line: 213, column: 9, scope: !1978)
!1987 = !DILocation(line: 213, column: 21, scope: !1978)
!1988 = !DILocation(line: 213, column: 30, scope: !1978)
!1989 = !DILocation(line: 213, column: 39, scope: !1978)
!1990 = !DILocation(line: 214, column: 5, scope: !1978)
!1991 = !DILocation(line: 215, column: 9, scope: !1992)
!1992 = distinct !DILexicalBlock(scope: !1974, file: !906, line: 214, column: 12)
!1993 = !DILocation(line: 215, column: 21, scope: !1992)
!1994 = !DILocation(line: 215, column: 30, scope: !1992)
!1995 = !DILocation(line: 215, column: 45, scope: !1992)
!1996 = !DILocation(line: 216, column: 9, scope: !1992)
!1997 = !DILocation(line: 216, column: 21, scope: !1992)
!1998 = !DILocation(line: 216, column: 30, scope: !1992)
!1999 = !DILocation(line: 216, column: 39, scope: !1992)
!2000 = !DILocation(line: 220, column: 25, scope: !1684)
!2001 = !DILocation(line: 220, column: 36, scope: !1684)
!2002 = !DILocation(line: 220, column: 45, scope: !1684)
!2003 = !DILocation(line: 220, column: 54, scope: !1684)
!2004 = !DILocation(line: 220, column: 24, scope: !1684)
!2005 = !DILocation(line: 220, column: 22, scope: !1684)
!2006 = !DILocation(line: 221, column: 25, scope: !1684)
!2007 = !DILocation(line: 221, column: 37, scope: !1684)
!2008 = !DILocation(line: 221, column: 46, scope: !1684)
!2009 = !DILocation(line: 221, column: 56, scope: !1684)
!2010 = !DILocation(line: 221, column: 24, scope: !1684)
!2011 = !DILocation(line: 221, column: 22, scope: !1684)
!2012 = !DILocation(line: 224, column: 9, scope: !2013)
!2013 = distinct !DILexicalBlock(scope: !1684, file: !906, line: 224, column: 9)
!2014 = !DILocation(line: 224, column: 20, scope: !2013)
!2015 = !DILocation(line: 224, column: 29, scope: !2013)
!2016 = !DILocation(line: 224, column: 32, scope: !2017)
!2017 = !DILexicalBlockFile(scope: !2013, file: !906, discriminator: 1)
!2018 = !DILocation(line: 224, column: 9, scope: !2017)
!2019 = !DILocation(line: 225, column: 21, scope: !2013)
!2020 = !DILocation(line: 225, column: 30, scope: !2013)
!2021 = !DILocation(line: 225, column: 47, scope: !2013)
!2022 = !DILocation(line: 225, column: 59, scope: !2013)
!2023 = !DILocation(line: 225, column: 70, scope: !2013)
!2024 = !DILocation(line: 226, column: 21, scope: !2013)
!2025 = !DILocation(line: 226, column: 66, scope: !2013)
!2026 = !DILocation(line: 226, column: 27, scope: !2013)
!2027 = !DILocation(line: 226, column: 36, scope: !2013)
!2028 = !DILocation(line: 226, column: 53, scope: !2013)
!2029 = !DILocation(line: 226, column: 72, scope: !2013)
!2030 = !DILocation(line: 226, column: 70, scope: !2013)
!2031 = !DILocation(line: 227, column: 26, scope: !2013)
!2032 = !DILocation(line: 225, column: 9, scope: !2013)
!2033 = !DILocation(line: 229, column: 9, scope: !2034)
!2034 = distinct !DILexicalBlock(scope: !1684, file: !906, line: 229, column: 9)
!2035 = !DILocation(line: 229, column: 21, scope: !2034)
!2036 = !DILocation(line: 229, column: 30, scope: !2034)
!2037 = !DILocation(line: 229, column: 33, scope: !2038)
!2038 = !DILexicalBlockFile(scope: !2034, file: !906, discriminator: 1)
!2039 = !DILocation(line: 229, column: 9, scope: !2038)
!2040 = !DILocation(line: 230, column: 21, scope: !2034)
!2041 = !DILocation(line: 230, column: 30, scope: !2034)
!2042 = !DILocation(line: 230, column: 42, scope: !2034)
!2043 = !DILocation(line: 230, column: 55, scope: !2034)
!2044 = !DILocation(line: 230, column: 67, scope: !2034)
!2045 = !DILocation(line: 230, column: 77, scope: !2034)
!2046 = !DILocation(line: 231, column: 55, scope: !2034)
!2047 = !DILocation(line: 231, column: 21, scope: !2034)
!2048 = !DILocation(line: 231, column: 30, scope: !2034)
!2049 = !DILocation(line: 231, column: 42, scope: !2034)
!2050 = !DILocation(line: 231, column: 61, scope: !2034)
!2051 = !DILocation(line: 231, column: 59, scope: !2034)
!2052 = !DILocation(line: 231, column: 72, scope: !2034)
!2053 = !DILocation(line: 230, column: 9, scope: !2034)
!2054 = !DILocation(line: 234, column: 9, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !1684, file: !906, line: 234, column: 9)
!2056 = !DILocation(line: 234, column: 20, scope: !2055)
!2057 = !DILocation(line: 234, column: 29, scope: !2055)
!2058 = !DILocation(line: 234, column: 32, scope: !2059)
!2059 = !DILexicalBlockFile(scope: !2055, file: !906, discriminator: 1)
!2060 = !DILocation(line: 234, column: 44, scope: !2059)
!2061 = !DILocation(line: 234, column: 53, scope: !2059)
!2062 = !DILocation(line: 235, column: 9, scope: !2055)
!2063 = !DILocation(line: 235, column: 26, scope: !2055)
!2064 = !DILocation(line: 235, column: 29, scope: !2059)
!2065 = !DILocation(line: 234, column: 9, scope: !2066)
!2066 = !DILexicalBlockFile(scope: !1684, file: !906, discriminator: 2)
!2067 = !DILocation(line: 236, column: 9, scope: !2068)
!2068 = distinct !DILexicalBlock(scope: !2055, file: !906, line: 235, column: 47)
!2069 = !DILocation(line: 236, column: 15, scope: !2068)
!2070 = !DILocation(line: 236, column: 27, scope: !2068)
!2071 = !DILocation(line: 236, column: 36, scope: !2068)
!2072 = !DILocation(line: 237, column: 9, scope: !2068)
!2073 = !DILocation(line: 237, column: 15, scope: !2068)
!2074 = !DILocation(line: 237, column: 27, scope: !2068)
!2075 = !DILocation(line: 237, column: 36, scope: !2068)
!2076 = !DILocation(line: 238, column: 5, scope: !2068)
!2077 = !DILocation(line: 239, column: 13, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !2079, file: !906, line: 239, column: 13)
!2079 = distinct !DILexicalBlock(scope: !2055, file: !906, line: 238, column: 12)
!2080 = !DILocation(line: 239, column: 24, scope: !2078)
!2081 = !DILocation(line: 239, column: 33, scope: !2078)
!2082 = !DILocation(line: 239, column: 37, scope: !2083)
!2083 = !DILexicalBlockFile(scope: !2078, file: !906, discriminator: 1)
!2084 = !DILocation(line: 239, column: 48, scope: !2083)
!2085 = !DILocation(line: 239, column: 57, scope: !2083)
!2086 = !DILocation(line: 239, column: 13, scope: !2083)
!2087 = !DILocation(line: 240, column: 13, scope: !2078)
!2088 = !DILocation(line: 240, column: 19, scope: !2078)
!2089 = !DILocation(line: 240, column: 31, scope: !2078)
!2090 = !DILocation(line: 240, column: 40, scope: !2078)
!2091 = !DILocation(line: 242, column: 13, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !2079, file: !906, line: 242, column: 13)
!2093 = !DILocation(line: 242, column: 25, scope: !2092)
!2094 = !DILocation(line: 242, column: 34, scope: !2092)
!2095 = !DILocation(line: 242, column: 38, scope: !2096)
!2096 = !DILexicalBlockFile(scope: !2092, file: !906, discriminator: 1)
!2097 = !DILocation(line: 242, column: 50, scope: !2096)
!2098 = !DILocation(line: 242, column: 59, scope: !2096)
!2099 = !DILocation(line: 242, column: 13, scope: !2096)
!2100 = !DILocation(line: 243, column: 13, scope: !2092)
!2101 = !DILocation(line: 243, column: 19, scope: !2092)
!2102 = !DILocation(line: 243, column: 31, scope: !2092)
!2103 = !DILocation(line: 243, column: 40, scope: !2092)
!2104 = !DILocation(line: 247, column: 12, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !1684, file: !906, line: 247, column: 5)
!2106 = !DILocation(line: 247, column: 10, scope: !2105)
!2107 = !DILocation(line: 247, column: 17, scope: !2108)
!2108 = !DILexicalBlockFile(scope: !2109, file: !906, discriminator: 1)
!2109 = distinct !DILexicalBlock(scope: !2105, file: !906, line: 247, column: 5)
!2110 = !DILocation(line: 247, column: 19, scope: !2108)
!2111 = !DILocation(line: 247, column: 5, scope: !2108)
!2112 = !DILocation(line: 248, column: 27, scope: !2109)
!2113 = !DILocation(line: 248, column: 19, scope: !2109)
!2114 = !DILocation(line: 248, column: 40, scope: !2109)
!2115 = !DILocation(line: 248, column: 32, scope: !2109)
!2116 = !DILocation(line: 248, column: 30, scope: !2109)
!2117 = !DILocation(line: 248, column: 13, scope: !2109)
!2118 = !DILocation(line: 248, column: 9, scope: !2109)
!2119 = !DILocation(line: 248, column: 16, scope: !2109)
!2120 = !DILocation(line: 247, column: 27, scope: !2121)
!2121 = !DILexicalBlockFile(scope: !2109, file: !906, discriminator: 2)
!2122 = !DILocation(line: 247, column: 5, scope: !2121)
!2123 = distinct !{!2123, !2124}
!2124 = !DILocation(line: 247, column: 5, scope: !1684)
!2125 = !DILocation(line: 249, column: 1, scope: !1684)
!2126 = distinct !DISubprogram(name: "waves_synth", scope: !906, file: !906, line: 125, type: !2127, isLocal: true, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1603)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{null, !1794, !1767, !2129, !1810, !937, !937, !1819}
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64, align: 64)
!2130 = !DILocalVariable(name: "synth_param", arg: 1, scope: !2126, file: !906, line: 125, type: !1794)
!2131 = !DILocation(line: 125, column: 49, scope: !2126)
!2132 = !DILocalVariable(name: "waves_info", arg: 2, scope: !2126, file: !906, line: 126, type: !1767)
!2133 = !DILocation(line: 126, column: 43, scope: !2126)
!2134 = !DILocalVariable(name: "envelope", arg: 3, scope: !2126, file: !906, line: 127, type: !2129)
!2135 = !DILocation(line: 127, column: 46, scope: !2126)
!2136 = !DILocalVariable(name: "fdsp", arg: 4, scope: !2126, file: !906, line: 128, type: !1810)
!2137 = !DILocation(line: 128, column: 44, scope: !2126)
!2138 = !DILocalVariable(name: "invert_phase", arg: 5, scope: !2126, file: !906, line: 129, type: !937)
!2139 = !DILocation(line: 129, column: 29, scope: !2126)
!2140 = !DILocalVariable(name: "reg_offset", arg: 6, scope: !2126, file: !906, line: 129, type: !937)
!2141 = !DILocation(line: 129, column: 47, scope: !2126)
!2142 = !DILocalVariable(name: "out", arg: 7, scope: !2126, file: !906, line: 129, type: !1819)
!2143 = !DILocation(line: 129, column: 66, scope: !2126)
!2144 = !DILocalVariable(name: "i", scope: !2126, file: !906, line: 131, type: !937)
!2145 = !DILocation(line: 131, column: 9, scope: !2126)
!2146 = !DILocalVariable(name: "wn", scope: !2126, file: !906, line: 131, type: !937)
!2147 = !DILocation(line: 131, column: 12, scope: !2126)
!2148 = !DILocalVariable(name: "inc", scope: !2126, file: !906, line: 131, type: !937)
!2149 = !DILocation(line: 131, column: 16, scope: !2126)
!2150 = !DILocalVariable(name: "pos", scope: !2126, file: !906, line: 131, type: !937)
!2151 = !DILocation(line: 131, column: 21, scope: !2126)
!2152 = !DILocalVariable(name: "amp", scope: !2126, file: !906, line: 132, type: !1830)
!2153 = !DILocation(line: 132, column: 12, scope: !2126)
!2154 = !DILocalVariable(name: "wave_param", scope: !2126, file: !906, line: 133, type: !2155)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64, align: 64)
!2156 = !DILocation(line: 133, column: 23, scope: !2126)
!2157 = !DILocation(line: 133, column: 56, scope: !2126)
!2158 = !DILocation(line: 133, column: 68, scope: !2126)
!2159 = !DILocation(line: 133, column: 37, scope: !2126)
!2160 = !DILocation(line: 133, column: 50, scope: !2126)
!2161 = !DILocation(line: 135, column: 13, scope: !2162)
!2162 = distinct !DILexicalBlock(scope: !2126, file: !906, line: 135, column: 5)
!2163 = !DILocation(line: 135, column: 10, scope: !2162)
!2164 = !DILocation(line: 135, column: 18, scope: !2165)
!2165 = !DILexicalBlockFile(scope: !2166, file: !906, discriminator: 1)
!2166 = distinct !DILexicalBlock(scope: !2162, file: !906, line: 135, column: 5)
!2167 = !DILocation(line: 135, column: 23, scope: !2165)
!2168 = !DILocation(line: 135, column: 35, scope: !2165)
!2169 = !DILocation(line: 135, column: 21, scope: !2165)
!2170 = !DILocation(line: 135, column: 5, scope: !2165)
!2171 = !DILocation(line: 137, column: 26, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2166, file: !906, line: 135, column: 65)
!2173 = !DILocation(line: 137, column: 38, scope: !2172)
!2174 = !DILocation(line: 137, column: 15, scope: !2172)
!2175 = !DILocation(line: 138, column: 17, scope: !2172)
!2176 = !DILocation(line: 138, column: 30, scope: !2172)
!2177 = !DILocation(line: 138, column: 16, scope: !2172)
!2178 = !DILocation(line: 139, column: 19, scope: !2172)
!2179 = !DILocation(line: 139, column: 31, scope: !2172)
!2180 = !DILocation(line: 139, column: 41, scope: !2172)
!2181 = !DILocation(line: 139, column: 18, scope: !2172)
!2182 = !DILocation(line: 139, column: 46, scope: !2172)
!2183 = !DILocation(line: 138, column: 16, scope: !2184)
!2184 = !DILexicalBlockFile(scope: !2172, file: !906, discriminator: 1)
!2185 = !DILocation(line: 138, column: 16, scope: !2186)
!2186 = !DILexicalBlockFile(scope: !2172, file: !906, discriminator: 2)
!2187 = !DILocation(line: 138, column: 16, scope: !2188)
!2188 = !DILexicalBlockFile(scope: !2172, file: !906, discriminator: 3)
!2189 = !DILocation(line: 137, column: 46, scope: !2184)
!2190 = !DILocation(line: 137, column: 15, scope: !2184)
!2191 = !DILocation(line: 137, column: 13, scope: !2184)
!2192 = !DILocation(line: 142, column: 15, scope: !2172)
!2193 = !DILocation(line: 142, column: 27, scope: !2172)
!2194 = !DILocation(line: 142, column: 13, scope: !2172)
!2195 = !DILocation(line: 143, column: 18, scope: !2172)
!2196 = !DILocation(line: 143, column: 30, scope: !2172)
!2197 = !DILocation(line: 143, column: 43, scope: !2172)
!2198 = !DILocation(line: 143, column: 51, scope: !2172)
!2199 = !DILocation(line: 143, column: 60, scope: !2172)
!2200 = !DILocation(line: 143, column: 71, scope: !2172)
!2201 = !DILocation(line: 143, column: 80, scope: !2172)
!2202 = !DILocation(line: 143, column: 78, scope: !2172)
!2203 = !DILocation(line: 143, column: 57, scope: !2172)
!2204 = !DILocation(line: 143, column: 84, scope: !2172)
!2205 = !DILocation(line: 143, column: 13, scope: !2172)
!2206 = !DILocation(line: 146, column: 16, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2172, file: !906, line: 146, column: 9)
!2208 = !DILocation(line: 146, column: 14, scope: !2207)
!2209 = !DILocation(line: 146, column: 21, scope: !2210)
!2210 = !DILexicalBlockFile(scope: !2211, file: !906, discriminator: 1)
!2211 = distinct !DILexicalBlock(scope: !2207, file: !906, line: 146, column: 9)
!2212 = !DILocation(line: 146, column: 23, scope: !2210)
!2213 = !DILocation(line: 146, column: 9, scope: !2210)
!2214 = !DILocation(line: 147, column: 34, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !2211, file: !906, line: 146, column: 35)
!2216 = !DILocation(line: 147, column: 23, scope: !2215)
!2217 = !DILocation(line: 147, column: 41, scope: !2215)
!2218 = !DILocation(line: 147, column: 39, scope: !2215)
!2219 = !DILocation(line: 147, column: 17, scope: !2215)
!2220 = !DILocation(line: 147, column: 13, scope: !2215)
!2221 = !DILocation(line: 147, column: 20, scope: !2215)
!2222 = !DILocation(line: 148, column: 20, scope: !2215)
!2223 = !DILocation(line: 148, column: 26, scope: !2215)
!2224 = !DILocation(line: 148, column: 24, scope: !2215)
!2225 = !DILocation(line: 148, column: 31, scope: !2215)
!2226 = !DILocation(line: 148, column: 17, scope: !2215)
!2227 = !DILocation(line: 149, column: 9, scope: !2215)
!2228 = !DILocation(line: 146, column: 31, scope: !2229)
!2229 = !DILexicalBlockFile(scope: !2211, file: !906, discriminator: 2)
!2230 = !DILocation(line: 146, column: 9, scope: !2229)
!2231 = distinct !{!2231, !2232}
!2232 = !DILocation(line: 146, column: 9, scope: !2172)
!2233 = !DILocation(line: 150, column: 5, scope: !2172)
!2234 = !DILocation(line: 135, column: 47, scope: !2235)
!2235 = !DILexicalBlockFile(scope: !2166, file: !906, discriminator: 2)
!2236 = !DILocation(line: 135, column: 61, scope: !2235)
!2237 = !DILocation(line: 135, column: 5, scope: !2235)
!2238 = distinct !{!2238, !2239}
!2239 = !DILocation(line: 135, column: 5, scope: !2126)
!2240 = !DILocation(line: 153, column: 9, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2126, file: !906, line: 153, column: 9)
!2242 = !DILocation(line: 153, column: 9, scope: !2126)
!2243 = !DILocation(line: 154, column: 9, scope: !2241)
!2244 = !DILocation(line: 154, column: 15, scope: !2241)
!2245 = !DILocation(line: 154, column: 34, scope: !2241)
!2246 = !DILocation(line: 154, column: 39, scope: !2241)
!2247 = !DILocation(line: 157, column: 9, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2126, file: !906, line: 157, column: 9)
!2249 = !DILocation(line: 157, column: 19, scope: !2248)
!2250 = !DILocation(line: 157, column: 9, scope: !2126)
!2251 = !DILocation(line: 158, column: 16, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !2248, file: !906, line: 157, column: 36)
!2253 = !DILocation(line: 158, column: 26, scope: !2252)
!2254 = !DILocation(line: 158, column: 36, scope: !2252)
!2255 = !DILocation(line: 158, column: 44, scope: !2252)
!2256 = !DILocation(line: 158, column: 42, scope: !2252)
!2257 = !DILocation(line: 158, column: 13, scope: !2252)
!2258 = !DILocation(line: 159, column: 13, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !2252, file: !906, line: 159, column: 13)
!2260 = !DILocation(line: 159, column: 17, scope: !2259)
!2261 = !DILocation(line: 159, column: 21, scope: !2259)
!2262 = !DILocation(line: 159, column: 24, scope: !2263)
!2263 = !DILexicalBlockFile(scope: !2259, file: !906, discriminator: 1)
!2264 = !DILocation(line: 159, column: 28, scope: !2263)
!2265 = !DILocation(line: 159, column: 13, scope: !2263)
!2266 = !DILocation(line: 160, column: 20, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2259, file: !906, line: 159, column: 36)
!2268 = !DILocation(line: 160, column: 13, scope: !2267)
!2269 = !DILocation(line: 160, column: 28, scope: !2267)
!2270 = !DILocation(line: 160, column: 32, scope: !2267)
!2271 = !DILocation(line: 161, column: 18, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2267, file: !906, line: 161, column: 17)
!2273 = !DILocation(line: 161, column: 28, scope: !2272)
!2274 = !DILocation(line: 161, column: 43, scope: !2272)
!2275 = !DILocation(line: 162, column: 17, scope: !2272)
!2276 = !DILocation(line: 162, column: 27, scope: !2272)
!2277 = !DILocation(line: 162, column: 40, scope: !2272)
!2278 = !DILocation(line: 162, column: 50, scope: !2272)
!2279 = !DILocation(line: 162, column: 37, scope: !2272)
!2280 = !DILocation(line: 161, column: 17, scope: !2281)
!2281 = !DILexicalBlockFile(scope: !2267, file: !906, discriminator: 1)
!2282 = !DILocation(line: 163, column: 33, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2272, file: !906, line: 162, column: 60)
!2284 = !DILocation(line: 163, column: 21, scope: !2283)
!2285 = !DILocation(line: 163, column: 25, scope: !2283)
!2286 = !DILocation(line: 163, column: 17, scope: !2283)
!2287 = !DILocation(line: 163, column: 30, scope: !2283)
!2288 = !DILocation(line: 164, column: 33, scope: !2283)
!2289 = !DILocation(line: 164, column: 21, scope: !2283)
!2290 = !DILocation(line: 164, column: 25, scope: !2283)
!2291 = !DILocation(line: 164, column: 17, scope: !2283)
!2292 = !DILocation(line: 164, column: 30, scope: !2283)
!2293 = !DILocation(line: 165, column: 33, scope: !2283)
!2294 = !DILocation(line: 165, column: 21, scope: !2283)
!2295 = !DILocation(line: 165, column: 25, scope: !2283)
!2296 = !DILocation(line: 165, column: 17, scope: !2283)
!2297 = !DILocation(line: 165, column: 30, scope: !2283)
!2298 = !DILocation(line: 166, column: 33, scope: !2283)
!2299 = !DILocation(line: 166, column: 21, scope: !2283)
!2300 = !DILocation(line: 166, column: 25, scope: !2283)
!2301 = !DILocation(line: 166, column: 17, scope: !2283)
!2302 = !DILocation(line: 166, column: 30, scope: !2283)
!2303 = !DILocation(line: 167, column: 13, scope: !2283)
!2304 = !DILocation(line: 168, column: 9, scope: !2267)
!2305 = !DILocation(line: 169, column: 5, scope: !2252)
!2306 = !DILocation(line: 172, column: 9, scope: !2307)
!2307 = distinct !DILexicalBlock(scope: !2126, file: !906, line: 172, column: 9)
!2308 = !DILocation(line: 172, column: 19, scope: !2307)
!2309 = !DILocation(line: 172, column: 9, scope: !2126)
!2310 = !DILocation(line: 173, column: 16, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !2307, file: !906, line: 172, column: 35)
!2312 = !DILocation(line: 173, column: 26, scope: !2311)
!2313 = !DILocation(line: 173, column: 35, scope: !2311)
!2314 = !DILocation(line: 173, column: 39, scope: !2311)
!2315 = !DILocation(line: 173, column: 47, scope: !2311)
!2316 = !DILocation(line: 173, column: 45, scope: !2311)
!2317 = !DILocation(line: 173, column: 13, scope: !2311)
!2318 = !DILocation(line: 174, column: 13, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !2311, file: !906, line: 174, column: 13)
!2320 = !DILocation(line: 174, column: 17, scope: !2319)
!2321 = !DILocation(line: 174, column: 21, scope: !2319)
!2322 = !DILocation(line: 174, column: 24, scope: !2323)
!2323 = !DILexicalBlockFile(scope: !2319, file: !906, discriminator: 1)
!2324 = !DILocation(line: 174, column: 28, scope: !2323)
!2325 = !DILocation(line: 174, column: 13, scope: !2323)
!2326 = !DILocation(line: 175, column: 29, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2319, file: !906, line: 174, column: 36)
!2328 = !DILocation(line: 175, column: 17, scope: !2327)
!2329 = !DILocation(line: 175, column: 21, scope: !2327)
!2330 = !DILocation(line: 175, column: 13, scope: !2327)
!2331 = !DILocation(line: 175, column: 26, scope: !2327)
!2332 = !DILocation(line: 176, column: 29, scope: !2327)
!2333 = !DILocation(line: 176, column: 17, scope: !2327)
!2334 = !DILocation(line: 176, column: 21, scope: !2327)
!2335 = !DILocation(line: 176, column: 13, scope: !2327)
!2336 = !DILocation(line: 176, column: 26, scope: !2327)
!2337 = !DILocation(line: 177, column: 29, scope: !2327)
!2338 = !DILocation(line: 177, column: 17, scope: !2327)
!2339 = !DILocation(line: 177, column: 21, scope: !2327)
!2340 = !DILocation(line: 177, column: 13, scope: !2327)
!2341 = !DILocation(line: 177, column: 26, scope: !2327)
!2342 = !DILocation(line: 178, column: 29, scope: !2327)
!2343 = !DILocation(line: 178, column: 17, scope: !2327)
!2344 = !DILocation(line: 178, column: 21, scope: !2327)
!2345 = !DILocation(line: 178, column: 13, scope: !2327)
!2346 = !DILocation(line: 178, column: 26, scope: !2327)
!2347 = !DILocation(line: 179, column: 25, scope: !2327)
!2348 = !DILocation(line: 179, column: 21, scope: !2327)
!2349 = !DILocation(line: 179, column: 13, scope: !2327)
!2350 = !DILocation(line: 179, column: 41, scope: !2327)
!2351 = !DILocation(line: 179, column: 39, scope: !2327)
!2352 = !DILocation(line: 179, column: 34, scope: !2327)
!2353 = !DILocation(line: 179, column: 46, scope: !2327)
!2354 = !DILocation(line: 180, column: 9, scope: !2327)
!2355 = !DILocation(line: 181, column: 5, scope: !2311)
!2356 = !DILocation(line: 182, column: 1, scope: !2126)
!2357 = distinct !DISubprogram(name: "ff_atrac3p_power_compensation", scope: !906, file: !906, line: 418, type: !2358, isLocal: false, isDefinition: true, scopeLine: 420, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1603)
!2358 = !DISubroutineType(types: !2359)
!2359 = !{null, !1687, !1810, !937, !1819, !937, !937}
!2360 = !DILocalVariable(name: "ctx", arg: 1, scope: !2357, file: !906, line: 418, type: !1687)
!2361 = !DILocation(line: 418, column: 56, scope: !2357)
!2362 = !DILocalVariable(name: "fdsp", arg: 2, scope: !2357, file: !906, line: 418, type: !1810)
!2363 = !DILocation(line: 418, column: 80, scope: !2357)
!2364 = !DILocalVariable(name: "ch_index", arg: 3, scope: !2357, file: !906, line: 419, type: !937)
!2365 = !DILocation(line: 419, column: 40, scope: !2357)
!2366 = !DILocalVariable(name: "sp", arg: 4, scope: !2357, file: !906, line: 419, type: !1819)
!2367 = !DILocation(line: 419, column: 57, scope: !2357)
!2368 = !DILocalVariable(name: "rng_index", arg: 5, scope: !2357, file: !906, line: 419, type: !937)
!2369 = !DILocation(line: 419, column: 65, scope: !2357)
!2370 = !DILocalVariable(name: "sb", arg: 6, scope: !2357, file: !906, line: 419, type: !937)
!2371 = !DILocation(line: 419, column: 80, scope: !2357)
!2372 = !DILocalVariable(name: "g1", scope: !2357, file: !906, line: 421, type: !1747)
!2373 = !DILocation(line: 421, column: 20, scope: !2357)
!2374 = !DILocalVariable(name: "g2", scope: !2357, file: !906, line: 421, type: !1747)
!2375 = !DILocation(line: 421, column: 25, scope: !2357)
!2376 = !DILocalVariable(name: "la_pwcsp", scope: !2357, file: !906, line: 422, type: !1865)
!2377 = !DILocation(line: 422, column: 42, scope: !2357)
!2378 = !DILocalVariable(name: "pwcsp", scope: !2357, file: !906, line: 422, type: !1819)
!2379 = !DILocation(line: 422, column: 67, scope: !2357)
!2380 = !DILocation(line: 422, column: 76, scope: !2357)
!2381 = !DILocalVariable(name: "dst", scope: !2357, file: !906, line: 423, type: !1819)
!2382 = !DILocation(line: 423, column: 12, scope: !2357)
!2383 = !DILocalVariable(name: "grp_lev", scope: !2357, file: !906, line: 423, type: !917)
!2384 = !DILocation(line: 423, column: 17, scope: !2357)
!2385 = !DILocalVariable(name: "qu_lev", scope: !2357, file: !906, line: 423, type: !917)
!2386 = !DILocation(line: 423, column: 26, scope: !2357)
!2387 = !DILocalVariable(name: "i", scope: !2357, file: !906, line: 424, type: !937)
!2388 = !DILocation(line: 424, column: 9, scope: !2357)
!2389 = !DILocalVariable(name: "gain_lev", scope: !2357, file: !906, line: 424, type: !937)
!2390 = !DILocation(line: 424, column: 12, scope: !2357)
!2391 = !DILocalVariable(name: "gcv", scope: !2357, file: !906, line: 424, type: !937)
!2392 = !DILocation(line: 424, column: 22, scope: !2357)
!2393 = !DILocalVariable(name: "qu", scope: !2357, file: !906, line: 424, type: !937)
!2394 = !DILocation(line: 424, column: 31, scope: !2357)
!2395 = !DILocalVariable(name: "nsp", scope: !2357, file: !906, line: 424, type: !937)
!2396 = !DILocation(line: 424, column: 35, scope: !2357)
!2397 = !DILocalVariable(name: "swap_ch", scope: !2357, file: !906, line: 425, type: !937)
!2398 = !DILocation(line: 425, column: 9, scope: !2357)
!2399 = !DILocation(line: 425, column: 20, scope: !2357)
!2400 = !DILocation(line: 425, column: 25, scope: !2357)
!2401 = !DILocation(line: 425, column: 35, scope: !2357)
!2402 = !DILocation(line: 425, column: 53, scope: !2357)
!2403 = !DILocation(line: 425, column: 75, scope: !2404)
!2404 = !DILexicalBlockFile(scope: !2357, file: !906, discriminator: 1)
!2405 = !DILocation(line: 425, column: 56, scope: !2404)
!2406 = !DILocation(line: 425, column: 61, scope: !2404)
!2407 = !DILocation(line: 425, column: 53, scope: !2404)
!2408 = !DILocation(line: 425, column: 19, scope: !2409)
!2409 = !DILexicalBlockFile(scope: !2357, file: !906, discriminator: 2)
!2410 = !DILocation(line: 425, column: 9, scope: !2409)
!2411 = !DILocation(line: 427, column: 72, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2357, file: !906, line: 427, column: 9)
!2413 = !DILocation(line: 427, column: 54, scope: !2412)
!2414 = !DILocation(line: 427, column: 9, scope: !2412)
!2415 = !DILocation(line: 427, column: 23, scope: !2412)
!2416 = !DILocation(line: 427, column: 34, scope: !2412)
!2417 = !DILocation(line: 427, column: 32, scope: !2412)
!2418 = !DILocation(line: 427, column: 14, scope: !2412)
!2419 = !DILocation(line: 427, column: 43, scope: !2412)
!2420 = !DILocation(line: 427, column: 77, scope: !2412)
!2421 = !DILocation(line: 427, column: 9, scope: !2357)
!2422 = !DILocation(line: 428, column: 9, scope: !2412)
!2423 = !DILocation(line: 431, column: 12, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2357, file: !906, line: 431, column: 5)
!2425 = !DILocation(line: 431, column: 10, scope: !2424)
!2426 = !DILocation(line: 431, column: 17, scope: !2427)
!2427 = !DILexicalBlockFile(scope: !2428, file: !906, discriminator: 1)
!2428 = distinct !DILexicalBlock(scope: !2424, file: !906, line: 431, column: 5)
!2429 = !DILocation(line: 431, column: 19, scope: !2427)
!2430 = !DILocation(line: 431, column: 5, scope: !2427)
!2431 = !DILocation(line: 432, column: 30, scope: !2428)
!2432 = !DILocation(line: 432, column: 40, scope: !2428)
!2433 = !DILocation(line: 432, column: 20, scope: !2428)
!2434 = !DILocation(line: 432, column: 15, scope: !2428)
!2435 = !DILocation(line: 432, column: 9, scope: !2428)
!2436 = !DILocation(line: 432, column: 18, scope: !2428)
!2437 = !DILocation(line: 431, column: 27, scope: !2438)
!2438 = !DILexicalBlockFile(scope: !2428, file: !906, discriminator: 2)
!2439 = !DILocation(line: 431, column: 40, scope: !2438)
!2440 = !DILocation(line: 431, column: 5, scope: !2438)
!2441 = distinct !{!2441, !2442}
!2442 = !DILocation(line: 431, column: 5, scope: !2357)
!2443 = !DILocation(line: 435, column: 55, scope: !2357)
!2444 = !DILocation(line: 435, column: 11, scope: !2357)
!2445 = !DILocation(line: 435, column: 25, scope: !2357)
!2446 = !DILocation(line: 435, column: 36, scope: !2357)
!2447 = !DILocation(line: 435, column: 34, scope: !2357)
!2448 = !DILocation(line: 435, column: 16, scope: !2357)
!2449 = !DILocation(line: 435, column: 45, scope: !2357)
!2450 = !DILocation(line: 435, column: 8, scope: !2357)
!2451 = !DILocation(line: 436, column: 60, scope: !2357)
!2452 = !DILocation(line: 436, column: 11, scope: !2357)
!2453 = !DILocation(line: 436, column: 25, scope: !2357)
!2454 = !DILocation(line: 436, column: 36, scope: !2357)
!2455 = !DILocation(line: 436, column: 34, scope: !2357)
!2456 = !DILocation(line: 436, column: 16, scope: !2357)
!2457 = !DILocation(line: 436, column: 45, scope: !2357)
!2458 = !DILocation(line: 436, column: 8, scope: !2357)
!2459 = !DILocation(line: 438, column: 17, scope: !2357)
!2460 = !DILocation(line: 438, column: 21, scope: !2357)
!2461 = !DILocation(line: 438, column: 32, scope: !2357)
!2462 = !DILocation(line: 438, column: 16, scope: !2357)
!2463 = !DILocation(line: 438, column: 44, scope: !2404)
!2464 = !DILocation(line: 438, column: 48, scope: !2404)
!2465 = !DILocation(line: 438, column: 42, scope: !2404)
!2466 = !DILocation(line: 438, column: 16, scope: !2404)
!2467 = !DILocation(line: 438, column: 16, scope: !2409)
!2468 = !DILocation(line: 438, column: 16, scope: !2469)
!2469 = !DILexicalBlockFile(scope: !2357, file: !906, discriminator: 3)
!2470 = !DILocation(line: 438, column: 14, scope: !2469)
!2471 = !DILocation(line: 440, column: 12, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2357, file: !906, line: 440, column: 5)
!2473 = !DILocation(line: 440, column: 10, scope: !2472)
!2474 = !DILocation(line: 440, column: 17, scope: !2475)
!2475 = !DILexicalBlockFile(scope: !2476, file: !906, discriminator: 1)
!2476 = distinct !DILexicalBlock(scope: !2472, file: !906, line: 440, column: 5)
!2477 = !DILocation(line: 440, column: 21, scope: !2475)
!2478 = !DILocation(line: 440, column: 25, scope: !2475)
!2479 = !DILocation(line: 440, column: 19, scope: !2475)
!2480 = !DILocation(line: 440, column: 5, scope: !2475)
!2481 = !DILocation(line: 441, column: 17, scope: !2476)
!2482 = !DILocation(line: 441, column: 25, scope: !2476)
!2483 = !DILocation(line: 441, column: 50, scope: !2476)
!2484 = !DILocation(line: 441, column: 37, scope: !2476)
!2485 = !DILocation(line: 441, column: 41, scope: !2476)
!2486 = !DILocation(line: 441, column: 53, scope: !2476)
!2487 = !DILocation(line: 441, column: 34, scope: !2476)
!2488 = !DILocation(line: 441, column: 22, scope: !2476)
!2489 = !DILocation(line: 441, column: 16, scope: !2476)
!2490 = !DILocation(line: 441, column: 62, scope: !2475)
!2491 = !DILocation(line: 441, column: 16, scope: !2475)
!2492 = !DILocation(line: 441, column: 70, scope: !2493)
!2493 = !DILexicalBlockFile(scope: !2476, file: !906, discriminator: 2)
!2494 = !DILocation(line: 441, column: 95, scope: !2493)
!2495 = !DILocation(line: 441, column: 82, scope: !2493)
!2496 = !DILocation(line: 441, column: 86, scope: !2493)
!2497 = !DILocation(line: 441, column: 98, scope: !2493)
!2498 = !DILocation(line: 441, column: 79, scope: !2493)
!2499 = !DILocation(line: 441, column: 16, scope: !2493)
!2500 = !DILocation(line: 441, column: 16, scope: !2501)
!2501 = !DILexicalBlockFile(scope: !2476, file: !906, discriminator: 3)
!2502 = !DILocation(line: 441, column: 13, scope: !2501)
!2503 = !DILocation(line: 441, column: 9, scope: !2501)
!2504 = !DILocation(line: 440, column: 38, scope: !2493)
!2505 = !DILocation(line: 440, column: 5, scope: !2493)
!2506 = distinct !{!2506, !2507}
!2507 = !DILocation(line: 440, column: 5, scope: !2357)
!2508 = !DILocation(line: 443, column: 12, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2357, file: !906, line: 443, column: 5)
!2510 = !DILocation(line: 443, column: 10, scope: !2509)
!2511 = !DILocation(line: 443, column: 17, scope: !2512)
!2512 = !DILexicalBlockFile(scope: !2513, file: !906, discriminator: 1)
!2513 = distinct !DILexicalBlock(scope: !2509, file: !906, line: 443, column: 5)
!2514 = !DILocation(line: 443, column: 21, scope: !2512)
!2515 = !DILocation(line: 443, column: 25, scope: !2512)
!2516 = !DILocation(line: 443, column: 19, scope: !2512)
!2517 = !DILocation(line: 443, column: 5, scope: !2512)
!2518 = !DILocation(line: 444, column: 17, scope: !2513)
!2519 = !DILocation(line: 444, column: 42, scope: !2513)
!2520 = !DILocation(line: 444, column: 29, scope: !2513)
!2521 = !DILocation(line: 444, column: 33, scope: !2513)
!2522 = !DILocation(line: 444, column: 27, scope: !2513)
!2523 = !DILocation(line: 444, column: 22, scope: !2513)
!2524 = !DILocation(line: 444, column: 16, scope: !2513)
!2525 = !DILocation(line: 444, column: 49, scope: !2512)
!2526 = !DILocation(line: 444, column: 16, scope: !2512)
!2527 = !DILocation(line: 444, column: 74, scope: !2528)
!2528 = !DILexicalBlockFile(scope: !2513, file: !906, discriminator: 2)
!2529 = !DILocation(line: 444, column: 61, scope: !2528)
!2530 = !DILocation(line: 444, column: 65, scope: !2528)
!2531 = !DILocation(line: 444, column: 59, scope: !2528)
!2532 = !DILocation(line: 444, column: 16, scope: !2528)
!2533 = !DILocation(line: 444, column: 16, scope: !2534)
!2534 = !DILexicalBlockFile(scope: !2513, file: !906, discriminator: 3)
!2535 = !DILocation(line: 444, column: 13, scope: !2534)
!2536 = !DILocation(line: 444, column: 9, scope: !2534)
!2537 = !DILocation(line: 443, column: 38, scope: !2528)
!2538 = !DILocation(line: 443, column: 5, scope: !2528)
!2539 = distinct !{!2539, !2540}
!2540 = !DILocation(line: 443, column: 5, scope: !2357)
!2541 = !DILocation(line: 446, column: 87, scope: !2357)
!2542 = !DILocation(line: 446, column: 69, scope: !2357)
!2543 = !DILocation(line: 446, column: 24, scope: !2357)
!2544 = !DILocation(line: 446, column: 38, scope: !2357)
!2545 = !DILocation(line: 446, column: 49, scope: !2357)
!2546 = !DILocation(line: 446, column: 47, scope: !2357)
!2547 = !DILocation(line: 446, column: 29, scope: !2357)
!2548 = !DILocation(line: 446, column: 58, scope: !2357)
!2549 = !DILocation(line: 446, column: 15, scope: !2357)
!2550 = !DILocation(line: 446, column: 101, scope: !2357)
!2551 = !DILocation(line: 446, column: 98, scope: !2357)
!2552 = !DILocation(line: 446, column: 95, scope: !2357)
!2553 = !DILocation(line: 446, column: 93, scope: !2357)
!2554 = !DILocation(line: 446, column: 13, scope: !2357)
!2555 = !DILocation(line: 449, column: 29, scope: !2556)
!2556 = distinct !DILexicalBlock(scope: !2357, file: !906, line: 449, column: 5)
!2557 = !DILocation(line: 449, column: 15, scope: !2556)
!2558 = !DILocation(line: 449, column: 37, scope: !2556)
!2559 = !DILocation(line: 449, column: 36, scope: !2556)
!2560 = !DILocation(line: 449, column: 33, scope: !2556)
!2561 = !DILocation(line: 449, column: 13, scope: !2556)
!2562 = !DILocation(line: 449, column: 10, scope: !2556)
!2563 = !DILocation(line: 449, column: 50, scope: !2564)
!2564 = !DILexicalBlockFile(scope: !2565, file: !906, discriminator: 1)
!2565 = distinct !DILexicalBlock(scope: !2556, file: !906, line: 449, column: 5)
!2566 = !DILocation(line: 449, column: 69, scope: !2564)
!2567 = !DILocation(line: 449, column: 72, scope: !2564)
!2568 = !DILocation(line: 449, column: 55, scope: !2564)
!2569 = !DILocation(line: 449, column: 53, scope: !2564)
!2570 = !DILocation(line: 449, column: 5, scope: !2564)
!2571 = !DILocation(line: 450, column: 48, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2573, file: !906, line: 450, column: 13)
!2573 = distinct !DILexicalBlock(scope: !2565, file: !906, line: 449, column: 84)
!2574 = !DILocation(line: 450, column: 13, scope: !2572)
!2575 = !DILocation(line: 450, column: 27, scope: !2572)
!2576 = !DILocation(line: 450, column: 18, scope: !2572)
!2577 = !DILocation(line: 450, column: 37, scope: !2572)
!2578 = !DILocation(line: 450, column: 52, scope: !2572)
!2579 = !DILocation(line: 450, column: 13, scope: !2573)
!2580 = !DILocation(line: 451, column: 13, scope: !2572)
!2581 = !DILocation(line: 453, column: 70, scope: !2573)
!2582 = !DILocation(line: 453, column: 36, scope: !2573)
!2583 = !DILocation(line: 453, column: 50, scope: !2573)
!2584 = !DILocation(line: 453, column: 41, scope: !2573)
!2585 = !DILocation(line: 453, column: 60, scope: !2573)
!2586 = !DILocation(line: 453, column: 18, scope: !2573)
!2587 = !DILocation(line: 454, column: 73, scope: !2573)
!2588 = !DILocation(line: 454, column: 38, scope: !2573)
!2589 = !DILocation(line: 454, column: 52, scope: !2573)
!2590 = !DILocation(line: 454, column: 43, scope: !2573)
!2591 = !DILocation(line: 454, column: 62, scope: !2573)
!2592 = !DILocation(line: 454, column: 18, scope: !2573)
!2593 = !DILocation(line: 453, column: 75, scope: !2573)
!2594 = !DILocation(line: 455, column: 59, scope: !2573)
!2595 = !DILocation(line: 455, column: 24, scope: !2573)
!2596 = !DILocation(line: 455, column: 38, scope: !2573)
!2597 = !DILocation(line: 455, column: 29, scope: !2573)
!2598 = !DILocation(line: 455, column: 48, scope: !2573)
!2599 = !DILocation(line: 455, column: 21, scope: !2573)
!2600 = !DILocation(line: 455, column: 18, scope: !2573)
!2601 = !DILocation(line: 454, column: 78, scope: !2573)
!2602 = !DILocation(line: 455, column: 66, scope: !2573)
!2603 = !DILocation(line: 455, column: 64, scope: !2573)
!2604 = !DILocation(line: 453, column: 16, scope: !2573)
!2605 = !DILocation(line: 457, column: 45, scope: !2573)
!2606 = !DILocation(line: 457, column: 19, scope: !2573)
!2607 = !DILocation(line: 457, column: 16, scope: !2573)
!2608 = !DILocation(line: 457, column: 13, scope: !2573)
!2609 = !DILocation(line: 458, column: 41, scope: !2573)
!2610 = !DILocation(line: 458, column: 44, scope: !2573)
!2611 = !DILocation(line: 458, column: 15, scope: !2573)
!2612 = !DILocation(line: 458, column: 77, scope: !2573)
!2613 = !DILocation(line: 458, column: 51, scope: !2573)
!2614 = !DILocation(line: 458, column: 49, scope: !2573)
!2615 = !DILocation(line: 458, column: 13, scope: !2573)
!2616 = !DILocation(line: 460, column: 9, scope: !2573)
!2617 = !DILocation(line: 460, column: 15, scope: !2573)
!2618 = !DILocation(line: 460, column: 34, scope: !2573)
!2619 = !DILocation(line: 460, column: 39, scope: !2573)
!2620 = !DILocation(line: 460, column: 46, scope: !2573)
!2621 = !DILocation(line: 460, column: 54, scope: !2573)
!2622 = !DILocation(line: 461, column: 5, scope: !2573)
!2623 = !DILocation(line: 449, column: 80, scope: !2624)
!2624 = !DILexicalBlockFile(scope: !2565, file: !906, discriminator: 2)
!2625 = !DILocation(line: 449, column: 5, scope: !2624)
!2626 = distinct !{!2626, !2627}
!2627 = !DILocation(line: 449, column: 5, scope: !2357)
!2628 = !DILocation(line: 462, column: 1, scope: !2357)
!2629 = distinct !DISubprogram(name: "ff_atrac3p_imdct", scope: !906, file: !906, line: 464, type: !2630, isLocal: false, isDefinition: true, scopeLine: 466, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1603)
!2630 = !DISubroutineType(types: !2631)
!2631 = !{null, !1810, !1558, !1819, !1819, !937, !937}
!2632 = !DILocalVariable(name: "fdsp", arg: 1, scope: !2629, file: !906, line: 464, type: !1810)
!2633 = !DILocation(line: 464, column: 42, scope: !2629)
!2634 = !DILocalVariable(name: "mdct_ctx", arg: 2, scope: !2629, file: !906, line: 464, type: !1558)
!2635 = !DILocation(line: 464, column: 60, scope: !2629)
!2636 = !DILocalVariable(name: "pIn", arg: 3, scope: !2629, file: !906, line: 464, type: !1819)
!2637 = !DILocation(line: 464, column: 77, scope: !2629)
!2638 = !DILocalVariable(name: "pOut", arg: 4, scope: !2629, file: !906, line: 465, type: !1819)
!2639 = !DILocation(line: 465, column: 30, scope: !2629)
!2640 = !DILocalVariable(name: "wind_id", arg: 5, scope: !2629, file: !906, line: 465, type: !937)
!2641 = !DILocation(line: 465, column: 40, scope: !2629)
!2642 = !DILocalVariable(name: "sb", arg: 6, scope: !2629, file: !906, line: 465, type: !937)
!2643 = !DILocation(line: 465, column: 53, scope: !2629)
!2644 = !DILocalVariable(name: "i", scope: !2629, file: !906, line: 467, type: !937)
!2645 = !DILocation(line: 467, column: 9, scope: !2629)
!2646 = !DILocation(line: 469, column: 9, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2629, file: !906, line: 469, column: 9)
!2648 = !DILocation(line: 469, column: 12, scope: !2647)
!2649 = !DILocation(line: 469, column: 9, scope: !2629)
!2650 = !DILocation(line: 470, column: 16, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2647, file: !906, line: 470, column: 9)
!2652 = !DILocation(line: 470, column: 14, scope: !2651)
!2653 = !DILocation(line: 470, column: 21, scope: !2654)
!2654 = !DILexicalBlockFile(scope: !2655, file: !906, discriminator: 1)
!2655 = distinct !DILexicalBlock(scope: !2651, file: !906, line: 470, column: 9)
!2656 = !DILocation(line: 470, column: 23, scope: !2654)
!2657 = !DILocation(line: 470, column: 9, scope: !2654)
!2658 = !DILocation(line: 471, column: 13, scope: !2655)
!2659 = distinct !{!2659, !2658}
!2660 = !DILocalVariable(name: "SWAP_tmp", scope: !2661, file: !906, line: 471, type: !917)
!2661 = distinct !DILexicalBlock(scope: !2655, file: !906, line: 471, column: 15)
!2662 = !DILocation(line: 471, column: 22, scope: !2661)
!2663 = !DILocation(line: 471, column: 46, scope: !2664)
!2664 = !DILexicalBlockFile(scope: !2661, file: !906, discriminator: 1)
!2665 = !DILocation(line: 471, column: 44, scope: !2664)
!2666 = !DILocation(line: 471, column: 32, scope: !2664)
!2667 = !DILocation(line: 471, column: 22, scope: !2664)
!2668 = !DILocation(line: 471, column: 72, scope: !2664)
!2669 = !DILocation(line: 471, column: 68, scope: !2664)
!2670 = !DILocation(line: 471, column: 64, scope: !2664)
!2671 = !DILocation(line: 471, column: 62, scope: !2664)
!2672 = !DILocation(line: 471, column: 50, scope: !2664)
!2673 = !DILocation(line: 471, column: 66, scope: !2664)
!2674 = !DILocation(line: 471, column: 84, scope: !2664)
!2675 = !DILocation(line: 471, column: 80, scope: !2664)
!2676 = !DILocation(line: 471, column: 76, scope: !2664)
!2677 = !DILocation(line: 471, column: 82, scope: !2664)
!2678 = !DILocation(line: 471, column: 93, scope: !2664)
!2679 = !DILocation(line: 471, column: 93, scope: !2680)
!2680 = !DILexicalBlockFile(scope: !2661, file: !906, discriminator: 2)
!2681 = !DILocation(line: 470, column: 35, scope: !2682)
!2682 = !DILexicalBlockFile(scope: !2655, file: !906, discriminator: 2)
!2683 = !DILocation(line: 470, column: 9, scope: !2682)
!2684 = distinct !{!2684, !2685}
!2685 = !DILocation(line: 470, column: 9, scope: !2647)
!2686 = !DILocation(line: 471, column: 101, scope: !2687)
!2687 = !DILexicalBlockFile(scope: !2651, file: !906, discriminator: 3)
!2688 = !DILocation(line: 473, column: 5, scope: !2629)
!2689 = !DILocation(line: 473, column: 15, scope: !2629)
!2690 = !DILocation(line: 473, column: 26, scope: !2629)
!2691 = !DILocation(line: 473, column: 36, scope: !2629)
!2692 = !DILocation(line: 473, column: 42, scope: !2629)
!2693 = !DILocation(line: 481, column: 9, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2629, file: !906, line: 481, column: 9)
!2695 = !DILocation(line: 481, column: 17, scope: !2694)
!2696 = !DILocation(line: 481, column: 9, scope: !2629)
!2697 = !DILocation(line: 482, column: 16, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2694, file: !906, line: 481, column: 22)
!2699 = !DILocation(line: 482, column: 9, scope: !2698)
!2700 = !DILocation(line: 483, column: 9, scope: !2698)
!2701 = !DILocation(line: 483, column: 15, scope: !2698)
!2702 = !DILocation(line: 483, column: 28, scope: !2698)
!2703 = !DILocation(line: 483, column: 39, scope: !2698)
!2704 = !DILocation(line: 484, column: 5, scope: !2698)
!2705 = !DILocation(line: 485, column: 9, scope: !2694)
!2706 = !DILocation(line: 485, column: 15, scope: !2694)
!2707 = !DILocation(line: 485, column: 27, scope: !2694)
!2708 = !DILocation(line: 485, column: 33, scope: !2694)
!2709 = !DILocation(line: 487, column: 9, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2629, file: !906, line: 487, column: 9)
!2711 = !DILocation(line: 487, column: 17, scope: !2710)
!2712 = !DILocation(line: 487, column: 9, scope: !2629)
!2713 = !DILocation(line: 488, column: 9, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2710, file: !906, line: 487, column: 22)
!2715 = !DILocation(line: 488, column: 15, scope: !2714)
!2716 = !DILocation(line: 488, column: 36, scope: !2714)
!2717 = !DILocation(line: 488, column: 48, scope: !2714)
!2718 = !DILocation(line: 489, column: 17, scope: !2714)
!2719 = !DILocation(line: 489, column: 9, scope: !2714)
!2720 = !DILocation(line: 490, column: 5, scope: !2714)
!2721 = !DILocation(line: 491, column: 9, scope: !2710)
!2722 = !DILocation(line: 491, column: 15, scope: !2710)
!2723 = !DILocation(line: 491, column: 36, scope: !2710)
!2724 = !DILocation(line: 491, column: 48, scope: !2710)
!2725 = !DILocation(line: 493, column: 1, scope: !2629)
!2726 = distinct !DISubprogram(name: "ff_atrac3p_ipqf", scope: !906, file: !906, line: 605, type: !2727, isLocal: false, isDefinition: true, scopeLine: 607, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1603)
!2727 = !DISubroutineType(types: !2728)
!2728 = !{null, !1558, !2729, !1820, !1819}
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64, align: 64)
!2730 = !DILocalVariable(name: "dct_ctx", arg: 1, scope: !2726, file: !906, line: 605, type: !1558)
!2731 = !DILocation(line: 605, column: 34, scope: !2726)
!2732 = !DILocalVariable(name: "hist", arg: 2, scope: !2726, file: !906, line: 605, type: !2729)
!2733 = !DILocation(line: 605, column: 66, scope: !2726)
!2734 = !DILocalVariable(name: "in", arg: 3, scope: !2726, file: !906, line: 606, type: !1820)
!2735 = !DILocation(line: 606, column: 35, scope: !2726)
!2736 = !DILocalVariable(name: "out", arg: 4, scope: !2726, file: !906, line: 606, type: !1819)
!2737 = !DILocation(line: 606, column: 46, scope: !2726)
!2738 = !DILocalVariable(name: "i", scope: !2726, file: !906, line: 608, type: !937)
!2739 = !DILocation(line: 608, column: 9, scope: !2726)
!2740 = !DILocalVariable(name: "s", scope: !2726, file: !906, line: 608, type: !937)
!2741 = !DILocation(line: 608, column: 12, scope: !2726)
!2742 = !DILocalVariable(name: "sb", scope: !2726, file: !906, line: 608, type: !937)
!2743 = !DILocation(line: 608, column: 15, scope: !2726)
!2744 = !DILocalVariable(name: "t", scope: !2726, file: !906, line: 608, type: !937)
!2745 = !DILocation(line: 608, column: 19, scope: !2726)
!2746 = !DILocalVariable(name: "pos_now", scope: !2726, file: !906, line: 608, type: !937)
!2747 = !DILocation(line: 608, column: 22, scope: !2726)
!2748 = !DILocalVariable(name: "pos_next", scope: !2726, file: !906, line: 608, type: !937)
!2749 = !DILocation(line: 608, column: 31, scope: !2726)
!2750 = !DILocalVariable(name: "la_idct_in", scope: !2726, file: !906, line: 609, type: !2751)
!2751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 512, align: 32, elements: !938)
!2752 = !DILocation(line: 609, column: 42, scope: !2726)
!2753 = !DILocalVariable(name: "idct_in", scope: !2726, file: !906, line: 609, type: !1819)
!2754 = !DILocation(line: 609, column: 68, scope: !2726)
!2755 = !DILocation(line: 609, column: 79, scope: !2726)
!2756 = !DILocalVariable(name: "la_idct_out", scope: !2726, file: !906, line: 610, type: !2751)
!2757 = !DILocation(line: 610, column: 42, scope: !2726)
!2758 = !DILocalVariable(name: "idct_out", scope: !2726, file: !906, line: 610, type: !1819)
!2759 = !DILocation(line: 610, column: 69, scope: !2726)
!2760 = !DILocation(line: 610, column: 81, scope: !2726)
!2761 = !DILocation(line: 612, column: 12, scope: !2726)
!2762 = !DILocation(line: 612, column: 5, scope: !2726)
!2763 = !DILocation(line: 614, column: 12, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2726, file: !906, line: 614, column: 5)
!2765 = !DILocation(line: 614, column: 10, scope: !2764)
!2766 = !DILocation(line: 614, column: 17, scope: !2767)
!2767 = !DILexicalBlockFile(scope: !2768, file: !906, discriminator: 1)
!2768 = distinct !DILexicalBlock(scope: !2764, file: !906, line: 614, column: 5)
!2769 = !DILocation(line: 614, column: 19, scope: !2767)
!2770 = !DILocation(line: 614, column: 5, scope: !2767)
!2771 = !DILocation(line: 616, column: 17, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2773, file: !906, line: 616, column: 9)
!2773 = distinct !DILexicalBlock(scope: !2768, file: !906, line: 614, column: 31)
!2774 = !DILocation(line: 616, column: 14, scope: !2772)
!2775 = !DILocation(line: 616, column: 22, scope: !2776)
!2776 = !DILexicalBlockFile(scope: !2777, file: !906, discriminator: 1)
!2777 = distinct !DILexicalBlock(scope: !2772, file: !906, line: 616, column: 9)
!2778 = !DILocation(line: 616, column: 25, scope: !2776)
!2779 = !DILocation(line: 616, column: 9, scope: !2776)
!2780 = !DILocation(line: 617, column: 30, scope: !2777)
!2781 = !DILocation(line: 617, column: 33, scope: !2777)
!2782 = !DILocation(line: 617, column: 41, scope: !2777)
!2783 = !DILocation(line: 617, column: 39, scope: !2777)
!2784 = !DILocation(line: 617, column: 27, scope: !2777)
!2785 = !DILocation(line: 617, column: 21, scope: !2777)
!2786 = !DILocation(line: 617, column: 13, scope: !2777)
!2787 = !DILocation(line: 617, column: 25, scope: !2777)
!2788 = !DILocation(line: 616, column: 33, scope: !2789)
!2789 = !DILexicalBlockFile(scope: !2777, file: !906, discriminator: 2)
!2790 = !DILocation(line: 616, column: 9, scope: !2789)
!2791 = distinct !{!2791, !2792}
!2792 = !DILocation(line: 616, column: 9, scope: !2773)
!2793 = !DILocation(line: 620, column: 9, scope: !2773)
!2794 = !DILocation(line: 620, column: 18, scope: !2773)
!2795 = !DILocation(line: 620, column: 29, scope: !2773)
!2796 = !DILocation(line: 620, column: 38, scope: !2773)
!2797 = !DILocation(line: 620, column: 48, scope: !2773)
!2798 = !DILocation(line: 623, column: 16, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !2773, file: !906, line: 623, column: 9)
!2800 = !DILocation(line: 623, column: 14, scope: !2799)
!2801 = !DILocation(line: 623, column: 21, scope: !2802)
!2802 = !DILexicalBlockFile(scope: !2803, file: !906, discriminator: 1)
!2803 = distinct !DILexicalBlock(scope: !2799, file: !906, line: 623, column: 9)
!2804 = !DILocation(line: 623, column: 23, scope: !2802)
!2805 = !DILocation(line: 623, column: 9, scope: !2802)
!2806 = !DILocation(line: 624, column: 49, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2803, file: !906, line: 623, column: 33)
!2808 = !DILocation(line: 624, column: 51, scope: !2807)
!2809 = !DILocation(line: 624, column: 40, scope: !2807)
!2810 = !DILocation(line: 624, column: 35, scope: !2807)
!2811 = !DILocation(line: 624, column: 13, scope: !2807)
!2812 = !DILocation(line: 624, column: 24, scope: !2807)
!2813 = !DILocation(line: 624, column: 30, scope: !2807)
!2814 = !DILocation(line: 624, column: 19, scope: !2807)
!2815 = !DILocation(line: 624, column: 38, scope: !2807)
!2816 = !DILocation(line: 625, column: 53, scope: !2807)
!2817 = !DILocation(line: 625, column: 51, scope: !2807)
!2818 = !DILocation(line: 625, column: 40, scope: !2807)
!2819 = !DILocation(line: 625, column: 35, scope: !2807)
!2820 = !DILocation(line: 625, column: 13, scope: !2807)
!2821 = !DILocation(line: 625, column: 24, scope: !2807)
!2822 = !DILocation(line: 625, column: 30, scope: !2807)
!2823 = !DILocation(line: 625, column: 19, scope: !2807)
!2824 = !DILocation(line: 625, column: 38, scope: !2807)
!2825 = !DILocation(line: 626, column: 9, scope: !2807)
!2826 = !DILocation(line: 623, column: 29, scope: !2827)
!2827 = !DILexicalBlockFile(scope: !2803, file: !906, discriminator: 2)
!2828 = !DILocation(line: 623, column: 9, scope: !2827)
!2829 = distinct !{!2829, !2830}
!2830 = !DILocation(line: 623, column: 9, scope: !2773)
!2831 = !DILocation(line: 628, column: 19, scope: !2773)
!2832 = !DILocation(line: 628, column: 25, scope: !2773)
!2833 = !DILocation(line: 628, column: 17, scope: !2773)
!2834 = !DILocation(line: 629, column: 30, scope: !2773)
!2835 = !DILocation(line: 629, column: 38, scope: !2773)
!2836 = !DILocation(line: 629, column: 20, scope: !2773)
!2837 = !DILocation(line: 629, column: 18, scope: !2773)
!2838 = !DILocation(line: 631, column: 16, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2773, file: !906, line: 631, column: 9)
!2840 = !DILocation(line: 631, column: 14, scope: !2839)
!2841 = !DILocation(line: 631, column: 21, scope: !2842)
!2842 = !DILexicalBlockFile(scope: !2843, file: !906, discriminator: 1)
!2843 = distinct !DILexicalBlock(scope: !2839, file: !906, line: 631, column: 9)
!2844 = !DILocation(line: 631, column: 23, scope: !2842)
!2845 = !DILocation(line: 631, column: 9, scope: !2842)
!2846 = !DILocation(line: 632, column: 20, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2848, file: !906, line: 632, column: 13)
!2848 = distinct !DILexicalBlock(scope: !2843, file: !906, line: 631, column: 34)
!2849 = !DILocation(line: 632, column: 18, scope: !2847)
!2850 = !DILocation(line: 632, column: 25, scope: !2851)
!2851 = !DILexicalBlockFile(scope: !2852, file: !906, discriminator: 1)
!2852 = distinct !DILexicalBlock(scope: !2847, file: !906, line: 632, column: 13)
!2853 = !DILocation(line: 632, column: 27, scope: !2851)
!2854 = !DILocation(line: 632, column: 13, scope: !2851)
!2855 = !DILocation(line: 633, column: 60, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2852, file: !906, line: 632, column: 37)
!2857 = !DILocation(line: 633, column: 40, scope: !2856)
!2858 = !DILocation(line: 633, column: 51, scope: !2856)
!2859 = !DILocation(line: 633, column: 46, scope: !2856)
!2860 = !DILocation(line: 633, column: 81, scope: !2856)
!2861 = !DILocation(line: 633, column: 65, scope: !2856)
!2862 = !DILocation(line: 633, column: 78, scope: !2856)
!2863 = !DILocation(line: 633, column: 63, scope: !2856)
!2864 = !DILocation(line: 634, column: 61, scope: !2856)
!2865 = !DILocation(line: 634, column: 40, scope: !2856)
!2866 = !DILocation(line: 634, column: 51, scope: !2856)
!2867 = !DILocation(line: 634, column: 46, scope: !2856)
!2868 = !DILocation(line: 634, column: 82, scope: !2856)
!2869 = !DILocation(line: 634, column: 66, scope: !2856)
!2870 = !DILocation(line: 634, column: 79, scope: !2856)
!2871 = !DILocation(line: 634, column: 64, scope: !2856)
!2872 = !DILocation(line: 633, column: 84, scope: !2856)
!2873 = !DILocation(line: 633, column: 21, scope: !2856)
!2874 = !DILocation(line: 633, column: 23, scope: !2856)
!2875 = !DILocation(line: 633, column: 30, scope: !2856)
!2876 = !DILocation(line: 633, column: 28, scope: !2856)
!2877 = !DILocation(line: 633, column: 32, scope: !2856)
!2878 = !DILocation(line: 633, column: 17, scope: !2856)
!2879 = !DILocation(line: 633, column: 37, scope: !2856)
!2880 = !DILocation(line: 635, column: 64, scope: !2856)
!2881 = !DILocation(line: 635, column: 62, scope: !2856)
!2882 = !DILocation(line: 635, column: 40, scope: !2856)
!2883 = !DILocation(line: 635, column: 51, scope: !2856)
!2884 = !DILocation(line: 635, column: 46, scope: !2856)
!2885 = !DILocation(line: 635, column: 85, scope: !2856)
!2886 = !DILocation(line: 635, column: 87, scope: !2856)
!2887 = !DILocation(line: 635, column: 69, scope: !2856)
!2888 = !DILocation(line: 635, column: 82, scope: !2856)
!2889 = !DILocation(line: 635, column: 67, scope: !2856)
!2890 = !DILocation(line: 636, column: 65, scope: !2856)
!2891 = !DILocation(line: 636, column: 63, scope: !2856)
!2892 = !DILocation(line: 636, column: 40, scope: !2856)
!2893 = !DILocation(line: 636, column: 51, scope: !2856)
!2894 = !DILocation(line: 636, column: 46, scope: !2856)
!2895 = !DILocation(line: 636, column: 86, scope: !2856)
!2896 = !DILocation(line: 636, column: 88, scope: !2856)
!2897 = !DILocation(line: 636, column: 70, scope: !2856)
!2898 = !DILocation(line: 636, column: 83, scope: !2856)
!2899 = !DILocation(line: 636, column: 68, scope: !2856)
!2900 = !DILocation(line: 635, column: 92, scope: !2856)
!2901 = !DILocation(line: 635, column: 21, scope: !2856)
!2902 = !DILocation(line: 635, column: 23, scope: !2856)
!2903 = !DILocation(line: 635, column: 30, scope: !2856)
!2904 = !DILocation(line: 635, column: 28, scope: !2856)
!2905 = !DILocation(line: 635, column: 32, scope: !2856)
!2906 = !DILocation(line: 635, column: 17, scope: !2856)
!2907 = !DILocation(line: 635, column: 37, scope: !2856)
!2908 = !DILocation(line: 637, column: 13, scope: !2856)
!2909 = !DILocation(line: 632, column: 33, scope: !2910)
!2910 = !DILexicalBlockFile(scope: !2852, file: !906, discriminator: 2)
!2911 = !DILocation(line: 632, column: 13, scope: !2910)
!2912 = distinct !{!2912, !2913}
!2913 = !DILocation(line: 632, column: 13, scope: !2848)
!2914 = !DILocation(line: 639, column: 33, scope: !2848)
!2915 = !DILocation(line: 639, column: 42, scope: !2848)
!2916 = !DILocation(line: 639, column: 23, scope: !2848)
!2917 = !DILocation(line: 639, column: 21, scope: !2848)
!2918 = !DILocation(line: 640, column: 34, scope: !2848)
!2919 = !DILocation(line: 640, column: 42, scope: !2848)
!2920 = !DILocation(line: 640, column: 24, scope: !2848)
!2921 = !DILocation(line: 640, column: 22, scope: !2848)
!2922 = !DILocation(line: 641, column: 9, scope: !2848)
!2923 = !DILocation(line: 631, column: 30, scope: !2924)
!2924 = !DILexicalBlockFile(scope: !2843, file: !906, discriminator: 2)
!2925 = !DILocation(line: 631, column: 9, scope: !2924)
!2926 = distinct !{!2926, !2927}
!2927 = !DILocation(line: 631, column: 9, scope: !2773)
!2928 = !DILocation(line: 643, column: 31, scope: !2773)
!2929 = !DILocation(line: 643, column: 37, scope: !2773)
!2930 = !DILocation(line: 643, column: 21, scope: !2773)
!2931 = !DILocation(line: 643, column: 9, scope: !2773)
!2932 = !DILocation(line: 643, column: 15, scope: !2773)
!2933 = !DILocation(line: 643, column: 19, scope: !2773)
!2934 = !DILocation(line: 644, column: 5, scope: !2773)
!2935 = !DILocation(line: 614, column: 27, scope: !2936)
!2936 = !DILexicalBlockFile(scope: !2768, file: !906, discriminator: 2)
!2937 = !DILocation(line: 614, column: 5, scope: !2936)
!2938 = distinct !{!2938, !2939}
!2939 = !DILocation(line: 614, column: 5, scope: !2726)
!2940 = !DILocation(line: 645, column: 1, scope: !2726)
