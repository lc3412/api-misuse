; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--qdm2.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--qdm2.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.GetByteContext = type { i8*, i8*, i8* }
%struct.QDM2Context = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [16 x %struct.QDM2SubPacket], [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode], i32, [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode], [1000 x %struct.FFTTone], i32, i32, [1000 x %struct.FFTCoefficient], i32, [5 x i32], [5 x i32], [6 x i32], %struct.RDFTContext, [8 x i8], %struct.QDM2FFT, i8*, i32, [2048 x float], %struct.MPADSPContext, [2 x [1024 x float]], [2 x i32], [24 x i8], [2 x [128 x [32 x float]]], [2304 x float], [2 x [30 x [64 x float]]], [2 x [30 x [64 x i8]]], [2 x [10 x [8 x i8]]], [2 x [30 x [8 x i8]]], [2 x [3 x [8 x [8 x i8]]]], [2 x [26 x [8 x i8]]], [2 x [26 x i8]], [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]], i32, i32, i32, i32, i32, [24 x i8] }
%struct.QDM2SubPacket = type { i32, i32, i8* }
%struct.QDM2SubPNode = type { %struct.QDM2SubPacket*, %struct.QDM2SubPNode* }
%struct.FFTTone = type { float, %struct.QDM2Complex*, float*, i32, i32, i32, i16, i16 }
%struct.QDM2Complex = type { float, float }
%struct.FFTCoefficient = type { i16, i8, i16, i16, i8 }
%struct.RDFTContext = type { i32, i32, i32, float*, float*, i32, %struct.FFTContext, void (%struct.RDFTContext*, float*)* }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.QDM2FFT = type { [2 x [256 x %struct.QDM2Complex]] }
%struct.MPADSPContext = type { void (float*, float*, i32*, float*, i64)*, void (i32*, i32*, i32*, i16*, i64)*, void (float*, float*)*, void (i32*, i32*)*, void (float*, float*, float*, i32, i32, i32)*, void (i32*, i32*, i32*, i32, i32, i32)* }
%union.unaligned_64 = type { i64 }
%union.unaligned_32 = type { i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }

@.str = private unnamed_addr constant [5 x i8] c"qdm2\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"QDesign Music Codec 2\00", align 1
@ff_qdm2_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86035, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 142560, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @qdm2_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @qdm2_decode_frame, i32 (%struct.AVCodecContext*)* @qdm2_decode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [32 x i8] c"extradata missing or truncated\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"not enough extradata (%i)\0A\00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c"extradata size too small, %i < %i\0A\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"size: %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"invalid extradata, expecting QDCA\0A\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"Invalid number of channels\0A\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"data block size too large (%u)\0A\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"Unknown FFT order %d\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"FFT size %d not power of 2.\0A\00", align 1
@qdm2_init_static_data.done = internal global i32 0, align 4
@ff_mpa_synth_window_float = external global [0 x float], align 4
@qdm2_vlc_offs = internal constant [18 x i16] [i16 0, i16 260, i16 566, i16 598, i16 894, i16 1166, i16 1230, i16 1294, i16 1678, i16 1950, i16 2214, i16 2278, i16 2310, i16 2570, i16 2834, i16 3124, i16 3448, i16 3838], align 16
@qdm2_table = internal global [3838 x [2 x i16]] zeroinitializer, align 16
@vlc_tab_level = internal global %struct.VLC zeroinitializer, align 8
@vlc_tab_level_huffbits = internal constant [24 x i8] c"\0A\06\07\07\06\06\06\06\06\05\04\04\04\03\03\03\03\04\04\05\07\08\09\0A", align 16
@vlc_tab_level_huffcodes = internal constant [24 x i16] [i16 892, i16 4, i16 60, i16 76, i16 58, i16 44, i16 28, i16 26, i16 36, i16 20, i16 1, i16 2, i16 0, i16 3, i16 7, i16 5, i16 6, i16 8, i16 9, i16 10, i16 12, i16 252, i16 124, i16 380], align 16
@vlc_tab_diff = internal global %struct.VLC zeroinitializer, align 8
@vlc_tab_diff_huffbits = internal constant [37 x i8] c"\0D\03\03\02\03\03\04\04\06\05\06\06\07\07\08\08\08\09\08\0B\09\0A\08\0A\09\0C\0A\00\0A\0D\0B\00\0C\00\0D\00\0D", align 16
@vlc_tab_diff_huffcodes = internal constant [37 x i16] [i16 7255, i16 4, i16 0, i16 1, i16 3, i16 2, i16 15, i16 14, i16 7, i16 22, i16 55, i16 39, i16 38, i16 102, i16 6, i16 151, i16 70, i16 454, i16 23, i16 1926, i16 134, i16 599, i16 215, i16 855, i16 198, i16 902, i16 390, i16 0, i16 343, i16 3159, i16 87, i16 0, i16 2950, i16 0, i16 5207, i16 0, i16 1111], align 16
@vlc_tab_run = internal global %struct.VLC zeroinitializer, align 8
@vlc_tab_run_huffbits = internal constant [6 x i8] c"\05\01\02\03\04\05", align 1
@vlc_tab_run_huffcodes = internal constant [6 x i8] c"\1F\00\01\03\07\0F", align 1
@fft_level_exp_alt_vlc = internal global %struct.VLC zeroinitializer, align 8
@fft_level_exp_alt_huffbits = internal constant [28 x i8] c"\0D\07\08\09\0A\0A\0A\0A\0A\09\08\07\06\05\04\03\03\02\03\03\04\05\07\08\09\0B\0C\0D", align 16
@fft_level_exp_alt_huffcodes = internal constant [28 x i16] [i16 7878, i16 6, i16 194, i16 322, i16 578, i16 582, i16 198, i16 70, i16 66, i16 326, i16 162, i16 98, i16 38, i16 22, i16 14, i16 5, i16 4, i16 3, i16 0, i16 1, i16 10, i16 18, i16 2, i16 34, i16 454, i16 710, i16 1734, i16 3782], align 16
@fft_level_exp_vlc = internal global %struct.VLC zeroinitializer, align 8
@fft_level_exp_huffbits = internal constant [20 x i8] c"\0C\03\03\03\03\03\03\04\04\05\05\06\06\06\07\08\09\0A\0B\0C", align 16
@fft_level_exp_huffcodes = internal constant [20 x i16] [i16 3876, i16 1, i16 2, i16 0, i16 6, i16 5, i16 7, i16 12, i16 11, i16 20, i16 19, i16 4, i16 3, i16 35, i16 100, i16 164, i16 36, i16 292, i16 804, i16 1828], align 16
@fft_stereo_exp_vlc = internal global %struct.VLC zeroinitializer, align 8
@fft_stereo_exp_huffbits = internal constant [7 x i8] c"\06\01\02\03\04\05\06", align 1
@fft_stereo_exp_huffcodes = internal constant [7 x i8] c">\01\00\02\06\0E\1E", align 1
@fft_stereo_phase_vlc = internal global %struct.VLC zeroinitializer, align 8
@fft_stereo_phase_huffbits = internal constant [9 x i8] c"\06\02\02\04\04\06\05\04\02", align 1
@fft_stereo_phase_huffcodes = internal constant [9 x i8] c"5\02\00\01\0D\15\05\09\03", align 1
@vlc_tab_tone_level_idx_hi1 = internal global %struct.VLC zeroinitializer, align 8
@vlc_tab_tone_level_idx_hi1_huffbits = internal constant [20 x i8] c"\0F\04\02\01\03\05\06\07\08\0A\0A\0B\0B\0C\0C\0C\0E\0E\0F\0E", align 16
@vlc_tab_tone_level_idx_hi1_huffcodes = internal constant [20 x i16] [i16 22292, i16 12, i16 2, i16 1, i16 0, i16 4, i16 52, i16 84, i16 148, i16 20, i16 276, i16 532, i16 788, i16 1556, i16 3604, i16 3860, i16 10004, i16 1812, i16 5908, i16 14100], align 16
@vlc_tab_tone_level_idx_mid = internal global %struct.VLC zeroinitializer, align 8
@vlc_tab_tone_level_idx_mid_huffbits = internal constant [24 x i8] c"\0C\00\00\00\00\00\00\00\00\00\00\00\0B\09\07\05\03\01\02\04\06\08\0A\0C", align 16
@vlc_tab_tone_level_idx_mid_huffcodes = internal constant [24 x i16] [i16 4074, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1002, i16 234, i16 42, i16 26, i16 6, i16 1, i16 0, i16 2, i16 10, i16 106, i16 490, i16 2026], align 16
@vlc_tab_tone_level_idx_hi2 = internal global %struct.VLC zeroinitializer, align 8
@vlc_tab_tone_level_idx_hi2_huffbits = internal constant [24 x i8] c"\0B\00\00\00\00\00\0A\08\08\07\06\06\05\05\04\02\02\02\04\07\08\09\00\0B", align 16
@vlc_tab_tone_level_idx_hi2_huffcodes = internal constant [24 x i16] [i16 1636, i16 0, i16 0, i16 0, i16 0, i16 0, i16 100, i16 228, i16 164, i16 104, i16 4, i16 8, i16 20, i16 24, i16 0, i16 1, i16 2, i16 3, i16 12, i16 40, i16 36, i16 356, i16 0, i16 612], align 16
@vlc_tab_type30 = internal global %struct.VLC zeroinitializer, align 8
@vlc_tab_type30_huffbits = internal constant [9 x i8] c"\06\03\03\02\02\03\04\05\06", align 1
@vlc_tab_type30_huffcodes = internal constant [9 x i8] c"<\06\00\01\03\02\04\0C\1C", align 1
@vlc_tab_type34 = internal global %struct.VLC zeroinitializer, align 8
@vlc_tab_type34_huffbits = internal constant [10 x i8] c"\05\04\03\03\03\03\03\03\03\05", align 1
@vlc_tab_type34_huffcodes = internal constant [10 x i8] c"\18\00\01\04\05\07\03\02\06\08", align 1
@vlc_tab_fft_tone_offset = internal global [5 x %struct.VLC] zeroinitializer, align 16
@vlc_tab_fft_tone_offset_0_huffbits = internal constant [23 x i8] c"\0A\01\02\06\04\05\06\07\06\06\07\07\08\07\08\08\09\07\08\06\06\08\0A", align 16
@vlc_tab_fft_tone_offset_0_huffcodes = internal constant [23 x i16] [i16 910, i16 1, i16 0, i16 34, i16 10, i16 6, i16 18, i16 2, i16 30, i16 62, i16 86, i16 22, i16 14, i16 50, i16 114, i16 66, i16 142, i16 78, i16 242, i16 46, i16 54, i16 194, i16 398], align 16
@vlc_tab_fft_tone_offset_1_huffbits = internal constant [28 x i8] c"\0B\01\06\06\05\04\03\06\06\05\06\06\07\06\06\06\06\06\06\07\08\06\07\07\07\09\0A\0B", align 16
@vlc_tab_fft_tone_offset_1_huffcodes = internal constant [28 x i16] [i16 1956, i16 1, i16 32, i16 18, i16 28, i16 8, i16 6, i16 16, i16 0, i16 20, i16 4, i16 50, i16 112, i16 12, i16 2, i16 58, i16 26, i16 44, i16 42, i16 34, i16 36, i16 10, i16 100, i16 48, i16 98, i16 164, i16 420, i16 932], align 16
@vlc_tab_fft_tone_offset_2_huffbits = internal constant [32 x i8] c"\0D\02\00\08\04\03\03\03\04\04\05\05\06\05\07\07\07\07\07\07\08\08\08\09\08\08\09\09\0A\0B\0D\0C", align 16
@vlc_tab_fft_tone_offset_2_huffcodes = internal constant [32 x i16] [i16 5984, i16 1, i16 0, i16 130, i16 12, i16 6, i16 3, i16 7, i16 8, i16 4, i16 16, i16 18, i16 34, i16 26, i16 0, i16 32, i16 10, i16 64, i16 74, i16 106, i16 42, i16 66, i16 2, i16 96, i16 170, i16 224, i16 194, i16 450, i16 352, i16 864, i16 1888, i16 3936], align 16
@vlc_tab_fft_tone_offset_3_huffbits = internal constant [35 x i8] c"\0E\04\00\0A\04\03\03\04\04\03\04\04\05\04\05\06\06\05\06\07\07\07\08\08\08\08\09\0A\0A\0A\0A\0B\0C\0D\0E", align 16
@vlc_tab_fft_tone_offset_3_huffcodes = internal constant [35 x i16] [i16 13290, i16 5, i16 0, i16 12, i16 0, i16 6, i16 3, i16 8, i16 2, i16 1, i16 4, i16 7, i16 26, i16 15, i16 28, i16 44, i16 10, i16 29, i16 45, i16 42, i16 13, i16 76, i16 140, i16 106, i16 205, i16 77, i16 234, i16 524, i16 780, i16 268, i16 490, i16 2026, i16 3050, i16 1002, i16 5098], align 16
@vlc_tab_fft_tone_offset_4_huffbits = internal constant [38 x i8] c"\0F\06\00\09\03\03\03\04\04\03\04\04\05\04\05\06\06\06\06\08\07\06\08\09\09\08\09\0A\0B\0A\0B\0C\0C\0C\0E\0F\0E\0E", align 16
@vlc_tab_fft_tone_offset_4_huffcodes = internal constant [38 x i16] [i16 21122, i16 22, i16 0, i16 310, i16 4, i16 0, i16 7, i16 10, i16 14, i16 3, i16 1, i16 13, i16 6, i16 9, i16 18, i16 5, i16 37, i16 34, i16 21, i16 2, i16 118, i16 53, i16 66, i16 194, i16 386, i16 182, i16 54, i16 962, i16 1154, i16 450, i16 1666, i16 2178, i16 2690, i16 130, i16 642, i16 4738, i16 12930, i16 8834], align 16
@softclip_table = internal global [8117 x i16] zeroinitializer, align 16
@noise_table = internal global [4116 x float] zeroinitializer, align 16
@random_dequant_index = internal global [256 x [5 x i8]] zeroinitializer, align 16
@random_dequant_type24 = internal global [128 x [3 x i8]] zeroinitializer, align 16
@noise_samples = internal global [128 x float] zeroinitializer, align 16
@.str.11 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"buf_size >= 0\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"libavcodec/bytestream.h\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"Superblock follows\0A\00", align 1
@.str.15 = private unnamed_addr constant [83 x i8] c"This file triggers some missing code. Please contact the developers.\0APosition: %s\0A\00", align 1
@.str.16 = private unnamed_addr constant [36 x i8] c"has errors, and C list is not empty\00", align 1
@.str.17 = private unnamed_addr constant [21 x i8] c"bad superblock type\0A\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"bad packet checksum\0A\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"too many packet bytes\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"packet type 8\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"packet type 15\00", align 1
@fft_subpackets = internal constant [32 x i8] c"\00\00\00\00\00\00\00\00\01\01\01\01\01\01\01\00\00\00\00\00\00\00\00\00\01\01\01\01\01\01\00\00", align 16
@coeff_per_sb_for_avg = internal constant [3 x [30 x i8]] [[30 x i8] c"\00\01\01\01\01\02\02\02\02\02\02\02\02\02\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03", [30 x i8] c"\00\01\02\02\03\03\04\04\04\04\04\04\05\05\05\05\05\05\05\05\06\06\06\06\06\06\06\06\06\06", [30 x i8] c"\00\01\02\03\04\04\05\05\06\06\06\06\07\07\07\07\08\08\08\08\08\08\09\09\09\09\09\09\09\09"], align 16
@.str.22 = private unnamed_addr constant [42 x i8] c"Subpacket: type=%d size=%d start_offs=%x\0A\00", align 1
@.str.23 = private unnamed_addr constant [36 x i8] c"value %d in qdm2_get_vlc too large\0A\00", align 1
@vlc_stage3_values = internal constant [60 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 10, i32 12, i32 16, i32 20, i32 24, i32 28, i32 36, i32 44, i32 52, i32 60, i32 76, i32 92, i32 108, i32 124, i32 156, i32 188, i32 220, i32 252, i32 316, i32 380, i32 444, i32 508, i32 636, i32 764, i32 892, i32 1020, i32 1276, i32 1532, i32 1788, i32 2044, i32 2556, i32 3068, i32 3580, i32 4092, i32 5116, i32 6140, i32 7164, i32 8188, i32 10236, i32 12284, i32 14332, i32 16380, i32 20476, i32 24572, i32 28668, i32 32764, i32 40956, i32 49148, i32 57340, i32 65532, i32 81916, i32 98300, i32 114684], align 16
@coeff_per_sb_for_dequant = internal constant [3 x [30 x i8]] [[30 x i8] c"\00\01\01\01\01\01\01\02\02\02\02\02\02\02\02\02\02\02\02\02\02\03\03\03\03\03\03\03\03\03", [30 x i8] c"\00\01\02\02\02\03\03\03\04\04\04\04\04\04\04\05\05\05\05\05\05\05\05\05\06\06\06\06\06\06", [30 x i8] c"\00\01\02\03\04\04\05\05\05\06\06\06\06\07\07\07\07\07\08\08\08\08\08\08\09\09\09\09\09\09"], align 16
@last_coeff = internal constant [3 x i8] c"\04\07\0A", align 1
@dequant_table = internal constant [3 x [10 x [30 x i32]]] [[10 x [30 x i32]] [[30 x i32] [i32 256, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 256, i32 256, i32 205, i32 154, i32 102, i32 51, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 0, i32 51, i32 102, i32 154, i32 205, i32 256, i32 238, i32 219, i32 201, i32 183, i32 165, i32 146, i32 128, i32 110, i32 91, i32 73, i32 55, i32 37, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 18, i32 37, i32 55, i32 73, i32 91, i32 110, i32 128, i32 146, i32 165, i32 183, i32 201, i32 219, i32 238, i32 256, i32 228, i32 199, i32 171, i32 142, i32 114, i32 85, i32 57, i32 28], [30 x i32] zeroinitializer, [30 x i32] zeroinitializer, [30 x i32] zeroinitializer, [30 x i32] zeroinitializer, [30 x i32] zeroinitializer, [30 x i32] zeroinitializer], [10 x [30 x i32]] [[30 x i32] [i32 256, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 256, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 256, i32 171, i32 85, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 0, i32 85, i32 171, i32 256, i32 171, i32 85, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 85, i32 171, i32 256, i32 219, i32 183, i32 146, i32 110, i32 73, i32 37, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 37, i32 73, i32 110, i32 146, i32 183, i32 219, i32 256, i32 228, i32 199, i32 171, i32 142, i32 114, i32 85, i32 57, i32 28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 28, i32 57, i32 85, i32 114, i32 142, i32 171, i32 199, i32 228, i32 256, i32 213, i32 171, i32 128, i32 85, i32 43], [30 x i32] zeroinitializer, [30 x i32] zeroinitializer, [30 x i32] zeroinitializer], [10 x [30 x i32]] [[30 x i32] [i32 256, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 256, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 256, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 0, i32 256, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 256, i32 256, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 256, i32 171, i32 85, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 85, i32 171, i32 256, i32 192, i32 128, i32 64, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 64, i32 128, i32 192, i32 256, i32 205, i32 154, i32 102, i32 51, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 51, i32 102, i32 154, i32 205, i32 256, i32 213, i32 171, i32 128, i32 85, i32 43, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], [30 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 43, i32 85, i32 128, i32 171, i32 213, i32 256, i32 213, i32 171, i32 128, i32 85, i32 43]]], align 16
@fft_tone_level_table = internal constant [2 x [64 x float]] [[64 x float] [float 0x3FC6A09E60000000, float 0x3FDB504E60000000, float 0x3FE3504F60000000, float 0x3FEB504F60000000, float 0x3FF3504F40000000, float 0x3FFAF00000000000, float 2.375000e+00, float 0x400AF00000000000, float 4.750000e+00, float 6.734375e+00, float 9.500000e+00, float 1.346875e+01, float 1.900000e+01, float 2.693750e+01, float 3.800000e+01, float 5.387500e+01, float 7.600000e+01, float 1.077500e+02, float 1.520000e+02, float 2.155000e+02, float 3.040000e+02, float 4.310000e+02, float 6.080000e+02, float 8.620000e+02, float 1.216000e+03, float 1.724000e+03, float 2.432000e+03, float 3.448000e+03, float 4.864000e+03, float 6.896000e+03, float 9.728000e+03, float 1.379200e+04, float 1.945600e+04, float 2.758400e+04, float 3.891200e+04, float 5.516800e+04, float 7.782400e+04, float 1.103360e+05, float 1.556480e+05, float 2.206720e+05, float 3.112960e+05, float 4.413440e+05, float 6.225920e+05, float 8.826880e+05, float 1.245184e+06, float 1.765376e+06, float 2.490368e+06, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [64 x float] [float 5.937500e-01, float 0x3FEAF00000000000, float 1.187500e+00, float 0x3FFAF00000000000, float 2.375000e+00, float 0x400AF00000000000, float 4.750000e+00, float 6.734375e+00, float 9.500000e+00, float 1.346875e+01, float 1.900000e+01, float 2.693750e+01, float 3.800000e+01, float 5.387500e+01, float 7.600000e+01, float 1.077500e+02, float 1.520000e+02, float 2.155000e+02, float 3.040000e+02, float 4.310000e+02, float 6.080000e+02, float 8.620000e+02, float 1.216000e+03, float 1.724000e+03, float 2.432000e+03, float 3.448000e+03, float 4.864000e+03, float 6.896000e+03, float 9.728000e+03, float 1.379200e+04, float 1.945600e+04, float 2.758400e+04, float 3.891200e+04, float 5.516800e+04, float 7.782400e+04, float 1.103360e+05, float 1.556480e+05, float 2.206720e+05, float 3.112960e+05, float 4.413440e+05, float 6.225920e+05, float 8.826880e+05, float 1.245184e+06, float 1.765376e+06, float 2.490368e+06, float 3.530752e+06, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00]], align 16
@.str.24 = private unnamed_addr constant [20 x i8] c"!superblocktype_2_3\00", align 1
@coding_method_table = internal constant [5 x [30 x i8]] [[30 x i8] c"\22\1E\18\18\10\10\10\10\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A", [30 x i8] c"\22\1E\18\18\10\10\10\10\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A", [30 x i8] c"\22\1E\1E\1E\18\18\10\10\10\10\10\10\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A", [30 x i8] c"\22\22\1E\1E\18\18\18\18\10\10\10\10\10\10\10\10\10\10\10\10\10\10\0A\0A\0A\0A\0A\0A\0A\0A", [30 x i8] c"\22\22\1E\1E\1E\1E\1E\1E\18\18\18\18\18\18\18\18\18\18\18\18\10\10\10\10\10\10\10\10\10\10"], align 16
@.str.25 = private unnamed_addr constant [23 x i8] c"coding method invalid\0A\00", align 1
@dequant_1bit = internal constant [2 x [3 x float]] [[3 x float] [float 0xBFED70A3E0000000, float 0.000000e+00, float 0x3FED70A3E0000000], [3 x float] [float 0xBFEC7AE140000000, float 0.000000e+00, float 0x3FEC7AE140000000]], align 16
@.str.26 = private unnamed_addr constant [23 x i8] c"Invalid 8bit codeword\0A\00", align 1
@sb_noise_attenuation = internal constant [32 x float] [float 0.000000e+00, float 0.000000e+00, float 0x3FD3333340000000, float 0x3FD99999A0000000, float 5.000000e-01, float 0x3FE6666660000000, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 16
@.str.27 = private unnamed_addr constant [23 x i8] c"Invalid 7bit codeword\0A\00", align 1
@.str.28 = private unnamed_addr constant [38 x i8] c"index %d out of type30_dequant array\0A\00", align 1
@type30_dequant = internal constant [8 x float] [float -1.000000e+00, float -6.250000e-01, float 0xBFD2AAAAA0000000, float 0.000000e+00, float 2.500000e-01, float 5.000000e-01, float 7.500000e-01, float 1.000000e+00], align 16
@.str.29 = private unnamed_addr constant [36 x i8] c"index %d out of type34_delta array\0A\00", align 1
@type34_delta = internal constant [10 x float] [float -1.000000e+00, float 0xBFE380D340000000, float 0xBFD5555560000000, float 0xBFC1AC5120000000, float 0.000000e+00, float 0x3FC1AC5120000000, float 0x3FD5555560000000, float 0x3FE380D340000000, float 1.000000e+00, float 0.000000e+00], align 16
@switchtable = internal constant [23 x i32] [i32 0, i32 5, i32 1, i32 5, i32 5, i32 5, i32 5, i32 5, i32 2, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 3, i32 5, i32 5, i32 5, i32 5, i32 5, i32 4], align 16
@.str.30 = private unnamed_addr constant [71 x i8] c"This file triggers some untested code. Please contact the developers.\0A\00", align 1
@.str.31 = private unnamed_addr constant [37 x i8] c"overread in qdm2_fft_decode_tones()\0A\00", align 1
@fft_level_index_table = internal constant [256 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5, i16 5], align 16
@fft_tone_sample_table = internal constant [4 x [16 x [5 x float]]] [[16 x [5 x float]] [[5 x float] [float 0x3F847AE140000000, float 0xBF6E573AC0000000, float 0xBF60624DE0000000, float 0xBF7C71C720000000, float 0xBF5E2C5120000000], [5 x float] [float 0x3FA5555560000000, float 0.000000e+00, float 0.000000e+00, float 0xBF95555560000000, float 0xBF8948B100000000], [5 x float] [float 1.250000e-01, float 0x3FAC924920000000, float 0x3FA0EE6440000000, float 0xBF90D79440000000, float 0xBF83F60500000000], [5 x float] [float 1.562500e-01, float 6.250000e-02, float 0x3FA2F684C0000000, float 0xBF799999A0000000, float 0xBF6E573AC0000000], [5 x float] [float 0x3FC98C84C0000000, float 7.812500e-02, float 0x3FA7B425E0000000, float 0x3F629E4120000000, float 0x3F5610E4E0000000], [5 x float] [float 0x3FC99999A0000000, float 6.250000e-02, float 0x3FA2F684C0000000, float 0x3F95555560000000, float 0x3F7E573AC0000000], [5 x float] [float 0x3FCB3BEA40000000, float 0x3FAC71C720000000, float 0x3FA0DB20A0000000, float 0x3F95555560000000, float 0x3F8948B100000000], [5 x float] [float 0x3FCBD37A80000000, float 0x3FA83E0F80000000, float 0x3F9CBB54C0000000, float 0x3FA1C71C80000000, float 0x3F9511E8E0000000], [5 x float] [float 0x3FCBD37A80000000, float 0x3FA1C71C80000000, float 0x3F9511E8E0000000, float 0x3FA83E0F80000000, float 0x3F9CBB54C0000000], [5 x float] [float 0x3FCB3BEA40000000, float 0x3F95555560000000, float 0x3F8948B100000000, float 0x3FAC71C720000000, float 0x3FA0DB20A0000000], [5 x float] [float 0x3FC99999A0000000, float 0x3F95555560000000, float 0x3F7E573AC0000000, float 6.250000e-02, float 0x3FA2F684C0000000], [5 x float] [float 0x3FC98C84C0000000, float 0x3F629E4120000000, float 0x3F5610E4E0000000, float 7.812500e-02, float 0x3FA7B425E0000000], [5 x float] [float 1.562500e-01, float 0xBF799999A0000000, float 0xBF6E573AC0000000, float 6.250000e-02, float 0x3FA2F684C0000000], [5 x float] [float 1.250000e-01, float 0xBF90D79440000000, float 0xBF83F60500000000, float 0x3FAC924920000000, float 0x3FA0EE6440000000], [5 x float] [float 0x3FA5555560000000, float 0xBF95555560000000, float 0xBF8948B100000000, float 0.000000e+00, float 0.000000e+00], [5 x float] [float 0x3F847AE140000000, float 0xBF7C71C720000000, float 0xBF5E2C5120000000, float 0xBF6E573AC0000000, float 0xBF60624DE0000000]], [16 x [5 x float]] [[5 x float] [float 0x3F747AE140000000, float 0xBF947AE140000000, float 0x3F899999A0000000, float 0xBFD364D940000000, float 0x3F60624DE0000000], [5 x float] [float 0x3FBAAAAAA0000000, float 0x3FA47AE140000000, float 0xBF999999A0000000, float 0x3FA1111120000000, float 0xBF947AE140000000], [5 x float] [float 1.250000e-01, float 0x3F847AE140000000, float 0x3F8D41D420000000, float 0xBFA99999A0000000, float 0xBF947AE140000000], [5 x float] [float 1.562500e-01, float 0xBF447AE140000000, float 0xBF402E85C0000000, float 0xBF447AE140000000, float 0xBF402E85C0000000], [5 x float] [float 1.562500e-01, float 0xBF447AE140000000, float 0xBF402E85C0000000, float 0xBF447AE140000000, float 0xBF402E85C0000000], [5 x float] [float 1.250000e-01, float 0xBFA99999A0000000, float 0xBF947AE140000000, float 0x3F847AE140000000, float 0x3F8D41D420000000], [5 x float] [float 0x3FBAAAAAA0000000, float 0x3FA1111120000000, float 0xBF947AE140000000, float 0x3FA47AE140000000, float 0xBF999999A0000000], [5 x float] [float 0x3F747AE140000000, float 0xBFD364D940000000, float 0x3F60624DE0000000, float 0xBF947AE140000000, float 0x3F899999A0000000], [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer], [16 x [5 x float]] [[5 x float] [float 0x3FC24924A0000000, float 1.250000e-01, float 0xBF9D41D420000000, float 0xBFA24924A0000000, float 0x3F95555560000000], [5 x float] [float 0x3FC745D180000000, float 0x3FAE1E1E20000000, float 0x3FA1111120000000, float 0x3F95C98820000000, float 0x3F847AE140000000], [5 x float] [float 0x3FC745D180000000, float 0x3F95C98820000000, float 0x3F847AE140000000, float 0x3FAE1E1E20000000, float 0x3FA1111120000000], [5 x float] [float 0x3FC24924A0000000, float 0xBFA24924A0000000, float 0x3F95555560000000, float 1.250000e-01, float 0xBF9D41D420000000], [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer, [5 x float] zeroinitializer], [16 x [5 x float]] zeroinitializer], align 16
@fft_tone_envelope_table = internal constant [4 x [31 x float]] [[31 x float] [float 0x3F83AD0800000000, float 0x3FA37CA200000000, float 0x3FB5926780000000, float 0x3FC2BEC380000000, float 0x3FCC7189C0000000, float 0x3FD3C10EC0000000, float 0x3FD9C1D220000000, float 0x3FE0000020000000, float 0x3FE31F1720000000, float 0x3FE61F78C0000000, float 0x3FE8E39DC0000000, float 0x3FEB504F40000000, float 0x3FED4DB320000000, float 0x3FEEC83600000000, float 0x3FEFB14C00000000, float 1.000000e+00, float 0x3FEFB14BE0000000, float 0x3FEEC835E0000000, float 0x3FED4DB300000000, float 0x3FEB504F00000000, float 0x3FE8E39D80000000, float 0x3FE61F7880000000, float 0x3FE31F16E0000000, float 5.000000e-01, float 0x3FD9C1D200000000, float 0x3FD3C10EA0000000, float 0x3FCC718980000000, float 0x3FC2BEC340000000, float 0x3FB5926700000000, float 0x3FA37CA100000000, float 0x3F83AD0400000000], [31 x float] [float 0x3FA37CA200000000, float 0x3FC2BEC380000000, float 0x3FD3C10EC0000000, float 0x3FE0000020000000, float 0x3FE61F78C0000000, float 0x3FEB504F40000000, float 0x3FEEC83600000000, float 1.000000e+00, float 0x3FEEC835E0000000, float 0x3FEB504F00000000, float 0x3FE61F7880000000, float 5.000000e-01, float 0x3FD3C10EA0000000, float 0x3FC2BEC340000000, float 0x3FA37CA100000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [31 x float] [float 0x3FC2BEC380000000, float 0x3FE0000020000000, float 0x3FEB504F40000000, float 1.000000e+00, float 0x3FEB504F00000000, float 5.000000e-01, float 0x3FC2BEC340000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [31 x float] [float 0x3FE0000020000000, float 1.000000e+00, float 5.000000e-01, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00]], align 16
@fft_cutoff_index_table = internal constant [4 x [2 x i32]] [[2 x i32] [i32 1, i32 2], [2 x i32] [i32 -1, i32 0], [2 x i32] [i32 -1, i32 -2], [2 x i32] zeroinitializer], align 16

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @qdm2_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1855 {
entry:
  %g.addr.i467 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i467, metadata !1856, metadata !1868), !dbg !1869
  %g.addr.i460 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i460, metadata !1856, metadata !1868), !dbg !1872
  %g.addr.i439 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i439, metadata !1875, metadata !1868), !dbg !1879
  %size.addr.i440 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i440, metadata !1881, metadata !1868), !dbg !1882
  %x.addr.i.i.i.i405 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i405, metadata !1883, metadata !1868), !dbg !1888
  %b.addr.i.i.i406 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i406, metadata !1900, metadata !1868), !dbg !1901
  %g.addr.i.i407 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i407, metadata !1902, metadata !1868), !dbg !1903
  %retval.i408 = alloca i32, align 4
  %g.addr.i409 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i409, metadata !1904, metadata !1868), !dbg !1905
  %g.addr.i398 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i398, metadata !1856, metadata !1868), !dbg !1906
  %g.addr.i391 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i391, metadata !1856, metadata !1868), !dbg !1909
  %x.addr.i.i.i.i357 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i357, metadata !1883, metadata !1868), !dbg !1912
  %b.addr.i.i.i358 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i358, metadata !1900, metadata !1868), !dbg !1918
  %g.addr.i.i359 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i359, metadata !1902, metadata !1868), !dbg !1919
  %retval.i360 = alloca i32, align 4
  %g.addr.i361 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i361, metadata !1904, metadata !1868), !dbg !1920
  %g.addr.i336 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i336, metadata !1875, metadata !1868), !dbg !1921
  %size.addr.i337 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i337, metadata !1881, metadata !1868), !dbg !1923
  %x.addr.i.i.i.i302 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i302, metadata !1883, metadata !1868), !dbg !1924
  %b.addr.i.i.i303 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i303, metadata !1900, metadata !1868), !dbg !1929
  %g.addr.i.i304 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i304, metadata !1902, metadata !1868), !dbg !1930
  %retval.i305 = alloca i32, align 4
  %g.addr.i306 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i306, metadata !1904, metadata !1868), !dbg !1931
  %x.addr.i.i.i.i268 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i268, metadata !1883, metadata !1868), !dbg !1932
  %b.addr.i.i.i269 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i269, metadata !1900, metadata !1868), !dbg !1937
  %g.addr.i.i270 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i270, metadata !1902, metadata !1868), !dbg !1938
  %retval.i271 = alloca i32, align 4
  %g.addr.i272 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i272, metadata !1904, metadata !1868), !dbg !1939
  %x.addr.i.i.i.i234 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i234, metadata !1883, metadata !1868), !dbg !1940
  %b.addr.i.i.i235 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i235, metadata !1900, metadata !1868), !dbg !1945
  %g.addr.i.i236 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i236, metadata !1902, metadata !1868), !dbg !1946
  %retval.i237 = alloca i32, align 4
  %g.addr.i238 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i238, metadata !1904, metadata !1868), !dbg !1947
  %x.addr.i.i.i.i200 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i200, metadata !1883, metadata !1868), !dbg !1948
  %b.addr.i.i.i201 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i201, metadata !1900, metadata !1868), !dbg !1953
  %g.addr.i.i202 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i202, metadata !1902, metadata !1868), !dbg !1954
  %retval.i203 = alloca i32, align 4
  %g.addr.i204 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i204, metadata !1904, metadata !1868), !dbg !1955
  %x.addr.i.i.i.i166 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i166, metadata !1883, metadata !1868), !dbg !1956
  %b.addr.i.i.i167 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i167, metadata !1900, metadata !1868), !dbg !1961
  %g.addr.i.i168 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i168, metadata !1902, metadata !1868), !dbg !1962
  %retval.i169 = alloca i32, align 4
  %g.addr.i170 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i170, metadata !1904, metadata !1868), !dbg !1963
  %x.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i.i.i, metadata !1883, metadata !1868), !dbg !1964
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !1900, metadata !1868), !dbg !1969
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !1902, metadata !1868), !dbg !1970
  %retval.i156 = alloca i32, align 4
  %g.addr.i157 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i157, metadata !1904, metadata !1868), !dbg !1971
  %g.addr.i147 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i147, metadata !1875, metadata !1868), !dbg !1972
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !1881, metadata !1868), !dbg !1975
  %retval.i = alloca i64, align 8
  %g.addr.i139 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i139, metadata !1976, metadata !1868), !dbg !1980
  %g.addr.i136 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i136, metadata !1856, metadata !1868), !dbg !1983
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !1986, metadata !1868), !dbg !1990
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !1992, metadata !1868), !dbg !1993
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !1994, metadata !1868), !dbg !1995
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.QDM2Context*, align 8
  %tmp_val = alloca i32, align 4
  %tmp = alloca i32, align 4
  %size = alloca i32, align 4
  %gb = alloca %struct.GetByteContext, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1996, metadata !1868), !dbg !1997
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %s, metadata !1998, metadata !1868), !dbg !2221
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2222
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2223
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2223
  %2 = bitcast i8* %1 to %struct.QDM2Context*, !dbg !2222
  store %struct.QDM2Context* %2, %struct.QDM2Context** %s, align 8, !dbg !2221
  call void @llvm.dbg.declare(metadata i32* %tmp_val, metadata !2224, metadata !1868), !dbg !2225
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !2226, metadata !1868), !dbg !2227
  call void @llvm.dbg.declare(metadata i32* %size, metadata !2228, metadata !1868), !dbg !2229
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gb, metadata !2230, metadata !1868), !dbg !2231
  call void @qdm2_init_static_data(), !dbg !2232
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2233
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 15, !dbg !2235
  %4 = load i8*, i8** %extradata, align 8, !dbg !2235
  %tobool = icmp ne i8* %4, null, !dbg !2233
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2236

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2237
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 16, !dbg !2239
  %6 = load i32, i32* %extradata_size, align 8, !dbg !2239
  %cmp = icmp slt i32 %6, 48, !dbg !2240
  br i1 %cmp, label %if.then, label %if.end, !dbg !2241

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2242
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !2242
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i32 0, i32 0)), !dbg !2244
  store i32 -1094995529, i32* %retval, align 4, !dbg !2245
  br label %return, !dbg !2245

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2246
  %extradata3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 15, !dbg !2247
  %10 = load i8*, i8** %extradata3, align 8, !dbg !2247
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2248
  %extradata_size4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 16, !dbg !2249
  %12 = load i32, i32* %extradata_size4, align 8, !dbg !2249
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2250
  store i8* %10, i8** %buf.addr.i, align 8, !dbg !2250
  store i32 %12, i32* %buf_size.addr.i, align 4, !dbg !2250
  %13 = load i32, i32* %buf_size.addr.i, align 4, !dbg !2251
  %cmp.i = icmp sge i32 %13, 0, !dbg !2255
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !2256

if.then.i:                                        ; preds = %if.end
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i32 0, i32 0), i32 137) #9, !dbg !2257
  call void @abort() #10, !dbg !2260
  unreachable, !dbg !2262

bytestream2_init.exit:                            ; preds = %if.end
  %14 = load i8*, i8** %buf.addr.i, align 8, !dbg !2263
  %15 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2264
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %15, i32 0, i32 0, !dbg !2265
  store i8* %14, i8** %buffer.i, align 8, !dbg !2266
  %16 = load i8*, i8** %buf.addr.i, align 8, !dbg !2267
  %17 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2268
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %17, i32 0, i32 2, !dbg !2269
  store i8* %16, i8** %buffer_start.i, align 8, !dbg !2270
  %18 = load i8*, i8** %buf.addr.i, align 8, !dbg !2271
  %19 = load i32, i32* %buf_size.addr.i, align 4, !dbg !2272
  %idx.ext.i = sext i32 %19 to i64, !dbg !2273
  %add.ptr.i = getelementptr inbounds i8, i8* %18, i64 %idx.ext.i, !dbg !2273
  %20 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2274
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %20, i32 0, i32 1, !dbg !2275
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !2276
  br label %while.cond, !dbg !2277

while.cond:                                       ; preds = %bytestream2_skip.exit, %bytestream2_init.exit
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i136, align 8, !dbg !2278
  %21 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i136, align 8, !dbg !2279
  %buffer_end.i137 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %21, i32 0, i32 1, !dbg !2280
  %22 = load i8*, i8** %buffer_end.i137, align 8, !dbg !2280
  %23 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i136, align 8, !dbg !2281
  %buffer.i138 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %23, i32 0, i32 0, !dbg !2282
  %24 = load i8*, i8** %buffer.i138, align 8, !dbg !2282
  %sub.ptr.lhs.cast.i = ptrtoint i8* %22 to i64, !dbg !2283
  %sub.ptr.rhs.cast.i = ptrtoint i8* %24 to i64, !dbg !2283
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !2283
  %conv.i = trunc i64 %sub.ptr.sub.i to i32, !dbg !2279
  %cmp5 = icmp ugt i32 %conv.i, 8, !dbg !2284
  br i1 %cmp5, label %while.body, label %while.end, !dbg !2285

while.body:                                       ; preds = %while.cond
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i139, align 8, !dbg !2286
  %25 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i139, align 8, !dbg !2287
  %buffer_end.i140 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %25, i32 0, i32 1, !dbg !2289
  %26 = load i8*, i8** %buffer_end.i140, align 8, !dbg !2289
  %27 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i139, align 8, !dbg !2290
  %buffer.i141 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %27, i32 0, i32 0, !dbg !2291
  %28 = load i8*, i8** %buffer.i141, align 8, !dbg !2291
  %sub.ptr.lhs.cast.i142 = ptrtoint i8* %26 to i64, !dbg !2292
  %sub.ptr.rhs.cast.i143 = ptrtoint i8* %28 to i64, !dbg !2292
  %sub.ptr.sub.i144 = sub i64 %sub.ptr.lhs.cast.i142, %sub.ptr.rhs.cast.i143, !dbg !2292
  %cmp.i145 = icmp slt i64 %sub.ptr.sub.i144, 8, !dbg !2293
  br i1 %cmp.i145, label %if.then.i146, label %if.end.i, !dbg !2294

if.then.i146:                                     ; preds = %while.body
  store i64 0, i64* %retval.i, align 8, !dbg !2295
  br label %bytestream2_peek_be64.exit, !dbg !2295

if.end.i:                                         ; preds = %while.body
  %29 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i139, align 8, !dbg !2297
  %buffer1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %29, i32 0, i32 0, !dbg !2299
  %30 = load i8*, i8** %buffer1.i, align 8, !dbg !2299
  %31 = bitcast i8* %30 to %union.unaligned_64*, !dbg !2300
  %l.i = bitcast %union.unaligned_64* %31 to i64*, !dbg !2300
  %32 = load i64, i64* %l.i, align 1, !dbg !2300
  %call.i = call i64 @av_bswap64(i64 %32) #2, !dbg !2301
  store i64 %call.i, i64* %retval.i, align 8, !dbg !2302
  br label %bytestream2_peek_be64.exit, !dbg !2302

bytestream2_peek_be64.exit:                       ; preds = %if.then.i146, %if.end.i
  %33 = load i64, i64* %retval.i, align 8, !dbg !2303
  %cmp7 = icmp eq i64 %33, 7382083003956350258, !dbg !2305
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2306

if.then8:                                         ; preds = %bytestream2_peek_be64.exit
  br label %while.end, !dbg !2307

if.end9:                                          ; preds = %bytestream2_peek_be64.exit
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i147, align 8, !dbg !2308
  store i32 1, i32* %size.addr.i, align 4, !dbg !2308
  %34 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i147, align 8, !dbg !2309
  %buffer_end.i148 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %34, i32 0, i32 1, !dbg !2310
  %35 = load i8*, i8** %buffer_end.i148, align 8, !dbg !2310
  %36 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i147, align 8, !dbg !2311
  %buffer.i149 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %36, i32 0, i32 0, !dbg !2312
  %37 = load i8*, i8** %buffer.i149, align 8, !dbg !2312
  %sub.ptr.lhs.cast.i150 = ptrtoint i8* %35 to i64, !dbg !2313
  %sub.ptr.rhs.cast.i151 = ptrtoint i8* %37 to i64, !dbg !2313
  %sub.ptr.sub.i152 = sub i64 %sub.ptr.lhs.cast.i150, %sub.ptr.rhs.cast.i151, !dbg !2313
  %38 = load i32, i32* %size.addr.i, align 4, !dbg !2314
  %conv.i153 = zext i32 %38 to i64, !dbg !2315
  %cmp.i154 = icmp sgt i64 %sub.ptr.sub.i152, %conv.i153, !dbg !2316
  br i1 %cmp.i154, label %cond.true.i, label %cond.false.i, !dbg !2317

cond.true.i:                                      ; preds = %if.end9
  %39 = load i32, i32* %size.addr.i, align 4, !dbg !2318
  %conv2.i = zext i32 %39 to i64, !dbg !2320
  br label %bytestream2_skip.exit, !dbg !2321

cond.false.i:                                     ; preds = %if.end9
  %40 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i147, align 8, !dbg !2322
  %buffer_end3.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %40, i32 0, i32 1, !dbg !2324
  %41 = load i8*, i8** %buffer_end3.i, align 8, !dbg !2324
  %42 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i147, align 8, !dbg !2325
  %buffer4.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %42, i32 0, i32 0, !dbg !2326
  %43 = load i8*, i8** %buffer4.i, align 8, !dbg !2326
  %sub.ptr.lhs.cast5.i = ptrtoint i8* %41 to i64, !dbg !2327
  %sub.ptr.rhs.cast6.i = ptrtoint i8* %43 to i64, !dbg !2327
  %sub.ptr.sub7.i = sub i64 %sub.ptr.lhs.cast5.i, %sub.ptr.rhs.cast6.i, !dbg !2327
  br label %bytestream2_skip.exit, !dbg !2328

bytestream2_skip.exit:                            ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i64 [ %conv2.i, %cond.true.i ], [ %sub.ptr.sub7.i, %cond.false.i ], !dbg !2329
  %44 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i147, align 8, !dbg !2331
  %buffer8.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %44, i32 0, i32 0, !dbg !2332
  %45 = load i8*, i8** %buffer8.i, align 8, !dbg !2333
  %add.ptr.i155 = getelementptr inbounds i8, i8* %45, i64 %cond.i, !dbg !2333
  store i8* %add.ptr.i155, i8** %buffer8.i, align 8, !dbg !2333
  br label %while.cond, !dbg !2334, !llvm.loop !2336

while.end:                                        ; preds = %if.then8, %while.cond
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i467, align 8, !dbg !2337
  %46 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i467, align 8, !dbg !2338
  %buffer_end.i468 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %46, i32 0, i32 1, !dbg !2339
  %47 = load i8*, i8** %buffer_end.i468, align 8, !dbg !2339
  %48 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i467, align 8, !dbg !2340
  %buffer.i469 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %48, i32 0, i32 0, !dbg !2341
  %49 = load i8*, i8** %buffer.i469, align 8, !dbg !2341
  %sub.ptr.lhs.cast.i470 = ptrtoint i8* %47 to i64, !dbg !2342
  %sub.ptr.rhs.cast.i471 = ptrtoint i8* %49 to i64, !dbg !2342
  %sub.ptr.sub.i472 = sub i64 %sub.ptr.lhs.cast.i470, %sub.ptr.rhs.cast.i471, !dbg !2342
  %conv.i473 = trunc i64 %sub.ptr.sub.i472 to i32, !dbg !2338
  %cmp11 = icmp ult i32 %conv.i473, 12, !dbg !2343
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !2344

if.then12:                                        ; preds = %while.end
  %50 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2345
  %51 = bitcast %struct.AVCodecContext* %50 to i8*, !dbg !2345
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i460, align 8, !dbg !2346
  %52 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i460, align 8, !dbg !2347
  %buffer_end.i461 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %52, i32 0, i32 1, !dbg !2348
  %53 = load i8*, i8** %buffer_end.i461, align 8, !dbg !2348
  %54 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i460, align 8, !dbg !2349
  %buffer.i462 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %54, i32 0, i32 0, !dbg !2350
  %55 = load i8*, i8** %buffer.i462, align 8, !dbg !2350
  %sub.ptr.lhs.cast.i463 = ptrtoint i8* %53 to i64, !dbg !2351
  %sub.ptr.rhs.cast.i464 = ptrtoint i8* %55 to i64, !dbg !2351
  %sub.ptr.sub.i465 = sub i64 %sub.ptr.lhs.cast.i463, %sub.ptr.rhs.cast.i464, !dbg !2351
  %conv.i466 = trunc i64 %sub.ptr.sub.i465 to i32, !dbg !2347
  call void (i8*, i32, i8*, ...) @av_log(i8* %51, i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i32 0, i32 0), i32 %conv.i466), !dbg !2352
  store i32 -1094995529, i32* %retval, align 4, !dbg !2353
  br label %return, !dbg !2353

if.end14:                                         ; preds = %while.end
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i439, align 8, !dbg !2354
  store i32 8, i32* %size.addr.i440, align 4, !dbg !2354
  %56 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i439, align 8, !dbg !2355
  %buffer_end.i441 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %56, i32 0, i32 1, !dbg !2356
  %57 = load i8*, i8** %buffer_end.i441, align 8, !dbg !2356
  %58 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i439, align 8, !dbg !2357
  %buffer.i442 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %58, i32 0, i32 0, !dbg !2358
  %59 = load i8*, i8** %buffer.i442, align 8, !dbg !2358
  %sub.ptr.lhs.cast.i443 = ptrtoint i8* %57 to i64, !dbg !2359
  %sub.ptr.rhs.cast.i444 = ptrtoint i8* %59 to i64, !dbg !2359
  %sub.ptr.sub.i445 = sub i64 %sub.ptr.lhs.cast.i443, %sub.ptr.rhs.cast.i444, !dbg !2359
  %60 = load i32, i32* %size.addr.i440, align 4, !dbg !2360
  %conv.i446 = zext i32 %60 to i64, !dbg !2361
  %cmp.i447 = icmp sgt i64 %sub.ptr.sub.i445, %conv.i446, !dbg !2362
  br i1 %cmp.i447, label %cond.true.i449, label %cond.false.i455, !dbg !2363

cond.true.i449:                                   ; preds = %if.end14
  %61 = load i32, i32* %size.addr.i440, align 4, !dbg !2364
  %conv2.i448 = zext i32 %61 to i64, !dbg !2365
  br label %bytestream2_skip.exit459, !dbg !2366

cond.false.i455:                                  ; preds = %if.end14
  %62 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i439, align 8, !dbg !2367
  %buffer_end3.i450 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %62, i32 0, i32 1, !dbg !2368
  %63 = load i8*, i8** %buffer_end3.i450, align 8, !dbg !2368
  %64 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i439, align 8, !dbg !2369
  %buffer4.i451 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %64, i32 0, i32 0, !dbg !2370
  %65 = load i8*, i8** %buffer4.i451, align 8, !dbg !2370
  %sub.ptr.lhs.cast5.i452 = ptrtoint i8* %63 to i64, !dbg !2371
  %sub.ptr.rhs.cast6.i453 = ptrtoint i8* %65 to i64, !dbg !2371
  %sub.ptr.sub7.i454 = sub i64 %sub.ptr.lhs.cast5.i452, %sub.ptr.rhs.cast6.i453, !dbg !2371
  br label %bytestream2_skip.exit459, !dbg !2372

bytestream2_skip.exit459:                         ; preds = %cond.true.i449, %cond.false.i455
  %cond.i456 = phi i64 [ %conv2.i448, %cond.true.i449 ], [ %sub.ptr.sub7.i454, %cond.false.i455 ], !dbg !2373
  %66 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i439, align 8, !dbg !2374
  %buffer8.i457 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %66, i32 0, i32 0, !dbg !2375
  %67 = load i8*, i8** %buffer8.i457, align 8, !dbg !2376
  %add.ptr.i458 = getelementptr inbounds i8, i8* %67, i64 %cond.i456, !dbg !2376
  store i8* %add.ptr.i458, i8** %buffer8.i457, align 8, !dbg !2376
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i409, align 8, !dbg !2377
  %68 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i409, align 8, !dbg !2378
  %buffer_end.i410 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %68, i32 0, i32 1, !dbg !2380
  %69 = load i8*, i8** %buffer_end.i410, align 8, !dbg !2380
  %70 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i409, align 8, !dbg !2381
  %buffer.i411 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %70, i32 0, i32 0, !dbg !2382
  %71 = load i8*, i8** %buffer.i411, align 8, !dbg !2382
  %sub.ptr.lhs.cast.i412 = ptrtoint i8* %69 to i64, !dbg !2383
  %sub.ptr.rhs.cast.i413 = ptrtoint i8* %71 to i64, !dbg !2383
  %sub.ptr.sub.i414 = sub i64 %sub.ptr.lhs.cast.i412, %sub.ptr.rhs.cast.i413, !dbg !2383
  %cmp.i415 = icmp slt i64 %sub.ptr.sub.i414, 4, !dbg !2384
  br i1 %cmp.i415, label %if.then.i418, label %if.end.i437, !dbg !2385

if.then.i418:                                     ; preds = %bytestream2_skip.exit459
  %72 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i409, align 8, !dbg !2386
  %buffer_end1.i416 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %72, i32 0, i32 1, !dbg !2389
  %73 = load i8*, i8** %buffer_end1.i416, align 8, !dbg !2389
  %74 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i409, align 8, !dbg !2390
  %buffer2.i417 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %74, i32 0, i32 0, !dbg !2391
  store i8* %73, i8** %buffer2.i417, align 8, !dbg !2392
  store i32 0, i32* %retval.i408, align 4, !dbg !2393
  br label %bytestream2_get_be32.exit438, !dbg !2393

if.end.i437:                                      ; preds = %bytestream2_skip.exit459
  %75 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i409, align 8, !dbg !2394
  store %struct.GetByteContext* %75, %struct.GetByteContext** %g.addr.i.i407, align 8, !dbg !2395
  %76 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i407, align 8, !dbg !2396
  %buffer.i.i419 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %76, i32 0, i32 0, !dbg !2397
  store i8** %buffer.i.i419, i8*** %b.addr.i.i.i406, align 8, !dbg !2398
  %77 = load i8**, i8*** %b.addr.i.i.i406, align 8, !dbg !2399
  %78 = load i8*, i8** %77, align 8, !dbg !2400
  %add.ptr.i.i.i420 = getelementptr inbounds i8, i8* %78, i64 4, !dbg !2400
  store i8* %add.ptr.i.i.i420, i8** %77, align 8, !dbg !2400
  %79 = load i8**, i8*** %b.addr.i.i.i406, align 8, !dbg !2401
  %80 = load i8*, i8** %79, align 8, !dbg !2402
  %add.ptr1.i.i.i421 = getelementptr inbounds i8, i8* %80, i64 -4, !dbg !2403
  %81 = bitcast i8* %add.ptr1.i.i.i421 to %union.unaligned_32*, !dbg !2404
  %l.i.i.i422 = bitcast %union.unaligned_32* %81 to i32*, !dbg !2404
  %82 = load i32, i32* %l.i.i.i422, align 1, !dbg !2404
  store i32 %82, i32* %x.addr.i.i.i.i405, align 4, !dbg !2405
  %83 = load i32, i32* %x.addr.i.i.i.i405, align 4, !dbg !2406
  %shl.i.i.i.i423 = shl i32 %83, 8, !dbg !2407
  %and.i.i.i.i424 = and i32 %shl.i.i.i.i423, 65280, !dbg !2408
  %84 = load i32, i32* %x.addr.i.i.i.i405, align 4, !dbg !2409
  %shr.i.i.i.i425 = lshr i32 %84, 8, !dbg !2410
  %and1.i.i.i.i426 = and i32 %shr.i.i.i.i425, 255, !dbg !2411
  %or.i.i.i.i427 = or i32 %and.i.i.i.i424, %and1.i.i.i.i426, !dbg !2412
  %shl2.i.i.i.i428 = shl i32 %or.i.i.i.i427, 16, !dbg !2413
  %85 = load i32, i32* %x.addr.i.i.i.i405, align 4, !dbg !2414
  %shr3.i.i.i.i429 = lshr i32 %85, 16, !dbg !2415
  %shl4.i.i.i.i430 = shl i32 %shr3.i.i.i.i429, 8, !dbg !2416
  %and5.i.i.i.i431 = and i32 %shl4.i.i.i.i430, 65280, !dbg !2417
  %86 = load i32, i32* %x.addr.i.i.i.i405, align 4, !dbg !2418
  %shr6.i.i.i.i432 = lshr i32 %86, 16, !dbg !2419
  %shr7.i.i.i.i433 = lshr i32 %shr6.i.i.i.i432, 8, !dbg !2420
  %and8.i.i.i.i434 = and i32 %shr7.i.i.i.i433, 255, !dbg !2421
  %or9.i.i.i.i435 = or i32 %and5.i.i.i.i431, %and8.i.i.i.i434, !dbg !2422
  %or10.i.i.i.i436 = or i32 %shl2.i.i.i.i428, %or9.i.i.i.i435, !dbg !2423
  store i32 %or10.i.i.i.i436, i32* %retval.i408, align 4, !dbg !2424
  br label %bytestream2_get_be32.exit438, !dbg !2424

bytestream2_get_be32.exit438:                     ; preds = %if.then.i418, %if.end.i437
  %87 = load i32, i32* %retval.i408, align 4, !dbg !2425
  store i32 %87, i32* %size, align 4, !dbg !2427
  %88 = load i32, i32* %size, align 4, !dbg !2428
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i398, align 8, !dbg !2429
  %89 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i398, align 8, !dbg !2430
  %buffer_end.i399 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %89, i32 0, i32 1, !dbg !2431
  %90 = load i8*, i8** %buffer_end.i399, align 8, !dbg !2431
  %91 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i398, align 8, !dbg !2432
  %buffer.i400 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %91, i32 0, i32 0, !dbg !2433
  %92 = load i8*, i8** %buffer.i400, align 8, !dbg !2433
  %sub.ptr.lhs.cast.i401 = ptrtoint i8* %90 to i64, !dbg !2434
  %sub.ptr.rhs.cast.i402 = ptrtoint i8* %92 to i64, !dbg !2434
  %sub.ptr.sub.i403 = sub i64 %sub.ptr.lhs.cast.i401, %sub.ptr.rhs.cast.i402, !dbg !2434
  %conv.i404 = trunc i64 %sub.ptr.sub.i403 to i32, !dbg !2430
  %cmp17 = icmp ugt i32 %88, %conv.i404, !dbg !2435
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !2436

if.then18:                                        ; preds = %bytestream2_get_be32.exit438
  %93 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2437
  %94 = bitcast %struct.AVCodecContext* %93 to i8*, !dbg !2437
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i391, align 8, !dbg !2438
  %95 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i391, align 8, !dbg !2439
  %buffer_end.i392 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %95, i32 0, i32 1, !dbg !2440
  %96 = load i8*, i8** %buffer_end.i392, align 8, !dbg !2440
  %97 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i391, align 8, !dbg !2441
  %buffer.i393 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %97, i32 0, i32 0, !dbg !2442
  %98 = load i8*, i8** %buffer.i393, align 8, !dbg !2442
  %sub.ptr.lhs.cast.i394 = ptrtoint i8* %96 to i64, !dbg !2443
  %sub.ptr.rhs.cast.i395 = ptrtoint i8* %98 to i64, !dbg !2443
  %sub.ptr.sub.i396 = sub i64 %sub.ptr.lhs.cast.i394, %sub.ptr.rhs.cast.i395, !dbg !2443
  %conv.i397 = trunc i64 %sub.ptr.sub.i396 to i32, !dbg !2439
  %99 = load i32, i32* %size, align 4, !dbg !2444
  call void (i8*, i32, i8*, ...) @av_log(i8* %94, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i32 0, i32 0), i32 %conv.i397, i32 %99), !dbg !2445
  store i32 -1094995529, i32* %retval, align 4, !dbg !2446
  br label %return, !dbg !2446

if.end20:                                         ; preds = %bytestream2_get_be32.exit438
  %100 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2447
  %101 = bitcast %struct.AVCodecContext* %100 to i8*, !dbg !2447
  %102 = load i32, i32* %size, align 4, !dbg !2448
  call void (i8*, i32, i8*, ...) @av_log(i8* %101, i32 48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0), i32 %102), !dbg !2449
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i361, align 8, !dbg !2450
  %103 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i361, align 8, !dbg !2451
  %buffer_end.i362 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %103, i32 0, i32 1, !dbg !2452
  %104 = load i8*, i8** %buffer_end.i362, align 8, !dbg !2452
  %105 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i361, align 8, !dbg !2453
  %buffer.i363 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %105, i32 0, i32 0, !dbg !2454
  %106 = load i8*, i8** %buffer.i363, align 8, !dbg !2454
  %sub.ptr.lhs.cast.i364 = ptrtoint i8* %104 to i64, !dbg !2455
  %sub.ptr.rhs.cast.i365 = ptrtoint i8* %106 to i64, !dbg !2455
  %sub.ptr.sub.i366 = sub i64 %sub.ptr.lhs.cast.i364, %sub.ptr.rhs.cast.i365, !dbg !2455
  %cmp.i367 = icmp slt i64 %sub.ptr.sub.i366, 4, !dbg !2456
  br i1 %cmp.i367, label %if.then.i370, label %if.end.i389, !dbg !2457

if.then.i370:                                     ; preds = %if.end20
  %107 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i361, align 8, !dbg !2458
  %buffer_end1.i368 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %107, i32 0, i32 1, !dbg !2459
  %108 = load i8*, i8** %buffer_end1.i368, align 8, !dbg !2459
  %109 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i361, align 8, !dbg !2460
  %buffer2.i369 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %109, i32 0, i32 0, !dbg !2461
  store i8* %108, i8** %buffer2.i369, align 8, !dbg !2462
  store i32 0, i32* %retval.i360, align 4, !dbg !2463
  br label %bytestream2_get_be32.exit390, !dbg !2463

if.end.i389:                                      ; preds = %if.end20
  %110 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i361, align 8, !dbg !2464
  store %struct.GetByteContext* %110, %struct.GetByteContext** %g.addr.i.i359, align 8, !dbg !2465
  %111 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i359, align 8, !dbg !2466
  %buffer.i.i371 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %111, i32 0, i32 0, !dbg !2467
  store i8** %buffer.i.i371, i8*** %b.addr.i.i.i358, align 8, !dbg !2468
  %112 = load i8**, i8*** %b.addr.i.i.i358, align 8, !dbg !2469
  %113 = load i8*, i8** %112, align 8, !dbg !2470
  %add.ptr.i.i.i372 = getelementptr inbounds i8, i8* %113, i64 4, !dbg !2470
  store i8* %add.ptr.i.i.i372, i8** %112, align 8, !dbg !2470
  %114 = load i8**, i8*** %b.addr.i.i.i358, align 8, !dbg !2471
  %115 = load i8*, i8** %114, align 8, !dbg !2472
  %add.ptr1.i.i.i373 = getelementptr inbounds i8, i8* %115, i64 -4, !dbg !2473
  %116 = bitcast i8* %add.ptr1.i.i.i373 to %union.unaligned_32*, !dbg !2474
  %l.i.i.i374 = bitcast %union.unaligned_32* %116 to i32*, !dbg !2474
  %117 = load i32, i32* %l.i.i.i374, align 1, !dbg !2474
  store i32 %117, i32* %x.addr.i.i.i.i357, align 4, !dbg !2475
  %118 = load i32, i32* %x.addr.i.i.i.i357, align 4, !dbg !2476
  %shl.i.i.i.i375 = shl i32 %118, 8, !dbg !2477
  %and.i.i.i.i376 = and i32 %shl.i.i.i.i375, 65280, !dbg !2478
  %119 = load i32, i32* %x.addr.i.i.i.i357, align 4, !dbg !2479
  %shr.i.i.i.i377 = lshr i32 %119, 8, !dbg !2480
  %and1.i.i.i.i378 = and i32 %shr.i.i.i.i377, 255, !dbg !2481
  %or.i.i.i.i379 = or i32 %and.i.i.i.i376, %and1.i.i.i.i378, !dbg !2482
  %shl2.i.i.i.i380 = shl i32 %or.i.i.i.i379, 16, !dbg !2483
  %120 = load i32, i32* %x.addr.i.i.i.i357, align 4, !dbg !2484
  %shr3.i.i.i.i381 = lshr i32 %120, 16, !dbg !2485
  %shl4.i.i.i.i382 = shl i32 %shr3.i.i.i.i381, 8, !dbg !2486
  %and5.i.i.i.i383 = and i32 %shl4.i.i.i.i382, 65280, !dbg !2487
  %121 = load i32, i32* %x.addr.i.i.i.i357, align 4, !dbg !2488
  %shr6.i.i.i.i384 = lshr i32 %121, 16, !dbg !2489
  %shr7.i.i.i.i385 = lshr i32 %shr6.i.i.i.i384, 8, !dbg !2490
  %and8.i.i.i.i386 = and i32 %shr7.i.i.i.i385, 255, !dbg !2491
  %or9.i.i.i.i387 = or i32 %and5.i.i.i.i383, %and8.i.i.i.i386, !dbg !2492
  %or10.i.i.i.i388 = or i32 %shl2.i.i.i.i380, %or9.i.i.i.i387, !dbg !2493
  store i32 %or10.i.i.i.i388, i32* %retval.i360, align 4, !dbg !2494
  br label %bytestream2_get_be32.exit390, !dbg !2494

bytestream2_get_be32.exit390:                     ; preds = %if.then.i370, %if.end.i389
  %122 = load i32, i32* %retval.i360, align 4, !dbg !2495
  %cmp22 = icmp ne i32 %122, 1363428161, !dbg !2496
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !2497

if.then23:                                        ; preds = %bytestream2_get_be32.exit390
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2498
  %124 = bitcast %struct.AVCodecContext* %123 to i8*, !dbg !2498
  call void (i8*, i32, i8*, ...) @av_log(i8* %124, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i32 0, i32 0)), !dbg !2500
  store i32 -1094995529, i32* %retval, align 4, !dbg !2501
  br label %return, !dbg !2501

if.end24:                                         ; preds = %bytestream2_get_be32.exit390
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i336, align 8, !dbg !2502
  store i32 4, i32* %size.addr.i337, align 4, !dbg !2502
  %125 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i336, align 8, !dbg !2503
  %buffer_end.i338 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %125, i32 0, i32 1, !dbg !2504
  %126 = load i8*, i8** %buffer_end.i338, align 8, !dbg !2504
  %127 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i336, align 8, !dbg !2505
  %buffer.i339 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %127, i32 0, i32 0, !dbg !2506
  %128 = load i8*, i8** %buffer.i339, align 8, !dbg !2506
  %sub.ptr.lhs.cast.i340 = ptrtoint i8* %126 to i64, !dbg !2507
  %sub.ptr.rhs.cast.i341 = ptrtoint i8* %128 to i64, !dbg !2507
  %sub.ptr.sub.i342 = sub i64 %sub.ptr.lhs.cast.i340, %sub.ptr.rhs.cast.i341, !dbg !2507
  %129 = load i32, i32* %size.addr.i337, align 4, !dbg !2508
  %conv.i343 = zext i32 %129 to i64, !dbg !2509
  %cmp.i344 = icmp sgt i64 %sub.ptr.sub.i342, %conv.i343, !dbg !2510
  br i1 %cmp.i344, label %cond.true.i346, label %cond.false.i352, !dbg !2511

cond.true.i346:                                   ; preds = %if.end24
  %130 = load i32, i32* %size.addr.i337, align 4, !dbg !2512
  %conv2.i345 = zext i32 %130 to i64, !dbg !2513
  br label %bytestream2_skip.exit356, !dbg !2514

cond.false.i352:                                  ; preds = %if.end24
  %131 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i336, align 8, !dbg !2515
  %buffer_end3.i347 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %131, i32 0, i32 1, !dbg !2516
  %132 = load i8*, i8** %buffer_end3.i347, align 8, !dbg !2516
  %133 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i336, align 8, !dbg !2517
  %buffer4.i348 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %133, i32 0, i32 0, !dbg !2518
  %134 = load i8*, i8** %buffer4.i348, align 8, !dbg !2518
  %sub.ptr.lhs.cast5.i349 = ptrtoint i8* %132 to i64, !dbg !2519
  %sub.ptr.rhs.cast6.i350 = ptrtoint i8* %134 to i64, !dbg !2519
  %sub.ptr.sub7.i351 = sub i64 %sub.ptr.lhs.cast5.i349, %sub.ptr.rhs.cast6.i350, !dbg !2519
  br label %bytestream2_skip.exit356, !dbg !2520

bytestream2_skip.exit356:                         ; preds = %cond.true.i346, %cond.false.i352
  %cond.i353 = phi i64 [ %conv2.i345, %cond.true.i346 ], [ %sub.ptr.sub7.i351, %cond.false.i352 ], !dbg !2521
  %135 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i336, align 8, !dbg !2522
  %buffer8.i354 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %135, i32 0, i32 0, !dbg !2523
  %136 = load i8*, i8** %buffer8.i354, align 8, !dbg !2524
  %add.ptr.i355 = getelementptr inbounds i8, i8* %136, i64 %cond.i353, !dbg !2524
  store i8* %add.ptr.i355, i8** %buffer8.i354, align 8, !dbg !2524
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i306, align 8, !dbg !2525
  %137 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i306, align 8, !dbg !2526
  %buffer_end.i307 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %137, i32 0, i32 1, !dbg !2527
  %138 = load i8*, i8** %buffer_end.i307, align 8, !dbg !2527
  %139 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i306, align 8, !dbg !2528
  %buffer.i308 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %139, i32 0, i32 0, !dbg !2529
  %140 = load i8*, i8** %buffer.i308, align 8, !dbg !2529
  %sub.ptr.lhs.cast.i309 = ptrtoint i8* %138 to i64, !dbg !2530
  %sub.ptr.rhs.cast.i310 = ptrtoint i8* %140 to i64, !dbg !2530
  %sub.ptr.sub.i311 = sub i64 %sub.ptr.lhs.cast.i309, %sub.ptr.rhs.cast.i310, !dbg !2530
  %cmp.i312 = icmp slt i64 %sub.ptr.sub.i311, 4, !dbg !2531
  br i1 %cmp.i312, label %if.then.i315, label %if.end.i334, !dbg !2532

if.then.i315:                                     ; preds = %bytestream2_skip.exit356
  %141 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i306, align 8, !dbg !2533
  %buffer_end1.i313 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %141, i32 0, i32 1, !dbg !2534
  %142 = load i8*, i8** %buffer_end1.i313, align 8, !dbg !2534
  %143 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i306, align 8, !dbg !2535
  %buffer2.i314 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %143, i32 0, i32 0, !dbg !2536
  store i8* %142, i8** %buffer2.i314, align 8, !dbg !2537
  store i32 0, i32* %retval.i305, align 4, !dbg !2538
  br label %bytestream2_get_be32.exit335, !dbg !2538

if.end.i334:                                      ; preds = %bytestream2_skip.exit356
  %144 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i306, align 8, !dbg !2539
  store %struct.GetByteContext* %144, %struct.GetByteContext** %g.addr.i.i304, align 8, !dbg !2540
  %145 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i304, align 8, !dbg !2541
  %buffer.i.i316 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %145, i32 0, i32 0, !dbg !2542
  store i8** %buffer.i.i316, i8*** %b.addr.i.i.i303, align 8, !dbg !2543
  %146 = load i8**, i8*** %b.addr.i.i.i303, align 8, !dbg !2544
  %147 = load i8*, i8** %146, align 8, !dbg !2545
  %add.ptr.i.i.i317 = getelementptr inbounds i8, i8* %147, i64 4, !dbg !2545
  store i8* %add.ptr.i.i.i317, i8** %146, align 8, !dbg !2545
  %148 = load i8**, i8*** %b.addr.i.i.i303, align 8, !dbg !2546
  %149 = load i8*, i8** %148, align 8, !dbg !2547
  %add.ptr1.i.i.i318 = getelementptr inbounds i8, i8* %149, i64 -4, !dbg !2548
  %150 = bitcast i8* %add.ptr1.i.i.i318 to %union.unaligned_32*, !dbg !2549
  %l.i.i.i319 = bitcast %union.unaligned_32* %150 to i32*, !dbg !2549
  %151 = load i32, i32* %l.i.i.i319, align 1, !dbg !2549
  store i32 %151, i32* %x.addr.i.i.i.i302, align 4, !dbg !2550
  %152 = load i32, i32* %x.addr.i.i.i.i302, align 4, !dbg !2551
  %shl.i.i.i.i320 = shl i32 %152, 8, !dbg !2552
  %and.i.i.i.i321 = and i32 %shl.i.i.i.i320, 65280, !dbg !2553
  %153 = load i32, i32* %x.addr.i.i.i.i302, align 4, !dbg !2554
  %shr.i.i.i.i322 = lshr i32 %153, 8, !dbg !2555
  %and1.i.i.i.i323 = and i32 %shr.i.i.i.i322, 255, !dbg !2556
  %or.i.i.i.i324 = or i32 %and.i.i.i.i321, %and1.i.i.i.i323, !dbg !2557
  %shl2.i.i.i.i325 = shl i32 %or.i.i.i.i324, 16, !dbg !2558
  %154 = load i32, i32* %x.addr.i.i.i.i302, align 4, !dbg !2559
  %shr3.i.i.i.i326 = lshr i32 %154, 16, !dbg !2560
  %shl4.i.i.i.i327 = shl i32 %shr3.i.i.i.i326, 8, !dbg !2561
  %and5.i.i.i.i328 = and i32 %shl4.i.i.i.i327, 65280, !dbg !2562
  %155 = load i32, i32* %x.addr.i.i.i.i302, align 4, !dbg !2563
  %shr6.i.i.i.i329 = lshr i32 %155, 16, !dbg !2564
  %shr7.i.i.i.i330 = lshr i32 %shr6.i.i.i.i329, 8, !dbg !2565
  %and8.i.i.i.i331 = and i32 %shr7.i.i.i.i330, 255, !dbg !2566
  %or9.i.i.i.i332 = or i32 %and5.i.i.i.i328, %and8.i.i.i.i331, !dbg !2567
  %or10.i.i.i.i333 = or i32 %shl2.i.i.i.i325, %or9.i.i.i.i332, !dbg !2568
  store i32 %or10.i.i.i.i333, i32* %retval.i305, align 4, !dbg !2569
  br label %bytestream2_get_be32.exit335, !dbg !2569

bytestream2_get_be32.exit335:                     ; preds = %if.then.i315, %if.end.i334
  %156 = load i32, i32* %retval.i305, align 4, !dbg !2570
  %157 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2571
  %channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %157, i32 0, i32 1, !dbg !2572
  store i32 %156, i32* %channels, align 4, !dbg !2573
  %158 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2574
  %nb_channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %158, i32 0, i32 0, !dbg !2575
  store i32 %156, i32* %nb_channels, align 32, !dbg !2576
  %159 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2577
  %channels26 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %159, i32 0, i32 83, !dbg !2578
  store i32 %156, i32* %channels26, align 4, !dbg !2579
  %160 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2580
  %channels27 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %160, i32 0, i32 1, !dbg !2582
  %161 = load i32, i32* %channels27, align 4, !dbg !2582
  %cmp28 = icmp sle i32 %161, 0, !dbg !2583
  br i1 %cmp28, label %if.then32, label %lor.lhs.false29, !dbg !2584

lor.lhs.false29:                                  ; preds = %bytestream2_get_be32.exit335
  %162 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2585
  %channels30 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %162, i32 0, i32 1, !dbg !2587
  %163 = load i32, i32* %channels30, align 4, !dbg !2587
  %cmp31 = icmp sgt i32 %163, 2, !dbg !2588
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !2589

if.then32:                                        ; preds = %lor.lhs.false29, %bytestream2_get_be32.exit335
  %164 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2590
  %165 = bitcast %struct.AVCodecContext* %164 to i8*, !dbg !2590
  call void (i8*, i32, i8*, ...) @av_log(i8* %165, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i32 0, i32 0)), !dbg !2592
  store i32 -1094995529, i32* %retval, align 4, !dbg !2593
  br label %return, !dbg !2593

if.end33:                                         ; preds = %lor.lhs.false29
  %166 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2594
  %channels34 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %166, i32 0, i32 83, !dbg !2595
  %167 = load i32, i32* %channels34, align 4, !dbg !2595
  %cmp35 = icmp eq i32 %167, 2, !dbg !2596
  %cond = select i1 %cmp35, i32 3, i32 4, !dbg !2594
  %conv = sext i32 %cond to i64, !dbg !2594
  %168 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2597
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %168, i32 0, i32 89, !dbg !2598
  store i64 %conv, i64* %channel_layout, align 8, !dbg !2599
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i272, align 8, !dbg !2600
  %169 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i272, align 8, !dbg !2601
  %buffer_end.i273 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %169, i32 0, i32 1, !dbg !2602
  %170 = load i8*, i8** %buffer_end.i273, align 8, !dbg !2602
  %171 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i272, align 8, !dbg !2603
  %buffer.i274 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %171, i32 0, i32 0, !dbg !2604
  %172 = load i8*, i8** %buffer.i274, align 8, !dbg !2604
  %sub.ptr.lhs.cast.i275 = ptrtoint i8* %170 to i64, !dbg !2605
  %sub.ptr.rhs.cast.i276 = ptrtoint i8* %172 to i64, !dbg !2605
  %sub.ptr.sub.i277 = sub i64 %sub.ptr.lhs.cast.i275, %sub.ptr.rhs.cast.i276, !dbg !2605
  %cmp.i278 = icmp slt i64 %sub.ptr.sub.i277, 4, !dbg !2606
  br i1 %cmp.i278, label %if.then.i281, label %if.end.i300, !dbg !2607

if.then.i281:                                     ; preds = %if.end33
  %173 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i272, align 8, !dbg !2608
  %buffer_end1.i279 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %173, i32 0, i32 1, !dbg !2609
  %174 = load i8*, i8** %buffer_end1.i279, align 8, !dbg !2609
  %175 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i272, align 8, !dbg !2610
  %buffer2.i280 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %175, i32 0, i32 0, !dbg !2611
  store i8* %174, i8** %buffer2.i280, align 8, !dbg !2612
  store i32 0, i32* %retval.i271, align 4, !dbg !2613
  br label %bytestream2_get_be32.exit301, !dbg !2613

if.end.i300:                                      ; preds = %if.end33
  %176 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i272, align 8, !dbg !2614
  store %struct.GetByteContext* %176, %struct.GetByteContext** %g.addr.i.i270, align 8, !dbg !2615
  %177 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i270, align 8, !dbg !2616
  %buffer.i.i282 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %177, i32 0, i32 0, !dbg !2617
  store i8** %buffer.i.i282, i8*** %b.addr.i.i.i269, align 8, !dbg !2618
  %178 = load i8**, i8*** %b.addr.i.i.i269, align 8, !dbg !2619
  %179 = load i8*, i8** %178, align 8, !dbg !2620
  %add.ptr.i.i.i283 = getelementptr inbounds i8, i8* %179, i64 4, !dbg !2620
  store i8* %add.ptr.i.i.i283, i8** %178, align 8, !dbg !2620
  %180 = load i8**, i8*** %b.addr.i.i.i269, align 8, !dbg !2621
  %181 = load i8*, i8** %180, align 8, !dbg !2622
  %add.ptr1.i.i.i284 = getelementptr inbounds i8, i8* %181, i64 -4, !dbg !2623
  %182 = bitcast i8* %add.ptr1.i.i.i284 to %union.unaligned_32*, !dbg !2624
  %l.i.i.i285 = bitcast %union.unaligned_32* %182 to i32*, !dbg !2624
  %183 = load i32, i32* %l.i.i.i285, align 1, !dbg !2624
  store i32 %183, i32* %x.addr.i.i.i.i268, align 4, !dbg !2625
  %184 = load i32, i32* %x.addr.i.i.i.i268, align 4, !dbg !2626
  %shl.i.i.i.i286 = shl i32 %184, 8, !dbg !2627
  %and.i.i.i.i287 = and i32 %shl.i.i.i.i286, 65280, !dbg !2628
  %185 = load i32, i32* %x.addr.i.i.i.i268, align 4, !dbg !2629
  %shr.i.i.i.i288 = lshr i32 %185, 8, !dbg !2630
  %and1.i.i.i.i289 = and i32 %shr.i.i.i.i288, 255, !dbg !2631
  %or.i.i.i.i290 = or i32 %and.i.i.i.i287, %and1.i.i.i.i289, !dbg !2632
  %shl2.i.i.i.i291 = shl i32 %or.i.i.i.i290, 16, !dbg !2633
  %186 = load i32, i32* %x.addr.i.i.i.i268, align 4, !dbg !2634
  %shr3.i.i.i.i292 = lshr i32 %186, 16, !dbg !2635
  %shl4.i.i.i.i293 = shl i32 %shr3.i.i.i.i292, 8, !dbg !2636
  %and5.i.i.i.i294 = and i32 %shl4.i.i.i.i293, 65280, !dbg !2637
  %187 = load i32, i32* %x.addr.i.i.i.i268, align 4, !dbg !2638
  %shr6.i.i.i.i295 = lshr i32 %187, 16, !dbg !2639
  %shr7.i.i.i.i296 = lshr i32 %shr6.i.i.i.i295, 8, !dbg !2640
  %and8.i.i.i.i297 = and i32 %shr7.i.i.i.i296, 255, !dbg !2641
  %or9.i.i.i.i298 = or i32 %and5.i.i.i.i294, %and8.i.i.i.i297, !dbg !2642
  %or10.i.i.i.i299 = or i32 %shl2.i.i.i.i291, %or9.i.i.i.i298, !dbg !2643
  store i32 %or10.i.i.i.i299, i32* %retval.i271, align 4, !dbg !2644
  br label %bytestream2_get_be32.exit301, !dbg !2644

bytestream2_get_be32.exit301:                     ; preds = %if.then.i281, %if.end.i300
  %188 = load i32, i32* %retval.i271, align 4, !dbg !2645
  %189 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2646
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %189, i32 0, i32 82, !dbg !2647
  store i32 %188, i32* %sample_rate, align 8, !dbg !2648
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i238, align 8, !dbg !2649
  %190 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i238, align 8, !dbg !2650
  %buffer_end.i239 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %190, i32 0, i32 1, !dbg !2651
  %191 = load i8*, i8** %buffer_end.i239, align 8, !dbg !2651
  %192 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i238, align 8, !dbg !2652
  %buffer.i240 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %192, i32 0, i32 0, !dbg !2653
  %193 = load i8*, i8** %buffer.i240, align 8, !dbg !2653
  %sub.ptr.lhs.cast.i241 = ptrtoint i8* %191 to i64, !dbg !2654
  %sub.ptr.rhs.cast.i242 = ptrtoint i8* %193 to i64, !dbg !2654
  %sub.ptr.sub.i243 = sub i64 %sub.ptr.lhs.cast.i241, %sub.ptr.rhs.cast.i242, !dbg !2654
  %cmp.i244 = icmp slt i64 %sub.ptr.sub.i243, 4, !dbg !2655
  br i1 %cmp.i244, label %if.then.i247, label %if.end.i266, !dbg !2656

if.then.i247:                                     ; preds = %bytestream2_get_be32.exit301
  %194 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i238, align 8, !dbg !2657
  %buffer_end1.i245 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %194, i32 0, i32 1, !dbg !2658
  %195 = load i8*, i8** %buffer_end1.i245, align 8, !dbg !2658
  %196 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i238, align 8, !dbg !2659
  %buffer2.i246 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %196, i32 0, i32 0, !dbg !2660
  store i8* %195, i8** %buffer2.i246, align 8, !dbg !2661
  store i32 0, i32* %retval.i237, align 4, !dbg !2662
  br label %bytestream2_get_be32.exit267, !dbg !2662

if.end.i266:                                      ; preds = %bytestream2_get_be32.exit301
  %197 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i238, align 8, !dbg !2663
  store %struct.GetByteContext* %197, %struct.GetByteContext** %g.addr.i.i236, align 8, !dbg !2664
  %198 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i236, align 8, !dbg !2665
  %buffer.i.i248 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %198, i32 0, i32 0, !dbg !2666
  store i8** %buffer.i.i248, i8*** %b.addr.i.i.i235, align 8, !dbg !2667
  %199 = load i8**, i8*** %b.addr.i.i.i235, align 8, !dbg !2668
  %200 = load i8*, i8** %199, align 8, !dbg !2669
  %add.ptr.i.i.i249 = getelementptr inbounds i8, i8* %200, i64 4, !dbg !2669
  store i8* %add.ptr.i.i.i249, i8** %199, align 8, !dbg !2669
  %201 = load i8**, i8*** %b.addr.i.i.i235, align 8, !dbg !2670
  %202 = load i8*, i8** %201, align 8, !dbg !2671
  %add.ptr1.i.i.i250 = getelementptr inbounds i8, i8* %202, i64 -4, !dbg !2672
  %203 = bitcast i8* %add.ptr1.i.i.i250 to %union.unaligned_32*, !dbg !2673
  %l.i.i.i251 = bitcast %union.unaligned_32* %203 to i32*, !dbg !2673
  %204 = load i32, i32* %l.i.i.i251, align 1, !dbg !2673
  store i32 %204, i32* %x.addr.i.i.i.i234, align 4, !dbg !2674
  %205 = load i32, i32* %x.addr.i.i.i.i234, align 4, !dbg !2675
  %shl.i.i.i.i252 = shl i32 %205, 8, !dbg !2676
  %and.i.i.i.i253 = and i32 %shl.i.i.i.i252, 65280, !dbg !2677
  %206 = load i32, i32* %x.addr.i.i.i.i234, align 4, !dbg !2678
  %shr.i.i.i.i254 = lshr i32 %206, 8, !dbg !2679
  %and1.i.i.i.i255 = and i32 %shr.i.i.i.i254, 255, !dbg !2680
  %or.i.i.i.i256 = or i32 %and.i.i.i.i253, %and1.i.i.i.i255, !dbg !2681
  %shl2.i.i.i.i257 = shl i32 %or.i.i.i.i256, 16, !dbg !2682
  %207 = load i32, i32* %x.addr.i.i.i.i234, align 4, !dbg !2683
  %shr3.i.i.i.i258 = lshr i32 %207, 16, !dbg !2684
  %shl4.i.i.i.i259 = shl i32 %shr3.i.i.i.i258, 8, !dbg !2685
  %and5.i.i.i.i260 = and i32 %shl4.i.i.i.i259, 65280, !dbg !2686
  %208 = load i32, i32* %x.addr.i.i.i.i234, align 4, !dbg !2687
  %shr6.i.i.i.i261 = lshr i32 %208, 16, !dbg !2688
  %shr7.i.i.i.i262 = lshr i32 %shr6.i.i.i.i261, 8, !dbg !2689
  %and8.i.i.i.i263 = and i32 %shr7.i.i.i.i262, 255, !dbg !2690
  %or9.i.i.i.i264 = or i32 %and5.i.i.i.i260, %and8.i.i.i.i263, !dbg !2691
  %or10.i.i.i.i265 = or i32 %shl2.i.i.i.i257, %or9.i.i.i.i264, !dbg !2692
  store i32 %or10.i.i.i.i265, i32* %retval.i237, align 4, !dbg !2693
  br label %bytestream2_get_be32.exit267, !dbg !2693

bytestream2_get_be32.exit267:                     ; preds = %if.then.i247, %if.end.i266
  %209 = load i32, i32* %retval.i237, align 4, !dbg !2694
  %conv38 = zext i32 %209 to i64, !dbg !2649
  %210 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2695
  %bit_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %210, i32 0, i32 9, !dbg !2696
  store i64 %conv38, i64* %bit_rate, align 8, !dbg !2697
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i204, align 8, !dbg !2698
  %211 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i204, align 8, !dbg !2699
  %buffer_end.i205 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %211, i32 0, i32 1, !dbg !2700
  %212 = load i8*, i8** %buffer_end.i205, align 8, !dbg !2700
  %213 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i204, align 8, !dbg !2701
  %buffer.i206 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %213, i32 0, i32 0, !dbg !2702
  %214 = load i8*, i8** %buffer.i206, align 8, !dbg !2702
  %sub.ptr.lhs.cast.i207 = ptrtoint i8* %212 to i64, !dbg !2703
  %sub.ptr.rhs.cast.i208 = ptrtoint i8* %214 to i64, !dbg !2703
  %sub.ptr.sub.i209 = sub i64 %sub.ptr.lhs.cast.i207, %sub.ptr.rhs.cast.i208, !dbg !2703
  %cmp.i210 = icmp slt i64 %sub.ptr.sub.i209, 4, !dbg !2704
  br i1 %cmp.i210, label %if.then.i213, label %if.end.i232, !dbg !2705

if.then.i213:                                     ; preds = %bytestream2_get_be32.exit267
  %215 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i204, align 8, !dbg !2706
  %buffer_end1.i211 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %215, i32 0, i32 1, !dbg !2707
  %216 = load i8*, i8** %buffer_end1.i211, align 8, !dbg !2707
  %217 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i204, align 8, !dbg !2708
  %buffer2.i212 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %217, i32 0, i32 0, !dbg !2709
  store i8* %216, i8** %buffer2.i212, align 8, !dbg !2710
  store i32 0, i32* %retval.i203, align 4, !dbg !2711
  br label %bytestream2_get_be32.exit233, !dbg !2711

if.end.i232:                                      ; preds = %bytestream2_get_be32.exit267
  %218 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i204, align 8, !dbg !2712
  store %struct.GetByteContext* %218, %struct.GetByteContext** %g.addr.i.i202, align 8, !dbg !2713
  %219 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i202, align 8, !dbg !2714
  %buffer.i.i214 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %219, i32 0, i32 0, !dbg !2715
  store i8** %buffer.i.i214, i8*** %b.addr.i.i.i201, align 8, !dbg !2716
  %220 = load i8**, i8*** %b.addr.i.i.i201, align 8, !dbg !2717
  %221 = load i8*, i8** %220, align 8, !dbg !2718
  %add.ptr.i.i.i215 = getelementptr inbounds i8, i8* %221, i64 4, !dbg !2718
  store i8* %add.ptr.i.i.i215, i8** %220, align 8, !dbg !2718
  %222 = load i8**, i8*** %b.addr.i.i.i201, align 8, !dbg !2719
  %223 = load i8*, i8** %222, align 8, !dbg !2720
  %add.ptr1.i.i.i216 = getelementptr inbounds i8, i8* %223, i64 -4, !dbg !2721
  %224 = bitcast i8* %add.ptr1.i.i.i216 to %union.unaligned_32*, !dbg !2722
  %l.i.i.i217 = bitcast %union.unaligned_32* %224 to i32*, !dbg !2722
  %225 = load i32, i32* %l.i.i.i217, align 1, !dbg !2722
  store i32 %225, i32* %x.addr.i.i.i.i200, align 4, !dbg !2723
  %226 = load i32, i32* %x.addr.i.i.i.i200, align 4, !dbg !2724
  %shl.i.i.i.i218 = shl i32 %226, 8, !dbg !2725
  %and.i.i.i.i219 = and i32 %shl.i.i.i.i218, 65280, !dbg !2726
  %227 = load i32, i32* %x.addr.i.i.i.i200, align 4, !dbg !2727
  %shr.i.i.i.i220 = lshr i32 %227, 8, !dbg !2728
  %and1.i.i.i.i221 = and i32 %shr.i.i.i.i220, 255, !dbg !2729
  %or.i.i.i.i222 = or i32 %and.i.i.i.i219, %and1.i.i.i.i221, !dbg !2730
  %shl2.i.i.i.i223 = shl i32 %or.i.i.i.i222, 16, !dbg !2731
  %228 = load i32, i32* %x.addr.i.i.i.i200, align 4, !dbg !2732
  %shr3.i.i.i.i224 = lshr i32 %228, 16, !dbg !2733
  %shl4.i.i.i.i225 = shl i32 %shr3.i.i.i.i224, 8, !dbg !2734
  %and5.i.i.i.i226 = and i32 %shl4.i.i.i.i225, 65280, !dbg !2735
  %229 = load i32, i32* %x.addr.i.i.i.i200, align 4, !dbg !2736
  %shr6.i.i.i.i227 = lshr i32 %229, 16, !dbg !2737
  %shr7.i.i.i.i228 = lshr i32 %shr6.i.i.i.i227, 8, !dbg !2738
  %and8.i.i.i.i229 = and i32 %shr7.i.i.i.i228, 255, !dbg !2739
  %or9.i.i.i.i230 = or i32 %and5.i.i.i.i226, %and8.i.i.i.i229, !dbg !2740
  %or10.i.i.i.i231 = or i32 %shl2.i.i.i.i223, %or9.i.i.i.i230, !dbg !2741
  store i32 %or10.i.i.i.i231, i32* %retval.i203, align 4, !dbg !2742
  br label %bytestream2_get_be32.exit233, !dbg !2742

bytestream2_get_be32.exit233:                     ; preds = %if.then.i213, %if.end.i232
  %230 = load i32, i32* %retval.i203, align 4, !dbg !2743
  %231 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2744
  %group_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %231, i32 0, i32 2, !dbg !2745
  store i32 %230, i32* %group_size, align 8, !dbg !2746
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i170, align 8, !dbg !2747
  %232 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i170, align 8, !dbg !2748
  %buffer_end.i171 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %232, i32 0, i32 1, !dbg !2749
  %233 = load i8*, i8** %buffer_end.i171, align 8, !dbg !2749
  %234 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i170, align 8, !dbg !2750
  %buffer.i172 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %234, i32 0, i32 0, !dbg !2751
  %235 = load i8*, i8** %buffer.i172, align 8, !dbg !2751
  %sub.ptr.lhs.cast.i173 = ptrtoint i8* %233 to i64, !dbg !2752
  %sub.ptr.rhs.cast.i174 = ptrtoint i8* %235 to i64, !dbg !2752
  %sub.ptr.sub.i175 = sub i64 %sub.ptr.lhs.cast.i173, %sub.ptr.rhs.cast.i174, !dbg !2752
  %cmp.i176 = icmp slt i64 %sub.ptr.sub.i175, 4, !dbg !2753
  br i1 %cmp.i176, label %if.then.i179, label %if.end.i198, !dbg !2754

if.then.i179:                                     ; preds = %bytestream2_get_be32.exit233
  %236 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i170, align 8, !dbg !2755
  %buffer_end1.i177 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %236, i32 0, i32 1, !dbg !2756
  %237 = load i8*, i8** %buffer_end1.i177, align 8, !dbg !2756
  %238 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i170, align 8, !dbg !2757
  %buffer2.i178 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %238, i32 0, i32 0, !dbg !2758
  store i8* %237, i8** %buffer2.i178, align 8, !dbg !2759
  store i32 0, i32* %retval.i169, align 4, !dbg !2760
  br label %bytestream2_get_be32.exit199, !dbg !2760

if.end.i198:                                      ; preds = %bytestream2_get_be32.exit233
  %239 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i170, align 8, !dbg !2761
  store %struct.GetByteContext* %239, %struct.GetByteContext** %g.addr.i.i168, align 8, !dbg !2762
  %240 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i168, align 8, !dbg !2763
  %buffer.i.i180 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %240, i32 0, i32 0, !dbg !2764
  store i8** %buffer.i.i180, i8*** %b.addr.i.i.i167, align 8, !dbg !2765
  %241 = load i8**, i8*** %b.addr.i.i.i167, align 8, !dbg !2766
  %242 = load i8*, i8** %241, align 8, !dbg !2767
  %add.ptr.i.i.i181 = getelementptr inbounds i8, i8* %242, i64 4, !dbg !2767
  store i8* %add.ptr.i.i.i181, i8** %241, align 8, !dbg !2767
  %243 = load i8**, i8*** %b.addr.i.i.i167, align 8, !dbg !2768
  %244 = load i8*, i8** %243, align 8, !dbg !2769
  %add.ptr1.i.i.i182 = getelementptr inbounds i8, i8* %244, i64 -4, !dbg !2770
  %245 = bitcast i8* %add.ptr1.i.i.i182 to %union.unaligned_32*, !dbg !2771
  %l.i.i.i183 = bitcast %union.unaligned_32* %245 to i32*, !dbg !2771
  %246 = load i32, i32* %l.i.i.i183, align 1, !dbg !2771
  store i32 %246, i32* %x.addr.i.i.i.i166, align 4, !dbg !2772
  %247 = load i32, i32* %x.addr.i.i.i.i166, align 4, !dbg !2773
  %shl.i.i.i.i184 = shl i32 %247, 8, !dbg !2774
  %and.i.i.i.i185 = and i32 %shl.i.i.i.i184, 65280, !dbg !2775
  %248 = load i32, i32* %x.addr.i.i.i.i166, align 4, !dbg !2776
  %shr.i.i.i.i186 = lshr i32 %248, 8, !dbg !2777
  %and1.i.i.i.i187 = and i32 %shr.i.i.i.i186, 255, !dbg !2778
  %or.i.i.i.i188 = or i32 %and.i.i.i.i185, %and1.i.i.i.i187, !dbg !2779
  %shl2.i.i.i.i189 = shl i32 %or.i.i.i.i188, 16, !dbg !2780
  %249 = load i32, i32* %x.addr.i.i.i.i166, align 4, !dbg !2781
  %shr3.i.i.i.i190 = lshr i32 %249, 16, !dbg !2782
  %shl4.i.i.i.i191 = shl i32 %shr3.i.i.i.i190, 8, !dbg !2783
  %and5.i.i.i.i192 = and i32 %shl4.i.i.i.i191, 65280, !dbg !2784
  %250 = load i32, i32* %x.addr.i.i.i.i166, align 4, !dbg !2785
  %shr6.i.i.i.i193 = lshr i32 %250, 16, !dbg !2786
  %shr7.i.i.i.i194 = lshr i32 %shr6.i.i.i.i193, 8, !dbg !2787
  %and8.i.i.i.i195 = and i32 %shr7.i.i.i.i194, 255, !dbg !2788
  %or9.i.i.i.i196 = or i32 %and5.i.i.i.i192, %and8.i.i.i.i195, !dbg !2789
  %or10.i.i.i.i197 = or i32 %shl2.i.i.i.i189, %or9.i.i.i.i196, !dbg !2790
  store i32 %or10.i.i.i.i197, i32* %retval.i169, align 4, !dbg !2791
  br label %bytestream2_get_be32.exit199, !dbg !2791

bytestream2_get_be32.exit199:                     ; preds = %if.then.i179, %if.end.i198
  %251 = load i32, i32* %retval.i169, align 4, !dbg !2792
  %252 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2793
  %fft_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %252, i32 0, i32 3, !dbg !2794
  store i32 %251, i32* %fft_size, align 4, !dbg !2795
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i157, align 8, !dbg !2796
  %253 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i157, align 8, !dbg !2797
  %buffer_end.i158 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %253, i32 0, i32 1, !dbg !2798
  %254 = load i8*, i8** %buffer_end.i158, align 8, !dbg !2798
  %255 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i157, align 8, !dbg !2799
  %buffer.i159 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %255, i32 0, i32 0, !dbg !2800
  %256 = load i8*, i8** %buffer.i159, align 8, !dbg !2800
  %sub.ptr.lhs.cast.i160 = ptrtoint i8* %254 to i64, !dbg !2801
  %sub.ptr.rhs.cast.i161 = ptrtoint i8* %256 to i64, !dbg !2801
  %sub.ptr.sub.i162 = sub i64 %sub.ptr.lhs.cast.i160, %sub.ptr.rhs.cast.i161, !dbg !2801
  %cmp.i163 = icmp slt i64 %sub.ptr.sub.i162, 4, !dbg !2802
  br i1 %cmp.i163, label %if.then.i164, label %if.end.i165, !dbg !2803

if.then.i164:                                     ; preds = %bytestream2_get_be32.exit199
  %257 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i157, align 8, !dbg !2804
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %257, i32 0, i32 1, !dbg !2805
  %258 = load i8*, i8** %buffer_end1.i, align 8, !dbg !2805
  %259 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i157, align 8, !dbg !2806
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %259, i32 0, i32 0, !dbg !2807
  store i8* %258, i8** %buffer2.i, align 8, !dbg !2808
  store i32 0, i32* %retval.i156, align 4, !dbg !2809
  br label %bytestream2_get_be32.exit, !dbg !2809

if.end.i165:                                      ; preds = %bytestream2_get_be32.exit199
  %260 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i157, align 8, !dbg !2810
  store %struct.GetByteContext* %260, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !2811
  %261 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !2812
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %261, i32 0, i32 0, !dbg !2813
  store i8** %buffer.i.i, i8*** %b.addr.i.i.i, align 8, !dbg !2814
  %262 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !2815
  %263 = load i8*, i8** %262, align 8, !dbg !2816
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %263, i64 4, !dbg !2816
  store i8* %add.ptr.i.i.i, i8** %262, align 8, !dbg !2816
  %264 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !2817
  %265 = load i8*, i8** %264, align 8, !dbg !2818
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %265, i64 -4, !dbg !2819
  %266 = bitcast i8* %add.ptr1.i.i.i to %union.unaligned_32*, !dbg !2820
  %l.i.i.i = bitcast %union.unaligned_32* %266 to i32*, !dbg !2820
  %267 = load i32, i32* %l.i.i.i, align 1, !dbg !2820
  store i32 %267, i32* %x.addr.i.i.i.i, align 4, !dbg !2821
  %268 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !2822
  %shl.i.i.i.i = shl i32 %268, 8, !dbg !2823
  %and.i.i.i.i = and i32 %shl.i.i.i.i, 65280, !dbg !2824
  %269 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !2825
  %shr.i.i.i.i = lshr i32 %269, 8, !dbg !2826
  %and1.i.i.i.i = and i32 %shr.i.i.i.i, 255, !dbg !2827
  %or.i.i.i.i = or i32 %and.i.i.i.i, %and1.i.i.i.i, !dbg !2828
  %shl2.i.i.i.i = shl i32 %or.i.i.i.i, 16, !dbg !2829
  %270 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !2830
  %shr3.i.i.i.i = lshr i32 %270, 16, !dbg !2831
  %shl4.i.i.i.i = shl i32 %shr3.i.i.i.i, 8, !dbg !2832
  %and5.i.i.i.i = and i32 %shl4.i.i.i.i, 65280, !dbg !2833
  %271 = load i32, i32* %x.addr.i.i.i.i, align 4, !dbg !2834
  %shr6.i.i.i.i = lshr i32 %271, 16, !dbg !2835
  %shr7.i.i.i.i = lshr i32 %shr6.i.i.i.i, 8, !dbg !2836
  %and8.i.i.i.i = and i32 %shr7.i.i.i.i, 255, !dbg !2837
  %or9.i.i.i.i = or i32 %and5.i.i.i.i, %and8.i.i.i.i, !dbg !2838
  %or10.i.i.i.i = or i32 %shl2.i.i.i.i, %or9.i.i.i.i, !dbg !2839
  store i32 %or10.i.i.i.i, i32* %retval.i156, align 4, !dbg !2840
  br label %bytestream2_get_be32.exit, !dbg !2840

bytestream2_get_be32.exit:                        ; preds = %if.then.i164, %if.end.i165
  %272 = load i32, i32* %retval.i156, align 4, !dbg !2841
  %273 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2842
  %checksum_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %273, i32 0, i32 4, !dbg !2843
  store i32 %272, i32* %checksum_size, align 16, !dbg !2844
  %274 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2845
  %checksum_size42 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %274, i32 0, i32 4, !dbg !2847
  %275 = load i32, i32* %checksum_size42, align 16, !dbg !2847
  %cmp43 = icmp uge i32 %275, 268435456, !dbg !2848
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !2849

if.then45:                                        ; preds = %bytestream2_get_be32.exit
  %276 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2850
  %277 = bitcast %struct.AVCodecContext* %276 to i8*, !dbg !2850
  %278 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2852
  %checksum_size46 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %278, i32 0, i32 4, !dbg !2853
  %279 = load i32, i32* %checksum_size46, align 16, !dbg !2853
  call void (i8*, i32, i8*, ...) @av_log(i8* %277, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i32 0, i32 0), i32 %279), !dbg !2854
  store i32 -1094995529, i32* %retval, align 4, !dbg !2855
  br label %return, !dbg !2855

if.end47:                                         ; preds = %bytestream2_get_be32.exit
  %280 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2856
  %fft_size48 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %280, i32 0, i32 3, !dbg !2857
  %281 = load i32, i32* %fft_size48, align 4, !dbg !2857
  %or = or i32 %281, 1, !dbg !2858
  %282 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !2859
  %sub = sub nsw i32 31, %282, !dbg !2860
  %add = add nsw i32 %sub, 1, !dbg !2861
  %283 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2862
  %fft_order = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %283, i32 0, i32 6, !dbg !2863
  store i32 %add, i32* %fft_order, align 8, !dbg !2864
  %284 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2865
  %group_size49 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %284, i32 0, i32 2, !dbg !2866
  %285 = load i32, i32* %group_size49, align 8, !dbg !2866
  %or50 = or i32 %285, 1, !dbg !2867
  %286 = call i32 @llvm.ctlz.i32(i32 %or50, i1 true), !dbg !2868
  %sub51 = sub nsw i32 31, %286, !dbg !2869
  %add52 = add nsw i32 %sub51, 1, !dbg !2870
  %287 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2871
  %group_order = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %287, i32 0, i32 5, !dbg !2872
  store i32 %add52, i32* %group_order, align 4, !dbg !2873
  %288 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2874
  %group_size53 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %288, i32 0, i32 2, !dbg !2875
  %289 = load i32, i32* %group_size53, align 8, !dbg !2875
  %div = sdiv i32 %289, 16, !dbg !2876
  %290 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2877
  %frame_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %290, i32 0, i32 7, !dbg !2878
  store i32 %div, i32* %frame_size, align 4, !dbg !2879
  %291 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2880
  %frame_size54 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %291, i32 0, i32 7, !dbg !2882
  %292 = load i32, i32* %frame_size54, align 4, !dbg !2882
  %cmp55 = icmp sgt i32 %292, 512, !dbg !2883
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !2884

if.then57:                                        ; preds = %if.end47
  store i32 -1094995529, i32* %retval, align 4, !dbg !2885
  br label %return, !dbg !2885

if.end58:                                         ; preds = %if.end47
  %293 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2886
  %fft_order59 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %293, i32 0, i32 6, !dbg !2887
  %294 = load i32, i32* %fft_order59, align 8, !dbg !2887
  %sub60 = sub nsw i32 %294, 7, !dbg !2888
  %295 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2889
  %sub_sampling = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %295, i32 0, i32 9, !dbg !2890
  store i32 %sub60, i32* %sub_sampling, align 4, !dbg !2891
  %296 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2892
  %sub_sampling61 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %296, i32 0, i32 9, !dbg !2893
  %297 = load i32, i32* %sub_sampling61, align 4, !dbg !2893
  %sub62 = sub nsw i32 2, %297, !dbg !2894
  %shl = shl i32 1, %sub62, !dbg !2895
  %div63 = sdiv i32 255, %shl, !dbg !2896
  %298 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2897
  %frequency_range = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %298, i32 0, i32 8, !dbg !2898
  store i32 %div63, i32* %frequency_range, align 32, !dbg !2899
  %299 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2900
  %sub_sampling64 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %299, i32 0, i32 9, !dbg !2901
  %300 = load i32, i32* %sub_sampling64, align 4, !dbg !2901
  %mul = mul nsw i32 %300, 2, !dbg !2902
  %301 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2903
  %channels65 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %301, i32 0, i32 1, !dbg !2904
  %302 = load i32, i32* %channels65, align 4, !dbg !2904
  %add66 = add nsw i32 %mul, %302, !dbg !2905
  %sub67 = sub nsw i32 %add66, 1, !dbg !2906
  switch i32 %sub67, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb68
    i32 2, label %sw.bb69
    i32 3, label %sw.bb70
    i32 4, label %sw.bb71
    i32 5, label %sw.bb72
  ], !dbg !2907

sw.bb:                                            ; preds = %if.end58
  store i32 40, i32* %tmp, align 4, !dbg !2908
  br label %sw.epilog, !dbg !2910

sw.bb68:                                          ; preds = %if.end58
  store i32 48, i32* %tmp, align 4, !dbg !2911
  br label %sw.epilog, !dbg !2912

sw.bb69:                                          ; preds = %if.end58
  store i32 56, i32* %tmp, align 4, !dbg !2913
  br label %sw.epilog, !dbg !2914

sw.bb70:                                          ; preds = %if.end58
  store i32 72, i32* %tmp, align 4, !dbg !2915
  br label %sw.epilog, !dbg !2916

sw.bb71:                                          ; preds = %if.end58
  store i32 80, i32* %tmp, align 4, !dbg !2917
  br label %sw.epilog, !dbg !2918

sw.bb72:                                          ; preds = %if.end58
  store i32 100, i32* %tmp, align 4, !dbg !2919
  br label %sw.epilog, !dbg !2920

sw.default:                                       ; preds = %if.end58
  %303 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2921
  %sub_sampling73 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %303, i32 0, i32 9, !dbg !2922
  %304 = load i32, i32* %sub_sampling73, align 4, !dbg !2922
  store i32 %304, i32* %tmp, align 4, !dbg !2923
  br label %sw.epilog, !dbg !2924

sw.epilog:                                        ; preds = %sw.default, %sw.bb72, %sw.bb71, %sw.bb70, %sw.bb69, %sw.bb68, %sw.bb
  store i32 0, i32* %tmp_val, align 4, !dbg !2925
  %305 = load i32, i32* %tmp, align 4, !dbg !2926
  %mul74 = mul nsw i32 %305, 1000, !dbg !2928
  %conv75 = sext i32 %mul74 to i64, !dbg !2929
  %306 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2930
  %bit_rate76 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %306, i32 0, i32 9, !dbg !2931
  %307 = load i64, i64* %bit_rate76, align 8, !dbg !2931
  %cmp77 = icmp slt i64 %conv75, %307, !dbg !2932
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !2933

if.then79:                                        ; preds = %sw.epilog
  store i32 1, i32* %tmp_val, align 4, !dbg !2934
  br label %if.end80, !dbg !2936

if.end80:                                         ; preds = %if.then79, %sw.epilog
  %308 = load i32, i32* %tmp, align 4, !dbg !2937
  %mul81 = mul nsw i32 %308, 1440, !dbg !2939
  %conv82 = sext i32 %mul81 to i64, !dbg !2940
  %309 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2941
  %bit_rate83 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %309, i32 0, i32 9, !dbg !2942
  %310 = load i64, i64* %bit_rate83, align 8, !dbg !2942
  %cmp84 = icmp slt i64 %conv82, %310, !dbg !2943
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !2944

if.then86:                                        ; preds = %if.end80
  store i32 2, i32* %tmp_val, align 4, !dbg !2945
  br label %if.end87, !dbg !2947

if.end87:                                         ; preds = %if.then86, %if.end80
  %311 = load i32, i32* %tmp, align 4, !dbg !2948
  %mul88 = mul nsw i32 %311, 1760, !dbg !2950
  %conv89 = sext i32 %mul88 to i64, !dbg !2951
  %312 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2952
  %bit_rate90 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %312, i32 0, i32 9, !dbg !2953
  %313 = load i64, i64* %bit_rate90, align 8, !dbg !2953
  %cmp91 = icmp slt i64 %conv89, %313, !dbg !2954
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !2955

if.then93:                                        ; preds = %if.end87
  store i32 3, i32* %tmp_val, align 4, !dbg !2956
  br label %if.end94, !dbg !2958

if.end94:                                         ; preds = %if.then93, %if.end87
  %314 = load i32, i32* %tmp, align 4, !dbg !2959
  %mul95 = mul nsw i32 %314, 2240, !dbg !2961
  %conv96 = sext i32 %mul95 to i64, !dbg !2962
  %315 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2963
  %bit_rate97 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %315, i32 0, i32 9, !dbg !2964
  %316 = load i64, i64* %bit_rate97, align 8, !dbg !2964
  %cmp98 = icmp slt i64 %conv96, %316, !dbg !2965
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !2966

if.then100:                                       ; preds = %if.end94
  store i32 4, i32* %tmp_val, align 4, !dbg !2967
  br label %if.end101, !dbg !2969

if.end101:                                        ; preds = %if.then100, %if.end94
  %317 = load i32, i32* %tmp_val, align 4, !dbg !2970
  %318 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2971
  %cm_table_select = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %318, i32 0, i32 11, !dbg !2972
  store i32 %317, i32* %cm_table_select, align 4, !dbg !2973
  %319 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2974
  %bit_rate102 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %319, i32 0, i32 9, !dbg !2976
  %320 = load i64, i64* %bit_rate102, align 8, !dbg !2976
  %cmp103 = icmp sle i64 %320, 8000, !dbg !2977
  br i1 %cmp103, label %if.then105, label %if.else, !dbg !2978

if.then105:                                       ; preds = %if.end101
  %321 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2979
  %coeff_per_sb_select = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %321, i32 0, i32 10, !dbg !2980
  store i32 0, i32* %coeff_per_sb_select, align 8, !dbg !2981
  br label %if.end114, !dbg !2979

if.else:                                          ; preds = %if.end101
  %322 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2982
  %bit_rate106 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %322, i32 0, i32 9, !dbg !2984
  %323 = load i64, i64* %bit_rate106, align 8, !dbg !2984
  %cmp107 = icmp slt i64 %323, 16000, !dbg !2985
  br i1 %cmp107, label %if.then109, label %if.else111, !dbg !2986

if.then109:                                       ; preds = %if.else
  %324 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2987
  %coeff_per_sb_select110 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %324, i32 0, i32 10, !dbg !2988
  store i32 1, i32* %coeff_per_sb_select110, align 8, !dbg !2989
  br label %if.end113, !dbg !2987

if.else111:                                       ; preds = %if.else
  %325 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2990
  %coeff_per_sb_select112 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %325, i32 0, i32 10, !dbg !2991
  store i32 2, i32* %coeff_per_sb_select112, align 8, !dbg !2992
  br label %if.end113

if.end113:                                        ; preds = %if.else111, %if.then109
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.then105
  %326 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2993
  %fft_order115 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %326, i32 0, i32 6, !dbg !2995
  %327 = load i32, i32* %fft_order115, align 8, !dbg !2995
  %cmp116 = icmp slt i32 %327, 7, !dbg !2996
  br i1 %cmp116, label %if.then122, label %lor.lhs.false118, !dbg !2997

lor.lhs.false118:                                 ; preds = %if.end114
  %328 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !2998
  %fft_order119 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %328, i32 0, i32 6, !dbg !3000
  %329 = load i32, i32* %fft_order119, align 8, !dbg !3000
  %cmp120 = icmp sgt i32 %329, 9, !dbg !3001
  br i1 %cmp120, label %if.then122, label %if.end124, !dbg !3002

if.then122:                                       ; preds = %lor.lhs.false118, %if.end114
  %330 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3003
  %331 = bitcast %struct.AVCodecContext* %330 to i8*, !dbg !3003
  %332 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3005
  %fft_order123 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %332, i32 0, i32 6, !dbg !3006
  %333 = load i32, i32* %fft_order123, align 8, !dbg !3006
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %331, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0), i32 %333), !dbg !3007
  store i32 -1163346256, i32* %retval, align 4, !dbg !3008
  br label %return, !dbg !3008

if.end124:                                        ; preds = %lor.lhs.false118
  %334 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3009
  %fft_size125 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %334, i32 0, i32 3, !dbg !3011
  %335 = load i32, i32* %fft_size125, align 4, !dbg !3011
  %336 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3012
  %fft_order126 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %336, i32 0, i32 6, !dbg !3013
  %337 = load i32, i32* %fft_order126, align 8, !dbg !3013
  %sub127 = sub nsw i32 %337, 1, !dbg !3014
  %shl128 = shl i32 1, %sub127, !dbg !3015
  %cmp129 = icmp ne i32 %335, %shl128, !dbg !3016
  br i1 %cmp129, label %if.then131, label %if.end133, !dbg !3017

if.then131:                                       ; preds = %if.end124
  %338 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3018
  %339 = bitcast %struct.AVCodecContext* %338 to i8*, !dbg !3018
  %340 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3020
  %fft_size132 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %340, i32 0, i32 3, !dbg !3021
  %341 = load i32, i32* %fft_size132, align 4, !dbg !3021
  call void (i8*, i32, i8*, ...) @av_log(i8* %339, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0), i32 %341), !dbg !3022
  store i32 -1094995529, i32* %retval, align 4, !dbg !3023
  br label %return, !dbg !3023

if.end133:                                        ; preds = %if.end124
  %342 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3024
  %rdft_ctx = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %342, i32 0, i32 26, !dbg !3025
  %343 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3026
  %fft_order134 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %343, i32 0, i32 6, !dbg !3027
  %344 = load i32, i32* %fft_order134, align 8, !dbg !3027
  %call135 = call i32 @ff_rdft_init(%struct.RDFTContext* %rdft_ctx, i32 %344, i32 1), !dbg !3028
  %345 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3029
  %mpadsp = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %345, i32 0, i32 32, !dbg !3030
  call void @ff_mpadsp_init(%struct.MPADSPContext* %mpadsp), !dbg !3031
  %346 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3032
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %346, i32 0, i32 84, !dbg !3033
  store i32 1, i32* %sample_fmt, align 8, !dbg !3034
  store i32 0, i32* %retval, align 4, !dbg !3035
  br label %return, !dbg !3035

return:                                           ; preds = %if.end133, %if.then131, %if.then122, %if.then57, %if.then45, %if.then32, %if.then23, %if.then18, %if.then12, %if.then
  %347 = load i32, i32* %retval, align 4, !dbg !3036
  ret i32 %347, !dbg !3036
}

; Function Attrs: nounwind uwtable
define internal i32 @qdm2_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !3037 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %s = alloca %struct.QDM2Context*, align 8
  %out = alloca i16*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3038, metadata !1868), !dbg !3039
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3040, metadata !1868), !dbg !3041
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !3042, metadata !1868), !dbg !3043
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !3044, metadata !1868), !dbg !3045
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !3046, metadata !1868), !dbg !3047
  %0 = load i8*, i8** %data.addr, align 8, !dbg !3048
  %1 = bitcast i8* %0 to %struct.AVFrame*, !dbg !3048
  store %struct.AVFrame* %1, %struct.AVFrame** %frame, align 8, !dbg !3047
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3049, metadata !1868), !dbg !3050
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3051
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 3, !dbg !3052
  %3 = load i8*, i8** %data1, align 8, !dbg !3052
  store i8* %3, i8** %buf, align 8, !dbg !3050
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !3053, metadata !1868), !dbg !3054
  %4 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3055
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i32 0, i32 4, !dbg !3056
  %5 = load i32, i32* %size, align 8, !dbg !3056
  store i32 %5, i32* %buf_size, align 4, !dbg !3054
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %s, metadata !3057, metadata !1868), !dbg !3058
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3059
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 6, !dbg !3060
  %7 = load i8*, i8** %priv_data, align 8, !dbg !3060
  %8 = bitcast i8* %7 to %struct.QDM2Context*, !dbg !3059
  store %struct.QDM2Context* %8, %struct.QDM2Context** %s, align 8, !dbg !3058
  call void @llvm.dbg.declare(metadata i16** %out, metadata !3061, metadata !1868), !dbg !3062
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3063, metadata !1868), !dbg !3064
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3065, metadata !1868), !dbg !3066
  %9 = load i8*, i8** %buf, align 8, !dbg !3067
  %tobool = icmp ne i8* %9, null, !dbg !3067
  br i1 %tobool, label %if.end, label %if.then, !dbg !3069

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3070
  br label %return, !dbg !3070

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %buf_size, align 4, !dbg !3071
  %11 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3073
  %checksum_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %11, i32 0, i32 4, !dbg !3074
  %12 = load i32, i32* %checksum_size, align 16, !dbg !3074
  %cmp = icmp slt i32 %10, %12, !dbg !3075
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !3076

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !3077
  br label %return, !dbg !3077

if.end3:                                          ; preds = %if.end
  %13 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3078
  %frame_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %13, i32 0, i32 7, !dbg !3079
  %14 = load i32, i32* %frame_size, align 4, !dbg !3079
  %mul = mul nsw i32 16, %14, !dbg !3080
  %15 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3081
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %15, i32 0, i32 5, !dbg !3082
  store i32 %mul, i32* %nb_samples, align 8, !dbg !3083
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3084
  %17 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3086
  %call = call i32 @ff_get_buffer(%struct.AVCodecContext* %16, %struct.AVFrame* %17, i32 0), !dbg !3087
  store i32 %call, i32* %ret, align 4, !dbg !3088
  %cmp4 = icmp slt i32 %call, 0, !dbg !3089
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !3090

if.then5:                                         ; preds = %if.end3
  %18 = load i32, i32* %ret, align 4, !dbg !3091
  store i32 %18, i32* %retval, align 4, !dbg !3092
  br label %return, !dbg !3092

if.end6:                                          ; preds = %if.end3
  %19 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3093
  %data7 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %19, i32 0, i32 0, !dbg !3094
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data7, i64 0, i64 0, !dbg !3093
  %20 = load i8*, i8** %arrayidx, align 8, !dbg !3093
  %21 = bitcast i8* %20 to i16*, !dbg !3095
  store i16* %21, i16** %out, align 8, !dbg !3096
  store i32 0, i32* %i, align 4, !dbg !3097
  br label %for.cond, !dbg !3099

for.cond:                                         ; preds = %for.inc, %if.end6
  %22 = load i32, i32* %i, align 4, !dbg !3100
  %cmp8 = icmp slt i32 %22, 16, !dbg !3103
  br i1 %cmp8, label %for.body, label %for.end, !dbg !3104

for.body:                                         ; preds = %for.cond
  %23 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3105
  %24 = load i8*, i8** %buf, align 8, !dbg !3108
  %25 = load i16*, i16** %out, align 8, !dbg !3109
  %call9 = call i32 @qdm2_decode(%struct.QDM2Context* %23, i8* %24, i16* %25), !dbg !3110
  store i32 %call9, i32* %ret, align 4, !dbg !3111
  %cmp10 = icmp slt i32 %call9, 0, !dbg !3112
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !3113

if.then11:                                        ; preds = %for.body
  %26 = load i32, i32* %ret, align 4, !dbg !3114
  store i32 %26, i32* %retval, align 4, !dbg !3115
  br label %return, !dbg !3115

if.end12:                                         ; preds = %for.body
  %27 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3116
  %channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %27, i32 0, i32 1, !dbg !3117
  %28 = load i32, i32* %channels, align 4, !dbg !3117
  %29 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3118
  %frame_size13 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %29, i32 0, i32 7, !dbg !3119
  %30 = load i32, i32* %frame_size13, align 4, !dbg !3119
  %mul14 = mul nsw i32 %28, %30, !dbg !3120
  %31 = load i16*, i16** %out, align 8, !dbg !3121
  %idx.ext = sext i32 %mul14 to i64, !dbg !3121
  %add.ptr = getelementptr inbounds i16, i16* %31, i64 %idx.ext, !dbg !3121
  store i16* %add.ptr, i16** %out, align 8, !dbg !3121
  br label %for.inc, !dbg !3122

for.inc:                                          ; preds = %if.end12
  %32 = load i32, i32* %i, align 4, !dbg !3123
  %inc = add nsw i32 %32, 1, !dbg !3123
  store i32 %inc, i32* %i, align 4, !dbg !3123
  br label %for.cond, !dbg !3125, !llvm.loop !3126

for.end:                                          ; preds = %for.cond
  %33 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !3128
  store i32 1, i32* %33, align 4, !dbg !3129
  %34 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3130
  %checksum_size15 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %34, i32 0, i32 4, !dbg !3131
  %35 = load i32, i32* %checksum_size15, align 16, !dbg !3131
  store i32 %35, i32* %retval, align 4, !dbg !3132
  br label %return, !dbg !3132

return:                                           ; preds = %for.end, %if.then11, %if.then5, %if.then2, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !3133
  ret i32 %36, !dbg !3133
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @qdm2_decode_close(%struct.AVCodecContext* %avctx) #0 !dbg !3134 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.QDM2Context*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3135, metadata !1868), !dbg !3136
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %s, metadata !3137, metadata !1868), !dbg !3138
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3139
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3140
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3140
  %2 = bitcast i8* %1 to %struct.QDM2Context*, !dbg !3139
  store %struct.QDM2Context* %2, %struct.QDM2Context** %s, align 8, !dbg !3138
  %3 = load %struct.QDM2Context*, %struct.QDM2Context** %s, align 8, !dbg !3141
  %rdft_ctx = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %3, i32 0, i32 26, !dbg !3142
  call void @ff_rdft_end(%struct.RDFTContext* %rdft_ctx), !dbg !3143
  ret i32 0, !dbg !3144
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: cold nounwind optsize uwtable
define internal void @qdm2_init_static_data() #0 !dbg !1659 {
entry:
  %0 = load i32, i32* @qdm2_init_static_data.done, align 4, !dbg !3145
  %tobool = icmp ne i32 %0, 0, !dbg !3145
  br i1 %tobool, label %if.then, label %if.end, !dbg !3147

if.then:                                          ; preds = %entry
  br label %return, !dbg !3148

if.end:                                           ; preds = %entry
  call void @qdm2_init_vlc(), !dbg !3149
  call void @ff_mpa_synth_init_float(float* getelementptr inbounds ([0 x float], [0 x float]* @ff_mpa_synth_window_float, i32 0, i32 0)), !dbg !3150
  call void @softclip_table_init(), !dbg !3151
  call void @rnd_table_init(), !dbg !3152
  call void @init_noise_samples(), !dbg !3153
  store i32 1, i32* @qdm2_init_static_data.done, align 4, !dbg !3154
  br label %return, !dbg !3155

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !3156
}

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

declare void @avpriv_request_sample(i8*, i8*, ...) #3

declare i32 @ff_rdft_init(%struct.RDFTContext*, i32, i32) #3

declare void @ff_mpadsp_init(%struct.MPADSPContext*) #3

; Function Attrs: cold nounwind optsize uwtable
define internal void @qdm2_init_vlc() #0 !dbg !3158 {
entry:
  %0 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 0), align 16, !dbg !3159
  %idxprom = zext i16 %0 to i64, !dbg !3160
  %arrayidx = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom, !dbg !3160
  store [2 x i16]* %arrayidx, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_level, i32 0, i32 1), align 8, !dbg !3161
  %1 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 1), align 2, !dbg !3162
  %conv = zext i16 %1 to i32, !dbg !3162
  %2 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 0), align 16, !dbg !3163
  %conv1 = zext i16 %2 to i32, !dbg !3163
  %sub = sub nsw i32 %conv, %conv1, !dbg !3164
  store i32 %sub, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_level, i32 0, i32 3), align 4, !dbg !3165
  %call = call i32 @ff_init_vlc_sparse(%struct.VLC* @vlc_tab_level, i32 8, i32 24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @vlc_tab_level_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([24 x i16]* @vlc_tab_level_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 6), !dbg !3166
  %3 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 1), align 2, !dbg !3167
  %idxprom2 = zext i16 %3 to i64, !dbg !3168
  %arrayidx3 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom2, !dbg !3168
  store [2 x i16]* %arrayidx3, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_diff, i32 0, i32 1), align 8, !dbg !3169
  %4 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 2), align 4, !dbg !3170
  %conv4 = zext i16 %4 to i32, !dbg !3170
  %5 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 1), align 2, !dbg !3171
  %conv5 = zext i16 %5 to i32, !dbg !3171
  %sub6 = sub nsw i32 %conv4, %conv5, !dbg !3172
  store i32 %sub6, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_diff, i32 0, i32 3), align 4, !dbg !3173
  %call7 = call i32 @ff_init_vlc_sparse(%struct.VLC* @vlc_tab_diff, i32 8, i32 37, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @vlc_tab_diff_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([37 x i16]* @vlc_tab_diff_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 6), !dbg !3174
  %6 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 2), align 4, !dbg !3175
  %idxprom8 = zext i16 %6 to i64, !dbg !3176
  %arrayidx9 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom8, !dbg !3176
  store [2 x i16]* %arrayidx9, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_run, i32 0, i32 1), align 8, !dbg !3177
  %7 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 3), align 2, !dbg !3178
  %conv10 = zext i16 %7 to i32, !dbg !3178
  %8 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 2), align 4, !dbg !3179
  %conv11 = zext i16 %8 to i32, !dbg !3179
  %sub12 = sub nsw i32 %conv10, %conv11, !dbg !3180
  store i32 %sub12, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_run, i32 0, i32 3), align 4, !dbg !3181
  %call13 = call i32 @ff_init_vlc_sparse(%struct.VLC* @vlc_tab_run, i32 5, i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vlc_tab_run_huffbits, i32 0, i32 0), i32 1, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @vlc_tab_run_huffcodes, i32 0, i32 0), i32 1, i32 1, i8* null, i32 0, i32 0, i32 6), !dbg !3182
  %9 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 3), align 2, !dbg !3183
  %idxprom14 = zext i16 %9 to i64, !dbg !3184
  %arrayidx15 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom14, !dbg !3184
  store [2 x i16]* %arrayidx15, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @fft_level_exp_alt_vlc, i32 0, i32 1), align 8, !dbg !3185
  %10 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 4), align 8, !dbg !3186
  %conv16 = zext i16 %10 to i32, !dbg !3186
  %11 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 3), align 2, !dbg !3187
  %conv17 = zext i16 %11 to i32, !dbg !3187
  %sub18 = sub nsw i32 %conv16, %conv17, !dbg !3188
  store i32 %sub18, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @fft_level_exp_alt_vlc, i32 0, i32 3), align 4, !dbg !3189
  %call19 = call i32 @ff_init_vlc_sparse(%struct.VLC* @fft_level_exp_alt_vlc, i32 8, i32 28, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @fft_level_exp_alt_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([28 x i16]* @fft_level_exp_alt_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 6), !dbg !3190
  %12 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 4), align 8, !dbg !3191
  %idxprom20 = zext i16 %12 to i64, !dbg !3192
  %arrayidx21 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom20, !dbg !3192
  store [2 x i16]* %arrayidx21, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @fft_level_exp_vlc, i32 0, i32 1), align 8, !dbg !3193
  %13 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 5), align 2, !dbg !3194
  %conv22 = zext i16 %13 to i32, !dbg !3194
  %14 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 4), align 8, !dbg !3195
  %conv23 = zext i16 %14 to i32, !dbg !3195
  %sub24 = sub nsw i32 %conv22, %conv23, !dbg !3196
  store i32 %sub24, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @fft_level_exp_vlc, i32 0, i32 3), align 4, !dbg !3197
  %call25 = call i32 @ff_init_vlc_sparse(%struct.VLC* @fft_level_exp_vlc, i32 8, i32 20, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @fft_level_exp_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([20 x i16]* @fft_level_exp_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 6), !dbg !3198
  %15 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 5), align 2, !dbg !3199
  %idxprom26 = zext i16 %15 to i64, !dbg !3200
  %arrayidx27 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom26, !dbg !3200
  store [2 x i16]* %arrayidx27, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @fft_stereo_exp_vlc, i32 0, i32 1), align 8, !dbg !3201
  %16 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 6), align 4, !dbg !3202
  %conv28 = zext i16 %16 to i32, !dbg !3202
  %17 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 5), align 2, !dbg !3203
  %conv29 = zext i16 %17 to i32, !dbg !3203
  %sub30 = sub nsw i32 %conv28, %conv29, !dbg !3204
  store i32 %sub30, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @fft_stereo_exp_vlc, i32 0, i32 3), align 4, !dbg !3205
  %call31 = call i32 @ff_init_vlc_sparse(%struct.VLC* @fft_stereo_exp_vlc, i32 6, i32 7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @fft_stereo_exp_huffbits, i32 0, i32 0), i32 1, i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @fft_stereo_exp_huffcodes, i32 0, i32 0), i32 1, i32 1, i8* null, i32 0, i32 0, i32 6), !dbg !3206
  %18 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 6), align 4, !dbg !3207
  %idxprom32 = zext i16 %18 to i64, !dbg !3208
  %arrayidx33 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom32, !dbg !3208
  store [2 x i16]* %arrayidx33, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @fft_stereo_phase_vlc, i32 0, i32 1), align 8, !dbg !3209
  %19 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 7), align 2, !dbg !3210
  %conv34 = zext i16 %19 to i32, !dbg !3210
  %20 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 6), align 4, !dbg !3211
  %conv35 = zext i16 %20 to i32, !dbg !3211
  %sub36 = sub nsw i32 %conv34, %conv35, !dbg !3212
  store i32 %sub36, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @fft_stereo_phase_vlc, i32 0, i32 3), align 4, !dbg !3213
  %call37 = call i32 @ff_init_vlc_sparse(%struct.VLC* @fft_stereo_phase_vlc, i32 6, i32 9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @fft_stereo_phase_huffbits, i32 0, i32 0), i32 1, i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @fft_stereo_phase_huffcodes, i32 0, i32 0), i32 1, i32 1, i8* null, i32 0, i32 0, i32 6), !dbg !3214
  %21 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 7), align 2, !dbg !3215
  %idxprom38 = zext i16 %21 to i64, !dbg !3216
  %arrayidx39 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom38, !dbg !3216
  store [2 x i16]* %arrayidx39, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_tone_level_idx_hi1, i32 0, i32 1), align 8, !dbg !3217
  %22 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 8), align 16, !dbg !3218
  %conv40 = zext i16 %22 to i32, !dbg !3218
  %23 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 7), align 2, !dbg !3219
  %conv41 = zext i16 %23 to i32, !dbg !3219
  %sub42 = sub nsw i32 %conv40, %conv41, !dbg !3220
  store i32 %sub42, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_tone_level_idx_hi1, i32 0, i32 3), align 4, !dbg !3221
  %call43 = call i32 @ff_init_vlc_sparse(%struct.VLC* @vlc_tab_tone_level_idx_hi1, i32 8, i32 20, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @vlc_tab_tone_level_idx_hi1_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([20 x i16]* @vlc_tab_tone_level_idx_hi1_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 6), !dbg !3222
  %24 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 8), align 16, !dbg !3223
  %idxprom44 = zext i16 %24 to i64, !dbg !3224
  %arrayidx45 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom44, !dbg !3224
  store [2 x i16]* %arrayidx45, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_tone_level_idx_mid, i32 0, i32 1), align 8, !dbg !3225
  %25 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 9), align 2, !dbg !3226
  %conv46 = zext i16 %25 to i32, !dbg !3226
  %26 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 8), align 16, !dbg !3227
  %conv47 = zext i16 %26 to i32, !dbg !3227
  %sub48 = sub nsw i32 %conv46, %conv47, !dbg !3228
  store i32 %sub48, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_tone_level_idx_mid, i32 0, i32 3), align 4, !dbg !3229
  %call49 = call i32 @ff_init_vlc_sparse(%struct.VLC* @vlc_tab_tone_level_idx_mid, i32 8, i32 24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @vlc_tab_tone_level_idx_mid_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([24 x i16]* @vlc_tab_tone_level_idx_mid_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 6), !dbg !3230
  %27 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 9), align 2, !dbg !3231
  %idxprom50 = zext i16 %27 to i64, !dbg !3232
  %arrayidx51 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom50, !dbg !3232
  store [2 x i16]* %arrayidx51, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_tone_level_idx_hi2, i32 0, i32 1), align 8, !dbg !3233
  %28 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 10), align 4, !dbg !3234
  %conv52 = zext i16 %28 to i32, !dbg !3234
  %29 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 9), align 2, !dbg !3235
  %conv53 = zext i16 %29 to i32, !dbg !3235
  %sub54 = sub nsw i32 %conv52, %conv53, !dbg !3236
  store i32 %sub54, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_tone_level_idx_hi2, i32 0, i32 3), align 4, !dbg !3237
  %call55 = call i32 @ff_init_vlc_sparse(%struct.VLC* @vlc_tab_tone_level_idx_hi2, i32 8, i32 24, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @vlc_tab_tone_level_idx_hi2_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([24 x i16]* @vlc_tab_tone_level_idx_hi2_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 6), !dbg !3238
  %30 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 10), align 4, !dbg !3239
  %idxprom56 = zext i16 %30 to i64, !dbg !3240
  %arrayidx57 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom56, !dbg !3240
  store [2 x i16]* %arrayidx57, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_type30, i32 0, i32 1), align 8, !dbg !3241
  %31 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 11), align 2, !dbg !3242
  %conv58 = zext i16 %31 to i32, !dbg !3242
  %32 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 10), align 4, !dbg !3243
  %conv59 = zext i16 %32 to i32, !dbg !3243
  %sub60 = sub nsw i32 %conv58, %conv59, !dbg !3244
  store i32 %sub60, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_type30, i32 0, i32 3), align 4, !dbg !3245
  %call61 = call i32 @ff_init_vlc_sparse(%struct.VLC* @vlc_tab_type30, i32 6, i32 9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @vlc_tab_type30_huffbits, i32 0, i32 0), i32 1, i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @vlc_tab_type30_huffcodes, i32 0, i32 0), i32 1, i32 1, i8* null, i32 0, i32 0, i32 6), !dbg !3246
  %33 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 11), align 2, !dbg !3247
  %idxprom62 = zext i16 %33 to i64, !dbg !3248
  %arrayidx63 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom62, !dbg !3248
  store [2 x i16]* %arrayidx63, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_type34, i32 0, i32 1), align 8, !dbg !3249
  %34 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 12), align 8, !dbg !3250
  %conv64 = zext i16 %34 to i32, !dbg !3250
  %35 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 11), align 2, !dbg !3251
  %conv65 = zext i16 %35 to i32, !dbg !3251
  %sub66 = sub nsw i32 %conv64, %conv65, !dbg !3252
  store i32 %sub66, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @vlc_tab_type34, i32 0, i32 3), align 4, !dbg !3253
  %call67 = call i32 @ff_init_vlc_sparse(%struct.VLC* @vlc_tab_type34, i32 5, i32 10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_tab_type34_huffbits, i32 0, i32 0), i32 1, i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @vlc_tab_type34_huffcodes, i32 0, i32 0), i32 1, i32 1, i8* null, i32 0, i32 0, i32 6), !dbg !3254
  %36 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 12), align 8, !dbg !3255
  %idxprom68 = zext i16 %36 to i64, !dbg !3256
  %arrayidx69 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom68, !dbg !3256
  store [2 x i16]* %arrayidx69, [2 x i16]** getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 0, i32 1), align 8, !dbg !3257
  %37 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 13), align 2, !dbg !3258
  %conv70 = zext i16 %37 to i32, !dbg !3258
  %38 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 12), align 8, !dbg !3259
  %conv71 = zext i16 %38 to i32, !dbg !3259
  %sub72 = sub nsw i32 %conv70, %conv71, !dbg !3260
  store i32 %sub72, i32* getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 0, i32 3), align 4, !dbg !3261
  %call73 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 0), i32 8, i32 23, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @vlc_tab_fft_tone_offset_0_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([23 x i16]* @vlc_tab_fft_tone_offset_0_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 6), !dbg !3262
  %39 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 13), align 2, !dbg !3263
  %idxprom74 = zext i16 %39 to i64, !dbg !3264
  %arrayidx75 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom74, !dbg !3264
  store [2 x i16]* %arrayidx75, [2 x i16]** getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 1, i32 1), align 8, !dbg !3265
  %40 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 14), align 4, !dbg !3266
  %conv76 = zext i16 %40 to i32, !dbg !3266
  %41 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 13), align 2, !dbg !3267
  %conv77 = zext i16 %41 to i32, !dbg !3267
  %sub78 = sub nsw i32 %conv76, %conv77, !dbg !3268
  store i32 %sub78, i32* getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 1, i32 3), align 4, !dbg !3269
  %call79 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 1), i32 8, i32 28, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @vlc_tab_fft_tone_offset_1_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([28 x i16]* @vlc_tab_fft_tone_offset_1_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 6), !dbg !3270
  %42 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 14), align 4, !dbg !3271
  %idxprom80 = zext i16 %42 to i64, !dbg !3272
  %arrayidx81 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom80, !dbg !3272
  store [2 x i16]* %arrayidx81, [2 x i16]** getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 2, i32 1), align 8, !dbg !3273
  %43 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 15), align 2, !dbg !3274
  %conv82 = zext i16 %43 to i32, !dbg !3274
  %44 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 14), align 4, !dbg !3275
  %conv83 = zext i16 %44 to i32, !dbg !3275
  %sub84 = sub nsw i32 %conv82, %conv83, !dbg !3276
  store i32 %sub84, i32* getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 2, i32 3), align 4, !dbg !3277
  %call85 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 2), i32 8, i32 32, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @vlc_tab_fft_tone_offset_2_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([32 x i16]* @vlc_tab_fft_tone_offset_2_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 6), !dbg !3278
  %45 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 15), align 2, !dbg !3279
  %idxprom86 = zext i16 %45 to i64, !dbg !3280
  %arrayidx87 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom86, !dbg !3280
  store [2 x i16]* %arrayidx87, [2 x i16]** getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 3, i32 1), align 8, !dbg !3281
  %46 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 16), align 16, !dbg !3282
  %conv88 = zext i16 %46 to i32, !dbg !3282
  %47 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 15), align 2, !dbg !3283
  %conv89 = zext i16 %47 to i32, !dbg !3283
  %sub90 = sub nsw i32 %conv88, %conv89, !dbg !3284
  store i32 %sub90, i32* getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 3, i32 3), align 4, !dbg !3285
  %call91 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 3), i32 8, i32 35, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @vlc_tab_fft_tone_offset_3_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([35 x i16]* @vlc_tab_fft_tone_offset_3_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 6), !dbg !3286
  %48 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 16), align 16, !dbg !3287
  %idxprom92 = zext i16 %48 to i64, !dbg !3288
  %arrayidx93 = getelementptr inbounds [3838 x [2 x i16]], [3838 x [2 x i16]]* @qdm2_table, i64 0, i64 %idxprom92, !dbg !3288
  store [2 x i16]* %arrayidx93, [2 x i16]** getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 4, i32 1), align 8, !dbg !3289
  %49 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 17), align 2, !dbg !3290
  %conv94 = zext i16 %49 to i32, !dbg !3290
  %50 = load i16, i16* getelementptr inbounds ([18 x i16], [18 x i16]* @qdm2_vlc_offs, i64 0, i64 16), align 16, !dbg !3291
  %conv95 = zext i16 %50 to i32, !dbg !3291
  %sub96 = sub nsw i32 %conv94, %conv95, !dbg !3292
  store i32 %sub96, i32* getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 4, i32 3), align 4, !dbg !3293
  %call97 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 4), i32 8, i32 38, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @vlc_tab_fft_tone_offset_4_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([38 x i16]* @vlc_tab_fft_tone_offset_4_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 6), !dbg !3294
  ret void, !dbg !3295
}

declare void @ff_mpa_synth_init_float(float*) #3

; Function Attrs: cold nounwind optsize uwtable
define internal void @softclip_table_init() #0 !dbg !3296 {
entry:
  %i = alloca i32, align 4
  %dfl = alloca double, align 8
  %delta = alloca float, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3297, metadata !1868), !dbg !3298
  call void @llvm.dbg.declare(metadata double* %dfl, metadata !3299, metadata !1868), !dbg !3301
  store double -5.167000e+03, double* %dfl, align 8, !dbg !3301
  call void @llvm.dbg.declare(metadata float* %delta, metadata !3302, metadata !1868), !dbg !3303
  %0 = load double, double* %dfl, align 8, !dbg !3304
  %sub = fsub double -0.000000e+00, %0, !dbg !3305
  %div = fdiv double 1.000000e+00, %sub, !dbg !3306
  %conv = fptrunc double %div to float, !dbg !3307
  store float %conv, float* %delta, align 4, !dbg !3303
  store i32 0, i32* %i, align 4, !dbg !3308
  br label %for.cond, !dbg !3310

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !3311
  %cmp = icmp slt i32 %1, 8117, !dbg !3314
  br i1 %cmp, label %for.body, label %for.end, !dbg !3315

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !3316
  %conv2 = sitofp i32 %2 to float, !dbg !3317
  %3 = load float, float* %delta, align 4, !dbg !3318
  %mul = fmul float %conv2, %3, !dbg !3319
  %conv3 = fpext float %mul to double, !dbg !3317
  %call = call double @sin(double %conv3) #9, !dbg !3320
  %4 = load double, double* %dfl, align 8, !dbg !3321
  %mul4 = fmul double %call, %4, !dbg !3322
  %conv5 = fptosi double %mul4 to i32, !dbg !3323
  %and = and i32 %conv5, 65535, !dbg !3324
  %sub6 = sub nsw i32 27600, %and, !dbg !3325
  %conv7 = trunc i32 %sub6 to i16, !dbg !3326
  %5 = load i32, i32* %i, align 4, !dbg !3327
  %idxprom = sext i32 %5 to i64, !dbg !3328
  %arrayidx = getelementptr inbounds [8117 x i16], [8117 x i16]* @softclip_table, i64 0, i64 %idxprom, !dbg !3328
  store i16 %conv7, i16* %arrayidx, align 2, !dbg !3329
  br label %for.inc, !dbg !3328

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !3330
  %inc = add nsw i32 %6, 1, !dbg !3330
  store i32 %inc, i32* %i, align 4, !dbg !3330
  br label %for.cond, !dbg !3332, !llvm.loop !3333

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3335
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @rnd_table_init() #0 !dbg !3336 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ldw = alloca i32, align 4
  %random_seed = alloca i64, align 8
  %delta = alloca float, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3337, metadata !1868), !dbg !3338
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3339, metadata !1868), !dbg !3340
  call void @llvm.dbg.declare(metadata i32* %ldw, metadata !3341, metadata !1868), !dbg !3342
  call void @llvm.dbg.declare(metadata i64* %random_seed, metadata !3343, metadata !1868), !dbg !3344
  store i64 0, i64* %random_seed, align 8, !dbg !3344
  call void @llvm.dbg.declare(metadata float* %delta, metadata !3345, metadata !1868), !dbg !3346
  store float 0x3F10000000000000, float* %delta, align 4, !dbg !3346
  store i32 0, i32* %i, align 4, !dbg !3347
  br label %for.cond, !dbg !3349

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3350
  %cmp = icmp slt i32 %0, 4096, !dbg !3353
  br i1 %cmp, label %for.body, label %for.end, !dbg !3354

for.body:                                         ; preds = %for.cond
  %1 = load i64, i64* %random_seed, align 8, !dbg !3355
  %mul = mul i64 %1, 214013, !dbg !3357
  %add = add i64 %mul, 2531011, !dbg !3358
  store i64 %add, i64* %random_seed, align 8, !dbg !3359
  %2 = load float, float* %delta, align 4, !dbg !3360
  %3 = load i64, i64* %random_seed, align 8, !dbg !3361
  %conv = trunc i64 %3 to i32, !dbg !3362
  %shr = ashr i32 %conv, 16, !dbg !3363
  %and = and i32 %shr, 32767, !dbg !3364
  %conv1 = sitofp i32 %and to float, !dbg !3365
  %mul2 = fmul float %2, %conv1, !dbg !3366
  %conv3 = fpext float %mul2 to double, !dbg !3360
  %sub = fsub double %conv3, 1.000000e+00, !dbg !3367
  %mul4 = fmul double %sub, 1.300000e+00, !dbg !3368
  %conv5 = fptrunc double %mul4 to float, !dbg !3369
  %4 = load i32, i32* %i, align 4, !dbg !3370
  %idxprom = sext i32 %4 to i64, !dbg !3371
  %arrayidx = getelementptr inbounds [4116 x float], [4116 x float]* @noise_table, i64 0, i64 %idxprom, !dbg !3371
  store float %conv5, float* %arrayidx, align 4, !dbg !3372
  br label %for.inc, !dbg !3373

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !3374
  %inc = add nsw i32 %5, 1, !dbg !3374
  store i32 %inc, i32* %i, align 4, !dbg !3374
  br label %for.cond, !dbg !3376, !llvm.loop !3377

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3379
  br label %for.cond6, !dbg !3381

for.cond6:                                        ; preds = %for.inc26, %for.end
  %6 = load i32, i32* %i, align 4, !dbg !3382
  %cmp7 = icmp slt i32 %6, 256, !dbg !3385
  br i1 %cmp7, label %for.body9, label %for.end28, !dbg !3386

for.body9:                                        ; preds = %for.cond6
  store i64 81, i64* %random_seed, align 8, !dbg !3387
  %7 = load i32, i32* %i, align 4, !dbg !3389
  store i32 %7, i32* %ldw, align 4, !dbg !3390
  store i32 0, i32* %j, align 4, !dbg !3391
  br label %for.cond10, !dbg !3393

for.cond10:                                       ; preds = %for.inc23, %for.body9
  %8 = load i32, i32* %j, align 4, !dbg !3394
  %cmp11 = icmp slt i32 %8, 5, !dbg !3397
  br i1 %cmp11, label %for.body13, label %for.end25, !dbg !3398

for.body13:                                       ; preds = %for.cond10
  %9 = load i32, i32* %ldw, align 4, !dbg !3399
  %conv14 = zext i32 %9 to i64, !dbg !3399
  %10 = load i64, i64* %random_seed, align 8, !dbg !3401
  %div = udiv i64 %conv14, %10, !dbg !3402
  %conv15 = trunc i64 %div to i8, !dbg !3399
  %11 = load i32, i32* %j, align 4, !dbg !3403
  %idxprom16 = sext i32 %11 to i64, !dbg !3404
  %12 = load i32, i32* %i, align 4, !dbg !3405
  %idxprom17 = sext i32 %12 to i64, !dbg !3404
  %arrayidx18 = getelementptr inbounds [256 x [5 x i8]], [256 x [5 x i8]]* @random_dequant_index, i64 0, i64 %idxprom17, !dbg !3404
  %arrayidx19 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx18, i64 0, i64 %idxprom16, !dbg !3404
  store i8 %conv15, i8* %arrayidx19, align 1, !dbg !3406
  %13 = load i64, i64* %random_seed, align 8, !dbg !3407
  %14 = load i32, i32* %ldw, align 4, !dbg !3408
  %conv20 = zext i32 %14 to i64, !dbg !3408
  %rem = urem i64 %conv20, %13, !dbg !3408
  %conv21 = trunc i64 %rem to i32, !dbg !3408
  store i32 %conv21, i32* %ldw, align 4, !dbg !3408
  %15 = load i64, i64* %random_seed, align 8, !dbg !3409
  %div22 = udiv i64 %15, 3, !dbg !3409
  store i64 %div22, i64* %random_seed, align 8, !dbg !3409
  br label %for.inc23, !dbg !3410

for.inc23:                                        ; preds = %for.body13
  %16 = load i32, i32* %j, align 4, !dbg !3411
  %inc24 = add nsw i32 %16, 1, !dbg !3411
  store i32 %inc24, i32* %j, align 4, !dbg !3411
  br label %for.cond10, !dbg !3413, !llvm.loop !3414

for.end25:                                        ; preds = %for.cond10
  br label %for.inc26, !dbg !3416

for.inc26:                                        ; preds = %for.end25
  %17 = load i32, i32* %i, align 4, !dbg !3417
  %inc27 = add nsw i32 %17, 1, !dbg !3417
  store i32 %inc27, i32* %i, align 4, !dbg !3417
  br label %for.cond6, !dbg !3419, !llvm.loop !3420

for.end28:                                        ; preds = %for.cond6
  store i32 0, i32* %i, align 4, !dbg !3422
  br label %for.cond29, !dbg !3424

for.cond29:                                       ; preds = %for.inc51, %for.end28
  %18 = load i32, i32* %i, align 4, !dbg !3425
  %cmp30 = icmp slt i32 %18, 128, !dbg !3428
  br i1 %cmp30, label %for.body32, label %for.end53, !dbg !3429

for.body32:                                       ; preds = %for.cond29
  store i64 25, i64* %random_seed, align 8, !dbg !3430
  %19 = load i32, i32* %i, align 4, !dbg !3432
  store i32 %19, i32* %ldw, align 4, !dbg !3433
  store i32 0, i32* %j, align 4, !dbg !3434
  br label %for.cond33, !dbg !3436

for.cond33:                                       ; preds = %for.inc48, %for.body32
  %20 = load i32, i32* %j, align 4, !dbg !3437
  %cmp34 = icmp slt i32 %20, 3, !dbg !3440
  br i1 %cmp34, label %for.body36, label %for.end50, !dbg !3441

for.body36:                                       ; preds = %for.cond33
  %21 = load i32, i32* %ldw, align 4, !dbg !3442
  %conv37 = zext i32 %21 to i64, !dbg !3442
  %22 = load i64, i64* %random_seed, align 8, !dbg !3444
  %div38 = udiv i64 %conv37, %22, !dbg !3445
  %conv39 = trunc i64 %div38 to i8, !dbg !3442
  %23 = load i32, i32* %j, align 4, !dbg !3446
  %idxprom40 = sext i32 %23 to i64, !dbg !3447
  %24 = load i32, i32* %i, align 4, !dbg !3448
  %idxprom41 = sext i32 %24 to i64, !dbg !3447
  %arrayidx42 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @random_dequant_type24, i64 0, i64 %idxprom41, !dbg !3447
  %arrayidx43 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx42, i64 0, i64 %idxprom40, !dbg !3447
  store i8 %conv39, i8* %arrayidx43, align 1, !dbg !3449
  %25 = load i64, i64* %random_seed, align 8, !dbg !3450
  %26 = load i32, i32* %ldw, align 4, !dbg !3451
  %conv44 = zext i32 %26 to i64, !dbg !3451
  %rem45 = urem i64 %conv44, %25, !dbg !3451
  %conv46 = trunc i64 %rem45 to i32, !dbg !3451
  store i32 %conv46, i32* %ldw, align 4, !dbg !3451
  %27 = load i64, i64* %random_seed, align 8, !dbg !3452
  %div47 = udiv i64 %27, 5, !dbg !3452
  store i64 %div47, i64* %random_seed, align 8, !dbg !3452
  br label %for.inc48, !dbg !3453

for.inc48:                                        ; preds = %for.body36
  %28 = load i32, i32* %j, align 4, !dbg !3454
  %inc49 = add nsw i32 %28, 1, !dbg !3454
  store i32 %inc49, i32* %j, align 4, !dbg !3454
  br label %for.cond33, !dbg !3456, !llvm.loop !3457

for.end50:                                        ; preds = %for.cond33
  br label %for.inc51, !dbg !3459

for.inc51:                                        ; preds = %for.end50
  %29 = load i32, i32* %i, align 4, !dbg !3460
  %inc52 = add nsw i32 %29, 1, !dbg !3460
  store i32 %inc52, i32* %i, align 4, !dbg !3460
  br label %for.cond29, !dbg !3462, !llvm.loop !3463

for.end53:                                        ; preds = %for.cond29
  ret void, !dbg !3465
}

; Function Attrs: cold nounwind optsize uwtable
define internal void @init_noise_samples() #0 !dbg !3466 {
entry:
  %i = alloca i32, align 4
  %random_seed = alloca i32, align 4
  %delta = alloca float, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3467, metadata !1868), !dbg !3468
  call void @llvm.dbg.declare(metadata i32* %random_seed, metadata !3469, metadata !1868), !dbg !3470
  store i32 0, i32* %random_seed, align 4, !dbg !3470
  call void @llvm.dbg.declare(metadata float* %delta, metadata !3471, metadata !1868), !dbg !3472
  store float 0x3F10000000000000, float* %delta, align 4, !dbg !3472
  store i32 0, i32* %i, align 4, !dbg !3473
  br label %for.cond, !dbg !3475

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3476
  %cmp = icmp slt i32 %0, 128, !dbg !3479
  br i1 %cmp, label %for.body, label %for.end, !dbg !3480

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %random_seed, align 4, !dbg !3481
  %mul = mul i32 %1, 214013, !dbg !3483
  %add = add i32 %mul, 2531011, !dbg !3484
  store i32 %add, i32* %random_seed, align 4, !dbg !3485
  %2 = load float, float* %delta, align 4, !dbg !3486
  %3 = load i32, i32* %random_seed, align 4, !dbg !3487
  %shr = lshr i32 %3, 16, !dbg !3488
  %and = and i32 %shr, 32767, !dbg !3489
  %conv = uitofp i32 %and to float, !dbg !3490
  %mul1 = fmul float %2, %conv, !dbg !3491
  %conv2 = fpext float %mul1 to double, !dbg !3486
  %sub = fsub double %conv2, 1.000000e+00, !dbg !3492
  %conv3 = fptrunc double %sub to float, !dbg !3493
  %4 = load i32, i32* %i, align 4, !dbg !3494
  %idxprom = sext i32 %4 to i64, !dbg !3495
  %arrayidx = getelementptr inbounds [128 x float], [128 x float]* @noise_samples, i64 0, i64 %idxprom, !dbg !3495
  store float %conv3, float* %arrayidx, align 4, !dbg !3496
  br label %for.inc, !dbg !3497

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !3498
  %inc = add nsw i32 %5, 1, !dbg !3498
  store i32 %inc, i32* %i, align 4, !dbg !3498
  br label %for.cond, !dbg !3500, !llvm.loop !3501

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3503
}

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #3

; Function Attrs: nounwind
declare double @sin(double) #4

; Function Attrs: noreturn nounwind
declare void @abort() #5

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i64 @av_bswap64(i64 %x) #6 !dbg !3504 {
entry:
  %x.addr.i5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i5, metadata !1883, metadata !1868), !dbg !3507
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !1883, metadata !1868), !dbg !3510
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !3512, metadata !1868), !dbg !3513
  %0 = load i64, i64* %x.addr, align 8, !dbg !3514
  %conv = trunc i64 %0 to i32, !dbg !3514
  store i32 %conv, i32* %x.addr.i, align 4, !dbg !3515
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !3516
  %shl.i = shl i32 %1, 8, !dbg !3517
  %and.i = and i32 %shl.i, 65280, !dbg !3518
  %2 = load i32, i32* %x.addr.i, align 4, !dbg !3519
  %shr.i = lshr i32 %2, 8, !dbg !3520
  %and1.i = and i32 %shr.i, 255, !dbg !3521
  %or.i = or i32 %and.i, %and1.i, !dbg !3522
  %shl2.i = shl i32 %or.i, 16, !dbg !3523
  %3 = load i32, i32* %x.addr.i, align 4, !dbg !3524
  %shr3.i = lshr i32 %3, 16, !dbg !3525
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3526
  %and5.i = and i32 %shl4.i, 65280, !dbg !3527
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !3528
  %shr6.i = lshr i32 %4, 16, !dbg !3529
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3530
  %and8.i = and i32 %shr7.i, 255, !dbg !3531
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3532
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3533
  %conv1 = zext i32 %or10.i to i64, !dbg !3534
  %shl = shl i64 %conv1, 32, !dbg !3535
  %5 = load i64, i64* %x.addr, align 8, !dbg !3536
  %shr = lshr i64 %5, 32, !dbg !3537
  %conv2 = trunc i64 %shr to i32, !dbg !3536
  store i32 %conv2, i32* %x.addr.i5, align 4, !dbg !3538
  %6 = load i32, i32* %x.addr.i5, align 4, !dbg !3539
  %shl.i6 = shl i32 %6, 8, !dbg !3540
  %and.i7 = and i32 %shl.i6, 65280, !dbg !3541
  %7 = load i32, i32* %x.addr.i5, align 4, !dbg !3542
  %shr.i8 = lshr i32 %7, 8, !dbg !3543
  %and1.i9 = and i32 %shr.i8, 255, !dbg !3544
  %or.i10 = or i32 %and.i7, %and1.i9, !dbg !3545
  %shl2.i11 = shl i32 %or.i10, 16, !dbg !3546
  %8 = load i32, i32* %x.addr.i5, align 4, !dbg !3547
  %shr3.i12 = lshr i32 %8, 16, !dbg !3548
  %shl4.i13 = shl i32 %shr3.i12, 8, !dbg !3549
  %and5.i14 = and i32 %shl4.i13, 65280, !dbg !3550
  %9 = load i32, i32* %x.addr.i5, align 4, !dbg !3551
  %shr6.i15 = lshr i32 %9, 16, !dbg !3552
  %shr7.i16 = lshr i32 %shr6.i15, 8, !dbg !3553
  %and8.i17 = and i32 %shr7.i16, 255, !dbg !3554
  %or9.i18 = or i32 %and5.i14, %and8.i17, !dbg !3555
  %or10.i19 = or i32 %shl2.i11, %or9.i18, !dbg !3556
  %conv4 = zext i32 %or10.i19 to i64, !dbg !3557
  %or = or i64 %shl, %conv4, !dbg !3558
  ret i64 %or, !dbg !3559
}

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @qdm2_decode(%struct.QDM2Context* %q, i8* %in, i16* %out) #1 !dbg !3560 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.QDM2Context*, align 8
  %in.addr = alloca i8*, align 8
  %out.addr = alloca i16*, align 8
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  %frame_size = alloca i32, align 4
  %value = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !3563, metadata !1868), !dbg !3564
  store i8* %in, i8** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in.addr, metadata !3565, metadata !1868), !dbg !3566
  store i16* %out, i16** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %out.addr, metadata !3567, metadata !1868), !dbg !3568
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !3569, metadata !1868), !dbg !3570
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3571, metadata !1868), !dbg !3572
  call void @llvm.dbg.declare(metadata i32* %frame_size, metadata !3573, metadata !1868), !dbg !3574
  %0 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3575
  %frame_size1 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %0, i32 0, i32 7, !dbg !3576
  %1 = load i32, i32* %frame_size1, align 4, !dbg !3576
  %2 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3577
  %channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %2, i32 0, i32 1, !dbg !3578
  %3 = load i32, i32* %channels, align 4, !dbg !3578
  %mul = mul nsw i32 %1, %3, !dbg !3579
  store i32 %mul, i32* %frame_size, align 4, !dbg !3574
  %4 = load i32, i32* %frame_size, align 4, !dbg !3580
  %conv = zext i32 %4 to i64, !dbg !3582
  %cmp = icmp ugt i64 %conv, 1024, !dbg !3583
  br i1 %cmp, label %if.then, label %if.end, !dbg !3584

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !3585
  br label %return, !dbg !3585

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %in.addr, align 8, !dbg !3586
  %6 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3587
  %compressed_data = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %6, i32 0, i32 29, !dbg !3588
  store i8* %5, i8** %compressed_data, align 32, !dbg !3589
  %7 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3590
  %checksum_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %7, i32 0, i32 4, !dbg !3591
  %8 = load i32, i32* %checksum_size, align 16, !dbg !3591
  %9 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3592
  %compressed_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %9, i32 0, i32 30, !dbg !3593
  store i32 %8, i32* %compressed_size, align 8, !dbg !3594
  %10 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3595
  %output_buffer = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %10, i32 0, i32 31, !dbg !3596
  %arraydecay = getelementptr inbounds [2048 x float], [2048 x float]* %output_buffer, i32 0, i32 0, !dbg !3597
  %11 = bitcast float* %arraydecay to i8*, !dbg !3597
  %12 = load i32, i32* %frame_size, align 4, !dbg !3598
  %idxprom = sext i32 %12 to i64, !dbg !3599
  %13 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3599
  %output_buffer3 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %13, i32 0, i32 31, !dbg !3600
  %arrayidx = getelementptr inbounds [2048 x float], [2048 x float]* %output_buffer3, i64 0, i64 %idxprom, !dbg !3599
  %14 = bitcast float* %arrayidx to i8*, !dbg !3597
  %15 = load i32, i32* %frame_size, align 4, !dbg !3601
  %conv4 = sext i32 %15 to i64, !dbg !3601
  %mul5 = mul i64 %conv4, 4, !dbg !3602
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %11, i8* %14, i64 %mul5, i32 4, i1 false), !dbg !3597
  %16 = load i32, i32* %frame_size, align 4, !dbg !3603
  %idxprom6 = sext i32 %16 to i64, !dbg !3604
  %17 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3604
  %output_buffer7 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %17, i32 0, i32 31, !dbg !3605
  %arrayidx8 = getelementptr inbounds [2048 x float], [2048 x float]* %output_buffer7, i64 0, i64 %idxprom6, !dbg !3604
  %18 = bitcast float* %arrayidx8 to i8*, !dbg !3606
  %19 = load i32, i32* %frame_size, align 4, !dbg !3607
  %conv9 = sext i32 %19 to i64, !dbg !3607
  %mul10 = mul i64 %conv9, 4, !dbg !3608
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 %mul10, i32 4, i1 false), !dbg !3606
  %20 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3609
  %sub_packet = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %20, i32 0, i32 50, !dbg !3611
  %21 = load i32, i32* %sub_packet, align 32, !dbg !3611
  %cmp11 = icmp eq i32 %21, 0, !dbg !3612
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !3613

if.then13:                                        ; preds = %if.end
  %22 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3614
  %has_errors = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %22, i32 0, i32 47, !dbg !3616
  store i32 0, i32* %has_errors, align 4, !dbg !3617
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i32 0, i32 0)), !dbg !3618
  %23 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3619
  call void @qdm2_decode_super_block(%struct.QDM2Context* %23), !dbg !3620
  br label %if.end14, !dbg !3621

if.end14:                                         ; preds = %if.then13, %if.end
  %24 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3622
  %has_errors15 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %24, i32 0, i32 47, !dbg !3624
  %25 = load i32, i32* %has_errors15, align 4, !dbg !3624
  %tobool = icmp ne i32 %25, 0, !dbg !3622
  br i1 %tobool, label %if.end23, label %if.then16, !dbg !3625

if.then16:                                        ; preds = %if.end14
  %26 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3626
  %sub_packet17 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %26, i32 0, i32 50, !dbg !3629
  %27 = load i32, i32* %sub_packet17, align 32, !dbg !3629
  %cmp18 = icmp eq i32 %27, 2, !dbg !3630
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !3631

if.then20:                                        ; preds = %if.then16
  %28 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3632
  call void @qdm2_decode_fft_packets(%struct.QDM2Context* %28), !dbg !3633
  br label %if.end21, !dbg !3633

if.end21:                                         ; preds = %if.then20, %if.then16
  %29 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3634
  %30 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3635
  %sub_packet22 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %30, i32 0, i32 50, !dbg !3636
  %31 = load i32, i32* %sub_packet22, align 32, !dbg !3636
  call void @qdm2_fft_tone_synthesizer(%struct.QDM2Context* %29, i32 %31), !dbg !3637
  br label %if.end23, !dbg !3638

if.end23:                                         ; preds = %if.end21, %if.end14
  store i32 0, i32* %ch, align 4, !dbg !3639
  br label %for.cond, !dbg !3641

for.cond:                                         ; preds = %for.inc, %if.end23
  %32 = load i32, i32* %ch, align 4, !dbg !3642
  %33 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3645
  %channels24 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %33, i32 0, i32 1, !dbg !3646
  %34 = load i32, i32* %channels24, align 4, !dbg !3646
  %cmp25 = icmp slt i32 %32, %34, !dbg !3647
  br i1 %cmp25, label %for.body, label %for.end, !dbg !3648

for.body:                                         ; preds = %for.cond
  %35 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3649
  %36 = load i32, i32* %ch, align 4, !dbg !3651
  %37 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3652
  %sub_packet27 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %37, i32 0, i32 50, !dbg !3653
  %38 = load i32, i32* %sub_packet27, align 32, !dbg !3653
  call void @qdm2_calculate_fft(%struct.QDM2Context* %35, i32 %36, i32 %38), !dbg !3654
  %39 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3655
  %has_errors28 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %39, i32 0, i32 47, !dbg !3657
  %40 = load i32, i32* %has_errors28, align 4, !dbg !3657
  %tobool29 = icmp ne i32 %40, 0, !dbg !3655
  br i1 %tobool29, label %if.end33, label %land.lhs.true, !dbg !3658

land.lhs.true:                                    ; preds = %for.body
  %41 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3659
  %sub_packet_list_C = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %41, i32 0, i32 16, !dbg !3661
  %arrayidx30 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_C, i64 0, i64 0, !dbg !3659
  %packet = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx30, i32 0, i32 0, !dbg !3662
  %42 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !3662
  %tobool31 = icmp ne %struct.QDM2SubPacket* %42, null, !dbg !3659
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !3663

if.then32:                                        ; preds = %land.lhs.true
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i32 0, i32 0)), !dbg !3664
  store i32 -1, i32* %retval, align 4, !dbg !3666
  br label %return, !dbg !3666

if.end33:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !3667

for.inc:                                          ; preds = %if.end33
  %43 = load i32, i32* %ch, align 4, !dbg !3668
  %inc = add nsw i32 %43, 1, !dbg !3668
  store i32 %inc, i32* %ch, align 4, !dbg !3668
  br label %for.cond, !dbg !3670, !llvm.loop !3671

for.end:                                          ; preds = %for.cond
  %44 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3673
  %has_errors34 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %44, i32 0, i32 47, !dbg !3675
  %45 = load i32, i32* %has_errors34, align 4, !dbg !3675
  %tobool35 = icmp ne i32 %45, 0, !dbg !3673
  br i1 %tobool35, label %if.end40, label %land.lhs.true36, !dbg !3676

land.lhs.true36:                                  ; preds = %for.end
  %46 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3677
  %do_synth_filter = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %46, i32 0, i32 49, !dbg !3679
  %47 = load i32, i32* %do_synth_filter, align 4, !dbg !3679
  %tobool37 = icmp ne i32 %47, 0, !dbg !3677
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !3680

if.then38:                                        ; preds = %land.lhs.true36
  %48 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3681
  %49 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3682
  %sub_packet39 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %49, i32 0, i32 50, !dbg !3683
  %50 = load i32, i32* %sub_packet39, align 32, !dbg !3683
  call void @qdm2_synthesis_filter(%struct.QDM2Context* %48, i32 %50), !dbg !3684
  br label %if.end40, !dbg !3684

if.end40:                                         ; preds = %if.then38, %land.lhs.true36, %for.end
  %51 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3685
  %sub_packet41 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %51, i32 0, i32 50, !dbg !3686
  %52 = load i32, i32* %sub_packet41, align 32, !dbg !3686
  %add = add nsw i32 %52, 1, !dbg !3687
  %rem = srem i32 %add, 16, !dbg !3688
  %53 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3689
  %sub_packet42 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %53, i32 0, i32 50, !dbg !3690
  store i32 %rem, i32* %sub_packet42, align 32, !dbg !3691
  store i32 0, i32* %i, align 4, !dbg !3692
  br label %for.cond43, !dbg !3694

for.cond43:                                       ; preds = %for.inc79, %if.end40
  %54 = load i32, i32* %i, align 4, !dbg !3695
  %55 = load i32, i32* %frame_size, align 4, !dbg !3698
  %cmp44 = icmp slt i32 %54, %55, !dbg !3699
  br i1 %cmp44, label %for.body46, label %for.end81, !dbg !3700

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata i32* %value, metadata !3701, metadata !1868), !dbg !3703
  %56 = load i32, i32* %i, align 4, !dbg !3704
  %idxprom47 = sext i32 %56 to i64, !dbg !3705
  %57 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3705
  %output_buffer48 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %57, i32 0, i32 31, !dbg !3706
  %arrayidx49 = getelementptr inbounds [2048 x float], [2048 x float]* %output_buffer48, i64 0, i64 %idxprom47, !dbg !3705
  %58 = load float, float* %arrayidx49, align 4, !dbg !3705
  %conv50 = fptosi float %58 to i32, !dbg !3707
  store i32 %conv50, i32* %value, align 4, !dbg !3703
  %59 = load i32, i32* %value, align 4, !dbg !3708
  %cmp51 = icmp sgt i32 %59, 27600, !dbg !3710
  br i1 %cmp51, label %if.then53, label %if.else, !dbg !3711

if.then53:                                        ; preds = %for.body46
  %60 = load i32, i32* %value, align 4, !dbg !3712
  %cmp54 = icmp sgt i32 %60, 35716, !dbg !3713
  br i1 %cmp54, label %cond.true, label %cond.false, !dbg !3714

cond.true:                                        ; preds = %if.then53
  br label %cond.end, !dbg !3715

cond.false:                                       ; preds = %if.then53
  %61 = load i32, i32* %value, align 4, !dbg !3717
  %sub = sub nsw i32 %61, 27600, !dbg !3719
  %idxprom56 = sext i32 %sub to i64, !dbg !3720
  %arrayidx57 = getelementptr inbounds [8117 x i16], [8117 x i16]* @softclip_table, i64 0, i64 %idxprom56, !dbg !3720
  %62 = load i16, i16* %arrayidx57, align 2, !dbg !3720
  %conv58 = zext i16 %62 to i32, !dbg !3720
  br label %cond.end, !dbg !3721

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 32767, %cond.true ], [ %conv58, %cond.false ], !dbg !3722
  store i32 %cond, i32* %value, align 4, !dbg !3724
  br label %if.end75, !dbg !3725

if.else:                                          ; preds = %for.body46
  %63 = load i32, i32* %value, align 4, !dbg !3726
  %cmp59 = icmp slt i32 %63, -27600, !dbg !3728
  br i1 %cmp59, label %if.then61, label %if.end74, !dbg !3729

if.then61:                                        ; preds = %if.else
  %64 = load i32, i32* %value, align 4, !dbg !3730
  %cmp62 = icmp slt i32 %64, -35716, !dbg !3731
  br i1 %cmp62, label %cond.true64, label %cond.false65, !dbg !3732

cond.true64:                                      ; preds = %if.then61
  br label %cond.end72, !dbg !3733

cond.false65:                                     ; preds = %if.then61
  %65 = load i32, i32* %value, align 4, !dbg !3735
  %sub66 = sub nsw i32 0, %65, !dbg !3737
  %sub67 = sub nsw i32 %sub66, 27600, !dbg !3738
  %idxprom68 = sext i32 %sub67 to i64, !dbg !3739
  %arrayidx69 = getelementptr inbounds [8117 x i16], [8117 x i16]* @softclip_table, i64 0, i64 %idxprom68, !dbg !3739
  %66 = load i16, i16* %arrayidx69, align 2, !dbg !3739
  %conv70 = zext i16 %66 to i32, !dbg !3739
  %sub71 = sub nsw i32 0, %conv70, !dbg !3740
  br label %cond.end72, !dbg !3741

cond.end72:                                       ; preds = %cond.false65, %cond.true64
  %cond73 = phi i32 [ -32767, %cond.true64 ], [ %sub71, %cond.false65 ], !dbg !3742
  store i32 %cond73, i32* %value, align 4, !dbg !3744
  br label %if.end74, !dbg !3745

if.end74:                                         ; preds = %cond.end72, %if.else
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %cond.end
  %67 = load i32, i32* %value, align 4, !dbg !3746
  %conv76 = trunc i32 %67 to i16, !dbg !3746
  %68 = load i32, i32* %i, align 4, !dbg !3747
  %idxprom77 = sext i32 %68 to i64, !dbg !3748
  %69 = load i16*, i16** %out.addr, align 8, !dbg !3748
  %arrayidx78 = getelementptr inbounds i16, i16* %69, i64 %idxprom77, !dbg !3748
  store i16 %conv76, i16* %arrayidx78, align 2, !dbg !3749
  br label %for.inc79, !dbg !3750

for.inc79:                                        ; preds = %if.end75
  %70 = load i32, i32* %i, align 4, !dbg !3751
  %inc80 = add nsw i32 %70, 1, !dbg !3751
  store i32 %inc80, i32* %i, align 4, !dbg !3751
  br label %for.cond43, !dbg !3753, !llvm.loop !3754

for.end81:                                        ; preds = %for.cond43
  store i32 0, i32* %retval, align 4, !dbg !3756
  br label %return, !dbg !3756

return:                                           ; preds = %for.end81, %if.then32, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !3757
  ret i32 %71, !dbg !3757
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #7

; Function Attrs: nounwind uwtable
define internal void @qdm2_decode_super_block(%struct.QDM2Context* %q) #1 !dbg !3758 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %gb = alloca %struct.GetBitContext, align 8
  %header = alloca %struct.QDM2SubPacket, align 8
  %packet = alloca %struct.QDM2SubPacket*, align 8
  %i = alloca i32, align 4
  %packet_bytes = alloca i32, align 4
  %sub_packet_size = alloca i32, align 4
  %sub_packets_D = alloca i32, align 4
  %next_index = alloca i32, align 4
  %csum = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !3761, metadata !1868), !dbg !3762
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !3763, metadata !1868), !dbg !3773
  call void @llvm.dbg.declare(metadata %struct.QDM2SubPacket* %header, metadata !3774, metadata !1868), !dbg !3775
  call void @llvm.dbg.declare(metadata %struct.QDM2SubPacket** %packet, metadata !3776, metadata !1868), !dbg !3777
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3778, metadata !1868), !dbg !3779
  call void @llvm.dbg.declare(metadata i32* %packet_bytes, metadata !3780, metadata !1868), !dbg !3781
  call void @llvm.dbg.declare(metadata i32* %sub_packet_size, metadata !3782, metadata !1868), !dbg !3783
  call void @llvm.dbg.declare(metadata i32* %sub_packets_D, metadata !3784, metadata !1868), !dbg !3785
  call void @llvm.dbg.declare(metadata i32* %next_index, metadata !3786, metadata !1868), !dbg !3787
  store i32 0, i32* %next_index, align 4, !dbg !3787
  %0 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3788
  %tone_level_idx_hi1 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %0, i32 0, i32 42, !dbg !3789
  %arraydecay = getelementptr inbounds [2 x [3 x [8 x [8 x i8]]]], [2 x [3 x [8 x [8 x i8]]]]* %tone_level_idx_hi1, i32 0, i32 0, !dbg !3790
  %1 = bitcast [3 x [8 x [8 x i8]]]* %arraydecay to i8*, !dbg !3790
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 384, i32 32, i1 false), !dbg !3790
  %2 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3791
  %tone_level_idx_mid = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %2, i32 0, i32 43, !dbg !3792
  %arraydecay1 = getelementptr inbounds [2 x [26 x [8 x i8]]], [2 x [26 x [8 x i8]]]* %tone_level_idx_mid, i32 0, i32 0, !dbg !3793
  %3 = bitcast [26 x [8 x i8]]* %arraydecay1 to i8*, !dbg !3793
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 416, i32 32, i1 false), !dbg !3793
  %4 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3794
  %tone_level_idx_hi2 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %4, i32 0, i32 44, !dbg !3795
  %arraydecay2 = getelementptr inbounds [2 x [26 x i8]], [2 x [26 x i8]]* %tone_level_idx_hi2, i32 0, i32 0, !dbg !3796
  %5 = bitcast [26 x i8]* %arraydecay2 to i8*, !dbg !3796
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 52, i32 32, i1 false), !dbg !3796
  %6 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3797
  %sub_packets_B = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %6, i32 0, i32 15, !dbg !3798
  store i32 0, i32* %sub_packets_B, align 16, !dbg !3799
  store i32 0, i32* %sub_packets_D, align 4, !dbg !3800
  %7 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3801
  call void @average_quantized_coeffs(%struct.QDM2Context* %7), !dbg !3802
  %8 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3803
  %compressed_data = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %8, i32 0, i32 29, !dbg !3804
  %9 = load i8*, i8** %compressed_data, align 32, !dbg !3804
  %10 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3805
  %compressed_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %10, i32 0, i32 30, !dbg !3806
  %11 = load i32, i32* %compressed_size, align 8, !dbg !3806
  %mul = mul nsw i32 %11, 8, !dbg !3807
  %call = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %9, i32 %mul), !dbg !3808
  call void @qdm2_decode_sub_packet_header(%struct.GetBitContext* %gb, %struct.QDM2SubPacket* %header), !dbg !3809
  %type = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %header, i32 0, i32 0, !dbg !3810
  %12 = load i32, i32* %type, align 8, !dbg !3810
  %cmp = icmp slt i32 %12, 2, !dbg !3812
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3813

lor.lhs.false:                                    ; preds = %entry
  %type3 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %header, i32 0, i32 0, !dbg !3814
  %13 = load i32, i32* %type3, align 8, !dbg !3814
  %cmp4 = icmp sge i32 %13, 8, !dbg !3816
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3817

if.then:                                          ; preds = %lor.lhs.false, %entry
  %14 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3818
  %has_errors = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %14, i32 0, i32 47, !dbg !3820
  store i32 1, i32* %has_errors, align 4, !dbg !3821
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i32 0, i32 0)), !dbg !3822
  br label %if.end255, !dbg !3823

if.end:                                           ; preds = %lor.lhs.false
  %type5 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %header, i32 0, i32 0, !dbg !3824
  %15 = load i32, i32* %type5, align 8, !dbg !3824
  %cmp6 = icmp eq i32 %15, 2, !dbg !3825
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !3826

lor.rhs:                                          ; preds = %if.end
  %type7 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %header, i32 0, i32 0, !dbg !3827
  %16 = load i32, i32* %type7, align 8, !dbg !3827
  %cmp8 = icmp eq i32 %16, 3, !dbg !3829
  br label %lor.end, !dbg !3830

lor.end:                                          ; preds = %lor.rhs, %if.end
  %17 = phi i1 [ true, %if.end ], [ %cmp8, %lor.rhs ]
  %lor.ext = zext i1 %17 to i32, !dbg !3831
  %18 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3833
  %superblocktype_2_3 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %18, i32 0, i32 48, !dbg !3834
  store i32 %lor.ext, i32* %superblocktype_2_3, align 8, !dbg !3835
  %19 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3836
  %compressed_size9 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %19, i32 0, i32 30, !dbg !3837
  %20 = load i32, i32* %compressed_size9, align 8, !dbg !3837
  %call10 = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !3838
  %div = sdiv i32 %call10, 8, !dbg !3839
  %sub = sub nsw i32 %20, %div, !dbg !3840
  store i32 %sub, i32* %packet_bytes, align 4, !dbg !3841
  %data = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %header, i32 0, i32 2, !dbg !3842
  %21 = load i8*, i8** %data, align 8, !dbg !3842
  %size = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %header, i32 0, i32 1, !dbg !3843
  %22 = load i32, i32* %size, align 4, !dbg !3843
  %mul11 = mul i32 %22, 8, !dbg !3844
  %call12 = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %21, i32 %mul11), !dbg !3845
  %type13 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %header, i32 0, i32 0, !dbg !3846
  %23 = load i32, i32* %type13, align 8, !dbg !3846
  %cmp14 = icmp eq i32 %23, 2, !dbg !3848
  br i1 %cmp14, label %if.then21, label %lor.lhs.false15, !dbg !3849

lor.lhs.false15:                                  ; preds = %lor.end
  %type16 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %header, i32 0, i32 0, !dbg !3850
  %24 = load i32, i32* %type16, align 8, !dbg !3850
  %cmp17 = icmp eq i32 %24, 4, !dbg !3852
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18, !dbg !3853

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  %type19 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %header, i32 0, i32 0, !dbg !3854
  %25 = load i32, i32* %type19, align 8, !dbg !3854
  %cmp20 = icmp eq i32 %25, 5, !dbg !3856
  br i1 %cmp20, label %if.then21, label %if.end33, !dbg !3857

if.then21:                                        ; preds = %lor.lhs.false18, %lor.lhs.false15, %lor.end
  call void @llvm.dbg.declare(metadata i32* %csum, metadata !3858, metadata !1868), !dbg !3860
  %call22 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !3861
  %mul23 = mul i32 257, %call22, !dbg !3862
  store i32 %mul23, i32* %csum, align 4, !dbg !3860
  %call24 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 8), !dbg !3863
  %mul25 = mul i32 2, %call24, !dbg !3864
  %26 = load i32, i32* %csum, align 4, !dbg !3865
  %add = add i32 %26, %mul25, !dbg !3865
  store i32 %add, i32* %csum, align 4, !dbg !3865
  %27 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3866
  %compressed_data26 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %27, i32 0, i32 29, !dbg !3867
  %28 = load i8*, i8** %compressed_data26, align 32, !dbg !3867
  %29 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3868
  %checksum_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %29, i32 0, i32 4, !dbg !3869
  %30 = load i32, i32* %checksum_size, align 16, !dbg !3869
  %31 = load i32, i32* %csum, align 4, !dbg !3870
  %call27 = call zeroext i16 @qdm2_packet_checksum(i8* %28, i32 %30, i32 %31), !dbg !3871
  %conv = zext i16 %call27 to i32, !dbg !3871
  store i32 %conv, i32* %csum, align 4, !dbg !3872
  %32 = load i32, i32* %csum, align 4, !dbg !3873
  %cmp28 = icmp ne i32 %32, 0, !dbg !3875
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !3876

if.then30:                                        ; preds = %if.then21
  %33 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3877
  %has_errors31 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %33, i32 0, i32 47, !dbg !3879
  store i32 1, i32* %has_errors31, align 4, !dbg !3880
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i32 0, i32 0)), !dbg !3881
  br label %if.end255, !dbg !3882

if.end32:                                         ; preds = %if.then21
  br label %if.end33, !dbg !3883

if.end33:                                         ; preds = %if.end32, %lor.lhs.false18
  %34 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3884
  %sub_packet_list_B = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %34, i32 0, i32 14, !dbg !3885
  %arrayidx = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_B, i64 0, i64 0, !dbg !3884
  %packet34 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx, i32 0, i32 0, !dbg !3886
  store %struct.QDM2SubPacket* null, %struct.QDM2SubPacket** %packet34, align 16, !dbg !3887
  %35 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3888
  %sub_packet_list_D = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %35, i32 0, i32 17, !dbg !3889
  %arrayidx35 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_D, i64 0, i64 0, !dbg !3888
  %packet36 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx35, i32 0, i32 0, !dbg !3890
  store %struct.QDM2SubPacket* null, %struct.QDM2SubPacket** %packet36, align 8, !dbg !3891
  store i32 0, i32* %i, align 4, !dbg !3892
  br label %for.cond, !dbg !3894

for.cond:                                         ; preds = %for.inc, %if.end33
  %36 = load i32, i32* %i, align 4, !dbg !3895
  %cmp37 = icmp slt i32 %36, 6, !dbg !3898
  br i1 %cmp37, label %for.body, label %for.end, !dbg !3899

for.body:                                         ; preds = %for.cond
  %37 = load i32, i32* %i, align 4, !dbg !3900
  %idxprom = sext i32 %37 to i64, !dbg !3902
  %38 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3902
  %fft_level_exp = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %38, i32 0, i32 25, !dbg !3903
  %arrayidx39 = getelementptr inbounds [6 x i32], [6 x i32]* %fft_level_exp, i64 0, i64 %idxprom, !dbg !3902
  %39 = load i32, i32* %arrayidx39, align 4, !dbg !3904
  %dec = add nsw i32 %39, -1, !dbg !3904
  store i32 %dec, i32* %arrayidx39, align 4, !dbg !3904
  %cmp40 = icmp slt i32 %dec, 0, !dbg !3905
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !3906

if.then42:                                        ; preds = %for.body
  %40 = load i32, i32* %i, align 4, !dbg !3907
  %idxprom43 = sext i32 %40 to i64, !dbg !3908
  %41 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3908
  %fft_level_exp44 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %41, i32 0, i32 25, !dbg !3909
  %arrayidx45 = getelementptr inbounds [6 x i32], [6 x i32]* %fft_level_exp44, i64 0, i64 %idxprom43, !dbg !3908
  store i32 0, i32* %arrayidx45, align 4, !dbg !3910
  br label %if.end46, !dbg !3908

if.end46:                                         ; preds = %if.then42, %for.body
  br label %for.inc, !dbg !3911

for.inc:                                          ; preds = %if.end46
  %42 = load i32, i32* %i, align 4, !dbg !3913
  %inc = add nsw i32 %42, 1, !dbg !3913
  store i32 %inc, i32* %i, align 4, !dbg !3913
  br label %for.cond, !dbg !3915, !llvm.loop !3916

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3918
  br label %for.cond47, !dbg !3920

for.cond47:                                       ; preds = %for.inc240, %for.end
  %43 = load i32, i32* %packet_bytes, align 4, !dbg !3921
  %cmp48 = icmp sgt i32 %43, 0, !dbg !3924
  br i1 %cmp48, label %for.body50, label %for.end242, !dbg !3925

for.body50:                                       ; preds = %for.cond47
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3926, metadata !1868), !dbg !3928
  %44 = load i32, i32* %i, align 4, !dbg !3929
  %conv51 = sext i32 %44 to i64, !dbg !3929
  %cmp52 = icmp uge i64 %conv51, 16, !dbg !3931
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !3932

if.then54:                                        ; preds = %for.body50
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i32 0, i32 0)), !dbg !3933
  br label %if.end255, !dbg !3935

if.end55:                                         ; preds = %for.body50
  %45 = load i32, i32* %i, align 4, !dbg !3936
  %idxprom56 = sext i32 %45 to i64, !dbg !3937
  %46 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3937
  %sub_packet_list_A = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %46, i32 0, i32 13, !dbg !3938
  %arrayidx57 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_A, i64 0, i64 %idxprom56, !dbg !3937
  %next = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx57, i32 0, i32 1, !dbg !3939
  store %struct.QDM2SubPNode* null, %struct.QDM2SubPNode** %next, align 8, !dbg !3940
  %47 = load i32, i32* %i, align 4, !dbg !3941
  %cmp58 = icmp sgt i32 %47, 0, !dbg !3943
  br i1 %cmp58, label %if.then60, label %if.end79, !dbg !3944

if.then60:                                        ; preds = %if.end55
  %48 = load i32, i32* %i, align 4, !dbg !3945
  %idxprom61 = sext i32 %48 to i64, !dbg !3947
  %49 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3947
  %sub_packet_list_A62 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %49, i32 0, i32 13, !dbg !3948
  %arrayidx63 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_A62, i64 0, i64 %idxprom61, !dbg !3947
  %50 = load i32, i32* %i, align 4, !dbg !3949
  %sub64 = sub nsw i32 %50, 1, !dbg !3950
  %idxprom65 = sext i32 %sub64 to i64, !dbg !3951
  %51 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3951
  %sub_packet_list_A66 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %51, i32 0, i32 13, !dbg !3952
  %arrayidx67 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_A66, i64 0, i64 %idxprom65, !dbg !3951
  %next68 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx67, i32 0, i32 1, !dbg !3953
  store %struct.QDM2SubPNode* %arrayidx63, %struct.QDM2SubPNode** %next68, align 8, !dbg !3954
  %data69 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %header, i32 0, i32 2, !dbg !3955
  %52 = load i8*, i8** %data69, align 8, !dbg !3955
  %size70 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %header, i32 0, i32 1, !dbg !3956
  %53 = load i32, i32* %size70, align 4, !dbg !3956
  %mul71 = mul i32 %53, 8, !dbg !3957
  %call72 = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %52, i32 %mul71), !dbg !3958
  %54 = load i32, i32* %next_index, align 4, !dbg !3959
  %mul73 = mul i32 %54, 8, !dbg !3960
  call void @skip_bits(%struct.GetBitContext* %gb, i32 %mul73), !dbg !3961
  %55 = load i32, i32* %next_index, align 4, !dbg !3962
  %size74 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %header, i32 0, i32 1, !dbg !3964
  %56 = load i32, i32* %size74, align 4, !dbg !3964
  %cmp75 = icmp uge i32 %55, %56, !dbg !3965
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !3966

if.then77:                                        ; preds = %if.then60
  br label %for.end242, !dbg !3967

if.end78:                                         ; preds = %if.then60
  br label %if.end79, !dbg !3968

if.end79:                                         ; preds = %if.end78, %if.end55
  %57 = load i32, i32* %i, align 4, !dbg !3969
  %idxprom80 = sext i32 %57 to i64, !dbg !3970
  %58 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !3970
  %sub_packets = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %58, i32 0, i32 12, !dbg !3971
  %arrayidx81 = getelementptr inbounds [16 x %struct.QDM2SubPacket], [16 x %struct.QDM2SubPacket]* %sub_packets, i64 0, i64 %idxprom80, !dbg !3970
  store %struct.QDM2SubPacket* %arrayidx81, %struct.QDM2SubPacket** %packet, align 8, !dbg !3972
  %59 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !3973
  call void @qdm2_decode_sub_packet_header(%struct.GetBitContext* %gb, %struct.QDM2SubPacket* %59), !dbg !3974
  %60 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !3975
  %size82 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %60, i32 0, i32 1, !dbg !3976
  %61 = load i32, i32* %size82, align 4, !dbg !3976
  %call83 = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !3977
  %div84 = sdiv i32 %call83, 8, !dbg !3978
  %add85 = add i32 %61, %div84, !dbg !3979
  store i32 %add85, i32* %next_index, align 4, !dbg !3980
  %62 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !3981
  %size86 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %62, i32 0, i32 1, !dbg !3982
  %63 = load i32, i32* %size86, align 4, !dbg !3982
  %cmp87 = icmp ugt i32 %63, 255, !dbg !3983
  %cond = select i1 %cmp87, i32 1, i32 0, !dbg !3984
  %64 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !3985
  %size89 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %64, i32 0, i32 1, !dbg !3986
  %65 = load i32, i32* %size89, align 4, !dbg !3986
  %add90 = add i32 %cond, %65, !dbg !3987
  %add91 = add i32 %add90, 2, !dbg !3988
  store i32 %add91, i32* %sub_packet_size, align 4, !dbg !3989
  %66 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !3990
  %type92 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %66, i32 0, i32 0, !dbg !3992
  %67 = load i32, i32* %type92, align 8, !dbg !3992
  %cmp93 = icmp eq i32 %67, 0, !dbg !3993
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !3994

if.then95:                                        ; preds = %if.end79
  br label %for.end242, !dbg !3995

if.end96:                                         ; preds = %if.end79
  %68 = load i32, i32* %sub_packet_size, align 4, !dbg !3996
  %69 = load i32, i32* %packet_bytes, align 4, !dbg !3998
  %cmp97 = icmp sgt i32 %68, %69, !dbg !3999
  br i1 %cmp97, label %if.then99, label %if.end115, !dbg !4000

if.then99:                                        ; preds = %if.end96
  %70 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4001
  %type100 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %70, i32 0, i32 0, !dbg !4004
  %71 = load i32, i32* %type100, align 8, !dbg !4004
  %cmp101 = icmp ne i32 %71, 10, !dbg !4005
  br i1 %cmp101, label %land.lhs.true, label %if.end111, !dbg !4006

land.lhs.true:                                    ; preds = %if.then99
  %72 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4007
  %type103 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %72, i32 0, i32 0, !dbg !4009
  %73 = load i32, i32* %type103, align 8, !dbg !4009
  %cmp104 = icmp ne i32 %73, 11, !dbg !4010
  br i1 %cmp104, label %land.lhs.true106, label %if.end111, !dbg !4011

land.lhs.true106:                                 ; preds = %land.lhs.true
  %74 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4012
  %type107 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %74, i32 0, i32 0, !dbg !4014
  %75 = load i32, i32* %type107, align 8, !dbg !4014
  %cmp108 = icmp ne i32 %75, 12, !dbg !4015
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !4016

if.then110:                                       ; preds = %land.lhs.true106
  br label %for.end242, !dbg !4017

if.end111:                                        ; preds = %land.lhs.true106, %land.lhs.true, %if.then99
  %76 = load i32, i32* %packet_bytes, align 4, !dbg !4018
  %77 = load i32, i32* %sub_packet_size, align 4, !dbg !4019
  %sub112 = sub nsw i32 %76, %77, !dbg !4020
  %78 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4021
  %size113 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %78, i32 0, i32 1, !dbg !4022
  %79 = load i32, i32* %size113, align 4, !dbg !4023
  %add114 = add i32 %79, %sub112, !dbg !4023
  store i32 %add114, i32* %size113, align 4, !dbg !4023
  br label %if.end115, !dbg !4024

if.end115:                                        ; preds = %if.end111, %if.end96
  %80 = load i32, i32* %sub_packet_size, align 4, !dbg !4025
  %81 = load i32, i32* %packet_bytes, align 4, !dbg !4026
  %sub116 = sub nsw i32 %81, %80, !dbg !4026
  store i32 %sub116, i32* %packet_bytes, align 4, !dbg !4026
  %82 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4027
  %83 = load i32, i32* %i, align 4, !dbg !4028
  %idxprom117 = sext i32 %83 to i64, !dbg !4029
  %84 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4029
  %sub_packet_list_A118 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %84, i32 0, i32 13, !dbg !4030
  %arrayidx119 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_A118, i64 0, i64 %idxprom117, !dbg !4029
  %packet120 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx119, i32 0, i32 0, !dbg !4031
  store %struct.QDM2SubPacket* %82, %struct.QDM2SubPacket** %packet120, align 16, !dbg !4032
  %85 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4033
  %type121 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %85, i32 0, i32 0, !dbg !4035
  %86 = load i32, i32* %type121, align 8, !dbg !4035
  %cmp122 = icmp eq i32 %86, 8, !dbg !4036
  br i1 %cmp122, label %if.then124, label %if.else, !dbg !4037

if.then124:                                       ; preds = %if.end115
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i32 0, i32 0)), !dbg !4038
  br label %if.end255, !dbg !4040

if.else:                                          ; preds = %if.end115
  %87 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4041
  %type125 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %87, i32 0, i32 0, !dbg !4043
  %88 = load i32, i32* %type125, align 8, !dbg !4043
  %cmp126 = icmp sge i32 %88, 9, !dbg !4044
  br i1 %cmp126, label %land.lhs.true128, label %if.else154, !dbg !4045

land.lhs.true128:                                 ; preds = %if.else
  %89 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4046
  %type129 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %89, i32 0, i32 0, !dbg !4048
  %90 = load i32, i32* %type129, align 8, !dbg !4048
  %cmp130 = icmp sle i32 %90, 12, !dbg !4049
  br i1 %cmp130, label %if.then132, label %if.else154, !dbg !4050

if.then132:                                       ; preds = %land.lhs.true128
  br label %do.body, !dbg !4051, !llvm.loop !4053

do.body:                                          ; preds = %if.then132
  %91 = load i32, i32* %sub_packets_D, align 4, !dbg !4054
  %cmp133 = icmp sgt i32 %91, 0, !dbg !4058
  br i1 %cmp133, label %if.then135, label %if.end144, !dbg !4054

if.then135:                                       ; preds = %do.body
  %92 = load i32, i32* %sub_packets_D, align 4, !dbg !4059
  %idxprom136 = sext i32 %92 to i64, !dbg !4062
  %93 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4062
  %sub_packet_list_D137 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %93, i32 0, i32 17, !dbg !4063
  %arrayidx138 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_D137, i64 0, i64 %idxprom136, !dbg !4062
  %94 = load i32, i32* %sub_packets_D, align 4, !dbg !4064
  %sub139 = sub nsw i32 %94, 1, !dbg !4065
  %idxprom140 = sext i32 %sub139 to i64, !dbg !4066
  %95 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4066
  %sub_packet_list_D141 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %95, i32 0, i32 17, !dbg !4067
  %arrayidx142 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_D141, i64 0, i64 %idxprom140, !dbg !4066
  %next143 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx142, i32 0, i32 1, !dbg !4068
  store %struct.QDM2SubPNode* %arrayidx138, %struct.QDM2SubPNode** %next143, align 8, !dbg !4069
  br label %if.end144, !dbg !4070

if.end144:                                        ; preds = %if.then135, %do.body
  %96 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4071
  %97 = load i32, i32* %sub_packets_D, align 4, !dbg !4073
  %idxprom145 = sext i32 %97 to i64, !dbg !4074
  %98 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4074
  %sub_packet_list_D146 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %98, i32 0, i32 17, !dbg !4075
  %arrayidx147 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_D146, i64 0, i64 %idxprom145, !dbg !4074
  %packet148 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx147, i32 0, i32 0, !dbg !4076
  store %struct.QDM2SubPacket* %96, %struct.QDM2SubPacket** %packet148, align 8, !dbg !4077
  %99 = load i32, i32* %sub_packets_D, align 4, !dbg !4078
  %idxprom149 = sext i32 %99 to i64, !dbg !4079
  %100 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4079
  %sub_packet_list_D150 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %100, i32 0, i32 17, !dbg !4080
  %arrayidx151 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_D150, i64 0, i64 %idxprom149, !dbg !4079
  %next152 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx151, i32 0, i32 1, !dbg !4081
  store %struct.QDM2SubPNode* null, %struct.QDM2SubPNode** %next152, align 8, !dbg !4082
  %101 = load i32, i32* %sub_packets_D, align 4, !dbg !4083
  %inc153 = add nsw i32 %101, 1, !dbg !4083
  store i32 %inc153, i32* %sub_packets_D, align 4, !dbg !4083
  br label %do.end, !dbg !4084

do.end:                                           ; preds = %if.end144
  br label %if.end238, !dbg !4085

if.else154:                                       ; preds = %land.lhs.true128, %if.else
  %102 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4086
  %type155 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %102, i32 0, i32 0, !dbg !4089
  %103 = load i32, i32* %type155, align 8, !dbg !4089
  %cmp156 = icmp eq i32 %103, 13, !dbg !4090
  br i1 %cmp156, label %if.then158, label %if.else170, !dbg !4086

if.then158:                                       ; preds = %if.else154
  store i32 0, i32* %j, align 4, !dbg !4091
  br label %for.cond159, !dbg !4094

for.cond159:                                      ; preds = %for.inc167, %if.then158
  %104 = load i32, i32* %j, align 4, !dbg !4095
  %cmp160 = icmp slt i32 %104, 6, !dbg !4098
  br i1 %cmp160, label %for.body162, label %for.end169, !dbg !4099

for.body162:                                      ; preds = %for.cond159
  %call163 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 6), !dbg !4100
  %105 = load i32, i32* %j, align 4, !dbg !4101
  %idxprom164 = sext i32 %105 to i64, !dbg !4102
  %106 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4102
  %fft_level_exp165 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %106, i32 0, i32 25, !dbg !4103
  %arrayidx166 = getelementptr inbounds [6 x i32], [6 x i32]* %fft_level_exp165, i64 0, i64 %idxprom164, !dbg !4102
  store i32 %call163, i32* %arrayidx166, align 4, !dbg !4104
  br label %for.inc167, !dbg !4102

for.inc167:                                       ; preds = %for.body162
  %107 = load i32, i32* %j, align 4, !dbg !4105
  %inc168 = add nsw i32 %107, 1, !dbg !4105
  store i32 %inc168, i32* %j, align 4, !dbg !4105
  br label %for.cond159, !dbg !4107, !llvm.loop !4108

for.end169:                                       ; preds = %for.cond159
  br label %if.end237, !dbg !4110

if.else170:                                       ; preds = %if.else154
  %108 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4111
  %type171 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %108, i32 0, i32 0, !dbg !4114
  %109 = load i32, i32* %type171, align 8, !dbg !4114
  %cmp172 = icmp eq i32 %109, 14, !dbg !4115
  br i1 %cmp172, label %if.then174, label %if.else186, !dbg !4111

if.then174:                                       ; preds = %if.else170
  store i32 0, i32* %j, align 4, !dbg !4116
  br label %for.cond175, !dbg !4119

for.cond175:                                      ; preds = %for.inc183, %if.then174
  %110 = load i32, i32* %j, align 4, !dbg !4120
  %cmp176 = icmp slt i32 %110, 6, !dbg !4123
  br i1 %cmp176, label %for.body178, label %for.end185, !dbg !4124

for.body178:                                      ; preds = %for.cond175
  %call179 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %gb, %struct.VLC* @fft_level_exp_vlc, i32 0, i32 2), !dbg !4125
  %111 = load i32, i32* %j, align 4, !dbg !4126
  %idxprom180 = sext i32 %111 to i64, !dbg !4127
  %112 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4127
  %fft_level_exp181 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %112, i32 0, i32 25, !dbg !4128
  %arrayidx182 = getelementptr inbounds [6 x i32], [6 x i32]* %fft_level_exp181, i64 0, i64 %idxprom180, !dbg !4127
  store i32 %call179, i32* %arrayidx182, align 4, !dbg !4129
  br label %for.inc183, !dbg !4127

for.inc183:                                       ; preds = %for.body178
  %113 = load i32, i32* %j, align 4, !dbg !4130
  %inc184 = add nsw i32 %113, 1, !dbg !4130
  store i32 %inc184, i32* %j, align 4, !dbg !4130
  br label %for.cond175, !dbg !4132, !llvm.loop !4133

for.end185:                                       ; preds = %for.cond175
  br label %if.end236, !dbg !4135

if.else186:                                       ; preds = %if.else170
  %114 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4136
  %type187 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %114, i32 0, i32 0, !dbg !4139
  %115 = load i32, i32* %type187, align 8, !dbg !4139
  %cmp188 = icmp eq i32 %115, 15, !dbg !4140
  br i1 %cmp188, label %if.then190, label %if.else191, !dbg !4136

if.then190:                                       ; preds = %if.else186
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0)), !dbg !4141
  br label %if.end255, !dbg !4143

if.else191:                                       ; preds = %if.else186
  %116 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4144
  %type192 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %116, i32 0, i32 0, !dbg !4146
  %117 = load i32, i32* %type192, align 8, !dbg !4146
  %cmp193 = icmp sge i32 %117, 16, !dbg !4147
  br i1 %cmp193, label %land.lhs.true195, label %if.end234, !dbg !4148

land.lhs.true195:                                 ; preds = %if.else191
  %118 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4149
  %type196 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %118, i32 0, i32 0, !dbg !4151
  %119 = load i32, i32* %type196, align 8, !dbg !4151
  %cmp197 = icmp slt i32 %119, 48, !dbg !4152
  br i1 %cmp197, label %land.lhs.true199, label %if.end234, !dbg !4153

land.lhs.true199:                                 ; preds = %land.lhs.true195
  %120 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4154
  %type200 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %120, i32 0, i32 0, !dbg !4155
  %121 = load i32, i32* %type200, align 8, !dbg !4155
  %sub201 = sub nsw i32 %121, 16, !dbg !4156
  %idxprom202 = sext i32 %sub201 to i64, !dbg !4157
  %arrayidx203 = getelementptr inbounds [32 x i8], [32 x i8]* @fft_subpackets, i64 0, i64 %idxprom202, !dbg !4157
  %122 = load i8, i8* %arrayidx203, align 1, !dbg !4157
  %tobool = icmp ne i8 %122, 0, !dbg !4157
  br i1 %tobool, label %if.end234, label %if.then204, !dbg !4158

if.then204:                                       ; preds = %land.lhs.true199
  br label %do.body205, !dbg !4160, !llvm.loop !4162

do.body205:                                       ; preds = %if.then204
  %123 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4163
  %sub_packets_B206 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %123, i32 0, i32 15, !dbg !4167
  %124 = load i32, i32* %sub_packets_B206, align 16, !dbg !4167
  %cmp207 = icmp sgt i32 %124, 0, !dbg !4168
  br i1 %cmp207, label %if.then209, label %if.end220, !dbg !4163

if.then209:                                       ; preds = %do.body205
  %125 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4169
  %sub_packets_B210 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %125, i32 0, i32 15, !dbg !4172
  %126 = load i32, i32* %sub_packets_B210, align 16, !dbg !4172
  %idxprom211 = sext i32 %126 to i64, !dbg !4173
  %127 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4173
  %sub_packet_list_B212 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %127, i32 0, i32 14, !dbg !4174
  %arrayidx213 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_B212, i64 0, i64 %idxprom211, !dbg !4173
  %128 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4175
  %sub_packets_B214 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %128, i32 0, i32 15, !dbg !4176
  %129 = load i32, i32* %sub_packets_B214, align 16, !dbg !4176
  %sub215 = sub nsw i32 %129, 1, !dbg !4177
  %idxprom216 = sext i32 %sub215 to i64, !dbg !4178
  %130 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4178
  %sub_packet_list_B217 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %130, i32 0, i32 14, !dbg !4179
  %arrayidx218 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_B217, i64 0, i64 %idxprom216, !dbg !4178
  %next219 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx218, i32 0, i32 1, !dbg !4180
  store %struct.QDM2SubPNode* %arrayidx213, %struct.QDM2SubPNode** %next219, align 8, !dbg !4181
  br label %if.end220, !dbg !4182

if.end220:                                        ; preds = %if.then209, %do.body205
  %131 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !4183
  %132 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4185
  %sub_packets_B221 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %132, i32 0, i32 15, !dbg !4186
  %133 = load i32, i32* %sub_packets_B221, align 16, !dbg !4186
  %idxprom222 = sext i32 %133 to i64, !dbg !4187
  %134 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4187
  %sub_packet_list_B223 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %134, i32 0, i32 14, !dbg !4188
  %arrayidx224 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_B223, i64 0, i64 %idxprom222, !dbg !4187
  %packet225 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx224, i32 0, i32 0, !dbg !4189
  store %struct.QDM2SubPacket* %131, %struct.QDM2SubPacket** %packet225, align 16, !dbg !4190
  %135 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4191
  %sub_packets_B226 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %135, i32 0, i32 15, !dbg !4192
  %136 = load i32, i32* %sub_packets_B226, align 16, !dbg !4192
  %idxprom227 = sext i32 %136 to i64, !dbg !4193
  %137 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4193
  %sub_packet_list_B228 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %137, i32 0, i32 14, !dbg !4194
  %arrayidx229 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_B228, i64 0, i64 %idxprom227, !dbg !4193
  %next230 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx229, i32 0, i32 1, !dbg !4195
  store %struct.QDM2SubPNode* null, %struct.QDM2SubPNode** %next230, align 8, !dbg !4196
  %138 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4197
  %sub_packets_B231 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %138, i32 0, i32 15, !dbg !4198
  %139 = load i32, i32* %sub_packets_B231, align 16, !dbg !4199
  %inc232 = add nsw i32 %139, 1, !dbg !4199
  store i32 %inc232, i32* %sub_packets_B231, align 16, !dbg !4199
  br label %do.end233, !dbg !4200

do.end233:                                        ; preds = %if.end220
  br label %if.end234, !dbg !4201

if.end234:                                        ; preds = %do.end233, %land.lhs.true199, %land.lhs.true195, %if.else191
  br label %if.end235

if.end235:                                        ; preds = %if.end234
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %for.end185
  br label %if.end237

if.end237:                                        ; preds = %if.end236, %for.end169
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %do.end
  br label %if.end239

if.end239:                                        ; preds = %if.end238
  br label %for.inc240, !dbg !4202

for.inc240:                                       ; preds = %if.end239
  %140 = load i32, i32* %i, align 4, !dbg !4203
  %inc241 = add nsw i32 %140, 1, !dbg !4203
  store i32 %inc241, i32* %i, align 4, !dbg !4203
  br label %for.cond47, !dbg !4205, !llvm.loop !4206

for.end242:                                       ; preds = %if.then110, %if.then95, %if.then77, %for.cond47
  %141 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4208
  %sub_packet_list_D243 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %141, i32 0, i32 17, !dbg !4210
  %arrayidx244 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_D243, i64 0, i64 0, !dbg !4208
  %packet245 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx244, i32 0, i32 0, !dbg !4211
  %142 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet245, align 8, !dbg !4211
  %tobool246 = icmp ne %struct.QDM2SubPacket* %142, null, !dbg !4208
  br i1 %tobool246, label %if.then247, label %if.else250, !dbg !4212

if.then247:                                       ; preds = %for.end242
  %143 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4213
  %144 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4215
  %sub_packet_list_D248 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %144, i32 0, i32 17, !dbg !4216
  %arraydecay249 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_D248, i32 0, i32 0, !dbg !4215
  call void @process_synthesis_subpackets(%struct.QDM2Context* %143, %struct.QDM2SubPNode* %arraydecay249), !dbg !4217
  %145 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4218
  %do_synth_filter = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %145, i32 0, i32 49, !dbg !4219
  store i32 1, i32* %do_synth_filter, align 4, !dbg !4220
  br label %if.end255, !dbg !4221

if.else250:                                       ; preds = %for.end242
  %146 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4222
  %do_synth_filter251 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %146, i32 0, i32 49, !dbg !4225
  %147 = load i32, i32* %do_synth_filter251, align 4, !dbg !4225
  %tobool252 = icmp ne i32 %147, 0, !dbg !4222
  br i1 %tobool252, label %if.then253, label %if.end254, !dbg !4222

if.then253:                                       ; preds = %if.else250
  %148 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4226
  call void @process_subpacket_10(%struct.QDM2Context* %148, %struct.QDM2SubPNode* null), !dbg !4228
  %149 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4229
  call void @process_subpacket_11(%struct.QDM2Context* %149, %struct.QDM2SubPNode* null), !dbg !4230
  %150 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4231
  call void @process_subpacket_12(%struct.QDM2Context* %150, %struct.QDM2SubPNode* null), !dbg !4232
  br label %if.end254, !dbg !4233

if.end254:                                        ; preds = %if.then253, %if.else250
  br label %if.end255

if.end255:                                        ; preds = %if.then, %if.then30, %if.then54, %if.then124, %if.then190, %if.end254, %if.then247
  ret void, !dbg !4234
}

; Function Attrs: nounwind uwtable
define internal void @qdm2_decode_fft_packets(%struct.QDM2Context* %q) #1 !dbg !4235 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %min = alloca i32, align 4
  %max = alloca i32, align 4
  %value = alloca i32, align 4
  %type = alloca i32, align 4
  %unknown_flag = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  %packet5 = alloca %struct.QDM2SubPacket*, align 8
  %duration = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !4236, metadata !1868), !dbg !4237
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4238, metadata !1868), !dbg !4239
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4240, metadata !1868), !dbg !4241
  call void @llvm.dbg.declare(metadata i32* %min, metadata !4242, metadata !1868), !dbg !4243
  call void @llvm.dbg.declare(metadata i32* %max, metadata !4244, metadata !1868), !dbg !4245
  call void @llvm.dbg.declare(metadata i32* %value, metadata !4246, metadata !1868), !dbg !4247
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4248, metadata !1868), !dbg !4249
  call void @llvm.dbg.declare(metadata i32* %unknown_flag, metadata !4250, metadata !1868), !dbg !4251
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !4252, metadata !1868), !dbg !4253
  %0 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4254
  %sub_packet_list_B = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %0, i32 0, i32 14, !dbg !4256
  %arrayidx = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_B, i64 0, i64 0, !dbg !4254
  %packet = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx, i32 0, i32 0, !dbg !4257
  %1 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 16, !dbg !4257
  %tobool = icmp ne %struct.QDM2SubPacket* %1, null, !dbg !4254
  br i1 %tobool, label %if.end, label %if.then, !dbg !4258

if.then:                                          ; preds = %entry
  br label %if.end146, !dbg !4259

if.end:                                           ; preds = %entry
  %2 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4260
  %fft_coefs_index = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %2, i32 0, i32 22, !dbg !4261
  store i32 0, i32* %fft_coefs_index, align 16, !dbg !4262
  store i32 0, i32* %i, align 4, !dbg !4263
  br label %for.cond, !dbg !4265

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !4266
  %cmp = icmp slt i32 %3, 5, !dbg !4269
  br i1 %cmp, label %for.body, label %for.end, !dbg !4270

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !4271
  %idxprom = sext i32 %4 to i64, !dbg !4272
  %5 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4272
  %fft_coefs_min_index = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %5, i32 0, i32 23, !dbg !4273
  %arrayidx1 = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_min_index, i64 0, i64 %idxprom, !dbg !4272
  store i32 -1, i32* %arrayidx1, align 4, !dbg !4274
  br label %for.inc, !dbg !4272

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !4275
  %inc = add nsw i32 %6, 1, !dbg !4275
  store i32 %inc, i32* %i, align 4, !dbg !4275
  br label %for.cond, !dbg !4277, !llvm.loop !4278

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4280
  store i32 256, i32* %max, align 4, !dbg !4282
  br label %for.cond2, !dbg !4283

for.cond2:                                        ; preds = %for.inc113, %for.end
  %7 = load i32, i32* %i, align 4, !dbg !4284
  %8 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4287
  %sub_packets_B = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %8, i32 0, i32 15, !dbg !4288
  %9 = load i32, i32* %sub_packets_B, align 16, !dbg !4288
  %cmp3 = icmp slt i32 %7, %9, !dbg !4289
  br i1 %cmp3, label %for.body4, label %for.end115, !dbg !4290

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata %struct.QDM2SubPacket** %packet5, metadata !4291, metadata !1868), !dbg !4293
  store %struct.QDM2SubPacket* null, %struct.QDM2SubPacket** %packet5, align 8, !dbg !4293
  store i32 0, i32* %j, align 4, !dbg !4294
  store i32 0, i32* %min, align 4, !dbg !4296
  br label %for.cond6, !dbg !4297

for.cond6:                                        ; preds = %for.inc23, %for.body4
  %10 = load i32, i32* %j, align 4, !dbg !4298
  %11 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4301
  %sub_packets_B7 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %11, i32 0, i32 15, !dbg !4302
  %12 = load i32, i32* %sub_packets_B7, align 16, !dbg !4302
  %cmp8 = icmp slt i32 %10, %12, !dbg !4303
  br i1 %cmp8, label %for.body9, label %for.end25, !dbg !4304

for.body9:                                        ; preds = %for.cond6
  %13 = load i32, i32* %j, align 4, !dbg !4305
  %idxprom10 = sext i32 %13 to i64, !dbg !4307
  %14 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4307
  %sub_packet_list_B11 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %14, i32 0, i32 14, !dbg !4308
  %arrayidx12 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_B11, i64 0, i64 %idxprom10, !dbg !4307
  %packet13 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx12, i32 0, i32 0, !dbg !4309
  %15 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet13, align 16, !dbg !4309
  %type14 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %15, i32 0, i32 0, !dbg !4310
  %16 = load i32, i32* %type14, align 8, !dbg !4310
  store i32 %16, i32* %value, align 4, !dbg !4311
  %17 = load i32, i32* %value, align 4, !dbg !4312
  %18 = load i32, i32* %min, align 4, !dbg !4314
  %cmp15 = icmp sgt i32 %17, %18, !dbg !4315
  br i1 %cmp15, label %land.lhs.true, label %if.end22, !dbg !4316

land.lhs.true:                                    ; preds = %for.body9
  %19 = load i32, i32* %value, align 4, !dbg !4317
  %20 = load i32, i32* %max, align 4, !dbg !4319
  %cmp16 = icmp slt i32 %19, %20, !dbg !4320
  br i1 %cmp16, label %if.then17, label %if.end22, !dbg !4321

if.then17:                                        ; preds = %land.lhs.true
  %21 = load i32, i32* %value, align 4, !dbg !4322
  store i32 %21, i32* %min, align 4, !dbg !4324
  %22 = load i32, i32* %j, align 4, !dbg !4325
  %idxprom18 = sext i32 %22 to i64, !dbg !4326
  %23 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4326
  %sub_packet_list_B19 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %23, i32 0, i32 14, !dbg !4327
  %arrayidx20 = getelementptr inbounds [16 x %struct.QDM2SubPNode], [16 x %struct.QDM2SubPNode]* %sub_packet_list_B19, i64 0, i64 %idxprom18, !dbg !4326
  %packet21 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %arrayidx20, i32 0, i32 0, !dbg !4328
  %24 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet21, align 16, !dbg !4328
  store %struct.QDM2SubPacket* %24, %struct.QDM2SubPacket** %packet5, align 8, !dbg !4329
  br label %if.end22, !dbg !4330

if.end22:                                         ; preds = %if.then17, %land.lhs.true, %for.body9
  br label %for.inc23, !dbg !4331

for.inc23:                                        ; preds = %if.end22
  %25 = load i32, i32* %j, align 4, !dbg !4332
  %inc24 = add nsw i32 %25, 1, !dbg !4332
  store i32 %inc24, i32* %j, align 4, !dbg !4332
  br label %for.cond6, !dbg !4334, !llvm.loop !4335

for.end25:                                        ; preds = %for.cond6
  %26 = load i32, i32* %min, align 4, !dbg !4337
  store i32 %26, i32* %max, align 4, !dbg !4338
  %27 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet5, align 8, !dbg !4339
  %tobool26 = icmp ne %struct.QDM2SubPacket* %27, null, !dbg !4339
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !4341

if.then27:                                        ; preds = %for.end25
  br label %if.end146, !dbg !4342

if.end28:                                         ; preds = %for.end25
  %28 = load i32, i32* %i, align 4, !dbg !4343
  %cmp29 = icmp eq i32 %28, 0, !dbg !4345
  br i1 %cmp29, label %land.lhs.true30, label %if.end41, !dbg !4346

land.lhs.true30:                                  ; preds = %if.end28
  %29 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet5, align 8, !dbg !4347
  %type31 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %29, i32 0, i32 0, !dbg !4348
  %30 = load i32, i32* %type31, align 8, !dbg !4348
  %cmp32 = icmp slt i32 %30, 16, !dbg !4349
  br i1 %cmp32, label %if.then40, label %lor.lhs.false, !dbg !4350

lor.lhs.false:                                    ; preds = %land.lhs.true30
  %31 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet5, align 8, !dbg !4351
  %type33 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %31, i32 0, i32 0, !dbg !4353
  %32 = load i32, i32* %type33, align 8, !dbg !4353
  %cmp34 = icmp sge i32 %32, 48, !dbg !4354
  br i1 %cmp34, label %if.then40, label %lor.lhs.false35, !dbg !4355

lor.lhs.false35:                                  ; preds = %lor.lhs.false
  %33 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet5, align 8, !dbg !4356
  %type36 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %33, i32 0, i32 0, !dbg !4357
  %34 = load i32, i32* %type36, align 8, !dbg !4357
  %sub = sub nsw i32 %34, 16, !dbg !4358
  %idxprom37 = sext i32 %sub to i64, !dbg !4359
  %arrayidx38 = getelementptr inbounds [32 x i8], [32 x i8]* @fft_subpackets, i64 0, i64 %idxprom37, !dbg !4359
  %35 = load i8, i8* %arrayidx38, align 1, !dbg !4359
  %conv = zext i8 %35 to i32, !dbg !4359
  %tobool39 = icmp ne i32 %conv, 0, !dbg !4359
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !4360

if.then40:                                        ; preds = %lor.lhs.false35, %lor.lhs.false, %land.lhs.true30
  br label %if.end146, !dbg !4362

if.end41:                                         ; preds = %lor.lhs.false35, %if.end28
  %36 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet5, align 8, !dbg !4363
  %data = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %36, i32 0, i32 2, !dbg !4364
  %37 = load i8*, i8** %data, align 8, !dbg !4364
  %38 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet5, align 8, !dbg !4365
  %size = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %38, i32 0, i32 1, !dbg !4366
  %39 = load i32, i32* %size, align 4, !dbg !4366
  %mul = mul i32 %39, 8, !dbg !4367
  %call = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %37, i32 %mul), !dbg !4368
  %40 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet5, align 8, !dbg !4369
  %type42 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %40, i32 0, i32 0, !dbg !4371
  %41 = load i32, i32* %type42, align 8, !dbg !4371
  %cmp43 = icmp sge i32 %41, 32, !dbg !4372
  br i1 %cmp43, label %land.lhs.true45, label %if.else, !dbg !4373

land.lhs.true45:                                  ; preds = %if.end41
  %42 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet5, align 8, !dbg !4374
  %type46 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %42, i32 0, i32 0, !dbg !4376
  %43 = load i32, i32* %type46, align 8, !dbg !4376
  %cmp47 = icmp slt i32 %43, 48, !dbg !4377
  br i1 %cmp47, label %land.lhs.true49, label %if.else, !dbg !4378

land.lhs.true49:                                  ; preds = %land.lhs.true45
  %44 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet5, align 8, !dbg !4379
  %type50 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %44, i32 0, i32 0, !dbg !4381
  %45 = load i32, i32* %type50, align 8, !dbg !4381
  %sub51 = sub nsw i32 %45, 16, !dbg !4382
  %idxprom52 = sext i32 %sub51 to i64, !dbg !4383
  %arrayidx53 = getelementptr inbounds [32 x i8], [32 x i8]* @fft_subpackets, i64 0, i64 %idxprom52, !dbg !4383
  %46 = load i8, i8* %arrayidx53, align 1, !dbg !4383
  %tobool54 = icmp ne i8 %46, 0, !dbg !4383
  br i1 %tobool54, label %if.else, label %if.then55, !dbg !4384

if.then55:                                        ; preds = %land.lhs.true49
  store i32 1, i32* %unknown_flag, align 4, !dbg !4385
  br label %if.end56, !dbg !4386

if.else:                                          ; preds = %land.lhs.true49, %land.lhs.true45, %if.end41
  store i32 0, i32* %unknown_flag, align 4, !dbg !4387
  br label %if.end56

if.end56:                                         ; preds = %if.else, %if.then55
  %47 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet5, align 8, !dbg !4388
  %type57 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %47, i32 0, i32 0, !dbg !4389
  %48 = load i32, i32* %type57, align 8, !dbg !4389
  store i32 %48, i32* %type, align 4, !dbg !4390
  %49 = load i32, i32* %type, align 4, !dbg !4391
  %cmp58 = icmp sge i32 %49, 17, !dbg !4393
  br i1 %cmp58, label %land.lhs.true60, label %lor.lhs.false63, !dbg !4394

land.lhs.true60:                                  ; preds = %if.end56
  %50 = load i32, i32* %type, align 4, !dbg !4395
  %cmp61 = icmp slt i32 %50, 24, !dbg !4397
  br i1 %cmp61, label %if.then69, label %lor.lhs.false63, !dbg !4398

lor.lhs.false63:                                  ; preds = %land.lhs.true60, %if.end56
  %51 = load i32, i32* %type, align 4, !dbg !4399
  %cmp64 = icmp sge i32 %51, 33, !dbg !4401
  br i1 %cmp64, label %land.lhs.true66, label %if.else78, !dbg !4402

land.lhs.true66:                                  ; preds = %lor.lhs.false63
  %52 = load i32, i32* %type, align 4, !dbg !4403
  %cmp67 = icmp slt i32 %52, 40, !dbg !4405
  br i1 %cmp67, label %if.then69, label %if.else78, !dbg !4406

if.then69:                                        ; preds = %land.lhs.true66, %land.lhs.true60
  call void @llvm.dbg.declare(metadata i32* %duration, metadata !4407, metadata !1868), !dbg !4409
  %53 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4410
  %sub_sampling = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %53, i32 0, i32 9, !dbg !4411
  %54 = load i32, i32* %sub_sampling, align 4, !dbg !4411
  %add = add nsw i32 %54, 5, !dbg !4412
  %55 = load i32, i32* %type, align 4, !dbg !4413
  %and = and i32 %55, 15, !dbg !4414
  %sub70 = sub nsw i32 %add, %and, !dbg !4415
  store i32 %sub70, i32* %duration, align 4, !dbg !4409
  %56 = load i32, i32* %duration, align 4, !dbg !4416
  %cmp71 = icmp sge i32 %56, 0, !dbg !4418
  br i1 %cmp71, label %land.lhs.true73, label %if.end77, !dbg !4419

land.lhs.true73:                                  ; preds = %if.then69
  %57 = load i32, i32* %duration, align 4, !dbg !4420
  %cmp74 = icmp slt i32 %57, 4, !dbg !4422
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !4423

if.then76:                                        ; preds = %land.lhs.true73
  %58 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4424
  %59 = load i32, i32* %duration, align 4, !dbg !4425
  %60 = load i32, i32* %unknown_flag, align 4, !dbg !4426
  call void @qdm2_fft_decode_tones(%struct.QDM2Context* %58, i32 %59, %struct.GetBitContext* %gb, i32 %60), !dbg !4427
  br label %if.end77, !dbg !4427

if.end77:                                         ; preds = %if.then76, %land.lhs.true73, %if.then69
  br label %if.end112, !dbg !4428

if.else78:                                        ; preds = %land.lhs.true66, %lor.lhs.false63
  %61 = load i32, i32* %type, align 4, !dbg !4429
  %cmp79 = icmp eq i32 %61, 31, !dbg !4432
  br i1 %cmp79, label %if.then81, label %if.else89, !dbg !4429

if.then81:                                        ; preds = %if.else78
  store i32 0, i32* %j, align 4, !dbg !4433
  br label %for.cond82, !dbg !4436

for.cond82:                                       ; preds = %for.inc86, %if.then81
  %62 = load i32, i32* %j, align 4, !dbg !4437
  %cmp83 = icmp slt i32 %62, 4, !dbg !4440
  br i1 %cmp83, label %for.body85, label %for.end88, !dbg !4441

for.body85:                                       ; preds = %for.cond82
  %63 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4442
  %64 = load i32, i32* %j, align 4, !dbg !4443
  %65 = load i32, i32* %unknown_flag, align 4, !dbg !4444
  call void @qdm2_fft_decode_tones(%struct.QDM2Context* %63, i32 %64, %struct.GetBitContext* %gb, i32 %65), !dbg !4445
  br label %for.inc86, !dbg !4445

for.inc86:                                        ; preds = %for.body85
  %66 = load i32, i32* %j, align 4, !dbg !4446
  %inc87 = add nsw i32 %66, 1, !dbg !4446
  store i32 %inc87, i32* %j, align 4, !dbg !4446
  br label %for.cond82, !dbg !4448, !llvm.loop !4449

for.end88:                                        ; preds = %for.cond82
  br label %if.end111, !dbg !4451

if.else89:                                        ; preds = %if.else78
  %67 = load i32, i32* %type, align 4, !dbg !4452
  %cmp90 = icmp eq i32 %67, 46, !dbg !4455
  br i1 %cmp90, label %if.then92, label %if.end110, !dbg !4452

if.then92:                                        ; preds = %if.else89
  store i32 0, i32* %j, align 4, !dbg !4456
  br label %for.cond93, !dbg !4459

for.cond93:                                       ; preds = %for.inc100, %if.then92
  %68 = load i32, i32* %j, align 4, !dbg !4460
  %cmp94 = icmp slt i32 %68, 6, !dbg !4463
  br i1 %cmp94, label %for.body96, label %for.end102, !dbg !4464

for.body96:                                       ; preds = %for.cond93
  %call97 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 6), !dbg !4465
  %69 = load i32, i32* %j, align 4, !dbg !4466
  %idxprom98 = sext i32 %69 to i64, !dbg !4467
  %70 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4467
  %fft_level_exp = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %70, i32 0, i32 25, !dbg !4468
  %arrayidx99 = getelementptr inbounds [6 x i32], [6 x i32]* %fft_level_exp, i64 0, i64 %idxprom98, !dbg !4467
  store i32 %call97, i32* %arrayidx99, align 4, !dbg !4469
  br label %for.inc100, !dbg !4467

for.inc100:                                       ; preds = %for.body96
  %71 = load i32, i32* %j, align 4, !dbg !4470
  %inc101 = add nsw i32 %71, 1, !dbg !4470
  store i32 %inc101, i32* %j, align 4, !dbg !4470
  br label %for.cond93, !dbg !4472, !llvm.loop !4473

for.end102:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4, !dbg !4475
  br label %for.cond103, !dbg !4477

for.cond103:                                      ; preds = %for.inc107, %for.end102
  %72 = load i32, i32* %j, align 4, !dbg !4478
  %cmp104 = icmp slt i32 %72, 4, !dbg !4481
  br i1 %cmp104, label %for.body106, label %for.end109, !dbg !4482

for.body106:                                      ; preds = %for.cond103
  %73 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4483
  %74 = load i32, i32* %j, align 4, !dbg !4484
  %75 = load i32, i32* %unknown_flag, align 4, !dbg !4485
  call void @qdm2_fft_decode_tones(%struct.QDM2Context* %73, i32 %74, %struct.GetBitContext* %gb, i32 %75), !dbg !4486
  br label %for.inc107, !dbg !4486

for.inc107:                                       ; preds = %for.body106
  %76 = load i32, i32* %j, align 4, !dbg !4487
  %inc108 = add nsw i32 %76, 1, !dbg !4487
  store i32 %inc108, i32* %j, align 4, !dbg !4487
  br label %for.cond103, !dbg !4489, !llvm.loop !4490

for.end109:                                       ; preds = %for.cond103
  br label %if.end110, !dbg !4492

if.end110:                                        ; preds = %for.end109, %if.else89
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %for.end88
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.end77
  br label %for.inc113, !dbg !4493

for.inc113:                                       ; preds = %if.end112
  %77 = load i32, i32* %i, align 4, !dbg !4494
  %inc114 = add nsw i32 %77, 1, !dbg !4494
  store i32 %inc114, i32* %i, align 4, !dbg !4494
  br label %for.cond2, !dbg !4496, !llvm.loop !4497

for.end115:                                       ; preds = %for.cond2
  store i32 0, i32* %i, align 4, !dbg !4499
  store i32 -1, i32* %j, align 4, !dbg !4501
  br label %for.cond116, !dbg !4502

for.cond116:                                      ; preds = %for.inc136, %for.end115
  %78 = load i32, i32* %i, align 4, !dbg !4503
  %cmp117 = icmp slt i32 %78, 5, !dbg !4506
  br i1 %cmp117, label %for.body119, label %for.end138, !dbg !4507

for.body119:                                      ; preds = %for.cond116
  %79 = load i32, i32* %i, align 4, !dbg !4508
  %idxprom120 = sext i32 %79 to i64, !dbg !4510
  %80 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4510
  %fft_coefs_min_index121 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %80, i32 0, i32 23, !dbg !4511
  %arrayidx122 = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_min_index121, i64 0, i64 %idxprom120, !dbg !4510
  %81 = load i32, i32* %arrayidx122, align 4, !dbg !4510
  %cmp123 = icmp sge i32 %81, 0, !dbg !4512
  br i1 %cmp123, label %if.then125, label %if.end135, !dbg !4513

if.then125:                                       ; preds = %for.body119
  %82 = load i32, i32* %j, align 4, !dbg !4514
  %cmp126 = icmp sge i32 %82, 0, !dbg !4517
  br i1 %cmp126, label %if.then128, label %if.end134, !dbg !4518

if.then128:                                       ; preds = %if.then125
  %83 = load i32, i32* %i, align 4, !dbg !4519
  %idxprom129 = sext i32 %83 to i64, !dbg !4520
  %84 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4520
  %fft_coefs_min_index130 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %84, i32 0, i32 23, !dbg !4521
  %arrayidx131 = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_min_index130, i64 0, i64 %idxprom129, !dbg !4520
  %85 = load i32, i32* %arrayidx131, align 4, !dbg !4520
  %86 = load i32, i32* %j, align 4, !dbg !4522
  %idxprom132 = sext i32 %86 to i64, !dbg !4523
  %87 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4523
  %fft_coefs_max_index = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %87, i32 0, i32 24, !dbg !4524
  %arrayidx133 = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_max_index, i64 0, i64 %idxprom132, !dbg !4523
  store i32 %85, i32* %arrayidx133, align 4, !dbg !4525
  br label %if.end134, !dbg !4523

if.end134:                                        ; preds = %if.then128, %if.then125
  %88 = load i32, i32* %i, align 4, !dbg !4526
  store i32 %88, i32* %j, align 4, !dbg !4527
  br label %if.end135, !dbg !4528

if.end135:                                        ; preds = %if.end134, %for.body119
  br label %for.inc136, !dbg !4529

for.inc136:                                       ; preds = %if.end135
  %89 = load i32, i32* %i, align 4, !dbg !4531
  %inc137 = add nsw i32 %89, 1, !dbg !4531
  store i32 %inc137, i32* %i, align 4, !dbg !4531
  br label %for.cond116, !dbg !4533, !llvm.loop !4534

for.end138:                                       ; preds = %for.cond116
  %90 = load i32, i32* %j, align 4, !dbg !4536
  %cmp139 = icmp sge i32 %90, 0, !dbg !4538
  br i1 %cmp139, label %if.then141, label %if.end146, !dbg !4539

if.then141:                                       ; preds = %for.end138
  %91 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4540
  %fft_coefs_index142 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %91, i32 0, i32 22, !dbg !4541
  %92 = load i32, i32* %fft_coefs_index142, align 16, !dbg !4541
  %93 = load i32, i32* %j, align 4, !dbg !4542
  %idxprom143 = sext i32 %93 to i64, !dbg !4543
  %94 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4543
  %fft_coefs_max_index144 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %94, i32 0, i32 24, !dbg !4544
  %arrayidx145 = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_max_index144, i64 0, i64 %idxprom143, !dbg !4543
  store i32 %92, i32* %arrayidx145, align 4, !dbg !4545
  br label %if.end146, !dbg !4543

if.end146:                                        ; preds = %if.then, %if.then27, %if.then40, %if.then141, %for.end138
  ret void, !dbg !4546
}

; Function Attrs: nounwind uwtable
define internal void @qdm2_fft_tone_synthesizer(%struct.QDM2Context* %q, i32 %sub_packet) #1 !dbg !4547 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %sub_packet.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ch = alloca i32, align 4
  %iscale = alloca double, align 8
  %level = alloca float, align 4
  %c = alloca %struct.QDM2Complex, align 4
  %offset159 = alloca i32, align 4
  %four_i = alloca i32, align 4
  %tone = alloca %struct.FFTTone, align 8
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !4550, metadata !1868), !dbg !4551
  store i32 %sub_packet, i32* %sub_packet.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sub_packet.addr, metadata !4552, metadata !1868), !dbg !4553
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4554, metadata !1868), !dbg !4555
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4556, metadata !1868), !dbg !4557
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !4558, metadata !1868), !dbg !4559
  call void @llvm.dbg.declare(metadata double* %iscale, metadata !4560, metadata !1868), !dbg !4562
  store double 0x3FE921FB54442D18, double* %iscale, align 8, !dbg !4562
  store i32 0, i32* %ch, align 4, !dbg !4563
  br label %for.cond, !dbg !4565

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !4566
  %1 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4569
  %channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %1, i32 0, i32 1, !dbg !4570
  %2 = load i32, i32* %channels, align 4, !dbg !4570
  %cmp = icmp slt i32 %0, %2, !dbg !4571
  br i1 %cmp, label %for.body, label %for.end, !dbg !4572

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %ch, align 4, !dbg !4573
  %idxprom = sext i32 %3 to i64, !dbg !4575
  %4 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4575
  %fft = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %4, i32 0, i32 28, !dbg !4576
  %complex = getelementptr inbounds %struct.QDM2FFT, %struct.QDM2FFT* %fft, i32 0, i32 0, !dbg !4577
  %arrayidx = getelementptr inbounds [2 x [256 x %struct.QDM2Complex]], [2 x [256 x %struct.QDM2Complex]]* %complex, i64 0, i64 %idxprom, !dbg !4575
  %arraydecay = getelementptr inbounds [256 x %struct.QDM2Complex], [256 x %struct.QDM2Complex]* %arrayidx, i32 0, i32 0, !dbg !4578
  %5 = bitcast %struct.QDM2Complex* %arraydecay to i8*, !dbg !4578
  %6 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4579
  %fft_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %6, i32 0, i32 3, !dbg !4580
  %7 = load i32, i32* %fft_size, align 4, !dbg !4580
  %conv = sext i32 %7 to i64, !dbg !4579
  %mul = mul i64 %conv, 8, !dbg !4581
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 %mul, i32 32, i1 false), !dbg !4578
  br label %for.inc, !dbg !4582

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %ch, align 4, !dbg !4583
  %inc = add nsw i32 %8, 1, !dbg !4583
  store i32 %inc, i32* %ch, align 4, !dbg !4583
  br label %for.cond, !dbg !4585, !llvm.loop !4586

for.end:                                          ; preds = %for.cond
  %9 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4588
  %fft_coefs_min_index = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %9, i32 0, i32 23, !dbg !4590
  %arrayidx1 = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_min_index, i64 0, i64 4, !dbg !4588
  %10 = load i32, i32* %arrayidx1, align 4, !dbg !4588
  %cmp2 = icmp sge i32 %10, 0, !dbg !4591
  br i1 %cmp2, label %if.then, label %if.end127, !dbg !4592

if.then:                                          ; preds = %for.end
  %11 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4593
  %fft_coefs_min_index4 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %11, i32 0, i32 23, !dbg !4595
  %arrayidx5 = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_min_index4, i64 0, i64 4, !dbg !4593
  %12 = load i32, i32* %arrayidx5, align 4, !dbg !4593
  store i32 %12, i32* %i, align 4, !dbg !4596
  br label %for.cond6, !dbg !4597

for.cond6:                                        ; preds = %for.inc124, %if.then
  %13 = load i32, i32* %i, align 4, !dbg !4598
  %14 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4601
  %fft_coefs_max_index = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %14, i32 0, i32 24, !dbg !4602
  %arrayidx7 = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_max_index, i64 0, i64 4, !dbg !4601
  %15 = load i32, i32* %arrayidx7, align 8, !dbg !4601
  %cmp8 = icmp slt i32 %13, %15, !dbg !4603
  br i1 %cmp8, label %for.body10, label %for.end126, !dbg !4604

for.body10:                                       ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata float* %level, metadata !4605, metadata !1868), !dbg !4607
  call void @llvm.dbg.declare(metadata %struct.QDM2Complex* %c, metadata !4608, metadata !1868), !dbg !4609
  %16 = load i32, i32* %i, align 4, !dbg !4610
  %idxprom11 = sext i32 %16 to i64, !dbg !4612
  %17 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4612
  %fft_coefs = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %17, i32 0, i32 21, !dbg !4613
  %arrayidx12 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs, i64 0, i64 %idxprom11, !dbg !4612
  %sub_packet13 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx12, i32 0, i32 0, !dbg !4614
  %18 = load i16, i16* %sub_packet13, align 2, !dbg !4614
  %conv14 = sext i16 %18 to i32, !dbg !4612
  %19 = load i32, i32* %sub_packet.addr, align 4, !dbg !4615
  %cmp15 = icmp ne i32 %conv14, %19, !dbg !4616
  br i1 %cmp15, label %if.then17, label %if.end, !dbg !4617

if.then17:                                        ; preds = %for.body10
  br label %for.end126, !dbg !4618

if.end:                                           ; preds = %for.body10
  %20 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4619
  %channels18 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %20, i32 0, i32 1, !dbg !4620
  %21 = load i32, i32* %channels18, align 4, !dbg !4620
  %cmp19 = icmp eq i32 %21, 1, !dbg !4621
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !4622

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !4623

cond.false:                                       ; preds = %if.end
  %22 = load i32, i32* %i, align 4, !dbg !4625
  %idxprom21 = sext i32 %22 to i64, !dbg !4627
  %23 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4627
  %fft_coefs22 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %23, i32 0, i32 21, !dbg !4628
  %arrayidx23 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs22, i64 0, i64 %idxprom21, !dbg !4627
  %channel = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx23, i32 0, i32 1, !dbg !4629
  %24 = load i8, i8* %channel, align 2, !dbg !4629
  %conv24 = zext i8 %24 to i32, !dbg !4627
  br label %cond.end, !dbg !4630

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv24, %cond.false ], !dbg !4631
  store i32 %cond, i32* %ch, align 4, !dbg !4633
  %25 = load i32, i32* %i, align 4, !dbg !4634
  %idxprom25 = sext i32 %25 to i64, !dbg !4635
  %26 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4635
  %fft_coefs26 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %26, i32 0, i32 21, !dbg !4636
  %arrayidx27 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs26, i64 0, i64 %idxprom25, !dbg !4635
  %exp = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx27, i32 0, i32 3, !dbg !4637
  %27 = load i16, i16* %exp, align 2, !dbg !4637
  %conv28 = sext i16 %27 to i32, !dbg !4635
  %cmp29 = icmp slt i32 %conv28, 0, !dbg !4638
  br i1 %cmp29, label %cond.true31, label %cond.false32, !dbg !4639

cond.true31:                                      ; preds = %cond.end
  br label %cond.end44, !dbg !4640

cond.false32:                                     ; preds = %cond.end
  %28 = load i32, i32* %i, align 4, !dbg !4641
  %idxprom33 = sext i32 %28 to i64, !dbg !4642
  %29 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4642
  %fft_coefs34 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %29, i32 0, i32 21, !dbg !4643
  %arrayidx35 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs34, i64 0, i64 %idxprom33, !dbg !4642
  %exp36 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx35, i32 0, i32 3, !dbg !4644
  %30 = load i16, i16* %exp36, align 2, !dbg !4644
  %conv37 = sext i16 %30 to i32, !dbg !4642
  %and = and i32 %conv37, 63, !dbg !4645
  %idxprom38 = sext i32 %and to i64, !dbg !4646
  %31 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4647
  %superblocktype_2_3 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %31, i32 0, i32 48, !dbg !4648
  %32 = load i32, i32* %superblocktype_2_3, align 8, !dbg !4648
  %tobool = icmp ne i32 %32, 0, !dbg !4647
  %cond39 = select i1 %tobool, i32 0, i32 1, !dbg !4647
  %idxprom40 = sext i32 %cond39 to i64, !dbg !4646
  %arrayidx41 = getelementptr inbounds [2 x [64 x float]], [2 x [64 x float]]* @fft_tone_level_table, i64 0, i64 %idxprom40, !dbg !4646
  %arrayidx42 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx41, i64 0, i64 %idxprom38, !dbg !4646
  %33 = load float, float* %arrayidx42, align 4, !dbg !4646
  %conv43 = fpext float %33 to double, !dbg !4646
  br label %cond.end44, !dbg !4649

cond.end44:                                       ; preds = %cond.false32, %cond.true31
  %cond45 = phi double [ 0.000000e+00, %cond.true31 ], [ %conv43, %cond.false32 ], !dbg !4650
  %conv46 = fptrunc double %cond45 to float, !dbg !4650
  store float %conv46, float* %level, align 4, !dbg !4651
  %34 = load float, float* %level, align 4, !dbg !4652
  %conv47 = fpext float %34 to double, !dbg !4652
  %35 = load i32, i32* %i, align 4, !dbg !4653
  %idxprom48 = sext i32 %35 to i64, !dbg !4654
  %36 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4654
  %fft_coefs49 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %36, i32 0, i32 21, !dbg !4655
  %arrayidx50 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs49, i64 0, i64 %idxprom48, !dbg !4654
  %phase = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx50, i32 0, i32 4, !dbg !4656
  %37 = load i8, i8* %phase, align 2, !dbg !4656
  %conv51 = zext i8 %37 to i32, !dbg !4654
  %conv52 = sitofp i32 %conv51 to double, !dbg !4654
  %mul53 = fmul double %conv52, 0x3FE921FB54442D18, !dbg !4657
  %call = call double @cos(double %mul53) #9, !dbg !4658
  %mul54 = fmul double %conv47, %call, !dbg !4659
  %conv55 = fptrunc double %mul54 to float, !dbg !4652
  %re = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 0, !dbg !4660
  store float %conv55, float* %re, align 4, !dbg !4661
  %38 = load float, float* %level, align 4, !dbg !4662
  %conv56 = fpext float %38 to double, !dbg !4662
  %39 = load i32, i32* %i, align 4, !dbg !4663
  %idxprom57 = sext i32 %39 to i64, !dbg !4664
  %40 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4664
  %fft_coefs58 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %40, i32 0, i32 21, !dbg !4665
  %arrayidx59 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs58, i64 0, i64 %idxprom57, !dbg !4664
  %phase60 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx59, i32 0, i32 4, !dbg !4666
  %41 = load i8, i8* %phase60, align 2, !dbg !4666
  %conv61 = zext i8 %41 to i32, !dbg !4664
  %conv62 = sitofp i32 %conv61 to double, !dbg !4664
  %mul63 = fmul double %conv62, 0x3FE921FB54442D18, !dbg !4667
  %call64 = call double @sin(double %mul63) #9, !dbg !4668
  %mul65 = fmul double %conv56, %call64, !dbg !4669
  %conv66 = fptrunc double %mul65 to float, !dbg !4662
  %im = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 1, !dbg !4670
  store float %conv66, float* %im, align 4, !dbg !4671
  %re67 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 0, !dbg !4672
  %42 = load float, float* %re67, align 4, !dbg !4672
  %43 = load i32, i32* %i, align 4, !dbg !4673
  %idxprom68 = sext i32 %43 to i64, !dbg !4674
  %44 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4674
  %fft_coefs69 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %44, i32 0, i32 21, !dbg !4675
  %arrayidx70 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs69, i64 0, i64 %idxprom68, !dbg !4674
  %offset = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx70, i32 0, i32 2, !dbg !4676
  %45 = load i16, i16* %offset, align 2, !dbg !4676
  %conv71 = sext i16 %45 to i32, !dbg !4674
  %add = add nsw i32 %conv71, 0, !dbg !4677
  %idxprom72 = sext i32 %add to i64, !dbg !4678
  %46 = load i32, i32* %ch, align 4, !dbg !4679
  %idxprom73 = sext i32 %46 to i64, !dbg !4678
  %47 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4678
  %fft74 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %47, i32 0, i32 28, !dbg !4680
  %complex75 = getelementptr inbounds %struct.QDM2FFT, %struct.QDM2FFT* %fft74, i32 0, i32 0, !dbg !4681
  %arrayidx76 = getelementptr inbounds [2 x [256 x %struct.QDM2Complex]], [2 x [256 x %struct.QDM2Complex]]* %complex75, i64 0, i64 %idxprom73, !dbg !4678
  %arrayidx77 = getelementptr inbounds [256 x %struct.QDM2Complex], [256 x %struct.QDM2Complex]* %arrayidx76, i64 0, i64 %idxprom72, !dbg !4678
  %re78 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx77, i32 0, i32 0, !dbg !4682
  %48 = load float, float* %re78, align 8, !dbg !4683
  %add79 = fadd float %48, %42, !dbg !4683
  store float %add79, float* %re78, align 8, !dbg !4683
  %im80 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 1, !dbg !4684
  %49 = load float, float* %im80, align 4, !dbg !4684
  %50 = load i32, i32* %i, align 4, !dbg !4685
  %idxprom81 = sext i32 %50 to i64, !dbg !4686
  %51 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4686
  %fft_coefs82 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %51, i32 0, i32 21, !dbg !4687
  %arrayidx83 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs82, i64 0, i64 %idxprom81, !dbg !4686
  %offset84 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx83, i32 0, i32 2, !dbg !4688
  %52 = load i16, i16* %offset84, align 2, !dbg !4688
  %conv85 = sext i16 %52 to i32, !dbg !4686
  %add86 = add nsw i32 %conv85, 0, !dbg !4689
  %idxprom87 = sext i32 %add86 to i64, !dbg !4690
  %53 = load i32, i32* %ch, align 4, !dbg !4691
  %idxprom88 = sext i32 %53 to i64, !dbg !4690
  %54 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4690
  %fft89 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %54, i32 0, i32 28, !dbg !4692
  %complex90 = getelementptr inbounds %struct.QDM2FFT, %struct.QDM2FFT* %fft89, i32 0, i32 0, !dbg !4693
  %arrayidx91 = getelementptr inbounds [2 x [256 x %struct.QDM2Complex]], [2 x [256 x %struct.QDM2Complex]]* %complex90, i64 0, i64 %idxprom88, !dbg !4690
  %arrayidx92 = getelementptr inbounds [256 x %struct.QDM2Complex], [256 x %struct.QDM2Complex]* %arrayidx91, i64 0, i64 %idxprom87, !dbg !4690
  %im93 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx92, i32 0, i32 1, !dbg !4694
  %55 = load float, float* %im93, align 4, !dbg !4695
  %add94 = fadd float %55, %49, !dbg !4695
  store float %add94, float* %im93, align 4, !dbg !4695
  %re95 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 0, !dbg !4696
  %56 = load float, float* %re95, align 4, !dbg !4696
  %57 = load i32, i32* %i, align 4, !dbg !4697
  %idxprom96 = sext i32 %57 to i64, !dbg !4698
  %58 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4698
  %fft_coefs97 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %58, i32 0, i32 21, !dbg !4699
  %arrayidx98 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs97, i64 0, i64 %idxprom96, !dbg !4698
  %offset99 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx98, i32 0, i32 2, !dbg !4700
  %59 = load i16, i16* %offset99, align 2, !dbg !4700
  %conv100 = sext i16 %59 to i32, !dbg !4698
  %add101 = add nsw i32 %conv100, 1, !dbg !4701
  %idxprom102 = sext i32 %add101 to i64, !dbg !4702
  %60 = load i32, i32* %ch, align 4, !dbg !4703
  %idxprom103 = sext i32 %60 to i64, !dbg !4702
  %61 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4702
  %fft104 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %61, i32 0, i32 28, !dbg !4704
  %complex105 = getelementptr inbounds %struct.QDM2FFT, %struct.QDM2FFT* %fft104, i32 0, i32 0, !dbg !4705
  %arrayidx106 = getelementptr inbounds [2 x [256 x %struct.QDM2Complex]], [2 x [256 x %struct.QDM2Complex]]* %complex105, i64 0, i64 %idxprom103, !dbg !4702
  %arrayidx107 = getelementptr inbounds [256 x %struct.QDM2Complex], [256 x %struct.QDM2Complex]* %arrayidx106, i64 0, i64 %idxprom102, !dbg !4702
  %re108 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx107, i32 0, i32 0, !dbg !4706
  %62 = load float, float* %re108, align 8, !dbg !4707
  %sub = fsub float %62, %56, !dbg !4707
  store float %sub, float* %re108, align 8, !dbg !4707
  %im109 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 1, !dbg !4708
  %63 = load float, float* %im109, align 4, !dbg !4708
  %64 = load i32, i32* %i, align 4, !dbg !4709
  %idxprom110 = sext i32 %64 to i64, !dbg !4710
  %65 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4710
  %fft_coefs111 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %65, i32 0, i32 21, !dbg !4711
  %arrayidx112 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs111, i64 0, i64 %idxprom110, !dbg !4710
  %offset113 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx112, i32 0, i32 2, !dbg !4712
  %66 = load i16, i16* %offset113, align 2, !dbg !4712
  %conv114 = sext i16 %66 to i32, !dbg !4710
  %add115 = add nsw i32 %conv114, 1, !dbg !4713
  %idxprom116 = sext i32 %add115 to i64, !dbg !4714
  %67 = load i32, i32* %ch, align 4, !dbg !4715
  %idxprom117 = sext i32 %67 to i64, !dbg !4714
  %68 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4714
  %fft118 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %68, i32 0, i32 28, !dbg !4716
  %complex119 = getelementptr inbounds %struct.QDM2FFT, %struct.QDM2FFT* %fft118, i32 0, i32 0, !dbg !4717
  %arrayidx120 = getelementptr inbounds [2 x [256 x %struct.QDM2Complex]], [2 x [256 x %struct.QDM2Complex]]* %complex119, i64 0, i64 %idxprom117, !dbg !4714
  %arrayidx121 = getelementptr inbounds [256 x %struct.QDM2Complex], [256 x %struct.QDM2Complex]* %arrayidx120, i64 0, i64 %idxprom116, !dbg !4714
  %im122 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx121, i32 0, i32 1, !dbg !4718
  %69 = load float, float* %im122, align 4, !dbg !4719
  %sub123 = fsub float %69, %63, !dbg !4719
  store float %sub123, float* %im122, align 4, !dbg !4719
  br label %for.inc124, !dbg !4720

for.inc124:                                       ; preds = %cond.end44
  %70 = load i32, i32* %i, align 4, !dbg !4721
  %inc125 = add nsw i32 %70, 1, !dbg !4721
  store i32 %inc125, i32* %i, align 4, !dbg !4721
  br label %for.cond6, !dbg !4723, !llvm.loop !4724

for.end126:                                       ; preds = %if.then17, %for.cond6
  br label %if.end127, !dbg !4726

if.end127:                                        ; preds = %for.end126, %for.end
  %71 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4728
  %fft_tone_end = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %71, i32 0, i32 20, !dbg !4730
  %72 = load i32, i32* %fft_tone_end, align 4, !dbg !4730
  store i32 %72, i32* %i, align 4, !dbg !4731
  br label %for.cond128, !dbg !4732

for.cond128:                                      ; preds = %for.body131, %if.end127
  %73 = load i32, i32* %i, align 4, !dbg !4733
  %74 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4736
  %fft_tone_start = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %74, i32 0, i32 19, !dbg !4737
  %75 = load i32, i32* %fft_tone_start, align 8, !dbg !4737
  %cmp129 = icmp ne i32 %73, %75, !dbg !4738
  br i1 %cmp129, label %for.body131, label %for.end138, !dbg !4739

for.body131:                                      ; preds = %for.cond128
  %76 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4740
  %77 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4742
  %fft_tone_start132 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %77, i32 0, i32 19, !dbg !4743
  %78 = load i32, i32* %fft_tone_start132, align 8, !dbg !4743
  %idxprom133 = sext i32 %78 to i64, !dbg !4744
  %79 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4744
  %fft_tones = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %79, i32 0, i32 18, !dbg !4745
  %arrayidx134 = getelementptr inbounds [1000 x %struct.FFTTone], [1000 x %struct.FFTTone]* %fft_tones, i64 0, i64 %idxprom133, !dbg !4744
  call void @qdm2_fft_generate_tone(%struct.QDM2Context* %76, %struct.FFTTone* %arrayidx134), !dbg !4746
  %80 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4747
  %fft_tone_start135 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %80, i32 0, i32 19, !dbg !4748
  %81 = load i32, i32* %fft_tone_start135, align 8, !dbg !4748
  %add136 = add nsw i32 %81, 1, !dbg !4749
  %rem = srem i32 %add136, 1000, !dbg !4750
  %82 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4751
  %fft_tone_start137 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %82, i32 0, i32 19, !dbg !4752
  store i32 %rem, i32* %fft_tone_start137, align 8, !dbg !4753
  br label %for.cond128, !dbg !4754, !llvm.loop !4756

for.end138:                                       ; preds = %for.cond128
  store i32 0, i32* %i, align 4, !dbg !4758
  br label %for.cond139, !dbg !4760

for.cond139:                                      ; preds = %for.inc272, %for.end138
  %83 = load i32, i32* %i, align 4, !dbg !4761
  %cmp140 = icmp slt i32 %83, 4, !dbg !4764
  br i1 %cmp140, label %for.body142, label %for.end274, !dbg !4765

for.body142:                                      ; preds = %for.cond139
  %84 = load i32, i32* %i, align 4, !dbg !4766
  %idxprom143 = sext i32 %84 to i64, !dbg !4768
  %85 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4768
  %fft_coefs_min_index144 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %85, i32 0, i32 23, !dbg !4769
  %arrayidx145 = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_min_index144, i64 0, i64 %idxprom143, !dbg !4768
  %86 = load i32, i32* %arrayidx145, align 4, !dbg !4768
  %cmp146 = icmp sge i32 %86, 0, !dbg !4770
  br i1 %cmp146, label %if.then148, label %if.end271, !dbg !4771

if.then148:                                       ; preds = %for.body142
  %87 = load i32, i32* %i, align 4, !dbg !4772
  %idxprom149 = sext i32 %87 to i64, !dbg !4775
  %88 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4775
  %fft_coefs_min_index150 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %88, i32 0, i32 23, !dbg !4776
  %arrayidx151 = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_min_index150, i64 0, i64 %idxprom149, !dbg !4775
  %89 = load i32, i32* %arrayidx151, align 4, !dbg !4775
  store i32 %89, i32* %j, align 4, !dbg !4777
  br label %for.cond152, !dbg !4778

for.cond152:                                      ; preds = %for.inc265, %if.then148
  %90 = load i32, i32* %j, align 4, !dbg !4779
  %91 = load i32, i32* %i, align 4, !dbg !4782
  %idxprom153 = sext i32 %91 to i64, !dbg !4783
  %92 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4783
  %fft_coefs_max_index154 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %92, i32 0, i32 24, !dbg !4784
  %arrayidx155 = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_max_index154, i64 0, i64 %idxprom153, !dbg !4783
  %93 = load i32, i32* %arrayidx155, align 4, !dbg !4783
  %cmp156 = icmp slt i32 %90, %93, !dbg !4785
  br i1 %cmp156, label %for.body158, label %for.end267, !dbg !4786

for.body158:                                      ; preds = %for.cond152
  call void @llvm.dbg.declare(metadata i32* %offset159, metadata !4787, metadata !1868), !dbg !4789
  call void @llvm.dbg.declare(metadata i32* %four_i, metadata !4790, metadata !1868), !dbg !4791
  call void @llvm.dbg.declare(metadata %struct.FFTTone* %tone, metadata !4792, metadata !1868), !dbg !4793
  %94 = load i32, i32* %j, align 4, !dbg !4794
  %idxprom160 = sext i32 %94 to i64, !dbg !4796
  %95 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4796
  %fft_coefs161 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %95, i32 0, i32 21, !dbg !4797
  %arrayidx162 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs161, i64 0, i64 %idxprom160, !dbg !4796
  %sub_packet163 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx162, i32 0, i32 0, !dbg !4798
  %96 = load i16, i16* %sub_packet163, align 2, !dbg !4798
  %conv164 = sext i16 %96 to i32, !dbg !4796
  %97 = load i32, i32* %sub_packet.addr, align 4, !dbg !4799
  %cmp165 = icmp ne i32 %conv164, %97, !dbg !4800
  br i1 %cmp165, label %if.then167, label %if.end168, !dbg !4801

if.then167:                                       ; preds = %for.body158
  br label %for.end267, !dbg !4802

if.end168:                                        ; preds = %for.body158
  %98 = load i32, i32* %i, align 4, !dbg !4803
  %sub169 = sub nsw i32 4, %98, !dbg !4804
  store i32 %sub169, i32* %four_i, align 4, !dbg !4805
  %99 = load i32, i32* %j, align 4, !dbg !4806
  %idxprom170 = sext i32 %99 to i64, !dbg !4807
  %100 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4807
  %fft_coefs171 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %100, i32 0, i32 21, !dbg !4808
  %arrayidx172 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs171, i64 0, i64 %idxprom170, !dbg !4807
  %offset173 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx172, i32 0, i32 2, !dbg !4809
  %101 = load i16, i16* %offset173, align 2, !dbg !4809
  %conv174 = sext i16 %101 to i32, !dbg !4807
  %102 = load i32, i32* %four_i, align 4, !dbg !4810
  %shr = ashr i32 %conv174, %102, !dbg !4811
  store i32 %shr, i32* %offset159, align 4, !dbg !4812
  %103 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4813
  %channels175 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %103, i32 0, i32 1, !dbg !4814
  %104 = load i32, i32* %channels175, align 4, !dbg !4814
  %cmp176 = icmp eq i32 %104, 1, !dbg !4815
  br i1 %cmp176, label %cond.true178, label %cond.false179, !dbg !4816

cond.true178:                                     ; preds = %if.end168
  br label %cond.end185, !dbg !4817

cond.false179:                                    ; preds = %if.end168
  %105 = load i32, i32* %j, align 4, !dbg !4819
  %idxprom180 = sext i32 %105 to i64, !dbg !4821
  %106 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4821
  %fft_coefs181 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %106, i32 0, i32 21, !dbg !4822
  %arrayidx182 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs181, i64 0, i64 %idxprom180, !dbg !4821
  %channel183 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx182, i32 0, i32 1, !dbg !4823
  %107 = load i8, i8* %channel183, align 2, !dbg !4823
  %conv184 = zext i8 %107 to i32, !dbg !4821
  br label %cond.end185, !dbg !4824

cond.end185:                                      ; preds = %cond.false179, %cond.true178
  %cond186 = phi i32 [ 0, %cond.true178 ], [ %conv184, %cond.false179 ], !dbg !4825
  store i32 %cond186, i32* %ch, align 4, !dbg !4827
  %108 = load i32, i32* %offset159, align 4, !dbg !4828
  %109 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4830
  %frequency_range = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %109, i32 0, i32 8, !dbg !4831
  %110 = load i32, i32* %frequency_range, align 32, !dbg !4831
  %cmp187 = icmp slt i32 %108, %110, !dbg !4832
  br i1 %cmp187, label %if.then189, label %if.end264, !dbg !4833

if.then189:                                       ; preds = %cond.end185
  %111 = load i32, i32* %offset159, align 4, !dbg !4834
  %cmp190 = icmp slt i32 %111, 2, !dbg !4837
  br i1 %cmp190, label %if.then192, label %if.else, !dbg !4838

if.then192:                                       ; preds = %if.then189
  %112 = load i32, i32* %offset159, align 4, !dbg !4839
  %conv193 = trunc i32 %112 to i16, !dbg !4839
  %cutoff = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %tone, i32 0, i32 7, !dbg !4840
  store i16 %conv193, i16* %cutoff, align 2, !dbg !4841
  br label %if.end199, !dbg !4842

if.else:                                          ; preds = %if.then189
  %113 = load i32, i32* %offset159, align 4, !dbg !4843
  %cmp194 = icmp sge i32 %113, 60, !dbg !4844
  %cond196 = select i1 %cmp194, i32 3, i32 2, !dbg !4845
  %conv197 = trunc i32 %cond196 to i16, !dbg !4845
  %cutoff198 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %tone, i32 0, i32 7, !dbg !4846
  store i16 %conv197, i16* %cutoff198, align 2, !dbg !4847
  br label %if.end199

if.end199:                                        ; preds = %if.else, %if.then192
  %114 = load i32, i32* %j, align 4, !dbg !4848
  %idxprom200 = sext i32 %114 to i64, !dbg !4849
  %115 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4849
  %fft_coefs201 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %115, i32 0, i32 21, !dbg !4850
  %arrayidx202 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs201, i64 0, i64 %idxprom200, !dbg !4849
  %exp203 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx202, i32 0, i32 3, !dbg !4851
  %116 = load i16, i16* %exp203, align 2, !dbg !4851
  %conv204 = sext i16 %116 to i32, !dbg !4849
  %cmp205 = icmp slt i32 %conv204, 0, !dbg !4852
  br i1 %cmp205, label %cond.true207, label %cond.false208, !dbg !4853

cond.true207:                                     ; preds = %if.end199
  br label %cond.end223, !dbg !4854

cond.false208:                                    ; preds = %if.end199
  %117 = load i32, i32* %j, align 4, !dbg !4856
  %idxprom209 = sext i32 %117 to i64, !dbg !4858
  %118 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4858
  %fft_coefs210 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %118, i32 0, i32 21, !dbg !4859
  %arrayidx211 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs210, i64 0, i64 %idxprom209, !dbg !4858
  %exp212 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx211, i32 0, i32 3, !dbg !4860
  %119 = load i16, i16* %exp212, align 2, !dbg !4860
  %conv213 = sext i16 %119 to i32, !dbg !4858
  %and214 = and i32 %conv213, 63, !dbg !4861
  %idxprom215 = sext i32 %and214 to i64, !dbg !4862
  %120 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4863
  %superblocktype_2_3216 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %120, i32 0, i32 48, !dbg !4864
  %121 = load i32, i32* %superblocktype_2_3216, align 8, !dbg !4864
  %tobool217 = icmp ne i32 %121, 0, !dbg !4863
  %cond218 = select i1 %tobool217, i32 0, i32 1, !dbg !4863
  %idxprom219 = sext i32 %cond218 to i64, !dbg !4862
  %arrayidx220 = getelementptr inbounds [2 x [64 x float]], [2 x [64 x float]]* @fft_tone_level_table, i64 0, i64 %idxprom219, !dbg !4862
  %arrayidx221 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx220, i64 0, i64 %idxprom215, !dbg !4862
  %122 = load float, float* %arrayidx221, align 4, !dbg !4862
  %conv222 = fpext float %122 to double, !dbg !4862
  br label %cond.end223, !dbg !4865

cond.end223:                                      ; preds = %cond.false208, %cond.true207
  %cond224 = phi double [ 0.000000e+00, %cond.true207 ], [ %conv222, %cond.false208 ], !dbg !4866
  %conv225 = fptrunc double %cond224 to float, !dbg !4866
  %level226 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %tone, i32 0, i32 0, !dbg !4868
  store float %conv225, float* %level226, align 8, !dbg !4869
  %123 = load i32, i32* %offset159, align 4, !dbg !4870
  %idxprom227 = sext i32 %123 to i64, !dbg !4871
  %124 = load i32, i32* %ch, align 4, !dbg !4872
  %idxprom228 = sext i32 %124 to i64, !dbg !4871
  %125 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4871
  %fft229 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %125, i32 0, i32 28, !dbg !4873
  %complex230 = getelementptr inbounds %struct.QDM2FFT, %struct.QDM2FFT* %fft229, i32 0, i32 0, !dbg !4874
  %arrayidx231 = getelementptr inbounds [2 x [256 x %struct.QDM2Complex]], [2 x [256 x %struct.QDM2Complex]]* %complex230, i64 0, i64 %idxprom228, !dbg !4871
  %arrayidx232 = getelementptr inbounds [256 x %struct.QDM2Complex], [256 x %struct.QDM2Complex]* %arrayidx231, i64 0, i64 %idxprom227, !dbg !4871
  %complex233 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %tone, i32 0, i32 1, !dbg !4875
  store %struct.QDM2Complex* %arrayidx232, %struct.QDM2Complex** %complex233, align 8, !dbg !4876
  %126 = load i32, i32* %j, align 4, !dbg !4877
  %idxprom234 = sext i32 %126 to i64, !dbg !4878
  %127 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4878
  %fft_coefs235 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %127, i32 0, i32 21, !dbg !4879
  %arrayidx236 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs235, i64 0, i64 %idxprom234, !dbg !4878
  %offset237 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx236, i32 0, i32 2, !dbg !4880
  %128 = load i16, i16* %offset237, align 2, !dbg !4880
  %conv238 = sext i16 %128 to i32, !dbg !4878
  %129 = load i32, i32* %offset159, align 4, !dbg !4881
  %130 = load i32, i32* %four_i, align 4, !dbg !4882
  %shl = shl i32 %129, %130, !dbg !4883
  %sub239 = sub nsw i32 %conv238, %shl, !dbg !4884
  %idxprom240 = sext i32 %sub239 to i64, !dbg !4885
  %131 = load i32, i32* %i, align 4, !dbg !4886
  %idxprom241 = sext i32 %131 to i64, !dbg !4885
  %arrayidx242 = getelementptr inbounds [4 x [16 x [5 x float]]], [4 x [16 x [5 x float]]]* @fft_tone_sample_table, i64 0, i64 %idxprom241, !dbg !4885
  %arrayidx243 = getelementptr inbounds [16 x [5 x float]], [16 x [5 x float]]* %arrayidx242, i64 0, i64 %idxprom240, !dbg !4885
  %arraydecay244 = getelementptr inbounds [5 x float], [5 x float]* %arrayidx243, i32 0, i32 0, !dbg !4885
  %table = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %tone, i32 0, i32 2, !dbg !4887
  store float* %arraydecay244, float** %table, align 8, !dbg !4888
  %132 = load i32, i32* %j, align 4, !dbg !4889
  %idxprom245 = sext i32 %132 to i64, !dbg !4890
  %133 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4890
  %fft_coefs246 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %133, i32 0, i32 21, !dbg !4891
  %arrayidx247 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs246, i64 0, i64 %idxprom245, !dbg !4890
  %phase248 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx247, i32 0, i32 4, !dbg !4892
  %134 = load i8, i8* %phase248, align 2, !dbg !4892
  %conv249 = zext i8 %134 to i32, !dbg !4890
  %mul250 = mul nsw i32 64, %conv249, !dbg !4893
  %135 = load i32, i32* %offset159, align 4, !dbg !4894
  %shl251 = shl i32 %135, 8, !dbg !4895
  %sub252 = sub nsw i32 %mul250, %shl251, !dbg !4896
  %sub253 = sub nsw i32 %sub252, 128, !dbg !4897
  %phase254 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %tone, i32 0, i32 3, !dbg !4898
  store i32 %sub253, i32* %phase254, align 8, !dbg !4899
  %136 = load i32, i32* %j, align 4, !dbg !4900
  %idxprom255 = sext i32 %136 to i64, !dbg !4901
  %137 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4901
  %fft_coefs256 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %137, i32 0, i32 21, !dbg !4902
  %arrayidx257 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs256, i64 0, i64 %idxprom255, !dbg !4901
  %offset258 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx257, i32 0, i32 2, !dbg !4903
  %138 = load i16, i16* %offset258, align 2, !dbg !4903
  %conv259 = sext i16 %138 to i32, !dbg !4901
  %mul260 = mul nsw i32 2, %conv259, !dbg !4904
  %add261 = add nsw i32 %mul260, 1, !dbg !4905
  %139 = load i32, i32* %four_i, align 4, !dbg !4906
  %sub262 = sub nsw i32 7, %139, !dbg !4907
  %shl263 = shl i32 %add261, %sub262, !dbg !4908
  %phase_shift = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %tone, i32 0, i32 4, !dbg !4909
  store i32 %shl263, i32* %phase_shift, align 4, !dbg !4910
  %140 = load i32, i32* %i, align 4, !dbg !4911
  %duration = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %tone, i32 0, i32 5, !dbg !4912
  store i32 %140, i32* %duration, align 8, !dbg !4913
  %time_index = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %tone, i32 0, i32 6, !dbg !4914
  store i16 0, i16* %time_index, align 4, !dbg !4915
  %141 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4916
  call void @qdm2_fft_generate_tone(%struct.QDM2Context* %141, %struct.FFTTone* %tone), !dbg !4917
  br label %if.end264, !dbg !4918

if.end264:                                        ; preds = %cond.end223, %cond.end185
  br label %for.inc265, !dbg !4919

for.inc265:                                       ; preds = %if.end264
  %142 = load i32, i32* %j, align 4, !dbg !4920
  %inc266 = add nsw i32 %142, 1, !dbg !4920
  store i32 %inc266, i32* %j, align 4, !dbg !4920
  br label %for.cond152, !dbg !4922, !llvm.loop !4923

for.end267:                                       ; preds = %if.then167, %for.cond152
  %143 = load i32, i32* %j, align 4, !dbg !4925
  %144 = load i32, i32* %i, align 4, !dbg !4926
  %idxprom268 = sext i32 %144 to i64, !dbg !4927
  %145 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4927
  %fft_coefs_min_index269 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %145, i32 0, i32 23, !dbg !4928
  %arrayidx270 = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_min_index269, i64 0, i64 %idxprom268, !dbg !4927
  store i32 %143, i32* %arrayidx270, align 4, !dbg !4929
  br label %if.end271, !dbg !4930

if.end271:                                        ; preds = %for.end267, %for.body142
  br label %for.inc272, !dbg !4931

for.inc272:                                       ; preds = %if.end271
  %146 = load i32, i32* %i, align 4, !dbg !4933
  %inc273 = add nsw i32 %146, 1, !dbg !4933
  store i32 %inc273, i32* %i, align 4, !dbg !4933
  br label %for.cond139, !dbg !4935, !llvm.loop !4936

for.end274:                                       ; preds = %for.cond139
  ret void, !dbg !4938
}

; Function Attrs: nounwind uwtable
define internal void @qdm2_calculate_fft(%struct.QDM2Context* %q, i32 %channel, i32 %sub_packet) #1 !dbg !4939 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %channel.addr = alloca i32, align 4
  %sub_packet.addr = alloca i32, align 4
  %gain = alloca float, align 4
  %out = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !4942, metadata !1868), !dbg !4943
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !4944, metadata !1868), !dbg !4945
  store i32 %sub_packet, i32* %sub_packet.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sub_packet.addr, metadata !4946, metadata !1868), !dbg !4947
  call void @llvm.dbg.declare(metadata float* %gain, metadata !4948, metadata !1868), !dbg !4949
  %0 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4950
  %channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %0, i32 0, i32 1, !dbg !4951
  %1 = load i32, i32* %channels, align 4, !dbg !4951
  %cmp = icmp eq i32 %1, 1, !dbg !4952
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4953

land.rhs:                                         ; preds = %entry
  %2 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4954
  %nb_channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %2, i32 0, i32 0, !dbg !4956
  %3 = load i32, i32* %nb_channels, align 32, !dbg !4956
  %cmp1 = icmp eq i32 %3, 2, !dbg !4957
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ]
  %cond = select i1 %4, float 5.000000e-01, float 1.000000e+00, !dbg !4958
  store float %cond, float* %gain, align 4, !dbg !4960
  call void @llvm.dbg.declare(metadata float** %out, metadata !4961, metadata !1868), !dbg !4962
  %5 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4963
  %output_buffer = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %5, i32 0, i32 31, !dbg !4964
  %arraydecay = getelementptr inbounds [2048 x float], [2048 x float]* %output_buffer, i32 0, i32 0, !dbg !4963
  %6 = load i32, i32* %channel.addr, align 4, !dbg !4965
  %idx.ext = sext i32 %6 to i64, !dbg !4966
  %add.ptr = getelementptr inbounds float, float* %arraydecay, i64 %idx.ext, !dbg !4966
  store float* %add.ptr, float** %out, align 8, !dbg !4962
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4967, metadata !1868), !dbg !4968
  %7 = load i32, i32* %channel.addr, align 4, !dbg !4969
  %idxprom = sext i32 %7 to i64, !dbg !4970
  %8 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4970
  %fft = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %8, i32 0, i32 28, !dbg !4971
  %complex = getelementptr inbounds %struct.QDM2FFT, %struct.QDM2FFT* %fft, i32 0, i32 0, !dbg !4972
  %arrayidx = getelementptr inbounds [2 x [256 x %struct.QDM2Complex]], [2 x [256 x %struct.QDM2Complex]]* %complex, i64 0, i64 %idxprom, !dbg !4970
  %arrayidx2 = getelementptr inbounds [256 x %struct.QDM2Complex], [256 x %struct.QDM2Complex]* %arrayidx, i64 0, i64 0, !dbg !4970
  %re = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx2, i32 0, i32 0, !dbg !4973
  %9 = load float, float* %re, align 32, !dbg !4974
  %mul = fmul float %9, 2.000000e+00, !dbg !4974
  store float %mul, float* %re, align 32, !dbg !4974
  %10 = load i32, i32* %channel.addr, align 4, !dbg !4975
  %idxprom3 = sext i32 %10 to i64, !dbg !4976
  %11 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4976
  %fft4 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %11, i32 0, i32 28, !dbg !4977
  %complex5 = getelementptr inbounds %struct.QDM2FFT, %struct.QDM2FFT* %fft4, i32 0, i32 0, !dbg !4978
  %arrayidx6 = getelementptr inbounds [2 x [256 x %struct.QDM2Complex]], [2 x [256 x %struct.QDM2Complex]]* %complex5, i64 0, i64 %idxprom3, !dbg !4976
  %arrayidx7 = getelementptr inbounds [256 x %struct.QDM2Complex], [256 x %struct.QDM2Complex]* %arrayidx6, i64 0, i64 0, !dbg !4976
  %im = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx7, i32 0, i32 1, !dbg !4979
  store float 0.000000e+00, float* %im, align 4, !dbg !4980
  %12 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4981
  %rdft_ctx = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %12, i32 0, i32 26, !dbg !4982
  %rdft_calc = getelementptr inbounds %struct.RDFTContext, %struct.RDFTContext* %rdft_ctx, i32 0, i32 7, !dbg !4983
  %13 = load void (%struct.RDFTContext*, float*)*, void (%struct.RDFTContext*, float*)** %rdft_calc, align 8, !dbg !4983
  %14 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4984
  %rdft_ctx8 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %14, i32 0, i32 26, !dbg !4985
  %15 = load i32, i32* %channel.addr, align 4, !dbg !4986
  %idxprom9 = sext i32 %15 to i64, !dbg !4987
  %16 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4987
  %fft10 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %16, i32 0, i32 28, !dbg !4988
  %complex11 = getelementptr inbounds %struct.QDM2FFT, %struct.QDM2FFT* %fft10, i32 0, i32 0, !dbg !4989
  %arrayidx12 = getelementptr inbounds [2 x [256 x %struct.QDM2Complex]], [2 x [256 x %struct.QDM2Complex]]* %complex11, i64 0, i64 %idxprom9, !dbg !4987
  %arraydecay13 = getelementptr inbounds [256 x %struct.QDM2Complex], [256 x %struct.QDM2Complex]* %arrayidx12, i32 0, i32 0, !dbg !4987
  %17 = bitcast %struct.QDM2Complex* %arraydecay13 to float*, !dbg !4990
  call void %13(%struct.RDFTContext* %rdft_ctx8, float* %17), !dbg !4981
  store i32 0, i32* %i, align 4, !dbg !4991
  br label %for.cond, !dbg !4993

for.cond:                                         ; preds = %for.inc, %land.end
  %18 = load i32, i32* %i, align 4, !dbg !4994
  %19 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !4997
  %fft_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %19, i32 0, i32 3, !dbg !4998
  %20 = load i32, i32* %fft_size, align 4, !dbg !4998
  %add = add nsw i32 %20, 8, !dbg !4999
  %sub = sub nsw i32 %add, 1, !dbg !5000
  %and = and i32 %sub, -8, !dbg !5001
  %cmp14 = icmp slt i32 %18, %and, !dbg !5002
  br i1 %cmp14, label %for.body, label %for.end, !dbg !5003

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %i, align 4, !dbg !5004
  %idxprom15 = sext i32 %21 to i64, !dbg !5006
  %22 = load i32, i32* %channel.addr, align 4, !dbg !5007
  %idxprom16 = sext i32 %22 to i64, !dbg !5006
  %23 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5006
  %fft17 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %23, i32 0, i32 28, !dbg !5008
  %complex18 = getelementptr inbounds %struct.QDM2FFT, %struct.QDM2FFT* %fft17, i32 0, i32 0, !dbg !5009
  %arrayidx19 = getelementptr inbounds [2 x [256 x %struct.QDM2Complex]], [2 x [256 x %struct.QDM2Complex]]* %complex18, i64 0, i64 %idxprom16, !dbg !5006
  %arrayidx20 = getelementptr inbounds [256 x %struct.QDM2Complex], [256 x %struct.QDM2Complex]* %arrayidx19, i64 0, i64 %idxprom15, !dbg !5006
  %re21 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx20, i32 0, i32 0, !dbg !5010
  %24 = load float, float* %re21, align 8, !dbg !5010
  %25 = load float, float* %gain, align 4, !dbg !5011
  %mul22 = fmul float %24, %25, !dbg !5012
  %26 = load float*, float** %out, align 8, !dbg !5013
  %arrayidx23 = getelementptr inbounds float, float* %26, i64 0, !dbg !5013
  %27 = load float, float* %arrayidx23, align 4, !dbg !5014
  %add24 = fadd float %27, %mul22, !dbg !5014
  store float %add24, float* %arrayidx23, align 4, !dbg !5014
  %28 = load i32, i32* %i, align 4, !dbg !5015
  %idxprom25 = sext i32 %28 to i64, !dbg !5016
  %29 = load i32, i32* %channel.addr, align 4, !dbg !5017
  %idxprom26 = sext i32 %29 to i64, !dbg !5016
  %30 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5016
  %fft27 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %30, i32 0, i32 28, !dbg !5018
  %complex28 = getelementptr inbounds %struct.QDM2FFT, %struct.QDM2FFT* %fft27, i32 0, i32 0, !dbg !5019
  %arrayidx29 = getelementptr inbounds [2 x [256 x %struct.QDM2Complex]], [2 x [256 x %struct.QDM2Complex]]* %complex28, i64 0, i64 %idxprom26, !dbg !5016
  %arrayidx30 = getelementptr inbounds [256 x %struct.QDM2Complex], [256 x %struct.QDM2Complex]* %arrayidx29, i64 0, i64 %idxprom25, !dbg !5016
  %im31 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx30, i32 0, i32 1, !dbg !5020
  %31 = load float, float* %im31, align 4, !dbg !5020
  %32 = load float, float* %gain, align 4, !dbg !5021
  %mul32 = fmul float %31, %32, !dbg !5022
  %33 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5023
  %channels33 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %33, i32 0, i32 1, !dbg !5024
  %34 = load i32, i32* %channels33, align 4, !dbg !5024
  %idxprom34 = sext i32 %34 to i64, !dbg !5025
  %35 = load float*, float** %out, align 8, !dbg !5025
  %arrayidx35 = getelementptr inbounds float, float* %35, i64 %idxprom34, !dbg !5025
  %36 = load float, float* %arrayidx35, align 4, !dbg !5026
  %add36 = fadd float %36, %mul32, !dbg !5026
  store float %add36, float* %arrayidx35, align 4, !dbg !5026
  %37 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5027
  %channels37 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %37, i32 0, i32 1, !dbg !5028
  %38 = load i32, i32* %channels37, align 4, !dbg !5028
  %mul38 = mul nsw i32 2, %38, !dbg !5029
  %39 = load float*, float** %out, align 8, !dbg !5030
  %idx.ext39 = sext i32 %mul38 to i64, !dbg !5030
  %add.ptr40 = getelementptr inbounds float, float* %39, i64 %idx.ext39, !dbg !5030
  store float* %add.ptr40, float** %out, align 8, !dbg !5030
  br label %for.inc, !dbg !5031

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %i, align 4, !dbg !5032
  %inc = add nsw i32 %40, 1, !dbg !5032
  store i32 %inc, i32* %i, align 4, !dbg !5032
  br label %for.cond, !dbg !5034, !llvm.loop !5035

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5037
}

; Function Attrs: nounwind uwtable
define internal void @qdm2_synthesis_filter(%struct.QDM2Context* %q, i32 %index) #1 !dbg !5038 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %index.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %ch = alloca i32, align 4
  %sb_used = alloca i32, align 4
  %sub_sampling = alloca i32, align 4
  %dither_state = alloca i32, align 4
  %samples_ptr = alloca float*, align 8
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !5039, metadata !1868), !dbg !5040
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5041, metadata !1868), !dbg !5042
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5043, metadata !1868), !dbg !5044
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5045, metadata !1868), !dbg !5046
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5047, metadata !1868), !dbg !5048
  call void @llvm.dbg.declare(metadata i32* %sb_used, metadata !5049, metadata !1868), !dbg !5050
  call void @llvm.dbg.declare(metadata i32* %sub_sampling, metadata !5051, metadata !1868), !dbg !5052
  call void @llvm.dbg.declare(metadata i32* %dither_state, metadata !5053, metadata !1868), !dbg !5054
  store i32 0, i32* %dither_state, align 4, !dbg !5054
  %0 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5055
  %sub_sampling1 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %0, i32 0, i32 9, !dbg !5056
  %1 = load i32, i32* %sub_sampling1, align 4, !dbg !5056
  %cmp = icmp sge i32 %1, 2, !dbg !5057
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5058

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !5059

cond.false:                                       ; preds = %entry
  %2 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5061
  %sub_sampling2 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %2, i32 0, i32 9, !dbg !5063
  %3 = load i32, i32* %sub_sampling2, align 4, !dbg !5063
  %shl = shl i32 8, %3, !dbg !5064
  br label %cond.end, !dbg !5065

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 30, %cond.true ], [ %shl, %cond.false ], !dbg !5066
  store i32 %cond, i32* %sb_used, align 4, !dbg !5068
  store i32 0, i32* %ch, align 4, !dbg !5069
  br label %for.cond, !dbg !5071

for.cond:                                         ; preds = %for.inc17, %cond.end
  %4 = load i32, i32* %ch, align 4, !dbg !5072
  %5 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5075
  %channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %5, i32 0, i32 1, !dbg !5076
  %6 = load i32, i32* %channels, align 4, !dbg !5076
  %cmp3 = icmp slt i32 %4, %6, !dbg !5077
  br i1 %cmp3, label %for.body, label %for.end19, !dbg !5078

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5079
  br label %for.cond4, !dbg !5081

for.cond4:                                        ; preds = %for.inc14, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !5082
  %cmp5 = icmp slt i32 %7, 8, !dbg !5085
  br i1 %cmp5, label %for.body6, label %for.end16, !dbg !5086

for.body6:                                        ; preds = %for.cond4
  %8 = load i32, i32* %sb_used, align 4, !dbg !5087
  store i32 %8, i32* %k, align 4, !dbg !5089
  br label %for.cond7, !dbg !5090

for.cond7:                                        ; preds = %for.inc, %for.body6
  %9 = load i32, i32* %k, align 4, !dbg !5091
  %cmp8 = icmp slt i32 %9, 32, !dbg !5094
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !5095

for.body9:                                        ; preds = %for.cond7
  %10 = load i32, i32* %k, align 4, !dbg !5096
  %idxprom = sext i32 %10 to i64, !dbg !5097
  %11 = load i32, i32* %index.addr, align 4, !dbg !5098
  %mul = mul nsw i32 8, %11, !dbg !5099
  %12 = load i32, i32* %i, align 4, !dbg !5100
  %add = add nsw i32 %mul, %12, !dbg !5101
  %idxprom10 = sext i32 %add to i64, !dbg !5097
  %13 = load i32, i32* %ch, align 4, !dbg !5102
  %idxprom11 = sext i32 %13 to i64, !dbg !5097
  %14 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5097
  %sb_samples = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %14, i32 0, i32 36, !dbg !5103
  %arrayidx = getelementptr inbounds [2 x [128 x [32 x float]]], [2 x [128 x [32 x float]]]* %sb_samples, i64 0, i64 %idxprom11, !dbg !5097
  %arrayidx12 = getelementptr inbounds [128 x [32 x float]], [128 x [32 x float]]* %arrayidx, i64 0, i64 %idxprom10, !dbg !5097
  %arrayidx13 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx12, i64 0, i64 %idxprom, !dbg !5097
  store float 0.000000e+00, float* %arrayidx13, align 4, !dbg !5104
  br label %for.inc, !dbg !5097

for.inc:                                          ; preds = %for.body9
  %15 = load i32, i32* %k, align 4, !dbg !5105
  %inc = add nsw i32 %15, 1, !dbg !5105
  store i32 %inc, i32* %k, align 4, !dbg !5105
  br label %for.cond7, !dbg !5107, !llvm.loop !5108

for.end:                                          ; preds = %for.cond7
  br label %for.inc14, !dbg !5110

for.inc14:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4, !dbg !5112
  %inc15 = add nsw i32 %16, 1, !dbg !5112
  store i32 %inc15, i32* %i, align 4, !dbg !5112
  br label %for.cond4, !dbg !5114, !llvm.loop !5115

for.end16:                                        ; preds = %for.cond4
  br label %for.inc17, !dbg !5117

for.inc17:                                        ; preds = %for.end16
  %17 = load i32, i32* %ch, align 4, !dbg !5119
  %inc18 = add nsw i32 %17, 1, !dbg !5119
  store i32 %inc18, i32* %ch, align 4, !dbg !5119
  br label %for.cond, !dbg !5121, !llvm.loop !5122

for.end19:                                        ; preds = %for.cond
  store i32 0, i32* %ch, align 4, !dbg !5124
  br label %for.cond20, !dbg !5126

for.cond20:                                       ; preds = %for.inc47, %for.end19
  %18 = load i32, i32* %ch, align 4, !dbg !5127
  %19 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5130
  %nb_channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %19, i32 0, i32 0, !dbg !5131
  %20 = load i32, i32* %nb_channels, align 32, !dbg !5131
  %cmp21 = icmp slt i32 %18, %20, !dbg !5132
  br i1 %cmp21, label %for.body22, label %for.end49, !dbg !5133

for.body22:                                       ; preds = %for.cond20
  call void @llvm.dbg.declare(metadata float** %samples_ptr, metadata !5134, metadata !1868), !dbg !5136
  %21 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5137
  %samples = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %21, i32 0, i32 37, !dbg !5138
  %arraydecay = getelementptr inbounds [2304 x float], [2304 x float]* %samples, i32 0, i32 0, !dbg !5137
  %22 = load i32, i32* %ch, align 4, !dbg !5139
  %idx.ext = sext i32 %22 to i64, !dbg !5140
  %add.ptr = getelementptr inbounds float, float* %arraydecay, i64 %idx.ext, !dbg !5140
  store float* %add.ptr, float** %samples_ptr, align 8, !dbg !5136
  store i32 0, i32* %i, align 4, !dbg !5141
  br label %for.cond23, !dbg !5143

for.cond23:                                       ; preds = %for.inc44, %for.body22
  %23 = load i32, i32* %i, align 4, !dbg !5144
  %cmp24 = icmp slt i32 %23, 8, !dbg !5147
  br i1 %cmp24, label %for.body25, label %for.end46, !dbg !5148

for.body25:                                       ; preds = %for.cond23
  %24 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5149
  %mpadsp = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %24, i32 0, i32 32, !dbg !5151
  %25 = load i32, i32* %ch, align 4, !dbg !5152
  %idxprom26 = sext i32 %25 to i64, !dbg !5153
  %26 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5153
  %synth_buf = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %26, i32 0, i32 33, !dbg !5154
  %arrayidx27 = getelementptr inbounds [2 x [1024 x float]], [2 x [1024 x float]]* %synth_buf, i64 0, i64 %idxprom26, !dbg !5153
  %arraydecay28 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx27, i32 0, i32 0, !dbg !5153
  %27 = load i32, i32* %ch, align 4, !dbg !5155
  %idxprom29 = sext i32 %27 to i64, !dbg !5156
  %28 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5156
  %synth_buf_offset = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %28, i32 0, i32 34, !dbg !5157
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %synth_buf_offset, i64 0, i64 %idxprom29, !dbg !5156
  %29 = load float*, float** %samples_ptr, align 8, !dbg !5158
  %30 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5159
  %nb_channels31 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %30, i32 0, i32 0, !dbg !5160
  %31 = load i32, i32* %nb_channels31, align 32, !dbg !5160
  %conv = sext i32 %31 to i64, !dbg !5159
  %32 = load i32, i32* %index.addr, align 4, !dbg !5161
  %mul32 = mul nsw i32 8, %32, !dbg !5162
  %33 = load i32, i32* %i, align 4, !dbg !5163
  %add33 = add nsw i32 %mul32, %33, !dbg !5164
  %idxprom34 = sext i32 %add33 to i64, !dbg !5165
  %34 = load i32, i32* %ch, align 4, !dbg !5166
  %idxprom35 = sext i32 %34 to i64, !dbg !5165
  %35 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5165
  %sb_samples36 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %35, i32 0, i32 36, !dbg !5167
  %arrayidx37 = getelementptr inbounds [2 x [128 x [32 x float]]], [2 x [128 x [32 x float]]]* %sb_samples36, i64 0, i64 %idxprom35, !dbg !5165
  %arrayidx38 = getelementptr inbounds [128 x [32 x float]], [128 x [32 x float]]* %arrayidx37, i64 0, i64 %idxprom34, !dbg !5165
  %arraydecay39 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx38, i32 0, i32 0, !dbg !5165
  call void @ff_mpa_synth_filter_float(%struct.MPADSPContext* %mpadsp, float* %arraydecay28, i32* %arrayidx30, float* getelementptr inbounds ([0 x float], [0 x float]* @ff_mpa_synth_window_float, i32 0, i32 0), i32* %dither_state, float* %29, i64 %conv, float* %arraydecay39), !dbg !5168
  %36 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5169
  %nb_channels40 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %36, i32 0, i32 0, !dbg !5170
  %37 = load i32, i32* %nb_channels40, align 32, !dbg !5170
  %mul41 = mul nsw i32 32, %37, !dbg !5171
  %38 = load float*, float** %samples_ptr, align 8, !dbg !5172
  %idx.ext42 = sext i32 %mul41 to i64, !dbg !5172
  %add.ptr43 = getelementptr inbounds float, float* %38, i64 %idx.ext42, !dbg !5172
  store float* %add.ptr43, float** %samples_ptr, align 8, !dbg !5172
  br label %for.inc44, !dbg !5173

for.inc44:                                        ; preds = %for.body25
  %39 = load i32, i32* %i, align 4, !dbg !5174
  %inc45 = add nsw i32 %39, 1, !dbg !5174
  store i32 %inc45, i32* %i, align 4, !dbg !5174
  br label %for.cond23, !dbg !5176, !llvm.loop !5177

for.end46:                                        ; preds = %for.cond23
  br label %for.inc47, !dbg !5179

for.inc47:                                        ; preds = %for.end46
  %40 = load i32, i32* %ch, align 4, !dbg !5180
  %inc48 = add nsw i32 %40, 1, !dbg !5180
  store i32 %inc48, i32* %ch, align 4, !dbg !5180
  br label %for.cond20, !dbg !5182, !llvm.loop !5183

for.end49:                                        ; preds = %for.cond20
  %41 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5185
  %sub_sampling50 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %41, i32 0, i32 9, !dbg !5186
  %42 = load i32, i32* %sub_sampling50, align 4, !dbg !5186
  %shr = ashr i32 4, %42, !dbg !5187
  store i32 %shr, i32* %sub_sampling, align 4, !dbg !5188
  store i32 0, i32* %ch, align 4, !dbg !5189
  br label %for.cond51, !dbg !5191

for.cond51:                                       ; preds = %for.inc77, %for.end49
  %43 = load i32, i32* %ch, align 4, !dbg !5192
  %44 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5195
  %channels52 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %44, i32 0, i32 1, !dbg !5196
  %45 = load i32, i32* %channels52, align 4, !dbg !5196
  %cmp53 = icmp slt i32 %43, %45, !dbg !5197
  br i1 %cmp53, label %for.body55, label %for.end79, !dbg !5198

for.body55:                                       ; preds = %for.cond51
  store i32 0, i32* %i, align 4, !dbg !5199
  br label %for.cond56, !dbg !5201

for.cond56:                                       ; preds = %for.inc74, %for.body55
  %46 = load i32, i32* %i, align 4, !dbg !5202
  %47 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5205
  %frame_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %47, i32 0, i32 7, !dbg !5206
  %48 = load i32, i32* %frame_size, align 4, !dbg !5206
  %cmp57 = icmp slt i32 %46, %48, !dbg !5207
  br i1 %cmp57, label %for.body59, label %for.end76, !dbg !5208

for.body59:                                       ; preds = %for.cond56
  %49 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5209
  %nb_channels60 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %49, i32 0, i32 0, !dbg !5210
  %50 = load i32, i32* %nb_channels60, align 32, !dbg !5210
  %51 = load i32, i32* %sub_sampling, align 4, !dbg !5211
  %mul61 = mul nsw i32 %50, %51, !dbg !5212
  %52 = load i32, i32* %i, align 4, !dbg !5213
  %mul62 = mul nsw i32 %mul61, %52, !dbg !5214
  %53 = load i32, i32* %ch, align 4, !dbg !5215
  %add63 = add nsw i32 %mul62, %53, !dbg !5216
  %idxprom64 = sext i32 %add63 to i64, !dbg !5217
  %54 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5217
  %samples65 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %54, i32 0, i32 37, !dbg !5218
  %arrayidx66 = getelementptr inbounds [2304 x float], [2304 x float]* %samples65, i64 0, i64 %idxprom64, !dbg !5217
  %55 = load float, float* %arrayidx66, align 4, !dbg !5217
  %mul67 = fmul float 8.388608e+06, %55, !dbg !5219
  %56 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5220
  %channels68 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %56, i32 0, i32 1, !dbg !5221
  %57 = load i32, i32* %channels68, align 4, !dbg !5221
  %58 = load i32, i32* %i, align 4, !dbg !5222
  %mul69 = mul nsw i32 %57, %58, !dbg !5223
  %59 = load i32, i32* %ch, align 4, !dbg !5224
  %add70 = add nsw i32 %mul69, %59, !dbg !5225
  %idxprom71 = sext i32 %add70 to i64, !dbg !5226
  %60 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5226
  %output_buffer = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %60, i32 0, i32 31, !dbg !5227
  %arrayidx72 = getelementptr inbounds [2048 x float], [2048 x float]* %output_buffer, i64 0, i64 %idxprom71, !dbg !5226
  %61 = load float, float* %arrayidx72, align 4, !dbg !5228
  %add73 = fadd float %61, %mul67, !dbg !5228
  store float %add73, float* %arrayidx72, align 4, !dbg !5228
  br label %for.inc74, !dbg !5226

for.inc74:                                        ; preds = %for.body59
  %62 = load i32, i32* %i, align 4, !dbg !5229
  %inc75 = add nsw i32 %62, 1, !dbg !5229
  store i32 %inc75, i32* %i, align 4, !dbg !5229
  br label %for.cond56, !dbg !5231, !llvm.loop !5232

for.end76:                                        ; preds = %for.cond56
  br label %for.inc77, !dbg !5234

for.inc77:                                        ; preds = %for.end76
  %63 = load i32, i32* %ch, align 4, !dbg !5236
  %inc78 = add nsw i32 %63, 1, !dbg !5236
  store i32 %inc78, i32* %ch, align 4, !dbg !5236
  br label %for.cond51, !dbg !5238, !llvm.loop !5239

for.end79:                                        ; preds = %for.cond51
  ret void, !dbg !5241
}

; Function Attrs: nounwind uwtable
define internal void @average_quantized_coeffs(%struct.QDM2Context* %q) #1 !dbg !5242 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n = alloca i32, align 4
  %ch = alloca i32, align 4
  %sum = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !5243, metadata !1868), !dbg !5244
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5245, metadata !1868), !dbg !5246
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5247, metadata !1868), !dbg !5248
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5249, metadata !1868), !dbg !5250
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5251, metadata !1868), !dbg !5252
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !5253, metadata !1868), !dbg !5254
  %0 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5255
  %sub_sampling = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %0, i32 0, i32 9, !dbg !5256
  %1 = load i32, i32* %sub_sampling, align 4, !dbg !5256
  %cmp = icmp sge i32 %1, 2, !dbg !5257
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5258

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !5259

cond.false:                                       ; preds = %entry
  %2 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5261
  %sub_sampling1 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %2, i32 0, i32 9, !dbg !5263
  %3 = load i32, i32* %sub_sampling1, align 4, !dbg !5263
  %shl = shl i32 8, %3, !dbg !5264
  br label %cond.end, !dbg !5265

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 30, %cond.true ], [ %shl, %cond.false ], !dbg !5266
  %sub = sub nsw i32 %cond, 1, !dbg !5268
  %idxprom = sext i32 %sub to i64, !dbg !5269
  %4 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5270
  %coeff_per_sb_select = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %4, i32 0, i32 10, !dbg !5271
  %5 = load i32, i32* %coeff_per_sb_select, align 8, !dbg !5271
  %idxprom2 = sext i32 %5 to i64, !dbg !5269
  %arrayidx = getelementptr inbounds [3 x [30 x i8]], [3 x [30 x i8]]* @coeff_per_sb_for_avg, i64 0, i64 %idxprom2, !dbg !5269
  %arrayidx3 = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !5269
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !5269
  %conv = zext i8 %6 to i32, !dbg !5269
  %add = add nsw i32 %conv, 1, !dbg !5272
  store i32 %add, i32* %n, align 4, !dbg !5273
  store i32 0, i32* %ch, align 4, !dbg !5274
  br label %for.cond, !dbg !5276

for.cond:                                         ; preds = %for.inc42, %cond.end
  %7 = load i32, i32* %ch, align 4, !dbg !5277
  %8 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5280
  %nb_channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %8, i32 0, i32 0, !dbg !5281
  %9 = load i32, i32* %nb_channels, align 32, !dbg !5281
  %cmp4 = icmp slt i32 %7, %9, !dbg !5282
  br i1 %cmp4, label %for.body, label %for.end44, !dbg !5283

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5284
  br label %for.cond6, !dbg !5286

for.cond6:                                        ; preds = %for.inc39, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !5287
  %11 = load i32, i32* %n, align 4, !dbg !5290
  %cmp7 = icmp slt i32 %10, %11, !dbg !5291
  br i1 %cmp7, label %for.body9, label %for.end41, !dbg !5292

for.body9:                                        ; preds = %for.cond6
  store i32 0, i32* %sum, align 4, !dbg !5293
  store i32 0, i32* %j, align 4, !dbg !5295
  br label %for.cond10, !dbg !5297

for.cond10:                                       ; preds = %for.inc, %for.body9
  %12 = load i32, i32* %j, align 4, !dbg !5298
  %cmp11 = icmp slt i32 %12, 8, !dbg !5301
  br i1 %cmp11, label %for.body13, label %for.end, !dbg !5302

for.body13:                                       ; preds = %for.cond10
  %13 = load i32, i32* %j, align 4, !dbg !5303
  %idxprom14 = sext i32 %13 to i64, !dbg !5304
  %14 = load i32, i32* %i, align 4, !dbg !5305
  %idxprom15 = sext i32 %14 to i64, !dbg !5304
  %15 = load i32, i32* %ch, align 4, !dbg !5306
  %idxprom16 = sext i32 %15 to i64, !dbg !5304
  %16 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5304
  %quantized_coeffs = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %16, i32 0, i32 40, !dbg !5307
  %arrayidx17 = getelementptr inbounds [2 x [10 x [8 x i8]]], [2 x [10 x [8 x i8]]]* %quantized_coeffs, i64 0, i64 %idxprom16, !dbg !5304
  %arrayidx18 = getelementptr inbounds [10 x [8 x i8]], [10 x [8 x i8]]* %arrayidx17, i64 0, i64 %idxprom15, !dbg !5304
  %arrayidx19 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx18, i64 0, i64 %idxprom14, !dbg !5304
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !5304
  %conv20 = sext i8 %17 to i32, !dbg !5304
  %18 = load i32, i32* %sum, align 4, !dbg !5308
  %add21 = add nsw i32 %18, %conv20, !dbg !5308
  store i32 %add21, i32* %sum, align 4, !dbg !5308
  br label %for.inc, !dbg !5309

for.inc:                                          ; preds = %for.body13
  %19 = load i32, i32* %j, align 4, !dbg !5310
  %inc = add nsw i32 %19, 1, !dbg !5310
  store i32 %inc, i32* %j, align 4, !dbg !5310
  br label %for.cond10, !dbg !5312, !llvm.loop !5313

for.end:                                          ; preds = %for.cond10
  %20 = load i32, i32* %sum, align 4, !dbg !5315
  %div = sdiv i32 %20, 8, !dbg !5315
  store i32 %div, i32* %sum, align 4, !dbg !5315
  %21 = load i32, i32* %sum, align 4, !dbg !5316
  %cmp22 = icmp sgt i32 %21, 0, !dbg !5318
  br i1 %cmp22, label %if.then, label %if.end, !dbg !5319

if.then:                                          ; preds = %for.end
  %22 = load i32, i32* %sum, align 4, !dbg !5320
  %dec = add nsw i32 %22, -1, !dbg !5320
  store i32 %dec, i32* %sum, align 4, !dbg !5320
  br label %if.end, !dbg !5321

if.end:                                           ; preds = %if.then, %for.end
  store i32 0, i32* %j, align 4, !dbg !5322
  br label %for.cond24, !dbg !5324

for.cond24:                                       ; preds = %for.inc36, %if.end
  %23 = load i32, i32* %j, align 4, !dbg !5325
  %cmp25 = icmp slt i32 %23, 8, !dbg !5328
  br i1 %cmp25, label %for.body27, label %for.end38, !dbg !5329

for.body27:                                       ; preds = %for.cond24
  %24 = load i32, i32* %sum, align 4, !dbg !5330
  %conv28 = trunc i32 %24 to i8, !dbg !5330
  %25 = load i32, i32* %j, align 4, !dbg !5331
  %idxprom29 = sext i32 %25 to i64, !dbg !5332
  %26 = load i32, i32* %i, align 4, !dbg !5333
  %idxprom30 = sext i32 %26 to i64, !dbg !5332
  %27 = load i32, i32* %ch, align 4, !dbg !5334
  %idxprom31 = sext i32 %27 to i64, !dbg !5332
  %28 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5332
  %quantized_coeffs32 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %28, i32 0, i32 40, !dbg !5335
  %arrayidx33 = getelementptr inbounds [2 x [10 x [8 x i8]]], [2 x [10 x [8 x i8]]]* %quantized_coeffs32, i64 0, i64 %idxprom31, !dbg !5332
  %arrayidx34 = getelementptr inbounds [10 x [8 x i8]], [10 x [8 x i8]]* %arrayidx33, i64 0, i64 %idxprom30, !dbg !5332
  %arrayidx35 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx34, i64 0, i64 %idxprom29, !dbg !5332
  store i8 %conv28, i8* %arrayidx35, align 1, !dbg !5336
  br label %for.inc36, !dbg !5332

for.inc36:                                        ; preds = %for.body27
  %29 = load i32, i32* %j, align 4, !dbg !5337
  %inc37 = add nsw i32 %29, 1, !dbg !5337
  store i32 %inc37, i32* %j, align 4, !dbg !5337
  br label %for.cond24, !dbg !5339, !llvm.loop !5340

for.end38:                                        ; preds = %for.cond24
  br label %for.inc39, !dbg !5342

for.inc39:                                        ; preds = %for.end38
  %30 = load i32, i32* %i, align 4, !dbg !5343
  %inc40 = add nsw i32 %30, 1, !dbg !5343
  store i32 %inc40, i32* %i, align 4, !dbg !5343
  br label %for.cond6, !dbg !5345, !llvm.loop !5346

for.end41:                                        ; preds = %for.cond6
  br label %for.inc42, !dbg !5348

for.inc42:                                        ; preds = %for.end41
  %31 = load i32, i32* %ch, align 4, !dbg !5350
  %inc43 = add nsw i32 %31, 1, !dbg !5350
  store i32 %inc43, i32* %ch, align 4, !dbg !5350
  br label %for.cond, !dbg !5352, !llvm.loop !5353

for.end44:                                        ; preds = %for.cond
  ret void, !dbg !5355
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #8 !dbg !5356 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5360, metadata !1868), !dbg !5361
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !5362, metadata !1868), !dbg !5363
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !5364, metadata !1868), !dbg !5365
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !5366, metadata !1868), !dbg !5367
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5368, metadata !1868), !dbg !5369
  store i32 0, i32* %ret, align 4, !dbg !5369
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !5370
  %cmp = icmp sge i32 %0, 2147483135, !dbg !5372
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5373

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !5374
  %cmp1 = icmp slt i32 %1, 0, !dbg !5376
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !5377

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !5378
  %tobool = icmp ne i8* %2, null, !dbg !5378
  br i1 %tobool, label %if.end, label %if.then, !dbg !5380

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !5381
  store i8* null, i8** %buffer.addr, align 8, !dbg !5383
  store i32 -1094995529, i32* %ret, align 4, !dbg !5384
  br label %if.end, !dbg !5385

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !5386
  %add = add nsw i32 %3, 7, !dbg !5387
  %shr = ashr i32 %add, 3, !dbg !5388
  store i32 %shr, i32* %buffer_size, align 4, !dbg !5389
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !5390
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5391
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !5392
  store i8* %4, i8** %buffer3, align 8, !dbg !5393
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !5394
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5395
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !5396
  store i32 %6, i32* %size_in_bits, align 4, !dbg !5397
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !5398
  %add4 = add nsw i32 %8, 8, !dbg !5399
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5400
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !5401
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !5402
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !5403
  %11 = load i32, i32* %buffer_size, align 4, !dbg !5404
  %idx.ext = sext i32 %11 to i64, !dbg !5405
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !5405
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5406
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !5407
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !5408
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5409
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !5410
  store i32 0, i32* %index, align 8, !dbg !5411
  %14 = load i32, i32* %ret, align 4, !dbg !5412
  ret i32 %14, !dbg !5413
}

; Function Attrs: nounwind uwtable
define internal void @qdm2_decode_sub_packet_header(%struct.GetBitContext* %gb, %struct.QDM2SubPacket* %sub_packet) #1 !dbg !5414 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %sub_packet.addr = alloca %struct.QDM2SubPacket*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5417, metadata !1868), !dbg !5418
  store %struct.QDM2SubPacket* %sub_packet, %struct.QDM2SubPacket** %sub_packet.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2SubPacket** %sub_packet.addr, metadata !5419, metadata !1868), !dbg !5420
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5421
  %call = call i32 @get_bits(%struct.GetBitContext* %0, i32 8), !dbg !5422
  %1 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5423
  %type = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %1, i32 0, i32 0, !dbg !5424
  store i32 %call, i32* %type, align 8, !dbg !5425
  %2 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5426
  %type1 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %2, i32 0, i32 0, !dbg !5428
  %3 = load i32, i32* %type1, align 8, !dbg !5428
  %cmp = icmp eq i32 %3, 0, !dbg !5429
  br i1 %cmp, label %if.then, label %if.else, !dbg !5430

if.then:                                          ; preds = %entry
  %4 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5431
  %size = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %4, i32 0, i32 1, !dbg !5433
  store i32 0, i32* %size, align 4, !dbg !5434
  %5 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5435
  %data = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %5, i32 0, i32 2, !dbg !5436
  store i8* null, i8** %data, align 8, !dbg !5437
  br label %if.end21, !dbg !5438

if.else:                                          ; preds = %entry
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5439
  %call2 = call i32 @get_bits(%struct.GetBitContext* %6, i32 8), !dbg !5441
  %7 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5442
  %size3 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %7, i32 0, i32 1, !dbg !5443
  store i32 %call2, i32* %size3, align 4, !dbg !5444
  %8 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5445
  %type4 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %8, i32 0, i32 0, !dbg !5447
  %9 = load i32, i32* %type4, align 8, !dbg !5447
  %and = and i32 %9, 128, !dbg !5448
  %tobool = icmp ne i32 %and, 0, !dbg !5448
  br i1 %tobool, label %if.then5, label %if.end, !dbg !5449

if.then5:                                         ; preds = %if.else
  %10 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5450
  %size6 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %10, i32 0, i32 1, !dbg !5452
  %11 = load i32, i32* %size6, align 4, !dbg !5453
  %shl = shl i32 %11, 8, !dbg !5453
  store i32 %shl, i32* %size6, align 4, !dbg !5453
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5454
  %call7 = call i32 @get_bits(%struct.GetBitContext* %12, i32 8), !dbg !5455
  %13 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5456
  %size8 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %13, i32 0, i32 1, !dbg !5457
  %14 = load i32, i32* %size8, align 4, !dbg !5458
  %or = or i32 %14, %call7, !dbg !5458
  store i32 %or, i32* %size8, align 4, !dbg !5458
  %15 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5459
  %type9 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %15, i32 0, i32 0, !dbg !5460
  %16 = load i32, i32* %type9, align 8, !dbg !5461
  %and10 = and i32 %16, 127, !dbg !5461
  store i32 %and10, i32* %type9, align 8, !dbg !5461
  br label %if.end, !dbg !5462

if.end:                                           ; preds = %if.then5, %if.else
  %17 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5463
  %type11 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %17, i32 0, i32 0, !dbg !5465
  %18 = load i32, i32* %type11, align 8, !dbg !5465
  %cmp12 = icmp eq i32 %18, 127, !dbg !5466
  br i1 %cmp12, label %if.then13, label %if.end18, !dbg !5467

if.then13:                                        ; preds = %if.end
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5468
  %call14 = call i32 @get_bits(%struct.GetBitContext* %19, i32 8), !dbg !5469
  %shl15 = shl i32 %call14, 8, !dbg !5470
  %20 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5471
  %type16 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %20, i32 0, i32 0, !dbg !5472
  %21 = load i32, i32* %type16, align 8, !dbg !5473
  %or17 = or i32 %21, %shl15, !dbg !5473
  store i32 %or17, i32* %type16, align 8, !dbg !5473
  br label %if.end18, !dbg !5471

if.end18:                                         ; preds = %if.then13, %if.end
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5474
  %call19 = call i32 @get_bits_count(%struct.GetBitContext* %22), !dbg !5475
  %div = sdiv i32 %call19, 8, !dbg !5476
  %idxprom = sext i32 %div to i64, !dbg !5477
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5477
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 0, !dbg !5478
  %24 = load i8*, i8** %buffer, align 8, !dbg !5478
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %idxprom, !dbg !5477
  %25 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5479
  %data20 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %25, i32 0, i32 2, !dbg !5480
  store i8* %arrayidx, i8** %data20, align 8, !dbg !5481
  br label %if.end21

if.end21:                                         ; preds = %if.end18, %if.then
  %26 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5482
  %type22 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %26, i32 0, i32 0, !dbg !5483
  %27 = load i32, i32* %type22, align 8, !dbg !5483
  %28 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %sub_packet.addr, align 8, !dbg !5484
  %size23 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %28, i32 0, i32 1, !dbg !5485
  %29 = load i32, i32* %size23, align 4, !dbg !5485
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5486
  %call24 = call i32 @get_bits_count(%struct.GetBitContext* %30), !dbg !5487
  %div25 = sdiv i32 %call24, 8, !dbg !5488
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 48, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i32 0, i32 0), i32 %27, i32 %29, i32 %div25), !dbg !5489
  ret void, !dbg !5490
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #8 !dbg !5491 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5496, metadata !1868), !dbg !5497
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5498
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5499
  %1 = load i32, i32* %index, align 8, !dbg !5499
  ret i32 %1, !dbg !5500
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #8 !dbg !5501 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5504, metadata !1868), !dbg !5505
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5506, metadata !1868), !dbg !5507
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5508, metadata !1868), !dbg !5509
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !5510, metadata !1868), !dbg !5511
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5512
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5513
  %1 = load i32, i32* %index, align 8, !dbg !5513
  store i32 %1, i32* %re_index, align 4, !dbg !5511
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !5514, metadata !1868), !dbg !5515
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !5516, metadata !1868), !dbg !5517
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5518
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !5519
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5519
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !5517
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5520
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !5521
  %5 = load i8*, i8** %buffer, align 8, !dbg !5521
  %6 = load i32, i32* %re_index, align 4, !dbg !5522
  %shr = lshr i32 %6, 3, !dbg !5523
  %idx.ext = zext i32 %shr to i64, !dbg !5524
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !5524
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !5525
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !5525
  %8 = load i32, i32* %l, align 1, !dbg !5525
  %9 = load i32, i32* %re_index, align 4, !dbg !5526
  %and = and i32 %9, 7, !dbg !5527
  %shr4 = lshr i32 %8, %and, !dbg !5528
  store i32 %shr4, i32* %re_cache, align 4, !dbg !5529
  %10 = load i32, i32* %re_cache, align 4, !dbg !5530
  %11 = load i32, i32* %n.addr, align 4, !dbg !5531
  %call = call i32 @zero_extend(i32 %10, i32 %11) #2, !dbg !5532
  store i32 %call, i32* %tmp, align 4, !dbg !5533
  %12 = load i32, i32* %re_size_plus8, align 4, !dbg !5534
  %13 = load i32, i32* %re_index, align 4, !dbg !5535
  %14 = load i32, i32* %n.addr, align 4, !dbg !5536
  %add = add i32 %13, %14, !dbg !5537
  %cmp = icmp ugt i32 %12, %add, !dbg !5538
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5539

cond.true:                                        ; preds = %entry
  %15 = load i32, i32* %re_index, align 4, !dbg !5540
  %16 = load i32, i32* %n.addr, align 4, !dbg !5542
  %add5 = add i32 %15, %16, !dbg !5543
  br label %cond.end, !dbg !5544

cond.false:                                       ; preds = %entry
  %17 = load i32, i32* %re_size_plus8, align 4, !dbg !5545
  br label %cond.end, !dbg !5547

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add5, %cond.true ], [ %17, %cond.false ], !dbg !5548
  store i32 %cond, i32* %re_index, align 4, !dbg !5550
  %18 = load i32, i32* %re_index, align 4, !dbg !5551
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5552
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %19, i32 0, i32 2, !dbg !5553
  store i32 %18, i32* %index6, align 8, !dbg !5554
  %20 = load i32, i32* %tmp, align 4, !dbg !5555
  ret i32 %20, !dbg !5556
}

; Function Attrs: nounwind uwtable
define internal zeroext i16 @qdm2_packet_checksum(i8* %data, i32 %length, i32 %value) #1 !dbg !5557 {
entry:
  %data.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5560, metadata !1868), !dbg !5561
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !5562, metadata !1868), !dbg !5563
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5564, metadata !1868), !dbg !5565
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5566, metadata !1868), !dbg !5567
  store i32 0, i32* %i, align 4, !dbg !5568
  br label %for.cond, !dbg !5570

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5571
  %1 = load i32, i32* %length.addr, align 4, !dbg !5574
  %cmp = icmp slt i32 %0, %1, !dbg !5575
  br i1 %cmp, label %for.body, label %for.end, !dbg !5576

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !5577
  %idxprom = sext i32 %2 to i64, !dbg !5578
  %3 = load i8*, i8** %data.addr, align 8, !dbg !5578
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !5578
  %4 = load i8, i8* %arrayidx, align 1, !dbg !5578
  %conv = zext i8 %4 to i32, !dbg !5578
  %5 = load i32, i32* %value.addr, align 4, !dbg !5579
  %sub = sub nsw i32 %5, %conv, !dbg !5579
  store i32 %sub, i32* %value.addr, align 4, !dbg !5579
  br label %for.inc, !dbg !5580

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !5581
  %inc = add nsw i32 %6, 1, !dbg !5581
  store i32 %inc, i32* %i, align 4, !dbg !5581
  br label %for.cond, !dbg !5583, !llvm.loop !5584

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %value.addr, align 4, !dbg !5586
  %and = and i32 %7, 65535, !dbg !5587
  %conv1 = trunc i32 %and to i16, !dbg !5588
  ret i16 %conv1, !dbg !5589
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #8 !dbg !5590 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5593, metadata !1868), !dbg !5594
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5595, metadata !1868), !dbg !5596
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !5597, metadata !1868), !dbg !5598
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5599
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5600
  %1 = load i32, i32* %index, align 8, !dbg !5600
  store i32 %1, i32* %re_index, align 4, !dbg !5598
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !5601, metadata !1868), !dbg !5602
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !5603, metadata !1868), !dbg !5604
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5605
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !5606
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5606
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !5604
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !5607
  %5 = load i32, i32* %re_index, align 4, !dbg !5608
  %6 = load i32, i32* %n.addr, align 4, !dbg !5609
  %add = add i32 %5, %6, !dbg !5610
  %cmp = icmp ugt i32 %4, %add, !dbg !5611
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5612

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !5613
  %8 = load i32, i32* %n.addr, align 4, !dbg !5615
  %add1 = add i32 %7, %8, !dbg !5616
  br label %cond.end, !dbg !5617

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !5618
  br label %cond.end, !dbg !5620

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !5621
  store i32 %cond, i32* %re_index, align 4, !dbg !5623
  %10 = load i32, i32* %re_index, align 4, !dbg !5624
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5625
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !5626
  store i32 %10, i32* %index2, align 8, !dbg !5627
  ret void, !dbg !5628
}

; Function Attrs: nounwind uwtable
define internal i32 @qdm2_get_vlc(%struct.GetBitContext* %gb, %struct.VLC* %vlc, i32 %flag, i32 %depth) #1 !dbg !5629 {
entry:
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !5634, metadata !1868), !dbg !5638
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !5640, metadata !1868), !dbg !5641
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !5642, metadata !1868), !dbg !5643
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !5644, metadata !1868), !dbg !5645
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !5646, metadata !1868), !dbg !5647
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !5648, metadata !1868), !dbg !5649
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !5650, metadata !1868), !dbg !5651
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !5652, metadata !1868), !dbg !5653
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !5654, metadata !1868), !dbg !5656
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !5657, metadata !1868), !dbg !5658
  %index2.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index2.i, metadata !5659, metadata !1868), !dbg !5660
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %vlc.addr = alloca %struct.VLC*, align 8
  %flag.addr = alloca i32, align 4
  %depth.addr = alloca i32, align 4
  %value = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5661, metadata !1868), !dbg !5662
  store %struct.VLC* %vlc, %struct.VLC** %vlc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc.addr, metadata !5663, metadata !1868), !dbg !5664
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !5665, metadata !1868), !dbg !5666
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !5667, metadata !1868), !dbg !5668
  call void @llvm.dbg.declare(metadata i32* %value, metadata !5669, metadata !1868), !dbg !5670
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5671
  %1 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !5672
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %1, i32 0, i32 1, !dbg !5673
  %2 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !5673
  %3 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !5674
  %bits = getelementptr inbounds %struct.VLC, %struct.VLC* %3, i32 0, i32 0, !dbg !5675
  %4 = load i32, i32* %bits, align 8, !dbg !5675
  %5 = load i32, i32* %depth.addr, align 4, !dbg !5676
  store %struct.GetBitContext* %0, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5677
  store [2 x i16]* %2, [2 x i16]** %table.addr.i, align 8, !dbg !5677
  store i32 %4, i32* %bits.addr.i, align 4, !dbg !5677
  store i32 %5, i32* %max_depth.addr.i, align 4, !dbg !5677
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5678
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !5679
  %7 = load i32, i32* %index.i, align 8, !dbg !5679
  store i32 %7, i32* %re_index.i, align 4, !dbg !5649
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5680
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %8, i32 0, i32 4, !dbg !5681
  %9 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !5681
  store i32 %9, i32* %re_size_plus8.i, align 4, !dbg !5653
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5682
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %10, i32 0, i32 0, !dbg !5683
  %11 = load i8*, i8** %buffer.i, align 8, !dbg !5683
  %12 = load i32, i32* %re_index.i, align 4, !dbg !5684
  %shr.i = lshr i32 %12, 3, !dbg !5685
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !5686
  %add.ptr.i = getelementptr inbounds i8, i8* %11, i64 %idx.ext.i, !dbg !5686
  %13 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !5687
  %l.i = bitcast %union.unaligned_32* %13 to i32*, !dbg !5687
  %14 = load i32, i32* %l.i, align 1, !dbg !5687
  %15 = load i32, i32* %re_index.i, align 4, !dbg !5688
  %and.i = and i32 %15, 7, !dbg !5689
  %shr1.i = lshr i32 %14, %and.i, !dbg !5690
  store i32 %shr1.i, i32* %re_cache.i, align 4, !dbg !5691
  %16 = load i32, i32* %re_cache.i, align 4, !dbg !5692
  %17 = load i32, i32* %bits.addr.i, align 4, !dbg !5694
  %call.i = call i32 @zero_extend(i32 %16, i32 %17) #2, !dbg !5695
  store i32 %call.i, i32* %index2.i, align 4, !dbg !5696
  %18 = load i32, i32* %index2.i, align 4, !dbg !5697
  %idxprom.i = zext i32 %18 to i64, !dbg !5698
  %19 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5698
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %19, i64 %idxprom.i, !dbg !5698
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !5698
  %20 = load i16, i16* %arrayidx3.i, align 2, !dbg !5698
  %conv.i = sext i16 %20 to i32, !dbg !5698
  store i32 %conv.i, i32* %code.i, align 4, !dbg !5699
  %21 = load i32, i32* %index2.i, align 4, !dbg !5700
  %idxprom4.i = zext i32 %21 to i64, !dbg !5701
  %22 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5701
  %arrayidx5.i = getelementptr inbounds [2 x i16], [2 x i16]* %22, i64 %idxprom4.i, !dbg !5701
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx5.i, i64 0, i64 1, !dbg !5701
  %23 = load i16, i16* %arrayidx6.i, align 2, !dbg !5701
  %conv7.i = sext i16 %23 to i32, !dbg !5701
  store i32 %conv7.i, i32* %n.i, align 4, !dbg !5702
  %24 = load i32, i32* %max_depth.addr.i, align 4, !dbg !5703
  %cmp.i = icmp sgt i32 %24, 1, !dbg !5704
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end63.i, !dbg !5705

land.lhs.true.i:                                  ; preds = %entry
  %25 = load i32, i32* %n.i, align 4, !dbg !5706
  %cmp9.i = icmp slt i32 %25, 0, !dbg !5709
  br i1 %cmp9.i, label %if.then.i, label %if.end63.i, !dbg !5710

if.then.i:                                        ; preds = %land.lhs.true.i
  %26 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5711
  %27 = load i32, i32* %re_index.i, align 4, !dbg !5714
  %28 = load i32, i32* %bits.addr.i, align 4, !dbg !5715
  %add.i = add i32 %27, %28, !dbg !5716
  %cmp11.i = icmp ugt i32 %26, %add.i, !dbg !5717
  br i1 %cmp11.i, label %cond.true.i, label %cond.false.i, !dbg !5718

cond.true.i:                                      ; preds = %if.then.i
  %29 = load i32, i32* %re_index.i, align 4, !dbg !5719
  %30 = load i32, i32* %bits.addr.i, align 4, !dbg !5721
  %add13.i = add i32 %29, %30, !dbg !5722
  br label %cond.end.i, !dbg !5723

cond.false.i:                                     ; preds = %if.then.i
  %31 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5724
  br label %cond.end.i, !dbg !5726

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add13.i, %cond.true.i ], [ %31, %cond.false.i ], !dbg !5727
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !5729
  %32 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5730
  %buffer14.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %32, i32 0, i32 0, !dbg !5731
  %33 = load i8*, i8** %buffer14.i, align 8, !dbg !5731
  %34 = load i32, i32* %re_index.i, align 4, !dbg !5732
  %shr15.i = lshr i32 %34, 3, !dbg !5733
  %idx.ext16.i = zext i32 %shr15.i to i64, !dbg !5734
  %add.ptr17.i = getelementptr inbounds i8, i8* %33, i64 %idx.ext16.i, !dbg !5734
  %35 = bitcast i8* %add.ptr17.i to %union.unaligned_32*, !dbg !5735
  %l18.i = bitcast %union.unaligned_32* %35 to i32*, !dbg !5735
  %36 = load i32, i32* %l18.i, align 1, !dbg !5735
  %37 = load i32, i32* %re_index.i, align 4, !dbg !5736
  %and19.i = and i32 %37, 7, !dbg !5737
  %shr20.i = lshr i32 %36, %and19.i, !dbg !5738
  store i32 %shr20.i, i32* %re_cache.i, align 4, !dbg !5739
  %38 = load i32, i32* %n.i, align 4, !dbg !5740
  %sub.i = sub nsw i32 0, %38, !dbg !5741
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !5742
  %39 = load i32, i32* %re_cache.i, align 4, !dbg !5743
  %40 = load i32, i32* %nb_bits.i, align 4, !dbg !5744
  %call21.i = call i32 @zero_extend(i32 %39, i32 %40) #2, !dbg !5745
  %41 = load i32, i32* %code.i, align 4, !dbg !5746
  %add22.i = add i32 %call21.i, %41, !dbg !5747
  store i32 %add22.i, i32* %index2.i, align 4, !dbg !5748
  %42 = load i32, i32* %index2.i, align 4, !dbg !5749
  %idxprom23.i = zext i32 %42 to i64, !dbg !5750
  %43 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5750
  %arrayidx24.i = getelementptr inbounds [2 x i16], [2 x i16]* %43, i64 %idxprom23.i, !dbg !5750
  %arrayidx25.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx24.i, i64 0, i64 0, !dbg !5750
  %44 = load i16, i16* %arrayidx25.i, align 2, !dbg !5750
  %conv26.i = sext i16 %44 to i32, !dbg !5750
  store i32 %conv26.i, i32* %code.i, align 4, !dbg !5751
  %45 = load i32, i32* %index2.i, align 4, !dbg !5752
  %idxprom27.i = zext i32 %45 to i64, !dbg !5753
  %46 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5753
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %46, i64 %idxprom27.i, !dbg !5753
  %arrayidx29.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx28.i, i64 0, i64 1, !dbg !5753
  %47 = load i16, i16* %arrayidx29.i, align 2, !dbg !5753
  %conv30.i = sext i16 %47 to i32, !dbg !5753
  store i32 %conv30.i, i32* %n.i, align 4, !dbg !5754
  %48 = load i32, i32* %max_depth.addr.i, align 4, !dbg !5755
  %cmp31.i = icmp sgt i32 %48, 2, !dbg !5756
  br i1 %cmp31.i, label %land.lhs.true33.i, label %if.end.i, !dbg !5757

land.lhs.true33.i:                                ; preds = %cond.end.i
  %49 = load i32, i32* %n.i, align 4, !dbg !5758
  %cmp34.i = icmp slt i32 %49, 0, !dbg !5761
  br i1 %cmp34.i, label %if.then36.i, label %if.end.i, !dbg !5762

if.then36.i:                                      ; preds = %land.lhs.true33.i
  %50 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5763
  %51 = load i32, i32* %re_index.i, align 4, !dbg !5766
  %52 = load i32, i32* %nb_bits.i, align 4, !dbg !5767
  %add37.i = add i32 %51, %52, !dbg !5768
  %cmp38.i = icmp ugt i32 %50, %add37.i, !dbg !5769
  br i1 %cmp38.i, label %cond.true40.i, label %cond.false42.i, !dbg !5770

cond.true40.i:                                    ; preds = %if.then36.i
  %53 = load i32, i32* %re_index.i, align 4, !dbg !5771
  %54 = load i32, i32* %nb_bits.i, align 4, !dbg !5773
  %add41.i = add i32 %53, %54, !dbg !5774
  br label %cond.end43.i, !dbg !5775

cond.false42.i:                                   ; preds = %if.then36.i
  %55 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5776
  br label %cond.end43.i, !dbg !5778

cond.end43.i:                                     ; preds = %cond.false42.i, %cond.true40.i
  %cond44.i = phi i32 [ %add41.i, %cond.true40.i ], [ %55, %cond.false42.i ], !dbg !5779
  store i32 %cond44.i, i32* %re_index.i, align 4, !dbg !5781
  %56 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5782
  %buffer45.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %56, i32 0, i32 0, !dbg !5783
  %57 = load i8*, i8** %buffer45.i, align 8, !dbg !5783
  %58 = load i32, i32* %re_index.i, align 4, !dbg !5784
  %shr46.i = lshr i32 %58, 3, !dbg !5785
  %idx.ext47.i = zext i32 %shr46.i to i64, !dbg !5786
  %add.ptr48.i = getelementptr inbounds i8, i8* %57, i64 %idx.ext47.i, !dbg !5786
  %59 = bitcast i8* %add.ptr48.i to %union.unaligned_32*, !dbg !5787
  %l49.i = bitcast %union.unaligned_32* %59 to i32*, !dbg !5787
  %60 = load i32, i32* %l49.i, align 1, !dbg !5787
  %61 = load i32, i32* %re_index.i, align 4, !dbg !5788
  %and50.i = and i32 %61, 7, !dbg !5789
  %shr51.i = lshr i32 %60, %and50.i, !dbg !5790
  store i32 %shr51.i, i32* %re_cache.i, align 4, !dbg !5791
  %62 = load i32, i32* %n.i, align 4, !dbg !5792
  %sub52.i = sub nsw i32 0, %62, !dbg !5793
  store i32 %sub52.i, i32* %nb_bits.i, align 4, !dbg !5794
  %63 = load i32, i32* %re_cache.i, align 4, !dbg !5795
  %64 = load i32, i32* %nb_bits.i, align 4, !dbg !5796
  %call53.i = call i32 @zero_extend(i32 %63, i32 %64) #2, !dbg !5797
  %65 = load i32, i32* %code.i, align 4, !dbg !5798
  %add54.i = add i32 %call53.i, %65, !dbg !5799
  store i32 %add54.i, i32* %index2.i, align 4, !dbg !5800
  %66 = load i32, i32* %index2.i, align 4, !dbg !5801
  %idxprom55.i = zext i32 %66 to i64, !dbg !5802
  %67 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5802
  %arrayidx56.i = getelementptr inbounds [2 x i16], [2 x i16]* %67, i64 %idxprom55.i, !dbg !5802
  %arrayidx57.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx56.i, i64 0, i64 0, !dbg !5802
  %68 = load i16, i16* %arrayidx57.i, align 2, !dbg !5802
  %conv58.i = sext i16 %68 to i32, !dbg !5802
  store i32 %conv58.i, i32* %code.i, align 4, !dbg !5803
  %69 = load i32, i32* %index2.i, align 4, !dbg !5804
  %idxprom59.i = zext i32 %69 to i64, !dbg !5805
  %70 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !5805
  %arrayidx60.i = getelementptr inbounds [2 x i16], [2 x i16]* %70, i64 %idxprom59.i, !dbg !5805
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx60.i, i64 0, i64 1, !dbg !5805
  %71 = load i16, i16* %arrayidx61.i, align 2, !dbg !5805
  %conv62.i = sext i16 %71 to i32, !dbg !5805
  store i32 %conv62.i, i32* %n.i, align 4, !dbg !5806
  br label %if.end.i, !dbg !5807

if.end.i:                                         ; preds = %cond.end43.i, %land.lhs.true33.i, %cond.end.i
  br label %if.end63.i, !dbg !5808

if.end63.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %entry
  %72 = load i32, i32* %n.i, align 4, !dbg !5810
  %73 = load i32, i32* %re_cache.i, align 4, !dbg !5813
  %shr65.i = lshr i32 %73, %72, !dbg !5813
  store i32 %shr65.i, i32* %re_cache.i, align 4, !dbg !5813
  %74 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5814
  %75 = load i32, i32* %re_index.i, align 4, !dbg !5815
  %76 = load i32, i32* %n.i, align 4, !dbg !5816
  %add66.i = add i32 %75, %76, !dbg !5817
  %cmp67.i = icmp ugt i32 %74, %add66.i, !dbg !5818
  br i1 %cmp67.i, label %cond.true69.i, label %cond.false71.i, !dbg !5819

cond.true69.i:                                    ; preds = %if.end63.i
  %77 = load i32, i32* %re_index.i, align 4, !dbg !5820
  %78 = load i32, i32* %n.i, align 4, !dbg !5822
  %add70.i = add i32 %77, %78, !dbg !5823
  br label %get_vlc2.exit, !dbg !5824

cond.false71.i:                                   ; preds = %if.end63.i
  %79 = load i32, i32* %re_size_plus8.i, align 4, !dbg !5825
  br label %get_vlc2.exit, !dbg !5827

get_vlc2.exit:                                    ; preds = %cond.true69.i, %cond.false71.i
  %cond73.i = phi i32 [ %add70.i, %cond.true69.i ], [ %79, %cond.false71.i ], !dbg !5828
  store i32 %cond73.i, i32* %re_index.i, align 4, !dbg !5830
  %80 = load i32, i32* %re_index.i, align 4, !dbg !5831
  %81 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5832
  %index75.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %81, i32 0, i32 2, !dbg !5833
  store i32 %80, i32* %index75.i, align 8, !dbg !5834
  %82 = load i32, i32* %code.i, align 4, !dbg !5835
  store i32 %82, i32* %value, align 4, !dbg !5836
  %83 = load i32, i32* %value, align 4, !dbg !5837
  %dec = add nsw i32 %83, -1, !dbg !5837
  store i32 %dec, i32* %value, align 4, !dbg !5837
  %cmp = icmp eq i32 %83, 0, !dbg !5839
  br i1 %cmp, label %if.then, label %if.end, !dbg !5840

if.then:                                          ; preds = %get_vlc2.exit
  %84 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5841
  %85 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5842
  %call1 = call i32 @get_bits(%struct.GetBitContext* %85, i32 3), !dbg !5843
  %add = add i32 %call1, 1, !dbg !5844
  %call2 = call i32 @get_bits(%struct.GetBitContext* %84, i32 %add), !dbg !5845
  store i32 %call2, i32* %value, align 4, !dbg !5847
  br label %if.end, !dbg !5848

if.end:                                           ; preds = %if.then, %get_vlc2.exit
  %86 = load i32, i32* %flag.addr, align 4, !dbg !5849
  %tobool = icmp ne i32 %86, 0, !dbg !5849
  br i1 %tobool, label %if.then3, label %if.end12, !dbg !5851

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5852, metadata !1868), !dbg !5854
  %87 = load i32, i32* %value, align 4, !dbg !5855
  %cmp4 = icmp sge i32 %87, 60, !dbg !5857
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5858

if.then5:                                         ; preds = %if.then3
  %88 = load i32, i32* %value, align 4, !dbg !5859
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.23, i32 0, i32 0), i32 %88), !dbg !5861
  store i32 0, i32* %retval, align 4, !dbg !5862
  br label %return, !dbg !5862

if.end6:                                          ; preds = %if.then3
  %89 = load i32, i32* %value, align 4, !dbg !5863
  %idxprom = sext i32 %89 to i64, !dbg !5864
  %arrayidx = getelementptr inbounds [60 x i32], [60 x i32]* @vlc_stage3_values, i64 0, i64 %idxprom, !dbg !5864
  %90 = load i32, i32* %arrayidx, align 4, !dbg !5864
  store i32 %90, i32* %tmp, align 4, !dbg !5865
  %91 = load i32, i32* %value, align 4, !dbg !5866
  %and = and i32 %91, -4, !dbg !5868
  %cmp7 = icmp sgt i32 %and, 0, !dbg !5869
  br i1 %cmp7, label %if.then8, label %if.end11, !dbg !5870

if.then8:                                         ; preds = %if.end6
  %92 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5871
  %93 = load i32, i32* %value, align 4, !dbg !5872
  %shr = ashr i32 %93, 2, !dbg !5873
  %call9 = call i32 @get_bits(%struct.GetBitContext* %92, i32 %shr), !dbg !5874
  %94 = load i32, i32* %tmp, align 4, !dbg !5875
  %add10 = add i32 %94, %call9, !dbg !5875
  store i32 %add10, i32* %tmp, align 4, !dbg !5875
  br label %if.end11, !dbg !5876

if.end11:                                         ; preds = %if.then8, %if.end6
  %95 = load i32, i32* %tmp, align 4, !dbg !5877
  store i32 %95, i32* %value, align 4, !dbg !5878
  br label %if.end12, !dbg !5879

if.end12:                                         ; preds = %if.end11, %if.end
  %96 = load i32, i32* %value, align 4, !dbg !5880
  store i32 %96, i32* %retval, align 4, !dbg !5881
  br label %return, !dbg !5881

return:                                           ; preds = %if.end12, %if.then5
  %97 = load i32, i32* %retval, align 4, !dbg !5882
  ret i32 %97, !dbg !5882
}

; Function Attrs: nounwind uwtable
define internal void @process_synthesis_subpackets(%struct.QDM2Context* %q, %struct.QDM2SubPNode* %list) #1 !dbg !5883 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %list.addr = alloca %struct.QDM2SubPNode*, align 8
  %nodes = alloca [4 x %struct.QDM2SubPNode*], align 16
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !5887, metadata !1868), !dbg !5888
  store %struct.QDM2SubPNode* %list, %struct.QDM2SubPNode** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2SubPNode** %list.addr, metadata !5889, metadata !1868), !dbg !5890
  call void @llvm.dbg.declare(metadata [4 x %struct.QDM2SubPNode*]* %nodes, metadata !5891, metadata !1868), !dbg !5893
  %0 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %list.addr, align 8, !dbg !5894
  %call = call %struct.QDM2SubPNode* @qdm2_search_subpacket_type_in_list(%struct.QDM2SubPNode* %0, i32 9), !dbg !5895
  %arrayidx = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 0, !dbg !5896
  store %struct.QDM2SubPNode* %call, %struct.QDM2SubPNode** %arrayidx, align 16, !dbg !5897
  %arrayidx1 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 0, !dbg !5898
  %1 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %arrayidx1, align 16, !dbg !5898
  %tobool = icmp ne %struct.QDM2SubPNode* %1, null, !dbg !5898
  br i1 %tobool, label %if.then, label %if.end, !dbg !5900

if.then:                                          ; preds = %entry
  %2 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5901
  %arrayidx2 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 0, !dbg !5902
  %3 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %arrayidx2, align 16, !dbg !5902
  %call3 = call i32 @process_subpacket_9(%struct.QDM2Context* %2, %struct.QDM2SubPNode* %3), !dbg !5903
  br label %if.end, !dbg !5903

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %list.addr, align 8, !dbg !5904
  %call4 = call %struct.QDM2SubPNode* @qdm2_search_subpacket_type_in_list(%struct.QDM2SubPNode* %4, i32 10), !dbg !5905
  %arrayidx5 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 1, !dbg !5906
  store %struct.QDM2SubPNode* %call4, %struct.QDM2SubPNode** %arrayidx5, align 8, !dbg !5907
  %arrayidx6 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 1, !dbg !5908
  %5 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %arrayidx6, align 8, !dbg !5908
  %tobool7 = icmp ne %struct.QDM2SubPNode* %5, null, !dbg !5908
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !5910

if.then8:                                         ; preds = %if.end
  %6 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5911
  %arrayidx9 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 1, !dbg !5912
  %7 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %arrayidx9, align 8, !dbg !5912
  call void @process_subpacket_10(%struct.QDM2Context* %6, %struct.QDM2SubPNode* %7), !dbg !5913
  br label %if.end10, !dbg !5913

if.else:                                          ; preds = %if.end
  %8 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5914
  call void @process_subpacket_10(%struct.QDM2Context* %8, %struct.QDM2SubPNode* null), !dbg !5915
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then8
  %9 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %list.addr, align 8, !dbg !5916
  %call11 = call %struct.QDM2SubPNode* @qdm2_search_subpacket_type_in_list(%struct.QDM2SubPNode* %9, i32 11), !dbg !5917
  %arrayidx12 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 2, !dbg !5918
  store %struct.QDM2SubPNode* %call11, %struct.QDM2SubPNode** %arrayidx12, align 16, !dbg !5919
  %arrayidx13 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 0, !dbg !5920
  %10 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %arrayidx13, align 16, !dbg !5920
  %tobool14 = icmp ne %struct.QDM2SubPNode* %10, null, !dbg !5920
  br i1 %tobool14, label %land.lhs.true, label %if.else22, !dbg !5922

land.lhs.true:                                    ; preds = %if.end10
  %arrayidx15 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 1, !dbg !5923
  %11 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %arrayidx15, align 8, !dbg !5923
  %tobool16 = icmp ne %struct.QDM2SubPNode* %11, null, !dbg !5923
  br i1 %tobool16, label %land.lhs.true17, label %if.else22, !dbg !5925

land.lhs.true17:                                  ; preds = %land.lhs.true
  %arrayidx18 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 2, !dbg !5926
  %12 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %arrayidx18, align 16, !dbg !5926
  %tobool19 = icmp ne %struct.QDM2SubPNode* %12, null, !dbg !5926
  br i1 %tobool19, label %if.then20, label %if.else22, !dbg !5928

if.then20:                                        ; preds = %land.lhs.true17
  %13 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5929
  %arrayidx21 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 2, !dbg !5930
  %14 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %arrayidx21, align 16, !dbg !5930
  call void @process_subpacket_11(%struct.QDM2Context* %13, %struct.QDM2SubPNode* %14), !dbg !5931
  br label %if.end23, !dbg !5931

if.else22:                                        ; preds = %land.lhs.true17, %land.lhs.true, %if.end10
  %15 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5932
  call void @process_subpacket_11(%struct.QDM2Context* %15, %struct.QDM2SubPNode* null), !dbg !5933
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then20
  %16 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %list.addr, align 8, !dbg !5934
  %call24 = call %struct.QDM2SubPNode* @qdm2_search_subpacket_type_in_list(%struct.QDM2SubPNode* %16, i32 12), !dbg !5935
  %arrayidx25 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 3, !dbg !5936
  store %struct.QDM2SubPNode* %call24, %struct.QDM2SubPNode** %arrayidx25, align 8, !dbg !5937
  %arrayidx26 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 0, !dbg !5938
  %17 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %arrayidx26, align 16, !dbg !5938
  %tobool27 = icmp ne %struct.QDM2SubPNode* %17, null, !dbg !5938
  br i1 %tobool27, label %land.lhs.true28, label %if.else36, !dbg !5940

land.lhs.true28:                                  ; preds = %if.end23
  %arrayidx29 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 1, !dbg !5941
  %18 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %arrayidx29, align 8, !dbg !5941
  %tobool30 = icmp ne %struct.QDM2SubPNode* %18, null, !dbg !5941
  br i1 %tobool30, label %land.lhs.true31, label %if.else36, !dbg !5943

land.lhs.true31:                                  ; preds = %land.lhs.true28
  %arrayidx32 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 3, !dbg !5944
  %19 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %arrayidx32, align 8, !dbg !5944
  %tobool33 = icmp ne %struct.QDM2SubPNode* %19, null, !dbg !5944
  br i1 %tobool33, label %if.then34, label %if.else36, !dbg !5946

if.then34:                                        ; preds = %land.lhs.true31
  %20 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5947
  %arrayidx35 = getelementptr inbounds [4 x %struct.QDM2SubPNode*], [4 x %struct.QDM2SubPNode*]* %nodes, i64 0, i64 3, !dbg !5948
  %21 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %arrayidx35, align 8, !dbg !5948
  call void @process_subpacket_12(%struct.QDM2Context* %20, %struct.QDM2SubPNode* %21), !dbg !5949
  br label %if.end37, !dbg !5949

if.else36:                                        ; preds = %land.lhs.true31, %land.lhs.true28, %if.end23
  %22 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5950
  call void @process_subpacket_12(%struct.QDM2Context* %22, %struct.QDM2SubPNode* null), !dbg !5951
  br label %if.end37

if.end37:                                         ; preds = %if.else36, %if.then34
  ret void, !dbg !5952
}

; Function Attrs: nounwind uwtable
define internal void @process_subpacket_10(%struct.QDM2Context* %q, %struct.QDM2SubPNode* %node) #1 !dbg !5953 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %node.addr = alloca %struct.QDM2SubPNode*, align 8
  %gb = alloca %struct.GetBitContext, align 8
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !5954, metadata !1868), !dbg !5955
  store %struct.QDM2SubPNode* %node, %struct.QDM2SubPNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2SubPNode** %node.addr, metadata !5956, metadata !1868), !dbg !5957
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !5958, metadata !1868), !dbg !5959
  %0 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %node.addr, align 8, !dbg !5960
  %tobool = icmp ne %struct.QDM2SubPNode* %0, null, !dbg !5960
  br i1 %tobool, label %if.then, label %if.else, !dbg !5962

if.then:                                          ; preds = %entry
  %1 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %node.addr, align 8, !dbg !5963
  %packet = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %1, i32 0, i32 0, !dbg !5965
  %2 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !5965
  %data = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %2, i32 0, i32 2, !dbg !5966
  %3 = load i8*, i8** %data, align 8, !dbg !5966
  %4 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %node.addr, align 8, !dbg !5967
  %packet1 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %4, i32 0, i32 0, !dbg !5968
  %5 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet1, align 8, !dbg !5968
  %size = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %5, i32 0, i32 1, !dbg !5969
  %6 = load i32, i32* %size, align 4, !dbg !5969
  %mul = mul i32 %6, 8, !dbg !5970
  %call = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %3, i32 %mul), !dbg !5971
  %7 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5972
  call void @init_tone_level_dequantization(%struct.QDM2Context* %7, %struct.GetBitContext* %gb), !dbg !5973
  %8 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5974
  call void @fill_tone_level_array(%struct.QDM2Context* %8, i32 1), !dbg !5975
  br label %if.end, !dbg !5976

if.else:                                          ; preds = %entry
  %9 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !5977
  call void @fill_tone_level_array(%struct.QDM2Context* %9, i32 0), !dbg !5979
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5980
}

; Function Attrs: nounwind uwtable
define internal void @process_subpacket_11(%struct.QDM2Context* %q, %struct.QDM2SubPNode* %node) #1 !dbg !5981 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %node.addr = alloca %struct.QDM2SubPNode*, align 8
  %gb = alloca %struct.GetBitContext, align 8
  %length = alloca i32, align 4
  %c = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !5982, metadata !1868), !dbg !5983
  store %struct.QDM2SubPNode* %node, %struct.QDM2SubPNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2SubPNode** %node.addr, metadata !5984, metadata !1868), !dbg !5985
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !5986, metadata !1868), !dbg !5987
  call void @llvm.dbg.declare(metadata i32* %length, metadata !5988, metadata !1868), !dbg !5989
  store i32 0, i32* %length, align 4, !dbg !5989
  %0 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %node.addr, align 8, !dbg !5990
  %tobool = icmp ne %struct.QDM2SubPNode* %0, null, !dbg !5990
  br i1 %tobool, label %if.then, label %if.end, !dbg !5992

if.then:                                          ; preds = %entry
  %1 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %node.addr, align 8, !dbg !5993
  %packet = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %1, i32 0, i32 0, !dbg !5995
  %2 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !5995
  %size = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %2, i32 0, i32 1, !dbg !5996
  %3 = load i32, i32* %size, align 4, !dbg !5996
  %mul = mul i32 %3, 8, !dbg !5997
  store i32 %mul, i32* %length, align 4, !dbg !5998
  %4 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %node.addr, align 8, !dbg !5999
  %packet1 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %4, i32 0, i32 0, !dbg !6000
  %5 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet1, align 8, !dbg !6000
  %data = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %5, i32 0, i32 2, !dbg !6001
  %6 = load i8*, i8** %data, align 8, !dbg !6001
  %7 = load i32, i32* %length, align 4, !dbg !6002
  %call = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %6, i32 %7), !dbg !6003
  br label %if.end, !dbg !6004

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %length, align 4, !dbg !6005
  %cmp = icmp sge i32 %8, 32, !dbg !6007
  br i1 %cmp, label %if.then2, label %if.end10, !dbg !6008

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %c, metadata !6009, metadata !1868), !dbg !6011
  %call3 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 13), !dbg !6012
  store i32 %call3, i32* %c, align 4, !dbg !6011
  %9 = load i32, i32* %c, align 4, !dbg !6013
  %cmp4 = icmp sgt i32 %9, 3, !dbg !6015
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !6016

if.then5:                                         ; preds = %if.then2
  %10 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6017
  %tone_level_idx = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %10, i32 0, i32 45, !dbg !6018
  %arraydecay = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %tone_level_idx, i32 0, i32 0, !dbg !6017
  %11 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6019
  %tone_level_idx_temp = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %11, i32 0, i32 46, !dbg !6020
  %arraydecay6 = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %tone_level_idx_temp, i32 0, i32 0, !dbg !6019
  %12 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6021
  %coding_method = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %12, i32 0, i32 39, !dbg !6022
  %arraydecay7 = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %coding_method, i32 0, i32 0, !dbg !6021
  %13 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6023
  %nb_channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %13, i32 0, i32 0, !dbg !6024
  %14 = load i32, i32* %nb_channels, align 32, !dbg !6024
  %15 = load i32, i32* %c, align 4, !dbg !6025
  %mul8 = mul nsw i32 8, %15, !dbg !6026
  %16 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6027
  %superblocktype_2_3 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %16, i32 0, i32 48, !dbg !6028
  %17 = load i32, i32* %superblocktype_2_3, align 8, !dbg !6028
  %18 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6029
  %cm_table_select = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %18, i32 0, i32 11, !dbg !6030
  %19 = load i32, i32* %cm_table_select, align 4, !dbg !6030
  call void @fill_coding_method_array([30 x [64 x i8]]* %arraydecay, [30 x [64 x i8]]* %arraydecay6, [30 x [64 x i8]]* %arraydecay7, i32 %14, i32 %mul8, i32 %17, i32 %19), !dbg !6031
  br label %if.end9, !dbg !6031

if.end9:                                          ; preds = %if.then5, %if.then2
  br label %if.end10, !dbg !6032

if.end10:                                         ; preds = %if.end9, %if.end
  %20 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6033
  %21 = load i32, i32* %length, align 4, !dbg !6034
  %call11 = call i32 @synthfilt_build_sb_samples(%struct.QDM2Context* %20, %struct.GetBitContext* %gb, i32 %21, i32 0, i32 8), !dbg !6035
  ret void, !dbg !6036
}

; Function Attrs: nounwind uwtable
define internal void @process_subpacket_12(%struct.QDM2Context* %q, %struct.QDM2SubPNode* %node) #1 !dbg !6037 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %node.addr = alloca %struct.QDM2SubPNode*, align 8
  %gb = alloca %struct.GetBitContext, align 8
  %length = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !6038, metadata !1868), !dbg !6039
  store %struct.QDM2SubPNode* %node, %struct.QDM2SubPNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2SubPNode** %node.addr, metadata !6040, metadata !1868), !dbg !6041
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !6042, metadata !1868), !dbg !6043
  call void @llvm.dbg.declare(metadata i32* %length, metadata !6044, metadata !1868), !dbg !6045
  store i32 0, i32* %length, align 4, !dbg !6045
  %0 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %node.addr, align 8, !dbg !6046
  %tobool = icmp ne %struct.QDM2SubPNode* %0, null, !dbg !6046
  br i1 %tobool, label %if.then, label %if.end, !dbg !6048

if.then:                                          ; preds = %entry
  %1 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %node.addr, align 8, !dbg !6049
  %packet = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %1, i32 0, i32 0, !dbg !6051
  %2 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !6051
  %size = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %2, i32 0, i32 1, !dbg !6052
  %3 = load i32, i32* %size, align 4, !dbg !6052
  %mul = mul i32 %3, 8, !dbg !6053
  store i32 %mul, i32* %length, align 4, !dbg !6054
  %4 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %node.addr, align 8, !dbg !6055
  %packet1 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %4, i32 0, i32 0, !dbg !6056
  %5 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet1, align 8, !dbg !6056
  %data = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %5, i32 0, i32 2, !dbg !6057
  %6 = load i8*, i8** %data, align 8, !dbg !6057
  %7 = load i32, i32* %length, align 4, !dbg !6058
  %call = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %6, i32 %7), !dbg !6059
  br label %if.end, !dbg !6060

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6061
  %9 = load i32, i32* %length, align 4, !dbg !6062
  %10 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6063
  %sub_sampling = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %10, i32 0, i32 9, !dbg !6064
  %11 = load i32, i32* %sub_sampling, align 4, !dbg !6064
  %cmp = icmp sge i32 %11, 2, !dbg !6065
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6066

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !6067

cond.false:                                       ; preds = %if.end
  %12 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6069
  %sub_sampling2 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %12, i32 0, i32 9, !dbg !6071
  %13 = load i32, i32* %sub_sampling2, align 4, !dbg !6071
  %shl = shl i32 8, %13, !dbg !6072
  br label %cond.end, !dbg !6073

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 30, %cond.true ], [ %shl, %cond.false ], !dbg !6074
  %call3 = call i32 @synthfilt_build_sb_samples(%struct.QDM2Context* %8, %struct.GetBitContext* %gb, i32 %9, i32 8, i32 %cond), !dbg !6076
  ret void, !dbg !6077
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @zero_extend(i32 %val, i32 %bits) #6 !dbg !6078 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !6082, metadata !1868), !dbg !6083
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !6084, metadata !1868), !dbg !6085
  %0 = load i32, i32* %val.addr, align 4, !dbg !6086
  %1 = load i32, i32* %bits.addr, align 4, !dbg !6087
  %conv = zext i32 %1 to i64, !dbg !6087
  %sub = sub i64 32, %conv, !dbg !6088
  %sh_prom = trunc i64 %sub to i32, !dbg !6089
  %shl = shl i32 %0, %sh_prom, !dbg !6089
  %2 = load i32, i32* %bits.addr, align 4, !dbg !6090
  %conv1 = zext i32 %2 to i64, !dbg !6090
  %sub2 = sub i64 32, %conv1, !dbg !6091
  %sh_prom3 = trunc i64 %sub2 to i32, !dbg !6092
  %shr = lshr i32 %shl, %sh_prom3, !dbg !6092
  ret i32 %shr, !dbg !6093
}

; Function Attrs: nounwind uwtable
define internal %struct.QDM2SubPNode* @qdm2_search_subpacket_type_in_list(%struct.QDM2SubPNode* %list, i32 %type) #1 !dbg !6094 {
entry:
  %retval = alloca %struct.QDM2SubPNode*, align 8
  %list.addr = alloca %struct.QDM2SubPNode*, align 8
  %type.addr = alloca i32, align 4
  store %struct.QDM2SubPNode* %list, %struct.QDM2SubPNode** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2SubPNode** %list.addr, metadata !6097, metadata !1868), !dbg !6098
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6099, metadata !1868), !dbg !6100
  br label %while.cond, !dbg !6101

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %list.addr, align 8, !dbg !6102
  %tobool = icmp ne %struct.QDM2SubPNode* %0, null, !dbg !6102
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6104

land.rhs:                                         ; preds = %while.cond
  %1 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %list.addr, align 8, !dbg !6105
  %packet = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %1, i32 0, i32 0, !dbg !6107
  %2 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !6107
  %tobool1 = icmp ne %struct.QDM2SubPacket* %2, null, !dbg !6108
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %tobool1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end, !dbg !6109

while.body:                                       ; preds = %land.end
  %4 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %list.addr, align 8, !dbg !6111
  %packet2 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %4, i32 0, i32 0, !dbg !6114
  %5 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet2, align 8, !dbg !6114
  %type3 = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %5, i32 0, i32 0, !dbg !6115
  %6 = load i32, i32* %type3, align 8, !dbg !6115
  %7 = load i32, i32* %type.addr, align 4, !dbg !6116
  %cmp = icmp eq i32 %6, %7, !dbg !6117
  br i1 %cmp, label %if.then, label %if.end, !dbg !6118

if.then:                                          ; preds = %while.body
  %8 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %list.addr, align 8, !dbg !6119
  store %struct.QDM2SubPNode* %8, %struct.QDM2SubPNode** %retval, align 8, !dbg !6120
  br label %return, !dbg !6120

if.end:                                           ; preds = %while.body
  %9 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %list.addr, align 8, !dbg !6121
  %next = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %9, i32 0, i32 1, !dbg !6122
  %10 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %next, align 8, !dbg !6122
  store %struct.QDM2SubPNode* %10, %struct.QDM2SubPNode** %list.addr, align 8, !dbg !6123
  br label %while.cond, !dbg !6124, !llvm.loop !6126

while.end:                                        ; preds = %land.end
  store %struct.QDM2SubPNode* null, %struct.QDM2SubPNode** %retval, align 8, !dbg !6127
  br label %return, !dbg !6127

return:                                           ; preds = %while.end, %if.then
  %11 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %retval, align 8, !dbg !6128
  ret %struct.QDM2SubPNode* %11, !dbg !6128
}

; Function Attrs: nounwind uwtable
define internal i32 @process_subpacket_9(%struct.QDM2Context* %q, %struct.QDM2SubPNode* %node) #1 !dbg !6129 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.QDM2Context*, align 8
  %node.addr = alloca %struct.QDM2SubPNode*, align 8
  %gb = alloca %struct.GetBitContext, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %ch = alloca i32, align 4
  %run = alloca i32, align 4
  %level = alloca i32, align 4
  %diff = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !6132, metadata !1868), !dbg !6133
  store %struct.QDM2SubPNode* %node, %struct.QDM2SubPNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2SubPNode** %node.addr, metadata !6134, metadata !1868), !dbg !6135
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !6136, metadata !1868), !dbg !6137
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6138, metadata !1868), !dbg !6139
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6140, metadata !1868), !dbg !6141
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6142, metadata !1868), !dbg !6143
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6144, metadata !1868), !dbg !6145
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6146, metadata !1868), !dbg !6147
  call void @llvm.dbg.declare(metadata i32* %run, metadata !6148, metadata !1868), !dbg !6149
  call void @llvm.dbg.declare(metadata i32* %level, metadata !6150, metadata !1868), !dbg !6151
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !6152, metadata !1868), !dbg !6153
  %0 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %node.addr, align 8, !dbg !6154
  %packet = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %0, i32 0, i32 0, !dbg !6155
  %1 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet, align 8, !dbg !6155
  %data = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %1, i32 0, i32 2, !dbg !6156
  %2 = load i8*, i8** %data, align 8, !dbg !6156
  %3 = load %struct.QDM2SubPNode*, %struct.QDM2SubPNode** %node.addr, align 8, !dbg !6157
  %packet1 = getelementptr inbounds %struct.QDM2SubPNode, %struct.QDM2SubPNode* %3, i32 0, i32 0, !dbg !6158
  %4 = load %struct.QDM2SubPacket*, %struct.QDM2SubPacket** %packet1, align 8, !dbg !6158
  %size = getelementptr inbounds %struct.QDM2SubPacket, %struct.QDM2SubPacket* %4, i32 0, i32 1, !dbg !6159
  %5 = load i32, i32* %size, align 4, !dbg !6159
  %mul = mul i32 %5, 8, !dbg !6160
  %call = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %2, i32 %mul), !dbg !6161
  %6 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6162
  %sub_sampling = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %6, i32 0, i32 9, !dbg !6163
  %7 = load i32, i32* %sub_sampling, align 4, !dbg !6163
  %cmp = icmp sge i32 %7, 2, !dbg !6164
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6165

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6166

cond.false:                                       ; preds = %entry
  %8 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6168
  %sub_sampling2 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %8, i32 0, i32 9, !dbg !6170
  %9 = load i32, i32* %sub_sampling2, align 4, !dbg !6170
  %shl = shl i32 8, %9, !dbg !6171
  br label %cond.end, !dbg !6172

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 30, %cond.true ], [ %shl, %cond.false ], !dbg !6173
  %sub = sub nsw i32 %cond, 1, !dbg !6175
  %idxprom = sext i32 %sub to i64, !dbg !6176
  %10 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6177
  %coeff_per_sb_select = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %10, i32 0, i32 10, !dbg !6178
  %11 = load i32, i32* %coeff_per_sb_select, align 8, !dbg !6178
  %idxprom3 = sext i32 %11 to i64, !dbg !6176
  %arrayidx = getelementptr inbounds [3 x [30 x i8]], [3 x [30 x i8]]* @coeff_per_sb_for_avg, i64 0, i64 %idxprom3, !dbg !6176
  %arrayidx4 = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !6176
  %12 = load i8, i8* %arrayidx4, align 1, !dbg !6176
  %conv = zext i8 %12 to i32, !dbg !6176
  %add = add nsw i32 %conv, 1, !dbg !6179
  store i32 %add, i32* %n, align 4, !dbg !6180
  store i32 1, i32* %i, align 4, !dbg !6181
  br label %for.cond, !dbg !6183

for.cond:                                         ; preds = %for.inc49, %cond.end
  %13 = load i32, i32* %i, align 4, !dbg !6184
  %14 = load i32, i32* %n, align 4, !dbg !6187
  %cmp5 = icmp slt i32 %13, %14, !dbg !6188
  br i1 %cmp5, label %for.body, label %for.end51, !dbg !6189

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %ch, align 4, !dbg !6190
  br label %for.cond7, !dbg !6192

for.cond7:                                        ; preds = %for.inc46, %for.body
  %15 = load i32, i32* %ch, align 4, !dbg !6193
  %16 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6196
  %nb_channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %16, i32 0, i32 0, !dbg !6197
  %17 = load i32, i32* %nb_channels, align 32, !dbg !6197
  %cmp8 = icmp slt i32 %15, %17, !dbg !6198
  br i1 %cmp8, label %for.body10, label %for.end48, !dbg !6199

for.body10:                                       ; preds = %for.cond7
  %call11 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %gb, %struct.VLC* @vlc_tab_level, i32 0, i32 2), !dbg !6200
  store i32 %call11, i32* %level, align 4, !dbg !6202
  %18 = load i32, i32* %level, align 4, !dbg !6203
  %conv12 = trunc i32 %18 to i8, !dbg !6203
  %19 = load i32, i32* %i, align 4, !dbg !6204
  %idxprom13 = sext i32 %19 to i64, !dbg !6205
  %20 = load i32, i32* %ch, align 4, !dbg !6206
  %idxprom14 = sext i32 %20 to i64, !dbg !6205
  %21 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6205
  %quantized_coeffs = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %21, i32 0, i32 40, !dbg !6207
  %arrayidx15 = getelementptr inbounds [2 x [10 x [8 x i8]]], [2 x [10 x [8 x i8]]]* %quantized_coeffs, i64 0, i64 %idxprom14, !dbg !6205
  %arrayidx16 = getelementptr inbounds [10 x [8 x i8]], [10 x [8 x i8]]* %arrayidx15, i64 0, i64 %idxprom13, !dbg !6205
  %arrayidx17 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx16, i64 0, i64 0, !dbg !6205
  store i8 %conv12, i8* %arrayidx17, align 8, !dbg !6208
  store i32 0, i32* %j, align 4, !dbg !6209
  br label %for.cond18, !dbg !6211

for.cond18:                                       ; preds = %for.end, %for.body10
  %22 = load i32, i32* %j, align 4, !dbg !6212
  %cmp19 = icmp slt i32 %22, 7, !dbg !6215
  br i1 %cmp19, label %for.body21, label %for.end45, !dbg !6216

for.body21:                                       ; preds = %for.cond18
  %call22 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %gb, %struct.VLC* @vlc_tab_run, i32 0, i32 1), !dbg !6217
  %add23 = add nsw i32 %call22, 1, !dbg !6219
  store i32 %add23, i32* %run, align 4, !dbg !6220
  %call24 = call i32 @qdm2_get_se_vlc(%struct.VLC* @vlc_tab_diff, %struct.GetBitContext* %gb, i32 2), !dbg !6221
  store i32 %call24, i32* %diff, align 4, !dbg !6222
  %23 = load i32, i32* %j, align 4, !dbg !6223
  %24 = load i32, i32* %run, align 4, !dbg !6225
  %add25 = add nsw i32 %23, %24, !dbg !6226
  %cmp26 = icmp sge i32 %add25, 8, !dbg !6227
  br i1 %cmp26, label %if.then, label %if.end, !dbg !6228

if.then:                                          ; preds = %for.body21
  store i32 -1, i32* %retval, align 4, !dbg !6229
  br label %return, !dbg !6229

if.end:                                           ; preds = %for.body21
  store i32 1, i32* %k, align 4, !dbg !6230
  br label %for.cond28, !dbg !6232

for.cond28:                                       ; preds = %for.inc, %if.end
  %25 = load i32, i32* %k, align 4, !dbg !6233
  %26 = load i32, i32* %run, align 4, !dbg !6236
  %cmp29 = icmp sle i32 %25, %26, !dbg !6237
  br i1 %cmp29, label %for.body31, label %for.end, !dbg !6238

for.body31:                                       ; preds = %for.cond28
  %27 = load i32, i32* %level, align 4, !dbg !6239
  %28 = load i32, i32* %k, align 4, !dbg !6240
  %29 = load i32, i32* %diff, align 4, !dbg !6241
  %mul32 = mul nsw i32 %28, %29, !dbg !6242
  %30 = load i32, i32* %run, align 4, !dbg !6243
  %div = sdiv i32 %mul32, %30, !dbg !6244
  %add33 = add nsw i32 %27, %div, !dbg !6245
  %conv34 = trunc i32 %add33 to i8, !dbg !6246
  %31 = load i32, i32* %j, align 4, !dbg !6247
  %32 = load i32, i32* %k, align 4, !dbg !6248
  %add35 = add nsw i32 %31, %32, !dbg !6249
  %idxprom36 = sext i32 %add35 to i64, !dbg !6250
  %33 = load i32, i32* %i, align 4, !dbg !6251
  %idxprom37 = sext i32 %33 to i64, !dbg !6250
  %34 = load i32, i32* %ch, align 4, !dbg !6252
  %idxprom38 = sext i32 %34 to i64, !dbg !6250
  %35 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6250
  %quantized_coeffs39 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %35, i32 0, i32 40, !dbg !6253
  %arrayidx40 = getelementptr inbounds [2 x [10 x [8 x i8]]], [2 x [10 x [8 x i8]]]* %quantized_coeffs39, i64 0, i64 %idxprom38, !dbg !6250
  %arrayidx41 = getelementptr inbounds [10 x [8 x i8]], [10 x [8 x i8]]* %arrayidx40, i64 0, i64 %idxprom37, !dbg !6250
  %arrayidx42 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx41, i64 0, i64 %idxprom36, !dbg !6250
  store i8 %conv34, i8* %arrayidx42, align 1, !dbg !6254
  br label %for.inc, !dbg !6250

for.inc:                                          ; preds = %for.body31
  %36 = load i32, i32* %k, align 4, !dbg !6255
  %inc = add nsw i32 %36, 1, !dbg !6255
  store i32 %inc, i32* %k, align 4, !dbg !6255
  br label %for.cond28, !dbg !6257, !llvm.loop !6258

for.end:                                          ; preds = %for.cond28
  %37 = load i32, i32* %diff, align 4, !dbg !6260
  %38 = load i32, i32* %level, align 4, !dbg !6261
  %add43 = add nsw i32 %38, %37, !dbg !6261
  store i32 %add43, i32* %level, align 4, !dbg !6261
  %39 = load i32, i32* %run, align 4, !dbg !6262
  %40 = load i32, i32* %j, align 4, !dbg !6263
  %add44 = add nsw i32 %40, %39, !dbg !6263
  store i32 %add44, i32* %j, align 4, !dbg !6263
  br label %for.cond18, !dbg !6264, !llvm.loop !6266

for.end45:                                        ; preds = %for.cond18
  br label %for.inc46, !dbg !6268

for.inc46:                                        ; preds = %for.end45
  %41 = load i32, i32* %ch, align 4, !dbg !6269
  %inc47 = add nsw i32 %41, 1, !dbg !6269
  store i32 %inc47, i32* %ch, align 4, !dbg !6269
  br label %for.cond7, !dbg !6271, !llvm.loop !6272

for.end48:                                        ; preds = %for.cond7
  br label %for.inc49, !dbg !6274

for.inc49:                                        ; preds = %for.end48
  %42 = load i32, i32* %i, align 4, !dbg !6276
  %inc50 = add nsw i32 %42, 1, !dbg !6276
  store i32 %inc50, i32* %i, align 4, !dbg !6276
  br label %for.cond, !dbg !6278, !llvm.loop !6279

for.end51:                                        ; preds = %for.cond
  store i32 0, i32* %ch, align 4, !dbg !6281
  br label %for.cond52, !dbg !6283

for.cond52:                                       ; preds = %for.inc70, %for.end51
  %43 = load i32, i32* %ch, align 4, !dbg !6284
  %44 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6287
  %nb_channels53 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %44, i32 0, i32 0, !dbg !6288
  %45 = load i32, i32* %nb_channels53, align 32, !dbg !6288
  %cmp54 = icmp slt i32 %43, %45, !dbg !6289
  br i1 %cmp54, label %for.body56, label %for.end72, !dbg !6290

for.body56:                                       ; preds = %for.cond52
  store i32 0, i32* %i, align 4, !dbg !6291
  br label %for.cond57, !dbg !6293

for.cond57:                                       ; preds = %for.inc67, %for.body56
  %46 = load i32, i32* %i, align 4, !dbg !6294
  %cmp58 = icmp slt i32 %46, 8, !dbg !6297
  br i1 %cmp58, label %for.body60, label %for.end69, !dbg !6298

for.body60:                                       ; preds = %for.cond57
  %47 = load i32, i32* %i, align 4, !dbg !6299
  %idxprom61 = sext i32 %47 to i64, !dbg !6300
  %48 = load i32, i32* %ch, align 4, !dbg !6301
  %idxprom62 = sext i32 %48 to i64, !dbg !6300
  %49 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6300
  %quantized_coeffs63 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %49, i32 0, i32 40, !dbg !6302
  %arrayidx64 = getelementptr inbounds [2 x [10 x [8 x i8]]], [2 x [10 x [8 x i8]]]* %quantized_coeffs63, i64 0, i64 %idxprom62, !dbg !6300
  %arrayidx65 = getelementptr inbounds [10 x [8 x i8]], [10 x [8 x i8]]* %arrayidx64, i64 0, i64 0, !dbg !6300
  %arrayidx66 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx65, i64 0, i64 %idxprom61, !dbg !6300
  store i8 0, i8* %arrayidx66, align 1, !dbg !6303
  br label %for.inc67, !dbg !6300

for.inc67:                                        ; preds = %for.body60
  %50 = load i32, i32* %i, align 4, !dbg !6304
  %inc68 = add nsw i32 %50, 1, !dbg !6304
  store i32 %inc68, i32* %i, align 4, !dbg !6304
  br label %for.cond57, !dbg !6306, !llvm.loop !6307

for.end69:                                        ; preds = %for.cond57
  br label %for.inc70, !dbg !6309

for.inc70:                                        ; preds = %for.end69
  %51 = load i32, i32* %ch, align 4, !dbg !6311
  %inc71 = add nsw i32 %51, 1, !dbg !6311
  store i32 %inc71, i32* %ch, align 4, !dbg !6311
  br label %for.cond52, !dbg !6313, !llvm.loop !6314

for.end72:                                        ; preds = %for.cond52
  store i32 0, i32* %retval, align 4, !dbg !6316
  br label %return, !dbg !6316

return:                                           ; preds = %for.end72, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !6317
  ret i32 %52, !dbg !6317
}

; Function Attrs: nounwind uwtable
define internal i32 @qdm2_get_se_vlc(%struct.VLC* %vlc, %struct.GetBitContext* %gb, i32 %depth) #1 !dbg !6318 {
entry:
  %vlc.addr = alloca %struct.VLC*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %depth.addr = alloca i32, align 4
  %value = alloca i32, align 4
  store %struct.VLC* %vlc, %struct.VLC** %vlc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc.addr, metadata !6321, metadata !1868), !dbg !6322
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6323, metadata !1868), !dbg !6324
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !6325, metadata !1868), !dbg !6326
  call void @llvm.dbg.declare(metadata i32* %value, metadata !6327, metadata !1868), !dbg !6328
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6329
  %1 = load %struct.VLC*, %struct.VLC** %vlc.addr, align 8, !dbg !6330
  %2 = load i32, i32* %depth.addr, align 4, !dbg !6331
  %call = call i32 @qdm2_get_vlc(%struct.GetBitContext* %0, %struct.VLC* %1, i32 0, i32 %2), !dbg !6332
  store i32 %call, i32* %value, align 4, !dbg !6328
  %3 = load i32, i32* %value, align 4, !dbg !6333
  %and = and i32 %3, 1, !dbg !6334
  %tobool = icmp ne i32 %and, 0, !dbg !6334
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6335

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %value, align 4, !dbg !6336
  %add = add nsw i32 %4, 1, !dbg !6338
  %shr = ashr i32 %add, 1, !dbg !6339
  br label %cond.end, !dbg !6340

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %value, align 4, !dbg !6341
  %shr1 = ashr i32 %5, 1, !dbg !6343
  %sub = sub nsw i32 0, %shr1, !dbg !6344
  br label %cond.end, !dbg !6345

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %shr, %cond.true ], [ %sub, %cond.false ], !dbg !6346
  ret i32 %cond, !dbg !6348
}

; Function Attrs: nounwind uwtable
define internal void @init_tone_level_dequantization(%struct.QDM2Context* %q, %struct.GetBitContext* %gb) #1 !dbg !6349 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %sb = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %ch = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !6352, metadata !1868), !dbg !6353
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6354, metadata !1868), !dbg !6355
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !6356, metadata !1868), !dbg !6357
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6358, metadata !1868), !dbg !6359
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6360, metadata !1868), !dbg !6361
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6362, metadata !1868), !dbg !6363
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6364, metadata !1868), !dbg !6365
  store i32 0, i32* %ch, align 4, !dbg !6366
  br label %for.cond, !dbg !6368

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !6369
  %1 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6372
  %nb_channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %1, i32 0, i32 0, !dbg !6373
  %2 = load i32, i32* %nb_channels, align 32, !dbg !6373
  %cmp = icmp slt i32 %0, %2, !dbg !6374
  br i1 %cmp, label %for.body, label %for.end, !dbg !6375

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %ch, align 4, !dbg !6376
  %idxprom = sext i32 %3 to i64, !dbg !6378
  %4 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6378
  %quantized_coeffs = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %4, i32 0, i32 40, !dbg !6379
  %arrayidx = getelementptr inbounds [2 x [10 x [8 x i8]]], [2 x [10 x [8 x i8]]]* %quantized_coeffs, i64 0, i64 %idxprom, !dbg !6378
  %arrayidx1 = getelementptr inbounds [10 x [8 x i8]], [10 x [8 x i8]]* %arrayidx, i64 0, i64 0, !dbg !6378
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx1, i32 0, i32 0, !dbg !6378
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6380
  %call = call i32 @init_quantized_coeffs_elem0(i8* %arraydecay, %struct.GetBitContext* %5), !dbg !6381
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6382
  %call2 = call i32 @get_bits_left(%struct.GetBitContext* %6), !dbg !6384
  %cmp3 = icmp slt i32 %call2, 16, !dbg !6385
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6386

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %ch, align 4, !dbg !6387
  %idxprom4 = sext i32 %7 to i64, !dbg !6389
  %8 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6389
  %quantized_coeffs5 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %8, i32 0, i32 40, !dbg !6390
  %arrayidx6 = getelementptr inbounds [2 x [10 x [8 x i8]]], [2 x [10 x [8 x i8]]]* %quantized_coeffs5, i64 0, i64 %idxprom4, !dbg !6389
  %arrayidx7 = getelementptr inbounds [10 x [8 x i8]], [10 x [8 x i8]]* %arrayidx6, i64 0, i64 0, !dbg !6389
  %arraydecay8 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx7, i32 0, i32 0, !dbg !6391
  call void @llvm.memset.p0i8.i64(i8* %arraydecay8, i8 0, i64 8, i32 16, i1 false), !dbg !6391
  br label %for.end, !dbg !6392

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6393

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %ch, align 4, !dbg !6394
  %inc = add nsw i32 %9, 1, !dbg !6394
  store i32 %inc, i32* %ch, align 4, !dbg !6394
  br label %for.cond, !dbg !6396, !llvm.loop !6397

for.end:                                          ; preds = %if.then, %for.cond
  %10 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6399
  %sub_sampling = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %10, i32 0, i32 9, !dbg !6400
  %11 = load i32, i32* %sub_sampling, align 4, !dbg !6400
  %add = add nsw i32 %11, 1, !dbg !6401
  store i32 %add, i32* %n, align 4, !dbg !6402
  store i32 0, i32* %sb, align 4, !dbg !6403
  br label %for.cond9, !dbg !6405

for.cond9:                                        ; preds = %for.inc67, %for.end
  %12 = load i32, i32* %sb, align 4, !dbg !6406
  %13 = load i32, i32* %n, align 4, !dbg !6409
  %cmp10 = icmp slt i32 %12, %13, !dbg !6410
  br i1 %cmp10, label %for.body11, label %for.end69, !dbg !6411

for.body11:                                       ; preds = %for.cond9
  store i32 0, i32* %ch, align 4, !dbg !6412
  br label %for.cond12, !dbg !6414

for.cond12:                                       ; preds = %for.inc64, %for.body11
  %14 = load i32, i32* %ch, align 4, !dbg !6415
  %15 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6418
  %nb_channels13 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %15, i32 0, i32 0, !dbg !6419
  %16 = load i32, i32* %nb_channels13, align 32, !dbg !6419
  %cmp14 = icmp slt i32 %14, %16, !dbg !6420
  br i1 %cmp14, label %for.body15, label %for.end66, !dbg !6421

for.body15:                                       ; preds = %for.cond12
  store i32 0, i32* %j, align 4, !dbg !6422
  br label %for.cond16, !dbg !6424

for.cond16:                                       ; preds = %for.inc61, %for.body15
  %17 = load i32, i32* %j, align 4, !dbg !6425
  %cmp17 = icmp slt i32 %17, 8, !dbg !6428
  br i1 %cmp17, label %for.body18, label %for.end63, !dbg !6429

for.body18:                                       ; preds = %for.cond16
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6430
  %call19 = call i32 @get_bits_left(%struct.GetBitContext* %18), !dbg !6433
  %cmp20 = icmp slt i32 %call19, 1, !dbg !6434
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !6435

if.then21:                                        ; preds = %for.body18
  br label %for.end63, !dbg !6436

if.end22:                                         ; preds = %for.body18
  %19 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6437
  %call23 = call i32 @get_bits1(%struct.GetBitContext* %19), !dbg !6439
  %tobool = icmp ne i32 %call23, 0, !dbg !6439
  br i1 %tobool, label %if.then24, label %if.else, !dbg !6440

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4, !dbg !6441
  br label %for.cond25, !dbg !6444

for.cond25:                                       ; preds = %for.inc41, %if.then24
  %20 = load i32, i32* %k, align 4, !dbg !6445
  %cmp26 = icmp slt i32 %20, 8, !dbg !6448
  br i1 %cmp26, label %for.body27, label %for.end43, !dbg !6449

for.body27:                                       ; preds = %for.cond25
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6450
  %call28 = call i32 @get_bits_left(%struct.GetBitContext* %21), !dbg !6453
  %cmp29 = icmp slt i32 %call28, 16, !dbg !6454
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !6455

if.then30:                                        ; preds = %for.body27
  br label %for.end43, !dbg !6456

if.end31:                                         ; preds = %for.body27
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6457
  %call32 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %22, %struct.VLC* @vlc_tab_tone_level_idx_hi1, i32 0, i32 2), !dbg !6458
  %conv = trunc i32 %call32 to i8, !dbg !6458
  %23 = load i32, i32* %k, align 4, !dbg !6459
  %idxprom33 = sext i32 %23 to i64, !dbg !6460
  %24 = load i32, i32* %j, align 4, !dbg !6461
  %idxprom34 = sext i32 %24 to i64, !dbg !6460
  %25 = load i32, i32* %sb, align 4, !dbg !6462
  %idxprom35 = sext i32 %25 to i64, !dbg !6460
  %26 = load i32, i32* %ch, align 4, !dbg !6463
  %idxprom36 = sext i32 %26 to i64, !dbg !6460
  %27 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6460
  %tone_level_idx_hi1 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %27, i32 0, i32 42, !dbg !6464
  %arrayidx37 = getelementptr inbounds [2 x [3 x [8 x [8 x i8]]]], [2 x [3 x [8 x [8 x i8]]]]* %tone_level_idx_hi1, i64 0, i64 %idxprom36, !dbg !6460
  %arrayidx38 = getelementptr inbounds [3 x [8 x [8 x i8]]], [3 x [8 x [8 x i8]]]* %arrayidx37, i64 0, i64 %idxprom35, !dbg !6460
  %arrayidx39 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %arrayidx38, i64 0, i64 %idxprom34, !dbg !6460
  %arrayidx40 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx39, i64 0, i64 %idxprom33, !dbg !6460
  store i8 %conv, i8* %arrayidx40, align 1, !dbg !6465
  br label %for.inc41, !dbg !6466

for.inc41:                                        ; preds = %if.end31
  %28 = load i32, i32* %k, align 4, !dbg !6467
  %inc42 = add nsw i32 %28, 1, !dbg !6467
  store i32 %inc42, i32* %k, align 4, !dbg !6467
  br label %for.cond25, !dbg !6469, !llvm.loop !6470

for.end43:                                        ; preds = %if.then30, %for.cond25
  br label %if.end60, !dbg !6472

if.else:                                          ; preds = %if.end22
  store i32 0, i32* %k, align 4, !dbg !6473
  br label %for.cond44, !dbg !6476

for.cond44:                                       ; preds = %for.inc57, %if.else
  %29 = load i32, i32* %k, align 4, !dbg !6477
  %cmp45 = icmp slt i32 %29, 8, !dbg !6480
  br i1 %cmp45, label %for.body47, label %for.end59, !dbg !6481

for.body47:                                       ; preds = %for.cond44
  %30 = load i32, i32* %k, align 4, !dbg !6482
  %idxprom48 = sext i32 %30 to i64, !dbg !6483
  %31 = load i32, i32* %j, align 4, !dbg !6484
  %idxprom49 = sext i32 %31 to i64, !dbg !6483
  %32 = load i32, i32* %sb, align 4, !dbg !6485
  %idxprom50 = sext i32 %32 to i64, !dbg !6483
  %33 = load i32, i32* %ch, align 4, !dbg !6486
  %idxprom51 = sext i32 %33 to i64, !dbg !6483
  %34 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6483
  %tone_level_idx_hi152 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %34, i32 0, i32 42, !dbg !6487
  %arrayidx53 = getelementptr inbounds [2 x [3 x [8 x [8 x i8]]]], [2 x [3 x [8 x [8 x i8]]]]* %tone_level_idx_hi152, i64 0, i64 %idxprom51, !dbg !6483
  %arrayidx54 = getelementptr inbounds [3 x [8 x [8 x i8]]], [3 x [8 x [8 x i8]]]* %arrayidx53, i64 0, i64 %idxprom50, !dbg !6483
  %arrayidx55 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %arrayidx54, i64 0, i64 %idxprom49, !dbg !6483
  %arrayidx56 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx55, i64 0, i64 %idxprom48, !dbg !6483
  store i8 0, i8* %arrayidx56, align 1, !dbg !6488
  br label %for.inc57, !dbg !6483

for.inc57:                                        ; preds = %for.body47
  %35 = load i32, i32* %k, align 4, !dbg !6489
  %inc58 = add nsw i32 %35, 1, !dbg !6489
  store i32 %inc58, i32* %k, align 4, !dbg !6489
  br label %for.cond44, !dbg !6491, !llvm.loop !6492

for.end59:                                        ; preds = %for.cond44
  br label %if.end60

if.end60:                                         ; preds = %for.end59, %for.end43
  br label %for.inc61, !dbg !6494

for.inc61:                                        ; preds = %if.end60
  %36 = load i32, i32* %j, align 4, !dbg !6495
  %inc62 = add nsw i32 %36, 1, !dbg !6495
  store i32 %inc62, i32* %j, align 4, !dbg !6495
  br label %for.cond16, !dbg !6497, !llvm.loop !6498

for.end63:                                        ; preds = %if.then21, %for.cond16
  br label %for.inc64, !dbg !6500

for.inc64:                                        ; preds = %for.end63
  %37 = load i32, i32* %ch, align 4, !dbg !6502
  %inc65 = add nsw i32 %37, 1, !dbg !6502
  store i32 %inc65, i32* %ch, align 4, !dbg !6502
  br label %for.cond12, !dbg !6504, !llvm.loop !6505

for.end66:                                        ; preds = %for.cond12
  br label %for.inc67, !dbg !6507

for.inc67:                                        ; preds = %for.end66
  %38 = load i32, i32* %sb, align 4, !dbg !6509
  %inc68 = add nsw i32 %38, 1, !dbg !6509
  store i32 %inc68, i32* %sb, align 4, !dbg !6509
  br label %for.cond9, !dbg !6511, !llvm.loop !6512

for.end69:                                        ; preds = %for.cond9
  %39 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6514
  %sub_sampling70 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %39, i32 0, i32 9, !dbg !6515
  %40 = load i32, i32* %sub_sampling70, align 4, !dbg !6515
  %cmp71 = icmp sge i32 %40, 2, !dbg !6516
  br i1 %cmp71, label %cond.true, label %cond.false, !dbg !6517

cond.true:                                        ; preds = %for.end69
  br label %cond.end, !dbg !6518

cond.false:                                       ; preds = %for.end69
  %41 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6520
  %sub_sampling73 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %41, i32 0, i32 9, !dbg !6522
  %42 = load i32, i32* %sub_sampling73, align 4, !dbg !6522
  %shl = shl i32 8, %42, !dbg !6523
  br label %cond.end, !dbg !6524

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 30, %cond.true ], [ %shl, %cond.false ], !dbg !6525
  %sub = sub nsw i32 %cond, 4, !dbg !6527
  store i32 %sub, i32* %n, align 4, !dbg !6528
  store i32 0, i32* %sb, align 4, !dbg !6529
  br label %for.cond74, !dbg !6531

for.cond74:                                       ; preds = %for.inc123, %cond.end
  %43 = load i32, i32* %sb, align 4, !dbg !6532
  %44 = load i32, i32* %n, align 4, !dbg !6535
  %cmp75 = icmp slt i32 %43, %44, !dbg !6536
  br i1 %cmp75, label %for.body77, label %for.end125, !dbg !6537

for.body77:                                       ; preds = %for.cond74
  store i32 0, i32* %ch, align 4, !dbg !6538
  br label %for.cond78, !dbg !6540

for.cond78:                                       ; preds = %for.inc120, %for.body77
  %45 = load i32, i32* %ch, align 4, !dbg !6541
  %46 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6544
  %nb_channels79 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %46, i32 0, i32 0, !dbg !6545
  %47 = load i32, i32* %nb_channels79, align 32, !dbg !6545
  %cmp80 = icmp slt i32 %45, %47, !dbg !6546
  br i1 %cmp80, label %for.body82, label %for.end122, !dbg !6547

for.body82:                                       ; preds = %for.cond78
  %48 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6548
  %call83 = call i32 @get_bits_left(%struct.GetBitContext* %48), !dbg !6551
  %cmp84 = icmp slt i32 %call83, 16, !dbg !6552
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !6553

if.then86:                                        ; preds = %for.body82
  br label %for.end122, !dbg !6554

if.end87:                                         ; preds = %for.body82
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6555
  %call88 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %49, %struct.VLC* @vlc_tab_tone_level_idx_hi2, i32 0, i32 2), !dbg !6556
  %conv89 = trunc i32 %call88 to i8, !dbg !6556
  %50 = load i32, i32* %sb, align 4, !dbg !6557
  %idxprom90 = sext i32 %50 to i64, !dbg !6558
  %51 = load i32, i32* %ch, align 4, !dbg !6559
  %idxprom91 = sext i32 %51 to i64, !dbg !6558
  %52 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6558
  %tone_level_idx_hi2 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %52, i32 0, i32 44, !dbg !6560
  %arrayidx92 = getelementptr inbounds [2 x [26 x i8]], [2 x [26 x i8]]* %tone_level_idx_hi2, i64 0, i64 %idxprom91, !dbg !6558
  %arrayidx93 = getelementptr inbounds [26 x i8], [26 x i8]* %arrayidx92, i64 0, i64 %idxprom90, !dbg !6558
  store i8 %conv89, i8* %arrayidx93, align 1, !dbg !6561
  %53 = load i32, i32* %sb, align 4, !dbg !6562
  %cmp94 = icmp sgt i32 %53, 19, !dbg !6564
  br i1 %cmp94, label %if.then96, label %if.else105, !dbg !6565

if.then96:                                        ; preds = %if.end87
  %54 = load i32, i32* %sb, align 4, !dbg !6566
  %idxprom97 = sext i32 %54 to i64, !dbg !6567
  %55 = load i32, i32* %ch, align 4, !dbg !6568
  %idxprom98 = sext i32 %55 to i64, !dbg !6567
  %56 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6567
  %tone_level_idx_hi299 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %56, i32 0, i32 44, !dbg !6569
  %arrayidx100 = getelementptr inbounds [2 x [26 x i8]], [2 x [26 x i8]]* %tone_level_idx_hi299, i64 0, i64 %idxprom98, !dbg !6567
  %arrayidx101 = getelementptr inbounds [26 x i8], [26 x i8]* %arrayidx100, i64 0, i64 %idxprom97, !dbg !6567
  %57 = load i8, i8* %arrayidx101, align 1, !dbg !6570
  %conv102 = sext i8 %57 to i32, !dbg !6570
  %sub103 = sub nsw i32 %conv102, 16, !dbg !6570
  %conv104 = trunc i32 %sub103 to i8, !dbg !6570
  store i8 %conv104, i8* %arrayidx101, align 1, !dbg !6570
  br label %if.end119, !dbg !6567

if.else105:                                       ; preds = %if.end87
  store i32 0, i32* %j, align 4, !dbg !6571
  br label %for.cond106, !dbg !6573

for.cond106:                                      ; preds = %for.inc116, %if.else105
  %58 = load i32, i32* %j, align 4, !dbg !6574
  %cmp107 = icmp slt i32 %58, 8, !dbg !6577
  br i1 %cmp107, label %for.body109, label %for.end118, !dbg !6578

for.body109:                                      ; preds = %for.cond106
  %59 = load i32, i32* %j, align 4, !dbg !6579
  %idxprom110 = sext i32 %59 to i64, !dbg !6580
  %60 = load i32, i32* %sb, align 4, !dbg !6581
  %idxprom111 = sext i32 %60 to i64, !dbg !6580
  %61 = load i32, i32* %ch, align 4, !dbg !6582
  %idxprom112 = sext i32 %61 to i64, !dbg !6580
  %62 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6580
  %tone_level_idx_mid = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %62, i32 0, i32 43, !dbg !6583
  %arrayidx113 = getelementptr inbounds [2 x [26 x [8 x i8]]], [2 x [26 x [8 x i8]]]* %tone_level_idx_mid, i64 0, i64 %idxprom112, !dbg !6580
  %arrayidx114 = getelementptr inbounds [26 x [8 x i8]], [26 x [8 x i8]]* %arrayidx113, i64 0, i64 %idxprom111, !dbg !6580
  %arrayidx115 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx114, i64 0, i64 %idxprom110, !dbg !6580
  store i8 -16, i8* %arrayidx115, align 1, !dbg !6584
  br label %for.inc116, !dbg !6580

for.inc116:                                       ; preds = %for.body109
  %63 = load i32, i32* %j, align 4, !dbg !6585
  %inc117 = add nsw i32 %63, 1, !dbg !6585
  store i32 %inc117, i32* %j, align 4, !dbg !6585
  br label %for.cond106, !dbg !6587, !llvm.loop !6588

for.end118:                                       ; preds = %for.cond106
  br label %if.end119

if.end119:                                        ; preds = %for.end118, %if.then96
  br label %for.inc120, !dbg !6590

for.inc120:                                       ; preds = %if.end119
  %64 = load i32, i32* %ch, align 4, !dbg !6591
  %inc121 = add nsw i32 %64, 1, !dbg !6591
  store i32 %inc121, i32* %ch, align 4, !dbg !6591
  br label %for.cond78, !dbg !6593, !llvm.loop !6594

for.end122:                                       ; preds = %if.then86, %for.cond78
  br label %for.inc123, !dbg !6596

for.inc123:                                       ; preds = %for.end122
  %65 = load i32, i32* %sb, align 4, !dbg !6598
  %inc124 = add nsw i32 %65, 1, !dbg !6598
  store i32 %inc124, i32* %sb, align 4, !dbg !6598
  br label %for.cond74, !dbg !6600, !llvm.loop !6601

for.end125:                                       ; preds = %for.cond74
  %66 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6603
  %sub_sampling126 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %66, i32 0, i32 9, !dbg !6604
  %67 = load i32, i32* %sub_sampling126, align 4, !dbg !6604
  %cmp127 = icmp sge i32 %67, 2, !dbg !6605
  br i1 %cmp127, label %cond.true129, label %cond.false130, !dbg !6606

cond.true129:                                     ; preds = %for.end125
  br label %cond.end133, !dbg !6607

cond.false130:                                    ; preds = %for.end125
  %68 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6608
  %sub_sampling131 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %68, i32 0, i32 9, !dbg !6609
  %69 = load i32, i32* %sub_sampling131, align 4, !dbg !6609
  %shl132 = shl i32 8, %69, !dbg !6610
  br label %cond.end133, !dbg !6611

cond.end133:                                      ; preds = %cond.false130, %cond.true129
  %cond134 = phi i32 [ 30, %cond.true129 ], [ %shl132, %cond.false130 ], !dbg !6612
  %sub135 = sub nsw i32 %cond134, 5, !dbg !6613
  store i32 %sub135, i32* %n, align 4, !dbg !6614
  store i32 0, i32* %sb, align 4, !dbg !6615
  br label %for.cond136, !dbg !6617

for.cond136:                                      ; preds = %for.inc170, %cond.end133
  %70 = load i32, i32* %sb, align 4, !dbg !6618
  %71 = load i32, i32* %n, align 4, !dbg !6621
  %cmp137 = icmp slt i32 %70, %71, !dbg !6622
  br i1 %cmp137, label %for.body139, label %for.end172, !dbg !6623

for.body139:                                      ; preds = %for.cond136
  store i32 0, i32* %ch, align 4, !dbg !6624
  br label %for.cond140, !dbg !6626

for.cond140:                                      ; preds = %for.inc167, %for.body139
  %72 = load i32, i32* %ch, align 4, !dbg !6627
  %73 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6630
  %nb_channels141 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %73, i32 0, i32 0, !dbg !6631
  %74 = load i32, i32* %nb_channels141, align 32, !dbg !6631
  %cmp142 = icmp slt i32 %72, %74, !dbg !6632
  br i1 %cmp142, label %for.body144, label %for.end169, !dbg !6633

for.body144:                                      ; preds = %for.cond140
  store i32 0, i32* %j, align 4, !dbg !6634
  br label %for.cond145, !dbg !6636

for.cond145:                                      ; preds = %for.inc164, %for.body144
  %75 = load i32, i32* %j, align 4, !dbg !6637
  %cmp146 = icmp slt i32 %75, 8, !dbg !6640
  br i1 %cmp146, label %for.body148, label %for.end166, !dbg !6641

for.body148:                                      ; preds = %for.cond145
  %76 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6642
  %call149 = call i32 @get_bits_left(%struct.GetBitContext* %76), !dbg !6645
  %cmp150 = icmp slt i32 %call149, 16, !dbg !6646
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !6647

if.then152:                                       ; preds = %for.body148
  br label %for.end166, !dbg !6648

if.end153:                                        ; preds = %for.body148
  %77 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6649
  %call154 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %77, %struct.VLC* @vlc_tab_tone_level_idx_mid, i32 0, i32 2), !dbg !6650
  %sub155 = sub nsw i32 %call154, 32, !dbg !6651
  %conv156 = trunc i32 %sub155 to i8, !dbg !6650
  %78 = load i32, i32* %j, align 4, !dbg !6652
  %idxprom157 = sext i32 %78 to i64, !dbg !6653
  %79 = load i32, i32* %sb, align 4, !dbg !6654
  %idxprom158 = sext i32 %79 to i64, !dbg !6653
  %80 = load i32, i32* %ch, align 4, !dbg !6655
  %idxprom159 = sext i32 %80 to i64, !dbg !6653
  %81 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6653
  %tone_level_idx_mid160 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %81, i32 0, i32 43, !dbg !6656
  %arrayidx161 = getelementptr inbounds [2 x [26 x [8 x i8]]], [2 x [26 x [8 x i8]]]* %tone_level_idx_mid160, i64 0, i64 %idxprom159, !dbg !6653
  %arrayidx162 = getelementptr inbounds [26 x [8 x i8]], [26 x [8 x i8]]* %arrayidx161, i64 0, i64 %idxprom158, !dbg !6653
  %arrayidx163 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx162, i64 0, i64 %idxprom157, !dbg !6653
  store i8 %conv156, i8* %arrayidx163, align 1, !dbg !6657
  br label %for.inc164, !dbg !6658

for.inc164:                                       ; preds = %if.end153
  %82 = load i32, i32* %j, align 4, !dbg !6659
  %inc165 = add nsw i32 %82, 1, !dbg !6659
  store i32 %inc165, i32* %j, align 4, !dbg !6659
  br label %for.cond145, !dbg !6661, !llvm.loop !6662

for.end166:                                       ; preds = %if.then152, %for.cond145
  br label %for.inc167, !dbg !6664

for.inc167:                                       ; preds = %for.end166
  %83 = load i32, i32* %ch, align 4, !dbg !6666
  %inc168 = add nsw i32 %83, 1, !dbg !6666
  store i32 %inc168, i32* %ch, align 4, !dbg !6666
  br label %for.cond140, !dbg !6668, !llvm.loop !6669

for.end169:                                       ; preds = %for.cond140
  br label %for.inc170, !dbg !6671

for.inc170:                                       ; preds = %for.end169
  %84 = load i32, i32* %sb, align 4, !dbg !6673
  %inc171 = add nsw i32 %84, 1, !dbg !6673
  store i32 %inc171, i32* %sb, align 4, !dbg !6673
  br label %for.cond136, !dbg !6675, !llvm.loop !6676

for.end172:                                       ; preds = %for.cond136
  ret void, !dbg !6678
}

; Function Attrs: nounwind uwtable
define internal void @fill_tone_level_array(%struct.QDM2Context* %q, i32 %flag) #1 !dbg !6679 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %flag.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %sb = alloca i32, align 4
  %ch = alloca i32, align 4
  %sb_used = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tab = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !6680, metadata !1868), !dbg !6681
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !6682, metadata !1868), !dbg !6683
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6684, metadata !1868), !dbg !6685
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !6686, metadata !1868), !dbg !6687
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !6688, metadata !1868), !dbg !6689
  call void @llvm.dbg.declare(metadata i32* %sb_used, metadata !6690, metadata !1868), !dbg !6691
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6692, metadata !1868), !dbg !6693
  call void @llvm.dbg.declare(metadata i32* %tab, metadata !6694, metadata !1868), !dbg !6695
  store i32 0, i32* %ch, align 4, !dbg !6696
  br label %for.cond, !dbg !6698

for.cond:                                         ; preds = %for.inc79, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !6699
  %1 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6702
  %nb_channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %1, i32 0, i32 0, !dbg !6703
  %2 = load i32, i32* %nb_channels, align 32, !dbg !6703
  %cmp = icmp slt i32 %0, %2, !dbg !6704
  br i1 %cmp, label %for.body, label %for.end81, !dbg !6705

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %sb, align 4, !dbg !6706
  br label %for.cond2, !dbg !6708

for.cond2:                                        ; preds = %for.inc76, %for.body
  %3 = load i32, i32* %sb, align 4, !dbg !6709
  %cmp3 = icmp slt i32 %3, 30, !dbg !6712
  br i1 %cmp3, label %for.body4, label %for.end78, !dbg !6713

for.body4:                                        ; preds = %for.cond2
  store i32 0, i32* %i, align 4, !dbg !6714
  br label %for.cond5, !dbg !6716

for.cond5:                                        ; preds = %for.inc, %for.body4
  %4 = load i32, i32* %i, align 4, !dbg !6717
  %cmp6 = icmp slt i32 %4, 8, !dbg !6720
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !6721

for.body7:                                        ; preds = %for.cond5
  %5 = load i32, i32* %sb, align 4, !dbg !6722
  %idxprom = sext i32 %5 to i64, !dbg !6725
  %6 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6726
  %coeff_per_sb_select = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %6, i32 0, i32 10, !dbg !6727
  %7 = load i32, i32* %coeff_per_sb_select, align 8, !dbg !6727
  %idxprom8 = sext i32 %7 to i64, !dbg !6725
  %arrayidx = getelementptr inbounds [3 x [30 x i8]], [3 x [30 x i8]]* @coeff_per_sb_for_dequant, i64 0, i64 %idxprom8, !dbg !6725
  %arrayidx9 = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !6725
  %8 = load i8, i8* %arrayidx9, align 1, !dbg !6725
  %conv = zext i8 %8 to i32, !dbg !6725
  store i32 %conv, i32* %tab, align 4, !dbg !6728
  %9 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6729
  %coeff_per_sb_select10 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %9, i32 0, i32 10, !dbg !6730
  %10 = load i32, i32* %coeff_per_sb_select10, align 8, !dbg !6730
  %idxprom11 = sext i32 %10 to i64, !dbg !6731
  %arrayidx12 = getelementptr inbounds [3 x i8], [3 x i8]* @last_coeff, i64 0, i64 %idxprom11, !dbg !6731
  %11 = load i8, i8* %arrayidx12, align 1, !dbg !6731
  %conv13 = zext i8 %11 to i32, !dbg !6731
  %sub = sub nsw i32 %conv13, 1, !dbg !6732
  %cmp14 = icmp slt i32 %conv, %sub, !dbg !6733
  br i1 %cmp14, label %if.then, label %if.else, !dbg !6734

if.then:                                          ; preds = %for.body7
  %12 = load i32, i32* %i, align 4, !dbg !6735
  %idxprom16 = sext i32 %12 to i64, !dbg !6736
  %13 = load i32, i32* %tab, align 4, !dbg !6737
  %add = add nsw i32 %13, 1, !dbg !6738
  %idxprom17 = sext i32 %add to i64, !dbg !6736
  %14 = load i32, i32* %ch, align 4, !dbg !6739
  %idxprom18 = sext i32 %14 to i64, !dbg !6736
  %15 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6736
  %quantized_coeffs = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %15, i32 0, i32 40, !dbg !6740
  %arrayidx19 = getelementptr inbounds [2 x [10 x [8 x i8]]], [2 x [10 x [8 x i8]]]* %quantized_coeffs, i64 0, i64 %idxprom18, !dbg !6736
  %arrayidx20 = getelementptr inbounds [10 x [8 x i8]], [10 x [8 x i8]]* %arrayidx19, i64 0, i64 %idxprom17, !dbg !6736
  %arrayidx21 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx20, i64 0, i64 %idxprom16, !dbg !6736
  %16 = load i8, i8* %arrayidx21, align 1, !dbg !6736
  %conv22 = sext i8 %16 to i32, !dbg !6736
  %17 = load i32, i32* %sb, align 4, !dbg !6741
  %idxprom23 = sext i32 %17 to i64, !dbg !6742
  %18 = load i32, i32* %tab, align 4, !dbg !6743
  %add24 = add nsw i32 %18, 1, !dbg !6744
  %idxprom25 = sext i32 %add24 to i64, !dbg !6742
  %19 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6745
  %coeff_per_sb_select26 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %19, i32 0, i32 10, !dbg !6746
  %20 = load i32, i32* %coeff_per_sb_select26, align 8, !dbg !6746
  %idxprom27 = sext i32 %20 to i64, !dbg !6742
  %arrayidx28 = getelementptr inbounds [3 x [10 x [30 x i32]]], [3 x [10 x [30 x i32]]]* @dequant_table, i64 0, i64 %idxprom27, !dbg !6742
  %arrayidx29 = getelementptr inbounds [10 x [30 x i32]], [10 x [30 x i32]]* %arrayidx28, i64 0, i64 %idxprom25, !dbg !6742
  %arrayidx30 = getelementptr inbounds [30 x i32], [30 x i32]* %arrayidx29, i64 0, i64 %idxprom23, !dbg !6742
  %21 = load i32, i32* %arrayidx30, align 4, !dbg !6742
  %mul = mul i32 %conv22, %21, !dbg !6747
  %22 = load i32, i32* %i, align 4, !dbg !6748
  %idxprom31 = sext i32 %22 to i64, !dbg !6749
  %23 = load i32, i32* %tab, align 4, !dbg !6750
  %idxprom32 = sext i32 %23 to i64, !dbg !6749
  %24 = load i32, i32* %ch, align 4, !dbg !6751
  %idxprom33 = sext i32 %24 to i64, !dbg !6749
  %25 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6749
  %quantized_coeffs34 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %25, i32 0, i32 40, !dbg !6752
  %arrayidx35 = getelementptr inbounds [2 x [10 x [8 x i8]]], [2 x [10 x [8 x i8]]]* %quantized_coeffs34, i64 0, i64 %idxprom33, !dbg !6749
  %arrayidx36 = getelementptr inbounds [10 x [8 x i8]], [10 x [8 x i8]]* %arrayidx35, i64 0, i64 %idxprom32, !dbg !6749
  %arrayidx37 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx36, i64 0, i64 %idxprom31, !dbg !6749
  %26 = load i8, i8* %arrayidx37, align 1, !dbg !6749
  %conv38 = sext i8 %26 to i32, !dbg !6749
  %27 = load i32, i32* %sb, align 4, !dbg !6753
  %idxprom39 = sext i32 %27 to i64, !dbg !6754
  %28 = load i32, i32* %tab, align 4, !dbg !6755
  %idxprom40 = sext i32 %28 to i64, !dbg !6754
  %29 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6756
  %coeff_per_sb_select41 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %29, i32 0, i32 10, !dbg !6757
  %30 = load i32, i32* %coeff_per_sb_select41, align 8, !dbg !6757
  %idxprom42 = sext i32 %30 to i64, !dbg !6754
  %arrayidx43 = getelementptr inbounds [3 x [10 x [30 x i32]]], [3 x [10 x [30 x i32]]]* @dequant_table, i64 0, i64 %idxprom42, !dbg !6754
  %arrayidx44 = getelementptr inbounds [10 x [30 x i32]], [10 x [30 x i32]]* %arrayidx43, i64 0, i64 %idxprom40, !dbg !6754
  %arrayidx45 = getelementptr inbounds [30 x i32], [30 x i32]* %arrayidx44, i64 0, i64 %idxprom39, !dbg !6754
  %31 = load i32, i32* %arrayidx45, align 4, !dbg !6754
  %mul46 = mul i32 %conv38, %31, !dbg !6758
  %add47 = add i32 %mul, %mul46, !dbg !6759
  store i32 %add47, i32* %tmp, align 4, !dbg !6760
  br label %if.end, !dbg !6761

if.else:                                          ; preds = %for.body7
  %32 = load i32, i32* %i, align 4, !dbg !6762
  %idxprom48 = sext i32 %32 to i64, !dbg !6763
  %33 = load i32, i32* %tab, align 4, !dbg !6764
  %idxprom49 = sext i32 %33 to i64, !dbg !6763
  %34 = load i32, i32* %ch, align 4, !dbg !6765
  %idxprom50 = sext i32 %34 to i64, !dbg !6763
  %35 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6763
  %quantized_coeffs51 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %35, i32 0, i32 40, !dbg !6766
  %arrayidx52 = getelementptr inbounds [2 x [10 x [8 x i8]]], [2 x [10 x [8 x i8]]]* %quantized_coeffs51, i64 0, i64 %idxprom50, !dbg !6763
  %arrayidx53 = getelementptr inbounds [10 x [8 x i8]], [10 x [8 x i8]]* %arrayidx52, i64 0, i64 %idxprom49, !dbg !6763
  %arrayidx54 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx53, i64 0, i64 %idxprom48, !dbg !6763
  %36 = load i8, i8* %arrayidx54, align 1, !dbg !6763
  %conv55 = sext i8 %36 to i32, !dbg !6763
  %37 = load i32, i32* %sb, align 4, !dbg !6767
  %idxprom56 = sext i32 %37 to i64, !dbg !6768
  %38 = load i32, i32* %tab, align 4, !dbg !6769
  %idxprom57 = sext i32 %38 to i64, !dbg !6768
  %39 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6770
  %coeff_per_sb_select58 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %39, i32 0, i32 10, !dbg !6771
  %40 = load i32, i32* %coeff_per_sb_select58, align 8, !dbg !6771
  %idxprom59 = sext i32 %40 to i64, !dbg !6768
  %arrayidx60 = getelementptr inbounds [3 x [10 x [30 x i32]]], [3 x [10 x [30 x i32]]]* @dequant_table, i64 0, i64 %idxprom59, !dbg !6768
  %arrayidx61 = getelementptr inbounds [10 x [30 x i32]], [10 x [30 x i32]]* %arrayidx60, i64 0, i64 %idxprom57, !dbg !6768
  %arrayidx62 = getelementptr inbounds [30 x i32], [30 x i32]* %arrayidx61, i64 0, i64 %idxprom56, !dbg !6768
  %41 = load i32, i32* %arrayidx62, align 4, !dbg !6768
  %mul63 = mul i32 %conv55, %41, !dbg !6772
  store i32 %mul63, i32* %tmp, align 4, !dbg !6773
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %42 = load i32, i32* %tmp, align 4, !dbg !6774
  %cmp64 = icmp slt i32 %42, 0, !dbg !6776
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !6777

if.then66:                                        ; preds = %if.end
  %43 = load i32, i32* %tmp, align 4, !dbg !6778
  %add67 = add nsw i32 %43, 255, !dbg !6778
  store i32 %add67, i32* %tmp, align 4, !dbg !6778
  br label %if.end68, !dbg !6779

if.end68:                                         ; preds = %if.then66, %if.end
  %44 = load i32, i32* %tmp, align 4, !dbg !6780
  %div = sdiv i32 %44, 256, !dbg !6781
  %and = and i32 %div, 255, !dbg !6782
  %conv69 = trunc i32 %and to i8, !dbg !6783
  %45 = load i32, i32* %i, align 4, !dbg !6784
  %idxprom70 = sext i32 %45 to i64, !dbg !6785
  %46 = load i32, i32* %sb, align 4, !dbg !6786
  %idxprom71 = sext i32 %46 to i64, !dbg !6785
  %47 = load i32, i32* %ch, align 4, !dbg !6787
  %idxprom72 = sext i32 %47 to i64, !dbg !6785
  %48 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6785
  %tone_level_idx_base = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %48, i32 0, i32 41, !dbg !6788
  %arrayidx73 = getelementptr inbounds [2 x [30 x [8 x i8]]], [2 x [30 x [8 x i8]]]* %tone_level_idx_base, i64 0, i64 %idxprom72, !dbg !6785
  %arrayidx74 = getelementptr inbounds [30 x [8 x i8]], [30 x [8 x i8]]* %arrayidx73, i64 0, i64 %idxprom71, !dbg !6785
  %arrayidx75 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx74, i64 0, i64 %idxprom70, !dbg !6785
  store i8 %conv69, i8* %arrayidx75, align 1, !dbg !6789
  br label %for.inc, !dbg !6790

for.inc:                                          ; preds = %if.end68
  %49 = load i32, i32* %i, align 4, !dbg !6791
  %inc = add nsw i32 %49, 1, !dbg !6791
  store i32 %inc, i32* %i, align 4, !dbg !6791
  br label %for.cond5, !dbg !6793, !llvm.loop !6794

for.end:                                          ; preds = %for.cond5
  br label %for.inc76, !dbg !6796

for.inc76:                                        ; preds = %for.end
  %50 = load i32, i32* %sb, align 4, !dbg !6798
  %inc77 = add nsw i32 %50, 1, !dbg !6798
  store i32 %inc77, i32* %sb, align 4, !dbg !6798
  br label %for.cond2, !dbg !6800, !llvm.loop !6801

for.end78:                                        ; preds = %for.cond2
  br label %for.inc79, !dbg !6803

for.inc79:                                        ; preds = %for.end78
  %51 = load i32, i32* %ch, align 4, !dbg !6805
  %inc80 = add nsw i32 %51, 1, !dbg !6805
  store i32 %inc80, i32* %ch, align 4, !dbg !6805
  br label %for.cond, !dbg !6807, !llvm.loop !6808

for.end81:                                        ; preds = %for.cond
  %52 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6810
  %sub_sampling = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %52, i32 0, i32 9, !dbg !6811
  %53 = load i32, i32* %sub_sampling, align 4, !dbg !6811
  %cmp82 = icmp sge i32 %53, 2, !dbg !6812
  br i1 %cmp82, label %cond.true, label %cond.false, !dbg !6813

cond.true:                                        ; preds = %for.end81
  br label %cond.end, !dbg !6814

cond.false:                                       ; preds = %for.end81
  %54 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6816
  %sub_sampling84 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %54, i32 0, i32 9, !dbg !6818
  %55 = load i32, i32* %sub_sampling84, align 4, !dbg !6818
  %shl = shl i32 8, %55, !dbg !6819
  br label %cond.end, !dbg !6820

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 30, %cond.true ], [ %shl, %cond.false ], !dbg !6821
  store i32 %cond, i32* %sb_used, align 4, !dbg !6823
  %56 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6824
  %superblocktype_2_3 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %56, i32 0, i32 48, !dbg !6826
  %57 = load i32, i32* %superblocktype_2_3, align 8, !dbg !6826
  %cmp85 = icmp ne i32 %57, 0, !dbg !6827
  br i1 %cmp85, label %land.lhs.true, label %if.else161, !dbg !6828

land.lhs.true:                                    ; preds = %cond.end
  %58 = load i32, i32* %flag.addr, align 4, !dbg !6829
  %tobool = icmp ne i32 %58, 0, !dbg !6829
  br i1 %tobool, label %if.else161, label %if.then87, !dbg !6831

if.then87:                                        ; preds = %land.lhs.true
  store i32 0, i32* %sb, align 4, !dbg !6832
  br label %for.cond88, !dbg !6835

for.cond88:                                       ; preds = %for.inc158, %if.then87
  %59 = load i32, i32* %sb, align 4, !dbg !6836
  %60 = load i32, i32* %sb_used, align 4, !dbg !6839
  %cmp89 = icmp slt i32 %59, %60, !dbg !6840
  br i1 %cmp89, label %for.body91, label %for.end160, !dbg !6841

for.body91:                                       ; preds = %for.cond88
  store i32 0, i32* %ch, align 4, !dbg !6842
  br label %for.cond92, !dbg !6844

for.cond92:                                       ; preds = %for.inc155, %for.body91
  %61 = load i32, i32* %ch, align 4, !dbg !6845
  %62 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6848
  %nb_channels93 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %62, i32 0, i32 0, !dbg !6849
  %63 = load i32, i32* %nb_channels93, align 32, !dbg !6849
  %cmp94 = icmp slt i32 %61, %63, !dbg !6850
  br i1 %cmp94, label %for.body96, label %for.end157, !dbg !6851

for.body96:                                       ; preds = %for.cond92
  store i32 0, i32* %i, align 4, !dbg !6852
  br label %for.cond97, !dbg !6854

for.cond97:                                       ; preds = %for.inc152, %for.body96
  %64 = load i32, i32* %i, align 4, !dbg !6855
  %cmp98 = icmp slt i32 %64, 64, !dbg !6858
  br i1 %cmp98, label %for.body100, label %for.end154, !dbg !6859

for.body100:                                      ; preds = %for.cond97
  %65 = load i32, i32* %i, align 4, !dbg !6860
  %div101 = sdiv i32 %65, 8, !dbg !6862
  %idxprom102 = sext i32 %div101 to i64, !dbg !6863
  %66 = load i32, i32* %sb, align 4, !dbg !6864
  %idxprom103 = sext i32 %66 to i64, !dbg !6863
  %67 = load i32, i32* %ch, align 4, !dbg !6865
  %idxprom104 = sext i32 %67 to i64, !dbg !6863
  %68 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6863
  %tone_level_idx_base105 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %68, i32 0, i32 41, !dbg !6866
  %arrayidx106 = getelementptr inbounds [2 x [30 x [8 x i8]]], [2 x [30 x [8 x i8]]]* %tone_level_idx_base105, i64 0, i64 %idxprom104, !dbg !6863
  %arrayidx107 = getelementptr inbounds [30 x [8 x i8]], [30 x [8 x i8]]* %arrayidx106, i64 0, i64 %idxprom103, !dbg !6863
  %arrayidx108 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx107, i64 0, i64 %idxprom102, !dbg !6863
  %69 = load i8, i8* %arrayidx108, align 1, !dbg !6863
  %70 = load i32, i32* %i, align 4, !dbg !6867
  %idxprom109 = sext i32 %70 to i64, !dbg !6868
  %71 = load i32, i32* %sb, align 4, !dbg !6869
  %idxprom110 = sext i32 %71 to i64, !dbg !6868
  %72 = load i32, i32* %ch, align 4, !dbg !6870
  %idxprom111 = sext i32 %72 to i64, !dbg !6868
  %73 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6868
  %tone_level_idx = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %73, i32 0, i32 45, !dbg !6871
  %arrayidx112 = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %tone_level_idx, i64 0, i64 %idxprom111, !dbg !6868
  %arrayidx113 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx112, i64 0, i64 %idxprom110, !dbg !6868
  %arrayidx114 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx113, i64 0, i64 %idxprom109, !dbg !6868
  store i8 %69, i8* %arrayidx114, align 1, !dbg !6872
  %74 = load i32, i32* %i, align 4, !dbg !6873
  %idxprom115 = sext i32 %74 to i64, !dbg !6875
  %75 = load i32, i32* %sb, align 4, !dbg !6876
  %idxprom116 = sext i32 %75 to i64, !dbg !6875
  %76 = load i32, i32* %ch, align 4, !dbg !6877
  %idxprom117 = sext i32 %76 to i64, !dbg !6875
  %77 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6875
  %tone_level_idx118 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %77, i32 0, i32 45, !dbg !6878
  %arrayidx119 = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %tone_level_idx118, i64 0, i64 %idxprom117, !dbg !6875
  %arrayidx120 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx119, i64 0, i64 %idxprom116, !dbg !6875
  %arrayidx121 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx120, i64 0, i64 %idxprom115, !dbg !6875
  %78 = load i8, i8* %arrayidx121, align 1, !dbg !6875
  %conv122 = sext i8 %78 to i32, !dbg !6875
  %cmp123 = icmp slt i32 %conv122, 0, !dbg !6879
  br i1 %cmp123, label %if.then125, label %if.else132, !dbg !6880

if.then125:                                       ; preds = %for.body100
  %79 = load i32, i32* %i, align 4, !dbg !6881
  %idxprom126 = sext i32 %79 to i64, !dbg !6882
  %80 = load i32, i32* %sb, align 4, !dbg !6883
  %idxprom127 = sext i32 %80 to i64, !dbg !6882
  %81 = load i32, i32* %ch, align 4, !dbg !6884
  %idxprom128 = sext i32 %81 to i64, !dbg !6882
  %82 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6882
  %tone_level = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %82, i32 0, i32 38, !dbg !6885
  %arrayidx129 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level, i64 0, i64 %idxprom128, !dbg !6882
  %arrayidx130 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx129, i64 0, i64 %idxprom127, !dbg !6882
  %arrayidx131 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx130, i64 0, i64 %idxprom126, !dbg !6882
  store float 0.000000e+00, float* %arrayidx131, align 4, !dbg !6886
  br label %if.end151, !dbg !6882

if.else132:                                       ; preds = %for.body100
  %83 = load i32, i32* %i, align 4, !dbg !6887
  %idxprom133 = sext i32 %83 to i64, !dbg !6888
  %84 = load i32, i32* %sb, align 4, !dbg !6889
  %idxprom134 = sext i32 %84 to i64, !dbg !6888
  %85 = load i32, i32* %ch, align 4, !dbg !6890
  %idxprom135 = sext i32 %85 to i64, !dbg !6888
  %86 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6888
  %tone_level_idx136 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %86, i32 0, i32 45, !dbg !6891
  %arrayidx137 = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %tone_level_idx136, i64 0, i64 %idxprom135, !dbg !6888
  %arrayidx138 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx137, i64 0, i64 %idxprom134, !dbg !6888
  %arrayidx139 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx138, i64 0, i64 %idxprom133, !dbg !6888
  %87 = load i8, i8* %arrayidx139, align 1, !dbg !6888
  %conv140 = sext i8 %87 to i32, !dbg !6888
  %and141 = and i32 %conv140, 63, !dbg !6892
  %idxprom142 = sext i32 %and141 to i64, !dbg !6893
  %arrayidx143 = getelementptr inbounds [64 x float], [64 x float]* getelementptr inbounds ([2 x [64 x float]], [2 x [64 x float]]* @fft_tone_level_table, i64 0, i64 0), i64 0, i64 %idxprom142, !dbg !6893
  %88 = load float, float* %arrayidx143, align 4, !dbg !6893
  %89 = load i32, i32* %i, align 4, !dbg !6894
  %idxprom144 = sext i32 %89 to i64, !dbg !6895
  %90 = load i32, i32* %sb, align 4, !dbg !6896
  %idxprom145 = sext i32 %90 to i64, !dbg !6895
  %91 = load i32, i32* %ch, align 4, !dbg !6897
  %idxprom146 = sext i32 %91 to i64, !dbg !6895
  %92 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6895
  %tone_level147 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %92, i32 0, i32 38, !dbg !6898
  %arrayidx148 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level147, i64 0, i64 %idxprom146, !dbg !6895
  %arrayidx149 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx148, i64 0, i64 %idxprom145, !dbg !6895
  %arrayidx150 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx149, i64 0, i64 %idxprom144, !dbg !6895
  store float %88, float* %arrayidx150, align 4, !dbg !6899
  br label %if.end151

if.end151:                                        ; preds = %if.else132, %if.then125
  br label %for.inc152, !dbg !6900

for.inc152:                                       ; preds = %if.end151
  %93 = load i32, i32* %i, align 4, !dbg !6901
  %inc153 = add nsw i32 %93, 1, !dbg !6901
  store i32 %inc153, i32* %i, align 4, !dbg !6901
  br label %for.cond97, !dbg !6903, !llvm.loop !6904

for.end154:                                       ; preds = %for.cond97
  br label %for.inc155, !dbg !6906

for.inc155:                                       ; preds = %for.end154
  %94 = load i32, i32* %ch, align 4, !dbg !6908
  %inc156 = add nsw i32 %94, 1, !dbg !6908
  store i32 %inc156, i32* %ch, align 4, !dbg !6908
  br label %for.cond92, !dbg !6910, !llvm.loop !6911

for.end157:                                       ; preds = %for.cond92
  br label %for.inc158, !dbg !6913

for.inc158:                                       ; preds = %for.end157
  %95 = load i32, i32* %sb, align 4, !dbg !6915
  %inc159 = add nsw i32 %95, 1, !dbg !6915
  store i32 %inc159, i32* %sb, align 4, !dbg !6915
  br label %for.cond88, !dbg !6917, !llvm.loop !6918

for.end160:                                       ; preds = %for.cond88
  br label %if.end417, !dbg !6920

if.else161:                                       ; preds = %land.lhs.true, %cond.end
  %96 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6921
  %superblocktype_2_3162 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %96, i32 0, i32 48, !dbg !6923
  %97 = load i32, i32* %superblocktype_2_3162, align 8, !dbg !6923
  %tobool163 = icmp ne i32 %97, 0, !dbg !6921
  %cond164 = select i1 %tobool163, i32 0, i32 1, !dbg !6921
  store i32 %cond164, i32* %tab, align 4, !dbg !6924
  store i32 0, i32* %sb, align 4, !dbg !6925
  br label %for.cond165, !dbg !6927

for.cond165:                                      ; preds = %for.inc414, %if.else161
  %98 = load i32, i32* %sb, align 4, !dbg !6928
  %99 = load i32, i32* %sb_used, align 4, !dbg !6931
  %cmp166 = icmp slt i32 %98, %99, !dbg !6932
  br i1 %cmp166, label %for.body168, label %for.end416, !dbg !6933

for.body168:                                      ; preds = %for.cond165
  %100 = load i32, i32* %sb, align 4, !dbg !6934
  %cmp169 = icmp sge i32 %100, 4, !dbg !6937
  br i1 %cmp169, label %land.lhs.true171, label %if.else265, !dbg !6938

land.lhs.true171:                                 ; preds = %for.body168
  %101 = load i32, i32* %sb, align 4, !dbg !6939
  %cmp172 = icmp sle i32 %101, 23, !dbg !6941
  br i1 %cmp172, label %if.then174, label %if.else265, !dbg !6942

if.then174:                                       ; preds = %land.lhs.true171
  store i32 0, i32* %ch, align 4, !dbg !6943
  br label %for.cond175, !dbg !6946

for.cond175:                                      ; preds = %for.inc262, %if.then174
  %102 = load i32, i32* %ch, align 4, !dbg !6947
  %103 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6950
  %nb_channels176 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %103, i32 0, i32 0, !dbg !6951
  %104 = load i32, i32* %nb_channels176, align 32, !dbg !6951
  %cmp177 = icmp slt i32 %102, %104, !dbg !6952
  br i1 %cmp177, label %for.body179, label %for.end264, !dbg !6953

for.body179:                                      ; preds = %for.cond175
  store i32 0, i32* %i, align 4, !dbg !6954
  br label %for.cond180, !dbg !6956

for.cond180:                                      ; preds = %for.inc259, %for.body179
  %105 = load i32, i32* %i, align 4, !dbg !6957
  %cmp181 = icmp slt i32 %105, 64, !dbg !6960
  br i1 %cmp181, label %for.body183, label %for.end261, !dbg !6961

for.body183:                                      ; preds = %for.cond180
  %106 = load i32, i32* %i, align 4, !dbg !6962
  %div184 = sdiv i32 %106, 8, !dbg !6964
  %idxprom185 = sext i32 %div184 to i64, !dbg !6965
  %107 = load i32, i32* %sb, align 4, !dbg !6966
  %idxprom186 = sext i32 %107 to i64, !dbg !6965
  %108 = load i32, i32* %ch, align 4, !dbg !6967
  %idxprom187 = sext i32 %108 to i64, !dbg !6965
  %109 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6965
  %tone_level_idx_base188 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %109, i32 0, i32 41, !dbg !6968
  %arrayidx189 = getelementptr inbounds [2 x [30 x [8 x i8]]], [2 x [30 x [8 x i8]]]* %tone_level_idx_base188, i64 0, i64 %idxprom187, !dbg !6965
  %arrayidx190 = getelementptr inbounds [30 x [8 x i8]], [30 x [8 x i8]]* %arrayidx189, i64 0, i64 %idxprom186, !dbg !6965
  %arrayidx191 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx190, i64 0, i64 %idxprom185, !dbg !6965
  %110 = load i8, i8* %arrayidx191, align 1, !dbg !6965
  %conv192 = sext i8 %110 to i32, !dbg !6965
  %111 = load i32, i32* %i, align 4, !dbg !6969
  %rem = srem i32 %111, 8, !dbg !6970
  %idxprom193 = sext i32 %rem to i64, !dbg !6971
  %112 = load i32, i32* %i, align 4, !dbg !6972
  %div194 = sdiv i32 %112, 8, !dbg !6973
  %idxprom195 = sext i32 %div194 to i64, !dbg !6971
  %113 = load i32, i32* %sb, align 4, !dbg !6974
  %div196 = sdiv i32 %113, 8, !dbg !6975
  %idxprom197 = sext i32 %div196 to i64, !dbg !6971
  %114 = load i32, i32* %ch, align 4, !dbg !6976
  %idxprom198 = sext i32 %114 to i64, !dbg !6971
  %115 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6971
  %tone_level_idx_hi1 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %115, i32 0, i32 42, !dbg !6977
  %arrayidx199 = getelementptr inbounds [2 x [3 x [8 x [8 x i8]]]], [2 x [3 x [8 x [8 x i8]]]]* %tone_level_idx_hi1, i64 0, i64 %idxprom198, !dbg !6971
  %arrayidx200 = getelementptr inbounds [3 x [8 x [8 x i8]]], [3 x [8 x [8 x i8]]]* %arrayidx199, i64 0, i64 %idxprom197, !dbg !6971
  %arrayidx201 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %arrayidx200, i64 0, i64 %idxprom195, !dbg !6971
  %arrayidx202 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx201, i64 0, i64 %idxprom193, !dbg !6971
  %116 = load i8, i8* %arrayidx202, align 1, !dbg !6971
  %conv203 = sext i8 %116 to i32, !dbg !6971
  %sub204 = sub nsw i32 %conv192, %conv203, !dbg !6978
  %117 = load i32, i32* %i, align 4, !dbg !6979
  %div205 = sdiv i32 %117, 8, !dbg !6980
  %idxprom206 = sext i32 %div205 to i64, !dbg !6981
  %118 = load i32, i32* %sb, align 4, !dbg !6982
  %sub207 = sub nsw i32 %118, 4, !dbg !6983
  %idxprom208 = sext i32 %sub207 to i64, !dbg !6981
  %119 = load i32, i32* %ch, align 4, !dbg !6984
  %idxprom209 = sext i32 %119 to i64, !dbg !6981
  %120 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6981
  %tone_level_idx_mid = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %120, i32 0, i32 43, !dbg !6985
  %arrayidx210 = getelementptr inbounds [2 x [26 x [8 x i8]]], [2 x [26 x [8 x i8]]]* %tone_level_idx_mid, i64 0, i64 %idxprom209, !dbg !6981
  %arrayidx211 = getelementptr inbounds [26 x [8 x i8]], [26 x [8 x i8]]* %arrayidx210, i64 0, i64 %idxprom208, !dbg !6981
  %arrayidx212 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx211, i64 0, i64 %idxprom206, !dbg !6981
  %121 = load i8, i8* %arrayidx212, align 1, !dbg !6981
  %conv213 = sext i8 %121 to i32, !dbg !6981
  %sub214 = sub nsw i32 %sub204, %conv213, !dbg !6986
  %122 = load i32, i32* %sb, align 4, !dbg !6987
  %sub215 = sub nsw i32 %122, 4, !dbg !6988
  %idxprom216 = sext i32 %sub215 to i64, !dbg !6989
  %123 = load i32, i32* %ch, align 4, !dbg !6990
  %idxprom217 = sext i32 %123 to i64, !dbg !6989
  %124 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6989
  %tone_level_idx_hi2 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %124, i32 0, i32 44, !dbg !6991
  %arrayidx218 = getelementptr inbounds [2 x [26 x i8]], [2 x [26 x i8]]* %tone_level_idx_hi2, i64 0, i64 %idxprom217, !dbg !6989
  %arrayidx219 = getelementptr inbounds [26 x i8], [26 x i8]* %arrayidx218, i64 0, i64 %idxprom216, !dbg !6989
  %125 = load i8, i8* %arrayidx219, align 1, !dbg !6989
  %conv220 = sext i8 %125 to i32, !dbg !6989
  %sub221 = sub nsw i32 %sub214, %conv220, !dbg !6992
  store i32 %sub221, i32* %tmp, align 4, !dbg !6993
  %126 = load i32, i32* %tmp, align 4, !dbg !6994
  %and222 = and i32 %126, 255, !dbg !6995
  %conv223 = trunc i32 %and222 to i8, !dbg !6994
  %127 = load i32, i32* %i, align 4, !dbg !6996
  %idxprom224 = sext i32 %127 to i64, !dbg !6997
  %128 = load i32, i32* %sb, align 4, !dbg !6998
  %idxprom225 = sext i32 %128 to i64, !dbg !6997
  %129 = load i32, i32* %ch, align 4, !dbg !6999
  %idxprom226 = sext i32 %129 to i64, !dbg !6997
  %130 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !6997
  %tone_level_idx227 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %130, i32 0, i32 45, !dbg !7000
  %arrayidx228 = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %tone_level_idx227, i64 0, i64 %idxprom226, !dbg !6997
  %arrayidx229 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx228, i64 0, i64 %idxprom225, !dbg !6997
  %arrayidx230 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx229, i64 0, i64 %idxprom224, !dbg !6997
  store i8 %conv223, i8* %arrayidx230, align 1, !dbg !7001
  %131 = load i32, i32* %tmp, align 4, !dbg !7002
  %cmp231 = icmp slt i32 %131, 0, !dbg !7004
  br i1 %cmp231, label %if.then237, label %lor.lhs.false, !dbg !7005

lor.lhs.false:                                    ; preds = %for.body183
  %132 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7006
  %superblocktype_2_3233 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %132, i32 0, i32 48, !dbg !7008
  %133 = load i32, i32* %superblocktype_2_3233, align 8, !dbg !7008
  %tobool234 = icmp ne i32 %133, 0, !dbg !7006
  br i1 %tobool234, label %if.else245, label %land.lhs.true235, !dbg !7009

land.lhs.true235:                                 ; preds = %lor.lhs.false
  %134 = load i32, i32* %tmp, align 4, !dbg !7010
  %tobool236 = icmp ne i32 %134, 0, !dbg !7010
  br i1 %tobool236, label %if.else245, label %if.then237, !dbg !7012

if.then237:                                       ; preds = %land.lhs.true235, %for.body183
  %135 = load i32, i32* %i, align 4, !dbg !7013
  %idxprom238 = sext i32 %135 to i64, !dbg !7014
  %136 = load i32, i32* %sb, align 4, !dbg !7015
  %idxprom239 = sext i32 %136 to i64, !dbg !7014
  %137 = load i32, i32* %ch, align 4, !dbg !7016
  %idxprom240 = sext i32 %137 to i64, !dbg !7014
  %138 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7014
  %tone_level241 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %138, i32 0, i32 38, !dbg !7017
  %arrayidx242 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level241, i64 0, i64 %idxprom240, !dbg !7014
  %arrayidx243 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx242, i64 0, i64 %idxprom239, !dbg !7014
  %arrayidx244 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx243, i64 0, i64 %idxprom238, !dbg !7014
  store float 0.000000e+00, float* %arrayidx244, align 4, !dbg !7018
  br label %if.end258, !dbg !7014

if.else245:                                       ; preds = %land.lhs.true235, %lor.lhs.false
  %139 = load i32, i32* %tmp, align 4, !dbg !7019
  %and246 = and i32 %139, 63, !dbg !7020
  %idxprom247 = sext i32 %and246 to i64, !dbg !7021
  %140 = load i32, i32* %tab, align 4, !dbg !7022
  %idxprom248 = sext i32 %140 to i64, !dbg !7021
  %arrayidx249 = getelementptr inbounds [2 x [64 x float]], [2 x [64 x float]]* @fft_tone_level_table, i64 0, i64 %idxprom248, !dbg !7021
  %arrayidx250 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx249, i64 0, i64 %idxprom247, !dbg !7021
  %141 = load float, float* %arrayidx250, align 4, !dbg !7021
  %142 = load i32, i32* %i, align 4, !dbg !7023
  %idxprom251 = sext i32 %142 to i64, !dbg !7024
  %143 = load i32, i32* %sb, align 4, !dbg !7025
  %idxprom252 = sext i32 %143 to i64, !dbg !7024
  %144 = load i32, i32* %ch, align 4, !dbg !7026
  %idxprom253 = sext i32 %144 to i64, !dbg !7024
  %145 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7024
  %tone_level254 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %145, i32 0, i32 38, !dbg !7027
  %arrayidx255 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level254, i64 0, i64 %idxprom253, !dbg !7024
  %arrayidx256 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx255, i64 0, i64 %idxprom252, !dbg !7024
  %arrayidx257 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx256, i64 0, i64 %idxprom251, !dbg !7024
  store float %141, float* %arrayidx257, align 4, !dbg !7028
  br label %if.end258

if.end258:                                        ; preds = %if.else245, %if.then237
  br label %for.inc259, !dbg !7029

for.inc259:                                       ; preds = %if.end258
  %146 = load i32, i32* %i, align 4, !dbg !7030
  %inc260 = add nsw i32 %146, 1, !dbg !7030
  store i32 %inc260, i32* %i, align 4, !dbg !7030
  br label %for.cond180, !dbg !7032, !llvm.loop !7033

for.end261:                                       ; preds = %for.cond180
  br label %for.inc262, !dbg !7035

for.inc262:                                       ; preds = %for.end261
  %147 = load i32, i32* %ch, align 4, !dbg !7037
  %inc263 = add nsw i32 %147, 1, !dbg !7037
  store i32 %inc263, i32* %ch, align 4, !dbg !7037
  br label %for.cond175, !dbg !7039, !llvm.loop !7040

for.end264:                                       ; preds = %for.cond175
  br label %if.end413, !dbg !7042

if.else265:                                       ; preds = %land.lhs.true171, %for.body168
  %148 = load i32, i32* %sb, align 4, !dbg !7043
  %cmp266 = icmp sgt i32 %148, 4, !dbg !7046
  br i1 %cmp266, label %if.then268, label %if.else351, !dbg !7047

if.then268:                                       ; preds = %if.else265
  store i32 0, i32* %ch, align 4, !dbg !7048
  br label %for.cond269, !dbg !7051

for.cond269:                                      ; preds = %for.inc348, %if.then268
  %149 = load i32, i32* %ch, align 4, !dbg !7052
  %150 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7055
  %nb_channels270 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %150, i32 0, i32 0, !dbg !7056
  %151 = load i32, i32* %nb_channels270, align 32, !dbg !7056
  %cmp271 = icmp slt i32 %149, %151, !dbg !7057
  br i1 %cmp271, label %for.body273, label %for.end350, !dbg !7058

for.body273:                                      ; preds = %for.cond269
  store i32 0, i32* %i, align 4, !dbg !7059
  br label %for.cond274, !dbg !7061

for.cond274:                                      ; preds = %for.inc345, %for.body273
  %152 = load i32, i32* %i, align 4, !dbg !7062
  %cmp275 = icmp slt i32 %152, 64, !dbg !7065
  br i1 %cmp275, label %for.body277, label %for.end347, !dbg !7066

for.body277:                                      ; preds = %for.cond274
  %153 = load i32, i32* %i, align 4, !dbg !7067
  %div278 = sdiv i32 %153, 8, !dbg !7069
  %idxprom279 = sext i32 %div278 to i64, !dbg !7070
  %154 = load i32, i32* %sb, align 4, !dbg !7071
  %idxprom280 = sext i32 %154 to i64, !dbg !7070
  %155 = load i32, i32* %ch, align 4, !dbg !7072
  %idxprom281 = sext i32 %155 to i64, !dbg !7070
  %156 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7070
  %tone_level_idx_base282 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %156, i32 0, i32 41, !dbg !7073
  %arrayidx283 = getelementptr inbounds [2 x [30 x [8 x i8]]], [2 x [30 x [8 x i8]]]* %tone_level_idx_base282, i64 0, i64 %idxprom281, !dbg !7070
  %arrayidx284 = getelementptr inbounds [30 x [8 x i8]], [30 x [8 x i8]]* %arrayidx283, i64 0, i64 %idxprom280, !dbg !7070
  %arrayidx285 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx284, i64 0, i64 %idxprom279, !dbg !7070
  %157 = load i8, i8* %arrayidx285, align 1, !dbg !7070
  %conv286 = sext i8 %157 to i32, !dbg !7070
  %158 = load i32, i32* %i, align 4, !dbg !7074
  %rem287 = srem i32 %158, 8, !dbg !7075
  %idxprom288 = sext i32 %rem287 to i64, !dbg !7076
  %159 = load i32, i32* %i, align 4, !dbg !7077
  %div289 = sdiv i32 %159, 8, !dbg !7078
  %idxprom290 = sext i32 %div289 to i64, !dbg !7076
  %160 = load i32, i32* %ch, align 4, !dbg !7079
  %idxprom291 = sext i32 %160 to i64, !dbg !7076
  %161 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7076
  %tone_level_idx_hi1292 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %161, i32 0, i32 42, !dbg !7080
  %arrayidx293 = getelementptr inbounds [2 x [3 x [8 x [8 x i8]]]], [2 x [3 x [8 x [8 x i8]]]]* %tone_level_idx_hi1292, i64 0, i64 %idxprom291, !dbg !7076
  %arrayidx294 = getelementptr inbounds [3 x [8 x [8 x i8]]], [3 x [8 x [8 x i8]]]* %arrayidx293, i64 0, i64 2, !dbg !7076
  %arrayidx295 = getelementptr inbounds [8 x [8 x i8]], [8 x [8 x i8]]* %arrayidx294, i64 0, i64 %idxprom290, !dbg !7076
  %arrayidx296 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx295, i64 0, i64 %idxprom288, !dbg !7076
  %162 = load i8, i8* %arrayidx296, align 1, !dbg !7076
  %conv297 = sext i8 %162 to i32, !dbg !7076
  %sub298 = sub nsw i32 %conv286, %conv297, !dbg !7081
  %163 = load i32, i32* %sb, align 4, !dbg !7082
  %sub299 = sub nsw i32 %163, 4, !dbg !7083
  %idxprom300 = sext i32 %sub299 to i64, !dbg !7084
  %164 = load i32, i32* %ch, align 4, !dbg !7085
  %idxprom301 = sext i32 %164 to i64, !dbg !7084
  %165 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7084
  %tone_level_idx_hi2302 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %165, i32 0, i32 44, !dbg !7086
  %arrayidx303 = getelementptr inbounds [2 x [26 x i8]], [2 x [26 x i8]]* %tone_level_idx_hi2302, i64 0, i64 %idxprom301, !dbg !7084
  %arrayidx304 = getelementptr inbounds [26 x i8], [26 x i8]* %arrayidx303, i64 0, i64 %idxprom300, !dbg !7084
  %166 = load i8, i8* %arrayidx304, align 1, !dbg !7084
  %conv305 = sext i8 %166 to i32, !dbg !7084
  %sub306 = sub nsw i32 %sub298, %conv305, !dbg !7087
  store i32 %sub306, i32* %tmp, align 4, !dbg !7088
  %167 = load i32, i32* %tmp, align 4, !dbg !7089
  %and307 = and i32 %167, 255, !dbg !7090
  %conv308 = trunc i32 %and307 to i8, !dbg !7089
  %168 = load i32, i32* %i, align 4, !dbg !7091
  %idxprom309 = sext i32 %168 to i64, !dbg !7092
  %169 = load i32, i32* %sb, align 4, !dbg !7093
  %idxprom310 = sext i32 %169 to i64, !dbg !7092
  %170 = load i32, i32* %ch, align 4, !dbg !7094
  %idxprom311 = sext i32 %170 to i64, !dbg !7092
  %171 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7092
  %tone_level_idx312 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %171, i32 0, i32 45, !dbg !7095
  %arrayidx313 = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %tone_level_idx312, i64 0, i64 %idxprom311, !dbg !7092
  %arrayidx314 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx313, i64 0, i64 %idxprom310, !dbg !7092
  %arrayidx315 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx314, i64 0, i64 %idxprom309, !dbg !7092
  store i8 %conv308, i8* %arrayidx315, align 1, !dbg !7096
  %172 = load i32, i32* %tmp, align 4, !dbg !7097
  %cmp316 = icmp slt i32 %172, 0, !dbg !7099
  br i1 %cmp316, label %if.then323, label %lor.lhs.false318, !dbg !7100

lor.lhs.false318:                                 ; preds = %for.body277
  %173 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7101
  %superblocktype_2_3319 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %173, i32 0, i32 48, !dbg !7103
  %174 = load i32, i32* %superblocktype_2_3319, align 8, !dbg !7103
  %tobool320 = icmp ne i32 %174, 0, !dbg !7101
  br i1 %tobool320, label %if.else331, label %land.lhs.true321, !dbg !7104

land.lhs.true321:                                 ; preds = %lor.lhs.false318
  %175 = load i32, i32* %tmp, align 4, !dbg !7105
  %tobool322 = icmp ne i32 %175, 0, !dbg !7105
  br i1 %tobool322, label %if.else331, label %if.then323, !dbg !7107

if.then323:                                       ; preds = %land.lhs.true321, %for.body277
  %176 = load i32, i32* %i, align 4, !dbg !7108
  %idxprom324 = sext i32 %176 to i64, !dbg !7109
  %177 = load i32, i32* %sb, align 4, !dbg !7110
  %idxprom325 = sext i32 %177 to i64, !dbg !7109
  %178 = load i32, i32* %ch, align 4, !dbg !7111
  %idxprom326 = sext i32 %178 to i64, !dbg !7109
  %179 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7109
  %tone_level327 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %179, i32 0, i32 38, !dbg !7112
  %arrayidx328 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level327, i64 0, i64 %idxprom326, !dbg !7109
  %arrayidx329 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx328, i64 0, i64 %idxprom325, !dbg !7109
  %arrayidx330 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx329, i64 0, i64 %idxprom324, !dbg !7109
  store float 0.000000e+00, float* %arrayidx330, align 4, !dbg !7113
  br label %if.end344, !dbg !7109

if.else331:                                       ; preds = %land.lhs.true321, %lor.lhs.false318
  %180 = load i32, i32* %tmp, align 4, !dbg !7114
  %and332 = and i32 %180, 63, !dbg !7115
  %idxprom333 = sext i32 %and332 to i64, !dbg !7116
  %181 = load i32, i32* %tab, align 4, !dbg !7117
  %idxprom334 = sext i32 %181 to i64, !dbg !7116
  %arrayidx335 = getelementptr inbounds [2 x [64 x float]], [2 x [64 x float]]* @fft_tone_level_table, i64 0, i64 %idxprom334, !dbg !7116
  %arrayidx336 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx335, i64 0, i64 %idxprom333, !dbg !7116
  %182 = load float, float* %arrayidx336, align 4, !dbg !7116
  %183 = load i32, i32* %i, align 4, !dbg !7118
  %idxprom337 = sext i32 %183 to i64, !dbg !7119
  %184 = load i32, i32* %sb, align 4, !dbg !7120
  %idxprom338 = sext i32 %184 to i64, !dbg !7119
  %185 = load i32, i32* %ch, align 4, !dbg !7121
  %idxprom339 = sext i32 %185 to i64, !dbg !7119
  %186 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7119
  %tone_level340 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %186, i32 0, i32 38, !dbg !7122
  %arrayidx341 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level340, i64 0, i64 %idxprom339, !dbg !7119
  %arrayidx342 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx341, i64 0, i64 %idxprom338, !dbg !7119
  %arrayidx343 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx342, i64 0, i64 %idxprom337, !dbg !7119
  store float %182, float* %arrayidx343, align 4, !dbg !7123
  br label %if.end344

if.end344:                                        ; preds = %if.else331, %if.then323
  br label %for.inc345, !dbg !7124

for.inc345:                                       ; preds = %if.end344
  %187 = load i32, i32* %i, align 4, !dbg !7125
  %inc346 = add nsw i32 %187, 1, !dbg !7125
  store i32 %inc346, i32* %i, align 4, !dbg !7125
  br label %for.cond274, !dbg !7127, !llvm.loop !7128

for.end347:                                       ; preds = %for.cond274
  br label %for.inc348, !dbg !7130

for.inc348:                                       ; preds = %for.end347
  %188 = load i32, i32* %ch, align 4, !dbg !7132
  %inc349 = add nsw i32 %188, 1, !dbg !7132
  store i32 %inc349, i32* %ch, align 4, !dbg !7132
  br label %for.cond269, !dbg !7134, !llvm.loop !7135

for.end350:                                       ; preds = %for.cond269
  br label %if.end412, !dbg !7137

if.else351:                                       ; preds = %if.else265
  store i32 0, i32* %ch, align 4, !dbg !7138
  br label %for.cond352, !dbg !7141

for.cond352:                                      ; preds = %for.inc409, %if.else351
  %189 = load i32, i32* %ch, align 4, !dbg !7142
  %190 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7145
  %nb_channels353 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %190, i32 0, i32 0, !dbg !7146
  %191 = load i32, i32* %nb_channels353, align 32, !dbg !7146
  %cmp354 = icmp slt i32 %189, %191, !dbg !7147
  br i1 %cmp354, label %for.body356, label %for.end411, !dbg !7148

for.body356:                                      ; preds = %for.cond352
  store i32 0, i32* %i, align 4, !dbg !7149
  br label %for.cond357, !dbg !7151

for.cond357:                                      ; preds = %for.inc406, %for.body356
  %192 = load i32, i32* %i, align 4, !dbg !7152
  %cmp358 = icmp slt i32 %192, 64, !dbg !7155
  br i1 %cmp358, label %for.body360, label %for.end408, !dbg !7156

for.body360:                                      ; preds = %for.cond357
  %193 = load i32, i32* %i, align 4, !dbg !7157
  %div361 = sdiv i32 %193, 8, !dbg !7159
  %idxprom362 = sext i32 %div361 to i64, !dbg !7160
  %194 = load i32, i32* %sb, align 4, !dbg !7161
  %idxprom363 = sext i32 %194 to i64, !dbg !7160
  %195 = load i32, i32* %ch, align 4, !dbg !7162
  %idxprom364 = sext i32 %195 to i64, !dbg !7160
  %196 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7160
  %tone_level_idx_base365 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %196, i32 0, i32 41, !dbg !7163
  %arrayidx366 = getelementptr inbounds [2 x [30 x [8 x i8]]], [2 x [30 x [8 x i8]]]* %tone_level_idx_base365, i64 0, i64 %idxprom364, !dbg !7160
  %arrayidx367 = getelementptr inbounds [30 x [8 x i8]], [30 x [8 x i8]]* %arrayidx366, i64 0, i64 %idxprom363, !dbg !7160
  %arrayidx368 = getelementptr inbounds [8 x i8], [8 x i8]* %arrayidx367, i64 0, i64 %idxprom362, !dbg !7160
  %197 = load i8, i8* %arrayidx368, align 1, !dbg !7160
  %198 = load i32, i32* %i, align 4, !dbg !7164
  %idxprom369 = sext i32 %198 to i64, !dbg !7165
  %199 = load i32, i32* %sb, align 4, !dbg !7166
  %idxprom370 = sext i32 %199 to i64, !dbg !7165
  %200 = load i32, i32* %ch, align 4, !dbg !7167
  %idxprom371 = sext i32 %200 to i64, !dbg !7165
  %201 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7165
  %tone_level_idx372 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %201, i32 0, i32 45, !dbg !7168
  %arrayidx373 = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %tone_level_idx372, i64 0, i64 %idxprom371, !dbg !7165
  %arrayidx374 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx373, i64 0, i64 %idxprom370, !dbg !7165
  %arrayidx375 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx374, i64 0, i64 %idxprom369, !dbg !7165
  store i8 %197, i8* %arrayidx375, align 1, !dbg !7169
  %conv376 = sext i8 %197 to i32, !dbg !7165
  store i32 %conv376, i32* %tmp, align 4, !dbg !7170
  %202 = load i32, i32* %tmp, align 4, !dbg !7171
  %cmp377 = icmp slt i32 %202, 0, !dbg !7173
  br i1 %cmp377, label %if.then384, label %lor.lhs.false379, !dbg !7174

lor.lhs.false379:                                 ; preds = %for.body360
  %203 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7175
  %superblocktype_2_3380 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %203, i32 0, i32 48, !dbg !7177
  %204 = load i32, i32* %superblocktype_2_3380, align 8, !dbg !7177
  %tobool381 = icmp ne i32 %204, 0, !dbg !7175
  br i1 %tobool381, label %if.else392, label %land.lhs.true382, !dbg !7178

land.lhs.true382:                                 ; preds = %lor.lhs.false379
  %205 = load i32, i32* %tmp, align 4, !dbg !7179
  %tobool383 = icmp ne i32 %205, 0, !dbg !7179
  br i1 %tobool383, label %if.else392, label %if.then384, !dbg !7181

if.then384:                                       ; preds = %land.lhs.true382, %for.body360
  %206 = load i32, i32* %i, align 4, !dbg !7182
  %idxprom385 = sext i32 %206 to i64, !dbg !7183
  %207 = load i32, i32* %sb, align 4, !dbg !7184
  %idxprom386 = sext i32 %207 to i64, !dbg !7183
  %208 = load i32, i32* %ch, align 4, !dbg !7185
  %idxprom387 = sext i32 %208 to i64, !dbg !7183
  %209 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7183
  %tone_level388 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %209, i32 0, i32 38, !dbg !7186
  %arrayidx389 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level388, i64 0, i64 %idxprom387, !dbg !7183
  %arrayidx390 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx389, i64 0, i64 %idxprom386, !dbg !7183
  %arrayidx391 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx390, i64 0, i64 %idxprom385, !dbg !7183
  store float 0.000000e+00, float* %arrayidx391, align 4, !dbg !7187
  br label %if.end405, !dbg !7183

if.else392:                                       ; preds = %land.lhs.true382, %lor.lhs.false379
  %210 = load i32, i32* %tmp, align 4, !dbg !7188
  %and393 = and i32 %210, 63, !dbg !7189
  %idxprom394 = sext i32 %and393 to i64, !dbg !7190
  %211 = load i32, i32* %tab, align 4, !dbg !7191
  %idxprom395 = sext i32 %211 to i64, !dbg !7190
  %arrayidx396 = getelementptr inbounds [2 x [64 x float]], [2 x [64 x float]]* @fft_tone_level_table, i64 0, i64 %idxprom395, !dbg !7190
  %arrayidx397 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx396, i64 0, i64 %idxprom394, !dbg !7190
  %212 = load float, float* %arrayidx397, align 4, !dbg !7190
  %213 = load i32, i32* %i, align 4, !dbg !7192
  %idxprom398 = sext i32 %213 to i64, !dbg !7193
  %214 = load i32, i32* %sb, align 4, !dbg !7194
  %idxprom399 = sext i32 %214 to i64, !dbg !7193
  %215 = load i32, i32* %ch, align 4, !dbg !7195
  %idxprom400 = sext i32 %215 to i64, !dbg !7193
  %216 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7193
  %tone_level401 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %216, i32 0, i32 38, !dbg !7196
  %arrayidx402 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level401, i64 0, i64 %idxprom400, !dbg !7193
  %arrayidx403 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx402, i64 0, i64 %idxprom399, !dbg !7193
  %arrayidx404 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx403, i64 0, i64 %idxprom398, !dbg !7193
  store float %212, float* %arrayidx404, align 4, !dbg !7197
  br label %if.end405

if.end405:                                        ; preds = %if.else392, %if.then384
  br label %for.inc406, !dbg !7198

for.inc406:                                       ; preds = %if.end405
  %217 = load i32, i32* %i, align 4, !dbg !7199
  %inc407 = add nsw i32 %217, 1, !dbg !7199
  store i32 %inc407, i32* %i, align 4, !dbg !7199
  br label %for.cond357, !dbg !7201, !llvm.loop !7202

for.end408:                                       ; preds = %for.cond357
  br label %for.inc409, !dbg !7204

for.inc409:                                       ; preds = %for.end408
  %218 = load i32, i32* %ch, align 4, !dbg !7206
  %inc410 = add nsw i32 %218, 1, !dbg !7206
  store i32 %inc410, i32* %ch, align 4, !dbg !7206
  br label %for.cond352, !dbg !7208, !llvm.loop !7209

for.end411:                                       ; preds = %for.cond352
  br label %if.end412

if.end412:                                        ; preds = %for.end411, %for.end350
  br label %if.end413

if.end413:                                        ; preds = %if.end412, %for.end264
  br label %for.inc414, !dbg !7211

for.inc414:                                       ; preds = %if.end413
  %219 = load i32, i32* %sb, align 4, !dbg !7212
  %inc415 = add nsw i32 %219, 1, !dbg !7212
  store i32 %inc415, i32* %sb, align 4, !dbg !7212
  br label %for.cond165, !dbg !7214, !llvm.loop !7215

for.end416:                                       ; preds = %for.cond165
  br label %if.end417

if.end417:                                        ; preds = %for.end416, %for.end160
  ret void, !dbg !7217
}

; Function Attrs: nounwind uwtable
define internal i32 @init_quantized_coeffs_elem0(i8* %quantized_coeffs, %struct.GetBitContext* %gb) #1 !dbg !7218 {
entry:
  %retval = alloca i32, align 4
  %quantized_coeffs.addr = alloca i8*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %run = alloca i32, align 4
  %level = alloca i32, align 4
  %diff = alloca i32, align 4
  store i8* %quantized_coeffs, i8** %quantized_coeffs.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %quantized_coeffs.addr, metadata !7221, metadata !1868), !dbg !7222
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7223, metadata !1868), !dbg !7224
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7225, metadata !1868), !dbg !7226
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7227, metadata !1868), !dbg !7228
  call void @llvm.dbg.declare(metadata i32* %run, metadata !7229, metadata !1868), !dbg !7230
  call void @llvm.dbg.declare(metadata i32* %level, metadata !7231, metadata !1868), !dbg !7232
  call void @llvm.dbg.declare(metadata i32* %diff, metadata !7233, metadata !1868), !dbg !7234
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7235
  %call = call i32 @get_bits_left(%struct.GetBitContext* %0), !dbg !7237
  %cmp = icmp slt i32 %call, 16, !dbg !7238
  br i1 %cmp, label %if.then, label %if.end, !dbg !7239

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !7240
  br label %return, !dbg !7240

if.end:                                           ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7241
  %call1 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %1, %struct.VLC* @vlc_tab_level, i32 0, i32 2), !dbg !7242
  store i32 %call1, i32* %level, align 4, !dbg !7243
  %2 = load i32, i32* %level, align 4, !dbg !7244
  %conv = trunc i32 %2 to i8, !dbg !7244
  %3 = load i8*, i8** %quantized_coeffs.addr, align 8, !dbg !7245
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !7245
  store i8 %conv, i8* %arrayidx, align 1, !dbg !7246
  store i32 0, i32* %i, align 4, !dbg !7247
  br label %for.cond, !dbg !7249

for.cond:                                         ; preds = %for.end, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !7250
  %cmp2 = icmp slt i32 %4, 7, !dbg !7253
  br i1 %cmp2, label %for.body, label %for.end31, !dbg !7254

for.body:                                         ; preds = %for.cond
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7255
  %call4 = call i32 @get_bits_left(%struct.GetBitContext* %5), !dbg !7258
  %cmp5 = icmp slt i32 %call4, 16, !dbg !7259
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !7260

if.then7:                                         ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !7261
  br label %return, !dbg !7261

if.end8:                                          ; preds = %for.body
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7262
  %call9 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %6, %struct.VLC* @vlc_tab_run, i32 0, i32 1), !dbg !7263
  %add = add nsw i32 %call9, 1, !dbg !7264
  store i32 %add, i32* %run, align 4, !dbg !7265
  %7 = load i32, i32* %i, align 4, !dbg !7266
  %8 = load i32, i32* %run, align 4, !dbg !7268
  %add10 = add nsw i32 %7, %8, !dbg !7269
  %cmp11 = icmp sge i32 %add10, 8, !dbg !7270
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !7271

if.then13:                                        ; preds = %if.end8
  store i32 -1, i32* %retval, align 4, !dbg !7272
  br label %return, !dbg !7272

if.end14:                                         ; preds = %if.end8
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7273
  %call15 = call i32 @get_bits_left(%struct.GetBitContext* %9), !dbg !7275
  %cmp16 = icmp slt i32 %call15, 16, !dbg !7276
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !7277

if.then18:                                        ; preds = %if.end14
  store i32 -1, i32* %retval, align 4, !dbg !7278
  br label %return, !dbg !7278

if.end19:                                         ; preds = %if.end14
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7279
  %call20 = call i32 @qdm2_get_se_vlc(%struct.VLC* @vlc_tab_diff, %struct.GetBitContext* %10, i32 2), !dbg !7280
  store i32 %call20, i32* %diff, align 4, !dbg !7281
  store i32 1, i32* %k, align 4, !dbg !7282
  br label %for.cond21, !dbg !7284

for.cond21:                                       ; preds = %for.inc, %if.end19
  %11 = load i32, i32* %k, align 4, !dbg !7285
  %12 = load i32, i32* %run, align 4, !dbg !7288
  %cmp22 = icmp sle i32 %11, %12, !dbg !7289
  br i1 %cmp22, label %for.body24, label %for.end, !dbg !7290

for.body24:                                       ; preds = %for.cond21
  %13 = load i32, i32* %level, align 4, !dbg !7291
  %14 = load i32, i32* %k, align 4, !dbg !7292
  %15 = load i32, i32* %diff, align 4, !dbg !7293
  %mul = mul nsw i32 %14, %15, !dbg !7294
  %16 = load i32, i32* %run, align 4, !dbg !7295
  %div = sdiv i32 %mul, %16, !dbg !7296
  %add25 = add nsw i32 %13, %div, !dbg !7297
  %conv26 = trunc i32 %add25 to i8, !dbg !7298
  %17 = load i32, i32* %i, align 4, !dbg !7299
  %18 = load i32, i32* %k, align 4, !dbg !7300
  %add27 = add nsw i32 %17, %18, !dbg !7301
  %idxprom = sext i32 %add27 to i64, !dbg !7302
  %19 = load i8*, i8** %quantized_coeffs.addr, align 8, !dbg !7302
  %arrayidx28 = getelementptr inbounds i8, i8* %19, i64 %idxprom, !dbg !7302
  store i8 %conv26, i8* %arrayidx28, align 1, !dbg !7303
  br label %for.inc, !dbg !7302

for.inc:                                          ; preds = %for.body24
  %20 = load i32, i32* %k, align 4, !dbg !7304
  %inc = add nsw i32 %20, 1, !dbg !7304
  store i32 %inc, i32* %k, align 4, !dbg !7304
  br label %for.cond21, !dbg !7306, !llvm.loop !7307

for.end:                                          ; preds = %for.cond21
  %21 = load i32, i32* %diff, align 4, !dbg !7309
  %22 = load i32, i32* %level, align 4, !dbg !7310
  %add29 = add nsw i32 %22, %21, !dbg !7310
  store i32 %add29, i32* %level, align 4, !dbg !7310
  %23 = load i32, i32* %run, align 4, !dbg !7311
  %24 = load i32, i32* %i, align 4, !dbg !7312
  %add30 = add nsw i32 %24, %23, !dbg !7312
  store i32 %add30, i32* %i, align 4, !dbg !7312
  br label %for.cond, !dbg !7313, !llvm.loop !7315

for.end31:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7317
  br label %return, !dbg !7317

return:                                           ; preds = %for.end31, %if.then18, %if.then13, %if.then7, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !7318
  ret i32 %25, !dbg !7318
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #8 !dbg !7319 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7322, metadata !1868), !dbg !7323
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7324
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !7325
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !7325
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7326
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !7327
  %sub = sub nsw i32 %1, %call, !dbg !7328
  ret i32 %sub, !dbg !7329
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #8 !dbg !7330 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7333, metadata !1868), !dbg !7334
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7335, metadata !1868), !dbg !7336
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7337
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7338
  %1 = load i32, i32* %index1, align 8, !dbg !7338
  store i32 %1, i32* %index, align 4, !dbg !7336
  call void @llvm.dbg.declare(metadata i8* %result, metadata !7339, metadata !1868), !dbg !7340
  %2 = load i32, i32* %index, align 4, !dbg !7341
  %shr = lshr i32 %2, 3, !dbg !7342
  %idxprom = zext i32 %shr to i64, !dbg !7343
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7343
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !7344
  %4 = load i8*, i8** %buffer, align 8, !dbg !7344
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !7343
  %5 = load i8, i8* %arrayidx, align 1, !dbg !7343
  store i8 %5, i8* %result, align 1, !dbg !7340
  %6 = load i32, i32* %index, align 4, !dbg !7345
  %and = and i32 %6, 7, !dbg !7346
  %7 = load i8, i8* %result, align 1, !dbg !7347
  %conv = zext i8 %7 to i32, !dbg !7347
  %shr2 = ashr i32 %conv, %and, !dbg !7347
  %conv3 = trunc i32 %shr2 to i8, !dbg !7347
  store i8 %conv3, i8* %result, align 1, !dbg !7347
  %8 = load i8, i8* %result, align 1, !dbg !7348
  %conv4 = zext i8 %8 to i32, !dbg !7348
  %and5 = and i32 %conv4, 1, !dbg !7348
  %conv6 = trunc i32 %and5 to i8, !dbg !7348
  store i8 %conv6, i8* %result, align 1, !dbg !7348
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7349
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !7351
  %10 = load i32, i32* %index7, align 8, !dbg !7351
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7352
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !7353
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7353
  %cmp = icmp slt i32 %10, %12, !dbg !7354
  br i1 %cmp, label %if.then, label %if.end, !dbg !7355

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !7356
  %inc = add i32 %13, 1, !dbg !7356
  store i32 %inc, i32* %index, align 4, !dbg !7356
  br label %if.end, !dbg !7357

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !7358
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7359
  %index9 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !7360
  store i32 %14, i32* %index9, align 8, !dbg !7361
  %16 = load i8, i8* %result, align 1, !dbg !7362
  %conv10 = zext i8 %16 to i32, !dbg !7362
  ret i32 %conv10, !dbg !7363
}

; Function Attrs: nounwind uwtable
define internal void @fill_coding_method_array([30 x [64 x i8]]* %tone_level_idx, [30 x [64 x i8]]* %tone_level_idx_temp, [30 x [64 x i8]]* %coding_method, i32 %nb_channels, i32 %c, i32 %superblocktype_2_3, i32 %cm_table_select) #1 !dbg !7364 {
entry:
  %tone_level_idx.addr = alloca [30 x [64 x i8]]*, align 8
  %tone_level_idx_temp.addr = alloca [30 x [64 x i8]]*, align 8
  %coding_method.addr = alloca [30 x [64 x i8]]*, align 8
  %nb_channels.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %superblocktype_2_3.addr = alloca i32, align 4
  %cm_table_select.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %sb = alloca i32, align 4
  %j = alloca i32, align 4
  %tmp = alloca i32, align 4
  %acc = alloca i32, align 4
  %esp_40 = alloca i32, align 4
  %comp = alloca i32, align 4
  %add1 = alloca i32, align 4
  %add2 = alloca i32, align 4
  %add3 = alloca i32, align 4
  %add4 = alloca i32, align 4
  %multres = alloca i64, align 8
  store [30 x [64 x i8]]* %tone_level_idx, [30 x [64 x i8]]** %tone_level_idx.addr, align 8
  call void @llvm.dbg.declare(metadata [30 x [64 x i8]]** %tone_level_idx.addr, metadata !7370, metadata !1868), !dbg !7371
  store [30 x [64 x i8]]* %tone_level_idx_temp, [30 x [64 x i8]]** %tone_level_idx_temp.addr, align 8
  call void @llvm.dbg.declare(metadata [30 x [64 x i8]]** %tone_level_idx_temp.addr, metadata !7372, metadata !1868), !dbg !7373
  store [30 x [64 x i8]]* %coding_method, [30 x [64 x i8]]** %coding_method.addr, align 8
  call void @llvm.dbg.declare(metadata [30 x [64 x i8]]** %coding_method.addr, metadata !7374, metadata !1868), !dbg !7375
  store i32 %nb_channels, i32* %nb_channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_channels.addr, metadata !7376, metadata !1868), !dbg !7377
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !7378, metadata !1868), !dbg !7379
  store i32 %superblocktype_2_3, i32* %superblocktype_2_3.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %superblocktype_2_3.addr, metadata !7380, metadata !1868), !dbg !7381
  store i32 %cm_table_select, i32* %cm_table_select.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cm_table_select.addr, metadata !7382, metadata !1868), !dbg !7383
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !7384, metadata !1868), !dbg !7385
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !7386, metadata !1868), !dbg !7387
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7388, metadata !1868), !dbg !7389
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7390, metadata !1868), !dbg !7391
  call void @llvm.dbg.declare(metadata i32* %acc, metadata !7392, metadata !1868), !dbg !7393
  call void @llvm.dbg.declare(metadata i32* %esp_40, metadata !7394, metadata !1868), !dbg !7395
  call void @llvm.dbg.declare(metadata i32* %comp, metadata !7396, metadata !1868), !dbg !7397
  call void @llvm.dbg.declare(metadata i32* %add1, metadata !7398, metadata !1868), !dbg !7399
  call void @llvm.dbg.declare(metadata i32* %add2, metadata !7400, metadata !1868), !dbg !7401
  call void @llvm.dbg.declare(metadata i32* %add3, metadata !7402, metadata !1868), !dbg !7403
  call void @llvm.dbg.declare(metadata i32* %add4, metadata !7404, metadata !1868), !dbg !7405
  call void @llvm.dbg.declare(metadata i64* %multres, metadata !7406, metadata !1868), !dbg !7407
  %0 = load i32, i32* %superblocktype_2_3.addr, align 4, !dbg !7408
  %tobool = icmp ne i32 %0, 0, !dbg !7408
  br i1 %tobool, label %if.else, label %if.then, !dbg !7410

if.then:                                          ; preds = %entry
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i32 0, i32 0)), !dbg !7411
  br label %if.end, !dbg !7413

if.else:                                          ; preds = %entry
  store i32 0, i32* %ch, align 4, !dbg !7414
  br label %for.cond, !dbg !7417

for.cond:                                         ; preds = %for.inc26, %if.else
  %1 = load i32, i32* %ch, align 4, !dbg !7418
  %2 = load i32, i32* %nb_channels.addr, align 4, !dbg !7421
  %cmp = icmp slt i32 %1, %2, !dbg !7422
  br i1 %cmp, label %for.body, label %for.end28, !dbg !7423

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %sb, align 4, !dbg !7424
  br label %for.cond9, !dbg !7426

for.cond9:                                        ; preds = %for.inc23, %for.body
  %3 = load i32, i32* %sb, align 4, !dbg !7427
  %cmp10 = icmp slt i32 %3, 30, !dbg !7430
  br i1 %cmp10, label %for.body11, label %for.end25, !dbg !7431

for.body11:                                       ; preds = %for.cond9
  store i32 0, i32* %j, align 4, !dbg !7432
  br label %for.cond12, !dbg !7434

for.cond12:                                       ; preds = %for.inc, %for.body11
  %4 = load i32, i32* %j, align 4, !dbg !7435
  %cmp13 = icmp slt i32 %4, 64, !dbg !7438
  br i1 %cmp13, label %for.body14, label %for.end, !dbg !7439

for.body14:                                       ; preds = %for.cond12
  %5 = load i32, i32* %sb, align 4, !dbg !7440
  %idxprom = sext i32 %5 to i64, !dbg !7441
  %6 = load i32, i32* %cm_table_select.addr, align 4, !dbg !7442
  %idxprom15 = sext i32 %6 to i64, !dbg !7441
  %arrayidx = getelementptr inbounds [5 x [30 x i8]], [5 x [30 x i8]]* @coding_method_table, i64 0, i64 %idxprom15, !dbg !7441
  %arrayidx16 = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx, i64 0, i64 %idxprom, !dbg !7441
  %7 = load i8, i8* %arrayidx16, align 1, !dbg !7441
  %8 = load i32, i32* %j, align 4, !dbg !7443
  %idxprom17 = sext i32 %8 to i64, !dbg !7444
  %9 = load i32, i32* %sb, align 4, !dbg !7445
  %idxprom18 = sext i32 %9 to i64, !dbg !7444
  %10 = load i32, i32* %ch, align 4, !dbg !7446
  %idxprom19 = sext i32 %10 to i64, !dbg !7444
  %11 = load [30 x [64 x i8]]*, [30 x [64 x i8]]** %coding_method.addr, align 8, !dbg !7444
  %arrayidx20 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %11, i64 %idxprom19, !dbg !7444
  %arrayidx21 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx20, i64 0, i64 %idxprom18, !dbg !7444
  %arrayidx22 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx21, i64 0, i64 %idxprom17, !dbg !7444
  store i8 %7, i8* %arrayidx22, align 1, !dbg !7447
  br label %for.inc, !dbg !7444

for.inc:                                          ; preds = %for.body14
  %12 = load i32, i32* %j, align 4, !dbg !7448
  %inc = add nsw i32 %12, 1, !dbg !7448
  store i32 %inc, i32* %j, align 4, !dbg !7448
  br label %for.cond12, !dbg !7450, !llvm.loop !7451

for.end:                                          ; preds = %for.cond12
  br label %for.inc23, !dbg !7453

for.inc23:                                        ; preds = %for.end
  %13 = load i32, i32* %sb, align 4, !dbg !7455
  %inc24 = add nsw i32 %13, 1, !dbg !7455
  store i32 %inc24, i32* %sb, align 4, !dbg !7455
  br label %for.cond9, !dbg !7457, !llvm.loop !7458

for.end25:                                        ; preds = %for.cond9
  br label %for.inc26, !dbg !7460

for.inc26:                                        ; preds = %for.end25
  %14 = load i32, i32* %ch, align 4, !dbg !7462
  %inc27 = add nsw i32 %14, 1, !dbg !7462
  store i32 %inc27, i32* %ch, align 4, !dbg !7462
  br label %for.cond, !dbg !7464, !llvm.loop !7465

for.end28:                                        ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end28
  ret void, !dbg !7467
}

; Function Attrs: nounwind uwtable
define internal i32 @synthfilt_build_sb_samples(%struct.QDM2Context* %q, %struct.GetBitContext* %gb, i32 %length, i32 %sb_min, i32 %sb_max) #1 !dbg !7468 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.QDM2Context*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %length.addr = alloca i32, align 4
  %sb_min.addr = alloca i32, align 4
  %sb_max.addr = alloca i32, align 4
  %sb = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %ch = alloca i32, align 4
  %run = alloca i32, align 4
  %channels = alloca i32, align 4
  %joined_stereo = alloca i32, align 4
  %zero_encoding = alloca i32, align 4
  %type34_first = alloca i32, align 4
  %type34_div = alloca float, align 4
  %type34_predictor = alloca float, align 4
  %samples = alloca [10 x float], align 16
  %sign_bits = alloca [16 x i32], align 16
  %f = alloca float, align 4
  %index = alloca i32, align 4
  %index389 = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !7471, metadata !1868), !dbg !7472
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7473, metadata !1868), !dbg !7474
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !7475, metadata !1868), !dbg !7476
  store i32 %sb_min, i32* %sb_min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_min.addr, metadata !7477, metadata !1868), !dbg !7478
  store i32 %sb_max, i32* %sb_max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb_max.addr, metadata !7479, metadata !1868), !dbg !7480
  call void @llvm.dbg.declare(metadata i32* %sb, metadata !7481, metadata !1868), !dbg !7482
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7483, metadata !1868), !dbg !7484
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7485, metadata !1868), !dbg !7486
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7487, metadata !1868), !dbg !7488
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !7489, metadata !1868), !dbg !7490
  call void @llvm.dbg.declare(metadata i32* %run, metadata !7491, metadata !1868), !dbg !7492
  call void @llvm.dbg.declare(metadata i32* %channels, metadata !7493, metadata !1868), !dbg !7494
  call void @llvm.dbg.declare(metadata i32* %joined_stereo, metadata !7495, metadata !1868), !dbg !7496
  call void @llvm.dbg.declare(metadata i32* %zero_encoding, metadata !7497, metadata !1868), !dbg !7498
  call void @llvm.dbg.declare(metadata i32* %type34_first, metadata !7499, metadata !1868), !dbg !7500
  call void @llvm.dbg.declare(metadata float* %type34_div, metadata !7501, metadata !1868), !dbg !7502
  store float 0.000000e+00, float* %type34_div, align 4, !dbg !7502
  call void @llvm.dbg.declare(metadata float* %type34_predictor, metadata !7503, metadata !1868), !dbg !7504
  call void @llvm.dbg.declare(metadata [10 x float]* %samples, metadata !7505, metadata !1868), !dbg !7507
  call void @llvm.dbg.declare(metadata [16 x i32]* %sign_bits, metadata !7508, metadata !1868), !dbg !7510
  %0 = bitcast [16 x i32]* %sign_bits to i8*, !dbg !7510
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 64, i32 16, i1 false), !dbg !7510
  %1 = load i32, i32* %length.addr, align 4, !dbg !7511
  %cmp = icmp eq i32 %1, 0, !dbg !7513
  br i1 %cmp, label %if.then, label %if.end, !dbg !7514

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %sb_min.addr, align 4, !dbg !7515
  store i32 %2, i32* %sb, align 4, !dbg !7518
  br label %for.cond, !dbg !7519

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %sb, align 4, !dbg !7520
  %4 = load i32, i32* %sb_max.addr, align 4, !dbg !7523
  %cmp1 = icmp slt i32 %3, %4, !dbg !7524
  br i1 %cmp1, label %for.body, label %for.end, !dbg !7525

for.body:                                         ; preds = %for.cond
  %5 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7526
  %6 = load i32, i32* %sb, align 4, !dbg !7527
  call void @build_sb_samples_from_noise(%struct.QDM2Context* %5, i32 %6), !dbg !7528
  br label %for.inc, !dbg !7528

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %sb, align 4, !dbg !7529
  %inc = add nsw i32 %7, 1, !dbg !7529
  store i32 %inc, i32* %sb, align 4, !dbg !7529
  br label %for.cond, !dbg !7531, !llvm.loop !7532

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7534
  br label %return, !dbg !7534

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %sb_min.addr, align 4, !dbg !7535
  store i32 %8, i32* %sb, align 4, !dbg !7537
  br label %for.cond2, !dbg !7538

for.cond2:                                        ; preds = %for.inc538, %if.end
  %9 = load i32, i32* %sb, align 4, !dbg !7539
  %10 = load i32, i32* %sb_max.addr, align 4, !dbg !7542
  %cmp3 = icmp slt i32 %9, %10, !dbg !7543
  br i1 %cmp3, label %for.body4, label %for.end540, !dbg !7544

for.body4:                                        ; preds = %for.cond2
  %11 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7545
  %nb_channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %11, i32 0, i32 0, !dbg !7547
  %12 = load i32, i32* %nb_channels, align 32, !dbg !7547
  store i32 %12, i32* %channels, align 4, !dbg !7548
  %13 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7549
  %nb_channels5 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %13, i32 0, i32 0, !dbg !7551
  %14 = load i32, i32* %nb_channels5, align 32, !dbg !7551
  %cmp6 = icmp sle i32 %14, 1, !dbg !7552
  br i1 %cmp6, label %if.then8, label %lor.lhs.false, !dbg !7553

lor.lhs.false:                                    ; preds = %for.body4
  %15 = load i32, i32* %sb, align 4, !dbg !7554
  %cmp7 = icmp slt i32 %15, 12, !dbg !7556
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !7557

if.then8:                                         ; preds = %lor.lhs.false, %for.body4
  store i32 0, i32* %joined_stereo, align 4, !dbg !7558
  br label %if.end15, !dbg !7559

if.else:                                          ; preds = %lor.lhs.false
  %16 = load i32, i32* %sb, align 4, !dbg !7560
  %cmp9 = icmp sge i32 %16, 24, !dbg !7562
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !7563

if.then10:                                        ; preds = %if.else
  store i32 1, i32* %joined_stereo, align 4, !dbg !7564
  br label %if.end14, !dbg !7565

if.else11:                                        ; preds = %if.else
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7566
  %call = call i32 @get_bits_left(%struct.GetBitContext* %17), !dbg !7567
  %cmp12 = icmp sge i32 %call, 1, !dbg !7568
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !7569

cond.true:                                        ; preds = %if.else11
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7570
  %call13 = call i32 @get_bits1(%struct.GetBitContext* %18), !dbg !7572
  br label %cond.end, !dbg !7573

cond.false:                                       ; preds = %if.else11
  br label %cond.end, !dbg !7574

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call13, %cond.true ], [ 0, %cond.false ], !dbg !7576
  store i32 %cond, i32* %joined_stereo, align 4, !dbg !7578
  br label %if.end14

if.end14:                                         ; preds = %cond.end, %if.then10
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then8
  %19 = load i32, i32* %joined_stereo, align 4, !dbg !7579
  %tobool = icmp ne i32 %19, 0, !dbg !7579
  br i1 %tobool, label %if.then16, label %if.end68, !dbg !7581

if.then16:                                        ; preds = %if.end15
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7582
  %call17 = call i32 @get_bits_left(%struct.GetBitContext* %20), !dbg !7585
  %cmp18 = icmp sge i32 %call17, 16, !dbg !7586
  br i1 %cmp18, label %if.then19, label %if.end27, !dbg !7587

if.then19:                                        ; preds = %if.then16
  store i32 0, i32* %j, align 4, !dbg !7588
  br label %for.cond20, !dbg !7590

for.cond20:                                       ; preds = %for.inc24, %if.then19
  %21 = load i32, i32* %j, align 4, !dbg !7591
  %cmp21 = icmp slt i32 %21, 16, !dbg !7594
  br i1 %cmp21, label %for.body22, label %for.end26, !dbg !7595

for.body22:                                       ; preds = %for.cond20
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7596
  %call23 = call i32 @get_bits1(%struct.GetBitContext* %22), !dbg !7597
  %23 = load i32, i32* %j, align 4, !dbg !7598
  %idxprom = sext i32 %23 to i64, !dbg !7599
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %sign_bits, i64 0, i64 %idxprom, !dbg !7599
  store i32 %call23, i32* %arrayidx, align 4, !dbg !7600
  br label %for.inc24, !dbg !7599

for.inc24:                                        ; preds = %for.body22
  %24 = load i32, i32* %j, align 4, !dbg !7601
  %inc25 = add nsw i32 %24, 1, !dbg !7601
  store i32 %inc25, i32* %j, align 4, !dbg !7601
  br label %for.cond20, !dbg !7603, !llvm.loop !7604

for.end26:                                        ; preds = %for.cond20
  br label %if.end27, !dbg !7606

if.end27:                                         ; preds = %for.end26, %if.then16
  store i32 0, i32* %j, align 4, !dbg !7608
  br label %for.cond28, !dbg !7610

for.cond28:                                       ; preds = %for.inc59, %if.end27
  %25 = load i32, i32* %j, align 4, !dbg !7611
  %cmp29 = icmp slt i32 %25, 64, !dbg !7614
  br i1 %cmp29, label %for.body30, label %for.end61, !dbg !7615

for.body30:                                       ; preds = %for.cond28
  %26 = load i32, i32* %j, align 4, !dbg !7616
  %idxprom31 = sext i32 %26 to i64, !dbg !7618
  %27 = load i32, i32* %sb, align 4, !dbg !7619
  %idxprom32 = sext i32 %27 to i64, !dbg !7618
  %28 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7618
  %coding_method = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %28, i32 0, i32 39, !dbg !7620
  %arrayidx33 = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %coding_method, i64 0, i64 1, !dbg !7618
  %arrayidx34 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx33, i64 0, i64 %idxprom32, !dbg !7618
  %arrayidx35 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx34, i64 0, i64 %idxprom31, !dbg !7618
  %29 = load i8, i8* %arrayidx35, align 1, !dbg !7618
  %conv = sext i8 %29 to i32, !dbg !7618
  %30 = load i32, i32* %j, align 4, !dbg !7621
  %idxprom36 = sext i32 %30 to i64, !dbg !7622
  %31 = load i32, i32* %sb, align 4, !dbg !7623
  %idxprom37 = sext i32 %31 to i64, !dbg !7622
  %32 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7622
  %coding_method38 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %32, i32 0, i32 39, !dbg !7624
  %arrayidx39 = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %coding_method38, i64 0, i64 0, !dbg !7622
  %arrayidx40 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx39, i64 0, i64 %idxprom37, !dbg !7622
  %arrayidx41 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx40, i64 0, i64 %idxprom36, !dbg !7622
  %33 = load i8, i8* %arrayidx41, align 1, !dbg !7622
  %conv42 = sext i8 %33 to i32, !dbg !7622
  %cmp43 = icmp sgt i32 %conv, %conv42, !dbg !7625
  br i1 %cmp43, label %if.then45, label %if.end58, !dbg !7626

if.then45:                                        ; preds = %for.body30
  %34 = load i32, i32* %j, align 4, !dbg !7627
  %idxprom46 = sext i32 %34 to i64, !dbg !7628
  %35 = load i32, i32* %sb, align 4, !dbg !7629
  %idxprom47 = sext i32 %35 to i64, !dbg !7628
  %36 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7628
  %coding_method48 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %36, i32 0, i32 39, !dbg !7630
  %arrayidx49 = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %coding_method48, i64 0, i64 1, !dbg !7628
  %arrayidx50 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx49, i64 0, i64 %idxprom47, !dbg !7628
  %arrayidx51 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx50, i64 0, i64 %idxprom46, !dbg !7628
  %37 = load i8, i8* %arrayidx51, align 1, !dbg !7628
  %38 = load i32, i32* %j, align 4, !dbg !7631
  %idxprom52 = sext i32 %38 to i64, !dbg !7632
  %39 = load i32, i32* %sb, align 4, !dbg !7633
  %idxprom53 = sext i32 %39 to i64, !dbg !7632
  %40 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7632
  %coding_method54 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %40, i32 0, i32 39, !dbg !7634
  %arrayidx55 = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %coding_method54, i64 0, i64 0, !dbg !7632
  %arrayidx56 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx55, i64 0, i64 %idxprom53, !dbg !7632
  %arrayidx57 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx56, i64 0, i64 %idxprom52, !dbg !7632
  store i8 %37, i8* %arrayidx57, align 1, !dbg !7635
  br label %if.end58, !dbg !7632

if.end58:                                         ; preds = %if.then45, %for.body30
  br label %for.inc59, !dbg !7636

for.inc59:                                        ; preds = %if.end58
  %41 = load i32, i32* %j, align 4, !dbg !7638
  %inc60 = add nsw i32 %41, 1, !dbg !7638
  store i32 %inc60, i32* %j, align 4, !dbg !7638
  br label %for.cond28, !dbg !7640, !llvm.loop !7641

for.end61:                                        ; preds = %for.cond28
  %42 = load i32, i32* %sb, align 4, !dbg !7643
  %43 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7645
  %nb_channels62 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %43, i32 0, i32 0, !dbg !7646
  %44 = load i32, i32* %nb_channels62, align 32, !dbg !7646
  %45 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7647
  %coding_method63 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %45, i32 0, i32 39, !dbg !7648
  %arraydecay = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %coding_method63, i32 0, i32 0, !dbg !7647
  %call64 = call i32 @fix_coding_method_array(i32 %42, i32 %44, [30 x [64 x i8]]* %arraydecay), !dbg !7649
  %tobool65 = icmp ne i32 %call64, 0, !dbg !7649
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !7650

if.then66:                                        ; preds = %for.end61
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i32 0, i32 0)), !dbg !7651
  %46 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7653
  %47 = load i32, i32* %sb, align 4, !dbg !7654
  call void @build_sb_samples_from_noise(%struct.QDM2Context* %46, i32 %47), !dbg !7655
  br label %for.inc538, !dbg !7656

if.end67:                                         ; preds = %for.end61
  store i32 1, i32* %channels, align 4, !dbg !7657
  br label %if.end68, !dbg !7658

if.end68:                                         ; preds = %if.end67, %if.end15
  store i32 0, i32* %ch, align 4, !dbg !7659
  br label %for.cond69, !dbg !7661

for.cond69:                                       ; preds = %for.inc535, %if.end68
  %48 = load i32, i32* %ch, align 4, !dbg !7662
  %49 = load i32, i32* %channels, align 4, !dbg !7665
  %cmp70 = icmp slt i32 %48, %49, !dbg !7666
  br i1 %cmp70, label %for.body72, label %for.end537, !dbg !7667

for.body72:                                       ; preds = %for.cond69
  %50 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7668
  %noise_idx = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %50, i32 0, i32 51, !dbg !7671
  %51 = load i32, i32* %noise_idx, align 4, !dbg !7671
  %cmp73 = icmp sge i32 %51, 3840, !dbg !7672
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !7673

if.then75:                                        ; preds = %for.body72
  %52 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7674
  %noise_idx76 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %52, i32 0, i32 51, !dbg !7676
  %53 = load i32, i32* %noise_idx76, align 4, !dbg !7677
  %sub = sub nsw i32 %53, 3840, !dbg !7677
  store i32 %sub, i32* %noise_idx76, align 4, !dbg !7677
  br label %if.end77, !dbg !7678

if.end77:                                         ; preds = %if.then75, %for.body72
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7679
  %call78 = call i32 @get_bits_left(%struct.GetBitContext* %54), !dbg !7680
  %cmp79 = icmp sge i32 %call78, 1, !dbg !7681
  br i1 %cmp79, label %cond.true81, label %cond.false83, !dbg !7682

cond.true81:                                      ; preds = %if.end77
  %55 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7683
  %call82 = call i32 @get_bits1(%struct.GetBitContext* %55), !dbg !7685
  br label %cond.end84, !dbg !7686

cond.false83:                                     ; preds = %if.end77
  br label %cond.end84, !dbg !7687

cond.end84:                                       ; preds = %cond.false83, %cond.true81
  %cond85 = phi i32 [ %call82, %cond.true81 ], [ 0, %cond.false83 ], !dbg !7689
  store i32 %cond85, i32* %zero_encoding, align 4, !dbg !7691
  store float 0.000000e+00, float* %type34_predictor, align 4, !dbg !7692
  store i32 1, i32* %type34_first, align 4, !dbg !7693
  store i32 0, i32* %j, align 4, !dbg !7694
  br label %for.cond86, !dbg !7696

for.cond86:                                       ; preds = %if.end532, %cond.end84
  %56 = load i32, i32* %j, align 4, !dbg !7697
  %cmp87 = icmp slt i32 %56, 128, !dbg !7700
  br i1 %cmp87, label %for.body89, label %for.end534, !dbg !7701

for.body89:                                       ; preds = %for.cond86
  %57 = load i32, i32* %j, align 4, !dbg !7702
  %div = sdiv i32 %57, 2, !dbg !7704
  %idxprom90 = sext i32 %div to i64, !dbg !7705
  %58 = load i32, i32* %sb, align 4, !dbg !7706
  %idxprom91 = sext i32 %58 to i64, !dbg !7705
  %59 = load i32, i32* %ch, align 4, !dbg !7707
  %idxprom92 = sext i32 %59 to i64, !dbg !7705
  %60 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7705
  %coding_method93 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %60, i32 0, i32 39, !dbg !7708
  %arrayidx94 = getelementptr inbounds [2 x [30 x [64 x i8]]], [2 x [30 x [64 x i8]]]* %coding_method93, i64 0, i64 %idxprom92, !dbg !7705
  %arrayidx95 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx94, i64 0, i64 %idxprom91, !dbg !7705
  %arrayidx96 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx95, i64 0, i64 %idxprom90, !dbg !7705
  %61 = load i8, i8* %arrayidx96, align 1, !dbg !7705
  %conv97 = sext i8 %61 to i32, !dbg !7705
  switch i32 %conv97, label %sw.default [
    i32 8, label %sw.bb
    i32 10, label %sw.bb191
    i32 16, label %sw.bb225
    i32 24, label %sw.bb301
    i32 30, label %sw.bb347
    i32 34, label %sw.bb371
  ], !dbg !7709

sw.bb:                                            ; preds = %for.body89
  %62 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7710
  %call98 = call i32 @get_bits_left(%struct.GetBitContext* %62), !dbg !7713
  %cmp99 = icmp sge i32 %call98, 10, !dbg !7714
  br i1 %cmp99, label %if.then101, label %if.else173, !dbg !7715

if.then101:                                       ; preds = %sw.bb
  %63 = load i32, i32* %zero_encoding, align 4, !dbg !7716
  %tobool102 = icmp ne i32 %63, 0, !dbg !7716
  br i1 %tobool102, label %if.then103, label %if.else130, !dbg !7719

if.then103:                                       ; preds = %if.then101
  store i32 0, i32* %k, align 4, !dbg !7720
  br label %for.cond104, !dbg !7723

for.cond104:                                      ; preds = %for.inc127, %if.then103
  %64 = load i32, i32* %k, align 4, !dbg !7724
  %cmp105 = icmp slt i32 %64, 5, !dbg !7727
  br i1 %cmp105, label %for.body107, label %for.end129, !dbg !7728

for.body107:                                      ; preds = %for.cond104
  %65 = load i32, i32* %j, align 4, !dbg !7729
  %66 = load i32, i32* %k, align 4, !dbg !7732
  %mul = mul nsw i32 2, %66, !dbg !7733
  %add = add nsw i32 %65, %mul, !dbg !7734
  %cmp108 = icmp sge i32 %add, 128, !dbg !7735
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !7736

if.then110:                                       ; preds = %for.body107
  br label %for.end129, !dbg !7737

if.end111:                                        ; preds = %for.body107
  %67 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7738
  %call112 = call i32 @get_bits1(%struct.GetBitContext* %67), !dbg !7739
  %tobool113 = icmp ne i32 %call112, 0, !dbg !7739
  br i1 %tobool113, label %cond.true114, label %cond.false121, !dbg !7739

cond.true114:                                     ; preds = %if.end111
  %68 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7740
  %call115 = call i32 @get_bits1(%struct.GetBitContext* %68), !dbg !7742
  %mul116 = mul i32 2, %call115, !dbg !7743
  %idxprom117 = zext i32 %mul116 to i64, !dbg !7744
  %69 = load i32, i32* %joined_stereo, align 4, !dbg !7745
  %idxprom118 = sext i32 %69 to i64, !dbg !7744
  %arrayidx119 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* @dequant_1bit, i64 0, i64 %idxprom118, !dbg !7744
  %arrayidx120 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx119, i64 0, i64 %idxprom117, !dbg !7744
  %70 = load float, float* %arrayidx120, align 4, !dbg !7744
  br label %cond.end122, !dbg !7746

cond.false121:                                    ; preds = %if.end111
  br label %cond.end122, !dbg !7747

cond.end122:                                      ; preds = %cond.false121, %cond.true114
  %cond123 = phi float [ %70, %cond.true114 ], [ 0.000000e+00, %cond.false121 ], !dbg !7749
  %71 = load i32, i32* %k, align 4, !dbg !7751
  %mul124 = mul nsw i32 2, %71, !dbg !7752
  %idxprom125 = sext i32 %mul124 to i64, !dbg !7753
  %arrayidx126 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 %idxprom125, !dbg !7753
  store float %cond123, float* %arrayidx126, align 4, !dbg !7754
  br label %for.inc127, !dbg !7755

for.inc127:                                       ; preds = %cond.end122
  %72 = load i32, i32* %k, align 4, !dbg !7756
  %inc128 = add nsw i32 %72, 1, !dbg !7756
  store i32 %inc128, i32* %k, align 4, !dbg !7756
  br label %for.cond104, !dbg !7758, !llvm.loop !7759

for.end129:                                       ; preds = %if.then110, %for.cond104
  br label %if.end154, !dbg !7761

if.else130:                                       ; preds = %if.then101
  %73 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7762
  %call131 = call i32 @get_bits(%struct.GetBitContext* %73, i32 8), !dbg !7764
  store i32 %call131, i32* %n, align 4, !dbg !7765
  %74 = load i32, i32* %n, align 4, !dbg !7766
  %cmp132 = icmp sge i32 %74, 243, !dbg !7768
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !7769

if.then134:                                       ; preds = %if.else130
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i32 0, i32 0)), !dbg !7770
  store i32 -1094995529, i32* %retval, align 4, !dbg !7772
  br label %return, !dbg !7772

if.end135:                                        ; preds = %if.else130
  store i32 0, i32* %k, align 4, !dbg !7773
  br label %for.cond136, !dbg !7775

for.cond136:                                      ; preds = %for.inc151, %if.end135
  %75 = load i32, i32* %k, align 4, !dbg !7776
  %cmp137 = icmp slt i32 %75, 5, !dbg !7779
  br i1 %cmp137, label %for.body139, label %for.end153, !dbg !7780

for.body139:                                      ; preds = %for.cond136
  %76 = load i32, i32* %k, align 4, !dbg !7781
  %idxprom140 = sext i32 %76 to i64, !dbg !7782
  %77 = load i32, i32* %n, align 4, !dbg !7783
  %idxprom141 = sext i32 %77 to i64, !dbg !7782
  %arrayidx142 = getelementptr inbounds [256 x [5 x i8]], [256 x [5 x i8]]* @random_dequant_index, i64 0, i64 %idxprom141, !dbg !7782
  %arrayidx143 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx142, i64 0, i64 %idxprom140, !dbg !7782
  %78 = load i8, i8* %arrayidx143, align 1, !dbg !7782
  %idxprom144 = zext i8 %78 to i64, !dbg !7784
  %79 = load i32, i32* %joined_stereo, align 4, !dbg !7785
  %idxprom145 = sext i32 %79 to i64, !dbg !7784
  %arrayidx146 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* @dequant_1bit, i64 0, i64 %idxprom145, !dbg !7784
  %arrayidx147 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx146, i64 0, i64 %idxprom144, !dbg !7784
  %80 = load float, float* %arrayidx147, align 4, !dbg !7784
  %81 = load i32, i32* %k, align 4, !dbg !7786
  %mul148 = mul nsw i32 2, %81, !dbg !7787
  %idxprom149 = sext i32 %mul148 to i64, !dbg !7788
  %arrayidx150 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 %idxprom149, !dbg !7788
  store float %80, float* %arrayidx150, align 4, !dbg !7789
  br label %for.inc151, !dbg !7788

for.inc151:                                       ; preds = %for.body139
  %82 = load i32, i32* %k, align 4, !dbg !7790
  %inc152 = add nsw i32 %82, 1, !dbg !7790
  store i32 %inc152, i32* %k, align 4, !dbg !7790
  br label %for.cond136, !dbg !7792, !llvm.loop !7793

for.end153:                                       ; preds = %for.cond136
  br label %if.end154

if.end154:                                        ; preds = %for.end153, %for.end129
  store i32 0, i32* %k, align 4, !dbg !7795
  br label %for.cond155, !dbg !7797

for.cond155:                                      ; preds = %for.inc170, %if.end154
  %83 = load i32, i32* %k, align 4, !dbg !7798
  %cmp156 = icmp slt i32 %83, 5, !dbg !7801
  br i1 %cmp156, label %for.body158, label %for.end172, !dbg !7802

for.body158:                                      ; preds = %for.cond155
  %84 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7803
  %noise_idx159 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %84, i32 0, i32 51, !dbg !7804
  %85 = load i32, i32* %noise_idx159, align 4, !dbg !7805
  %inc160 = add nsw i32 %85, 1, !dbg !7805
  store i32 %inc160, i32* %noise_idx159, align 4, !dbg !7805
  %idxprom161 = sext i32 %85 to i64, !dbg !7806
  %arrayidx162 = getelementptr inbounds [4116 x float], [4116 x float]* @noise_table, i64 0, i64 %idxprom161, !dbg !7806
  %86 = load float, float* %arrayidx162, align 4, !dbg !7806
  %87 = load i32, i32* %sb, align 4, !dbg !7807
  %idxprom163 = sext i32 %87 to i64, !dbg !7808
  %arrayidx164 = getelementptr inbounds [32 x float], [32 x float]* @sb_noise_attenuation, i64 0, i64 %idxprom163, !dbg !7808
  %88 = load float, float* %arrayidx164, align 4, !dbg !7808
  %mul165 = fmul float %86, %88, !dbg !7809
  %89 = load i32, i32* %k, align 4, !dbg !7810
  %mul166 = mul nsw i32 2, %89, !dbg !7811
  %add167 = add nsw i32 %mul166, 1, !dbg !7812
  %idxprom168 = sext i32 %add167 to i64, !dbg !7813
  %arrayidx169 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 %idxprom168, !dbg !7813
  store float %mul165, float* %arrayidx169, align 4, !dbg !7814
  br label %for.inc170, !dbg !7813

for.inc170:                                       ; preds = %for.body158
  %90 = load i32, i32* %k, align 4, !dbg !7815
  %inc171 = add nsw i32 %90, 1, !dbg !7815
  store i32 %inc171, i32* %k, align 4, !dbg !7815
  br label %for.cond155, !dbg !7817, !llvm.loop !7818

for.end172:                                       ; preds = %for.cond155
  br label %if.end190, !dbg !7820

if.else173:                                       ; preds = %sw.bb
  store i32 0, i32* %k, align 4, !dbg !7821
  br label %for.cond174, !dbg !7824

for.cond174:                                      ; preds = %for.inc187, %if.else173
  %91 = load i32, i32* %k, align 4, !dbg !7825
  %cmp175 = icmp slt i32 %91, 10, !dbg !7828
  br i1 %cmp175, label %for.body177, label %for.end189, !dbg !7829

for.body177:                                      ; preds = %for.cond174
  %92 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7830
  %noise_idx178 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %92, i32 0, i32 51, !dbg !7831
  %93 = load i32, i32* %noise_idx178, align 4, !dbg !7832
  %inc179 = add nsw i32 %93, 1, !dbg !7832
  store i32 %inc179, i32* %noise_idx178, align 4, !dbg !7832
  %idxprom180 = sext i32 %93 to i64, !dbg !7833
  %arrayidx181 = getelementptr inbounds [4116 x float], [4116 x float]* @noise_table, i64 0, i64 %idxprom180, !dbg !7833
  %94 = load float, float* %arrayidx181, align 4, !dbg !7833
  %95 = load i32, i32* %sb, align 4, !dbg !7834
  %idxprom182 = sext i32 %95 to i64, !dbg !7835
  %arrayidx183 = getelementptr inbounds [32 x float], [32 x float]* @sb_noise_attenuation, i64 0, i64 %idxprom182, !dbg !7835
  %96 = load float, float* %arrayidx183, align 4, !dbg !7835
  %mul184 = fmul float %94, %96, !dbg !7836
  %97 = load i32, i32* %k, align 4, !dbg !7837
  %idxprom185 = sext i32 %97 to i64, !dbg !7838
  %arrayidx186 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 %idxprom185, !dbg !7838
  store float %mul184, float* %arrayidx186, align 4, !dbg !7839
  br label %for.inc187, !dbg !7838

for.inc187:                                       ; preds = %for.body177
  %98 = load i32, i32* %k, align 4, !dbg !7840
  %inc188 = add nsw i32 %98, 1, !dbg !7840
  store i32 %inc188, i32* %k, align 4, !dbg !7840
  br label %for.cond174, !dbg !7842, !llvm.loop !7843

for.end189:                                       ; preds = %for.cond174
  br label %if.end190

if.end190:                                        ; preds = %for.end189, %for.end172
  store i32 10, i32* %run, align 4, !dbg !7845
  br label %sw.epilog, !dbg !7846

sw.bb191:                                         ; preds = %for.body89
  %99 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7847
  %call192 = call i32 @get_bits_left(%struct.GetBitContext* %99), !dbg !7849
  %cmp193 = icmp sge i32 %call192, 1, !dbg !7850
  br i1 %cmp193, label %if.then195, label %if.else215, !dbg !7851

if.then195:                                       ; preds = %sw.bb191
  call void @llvm.dbg.declare(metadata float* %f, metadata !7852, metadata !1868), !dbg !7854
  store float 0x3FE9EB8520000000, float* %f, align 4, !dbg !7854
  %100 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7855
  %call196 = call i32 @get_bits1(%struct.GetBitContext* %100), !dbg !7857
  %tobool197 = icmp ne i32 %call196, 0, !dbg !7857
  br i1 %tobool197, label %if.then198, label %if.end200, !dbg !7858

if.then198:                                       ; preds = %if.then195
  %101 = load float, float* %f, align 4, !dbg !7859
  %sub199 = fsub float -0.000000e+00, %101, !dbg !7860
  store float %sub199, float* %f, align 4, !dbg !7861
  br label %if.end200, !dbg !7862

if.end200:                                        ; preds = %if.then198, %if.then195
  %102 = load i32, i32* %sb, align 4, !dbg !7863
  %add201 = add nsw i32 %102, 1, !dbg !7864
  %103 = load i32, i32* %j, align 4, !dbg !7865
  %104 = load i32, i32* %ch, align 4, !dbg !7866
  %mul202 = mul nsw i32 5, %104, !dbg !7867
  %add203 = add nsw i32 %103, %mul202, !dbg !7868
  %add204 = add nsw i32 %add203, 1, !dbg !7869
  %mul205 = mul nsw i32 %add201, %add204, !dbg !7870
  %and = and i32 %mul205, 127, !dbg !7871
  %idxprom206 = sext i32 %and to i64, !dbg !7872
  %arrayidx207 = getelementptr inbounds [128 x float], [128 x float]* @noise_samples, i64 0, i64 %idxprom206, !dbg !7872
  %105 = load float, float* %arrayidx207, align 4, !dbg !7872
  %conv208 = fpext float %105 to double, !dbg !7872
  %mul209 = fmul double %conv208, 9.000000e+00, !dbg !7873
  %div210 = fdiv double %mul209, 4.000000e+01, !dbg !7874
  %106 = load float, float* %f, align 4, !dbg !7875
  %conv211 = fpext float %106 to double, !dbg !7875
  %sub212 = fsub double %conv211, %div210, !dbg !7875
  %conv213 = fptrunc double %sub212 to float, !dbg !7875
  store float %conv213, float* %f, align 4, !dbg !7875
  %107 = load float, float* %f, align 4, !dbg !7876
  %arrayidx214 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 0, !dbg !7877
  store float %107, float* %arrayidx214, align 16, !dbg !7878
  br label %if.end224, !dbg !7879

if.else215:                                       ; preds = %sw.bb191
  %108 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7880
  %noise_idx216 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %108, i32 0, i32 51, !dbg !7882
  %109 = load i32, i32* %noise_idx216, align 4, !dbg !7883
  %inc217 = add nsw i32 %109, 1, !dbg !7883
  store i32 %inc217, i32* %noise_idx216, align 4, !dbg !7883
  %idxprom218 = sext i32 %109 to i64, !dbg !7884
  %arrayidx219 = getelementptr inbounds [4116 x float], [4116 x float]* @noise_table, i64 0, i64 %idxprom218, !dbg !7884
  %110 = load float, float* %arrayidx219, align 4, !dbg !7884
  %111 = load i32, i32* %sb, align 4, !dbg !7885
  %idxprom220 = sext i32 %111 to i64, !dbg !7886
  %arrayidx221 = getelementptr inbounds [32 x float], [32 x float]* @sb_noise_attenuation, i64 0, i64 %idxprom220, !dbg !7886
  %112 = load float, float* %arrayidx221, align 4, !dbg !7886
  %mul222 = fmul float %110, %112, !dbg !7887
  %arrayidx223 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 0, !dbg !7888
  store float %mul222, float* %arrayidx223, align 16, !dbg !7889
  br label %if.end224

if.end224:                                        ; preds = %if.else215, %if.end200
  store i32 1, i32* %run, align 4, !dbg !7890
  br label %sw.epilog, !dbg !7891

sw.bb225:                                         ; preds = %for.body89
  %113 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7892
  %call226 = call i32 @get_bits_left(%struct.GetBitContext* %113), !dbg !7894
  %cmp227 = icmp sge i32 %call226, 10, !dbg !7895
  br i1 %cmp227, label %if.then229, label %if.else283, !dbg !7896

if.then229:                                       ; preds = %sw.bb225
  %114 = load i32, i32* %zero_encoding, align 4, !dbg !7897
  %tobool230 = icmp ne i32 %114, 0, !dbg !7897
  br i1 %tobool230, label %if.then231, label %if.else259, !dbg !7900

if.then231:                                       ; preds = %if.then229
  store i32 0, i32* %k, align 4, !dbg !7901
  br label %for.cond232, !dbg !7904

for.cond232:                                      ; preds = %for.inc256, %if.then231
  %115 = load i32, i32* %k, align 4, !dbg !7905
  %cmp233 = icmp slt i32 %115, 5, !dbg !7908
  br i1 %cmp233, label %for.body235, label %for.end258, !dbg !7909

for.body235:                                      ; preds = %for.cond232
  %116 = load i32, i32* %j, align 4, !dbg !7910
  %117 = load i32, i32* %k, align 4, !dbg !7913
  %add236 = add nsw i32 %116, %117, !dbg !7914
  %cmp237 = icmp sge i32 %add236, 128, !dbg !7915
  br i1 %cmp237, label %if.then239, label %if.end240, !dbg !7916

if.then239:                                       ; preds = %for.body235
  br label %for.end258, !dbg !7917

if.end240:                                        ; preds = %for.body235
  %118 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7918
  %call241 = call i32 @get_bits1(%struct.GetBitContext* %118), !dbg !7919
  %cmp242 = icmp eq i32 %call241, 0, !dbg !7920
  br i1 %cmp242, label %cond.true244, label %cond.false245, !dbg !7921

cond.true244:                                     ; preds = %if.end240
  br label %cond.end252, !dbg !7922

cond.false245:                                    ; preds = %if.end240
  %119 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7924
  %call246 = call i32 @get_bits1(%struct.GetBitContext* %119), !dbg !7926
  %mul247 = mul i32 2, %call246, !dbg !7927
  %idxprom248 = zext i32 %mul247 to i64, !dbg !7928
  %120 = load i32, i32* %joined_stereo, align 4, !dbg !7929
  %idxprom249 = sext i32 %120 to i64, !dbg !7928
  %arrayidx250 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* @dequant_1bit, i64 0, i64 %idxprom249, !dbg !7928
  %arrayidx251 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx250, i64 0, i64 %idxprom248, !dbg !7928
  %121 = load float, float* %arrayidx251, align 4, !dbg !7928
  br label %cond.end252, !dbg !7930

cond.end252:                                      ; preds = %cond.false245, %cond.true244
  %cond253 = phi float [ 0.000000e+00, %cond.true244 ], [ %121, %cond.false245 ], !dbg !7931
  %122 = load i32, i32* %k, align 4, !dbg !7933
  %idxprom254 = sext i32 %122 to i64, !dbg !7934
  %arrayidx255 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 %idxprom254, !dbg !7934
  store float %cond253, float* %arrayidx255, align 4, !dbg !7935
  br label %for.inc256, !dbg !7936

for.inc256:                                       ; preds = %cond.end252
  %123 = load i32, i32* %k, align 4, !dbg !7937
  %inc257 = add nsw i32 %123, 1, !dbg !7937
  store i32 %inc257, i32* %k, align 4, !dbg !7937
  br label %for.cond232, !dbg !7939, !llvm.loop !7940

for.end258:                                       ; preds = %if.then239, %for.cond232
  br label %if.end282, !dbg !7942

if.else259:                                       ; preds = %if.then229
  %124 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7943
  %call260 = call i32 @get_bits(%struct.GetBitContext* %124, i32 8), !dbg !7945
  store i32 %call260, i32* %n, align 4, !dbg !7946
  %125 = load i32, i32* %n, align 4, !dbg !7947
  %cmp261 = icmp sge i32 %125, 243, !dbg !7949
  br i1 %cmp261, label %if.then263, label %if.end264, !dbg !7950

if.then263:                                       ; preds = %if.else259
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i32 0, i32 0)), !dbg !7951
  store i32 -1094995529, i32* %retval, align 4, !dbg !7953
  br label %return, !dbg !7953

if.end264:                                        ; preds = %if.else259
  store i32 0, i32* %k, align 4, !dbg !7954
  br label %for.cond265, !dbg !7956

for.cond265:                                      ; preds = %for.inc279, %if.end264
  %126 = load i32, i32* %k, align 4, !dbg !7957
  %cmp266 = icmp slt i32 %126, 5, !dbg !7960
  br i1 %cmp266, label %for.body268, label %for.end281, !dbg !7961

for.body268:                                      ; preds = %for.cond265
  %127 = load i32, i32* %k, align 4, !dbg !7962
  %idxprom269 = sext i32 %127 to i64, !dbg !7963
  %128 = load i32, i32* %n, align 4, !dbg !7964
  %idxprom270 = sext i32 %128 to i64, !dbg !7963
  %arrayidx271 = getelementptr inbounds [256 x [5 x i8]], [256 x [5 x i8]]* @random_dequant_index, i64 0, i64 %idxprom270, !dbg !7963
  %arrayidx272 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx271, i64 0, i64 %idxprom269, !dbg !7963
  %129 = load i8, i8* %arrayidx272, align 1, !dbg !7963
  %idxprom273 = zext i8 %129 to i64, !dbg !7965
  %130 = load i32, i32* %joined_stereo, align 4, !dbg !7966
  %idxprom274 = sext i32 %130 to i64, !dbg !7965
  %arrayidx275 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* @dequant_1bit, i64 0, i64 %idxprom274, !dbg !7965
  %arrayidx276 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx275, i64 0, i64 %idxprom273, !dbg !7965
  %131 = load float, float* %arrayidx276, align 4, !dbg !7965
  %132 = load i32, i32* %k, align 4, !dbg !7967
  %idxprom277 = sext i32 %132 to i64, !dbg !7968
  %arrayidx278 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 %idxprom277, !dbg !7968
  store float %131, float* %arrayidx278, align 4, !dbg !7969
  br label %for.inc279, !dbg !7968

for.inc279:                                       ; preds = %for.body268
  %133 = load i32, i32* %k, align 4, !dbg !7970
  %inc280 = add nsw i32 %133, 1, !dbg !7970
  store i32 %inc280, i32* %k, align 4, !dbg !7970
  br label %for.cond265, !dbg !7972, !llvm.loop !7973

for.end281:                                       ; preds = %for.cond265
  br label %if.end282

if.end282:                                        ; preds = %for.end281, %for.end258
  br label %if.end300, !dbg !7975

if.else283:                                       ; preds = %sw.bb225
  store i32 0, i32* %k, align 4, !dbg !7976
  br label %for.cond284, !dbg !7979

for.cond284:                                      ; preds = %for.inc297, %if.else283
  %134 = load i32, i32* %k, align 4, !dbg !7980
  %cmp285 = icmp slt i32 %134, 5, !dbg !7983
  br i1 %cmp285, label %for.body287, label %for.end299, !dbg !7984

for.body287:                                      ; preds = %for.cond284
  %135 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !7985
  %noise_idx288 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %135, i32 0, i32 51, !dbg !7986
  %136 = load i32, i32* %noise_idx288, align 4, !dbg !7987
  %inc289 = add nsw i32 %136, 1, !dbg !7987
  store i32 %inc289, i32* %noise_idx288, align 4, !dbg !7987
  %idxprom290 = sext i32 %136 to i64, !dbg !7988
  %arrayidx291 = getelementptr inbounds [4116 x float], [4116 x float]* @noise_table, i64 0, i64 %idxprom290, !dbg !7988
  %137 = load float, float* %arrayidx291, align 4, !dbg !7988
  %138 = load i32, i32* %sb, align 4, !dbg !7989
  %idxprom292 = sext i32 %138 to i64, !dbg !7990
  %arrayidx293 = getelementptr inbounds [32 x float], [32 x float]* @sb_noise_attenuation, i64 0, i64 %idxprom292, !dbg !7990
  %139 = load float, float* %arrayidx293, align 4, !dbg !7990
  %mul294 = fmul float %137, %139, !dbg !7991
  %140 = load i32, i32* %k, align 4, !dbg !7992
  %idxprom295 = sext i32 %140 to i64, !dbg !7993
  %arrayidx296 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 %idxprom295, !dbg !7993
  store float %mul294, float* %arrayidx296, align 4, !dbg !7994
  br label %for.inc297, !dbg !7993

for.inc297:                                       ; preds = %for.body287
  %141 = load i32, i32* %k, align 4, !dbg !7995
  %inc298 = add nsw i32 %141, 1, !dbg !7995
  store i32 %inc298, i32* %k, align 4, !dbg !7995
  br label %for.cond284, !dbg !7997, !llvm.loop !7998

for.end299:                                       ; preds = %for.cond284
  br label %if.end300

if.end300:                                        ; preds = %for.end299, %if.end282
  store i32 5, i32* %run, align 4, !dbg !8000
  br label %sw.epilog, !dbg !8001

sw.bb301:                                         ; preds = %for.body89
  %142 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8002
  %call302 = call i32 @get_bits_left(%struct.GetBitContext* %142), !dbg !8004
  %cmp303 = icmp sge i32 %call302, 7, !dbg !8005
  br i1 %cmp303, label %if.then305, label %if.else329, !dbg !8006

if.then305:                                       ; preds = %sw.bb301
  %143 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8007
  %call306 = call i32 @get_bits(%struct.GetBitContext* %143, i32 7), !dbg !8009
  store i32 %call306, i32* %n, align 4, !dbg !8010
  %144 = load i32, i32* %n, align 4, !dbg !8011
  %cmp307 = icmp sge i32 %144, 125, !dbg !8013
  br i1 %cmp307, label %if.then309, label %if.end310, !dbg !8014

if.then309:                                       ; preds = %if.then305
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i32 0, i32 0)), !dbg !8015
  store i32 -1094995529, i32* %retval, align 4, !dbg !8017
  br label %return, !dbg !8017

if.end310:                                        ; preds = %if.then305
  store i32 0, i32* %k, align 4, !dbg !8018
  br label %for.cond311, !dbg !8020

for.cond311:                                      ; preds = %for.inc326, %if.end310
  %145 = load i32, i32* %k, align 4, !dbg !8021
  %cmp312 = icmp slt i32 %145, 3, !dbg !8024
  br i1 %cmp312, label %for.body314, label %for.end328, !dbg !8025

for.body314:                                      ; preds = %for.cond311
  %146 = load i32, i32* %k, align 4, !dbg !8026
  %idxprom315 = sext i32 %146 to i64, !dbg !8027
  %147 = load i32, i32* %n, align 4, !dbg !8028
  %idxprom316 = sext i32 %147 to i64, !dbg !8027
  %arrayidx317 = getelementptr inbounds [128 x [3 x i8]], [128 x [3 x i8]]* @random_dequant_type24, i64 0, i64 %idxprom316, !dbg !8027
  %arrayidx318 = getelementptr inbounds [3 x i8], [3 x i8]* %arrayidx317, i64 0, i64 %idxprom315, !dbg !8027
  %148 = load i8, i8* %arrayidx318, align 1, !dbg !8027
  %conv319 = zext i8 %148 to i32, !dbg !8027
  %conv320 = sitofp i32 %conv319 to double, !dbg !8027
  %sub321 = fsub double %conv320, 2.000000e+00, !dbg !8029
  %mul322 = fmul double %sub321, 5.000000e-01, !dbg !8030
  %conv323 = fptrunc double %mul322 to float, !dbg !8031
  %149 = load i32, i32* %k, align 4, !dbg !8032
  %idxprom324 = sext i32 %149 to i64, !dbg !8033
  %arrayidx325 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 %idxprom324, !dbg !8033
  store float %conv323, float* %arrayidx325, align 4, !dbg !8034
  br label %for.inc326, !dbg !8033

for.inc326:                                       ; preds = %for.body314
  %150 = load i32, i32* %k, align 4, !dbg !8035
  %inc327 = add nsw i32 %150, 1, !dbg !8035
  store i32 %inc327, i32* %k, align 4, !dbg !8035
  br label %for.cond311, !dbg !8037, !llvm.loop !8038

for.end328:                                       ; preds = %for.cond311
  br label %if.end346, !dbg !8040

if.else329:                                       ; preds = %sw.bb301
  store i32 0, i32* %k, align 4, !dbg !8041
  br label %for.cond330, !dbg !8044

for.cond330:                                      ; preds = %for.inc343, %if.else329
  %151 = load i32, i32* %k, align 4, !dbg !8045
  %cmp331 = icmp slt i32 %151, 3, !dbg !8048
  br i1 %cmp331, label %for.body333, label %for.end345, !dbg !8049

for.body333:                                      ; preds = %for.cond330
  %152 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8050
  %noise_idx334 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %152, i32 0, i32 51, !dbg !8051
  %153 = load i32, i32* %noise_idx334, align 4, !dbg !8052
  %inc335 = add nsw i32 %153, 1, !dbg !8052
  store i32 %inc335, i32* %noise_idx334, align 4, !dbg !8052
  %idxprom336 = sext i32 %153 to i64, !dbg !8053
  %arrayidx337 = getelementptr inbounds [4116 x float], [4116 x float]* @noise_table, i64 0, i64 %idxprom336, !dbg !8053
  %154 = load float, float* %arrayidx337, align 4, !dbg !8053
  %155 = load i32, i32* %sb, align 4, !dbg !8054
  %idxprom338 = sext i32 %155 to i64, !dbg !8055
  %arrayidx339 = getelementptr inbounds [32 x float], [32 x float]* @sb_noise_attenuation, i64 0, i64 %idxprom338, !dbg !8055
  %156 = load float, float* %arrayidx339, align 4, !dbg !8055
  %mul340 = fmul float %154, %156, !dbg !8056
  %157 = load i32, i32* %k, align 4, !dbg !8057
  %idxprom341 = sext i32 %157 to i64, !dbg !8058
  %arrayidx342 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 %idxprom341, !dbg !8058
  store float %mul340, float* %arrayidx342, align 4, !dbg !8059
  br label %for.inc343, !dbg !8058

for.inc343:                                       ; preds = %for.body333
  %158 = load i32, i32* %k, align 4, !dbg !8060
  %inc344 = add nsw i32 %158, 1, !dbg !8060
  store i32 %inc344, i32* %k, align 4, !dbg !8060
  br label %for.cond330, !dbg !8062, !llvm.loop !8063

for.end345:                                       ; preds = %for.cond330
  br label %if.end346

if.end346:                                        ; preds = %for.end345, %for.end328
  store i32 3, i32* %run, align 4, !dbg !8065
  br label %sw.epilog, !dbg !8066

sw.bb347:                                         ; preds = %for.body89
  %159 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8067
  %call348 = call i32 @get_bits_left(%struct.GetBitContext* %159), !dbg !8069
  %cmp349 = icmp sge i32 %call348, 4, !dbg !8070
  br i1 %cmp349, label %if.then351, label %if.else361, !dbg !8071

if.then351:                                       ; preds = %sw.bb347
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8072, metadata !1868), !dbg !8074
  %160 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8075
  %call352 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %160, %struct.VLC* @vlc_tab_type30, i32 0, i32 1), !dbg !8076
  store i32 %call352, i32* %index, align 4, !dbg !8074
  %161 = load i32, i32* %index, align 4, !dbg !8077
  %conv353 = zext i32 %161 to i64, !dbg !8077
  %cmp354 = icmp uge i64 %conv353, 8, !dbg !8079
  br i1 %cmp354, label %if.then356, label %if.end357, !dbg !8080

if.then356:                                       ; preds = %if.then351
  %162 = load i32, i32* %index, align 4, !dbg !8081
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.28, i32 0, i32 0), i32 %162), !dbg !8083
  store i32 -1094995529, i32* %retval, align 4, !dbg !8084
  br label %return, !dbg !8084

if.end357:                                        ; preds = %if.then351
  %163 = load i32, i32* %index, align 4, !dbg !8085
  %idxprom358 = zext i32 %163 to i64, !dbg !8086
  %arrayidx359 = getelementptr inbounds [8 x float], [8 x float]* @type30_dequant, i64 0, i64 %idxprom358, !dbg !8086
  %164 = load float, float* %arrayidx359, align 4, !dbg !8086
  %arrayidx360 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 0, !dbg !8087
  store float %164, float* %arrayidx360, align 16, !dbg !8088
  br label %if.end370, !dbg !8089

if.else361:                                       ; preds = %sw.bb347
  %165 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8090
  %noise_idx362 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %165, i32 0, i32 51, !dbg !8091
  %166 = load i32, i32* %noise_idx362, align 4, !dbg !8092
  %inc363 = add nsw i32 %166, 1, !dbg !8092
  store i32 %inc363, i32* %noise_idx362, align 4, !dbg !8092
  %idxprom364 = sext i32 %166 to i64, !dbg !8093
  %arrayidx365 = getelementptr inbounds [4116 x float], [4116 x float]* @noise_table, i64 0, i64 %idxprom364, !dbg !8093
  %167 = load float, float* %arrayidx365, align 4, !dbg !8093
  %168 = load i32, i32* %sb, align 4, !dbg !8094
  %idxprom366 = sext i32 %168 to i64, !dbg !8095
  %arrayidx367 = getelementptr inbounds [32 x float], [32 x float]* @sb_noise_attenuation, i64 0, i64 %idxprom366, !dbg !8095
  %169 = load float, float* %arrayidx367, align 4, !dbg !8095
  %mul368 = fmul float %167, %169, !dbg !8096
  %arrayidx369 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 0, !dbg !8097
  store float %mul368, float* %arrayidx369, align 16, !dbg !8098
  br label %if.end370

if.end370:                                        ; preds = %if.else361, %if.end357
  store i32 1, i32* %run, align 4, !dbg !8099
  br label %sw.epilog, !dbg !8100

sw.bb371:                                         ; preds = %for.body89
  %170 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8101
  %call372 = call i32 @get_bits_left(%struct.GetBitContext* %170), !dbg !8103
  %cmp373 = icmp sge i32 %call372, 7, !dbg !8104
  br i1 %cmp373, label %if.then375, label %if.else403, !dbg !8105

if.then375:                                       ; preds = %sw.bb371
  %171 = load i32, i32* %type34_first, align 4, !dbg !8106
  %tobool376 = icmp ne i32 %171, 0, !dbg !8106
  br i1 %tobool376, label %if.then377, label %if.else388, !dbg !8109

if.then377:                                       ; preds = %if.then375
  %172 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8110
  %call378 = call i32 @get_bits(%struct.GetBitContext* %172, i32 2), !dbg !8112
  %shl = shl i32 1, %call378, !dbg !8113
  %conv379 = sitofp i32 %shl to float, !dbg !8114
  store float %conv379, float* %type34_div, align 4, !dbg !8115
  %173 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8116
  %call380 = call i32 @get_bits(%struct.GetBitContext* %173, i32 5), !dbg !8117
  %conv381 = uitofp i32 %call380 to float, !dbg !8118
  %conv382 = fpext float %conv381 to double, !dbg !8118
  %sub383 = fsub double %conv382, 1.600000e+01, !dbg !8119
  %div384 = fdiv double %sub383, 1.500000e+01, !dbg !8120
  %conv385 = fptrunc double %div384 to float, !dbg !8121
  %arrayidx386 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 0, !dbg !8122
  store float %conv385, float* %arrayidx386, align 16, !dbg !8123
  %arrayidx387 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 0, !dbg !8124
  %174 = load float, float* %arrayidx387, align 16, !dbg !8124
  store float %174, float* %type34_predictor, align 4, !dbg !8125
  store i32 0, i32* %type34_first, align 4, !dbg !8126
  br label %if.end402, !dbg !8127

if.else388:                                       ; preds = %if.then375
  call void @llvm.dbg.declare(metadata i32* %index389, metadata !8128, metadata !1868), !dbg !8130
  %175 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8131
  %call390 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %175, %struct.VLC* @vlc_tab_type34, i32 0, i32 1), !dbg !8132
  store i32 %call390, i32* %index389, align 4, !dbg !8130
  %176 = load i32, i32* %index389, align 4, !dbg !8133
  %conv391 = zext i32 %176 to i64, !dbg !8133
  %cmp392 = icmp uge i64 %conv391, 10, !dbg !8135
  br i1 %cmp392, label %if.then394, label %if.end395, !dbg !8136

if.then394:                                       ; preds = %if.else388
  %177 = load i32, i32* %index389, align 4, !dbg !8137
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i32 0, i32 0), i32 %177), !dbg !8139
  store i32 -1094995529, i32* %retval, align 4, !dbg !8140
  br label %return, !dbg !8140

if.end395:                                        ; preds = %if.else388
  %178 = load i32, i32* %index389, align 4, !dbg !8141
  %idxprom396 = zext i32 %178 to i64, !dbg !8142
  %arrayidx397 = getelementptr inbounds [10 x float], [10 x float]* @type34_delta, i64 0, i64 %idxprom396, !dbg !8142
  %179 = load float, float* %arrayidx397, align 4, !dbg !8142
  %180 = load float, float* %type34_div, align 4, !dbg !8143
  %div398 = fdiv float %179, %180, !dbg !8144
  %181 = load float, float* %type34_predictor, align 4, !dbg !8145
  %add399 = fadd float %div398, %181, !dbg !8146
  %arrayidx400 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 0, !dbg !8147
  store float %add399, float* %arrayidx400, align 16, !dbg !8148
  %arrayidx401 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 0, !dbg !8149
  %182 = load float, float* %arrayidx401, align 16, !dbg !8149
  store float %182, float* %type34_predictor, align 4, !dbg !8150
  br label %if.end402

if.end402:                                        ; preds = %if.end395, %if.then377
  br label %if.end412, !dbg !8151

if.else403:                                       ; preds = %sw.bb371
  %183 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8152
  %noise_idx404 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %183, i32 0, i32 51, !dbg !8154
  %184 = load i32, i32* %noise_idx404, align 4, !dbg !8155
  %inc405 = add nsw i32 %184, 1, !dbg !8155
  store i32 %inc405, i32* %noise_idx404, align 4, !dbg !8155
  %idxprom406 = sext i32 %184 to i64, !dbg !8156
  %arrayidx407 = getelementptr inbounds [4116 x float], [4116 x float]* @noise_table, i64 0, i64 %idxprom406, !dbg !8156
  %185 = load float, float* %arrayidx407, align 4, !dbg !8156
  %186 = load i32, i32* %sb, align 4, !dbg !8157
  %idxprom408 = sext i32 %186 to i64, !dbg !8158
  %arrayidx409 = getelementptr inbounds [32 x float], [32 x float]* @sb_noise_attenuation, i64 0, i64 %idxprom408, !dbg !8158
  %187 = load float, float* %arrayidx409, align 4, !dbg !8158
  %mul410 = fmul float %185, %187, !dbg !8159
  %arrayidx411 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 0, !dbg !8160
  store float %mul410, float* %arrayidx411, align 16, !dbg !8161
  br label %if.end412

if.end412:                                        ; preds = %if.else403, %if.end402
  store i32 1, i32* %run, align 4, !dbg !8162
  br label %sw.epilog, !dbg !8163

sw.default:                                       ; preds = %for.body89
  %188 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8164
  %noise_idx413 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %188, i32 0, i32 51, !dbg !8165
  %189 = load i32, i32* %noise_idx413, align 4, !dbg !8166
  %inc414 = add nsw i32 %189, 1, !dbg !8166
  store i32 %inc414, i32* %noise_idx413, align 4, !dbg !8166
  %idxprom415 = sext i32 %189 to i64, !dbg !8167
  %arrayidx416 = getelementptr inbounds [4116 x float], [4116 x float]* @noise_table, i64 0, i64 %idxprom415, !dbg !8167
  %190 = load float, float* %arrayidx416, align 4, !dbg !8167
  %191 = load i32, i32* %sb, align 4, !dbg !8168
  %idxprom417 = sext i32 %191 to i64, !dbg !8169
  %arrayidx418 = getelementptr inbounds [32 x float], [32 x float]* @sb_noise_attenuation, i64 0, i64 %idxprom417, !dbg !8169
  %192 = load float, float* %arrayidx418, align 4, !dbg !8169
  %mul419 = fmul float %190, %192, !dbg !8170
  %arrayidx420 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 0, !dbg !8171
  store float %mul419, float* %arrayidx420, align 16, !dbg !8172
  store i32 1, i32* %run, align 4, !dbg !8173
  br label %sw.epilog, !dbg !8174

sw.epilog:                                        ; preds = %sw.default, %if.end412, %if.end370, %if.end346, %if.end300, %if.end224, %if.end190
  %193 = load i32, i32* %joined_stereo, align 4, !dbg !8175
  %tobool421 = icmp ne i32 %193, 0, !dbg !8175
  br i1 %tobool421, label %if.then422, label %if.else499, !dbg !8177

if.then422:                                       ; preds = %sw.epilog
  store i32 0, i32* %k, align 4, !dbg !8178
  br label %for.cond423, !dbg !8181

for.cond423:                                      ; preds = %for.inc496, %if.then422
  %194 = load i32, i32* %k, align 4, !dbg !8182
  %195 = load i32, i32* %run, align 4, !dbg !8185
  %cmp424 = icmp slt i32 %194, %195, !dbg !8186
  br i1 %cmp424, label %land.rhs, label %land.end, !dbg !8187

land.rhs:                                         ; preds = %for.cond423
  %196 = load i32, i32* %j, align 4, !dbg !8188
  %197 = load i32, i32* %k, align 4, !dbg !8190
  %add426 = add nsw i32 %196, %197, !dbg !8191
  %cmp427 = icmp slt i32 %add426, 128, !dbg !8192
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond423
  %198 = phi i1 [ false, %for.cond423 ], [ %cmp427, %land.rhs ]
  br i1 %198, label %for.body429, label %for.end498, !dbg !8193

for.body429:                                      ; preds = %land.end
  %199 = load i32, i32* %j, align 4, !dbg !8195
  %200 = load i32, i32* %k, align 4, !dbg !8197
  %add430 = add nsw i32 %199, %200, !dbg !8198
  %div431 = sdiv i32 %add430, 2, !dbg !8199
  %idxprom432 = sext i32 %div431 to i64, !dbg !8200
  %201 = load i32, i32* %sb, align 4, !dbg !8201
  %idxprom433 = sext i32 %201 to i64, !dbg !8200
  %202 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8200
  %tone_level = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %202, i32 0, i32 38, !dbg !8202
  %arrayidx434 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level, i64 0, i64 0, !dbg !8200
  %arrayidx435 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx434, i64 0, i64 %idxprom433, !dbg !8200
  %arrayidx436 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx435, i64 0, i64 %idxprom432, !dbg !8200
  %203 = load float, float* %arrayidx436, align 4, !dbg !8200
  %204 = load i32, i32* %k, align 4, !dbg !8203
  %idxprom437 = sext i32 %204 to i64, !dbg !8204
  %arrayidx438 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 %idxprom437, !dbg !8204
  %205 = load float, float* %arrayidx438, align 4, !dbg !8204
  %mul439 = fmul float %203, %205, !dbg !8205
  %206 = load i32, i32* %sb, align 4, !dbg !8206
  %idxprom440 = sext i32 %206 to i64, !dbg !8207
  %207 = load i32, i32* %j, align 4, !dbg !8208
  %208 = load i32, i32* %k, align 4, !dbg !8209
  %add441 = add nsw i32 %207, %208, !dbg !8210
  %idxprom442 = sext i32 %add441 to i64, !dbg !8207
  %209 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8207
  %sb_samples = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %209, i32 0, i32 36, !dbg !8211
  %arrayidx443 = getelementptr inbounds [2 x [128 x [32 x float]]], [2 x [128 x [32 x float]]]* %sb_samples, i64 0, i64 0, !dbg !8207
  %arrayidx444 = getelementptr inbounds [128 x [32 x float]], [128 x [32 x float]]* %arrayidx443, i64 0, i64 %idxprom442, !dbg !8207
  %arrayidx445 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx444, i64 0, i64 %idxprom440, !dbg !8207
  store float %mul439, float* %arrayidx445, align 4, !dbg !8212
  %210 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8213
  %nb_channels446 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %210, i32 0, i32 0, !dbg !8215
  %211 = load i32, i32* %nb_channels446, align 32, !dbg !8215
  %cmp447 = icmp eq i32 %211, 2, !dbg !8216
  br i1 %cmp447, label %if.then449, label %if.end495, !dbg !8217

if.then449:                                       ; preds = %for.body429
  %212 = load i32, i32* %j, align 4, !dbg !8218
  %213 = load i32, i32* %k, align 4, !dbg !8221
  %add450 = add nsw i32 %212, %213, !dbg !8222
  %div451 = sdiv i32 %add450, 8, !dbg !8223
  %idxprom452 = sext i32 %div451 to i64, !dbg !8224
  %arrayidx453 = getelementptr inbounds [16 x i32], [16 x i32]* %sign_bits, i64 0, i64 %idxprom452, !dbg !8224
  %214 = load i32, i32* %arrayidx453, align 4, !dbg !8224
  %tobool454 = icmp ne i32 %214, 0, !dbg !8224
  br i1 %tobool454, label %if.then455, label %if.else475, !dbg !8225

if.then455:                                       ; preds = %if.then449
  %215 = load i32, i32* %j, align 4, !dbg !8226
  %216 = load i32, i32* %k, align 4, !dbg !8227
  %add456 = add nsw i32 %215, %216, !dbg !8228
  %div457 = sdiv i32 %add456, 2, !dbg !8229
  %idxprom458 = sext i32 %div457 to i64, !dbg !8230
  %217 = load i32, i32* %sb, align 4, !dbg !8231
  %idxprom459 = sext i32 %217 to i64, !dbg !8230
  %218 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8230
  %tone_level460 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %218, i32 0, i32 38, !dbg !8232
  %arrayidx461 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level460, i64 0, i64 1, !dbg !8230
  %arrayidx462 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx461, i64 0, i64 %idxprom459, !dbg !8230
  %arrayidx463 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx462, i64 0, i64 %idxprom458, !dbg !8230
  %219 = load float, float* %arrayidx463, align 4, !dbg !8230
  %220 = load i32, i32* %k, align 4, !dbg !8233
  %idxprom464 = sext i32 %220 to i64, !dbg !8234
  %arrayidx465 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 %idxprom464, !dbg !8234
  %221 = load float, float* %arrayidx465, align 4, !dbg !8234
  %sub466 = fsub float -0.000000e+00, %221, !dbg !8235
  %mul467 = fmul float %219, %sub466, !dbg !8236
  %222 = load i32, i32* %sb, align 4, !dbg !8237
  %idxprom468 = sext i32 %222 to i64, !dbg !8238
  %223 = load i32, i32* %j, align 4, !dbg !8239
  %224 = load i32, i32* %k, align 4, !dbg !8240
  %add469 = add nsw i32 %223, %224, !dbg !8241
  %idxprom470 = sext i32 %add469 to i64, !dbg !8238
  %225 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8238
  %sb_samples471 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %225, i32 0, i32 36, !dbg !8242
  %arrayidx472 = getelementptr inbounds [2 x [128 x [32 x float]]], [2 x [128 x [32 x float]]]* %sb_samples471, i64 0, i64 1, !dbg !8238
  %arrayidx473 = getelementptr inbounds [128 x [32 x float]], [128 x [32 x float]]* %arrayidx472, i64 0, i64 %idxprom470, !dbg !8238
  %arrayidx474 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx473, i64 0, i64 %idxprom468, !dbg !8238
  store float %mul467, float* %arrayidx474, align 4, !dbg !8243
  br label %if.end494, !dbg !8238

if.else475:                                       ; preds = %if.then449
  %226 = load i32, i32* %j, align 4, !dbg !8244
  %227 = load i32, i32* %k, align 4, !dbg !8245
  %add476 = add nsw i32 %226, %227, !dbg !8246
  %div477 = sdiv i32 %add476, 2, !dbg !8247
  %idxprom478 = sext i32 %div477 to i64, !dbg !8248
  %228 = load i32, i32* %sb, align 4, !dbg !8249
  %idxprom479 = sext i32 %228 to i64, !dbg !8248
  %229 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8248
  %tone_level480 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %229, i32 0, i32 38, !dbg !8250
  %arrayidx481 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level480, i64 0, i64 1, !dbg !8248
  %arrayidx482 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx481, i64 0, i64 %idxprom479, !dbg !8248
  %arrayidx483 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx482, i64 0, i64 %idxprom478, !dbg !8248
  %230 = load float, float* %arrayidx483, align 4, !dbg !8248
  %231 = load i32, i32* %k, align 4, !dbg !8251
  %idxprom484 = sext i32 %231 to i64, !dbg !8252
  %arrayidx485 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 %idxprom484, !dbg !8252
  %232 = load float, float* %arrayidx485, align 4, !dbg !8252
  %mul486 = fmul float %230, %232, !dbg !8253
  %233 = load i32, i32* %sb, align 4, !dbg !8254
  %idxprom487 = sext i32 %233 to i64, !dbg !8255
  %234 = load i32, i32* %j, align 4, !dbg !8256
  %235 = load i32, i32* %k, align 4, !dbg !8257
  %add488 = add nsw i32 %234, %235, !dbg !8258
  %idxprom489 = sext i32 %add488 to i64, !dbg !8255
  %236 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8255
  %sb_samples490 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %236, i32 0, i32 36, !dbg !8259
  %arrayidx491 = getelementptr inbounds [2 x [128 x [32 x float]]], [2 x [128 x [32 x float]]]* %sb_samples490, i64 0, i64 1, !dbg !8255
  %arrayidx492 = getelementptr inbounds [128 x [32 x float]], [128 x [32 x float]]* %arrayidx491, i64 0, i64 %idxprom489, !dbg !8255
  %arrayidx493 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx492, i64 0, i64 %idxprom487, !dbg !8255
  store float %mul486, float* %arrayidx493, align 4, !dbg !8260
  br label %if.end494

if.end494:                                        ; preds = %if.else475, %if.then455
  br label %if.end495, !dbg !8261

if.end495:                                        ; preds = %if.end494, %for.body429
  br label %for.inc496, !dbg !8262

for.inc496:                                       ; preds = %if.end495
  %237 = load i32, i32* %k, align 4, !dbg !8263
  %inc497 = add nsw i32 %237, 1, !dbg !8263
  store i32 %inc497, i32* %k, align 4, !dbg !8263
  br label %for.cond423, !dbg !8265, !llvm.loop !8266

for.end498:                                       ; preds = %land.end
  br label %if.end532, !dbg !8268

if.else499:                                       ; preds = %sw.epilog
  store i32 0, i32* %k, align 4, !dbg !8269
  br label %for.cond500, !dbg !8272

for.cond500:                                      ; preds = %for.inc529, %if.else499
  %238 = load i32, i32* %k, align 4, !dbg !8273
  %239 = load i32, i32* %run, align 4, !dbg !8276
  %cmp501 = icmp slt i32 %238, %239, !dbg !8277
  br i1 %cmp501, label %for.body503, label %for.end531, !dbg !8278

for.body503:                                      ; preds = %for.cond500
  %240 = load i32, i32* %j, align 4, !dbg !8279
  %241 = load i32, i32* %k, align 4, !dbg !8281
  %add504 = add nsw i32 %240, %241, !dbg !8282
  %cmp505 = icmp slt i32 %add504, 128, !dbg !8283
  br i1 %cmp505, label %if.then507, label %if.end528, !dbg !8284

if.then507:                                       ; preds = %for.body503
  %242 = load i32, i32* %j, align 4, !dbg !8285
  %243 = load i32, i32* %k, align 4, !dbg !8286
  %add508 = add nsw i32 %242, %243, !dbg !8287
  %div509 = sdiv i32 %add508, 2, !dbg !8288
  %idxprom510 = sext i32 %div509 to i64, !dbg !8289
  %244 = load i32, i32* %sb, align 4, !dbg !8290
  %idxprom511 = sext i32 %244 to i64, !dbg !8289
  %245 = load i32, i32* %ch, align 4, !dbg !8291
  %idxprom512 = sext i32 %245 to i64, !dbg !8289
  %246 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8289
  %tone_level513 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %246, i32 0, i32 38, !dbg !8292
  %arrayidx514 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level513, i64 0, i64 %idxprom512, !dbg !8289
  %arrayidx515 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx514, i64 0, i64 %idxprom511, !dbg !8289
  %arrayidx516 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx515, i64 0, i64 %idxprom510, !dbg !8289
  %247 = load float, float* %arrayidx516, align 4, !dbg !8289
  %248 = load i32, i32* %k, align 4, !dbg !8293
  %idxprom517 = sext i32 %248 to i64, !dbg !8294
  %arrayidx518 = getelementptr inbounds [10 x float], [10 x float]* %samples, i64 0, i64 %idxprom517, !dbg !8294
  %249 = load float, float* %arrayidx518, align 4, !dbg !8294
  %mul519 = fmul float %247, %249, !dbg !8295
  %250 = load i32, i32* %sb, align 4, !dbg !8296
  %idxprom520 = sext i32 %250 to i64, !dbg !8297
  %251 = load i32, i32* %j, align 4, !dbg !8298
  %252 = load i32, i32* %k, align 4, !dbg !8299
  %add521 = add nsw i32 %251, %252, !dbg !8300
  %idxprom522 = sext i32 %add521 to i64, !dbg !8297
  %253 = load i32, i32* %ch, align 4, !dbg !8301
  %idxprom523 = sext i32 %253 to i64, !dbg !8297
  %254 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8297
  %sb_samples524 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %254, i32 0, i32 36, !dbg !8302
  %arrayidx525 = getelementptr inbounds [2 x [128 x [32 x float]]], [2 x [128 x [32 x float]]]* %sb_samples524, i64 0, i64 %idxprom523, !dbg !8297
  %arrayidx526 = getelementptr inbounds [128 x [32 x float]], [128 x [32 x float]]* %arrayidx525, i64 0, i64 %idxprom522, !dbg !8297
  %arrayidx527 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx526, i64 0, i64 %idxprom520, !dbg !8297
  store float %mul519, float* %arrayidx527, align 4, !dbg !8303
  br label %if.end528, !dbg !8297

if.end528:                                        ; preds = %if.then507, %for.body503
  br label %for.inc529, !dbg !8304

for.inc529:                                       ; preds = %if.end528
  %255 = load i32, i32* %k, align 4, !dbg !8306
  %inc530 = add nsw i32 %255, 1, !dbg !8306
  store i32 %inc530, i32* %k, align 4, !dbg !8306
  br label %for.cond500, !dbg !8308, !llvm.loop !8309

for.end531:                                       ; preds = %for.cond500
  br label %if.end532

if.end532:                                        ; preds = %for.end531, %for.end498
  %256 = load i32, i32* %run, align 4, !dbg !8311
  %257 = load i32, i32* %j, align 4, !dbg !8312
  %add533 = add nsw i32 %257, %256, !dbg !8312
  store i32 %add533, i32* %j, align 4, !dbg !8312
  br label %for.cond86, !dbg !8313, !llvm.loop !8315

for.end534:                                       ; preds = %for.cond86
  br label %for.inc535, !dbg !8317

for.inc535:                                       ; preds = %for.end534
  %258 = load i32, i32* %ch, align 4, !dbg !8318
  %inc536 = add nsw i32 %258, 1, !dbg !8318
  store i32 %inc536, i32* %ch, align 4, !dbg !8318
  br label %for.cond69, !dbg !8320, !llvm.loop !8321

for.end537:                                       ; preds = %for.cond69
  br label %for.inc538, !dbg !8323

for.inc538:                                       ; preds = %for.end537, %if.then66
  %259 = load i32, i32* %sb, align 4, !dbg !8324
  %inc539 = add nsw i32 %259, 1, !dbg !8324
  store i32 %inc539, i32* %sb, align 4, !dbg !8324
  br label %for.cond2, !dbg !8326, !llvm.loop !8327

for.end540:                                       ; preds = %for.cond2
  store i32 0, i32* %retval, align 4, !dbg !8329
  br label %return, !dbg !8329

return:                                           ; preds = %for.end540, %if.then394, %if.then356, %if.then309, %if.then263, %if.then134, %for.end
  %260 = load i32, i32* %retval, align 4, !dbg !8330
  ret i32 %260, !dbg !8330
}

; Function Attrs: nounwind uwtable
define internal void @build_sb_samples_from_noise(%struct.QDM2Context* %q, i32 %sb) #1 !dbg !8331 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %sb.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !8332, metadata !1868), !dbg !8333
  store i32 %sb, i32* %sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb.addr, metadata !8334, metadata !1868), !dbg !8335
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8336, metadata !1868), !dbg !8337
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8338, metadata !1868), !dbg !8339
  %0 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8340
  %noise_idx = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %0, i32 0, i32 51, !dbg !8342
  %1 = load i32, i32* %noise_idx, align 4, !dbg !8342
  %cmp = icmp sge i32 %1, 3840, !dbg !8343
  br i1 %cmp, label %if.then, label %if.end, !dbg !8344

if.then:                                          ; preds = %entry
  %2 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8345
  %noise_idx1 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %2, i32 0, i32 51, !dbg !8347
  %3 = load i32, i32* %noise_idx1, align 4, !dbg !8348
  %sub = sub nsw i32 %3, 3840, !dbg !8348
  store i32 %sub, i32* %noise_idx1, align 4, !dbg !8348
  br label %if.end, !dbg !8349

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8350
  %nb_channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %4, i32 0, i32 0, !dbg !8352
  %5 = load i32, i32* %nb_channels, align 32, !dbg !8352
  %tobool = icmp ne i32 %5, 0, !dbg !8350
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !8353

if.then2:                                         ; preds = %if.end
  br label %for.end52, !dbg !8354

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %ch, align 4, !dbg !8355
  br label %for.cond, !dbg !8357

for.cond:                                         ; preds = %for.inc50, %if.end3
  %6 = load i32, i32* %ch, align 4, !dbg !8358
  %7 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8361
  %nb_channels4 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %7, i32 0, i32 0, !dbg !8362
  %8 = load i32, i32* %nb_channels4, align 32, !dbg !8362
  %cmp5 = icmp slt i32 %6, %8, !dbg !8363
  br i1 %cmp5, label %for.body, label %for.end52, !dbg !8364

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !8365
  br label %for.cond6, !dbg !8368

for.cond6:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %j, align 4, !dbg !8369
  %cmp7 = icmp slt i32 %9, 64, !dbg !8372
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !8373

for.body8:                                        ; preds = %for.cond6
  %10 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8374
  %noise_idx9 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %10, i32 0, i32 51, !dbg !8376
  %11 = load i32, i32* %noise_idx9, align 4, !dbg !8377
  %inc = add nsw i32 %11, 1, !dbg !8377
  store i32 %inc, i32* %noise_idx9, align 4, !dbg !8377
  %idxprom = sext i32 %11 to i64, !dbg !8378
  %arrayidx = getelementptr inbounds [4116 x float], [4116 x float]* @noise_table, i64 0, i64 %idxprom, !dbg !8378
  %12 = load float, float* %arrayidx, align 4, !dbg !8378
  %13 = load i32, i32* %sb.addr, align 4, !dbg !8379
  %idxprom10 = sext i32 %13 to i64, !dbg !8380
  %arrayidx11 = getelementptr inbounds [32 x float], [32 x float]* @sb_noise_attenuation, i64 0, i64 %idxprom10, !dbg !8380
  %14 = load float, float* %arrayidx11, align 4, !dbg !8380
  %mul = fmul float %12, %14, !dbg !8381
  %15 = load i32, i32* %j, align 4, !dbg !8382
  %idxprom12 = sext i32 %15 to i64, !dbg !8383
  %16 = load i32, i32* %sb.addr, align 4, !dbg !8384
  %idxprom13 = sext i32 %16 to i64, !dbg !8383
  %17 = load i32, i32* %ch, align 4, !dbg !8385
  %idxprom14 = sext i32 %17 to i64, !dbg !8383
  %18 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8383
  %tone_level = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %18, i32 0, i32 38, !dbg !8386
  %arrayidx15 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level, i64 0, i64 %idxprom14, !dbg !8383
  %arrayidx16 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx15, i64 0, i64 %idxprom13, !dbg !8383
  %arrayidx17 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx16, i64 0, i64 %idxprom12, !dbg !8383
  %19 = load float, float* %arrayidx17, align 4, !dbg !8383
  %mul18 = fmul float %mul, %19, !dbg !8387
  %20 = load i32, i32* %sb.addr, align 4, !dbg !8388
  %idxprom19 = sext i32 %20 to i64, !dbg !8389
  %21 = load i32, i32* %j, align 4, !dbg !8390
  %mul20 = mul nsw i32 %21, 2, !dbg !8391
  %idxprom21 = sext i32 %mul20 to i64, !dbg !8389
  %22 = load i32, i32* %ch, align 4, !dbg !8392
  %idxprom22 = sext i32 %22 to i64, !dbg !8389
  %23 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8389
  %sb_samples = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %23, i32 0, i32 36, !dbg !8393
  %arrayidx23 = getelementptr inbounds [2 x [128 x [32 x float]]], [2 x [128 x [32 x float]]]* %sb_samples, i64 0, i64 %idxprom22, !dbg !8389
  %arrayidx24 = getelementptr inbounds [128 x [32 x float]], [128 x [32 x float]]* %arrayidx23, i64 0, i64 %idxprom21, !dbg !8389
  %arrayidx25 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx24, i64 0, i64 %idxprom19, !dbg !8389
  store float %mul18, float* %arrayidx25, align 4, !dbg !8394
  %24 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8395
  %noise_idx26 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %24, i32 0, i32 51, !dbg !8396
  %25 = load i32, i32* %noise_idx26, align 4, !dbg !8397
  %inc27 = add nsw i32 %25, 1, !dbg !8397
  store i32 %inc27, i32* %noise_idx26, align 4, !dbg !8397
  %idxprom28 = sext i32 %25 to i64, !dbg !8398
  %arrayidx29 = getelementptr inbounds [4116 x float], [4116 x float]* @noise_table, i64 0, i64 %idxprom28, !dbg !8398
  %26 = load float, float* %arrayidx29, align 4, !dbg !8398
  %27 = load i32, i32* %sb.addr, align 4, !dbg !8399
  %idxprom30 = sext i32 %27 to i64, !dbg !8400
  %arrayidx31 = getelementptr inbounds [32 x float], [32 x float]* @sb_noise_attenuation, i64 0, i64 %idxprom30, !dbg !8400
  %28 = load float, float* %arrayidx31, align 4, !dbg !8400
  %mul32 = fmul float %26, %28, !dbg !8401
  %29 = load i32, i32* %j, align 4, !dbg !8402
  %idxprom33 = sext i32 %29 to i64, !dbg !8403
  %30 = load i32, i32* %sb.addr, align 4, !dbg !8404
  %idxprom34 = sext i32 %30 to i64, !dbg !8403
  %31 = load i32, i32* %ch, align 4, !dbg !8405
  %idxprom35 = sext i32 %31 to i64, !dbg !8403
  %32 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8403
  %tone_level36 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %32, i32 0, i32 38, !dbg !8406
  %arrayidx37 = getelementptr inbounds [2 x [30 x [64 x float]]], [2 x [30 x [64 x float]]]* %tone_level36, i64 0, i64 %idxprom35, !dbg !8403
  %arrayidx38 = getelementptr inbounds [30 x [64 x float]], [30 x [64 x float]]* %arrayidx37, i64 0, i64 %idxprom34, !dbg !8403
  %arrayidx39 = getelementptr inbounds [64 x float], [64 x float]* %arrayidx38, i64 0, i64 %idxprom33, !dbg !8403
  %33 = load float, float* %arrayidx39, align 4, !dbg !8403
  %mul40 = fmul float %mul32, %33, !dbg !8407
  %34 = load i32, i32* %sb.addr, align 4, !dbg !8408
  %idxprom41 = sext i32 %34 to i64, !dbg !8409
  %35 = load i32, i32* %j, align 4, !dbg !8410
  %mul42 = mul nsw i32 %35, 2, !dbg !8411
  %add = add nsw i32 %mul42, 1, !dbg !8412
  %idxprom43 = sext i32 %add to i64, !dbg !8409
  %36 = load i32, i32* %ch, align 4, !dbg !8413
  %idxprom44 = sext i32 %36 to i64, !dbg !8409
  %37 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8409
  %sb_samples45 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %37, i32 0, i32 36, !dbg !8414
  %arrayidx46 = getelementptr inbounds [2 x [128 x [32 x float]]], [2 x [128 x [32 x float]]]* %sb_samples45, i64 0, i64 %idxprom44, !dbg !8409
  %arrayidx47 = getelementptr inbounds [128 x [32 x float]], [128 x [32 x float]]* %arrayidx46, i64 0, i64 %idxprom43, !dbg !8409
  %arrayidx48 = getelementptr inbounds [32 x float], [32 x float]* %arrayidx47, i64 0, i64 %idxprom41, !dbg !8409
  store float %mul40, float* %arrayidx48, align 4, !dbg !8415
  br label %for.inc, !dbg !8416

for.inc:                                          ; preds = %for.body8
  %38 = load i32, i32* %j, align 4, !dbg !8417
  %inc49 = add nsw i32 %38, 1, !dbg !8417
  store i32 %inc49, i32* %j, align 4, !dbg !8417
  br label %for.cond6, !dbg !8419, !llvm.loop !8420

for.end:                                          ; preds = %for.cond6
  br label %for.inc50, !dbg !8422

for.inc50:                                        ; preds = %for.end
  %39 = load i32, i32* %ch, align 4, !dbg !8423
  %inc51 = add nsw i32 %39, 1, !dbg !8423
  store i32 %inc51, i32* %ch, align 4, !dbg !8423
  br label %for.cond, !dbg !8425, !llvm.loop !8426

for.end52:                                        ; preds = %if.then2, %for.cond
  ret void, !dbg !8428
}

; Function Attrs: nounwind uwtable
define internal i32 @fix_coding_method_array(i32 %sb, i32 %channels, [30 x [64 x i8]]* %coding_method) #1 !dbg !8429 {
entry:
  %retval = alloca i32, align 4
  %sb.addr = alloca i32, align 4
  %channels.addr = alloca i32, align 4
  %coding_method.addr = alloca [30 x [64 x i8]]*, align 8
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ch = alloca i32, align 4
  %run = alloca i32, align 4
  %case_val = alloca i32, align 4
  store i32 %sb, i32* %sb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sb.addr, metadata !8432, metadata !1868), !dbg !8433
  store i32 %channels, i32* %channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channels.addr, metadata !8434, metadata !1868), !dbg !8435
  store [30 x [64 x i8]]* %coding_method, [30 x [64 x i8]]** %coding_method.addr, align 8
  call void @llvm.dbg.declare(metadata [30 x [64 x i8]]** %coding_method.addr, metadata !8436, metadata !1868), !dbg !8437
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8438, metadata !1868), !dbg !8439
  call void @llvm.dbg.declare(metadata i32* %k, metadata !8440, metadata !1868), !dbg !8441
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !8442, metadata !1868), !dbg !8443
  call void @llvm.dbg.declare(metadata i32* %run, metadata !8444, metadata !1868), !dbg !8445
  call void @llvm.dbg.declare(metadata i32* %case_val, metadata !8446, metadata !1868), !dbg !8447
  store i32 0, i32* %ch, align 4, !dbg !8448
  br label %for.cond, !dbg !8450

for.cond:                                         ; preds = %for.inc86, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !8451
  %1 = load i32, i32* %channels.addr, align 4, !dbg !8454
  %cmp = icmp slt i32 %0, %1, !dbg !8455
  br i1 %cmp, label %for.body, label %for.end88, !dbg !8456

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !8457
  br label %for.cond1, !dbg !8460

for.cond1:                                        ; preds = %for.end, %for.body
  %2 = load i32, i32* %j, align 4, !dbg !8461
  %cmp2 = icmp slt i32 %2, 64, !dbg !8464
  br i1 %cmp2, label %for.body3, label %for.end85, !dbg !8465

for.body3:                                        ; preds = %for.cond1
  %3 = load i32, i32* %j, align 4, !dbg !8466
  %idxprom = sext i32 %3 to i64, !dbg !8469
  %4 = load i32, i32* %sb.addr, align 4, !dbg !8470
  %idxprom4 = sext i32 %4 to i64, !dbg !8469
  %5 = load i32, i32* %ch, align 4, !dbg !8471
  %idxprom5 = sext i32 %5 to i64, !dbg !8469
  %6 = load [30 x [64 x i8]]*, [30 x [64 x i8]]** %coding_method.addr, align 8, !dbg !8469
  %arrayidx = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %6, i64 %idxprom5, !dbg !8469
  %arrayidx6 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx, i64 0, i64 %idxprom4, !dbg !8469
  %arrayidx7 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx6, i64 0, i64 %idxprom, !dbg !8469
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !8469
  %conv = sext i8 %7 to i32, !dbg !8469
  %cmp8 = icmp slt i32 %conv, 8, !dbg !8472
  br i1 %cmp8, label %if.then, label %if.end, !dbg !8473

if.then:                                          ; preds = %for.body3
  store i32 -1, i32* %retval, align 4, !dbg !8474
  br label %return, !dbg !8474

if.end:                                           ; preds = %for.body3
  %8 = load i32, i32* %j, align 4, !dbg !8475
  %idxprom10 = sext i32 %8 to i64, !dbg !8477
  %9 = load i32, i32* %sb.addr, align 4, !dbg !8478
  %idxprom11 = sext i32 %9 to i64, !dbg !8477
  %10 = load i32, i32* %ch, align 4, !dbg !8479
  %idxprom12 = sext i32 %10 to i64, !dbg !8477
  %11 = load [30 x [64 x i8]]*, [30 x [64 x i8]]** %coding_method.addr, align 8, !dbg !8477
  %arrayidx13 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %11, i64 %idxprom12, !dbg !8477
  %arrayidx14 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx13, i64 0, i64 %idxprom11, !dbg !8477
  %arrayidx15 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx14, i64 0, i64 %idxprom10, !dbg !8477
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !8477
  %conv16 = sext i8 %12 to i32, !dbg !8477
  %sub = sub nsw i32 %conv16, 8, !dbg !8480
  %cmp17 = icmp sgt i32 %sub, 22, !dbg !8481
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !8482

if.then19:                                        ; preds = %if.end
  store i32 1, i32* %run, align 4, !dbg !8483
  store i32 8, i32* %case_val, align 4, !dbg !8485
  br label %if.end35, !dbg !8486

if.else:                                          ; preds = %if.end
  %13 = load i32, i32* %j, align 4, !dbg !8487
  %idxprom20 = sext i32 %13 to i64, !dbg !8489
  %14 = load i32, i32* %sb.addr, align 4, !dbg !8490
  %idxprom21 = sext i32 %14 to i64, !dbg !8489
  %15 = load i32, i32* %ch, align 4, !dbg !8491
  %idxprom22 = sext i32 %15 to i64, !dbg !8489
  %16 = load [30 x [64 x i8]]*, [30 x [64 x i8]]** %coding_method.addr, align 8, !dbg !8489
  %arrayidx23 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %16, i64 %idxprom22, !dbg !8489
  %arrayidx24 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx23, i64 0, i64 %idxprom21, !dbg !8489
  %arrayidx25 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx24, i64 0, i64 %idxprom20, !dbg !8489
  %17 = load i8, i8* %arrayidx25, align 1, !dbg !8489
  %conv26 = sext i8 %17 to i32, !dbg !8489
  %sub27 = sub nsw i32 %conv26, 8, !dbg !8492
  %idxprom28 = sext i32 %sub27 to i64, !dbg !8493
  %arrayidx29 = getelementptr inbounds [23 x i32], [23 x i32]* @switchtable, i64 0, i64 %idxprom28, !dbg !8493
  %18 = load i32, i32* %arrayidx29, align 4, !dbg !8493
  switch i32 %18, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb30
    i32 2, label %sw.bb31
    i32 3, label %sw.bb32
    i32 4, label %sw.bb33
    i32 5, label %sw.bb34
  ], !dbg !8494

sw.bb:                                            ; preds = %if.else
  store i32 10, i32* %run, align 4, !dbg !8495
  store i32 10, i32* %case_val, align 4, !dbg !8497
  br label %sw.epilog, !dbg !8498

sw.bb30:                                          ; preds = %if.else
  store i32 1, i32* %run, align 4, !dbg !8499
  store i32 16, i32* %case_val, align 4, !dbg !8500
  br label %sw.epilog, !dbg !8501

sw.bb31:                                          ; preds = %if.else
  store i32 5, i32* %run, align 4, !dbg !8502
  store i32 24, i32* %case_val, align 4, !dbg !8503
  br label %sw.epilog, !dbg !8504

sw.bb32:                                          ; preds = %if.else
  store i32 3, i32* %run, align 4, !dbg !8505
  store i32 30, i32* %case_val, align 4, !dbg !8506
  br label %sw.epilog, !dbg !8507

sw.bb33:                                          ; preds = %if.else
  store i32 1, i32* %run, align 4, !dbg !8508
  store i32 30, i32* %case_val, align 4, !dbg !8509
  br label %sw.epilog, !dbg !8510

sw.bb34:                                          ; preds = %if.else
  store i32 1, i32* %run, align 4, !dbg !8511
  store i32 8, i32* %case_val, align 4, !dbg !8512
  br label %sw.epilog, !dbg !8513

sw.default:                                       ; preds = %if.else
  store i32 1, i32* %run, align 4, !dbg !8514
  store i32 8, i32* %case_val, align 4, !dbg !8515
  br label %sw.epilog, !dbg !8516

sw.epilog:                                        ; preds = %sw.default, %sw.bb34, %sw.bb33, %sw.bb32, %sw.bb31, %sw.bb30, %sw.bb
  br label %if.end35

if.end35:                                         ; preds = %sw.epilog, %if.then19
  store i32 0, i32* %k, align 4, !dbg !8517
  br label %for.cond36, !dbg !8519

for.cond36:                                       ; preds = %for.inc, %if.end35
  %19 = load i32, i32* %k, align 4, !dbg !8520
  %20 = load i32, i32* %run, align 4, !dbg !8523
  %cmp37 = icmp slt i32 %19, %20, !dbg !8524
  br i1 %cmp37, label %for.body39, label %for.end, !dbg !8525

for.body39:                                       ; preds = %for.cond36
  %21 = load i32, i32* %j, align 4, !dbg !8526
  %22 = load i32, i32* %k, align 4, !dbg !8529
  %add = add nsw i32 %21, %22, !dbg !8530
  %cmp40 = icmp slt i32 %add, 128, !dbg !8531
  br i1 %cmp40, label %if.then42, label %if.end83, !dbg !8532

if.then42:                                        ; preds = %for.body39
  %23 = load i32, i32* %j, align 4, !dbg !8533
  %24 = load i32, i32* %k, align 4, !dbg !8536
  %add43 = add nsw i32 %23, %24, !dbg !8537
  %rem = srem i32 %add43, 64, !dbg !8538
  %idxprom44 = sext i32 %rem to i64, !dbg !8539
  %25 = load i32, i32* %sb.addr, align 4, !dbg !8540
  %26 = load i32, i32* %j, align 4, !dbg !8541
  %27 = load i32, i32* %k, align 4, !dbg !8542
  %add45 = add nsw i32 %26, %27, !dbg !8543
  %div = sdiv i32 %add45, 64, !dbg !8544
  %add46 = add nsw i32 %25, %div, !dbg !8545
  %idxprom47 = sext i32 %add46 to i64, !dbg !8539
  %28 = load i32, i32* %ch, align 4, !dbg !8546
  %idxprom48 = sext i32 %28 to i64, !dbg !8539
  %29 = load [30 x [64 x i8]]*, [30 x [64 x i8]]** %coding_method.addr, align 8, !dbg !8539
  %arrayidx49 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %29, i64 %idxprom48, !dbg !8539
  %arrayidx50 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx49, i64 0, i64 %idxprom47, !dbg !8539
  %arrayidx51 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx50, i64 0, i64 %idxprom44, !dbg !8539
  %30 = load i8, i8* %arrayidx51, align 1, !dbg !8539
  %conv52 = sext i8 %30 to i32, !dbg !8539
  %31 = load i32, i32* %j, align 4, !dbg !8547
  %idxprom53 = sext i32 %31 to i64, !dbg !8548
  %32 = load i32, i32* %sb.addr, align 4, !dbg !8549
  %idxprom54 = sext i32 %32 to i64, !dbg !8548
  %33 = load i32, i32* %ch, align 4, !dbg !8550
  %idxprom55 = sext i32 %33 to i64, !dbg !8548
  %34 = load [30 x [64 x i8]]*, [30 x [64 x i8]]** %coding_method.addr, align 8, !dbg !8548
  %arrayidx56 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %34, i64 %idxprom55, !dbg !8548
  %arrayidx57 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx56, i64 0, i64 %idxprom54, !dbg !8548
  %arrayidx58 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx57, i64 0, i64 %idxprom53, !dbg !8548
  %35 = load i8, i8* %arrayidx58, align 1, !dbg !8548
  %conv59 = sext i8 %35 to i32, !dbg !8548
  %cmp60 = icmp sgt i32 %conv52, %conv59, !dbg !8551
  br i1 %cmp60, label %if.then62, label %if.end82, !dbg !8552

if.then62:                                        ; preds = %if.then42
  %36 = load i32, i32* %k, align 4, !dbg !8553
  %cmp63 = icmp sgt i32 %36, 0, !dbg !8556
  br i1 %cmp63, label %if.then65, label %if.end81, !dbg !8557

if.then65:                                        ; preds = %if.then62
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 32, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.30, i32 0, i32 0)), !dbg !8558
  %37 = load i32, i32* %j, align 4, !dbg !8560
  %38 = load i32, i32* %k, align 4, !dbg !8561
  %add66 = add nsw i32 %37, %38, !dbg !8562
  %idxprom67 = sext i32 %add66 to i64, !dbg !8563
  %39 = load i32, i32* %sb.addr, align 4, !dbg !8564
  %idxprom68 = sext i32 %39 to i64, !dbg !8563
  %40 = load i32, i32* %ch, align 4, !dbg !8565
  %idxprom69 = sext i32 %40 to i64, !dbg !8563
  %41 = load [30 x [64 x i8]]*, [30 x [64 x i8]]** %coding_method.addr, align 8, !dbg !8563
  %arrayidx70 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %41, i64 %idxprom69, !dbg !8563
  %arrayidx71 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx70, i64 0, i64 %idxprom68, !dbg !8563
  %arrayidx72 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx71, i64 0, i64 %idxprom67, !dbg !8563
  %42 = load i32, i32* %case_val, align 4, !dbg !8566
  %43 = trunc i32 %42 to i8, !dbg !8567
  %44 = load i32, i32* %k, align 4, !dbg !8568
  %conv73 = sext i32 %44 to i64, !dbg !8568
  %mul = mul i64 %conv73, 1, !dbg !8569
  call void @llvm.memset.p0i8.i64(i8* %arrayidx72, i8 %43, i64 %mul, i32 1, i1 false), !dbg !8567
  %45 = load i32, i32* %j, align 4, !dbg !8570
  %46 = load i32, i32* %k, align 4, !dbg !8571
  %add74 = add nsw i32 %45, %46, !dbg !8572
  %idxprom75 = sext i32 %add74 to i64, !dbg !8573
  %47 = load i32, i32* %sb.addr, align 4, !dbg !8574
  %idxprom76 = sext i32 %47 to i64, !dbg !8573
  %48 = load i32, i32* %ch, align 4, !dbg !8575
  %idxprom77 = sext i32 %48 to i64, !dbg !8573
  %49 = load [30 x [64 x i8]]*, [30 x [64 x i8]]** %coding_method.addr, align 8, !dbg !8573
  %arrayidx78 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %49, i64 %idxprom77, !dbg !8573
  %arrayidx79 = getelementptr inbounds [30 x [64 x i8]], [30 x [64 x i8]]* %arrayidx78, i64 0, i64 %idxprom76, !dbg !8573
  %arrayidx80 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx79, i64 0, i64 %idxprom75, !dbg !8573
  %50 = load i32, i32* %case_val, align 4, !dbg !8576
  %51 = trunc i32 %50 to i8, !dbg !8577
  call void @llvm.memset.p0i8.i64(i8* %arrayidx80, i8 %51, i64 3, i32 1, i1 false), !dbg !8577
  br label %if.end81, !dbg !8578

if.end81:                                         ; preds = %if.then65, %if.then62
  br label %if.end82, !dbg !8579

if.end82:                                         ; preds = %if.end81, %if.then42
  br label %if.end83, !dbg !8580

if.end83:                                         ; preds = %if.end82, %for.body39
  br label %for.inc, !dbg !8581

for.inc:                                          ; preds = %if.end83
  %52 = load i32, i32* %k, align 4, !dbg !8582
  %inc = add nsw i32 %52, 1, !dbg !8582
  store i32 %inc, i32* %k, align 4, !dbg !8582
  br label %for.cond36, !dbg !8584, !llvm.loop !8585

for.end:                                          ; preds = %for.cond36
  %53 = load i32, i32* %run, align 4, !dbg !8587
  %54 = load i32, i32* %j, align 4, !dbg !8588
  %add84 = add nsw i32 %54, %53, !dbg !8588
  store i32 %add84, i32* %j, align 4, !dbg !8588
  br label %for.cond1, !dbg !8589, !llvm.loop !8591

for.end85:                                        ; preds = %for.cond1
  br label %for.inc86, !dbg !8593

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %ch, align 4, !dbg !8594
  %inc87 = add nsw i32 %55, 1, !dbg !8594
  store i32 %inc87, i32* %ch, align 4, !dbg !8594
  br label %for.cond, !dbg !8596, !llvm.loop !8597

for.end88:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8599
  br label %return, !dbg !8599

return:                                           ; preds = %for.end88, %if.then
  %56 = load i32, i32* %retval, align 4, !dbg !8600
  ret i32 %56, !dbg !8600
}

; Function Attrs: nounwind uwtable
define internal void @qdm2_fft_decode_tones(%struct.QDM2Context* %q, i32 %duration, %struct.GetBitContext* %gb, i32 %b) #1 !dbg !8601 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %duration.addr = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %b.addr = alloca i32, align 4
  %channel = alloca i32, align 4
  %stereo = alloca i32, align 4
  %phase = alloca i32, align 4
  %exp = alloca i32, align 4
  %local_int_4 = alloca i32, align 4
  %local_int_8 = alloca i32, align 4
  %stereo_phase = alloca i32, align 4
  %local_int_10 = alloca i32, align 4
  %local_int_14 = alloca i32, align 4
  %stereo_exp = alloca i32, align 4
  %local_int_20 = alloca i32, align 4
  %local_int_28 = alloca i32, align 4
  %n = alloca i32, align 4
  %offset = alloca i32, align 4
  %sub_packet = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !8604, metadata !1868), !dbg !8605
  store i32 %duration, i32* %duration.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %duration.addr, metadata !8606, metadata !1868), !dbg !8607
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8608, metadata !1868), !dbg !8609
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !8610, metadata !1868), !dbg !8611
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !8612, metadata !1868), !dbg !8613
  call void @llvm.dbg.declare(metadata i32* %stereo, metadata !8614, metadata !1868), !dbg !8615
  call void @llvm.dbg.declare(metadata i32* %phase, metadata !8616, metadata !1868), !dbg !8617
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !8618, metadata !1868), !dbg !8619
  call void @llvm.dbg.declare(metadata i32* %local_int_4, metadata !8620, metadata !1868), !dbg !8621
  call void @llvm.dbg.declare(metadata i32* %local_int_8, metadata !8622, metadata !1868), !dbg !8623
  call void @llvm.dbg.declare(metadata i32* %stereo_phase, metadata !8624, metadata !1868), !dbg !8625
  call void @llvm.dbg.declare(metadata i32* %local_int_10, metadata !8626, metadata !1868), !dbg !8627
  call void @llvm.dbg.declare(metadata i32* %local_int_14, metadata !8628, metadata !1868), !dbg !8629
  call void @llvm.dbg.declare(metadata i32* %stereo_exp, metadata !8630, metadata !1868), !dbg !8631
  call void @llvm.dbg.declare(metadata i32* %local_int_20, metadata !8632, metadata !1868), !dbg !8633
  call void @llvm.dbg.declare(metadata i32* %local_int_28, metadata !8634, metadata !1868), !dbg !8635
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8636, metadata !1868), !dbg !8637
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8638, metadata !1868), !dbg !8639
  store i32 0, i32* %local_int_4, align 4, !dbg !8640
  store i32 0, i32* %local_int_28, align 4, !dbg !8641
  store i32 2, i32* %local_int_20, align 4, !dbg !8642
  %0 = load i32, i32* %duration.addr, align 4, !dbg !8643
  %sub = sub nsw i32 4, %0, !dbg !8644
  store i32 %sub, i32* %local_int_8, align 4, !dbg !8645
  %1 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8646
  %group_order = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %1, i32 0, i32 5, !dbg !8647
  %2 = load i32, i32* %group_order, align 4, !dbg !8647
  %3 = load i32, i32* %duration.addr, align 4, !dbg !8648
  %sub1 = sub nsw i32 %2, %3, !dbg !8649
  %sub2 = sub nsw i32 %sub1, 1, !dbg !8650
  %shl = shl i32 1, %sub2, !dbg !8651
  store i32 %shl, i32* %local_int_10, align 4, !dbg !8652
  store i32 1, i32* %offset, align 4, !dbg !8653
  br label %while.cond, !dbg !8654

while.cond:                                       ; preds = %if.end87, %entry
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8655
  %call = call i32 @get_bits_left(%struct.GetBitContext* %4), !dbg !8657
  %cmp = icmp sgt i32 %call, 0, !dbg !8658
  br i1 %cmp, label %while.body, label %while.end88, !dbg !8659

while.body:                                       ; preds = %while.cond
  %5 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8660
  %superblocktype_2_3 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %5, i32 0, i32 48, !dbg !8663
  %6 = load i32, i32* %superblocktype_2_3, align 8, !dbg !8663
  %tobool = icmp ne i32 %6, 0, !dbg !8660
  br i1 %tobool, label %if.then, label %if.else23, !dbg !8664

if.then:                                          ; preds = %while.body
  br label %while.cond3, !dbg !8665

while.cond3:                                      ; preds = %if.end20, %if.then
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8667
  %8 = load i32, i32* %local_int_8, align 4, !dbg !8669
  %idxprom = sext i32 %8 to i64, !dbg !8670
  %arrayidx = getelementptr inbounds [5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 %idxprom, !dbg !8670
  %call4 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %7, %struct.VLC* %arrayidx, i32 1, i32 2), !dbg !8671
  store i32 %call4, i32* %n, align 4, !dbg !8672
  %cmp5 = icmp slt i32 %call4, 2, !dbg !8673
  br i1 %cmp5, label %while.body6, label %while.end, !dbg !8674

while.body6:                                      ; preds = %while.cond3
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8675
  %call7 = call i32 @get_bits_left(%struct.GetBitContext* %9), !dbg !8678
  %cmp8 = icmp slt i32 %call7, 0, !dbg !8679
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !8680

if.then9:                                         ; preds = %while.body6
  %10 = load i32, i32* %local_int_4, align 4, !dbg !8681
  %11 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8684
  %group_size = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %11, i32 0, i32 2, !dbg !8685
  %12 = load i32, i32* %group_size, align 8, !dbg !8685
  %cmp10 = icmp slt i32 %10, %12, !dbg !8686
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !8687

if.then11:                                        ; preds = %if.then9
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.31, i32 0, i32 0)), !dbg !8688
  br label %if.end, !dbg !8688

if.end:                                           ; preds = %if.then11, %if.then9
  br label %while.end88, !dbg !8689

if.end12:                                         ; preds = %while.body6
  store i32 1, i32* %offset, align 4, !dbg !8690
  %13 = load i32, i32* %n, align 4, !dbg !8691
  %cmp13 = icmp eq i32 %13, 0, !dbg !8693
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !8694

if.then14:                                        ; preds = %if.end12
  %14 = load i32, i32* %local_int_10, align 4, !dbg !8695
  %15 = load i32, i32* %local_int_4, align 4, !dbg !8697
  %add = add nsw i32 %15, %14, !dbg !8697
  store i32 %add, i32* %local_int_4, align 4, !dbg !8697
  %16 = load i32, i32* %local_int_8, align 4, !dbg !8698
  %shl15 = shl i32 1, %16, !dbg !8699
  %17 = load i32, i32* %local_int_28, align 4, !dbg !8700
  %add16 = add nsw i32 %17, %shl15, !dbg !8700
  store i32 %add16, i32* %local_int_28, align 4, !dbg !8700
  br label %if.end20, !dbg !8701

if.else:                                          ; preds = %if.end12
  %18 = load i32, i32* %local_int_10, align 4, !dbg !8702
  %mul = mul nsw i32 8, %18, !dbg !8704
  %19 = load i32, i32* %local_int_4, align 4, !dbg !8705
  %add17 = add nsw i32 %19, %mul, !dbg !8705
  store i32 %add17, i32* %local_int_4, align 4, !dbg !8705
  %20 = load i32, i32* %local_int_8, align 4, !dbg !8706
  %shl18 = shl i32 8, %20, !dbg !8707
  %21 = load i32, i32* %local_int_28, align 4, !dbg !8708
  %add19 = add nsw i32 %21, %shl18, !dbg !8708
  store i32 %add19, i32* %local_int_28, align 4, !dbg !8708
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then14
  br label %while.cond3, !dbg !8709, !llvm.loop !8711

while.end:                                        ; preds = %while.cond3
  %22 = load i32, i32* %n, align 4, !dbg !8712
  %sub21 = sub nsw i32 %22, 2, !dbg !8713
  %23 = load i32, i32* %offset, align 4, !dbg !8714
  %add22 = add nsw i32 %23, %sub21, !dbg !8714
  store i32 %add22, i32* %offset, align 4, !dbg !8714
  br label %if.end39, !dbg !8715

if.else23:                                        ; preds = %while.body
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8716
  %25 = load i32, i32* %local_int_8, align 4, !dbg !8718
  %idxprom24 = sext i32 %25 to i64, !dbg !8719
  %arrayidx25 = getelementptr inbounds [5 x %struct.VLC], [5 x %struct.VLC]* @vlc_tab_fft_tone_offset, i64 0, i64 %idxprom24, !dbg !8719
  %call26 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %24, %struct.VLC* %arrayidx25, i32 1, i32 2), !dbg !8720
  %26 = load i32, i32* %offset, align 4, !dbg !8721
  %add27 = add nsw i32 %26, %call26, !dbg !8721
  store i32 %add27, i32* %offset, align 4, !dbg !8721
  br label %while.cond28, !dbg !8722

while.cond28:                                     ; preds = %while.body31, %if.else23
  %27 = load i32, i32* %offset, align 4, !dbg !8723
  %28 = load i32, i32* %local_int_10, align 4, !dbg !8725
  %sub29 = sub nsw i32 %28, 1, !dbg !8726
  %cmp30 = icmp sge i32 %27, %sub29, !dbg !8727
  br i1 %cmp30, label %while.body31, label %while.end38, !dbg !8728

while.body31:                                     ; preds = %while.cond28
  %29 = load i32, i32* %local_int_10, align 4, !dbg !8729
  %sub32 = sub nsw i32 %29, 1, !dbg !8731
  %sub33 = sub nsw i32 1, %sub32, !dbg !8732
  %30 = load i32, i32* %offset, align 4, !dbg !8733
  %add34 = add nsw i32 %30, %sub33, !dbg !8733
  store i32 %add34, i32* %offset, align 4, !dbg !8733
  %31 = load i32, i32* %local_int_10, align 4, !dbg !8734
  %32 = load i32, i32* %local_int_4, align 4, !dbg !8735
  %add35 = add nsw i32 %32, %31, !dbg !8735
  store i32 %add35, i32* %local_int_4, align 4, !dbg !8735
  %33 = load i32, i32* %local_int_8, align 4, !dbg !8736
  %shl36 = shl i32 1, %33, !dbg !8737
  %34 = load i32, i32* %local_int_28, align 4, !dbg !8738
  %add37 = add nsw i32 %34, %shl36, !dbg !8738
  store i32 %add37, i32* %local_int_28, align 4, !dbg !8738
  br label %while.cond28, !dbg !8739, !llvm.loop !8741

while.end38:                                      ; preds = %while.cond28
  br label %if.end39

if.end39:                                         ; preds = %while.end38, %while.end
  %35 = load i32, i32* %local_int_4, align 4, !dbg !8742
  %36 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8744
  %group_size40 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %36, i32 0, i32 2, !dbg !8745
  %37 = load i32, i32* %group_size40, align 8, !dbg !8745
  %cmp41 = icmp sge i32 %35, %37, !dbg !8746
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !8747

if.then42:                                        ; preds = %if.end39
  br label %while.end88, !dbg !8748

if.end43:                                         ; preds = %if.end39
  %38 = load i32, i32* %offset, align 4, !dbg !8749
  %39 = load i32, i32* %local_int_8, align 4, !dbg !8750
  %shr = ashr i32 %38, %39, !dbg !8751
  store i32 %shr, i32* %local_int_14, align 4, !dbg !8752
  %40 = load i32, i32* %local_int_14, align 4, !dbg !8753
  %conv = sext i32 %40 to i64, !dbg !8753
  %cmp44 = icmp uge i64 %conv, 256, !dbg !8755
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !8756

if.then46:                                        ; preds = %if.end43
  br label %while.end88, !dbg !8757

if.end47:                                         ; preds = %if.end43
  %41 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8758
  %nb_channels = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %41, i32 0, i32 0, !dbg !8760
  %42 = load i32, i32* %nb_channels, align 32, !dbg !8760
  %cmp48 = icmp sgt i32 %42, 1, !dbg !8761
  br i1 %cmp48, label %if.then50, label %if.else53, !dbg !8762

if.then50:                                        ; preds = %if.end47
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8763
  %call51 = call i32 @get_bits1(%struct.GetBitContext* %43), !dbg !8765
  store i32 %call51, i32* %channel, align 4, !dbg !8766
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8767
  %call52 = call i32 @get_bits1(%struct.GetBitContext* %44), !dbg !8768
  store i32 %call52, i32* %stereo, align 4, !dbg !8769
  br label %if.end54, !dbg !8770

if.else53:                                        ; preds = %if.end47
  store i32 0, i32* %channel, align 4, !dbg !8771
  store i32 0, i32* %stereo, align 4, !dbg !8773
  br label %if.end54

if.end54:                                         ; preds = %if.else53, %if.then50
  %45 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8774
  %46 = load i32, i32* %b.addr, align 4, !dbg !8775
  %tobool55 = icmp ne i32 %46, 0, !dbg !8775
  %cond = select i1 %tobool55, %struct.VLC* @fft_level_exp_vlc, %struct.VLC* @fft_level_exp_alt_vlc, !dbg !8775
  %call56 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %45, %struct.VLC* %cond, i32 0, i32 2), !dbg !8776
  store i32 %call56, i32* %exp, align 4, !dbg !8777
  %47 = load i32, i32* %local_int_14, align 4, !dbg !8778
  %idxprom57 = sext i32 %47 to i64, !dbg !8779
  %arrayidx58 = getelementptr inbounds [256 x i16], [256 x i16]* @fft_level_index_table, i64 0, i64 %idxprom57, !dbg !8779
  %48 = load i16, i16* %arrayidx58, align 2, !dbg !8779
  %idxprom59 = sext i16 %48 to i64, !dbg !8780
  %49 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8780
  %fft_level_exp = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %49, i32 0, i32 25, !dbg !8781
  %arrayidx60 = getelementptr inbounds [6 x i32], [6 x i32]* %fft_level_exp, i64 0, i64 %idxprom59, !dbg !8780
  %50 = load i32, i32* %arrayidx60, align 4, !dbg !8780
  %51 = load i32, i32* %exp, align 4, !dbg !8782
  %add61 = add nsw i32 %51, %50, !dbg !8782
  store i32 %add61, i32* %exp, align 4, !dbg !8782
  %52 = load i32, i32* %exp, align 4, !dbg !8783
  %cmp62 = icmp slt i32 %52, 0, !dbg !8784
  br i1 %cmp62, label %cond.true, label %cond.false, !dbg !8785

cond.true:                                        ; preds = %if.end54
  br label %cond.end, !dbg !8786

cond.false:                                       ; preds = %if.end54
  %53 = load i32, i32* %exp, align 4, !dbg !8788
  br label %cond.end, !dbg !8790

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond64 = phi i32 [ 0, %cond.true ], [ %53, %cond.false ], !dbg !8791
  store i32 %cond64, i32* %exp, align 4, !dbg !8793
  %54 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8794
  %call65 = call i32 @get_bits(%struct.GetBitContext* %54, i32 3), !dbg !8795
  store i32 %call65, i32* %phase, align 4, !dbg !8796
  store i32 0, i32* %stereo_exp, align 4, !dbg !8797
  store i32 0, i32* %stereo_phase, align 4, !dbg !8798
  %55 = load i32, i32* %stereo, align 4, !dbg !8799
  %tobool66 = icmp ne i32 %55, 0, !dbg !8799
  br i1 %tobool66, label %if.then67, label %if.end77, !dbg !8801

if.then67:                                        ; preds = %cond.end
  %56 = load i32, i32* %exp, align 4, !dbg !8802
  %57 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8804
  %call68 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %57, %struct.VLC* @fft_stereo_exp_vlc, i32 0, i32 1), !dbg !8805
  %sub69 = sub nsw i32 %56, %call68, !dbg !8806
  store i32 %sub69, i32* %stereo_exp, align 4, !dbg !8807
  %58 = load i32, i32* %phase, align 4, !dbg !8808
  %59 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8809
  %call70 = call i32 @qdm2_get_vlc(%struct.GetBitContext* %59, %struct.VLC* @fft_stereo_phase_vlc, i32 0, i32 1), !dbg !8810
  %sub71 = sub nsw i32 %58, %call70, !dbg !8811
  store i32 %sub71, i32* %stereo_phase, align 4, !dbg !8812
  %60 = load i32, i32* %stereo_phase, align 4, !dbg !8813
  %cmp72 = icmp slt i32 %60, 0, !dbg !8815
  br i1 %cmp72, label %if.then74, label %if.end76, !dbg !8816

if.then74:                                        ; preds = %if.then67
  %61 = load i32, i32* %stereo_phase, align 4, !dbg !8817
  %add75 = add nsw i32 %61, 8, !dbg !8817
  store i32 %add75, i32* %stereo_phase, align 4, !dbg !8817
  br label %if.end76, !dbg !8818

if.end76:                                         ; preds = %if.then74, %if.then67
  br label %if.end77, !dbg !8819

if.end77:                                         ; preds = %if.end76, %cond.end
  %62 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8820
  %frequency_range = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %62, i32 0, i32 8, !dbg !8822
  %63 = load i32, i32* %frequency_range, align 32, !dbg !8822
  %64 = load i32, i32* %local_int_14, align 4, !dbg !8823
  %add78 = add nsw i32 %64, 1, !dbg !8824
  %cmp79 = icmp sgt i32 %63, %add78, !dbg !8825
  br i1 %cmp79, label %if.then81, label %if.end87, !dbg !8826

if.then81:                                        ; preds = %if.end77
  call void @llvm.dbg.declare(metadata i32* %sub_packet, metadata !8827, metadata !1868), !dbg !8829
  %65 = load i32, i32* %local_int_20, align 4, !dbg !8830
  %66 = load i32, i32* %local_int_28, align 4, !dbg !8831
  %add82 = add nsw i32 %65, %66, !dbg !8832
  store i32 %add82, i32* %sub_packet, align 4, !dbg !8829
  %67 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8833
  %68 = load i32, i32* %sub_packet, align 4, !dbg !8834
  %69 = load i32, i32* %offset, align 4, !dbg !8835
  %70 = load i32, i32* %duration.addr, align 4, !dbg !8836
  %71 = load i32, i32* %channel, align 4, !dbg !8837
  %72 = load i32, i32* %exp, align 4, !dbg !8838
  %73 = load i32, i32* %phase, align 4, !dbg !8839
  call void @qdm2_fft_init_coefficient(%struct.QDM2Context* %67, i32 %68, i32 %69, i32 %70, i32 %71, i32 %72, i32 %73), !dbg !8840
  %74 = load i32, i32* %stereo, align 4, !dbg !8841
  %tobool83 = icmp ne i32 %74, 0, !dbg !8841
  br i1 %tobool83, label %if.then84, label %if.end86, !dbg !8843

if.then84:                                        ; preds = %if.then81
  %75 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8844
  %76 = load i32, i32* %sub_packet, align 4, !dbg !8845
  %77 = load i32, i32* %offset, align 4, !dbg !8846
  %78 = load i32, i32* %duration.addr, align 4, !dbg !8847
  %79 = load i32, i32* %channel, align 4, !dbg !8848
  %sub85 = sub nsw i32 1, %79, !dbg !8849
  %80 = load i32, i32* %stereo_exp, align 4, !dbg !8850
  %81 = load i32, i32* %stereo_phase, align 4, !dbg !8851
  call void @qdm2_fft_init_coefficient(%struct.QDM2Context* %75, i32 %76, i32 %77, i32 %78, i32 %sub85, i32 %80, i32 %81), !dbg !8852
  br label %if.end86, !dbg !8852

if.end86:                                         ; preds = %if.then84, %if.then81
  br label %if.end87, !dbg !8853

if.end87:                                         ; preds = %if.end86, %if.end77
  %82 = load i32, i32* %offset, align 4, !dbg !8854
  %inc = add nsw i32 %82, 1, !dbg !8854
  store i32 %inc, i32* %offset, align 4, !dbg !8854
  br label %while.cond, !dbg !8855, !llvm.loop !8857

while.end88:                                      ; preds = %if.end, %if.then42, %if.then46, %while.cond
  ret void, !dbg !8858
}

; Function Attrs: nounwind uwtable
define internal void @qdm2_fft_init_coefficient(%struct.QDM2Context* %q, i32 %sub_packet, i32 %offset, i32 %duration, i32 %channel, i32 %exp, i32 %phase) #1 !dbg !8859 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %sub_packet.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %duration.addr = alloca i32, align 4
  %channel.addr = alloca i32, align 4
  %exp.addr = alloca i32, align 4
  %phase.addr = alloca i32, align 4
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !8862, metadata !1868), !dbg !8863
  store i32 %sub_packet, i32* %sub_packet.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sub_packet.addr, metadata !8864, metadata !1868), !dbg !8865
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !8866, metadata !1868), !dbg !8867
  store i32 %duration, i32* %duration.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %duration.addr, metadata !8868, metadata !1868), !dbg !8869
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !8870, metadata !1868), !dbg !8871
  store i32 %exp, i32* %exp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exp.addr, metadata !8872, metadata !1868), !dbg !8873
  store i32 %phase, i32* %phase.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phase.addr, metadata !8874, metadata !1868), !dbg !8875
  %0 = load i32, i32* %duration.addr, align 4, !dbg !8876
  %idxprom = sext i32 %0 to i64, !dbg !8878
  %1 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8878
  %fft_coefs_min_index = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %1, i32 0, i32 23, !dbg !8879
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_min_index, i64 0, i64 %idxprom, !dbg !8878
  %2 = load i32, i32* %arrayidx, align 4, !dbg !8878
  %cmp = icmp slt i32 %2, 0, !dbg !8880
  br i1 %cmp, label %if.then, label %if.end, !dbg !8881

if.then:                                          ; preds = %entry
  %3 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8882
  %fft_coefs_index = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %3, i32 0, i32 22, !dbg !8883
  %4 = load i32, i32* %fft_coefs_index, align 16, !dbg !8883
  %5 = load i32, i32* %duration.addr, align 4, !dbg !8884
  %idxprom1 = sext i32 %5 to i64, !dbg !8885
  %6 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8885
  %fft_coefs_min_index2 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %6, i32 0, i32 23, !dbg !8886
  %arrayidx3 = getelementptr inbounds [5 x i32], [5 x i32]* %fft_coefs_min_index2, i64 0, i64 %idxprom1, !dbg !8885
  store i32 %4, i32* %arrayidx3, align 4, !dbg !8887
  br label %if.end, !dbg !8885

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %sub_packet.addr, align 4, !dbg !8888
  %cmp4 = icmp sge i32 %7, 16, !dbg !8889
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !8890

cond.true:                                        ; preds = %if.end
  %8 = load i32, i32* %sub_packet.addr, align 4, !dbg !8891
  %sub = sub nsw i32 %8, 16, !dbg !8893
  br label %cond.end, !dbg !8894

cond.false:                                       ; preds = %if.end
  %9 = load i32, i32* %sub_packet.addr, align 4, !dbg !8895
  br label %cond.end, !dbg !8897

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %9, %cond.false ], !dbg !8898
  %conv = trunc i32 %cond to i16, !dbg !8900
  %10 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8901
  %fft_coefs_index5 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %10, i32 0, i32 22, !dbg !8902
  %11 = load i32, i32* %fft_coefs_index5, align 16, !dbg !8902
  %idxprom6 = sext i32 %11 to i64, !dbg !8903
  %12 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8903
  %fft_coefs = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %12, i32 0, i32 21, !dbg !8904
  %arrayidx7 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs, i64 0, i64 %idxprom6, !dbg !8903
  %sub_packet8 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx7, i32 0, i32 0, !dbg !8905
  store i16 %conv, i16* %sub_packet8, align 2, !dbg !8906
  %13 = load i32, i32* %channel.addr, align 4, !dbg !8907
  %conv9 = trunc i32 %13 to i8, !dbg !8907
  %14 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8908
  %fft_coefs_index10 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %14, i32 0, i32 22, !dbg !8909
  %15 = load i32, i32* %fft_coefs_index10, align 16, !dbg !8909
  %idxprom11 = sext i32 %15 to i64, !dbg !8910
  %16 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8910
  %fft_coefs12 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %16, i32 0, i32 21, !dbg !8911
  %arrayidx13 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs12, i64 0, i64 %idxprom11, !dbg !8910
  %channel14 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx13, i32 0, i32 1, !dbg !8912
  store i8 %conv9, i8* %channel14, align 2, !dbg !8913
  %17 = load i32, i32* %offset.addr, align 4, !dbg !8914
  %conv15 = trunc i32 %17 to i16, !dbg !8914
  %18 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8915
  %fft_coefs_index16 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %18, i32 0, i32 22, !dbg !8916
  %19 = load i32, i32* %fft_coefs_index16, align 16, !dbg !8916
  %idxprom17 = sext i32 %19 to i64, !dbg !8917
  %20 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8917
  %fft_coefs18 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %20, i32 0, i32 21, !dbg !8918
  %arrayidx19 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs18, i64 0, i64 %idxprom17, !dbg !8917
  %offset20 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx19, i32 0, i32 2, !dbg !8919
  store i16 %conv15, i16* %offset20, align 2, !dbg !8920
  %21 = load i32, i32* %exp.addr, align 4, !dbg !8921
  %conv21 = trunc i32 %21 to i16, !dbg !8921
  %22 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8922
  %fft_coefs_index22 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %22, i32 0, i32 22, !dbg !8923
  %23 = load i32, i32* %fft_coefs_index22, align 16, !dbg !8923
  %idxprom23 = sext i32 %23 to i64, !dbg !8924
  %24 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8924
  %fft_coefs24 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %24, i32 0, i32 21, !dbg !8925
  %arrayidx25 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs24, i64 0, i64 %idxprom23, !dbg !8924
  %exp26 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx25, i32 0, i32 3, !dbg !8926
  store i16 %conv21, i16* %exp26, align 2, !dbg !8927
  %25 = load i32, i32* %phase.addr, align 4, !dbg !8928
  %conv27 = trunc i32 %25 to i8, !dbg !8928
  %26 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8929
  %fft_coefs_index28 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %26, i32 0, i32 22, !dbg !8930
  %27 = load i32, i32* %fft_coefs_index28, align 16, !dbg !8930
  %idxprom29 = sext i32 %27 to i64, !dbg !8931
  %28 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8931
  %fft_coefs30 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %28, i32 0, i32 21, !dbg !8932
  %arrayidx31 = getelementptr inbounds [1000 x %struct.FFTCoefficient], [1000 x %struct.FFTCoefficient]* %fft_coefs30, i64 0, i64 %idxprom29, !dbg !8931
  %phase32 = getelementptr inbounds %struct.FFTCoefficient, %struct.FFTCoefficient* %arrayidx31, i32 0, i32 4, !dbg !8933
  store i8 %conv27, i8* %phase32, align 2, !dbg !8934
  %29 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !8935
  %fft_coefs_index33 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %29, i32 0, i32 22, !dbg !8936
  %30 = load i32, i32* %fft_coefs_index33, align 16, !dbg !8937
  %inc = add nsw i32 %30, 1, !dbg !8937
  store i32 %inc, i32* %fft_coefs_index33, align 16, !dbg !8937
  ret void, !dbg !8938
}

; Function Attrs: nounwind
declare double @cos(double) #4

; Function Attrs: nounwind uwtable
define internal void @qdm2_fft_generate_tone(%struct.QDM2Context* %q, %struct.FFTTone* %tone) #1 !dbg !8939 {
entry:
  %q.addr = alloca %struct.QDM2Context*, align 8
  %tone.addr = alloca %struct.FFTTone*, align 8
  %level = alloca float, align 4
  %f = alloca [6 x float], align 16
  %i = alloca i32, align 4
  %c = alloca %struct.QDM2Complex, align 4
  %iscale = alloca double, align 8
  store %struct.QDM2Context* %q, %struct.QDM2Context** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.QDM2Context** %q.addr, metadata !8943, metadata !1868), !dbg !8944
  store %struct.FFTTone* %tone, %struct.FFTTone** %tone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFTTone** %tone.addr, metadata !8945, metadata !1868), !dbg !8946
  call void @llvm.dbg.declare(metadata float* %level, metadata !8947, metadata !1868), !dbg !8948
  call void @llvm.dbg.declare(metadata [6 x float]* %f, metadata !8949, metadata !1868), !dbg !8951
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8952, metadata !1868), !dbg !8953
  call void @llvm.dbg.declare(metadata %struct.QDM2Complex* %c, metadata !8954, metadata !1868), !dbg !8955
  call void @llvm.dbg.declare(metadata double* %iscale, metadata !8956, metadata !1868), !dbg !8957
  store double 0x3F8921FB54442D18, double* %iscale, align 8, !dbg !8957
  %0 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !8958
  %phase_shift = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %0, i32 0, i32 4, !dbg !8959
  %1 = load i32, i32* %phase_shift, align 4, !dbg !8959
  %2 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !8960
  %phase = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %2, i32 0, i32 3, !dbg !8961
  %3 = load i32, i32* %phase, align 8, !dbg !8962
  %add = add nsw i32 %3, %1, !dbg !8962
  store i32 %add, i32* %phase, align 8, !dbg !8962
  %4 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !8963
  %time_index = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %4, i32 0, i32 6, !dbg !8964
  %5 = load i16, i16* %time_index, align 4, !dbg !8964
  %idxprom = sext i16 %5 to i64, !dbg !8965
  %6 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !8966
  %duration = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %6, i32 0, i32 5, !dbg !8967
  %7 = load i32, i32* %duration, align 8, !dbg !8967
  %idxprom1 = sext i32 %7 to i64, !dbg !8965
  %arrayidx = getelementptr inbounds [4 x [31 x float]], [4 x [31 x float]]* @fft_tone_envelope_table, i64 0, i64 %idxprom1, !dbg !8965
  %arrayidx2 = getelementptr inbounds [31 x float], [31 x float]* %arrayidx, i64 0, i64 %idxprom, !dbg !8965
  %8 = load float, float* %arrayidx2, align 4, !dbg !8965
  %9 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !8968
  %level3 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %9, i32 0, i32 0, !dbg !8969
  %10 = load float, float* %level3, align 8, !dbg !8969
  %mul = fmul float %8, %10, !dbg !8970
  store float %mul, float* %level, align 4, !dbg !8971
  %11 = load float, float* %level, align 4, !dbg !8972
  %conv = fpext float %11 to double, !dbg !8972
  %12 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !8973
  %phase4 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %12, i32 0, i32 3, !dbg !8974
  %13 = load i32, i32* %phase4, align 8, !dbg !8974
  %conv5 = sitofp i32 %13 to double, !dbg !8973
  %mul6 = fmul double %conv5, 0x3F8921FB54442D18, !dbg !8975
  %call = call double @sin(double %mul6) #9, !dbg !8976
  %mul7 = fmul double %conv, %call, !dbg !8977
  %conv8 = fptrunc double %mul7 to float, !dbg !8972
  %im = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 1, !dbg !8978
  store float %conv8, float* %im, align 4, !dbg !8979
  %14 = load float, float* %level, align 4, !dbg !8980
  %conv9 = fpext float %14 to double, !dbg !8980
  %15 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !8981
  %phase10 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %15, i32 0, i32 3, !dbg !8982
  %16 = load i32, i32* %phase10, align 8, !dbg !8982
  %conv11 = sitofp i32 %16 to double, !dbg !8981
  %mul12 = fmul double %conv11, 0x3F8921FB54442D18, !dbg !8983
  %call13 = call double @cos(double %mul12) #9, !dbg !8984
  %mul14 = fmul double %conv9, %call13, !dbg !8985
  %conv15 = fptrunc double %mul14 to float, !dbg !8980
  %re = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 0, !dbg !8986
  store float %conv15, float* %re, align 4, !dbg !8987
  %17 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !8988
  %duration16 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %17, i32 0, i32 5, !dbg !8990
  %18 = load i32, i32* %duration16, align 8, !dbg !8990
  %cmp = icmp sge i32 %18, 3, !dbg !8991
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8992

lor.lhs.false:                                    ; preds = %entry
  %19 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !8993
  %cutoff = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %19, i32 0, i32 7, !dbg !8995
  %20 = load i16, i16* %cutoff, align 2, !dbg !8995
  %conv18 = sext i16 %20 to i32, !dbg !8993
  %cmp19 = icmp sge i32 %conv18, 3, !dbg !8996
  br i1 %cmp19, label %if.then, label %if.else, !dbg !8997

if.then:                                          ; preds = %lor.lhs.false, %entry
  %im21 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 1, !dbg !8998
  %21 = load float, float* %im21, align 4, !dbg !8998
  %22 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9000
  %complex = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %22, i32 0, i32 1, !dbg !9001
  %23 = load %struct.QDM2Complex*, %struct.QDM2Complex** %complex, align 8, !dbg !9001
  %arrayidx22 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %23, i64 0, !dbg !9000
  %im23 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx22, i32 0, i32 1, !dbg !9002
  %24 = load float, float* %im23, align 4, !dbg !9003
  %add24 = fadd float %24, %21, !dbg !9003
  store float %add24, float* %im23, align 4, !dbg !9003
  %re25 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 0, !dbg !9004
  %25 = load float, float* %re25, align 4, !dbg !9004
  %26 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9005
  %complex26 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %26, i32 0, i32 1, !dbg !9006
  %27 = load %struct.QDM2Complex*, %struct.QDM2Complex** %complex26, align 8, !dbg !9006
  %arrayidx27 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %27, i64 0, !dbg !9005
  %re28 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx27, i32 0, i32 0, !dbg !9007
  %28 = load float, float* %re28, align 4, !dbg !9008
  %add29 = fadd float %28, %25, !dbg !9008
  store float %add29, float* %re28, align 4, !dbg !9008
  %im30 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 1, !dbg !9009
  %29 = load float, float* %im30, align 4, !dbg !9009
  %30 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9010
  %complex31 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %30, i32 0, i32 1, !dbg !9011
  %31 = load %struct.QDM2Complex*, %struct.QDM2Complex** %complex31, align 8, !dbg !9011
  %arrayidx32 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %31, i64 1, !dbg !9010
  %im33 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx32, i32 0, i32 1, !dbg !9012
  %32 = load float, float* %im33, align 4, !dbg !9013
  %sub = fsub float %32, %29, !dbg !9013
  store float %sub, float* %im33, align 4, !dbg !9013
  %re34 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 0, !dbg !9014
  %33 = load float, float* %re34, align 4, !dbg !9014
  %34 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9015
  %complex35 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %34, i32 0, i32 1, !dbg !9016
  %35 = load %struct.QDM2Complex*, %struct.QDM2Complex** %complex35, align 8, !dbg !9016
  %arrayidx36 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %35, i64 1, !dbg !9015
  %re37 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx36, i32 0, i32 0, !dbg !9017
  %36 = load float, float* %re37, align 4, !dbg !9018
  %sub38 = fsub float %36, %33, !dbg !9018
  store float %sub38, float* %re37, align 4, !dbg !9018
  br label %if.end, !dbg !9019

if.else:                                          ; preds = %lor.lhs.false
  %37 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9020
  %table = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %37, i32 0, i32 2, !dbg !9022
  %38 = load float*, float** %table, align 8, !dbg !9022
  %arrayidx39 = getelementptr inbounds float, float* %38, i64 4, !dbg !9020
  %39 = load float, float* %arrayidx39, align 4, !dbg !9020
  %sub40 = fsub float -0.000000e+00, %39, !dbg !9023
  %arrayidx41 = getelementptr inbounds [6 x float], [6 x float]* %f, i64 0, i64 1, !dbg !9024
  store float %sub40, float* %arrayidx41, align 4, !dbg !9025
  %40 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9026
  %table42 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %40, i32 0, i32 2, !dbg !9027
  %41 = load float*, float** %table42, align 8, !dbg !9027
  %arrayidx43 = getelementptr inbounds float, float* %41, i64 3, !dbg !9026
  %42 = load float, float* %arrayidx43, align 4, !dbg !9026
  %43 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9028
  %table44 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %43, i32 0, i32 2, !dbg !9029
  %44 = load float*, float** %table44, align 8, !dbg !9029
  %arrayidx45 = getelementptr inbounds float, float* %44, i64 0, !dbg !9028
  %45 = load float, float* %arrayidx45, align 4, !dbg !9028
  %sub46 = fsub float %42, %45, !dbg !9030
  %arrayidx47 = getelementptr inbounds [6 x float], [6 x float]* %f, i64 0, i64 0, !dbg !9031
  store float %sub46, float* %arrayidx47, align 16, !dbg !9032
  %46 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9033
  %table48 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %46, i32 0, i32 2, !dbg !9034
  %47 = load float*, float** %table48, align 8, !dbg !9034
  %arrayidx49 = getelementptr inbounds float, float* %47, i64 2, !dbg !9033
  %48 = load float, float* %arrayidx49, align 4, !dbg !9033
  %conv50 = fpext float %48 to double, !dbg !9033
  %sub51 = fsub double 1.000000e+00, %conv50, !dbg !9035
  %49 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9036
  %table52 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %49, i32 0, i32 2, !dbg !9037
  %50 = load float*, float** %table52, align 8, !dbg !9037
  %arrayidx53 = getelementptr inbounds float, float* %50, i64 3, !dbg !9036
  %51 = load float, float* %arrayidx53, align 4, !dbg !9036
  %conv54 = fpext float %51 to double, !dbg !9036
  %sub55 = fsub double %sub51, %conv54, !dbg !9038
  %conv56 = fptrunc double %sub55 to float, !dbg !9039
  %arrayidx57 = getelementptr inbounds [6 x float], [6 x float]* %f, i64 0, i64 2, !dbg !9040
  store float %conv56, float* %arrayidx57, align 8, !dbg !9041
  %52 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9042
  %table58 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %52, i32 0, i32 2, !dbg !9043
  %53 = load float*, float** %table58, align 8, !dbg !9043
  %arrayidx59 = getelementptr inbounds float, float* %53, i64 1, !dbg !9042
  %54 = load float, float* %arrayidx59, align 4, !dbg !9042
  %55 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9044
  %table60 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %55, i32 0, i32 2, !dbg !9045
  %56 = load float*, float** %table60, align 8, !dbg !9045
  %arrayidx61 = getelementptr inbounds float, float* %56, i64 4, !dbg !9044
  %57 = load float, float* %arrayidx61, align 4, !dbg !9044
  %add62 = fadd float %54, %57, !dbg !9046
  %conv63 = fpext float %add62 to double, !dbg !9042
  %sub64 = fsub double %conv63, 1.000000e+00, !dbg !9047
  %conv65 = fptrunc double %sub64 to float, !dbg !9042
  %arrayidx66 = getelementptr inbounds [6 x float], [6 x float]* %f, i64 0, i64 3, !dbg !9048
  store float %conv65, float* %arrayidx66, align 4, !dbg !9049
  %58 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9050
  %table67 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %58, i32 0, i32 2, !dbg !9051
  %59 = load float*, float** %table67, align 8, !dbg !9051
  %arrayidx68 = getelementptr inbounds float, float* %59, i64 0, !dbg !9050
  %60 = load float, float* %arrayidx68, align 4, !dbg !9050
  %61 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9052
  %table69 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %61, i32 0, i32 2, !dbg !9053
  %62 = load float*, float** %table69, align 8, !dbg !9053
  %arrayidx70 = getelementptr inbounds float, float* %62, i64 1, !dbg !9052
  %63 = load float, float* %arrayidx70, align 4, !dbg !9052
  %sub71 = fsub float %60, %63, !dbg !9054
  %arrayidx72 = getelementptr inbounds [6 x float], [6 x float]* %f, i64 0, i64 4, !dbg !9055
  store float %sub71, float* %arrayidx72, align 16, !dbg !9056
  %64 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9057
  %table73 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %64, i32 0, i32 2, !dbg !9058
  %65 = load float*, float** %table73, align 8, !dbg !9058
  %arrayidx74 = getelementptr inbounds float, float* %65, i64 2, !dbg !9057
  %66 = load float, float* %arrayidx74, align 4, !dbg !9057
  %arrayidx75 = getelementptr inbounds [6 x float], [6 x float]* %f, i64 0, i64 5, !dbg !9059
  store float %66, float* %arrayidx75, align 4, !dbg !9060
  store i32 0, i32* %i, align 4, !dbg !9061
  br label %for.cond, !dbg !9063

for.cond:                                         ; preds = %for.inc, %if.else
  %67 = load i32, i32* %i, align 4, !dbg !9064
  %cmp76 = icmp slt i32 %67, 2, !dbg !9067
  br i1 %cmp76, label %for.body, label %for.end, !dbg !9068

for.body:                                         ; preds = %for.cond
  %re78 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 0, !dbg !9069
  %68 = load float, float* %re78, align 4, !dbg !9069
  %69 = load i32, i32* %i, align 4, !dbg !9071
  %idxprom79 = sext i32 %69 to i64, !dbg !9072
  %arrayidx80 = getelementptr inbounds [6 x float], [6 x float]* %f, i64 0, i64 %idxprom79, !dbg !9072
  %70 = load float, float* %arrayidx80, align 4, !dbg !9072
  %mul81 = fmul float %68, %70, !dbg !9073
  %71 = load i32, i32* %i, align 4, !dbg !9074
  %idxprom82 = sext i32 %71 to i64, !dbg !9075
  %72 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9076
  %cutoff83 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %72, i32 0, i32 7, !dbg !9077
  %73 = load i16, i16* %cutoff83, align 2, !dbg !9077
  %idxprom84 = sext i16 %73 to i64, !dbg !9075
  %arrayidx85 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* @fft_cutoff_index_table, i64 0, i64 %idxprom84, !dbg !9075
  %arrayidx86 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx85, i64 0, i64 %idxprom82, !dbg !9075
  %74 = load i32, i32* %arrayidx86, align 4, !dbg !9075
  %idxprom87 = sext i32 %74 to i64, !dbg !9078
  %75 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9078
  %complex88 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %75, i32 0, i32 1, !dbg !9079
  %76 = load %struct.QDM2Complex*, %struct.QDM2Complex** %complex88, align 8, !dbg !9079
  %arrayidx89 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %76, i64 %idxprom87, !dbg !9078
  %re90 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx89, i32 0, i32 0, !dbg !9080
  %77 = load float, float* %re90, align 4, !dbg !9081
  %add91 = fadd float %77, %mul81, !dbg !9081
  store float %add91, float* %re90, align 4, !dbg !9081
  %im92 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 1, !dbg !9082
  %78 = load float, float* %im92, align 4, !dbg !9082
  %79 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9083
  %cutoff93 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %79, i32 0, i32 7, !dbg !9084
  %80 = load i16, i16* %cutoff93, align 2, !dbg !9084
  %conv94 = sext i16 %80 to i32, !dbg !9083
  %81 = load i32, i32* %i, align 4, !dbg !9085
  %cmp95 = icmp sle i32 %conv94, %81, !dbg !9086
  br i1 %cmp95, label %cond.true, label %cond.false, !dbg !9087

cond.true:                                        ; preds = %for.body
  %82 = load i32, i32* %i, align 4, !dbg !9088
  %idxprom97 = sext i32 %82 to i64, !dbg !9090
  %arrayidx98 = getelementptr inbounds [6 x float], [6 x float]* %f, i64 0, i64 %idxprom97, !dbg !9090
  %83 = load float, float* %arrayidx98, align 4, !dbg !9090
  %sub99 = fsub float -0.000000e+00, %83, !dbg !9091
  br label %cond.end, !dbg !9092

cond.false:                                       ; preds = %for.body
  %84 = load i32, i32* %i, align 4, !dbg !9093
  %idxprom100 = sext i32 %84 to i64, !dbg !9095
  %arrayidx101 = getelementptr inbounds [6 x float], [6 x float]* %f, i64 0, i64 %idxprom100, !dbg !9095
  %85 = load float, float* %arrayidx101, align 4, !dbg !9095
  br label %cond.end, !dbg !9096

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %sub99, %cond.true ], [ %85, %cond.false ], !dbg !9097
  %mul102 = fmul float %78, %cond, !dbg !9099
  %86 = load i32, i32* %i, align 4, !dbg !9100
  %idxprom103 = sext i32 %86 to i64, !dbg !9101
  %87 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9102
  %cutoff104 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %87, i32 0, i32 7, !dbg !9103
  %88 = load i16, i16* %cutoff104, align 2, !dbg !9103
  %idxprom105 = sext i16 %88 to i64, !dbg !9101
  %arrayidx106 = getelementptr inbounds [4 x [2 x i32]], [4 x [2 x i32]]* @fft_cutoff_index_table, i64 0, i64 %idxprom105, !dbg !9101
  %arrayidx107 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx106, i64 0, i64 %idxprom103, !dbg !9101
  %89 = load i32, i32* %arrayidx107, align 4, !dbg !9101
  %idxprom108 = sext i32 %89 to i64, !dbg !9104
  %90 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9104
  %complex109 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %90, i32 0, i32 1, !dbg !9105
  %91 = load %struct.QDM2Complex*, %struct.QDM2Complex** %complex109, align 8, !dbg !9105
  %arrayidx110 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %91, i64 %idxprom108, !dbg !9104
  %im111 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx110, i32 0, i32 1, !dbg !9106
  %92 = load float, float* %im111, align 4, !dbg !9107
  %add112 = fadd float %92, %mul102, !dbg !9107
  store float %add112, float* %im111, align 4, !dbg !9107
  br label %for.inc, !dbg !9108

for.inc:                                          ; preds = %cond.end
  %93 = load i32, i32* %i, align 4, !dbg !9109
  %inc = add nsw i32 %93, 1, !dbg !9109
  store i32 %inc, i32* %i, align 4, !dbg !9109
  br label %for.cond, !dbg !9111, !llvm.loop !9112

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9114
  br label %for.cond113, !dbg !9116

for.cond113:                                      ; preds = %for.inc137, %for.end
  %94 = load i32, i32* %i, align 4, !dbg !9117
  %cmp114 = icmp slt i32 %94, 4, !dbg !9120
  br i1 %cmp114, label %for.body116, label %for.end139, !dbg !9121

for.body116:                                      ; preds = %for.cond113
  %re117 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 0, !dbg !9122
  %95 = load float, float* %re117, align 4, !dbg !9122
  %96 = load i32, i32* %i, align 4, !dbg !9124
  %add118 = add nsw i32 %96, 2, !dbg !9125
  %idxprom119 = sext i32 %add118 to i64, !dbg !9126
  %arrayidx120 = getelementptr inbounds [6 x float], [6 x float]* %f, i64 0, i64 %idxprom119, !dbg !9126
  %97 = load float, float* %arrayidx120, align 4, !dbg !9126
  %mul121 = fmul float %95, %97, !dbg !9127
  %98 = load i32, i32* %i, align 4, !dbg !9128
  %idxprom122 = sext i32 %98 to i64, !dbg !9129
  %99 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9129
  %complex123 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %99, i32 0, i32 1, !dbg !9130
  %100 = load %struct.QDM2Complex*, %struct.QDM2Complex** %complex123, align 8, !dbg !9130
  %arrayidx124 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %100, i64 %idxprom122, !dbg !9129
  %re125 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx124, i32 0, i32 0, !dbg !9131
  %101 = load float, float* %re125, align 4, !dbg !9132
  %add126 = fadd float %101, %mul121, !dbg !9132
  store float %add126, float* %re125, align 4, !dbg !9132
  %im127 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %c, i32 0, i32 1, !dbg !9133
  %102 = load float, float* %im127, align 4, !dbg !9133
  %103 = load i32, i32* %i, align 4, !dbg !9134
  %add128 = add nsw i32 %103, 2, !dbg !9135
  %idxprom129 = sext i32 %add128 to i64, !dbg !9136
  %arrayidx130 = getelementptr inbounds [6 x float], [6 x float]* %f, i64 0, i64 %idxprom129, !dbg !9136
  %104 = load float, float* %arrayidx130, align 4, !dbg !9136
  %mul131 = fmul float %102, %104, !dbg !9137
  %105 = load i32, i32* %i, align 4, !dbg !9138
  %idxprom132 = sext i32 %105 to i64, !dbg !9139
  %106 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9139
  %complex133 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %106, i32 0, i32 1, !dbg !9140
  %107 = load %struct.QDM2Complex*, %struct.QDM2Complex** %complex133, align 8, !dbg !9140
  %arrayidx134 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %107, i64 %idxprom132, !dbg !9139
  %im135 = getelementptr inbounds %struct.QDM2Complex, %struct.QDM2Complex* %arrayidx134, i32 0, i32 1, !dbg !9141
  %108 = load float, float* %im135, align 4, !dbg !9142
  %add136 = fadd float %108, %mul131, !dbg !9142
  store float %add136, float* %im135, align 4, !dbg !9142
  br label %for.inc137, !dbg !9143

for.inc137:                                       ; preds = %for.body116
  %109 = load i32, i32* %i, align 4, !dbg !9144
  %inc138 = add nsw i32 %109, 1, !dbg !9144
  store i32 %inc138, i32* %i, align 4, !dbg !9144
  br label %for.cond113, !dbg !9146, !llvm.loop !9147

for.end139:                                       ; preds = %for.cond113
  br label %if.end

if.end:                                           ; preds = %for.end139, %if.then
  %110 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9149
  %time_index140 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %110, i32 0, i32 6, !dbg !9151
  %111 = load i16, i16* %time_index140, align 4, !dbg !9152
  %inc141 = add i16 %111, 1, !dbg !9152
  store i16 %inc141, i16* %time_index140, align 4, !dbg !9152
  %conv142 = sext i16 %inc141 to i32, !dbg !9152
  %112 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9153
  %duration143 = getelementptr inbounds %struct.FFTTone, %struct.FFTTone* %112, i32 0, i32 5, !dbg !9154
  %113 = load i32, i32* %duration143, align 8, !dbg !9154
  %sub144 = sub nsw i32 5, %113, !dbg !9155
  %shl = shl i32 1, %sub144, !dbg !9156
  %sub145 = sub nsw i32 %shl, 1, !dbg !9157
  %cmp146 = icmp slt i32 %conv142, %sub145, !dbg !9158
  br i1 %cmp146, label %if.then148, label %if.end154, !dbg !9159

if.then148:                                       ; preds = %if.end
  %114 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !9160
  %fft_tone_end = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %114, i32 0, i32 20, !dbg !9162
  %115 = load i32, i32* %fft_tone_end, align 4, !dbg !9162
  %idxprom149 = sext i32 %115 to i64, !dbg !9163
  %116 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !9163
  %fft_tones = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %116, i32 0, i32 18, !dbg !9164
  %arrayidx150 = getelementptr inbounds [1000 x %struct.FFTTone], [1000 x %struct.FFTTone]* %fft_tones, i64 0, i64 %idxprom149, !dbg !9163
  %117 = bitcast %struct.FFTTone* %arrayidx150 to i8*, !dbg !9165
  %118 = load %struct.FFTTone*, %struct.FFTTone** %tone.addr, align 8, !dbg !9166
  %119 = bitcast %struct.FFTTone* %118 to i8*, !dbg !9165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %117, i8* %119, i64 40, i32 8, i1 false), !dbg !9165
  %120 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !9167
  %fft_tone_end151 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %120, i32 0, i32 20, !dbg !9168
  %121 = load i32, i32* %fft_tone_end151, align 4, !dbg !9168
  %add152 = add nsw i32 %121, 1, !dbg !9169
  %rem = srem i32 %add152, 1000, !dbg !9170
  %122 = load %struct.QDM2Context*, %struct.QDM2Context** %q.addr, align 8, !dbg !9171
  %fft_tone_end153 = getelementptr inbounds %struct.QDM2Context, %struct.QDM2Context* %122, i32 0, i32 20, !dbg !9172
  store i32 %rem, i32* %fft_tone_end153, align 4, !dbg !9173
  br label %if.end154, !dbg !9174

if.end154:                                        ; preds = %if.then148, %if.end
  ret void, !dbg !9175
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #7

declare void @ff_mpa_synth_filter_float(%struct.MPADSPContext*, float*, i32*, float*, i32*, float*, i64, float*) #3

declare void @ff_rdft_end(%struct.RDFTContext*) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1852, !1853}
!llvm.ident = !{!1854}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !904, globals: !932)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--qdm2.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881, !887, !893, !897}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !888, line: 77, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!891 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!892 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !888, line: 83, size: 32, align: 32, elements: !894)
!894 = !{!895, !896}
!895 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!896 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RDFTransformType", file: !898, line: 71, size: 32, align: 32, elements: !899)
!898 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!899 = !{!900, !901, !902, !903}
!900 = !DIEnumerator(name: "DFT_R2C", value: 0)
!901 = !DIEnumerator(name: "IDFT_C2R", value: 1)
!902 = !DIEnumerator(name: "IDFT_R2C", value: 2)
!903 = !DIEnumerator(name: "DFT_C2R", value: 3)
!904 = !{!905, !906, !907, !910, !911, !912, !913, !919, !925, !928, !930}
!905 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!906 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !908, line: 55, baseType: !909)
!908 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!909 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!910 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !908, line: 38, baseType: !905)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64, align: 64)
!914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !915)
!915 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_64", file: !916, line: 220, size: 64, align: 8, elements: !917)
!916 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!917 = !{!918}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !915, file: !916, line: 220, baseType: !907, size: 64, align: 64)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64, align: 64)
!920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !921)
!921 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !916, line: 221, size: 32, align: 8, elements: !922)
!922 = !{!923}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !921, file: !916, line: 221, baseType: !924, size: 32, align: 32)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !908, line: 51, baseType: !906)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64, align: 64)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !908, line: 37, baseType: !927)
!927 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !908, line: 49, baseType: !929)
!929 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64, align: 64)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !898, line: 35, baseType: !910)
!932 = !{!933, !1658, !1663, !1669, !1674, !1686, !1691, !1693, !1694, !1698, !1700, !1701, !1705, !1706, !1707, !1711, !1713, !1714, !1718, !1720, !1721, !1725, !1726, !1727, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1749, !1750, !1754, !1758, !1760, !1761, !1762, !1766, !1768, !1772, !1774, !1778, !1780, !1784, !1788, !1792, !1797, !1800, !1804, !1808, !1809, !1810, !1813, !1817, !1822, !1826, !1828, !1831, !1833, !1835, !1837, !1841, !1845, !1848}
!933 = distinct !DIGlobalVariable(name: "ff_qdm2_decoder", scope: !0, file: !934, line: 1859, type: !935, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_qdm2_decoder)
!934 = !DIFile(filename: "libavcodec/qdm2.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !936)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !937)
!937 = !{!938, !942, !943, !944, !945, !946, !955, !958, !961, !964, !967, !970, !1011, !1019, !1020, !1021, !1023, !1573, !1579, !1587, !1591, !1592, !1629, !1633, !1637, !1638, !1642, !1646, !1647, !1651, !1652, !1653}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !936, file: !14, line: 3475, baseType: !939, size: 64, align: 64)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64, align: 64)
!940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !941)
!941 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !936, file: !14, line: 3480, baseType: !939, size: 64, align: 64, offset: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !936, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !936, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !936, file: !14, line: 3487, baseType: !905, size: 32, align: 32, offset: 192)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !936, file: !14, line: 3488, baseType: !947, size: 64, align: 64, offset: 256)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64, align: 64)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !950, line: 61, baseType: !951)
!950 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !950, line: 58, size: 64, align: 32, elements: !952)
!952 = !{!953, !954}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !951, file: !950, line: 59, baseType: !905, size: 32, align: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !951, file: !950, line: 60, baseType: !905, size: 32, align: 32, offset: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !936, file: !14, line: 3489, baseType: !956, size: 64, align: 64, offset: 320)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64, align: 64)
!957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !936, file: !14, line: 3490, baseType: !959, size: 64, align: 64, offset: 384)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64, align: 64)
!960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !905)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !936, file: !14, line: 3491, baseType: !962, size: 64, align: 64, offset: 448)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64, align: 64)
!963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !936, file: !14, line: 3492, baseType: !965, size: 64, align: 64, offset: 512)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64, align: 64)
!966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !907)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !936, file: !14, line: 3493, baseType: !968, size: 8, align: 8, offset: 576)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !908, line: 48, baseType: !969)
!969 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !936, file: !14, line: 3494, baseType: !971, size: 64, align: 64, offset: 640)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64, align: 64)
!972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !973)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !974)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !975)
!975 = !{!976, !977, !981, !985, !986, !987, !988, !992, !998, !1000, !1004}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !974, file: !691, line: 72, baseType: !939, size: 64, align: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !974, file: !691, line: 78, baseType: !978, size: 64, align: 64, offset: 64)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!979 = !DISubroutineType(types: !980)
!980 = !{!939, !912}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !974, file: !691, line: 85, baseType: !982, size: 64, align: 64, offset: 128)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64, align: 64)
!983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!984 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !974, file: !691, line: 93, baseType: !905, size: 32, align: 32, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !974, file: !691, line: 99, baseType: !905, size: 32, align: 32, offset: 224)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !974, file: !691, line: 108, baseType: !905, size: 32, align: 32, offset: 256)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !974, file: !691, line: 113, baseType: !989, size: 64, align: 64, offset: 320)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64, align: 64)
!990 = !DISubroutineType(types: !991)
!991 = !{!912, !912, !912}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !974, file: !691, line: 123, baseType: !993, size: 64, align: 64, offset: 384)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64, align: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{!996, !996}
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64, align: 64)
!997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !974)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !974, file: !691, line: 130, baseType: !999, size: 32, align: 32, offset: 448)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !974, file: !691, line: 136, baseType: !1001, size: 64, align: 64, offset: 512)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64, align: 64)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!999, !912}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !974, file: !691, line: 142, baseType: !1005, size: 64, align: 64, offset: 576)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64, align: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!905, !1008, !912, !939, !905}
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64, align: 64)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64, align: 64)
!1010 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !936, file: !14, line: 3495, baseType: !1012, size: 64, align: 64, offset: 704)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64, align: 64)
!1013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1015)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1016)
!1016 = !{!1017, !1018}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1015, file: !14, line: 3402, baseType: !905, size: 32, align: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1015, file: !14, line: 3403, baseType: !939, size: 64, align: 64, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !936, file: !14, line: 3507, baseType: !939, size: 64, align: 64, offset: 768)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !936, file: !14, line: 3516, baseType: !905, size: 32, align: 32, offset: 832)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !936, file: !14, line: 3517, baseType: !1022, size: 64, align: 64, offset: 896)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64, align: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !936, file: !14, line: 3527, baseType: !1024, size: 64, align: 64, offset: 960)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64, align: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!905, !1027}
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64, align: 64)
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1029)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1030)
!1030 = !{!1031, !1032, !1033, !1034, !1037, !1038, !1039, !1040, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1322, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1511, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1029, file: !14, line: 1561, baseType: !971, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1029, file: !14, line: 1562, baseType: !905, size: 32, align: 32, offset: 64)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1029, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1029, file: !14, line: 1565, baseType: !1035, size: 64, align: 64, offset: 128)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64, align: 64)
!1036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !936)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1029, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1029, file: !14, line: 1581, baseType: !906, size: 32, align: 32, offset: 224)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1029, file: !14, line: 1583, baseType: !912, size: 64, align: 64, offset: 256)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1029, file: !14, line: 1591, baseType: !1041, size: 64, align: 64, offset: 320)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1043, line: 129, size: 1664, align: 64, elements: !1044)
!1043 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1044 = !{!1045, !1046, !1047, !1048, !1148, !1169, !1170, !1199, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1042, file: !1043, line: 136, baseType: !905, size: 32, align: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1042, file: !1043, line: 151, baseType: !905, size: 32, align: 32, offset: 32)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1042, file: !1043, line: 157, baseType: !905, size: 32, align: 32, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1042, file: !1043, line: 159, baseType: !1049, size: 64, align: 64, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64, align: 64)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1052)
!1052 = !{!1053, !1058, !1060, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1100, !1102, !1103, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1136, !1137, !1138, !1139, !1140, !1141, !1144, !1145, !1146, !1147}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1051, file: !722, line: 282, baseType: !1054, size: 512, align: 64)
!1054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1055, size: 512, align: 64, elements: !1056)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64, align: 64)
!1056 = !{!1057}
!1057 = !DISubrange(count: 8)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1051, file: !722, line: 299, baseType: !1059, size: 256, align: 32, offset: 512)
!1059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 256, align: 32, elements: !1056)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1051, file: !722, line: 315, baseType: !1061, size: 64, align: 64, offset: 768)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64, align: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1051, file: !722, line: 326, baseType: !905, size: 32, align: 32, offset: 832)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1051, file: !722, line: 326, baseType: !905, size: 32, align: 32, offset: 864)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1051, file: !722, line: 334, baseType: !905, size: 32, align: 32, offset: 896)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1051, file: !722, line: 341, baseType: !905, size: 32, align: 32, offset: 928)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1051, file: !722, line: 346, baseType: !905, size: 32, align: 32, offset: 960)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1051, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1051, file: !722, line: 356, baseType: !949, size: 64, align: 32, offset: 1024)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1051, file: !722, line: 361, baseType: !1070, size: 64, align: 64, offset: 1088)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !908, line: 40, baseType: !1071)
!1071 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1051, file: !722, line: 369, baseType: !1070, size: 64, align: 64, offset: 1152)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1051, file: !722, line: 377, baseType: !1070, size: 64, align: 64, offset: 1216)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1051, file: !722, line: 382, baseType: !905, size: 32, align: 32, offset: 1280)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1051, file: !722, line: 386, baseType: !905, size: 32, align: 32, offset: 1312)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1051, file: !722, line: 391, baseType: !905, size: 32, align: 32, offset: 1344)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1051, file: !722, line: 396, baseType: !912, size: 64, align: 64, offset: 1408)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1051, file: !722, line: 403, baseType: !1079, size: 512, align: 64, offset: 1472)
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 512, align: 64, elements: !1056)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1051, file: !722, line: 410, baseType: !905, size: 32, align: 32, offset: 1984)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1051, file: !722, line: 415, baseType: !905, size: 32, align: 32, offset: 2016)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1051, file: !722, line: 420, baseType: !905, size: 32, align: 32, offset: 2048)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1051, file: !722, line: 425, baseType: !905, size: 32, align: 32, offset: 2080)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1051, file: !722, line: 435, baseType: !1070, size: 64, align: 64, offset: 2112)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1051, file: !722, line: 440, baseType: !905, size: 32, align: 32, offset: 2176)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1051, file: !722, line: 445, baseType: !907, size: 64, align: 64, offset: 2240)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1051, file: !722, line: 459, baseType: !1088, size: 512, align: 64, offset: 2304)
!1088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1089, size: 512, align: 64, elements: !1056)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64, align: 64)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1091, line: 94, baseType: !1092)
!1091 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1091, line: 81, size: 192, align: 64, elements: !1093)
!1093 = !{!1094, !1098, !1099}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1092, file: !1091, line: 82, baseType: !1095, size: 64, align: 64)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64, align: 64)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1091, line: 73, baseType: !1097)
!1097 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1091, line: 73, flags: DIFlagFwdDecl)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1092, file: !1091, line: 89, baseType: !1055, size: 64, align: 64, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1092, file: !1091, line: 93, baseType: !905, size: 32, align: 32, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1051, file: !722, line: 473, baseType: !1101, size: 64, align: 64, offset: 2816)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64, align: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1051, file: !722, line: 477, baseType: !905, size: 32, align: 32, offset: 2880)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1051, file: !722, line: 479, baseType: !1104, size: 64, align: 64, offset: 2944)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64, align: 64)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64, align: 64)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1108)
!1108 = !{!1109, !1110, !1111, !1112, !1117}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1107, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1107, file: !722, line: 203, baseType: !1055, size: 64, align: 64, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1107, file: !722, line: 204, baseType: !905, size: 32, align: 32, offset: 128)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1107, file: !722, line: 205, baseType: !1113, size: 64, align: 64, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64, align: 64)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1115, line: 86, baseType: !1116)
!1115 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1116 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1115, line: 86, flags: DIFlagFwdDecl)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1107, file: !722, line: 206, baseType: !1089, size: 64, align: 64, offset: 256)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1051, file: !722, line: 480, baseType: !905, size: 32, align: 32, offset: 3008)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1051, file: !722, line: 505, baseType: !905, size: 32, align: 32, offset: 3040)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1051, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1051, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1051, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1051, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1051, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1051, file: !722, line: 532, baseType: !1070, size: 64, align: 64, offset: 3264)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1051, file: !722, line: 539, baseType: !1070, size: 64, align: 64, offset: 3328)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1051, file: !722, line: 547, baseType: !1070, size: 64, align: 64, offset: 3392)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1051, file: !722, line: 554, baseType: !1113, size: 64, align: 64, offset: 3456)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1051, file: !722, line: 563, baseType: !905, size: 32, align: 32, offset: 3520)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1051, file: !722, line: 572, baseType: !905, size: 32, align: 32, offset: 3552)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1051, file: !722, line: 581, baseType: !905, size: 32, align: 32, offset: 3584)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1051, file: !722, line: 588, baseType: !1133, size: 64, align: 64, offset: 3648)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64, align: 64)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !908, line: 36, baseType: !1135)
!1135 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1051, file: !722, line: 593, baseType: !905, size: 32, align: 32, offset: 3712)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1051, file: !722, line: 596, baseType: !905, size: 32, align: 32, offset: 3744)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1051, file: !722, line: 599, baseType: !1089, size: 64, align: 64, offset: 3776)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1051, file: !722, line: 605, baseType: !1089, size: 64, align: 64, offset: 3840)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1051, file: !722, line: 616, baseType: !1089, size: 64, align: 64, offset: 3904)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1051, file: !722, line: 626, baseType: !1142, size: 64, align: 64, offset: 3968)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1143, line: 216, baseType: !909)
!1143 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1051, file: !722, line: 627, baseType: !1142, size: 64, align: 64, offset: 4032)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1051, file: !722, line: 628, baseType: !1142, size: 64, align: 64, offset: 4096)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1051, file: !722, line: 629, baseType: !1142, size: 64, align: 64, offset: 4160)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1051, file: !722, line: 645, baseType: !1089, size: 64, align: 64, offset: 4224)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1042, file: !1043, line: 161, baseType: !1149, size: 64, align: 64, offset: 192)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64, align: 64)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1043, line: 117, baseType: !1151)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1043, line: 100, size: 832, align: 64, elements: !1152)
!1152 = !{!1153, !1160, !1161, !1162, !1163, !1164, !1166, !1167, !1168}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1151, file: !1043, line: 105, baseType: !1154, size: 256, align: 64)
!1154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1155, size: 256, align: 64, elements: !1158)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64, align: 64)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1091, line: 238, baseType: !1157)
!1157 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1091, line: 238, flags: DIFlagFwdDecl)
!1158 = !{!1159}
!1159 = !DISubrange(count: 4)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1151, file: !1043, line: 110, baseType: !905, size: 32, align: 32, offset: 256)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1151, file: !1043, line: 111, baseType: !905, size: 32, align: 32, offset: 288)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1151, file: !1043, line: 111, baseType: !905, size: 32, align: 32, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1151, file: !1043, line: 112, baseType: !1059, size: 256, align: 32, offset: 352)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1151, file: !1043, line: 113, baseType: !1165, size: 128, align: 32, offset: 608)
!1165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 128, align: 32, elements: !1158)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1151, file: !1043, line: 114, baseType: !905, size: 32, align: 32, offset: 736)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1151, file: !1043, line: 115, baseType: !905, size: 32, align: 32, offset: 768)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1151, file: !1043, line: 116, baseType: !905, size: 32, align: 32, offset: 800)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1042, file: !1043, line: 163, baseType: !912, size: 64, align: 64, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1042, file: !1043, line: 165, baseType: !1171, size: 128, align: 64, offset: 320)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1043, line: 122, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1043, line: 119, size: 128, align: 64, elements: !1173)
!1173 = !{!1174, !1198}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1172, file: !1043, line: 120, baseType: !1175, size: 64, align: 64)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1194, !1195, !1196, !1197}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1177, file: !14, line: 1451, baseType: !1089, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1177, file: !14, line: 1461, baseType: !1070, size: 64, align: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1177, file: !14, line: 1467, baseType: !1070, size: 64, align: 64, offset: 128)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1177, file: !14, line: 1468, baseType: !1055, size: 64, align: 64, offset: 192)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1177, file: !14, line: 1469, baseType: !905, size: 32, align: 32, offset: 256)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1177, file: !14, line: 1470, baseType: !905, size: 32, align: 32, offset: 288)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1177, file: !14, line: 1474, baseType: !905, size: 32, align: 32, offset: 320)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1177, file: !14, line: 1479, baseType: !1187, size: 64, align: 64, offset: 384)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1190)
!1190 = !{!1191, !1192, !1193}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1189, file: !14, line: 1412, baseType: !1055, size: 64, align: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1189, file: !14, line: 1413, baseType: !905, size: 32, align: 32, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1189, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1177, file: !14, line: 1480, baseType: !905, size: 32, align: 32, offset: 448)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1177, file: !14, line: 1486, baseType: !1070, size: 64, align: 64, offset: 512)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1177, file: !14, line: 1488, baseType: !1070, size: 64, align: 64, offset: 576)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1177, file: !14, line: 1497, baseType: !1070, size: 64, align: 64, offset: 640)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1172, file: !1043, line: 121, baseType: !1049, size: 64, align: 64, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1042, file: !1043, line: 166, baseType: !1200, size: 128, align: 64, offset: 448)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1043, line: 127, baseType: !1201)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1043, line: 124, size: 128, align: 64, elements: !1202)
!1202 = !{!1203, !1276}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1201, file: !1043, line: 125, baseType: !1204, size: 64, align: 64)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64, align: 64)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1208)
!1208 = !{!1209, !1210, !1234, !1238, !1239, !1273, !1274, !1275}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1207, file: !14, line: 5751, baseType: !971, size: 64, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1207, file: !14, line: 5756, baseType: !1211, size: 64, align: 64, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64, align: 64)
!1212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1214)
!1214 = !{!1215, !1216, !1219, !1220, !1221, !1225, !1229, !1233}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1213, file: !14, line: 5797, baseType: !939, size: 64, align: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1213, file: !14, line: 5804, baseType: !1217, size: 64, align: 64, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1213, file: !14, line: 5815, baseType: !971, size: 64, align: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1213, file: !14, line: 5825, baseType: !905, size: 32, align: 32, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1213, file: !14, line: 5826, baseType: !1222, size: 64, align: 64, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!905, !1205}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1213, file: !14, line: 5827, baseType: !1226, size: 64, align: 64, offset: 320)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64, align: 64)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!905, !1205, !1175}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1213, file: !14, line: 5828, baseType: !1230, size: 64, align: 64, offset: 384)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64, align: 64)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{null, !1205}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1213, file: !14, line: 5829, baseType: !1230, size: 64, align: 64, offset: 448)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1207, file: !14, line: 5762, baseType: !1235, size: 64, align: 64, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64, align: 64)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1237)
!1237 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1207, file: !14, line: 5768, baseType: !912, size: 64, align: 64, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1207, file: !14, line: 5775, baseType: !1240, size: 64, align: 64, offset: 256)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64, align: 64)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1242)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1243)
!1243 = !{!1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1242, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1242, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1242, file: !14, line: 3948, baseType: !924, size: 32, align: 32, offset: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1242, file: !14, line: 3958, baseType: !1055, size: 64, align: 64, offset: 128)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1242, file: !14, line: 3962, baseType: !905, size: 32, align: 32, offset: 192)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1242, file: !14, line: 3968, baseType: !905, size: 32, align: 32, offset: 224)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1242, file: !14, line: 3973, baseType: !1070, size: 64, align: 64, offset: 256)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1242, file: !14, line: 3986, baseType: !905, size: 32, align: 32, offset: 320)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1242, file: !14, line: 3999, baseType: !905, size: 32, align: 32, offset: 352)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1242, file: !14, line: 4004, baseType: !905, size: 32, align: 32, offset: 384)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1242, file: !14, line: 4005, baseType: !905, size: 32, align: 32, offset: 416)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1242, file: !14, line: 4010, baseType: !905, size: 32, align: 32, offset: 448)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1242, file: !14, line: 4011, baseType: !905, size: 32, align: 32, offset: 480)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1242, file: !14, line: 4020, baseType: !949, size: 64, align: 32, offset: 512)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1242, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1242, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1242, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1242, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1242, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1242, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1242, file: !14, line: 4039, baseType: !905, size: 32, align: 32, offset: 768)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1242, file: !14, line: 4046, baseType: !907, size: 64, align: 64, offset: 832)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1242, file: !14, line: 4050, baseType: !905, size: 32, align: 32, offset: 896)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1242, file: !14, line: 4054, baseType: !905, size: 32, align: 32, offset: 928)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1242, file: !14, line: 4061, baseType: !905, size: 32, align: 32, offset: 960)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1242, file: !14, line: 4065, baseType: !905, size: 32, align: 32, offset: 992)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1242, file: !14, line: 4073, baseType: !905, size: 32, align: 32, offset: 1024)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1242, file: !14, line: 4080, baseType: !905, size: 32, align: 32, offset: 1056)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1242, file: !14, line: 4084, baseType: !905, size: 32, align: 32, offset: 1088)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1207, file: !14, line: 5781, baseType: !1240, size: 64, align: 64, offset: 320)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1207, file: !14, line: 5787, baseType: !949, size: 64, align: 32, offset: 384)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1207, file: !14, line: 5793, baseType: !949, size: 64, align: 32, offset: 448)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1201, file: !1043, line: 126, baseType: !905, size: 32, align: 32, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1042, file: !1043, line: 172, baseType: !1175, size: 64, align: 64, offset: 576)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1042, file: !1043, line: 177, baseType: !1055, size: 64, align: 64, offset: 640)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1042, file: !1043, line: 178, baseType: !906, size: 32, align: 32, offset: 704)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1042, file: !1043, line: 180, baseType: !912, size: 64, align: 64, offset: 768)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1042, file: !1043, line: 185, baseType: !905, size: 32, align: 32, offset: 832)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1042, file: !1043, line: 190, baseType: !912, size: 64, align: 64, offset: 896)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1042, file: !1043, line: 195, baseType: !905, size: 32, align: 32, offset: 960)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1042, file: !1043, line: 200, baseType: !1175, size: 64, align: 64, offset: 1024)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1042, file: !1043, line: 201, baseType: !905, size: 32, align: 32, offset: 1088)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1042, file: !1043, line: 202, baseType: !1049, size: 64, align: 64, offset: 1152)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1042, file: !1043, line: 203, baseType: !905, size: 32, align: 32, offset: 1216)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1042, file: !1043, line: 205, baseType: !905, size: 32, align: 32, offset: 1248)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1042, file: !1043, line: 206, baseType: !905, size: 32, align: 32, offset: 1280)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1042, file: !1043, line: 209, baseType: !1142, size: 64, align: 64, offset: 1344)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1042, file: !1043, line: 212, baseType: !1142, size: 64, align: 64, offset: 1408)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1042, file: !1043, line: 213, baseType: !1049, size: 64, align: 64, offset: 1472)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1042, file: !1043, line: 215, baseType: !905, size: 32, align: 32, offset: 1536)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1042, file: !1043, line: 217, baseType: !905, size: 32, align: 32, offset: 1568)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1042, file: !1043, line: 220, baseType: !905, size: 32, align: 32, offset: 1600)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1029, file: !14, line: 1598, baseType: !912, size: 64, align: 64, offset: 384)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1029, file: !14, line: 1606, baseType: !1070, size: 64, align: 64, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1029, file: !14, line: 1614, baseType: !905, size: 32, align: 32, offset: 512)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1029, file: !14, line: 1622, baseType: !905, size: 32, align: 32, offset: 544)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1029, file: !14, line: 1628, baseType: !905, size: 32, align: 32, offset: 576)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1029, file: !14, line: 1636, baseType: !905, size: 32, align: 32, offset: 608)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1029, file: !14, line: 1643, baseType: !905, size: 32, align: 32, offset: 640)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1029, file: !14, line: 1657, baseType: !1055, size: 64, align: 64, offset: 704)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1029, file: !14, line: 1658, baseType: !905, size: 32, align: 32, offset: 768)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1029, file: !14, line: 1679, baseType: !949, size: 64, align: 32, offset: 800)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1029, file: !14, line: 1688, baseType: !905, size: 32, align: 32, offset: 864)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1029, file: !14, line: 1712, baseType: !905, size: 32, align: 32, offset: 896)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1029, file: !14, line: 1729, baseType: !905, size: 32, align: 32, offset: 928)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1029, file: !14, line: 1729, baseType: !905, size: 32, align: 32, offset: 960)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1029, file: !14, line: 1744, baseType: !905, size: 32, align: 32, offset: 992)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1029, file: !14, line: 1744, baseType: !905, size: 32, align: 32, offset: 1024)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1029, file: !14, line: 1751, baseType: !905, size: 32, align: 32, offset: 1056)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1029, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1029, file: !14, line: 1791, baseType: !1315, size: 64, align: 64, offset: 1152)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{null, !1318, !1319, !1321, !905, !905, !905}
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64, align: 64)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64, align: 64)
!1320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1050)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64, align: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1029, file: !14, line: 1808, baseType: !1323, size: 64, align: 64, offset: 1216)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64, align: 64)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!473, !1318, !956}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1029, file: !14, line: 1816, baseType: !905, size: 32, align: 32, offset: 1280)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1029, file: !14, line: 1825, baseType: !910, size: 32, align: 32, offset: 1312)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1029, file: !14, line: 1830, baseType: !905, size: 32, align: 32, offset: 1344)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1029, file: !14, line: 1838, baseType: !910, size: 32, align: 32, offset: 1376)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1029, file: !14, line: 1846, baseType: !905, size: 32, align: 32, offset: 1408)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1029, file: !14, line: 1851, baseType: !905, size: 32, align: 32, offset: 1440)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1029, file: !14, line: 1861, baseType: !910, size: 32, align: 32, offset: 1472)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1029, file: !14, line: 1868, baseType: !910, size: 32, align: 32, offset: 1504)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1029, file: !14, line: 1875, baseType: !910, size: 32, align: 32, offset: 1536)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1029, file: !14, line: 1882, baseType: !910, size: 32, align: 32, offset: 1568)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1029, file: !14, line: 1889, baseType: !910, size: 32, align: 32, offset: 1600)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1029, file: !14, line: 1896, baseType: !910, size: 32, align: 32, offset: 1632)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1029, file: !14, line: 1903, baseType: !910, size: 32, align: 32, offset: 1664)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1029, file: !14, line: 1910, baseType: !905, size: 32, align: 32, offset: 1696)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1029, file: !14, line: 1915, baseType: !905, size: 32, align: 32, offset: 1728)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1029, file: !14, line: 1926, baseType: !1321, size: 64, align: 64, offset: 1792)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1029, file: !14, line: 1935, baseType: !949, size: 64, align: 32, offset: 1856)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1029, file: !14, line: 1942, baseType: !905, size: 32, align: 32, offset: 1920)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1029, file: !14, line: 1948, baseType: !905, size: 32, align: 32, offset: 1952)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1029, file: !14, line: 1954, baseType: !905, size: 32, align: 32, offset: 1984)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1029, file: !14, line: 1960, baseType: !905, size: 32, align: 32, offset: 2016)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1029, file: !14, line: 1984, baseType: !905, size: 32, align: 32, offset: 2048)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1029, file: !14, line: 1991, baseType: !905, size: 32, align: 32, offset: 2080)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1029, file: !14, line: 1996, baseType: !905, size: 32, align: 32, offset: 2112)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1029, file: !14, line: 2004, baseType: !905, size: 32, align: 32, offset: 2144)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1029, file: !14, line: 2011, baseType: !905, size: 32, align: 32, offset: 2176)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1029, file: !14, line: 2018, baseType: !905, size: 32, align: 32, offset: 2208)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1029, file: !14, line: 2027, baseType: !905, size: 32, align: 32, offset: 2240)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1029, file: !14, line: 2034, baseType: !905, size: 32, align: 32, offset: 2272)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1029, file: !14, line: 2044, baseType: !905, size: 32, align: 32, offset: 2304)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1029, file: !14, line: 2054, baseType: !1357, size: 64, align: 64, offset: 2368)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64, align: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1029, file: !14, line: 2061, baseType: !1357, size: 64, align: 64, offset: 2432)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1029, file: !14, line: 2066, baseType: !905, size: 32, align: 32, offset: 2496)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1029, file: !14, line: 2070, baseType: !905, size: 32, align: 32, offset: 2528)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1029, file: !14, line: 2078, baseType: !905, size: 32, align: 32, offset: 2560)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1029, file: !14, line: 2085, baseType: !905, size: 32, align: 32, offset: 2592)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1029, file: !14, line: 2092, baseType: !905, size: 32, align: 32, offset: 2624)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1029, file: !14, line: 2099, baseType: !905, size: 32, align: 32, offset: 2656)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1029, file: !14, line: 2106, baseType: !905, size: 32, align: 32, offset: 2688)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1029, file: !14, line: 2113, baseType: !905, size: 32, align: 32, offset: 2720)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1029, file: !14, line: 2120, baseType: !905, size: 32, align: 32, offset: 2752)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1029, file: !14, line: 2125, baseType: !905, size: 32, align: 32, offset: 2784)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1029, file: !14, line: 2133, baseType: !905, size: 32, align: 32, offset: 2816)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1029, file: !14, line: 2140, baseType: !905, size: 32, align: 32, offset: 2848)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1029, file: !14, line: 2145, baseType: !905, size: 32, align: 32, offset: 2880)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1029, file: !14, line: 2153, baseType: !905, size: 32, align: 32, offset: 2912)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1029, file: !14, line: 2158, baseType: !905, size: 32, align: 32, offset: 2944)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1029, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1029, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1029, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1029, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1029, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1029, file: !14, line: 2203, baseType: !905, size: 32, align: 32, offset: 3136)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1029, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1029, file: !14, line: 2212, baseType: !905, size: 32, align: 32, offset: 3200)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1029, file: !14, line: 2213, baseType: !905, size: 32, align: 32, offset: 3232)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1029, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1029, file: !14, line: 2232, baseType: !905, size: 32, align: 32, offset: 3296)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1029, file: !14, line: 2243, baseType: !905, size: 32, align: 32, offset: 3328)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1029, file: !14, line: 2249, baseType: !905, size: 32, align: 32, offset: 3360)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1029, file: !14, line: 2256, baseType: !905, size: 32, align: 32, offset: 3392)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1029, file: !14, line: 2263, baseType: !907, size: 64, align: 64, offset: 3456)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1029, file: !14, line: 2270, baseType: !907, size: 64, align: 64, offset: 3520)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1029, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1029, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1029, file: !14, line: 2367, baseType: !1393, size: 64, align: 64, offset: 3648)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64, align: 64)
!1394 = !DISubroutineType(types: !1395)
!1395 = !{!905, !1318, !1049, !905}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1029, file: !14, line: 2383, baseType: !905, size: 32, align: 32, offset: 3712)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1029, file: !14, line: 2386, baseType: !910, size: 32, align: 32, offset: 3744)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1029, file: !14, line: 2387, baseType: !910, size: 32, align: 32, offset: 3776)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1029, file: !14, line: 2394, baseType: !905, size: 32, align: 32, offset: 3808)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1029, file: !14, line: 2401, baseType: !905, size: 32, align: 32, offset: 3840)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1029, file: !14, line: 2408, baseType: !905, size: 32, align: 32, offset: 3872)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1029, file: !14, line: 2415, baseType: !905, size: 32, align: 32, offset: 3904)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1029, file: !14, line: 2422, baseType: !905, size: 32, align: 32, offset: 3936)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1029, file: !14, line: 2423, baseType: !1405, size: 64, align: 64, offset: 3968)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64, align: 64)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1407)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1408)
!1408 = !{!1409, !1410, !1411, !1412}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1407, file: !14, line: 827, baseType: !905, size: 32, align: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1407, file: !14, line: 828, baseType: !905, size: 32, align: 32, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1407, file: !14, line: 829, baseType: !905, size: 32, align: 32, offset: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1407, file: !14, line: 830, baseType: !910, size: 32, align: 32, offset: 96)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1029, file: !14, line: 2430, baseType: !1070, size: 64, align: 64, offset: 4032)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1029, file: !14, line: 2437, baseType: !1070, size: 64, align: 64, offset: 4096)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1029, file: !14, line: 2444, baseType: !910, size: 32, align: 32, offset: 4160)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1029, file: !14, line: 2451, baseType: !910, size: 32, align: 32, offset: 4192)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1029, file: !14, line: 2458, baseType: !905, size: 32, align: 32, offset: 4224)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1029, file: !14, line: 2469, baseType: !905, size: 32, align: 32, offset: 4256)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1029, file: !14, line: 2475, baseType: !905, size: 32, align: 32, offset: 4288)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1029, file: !14, line: 2481, baseType: !905, size: 32, align: 32, offset: 4320)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1029, file: !14, line: 2485, baseType: !905, size: 32, align: 32, offset: 4352)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1029, file: !14, line: 2489, baseType: !905, size: 32, align: 32, offset: 4384)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1029, file: !14, line: 2493, baseType: !905, size: 32, align: 32, offset: 4416)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1029, file: !14, line: 2501, baseType: !905, size: 32, align: 32, offset: 4448)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1029, file: !14, line: 2506, baseType: !905, size: 32, align: 32, offset: 4480)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1029, file: !14, line: 2510, baseType: !905, size: 32, align: 32, offset: 4512)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1029, file: !14, line: 2514, baseType: !1070, size: 64, align: 64, offset: 4544)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1029, file: !14, line: 2528, baseType: !1429, size: 64, align: 64, offset: 4608)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64, align: 64)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{null, !1318, !912, !905, !905}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1029, file: !14, line: 2534, baseType: !905, size: 32, align: 32, offset: 4672)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1029, file: !14, line: 2545, baseType: !905, size: 32, align: 32, offset: 4704)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1029, file: !14, line: 2547, baseType: !905, size: 32, align: 32, offset: 4736)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1029, file: !14, line: 2549, baseType: !905, size: 32, align: 32, offset: 4768)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1029, file: !14, line: 2551, baseType: !905, size: 32, align: 32, offset: 4800)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1029, file: !14, line: 2553, baseType: !905, size: 32, align: 32, offset: 4832)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1029, file: !14, line: 2555, baseType: !905, size: 32, align: 32, offset: 4864)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1029, file: !14, line: 2557, baseType: !905, size: 32, align: 32, offset: 4896)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1029, file: !14, line: 2559, baseType: !905, size: 32, align: 32, offset: 4928)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1029, file: !14, line: 2563, baseType: !905, size: 32, align: 32, offset: 4960)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1029, file: !14, line: 2571, baseType: !1443, size: 64, align: 64, offset: 4992)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64, align: 64)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1029, file: !14, line: 2579, baseType: !1443, size: 64, align: 64, offset: 5056)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1029, file: !14, line: 2586, baseType: !905, size: 32, align: 32, offset: 5120)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1029, file: !14, line: 2615, baseType: !905, size: 32, align: 32, offset: 5152)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1029, file: !14, line: 2627, baseType: !905, size: 32, align: 32, offset: 5184)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1029, file: !14, line: 2637, baseType: !905, size: 32, align: 32, offset: 5216)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1029, file: !14, line: 2681, baseType: !905, size: 32, align: 32, offset: 5248)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1029, file: !14, line: 2709, baseType: !1070, size: 64, align: 64, offset: 5312)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1029, file: !14, line: 2716, baseType: !1452, size: 64, align: 64, offset: 5376)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64, align: 64)
!1453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1454)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459, !1460, !1461, !1465, !1471, !1475, !1476, !1477, !1478, !1484, !1485, !1486, !1487, !1488}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1454, file: !14, line: 3642, baseType: !939, size: 64, align: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1454, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1454, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1454, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1454, file: !14, line: 3669, baseType: !905, size: 32, align: 32, offset: 160)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1454, file: !14, line: 3682, baseType: !1462, size: 64, align: 64, offset: 192)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64, align: 64)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{!905, !1027, !1049}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1454, file: !14, line: 3698, baseType: !1466, size: 64, align: 64, offset: 256)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64, align: 64)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!905, !1027, !1469, !924}
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64, align: 64)
!1470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1454, file: !14, line: 3712, baseType: !1472, size: 64, align: 64, offset: 320)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64, align: 64)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!905, !1027, !905, !1469, !924}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1454, file: !14, line: 3726, baseType: !1466, size: 64, align: 64, offset: 384)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1454, file: !14, line: 3737, baseType: !1024, size: 64, align: 64, offset: 448)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1454, file: !14, line: 3746, baseType: !905, size: 32, align: 32, offset: 512)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1454, file: !14, line: 3757, baseType: !1479, size: 64, align: 64, offset: 576)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64, align: 64)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{null, !1482}
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64, align: 64)
!1483 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1454, file: !14, line: 3766, baseType: !1024, size: 64, align: 64, offset: 640)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1454, file: !14, line: 3774, baseType: !1024, size: 64, align: 64, offset: 704)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1454, file: !14, line: 3780, baseType: !905, size: 32, align: 32, offset: 768)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1454, file: !14, line: 3785, baseType: !905, size: 32, align: 32, offset: 800)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1454, file: !14, line: 3795, baseType: !1489, size: 64, align: 64, offset: 832)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64, align: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!905, !1027, !1089}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1029, file: !14, line: 2728, baseType: !912, size: 64, align: 64, offset: 5440)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1029, file: !14, line: 2735, baseType: !1079, size: 512, align: 64, offset: 5504)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1029, file: !14, line: 2742, baseType: !905, size: 32, align: 32, offset: 6016)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1029, file: !14, line: 2755, baseType: !905, size: 32, align: 32, offset: 6048)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1029, file: !14, line: 2776, baseType: !905, size: 32, align: 32, offset: 6080)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1029, file: !14, line: 2783, baseType: !905, size: 32, align: 32, offset: 6112)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1029, file: !14, line: 2791, baseType: !905, size: 32, align: 32, offset: 6144)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1029, file: !14, line: 2802, baseType: !1049, size: 64, align: 64, offset: 6208)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1029, file: !14, line: 2811, baseType: !905, size: 32, align: 32, offset: 6272)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1029, file: !14, line: 2821, baseType: !905, size: 32, align: 32, offset: 6304)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1029, file: !14, line: 2830, baseType: !905, size: 32, align: 32, offset: 6336)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1029, file: !14, line: 2840, baseType: !905, size: 32, align: 32, offset: 6368)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1029, file: !14, line: 2851, baseType: !1505, size: 64, align: 64, offset: 6400)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64, align: 64)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{!905, !1318, !1508, !912, !1321, !905, !905}
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64, align: 64)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!905, !1318, !912}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1029, file: !14, line: 2871, baseType: !1512, size: 64, align: 64, offset: 6464)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64, align: 64)
!1513 = !DISubroutineType(types: !1514)
!1514 = !{!905, !1318, !1515, !912, !1321, !905}
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64, align: 64)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{!905, !1318, !912, !905, !905}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1029, file: !14, line: 2878, baseType: !905, size: 32, align: 32, offset: 6528)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1029, file: !14, line: 2885, baseType: !905, size: 32, align: 32, offset: 6560)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1029, file: !14, line: 3005, baseType: !905, size: 32, align: 32, offset: 6592)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1029, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1029, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1029, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1029, file: !14, line: 3037, baseType: !1055, size: 64, align: 64, offset: 6720)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1029, file: !14, line: 3038, baseType: !905, size: 32, align: 32, offset: 6784)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1029, file: !14, line: 3050, baseType: !907, size: 64, align: 64, offset: 6848)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1029, file: !14, line: 3065, baseType: !905, size: 32, align: 32, offset: 6912)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1029, file: !14, line: 3083, baseType: !905, size: 32, align: 32, offset: 6944)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1029, file: !14, line: 3092, baseType: !949, size: 64, align: 32, offset: 6976)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1029, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1029, file: !14, line: 3106, baseType: !949, size: 64, align: 32, offset: 7072)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1029, file: !14, line: 3113, baseType: !1533, size: 64, align: 64, offset: 7168)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64, align: 64)
!1534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1535)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1536)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1537)
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1546}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1536, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1536, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1536, file: !14, line: 720, baseType: !939, size: 64, align: 64, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1536, file: !14, line: 724, baseType: !939, size: 64, align: 64, offset: 128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1536, file: !14, line: 728, baseType: !905, size: 32, align: 32, offset: 192)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1536, file: !14, line: 734, baseType: !1544, size: 64, align: 64, offset: 256)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64, align: 64)
!1545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !939)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1536, file: !14, line: 739, baseType: !1547, size: 64, align: 64, offset: 320)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64, align: 64)
!1548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1015)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1029, file: !14, line: 3129, baseType: !1070, size: 64, align: 64, offset: 7232)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1029, file: !14, line: 3130, baseType: !1070, size: 64, align: 64, offset: 7296)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1029, file: !14, line: 3131, baseType: !1070, size: 64, align: 64, offset: 7360)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1029, file: !14, line: 3132, baseType: !1070, size: 64, align: 64, offset: 7424)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1029, file: !14, line: 3139, baseType: !1443, size: 64, align: 64, offset: 7488)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1029, file: !14, line: 3147, baseType: !905, size: 32, align: 32, offset: 7552)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1029, file: !14, line: 3165, baseType: !905, size: 32, align: 32, offset: 7584)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1029, file: !14, line: 3172, baseType: !905, size: 32, align: 32, offset: 7616)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1029, file: !14, line: 3180, baseType: !905, size: 32, align: 32, offset: 7648)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1029, file: !14, line: 3191, baseType: !1357, size: 64, align: 64, offset: 7680)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1029, file: !14, line: 3199, baseType: !1055, size: 64, align: 64, offset: 7744)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1029, file: !14, line: 3207, baseType: !1443, size: 64, align: 64, offset: 7808)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1029, file: !14, line: 3214, baseType: !906, size: 32, align: 32, offset: 7872)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1029, file: !14, line: 3224, baseType: !1187, size: 64, align: 64, offset: 7936)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1029, file: !14, line: 3225, baseType: !905, size: 32, align: 32, offset: 8000)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1029, file: !14, line: 3249, baseType: !1089, size: 64, align: 64, offset: 8064)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1029, file: !14, line: 3256, baseType: !905, size: 32, align: 32, offset: 8128)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1029, file: !14, line: 3271, baseType: !905, size: 32, align: 32, offset: 8160)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1029, file: !14, line: 3279, baseType: !1070, size: 64, align: 64, offset: 8192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1029, file: !14, line: 3301, baseType: !1089, size: 64, align: 64, offset: 8256)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1029, file: !14, line: 3310, baseType: !905, size: 32, align: 32, offset: 8320)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1029, file: !14, line: 3337, baseType: !905, size: 32, align: 32, offset: 8352)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1029, file: !14, line: 3351, baseType: !905, size: 32, align: 32, offset: 8384)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1029, file: !14, line: 3359, baseType: !905, size: 32, align: 32, offset: 8416)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !936, file: !14, line: 3535, baseType: !1574, size: 64, align: 64, offset: 1024)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64, align: 64)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!905, !1027, !1577}
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64, align: 64)
!1578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1028)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !936, file: !14, line: 3541, baseType: !1580, size: 64, align: 64, offset: 1088)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64, align: 64)
!1581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1582)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1583)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1043, line: 223, size: 128, align: 64, elements: !1584)
!1584 = !{!1585, !1586}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1583, file: !1043, line: 224, baseType: !1469, size: 64, align: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1583, file: !1043, line: 225, baseType: !1469, size: 64, align: 64, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !936, file: !14, line: 3549, baseType: !1588, size: 64, align: 64, offset: 1152)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64, align: 64)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{null, !1022}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !936, file: !14, line: 3551, baseType: !1024, size: 64, align: 64, offset: 1216)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !936, file: !14, line: 3552, baseType: !1593, size: 64, align: 64, offset: 1280)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64, align: 64)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!905, !1027, !1055, !905, !1596}
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64, align: 64)
!1597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1598)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1599)
!1599 = !{!1600, !1601, !1602, !1603, !1604, !1628}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1598, file: !14, line: 3921, baseType: !928, size: 16, align: 16)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1598, file: !14, line: 3922, baseType: !924, size: 32, align: 32, offset: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1598, file: !14, line: 3923, baseType: !924, size: 32, align: 32, offset: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1598, file: !14, line: 3924, baseType: !906, size: 32, align: 32, offset: 96)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1598, file: !14, line: 3925, baseType: !1605, size: 64, align: 64, offset: 128)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64, align: 64)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64, align: 64)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1608)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1609)
!1609 = !{!1610, !1611, !1612, !1613, !1614, !1615, !1621, !1623, !1624, !1625, !1626, !1627}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1608, file: !14, line: 3886, baseType: !905, size: 32, align: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1608, file: !14, line: 3887, baseType: !905, size: 32, align: 32, offset: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1608, file: !14, line: 3888, baseType: !905, size: 32, align: 32, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1608, file: !14, line: 3889, baseType: !905, size: 32, align: 32, offset: 96)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1608, file: !14, line: 3890, baseType: !905, size: 32, align: 32, offset: 128)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1608, file: !14, line: 3897, baseType: !1616, size: 768, align: 64, offset: 192)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1617)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1618)
!1618 = !{!1619, !1620}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1617, file: !14, line: 3855, baseType: !1054, size: 512, align: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1617, file: !14, line: 3857, baseType: !1059, size: 256, align: 32, offset: 512)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1608, file: !14, line: 3903, baseType: !1622, size: 256, align: 64, offset: 960)
!1622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1055, size: 256, align: 64, elements: !1158)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1608, file: !14, line: 3904, baseType: !1165, size: 128, align: 32, offset: 1216)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1608, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1608, file: !14, line: 3908, baseType: !1443, size: 64, align: 64, offset: 1408)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1608, file: !14, line: 3915, baseType: !1443, size: 64, align: 64, offset: 1472)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1608, file: !14, line: 3917, baseType: !905, size: 32, align: 32, offset: 1536)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1598, file: !14, line: 3926, baseType: !1070, size: 64, align: 64, offset: 192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !936, file: !14, line: 3564, baseType: !1630, size: 64, align: 64, offset: 1344)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64, align: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{!905, !1027, !1175, !1319, !1321}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !936, file: !14, line: 3566, baseType: !1634, size: 64, align: 64, offset: 1408)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64, align: 64)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{!905, !1027, !912, !1321, !1175}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !936, file: !14, line: 3567, baseType: !1024, size: 64, align: 64, offset: 1472)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !936, file: !14, line: 3576, baseType: !1639, size: 64, align: 64, offset: 1536)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64, align: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!905, !1027, !1319}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !936, file: !14, line: 3577, baseType: !1643, size: 64, align: 64, offset: 1600)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64, align: 64)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!905, !1027, !1175}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !936, file: !14, line: 3584, baseType: !1462, size: 64, align: 64, offset: 1664)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !936, file: !14, line: 3589, baseType: !1648, size: 64, align: 64, offset: 1728)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64, align: 64)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{null, !1027}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !936, file: !14, line: 3594, baseType: !905, size: 32, align: 32, offset: 1792)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !936, file: !14, line: 3600, baseType: !939, size: 64, align: 64, offset: 1856)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !936, file: !14, line: 3609, baseType: !1654, size: 64, align: 64, offset: 1920)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64, align: 64)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64, align: 64)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1658 = distinct !DIGlobalVariable(name: "done", scope: !1659, file: !934, line: 1589, type: !905, isLocal: true, isDefinition: true, variable: i32* @qdm2_init_static_data.done)
!1659 = distinct !DISubprogram(name: "qdm2_init_static_data", scope: !934, file: !934, line: 1588, type: !1660, isLocal: true, isDefinition: true, scopeLine: 1588, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!1660 = !DISubroutineType(types: !1661)
!1661 = !{null}
!1662 = !{}
!1663 = distinct !DIGlobalVariable(name: "qdm2_vlc_offs", scope: !0, file: !1664, line: 112, type: !1665, isLocal: true, isDefinition: true, variable: [18 x i16]* @qdm2_vlc_offs)
!1664 = !DIFile(filename: "libavcodec/qdm2_tablegen.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 288, align: 16, elements: !1667)
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !928)
!1667 = !{!1668}
!1668 = !DISubrange(count: 18)
!1669 = distinct !DIGlobalVariable(name: "qdm2_table", scope: !0, file: !1664, line: 116, type: !1670, isLocal: true, isDefinition: true, variable: [3838 x [2 x i16]]* @qdm2_table)
!1670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 122816, align: 16, elements: !1671)
!1671 = !{!1672, !1673}
!1672 = !DISubrange(count: 3838)
!1673 = !DISubrange(count: 2)
!1674 = distinct !DIGlobalVariable(name: "vlc_tab_level", scope: !0, file: !1664, line: 98, type: !1675, isLocal: true, isDefinition: true, variable: %struct.VLC* @vlc_tab_level)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1676, line: 30, baseType: !1677)
!1676 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1676, line: 26, size: 192, align: 64, elements: !1678)
!1678 = !{!1679, !1680, !1684, !1685}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1677, file: !1676, line: 27, baseType: !905, size: 32, align: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1677, file: !1676, line: 28, baseType: !1681, size: 64, align: 64, offset: 64)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64, align: 64)
!1682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !926, size: 32, align: 16, elements: !1683)
!1683 = !{!1673}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1677, file: !1676, line: 29, baseType: !905, size: 32, align: 32, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1677, file: !1676, line: 29, baseType: !905, size: 32, align: 32, offset: 160)
!1686 = distinct !DIGlobalVariable(name: "vlc_tab_level_huffbits", scope: !0, file: !1687, line: 44, type: !1688, isLocal: true, isDefinition: true, variable: [24 x i8]* @vlc_tab_level_huffbits)
!1687 = !DIFile(filename: "libavcodec/qdm2data.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 192, align: 8, elements: !1689)
!1689 = !{!1690}
!1690 = !DISubrange(count: 24)
!1691 = distinct !DIGlobalVariable(name: "vlc_tab_level_huffcodes", scope: !0, file: !1687, line: 38, type: !1692, isLocal: true, isDefinition: true, variable: [24 x i16]* @vlc_tab_level_huffcodes)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 384, align: 16, elements: !1689)
!1693 = distinct !DIGlobalVariable(name: "vlc_tab_diff", scope: !0, file: !1664, line: 99, type: !1675, isLocal: true, isDefinition: true, variable: %struct.VLC* @vlc_tab_diff)
!1694 = distinct !DIGlobalVariable(name: "vlc_tab_diff_huffbits", scope: !0, file: !1687, line: 57, type: !1695, isLocal: true, isDefinition: true, variable: [37 x i8]* @vlc_tab_diff_huffbits)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 296, align: 8, elements: !1696)
!1696 = !{!1697}
!1697 = !DISubrange(count: 37)
!1698 = distinct !DIGlobalVariable(name: "vlc_tab_diff_huffcodes", scope: !0, file: !1687, line: 49, type: !1699, isLocal: true, isDefinition: true, variable: [37 x i16]* @vlc_tab_diff_huffcodes)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 592, align: 16, elements: !1696)
!1700 = distinct !DIGlobalVariable(name: "vlc_tab_run", scope: !0, file: !1664, line: 100, type: !1675, isLocal: true, isDefinition: true, variable: %struct.VLC* @vlc_tab_run)
!1701 = distinct !DIGlobalVariable(name: "vlc_tab_run_huffbits", scope: !0, file: !1687, line: 68, type: !1702, isLocal: true, isDefinition: true, variable: [6 x i8]* @vlc_tab_run_huffbits)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 48, align: 8, elements: !1703)
!1703 = !{!1704}
!1704 = !DISubrange(count: 6)
!1705 = distinct !DIGlobalVariable(name: "vlc_tab_run_huffcodes", scope: !0, file: !1687, line: 64, type: !1702, isLocal: true, isDefinition: true, variable: [6 x i8]* @vlc_tab_run_huffcodes)
!1706 = distinct !DIGlobalVariable(name: "fft_level_exp_alt_vlc", scope: !0, file: !1664, line: 101, type: !1675, isLocal: true, isDefinition: true, variable: %struct.VLC* @fft_level_exp_alt_vlc)
!1707 = distinct !DIGlobalVariable(name: "fft_level_exp_alt_huffbits", scope: !0, file: !1687, line: 200, type: !1708, isLocal: true, isDefinition: true, variable: [28 x i8]* @fft_level_exp_alt_huffbits)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 224, align: 8, elements: !1709)
!1709 = !{!1710}
!1710 = !DISubrange(count: 28)
!1711 = distinct !DIGlobalVariable(name: "fft_level_exp_alt_huffcodes", scope: !0, file: !1687, line: 193, type: !1712, isLocal: true, isDefinition: true, variable: [28 x i16]* @fft_level_exp_alt_huffcodes)
!1712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 448, align: 16, elements: !1709)
!1713 = distinct !DIGlobalVariable(name: "fft_level_exp_vlc", scope: !0, file: !1664, line: 102, type: !1675, isLocal: true, isDefinition: true, variable: %struct.VLC* @fft_level_exp_vlc)
!1714 = distinct !DIGlobalVariable(name: "fft_level_exp_huffbits", scope: !0, file: !1687, line: 212, type: !1715, isLocal: true, isDefinition: true, variable: [20 x i8]* @fft_level_exp_huffbits)
!1715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 160, align: 8, elements: !1716)
!1716 = !{!1717}
!1717 = !DISubrange(count: 20)
!1718 = distinct !DIGlobalVariable(name: "fft_level_exp_huffcodes", scope: !0, file: !1687, line: 206, type: !1719, isLocal: true, isDefinition: true, variable: [20 x i16]* @fft_level_exp_huffcodes)
!1719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 320, align: 16, elements: !1716)
!1720 = distinct !DIGlobalVariable(name: "fft_stereo_exp_vlc", scope: !0, file: !1664, line: 103, type: !1675, isLocal: true, isDefinition: true, variable: %struct.VLC* @fft_stereo_exp_vlc)
!1721 = distinct !DIGlobalVariable(name: "fft_stereo_exp_huffbits", scope: !0, file: !1687, line: 221, type: !1722, isLocal: true, isDefinition: true, variable: [7 x i8]* @fft_stereo_exp_huffbits)
!1722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 56, align: 8, elements: !1723)
!1723 = !{!1724}
!1724 = !DISubrange(count: 7)
!1725 = distinct !DIGlobalVariable(name: "fft_stereo_exp_huffcodes", scope: !0, file: !1687, line: 217, type: !1722, isLocal: true, isDefinition: true, variable: [7 x i8]* @fft_stereo_exp_huffcodes)
!1726 = distinct !DIGlobalVariable(name: "fft_stereo_phase_vlc", scope: !0, file: !1664, line: 104, type: !1675, isLocal: true, isDefinition: true, variable: %struct.VLC* @fft_stereo_phase_vlc)
!1727 = distinct !DIGlobalVariable(name: "fft_stereo_phase_huffbits", scope: !0, file: !1687, line: 230, type: !1728, isLocal: true, isDefinition: true, variable: [9 x i8]* @fft_stereo_phase_huffbits)
!1728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 72, align: 8, elements: !1729)
!1729 = !{!1730}
!1730 = !DISubrange(count: 9)
!1731 = distinct !DIGlobalVariable(name: "fft_stereo_phase_huffcodes", scope: !0, file: !1687, line: 226, type: !1728, isLocal: true, isDefinition: true, variable: [9 x i8]* @fft_stereo_phase_huffcodes)
!1732 = distinct !DIGlobalVariable(name: "vlc_tab_tone_level_idx_hi1", scope: !0, file: !1664, line: 105, type: !1675, isLocal: true, isDefinition: true, variable: %struct.VLC* @vlc_tab_tone_level_idx_hi1)
!1733 = distinct !DIGlobalVariable(name: "vlc_tab_tone_level_idx_hi1_huffbits", scope: !0, file: !1687, line: 79, type: !1715, isLocal: true, isDefinition: true, variable: [20 x i8]* @vlc_tab_tone_level_idx_hi1_huffbits)
!1734 = distinct !DIGlobalVariable(name: "vlc_tab_tone_level_idx_hi1_huffcodes", scope: !0, file: !1687, line: 73, type: !1719, isLocal: true, isDefinition: true, variable: [20 x i16]* @vlc_tab_tone_level_idx_hi1_huffcodes)
!1735 = distinct !DIGlobalVariable(name: "vlc_tab_tone_level_idx_mid", scope: !0, file: !1664, line: 106, type: !1675, isLocal: true, isDefinition: true, variable: %struct.VLC* @vlc_tab_tone_level_idx_mid)
!1736 = distinct !DIGlobalVariable(name: "vlc_tab_tone_level_idx_mid_huffbits", scope: !0, file: !1687, line: 90, type: !1688, isLocal: true, isDefinition: true, variable: [24 x i8]* @vlc_tab_tone_level_idx_mid_huffbits)
!1737 = distinct !DIGlobalVariable(name: "vlc_tab_tone_level_idx_mid_huffcodes", scope: !0, file: !1687, line: 84, type: !1692, isLocal: true, isDefinition: true, variable: [24 x i16]* @vlc_tab_tone_level_idx_mid_huffcodes)
!1738 = distinct !DIGlobalVariable(name: "vlc_tab_tone_level_idx_hi2", scope: !0, file: !1664, line: 107, type: !1675, isLocal: true, isDefinition: true, variable: %struct.VLC* @vlc_tab_tone_level_idx_hi2)
!1739 = distinct !DIGlobalVariable(name: "vlc_tab_tone_level_idx_hi2_huffbits", scope: !0, file: !1687, line: 101, type: !1688, isLocal: true, isDefinition: true, variable: [24 x i8]* @vlc_tab_tone_level_idx_hi2_huffbits)
!1740 = distinct !DIGlobalVariable(name: "vlc_tab_tone_level_idx_hi2_huffcodes", scope: !0, file: !1687, line: 95, type: !1692, isLocal: true, isDefinition: true, variable: [24 x i16]* @vlc_tab_tone_level_idx_hi2_huffcodes)
!1741 = distinct !DIGlobalVariable(name: "vlc_tab_type30", scope: !0, file: !1664, line: 108, type: !1675, isLocal: true, isDefinition: true, variable: %struct.VLC* @vlc_tab_type30)
!1742 = distinct !DIGlobalVariable(name: "vlc_tab_type30_huffbits", scope: !0, file: !1687, line: 110, type: !1728, isLocal: true, isDefinition: true, variable: [9 x i8]* @vlc_tab_type30_huffbits)
!1743 = distinct !DIGlobalVariable(name: "vlc_tab_type30_huffcodes", scope: !0, file: !1687, line: 106, type: !1728, isLocal: true, isDefinition: true, variable: [9 x i8]* @vlc_tab_type30_huffcodes)
!1744 = distinct !DIGlobalVariable(name: "vlc_tab_type34", scope: !0, file: !1664, line: 109, type: !1675, isLocal: true, isDefinition: true, variable: %struct.VLC* @vlc_tab_type34)
!1745 = distinct !DIGlobalVariable(name: "vlc_tab_type34_huffbits", scope: !0, file: !1687, line: 119, type: !1746, isLocal: true, isDefinition: true, variable: [10 x i8]* @vlc_tab_type34_huffbits)
!1746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 80, align: 8, elements: !1747)
!1747 = !{!1748}
!1748 = !DISubrange(count: 10)
!1749 = distinct !DIGlobalVariable(name: "vlc_tab_type34_huffcodes", scope: !0, file: !1687, line: 115, type: !1746, isLocal: true, isDefinition: true, variable: [10 x i8]* @vlc_tab_type34_huffcodes)
!1750 = distinct !DIGlobalVariable(name: "vlc_tab_fft_tone_offset", scope: !0, file: !1664, line: 110, type: !1751, isLocal: true, isDefinition: true, variable: [5 x %struct.VLC]* @vlc_tab_fft_tone_offset)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1675, size: 960, align: 64, elements: !1752)
!1752 = !{!1753}
!1753 = !DISubrange(count: 5)
!1754 = distinct !DIGlobalVariable(name: "vlc_tab_fft_tone_offset_0_huffbits", scope: !0, file: !1687, line: 130, type: !1755, isLocal: true, isDefinition: true, variable: [23 x i8]* @vlc_tab_fft_tone_offset_0_huffbits)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 184, align: 8, elements: !1756)
!1756 = !{!1757}
!1757 = !DISubrange(count: 23)
!1758 = distinct !DIGlobalVariable(name: "vlc_tab_fft_tone_offset_0_huffcodes", scope: !0, file: !1687, line: 124, type: !1759, isLocal: true, isDefinition: true, variable: [23 x i16]* @vlc_tab_fft_tone_offset_0_huffcodes)
!1759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 368, align: 16, elements: !1756)
!1760 = distinct !DIGlobalVariable(name: "vlc_tab_fft_tone_offset_1_huffbits", scope: !0, file: !1687, line: 142, type: !1708, isLocal: true, isDefinition: true, variable: [28 x i8]* @vlc_tab_fft_tone_offset_1_huffbits)
!1761 = distinct !DIGlobalVariable(name: "vlc_tab_fft_tone_offset_1_huffcodes", scope: !0, file: !1687, line: 135, type: !1712, isLocal: true, isDefinition: true, variable: [28 x i16]* @vlc_tab_fft_tone_offset_1_huffcodes)
!1762 = distinct !DIGlobalVariable(name: "vlc_tab_fft_tone_offset_2_huffbits", scope: !0, file: !1687, line: 155, type: !1763, isLocal: true, isDefinition: true, variable: [32 x i8]* @vlc_tab_fft_tone_offset_2_huffbits)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 256, align: 8, elements: !1764)
!1764 = !{!1765}
!1765 = !DISubrange(count: 32)
!1766 = distinct !DIGlobalVariable(name: "vlc_tab_fft_tone_offset_2_huffcodes", scope: !0, file: !1687, line: 148, type: !1767, isLocal: true, isDefinition: true, variable: [32 x i16]* @vlc_tab_fft_tone_offset_2_huffcodes)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 512, align: 16, elements: !1764)
!1768 = distinct !DIGlobalVariable(name: "vlc_tab_fft_tone_offset_3_huffbits", scope: !0, file: !1687, line: 169, type: !1769, isLocal: true, isDefinition: true, variable: [35 x i8]* @vlc_tab_fft_tone_offset_3_huffbits)
!1769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 280, align: 8, elements: !1770)
!1770 = !{!1771}
!1771 = !DISubrange(count: 35)
!1772 = distinct !DIGlobalVariable(name: "vlc_tab_fft_tone_offset_3_huffcodes", scope: !0, file: !1687, line: 161, type: !1773, isLocal: true, isDefinition: true, variable: [35 x i16]* @vlc_tab_fft_tone_offset_3_huffcodes)
!1773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 560, align: 16, elements: !1770)
!1774 = distinct !DIGlobalVariable(name: "vlc_tab_fft_tone_offset_4_huffbits", scope: !0, file: !1687, line: 184, type: !1775, isLocal: true, isDefinition: true, variable: [38 x i8]* @vlc_tab_fft_tone_offset_4_huffbits)
!1775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 304, align: 8, elements: !1776)
!1776 = !{!1777}
!1777 = !DISubrange(count: 38)
!1778 = distinct !DIGlobalVariable(name: "vlc_tab_fft_tone_offset_4_huffcodes", scope: !0, file: !1687, line: 176, type: !1779, isLocal: true, isDefinition: true, variable: [38 x i16]* @vlc_tab_fft_tone_offset_4_huffcodes)
!1779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1666, size: 608, align: 16, elements: !1776)
!1780 = distinct !DIGlobalVariable(name: "softclip_table", scope: !0, file: !1664, line: 41, type: !1781, isLocal: true, isDefinition: true, variable: [8117 x i16]* @softclip_table)
!1781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !928, size: 129872, align: 16, elements: !1782)
!1782 = !{!1783}
!1783 = !DISubrange(count: 8117)
!1784 = distinct !DIGlobalVariable(name: "noise_table", scope: !0, file: !1664, line: 42, type: !1785, isLocal: true, isDefinition: true, variable: [4116 x float]* @noise_table)
!1785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 131712, align: 32, elements: !1786)
!1786 = !{!1787}
!1787 = !DISubrange(count: 4116)
!1788 = distinct !DIGlobalVariable(name: "random_dequant_index", scope: !0, file: !1664, line: 43, type: !1789, isLocal: true, isDefinition: true, variable: [256 x [5 x i8]]* @random_dequant_index)
!1789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !968, size: 10240, align: 8, elements: !1790)
!1790 = !{!1791, !1753}
!1791 = !DISubrange(count: 256)
!1792 = distinct !DIGlobalVariable(name: "random_dequant_type24", scope: !0, file: !1664, line: 44, type: !1793, isLocal: true, isDefinition: true, variable: [128 x [3 x i8]]* @random_dequant_type24)
!1793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !968, size: 3072, align: 8, elements: !1794)
!1794 = !{!1795, !1796}
!1795 = !DISubrange(count: 128)
!1796 = !DISubrange(count: 3)
!1797 = distinct !DIGlobalVariable(name: "noise_samples", scope: !0, file: !1664, line: 45, type: !1798, isLocal: true, isDefinition: true, variable: [128 x float]* @noise_samples)
!1798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 4096, align: 32, elements: !1799)
!1799 = !{!1795}
!1800 = distinct !DIGlobalVariable(name: "coeff_per_sb_for_avg", scope: !0, file: !1687, line: 261, type: !1801, isLocal: true, isDefinition: true, variable: [3 x [30 x i8]]* @coeff_per_sb_for_avg)
!1801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 720, align: 8, elements: !1802)
!1802 = !{!1796, !1803}
!1803 = !DISubrange(count: 30)
!1804 = distinct !DIGlobalVariable(name: "vlc_stage3_values", scope: !0, file: !1687, line: 360, type: !1805, isLocal: true, isDefinition: true, variable: [60 x i32]* @vlc_stage3_values)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !960, size: 1920, align: 32, elements: !1806)
!1806 = !{!1807}
!1807 = !DISubrange(count: 60)
!1808 = distinct !DIGlobalVariable(name: "fft_subpackets", scope: !0, file: !1687, line: 510, type: !1763, isLocal: true, isDefinition: true, variable: [32 x i8]* @fft_subpackets)
!1809 = distinct !DIGlobalVariable(name: "coeff_per_sb_for_dequant", scope: !0, file: !1687, line: 300, type: !1801, isLocal: true, isDefinition: true, variable: [3 x [30 x i8]]* @coeff_per_sb_for_dequant)
!1810 = distinct !DIGlobalVariable(name: "last_coeff", scope: !0, file: !1687, line: 257, type: !1811, isLocal: true, isDefinition: true, variable: [3 x i8]* @last_coeff)
!1811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 24, align: 8, elements: !1812)
!1812 = !{!1796}
!1813 = distinct !DIGlobalVariable(name: "dequant_table", scope: !0, file: !1687, line: 267, type: !1814, isLocal: true, isDefinition: true, variable: [3 x [10 x [30 x i32]]]* @dequant_table)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1815, size: 28800, align: 32, elements: !1816)
!1815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!1816 = !{!1796, !1748, !1803}
!1817 = distinct !DIGlobalVariable(name: "fft_tone_level_table", scope: !0, file: !1687, line: 438, type: !1818, isLocal: true, isDefinition: true, variable: [2 x [64 x float]]* @fft_tone_level_table)
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 4096, align: 32, elements: !1820)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !910)
!1820 = !{!1673, !1821}
!1821 = !DISubrange(count: 64)
!1822 = distinct !DIGlobalVariable(name: "coding_method_table", scope: !0, file: !1687, line: 342, type: !1823, isLocal: true, isDefinition: true, variable: [5 x [30 x i8]]* @coding_method_table)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1824, size: 1200, align: 8, elements: !1825)
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1134)
!1825 = !{!1753, !1803}
!1826 = distinct !DIGlobalVariable(name: "switchtable", scope: !0, file: !934, line: 197, type: !1827, isLocal: true, isDefinition: true, variable: [23 x i32]* @switchtable)
!1827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !960, size: 736, align: 32, elements: !1756)
!1828 = distinct !DIGlobalVariable(name: "dequant_1bit", scope: !0, file: !1687, line: 516, type: !1829, isLocal: true, isDefinition: true, variable: [2 x [3 x float]]* @dequant_1bit)
!1829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 192, align: 32, elements: !1830)
!1830 = !{!1673, !1796}
!1831 = distinct !DIGlobalVariable(name: "sb_noise_attenuation", scope: !0, file: !1687, line: 503, type: !1832, isLocal: true, isDefinition: true, variable: [32 x float]* @sb_noise_attenuation)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 1024, align: 32, elements: !1764)
!1833 = distinct !DIGlobalVariable(name: "type30_dequant", scope: !0, file: !1687, line: 521, type: !1834, isLocal: true, isDefinition: true, variable: [8 x float]* @type30_dequant)
!1834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 256, align: 32, elements: !1056)
!1835 = distinct !DIGlobalVariable(name: "type34_delta", scope: !0, file: !1687, line: 526, type: !1836, isLocal: true, isDefinition: true, variable: [10 x float]* @type34_delta)
!1836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 320, align: 32, elements: !1747)
!1837 = distinct !DIGlobalVariable(name: "fft_level_index_table", scope: !0, file: !1687, line: 238, type: !1838, isLocal: true, isDefinition: true, variable: [256 x i16]* @fft_level_index_table)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1839, size: 4096, align: 16, elements: !1840)
!1839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !926)
!1840 = !{!1791}
!1841 = distinct !DIGlobalVariable(name: "fft_tone_envelope_table", scope: !0, file: !1687, line: 476, type: !1842, isLocal: true, isDefinition: true, variable: [4 x [31 x float]]* @fft_tone_envelope_table)
!1842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 3968, align: 32, elements: !1843)
!1843 = !{!1159, !1844}
!1844 = !DISubrange(count: 31)
!1845 = distinct !DIGlobalVariable(name: "fft_cutoff_index_table", scope: !0, file: !1687, line: 234, type: !1846, isLocal: true, isDefinition: true, variable: [4 x [2 x i32]]* @fft_cutoff_index_table)
!1846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !960, size: 256, align: 32, elements: !1847)
!1847 = !{!1159, !1673}
!1848 = distinct !DIGlobalVariable(name: "fft_tone_sample_table", scope: !0, file: !1687, line: 368, type: !1849, isLocal: true, isDefinition: true, variable: [4 x [16 x [5 x float]]]* @fft_tone_sample_table)
!1849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 10240, align: 32, elements: !1850)
!1850 = !{!1159, !1851, !1753}
!1851 = !DISubrange(count: 16)
!1852 = !{i32 2, !"Dwarf Version", i32 4}
!1853 = !{i32 2, !"Debug Info Version", i32 3}
!1854 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1855 = distinct !DISubprogram(name: "qdm2_decode_init", scope: !934, file: !934, line: 1606, type: !1025, isLocal: true, isDefinition: true, scopeLine: 1607, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!1856 = !DILocalVariable(name: "g", arg: 1, scope: !1857, file: !1858, line: 154, type: !1861)
!1857 = distinct !DISubprogram(name: "bytestream2_get_bytes_left", scope: !1858, file: !1858, line: 154, type: !1859, isLocal: true, isDefinition: true, scopeLine: 155, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!1858 = !DIFile(filename: "libavcodec/bytestream.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!906, !1861}
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64, align: 64)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetByteContext", file: !1858, line: 35, baseType: !1863)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetByteContext", file: !1858, line: 33, size: 192, align: 64, elements: !1864)
!1864 = !{!1865, !1866, !1867}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1863, file: !1858, line: 34, baseType: !1469, size: 64, align: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1863, file: !1858, line: 34, baseType: !1469, size: 64, align: 64, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !1863, file: !1858, line: 34, baseType: !1469, size: 64, align: 64, offset: 128)
!1868 = !DIExpression()
!1869 = !DILocation(line: 154, column: 102, scope: !1857, inlinedAt: !1870)
!1870 = distinct !DILocation(line: 1662, column: 9, scope: !1871)
!1871 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1662, column: 9)
!1872 = !DILocation(line: 154, column: 102, scope: !1857, inlinedAt: !1873)
!1873 = distinct !DILocation(line: 1664, column: 16, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1871, file: !934, line: 1662, column: 47)
!1875 = !DILocalVariable(name: "g", arg: 1, scope: !1876, file: !1858, line: 164, type: !1861)
!1876 = distinct !DISubprogram(name: "bytestream2_skip", scope: !1858, file: !1858, line: 164, type: !1877, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{null, !1861, !906}
!1879 = !DILocation(line: 164, column: 84, scope: !1876, inlinedAt: !1880)
!1880 = distinct !DILocation(line: 1668, column: 5, scope: !1855)
!1881 = !DILocalVariable(name: "size", arg: 2, scope: !1876, file: !1858, line: 165, type: !906)
!1882 = !DILocation(line: 165, column: 60, scope: !1876, inlinedAt: !1880)
!1883 = !DILocalVariable(name: "x", arg: 1, scope: !1884, file: !1885, line: 66, type: !924)
!1884 = distinct !DISubprogram(name: "av_bswap32", scope: !1885, file: !1885, line: 66, type: !1886, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!1885 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!924, !924}
!1888 = !DILocation(line: 66, column: 98, scope: !1884, inlinedAt: !1889)
!1889 = distinct !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1894)
!1890 = distinct !DISubprogram(name: "bytestream_get_be32", scope: !1858, file: !1858, line: 92, type: !1891, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!906, !1893}
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64, align: 64)
!1894 = distinct !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1896)
!1895 = distinct !DISubprogram(name: "bytestream2_get_be32u", scope: !1858, file: !1858, line: 92, type: !1859, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!1896 = distinct !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1899)
!1897 = !DILexicalBlockFile(scope: !1898, file: !1858, discriminator: 2)
!1898 = distinct !DISubprogram(name: "bytestream2_get_be32", scope: !1858, file: !1858, line: 92, type: !1859, isLocal: true, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!1899 = distinct !DILocation(line: 1669, column: 12, scope: !1855)
!1900 = !DILocalVariable(name: "b", arg: 1, scope: !1890, file: !1858, line: 92, type: !1893)
!1901 = !DILocation(line: 92, column: 95, scope: !1890, inlinedAt: !1894)
!1902 = !DILocalVariable(name: "g", arg: 1, scope: !1895, file: !1858, line: 92, type: !1861)
!1903 = !DILocation(line: 92, column: 892, scope: !1895, inlinedAt: !1896)
!1904 = !DILocalVariable(name: "g", arg: 1, scope: !1898, file: !1858, line: 92, type: !1861)
!1905 = !DILocation(line: 92, column: 1034, scope: !1898, inlinedAt: !1899)
!1906 = !DILocation(line: 154, column: 102, scope: !1857, inlinedAt: !1907)
!1907 = distinct !DILocation(line: 1671, column: 16, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1671, column: 9)
!1909 = !DILocation(line: 154, column: 102, scope: !1857, inlinedAt: !1910)
!1910 = distinct !DILocation(line: 1673, column: 16, scope: !1911)
!1911 = distinct !DILexicalBlock(scope: !1908, file: !934, line: 1671, column: 49)
!1912 = !DILocation(line: 66, column: 98, scope: !1884, inlinedAt: !1913)
!1913 = distinct !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1914)
!1914 = distinct !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1915)
!1915 = distinct !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1916)
!1916 = distinct !DILocation(line: 1678, column: 9, scope: !1917)
!1917 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1678, column: 9)
!1918 = !DILocation(line: 92, column: 95, scope: !1890, inlinedAt: !1914)
!1919 = !DILocation(line: 92, column: 892, scope: !1895, inlinedAt: !1915)
!1920 = !DILocation(line: 92, column: 1034, scope: !1898, inlinedAt: !1916)
!1921 = !DILocation(line: 164, column: 84, scope: !1876, inlinedAt: !1922)
!1922 = distinct !DILocation(line: 1683, column: 5, scope: !1855)
!1923 = !DILocation(line: 165, column: 60, scope: !1876, inlinedAt: !1922)
!1924 = !DILocation(line: 66, column: 98, scope: !1884, inlinedAt: !1925)
!1925 = distinct !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1926)
!1926 = distinct !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1927)
!1927 = distinct !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1928)
!1928 = distinct !DILocation(line: 1685, column: 54, scope: !1855)
!1929 = !DILocation(line: 92, column: 95, scope: !1890, inlinedAt: !1926)
!1930 = !DILocation(line: 92, column: 892, scope: !1895, inlinedAt: !1927)
!1931 = !DILocation(line: 92, column: 1034, scope: !1898, inlinedAt: !1928)
!1932 = !DILocation(line: 66, column: 98, scope: !1884, inlinedAt: !1933)
!1933 = distinct !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1934)
!1934 = distinct !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1935)
!1935 = distinct !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1936)
!1936 = distinct !DILocation(line: 1693, column: 26, scope: !1855)
!1937 = !DILocation(line: 92, column: 95, scope: !1890, inlinedAt: !1934)
!1938 = !DILocation(line: 92, column: 892, scope: !1895, inlinedAt: !1935)
!1939 = !DILocation(line: 92, column: 1034, scope: !1898, inlinedAt: !1936)
!1940 = !DILocation(line: 66, column: 98, scope: !1884, inlinedAt: !1941)
!1941 = distinct !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1942)
!1942 = distinct !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1943)
!1943 = distinct !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1944)
!1944 = distinct !DILocation(line: 1694, column: 23, scope: !1855)
!1945 = !DILocation(line: 92, column: 95, scope: !1890, inlinedAt: !1942)
!1946 = !DILocation(line: 92, column: 892, scope: !1895, inlinedAt: !1943)
!1947 = !DILocation(line: 92, column: 1034, scope: !1898, inlinedAt: !1944)
!1948 = !DILocation(line: 66, column: 98, scope: !1884, inlinedAt: !1949)
!1949 = distinct !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1950)
!1950 = distinct !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1951)
!1951 = distinct !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1952)
!1952 = distinct !DILocation(line: 1695, column: 21, scope: !1855)
!1953 = !DILocation(line: 92, column: 95, scope: !1890, inlinedAt: !1950)
!1954 = !DILocation(line: 92, column: 892, scope: !1895, inlinedAt: !1951)
!1955 = !DILocation(line: 92, column: 1034, scope: !1898, inlinedAt: !1952)
!1956 = !DILocation(line: 66, column: 98, scope: !1884, inlinedAt: !1957)
!1957 = distinct !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1958)
!1958 = distinct !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1959)
!1959 = distinct !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1960)
!1960 = distinct !DILocation(line: 1696, column: 19, scope: !1855)
!1961 = !DILocation(line: 92, column: 95, scope: !1890, inlinedAt: !1958)
!1962 = !DILocation(line: 92, column: 892, scope: !1895, inlinedAt: !1959)
!1963 = !DILocation(line: 92, column: 1034, scope: !1898, inlinedAt: !1960)
!1964 = !DILocation(line: 66, column: 98, scope: !1884, inlinedAt: !1965)
!1965 = distinct !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1966)
!1966 = distinct !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1967)
!1967 = distinct !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1968)
!1968 = distinct !DILocation(line: 1697, column: 24, scope: !1855)
!1969 = !DILocation(line: 92, column: 95, scope: !1890, inlinedAt: !1966)
!1970 = !DILocation(line: 92, column: 892, scope: !1895, inlinedAt: !1967)
!1971 = !DILocation(line: 92, column: 1034, scope: !1898, inlinedAt: !1968)
!1972 = !DILocation(line: 164, column: 84, scope: !1876, inlinedAt: !1973)
!1973 = distinct !DILocation(line: 1659, column: 9, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1655, column: 49)
!1975 = !DILocation(line: 165, column: 60, scope: !1876, inlinedAt: !1973)
!1976 = !DILocalVariable(name: "g", arg: 1, scope: !1977, file: !1858, line: 91, type: !1861)
!1977 = distinct !DISubprogram(name: "bytestream2_peek_be64", scope: !1858, file: !1858, line: 91, type: !1978, isLocal: true, isDefinition: true, scopeLine: 91, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{!907, !1861}
!1980 = !DILocation(line: 91, column: 1218, scope: !1977, inlinedAt: !1981)
!1981 = distinct !DILocation(line: 1656, column: 13, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1974, file: !934, line: 1656, column: 13)
!1983 = !DILocation(line: 154, column: 102, scope: !1857, inlinedAt: !1984)
!1984 = distinct !DILocation(line: 1655, column: 12, scope: !1985)
!1985 = !DILexicalBlockFile(scope: !1855, file: !934, discriminator: 1)
!1986 = !DILocalVariable(name: "g", arg: 1, scope: !1987, file: !1858, line: 133, type: !1861)
!1987 = distinct !DISubprogram(name: "bytestream2_init", scope: !1858, file: !1858, line: 133, type: !1988, isLocal: true, isDefinition: true, scopeLine: 136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!1988 = !DISubroutineType(types: !1989)
!1989 = !{null, !1861, !1469, !905}
!1990 = !DILocation(line: 133, column: 84, scope: !1987, inlinedAt: !1991)
!1991 = distinct !DILocation(line: 1653, column: 5, scope: !1855)
!1992 = !DILocalVariable(name: "buf", arg: 2, scope: !1987, file: !1858, line: 134, type: !1469)
!1993 = !DILocation(line: 134, column: 62, scope: !1987, inlinedAt: !1991)
!1994 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1987, file: !1858, line: 135, type: !905)
!1995 = !DILocation(line: 135, column: 51, scope: !1987, inlinedAt: !1991)
!1996 = !DILocalVariable(name: "avctx", arg: 1, scope: !1855, file: !934, line: 1606, type: !1027)
!1997 = !DILocation(line: 1606, column: 67, scope: !1855)
!1998 = !DILocalVariable(name: "s", scope: !1855, file: !934, line: 1608, type: !1999)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64, align: 64)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "QDM2Context", file: !934, line: 195, baseType: !2001)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QDM2Context", file: !934, line: 128, size: 1140480, align: 256, elements: !2002)
!2002 = !{!2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2024, !2033, !2034, !2035, !2036, !2037, !2059, !2060, !2061, !2071, !2072, !2074, !2075, !2077, !2135, !2142, !2143, !2144, !2148, !2180, !2184, !2186, !2189, !2193, !2196, !2198, !2201, !2204, !2207, !2211, !2214, !2215, !2216, !2217, !2218, !2219, !2220}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channels", scope: !2001, file: !934, line: 130, baseType: !905, size: 32, align: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2001, file: !934, line: 131, baseType: !905, size: 32, align: 32, offset: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "group_size", scope: !2001, file: !934, line: 132, baseType: !905, size: 32, align: 32, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "fft_size", scope: !2001, file: !934, line: 133, baseType: !905, size: 32, align: 32, offset: 96)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_size", scope: !2001, file: !934, line: 134, baseType: !905, size: 32, align: 32, offset: 128)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "group_order", scope: !2001, file: !934, line: 137, baseType: !905, size: 32, align: 32, offset: 160)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "fft_order", scope: !2001, file: !934, line: 138, baseType: !905, size: 32, align: 32, offset: 192)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !2001, file: !934, line: 139, baseType: !905, size: 32, align: 32, offset: 224)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_range", scope: !2001, file: !934, line: 140, baseType: !905, size: 32, align: 32, offset: 256)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "sub_sampling", scope: !2001, file: !934, line: 141, baseType: !905, size: 32, align: 32, offset: 288)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "coeff_per_sb_select", scope: !2001, file: !934, line: 142, baseType: !905, size: 32, align: 32, offset: 320)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "cm_table_select", scope: !2001, file: !934, line: 143, baseType: !905, size: 32, align: 32, offset: 352)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "sub_packets", scope: !2001, file: !934, line: 146, baseType: !2016, size: 2048, align: 64, offset: 384)
!2016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2017, size: 2048, align: 64, elements: !2023)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "QDM2SubPacket", file: !934, line: 87, baseType: !2018)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QDM2SubPacket", file: !934, line: 83, size: 128, align: 64, elements: !2019)
!2019 = !{!2020, !2021, !2022}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2018, file: !934, line: 84, baseType: !905, size: 32, align: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2018, file: !934, line: 85, baseType: !906, size: 32, align: 32, offset: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2018, file: !934, line: 86, baseType: !1469, size: 64, align: 64, offset: 64)
!2023 = !{!1851}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "sub_packet_list_A", scope: !2001, file: !934, line: 147, baseType: !2025, size: 2048, align: 64, offset: 2432)
!2025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2026, size: 2048, align: 64, elements: !2023)
!2026 = !DIDerivedType(tag: DW_TAG_typedef, name: "QDM2SubPNode", file: !934, line: 95, baseType: !2027)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QDM2SubPNode", file: !934, line: 92, size: 128, align: 64, elements: !2028)
!2028 = !{!2029, !2031}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2027, file: !934, line: 93, baseType: !2030, size: 64, align: 64)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64, align: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2027, file: !934, line: 94, baseType: !2032, size: 64, align: 64, offset: 64)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64, align: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "sub_packet_list_B", scope: !2001, file: !934, line: 148, baseType: !2025, size: 2048, align: 64, offset: 4480)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "sub_packets_B", scope: !2001, file: !934, line: 149, baseType: !905, size: 32, align: 32, offset: 6528)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "sub_packet_list_C", scope: !2001, file: !934, line: 150, baseType: !2025, size: 2048, align: 64, offset: 6592)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "sub_packet_list_D", scope: !2001, file: !934, line: 151, baseType: !2025, size: 2048, align: 64, offset: 8640)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "fft_tones", scope: !2001, file: !934, line: 154, baseType: !2038, size: 320000, align: 64, offset: 10688)
!2038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2039, size: 320000, align: 64, elements: !2057)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTTone", file: !934, line: 111, baseType: !2040)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTTone", file: !934, line: 102, size: 320, align: 64, elements: !2041)
!2041 = !{!2042, !2043, !2050, !2052, !2053, !2054, !2055, !2056}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2040, file: !934, line: 103, baseType: !910, size: 32, align: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !2040, file: !934, line: 104, baseType: !2044, size: 64, align: 64, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64, align: 64)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "QDM2Complex", file: !934, line: 100, baseType: !2046)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QDM2Complex", file: !934, line: 97, size: 64, align: 32, elements: !2047)
!2047 = !{!2048, !2049}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !2046, file: !934, line: 98, baseType: !910, size: 32, align: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !2046, file: !934, line: 99, baseType: !910, size: 32, align: 32, offset: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2040, file: !934, line: 105, baseType: !2051, size: 64, align: 64, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64, align: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !2040, file: !934, line: 106, baseType: !905, size: 32, align: 32, offset: 192)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "phase_shift", scope: !2040, file: !934, line: 107, baseType: !905, size: 32, align: 32, offset: 224)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2040, file: !934, line: 108, baseType: !905, size: 32, align: 32, offset: 256)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "time_index", scope: !2040, file: !934, line: 109, baseType: !927, size: 16, align: 16, offset: 288)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !2040, file: !934, line: 110, baseType: !927, size: 16, align: 16, offset: 304)
!2057 = !{!2058}
!2058 = !DISubrange(count: 1000)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "fft_tone_start", scope: !2001, file: !934, line: 155, baseType: !905, size: 32, align: 32, offset: 330688)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "fft_tone_end", scope: !2001, file: !934, line: 156, baseType: !905, size: 32, align: 32, offset: 330720)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "fft_coefs", scope: !2001, file: !934, line: 157, baseType: !2062, size: 80000, align: 16, offset: 330752)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2063, size: 80000, align: 16, elements: !2057)
!2063 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTCoefficient", file: !934, line: 119, baseType: !2064)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTCoefficient", file: !934, line: 113, size: 80, align: 16, elements: !2065)
!2065 = !{!2066, !2067, !2068, !2069, !2070}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "sub_packet", scope: !2064, file: !934, line: 114, baseType: !926, size: 16, align: 16)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !2064, file: !934, line: 115, baseType: !968, size: 8, align: 8, offset: 16)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2064, file: !934, line: 116, baseType: !926, size: 16, align: 16, offset: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2064, file: !934, line: 117, baseType: !926, size: 16, align: 16, offset: 48)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !2064, file: !934, line: 118, baseType: !968, size: 8, align: 8, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "fft_coefs_index", scope: !2001, file: !934, line: 158, baseType: !905, size: 32, align: 32, offset: 410752)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "fft_coefs_min_index", scope: !2001, file: !934, line: 159, baseType: !2073, size: 160, align: 32, offset: 410784)
!2073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 160, align: 32, elements: !1752)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "fft_coefs_max_index", scope: !2001, file: !934, line: 160, baseType: !2073, size: 160, align: 32, offset: 410944)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "fft_level_exp", scope: !2001, file: !934, line: 161, baseType: !2076, size: 192, align: 32, offset: 411104)
!2076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 192, align: 32, elements: !1703)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "rdft_ctx", scope: !2001, file: !934, line: 162, baseType: !2078, size: 1280, align: 64, offset: 411328)
!2078 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDFTContext", file: !898, line: 78, baseType: !2079)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RDFTContext", file: !2080, line: 28, size: 1280, align: 64, elements: !2081)
!2080 = !DIFile(filename: "libavcodec/rdft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2081 = !{!2082, !2083, !2084, !2085, !2088, !2089, !2090, !2130}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !2079, file: !2080, line: 29, baseType: !905, size: 32, align: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !2079, file: !2080, line: 30, baseType: !905, size: 32, align: 32, offset: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "sign_convention", scope: !2079, file: !2080, line: 31, baseType: !905, size: 32, align: 32, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !2079, file: !2080, line: 34, baseType: !2086, size: 64, align: 64, offset: 128)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64, align: 64)
!2087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !931)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !2079, file: !2080, line: 35, baseType: !2086, size: 64, align: 64, offset: 192)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "negative_sin", scope: !2079, file: !2080, line: 36, baseType: !905, size: 32, align: 32, offset: 256)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "fft", scope: !2079, file: !2080, line: 37, baseType: !2091, size: 896, align: 64, offset: 320)
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !898, line: 41, baseType: !2092)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !888, line: 88, size: 896, align: 64, elements: !2093)
!2093 = !{!2094, !2095, !2096, !2097, !2104, !2105, !2106, !2107, !2108, !2113, !2114, !2118, !2119, !2120, !2126, !2127, !2128}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !2092, file: !888, line: 89, baseType: !905, size: 32, align: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !2092, file: !888, line: 90, baseType: !905, size: 32, align: 32, offset: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !2092, file: !888, line: 91, baseType: !1357, size: 64, align: 64, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !2092, file: !888, line: 92, baseType: !2098, size: 64, align: 64, offset: 128)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64, align: 64)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !898, line: 39, baseType: !2100)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !898, line: 37, size: 64, align: 32, elements: !2101)
!2101 = !{!2102, !2103}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !2100, file: !898, line: 38, baseType: !931, size: 32, align: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !2100, file: !898, line: 38, baseType: !931, size: 32, align: 32, offset: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !2092, file: !888, line: 93, baseType: !905, size: 32, align: 32, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !2092, file: !888, line: 94, baseType: !905, size: 32, align: 32, offset: 224)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !2092, file: !888, line: 96, baseType: !930, size: 64, align: 64, offset: 256)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !2092, file: !888, line: 97, baseType: !930, size: 64, align: 64, offset: 320)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !2092, file: !888, line: 101, baseType: !2109, size: 64, align: 64, offset: 384)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64, align: 64)
!2110 = !DISubroutineType(types: !2111)
!2111 = !{null, !2112, !2098}
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64, align: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !2092, file: !888, line: 106, baseType: !2109, size: 64, align: 64, offset: 448)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !2092, file: !888, line: 107, baseType: !2115, size: 64, align: 64, offset: 512)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64, align: 64)
!2116 = !DISubroutineType(types: !2117)
!2117 = !{null, !2112, !930, !2086}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !2092, file: !888, line: 108, baseType: !2115, size: 64, align: 64, offset: 576)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !2092, file: !888, line: 109, baseType: !2115, size: 64, align: 64, offset: 640)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !2092, file: !888, line: 110, baseType: !2121, size: 64, align: 64, offset: 704)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64, align: 64)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{null, !2112, !2124, !2086}
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64, align: 64)
!2125 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !888, line: 43, baseType: !910)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !2092, file: !888, line: 111, baseType: !887, size: 32, align: 32, offset: 768)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !2092, file: !888, line: 112, baseType: !893, size: 32, align: 32, offset: 800)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !2092, file: !888, line: 113, baseType: !2129, size: 64, align: 64, offset: 832)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64, align: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "rdft_calc", scope: !2079, file: !2080, line: 38, baseType: !2131, size: 64, align: 64, offset: 1216)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64, align: 64)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{null, !2134, !930}
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64, align: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "fft", scope: !2001, file: !934, line: 163, baseType: !2136, size: 32768, align: 256, offset: 412672)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "QDM2FFT", file: !934, line: 123, baseType: !2137)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QDM2FFT", file: !934, line: 121, size: 32768, align: 256, elements: !2138)
!2138 = !{!2139}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !2137, file: !934, line: 122, baseType: !2140, size: 32768, align: 32)
!2140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2045, size: 32768, align: 32, elements: !2141)
!2141 = !{!1673, !1791}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "compressed_data", scope: !2001, file: !934, line: 166, baseType: !1469, size: 64, align: 64, offset: 445440)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "compressed_size", scope: !2001, file: !934, line: 167, baseType: !905, size: 32, align: 32, offset: 445504)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "output_buffer", scope: !2001, file: !934, line: 168, baseType: !2145, size: 65536, align: 32, offset: 445536)
!2145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 65536, align: 32, elements: !2146)
!2146 = !{!2147}
!2147 = !DISubrange(count: 2048)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "mpadsp", scope: !2001, file: !934, line: 171, baseType: !2149, size: 384, align: 64, offset: 511104)
!2149 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPADSPContext", file: !2150, line: 41, baseType: !2151)
!2150 = !DIFile(filename: "libavcodec/mpegaudiodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPADSPContext", file: !2150, line: 27, size: 384, align: 64, elements: !2152)
!2152 = !{!2153, !2159, !2164, !2168, !2172, !2176}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "apply_window_float", scope: !2151, file: !2150, line: 28, baseType: !2154, size: 64, align: 64)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64, align: 64)
!2155 = !DISubroutineType(types: !2156)
!2156 = !{null, !2157, !2157, !1321, !2157, !2158}
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64, align: 64)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1143, line: 149, baseType: !1071)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "apply_window_fixed", scope: !2151, file: !2150, line: 31, baseType: !2160, size: 64, align: 64, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64, align: 64)
!2161 = !DISubroutineType(types: !2162)
!2162 = !{null, !2163, !2163, !1321, !925, !2158}
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64, align: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "dct32_float", scope: !2151, file: !2150, line: 34, baseType: !2165, size: 64, align: 64, offset: 128)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64, align: 64)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{null, !2157, !2051}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "dct32_fixed", scope: !2151, file: !2150, line: 35, baseType: !2169, size: 64, align: 64, offset: 192)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64, align: 64)
!2170 = !DISubroutineType(types: !2171)
!2171 = !{null, !1321, !959}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "imdct36_blocks_float", scope: !2151, file: !2150, line: 37, baseType: !2173, size: 64, align: 64, offset: 256)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64, align: 64)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{null, !2157, !2157, !2157, !905, !905, !905}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "imdct36_blocks_fixed", scope: !2151, file: !2150, line: 39, baseType: !2177, size: 64, align: 64, offset: 320)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64, align: 64)
!2178 = !DISubroutineType(types: !2179)
!2179 = !{null, !1321, !1321, !1321, !905, !905, !905}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "synth_buf", scope: !2001, file: !934, line: 172, baseType: !2181, size: 65536, align: 32, offset: 511488)
!2181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 65536, align: 32, elements: !2182)
!2182 = !{!1673, !2183}
!2183 = !DISubrange(count: 1024)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "synth_buf_offset", scope: !2001, file: !934, line: 173, baseType: !2185, size: 64, align: 32, offset: 577024)
!2185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 64, align: 32, elements: !1683)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "sb_samples", scope: !2001, file: !934, line: 174, baseType: !2187, size: 262144, align: 32, offset: 577280)
!2187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 262144, align: 32, elements: !2188)
!2188 = !{!1673, !1795, !1765}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !2001, file: !934, line: 175, baseType: !2190, size: 73728, align: 32, offset: 839424)
!2190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 73728, align: 32, elements: !2191)
!2191 = !{!2192}
!2192 = !DISubrange(count: 2304)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "tone_level", scope: !2001, file: !934, line: 178, baseType: !2194, size: 122880, align: 32, offset: 913152)
!2194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 122880, align: 32, elements: !2195)
!2195 = !{!1673, !1803, !1821}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "coding_method", scope: !2001, file: !934, line: 179, baseType: !2197, size: 30720, align: 8, offset: 1036032)
!2197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 30720, align: 8, elements: !2195)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "quantized_coeffs", scope: !2001, file: !934, line: 180, baseType: !2199, size: 1280, align: 8, offset: 1066752)
!2199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 1280, align: 8, elements: !2200)
!2200 = !{!1673, !1748, !1057}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "tone_level_idx_base", scope: !2001, file: !934, line: 181, baseType: !2202, size: 3840, align: 8, offset: 1068032)
!2202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 3840, align: 8, elements: !2203)
!2203 = !{!1673, !1803, !1057}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "tone_level_idx_hi1", scope: !2001, file: !934, line: 182, baseType: !2205, size: 3072, align: 8, offset: 1071872)
!2205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 3072, align: 8, elements: !2206)
!2206 = !{!1673, !1796, !1057, !1057}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "tone_level_idx_mid", scope: !2001, file: !934, line: 183, baseType: !2208, size: 3328, align: 8, offset: 1074944)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 3328, align: 8, elements: !2209)
!2209 = !{!1673, !2210, !1057}
!2210 = !DISubrange(count: 26)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "tone_level_idx_hi2", scope: !2001, file: !934, line: 184, baseType: !2212, size: 416, align: 8, offset: 1078272)
!2212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 416, align: 8, elements: !2213)
!2213 = !{!1673, !2210}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "tone_level_idx", scope: !2001, file: !934, line: 185, baseType: !2197, size: 30720, align: 8, offset: 1078688)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "tone_level_idx_temp", scope: !2001, file: !934, line: 186, baseType: !2197, size: 30720, align: 8, offset: 1109408)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "has_errors", scope: !2001, file: !934, line: 189, baseType: !905, size: 32, align: 32, offset: 1140128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "superblocktype_2_3", scope: !2001, file: !934, line: 190, baseType: !905, size: 32, align: 32, offset: 1140160)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "do_synth_filter", scope: !2001, file: !934, line: 191, baseType: !905, size: 32, align: 32, offset: 1140192)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "sub_packet", scope: !2001, file: !934, line: 193, baseType: !905, size: 32, align: 32, offset: 1140224)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "noise_idx", scope: !2001, file: !934, line: 194, baseType: !905, size: 32, align: 32, offset: 1140256)
!2221 = !DILocation(line: 1608, column: 18, scope: !1855)
!2222 = !DILocation(line: 1608, column: 22, scope: !1855)
!2223 = !DILocation(line: 1608, column: 29, scope: !1855)
!2224 = !DILocalVariable(name: "tmp_val", scope: !1855, file: !934, line: 1609, type: !905)
!2225 = !DILocation(line: 1609, column: 9, scope: !1855)
!2226 = !DILocalVariable(name: "tmp", scope: !1855, file: !934, line: 1609, type: !905)
!2227 = !DILocation(line: 1609, column: 18, scope: !1855)
!2228 = !DILocalVariable(name: "size", scope: !1855, file: !934, line: 1609, type: !905)
!2229 = !DILocation(line: 1609, column: 23, scope: !1855)
!2230 = !DILocalVariable(name: "gb", scope: !1855, file: !934, line: 1610, type: !1862)
!2231 = !DILocation(line: 1610, column: 20, scope: !1855)
!2232 = !DILocation(line: 1612, column: 5, scope: !1855)
!2233 = !DILocation(line: 1648, column: 10, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1648, column: 9)
!2235 = !DILocation(line: 1648, column: 17, scope: !2234)
!2236 = !DILocation(line: 1648, column: 27, scope: !2234)
!2237 = !DILocation(line: 1648, column: 31, scope: !2238)
!2238 = !DILexicalBlockFile(scope: !2234, file: !934, discriminator: 1)
!2239 = !DILocation(line: 1648, column: 38, scope: !2238)
!2240 = !DILocation(line: 1648, column: 53, scope: !2238)
!2241 = !DILocation(line: 1648, column: 9, scope: !2238)
!2242 = !DILocation(line: 1649, column: 16, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2234, file: !934, line: 1648, column: 60)
!2244 = !DILocation(line: 1649, column: 9, scope: !2243)
!2245 = !DILocation(line: 1650, column: 9, scope: !2243)
!2246 = !DILocation(line: 1653, column: 27, scope: !1855)
!2247 = !DILocation(line: 1653, column: 34, scope: !1855)
!2248 = !DILocation(line: 1653, column: 45, scope: !1855)
!2249 = !DILocation(line: 1653, column: 52, scope: !1855)
!2250 = !DILocation(line: 1653, column: 5, scope: !1855)
!2251 = !DILocation(line: 137, column: 16, scope: !2252, inlinedAt: !1991)
!2252 = !DILexicalBlockFile(scope: !2253, file: !1858, discriminator: 1)
!2253 = distinct !DILexicalBlock(scope: !2254, file: !1858, line: 137, column: 14)
!2254 = distinct !DILexicalBlock(scope: !1987, file: !1858, line: 137, column: 8)
!2255 = !DILocation(line: 137, column: 25, scope: !2252, inlinedAt: !1991)
!2256 = !DILocation(line: 137, column: 14, scope: !2252, inlinedAt: !1991)
!2257 = !DILocation(line: 137, column: 34, scope: !2258, inlinedAt: !1991)
!2258 = !DILexicalBlockFile(scope: !2259, file: !1858, discriminator: 2)
!2259 = distinct !DILexicalBlock(scope: !2253, file: !1858, line: 137, column: 32)
!2260 = !DILocation(line: 137, column: 93, scope: !2261, inlinedAt: !1991)
!2261 = !DILexicalBlockFile(scope: !2258, file: !1858, discriminator: 4)
!2262 = !DILocation(line: 137, column: 93, scope: !2258, inlinedAt: !1991)
!2263 = !DILocation(line: 138, column: 17, scope: !1987, inlinedAt: !1991)
!2264 = !DILocation(line: 138, column: 5, scope: !1987, inlinedAt: !1991)
!2265 = !DILocation(line: 138, column: 8, scope: !1987, inlinedAt: !1991)
!2266 = !DILocation(line: 138, column: 15, scope: !1987, inlinedAt: !1991)
!2267 = !DILocation(line: 139, column: 23, scope: !1987, inlinedAt: !1991)
!2268 = !DILocation(line: 139, column: 5, scope: !1987, inlinedAt: !1991)
!2269 = !DILocation(line: 139, column: 8, scope: !1987, inlinedAt: !1991)
!2270 = !DILocation(line: 139, column: 21, scope: !1987, inlinedAt: !1991)
!2271 = !DILocation(line: 140, column: 21, scope: !1987, inlinedAt: !1991)
!2272 = !DILocation(line: 140, column: 27, scope: !1987, inlinedAt: !1991)
!2273 = !DILocation(line: 140, column: 25, scope: !1987, inlinedAt: !1991)
!2274 = !DILocation(line: 140, column: 5, scope: !1987, inlinedAt: !1991)
!2275 = !DILocation(line: 140, column: 8, scope: !1987, inlinedAt: !1991)
!2276 = !DILocation(line: 140, column: 19, scope: !1987, inlinedAt: !1991)
!2277 = !DILocation(line: 1655, column: 5, scope: !1855)
!2278 = !DILocation(line: 1655, column: 12, scope: !1985)
!2279 = !DILocation(line: 156, column: 12, scope: !1857, inlinedAt: !1984)
!2280 = !DILocation(line: 156, column: 15, scope: !1857, inlinedAt: !1984)
!2281 = !DILocation(line: 156, column: 28, scope: !1857, inlinedAt: !1984)
!2282 = !DILocation(line: 156, column: 31, scope: !1857, inlinedAt: !1984)
!2283 = !DILocation(line: 156, column: 26, scope: !1857, inlinedAt: !1984)
!2284 = !DILocation(line: 1655, column: 44, scope: !1985)
!2285 = !DILocation(line: 1655, column: 5, scope: !1985)
!2286 = !DILocation(line: 1656, column: 13, scope: !1982)
!2287 = !DILocation(line: 91, column: 1227, scope: !2288, inlinedAt: !1981)
!2288 = distinct !DILexicalBlock(scope: !1977, file: !1858, line: 91, column: 1227)
!2289 = !DILocation(line: 91, column: 1230, scope: !2288, inlinedAt: !1981)
!2290 = !DILocation(line: 91, column: 1243, scope: !2288, inlinedAt: !1981)
!2291 = !DILocation(line: 91, column: 1246, scope: !2288, inlinedAt: !1981)
!2292 = !DILocation(line: 91, column: 1241, scope: !2288, inlinedAt: !1981)
!2293 = !DILocation(line: 91, column: 1253, scope: !2288, inlinedAt: !1981)
!2294 = !DILocation(line: 91, column: 1227, scope: !1977, inlinedAt: !1981)
!2295 = !DILocation(line: 91, column: 1258, scope: !2296, inlinedAt: !1981)
!2296 = !DILexicalBlockFile(scope: !2288, file: !1858, discriminator: 1)
!2297 = !DILocation(line: 91, column: 1318, scope: !2298, inlinedAt: !1981)
!2298 = !DILexicalBlockFile(scope: !1977, file: !1858, discriminator: 2)
!2299 = !DILocation(line: 91, column: 1321, scope: !2298, inlinedAt: !1981)
!2300 = !DILocation(line: 91, column: 1331, scope: !2298, inlinedAt: !1981)
!2301 = !DILocation(line: 91, column: 1275, scope: !2298, inlinedAt: !1981)
!2302 = !DILocation(line: 91, column: 1268, scope: !2298, inlinedAt: !1981)
!2303 = !DILocation(line: 91, column: 1336, scope: !2304, inlinedAt: !1981)
!2304 = !DILexicalBlockFile(scope: !1977, file: !1858, discriminator: 3)
!2305 = !DILocation(line: 1656, column: 40, scope: !1982)
!2306 = !DILocation(line: 1656, column: 13, scope: !1974)
!2307 = !DILocation(line: 1658, column: 13, scope: !1982)
!2308 = !DILocation(line: 1659, column: 9, scope: !1974)
!2309 = !DILocation(line: 167, column: 20, scope: !1876, inlinedAt: !1973)
!2310 = !DILocation(line: 167, column: 23, scope: !1876, inlinedAt: !1973)
!2311 = !DILocation(line: 167, column: 36, scope: !1876, inlinedAt: !1973)
!2312 = !DILocation(line: 167, column: 39, scope: !1876, inlinedAt: !1973)
!2313 = !DILocation(line: 167, column: 34, scope: !1876, inlinedAt: !1973)
!2314 = !DILocation(line: 167, column: 50, scope: !1876, inlinedAt: !1973)
!2315 = !DILocation(line: 167, column: 49, scope: !1876, inlinedAt: !1973)
!2316 = !DILocation(line: 167, column: 47, scope: !1876, inlinedAt: !1973)
!2317 = !DILocation(line: 167, column: 19, scope: !1876, inlinedAt: !1973)
!2318 = !DILocation(line: 167, column: 59, scope: !2319, inlinedAt: !1973)
!2319 = !DILexicalBlockFile(scope: !1876, file: !1858, discriminator: 1)
!2320 = !DILocation(line: 167, column: 58, scope: !2319, inlinedAt: !1973)
!2321 = !DILocation(line: 167, column: 19, scope: !2319, inlinedAt: !1973)
!2322 = !DILocation(line: 167, column: 68, scope: !2323, inlinedAt: !1973)
!2323 = !DILexicalBlockFile(scope: !1876, file: !1858, discriminator: 2)
!2324 = !DILocation(line: 167, column: 71, scope: !2323, inlinedAt: !1973)
!2325 = !DILocation(line: 167, column: 84, scope: !2323, inlinedAt: !1973)
!2326 = !DILocation(line: 167, column: 87, scope: !2323, inlinedAt: !1973)
!2327 = !DILocation(line: 167, column: 82, scope: !2323, inlinedAt: !1973)
!2328 = !DILocation(line: 167, column: 19, scope: !2323, inlinedAt: !1973)
!2329 = !DILocation(line: 167, column: 19, scope: !2330, inlinedAt: !1973)
!2330 = !DILexicalBlockFile(scope: !1876, file: !1858, discriminator: 3)
!2331 = !DILocation(line: 167, column: 5, scope: !2330, inlinedAt: !1973)
!2332 = !DILocation(line: 167, column: 8, scope: !2330, inlinedAt: !1973)
!2333 = !DILocation(line: 167, column: 15, scope: !2330, inlinedAt: !1973)
!2334 = !DILocation(line: 1655, column: 5, scope: !2335)
!2335 = !DILexicalBlockFile(scope: !1855, file: !934, discriminator: 2)
!2336 = distinct !{!2336, !2277}
!2337 = !DILocation(line: 1662, column: 9, scope: !1871)
!2338 = !DILocation(line: 156, column: 12, scope: !1857, inlinedAt: !1870)
!2339 = !DILocation(line: 156, column: 15, scope: !1857, inlinedAt: !1870)
!2340 = !DILocation(line: 156, column: 28, scope: !1857, inlinedAt: !1870)
!2341 = !DILocation(line: 156, column: 31, scope: !1857, inlinedAt: !1870)
!2342 = !DILocation(line: 156, column: 26, scope: !1857, inlinedAt: !1870)
!2343 = !DILocation(line: 1662, column: 41, scope: !1871)
!2344 = !DILocation(line: 1662, column: 9, scope: !1855)
!2345 = !DILocation(line: 1663, column: 16, scope: !1874)
!2346 = !DILocation(line: 1664, column: 16, scope: !1874)
!2347 = !DILocation(line: 156, column: 12, scope: !1857, inlinedAt: !1873)
!2348 = !DILocation(line: 156, column: 15, scope: !1857, inlinedAt: !1873)
!2349 = !DILocation(line: 156, column: 28, scope: !1857, inlinedAt: !1873)
!2350 = !DILocation(line: 156, column: 31, scope: !1857, inlinedAt: !1873)
!2351 = !DILocation(line: 156, column: 26, scope: !1857, inlinedAt: !1873)
!2352 = !DILocation(line: 1663, column: 9, scope: !1874)
!2353 = !DILocation(line: 1665, column: 9, scope: !1874)
!2354 = !DILocation(line: 1668, column: 5, scope: !1855)
!2355 = !DILocation(line: 167, column: 20, scope: !1876, inlinedAt: !1880)
!2356 = !DILocation(line: 167, column: 23, scope: !1876, inlinedAt: !1880)
!2357 = !DILocation(line: 167, column: 36, scope: !1876, inlinedAt: !1880)
!2358 = !DILocation(line: 167, column: 39, scope: !1876, inlinedAt: !1880)
!2359 = !DILocation(line: 167, column: 34, scope: !1876, inlinedAt: !1880)
!2360 = !DILocation(line: 167, column: 50, scope: !1876, inlinedAt: !1880)
!2361 = !DILocation(line: 167, column: 49, scope: !1876, inlinedAt: !1880)
!2362 = !DILocation(line: 167, column: 47, scope: !1876, inlinedAt: !1880)
!2363 = !DILocation(line: 167, column: 19, scope: !1876, inlinedAt: !1880)
!2364 = !DILocation(line: 167, column: 59, scope: !2319, inlinedAt: !1880)
!2365 = !DILocation(line: 167, column: 58, scope: !2319, inlinedAt: !1880)
!2366 = !DILocation(line: 167, column: 19, scope: !2319, inlinedAt: !1880)
!2367 = !DILocation(line: 167, column: 68, scope: !2323, inlinedAt: !1880)
!2368 = !DILocation(line: 167, column: 71, scope: !2323, inlinedAt: !1880)
!2369 = !DILocation(line: 167, column: 84, scope: !2323, inlinedAt: !1880)
!2370 = !DILocation(line: 167, column: 87, scope: !2323, inlinedAt: !1880)
!2371 = !DILocation(line: 167, column: 82, scope: !2323, inlinedAt: !1880)
!2372 = !DILocation(line: 167, column: 19, scope: !2323, inlinedAt: !1880)
!2373 = !DILocation(line: 167, column: 19, scope: !2330, inlinedAt: !1880)
!2374 = !DILocation(line: 167, column: 5, scope: !2330, inlinedAt: !1880)
!2375 = !DILocation(line: 167, column: 8, scope: !2330, inlinedAt: !1880)
!2376 = !DILocation(line: 167, column: 15, scope: !2330, inlinedAt: !1880)
!2377 = !DILocation(line: 1669, column: 12, scope: !1855)
!2378 = !DILocation(line: 92, column: 1043, scope: !2379, inlinedAt: !1899)
!2379 = distinct !DILexicalBlock(scope: !1898, file: !1858, line: 92, column: 1043)
!2380 = !DILocation(line: 92, column: 1046, scope: !2379, inlinedAt: !1899)
!2381 = !DILocation(line: 92, column: 1059, scope: !2379, inlinedAt: !1899)
!2382 = !DILocation(line: 92, column: 1062, scope: !2379, inlinedAt: !1899)
!2383 = !DILocation(line: 92, column: 1057, scope: !2379, inlinedAt: !1899)
!2384 = !DILocation(line: 92, column: 1069, scope: !2379, inlinedAt: !1899)
!2385 = !DILocation(line: 92, column: 1043, scope: !1898, inlinedAt: !1899)
!2386 = !DILocation(line: 92, column: 1088, scope: !2387, inlinedAt: !1899)
!2387 = !DILexicalBlockFile(scope: !2388, file: !1858, discriminator: 1)
!2388 = distinct !DILexicalBlock(scope: !2379, file: !1858, line: 92, column: 1074)
!2389 = !DILocation(line: 92, column: 1091, scope: !2387, inlinedAt: !1899)
!2390 = !DILocation(line: 92, column: 1076, scope: !2387, inlinedAt: !1899)
!2391 = !DILocation(line: 92, column: 1079, scope: !2387, inlinedAt: !1899)
!2392 = !DILocation(line: 92, column: 1086, scope: !2387, inlinedAt: !1899)
!2393 = !DILocation(line: 92, column: 1103, scope: !2387, inlinedAt: !1899)
!2394 = !DILocation(line: 92, column: 1144, scope: !1897, inlinedAt: !1899)
!2395 = !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1899)
!2396 = !DILocation(line: 92, column: 925, scope: !1895, inlinedAt: !1896)
!2397 = !DILocation(line: 92, column: 928, scope: !1895, inlinedAt: !1896)
!2398 = !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1896)
!2399 = !DILocation(line: 92, column: 102, scope: !1890, inlinedAt: !1894)
!2400 = !DILocation(line: 92, column: 105, scope: !1890, inlinedAt: !1894)
!2401 = !DILocation(line: 92, column: 162, scope: !1890, inlinedAt: !1894)
!2402 = !DILocation(line: 92, column: 161, scope: !1890, inlinedAt: !1894)
!2403 = !DILocation(line: 92, column: 164, scope: !1890, inlinedAt: !1894)
!2404 = !DILocation(line: 92, column: 171, scope: !1890, inlinedAt: !1894)
!2405 = !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1894)
!2406 = !DILocation(line: 68, column: 16, scope: !1884, inlinedAt: !1889)
!2407 = !DILocation(line: 68, column: 19, scope: !1884, inlinedAt: !1889)
!2408 = !DILocation(line: 68, column: 24, scope: !1884, inlinedAt: !1889)
!2409 = !DILocation(line: 68, column: 38, scope: !1884, inlinedAt: !1889)
!2410 = !DILocation(line: 68, column: 41, scope: !1884, inlinedAt: !1889)
!2411 = !DILocation(line: 68, column: 46, scope: !1884, inlinedAt: !1889)
!2412 = !DILocation(line: 68, column: 34, scope: !1884, inlinedAt: !1889)
!2413 = !DILocation(line: 68, column: 57, scope: !1884, inlinedAt: !1889)
!2414 = !DILocation(line: 68, column: 69, scope: !1884, inlinedAt: !1889)
!2415 = !DILocation(line: 68, column: 72, scope: !1884, inlinedAt: !1889)
!2416 = !DILocation(line: 68, column: 79, scope: !1884, inlinedAt: !1889)
!2417 = !DILocation(line: 68, column: 84, scope: !1884, inlinedAt: !1889)
!2418 = !DILocation(line: 68, column: 99, scope: !1884, inlinedAt: !1889)
!2419 = !DILocation(line: 68, column: 102, scope: !1884, inlinedAt: !1889)
!2420 = !DILocation(line: 68, column: 109, scope: !1884, inlinedAt: !1889)
!2421 = !DILocation(line: 68, column: 114, scope: !1884, inlinedAt: !1889)
!2422 = !DILocation(line: 68, column: 94, scope: !1884, inlinedAt: !1889)
!2423 = !DILocation(line: 68, column: 63, scope: !1884, inlinedAt: !1889)
!2424 = !DILocation(line: 92, column: 1115, scope: !1897, inlinedAt: !1899)
!2425 = !DILocation(line: 92, column: 1148, scope: !2426, inlinedAt: !1899)
!2426 = !DILexicalBlockFile(scope: !1898, file: !1858, discriminator: 3)
!2427 = !DILocation(line: 1669, column: 10, scope: !1855)
!2428 = !DILocation(line: 1671, column: 9, scope: !1908)
!2429 = !DILocation(line: 1671, column: 16, scope: !1908)
!2430 = !DILocation(line: 156, column: 12, scope: !1857, inlinedAt: !1907)
!2431 = !DILocation(line: 156, column: 15, scope: !1857, inlinedAt: !1907)
!2432 = !DILocation(line: 156, column: 28, scope: !1857, inlinedAt: !1907)
!2433 = !DILocation(line: 156, column: 31, scope: !1857, inlinedAt: !1907)
!2434 = !DILocation(line: 156, column: 26, scope: !1857, inlinedAt: !1907)
!2435 = !DILocation(line: 1671, column: 14, scope: !1908)
!2436 = !DILocation(line: 1671, column: 9, scope: !1855)
!2437 = !DILocation(line: 1672, column: 16, scope: !1911)
!2438 = !DILocation(line: 1673, column: 16, scope: !1911)
!2439 = !DILocation(line: 156, column: 12, scope: !1857, inlinedAt: !1910)
!2440 = !DILocation(line: 156, column: 15, scope: !1857, inlinedAt: !1910)
!2441 = !DILocation(line: 156, column: 28, scope: !1857, inlinedAt: !1910)
!2442 = !DILocation(line: 156, column: 31, scope: !1857, inlinedAt: !1910)
!2443 = !DILocation(line: 156, column: 26, scope: !1857, inlinedAt: !1910)
!2444 = !DILocation(line: 1673, column: 49, scope: !1911)
!2445 = !DILocation(line: 1672, column: 9, scope: !1911)
!2446 = !DILocation(line: 1674, column: 9, scope: !1911)
!2447 = !DILocation(line: 1677, column: 12, scope: !1855)
!2448 = !DILocation(line: 1677, column: 37, scope: !1855)
!2449 = !DILocation(line: 1677, column: 5, scope: !1855)
!2450 = !DILocation(line: 1678, column: 9, scope: !1917)
!2451 = !DILocation(line: 92, column: 1043, scope: !2379, inlinedAt: !1916)
!2452 = !DILocation(line: 92, column: 1046, scope: !2379, inlinedAt: !1916)
!2453 = !DILocation(line: 92, column: 1059, scope: !2379, inlinedAt: !1916)
!2454 = !DILocation(line: 92, column: 1062, scope: !2379, inlinedAt: !1916)
!2455 = !DILocation(line: 92, column: 1057, scope: !2379, inlinedAt: !1916)
!2456 = !DILocation(line: 92, column: 1069, scope: !2379, inlinedAt: !1916)
!2457 = !DILocation(line: 92, column: 1043, scope: !1898, inlinedAt: !1916)
!2458 = !DILocation(line: 92, column: 1088, scope: !2387, inlinedAt: !1916)
!2459 = !DILocation(line: 92, column: 1091, scope: !2387, inlinedAt: !1916)
!2460 = !DILocation(line: 92, column: 1076, scope: !2387, inlinedAt: !1916)
!2461 = !DILocation(line: 92, column: 1079, scope: !2387, inlinedAt: !1916)
!2462 = !DILocation(line: 92, column: 1086, scope: !2387, inlinedAt: !1916)
!2463 = !DILocation(line: 92, column: 1103, scope: !2387, inlinedAt: !1916)
!2464 = !DILocation(line: 92, column: 1144, scope: !1897, inlinedAt: !1916)
!2465 = !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1916)
!2466 = !DILocation(line: 92, column: 925, scope: !1895, inlinedAt: !1915)
!2467 = !DILocation(line: 92, column: 928, scope: !1895, inlinedAt: !1915)
!2468 = !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1915)
!2469 = !DILocation(line: 92, column: 102, scope: !1890, inlinedAt: !1914)
!2470 = !DILocation(line: 92, column: 105, scope: !1890, inlinedAt: !1914)
!2471 = !DILocation(line: 92, column: 162, scope: !1890, inlinedAt: !1914)
!2472 = !DILocation(line: 92, column: 161, scope: !1890, inlinedAt: !1914)
!2473 = !DILocation(line: 92, column: 164, scope: !1890, inlinedAt: !1914)
!2474 = !DILocation(line: 92, column: 171, scope: !1890, inlinedAt: !1914)
!2475 = !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1914)
!2476 = !DILocation(line: 68, column: 16, scope: !1884, inlinedAt: !1913)
!2477 = !DILocation(line: 68, column: 19, scope: !1884, inlinedAt: !1913)
!2478 = !DILocation(line: 68, column: 24, scope: !1884, inlinedAt: !1913)
!2479 = !DILocation(line: 68, column: 38, scope: !1884, inlinedAt: !1913)
!2480 = !DILocation(line: 68, column: 41, scope: !1884, inlinedAt: !1913)
!2481 = !DILocation(line: 68, column: 46, scope: !1884, inlinedAt: !1913)
!2482 = !DILocation(line: 68, column: 34, scope: !1884, inlinedAt: !1913)
!2483 = !DILocation(line: 68, column: 57, scope: !1884, inlinedAt: !1913)
!2484 = !DILocation(line: 68, column: 69, scope: !1884, inlinedAt: !1913)
!2485 = !DILocation(line: 68, column: 72, scope: !1884, inlinedAt: !1913)
!2486 = !DILocation(line: 68, column: 79, scope: !1884, inlinedAt: !1913)
!2487 = !DILocation(line: 68, column: 84, scope: !1884, inlinedAt: !1913)
!2488 = !DILocation(line: 68, column: 99, scope: !1884, inlinedAt: !1913)
!2489 = !DILocation(line: 68, column: 102, scope: !1884, inlinedAt: !1913)
!2490 = !DILocation(line: 68, column: 109, scope: !1884, inlinedAt: !1913)
!2491 = !DILocation(line: 68, column: 114, scope: !1884, inlinedAt: !1913)
!2492 = !DILocation(line: 68, column: 94, scope: !1884, inlinedAt: !1913)
!2493 = !DILocation(line: 68, column: 63, scope: !1884, inlinedAt: !1913)
!2494 = !DILocation(line: 92, column: 1115, scope: !1897, inlinedAt: !1916)
!2495 = !DILocation(line: 92, column: 1148, scope: !2426, inlinedAt: !1916)
!2496 = !DILocation(line: 1678, column: 35, scope: !1917)
!2497 = !DILocation(line: 1678, column: 9, scope: !1855)
!2498 = !DILocation(line: 1679, column: 16, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !1917, file: !934, line: 1678, column: 104)
!2500 = !DILocation(line: 1679, column: 9, scope: !2499)
!2501 = !DILocation(line: 1680, column: 9, scope: !2499)
!2502 = !DILocation(line: 1683, column: 5, scope: !1855)
!2503 = !DILocation(line: 167, column: 20, scope: !1876, inlinedAt: !1922)
!2504 = !DILocation(line: 167, column: 23, scope: !1876, inlinedAt: !1922)
!2505 = !DILocation(line: 167, column: 36, scope: !1876, inlinedAt: !1922)
!2506 = !DILocation(line: 167, column: 39, scope: !1876, inlinedAt: !1922)
!2507 = !DILocation(line: 167, column: 34, scope: !1876, inlinedAt: !1922)
!2508 = !DILocation(line: 167, column: 50, scope: !1876, inlinedAt: !1922)
!2509 = !DILocation(line: 167, column: 49, scope: !1876, inlinedAt: !1922)
!2510 = !DILocation(line: 167, column: 47, scope: !1876, inlinedAt: !1922)
!2511 = !DILocation(line: 167, column: 19, scope: !1876, inlinedAt: !1922)
!2512 = !DILocation(line: 167, column: 59, scope: !2319, inlinedAt: !1922)
!2513 = !DILocation(line: 167, column: 58, scope: !2319, inlinedAt: !1922)
!2514 = !DILocation(line: 167, column: 19, scope: !2319, inlinedAt: !1922)
!2515 = !DILocation(line: 167, column: 68, scope: !2323, inlinedAt: !1922)
!2516 = !DILocation(line: 167, column: 71, scope: !2323, inlinedAt: !1922)
!2517 = !DILocation(line: 167, column: 84, scope: !2323, inlinedAt: !1922)
!2518 = !DILocation(line: 167, column: 87, scope: !2323, inlinedAt: !1922)
!2519 = !DILocation(line: 167, column: 82, scope: !2323, inlinedAt: !1922)
!2520 = !DILocation(line: 167, column: 19, scope: !2323, inlinedAt: !1922)
!2521 = !DILocation(line: 167, column: 19, scope: !2330, inlinedAt: !1922)
!2522 = !DILocation(line: 167, column: 5, scope: !2330, inlinedAt: !1922)
!2523 = !DILocation(line: 167, column: 8, scope: !2330, inlinedAt: !1922)
!2524 = !DILocation(line: 167, column: 15, scope: !2330, inlinedAt: !1922)
!2525 = !DILocation(line: 1685, column: 54, scope: !1855)
!2526 = !DILocation(line: 92, column: 1043, scope: !2379, inlinedAt: !1928)
!2527 = !DILocation(line: 92, column: 1046, scope: !2379, inlinedAt: !1928)
!2528 = !DILocation(line: 92, column: 1059, scope: !2379, inlinedAt: !1928)
!2529 = !DILocation(line: 92, column: 1062, scope: !2379, inlinedAt: !1928)
!2530 = !DILocation(line: 92, column: 1057, scope: !2379, inlinedAt: !1928)
!2531 = !DILocation(line: 92, column: 1069, scope: !2379, inlinedAt: !1928)
!2532 = !DILocation(line: 92, column: 1043, scope: !1898, inlinedAt: !1928)
!2533 = !DILocation(line: 92, column: 1088, scope: !2387, inlinedAt: !1928)
!2534 = !DILocation(line: 92, column: 1091, scope: !2387, inlinedAt: !1928)
!2535 = !DILocation(line: 92, column: 1076, scope: !2387, inlinedAt: !1928)
!2536 = !DILocation(line: 92, column: 1079, scope: !2387, inlinedAt: !1928)
!2537 = !DILocation(line: 92, column: 1086, scope: !2387, inlinedAt: !1928)
!2538 = !DILocation(line: 92, column: 1103, scope: !2387, inlinedAt: !1928)
!2539 = !DILocation(line: 92, column: 1144, scope: !1897, inlinedAt: !1928)
!2540 = !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1928)
!2541 = !DILocation(line: 92, column: 925, scope: !1895, inlinedAt: !1927)
!2542 = !DILocation(line: 92, column: 928, scope: !1895, inlinedAt: !1927)
!2543 = !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1927)
!2544 = !DILocation(line: 92, column: 102, scope: !1890, inlinedAt: !1926)
!2545 = !DILocation(line: 92, column: 105, scope: !1890, inlinedAt: !1926)
!2546 = !DILocation(line: 92, column: 162, scope: !1890, inlinedAt: !1926)
!2547 = !DILocation(line: 92, column: 161, scope: !1890, inlinedAt: !1926)
!2548 = !DILocation(line: 92, column: 164, scope: !1890, inlinedAt: !1926)
!2549 = !DILocation(line: 92, column: 171, scope: !1890, inlinedAt: !1926)
!2550 = !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1926)
!2551 = !DILocation(line: 68, column: 16, scope: !1884, inlinedAt: !1925)
!2552 = !DILocation(line: 68, column: 19, scope: !1884, inlinedAt: !1925)
!2553 = !DILocation(line: 68, column: 24, scope: !1884, inlinedAt: !1925)
!2554 = !DILocation(line: 68, column: 38, scope: !1884, inlinedAt: !1925)
!2555 = !DILocation(line: 68, column: 41, scope: !1884, inlinedAt: !1925)
!2556 = !DILocation(line: 68, column: 46, scope: !1884, inlinedAt: !1925)
!2557 = !DILocation(line: 68, column: 34, scope: !1884, inlinedAt: !1925)
!2558 = !DILocation(line: 68, column: 57, scope: !1884, inlinedAt: !1925)
!2559 = !DILocation(line: 68, column: 69, scope: !1884, inlinedAt: !1925)
!2560 = !DILocation(line: 68, column: 72, scope: !1884, inlinedAt: !1925)
!2561 = !DILocation(line: 68, column: 79, scope: !1884, inlinedAt: !1925)
!2562 = !DILocation(line: 68, column: 84, scope: !1884, inlinedAt: !1925)
!2563 = !DILocation(line: 68, column: 99, scope: !1884, inlinedAt: !1925)
!2564 = !DILocation(line: 68, column: 102, scope: !1884, inlinedAt: !1925)
!2565 = !DILocation(line: 68, column: 109, scope: !1884, inlinedAt: !1925)
!2566 = !DILocation(line: 68, column: 114, scope: !1884, inlinedAt: !1925)
!2567 = !DILocation(line: 68, column: 94, scope: !1884, inlinedAt: !1925)
!2568 = !DILocation(line: 68, column: 63, scope: !1884, inlinedAt: !1925)
!2569 = !DILocation(line: 92, column: 1115, scope: !1897, inlinedAt: !1928)
!2570 = !DILocation(line: 92, column: 1148, scope: !2426, inlinedAt: !1928)
!2571 = !DILocation(line: 1685, column: 40, scope: !1855)
!2572 = !DILocation(line: 1685, column: 43, scope: !1855)
!2573 = !DILocation(line: 1685, column: 52, scope: !1855)
!2574 = !DILocation(line: 1685, column: 23, scope: !1855)
!2575 = !DILocation(line: 1685, column: 26, scope: !1855)
!2576 = !DILocation(line: 1685, column: 38, scope: !1855)
!2577 = !DILocation(line: 1685, column: 5, scope: !1855)
!2578 = !DILocation(line: 1685, column: 12, scope: !1855)
!2579 = !DILocation(line: 1685, column: 21, scope: !1855)
!2580 = !DILocation(line: 1686, column: 9, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1686, column: 9)
!2582 = !DILocation(line: 1686, column: 12, scope: !2581)
!2583 = !DILocation(line: 1686, column: 21, scope: !2581)
!2584 = !DILocation(line: 1686, column: 26, scope: !2581)
!2585 = !DILocation(line: 1686, column: 29, scope: !2586)
!2586 = !DILexicalBlockFile(scope: !2581, file: !934, discriminator: 1)
!2587 = !DILocation(line: 1686, column: 32, scope: !2586)
!2588 = !DILocation(line: 1686, column: 41, scope: !2586)
!2589 = !DILocation(line: 1686, column: 9, scope: !2586)
!2590 = !DILocation(line: 1687, column: 16, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2581, file: !934, line: 1686, column: 46)
!2592 = !DILocation(line: 1687, column: 9, scope: !2591)
!2593 = !DILocation(line: 1688, column: 9, scope: !2591)
!2594 = !DILocation(line: 1690, column: 29, scope: !1855)
!2595 = !DILocation(line: 1690, column: 36, scope: !1855)
!2596 = !DILocation(line: 1690, column: 45, scope: !1855)
!2597 = !DILocation(line: 1690, column: 5, scope: !1855)
!2598 = !DILocation(line: 1690, column: 12, scope: !1855)
!2599 = !DILocation(line: 1690, column: 27, scope: !1855)
!2600 = !DILocation(line: 1693, column: 26, scope: !1855)
!2601 = !DILocation(line: 92, column: 1043, scope: !2379, inlinedAt: !1936)
!2602 = !DILocation(line: 92, column: 1046, scope: !2379, inlinedAt: !1936)
!2603 = !DILocation(line: 92, column: 1059, scope: !2379, inlinedAt: !1936)
!2604 = !DILocation(line: 92, column: 1062, scope: !2379, inlinedAt: !1936)
!2605 = !DILocation(line: 92, column: 1057, scope: !2379, inlinedAt: !1936)
!2606 = !DILocation(line: 92, column: 1069, scope: !2379, inlinedAt: !1936)
!2607 = !DILocation(line: 92, column: 1043, scope: !1898, inlinedAt: !1936)
!2608 = !DILocation(line: 92, column: 1088, scope: !2387, inlinedAt: !1936)
!2609 = !DILocation(line: 92, column: 1091, scope: !2387, inlinedAt: !1936)
!2610 = !DILocation(line: 92, column: 1076, scope: !2387, inlinedAt: !1936)
!2611 = !DILocation(line: 92, column: 1079, scope: !2387, inlinedAt: !1936)
!2612 = !DILocation(line: 92, column: 1086, scope: !2387, inlinedAt: !1936)
!2613 = !DILocation(line: 92, column: 1103, scope: !2387, inlinedAt: !1936)
!2614 = !DILocation(line: 92, column: 1144, scope: !1897, inlinedAt: !1936)
!2615 = !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1936)
!2616 = !DILocation(line: 92, column: 925, scope: !1895, inlinedAt: !1935)
!2617 = !DILocation(line: 92, column: 928, scope: !1895, inlinedAt: !1935)
!2618 = !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1935)
!2619 = !DILocation(line: 92, column: 102, scope: !1890, inlinedAt: !1934)
!2620 = !DILocation(line: 92, column: 105, scope: !1890, inlinedAt: !1934)
!2621 = !DILocation(line: 92, column: 162, scope: !1890, inlinedAt: !1934)
!2622 = !DILocation(line: 92, column: 161, scope: !1890, inlinedAt: !1934)
!2623 = !DILocation(line: 92, column: 164, scope: !1890, inlinedAt: !1934)
!2624 = !DILocation(line: 92, column: 171, scope: !1890, inlinedAt: !1934)
!2625 = !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1934)
!2626 = !DILocation(line: 68, column: 16, scope: !1884, inlinedAt: !1933)
!2627 = !DILocation(line: 68, column: 19, scope: !1884, inlinedAt: !1933)
!2628 = !DILocation(line: 68, column: 24, scope: !1884, inlinedAt: !1933)
!2629 = !DILocation(line: 68, column: 38, scope: !1884, inlinedAt: !1933)
!2630 = !DILocation(line: 68, column: 41, scope: !1884, inlinedAt: !1933)
!2631 = !DILocation(line: 68, column: 46, scope: !1884, inlinedAt: !1933)
!2632 = !DILocation(line: 68, column: 34, scope: !1884, inlinedAt: !1933)
!2633 = !DILocation(line: 68, column: 57, scope: !1884, inlinedAt: !1933)
!2634 = !DILocation(line: 68, column: 69, scope: !1884, inlinedAt: !1933)
!2635 = !DILocation(line: 68, column: 72, scope: !1884, inlinedAt: !1933)
!2636 = !DILocation(line: 68, column: 79, scope: !1884, inlinedAt: !1933)
!2637 = !DILocation(line: 68, column: 84, scope: !1884, inlinedAt: !1933)
!2638 = !DILocation(line: 68, column: 99, scope: !1884, inlinedAt: !1933)
!2639 = !DILocation(line: 68, column: 102, scope: !1884, inlinedAt: !1933)
!2640 = !DILocation(line: 68, column: 109, scope: !1884, inlinedAt: !1933)
!2641 = !DILocation(line: 68, column: 114, scope: !1884, inlinedAt: !1933)
!2642 = !DILocation(line: 68, column: 94, scope: !1884, inlinedAt: !1933)
!2643 = !DILocation(line: 68, column: 63, scope: !1884, inlinedAt: !1933)
!2644 = !DILocation(line: 92, column: 1115, scope: !1897, inlinedAt: !1936)
!2645 = !DILocation(line: 92, column: 1148, scope: !2426, inlinedAt: !1936)
!2646 = !DILocation(line: 1693, column: 5, scope: !1855)
!2647 = !DILocation(line: 1693, column: 12, scope: !1855)
!2648 = !DILocation(line: 1693, column: 24, scope: !1855)
!2649 = !DILocation(line: 1694, column: 23, scope: !1855)
!2650 = !DILocation(line: 92, column: 1043, scope: !2379, inlinedAt: !1944)
!2651 = !DILocation(line: 92, column: 1046, scope: !2379, inlinedAt: !1944)
!2652 = !DILocation(line: 92, column: 1059, scope: !2379, inlinedAt: !1944)
!2653 = !DILocation(line: 92, column: 1062, scope: !2379, inlinedAt: !1944)
!2654 = !DILocation(line: 92, column: 1057, scope: !2379, inlinedAt: !1944)
!2655 = !DILocation(line: 92, column: 1069, scope: !2379, inlinedAt: !1944)
!2656 = !DILocation(line: 92, column: 1043, scope: !1898, inlinedAt: !1944)
!2657 = !DILocation(line: 92, column: 1088, scope: !2387, inlinedAt: !1944)
!2658 = !DILocation(line: 92, column: 1091, scope: !2387, inlinedAt: !1944)
!2659 = !DILocation(line: 92, column: 1076, scope: !2387, inlinedAt: !1944)
!2660 = !DILocation(line: 92, column: 1079, scope: !2387, inlinedAt: !1944)
!2661 = !DILocation(line: 92, column: 1086, scope: !2387, inlinedAt: !1944)
!2662 = !DILocation(line: 92, column: 1103, scope: !2387, inlinedAt: !1944)
!2663 = !DILocation(line: 92, column: 1144, scope: !1897, inlinedAt: !1944)
!2664 = !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1944)
!2665 = !DILocation(line: 92, column: 925, scope: !1895, inlinedAt: !1943)
!2666 = !DILocation(line: 92, column: 928, scope: !1895, inlinedAt: !1943)
!2667 = !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1943)
!2668 = !DILocation(line: 92, column: 102, scope: !1890, inlinedAt: !1942)
!2669 = !DILocation(line: 92, column: 105, scope: !1890, inlinedAt: !1942)
!2670 = !DILocation(line: 92, column: 162, scope: !1890, inlinedAt: !1942)
!2671 = !DILocation(line: 92, column: 161, scope: !1890, inlinedAt: !1942)
!2672 = !DILocation(line: 92, column: 164, scope: !1890, inlinedAt: !1942)
!2673 = !DILocation(line: 92, column: 171, scope: !1890, inlinedAt: !1942)
!2674 = !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1942)
!2675 = !DILocation(line: 68, column: 16, scope: !1884, inlinedAt: !1941)
!2676 = !DILocation(line: 68, column: 19, scope: !1884, inlinedAt: !1941)
!2677 = !DILocation(line: 68, column: 24, scope: !1884, inlinedAt: !1941)
!2678 = !DILocation(line: 68, column: 38, scope: !1884, inlinedAt: !1941)
!2679 = !DILocation(line: 68, column: 41, scope: !1884, inlinedAt: !1941)
!2680 = !DILocation(line: 68, column: 46, scope: !1884, inlinedAt: !1941)
!2681 = !DILocation(line: 68, column: 34, scope: !1884, inlinedAt: !1941)
!2682 = !DILocation(line: 68, column: 57, scope: !1884, inlinedAt: !1941)
!2683 = !DILocation(line: 68, column: 69, scope: !1884, inlinedAt: !1941)
!2684 = !DILocation(line: 68, column: 72, scope: !1884, inlinedAt: !1941)
!2685 = !DILocation(line: 68, column: 79, scope: !1884, inlinedAt: !1941)
!2686 = !DILocation(line: 68, column: 84, scope: !1884, inlinedAt: !1941)
!2687 = !DILocation(line: 68, column: 99, scope: !1884, inlinedAt: !1941)
!2688 = !DILocation(line: 68, column: 102, scope: !1884, inlinedAt: !1941)
!2689 = !DILocation(line: 68, column: 109, scope: !1884, inlinedAt: !1941)
!2690 = !DILocation(line: 68, column: 114, scope: !1884, inlinedAt: !1941)
!2691 = !DILocation(line: 68, column: 94, scope: !1884, inlinedAt: !1941)
!2692 = !DILocation(line: 68, column: 63, scope: !1884, inlinedAt: !1941)
!2693 = !DILocation(line: 92, column: 1115, scope: !1897, inlinedAt: !1944)
!2694 = !DILocation(line: 92, column: 1148, scope: !2426, inlinedAt: !1944)
!2695 = !DILocation(line: 1694, column: 5, scope: !1855)
!2696 = !DILocation(line: 1694, column: 12, scope: !1855)
!2697 = !DILocation(line: 1694, column: 21, scope: !1855)
!2698 = !DILocation(line: 1695, column: 21, scope: !1855)
!2699 = !DILocation(line: 92, column: 1043, scope: !2379, inlinedAt: !1952)
!2700 = !DILocation(line: 92, column: 1046, scope: !2379, inlinedAt: !1952)
!2701 = !DILocation(line: 92, column: 1059, scope: !2379, inlinedAt: !1952)
!2702 = !DILocation(line: 92, column: 1062, scope: !2379, inlinedAt: !1952)
!2703 = !DILocation(line: 92, column: 1057, scope: !2379, inlinedAt: !1952)
!2704 = !DILocation(line: 92, column: 1069, scope: !2379, inlinedAt: !1952)
!2705 = !DILocation(line: 92, column: 1043, scope: !1898, inlinedAt: !1952)
!2706 = !DILocation(line: 92, column: 1088, scope: !2387, inlinedAt: !1952)
!2707 = !DILocation(line: 92, column: 1091, scope: !2387, inlinedAt: !1952)
!2708 = !DILocation(line: 92, column: 1076, scope: !2387, inlinedAt: !1952)
!2709 = !DILocation(line: 92, column: 1079, scope: !2387, inlinedAt: !1952)
!2710 = !DILocation(line: 92, column: 1086, scope: !2387, inlinedAt: !1952)
!2711 = !DILocation(line: 92, column: 1103, scope: !2387, inlinedAt: !1952)
!2712 = !DILocation(line: 92, column: 1144, scope: !1897, inlinedAt: !1952)
!2713 = !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1952)
!2714 = !DILocation(line: 92, column: 925, scope: !1895, inlinedAt: !1951)
!2715 = !DILocation(line: 92, column: 928, scope: !1895, inlinedAt: !1951)
!2716 = !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1951)
!2717 = !DILocation(line: 92, column: 102, scope: !1890, inlinedAt: !1950)
!2718 = !DILocation(line: 92, column: 105, scope: !1890, inlinedAt: !1950)
!2719 = !DILocation(line: 92, column: 162, scope: !1890, inlinedAt: !1950)
!2720 = !DILocation(line: 92, column: 161, scope: !1890, inlinedAt: !1950)
!2721 = !DILocation(line: 92, column: 164, scope: !1890, inlinedAt: !1950)
!2722 = !DILocation(line: 92, column: 171, scope: !1890, inlinedAt: !1950)
!2723 = !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1950)
!2724 = !DILocation(line: 68, column: 16, scope: !1884, inlinedAt: !1949)
!2725 = !DILocation(line: 68, column: 19, scope: !1884, inlinedAt: !1949)
!2726 = !DILocation(line: 68, column: 24, scope: !1884, inlinedAt: !1949)
!2727 = !DILocation(line: 68, column: 38, scope: !1884, inlinedAt: !1949)
!2728 = !DILocation(line: 68, column: 41, scope: !1884, inlinedAt: !1949)
!2729 = !DILocation(line: 68, column: 46, scope: !1884, inlinedAt: !1949)
!2730 = !DILocation(line: 68, column: 34, scope: !1884, inlinedAt: !1949)
!2731 = !DILocation(line: 68, column: 57, scope: !1884, inlinedAt: !1949)
!2732 = !DILocation(line: 68, column: 69, scope: !1884, inlinedAt: !1949)
!2733 = !DILocation(line: 68, column: 72, scope: !1884, inlinedAt: !1949)
!2734 = !DILocation(line: 68, column: 79, scope: !1884, inlinedAt: !1949)
!2735 = !DILocation(line: 68, column: 84, scope: !1884, inlinedAt: !1949)
!2736 = !DILocation(line: 68, column: 99, scope: !1884, inlinedAt: !1949)
!2737 = !DILocation(line: 68, column: 102, scope: !1884, inlinedAt: !1949)
!2738 = !DILocation(line: 68, column: 109, scope: !1884, inlinedAt: !1949)
!2739 = !DILocation(line: 68, column: 114, scope: !1884, inlinedAt: !1949)
!2740 = !DILocation(line: 68, column: 94, scope: !1884, inlinedAt: !1949)
!2741 = !DILocation(line: 68, column: 63, scope: !1884, inlinedAt: !1949)
!2742 = !DILocation(line: 92, column: 1115, scope: !1897, inlinedAt: !1952)
!2743 = !DILocation(line: 92, column: 1148, scope: !2426, inlinedAt: !1952)
!2744 = !DILocation(line: 1695, column: 5, scope: !1855)
!2745 = !DILocation(line: 1695, column: 8, scope: !1855)
!2746 = !DILocation(line: 1695, column: 19, scope: !1855)
!2747 = !DILocation(line: 1696, column: 19, scope: !1855)
!2748 = !DILocation(line: 92, column: 1043, scope: !2379, inlinedAt: !1960)
!2749 = !DILocation(line: 92, column: 1046, scope: !2379, inlinedAt: !1960)
!2750 = !DILocation(line: 92, column: 1059, scope: !2379, inlinedAt: !1960)
!2751 = !DILocation(line: 92, column: 1062, scope: !2379, inlinedAt: !1960)
!2752 = !DILocation(line: 92, column: 1057, scope: !2379, inlinedAt: !1960)
!2753 = !DILocation(line: 92, column: 1069, scope: !2379, inlinedAt: !1960)
!2754 = !DILocation(line: 92, column: 1043, scope: !1898, inlinedAt: !1960)
!2755 = !DILocation(line: 92, column: 1088, scope: !2387, inlinedAt: !1960)
!2756 = !DILocation(line: 92, column: 1091, scope: !2387, inlinedAt: !1960)
!2757 = !DILocation(line: 92, column: 1076, scope: !2387, inlinedAt: !1960)
!2758 = !DILocation(line: 92, column: 1079, scope: !2387, inlinedAt: !1960)
!2759 = !DILocation(line: 92, column: 1086, scope: !2387, inlinedAt: !1960)
!2760 = !DILocation(line: 92, column: 1103, scope: !2387, inlinedAt: !1960)
!2761 = !DILocation(line: 92, column: 1144, scope: !1897, inlinedAt: !1960)
!2762 = !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1960)
!2763 = !DILocation(line: 92, column: 925, scope: !1895, inlinedAt: !1959)
!2764 = !DILocation(line: 92, column: 928, scope: !1895, inlinedAt: !1959)
!2765 = !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1959)
!2766 = !DILocation(line: 92, column: 102, scope: !1890, inlinedAt: !1958)
!2767 = !DILocation(line: 92, column: 105, scope: !1890, inlinedAt: !1958)
!2768 = !DILocation(line: 92, column: 162, scope: !1890, inlinedAt: !1958)
!2769 = !DILocation(line: 92, column: 161, scope: !1890, inlinedAt: !1958)
!2770 = !DILocation(line: 92, column: 164, scope: !1890, inlinedAt: !1958)
!2771 = !DILocation(line: 92, column: 171, scope: !1890, inlinedAt: !1958)
!2772 = !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1958)
!2773 = !DILocation(line: 68, column: 16, scope: !1884, inlinedAt: !1957)
!2774 = !DILocation(line: 68, column: 19, scope: !1884, inlinedAt: !1957)
!2775 = !DILocation(line: 68, column: 24, scope: !1884, inlinedAt: !1957)
!2776 = !DILocation(line: 68, column: 38, scope: !1884, inlinedAt: !1957)
!2777 = !DILocation(line: 68, column: 41, scope: !1884, inlinedAt: !1957)
!2778 = !DILocation(line: 68, column: 46, scope: !1884, inlinedAt: !1957)
!2779 = !DILocation(line: 68, column: 34, scope: !1884, inlinedAt: !1957)
!2780 = !DILocation(line: 68, column: 57, scope: !1884, inlinedAt: !1957)
!2781 = !DILocation(line: 68, column: 69, scope: !1884, inlinedAt: !1957)
!2782 = !DILocation(line: 68, column: 72, scope: !1884, inlinedAt: !1957)
!2783 = !DILocation(line: 68, column: 79, scope: !1884, inlinedAt: !1957)
!2784 = !DILocation(line: 68, column: 84, scope: !1884, inlinedAt: !1957)
!2785 = !DILocation(line: 68, column: 99, scope: !1884, inlinedAt: !1957)
!2786 = !DILocation(line: 68, column: 102, scope: !1884, inlinedAt: !1957)
!2787 = !DILocation(line: 68, column: 109, scope: !1884, inlinedAt: !1957)
!2788 = !DILocation(line: 68, column: 114, scope: !1884, inlinedAt: !1957)
!2789 = !DILocation(line: 68, column: 94, scope: !1884, inlinedAt: !1957)
!2790 = !DILocation(line: 68, column: 63, scope: !1884, inlinedAt: !1957)
!2791 = !DILocation(line: 92, column: 1115, scope: !1897, inlinedAt: !1960)
!2792 = !DILocation(line: 92, column: 1148, scope: !2426, inlinedAt: !1960)
!2793 = !DILocation(line: 1696, column: 5, scope: !1855)
!2794 = !DILocation(line: 1696, column: 8, scope: !1855)
!2795 = !DILocation(line: 1696, column: 17, scope: !1855)
!2796 = !DILocation(line: 1697, column: 24, scope: !1855)
!2797 = !DILocation(line: 92, column: 1043, scope: !2379, inlinedAt: !1968)
!2798 = !DILocation(line: 92, column: 1046, scope: !2379, inlinedAt: !1968)
!2799 = !DILocation(line: 92, column: 1059, scope: !2379, inlinedAt: !1968)
!2800 = !DILocation(line: 92, column: 1062, scope: !2379, inlinedAt: !1968)
!2801 = !DILocation(line: 92, column: 1057, scope: !2379, inlinedAt: !1968)
!2802 = !DILocation(line: 92, column: 1069, scope: !2379, inlinedAt: !1968)
!2803 = !DILocation(line: 92, column: 1043, scope: !1898, inlinedAt: !1968)
!2804 = !DILocation(line: 92, column: 1088, scope: !2387, inlinedAt: !1968)
!2805 = !DILocation(line: 92, column: 1091, scope: !2387, inlinedAt: !1968)
!2806 = !DILocation(line: 92, column: 1076, scope: !2387, inlinedAt: !1968)
!2807 = !DILocation(line: 92, column: 1079, scope: !2387, inlinedAt: !1968)
!2808 = !DILocation(line: 92, column: 1086, scope: !2387, inlinedAt: !1968)
!2809 = !DILocation(line: 92, column: 1103, scope: !2387, inlinedAt: !1968)
!2810 = !DILocation(line: 92, column: 1144, scope: !1897, inlinedAt: !1968)
!2811 = !DILocation(line: 92, column: 1122, scope: !1897, inlinedAt: !1968)
!2812 = !DILocation(line: 92, column: 925, scope: !1895, inlinedAt: !1967)
!2813 = !DILocation(line: 92, column: 928, scope: !1895, inlinedAt: !1967)
!2814 = !DILocation(line: 92, column: 904, scope: !1895, inlinedAt: !1967)
!2815 = !DILocation(line: 92, column: 102, scope: !1890, inlinedAt: !1966)
!2816 = !DILocation(line: 92, column: 105, scope: !1890, inlinedAt: !1966)
!2817 = !DILocation(line: 92, column: 162, scope: !1890, inlinedAt: !1966)
!2818 = !DILocation(line: 92, column: 161, scope: !1890, inlinedAt: !1966)
!2819 = !DILocation(line: 92, column: 164, scope: !1890, inlinedAt: !1966)
!2820 = !DILocation(line: 92, column: 171, scope: !1890, inlinedAt: !1966)
!2821 = !DILocation(line: 92, column: 118, scope: !1890, inlinedAt: !1966)
!2822 = !DILocation(line: 68, column: 16, scope: !1884, inlinedAt: !1965)
!2823 = !DILocation(line: 68, column: 19, scope: !1884, inlinedAt: !1965)
!2824 = !DILocation(line: 68, column: 24, scope: !1884, inlinedAt: !1965)
!2825 = !DILocation(line: 68, column: 38, scope: !1884, inlinedAt: !1965)
!2826 = !DILocation(line: 68, column: 41, scope: !1884, inlinedAt: !1965)
!2827 = !DILocation(line: 68, column: 46, scope: !1884, inlinedAt: !1965)
!2828 = !DILocation(line: 68, column: 34, scope: !1884, inlinedAt: !1965)
!2829 = !DILocation(line: 68, column: 57, scope: !1884, inlinedAt: !1965)
!2830 = !DILocation(line: 68, column: 69, scope: !1884, inlinedAt: !1965)
!2831 = !DILocation(line: 68, column: 72, scope: !1884, inlinedAt: !1965)
!2832 = !DILocation(line: 68, column: 79, scope: !1884, inlinedAt: !1965)
!2833 = !DILocation(line: 68, column: 84, scope: !1884, inlinedAt: !1965)
!2834 = !DILocation(line: 68, column: 99, scope: !1884, inlinedAt: !1965)
!2835 = !DILocation(line: 68, column: 102, scope: !1884, inlinedAt: !1965)
!2836 = !DILocation(line: 68, column: 109, scope: !1884, inlinedAt: !1965)
!2837 = !DILocation(line: 68, column: 114, scope: !1884, inlinedAt: !1965)
!2838 = !DILocation(line: 68, column: 94, scope: !1884, inlinedAt: !1965)
!2839 = !DILocation(line: 68, column: 63, scope: !1884, inlinedAt: !1965)
!2840 = !DILocation(line: 92, column: 1115, scope: !1897, inlinedAt: !1968)
!2841 = !DILocation(line: 92, column: 1148, scope: !2426, inlinedAt: !1968)
!2842 = !DILocation(line: 1697, column: 5, scope: !1855)
!2843 = !DILocation(line: 1697, column: 8, scope: !1855)
!2844 = !DILocation(line: 1697, column: 22, scope: !1855)
!2845 = !DILocation(line: 1698, column: 9, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1698, column: 9)
!2847 = !DILocation(line: 1698, column: 12, scope: !2846)
!2848 = !DILocation(line: 1698, column: 26, scope: !2846)
!2849 = !DILocation(line: 1698, column: 9, scope: !1855)
!2850 = !DILocation(line: 1699, column: 16, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2846, file: !934, line: 1698, column: 39)
!2852 = !DILocation(line: 1699, column: 63, scope: !2851)
!2853 = !DILocation(line: 1699, column: 66, scope: !2851)
!2854 = !DILocation(line: 1699, column: 9, scope: !2851)
!2855 = !DILocation(line: 1700, column: 9, scope: !2851)
!2856 = !DILocation(line: 1703, column: 41, scope: !1855)
!2857 = !DILocation(line: 1703, column: 44, scope: !1855)
!2858 = !DILocation(line: 1703, column: 53, scope: !1855)
!2859 = !DILocation(line: 1703, column: 26, scope: !1855)
!2860 = !DILocation(line: 1703, column: 24, scope: !1855)
!2861 = !DILocation(line: 1703, column: 58, scope: !1855)
!2862 = !DILocation(line: 1703, column: 5, scope: !1855)
!2863 = !DILocation(line: 1703, column: 8, scope: !1855)
!2864 = !DILocation(line: 1703, column: 18, scope: !1855)
!2865 = !DILocation(line: 1706, column: 43, scope: !1855)
!2866 = !DILocation(line: 1706, column: 46, scope: !1855)
!2867 = !DILocation(line: 1706, column: 57, scope: !1855)
!2868 = !DILocation(line: 1706, column: 28, scope: !1855)
!2869 = !DILocation(line: 1706, column: 26, scope: !1855)
!2870 = !DILocation(line: 1706, column: 62, scope: !1855)
!2871 = !DILocation(line: 1706, column: 5, scope: !1855)
!2872 = !DILocation(line: 1706, column: 8, scope: !1855)
!2873 = !DILocation(line: 1706, column: 20, scope: !1855)
!2874 = !DILocation(line: 1707, column: 21, scope: !1855)
!2875 = !DILocation(line: 1707, column: 24, scope: !1855)
!2876 = !DILocation(line: 1707, column: 35, scope: !1855)
!2877 = !DILocation(line: 1707, column: 5, scope: !1855)
!2878 = !DILocation(line: 1707, column: 8, scope: !1855)
!2879 = !DILocation(line: 1707, column: 19, scope: !1855)
!2880 = !DILocation(line: 1709, column: 9, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1709, column: 9)
!2882 = !DILocation(line: 1709, column: 12, scope: !2881)
!2883 = !DILocation(line: 1709, column: 23, scope: !2881)
!2884 = !DILocation(line: 1709, column: 9, scope: !1855)
!2885 = !DILocation(line: 1710, column: 9, scope: !2881)
!2886 = !DILocation(line: 1712, column: 23, scope: !1855)
!2887 = !DILocation(line: 1712, column: 26, scope: !1855)
!2888 = !DILocation(line: 1712, column: 36, scope: !1855)
!2889 = !DILocation(line: 1712, column: 5, scope: !1855)
!2890 = !DILocation(line: 1712, column: 8, scope: !1855)
!2891 = !DILocation(line: 1712, column: 21, scope: !1855)
!2892 = !DILocation(line: 1713, column: 43, scope: !1855)
!2893 = !DILocation(line: 1713, column: 46, scope: !1855)
!2894 = !DILocation(line: 1713, column: 41, scope: !1855)
!2895 = !DILocation(line: 1713, column: 35, scope: !1855)
!2896 = !DILocation(line: 1713, column: 30, scope: !1855)
!2897 = !DILocation(line: 1713, column: 5, scope: !1855)
!2898 = !DILocation(line: 1713, column: 8, scope: !1855)
!2899 = !DILocation(line: 1713, column: 24, scope: !1855)
!2900 = !DILocation(line: 1715, column: 14, scope: !1855)
!2901 = !DILocation(line: 1715, column: 17, scope: !1855)
!2902 = !DILocation(line: 1715, column: 30, scope: !1855)
!2903 = !DILocation(line: 1715, column: 36, scope: !1855)
!2904 = !DILocation(line: 1715, column: 39, scope: !1855)
!2905 = !DILocation(line: 1715, column: 34, scope: !1855)
!2906 = !DILocation(line: 1715, column: 48, scope: !1855)
!2907 = !DILocation(line: 1715, column: 5, scope: !1855)
!2908 = !DILocation(line: 1716, column: 21, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1715, column: 54)
!2910 = !DILocation(line: 1716, column: 27, scope: !2909)
!2911 = !DILocation(line: 1717, column: 21, scope: !2909)
!2912 = !DILocation(line: 1717, column: 27, scope: !2909)
!2913 = !DILocation(line: 1718, column: 21, scope: !2909)
!2914 = !DILocation(line: 1718, column: 27, scope: !2909)
!2915 = !DILocation(line: 1719, column: 21, scope: !2909)
!2916 = !DILocation(line: 1719, column: 27, scope: !2909)
!2917 = !DILocation(line: 1720, column: 21, scope: !2909)
!2918 = !DILocation(line: 1720, column: 27, scope: !2909)
!2919 = !DILocation(line: 1721, column: 21, scope: !2909)
!2920 = !DILocation(line: 1721, column: 27, scope: !2909)
!2921 = !DILocation(line: 1722, column: 22, scope: !2909)
!2922 = !DILocation(line: 1722, column: 25, scope: !2909)
!2923 = !DILocation(line: 1722, column: 21, scope: !2909)
!2924 = !DILocation(line: 1722, column: 39, scope: !2909)
!2925 = !DILocation(line: 1724, column: 13, scope: !1855)
!2926 = !DILocation(line: 1725, column: 10, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1725, column: 9)
!2928 = !DILocation(line: 1725, column: 14, scope: !2927)
!2929 = !DILocation(line: 1725, column: 9, scope: !2927)
!2930 = !DILocation(line: 1725, column: 24, scope: !2927)
!2931 = !DILocation(line: 1725, column: 31, scope: !2927)
!2932 = !DILocation(line: 1725, column: 22, scope: !2927)
!2933 = !DILocation(line: 1725, column: 9, scope: !1855)
!2934 = !DILocation(line: 1725, column: 49, scope: !2935)
!2935 = !DILexicalBlockFile(scope: !2927, file: !934, discriminator: 1)
!2936 = !DILocation(line: 1725, column: 41, scope: !2935)
!2937 = !DILocation(line: 1726, column: 10, scope: !2938)
!2938 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1726, column: 9)
!2939 = !DILocation(line: 1726, column: 14, scope: !2938)
!2940 = !DILocation(line: 1726, column: 9, scope: !2938)
!2941 = !DILocation(line: 1726, column: 24, scope: !2938)
!2942 = !DILocation(line: 1726, column: 31, scope: !2938)
!2943 = !DILocation(line: 1726, column: 22, scope: !2938)
!2944 = !DILocation(line: 1726, column: 9, scope: !1855)
!2945 = !DILocation(line: 1726, column: 49, scope: !2946)
!2946 = !DILexicalBlockFile(scope: !2938, file: !934, discriminator: 1)
!2947 = !DILocation(line: 1726, column: 41, scope: !2946)
!2948 = !DILocation(line: 1727, column: 10, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1727, column: 9)
!2950 = !DILocation(line: 1727, column: 14, scope: !2949)
!2951 = !DILocation(line: 1727, column: 9, scope: !2949)
!2952 = !DILocation(line: 1727, column: 24, scope: !2949)
!2953 = !DILocation(line: 1727, column: 31, scope: !2949)
!2954 = !DILocation(line: 1727, column: 22, scope: !2949)
!2955 = !DILocation(line: 1727, column: 9, scope: !1855)
!2956 = !DILocation(line: 1727, column: 49, scope: !2957)
!2957 = !DILexicalBlockFile(scope: !2949, file: !934, discriminator: 1)
!2958 = !DILocation(line: 1727, column: 41, scope: !2957)
!2959 = !DILocation(line: 1728, column: 10, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1728, column: 9)
!2961 = !DILocation(line: 1728, column: 14, scope: !2960)
!2962 = !DILocation(line: 1728, column: 9, scope: !2960)
!2963 = !DILocation(line: 1728, column: 24, scope: !2960)
!2964 = !DILocation(line: 1728, column: 31, scope: !2960)
!2965 = !DILocation(line: 1728, column: 22, scope: !2960)
!2966 = !DILocation(line: 1728, column: 9, scope: !1855)
!2967 = !DILocation(line: 1728, column: 49, scope: !2968)
!2968 = !DILexicalBlockFile(scope: !2960, file: !934, discriminator: 1)
!2969 = !DILocation(line: 1728, column: 41, scope: !2968)
!2970 = !DILocation(line: 1729, column: 26, scope: !1855)
!2971 = !DILocation(line: 1729, column: 5, scope: !1855)
!2972 = !DILocation(line: 1729, column: 8, scope: !1855)
!2973 = !DILocation(line: 1729, column: 24, scope: !1855)
!2974 = !DILocation(line: 1731, column: 9, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1731, column: 9)
!2976 = !DILocation(line: 1731, column: 16, scope: !2975)
!2977 = !DILocation(line: 1731, column: 25, scope: !2975)
!2978 = !DILocation(line: 1731, column: 9, scope: !1855)
!2979 = !DILocation(line: 1732, column: 9, scope: !2975)
!2980 = !DILocation(line: 1732, column: 12, scope: !2975)
!2981 = !DILocation(line: 1732, column: 32, scope: !2975)
!2982 = !DILocation(line: 1733, column: 14, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2975, file: !934, line: 1733, column: 14)
!2984 = !DILocation(line: 1733, column: 21, scope: !2983)
!2985 = !DILocation(line: 1733, column: 30, scope: !2983)
!2986 = !DILocation(line: 1733, column: 14, scope: !2975)
!2987 = !DILocation(line: 1734, column: 9, scope: !2983)
!2988 = !DILocation(line: 1734, column: 12, scope: !2983)
!2989 = !DILocation(line: 1734, column: 32, scope: !2983)
!2990 = !DILocation(line: 1736, column: 9, scope: !2983)
!2991 = !DILocation(line: 1736, column: 12, scope: !2983)
!2992 = !DILocation(line: 1736, column: 32, scope: !2983)
!2993 = !DILocation(line: 1739, column: 10, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1739, column: 9)
!2995 = !DILocation(line: 1739, column: 13, scope: !2994)
!2996 = !DILocation(line: 1739, column: 23, scope: !2994)
!2997 = !DILocation(line: 1739, column: 28, scope: !2994)
!2998 = !DILocation(line: 1739, column: 32, scope: !2999)
!2999 = !DILexicalBlockFile(scope: !2994, file: !934, discriminator: 1)
!3000 = !DILocation(line: 1739, column: 35, scope: !2999)
!3001 = !DILocation(line: 1739, column: 45, scope: !2999)
!3002 = !DILocation(line: 1739, column: 9, scope: !2999)
!3003 = !DILocation(line: 1740, column: 31, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2994, file: !934, line: 1739, column: 51)
!3005 = !DILocation(line: 1740, column: 62, scope: !3004)
!3006 = !DILocation(line: 1740, column: 65, scope: !3004)
!3007 = !DILocation(line: 1740, column: 9, scope: !3004)
!3008 = !DILocation(line: 1741, column: 9, scope: !3004)
!3009 = !DILocation(line: 1743, column: 9, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !1855, file: !934, line: 1743, column: 9)
!3011 = !DILocation(line: 1743, column: 12, scope: !3010)
!3012 = !DILocation(line: 1743, column: 31, scope: !3010)
!3013 = !DILocation(line: 1743, column: 34, scope: !3010)
!3014 = !DILocation(line: 1743, column: 44, scope: !3010)
!3015 = !DILocation(line: 1743, column: 27, scope: !3010)
!3016 = !DILocation(line: 1743, column: 21, scope: !3010)
!3017 = !DILocation(line: 1743, column: 9, scope: !1855)
!3018 = !DILocation(line: 1744, column: 16, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !3010, file: !934, line: 1743, column: 51)
!3020 = !DILocation(line: 1744, column: 60, scope: !3019)
!3021 = !DILocation(line: 1744, column: 63, scope: !3019)
!3022 = !DILocation(line: 1744, column: 9, scope: !3019)
!3023 = !DILocation(line: 1745, column: 9, scope: !3019)
!3024 = !DILocation(line: 1748, column: 19, scope: !1855)
!3025 = !DILocation(line: 1748, column: 22, scope: !1855)
!3026 = !DILocation(line: 1748, column: 32, scope: !1855)
!3027 = !DILocation(line: 1748, column: 35, scope: !1855)
!3028 = !DILocation(line: 1748, column: 5, scope: !1855)
!3029 = !DILocation(line: 1749, column: 21, scope: !1855)
!3030 = !DILocation(line: 1749, column: 24, scope: !1855)
!3031 = !DILocation(line: 1749, column: 5, scope: !1855)
!3032 = !DILocation(line: 1751, column: 5, scope: !1855)
!3033 = !DILocation(line: 1751, column: 12, scope: !1855)
!3034 = !DILocation(line: 1751, column: 23, scope: !1855)
!3035 = !DILocation(line: 1753, column: 5, scope: !1855)
!3036 = !DILocation(line: 1754, column: 1, scope: !1855)
!3037 = distinct !DISubprogram(name: "qdm2_decode_frame", scope: !934, file: !934, line: 1827, type: !1635, isLocal: true, isDefinition: true, scopeLine: 1829, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!3038 = !DILocalVariable(name: "avctx", arg: 1, scope: !3037, file: !934, line: 1827, type: !1027)
!3039 = !DILocation(line: 1827, column: 46, scope: !3037)
!3040 = !DILocalVariable(name: "data", arg: 2, scope: !3037, file: !934, line: 1827, type: !912)
!3041 = !DILocation(line: 1827, column: 59, scope: !3037)
!3042 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !3037, file: !934, line: 1828, type: !1321)
!3043 = !DILocation(line: 1828, column: 35, scope: !3037)
!3044 = !DILocalVariable(name: "avpkt", arg: 4, scope: !3037, file: !934, line: 1828, type: !1175)
!3045 = !DILocation(line: 1828, column: 60, scope: !3037)
!3046 = !DILocalVariable(name: "frame", scope: !3037, file: !934, line: 1830, type: !1049)
!3047 = !DILocation(line: 1830, column: 14, scope: !3037)
!3048 = !DILocation(line: 1830, column: 22, scope: !3037)
!3049 = !DILocalVariable(name: "buf", scope: !3037, file: !934, line: 1831, type: !1469)
!3050 = !DILocation(line: 1831, column: 20, scope: !3037)
!3051 = !DILocation(line: 1831, column: 26, scope: !3037)
!3052 = !DILocation(line: 1831, column: 33, scope: !3037)
!3053 = !DILocalVariable(name: "buf_size", scope: !3037, file: !934, line: 1832, type: !905)
!3054 = !DILocation(line: 1832, column: 9, scope: !3037)
!3055 = !DILocation(line: 1832, column: 20, scope: !3037)
!3056 = !DILocation(line: 1832, column: 27, scope: !3037)
!3057 = !DILocalVariable(name: "s", scope: !3037, file: !934, line: 1833, type: !1999)
!3058 = !DILocation(line: 1833, column: 18, scope: !3037)
!3059 = !DILocation(line: 1833, column: 22, scope: !3037)
!3060 = !DILocation(line: 1833, column: 29, scope: !3037)
!3061 = !DILocalVariable(name: "out", scope: !3037, file: !934, line: 1834, type: !925)
!3062 = !DILocation(line: 1834, column: 14, scope: !3037)
!3063 = !DILocalVariable(name: "i", scope: !3037, file: !934, line: 1835, type: !905)
!3064 = !DILocation(line: 1835, column: 9, scope: !3037)
!3065 = !DILocalVariable(name: "ret", scope: !3037, file: !934, line: 1835, type: !905)
!3066 = !DILocation(line: 1835, column: 12, scope: !3037)
!3067 = !DILocation(line: 1837, column: 9, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3037, file: !934, line: 1837, column: 8)
!3069 = !DILocation(line: 1837, column: 8, scope: !3037)
!3070 = !DILocation(line: 1838, column: 9, scope: !3068)
!3071 = !DILocation(line: 1839, column: 8, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3037, file: !934, line: 1839, column: 8)
!3073 = !DILocation(line: 1839, column: 19, scope: !3072)
!3074 = !DILocation(line: 1839, column: 22, scope: !3072)
!3075 = !DILocation(line: 1839, column: 17, scope: !3072)
!3076 = !DILocation(line: 1839, column: 8, scope: !3037)
!3077 = !DILocation(line: 1840, column: 9, scope: !3072)
!3078 = !DILocation(line: 1843, column: 30, scope: !3037)
!3079 = !DILocation(line: 1843, column: 33, scope: !3037)
!3080 = !DILocation(line: 1843, column: 28, scope: !3037)
!3081 = !DILocation(line: 1843, column: 5, scope: !3037)
!3082 = !DILocation(line: 1843, column: 12, scope: !3037)
!3083 = !DILocation(line: 1843, column: 23, scope: !3037)
!3084 = !DILocation(line: 1844, column: 30, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3037, file: !934, line: 1844, column: 9)
!3086 = !DILocation(line: 1844, column: 37, scope: !3085)
!3087 = !DILocation(line: 1844, column: 16, scope: !3085)
!3088 = !DILocation(line: 1844, column: 14, scope: !3085)
!3089 = !DILocation(line: 1844, column: 48, scope: !3085)
!3090 = !DILocation(line: 1844, column: 9, scope: !3037)
!3091 = !DILocation(line: 1845, column: 16, scope: !3085)
!3092 = !DILocation(line: 1845, column: 9, scope: !3085)
!3093 = !DILocation(line: 1846, column: 22, scope: !3037)
!3094 = !DILocation(line: 1846, column: 29, scope: !3037)
!3095 = !DILocation(line: 1846, column: 11, scope: !3037)
!3096 = !DILocation(line: 1846, column: 9, scope: !3037)
!3097 = !DILocation(line: 1848, column: 12, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3037, file: !934, line: 1848, column: 5)
!3099 = !DILocation(line: 1848, column: 10, scope: !3098)
!3100 = !DILocation(line: 1848, column: 17, scope: !3101)
!3101 = !DILexicalBlockFile(scope: !3102, file: !934, discriminator: 1)
!3102 = distinct !DILexicalBlock(scope: !3098, file: !934, line: 1848, column: 5)
!3103 = !DILocation(line: 1848, column: 19, scope: !3101)
!3104 = !DILocation(line: 1848, column: 5, scope: !3101)
!3105 = !DILocation(line: 1849, column: 32, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3107, file: !934, line: 1849, column: 13)
!3107 = distinct !DILexicalBlock(scope: !3102, file: !934, line: 1848, column: 30)
!3108 = !DILocation(line: 1849, column: 35, scope: !3106)
!3109 = !DILocation(line: 1849, column: 40, scope: !3106)
!3110 = !DILocation(line: 1849, column: 20, scope: !3106)
!3111 = !DILocation(line: 1849, column: 18, scope: !3106)
!3112 = !DILocation(line: 1849, column: 46, scope: !3106)
!3113 = !DILocation(line: 1849, column: 13, scope: !3107)
!3114 = !DILocation(line: 1850, column: 20, scope: !3106)
!3115 = !DILocation(line: 1850, column: 13, scope: !3106)
!3116 = !DILocation(line: 1851, column: 16, scope: !3107)
!3117 = !DILocation(line: 1851, column: 19, scope: !3107)
!3118 = !DILocation(line: 1851, column: 30, scope: !3107)
!3119 = !DILocation(line: 1851, column: 33, scope: !3107)
!3120 = !DILocation(line: 1851, column: 28, scope: !3107)
!3121 = !DILocation(line: 1851, column: 13, scope: !3107)
!3122 = !DILocation(line: 1852, column: 5, scope: !3107)
!3123 = !DILocation(line: 1848, column: 26, scope: !3124)
!3124 = !DILexicalBlockFile(scope: !3102, file: !934, discriminator: 2)
!3125 = !DILocation(line: 1848, column: 5, scope: !3124)
!3126 = distinct !{!3126, !3127}
!3127 = !DILocation(line: 1848, column: 5, scope: !3037)
!3128 = !DILocation(line: 1854, column: 6, scope: !3037)
!3129 = !DILocation(line: 1854, column: 20, scope: !3037)
!3130 = !DILocation(line: 1856, column: 12, scope: !3037)
!3131 = !DILocation(line: 1856, column: 15, scope: !3037)
!3132 = !DILocation(line: 1856, column: 5, scope: !3037)
!3133 = !DILocation(line: 1857, column: 1, scope: !3037)
!3134 = distinct !DISubprogram(name: "qdm2_decode_close", scope: !934, file: !934, line: 1756, type: !1025, isLocal: true, isDefinition: true, scopeLine: 1757, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!3135 = !DILocalVariable(name: "avctx", arg: 1, scope: !3134, file: !934, line: 1756, type: !1027)
!3136 = !DILocation(line: 1756, column: 68, scope: !3134)
!3137 = !DILocalVariable(name: "s", scope: !3134, file: !934, line: 1758, type: !1999)
!3138 = !DILocation(line: 1758, column: 18, scope: !3134)
!3139 = !DILocation(line: 1758, column: 22, scope: !3134)
!3140 = !DILocation(line: 1758, column: 29, scope: !3134)
!3141 = !DILocation(line: 1760, column: 18, scope: !3134)
!3142 = !DILocation(line: 1760, column: 21, scope: !3134)
!3143 = !DILocation(line: 1760, column: 5, scope: !3134)
!3144 = !DILocation(line: 1762, column: 5, scope: !3134)
!3145 = !DILocation(line: 1591, column: 8, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !1659, file: !934, line: 1591, column: 8)
!3147 = !DILocation(line: 1591, column: 8, scope: !1659)
!3148 = !DILocation(line: 1592, column: 9, scope: !3146)
!3149 = !DILocation(line: 1594, column: 5, scope: !1659)
!3150 = !DILocation(line: 1595, column: 5, scope: !1659)
!3151 = !DILocation(line: 1596, column: 5, scope: !1659)
!3152 = !DILocation(line: 1597, column: 5, scope: !1659)
!3153 = !DILocation(line: 1598, column: 5, scope: !1659)
!3154 = !DILocation(line: 1600, column: 10, scope: !1659)
!3155 = !DILocation(line: 1601, column: 1, scope: !1659)
!3156 = !DILocation(line: 1601, column: 1, scope: !3157)
!3157 = !DILexicalBlockFile(scope: !1659, file: !934, discriminator: 1)
!3158 = distinct !DISubprogram(name: "qdm2_init_vlc", scope: !1664, file: !1664, line: 118, type: !1660, isLocal: true, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!3159 = !DILocation(line: 120, column: 39, scope: !3158)
!3160 = !DILocation(line: 120, column: 28, scope: !3158)
!3161 = !DILocation(line: 120, column: 25, scope: !3158)
!3162 = !DILocation(line: 121, column: 37, scope: !3158)
!3163 = !DILocation(line: 121, column: 56, scope: !3158)
!3164 = !DILocation(line: 121, column: 54, scope: !3158)
!3165 = !DILocation(line: 121, column: 35, scope: !3158)
!3166 = !DILocation(line: 122, column: 5, scope: !3158)
!3167 = !DILocation(line: 127, column: 38, scope: !3158)
!3168 = !DILocation(line: 127, column: 27, scope: !3158)
!3169 = !DILocation(line: 127, column: 24, scope: !3158)
!3170 = !DILocation(line: 128, column: 36, scope: !3158)
!3171 = !DILocation(line: 128, column: 55, scope: !3158)
!3172 = !DILocation(line: 128, column: 53, scope: !3158)
!3173 = !DILocation(line: 128, column: 34, scope: !3158)
!3174 = !DILocation(line: 129, column: 5, scope: !3158)
!3175 = !DILocation(line: 134, column: 37, scope: !3158)
!3176 = !DILocation(line: 134, column: 26, scope: !3158)
!3177 = !DILocation(line: 134, column: 23, scope: !3158)
!3178 = !DILocation(line: 135, column: 35, scope: !3158)
!3179 = !DILocation(line: 135, column: 54, scope: !3158)
!3180 = !DILocation(line: 135, column: 52, scope: !3158)
!3181 = !DILocation(line: 135, column: 33, scope: !3158)
!3182 = !DILocation(line: 136, column: 5, scope: !3158)
!3183 = !DILocation(line: 141, column: 47, scope: !3158)
!3184 = !DILocation(line: 141, column: 36, scope: !3158)
!3185 = !DILocation(line: 141, column: 33, scope: !3158)
!3186 = !DILocation(line: 142, column: 45, scope: !3158)
!3187 = !DILocation(line: 143, column: 45, scope: !3158)
!3188 = !DILocation(line: 142, column: 62, scope: !3158)
!3189 = !DILocation(line: 142, column: 43, scope: !3158)
!3190 = !DILocation(line: 144, column: 5, scope: !3158)
!3191 = !DILocation(line: 149, column: 43, scope: !3158)
!3192 = !DILocation(line: 149, column: 32, scope: !3158)
!3193 = !DILocation(line: 149, column: 29, scope: !3158)
!3194 = !DILocation(line: 150, column: 41, scope: !3158)
!3195 = !DILocation(line: 150, column: 60, scope: !3158)
!3196 = !DILocation(line: 150, column: 58, scope: !3158)
!3197 = !DILocation(line: 150, column: 39, scope: !3158)
!3198 = !DILocation(line: 151, column: 5, scope: !3158)
!3199 = !DILocation(line: 156, column: 44, scope: !3158)
!3200 = !DILocation(line: 156, column: 33, scope: !3158)
!3201 = !DILocation(line: 156, column: 30, scope: !3158)
!3202 = !DILocation(line: 157, column: 42, scope: !3158)
!3203 = !DILocation(line: 158, column: 42, scope: !3158)
!3204 = !DILocation(line: 157, column: 59, scope: !3158)
!3205 = !DILocation(line: 157, column: 40, scope: !3158)
!3206 = !DILocation(line: 159, column: 5, scope: !3158)
!3207 = !DILocation(line: 164, column: 46, scope: !3158)
!3208 = !DILocation(line: 164, column: 35, scope: !3158)
!3209 = !DILocation(line: 164, column: 32, scope: !3158)
!3210 = !DILocation(line: 165, column: 44, scope: !3158)
!3211 = !DILocation(line: 166, column: 44, scope: !3158)
!3212 = !DILocation(line: 165, column: 61, scope: !3158)
!3213 = !DILocation(line: 165, column: 42, scope: !3158)
!3214 = !DILocation(line: 167, column: 5, scope: !3158)
!3215 = !DILocation(line: 173, column: 21, scope: !3158)
!3216 = !DILocation(line: 173, column: 10, scope: !3158)
!3217 = !DILocation(line: 172, column: 38, scope: !3158)
!3218 = !DILocation(line: 174, column: 50, scope: !3158)
!3219 = !DILocation(line: 175, column: 50, scope: !3158)
!3220 = !DILocation(line: 174, column: 67, scope: !3158)
!3221 = !DILocation(line: 174, column: 48, scope: !3158)
!3222 = !DILocation(line: 176, column: 5, scope: !3158)
!3223 = !DILocation(line: 182, column: 21, scope: !3158)
!3224 = !DILocation(line: 182, column: 10, scope: !3158)
!3225 = !DILocation(line: 181, column: 38, scope: !3158)
!3226 = !DILocation(line: 183, column: 50, scope: !3158)
!3227 = !DILocation(line: 184, column: 50, scope: !3158)
!3228 = !DILocation(line: 183, column: 67, scope: !3158)
!3229 = !DILocation(line: 183, column: 48, scope: !3158)
!3230 = !DILocation(line: 185, column: 5, scope: !3158)
!3231 = !DILocation(line: 191, column: 21, scope: !3158)
!3232 = !DILocation(line: 191, column: 10, scope: !3158)
!3233 = !DILocation(line: 190, column: 38, scope: !3158)
!3234 = !DILocation(line: 192, column: 50, scope: !3158)
!3235 = !DILocation(line: 193, column: 50, scope: !3158)
!3236 = !DILocation(line: 192, column: 68, scope: !3158)
!3237 = !DILocation(line: 192, column: 48, scope: !3158)
!3238 = !DILocation(line: 194, column: 5, scope: !3158)
!3239 = !DILocation(line: 199, column: 40, scope: !3158)
!3240 = !DILocation(line: 199, column: 29, scope: !3158)
!3241 = !DILocation(line: 199, column: 26, scope: !3158)
!3242 = !DILocation(line: 200, column: 38, scope: !3158)
!3243 = !DILocation(line: 200, column: 58, scope: !3158)
!3244 = !DILocation(line: 200, column: 56, scope: !3158)
!3245 = !DILocation(line: 200, column: 36, scope: !3158)
!3246 = !DILocation(line: 201, column: 5, scope: !3158)
!3247 = !DILocation(line: 206, column: 40, scope: !3158)
!3248 = !DILocation(line: 206, column: 29, scope: !3158)
!3249 = !DILocation(line: 206, column: 26, scope: !3158)
!3250 = !DILocation(line: 207, column: 38, scope: !3158)
!3251 = !DILocation(line: 207, column: 58, scope: !3158)
!3252 = !DILocation(line: 207, column: 56, scope: !3158)
!3253 = !DILocation(line: 207, column: 36, scope: !3158)
!3254 = !DILocation(line: 208, column: 5, scope: !3158)
!3255 = !DILocation(line: 214, column: 21, scope: !3158)
!3256 = !DILocation(line: 214, column: 10, scope: !3158)
!3257 = !DILocation(line: 213, column: 38, scope: !3158)
!3258 = !DILocation(line: 215, column: 50, scope: !3158)
!3259 = !DILocation(line: 216, column: 50, scope: !3158)
!3260 = !DILocation(line: 215, column: 68, scope: !3158)
!3261 = !DILocation(line: 215, column: 48, scope: !3158)
!3262 = !DILocation(line: 217, column: 5, scope: !3158)
!3263 = !DILocation(line: 223, column: 21, scope: !3158)
!3264 = !DILocation(line: 223, column: 10, scope: !3158)
!3265 = !DILocation(line: 222, column: 38, scope: !3158)
!3266 = !DILocation(line: 224, column: 50, scope: !3158)
!3267 = !DILocation(line: 225, column: 50, scope: !3158)
!3268 = !DILocation(line: 224, column: 68, scope: !3158)
!3269 = !DILocation(line: 224, column: 48, scope: !3158)
!3270 = !DILocation(line: 226, column: 5, scope: !3158)
!3271 = !DILocation(line: 232, column: 21, scope: !3158)
!3272 = !DILocation(line: 232, column: 10, scope: !3158)
!3273 = !DILocation(line: 231, column: 38, scope: !3158)
!3274 = !DILocation(line: 233, column: 50, scope: !3158)
!3275 = !DILocation(line: 234, column: 50, scope: !3158)
!3276 = !DILocation(line: 233, column: 68, scope: !3158)
!3277 = !DILocation(line: 233, column: 48, scope: !3158)
!3278 = !DILocation(line: 235, column: 5, scope: !3158)
!3279 = !DILocation(line: 241, column: 21, scope: !3158)
!3280 = !DILocation(line: 241, column: 10, scope: !3158)
!3281 = !DILocation(line: 240, column: 38, scope: !3158)
!3282 = !DILocation(line: 242, column: 50, scope: !3158)
!3283 = !DILocation(line: 243, column: 50, scope: !3158)
!3284 = !DILocation(line: 242, column: 68, scope: !3158)
!3285 = !DILocation(line: 242, column: 48, scope: !3158)
!3286 = !DILocation(line: 244, column: 5, scope: !3158)
!3287 = !DILocation(line: 250, column: 21, scope: !3158)
!3288 = !DILocation(line: 250, column: 10, scope: !3158)
!3289 = !DILocation(line: 249, column: 38, scope: !3158)
!3290 = !DILocation(line: 251, column: 50, scope: !3158)
!3291 = !DILocation(line: 252, column: 50, scope: !3158)
!3292 = !DILocation(line: 251, column: 68, scope: !3158)
!3293 = !DILocation(line: 251, column: 48, scope: !3158)
!3294 = !DILocation(line: 253, column: 5, scope: !3158)
!3295 = !DILocation(line: 257, column: 1, scope: !3158)
!3296 = distinct !DISubprogram(name: "softclip_table_init", scope: !1664, file: !1664, line: 47, type: !1660, isLocal: true, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!3297 = !DILocalVariable(name: "i", scope: !3296, file: !1664, line: 48, type: !905)
!3298 = !DILocation(line: 48, column: 9, scope: !3296)
!3299 = !DILocalVariable(name: "dfl", scope: !3296, file: !1664, line: 49, type: !3300)
!3300 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!3301 = !DILocation(line: 49, column: 12, scope: !3296)
!3302 = !DILocalVariable(name: "delta", scope: !3296, file: !1664, line: 50, type: !910)
!3303 = !DILocation(line: 50, column: 11, scope: !3296)
!3304 = !DILocation(line: 50, column: 26, scope: !3296)
!3305 = !DILocation(line: 50, column: 25, scope: !3296)
!3306 = !DILocation(line: 50, column: 23, scope: !3296)
!3307 = !DILocation(line: 50, column: 19, scope: !3296)
!3308 = !DILocation(line: 51, column: 12, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3296, file: !1664, line: 51, column: 5)
!3310 = !DILocation(line: 51, column: 10, scope: !3309)
!3311 = !DILocation(line: 51, column: 17, scope: !3312)
!3312 = !DILexicalBlockFile(scope: !3313, file: !1664, discriminator: 1)
!3313 = distinct !DILexicalBlock(scope: !3309, file: !1664, line: 51, column: 5)
!3314 = !DILocation(line: 51, column: 19, scope: !3312)
!3315 = !DILocation(line: 51, column: 5, scope: !3312)
!3316 = !DILocation(line: 52, column: 55, scope: !3313)
!3317 = !DILocation(line: 52, column: 48, scope: !3313)
!3318 = !DILocation(line: 52, column: 59, scope: !3313)
!3319 = !DILocation(line: 52, column: 57, scope: !3313)
!3320 = !DILocation(line: 52, column: 44, scope: !3313)
!3321 = !DILocation(line: 52, column: 68, scope: !3313)
!3322 = !DILocation(line: 52, column: 66, scope: !3313)
!3323 = !DILocation(line: 52, column: 38, scope: !3313)
!3324 = !DILocation(line: 52, column: 73, scope: !3313)
!3325 = !DILocation(line: 52, column: 35, scope: !3313)
!3326 = !DILocation(line: 52, column: 29, scope: !3313)
!3327 = !DILocation(line: 52, column: 24, scope: !3313)
!3328 = !DILocation(line: 52, column: 9, scope: !3313)
!3329 = !DILocation(line: 52, column: 27, scope: !3313)
!3330 = !DILocation(line: 51, column: 41, scope: !3331)
!3331 = !DILexicalBlockFile(scope: !3313, file: !1664, discriminator: 2)
!3332 = !DILocation(line: 51, column: 5, scope: !3331)
!3333 = distinct !{!3333, !3334}
!3334 = !DILocation(line: 51, column: 5, scope: !3296)
!3335 = !DILocation(line: 53, column: 1, scope: !3296)
!3336 = distinct !DISubprogram(name: "rnd_table_init", scope: !1664, file: !1664, line: 57, type: !1660, isLocal: true, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!3337 = !DILocalVariable(name: "i", scope: !3336, file: !1664, line: 58, type: !905)
!3338 = !DILocation(line: 58, column: 9, scope: !3336)
!3339 = !DILocalVariable(name: "j", scope: !3336, file: !1664, line: 58, type: !905)
!3340 = !DILocation(line: 58, column: 11, scope: !3336)
!3341 = !DILocalVariable(name: "ldw", scope: !3336, file: !1664, line: 59, type: !924)
!3342 = !DILocation(line: 59, column: 14, scope: !3336)
!3343 = !DILocalVariable(name: "random_seed", scope: !3336, file: !1664, line: 60, type: !907)
!3344 = !DILocation(line: 60, column: 14, scope: !3336)
!3345 = !DILocalVariable(name: "delta", scope: !3336, file: !1664, line: 61, type: !910)
!3346 = !DILocation(line: 61, column: 11, scope: !3336)
!3347 = !DILocation(line: 62, column: 11, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3336, file: !1664, line: 62, column: 5)
!3349 = !DILocation(line: 62, column: 9, scope: !3348)
!3350 = !DILocation(line: 62, column: 16, scope: !3351)
!3351 = !DILexicalBlockFile(scope: !3352, file: !1664, discriminator: 1)
!3352 = distinct !DILexicalBlock(scope: !3348, file: !1664, line: 62, column: 5)
!3353 = !DILocation(line: 62, column: 18, scope: !3351)
!3354 = !DILocation(line: 62, column: 5, scope: !3351)
!3355 = !DILocation(line: 63, column: 23, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3352, file: !1664, line: 62, column: 31)
!3357 = !DILocation(line: 63, column: 35, scope: !3356)
!3358 = !DILocation(line: 63, column: 44, scope: !3356)
!3359 = !DILocation(line: 63, column: 21, scope: !3356)
!3360 = !DILocation(line: 64, column: 27, scope: !3356)
!3361 = !DILocation(line: 64, column: 53, scope: !3356)
!3362 = !DILocation(line: 64, column: 44, scope: !3356)
!3363 = !DILocation(line: 64, column: 65, scope: !3356)
!3364 = !DILocation(line: 64, column: 72, scope: !3356)
!3365 = !DILocation(line: 64, column: 35, scope: !3356)
!3366 = !DILocation(line: 64, column: 33, scope: !3356)
!3367 = !DILocation(line: 64, column: 85, scope: !3356)
!3368 = !DILocation(line: 64, column: 92, scope: !3356)
!3369 = !DILocation(line: 64, column: 26, scope: !3356)
!3370 = !DILocation(line: 64, column: 21, scope: !3356)
!3371 = !DILocation(line: 64, column: 9, scope: !3356)
!3372 = !DILocation(line: 64, column: 24, scope: !3356)
!3373 = !DILocation(line: 65, column: 5, scope: !3356)
!3374 = !DILocation(line: 62, column: 27, scope: !3375)
!3375 = !DILexicalBlockFile(scope: !3352, file: !1664, discriminator: 2)
!3376 = !DILocation(line: 62, column: 5, scope: !3375)
!3377 = distinct !{!3377, !3378}
!3378 = !DILocation(line: 62, column: 5, scope: !3336)
!3379 = !DILocation(line: 67, column: 12, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3336, file: !1664, line: 67, column: 5)
!3381 = !DILocation(line: 67, column: 10, scope: !3380)
!3382 = !DILocation(line: 67, column: 17, scope: !3383)
!3383 = !DILexicalBlockFile(scope: !3384, file: !1664, discriminator: 1)
!3384 = distinct !DILexicalBlock(scope: !3380, file: !1664, line: 67, column: 5)
!3385 = !DILocation(line: 67, column: 19, scope: !3383)
!3386 = !DILocation(line: 67, column: 5, scope: !3383)
!3387 = !DILocation(line: 68, column: 21, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3384, file: !1664, line: 67, column: 31)
!3389 = !DILocation(line: 69, column: 15, scope: !3388)
!3390 = !DILocation(line: 69, column: 13, scope: !3388)
!3391 = !DILocation(line: 70, column: 16, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3388, file: !1664, line: 70, column: 9)
!3393 = !DILocation(line: 70, column: 14, scope: !3392)
!3394 = !DILocation(line: 70, column: 21, scope: !3395)
!3395 = !DILexicalBlockFile(scope: !3396, file: !1664, discriminator: 1)
!3396 = distinct !DILexicalBlock(scope: !3392, file: !1664, line: 70, column: 9)
!3397 = !DILocation(line: 70, column: 23, scope: !3395)
!3398 = !DILocation(line: 70, column: 9, scope: !3395)
!3399 = !DILocation(line: 71, column: 42, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3396, file: !1664, line: 70, column: 33)
!3401 = !DILocation(line: 71, column: 48, scope: !3400)
!3402 = !DILocation(line: 71, column: 46, scope: !3400)
!3403 = !DILocation(line: 71, column: 37, scope: !3400)
!3404 = !DILocation(line: 71, column: 13, scope: !3400)
!3405 = !DILocation(line: 71, column: 34, scope: !3400)
!3406 = !DILocation(line: 71, column: 40, scope: !3400)
!3407 = !DILocation(line: 72, column: 20, scope: !3400)
!3408 = !DILocation(line: 72, column: 17, scope: !3400)
!3409 = !DILocation(line: 73, column: 25, scope: !3400)
!3410 = !DILocation(line: 74, column: 9, scope: !3400)
!3411 = !DILocation(line: 70, column: 29, scope: !3412)
!3412 = !DILexicalBlockFile(scope: !3396, file: !1664, discriminator: 2)
!3413 = !DILocation(line: 70, column: 9, scope: !3412)
!3414 = distinct !{!3414, !3415}
!3415 = !DILocation(line: 70, column: 9, scope: !3388)
!3416 = !DILocation(line: 75, column: 5, scope: !3388)
!3417 = !DILocation(line: 67, column: 27, scope: !3418)
!3418 = !DILexicalBlockFile(scope: !3384, file: !1664, discriminator: 2)
!3419 = !DILocation(line: 67, column: 5, scope: !3418)
!3420 = distinct !{!3420, !3421}
!3421 = !DILocation(line: 67, column: 5, scope: !3336)
!3422 = !DILocation(line: 76, column: 12, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3336, file: !1664, line: 76, column: 5)
!3424 = !DILocation(line: 76, column: 10, scope: !3423)
!3425 = !DILocation(line: 76, column: 17, scope: !3426)
!3426 = !DILexicalBlockFile(scope: !3427, file: !1664, discriminator: 1)
!3427 = distinct !DILexicalBlock(scope: !3423, file: !1664, line: 76, column: 5)
!3428 = !DILocation(line: 76, column: 19, scope: !3426)
!3429 = !DILocation(line: 76, column: 5, scope: !3426)
!3430 = !DILocation(line: 77, column: 21, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3427, file: !1664, line: 76, column: 31)
!3432 = !DILocation(line: 78, column: 15, scope: !3431)
!3433 = !DILocation(line: 78, column: 13, scope: !3431)
!3434 = !DILocation(line: 79, column: 16, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3431, file: !1664, line: 79, column: 9)
!3436 = !DILocation(line: 79, column: 14, scope: !3435)
!3437 = !DILocation(line: 79, column: 21, scope: !3438)
!3438 = !DILexicalBlockFile(scope: !3439, file: !1664, discriminator: 1)
!3439 = distinct !DILexicalBlock(scope: !3435, file: !1664, line: 79, column: 9)
!3440 = !DILocation(line: 79, column: 23, scope: !3438)
!3441 = !DILocation(line: 79, column: 9, scope: !3438)
!3442 = !DILocation(line: 80, column: 43, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3439, file: !1664, line: 79, column: 33)
!3444 = !DILocation(line: 80, column: 49, scope: !3443)
!3445 = !DILocation(line: 80, column: 47, scope: !3443)
!3446 = !DILocation(line: 80, column: 38, scope: !3443)
!3447 = !DILocation(line: 80, column: 13, scope: !3443)
!3448 = !DILocation(line: 80, column: 35, scope: !3443)
!3449 = !DILocation(line: 80, column: 41, scope: !3443)
!3450 = !DILocation(line: 81, column: 20, scope: !3443)
!3451 = !DILocation(line: 81, column: 17, scope: !3443)
!3452 = !DILocation(line: 82, column: 25, scope: !3443)
!3453 = !DILocation(line: 83, column: 9, scope: !3443)
!3454 = !DILocation(line: 79, column: 29, scope: !3455)
!3455 = !DILexicalBlockFile(scope: !3439, file: !1664, discriminator: 2)
!3456 = !DILocation(line: 79, column: 9, scope: !3455)
!3457 = distinct !{!3457, !3458}
!3458 = !DILocation(line: 79, column: 9, scope: !3431)
!3459 = !DILocation(line: 84, column: 5, scope: !3431)
!3460 = !DILocation(line: 76, column: 27, scope: !3461)
!3461 = !DILexicalBlockFile(scope: !3427, file: !1664, discriminator: 2)
!3462 = !DILocation(line: 76, column: 5, scope: !3461)
!3463 = distinct !{!3463, !3464}
!3464 = !DILocation(line: 76, column: 5, scope: !3336)
!3465 = !DILocation(line: 85, column: 1, scope: !3336)
!3466 = distinct !DISubprogram(name: "init_noise_samples", scope: !1664, file: !1664, line: 88, type: !1660, isLocal: true, isDefinition: true, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!3467 = !DILocalVariable(name: "i", scope: !3466, file: !1664, line: 89, type: !905)
!3468 = !DILocation(line: 89, column: 9, scope: !3466)
!3469 = !DILocalVariable(name: "random_seed", scope: !3466, file: !1664, line: 90, type: !906)
!3470 = !DILocation(line: 90, column: 14, scope: !3466)
!3471 = !DILocalVariable(name: "delta", scope: !3466, file: !1664, line: 91, type: !910)
!3472 = !DILocation(line: 91, column: 11, scope: !3466)
!3473 = !DILocation(line: 92, column: 12, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3466, file: !1664, line: 92, column: 5)
!3475 = !DILocation(line: 92, column: 10, scope: !3474)
!3476 = !DILocation(line: 92, column: 17, scope: !3477)
!3477 = !DILexicalBlockFile(scope: !3478, file: !1664, discriminator: 1)
!3478 = distinct !DILexicalBlock(scope: !3474, file: !1664, line: 92, column: 5)
!3479 = !DILocation(line: 92, column: 19, scope: !3477)
!3480 = !DILocation(line: 92, column: 5, scope: !3477)
!3481 = !DILocation(line: 93, column: 23, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3478, file: !1664, line: 92, column: 30)
!3483 = !DILocation(line: 93, column: 35, scope: !3482)
!3484 = !DILocation(line: 93, column: 44, scope: !3482)
!3485 = !DILocation(line: 93, column: 21, scope: !3482)
!3486 = !DILocation(line: 94, column: 29, scope: !3482)
!3487 = !DILocation(line: 94, column: 46, scope: !3482)
!3488 = !DILocation(line: 94, column: 58, scope: !3482)
!3489 = !DILocation(line: 94, column: 65, scope: !3482)
!3490 = !DILocation(line: 94, column: 37, scope: !3482)
!3491 = !DILocation(line: 94, column: 35, scope: !3482)
!3492 = !DILocation(line: 94, column: 79, scope: !3482)
!3493 = !DILocation(line: 94, column: 28, scope: !3482)
!3494 = !DILocation(line: 94, column: 23, scope: !3482)
!3495 = !DILocation(line: 94, column: 9, scope: !3482)
!3496 = !DILocation(line: 94, column: 26, scope: !3482)
!3497 = !DILocation(line: 95, column: 5, scope: !3482)
!3498 = !DILocation(line: 92, column: 26, scope: !3499)
!3499 = !DILexicalBlockFile(scope: !3478, file: !1664, discriminator: 2)
!3500 = !DILocation(line: 92, column: 5, scope: !3499)
!3501 = distinct !{!3501, !3502}
!3502 = !DILocation(line: 92, column: 5, scope: !3466)
!3503 = !DILocation(line: 96, column: 1, scope: !3466)
!3504 = distinct !DISubprogram(name: "av_bswap64", scope: !1885, file: !1885, line: 73, type: !3505, isLocal: true, isDefinition: true, scopeLine: 74, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!3505 = !DISubroutineType(types: !3506)
!3506 = !{!907, !907}
!3507 = !DILocation(line: 66, column: 98, scope: !1884, inlinedAt: !3508)
!3508 = distinct !DILocation(line: 75, column: 44, scope: !3509)
!3509 = !DILexicalBlockFile(scope: !3504, file: !1885, discriminator: 1)
!3510 = !DILocation(line: 66, column: 98, scope: !1884, inlinedAt: !3511)
!3511 = distinct !DILocation(line: 75, column: 22, scope: !3504)
!3512 = !DILocalVariable(name: "x", arg: 1, scope: !3504, file: !1885, line: 73, type: !907)
!3513 = !DILocation(line: 73, column: 67, scope: !3504)
!3514 = !DILocation(line: 75, column: 33, scope: !3504)
!3515 = !DILocation(line: 75, column: 22, scope: !3504)
!3516 = !DILocation(line: 68, column: 16, scope: !1884, inlinedAt: !3511)
!3517 = !DILocation(line: 68, column: 19, scope: !1884, inlinedAt: !3511)
!3518 = !DILocation(line: 68, column: 24, scope: !1884, inlinedAt: !3511)
!3519 = !DILocation(line: 68, column: 38, scope: !1884, inlinedAt: !3511)
!3520 = !DILocation(line: 68, column: 41, scope: !1884, inlinedAt: !3511)
!3521 = !DILocation(line: 68, column: 46, scope: !1884, inlinedAt: !3511)
!3522 = !DILocation(line: 68, column: 34, scope: !1884, inlinedAt: !3511)
!3523 = !DILocation(line: 68, column: 57, scope: !1884, inlinedAt: !3511)
!3524 = !DILocation(line: 68, column: 69, scope: !1884, inlinedAt: !3511)
!3525 = !DILocation(line: 68, column: 72, scope: !1884, inlinedAt: !3511)
!3526 = !DILocation(line: 68, column: 79, scope: !1884, inlinedAt: !3511)
!3527 = !DILocation(line: 68, column: 84, scope: !1884, inlinedAt: !3511)
!3528 = !DILocation(line: 68, column: 99, scope: !1884, inlinedAt: !3511)
!3529 = !DILocation(line: 68, column: 102, scope: !1884, inlinedAt: !3511)
!3530 = !DILocation(line: 68, column: 109, scope: !1884, inlinedAt: !3511)
!3531 = !DILocation(line: 68, column: 114, scope: !1884, inlinedAt: !3511)
!3532 = !DILocation(line: 68, column: 94, scope: !1884, inlinedAt: !3511)
!3533 = !DILocation(line: 68, column: 63, scope: !1884, inlinedAt: !3511)
!3534 = !DILocation(line: 75, column: 12, scope: !3504)
!3535 = !DILocation(line: 75, column: 36, scope: !3504)
!3536 = !DILocation(line: 75, column: 55, scope: !3504)
!3537 = !DILocation(line: 75, column: 57, scope: !3504)
!3538 = !DILocation(line: 75, column: 44, scope: !3509)
!3539 = !DILocation(line: 68, column: 16, scope: !1884, inlinedAt: !3508)
!3540 = !DILocation(line: 68, column: 19, scope: !1884, inlinedAt: !3508)
!3541 = !DILocation(line: 68, column: 24, scope: !1884, inlinedAt: !3508)
!3542 = !DILocation(line: 68, column: 38, scope: !1884, inlinedAt: !3508)
!3543 = !DILocation(line: 68, column: 41, scope: !1884, inlinedAt: !3508)
!3544 = !DILocation(line: 68, column: 46, scope: !1884, inlinedAt: !3508)
!3545 = !DILocation(line: 68, column: 34, scope: !1884, inlinedAt: !3508)
!3546 = !DILocation(line: 68, column: 57, scope: !1884, inlinedAt: !3508)
!3547 = !DILocation(line: 68, column: 69, scope: !1884, inlinedAt: !3508)
!3548 = !DILocation(line: 68, column: 72, scope: !1884, inlinedAt: !3508)
!3549 = !DILocation(line: 68, column: 79, scope: !1884, inlinedAt: !3508)
!3550 = !DILocation(line: 68, column: 84, scope: !1884, inlinedAt: !3508)
!3551 = !DILocation(line: 68, column: 99, scope: !1884, inlinedAt: !3508)
!3552 = !DILocation(line: 68, column: 102, scope: !1884, inlinedAt: !3508)
!3553 = !DILocation(line: 68, column: 109, scope: !1884, inlinedAt: !3508)
!3554 = !DILocation(line: 68, column: 114, scope: !1884, inlinedAt: !3508)
!3555 = !DILocation(line: 68, column: 94, scope: !1884, inlinedAt: !3508)
!3556 = !DILocation(line: 68, column: 63, scope: !1884, inlinedAt: !3508)
!3557 = !DILocation(line: 75, column: 44, scope: !3504)
!3558 = !DILocation(line: 75, column: 42, scope: !3504)
!3559 = !DILocation(line: 75, column: 5, scope: !3504)
!3560 = distinct !DISubprogram(name: "qdm2_decode", scope: !934, file: !934, line: 1765, type: !3561, isLocal: true, isDefinition: true, scopeLine: 1766, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{!905, !1999, !1469, !925}
!3563 = !DILocalVariable(name: "q", arg: 1, scope: !3560, file: !934, line: 1765, type: !1999)
!3564 = !DILocation(line: 1765, column: 37, scope: !3560)
!3565 = !DILocalVariable(name: "in", arg: 2, scope: !3560, file: !934, line: 1765, type: !1469)
!3566 = !DILocation(line: 1765, column: 55, scope: !3560)
!3567 = !DILocalVariable(name: "out", arg: 3, scope: !3560, file: !934, line: 1765, type: !925)
!3568 = !DILocation(line: 1765, column: 68, scope: !3560)
!3569 = !DILocalVariable(name: "ch", scope: !3560, file: !934, line: 1767, type: !905)
!3570 = !DILocation(line: 1767, column: 9, scope: !3560)
!3571 = !DILocalVariable(name: "i", scope: !3560, file: !934, line: 1767, type: !905)
!3572 = !DILocation(line: 1767, column: 13, scope: !3560)
!3573 = !DILocalVariable(name: "frame_size", scope: !3560, file: !934, line: 1768, type: !960)
!3574 = !DILocation(line: 1768, column: 15, scope: !3560)
!3575 = !DILocation(line: 1768, column: 29, scope: !3560)
!3576 = !DILocation(line: 1768, column: 32, scope: !3560)
!3577 = !DILocation(line: 1768, column: 45, scope: !3560)
!3578 = !DILocation(line: 1768, column: 48, scope: !3560)
!3579 = !DILocation(line: 1768, column: 43, scope: !3560)
!3580 = !DILocation(line: 1770, column: 18, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3560, file: !934, line: 1770, column: 8)
!3582 = !DILocation(line: 1770, column: 8, scope: !3581)
!3583 = !DILocation(line: 1770, column: 29, scope: !3581)
!3584 = !DILocation(line: 1770, column: 8, scope: !3560)
!3585 = !DILocation(line: 1771, column: 9, scope: !3581)
!3586 = !DILocation(line: 1774, column: 26, scope: !3560)
!3587 = !DILocation(line: 1774, column: 5, scope: !3560)
!3588 = !DILocation(line: 1774, column: 8, scope: !3560)
!3589 = !DILocation(line: 1774, column: 24, scope: !3560)
!3590 = !DILocation(line: 1775, column: 26, scope: !3560)
!3591 = !DILocation(line: 1775, column: 29, scope: !3560)
!3592 = !DILocation(line: 1775, column: 5, scope: !3560)
!3593 = !DILocation(line: 1775, column: 8, scope: !3560)
!3594 = !DILocation(line: 1775, column: 24, scope: !3560)
!3595 = !DILocation(line: 1778, column: 13, scope: !3560)
!3596 = !DILocation(line: 1778, column: 16, scope: !3560)
!3597 = !DILocation(line: 1778, column: 5, scope: !3560)
!3598 = !DILocation(line: 1778, column: 49, scope: !3560)
!3599 = !DILocation(line: 1778, column: 32, scope: !3560)
!3600 = !DILocation(line: 1778, column: 35, scope: !3560)
!3601 = !DILocation(line: 1778, column: 62, scope: !3560)
!3602 = !DILocation(line: 1778, column: 73, scope: !3560)
!3603 = !DILocation(line: 1779, column: 30, scope: !3560)
!3604 = !DILocation(line: 1779, column: 13, scope: !3560)
!3605 = !DILocation(line: 1779, column: 16, scope: !3560)
!3606 = !DILocation(line: 1779, column: 5, scope: !3560)
!3607 = !DILocation(line: 1779, column: 46, scope: !3560)
!3608 = !DILocation(line: 1779, column: 57, scope: !3560)
!3609 = !DILocation(line: 1782, column: 9, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3560, file: !934, line: 1782, column: 9)
!3611 = !DILocation(line: 1782, column: 12, scope: !3610)
!3612 = !DILocation(line: 1782, column: 23, scope: !3610)
!3613 = !DILocation(line: 1782, column: 9, scope: !3560)
!3614 = !DILocation(line: 1783, column: 9, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3610, file: !934, line: 1782, column: 29)
!3616 = !DILocation(line: 1783, column: 12, scope: !3615)
!3617 = !DILocation(line: 1783, column: 23, scope: !3615)
!3618 = !DILocation(line: 1784, column: 9, scope: !3615)
!3619 = !DILocation(line: 1785, column: 33, scope: !3615)
!3620 = !DILocation(line: 1785, column: 9, scope: !3615)
!3621 = !DILocation(line: 1786, column: 5, scope: !3615)
!3622 = !DILocation(line: 1789, column: 10, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3560, file: !934, line: 1789, column: 9)
!3624 = !DILocation(line: 1789, column: 13, scope: !3623)
!3625 = !DILocation(line: 1789, column: 9, scope: !3560)
!3626 = !DILocation(line: 1790, column: 13, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3628, file: !934, line: 1790, column: 13)
!3628 = distinct !DILexicalBlock(scope: !3623, file: !934, line: 1789, column: 25)
!3629 = !DILocation(line: 1790, column: 16, scope: !3627)
!3630 = !DILocation(line: 1790, column: 27, scope: !3627)
!3631 = !DILocation(line: 1790, column: 13, scope: !3628)
!3632 = !DILocation(line: 1791, column: 37, scope: !3627)
!3633 = !DILocation(line: 1791, column: 13, scope: !3627)
!3634 = !DILocation(line: 1793, column: 35, scope: !3628)
!3635 = !DILocation(line: 1793, column: 38, scope: !3628)
!3636 = !DILocation(line: 1793, column: 41, scope: !3628)
!3637 = !DILocation(line: 1793, column: 9, scope: !3628)
!3638 = !DILocation(line: 1794, column: 5, scope: !3628)
!3639 = !DILocation(line: 1797, column: 13, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3560, file: !934, line: 1797, column: 5)
!3641 = !DILocation(line: 1797, column: 10, scope: !3640)
!3642 = !DILocation(line: 1797, column: 18, scope: !3643)
!3643 = !DILexicalBlockFile(scope: !3644, file: !934, discriminator: 1)
!3644 = distinct !DILexicalBlock(scope: !3640, file: !934, line: 1797, column: 5)
!3645 = !DILocation(line: 1797, column: 23, scope: !3643)
!3646 = !DILocation(line: 1797, column: 26, scope: !3643)
!3647 = !DILocation(line: 1797, column: 21, scope: !3643)
!3648 = !DILocation(line: 1797, column: 5, scope: !3643)
!3649 = !DILocation(line: 1798, column: 28, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3644, file: !934, line: 1797, column: 42)
!3651 = !DILocation(line: 1798, column: 31, scope: !3650)
!3652 = !DILocation(line: 1798, column: 35, scope: !3650)
!3653 = !DILocation(line: 1798, column: 38, scope: !3650)
!3654 = !DILocation(line: 1798, column: 9, scope: !3650)
!3655 = !DILocation(line: 1800, column: 14, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3650, file: !934, line: 1800, column: 13)
!3657 = !DILocation(line: 1800, column: 17, scope: !3656)
!3658 = !DILocation(line: 1800, column: 28, scope: !3656)
!3659 = !DILocation(line: 1800, column: 31, scope: !3660)
!3660 = !DILexicalBlockFile(scope: !3656, file: !934, discriminator: 1)
!3661 = !DILocation(line: 1800, column: 34, scope: !3660)
!3662 = !DILocation(line: 1800, column: 55, scope: !3660)
!3663 = !DILocation(line: 1800, column: 13, scope: !3660)
!3664 = !DILocation(line: 1801, column: 13, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3656, file: !934, line: 1800, column: 63)
!3666 = !DILocation(line: 1802, column: 13, scope: !3665)
!3667 = !DILocation(line: 1804, column: 5, scope: !3650)
!3668 = !DILocation(line: 1797, column: 38, scope: !3669)
!3669 = !DILexicalBlockFile(scope: !3644, file: !934, discriminator: 2)
!3670 = !DILocation(line: 1797, column: 5, scope: !3669)
!3671 = distinct !{!3671, !3672}
!3672 = !DILocation(line: 1797, column: 5, scope: !3560)
!3673 = !DILocation(line: 1807, column: 10, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3560, file: !934, line: 1807, column: 9)
!3675 = !DILocation(line: 1807, column: 13, scope: !3674)
!3676 = !DILocation(line: 1807, column: 24, scope: !3674)
!3677 = !DILocation(line: 1807, column: 27, scope: !3678)
!3678 = !DILexicalBlockFile(scope: !3674, file: !934, discriminator: 1)
!3679 = !DILocation(line: 1807, column: 30, scope: !3678)
!3680 = !DILocation(line: 1807, column: 9, scope: !3678)
!3681 = !DILocation(line: 1808, column: 31, scope: !3674)
!3682 = !DILocation(line: 1808, column: 34, scope: !3674)
!3683 = !DILocation(line: 1808, column: 37, scope: !3674)
!3684 = !DILocation(line: 1808, column: 9, scope: !3674)
!3685 = !DILocation(line: 1810, column: 22, scope: !3560)
!3686 = !DILocation(line: 1810, column: 25, scope: !3560)
!3687 = !DILocation(line: 1810, column: 36, scope: !3560)
!3688 = !DILocation(line: 1810, column: 41, scope: !3560)
!3689 = !DILocation(line: 1810, column: 5, scope: !3560)
!3690 = !DILocation(line: 1810, column: 8, scope: !3560)
!3691 = !DILocation(line: 1810, column: 19, scope: !3560)
!3692 = !DILocation(line: 1813, column: 12, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3560, file: !934, line: 1813, column: 5)
!3694 = !DILocation(line: 1813, column: 10, scope: !3693)
!3695 = !DILocation(line: 1813, column: 17, scope: !3696)
!3696 = !DILexicalBlockFile(scope: !3697, file: !934, discriminator: 1)
!3697 = distinct !DILexicalBlock(scope: !3693, file: !934, line: 1813, column: 5)
!3698 = !DILocation(line: 1813, column: 21, scope: !3696)
!3699 = !DILocation(line: 1813, column: 19, scope: !3696)
!3700 = !DILocation(line: 1813, column: 5, scope: !3696)
!3701 = !DILocalVariable(name: "value", scope: !3702, file: !934, line: 1814, type: !905)
!3702 = distinct !DILexicalBlock(scope: !3697, file: !934, line: 1813, column: 38)
!3703 = !DILocation(line: 1814, column: 13, scope: !3702)
!3704 = !DILocation(line: 1814, column: 43, scope: !3702)
!3705 = !DILocation(line: 1814, column: 26, scope: !3702)
!3706 = !DILocation(line: 1814, column: 29, scope: !3702)
!3707 = !DILocation(line: 1814, column: 21, scope: !3702)
!3708 = !DILocation(line: 1816, column: 13, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3702, file: !934, line: 1816, column: 13)
!3710 = !DILocation(line: 1816, column: 19, scope: !3709)
!3711 = !DILocation(line: 1816, column: 13, scope: !3702)
!3712 = !DILocation(line: 1817, column: 22, scope: !3709)
!3713 = !DILocation(line: 1817, column: 28, scope: !3709)
!3714 = !DILocation(line: 1817, column: 21, scope: !3709)
!3715 = !DILocation(line: 1817, column: 21, scope: !3716)
!3716 = !DILexicalBlockFile(scope: !3709, file: !934, discriminator: 1)
!3717 = !DILocation(line: 1817, column: 63, scope: !3718)
!3718 = !DILexicalBlockFile(scope: !3709, file: !934, discriminator: 2)
!3719 = !DILocation(line: 1817, column: 69, scope: !3718)
!3720 = !DILocation(line: 1817, column: 47, scope: !3718)
!3721 = !DILocation(line: 1817, column: 21, scope: !3718)
!3722 = !DILocation(line: 1817, column: 21, scope: !3723)
!3723 = !DILexicalBlockFile(scope: !3709, file: !934, discriminator: 3)
!3724 = !DILocation(line: 1817, column: 19, scope: !3723)
!3725 = !DILocation(line: 1817, column: 13, scope: !3723)
!3726 = !DILocation(line: 1818, column: 18, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3709, file: !934, line: 1818, column: 18)
!3728 = !DILocation(line: 1818, column: 24, scope: !3727)
!3729 = !DILocation(line: 1818, column: 18, scope: !3709)
!3730 = !DILocation(line: 1819, column: 22, scope: !3727)
!3731 = !DILocation(line: 1819, column: 28, scope: !3727)
!3732 = !DILocation(line: 1819, column: 21, scope: !3727)
!3733 = !DILocation(line: 1819, column: 21, scope: !3734)
!3734 = !DILexicalBlockFile(scope: !3727, file: !934, discriminator: 1)
!3735 = !DILocation(line: 1819, column: 66, scope: !3736)
!3736 = !DILexicalBlockFile(scope: !3727, file: !934, discriminator: 2)
!3737 = !DILocation(line: 1819, column: 65, scope: !3736)
!3738 = !DILocation(line: 1819, column: 72, scope: !3736)
!3739 = !DILocation(line: 1819, column: 50, scope: !3736)
!3740 = !DILocation(line: 1819, column: 49, scope: !3736)
!3741 = !DILocation(line: 1819, column: 21, scope: !3736)
!3742 = !DILocation(line: 1819, column: 21, scope: !3743)
!3743 = !DILexicalBlockFile(scope: !3727, file: !934, discriminator: 3)
!3744 = !DILocation(line: 1819, column: 19, scope: !3743)
!3745 = !DILocation(line: 1819, column: 13, scope: !3743)
!3746 = !DILocation(line: 1821, column: 18, scope: !3702)
!3747 = !DILocation(line: 1821, column: 13, scope: !3702)
!3748 = !DILocation(line: 1821, column: 9, scope: !3702)
!3749 = !DILocation(line: 1821, column: 16, scope: !3702)
!3750 = !DILocation(line: 1822, column: 5, scope: !3702)
!3751 = !DILocation(line: 1813, column: 34, scope: !3752)
!3752 = !DILexicalBlockFile(scope: !3697, file: !934, discriminator: 2)
!3753 = !DILocation(line: 1813, column: 5, scope: !3752)
!3754 = distinct !{!3754, !3755}
!3755 = !DILocation(line: 1813, column: 5, scope: !3560)
!3756 = !DILocation(line: 1824, column: 5, scope: !3560)
!3757 = !DILocation(line: 1825, column: 1, scope: !3560)
!3758 = distinct !DISubprogram(name: "qdm2_decode_super_block", scope: !934, file: !934, line: 1113, type: !3759, isLocal: true, isDefinition: true, scopeLine: 1114, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{null, !1999}
!3761 = !DILocalVariable(name: "q", arg: 1, scope: !3758, file: !934, line: 1113, type: !1999)
!3762 = !DILocation(line: 1113, column: 50, scope: !3758)
!3763 = !DILocalVariable(name: "gb", scope: !3758, file: !934, line: 1115, type: !3764)
!3764 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !3765, line: 70, baseType: !3766)
!3765 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !3765, line: 61, size: 256, align: 64, elements: !3767)
!3767 = !{!3768, !3769, !3770, !3771, !3772}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !3766, file: !3765, line: 62, baseType: !1469, size: 64, align: 64)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !3766, file: !3765, line: 62, baseType: !1469, size: 64, align: 64, offset: 64)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3766, file: !3765, line: 67, baseType: !905, size: 32, align: 32, offset: 128)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !3766, file: !3765, line: 68, baseType: !905, size: 32, align: 32, offset: 160)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !3766, file: !3765, line: 69, baseType: !905, size: 32, align: 32, offset: 192)
!3773 = !DILocation(line: 1115, column: 19, scope: !3758)
!3774 = !DILocalVariable(name: "header", scope: !3758, file: !934, line: 1116, type: !2017)
!3775 = !DILocation(line: 1116, column: 19, scope: !3758)
!3776 = !DILocalVariable(name: "packet", scope: !3758, file: !934, line: 1116, type: !2030)
!3777 = !DILocation(line: 1116, column: 28, scope: !3758)
!3778 = !DILocalVariable(name: "i", scope: !3758, file: !934, line: 1117, type: !905)
!3779 = !DILocation(line: 1117, column: 9, scope: !3758)
!3780 = !DILocalVariable(name: "packet_bytes", scope: !3758, file: !934, line: 1117, type: !905)
!3781 = !DILocation(line: 1117, column: 12, scope: !3758)
!3782 = !DILocalVariable(name: "sub_packet_size", scope: !3758, file: !934, line: 1117, type: !905)
!3783 = !DILocation(line: 1117, column: 26, scope: !3758)
!3784 = !DILocalVariable(name: "sub_packets_D", scope: !3758, file: !934, line: 1117, type: !905)
!3785 = !DILocation(line: 1117, column: 43, scope: !3758)
!3786 = !DILocalVariable(name: "next_index", scope: !3758, file: !934, line: 1118, type: !906)
!3787 = !DILocation(line: 1118, column: 18, scope: !3758)
!3788 = !DILocation(line: 1120, column: 12, scope: !3758)
!3789 = !DILocation(line: 1120, column: 15, scope: !3758)
!3790 = !DILocation(line: 1120, column: 5, scope: !3758)
!3791 = !DILocation(line: 1121, column: 12, scope: !3758)
!3792 = !DILocation(line: 1121, column: 15, scope: !3758)
!3793 = !DILocation(line: 1121, column: 5, scope: !3758)
!3794 = !DILocation(line: 1122, column: 12, scope: !3758)
!3795 = !DILocation(line: 1122, column: 15, scope: !3758)
!3796 = !DILocation(line: 1122, column: 5, scope: !3758)
!3797 = !DILocation(line: 1124, column: 5, scope: !3758)
!3798 = !DILocation(line: 1124, column: 8, scope: !3758)
!3799 = !DILocation(line: 1124, column: 22, scope: !3758)
!3800 = !DILocation(line: 1125, column: 19, scope: !3758)
!3801 = !DILocation(line: 1127, column: 30, scope: !3758)
!3802 = !DILocation(line: 1127, column: 5, scope: !3758)
!3803 = !DILocation(line: 1129, column: 24, scope: !3758)
!3804 = !DILocation(line: 1129, column: 27, scope: !3758)
!3805 = !DILocation(line: 1129, column: 44, scope: !3758)
!3806 = !DILocation(line: 1129, column: 47, scope: !3758)
!3807 = !DILocation(line: 1129, column: 63, scope: !3758)
!3808 = !DILocation(line: 1129, column: 5, scope: !3758)
!3809 = !DILocation(line: 1130, column: 5, scope: !3758)
!3810 = !DILocation(line: 1132, column: 16, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3758, file: !934, line: 1132, column: 9)
!3812 = !DILocation(line: 1132, column: 21, scope: !3811)
!3813 = !DILocation(line: 1132, column: 25, scope: !3811)
!3814 = !DILocation(line: 1132, column: 35, scope: !3815)
!3815 = !DILexicalBlockFile(scope: !3811, file: !934, discriminator: 1)
!3816 = !DILocation(line: 1132, column: 40, scope: !3815)
!3817 = !DILocation(line: 1132, column: 9, scope: !3815)
!3818 = !DILocation(line: 1133, column: 9, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3811, file: !934, line: 1132, column: 46)
!3820 = !DILocation(line: 1133, column: 12, scope: !3819)
!3821 = !DILocation(line: 1133, column: 23, scope: !3819)
!3822 = !DILocation(line: 1134, column: 9, scope: !3819)
!3823 = !DILocation(line: 1135, column: 9, scope: !3819)
!3824 = !DILocation(line: 1138, column: 37, scope: !3758)
!3825 = !DILocation(line: 1138, column: 42, scope: !3758)
!3826 = !DILocation(line: 1138, column: 47, scope: !3758)
!3827 = !DILocation(line: 1138, column: 57, scope: !3828)
!3828 = !DILexicalBlockFile(scope: !3758, file: !934, discriminator: 1)
!3829 = !DILocation(line: 1138, column: 62, scope: !3828)
!3830 = !DILocation(line: 1138, column: 47, scope: !3828)
!3831 = !DILocation(line: 1138, column: 47, scope: !3832)
!3832 = !DILexicalBlockFile(scope: !3758, file: !934, discriminator: 2)
!3833 = !DILocation(line: 1138, column: 5, scope: !3832)
!3834 = !DILocation(line: 1138, column: 8, scope: !3832)
!3835 = !DILocation(line: 1138, column: 27, scope: !3832)
!3836 = !DILocation(line: 1139, column: 21, scope: !3758)
!3837 = !DILocation(line: 1139, column: 24, scope: !3758)
!3838 = !DILocation(line: 1139, column: 42, scope: !3758)
!3839 = !DILocation(line: 1139, column: 62, scope: !3758)
!3840 = !DILocation(line: 1139, column: 40, scope: !3758)
!3841 = !DILocation(line: 1139, column: 18, scope: !3758)
!3842 = !DILocation(line: 1141, column: 31, scope: !3758)
!3843 = !DILocation(line: 1141, column: 44, scope: !3758)
!3844 = !DILocation(line: 1141, column: 49, scope: !3758)
!3845 = !DILocation(line: 1141, column: 5, scope: !3758)
!3846 = !DILocation(line: 1143, column: 16, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3758, file: !934, line: 1143, column: 9)
!3848 = !DILocation(line: 1143, column: 21, scope: !3847)
!3849 = !DILocation(line: 1143, column: 26, scope: !3847)
!3850 = !DILocation(line: 1143, column: 36, scope: !3851)
!3851 = !DILexicalBlockFile(scope: !3847, file: !934, discriminator: 1)
!3852 = !DILocation(line: 1143, column: 41, scope: !3851)
!3853 = !DILocation(line: 1143, column: 46, scope: !3851)
!3854 = !DILocation(line: 1143, column: 56, scope: !3855)
!3855 = !DILexicalBlockFile(scope: !3847, file: !934, discriminator: 2)
!3856 = !DILocation(line: 1143, column: 61, scope: !3855)
!3857 = !DILocation(line: 1143, column: 9, scope: !3855)
!3858 = !DILocalVariable(name: "csum", scope: !3859, file: !934, line: 1144, type: !905)
!3859 = distinct !DILexicalBlock(scope: !3847, file: !934, line: 1143, column: 67)
!3860 = !DILocation(line: 1144, column: 13, scope: !3859)
!3861 = !DILocation(line: 1144, column: 26, scope: !3859)
!3862 = !DILocation(line: 1144, column: 24, scope: !3859)
!3863 = !DILocation(line: 1145, column: 21, scope: !3859)
!3864 = !DILocation(line: 1145, column: 19, scope: !3859)
!3865 = !DILocation(line: 1145, column: 14, scope: !3859)
!3866 = !DILocation(line: 1147, column: 37, scope: !3859)
!3867 = !DILocation(line: 1147, column: 40, scope: !3859)
!3868 = !DILocation(line: 1147, column: 57, scope: !3859)
!3869 = !DILocation(line: 1147, column: 60, scope: !3859)
!3870 = !DILocation(line: 1147, column: 75, scope: !3859)
!3871 = !DILocation(line: 1147, column: 16, scope: !3859)
!3872 = !DILocation(line: 1147, column: 14, scope: !3859)
!3873 = !DILocation(line: 1149, column: 13, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3859, file: !934, line: 1149, column: 13)
!3875 = !DILocation(line: 1149, column: 18, scope: !3874)
!3876 = !DILocation(line: 1149, column: 13, scope: !3859)
!3877 = !DILocation(line: 1150, column: 13, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3874, file: !934, line: 1149, column: 24)
!3879 = !DILocation(line: 1150, column: 16, scope: !3878)
!3880 = !DILocation(line: 1150, column: 27, scope: !3878)
!3881 = !DILocation(line: 1151, column: 13, scope: !3878)
!3882 = !DILocation(line: 1152, column: 13, scope: !3878)
!3883 = !DILocation(line: 1154, column: 5, scope: !3859)
!3884 = !DILocation(line: 1156, column: 5, scope: !3758)
!3885 = !DILocation(line: 1156, column: 8, scope: !3758)
!3886 = !DILocation(line: 1156, column: 29, scope: !3758)
!3887 = !DILocation(line: 1156, column: 36, scope: !3758)
!3888 = !DILocation(line: 1157, column: 5, scope: !3758)
!3889 = !DILocation(line: 1157, column: 8, scope: !3758)
!3890 = !DILocation(line: 1157, column: 29, scope: !3758)
!3891 = !DILocation(line: 1157, column: 36, scope: !3758)
!3892 = !DILocation(line: 1159, column: 12, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3758, file: !934, line: 1159, column: 5)
!3894 = !DILocation(line: 1159, column: 10, scope: !3893)
!3895 = !DILocation(line: 1159, column: 17, scope: !3896)
!3896 = !DILexicalBlockFile(scope: !3897, file: !934, discriminator: 1)
!3897 = distinct !DILexicalBlock(scope: !3893, file: !934, line: 1159, column: 5)
!3898 = !DILocation(line: 1159, column: 19, scope: !3896)
!3899 = !DILocation(line: 1159, column: 5, scope: !3896)
!3900 = !DILocation(line: 1160, column: 32, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3897, file: !934, line: 1160, column: 13)
!3902 = !DILocation(line: 1160, column: 15, scope: !3901)
!3903 = !DILocation(line: 1160, column: 18, scope: !3901)
!3904 = !DILocation(line: 1160, column: 13, scope: !3901)
!3905 = !DILocation(line: 1160, column: 35, scope: !3901)
!3906 = !DILocation(line: 1160, column: 13, scope: !3897)
!3907 = !DILocation(line: 1161, column: 30, scope: !3901)
!3908 = !DILocation(line: 1161, column: 13, scope: !3901)
!3909 = !DILocation(line: 1161, column: 16, scope: !3901)
!3910 = !DILocation(line: 1161, column: 33, scope: !3901)
!3911 = !DILocation(line: 1160, column: 37, scope: !3912)
!3912 = !DILexicalBlockFile(scope: !3901, file: !934, discriminator: 1)
!3913 = !DILocation(line: 1159, column: 25, scope: !3914)
!3914 = !DILexicalBlockFile(scope: !3897, file: !934, discriminator: 2)
!3915 = !DILocation(line: 1159, column: 5, scope: !3914)
!3916 = distinct !{!3916, !3917}
!3917 = !DILocation(line: 1159, column: 5, scope: !3758)
!3918 = !DILocation(line: 1163, column: 12, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3758, file: !934, line: 1163, column: 5)
!3920 = !DILocation(line: 1163, column: 10, scope: !3919)
!3921 = !DILocation(line: 1163, column: 17, scope: !3922)
!3922 = !DILexicalBlockFile(scope: !3923, file: !934, discriminator: 1)
!3923 = distinct !DILexicalBlock(scope: !3919, file: !934, line: 1163, column: 5)
!3924 = !DILocation(line: 1163, column: 30, scope: !3922)
!3925 = !DILocation(line: 1163, column: 5, scope: !3922)
!3926 = !DILocalVariable(name: "j", scope: !3927, file: !934, line: 1164, type: !905)
!3927 = distinct !DILexicalBlock(scope: !3923, file: !934, line: 1163, column: 40)
!3928 = !DILocation(line: 1164, column: 13, scope: !3927)
!3929 = !DILocation(line: 1166, column: 13, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3927, file: !934, line: 1166, column: 13)
!3931 = !DILocation(line: 1166, column: 15, scope: !3930)
!3932 = !DILocation(line: 1166, column: 13, scope: !3927)
!3933 = !DILocation(line: 1167, column: 13, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3930, file: !934, line: 1166, column: 86)
!3935 = !DILocation(line: 1168, column: 13, scope: !3934)
!3936 = !DILocation(line: 1171, column: 30, scope: !3927)
!3937 = !DILocation(line: 1171, column: 9, scope: !3927)
!3938 = !DILocation(line: 1171, column: 12, scope: !3927)
!3939 = !DILocation(line: 1171, column: 33, scope: !3927)
!3940 = !DILocation(line: 1171, column: 38, scope: !3927)
!3941 = !DILocation(line: 1173, column: 13, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3927, file: !934, line: 1173, column: 13)
!3943 = !DILocation(line: 1173, column: 15, scope: !3942)
!3944 = !DILocation(line: 1173, column: 13, scope: !3927)
!3945 = !DILocation(line: 1174, column: 70, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3942, file: !934, line: 1173, column: 20)
!3947 = !DILocation(line: 1174, column: 49, scope: !3946)
!3948 = !DILocation(line: 1174, column: 52, scope: !3946)
!3949 = !DILocation(line: 1174, column: 34, scope: !3946)
!3950 = !DILocation(line: 1174, column: 36, scope: !3946)
!3951 = !DILocation(line: 1174, column: 13, scope: !3946)
!3952 = !DILocation(line: 1174, column: 16, scope: !3946)
!3953 = !DILocation(line: 1174, column: 41, scope: !3946)
!3954 = !DILocation(line: 1174, column: 46, scope: !3946)
!3955 = !DILocation(line: 1177, column: 39, scope: !3946)
!3956 = !DILocation(line: 1177, column: 52, scope: !3946)
!3957 = !DILocation(line: 1177, column: 57, scope: !3946)
!3958 = !DILocation(line: 1177, column: 13, scope: !3946)
!3959 = !DILocation(line: 1178, column: 28, scope: !3946)
!3960 = !DILocation(line: 1178, column: 39, scope: !3946)
!3961 = !DILocation(line: 1178, column: 13, scope: !3946)
!3962 = !DILocation(line: 1180, column: 17, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3946, file: !934, line: 1180, column: 17)
!3964 = !DILocation(line: 1180, column: 38, scope: !3963)
!3965 = !DILocation(line: 1180, column: 28, scope: !3963)
!3966 = !DILocation(line: 1180, column: 17, scope: !3946)
!3967 = !DILocation(line: 1181, column: 17, scope: !3963)
!3968 = !DILocation(line: 1182, column: 9, scope: !3946)
!3969 = !DILocation(line: 1185, column: 34, scope: !3927)
!3970 = !DILocation(line: 1185, column: 19, scope: !3927)
!3971 = !DILocation(line: 1185, column: 22, scope: !3927)
!3972 = !DILocation(line: 1185, column: 16, scope: !3927)
!3973 = !DILocation(line: 1186, column: 44, scope: !3927)
!3974 = !DILocation(line: 1186, column: 9, scope: !3927)
!3975 = !DILocation(line: 1187, column: 22, scope: !3927)
!3976 = !DILocation(line: 1187, column: 30, scope: !3927)
!3977 = !DILocation(line: 1187, column: 37, scope: !3927)
!3978 = !DILocation(line: 1187, column: 57, scope: !3927)
!3979 = !DILocation(line: 1187, column: 35, scope: !3927)
!3980 = !DILocation(line: 1187, column: 20, scope: !3927)
!3981 = !DILocation(line: 1188, column: 29, scope: !3927)
!3982 = !DILocation(line: 1188, column: 37, scope: !3927)
!3983 = !DILocation(line: 1188, column: 42, scope: !3927)
!3984 = !DILocation(line: 1188, column: 28, scope: !3927)
!3985 = !DILocation(line: 1188, column: 61, scope: !3927)
!3986 = !DILocation(line: 1188, column: 69, scope: !3927)
!3987 = !DILocation(line: 1188, column: 59, scope: !3927)
!3988 = !DILocation(line: 1188, column: 74, scope: !3927)
!3989 = !DILocation(line: 1188, column: 25, scope: !3927)
!3990 = !DILocation(line: 1190, column: 13, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3927, file: !934, line: 1190, column: 13)
!3992 = !DILocation(line: 1190, column: 21, scope: !3991)
!3993 = !DILocation(line: 1190, column: 26, scope: !3991)
!3994 = !DILocation(line: 1190, column: 13, scope: !3927)
!3995 = !DILocation(line: 1191, column: 13, scope: !3991)
!3996 = !DILocation(line: 1193, column: 13, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3927, file: !934, line: 1193, column: 13)
!3998 = !DILocation(line: 1193, column: 31, scope: !3997)
!3999 = !DILocation(line: 1193, column: 29, scope: !3997)
!4000 = !DILocation(line: 1193, column: 13, scope: !3927)
!4001 = !DILocation(line: 1194, column: 17, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !934, line: 1194, column: 17)
!4003 = distinct !DILexicalBlock(scope: !3997, file: !934, line: 1193, column: 45)
!4004 = !DILocation(line: 1194, column: 25, scope: !4002)
!4005 = !DILocation(line: 1194, column: 30, scope: !4002)
!4006 = !DILocation(line: 1194, column: 36, scope: !4002)
!4007 = !DILocation(line: 1194, column: 39, scope: !4008)
!4008 = !DILexicalBlockFile(scope: !4002, file: !934, discriminator: 1)
!4009 = !DILocation(line: 1194, column: 47, scope: !4008)
!4010 = !DILocation(line: 1194, column: 52, scope: !4008)
!4011 = !DILocation(line: 1194, column: 58, scope: !4008)
!4012 = !DILocation(line: 1194, column: 61, scope: !4013)
!4013 = !DILexicalBlockFile(scope: !4002, file: !934, discriminator: 2)
!4014 = !DILocation(line: 1194, column: 69, scope: !4013)
!4015 = !DILocation(line: 1194, column: 74, scope: !4013)
!4016 = !DILocation(line: 1194, column: 17, scope: !4013)
!4017 = !DILocation(line: 1195, column: 17, scope: !4002)
!4018 = !DILocation(line: 1196, column: 29, scope: !4003)
!4019 = !DILocation(line: 1196, column: 44, scope: !4003)
!4020 = !DILocation(line: 1196, column: 42, scope: !4003)
!4021 = !DILocation(line: 1196, column: 13, scope: !4003)
!4022 = !DILocation(line: 1196, column: 21, scope: !4003)
!4023 = !DILocation(line: 1196, column: 26, scope: !4003)
!4024 = !DILocation(line: 1197, column: 9, scope: !4003)
!4025 = !DILocation(line: 1199, column: 25, scope: !3927)
!4026 = !DILocation(line: 1199, column: 22, scope: !3927)
!4027 = !DILocation(line: 1202, column: 42, scope: !3927)
!4028 = !DILocation(line: 1202, column: 30, scope: !3927)
!4029 = !DILocation(line: 1202, column: 9, scope: !3927)
!4030 = !DILocation(line: 1202, column: 12, scope: !3927)
!4031 = !DILocation(line: 1202, column: 33, scope: !3927)
!4032 = !DILocation(line: 1202, column: 40, scope: !3927)
!4033 = !DILocation(line: 1205, column: 13, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !3927, file: !934, line: 1205, column: 13)
!4035 = !DILocation(line: 1205, column: 21, scope: !4034)
!4036 = !DILocation(line: 1205, column: 26, scope: !4034)
!4037 = !DILocation(line: 1205, column: 13, scope: !3927)
!4038 = !DILocation(line: 1206, column: 13, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4034, file: !934, line: 1205, column: 32)
!4040 = !DILocation(line: 1207, column: 13, scope: !4039)
!4041 = !DILocation(line: 1208, column: 20, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4034, file: !934, line: 1208, column: 20)
!4043 = !DILocation(line: 1208, column: 28, scope: !4042)
!4044 = !DILocation(line: 1208, column: 33, scope: !4042)
!4045 = !DILocation(line: 1208, column: 38, scope: !4042)
!4046 = !DILocation(line: 1208, column: 41, scope: !4047)
!4047 = !DILexicalBlockFile(scope: !4042, file: !934, discriminator: 1)
!4048 = !DILocation(line: 1208, column: 49, scope: !4047)
!4049 = !DILocation(line: 1208, column: 54, scope: !4047)
!4050 = !DILocation(line: 1208, column: 20, scope: !4047)
!4051 = !DILocation(line: 1210, column: 13, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4042, file: !934, line: 1208, column: 61)
!4053 = distinct !{!4053, !4051}
!4054 = !DILocation(line: 1210, column: 22, scope: !4055)
!4055 = !DILexicalBlockFile(scope: !4056, file: !934, discriminator: 1)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !934, line: 1210, column: 22)
!4057 = distinct !DILexicalBlock(scope: !4052, file: !934, line: 1210, column: 16)
!4058 = !DILocation(line: 1210, column: 36, scope: !4055)
!4059 = !DILocation(line: 1210, column: 112, scope: !4060)
!4060 = !DILexicalBlockFile(scope: !4061, file: !934, discriminator: 2)
!4061 = distinct !DILexicalBlock(scope: !4056, file: !934, line: 1210, column: 41)
!4062 = !DILocation(line: 1210, column: 91, scope: !4060)
!4063 = !DILocation(line: 1210, column: 94, scope: !4060)
!4064 = !DILocation(line: 1210, column: 64, scope: !4060)
!4065 = !DILocation(line: 1210, column: 78, scope: !4060)
!4066 = !DILocation(line: 1210, column: 43, scope: !4060)
!4067 = !DILocation(line: 1210, column: 46, scope: !4060)
!4068 = !DILocation(line: 1210, column: 83, scope: !4060)
!4069 = !DILocation(line: 1210, column: 88, scope: !4060)
!4070 = !DILocation(line: 1210, column: 128, scope: !4060)
!4071 = !DILocation(line: 1210, column: 175, scope: !4072)
!4072 = !DILexicalBlockFile(scope: !4057, file: !934, discriminator: 3)
!4073 = !DILocation(line: 1210, column: 151, scope: !4072)
!4074 = !DILocation(line: 1210, column: 130, scope: !4072)
!4075 = !DILocation(line: 1210, column: 133, scope: !4072)
!4076 = !DILocation(line: 1210, column: 166, scope: !4072)
!4077 = !DILocation(line: 1210, column: 173, scope: !4072)
!4078 = !DILocation(line: 1210, column: 204, scope: !4072)
!4079 = !DILocation(line: 1210, column: 183, scope: !4072)
!4080 = !DILocation(line: 1210, column: 186, scope: !4072)
!4081 = !DILocation(line: 1210, column: 219, scope: !4072)
!4082 = !DILocation(line: 1210, column: 224, scope: !4072)
!4083 = !DILocation(line: 1210, column: 27, scope: !4072)
!4084 = !DILocation(line: 1210, column: 31, scope: !4072)
!4085 = !DILocation(line: 1211, column: 9, scope: !4052)
!4086 = !DILocation(line: 1211, column: 20, scope: !4087)
!4087 = !DILexicalBlockFile(scope: !4088, file: !934, discriminator: 1)
!4088 = distinct !DILexicalBlock(scope: !4042, file: !934, line: 1211, column: 20)
!4089 = !DILocation(line: 1211, column: 28, scope: !4087)
!4090 = !DILocation(line: 1211, column: 33, scope: !4087)
!4091 = !DILocation(line: 1212, column: 20, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !934, line: 1212, column: 13)
!4093 = distinct !DILexicalBlock(scope: !4088, file: !934, line: 1211, column: 40)
!4094 = !DILocation(line: 1212, column: 18, scope: !4092)
!4095 = !DILocation(line: 1212, column: 25, scope: !4096)
!4096 = !DILexicalBlockFile(scope: !4097, file: !934, discriminator: 1)
!4097 = distinct !DILexicalBlock(scope: !4092, file: !934, line: 1212, column: 13)
!4098 = !DILocation(line: 1212, column: 27, scope: !4096)
!4099 = !DILocation(line: 1212, column: 13, scope: !4096)
!4100 = !DILocation(line: 1213, column: 39, scope: !4097)
!4101 = !DILocation(line: 1213, column: 34, scope: !4097)
!4102 = !DILocation(line: 1213, column: 17, scope: !4097)
!4103 = !DILocation(line: 1213, column: 20, scope: !4097)
!4104 = !DILocation(line: 1213, column: 37, scope: !4097)
!4105 = !DILocation(line: 1212, column: 33, scope: !4106)
!4106 = !DILexicalBlockFile(scope: !4097, file: !934, discriminator: 2)
!4107 = !DILocation(line: 1212, column: 13, scope: !4106)
!4108 = distinct !{!4108, !4109}
!4109 = !DILocation(line: 1212, column: 13, scope: !4093)
!4110 = !DILocation(line: 1214, column: 9, scope: !4093)
!4111 = !DILocation(line: 1214, column: 20, scope: !4112)
!4112 = !DILexicalBlockFile(scope: !4113, file: !934, discriminator: 1)
!4113 = distinct !DILexicalBlock(scope: !4088, file: !934, line: 1214, column: 20)
!4114 = !DILocation(line: 1214, column: 28, scope: !4112)
!4115 = !DILocation(line: 1214, column: 33, scope: !4112)
!4116 = !DILocation(line: 1215, column: 20, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !934, line: 1215, column: 13)
!4118 = distinct !DILexicalBlock(scope: !4113, file: !934, line: 1214, column: 40)
!4119 = !DILocation(line: 1215, column: 18, scope: !4117)
!4120 = !DILocation(line: 1215, column: 25, scope: !4121)
!4121 = !DILexicalBlockFile(scope: !4122, file: !934, discriminator: 1)
!4122 = distinct !DILexicalBlock(scope: !4117, file: !934, line: 1215, column: 13)
!4123 = !DILocation(line: 1215, column: 27, scope: !4121)
!4124 = !DILocation(line: 1215, column: 13, scope: !4121)
!4125 = !DILocation(line: 1216, column: 39, scope: !4122)
!4126 = !DILocation(line: 1216, column: 34, scope: !4122)
!4127 = !DILocation(line: 1216, column: 17, scope: !4122)
!4128 = !DILocation(line: 1216, column: 20, scope: !4122)
!4129 = !DILocation(line: 1216, column: 37, scope: !4122)
!4130 = !DILocation(line: 1215, column: 33, scope: !4131)
!4131 = !DILexicalBlockFile(scope: !4122, file: !934, discriminator: 2)
!4132 = !DILocation(line: 1215, column: 13, scope: !4131)
!4133 = distinct !{!4133, !4134}
!4134 = !DILocation(line: 1215, column: 13, scope: !4118)
!4135 = !DILocation(line: 1217, column: 9, scope: !4118)
!4136 = !DILocation(line: 1217, column: 20, scope: !4137)
!4137 = !DILexicalBlockFile(scope: !4138, file: !934, discriminator: 1)
!4138 = distinct !DILexicalBlock(scope: !4113, file: !934, line: 1217, column: 20)
!4139 = !DILocation(line: 1217, column: 28, scope: !4137)
!4140 = !DILocation(line: 1217, column: 33, scope: !4137)
!4141 = !DILocation(line: 1218, column: 13, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4138, file: !934, line: 1217, column: 40)
!4143 = !DILocation(line: 1219, column: 13, scope: !4142)
!4144 = !DILocation(line: 1220, column: 20, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4138, file: !934, line: 1220, column: 20)
!4146 = !DILocation(line: 1220, column: 28, scope: !4145)
!4147 = !DILocation(line: 1220, column: 33, scope: !4145)
!4148 = !DILocation(line: 1220, column: 39, scope: !4145)
!4149 = !DILocation(line: 1220, column: 42, scope: !4150)
!4150 = !DILexicalBlockFile(scope: !4145, file: !934, discriminator: 1)
!4151 = !DILocation(line: 1220, column: 50, scope: !4150)
!4152 = !DILocation(line: 1220, column: 55, scope: !4150)
!4153 = !DILocation(line: 1220, column: 60, scope: !4150)
!4154 = !DILocation(line: 1221, column: 36, scope: !4145)
!4155 = !DILocation(line: 1221, column: 44, scope: !4145)
!4156 = !DILocation(line: 1221, column: 49, scope: !4145)
!4157 = !DILocation(line: 1221, column: 21, scope: !4145)
!4158 = !DILocation(line: 1220, column: 20, scope: !4159)
!4159 = !DILexicalBlockFile(scope: !4138, file: !934, discriminator: 2)
!4160 = !DILocation(line: 1223, column: 13, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4145, file: !934, line: 1221, column: 56)
!4162 = distinct !{!4162, !4160}
!4163 = !DILocation(line: 1223, column: 22, scope: !4164)
!4164 = !DILexicalBlockFile(scope: !4165, file: !934, discriminator: 1)
!4165 = distinct !DILexicalBlock(scope: !4166, file: !934, line: 1223, column: 22)
!4166 = distinct !DILexicalBlock(scope: !4161, file: !934, line: 1223, column: 16)
!4167 = !DILocation(line: 1223, column: 25, scope: !4164)
!4168 = !DILocation(line: 1223, column: 39, scope: !4164)
!4169 = !DILocation(line: 1223, column: 118, scope: !4170)
!4170 = !DILexicalBlockFile(scope: !4171, file: !934, discriminator: 2)
!4171 = distinct !DILexicalBlock(scope: !4165, file: !934, line: 1223, column: 44)
!4172 = !DILocation(line: 1223, column: 121, scope: !4170)
!4173 = !DILocation(line: 1223, column: 97, scope: !4170)
!4174 = !DILocation(line: 1223, column: 100, scope: !4170)
!4175 = !DILocation(line: 1223, column: 67, scope: !4170)
!4176 = !DILocation(line: 1223, column: 70, scope: !4170)
!4177 = !DILocation(line: 1223, column: 84, scope: !4170)
!4178 = !DILocation(line: 1223, column: 46, scope: !4170)
!4179 = !DILocation(line: 1223, column: 49, scope: !4170)
!4180 = !DILocation(line: 1223, column: 89, scope: !4170)
!4181 = !DILocation(line: 1223, column: 94, scope: !4170)
!4182 = !DILocation(line: 1223, column: 137, scope: !4170)
!4183 = !DILocation(line: 1223, column: 187, scope: !4184)
!4184 = !DILexicalBlockFile(scope: !4166, file: !934, discriminator: 3)
!4185 = !DILocation(line: 1223, column: 160, scope: !4184)
!4186 = !DILocation(line: 1223, column: 163, scope: !4184)
!4187 = !DILocation(line: 1223, column: 139, scope: !4184)
!4188 = !DILocation(line: 1223, column: 142, scope: !4184)
!4189 = !DILocation(line: 1223, column: 178, scope: !4184)
!4190 = !DILocation(line: 1223, column: 185, scope: !4184)
!4191 = !DILocation(line: 1223, column: 216, scope: !4184)
!4192 = !DILocation(line: 1223, column: 219, scope: !4184)
!4193 = !DILocation(line: 1223, column: 195, scope: !4184)
!4194 = !DILocation(line: 1223, column: 198, scope: !4184)
!4195 = !DILocation(line: 1223, column: 234, scope: !4184)
!4196 = !DILocation(line: 1223, column: 239, scope: !4184)
!4197 = !DILocation(line: 1223, column: 14, scope: !4184)
!4198 = !DILocation(line: 1223, column: 17, scope: !4184)
!4199 = !DILocation(line: 1223, column: 30, scope: !4184)
!4200 = !DILocation(line: 1223, column: 34, scope: !4184)
!4201 = !DILocation(line: 1224, column: 9, scope: !4161)
!4202 = !DILocation(line: 1225, column: 5, scope: !3927)
!4203 = !DILocation(line: 1163, column: 36, scope: !4204)
!4204 = !DILexicalBlockFile(scope: !3923, file: !934, discriminator: 2)
!4205 = !DILocation(line: 1163, column: 5, scope: !4204)
!4206 = distinct !{!4206, !4207}
!4207 = !DILocation(line: 1163, column: 5, scope: !3758)
!4208 = !DILocation(line: 1227, column: 9, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !3758, file: !934, line: 1227, column: 9)
!4210 = !DILocation(line: 1227, column: 12, scope: !4209)
!4211 = !DILocation(line: 1227, column: 33, scope: !4209)
!4212 = !DILocation(line: 1227, column: 9, scope: !3758)
!4213 = !DILocation(line: 1228, column: 38, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4209, file: !934, line: 1227, column: 41)
!4215 = !DILocation(line: 1228, column: 41, scope: !4214)
!4216 = !DILocation(line: 1228, column: 44, scope: !4214)
!4217 = !DILocation(line: 1228, column: 9, scope: !4214)
!4218 = !DILocation(line: 1229, column: 9, scope: !4214)
!4219 = !DILocation(line: 1229, column: 12, scope: !4214)
!4220 = !DILocation(line: 1229, column: 28, scope: !4214)
!4221 = !DILocation(line: 1230, column: 5, scope: !4214)
!4222 = !DILocation(line: 1230, column: 16, scope: !4223)
!4223 = !DILexicalBlockFile(scope: !4224, file: !934, discriminator: 1)
!4224 = distinct !DILexicalBlock(scope: !4209, file: !934, line: 1230, column: 16)
!4225 = !DILocation(line: 1230, column: 19, scope: !4223)
!4226 = !DILocation(line: 1231, column: 30, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4224, file: !934, line: 1230, column: 36)
!4228 = !DILocation(line: 1231, column: 9, scope: !4227)
!4229 = !DILocation(line: 1232, column: 30, scope: !4227)
!4230 = !DILocation(line: 1232, column: 9, scope: !4227)
!4231 = !DILocation(line: 1233, column: 30, scope: !4227)
!4232 = !DILocation(line: 1233, column: 9, scope: !4227)
!4233 = !DILocation(line: 1234, column: 5, scope: !4227)
!4234 = !DILocation(line: 1235, column: 1, scope: !3758)
!4235 = distinct !DISubprogram(name: "qdm2_decode_fft_packets", scope: !934, file: !934, line: 1339, type: !3759, isLocal: true, isDefinition: true, scopeLine: 1340, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!4236 = !DILocalVariable(name: "q", arg: 1, scope: !4235, file: !934, line: 1339, type: !1999)
!4237 = !DILocation(line: 1339, column: 50, scope: !4235)
!4238 = !DILocalVariable(name: "i", scope: !4235, file: !934, line: 1341, type: !905)
!4239 = !DILocation(line: 1341, column: 9, scope: !4235)
!4240 = !DILocalVariable(name: "j", scope: !4235, file: !934, line: 1341, type: !905)
!4241 = !DILocation(line: 1341, column: 12, scope: !4235)
!4242 = !DILocalVariable(name: "min", scope: !4235, file: !934, line: 1341, type: !905)
!4243 = !DILocation(line: 1341, column: 15, scope: !4235)
!4244 = !DILocalVariable(name: "max", scope: !4235, file: !934, line: 1341, type: !905)
!4245 = !DILocation(line: 1341, column: 20, scope: !4235)
!4246 = !DILocalVariable(name: "value", scope: !4235, file: !934, line: 1341, type: !905)
!4247 = !DILocation(line: 1341, column: 25, scope: !4235)
!4248 = !DILocalVariable(name: "type", scope: !4235, file: !934, line: 1341, type: !905)
!4249 = !DILocation(line: 1341, column: 32, scope: !4235)
!4250 = !DILocalVariable(name: "unknown_flag", scope: !4235, file: !934, line: 1341, type: !905)
!4251 = !DILocation(line: 1341, column: 38, scope: !4235)
!4252 = !DILocalVariable(name: "gb", scope: !4235, file: !934, line: 1342, type: !3764)
!4253 = !DILocation(line: 1342, column: 19, scope: !4235)
!4254 = !DILocation(line: 1344, column: 10, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4235, file: !934, line: 1344, column: 9)
!4256 = !DILocation(line: 1344, column: 13, scope: !4255)
!4257 = !DILocation(line: 1344, column: 34, scope: !4255)
!4258 = !DILocation(line: 1344, column: 9, scope: !4235)
!4259 = !DILocation(line: 1345, column: 9, scope: !4255)
!4260 = !DILocation(line: 1348, column: 5, scope: !4235)
!4261 = !DILocation(line: 1348, column: 8, scope: !4235)
!4262 = !DILocation(line: 1348, column: 24, scope: !4235)
!4263 = !DILocation(line: 1349, column: 12, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4235, file: !934, line: 1349, column: 5)
!4265 = !DILocation(line: 1349, column: 10, scope: !4264)
!4266 = !DILocation(line: 1349, column: 17, scope: !4267)
!4267 = !DILexicalBlockFile(scope: !4268, file: !934, discriminator: 1)
!4268 = distinct !DILexicalBlock(scope: !4264, file: !934, line: 1349, column: 5)
!4269 = !DILocation(line: 1349, column: 19, scope: !4267)
!4270 = !DILocation(line: 1349, column: 5, scope: !4267)
!4271 = !DILocation(line: 1350, column: 32, scope: !4268)
!4272 = !DILocation(line: 1350, column: 9, scope: !4268)
!4273 = !DILocation(line: 1350, column: 12, scope: !4268)
!4274 = !DILocation(line: 1350, column: 35, scope: !4268)
!4275 = !DILocation(line: 1349, column: 25, scope: !4276)
!4276 = !DILexicalBlockFile(scope: !4268, file: !934, discriminator: 2)
!4277 = !DILocation(line: 1349, column: 5, scope: !4276)
!4278 = distinct !{!4278, !4279}
!4279 = !DILocation(line: 1349, column: 5, scope: !4235)
!4280 = !DILocation(line: 1353, column: 12, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4235, file: !934, line: 1353, column: 5)
!4282 = !DILocation(line: 1353, column: 21, scope: !4281)
!4283 = !DILocation(line: 1353, column: 10, scope: !4281)
!4284 = !DILocation(line: 1353, column: 28, scope: !4285)
!4285 = !DILexicalBlockFile(scope: !4286, file: !934, discriminator: 1)
!4286 = distinct !DILexicalBlock(scope: !4281, file: !934, line: 1353, column: 5)
!4287 = !DILocation(line: 1353, column: 32, scope: !4285)
!4288 = !DILocation(line: 1353, column: 35, scope: !4285)
!4289 = !DILocation(line: 1353, column: 30, scope: !4285)
!4290 = !DILocation(line: 1353, column: 5, scope: !4285)
!4291 = !DILocalVariable(name: "packet", scope: !4292, file: !934, line: 1354, type: !2030)
!4292 = distinct !DILexicalBlock(scope: !4286, file: !934, line: 1353, column: 55)
!4293 = !DILocation(line: 1354, column: 24, scope: !4292)
!4294 = !DILocation(line: 1357, column: 16, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4292, file: !934, line: 1357, column: 9)
!4296 = !DILocation(line: 1357, column: 25, scope: !4295)
!4297 = !DILocation(line: 1357, column: 14, scope: !4295)
!4298 = !DILocation(line: 1357, column: 30, scope: !4299)
!4299 = !DILexicalBlockFile(scope: !4300, file: !934, discriminator: 1)
!4300 = distinct !DILexicalBlock(scope: !4295, file: !934, line: 1357, column: 9)
!4301 = !DILocation(line: 1357, column: 34, scope: !4299)
!4302 = !DILocation(line: 1357, column: 37, scope: !4299)
!4303 = !DILocation(line: 1357, column: 32, scope: !4299)
!4304 = !DILocation(line: 1357, column: 9, scope: !4299)
!4305 = !DILocation(line: 1358, column: 42, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4300, file: !934, line: 1357, column: 57)
!4307 = !DILocation(line: 1358, column: 21, scope: !4306)
!4308 = !DILocation(line: 1358, column: 24, scope: !4306)
!4309 = !DILocation(line: 1358, column: 45, scope: !4306)
!4310 = !DILocation(line: 1358, column: 53, scope: !4306)
!4311 = !DILocation(line: 1358, column: 19, scope: !4306)
!4312 = !DILocation(line: 1359, column: 17, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4306, file: !934, line: 1359, column: 17)
!4314 = !DILocation(line: 1359, column: 25, scope: !4313)
!4315 = !DILocation(line: 1359, column: 23, scope: !4313)
!4316 = !DILocation(line: 1359, column: 29, scope: !4313)
!4317 = !DILocation(line: 1359, column: 32, scope: !4318)
!4318 = !DILexicalBlockFile(scope: !4313, file: !934, discriminator: 1)
!4319 = !DILocation(line: 1359, column: 40, scope: !4318)
!4320 = !DILocation(line: 1359, column: 38, scope: !4318)
!4321 = !DILocation(line: 1359, column: 17, scope: !4318)
!4322 = !DILocation(line: 1360, column: 23, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4313, file: !934, line: 1359, column: 45)
!4324 = !DILocation(line: 1360, column: 21, scope: !4323)
!4325 = !DILocation(line: 1361, column: 47, scope: !4323)
!4326 = !DILocation(line: 1361, column: 26, scope: !4323)
!4327 = !DILocation(line: 1361, column: 29, scope: !4323)
!4328 = !DILocation(line: 1361, column: 50, scope: !4323)
!4329 = !DILocation(line: 1361, column: 24, scope: !4323)
!4330 = !DILocation(line: 1362, column: 13, scope: !4323)
!4331 = !DILocation(line: 1363, column: 9, scope: !4306)
!4332 = !DILocation(line: 1357, column: 53, scope: !4333)
!4333 = !DILexicalBlockFile(scope: !4300, file: !934, discriminator: 2)
!4334 = !DILocation(line: 1357, column: 9, scope: !4333)
!4335 = distinct !{!4335, !4336}
!4336 = !DILocation(line: 1357, column: 9, scope: !4292)
!4337 = !DILocation(line: 1365, column: 15, scope: !4292)
!4338 = !DILocation(line: 1365, column: 13, scope: !4292)
!4339 = !DILocation(line: 1368, column: 14, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4292, file: !934, line: 1368, column: 13)
!4341 = !DILocation(line: 1368, column: 13, scope: !4292)
!4342 = !DILocation(line: 1369, column: 13, scope: !4340)
!4343 = !DILocation(line: 1371, column: 13, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4292, file: !934, line: 1371, column: 13)
!4345 = !DILocation(line: 1371, column: 15, scope: !4344)
!4346 = !DILocation(line: 1371, column: 20, scope: !4344)
!4347 = !DILocation(line: 1372, column: 14, scope: !4344)
!4348 = !DILocation(line: 1372, column: 22, scope: !4344)
!4349 = !DILocation(line: 1372, column: 27, scope: !4344)
!4350 = !DILocation(line: 1372, column: 32, scope: !4344)
!4351 = !DILocation(line: 1372, column: 35, scope: !4352)
!4352 = !DILexicalBlockFile(scope: !4344, file: !934, discriminator: 1)
!4353 = !DILocation(line: 1372, column: 43, scope: !4352)
!4354 = !DILocation(line: 1372, column: 48, scope: !4352)
!4355 = !DILocation(line: 1372, column: 54, scope: !4352)
!4356 = !DILocation(line: 1373, column: 29, scope: !4344)
!4357 = !DILocation(line: 1373, column: 37, scope: !4344)
!4358 = !DILocation(line: 1373, column: 42, scope: !4344)
!4359 = !DILocation(line: 1373, column: 14, scope: !4344)
!4360 = !DILocation(line: 1371, column: 13, scope: !4361)
!4361 = !DILexicalBlockFile(scope: !4292, file: !934, discriminator: 1)
!4362 = !DILocation(line: 1374, column: 13, scope: !4344)
!4363 = !DILocation(line: 1377, column: 28, scope: !4292)
!4364 = !DILocation(line: 1377, column: 36, scope: !4292)
!4365 = !DILocation(line: 1377, column: 42, scope: !4292)
!4366 = !DILocation(line: 1377, column: 50, scope: !4292)
!4367 = !DILocation(line: 1377, column: 55, scope: !4292)
!4368 = !DILocation(line: 1377, column: 9, scope: !4292)
!4369 = !DILocation(line: 1379, column: 13, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4292, file: !934, line: 1379, column: 13)
!4371 = !DILocation(line: 1379, column: 21, scope: !4370)
!4372 = !DILocation(line: 1379, column: 26, scope: !4370)
!4373 = !DILocation(line: 1379, column: 32, scope: !4370)
!4374 = !DILocation(line: 1379, column: 35, scope: !4375)
!4375 = !DILexicalBlockFile(scope: !4370, file: !934, discriminator: 1)
!4376 = !DILocation(line: 1379, column: 43, scope: !4375)
!4377 = !DILocation(line: 1379, column: 48, scope: !4375)
!4378 = !DILocation(line: 1379, column: 53, scope: !4375)
!4379 = !DILocation(line: 1379, column: 72, scope: !4380)
!4380 = !DILexicalBlockFile(scope: !4370, file: !934, discriminator: 2)
!4381 = !DILocation(line: 1379, column: 80, scope: !4380)
!4382 = !DILocation(line: 1379, column: 85, scope: !4380)
!4383 = !DILocation(line: 1379, column: 57, scope: !4380)
!4384 = !DILocation(line: 1379, column: 13, scope: !4380)
!4385 = !DILocation(line: 1380, column: 26, scope: !4370)
!4386 = !DILocation(line: 1380, column: 13, scope: !4370)
!4387 = !DILocation(line: 1382, column: 26, scope: !4370)
!4388 = !DILocation(line: 1384, column: 16, scope: !4292)
!4389 = !DILocation(line: 1384, column: 24, scope: !4292)
!4390 = !DILocation(line: 1384, column: 14, scope: !4292)
!4391 = !DILocation(line: 1386, column: 14, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4292, file: !934, line: 1386, column: 13)
!4393 = !DILocation(line: 1386, column: 19, scope: !4392)
!4394 = !DILocation(line: 1386, column: 25, scope: !4392)
!4395 = !DILocation(line: 1386, column: 28, scope: !4396)
!4396 = !DILexicalBlockFile(scope: !4392, file: !934, discriminator: 1)
!4397 = !DILocation(line: 1386, column: 33, scope: !4396)
!4398 = !DILocation(line: 1386, column: 39, scope: !4396)
!4399 = !DILocation(line: 1386, column: 43, scope: !4400)
!4400 = !DILexicalBlockFile(scope: !4392, file: !934, discriminator: 2)
!4401 = !DILocation(line: 1386, column: 48, scope: !4400)
!4402 = !DILocation(line: 1386, column: 54, scope: !4400)
!4403 = !DILocation(line: 1386, column: 57, scope: !4404)
!4404 = !DILexicalBlockFile(scope: !4392, file: !934, discriminator: 3)
!4405 = !DILocation(line: 1386, column: 62, scope: !4404)
!4406 = !DILocation(line: 1386, column: 13, scope: !4404)
!4407 = !DILocalVariable(name: "duration", scope: !4408, file: !934, line: 1387, type: !905)
!4408 = distinct !DILexicalBlock(scope: !4392, file: !934, line: 1386, column: 69)
!4409 = !DILocation(line: 1387, column: 17, scope: !4408)
!4410 = !DILocation(line: 1387, column: 28, scope: !4408)
!4411 = !DILocation(line: 1387, column: 31, scope: !4408)
!4412 = !DILocation(line: 1387, column: 44, scope: !4408)
!4413 = !DILocation(line: 1387, column: 51, scope: !4408)
!4414 = !DILocation(line: 1387, column: 56, scope: !4408)
!4415 = !DILocation(line: 1387, column: 48, scope: !4408)
!4416 = !DILocation(line: 1389, column: 17, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4408, file: !934, line: 1389, column: 17)
!4418 = !DILocation(line: 1389, column: 26, scope: !4417)
!4419 = !DILocation(line: 1389, column: 31, scope: !4417)
!4420 = !DILocation(line: 1389, column: 34, scope: !4421)
!4421 = !DILexicalBlockFile(scope: !4417, file: !934, discriminator: 1)
!4422 = !DILocation(line: 1389, column: 43, scope: !4421)
!4423 = !DILocation(line: 1389, column: 17, scope: !4421)
!4424 = !DILocation(line: 1390, column: 39, scope: !4417)
!4425 = !DILocation(line: 1390, column: 42, scope: !4417)
!4426 = !DILocation(line: 1390, column: 57, scope: !4417)
!4427 = !DILocation(line: 1390, column: 17, scope: !4417)
!4428 = !DILocation(line: 1391, column: 9, scope: !4408)
!4429 = !DILocation(line: 1391, column: 20, scope: !4430)
!4430 = !DILexicalBlockFile(scope: !4431, file: !934, discriminator: 1)
!4431 = distinct !DILexicalBlock(scope: !4392, file: !934, line: 1391, column: 20)
!4432 = !DILocation(line: 1391, column: 25, scope: !4430)
!4433 = !DILocation(line: 1392, column: 20, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !934, line: 1392, column: 13)
!4435 = distinct !DILexicalBlock(scope: !4431, file: !934, line: 1391, column: 32)
!4436 = !DILocation(line: 1392, column: 18, scope: !4434)
!4437 = !DILocation(line: 1392, column: 25, scope: !4438)
!4438 = !DILexicalBlockFile(scope: !4439, file: !934, discriminator: 1)
!4439 = distinct !DILexicalBlock(scope: !4434, file: !934, line: 1392, column: 13)
!4440 = !DILocation(line: 1392, column: 27, scope: !4438)
!4441 = !DILocation(line: 1392, column: 13, scope: !4438)
!4442 = !DILocation(line: 1393, column: 39, scope: !4439)
!4443 = !DILocation(line: 1393, column: 42, scope: !4439)
!4444 = !DILocation(line: 1393, column: 50, scope: !4439)
!4445 = !DILocation(line: 1393, column: 17, scope: !4439)
!4446 = !DILocation(line: 1392, column: 33, scope: !4447)
!4447 = !DILexicalBlockFile(scope: !4439, file: !934, discriminator: 2)
!4448 = !DILocation(line: 1392, column: 13, scope: !4447)
!4449 = distinct !{!4449, !4450}
!4450 = !DILocation(line: 1392, column: 13, scope: !4435)
!4451 = !DILocation(line: 1394, column: 9, scope: !4435)
!4452 = !DILocation(line: 1394, column: 20, scope: !4453)
!4453 = !DILexicalBlockFile(scope: !4454, file: !934, discriminator: 1)
!4454 = distinct !DILexicalBlock(scope: !4431, file: !934, line: 1394, column: 20)
!4455 = !DILocation(line: 1394, column: 25, scope: !4453)
!4456 = !DILocation(line: 1395, column: 20, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4458, file: !934, line: 1395, column: 13)
!4458 = distinct !DILexicalBlock(scope: !4454, file: !934, line: 1394, column: 32)
!4459 = !DILocation(line: 1395, column: 18, scope: !4457)
!4460 = !DILocation(line: 1395, column: 25, scope: !4461)
!4461 = !DILexicalBlockFile(scope: !4462, file: !934, discriminator: 1)
!4462 = distinct !DILexicalBlock(scope: !4457, file: !934, line: 1395, column: 13)
!4463 = !DILocation(line: 1395, column: 27, scope: !4461)
!4464 = !DILocation(line: 1395, column: 13, scope: !4461)
!4465 = !DILocation(line: 1396, column: 39, scope: !4462)
!4466 = !DILocation(line: 1396, column: 34, scope: !4462)
!4467 = !DILocation(line: 1396, column: 17, scope: !4462)
!4468 = !DILocation(line: 1396, column: 20, scope: !4462)
!4469 = !DILocation(line: 1396, column: 37, scope: !4462)
!4470 = !DILocation(line: 1395, column: 33, scope: !4471)
!4471 = !DILexicalBlockFile(scope: !4462, file: !934, discriminator: 2)
!4472 = !DILocation(line: 1395, column: 13, scope: !4471)
!4473 = distinct !{!4473, !4474}
!4474 = !DILocation(line: 1395, column: 13, scope: !4458)
!4475 = !DILocation(line: 1397, column: 20, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4458, file: !934, line: 1397, column: 13)
!4477 = !DILocation(line: 1397, column: 18, scope: !4476)
!4478 = !DILocation(line: 1397, column: 25, scope: !4479)
!4479 = !DILexicalBlockFile(scope: !4480, file: !934, discriminator: 1)
!4480 = distinct !DILexicalBlock(scope: !4476, file: !934, line: 1397, column: 13)
!4481 = !DILocation(line: 1397, column: 27, scope: !4479)
!4482 = !DILocation(line: 1397, column: 13, scope: !4479)
!4483 = !DILocation(line: 1398, column: 39, scope: !4480)
!4484 = !DILocation(line: 1398, column: 42, scope: !4480)
!4485 = !DILocation(line: 1398, column: 50, scope: !4480)
!4486 = !DILocation(line: 1398, column: 17, scope: !4480)
!4487 = !DILocation(line: 1397, column: 33, scope: !4488)
!4488 = !DILexicalBlockFile(scope: !4480, file: !934, discriminator: 2)
!4489 = !DILocation(line: 1397, column: 13, scope: !4488)
!4490 = distinct !{!4490, !4491}
!4491 = !DILocation(line: 1397, column: 13, scope: !4458)
!4492 = !DILocation(line: 1399, column: 9, scope: !4458)
!4493 = !DILocation(line: 1400, column: 5, scope: !4292)
!4494 = !DILocation(line: 1353, column: 51, scope: !4495)
!4495 = !DILexicalBlockFile(scope: !4286, file: !934, discriminator: 2)
!4496 = !DILocation(line: 1353, column: 5, scope: !4495)
!4497 = distinct !{!4497, !4498}
!4498 = !DILocation(line: 1353, column: 5, scope: !4235)
!4499 = !DILocation(line: 1403, column: 12, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4235, file: !934, line: 1403, column: 5)
!4501 = !DILocation(line: 1403, column: 19, scope: !4500)
!4502 = !DILocation(line: 1403, column: 10, scope: !4500)
!4503 = !DILocation(line: 1403, column: 25, scope: !4504)
!4504 = !DILexicalBlockFile(scope: !4505, file: !934, discriminator: 1)
!4505 = distinct !DILexicalBlock(scope: !4500, file: !934, line: 1403, column: 5)
!4506 = !DILocation(line: 1403, column: 27, scope: !4504)
!4507 = !DILocation(line: 1403, column: 5, scope: !4504)
!4508 = !DILocation(line: 1404, column: 36, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4505, file: !934, line: 1404, column: 13)
!4510 = !DILocation(line: 1404, column: 13, scope: !4509)
!4511 = !DILocation(line: 1404, column: 16, scope: !4509)
!4512 = !DILocation(line: 1404, column: 39, scope: !4509)
!4513 = !DILocation(line: 1404, column: 13, scope: !4505)
!4514 = !DILocation(line: 1405, column: 17, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4516, file: !934, line: 1405, column: 17)
!4516 = distinct !DILexicalBlock(scope: !4509, file: !934, line: 1404, column: 45)
!4517 = !DILocation(line: 1405, column: 19, scope: !4515)
!4518 = !DILocation(line: 1405, column: 17, scope: !4516)
!4519 = !DILocation(line: 1406, column: 68, scope: !4515)
!4520 = !DILocation(line: 1406, column: 45, scope: !4515)
!4521 = !DILocation(line: 1406, column: 48, scope: !4515)
!4522 = !DILocation(line: 1406, column: 40, scope: !4515)
!4523 = !DILocation(line: 1406, column: 17, scope: !4515)
!4524 = !DILocation(line: 1406, column: 20, scope: !4515)
!4525 = !DILocation(line: 1406, column: 43, scope: !4515)
!4526 = !DILocation(line: 1407, column: 17, scope: !4516)
!4527 = !DILocation(line: 1407, column: 15, scope: !4516)
!4528 = !DILocation(line: 1408, column: 9, scope: !4516)
!4529 = !DILocation(line: 1404, column: 42, scope: !4530)
!4530 = !DILexicalBlockFile(scope: !4509, file: !934, discriminator: 1)
!4531 = !DILocation(line: 1403, column: 33, scope: !4532)
!4532 = !DILexicalBlockFile(scope: !4505, file: !934, discriminator: 2)
!4533 = !DILocation(line: 1403, column: 5, scope: !4532)
!4534 = distinct !{!4534, !4535}
!4535 = !DILocation(line: 1403, column: 5, scope: !4235)
!4536 = !DILocation(line: 1409, column: 9, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4235, file: !934, line: 1409, column: 9)
!4538 = !DILocation(line: 1409, column: 11, scope: !4537)
!4539 = !DILocation(line: 1409, column: 9, scope: !4235)
!4540 = !DILocation(line: 1410, column: 37, scope: !4537)
!4541 = !DILocation(line: 1410, column: 40, scope: !4537)
!4542 = !DILocation(line: 1410, column: 32, scope: !4537)
!4543 = !DILocation(line: 1410, column: 9, scope: !4537)
!4544 = !DILocation(line: 1410, column: 12, scope: !4537)
!4545 = !DILocation(line: 1410, column: 35, scope: !4537)
!4546 = !DILocation(line: 1411, column: 1, scope: !4235)
!4547 = distinct !DISubprogram(name: "qdm2_fft_tone_synthesizer", scope: !934, file: !934, line: 1459, type: !4548, isLocal: true, isDefinition: true, scopeLine: 1460, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!4548 = !DISubroutineType(types: !4549)
!4549 = !{null, !1999, !905}
!4550 = !DILocalVariable(name: "q", arg: 1, scope: !4547, file: !934, line: 1459, type: !1999)
!4551 = !DILocation(line: 1459, column: 52, scope: !4547)
!4552 = !DILocalVariable(name: "sub_packet", arg: 2, scope: !4547, file: !934, line: 1459, type: !905)
!4553 = !DILocation(line: 1459, column: 59, scope: !4547)
!4554 = !DILocalVariable(name: "i", scope: !4547, file: !934, line: 1461, type: !905)
!4555 = !DILocation(line: 1461, column: 9, scope: !4547)
!4556 = !DILocalVariable(name: "j", scope: !4547, file: !934, line: 1461, type: !905)
!4557 = !DILocation(line: 1461, column: 12, scope: !4547)
!4558 = !DILocalVariable(name: "ch", scope: !4547, file: !934, line: 1461, type: !905)
!4559 = !DILocation(line: 1461, column: 15, scope: !4547)
!4560 = !DILocalVariable(name: "iscale", scope: !4547, file: !934, line: 1462, type: !4561)
!4561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3300)
!4562 = !DILocation(line: 1462, column: 18, scope: !4547)
!4563 = !DILocation(line: 1464, column: 13, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4547, file: !934, line: 1464, column: 5)
!4565 = !DILocation(line: 1464, column: 10, scope: !4564)
!4566 = !DILocation(line: 1464, column: 18, scope: !4567)
!4567 = !DILexicalBlockFile(scope: !4568, file: !934, discriminator: 1)
!4568 = distinct !DILexicalBlock(scope: !4564, file: !934, line: 1464, column: 5)
!4569 = !DILocation(line: 1464, column: 23, scope: !4567)
!4570 = !DILocation(line: 1464, column: 26, scope: !4567)
!4571 = !DILocation(line: 1464, column: 21, scope: !4567)
!4572 = !DILocation(line: 1464, column: 5, scope: !4567)
!4573 = !DILocation(line: 1465, column: 31, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4568, file: !934, line: 1464, column: 42)
!4575 = !DILocation(line: 1465, column: 16, scope: !4574)
!4576 = !DILocation(line: 1465, column: 19, scope: !4574)
!4577 = !DILocation(line: 1465, column: 23, scope: !4574)
!4578 = !DILocation(line: 1465, column: 9, scope: !4574)
!4579 = !DILocation(line: 1465, column: 39, scope: !4574)
!4580 = !DILocation(line: 1465, column: 42, scope: !4574)
!4581 = !DILocation(line: 1465, column: 51, scope: !4574)
!4582 = !DILocation(line: 1466, column: 5, scope: !4574)
!4583 = !DILocation(line: 1464, column: 38, scope: !4584)
!4584 = !DILexicalBlockFile(scope: !4568, file: !934, discriminator: 2)
!4585 = !DILocation(line: 1464, column: 5, scope: !4584)
!4586 = distinct !{!4586, !4587}
!4587 = !DILocation(line: 1464, column: 5, scope: !4547)
!4588 = !DILocation(line: 1470, column: 9, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4547, file: !934, line: 1470, column: 9)
!4590 = !DILocation(line: 1470, column: 12, scope: !4589)
!4591 = !DILocation(line: 1470, column: 35, scope: !4589)
!4592 = !DILocation(line: 1470, column: 9, scope: !4547)
!4593 = !DILocation(line: 1471, column: 18, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4589, file: !934, line: 1471, column: 9)
!4595 = !DILocation(line: 1471, column: 21, scope: !4594)
!4596 = !DILocation(line: 1471, column: 16, scope: !4594)
!4597 = !DILocation(line: 1471, column: 14, scope: !4594)
!4598 = !DILocation(line: 1471, column: 45, scope: !4599)
!4599 = !DILexicalBlockFile(scope: !4600, file: !934, discriminator: 1)
!4600 = distinct !DILexicalBlock(scope: !4594, file: !934, line: 1471, column: 9)
!4601 = !DILocation(line: 1471, column: 49, scope: !4599)
!4602 = !DILocation(line: 1471, column: 52, scope: !4599)
!4603 = !DILocation(line: 1471, column: 47, scope: !4599)
!4604 = !DILocation(line: 1471, column: 9, scope: !4599)
!4605 = !DILocalVariable(name: "level", scope: !4606, file: !934, line: 1472, type: !910)
!4606 = distinct !DILexicalBlock(scope: !4600, file: !934, line: 1471, column: 81)
!4607 = !DILocation(line: 1472, column: 19, scope: !4606)
!4608 = !DILocalVariable(name: "c", scope: !4606, file: !934, line: 1473, type: !2045)
!4609 = !DILocation(line: 1473, column: 25, scope: !4606)
!4610 = !DILocation(line: 1475, column: 30, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4606, file: !934, line: 1475, column: 17)
!4612 = !DILocation(line: 1475, column: 17, scope: !4611)
!4613 = !DILocation(line: 1475, column: 20, scope: !4611)
!4614 = !DILocation(line: 1475, column: 33, scope: !4611)
!4615 = !DILocation(line: 1475, column: 47, scope: !4611)
!4616 = !DILocation(line: 1475, column: 44, scope: !4611)
!4617 = !DILocation(line: 1475, column: 17, scope: !4606)
!4618 = !DILocation(line: 1476, column: 17, scope: !4611)
!4619 = !DILocation(line: 1478, column: 19, scope: !4606)
!4620 = !DILocation(line: 1478, column: 22, scope: !4606)
!4621 = !DILocation(line: 1478, column: 31, scope: !4606)
!4622 = !DILocation(line: 1478, column: 18, scope: !4606)
!4623 = !DILocation(line: 1478, column: 18, scope: !4624)
!4624 = !DILexicalBlockFile(scope: !4606, file: !934, discriminator: 1)
!4625 = !DILocation(line: 1478, column: 56, scope: !4626)
!4626 = !DILexicalBlockFile(scope: !4606, file: !934, discriminator: 2)
!4627 = !DILocation(line: 1478, column: 43, scope: !4626)
!4628 = !DILocation(line: 1478, column: 46, scope: !4626)
!4629 = !DILocation(line: 1478, column: 59, scope: !4626)
!4630 = !DILocation(line: 1478, column: 18, scope: !4626)
!4631 = !DILocation(line: 1478, column: 18, scope: !4632)
!4632 = !DILexicalBlockFile(scope: !4606, file: !934, discriminator: 3)
!4633 = !DILocation(line: 1478, column: 16, scope: !4632)
!4634 = !DILocation(line: 1479, column: 35, scope: !4606)
!4635 = !DILocation(line: 1479, column: 22, scope: !4606)
!4636 = !DILocation(line: 1479, column: 25, scope: !4606)
!4637 = !DILocation(line: 1479, column: 38, scope: !4606)
!4638 = !DILocation(line: 1479, column: 42, scope: !4606)
!4639 = !DILocation(line: 1479, column: 21, scope: !4606)
!4640 = !DILocation(line: 1479, column: 21, scope: !4624)
!4641 = !DILocation(line: 1479, column: 120, scope: !4626)
!4642 = !DILocation(line: 1479, column: 107, scope: !4626)
!4643 = !DILocation(line: 1479, column: 110, scope: !4626)
!4644 = !DILocation(line: 1479, column: 123, scope: !4626)
!4645 = !DILocation(line: 1479, column: 127, scope: !4626)
!4646 = !DILocation(line: 1479, column: 55, scope: !4626)
!4647 = !DILocation(line: 1479, column: 76, scope: !4626)
!4648 = !DILocation(line: 1479, column: 79, scope: !4626)
!4649 = !DILocation(line: 1479, column: 21, scope: !4626)
!4650 = !DILocation(line: 1479, column: 21, scope: !4632)
!4651 = !DILocation(line: 1479, column: 19, scope: !4632)
!4652 = !DILocation(line: 1481, column: 20, scope: !4606)
!4653 = !DILocation(line: 1481, column: 45, scope: !4606)
!4654 = !DILocation(line: 1481, column: 32, scope: !4606)
!4655 = !DILocation(line: 1481, column: 35, scope: !4606)
!4656 = !DILocation(line: 1481, column: 48, scope: !4606)
!4657 = !DILocation(line: 1481, column: 54, scope: !4606)
!4658 = !DILocation(line: 1481, column: 28, scope: !4606)
!4659 = !DILocation(line: 1481, column: 26, scope: !4606)
!4660 = !DILocation(line: 1481, column: 15, scope: !4606)
!4661 = !DILocation(line: 1481, column: 18, scope: !4606)
!4662 = !DILocation(line: 1482, column: 20, scope: !4606)
!4663 = !DILocation(line: 1482, column: 45, scope: !4606)
!4664 = !DILocation(line: 1482, column: 32, scope: !4606)
!4665 = !DILocation(line: 1482, column: 35, scope: !4606)
!4666 = !DILocation(line: 1482, column: 48, scope: !4606)
!4667 = !DILocation(line: 1482, column: 54, scope: !4606)
!4668 = !DILocation(line: 1482, column: 28, scope: !4606)
!4669 = !DILocation(line: 1482, column: 26, scope: !4606)
!4670 = !DILocation(line: 1482, column: 15, scope: !4606)
!4671 = !DILocation(line: 1482, column: 18, scope: !4606)
!4672 = !DILocation(line: 1483, column: 68, scope: !4606)
!4673 = !DILocation(line: 1483, column: 45, scope: !4606)
!4674 = !DILocation(line: 1483, column: 32, scope: !4606)
!4675 = !DILocation(line: 1483, column: 35, scope: !4606)
!4676 = !DILocation(line: 1483, column: 48, scope: !4606)
!4677 = !DILocation(line: 1483, column: 55, scope: !4606)
!4678 = !DILocation(line: 1483, column: 13, scope: !4606)
!4679 = !DILocation(line: 1483, column: 28, scope: !4606)
!4680 = !DILocation(line: 1483, column: 16, scope: !4606)
!4681 = !DILocation(line: 1483, column: 20, scope: !4606)
!4682 = !DILocation(line: 1483, column: 60, scope: !4606)
!4683 = !DILocation(line: 1483, column: 63, scope: !4606)
!4684 = !DILocation(line: 1484, column: 68, scope: !4606)
!4685 = !DILocation(line: 1484, column: 45, scope: !4606)
!4686 = !DILocation(line: 1484, column: 32, scope: !4606)
!4687 = !DILocation(line: 1484, column: 35, scope: !4606)
!4688 = !DILocation(line: 1484, column: 48, scope: !4606)
!4689 = !DILocation(line: 1484, column: 55, scope: !4606)
!4690 = !DILocation(line: 1484, column: 13, scope: !4606)
!4691 = !DILocation(line: 1484, column: 28, scope: !4606)
!4692 = !DILocation(line: 1484, column: 16, scope: !4606)
!4693 = !DILocation(line: 1484, column: 20, scope: !4606)
!4694 = !DILocation(line: 1484, column: 60, scope: !4606)
!4695 = !DILocation(line: 1484, column: 63, scope: !4606)
!4696 = !DILocation(line: 1485, column: 68, scope: !4606)
!4697 = !DILocation(line: 1485, column: 45, scope: !4606)
!4698 = !DILocation(line: 1485, column: 32, scope: !4606)
!4699 = !DILocation(line: 1485, column: 35, scope: !4606)
!4700 = !DILocation(line: 1485, column: 48, scope: !4606)
!4701 = !DILocation(line: 1485, column: 55, scope: !4606)
!4702 = !DILocation(line: 1485, column: 13, scope: !4606)
!4703 = !DILocation(line: 1485, column: 28, scope: !4606)
!4704 = !DILocation(line: 1485, column: 16, scope: !4606)
!4705 = !DILocation(line: 1485, column: 20, scope: !4606)
!4706 = !DILocation(line: 1485, column: 60, scope: !4606)
!4707 = !DILocation(line: 1485, column: 63, scope: !4606)
!4708 = !DILocation(line: 1486, column: 68, scope: !4606)
!4709 = !DILocation(line: 1486, column: 45, scope: !4606)
!4710 = !DILocation(line: 1486, column: 32, scope: !4606)
!4711 = !DILocation(line: 1486, column: 35, scope: !4606)
!4712 = !DILocation(line: 1486, column: 48, scope: !4606)
!4713 = !DILocation(line: 1486, column: 55, scope: !4606)
!4714 = !DILocation(line: 1486, column: 13, scope: !4606)
!4715 = !DILocation(line: 1486, column: 28, scope: !4606)
!4716 = !DILocation(line: 1486, column: 16, scope: !4606)
!4717 = !DILocation(line: 1486, column: 20, scope: !4606)
!4718 = !DILocation(line: 1486, column: 60, scope: !4606)
!4719 = !DILocation(line: 1486, column: 63, scope: !4606)
!4720 = !DILocation(line: 1487, column: 9, scope: !4606)
!4721 = !DILocation(line: 1471, column: 77, scope: !4722)
!4722 = !DILexicalBlockFile(scope: !4600, file: !934, discriminator: 2)
!4723 = !DILocation(line: 1471, column: 9, scope: !4722)
!4724 = distinct !{!4724, !4725}
!4725 = !DILocation(line: 1471, column: 9, scope: !4589)
!4726 = !DILocation(line: 1487, column: 9, scope: !4727)
!4727 = !DILexicalBlockFile(scope: !4594, file: !934, discriminator: 1)
!4728 = !DILocation(line: 1490, column: 14, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4547, file: !934, line: 1490, column: 5)
!4730 = !DILocation(line: 1490, column: 17, scope: !4729)
!4731 = !DILocation(line: 1490, column: 12, scope: !4729)
!4732 = !DILocation(line: 1490, column: 10, scope: !4729)
!4733 = !DILocation(line: 1490, column: 31, scope: !4734)
!4734 = !DILexicalBlockFile(scope: !4735, file: !934, discriminator: 1)
!4735 = distinct !DILexicalBlock(scope: !4729, file: !934, line: 1490, column: 5)
!4736 = !DILocation(line: 1490, column: 36, scope: !4734)
!4737 = !DILocation(line: 1490, column: 39, scope: !4734)
!4738 = !DILocation(line: 1490, column: 33, scope: !4734)
!4739 = !DILocation(line: 1490, column: 5, scope: !4734)
!4740 = !DILocation(line: 1491, column: 32, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4735, file: !934, line: 1490, column: 57)
!4742 = !DILocation(line: 1491, column: 49, scope: !4741)
!4743 = !DILocation(line: 1491, column: 52, scope: !4741)
!4744 = !DILocation(line: 1491, column: 36, scope: !4741)
!4745 = !DILocation(line: 1491, column: 39, scope: !4741)
!4746 = !DILocation(line: 1491, column: 9, scope: !4741)
!4747 = !DILocation(line: 1492, column: 30, scope: !4741)
!4748 = !DILocation(line: 1492, column: 33, scope: !4741)
!4749 = !DILocation(line: 1492, column: 48, scope: !4741)
!4750 = !DILocation(line: 1492, column: 53, scope: !4741)
!4751 = !DILocation(line: 1492, column: 9, scope: !4741)
!4752 = !DILocation(line: 1492, column: 12, scope: !4741)
!4753 = !DILocation(line: 1492, column: 27, scope: !4741)
!4754 = !DILocation(line: 1490, column: 5, scope: !4755)
!4755 = !DILexicalBlockFile(scope: !4735, file: !934, discriminator: 2)
!4756 = distinct !{!4756, !4757}
!4757 = !DILocation(line: 1490, column: 5, scope: !4547)
!4758 = !DILocation(line: 1496, column: 12, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4547, file: !934, line: 1496, column: 5)
!4760 = !DILocation(line: 1496, column: 10, scope: !4759)
!4761 = !DILocation(line: 1496, column: 17, scope: !4762)
!4762 = !DILexicalBlockFile(scope: !4763, file: !934, discriminator: 1)
!4763 = distinct !DILexicalBlock(scope: !4759, file: !934, line: 1496, column: 5)
!4764 = !DILocation(line: 1496, column: 19, scope: !4762)
!4765 = !DILocation(line: 1496, column: 5, scope: !4762)
!4766 = !DILocation(line: 1497, column: 36, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4763, file: !934, line: 1497, column: 13)
!4768 = !DILocation(line: 1497, column: 13, scope: !4767)
!4769 = !DILocation(line: 1497, column: 16, scope: !4767)
!4770 = !DILocation(line: 1497, column: 39, scope: !4767)
!4771 = !DILocation(line: 1497, column: 13, scope: !4763)
!4772 = !DILocation(line: 1498, column: 45, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !934, line: 1498, column: 13)
!4774 = distinct !DILexicalBlock(scope: !4767, file: !934, line: 1497, column: 45)
!4775 = !DILocation(line: 1498, column: 22, scope: !4773)
!4776 = !DILocation(line: 1498, column: 25, scope: !4773)
!4777 = !DILocation(line: 1498, column: 20, scope: !4773)
!4778 = !DILocation(line: 1498, column: 18, scope: !4773)
!4779 = !DILocation(line: 1498, column: 49, scope: !4780)
!4780 = !DILexicalBlockFile(scope: !4781, file: !934, discriminator: 1)
!4781 = distinct !DILexicalBlock(scope: !4773, file: !934, line: 1498, column: 13)
!4782 = !DILocation(line: 1498, column: 76, scope: !4780)
!4783 = !DILocation(line: 1498, column: 53, scope: !4780)
!4784 = !DILocation(line: 1498, column: 56, scope: !4780)
!4785 = !DILocation(line: 1498, column: 51, scope: !4780)
!4786 = !DILocation(line: 1498, column: 13, scope: !4780)
!4787 = !DILocalVariable(name: "offset", scope: !4788, file: !934, line: 1499, type: !905)
!4788 = distinct !DILexicalBlock(scope: !4781, file: !934, line: 1498, column: 85)
!4789 = !DILocation(line: 1499, column: 21, scope: !4788)
!4790 = !DILocalVariable(name: "four_i", scope: !4788, file: !934, line: 1499, type: !905)
!4791 = !DILocation(line: 1499, column: 29, scope: !4788)
!4792 = !DILocalVariable(name: "tone", scope: !4788, file: !934, line: 1500, type: !2039)
!4793 = !DILocation(line: 1500, column: 25, scope: !4788)
!4794 = !DILocation(line: 1502, column: 34, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4788, file: !934, line: 1502, column: 21)
!4796 = !DILocation(line: 1502, column: 21, scope: !4795)
!4797 = !DILocation(line: 1502, column: 24, scope: !4795)
!4798 = !DILocation(line: 1502, column: 37, scope: !4795)
!4799 = !DILocation(line: 1502, column: 51, scope: !4795)
!4800 = !DILocation(line: 1502, column: 48, scope: !4795)
!4801 = !DILocation(line: 1502, column: 21, scope: !4788)
!4802 = !DILocation(line: 1503, column: 21, scope: !4795)
!4803 = !DILocation(line: 1505, column: 31, scope: !4788)
!4804 = !DILocation(line: 1505, column: 29, scope: !4788)
!4805 = !DILocation(line: 1505, column: 24, scope: !4788)
!4806 = !DILocation(line: 1506, column: 39, scope: !4788)
!4807 = !DILocation(line: 1506, column: 26, scope: !4788)
!4808 = !DILocation(line: 1506, column: 29, scope: !4788)
!4809 = !DILocation(line: 1506, column: 42, scope: !4788)
!4810 = !DILocation(line: 1506, column: 52, scope: !4788)
!4811 = !DILocation(line: 1506, column: 49, scope: !4788)
!4812 = !DILocation(line: 1506, column: 24, scope: !4788)
!4813 = !DILocation(line: 1507, column: 23, scope: !4788)
!4814 = !DILocation(line: 1507, column: 26, scope: !4788)
!4815 = !DILocation(line: 1507, column: 35, scope: !4788)
!4816 = !DILocation(line: 1507, column: 22, scope: !4788)
!4817 = !DILocation(line: 1507, column: 22, scope: !4818)
!4818 = !DILexicalBlockFile(scope: !4788, file: !934, discriminator: 1)
!4819 = !DILocation(line: 1507, column: 60, scope: !4820)
!4820 = !DILexicalBlockFile(scope: !4788, file: !934, discriminator: 2)
!4821 = !DILocation(line: 1507, column: 47, scope: !4820)
!4822 = !DILocation(line: 1507, column: 50, scope: !4820)
!4823 = !DILocation(line: 1507, column: 63, scope: !4820)
!4824 = !DILocation(line: 1507, column: 22, scope: !4820)
!4825 = !DILocation(line: 1507, column: 22, scope: !4826)
!4826 = !DILexicalBlockFile(scope: !4788, file: !934, discriminator: 3)
!4827 = !DILocation(line: 1507, column: 20, scope: !4826)
!4828 = !DILocation(line: 1509, column: 21, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4788, file: !934, line: 1509, column: 21)
!4830 = !DILocation(line: 1509, column: 30, scope: !4829)
!4831 = !DILocation(line: 1509, column: 33, scope: !4829)
!4832 = !DILocation(line: 1509, column: 28, scope: !4829)
!4833 = !DILocation(line: 1509, column: 21, scope: !4788)
!4834 = !DILocation(line: 1510, column: 25, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4836, file: !934, line: 1510, column: 25)
!4836 = distinct !DILexicalBlock(scope: !4829, file: !934, line: 1509, column: 50)
!4837 = !DILocation(line: 1510, column: 32, scope: !4835)
!4838 = !DILocation(line: 1510, column: 25, scope: !4836)
!4839 = !DILocation(line: 1511, column: 39, scope: !4835)
!4840 = !DILocation(line: 1511, column: 30, scope: !4835)
!4841 = !DILocation(line: 1511, column: 37, scope: !4835)
!4842 = !DILocation(line: 1511, column: 25, scope: !4835)
!4843 = !DILocation(line: 1513, column: 40, scope: !4835)
!4844 = !DILocation(line: 1513, column: 47, scope: !4835)
!4845 = !DILocation(line: 1513, column: 39, scope: !4835)
!4846 = !DILocation(line: 1513, column: 30, scope: !4835)
!4847 = !DILocation(line: 1513, column: 37, scope: !4835)
!4848 = !DILocation(line: 1515, column: 48, scope: !4836)
!4849 = !DILocation(line: 1515, column: 35, scope: !4836)
!4850 = !DILocation(line: 1515, column: 38, scope: !4836)
!4851 = !DILocation(line: 1515, column: 51, scope: !4836)
!4852 = !DILocation(line: 1515, column: 55, scope: !4836)
!4853 = !DILocation(line: 1515, column: 34, scope: !4836)
!4854 = !DILocation(line: 1515, column: 34, scope: !4855)
!4855 = !DILexicalBlockFile(scope: !4836, file: !934, discriminator: 1)
!4856 = !DILocation(line: 1515, column: 133, scope: !4857)
!4857 = !DILexicalBlockFile(scope: !4836, file: !934, discriminator: 2)
!4858 = !DILocation(line: 1515, column: 120, scope: !4857)
!4859 = !DILocation(line: 1515, column: 123, scope: !4857)
!4860 = !DILocation(line: 1515, column: 136, scope: !4857)
!4861 = !DILocation(line: 1515, column: 140, scope: !4857)
!4862 = !DILocation(line: 1515, column: 68, scope: !4857)
!4863 = !DILocation(line: 1515, column: 89, scope: !4857)
!4864 = !DILocation(line: 1515, column: 92, scope: !4857)
!4865 = !DILocation(line: 1515, column: 34, scope: !4857)
!4866 = !DILocation(line: 1515, column: 34, scope: !4867)
!4867 = !DILexicalBlockFile(scope: !4836, file: !934, discriminator: 3)
!4868 = !DILocation(line: 1515, column: 26, scope: !4867)
!4869 = !DILocation(line: 1515, column: 32, scope: !4867)
!4870 = !DILocation(line: 1516, column: 56, scope: !4836)
!4871 = !DILocation(line: 1516, column: 37, scope: !4836)
!4872 = !DILocation(line: 1516, column: 52, scope: !4836)
!4873 = !DILocation(line: 1516, column: 40, scope: !4836)
!4874 = !DILocation(line: 1516, column: 44, scope: !4836)
!4875 = !DILocation(line: 1516, column: 26, scope: !4836)
!4876 = !DILocation(line: 1516, column: 34, scope: !4836)
!4877 = !DILocation(line: 1517, column: 72, scope: !4836)
!4878 = !DILocation(line: 1517, column: 59, scope: !4836)
!4879 = !DILocation(line: 1517, column: 62, scope: !4836)
!4880 = !DILocation(line: 1517, column: 75, scope: !4836)
!4881 = !DILocation(line: 1517, column: 85, scope: !4836)
!4882 = !DILocation(line: 1517, column: 95, scope: !4836)
!4883 = !DILocation(line: 1517, column: 92, scope: !4836)
!4884 = !DILocation(line: 1517, column: 82, scope: !4836)
!4885 = !DILocation(line: 1517, column: 34, scope: !4836)
!4886 = !DILocation(line: 1517, column: 56, scope: !4836)
!4887 = !DILocation(line: 1517, column: 26, scope: !4836)
!4888 = !DILocation(line: 1517, column: 32, scope: !4836)
!4889 = !DILocation(line: 1518, column: 52, scope: !4836)
!4890 = !DILocation(line: 1518, column: 39, scope: !4836)
!4891 = !DILocation(line: 1518, column: 42, scope: !4836)
!4892 = !DILocation(line: 1518, column: 55, scope: !4836)
!4893 = !DILocation(line: 1518, column: 37, scope: !4836)
!4894 = !DILocation(line: 1518, column: 64, scope: !4836)
!4895 = !DILocation(line: 1518, column: 71, scope: !4836)
!4896 = !DILocation(line: 1518, column: 61, scope: !4836)
!4897 = !DILocation(line: 1518, column: 77, scope: !4836)
!4898 = !DILocation(line: 1518, column: 26, scope: !4836)
!4899 = !DILocation(line: 1518, column: 32, scope: !4836)
!4900 = !DILocation(line: 1519, column: 58, scope: !4836)
!4901 = !DILocation(line: 1519, column: 45, scope: !4836)
!4902 = !DILocation(line: 1519, column: 48, scope: !4836)
!4903 = !DILocation(line: 1519, column: 61, scope: !4836)
!4904 = !DILocation(line: 1519, column: 43, scope: !4836)
!4905 = !DILocation(line: 1519, column: 68, scope: !4836)
!4906 = !DILocation(line: 1519, column: 81, scope: !4836)
!4907 = !DILocation(line: 1519, column: 79, scope: !4836)
!4908 = !DILocation(line: 1519, column: 73, scope: !4836)
!4909 = !DILocation(line: 1519, column: 26, scope: !4836)
!4910 = !DILocation(line: 1519, column: 38, scope: !4836)
!4911 = !DILocation(line: 1520, column: 37, scope: !4836)
!4912 = !DILocation(line: 1520, column: 26, scope: !4836)
!4913 = !DILocation(line: 1520, column: 35, scope: !4836)
!4914 = !DILocation(line: 1521, column: 26, scope: !4836)
!4915 = !DILocation(line: 1521, column: 37, scope: !4836)
!4916 = !DILocation(line: 1523, column: 44, scope: !4836)
!4917 = !DILocation(line: 1523, column: 21, scope: !4836)
!4918 = !DILocation(line: 1524, column: 17, scope: !4836)
!4919 = !DILocation(line: 1525, column: 13, scope: !4788)
!4920 = !DILocation(line: 1498, column: 81, scope: !4921)
!4921 = !DILexicalBlockFile(scope: !4781, file: !934, discriminator: 2)
!4922 = !DILocation(line: 1498, column: 13, scope: !4921)
!4923 = distinct !{!4923, !4924}
!4924 = !DILocation(line: 1498, column: 13, scope: !4774)
!4925 = !DILocation(line: 1526, column: 41, scope: !4774)
!4926 = !DILocation(line: 1526, column: 36, scope: !4774)
!4927 = !DILocation(line: 1526, column: 13, scope: !4774)
!4928 = !DILocation(line: 1526, column: 16, scope: !4774)
!4929 = !DILocation(line: 1526, column: 39, scope: !4774)
!4930 = !DILocation(line: 1527, column: 9, scope: !4774)
!4931 = !DILocation(line: 1497, column: 42, scope: !4932)
!4932 = !DILexicalBlockFile(scope: !4767, file: !934, discriminator: 1)
!4933 = !DILocation(line: 1496, column: 25, scope: !4934)
!4934 = !DILexicalBlockFile(scope: !4763, file: !934, discriminator: 2)
!4935 = !DILocation(line: 1496, column: 5, scope: !4934)
!4936 = distinct !{!4936, !4937}
!4937 = !DILocation(line: 1496, column: 5, scope: !4547)
!4938 = !DILocation(line: 1528, column: 1, scope: !4547)
!4939 = distinct !DISubprogram(name: "qdm2_calculate_fft", scope: !934, file: !934, line: 1530, type: !4940, isLocal: true, isDefinition: true, scopeLine: 1531, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!4940 = !DISubroutineType(types: !4941)
!4941 = !{null, !1999, !905, !905}
!4942 = !DILocalVariable(name: "q", arg: 1, scope: !4939, file: !934, line: 1530, type: !1999)
!4943 = !DILocation(line: 1530, column: 45, scope: !4939)
!4944 = !DILocalVariable(name: "channel", arg: 2, scope: !4939, file: !934, line: 1530, type: !905)
!4945 = !DILocation(line: 1530, column: 52, scope: !4939)
!4946 = !DILocalVariable(name: "sub_packet", arg: 3, scope: !4939, file: !934, line: 1530, type: !905)
!4947 = !DILocation(line: 1530, column: 65, scope: !4939)
!4948 = !DILocalVariable(name: "gain", scope: !4939, file: !934, line: 1532, type: !1819)
!4949 = !DILocation(line: 1532, column: 17, scope: !4939)
!4950 = !DILocation(line: 1532, column: 25, scope: !4939)
!4951 = !DILocation(line: 1532, column: 28, scope: !4939)
!4952 = !DILocation(line: 1532, column: 37, scope: !4939)
!4953 = !DILocation(line: 1532, column: 42, scope: !4939)
!4954 = !DILocation(line: 1532, column: 45, scope: !4955)
!4955 = !DILexicalBlockFile(scope: !4939, file: !934, discriminator: 1)
!4956 = !DILocation(line: 1532, column: 48, scope: !4955)
!4957 = !DILocation(line: 1532, column: 60, scope: !4955)
!4958 = !DILocation(line: 1532, column: 24, scope: !4959)
!4959 = !DILexicalBlockFile(scope: !4939, file: !934, discriminator: 2)
!4960 = !DILocation(line: 1532, column: 17, scope: !4959)
!4961 = !DILocalVariable(name: "out", scope: !4939, file: !934, line: 1533, type: !2157)
!4962 = !DILocation(line: 1533, column: 12, scope: !4939)
!4963 = !DILocation(line: 1533, column: 18, scope: !4939)
!4964 = !DILocation(line: 1533, column: 21, scope: !4939)
!4965 = !DILocation(line: 1533, column: 37, scope: !4939)
!4966 = !DILocation(line: 1533, column: 35, scope: !4939)
!4967 = !DILocalVariable(name: "i", scope: !4939, file: !934, line: 1534, type: !905)
!4968 = !DILocation(line: 1534, column: 9, scope: !4939)
!4969 = !DILocation(line: 1535, column: 20, scope: !4939)
!4970 = !DILocation(line: 1535, column: 5, scope: !4939)
!4971 = !DILocation(line: 1535, column: 8, scope: !4939)
!4972 = !DILocation(line: 1535, column: 12, scope: !4939)
!4973 = !DILocation(line: 1535, column: 32, scope: !4939)
!4974 = !DILocation(line: 1535, column: 35, scope: !4939)
!4975 = !DILocation(line: 1536, column: 20, scope: !4939)
!4976 = !DILocation(line: 1536, column: 5, scope: !4939)
!4977 = !DILocation(line: 1536, column: 8, scope: !4939)
!4978 = !DILocation(line: 1536, column: 12, scope: !4939)
!4979 = !DILocation(line: 1536, column: 32, scope: !4939)
!4980 = !DILocation(line: 1536, column: 35, scope: !4939)
!4981 = !DILocation(line: 1537, column: 5, scope: !4939)
!4982 = !DILocation(line: 1537, column: 8, scope: !4939)
!4983 = !DILocation(line: 1537, column: 17, scope: !4939)
!4984 = !DILocation(line: 1537, column: 28, scope: !4939)
!4985 = !DILocation(line: 1537, column: 31, scope: !4939)
!4986 = !DILocation(line: 1537, column: 69, scope: !4939)
!4987 = !DILocation(line: 1537, column: 54, scope: !4939)
!4988 = !DILocation(line: 1537, column: 57, scope: !4939)
!4989 = !DILocation(line: 1537, column: 61, scope: !4939)
!4990 = !DILocation(line: 1537, column: 41, scope: !4939)
!4991 = !DILocation(line: 1539, column: 12, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4939, file: !934, line: 1539, column: 5)
!4993 = !DILocation(line: 1539, column: 10, scope: !4992)
!4994 = !DILocation(line: 1539, column: 17, scope: !4995)
!4995 = !DILexicalBlockFile(scope: !4996, file: !934, discriminator: 1)
!4996 = distinct !DILexicalBlock(scope: !4992, file: !934, line: 1539, column: 5)
!4997 = !DILocation(line: 1539, column: 24, scope: !4995)
!4998 = !DILocation(line: 1539, column: 27, scope: !4995)
!4999 = !DILocation(line: 1539, column: 36, scope: !4995)
!5000 = !DILocation(line: 1539, column: 40, scope: !4995)
!5001 = !DILocation(line: 1539, column: 43, scope: !4995)
!5002 = !DILocation(line: 1539, column: 19, scope: !4995)
!5003 = !DILocation(line: 1539, column: 5, scope: !4995)
!5004 = !DILocation(line: 1540, column: 43, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4996, file: !934, line: 1539, column: 60)
!5006 = !DILocation(line: 1540, column: 19, scope: !5005)
!5007 = !DILocation(line: 1540, column: 34, scope: !5005)
!5008 = !DILocation(line: 1540, column: 22, scope: !5005)
!5009 = !DILocation(line: 1540, column: 26, scope: !5005)
!5010 = !DILocation(line: 1540, column: 46, scope: !5005)
!5011 = !DILocation(line: 1540, column: 51, scope: !5005)
!5012 = !DILocation(line: 1540, column: 49, scope: !5005)
!5013 = !DILocation(line: 1540, column: 9, scope: !5005)
!5014 = !DILocation(line: 1540, column: 16, scope: !5005)
!5015 = !DILocation(line: 1541, column: 53, scope: !5005)
!5016 = !DILocation(line: 1541, column: 29, scope: !5005)
!5017 = !DILocation(line: 1541, column: 44, scope: !5005)
!5018 = !DILocation(line: 1541, column: 32, scope: !5005)
!5019 = !DILocation(line: 1541, column: 36, scope: !5005)
!5020 = !DILocation(line: 1541, column: 56, scope: !5005)
!5021 = !DILocation(line: 1541, column: 61, scope: !5005)
!5022 = !DILocation(line: 1541, column: 59, scope: !5005)
!5023 = !DILocation(line: 1541, column: 13, scope: !5005)
!5024 = !DILocation(line: 1541, column: 16, scope: !5005)
!5025 = !DILocation(line: 1541, column: 9, scope: !5005)
!5026 = !DILocation(line: 1541, column: 26, scope: !5005)
!5027 = !DILocation(line: 1542, column: 20, scope: !5005)
!5028 = !DILocation(line: 1542, column: 23, scope: !5005)
!5029 = !DILocation(line: 1542, column: 18, scope: !5005)
!5030 = !DILocation(line: 1542, column: 13, scope: !5005)
!5031 = !DILocation(line: 1543, column: 5, scope: !5005)
!5032 = !DILocation(line: 1539, column: 56, scope: !5033)
!5033 = !DILexicalBlockFile(scope: !4996, file: !934, discriminator: 2)
!5034 = !DILocation(line: 1539, column: 5, scope: !5033)
!5035 = distinct !{!5035, !5036}
!5036 = !DILocation(line: 1539, column: 5, scope: !4939)
!5037 = !DILocation(line: 1544, column: 1, scope: !4939)
!5038 = distinct !DISubprogram(name: "qdm2_synthesis_filter", scope: !934, file: !934, line: 1550, type: !4548, isLocal: true, isDefinition: true, scopeLine: 1551, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!5039 = !DILocalVariable(name: "q", arg: 1, scope: !5038, file: !934, line: 1550, type: !1999)
!5040 = !DILocation(line: 1550, column: 48, scope: !5038)
!5041 = !DILocalVariable(name: "index", arg: 2, scope: !5038, file: !934, line: 1550, type: !905)
!5042 = !DILocation(line: 1550, column: 55, scope: !5038)
!5043 = !DILocalVariable(name: "i", scope: !5038, file: !934, line: 1552, type: !905)
!5044 = !DILocation(line: 1552, column: 9, scope: !5038)
!5045 = !DILocalVariable(name: "k", scope: !5038, file: !934, line: 1552, type: !905)
!5046 = !DILocation(line: 1552, column: 12, scope: !5038)
!5047 = !DILocalVariable(name: "ch", scope: !5038, file: !934, line: 1552, type: !905)
!5048 = !DILocation(line: 1552, column: 15, scope: !5038)
!5049 = !DILocalVariable(name: "sb_used", scope: !5038, file: !934, line: 1552, type: !905)
!5050 = !DILocation(line: 1552, column: 19, scope: !5038)
!5051 = !DILocalVariable(name: "sub_sampling", scope: !5038, file: !934, line: 1552, type: !905)
!5052 = !DILocation(line: 1552, column: 28, scope: !5038)
!5053 = !DILocalVariable(name: "dither_state", scope: !5038, file: !934, line: 1552, type: !905)
!5054 = !DILocation(line: 1552, column: 42, scope: !5038)
!5055 = !DILocation(line: 1555, column: 18, scope: !5038)
!5056 = !DILocation(line: 1555, column: 21, scope: !5038)
!5057 = !DILocation(line: 1555, column: 35, scope: !5038)
!5058 = !DILocation(line: 1555, column: 16, scope: !5038)
!5059 = !DILocation(line: 1555, column: 16, scope: !5060)
!5060 = !DILexicalBlockFile(scope: !5038, file: !934, discriminator: 1)
!5061 = !DILocation(line: 1555, column: 54, scope: !5062)
!5062 = !DILexicalBlockFile(scope: !5038, file: !934, discriminator: 2)
!5063 = !DILocation(line: 1555, column: 57, scope: !5062)
!5064 = !DILocation(line: 1555, column: 50, scope: !5062)
!5065 = !DILocation(line: 1555, column: 16, scope: !5062)
!5066 = !DILocation(line: 1555, column: 16, scope: !5067)
!5067 = !DILexicalBlockFile(scope: !5038, file: !934, discriminator: 3)
!5068 = !DILocation(line: 1555, column: 13, scope: !5067)
!5069 = !DILocation(line: 1557, column: 13, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5038, file: !934, line: 1557, column: 5)
!5071 = !DILocation(line: 1557, column: 10, scope: !5070)
!5072 = !DILocation(line: 1557, column: 18, scope: !5073)
!5073 = !DILexicalBlockFile(scope: !5074, file: !934, discriminator: 1)
!5074 = distinct !DILexicalBlock(scope: !5070, file: !934, line: 1557, column: 5)
!5075 = !DILocation(line: 1557, column: 23, scope: !5073)
!5076 = !DILocation(line: 1557, column: 26, scope: !5073)
!5077 = !DILocation(line: 1557, column: 21, scope: !5073)
!5078 = !DILocation(line: 1557, column: 5, scope: !5073)
!5079 = !DILocation(line: 1558, column: 16, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5074, file: !934, line: 1558, column: 9)
!5081 = !DILocation(line: 1558, column: 14, scope: !5080)
!5082 = !DILocation(line: 1558, column: 21, scope: !5083)
!5083 = !DILexicalBlockFile(scope: !5084, file: !934, discriminator: 1)
!5084 = distinct !DILexicalBlock(scope: !5080, file: !934, line: 1558, column: 9)
!5085 = !DILocation(line: 1558, column: 23, scope: !5083)
!5086 = !DILocation(line: 1558, column: 9, scope: !5083)
!5087 = !DILocation(line: 1559, column: 22, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5084, file: !934, line: 1559, column: 13)
!5089 = !DILocation(line: 1559, column: 20, scope: !5088)
!5090 = !DILocation(line: 1559, column: 18, scope: !5088)
!5091 = !DILocation(line: 1559, column: 31, scope: !5092)
!5092 = !DILexicalBlockFile(scope: !5093, file: !934, discriminator: 1)
!5093 = distinct !DILexicalBlock(scope: !5088, file: !934, line: 1559, column: 13)
!5094 = !DILocation(line: 1559, column: 33, scope: !5092)
!5095 = !DILocation(line: 1559, column: 13, scope: !5092)
!5096 = !DILocation(line: 1560, column: 52, scope: !5093)
!5097 = !DILocation(line: 1560, column: 17, scope: !5093)
!5098 = !DILocation(line: 1560, column: 40, scope: !5093)
!5099 = !DILocation(line: 1560, column: 38, scope: !5093)
!5100 = !DILocation(line: 1560, column: 49, scope: !5093)
!5101 = !DILocation(line: 1560, column: 47, scope: !5093)
!5102 = !DILocation(line: 1560, column: 31, scope: !5093)
!5103 = !DILocation(line: 1560, column: 20, scope: !5093)
!5104 = !DILocation(line: 1560, column: 55, scope: !5093)
!5105 = !DILocation(line: 1559, column: 40, scope: !5106)
!5106 = !DILexicalBlockFile(scope: !5093, file: !934, discriminator: 2)
!5107 = !DILocation(line: 1559, column: 13, scope: !5106)
!5108 = distinct !{!5108, !5109}
!5109 = !DILocation(line: 1559, column: 13, scope: !5084)
!5110 = !DILocation(line: 1560, column: 57, scope: !5111)
!5111 = !DILexicalBlockFile(scope: !5088, file: !934, discriminator: 1)
!5112 = !DILocation(line: 1558, column: 29, scope: !5113)
!5113 = !DILexicalBlockFile(scope: !5084, file: !934, discriminator: 2)
!5114 = !DILocation(line: 1558, column: 9, scope: !5113)
!5115 = distinct !{!5115, !5116}
!5116 = !DILocation(line: 1558, column: 9, scope: !5074)
!5117 = !DILocation(line: 1560, column: 57, scope: !5118)
!5118 = !DILexicalBlockFile(scope: !5080, file: !934, discriminator: 2)
!5119 = !DILocation(line: 1557, column: 38, scope: !5120)
!5120 = !DILexicalBlockFile(scope: !5074, file: !934, discriminator: 2)
!5121 = !DILocation(line: 1557, column: 5, scope: !5120)
!5122 = distinct !{!5122, !5123}
!5123 = !DILocation(line: 1557, column: 5, scope: !5038)
!5124 = !DILocation(line: 1562, column: 13, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5038, file: !934, line: 1562, column: 5)
!5126 = !DILocation(line: 1562, column: 10, scope: !5125)
!5127 = !DILocation(line: 1562, column: 18, scope: !5128)
!5128 = !DILexicalBlockFile(scope: !5129, file: !934, discriminator: 1)
!5129 = distinct !DILexicalBlock(scope: !5125, file: !934, line: 1562, column: 5)
!5130 = !DILocation(line: 1562, column: 23, scope: !5128)
!5131 = !DILocation(line: 1562, column: 26, scope: !5128)
!5132 = !DILocation(line: 1562, column: 21, scope: !5128)
!5133 = !DILocation(line: 1562, column: 5, scope: !5128)
!5134 = !DILocalVariable(name: "samples_ptr", scope: !5135, file: !934, line: 1563, type: !2157)
!5135 = distinct !DILexicalBlock(scope: !5129, file: !934, line: 1562, column: 45)
!5136 = !DILocation(line: 1563, column: 16, scope: !5135)
!5137 = !DILocation(line: 1563, column: 30, scope: !5135)
!5138 = !DILocation(line: 1563, column: 33, scope: !5135)
!5139 = !DILocation(line: 1563, column: 43, scope: !5135)
!5140 = !DILocation(line: 1563, column: 41, scope: !5135)
!5141 = !DILocation(line: 1565, column: 16, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5135, file: !934, line: 1565, column: 9)
!5143 = !DILocation(line: 1565, column: 14, scope: !5142)
!5144 = !DILocation(line: 1565, column: 21, scope: !5145)
!5145 = !DILexicalBlockFile(scope: !5146, file: !934, discriminator: 1)
!5146 = distinct !DILexicalBlock(scope: !5142, file: !934, line: 1565, column: 9)
!5147 = !DILocation(line: 1565, column: 23, scope: !5145)
!5148 = !DILocation(line: 1565, column: 9, scope: !5145)
!5149 = !DILocation(line: 1566, column: 40, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5146, file: !934, line: 1565, column: 33)
!5151 = !DILocation(line: 1566, column: 43, scope: !5150)
!5152 = !DILocation(line: 1567, column: 52, scope: !5150)
!5153 = !DILocation(line: 1567, column: 39, scope: !5150)
!5154 = !DILocation(line: 1567, column: 42, scope: !5150)
!5155 = !DILocation(line: 1567, column: 79, scope: !5150)
!5156 = !DILocation(line: 1567, column: 59, scope: !5150)
!5157 = !DILocation(line: 1567, column: 62, scope: !5150)
!5158 = !DILocation(line: 1569, column: 39, scope: !5150)
!5159 = !DILocation(line: 1569, column: 52, scope: !5150)
!5160 = !DILocation(line: 1569, column: 55, scope: !5150)
!5161 = !DILocation(line: 1570, column: 62, scope: !5150)
!5162 = !DILocation(line: 1570, column: 60, scope: !5150)
!5163 = !DILocation(line: 1570, column: 71, scope: !5150)
!5164 = !DILocation(line: 1570, column: 69, scope: !5150)
!5165 = !DILocation(line: 1570, column: 39, scope: !5150)
!5166 = !DILocation(line: 1570, column: 53, scope: !5150)
!5167 = !DILocation(line: 1570, column: 42, scope: !5150)
!5168 = !DILocation(line: 1566, column: 13, scope: !5150)
!5169 = !DILocation(line: 1571, column: 33, scope: !5150)
!5170 = !DILocation(line: 1571, column: 36, scope: !5150)
!5171 = !DILocation(line: 1571, column: 31, scope: !5150)
!5172 = !DILocation(line: 1571, column: 25, scope: !5150)
!5173 = !DILocation(line: 1572, column: 9, scope: !5150)
!5174 = !DILocation(line: 1565, column: 29, scope: !5175)
!5175 = !DILexicalBlockFile(scope: !5146, file: !934, discriminator: 2)
!5176 = !DILocation(line: 1565, column: 9, scope: !5175)
!5177 = distinct !{!5177, !5178}
!5178 = !DILocation(line: 1565, column: 9, scope: !5135)
!5179 = !DILocation(line: 1573, column: 5, scope: !5135)
!5180 = !DILocation(line: 1562, column: 41, scope: !5181)
!5181 = !DILexicalBlockFile(scope: !5129, file: !934, discriminator: 2)
!5182 = !DILocation(line: 1562, column: 5, scope: !5181)
!5183 = distinct !{!5183, !5184}
!5184 = !DILocation(line: 1562, column: 5, scope: !5038)
!5185 = !DILocation(line: 1576, column: 26, scope: !5038)
!5186 = !DILocation(line: 1576, column: 29, scope: !5038)
!5187 = !DILocation(line: 1576, column: 23, scope: !5038)
!5188 = !DILocation(line: 1576, column: 18, scope: !5038)
!5189 = !DILocation(line: 1578, column: 13, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5038, file: !934, line: 1578, column: 5)
!5191 = !DILocation(line: 1578, column: 10, scope: !5190)
!5192 = !DILocation(line: 1578, column: 18, scope: !5193)
!5193 = !DILexicalBlockFile(scope: !5194, file: !934, discriminator: 1)
!5194 = distinct !DILexicalBlock(scope: !5190, file: !934, line: 1578, column: 5)
!5195 = !DILocation(line: 1578, column: 23, scope: !5193)
!5196 = !DILocation(line: 1578, column: 26, scope: !5193)
!5197 = !DILocation(line: 1578, column: 21, scope: !5193)
!5198 = !DILocation(line: 1578, column: 5, scope: !5193)
!5199 = !DILocation(line: 1579, column: 16, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5194, file: !934, line: 1579, column: 9)
!5201 = !DILocation(line: 1579, column: 14, scope: !5200)
!5202 = !DILocation(line: 1579, column: 21, scope: !5203)
!5203 = !DILexicalBlockFile(scope: !5204, file: !934, discriminator: 1)
!5204 = distinct !DILexicalBlock(scope: !5200, file: !934, line: 1579, column: 9)
!5205 = !DILocation(line: 1579, column: 25, scope: !5203)
!5206 = !DILocation(line: 1579, column: 28, scope: !5203)
!5207 = !DILocation(line: 1579, column: 23, scope: !5203)
!5208 = !DILocation(line: 1579, column: 9, scope: !5203)
!5209 = !DILocation(line: 1580, column: 78, scope: !5204)
!5210 = !DILocation(line: 1580, column: 81, scope: !5204)
!5211 = !DILocation(line: 1580, column: 95, scope: !5204)
!5212 = !DILocation(line: 1580, column: 93, scope: !5204)
!5213 = !DILocation(line: 1580, column: 110, scope: !5204)
!5214 = !DILocation(line: 1580, column: 108, scope: !5204)
!5215 = !DILocation(line: 1580, column: 114, scope: !5204)
!5216 = !DILocation(line: 1580, column: 112, scope: !5204)
!5217 = !DILocation(line: 1580, column: 67, scope: !5204)
!5218 = !DILocation(line: 1580, column: 70, scope: !5204)
!5219 = !DILocation(line: 1580, column: 65, scope: !5204)
!5220 = !DILocation(line: 1580, column: 30, scope: !5204)
!5221 = !DILocation(line: 1580, column: 33, scope: !5204)
!5222 = !DILocation(line: 1580, column: 44, scope: !5204)
!5223 = !DILocation(line: 1580, column: 42, scope: !5204)
!5224 = !DILocation(line: 1580, column: 48, scope: !5204)
!5225 = !DILocation(line: 1580, column: 46, scope: !5204)
!5226 = !DILocation(line: 1580, column: 13, scope: !5204)
!5227 = !DILocation(line: 1580, column: 16, scope: !5204)
!5228 = !DILocation(line: 1580, column: 52, scope: !5204)
!5229 = !DILocation(line: 1579, column: 41, scope: !5230)
!5230 = !DILexicalBlockFile(scope: !5204, file: !934, discriminator: 2)
!5231 = !DILocation(line: 1579, column: 9, scope: !5230)
!5232 = distinct !{!5232, !5233}
!5233 = !DILocation(line: 1579, column: 9, scope: !5194)
!5234 = !DILocation(line: 1580, column: 116, scope: !5235)
!5235 = !DILexicalBlockFile(scope: !5200, file: !934, discriminator: 1)
!5236 = !DILocation(line: 1578, column: 38, scope: !5237)
!5237 = !DILexicalBlockFile(scope: !5194, file: !934, discriminator: 2)
!5238 = !DILocation(line: 1578, column: 5, scope: !5237)
!5239 = distinct !{!5239, !5240}
!5240 = !DILocation(line: 1578, column: 5, scope: !5038)
!5241 = !DILocation(line: 1581, column: 1, scope: !5038)
!5242 = distinct !DISubprogram(name: "average_quantized_coeffs", scope: !934, file: !934, line: 314, type: !3759, isLocal: true, isDefinition: true, scopeLine: 315, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!5243 = !DILocalVariable(name: "q", arg: 1, scope: !5242, file: !934, line: 314, type: !1999)
!5244 = !DILocation(line: 314, column: 51, scope: !5242)
!5245 = !DILocalVariable(name: "i", scope: !5242, file: !934, line: 316, type: !905)
!5246 = !DILocation(line: 316, column: 9, scope: !5242)
!5247 = !DILocalVariable(name: "j", scope: !5242, file: !934, line: 316, type: !905)
!5248 = !DILocation(line: 316, column: 12, scope: !5242)
!5249 = !DILocalVariable(name: "n", scope: !5242, file: !934, line: 316, type: !905)
!5250 = !DILocation(line: 316, column: 15, scope: !5242)
!5251 = !DILocalVariable(name: "ch", scope: !5242, file: !934, line: 316, type: !905)
!5252 = !DILocation(line: 316, column: 18, scope: !5242)
!5253 = !DILocalVariable(name: "sum", scope: !5242, file: !934, line: 316, type: !905)
!5254 = !DILocation(line: 316, column: 22, scope: !5242)
!5255 = !DILocation(line: 318, column: 57, scope: !5242)
!5256 = !DILocation(line: 318, column: 60, scope: !5242)
!5257 = !DILocation(line: 318, column: 74, scope: !5242)
!5258 = !DILocation(line: 318, column: 55, scope: !5242)
!5259 = !DILocation(line: 318, column: 55, scope: !5260)
!5260 = !DILexicalBlockFile(scope: !5242, file: !934, discriminator: 1)
!5261 = !DILocation(line: 318, column: 93, scope: !5262)
!5262 = !DILexicalBlockFile(scope: !5242, file: !934, discriminator: 2)
!5263 = !DILocation(line: 318, column: 96, scope: !5262)
!5264 = !DILocation(line: 318, column: 89, scope: !5262)
!5265 = !DILocation(line: 318, column: 55, scope: !5262)
!5266 = !DILocation(line: 318, column: 55, scope: !5267)
!5267 = !DILexicalBlockFile(scope: !5242, file: !934, discriminator: 3)
!5268 = !DILocation(line: 318, column: 111, scope: !5267)
!5269 = !DILocation(line: 318, column: 9, scope: !5267)
!5270 = !DILocation(line: 318, column: 30, scope: !5267)
!5271 = !DILocation(line: 318, column: 33, scope: !5267)
!5272 = !DILocation(line: 318, column: 116, scope: !5267)
!5273 = !DILocation(line: 318, column: 7, scope: !5267)
!5274 = !DILocation(line: 320, column: 13, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5242, file: !934, line: 320, column: 5)
!5276 = !DILocation(line: 320, column: 10, scope: !5275)
!5277 = !DILocation(line: 320, column: 18, scope: !5278)
!5278 = !DILexicalBlockFile(scope: !5279, file: !934, discriminator: 1)
!5279 = distinct !DILexicalBlock(scope: !5275, file: !934, line: 320, column: 5)
!5280 = !DILocation(line: 320, column: 23, scope: !5278)
!5281 = !DILocation(line: 320, column: 26, scope: !5278)
!5282 = !DILocation(line: 320, column: 21, scope: !5278)
!5283 = !DILocation(line: 320, column: 5, scope: !5278)
!5284 = !DILocation(line: 321, column: 16, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5279, file: !934, line: 321, column: 9)
!5286 = !DILocation(line: 321, column: 14, scope: !5285)
!5287 = !DILocation(line: 321, column: 21, scope: !5288)
!5288 = !DILexicalBlockFile(scope: !5289, file: !934, discriminator: 1)
!5289 = distinct !DILexicalBlock(scope: !5285, file: !934, line: 321, column: 9)
!5290 = !DILocation(line: 321, column: 25, scope: !5288)
!5291 = !DILocation(line: 321, column: 23, scope: !5288)
!5292 = !DILocation(line: 321, column: 9, scope: !5288)
!5293 = !DILocation(line: 322, column: 17, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5289, file: !934, line: 321, column: 33)
!5295 = !DILocation(line: 324, column: 20, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5294, file: !934, line: 324, column: 13)
!5297 = !DILocation(line: 324, column: 18, scope: !5296)
!5298 = !DILocation(line: 324, column: 25, scope: !5299)
!5299 = !DILexicalBlockFile(scope: !5300, file: !934, discriminator: 1)
!5300 = distinct !DILexicalBlock(scope: !5296, file: !934, line: 324, column: 13)
!5301 = !DILocation(line: 324, column: 27, scope: !5299)
!5302 = !DILocation(line: 324, column: 13, scope: !5299)
!5303 = !DILocation(line: 325, column: 51, scope: !5300)
!5304 = !DILocation(line: 325, column: 24, scope: !5300)
!5305 = !DILocation(line: 325, column: 48, scope: !5300)
!5306 = !DILocation(line: 325, column: 44, scope: !5300)
!5307 = !DILocation(line: 325, column: 27, scope: !5300)
!5308 = !DILocation(line: 325, column: 21, scope: !5300)
!5309 = !DILocation(line: 325, column: 17, scope: !5300)
!5310 = !DILocation(line: 324, column: 33, scope: !5311)
!5311 = !DILexicalBlockFile(scope: !5300, file: !934, discriminator: 2)
!5312 = !DILocation(line: 324, column: 13, scope: !5311)
!5313 = distinct !{!5313, !5314}
!5314 = !DILocation(line: 324, column: 13, scope: !5294)
!5315 = !DILocation(line: 327, column: 17, scope: !5294)
!5316 = !DILocation(line: 328, column: 17, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5294, file: !934, line: 328, column: 17)
!5318 = !DILocation(line: 328, column: 21, scope: !5317)
!5319 = !DILocation(line: 328, column: 17, scope: !5294)
!5320 = !DILocation(line: 329, column: 20, scope: !5317)
!5321 = !DILocation(line: 329, column: 17, scope: !5317)
!5322 = !DILocation(line: 331, column: 20, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5294, file: !934, line: 331, column: 13)
!5324 = !DILocation(line: 331, column: 18, scope: !5323)
!5325 = !DILocation(line: 331, column: 25, scope: !5326)
!5326 = !DILexicalBlockFile(scope: !5327, file: !934, discriminator: 1)
!5327 = distinct !DILexicalBlock(scope: !5323, file: !934, line: 331, column: 13)
!5328 = !DILocation(line: 331, column: 27, scope: !5326)
!5329 = !DILocation(line: 331, column: 13, scope: !5326)
!5330 = !DILocation(line: 332, column: 49, scope: !5327)
!5331 = !DILocation(line: 332, column: 44, scope: !5327)
!5332 = !DILocation(line: 332, column: 17, scope: !5327)
!5333 = !DILocation(line: 332, column: 41, scope: !5327)
!5334 = !DILocation(line: 332, column: 37, scope: !5327)
!5335 = !DILocation(line: 332, column: 20, scope: !5327)
!5336 = !DILocation(line: 332, column: 47, scope: !5327)
!5337 = !DILocation(line: 331, column: 33, scope: !5338)
!5338 = !DILexicalBlockFile(scope: !5327, file: !934, discriminator: 2)
!5339 = !DILocation(line: 331, column: 13, scope: !5338)
!5340 = distinct !{!5340, !5341}
!5341 = !DILocation(line: 331, column: 13, scope: !5294)
!5342 = !DILocation(line: 333, column: 9, scope: !5294)
!5343 = !DILocation(line: 321, column: 29, scope: !5344)
!5344 = !DILexicalBlockFile(scope: !5289, file: !934, discriminator: 2)
!5345 = !DILocation(line: 321, column: 9, scope: !5344)
!5346 = distinct !{!5346, !5347}
!5347 = !DILocation(line: 321, column: 9, scope: !5279)
!5348 = !DILocation(line: 333, column: 9, scope: !5349)
!5349 = !DILexicalBlockFile(scope: !5285, file: !934, discriminator: 1)
!5350 = !DILocation(line: 320, column: 41, scope: !5351)
!5351 = !DILexicalBlockFile(scope: !5279, file: !934, discriminator: 2)
!5352 = !DILocation(line: 320, column: 5, scope: !5351)
!5353 = distinct !{!5353, !5354}
!5354 = !DILocation(line: 320, column: 5, scope: !5242)
!5355 = !DILocation(line: 334, column: 1, scope: !5242)
!5356 = distinct !DISubprogram(name: "init_get_bits", scope: !3765, file: !3765, line: 615, type: !5357, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!5357 = !DISubroutineType(types: !5358)
!5358 = !{!905, !5359, !1469, !905}
!5359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64, align: 64)
!5360 = !DILocalVariable(name: "s", arg: 1, scope: !5356, file: !3765, line: 615, type: !5359)
!5361 = !DILocation(line: 615, column: 48, scope: !5356)
!5362 = !DILocalVariable(name: "buffer", arg: 2, scope: !5356, file: !3765, line: 615, type: !1469)
!5363 = !DILocation(line: 615, column: 66, scope: !5356)
!5364 = !DILocalVariable(name: "bit_size", arg: 3, scope: !5356, file: !3765, line: 616, type: !905)
!5365 = !DILocation(line: 616, column: 37, scope: !5356)
!5366 = !DILocalVariable(name: "buffer_size", scope: !5356, file: !3765, line: 618, type: !905)
!5367 = !DILocation(line: 618, column: 9, scope: !5356)
!5368 = !DILocalVariable(name: "ret", scope: !5356, file: !3765, line: 619, type: !905)
!5369 = !DILocation(line: 619, column: 9, scope: !5356)
!5370 = !DILocation(line: 621, column: 9, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5356, file: !3765, line: 621, column: 9)
!5372 = !DILocation(line: 621, column: 18, scope: !5371)
!5373 = !DILocation(line: 621, column: 64, scope: !5371)
!5374 = !DILocation(line: 621, column: 67, scope: !5375)
!5375 = !DILexicalBlockFile(scope: !5371, file: !3765, discriminator: 1)
!5376 = !DILocation(line: 621, column: 76, scope: !5375)
!5377 = !DILocation(line: 621, column: 80, scope: !5375)
!5378 = !DILocation(line: 621, column: 84, scope: !5379)
!5379 = !DILexicalBlockFile(scope: !5371, file: !3765, discriminator: 2)
!5380 = !DILocation(line: 621, column: 9, scope: !5379)
!5381 = !DILocation(line: 622, column: 18, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5371, file: !3765, line: 621, column: 92)
!5383 = !DILocation(line: 623, column: 16, scope: !5382)
!5384 = !DILocation(line: 624, column: 13, scope: !5382)
!5385 = !DILocation(line: 625, column: 5, scope: !5382)
!5386 = !DILocation(line: 627, column: 20, scope: !5356)
!5387 = !DILocation(line: 627, column: 29, scope: !5356)
!5388 = !DILocation(line: 627, column: 34, scope: !5356)
!5389 = !DILocation(line: 627, column: 17, scope: !5356)
!5390 = !DILocation(line: 629, column: 17, scope: !5356)
!5391 = !DILocation(line: 629, column: 5, scope: !5356)
!5392 = !DILocation(line: 629, column: 8, scope: !5356)
!5393 = !DILocation(line: 629, column: 15, scope: !5356)
!5394 = !DILocation(line: 630, column: 23, scope: !5356)
!5395 = !DILocation(line: 630, column: 5, scope: !5356)
!5396 = !DILocation(line: 630, column: 8, scope: !5356)
!5397 = !DILocation(line: 630, column: 21, scope: !5356)
!5398 = !DILocation(line: 631, column: 29, scope: !5356)
!5399 = !DILocation(line: 631, column: 38, scope: !5356)
!5400 = !DILocation(line: 631, column: 5, scope: !5356)
!5401 = !DILocation(line: 631, column: 8, scope: !5356)
!5402 = !DILocation(line: 631, column: 27, scope: !5356)
!5403 = !DILocation(line: 632, column: 21, scope: !5356)
!5404 = !DILocation(line: 632, column: 30, scope: !5356)
!5405 = !DILocation(line: 632, column: 28, scope: !5356)
!5406 = !DILocation(line: 632, column: 5, scope: !5356)
!5407 = !DILocation(line: 632, column: 8, scope: !5356)
!5408 = !DILocation(line: 632, column: 19, scope: !5356)
!5409 = !DILocation(line: 633, column: 5, scope: !5356)
!5410 = !DILocation(line: 633, column: 8, scope: !5356)
!5411 = !DILocation(line: 633, column: 14, scope: !5356)
!5412 = !DILocation(line: 639, column: 12, scope: !5356)
!5413 = !DILocation(line: 639, column: 5, scope: !5356)
!5414 = distinct !DISubprogram(name: "qdm2_decode_sub_packet_header", scope: !934, file: !934, line: 262, type: !5415, isLocal: true, isDefinition: true, scopeLine: 264, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!5415 = !DISubroutineType(types: !5416)
!5416 = !{null, !5359, !2030}
!5417 = !DILocalVariable(name: "gb", arg: 1, scope: !5414, file: !934, line: 262, type: !5359)
!5418 = !DILocation(line: 262, column: 58, scope: !5414)
!5419 = !DILocalVariable(name: "sub_packet", arg: 2, scope: !5414, file: !934, line: 263, type: !2030)
!5420 = !DILocation(line: 263, column: 58, scope: !5414)
!5421 = !DILocation(line: 265, column: 33, scope: !5414)
!5422 = !DILocation(line: 265, column: 24, scope: !5414)
!5423 = !DILocation(line: 265, column: 5, scope: !5414)
!5424 = !DILocation(line: 265, column: 17, scope: !5414)
!5425 = !DILocation(line: 265, column: 22, scope: !5414)
!5426 = !DILocation(line: 267, column: 9, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5414, file: !934, line: 267, column: 9)
!5428 = !DILocation(line: 267, column: 21, scope: !5427)
!5429 = !DILocation(line: 267, column: 26, scope: !5427)
!5430 = !DILocation(line: 267, column: 9, scope: !5414)
!5431 = !DILocation(line: 268, column: 9, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5427, file: !934, line: 267, column: 32)
!5433 = !DILocation(line: 268, column: 21, scope: !5432)
!5434 = !DILocation(line: 268, column: 26, scope: !5432)
!5435 = !DILocation(line: 269, column: 9, scope: !5432)
!5436 = !DILocation(line: 269, column: 21, scope: !5432)
!5437 = !DILocation(line: 269, column: 26, scope: !5432)
!5438 = !DILocation(line: 270, column: 5, scope: !5432)
!5439 = !DILocation(line: 271, column: 37, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5427, file: !934, line: 270, column: 12)
!5441 = !DILocation(line: 271, column: 28, scope: !5440)
!5442 = !DILocation(line: 271, column: 9, scope: !5440)
!5443 = !DILocation(line: 271, column: 21, scope: !5440)
!5444 = !DILocation(line: 271, column: 26, scope: !5440)
!5445 = !DILocation(line: 273, column: 13, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5440, file: !934, line: 273, column: 13)
!5447 = !DILocation(line: 273, column: 25, scope: !5446)
!5448 = !DILocation(line: 273, column: 30, scope: !5446)
!5449 = !DILocation(line: 273, column: 13, scope: !5440)
!5450 = !DILocation(line: 274, column: 13, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5446, file: !934, line: 273, column: 38)
!5452 = !DILocation(line: 274, column: 25, scope: !5451)
!5453 = !DILocation(line: 274, column: 30, scope: !5451)
!5454 = !DILocation(line: 275, column: 42, scope: !5451)
!5455 = !DILocation(line: 275, column: 33, scope: !5451)
!5456 = !DILocation(line: 275, column: 13, scope: !5451)
!5457 = !DILocation(line: 275, column: 25, scope: !5451)
!5458 = !DILocation(line: 275, column: 30, scope: !5451)
!5459 = !DILocation(line: 276, column: 13, scope: !5451)
!5460 = !DILocation(line: 276, column: 25, scope: !5451)
!5461 = !DILocation(line: 276, column: 30, scope: !5451)
!5462 = !DILocation(line: 277, column: 9, scope: !5451)
!5463 = !DILocation(line: 279, column: 13, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5440, file: !934, line: 279, column: 13)
!5465 = !DILocation(line: 279, column: 25, scope: !5464)
!5466 = !DILocation(line: 279, column: 30, scope: !5464)
!5467 = !DILocation(line: 279, column: 13, scope: !5440)
!5468 = !DILocation(line: 280, column: 43, scope: !5464)
!5469 = !DILocation(line: 280, column: 34, scope: !5464)
!5470 = !DILocation(line: 280, column: 50, scope: !5464)
!5471 = !DILocation(line: 280, column: 13, scope: !5464)
!5472 = !DILocation(line: 280, column: 25, scope: !5464)
!5473 = !DILocation(line: 280, column: 30, scope: !5464)
!5474 = !DILocation(line: 283, column: 55, scope: !5440)
!5475 = !DILocation(line: 283, column: 40, scope: !5440)
!5476 = !DILocation(line: 283, column: 59, scope: !5440)
!5477 = !DILocation(line: 283, column: 29, scope: !5440)
!5478 = !DILocation(line: 283, column: 33, scope: !5440)
!5479 = !DILocation(line: 283, column: 9, scope: !5440)
!5480 = !DILocation(line: 283, column: 21, scope: !5440)
!5481 = !DILocation(line: 283, column: 26, scope: !5440)
!5482 = !DILocation(line: 287, column: 12, scope: !5414)
!5483 = !DILocation(line: 287, column: 24, scope: !5414)
!5484 = !DILocation(line: 287, column: 30, scope: !5414)
!5485 = !DILocation(line: 287, column: 42, scope: !5414)
!5486 = !DILocation(line: 287, column: 63, scope: !5414)
!5487 = !DILocation(line: 287, column: 48, scope: !5414)
!5488 = !DILocation(line: 287, column: 67, scope: !5414)
!5489 = !DILocation(line: 286, column: 5, scope: !5414)
!5490 = !DILocation(line: 288, column: 1, scope: !5414)
!5491 = distinct !DISubprogram(name: "get_bits_count", scope: !3765, file: !3765, line: 219, type: !5492, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!5492 = !DISubroutineType(types: !5493)
!5493 = !{!905, !5494}
!5494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5495, size: 64, align: 64)
!5495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3764)
!5496 = !DILocalVariable(name: "s", arg: 1, scope: !5491, file: !3765, line: 219, type: !5494)
!5497 = !DILocation(line: 219, column: 55, scope: !5491)
!5498 = !DILocation(line: 224, column: 12, scope: !5491)
!5499 = !DILocation(line: 224, column: 15, scope: !5491)
!5500 = !DILocation(line: 224, column: 5, scope: !5491)
!5501 = distinct !DISubprogram(name: "get_bits", scope: !3765, file: !3765, line: 381, type: !5502, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!5502 = !DISubroutineType(types: !5503)
!5503 = !{!906, !5359, !905}
!5504 = !DILocalVariable(name: "s", arg: 1, scope: !5501, file: !3765, line: 381, type: !5359)
!5505 = !DILocation(line: 381, column: 52, scope: !5501)
!5506 = !DILocalVariable(name: "n", arg: 2, scope: !5501, file: !3765, line: 381, type: !905)
!5507 = !DILocation(line: 381, column: 59, scope: !5501)
!5508 = !DILocalVariable(name: "tmp", scope: !5501, file: !3765, line: 383, type: !905)
!5509 = !DILocation(line: 383, column: 18, scope: !5501)
!5510 = !DILocalVariable(name: "re_index", scope: !5501, file: !3765, line: 399, type: !906)
!5511 = !DILocation(line: 399, column: 18, scope: !5501)
!5512 = !DILocation(line: 399, column: 30, scope: !5501)
!5513 = !DILocation(line: 399, column: 34, scope: !5501)
!5514 = !DILocalVariable(name: "re_cache", scope: !5501, file: !3765, line: 399, type: !906)
!5515 = !DILocation(line: 399, column: 78, scope: !5501)
!5516 = !DILocalVariable(name: "re_size_plus8", scope: !5501, file: !3765, line: 399, type: !906)
!5517 = !DILocation(line: 399, column: 101, scope: !5501)
!5518 = !DILocation(line: 399, column: 118, scope: !5501)
!5519 = !DILocation(line: 399, column: 122, scope: !5501)
!5520 = !DILocation(line: 401, column: 49, scope: !5501)
!5521 = !DILocation(line: 401, column: 53, scope: !5501)
!5522 = !DILocation(line: 401, column: 63, scope: !5501)
!5523 = !DILocation(line: 401, column: 72, scope: !5501)
!5524 = !DILocation(line: 401, column: 60, scope: !5501)
!5525 = !DILocation(line: 401, column: 81, scope: !5501)
!5526 = !DILocation(line: 401, column: 88, scope: !5501)
!5527 = !DILocation(line: 401, column: 97, scope: !5501)
!5528 = !DILocation(line: 401, column: 84, scope: !5501)
!5529 = !DILocation(line: 401, column: 14, scope: !5501)
!5530 = !DILocation(line: 402, column: 23, scope: !5501)
!5531 = !DILocation(line: 402, column: 33, scope: !5501)
!5532 = !DILocation(line: 402, column: 11, scope: !5501)
!5533 = !DILocation(line: 402, column: 9, scope: !5501)
!5534 = !DILocation(line: 403, column: 18, scope: !5501)
!5535 = !DILocation(line: 403, column: 36, scope: !5501)
!5536 = !DILocation(line: 403, column: 48, scope: !5501)
!5537 = !DILocation(line: 403, column: 45, scope: !5501)
!5538 = !DILocation(line: 403, column: 33, scope: !5501)
!5539 = !DILocation(line: 403, column: 17, scope: !5501)
!5540 = !DILocation(line: 403, column: 55, scope: !5541)
!5541 = !DILexicalBlockFile(scope: !5501, file: !3765, discriminator: 1)
!5542 = !DILocation(line: 403, column: 67, scope: !5541)
!5543 = !DILocation(line: 403, column: 64, scope: !5541)
!5544 = !DILocation(line: 403, column: 17, scope: !5541)
!5545 = !DILocation(line: 403, column: 74, scope: !5546)
!5546 = !DILexicalBlockFile(scope: !5501, file: !3765, discriminator: 2)
!5547 = !DILocation(line: 403, column: 17, scope: !5546)
!5548 = !DILocation(line: 403, column: 17, scope: !5549)
!5549 = !DILexicalBlockFile(scope: !5501, file: !3765, discriminator: 3)
!5550 = !DILocation(line: 403, column: 14, scope: !5549)
!5551 = !DILocation(line: 404, column: 18, scope: !5501)
!5552 = !DILocation(line: 404, column: 6, scope: !5501)
!5553 = !DILocation(line: 404, column: 10, scope: !5501)
!5554 = !DILocation(line: 404, column: 16, scope: !5501)
!5555 = !DILocation(line: 406, column: 12, scope: !5501)
!5556 = !DILocation(line: 406, column: 5, scope: !5501)
!5557 = distinct !DISubprogram(name: "qdm2_packet_checksum", scope: !934, file: !934, line: 246, type: !5558, isLocal: true, isDefinition: true, scopeLine: 247, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!5558 = !DISubroutineType(types: !5559)
!5559 = !{!928, !1469, !905, !905}
!5560 = !DILocalVariable(name: "data", arg: 1, scope: !5557, file: !934, line: 246, type: !1469)
!5561 = !DILocation(line: 246, column: 53, scope: !5557)
!5562 = !DILocalVariable(name: "length", arg: 2, scope: !5557, file: !934, line: 246, type: !905)
!5563 = !DILocation(line: 246, column: 63, scope: !5557)
!5564 = !DILocalVariable(name: "value", arg: 3, scope: !5557, file: !934, line: 246, type: !905)
!5565 = !DILocation(line: 246, column: 75, scope: !5557)
!5566 = !DILocalVariable(name: "i", scope: !5557, file: !934, line: 248, type: !905)
!5567 = !DILocation(line: 248, column: 9, scope: !5557)
!5568 = !DILocation(line: 250, column: 12, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5557, file: !934, line: 250, column: 5)
!5570 = !DILocation(line: 250, column: 10, scope: !5569)
!5571 = !DILocation(line: 250, column: 17, scope: !5572)
!5572 = !DILexicalBlockFile(scope: !5573, file: !934, discriminator: 1)
!5573 = distinct !DILexicalBlock(scope: !5569, file: !934, line: 250, column: 5)
!5574 = !DILocation(line: 250, column: 21, scope: !5572)
!5575 = !DILocation(line: 250, column: 19, scope: !5572)
!5576 = !DILocation(line: 250, column: 5, scope: !5572)
!5577 = !DILocation(line: 251, column: 23, scope: !5573)
!5578 = !DILocation(line: 251, column: 18, scope: !5573)
!5579 = !DILocation(line: 251, column: 15, scope: !5573)
!5580 = !DILocation(line: 251, column: 9, scope: !5573)
!5581 = !DILocation(line: 250, column: 30, scope: !5582)
!5582 = !DILexicalBlockFile(scope: !5573, file: !934, discriminator: 2)
!5583 = !DILocation(line: 250, column: 5, scope: !5582)
!5584 = distinct !{!5584, !5585}
!5585 = !DILocation(line: 250, column: 5, scope: !5557)
!5586 = !DILocation(line: 253, column: 23, scope: !5557)
!5587 = !DILocation(line: 253, column: 29, scope: !5557)
!5588 = !DILocation(line: 253, column: 12, scope: !5557)
!5589 = !DILocation(line: 253, column: 5, scope: !5557)
!5590 = distinct !DISubprogram(name: "skip_bits", scope: !3765, file: !3765, line: 460, type: !5591, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!5591 = !DISubroutineType(types: !5592)
!5592 = !{null, !5359, !905}
!5593 = !DILocalVariable(name: "s", arg: 1, scope: !5590, file: !3765, line: 460, type: !5359)
!5594 = !DILocation(line: 460, column: 45, scope: !5590)
!5595 = !DILocalVariable(name: "n", arg: 2, scope: !5590, file: !3765, line: 460, type: !905)
!5596 = !DILocation(line: 460, column: 52, scope: !5590)
!5597 = !DILocalVariable(name: "re_index", scope: !5590, file: !3765, line: 481, type: !906)
!5598 = !DILocation(line: 481, column: 18, scope: !5590)
!5599 = !DILocation(line: 481, column: 30, scope: !5590)
!5600 = !DILocation(line: 481, column: 34, scope: !5590)
!5601 = !DILocalVariable(name: "re_cache", scope: !5590, file: !3765, line: 481, type: !906)
!5602 = !DILocation(line: 481, column: 78, scope: !5590)
!5603 = !DILocalVariable(name: "re_size_plus8", scope: !5590, file: !3765, line: 481, type: !906)
!5604 = !DILocation(line: 481, column: 101, scope: !5590)
!5605 = !DILocation(line: 481, column: 118, scope: !5590)
!5606 = !DILocation(line: 481, column: 122, scope: !5590)
!5607 = !DILocation(line: 482, column: 18, scope: !5590)
!5608 = !DILocation(line: 482, column: 36, scope: !5590)
!5609 = !DILocation(line: 482, column: 48, scope: !5590)
!5610 = !DILocation(line: 482, column: 45, scope: !5590)
!5611 = !DILocation(line: 482, column: 33, scope: !5590)
!5612 = !DILocation(line: 482, column: 17, scope: !5590)
!5613 = !DILocation(line: 482, column: 55, scope: !5614)
!5614 = !DILexicalBlockFile(scope: !5590, file: !3765, discriminator: 1)
!5615 = !DILocation(line: 482, column: 67, scope: !5614)
!5616 = !DILocation(line: 482, column: 64, scope: !5614)
!5617 = !DILocation(line: 482, column: 17, scope: !5614)
!5618 = !DILocation(line: 482, column: 74, scope: !5619)
!5619 = !DILexicalBlockFile(scope: !5590, file: !3765, discriminator: 2)
!5620 = !DILocation(line: 482, column: 17, scope: !5619)
!5621 = !DILocation(line: 482, column: 17, scope: !5622)
!5622 = !DILexicalBlockFile(scope: !5590, file: !3765, discriminator: 3)
!5623 = !DILocation(line: 482, column: 14, scope: !5622)
!5624 = !DILocation(line: 483, column: 18, scope: !5590)
!5625 = !DILocation(line: 483, column: 6, scope: !5590)
!5626 = !DILocation(line: 483, column: 10, scope: !5590)
!5627 = !DILocation(line: 483, column: 16, scope: !5590)
!5628 = !DILocation(line: 485, column: 1, scope: !5590)
!5629 = distinct !DISubprogram(name: "qdm2_get_vlc", scope: !934, file: !934, line: 201, type: !5630, isLocal: true, isDefinition: true, scopeLine: 202, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!5630 = !DISubroutineType(types: !5631)
!5631 = !{!905, !5359, !5632, !905, !905}
!5632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5633, size: 64, align: 64)
!5633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1675)
!5634 = !DILocalVariable(name: "s", arg: 1, scope: !5635, file: !3765, line: 762, type: !5359)
!5635 = distinct !DISubprogram(name: "get_vlc2", scope: !3765, file: !3765, line: 762, type: !5636, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!5636 = !DISubroutineType(types: !5637)
!5637 = !{!905, !5359, !1681, !905, !905}
!5638 = !DILocation(line: 762, column: 74, scope: !5635, inlinedAt: !5639)
!5639 = distinct !DILocation(line: 205, column: 13, scope: !5629)
!5640 = !DILocalVariable(name: "table", arg: 2, scope: !5635, file: !3765, line: 762, type: !1681)
!5641 = !DILocation(line: 762, column: 87, scope: !5635, inlinedAt: !5639)
!5642 = !DILocalVariable(name: "bits", arg: 3, scope: !5635, file: !3765, line: 763, type: !905)
!5643 = !DILocation(line: 763, column: 42, scope: !5635, inlinedAt: !5639)
!5644 = !DILocalVariable(name: "max_depth", arg: 4, scope: !5635, file: !3765, line: 763, type: !905)
!5645 = !DILocation(line: 763, column: 52, scope: !5635, inlinedAt: !5639)
!5646 = !DILocalVariable(name: "code", scope: !5635, file: !3765, line: 783, type: !905)
!5647 = !DILocation(line: 783, column: 9, scope: !5635, inlinedAt: !5639)
!5648 = !DILocalVariable(name: "re_index", scope: !5635, file: !3765, line: 785, type: !906)
!5649 = !DILocation(line: 785, column: 18, scope: !5635, inlinedAt: !5639)
!5650 = !DILocalVariable(name: "re_cache", scope: !5635, file: !3765, line: 785, type: !906)
!5651 = !DILocation(line: 785, column: 78, scope: !5635, inlinedAt: !5639)
!5652 = !DILocalVariable(name: "re_size_plus8", scope: !5635, file: !3765, line: 785, type: !906)
!5653 = !DILocation(line: 785, column: 101, scope: !5635, inlinedAt: !5639)
!5654 = !DILocalVariable(name: "n", scope: !5655, file: !3765, line: 788, type: !905)
!5655 = distinct !DILexicalBlock(scope: !5635, file: !3765, line: 788, column: 8)
!5656 = !DILocation(line: 788, column: 14, scope: !5655, inlinedAt: !5639)
!5657 = !DILocalVariable(name: "nb_bits", scope: !5655, file: !3765, line: 788, type: !905)
!5658 = !DILocation(line: 788, column: 17, scope: !5655, inlinedAt: !5639)
!5659 = !DILocalVariable(name: "index", scope: !5655, file: !3765, line: 788, type: !906)
!5660 = !DILocation(line: 788, column: 39, scope: !5655, inlinedAt: !5639)
!5661 = !DILocalVariable(name: "gb", arg: 1, scope: !5629, file: !934, line: 201, type: !5359)
!5662 = !DILocation(line: 201, column: 40, scope: !5629)
!5663 = !DILocalVariable(name: "vlc", arg: 2, scope: !5629, file: !934, line: 201, type: !5632)
!5664 = !DILocation(line: 201, column: 55, scope: !5629)
!5665 = !DILocalVariable(name: "flag", arg: 3, scope: !5629, file: !934, line: 201, type: !905)
!5666 = !DILocation(line: 201, column: 64, scope: !5629)
!5667 = !DILocalVariable(name: "depth", arg: 4, scope: !5629, file: !934, line: 201, type: !905)
!5668 = !DILocation(line: 201, column: 74, scope: !5629)
!5669 = !DILocalVariable(name: "value", scope: !5629, file: !934, line: 203, type: !905)
!5670 = !DILocation(line: 203, column: 9, scope: !5629)
!5671 = !DILocation(line: 205, column: 22, scope: !5629)
!5672 = !DILocation(line: 205, column: 26, scope: !5629)
!5673 = !DILocation(line: 205, column: 31, scope: !5629)
!5674 = !DILocation(line: 205, column: 38, scope: !5629)
!5675 = !DILocation(line: 205, column: 43, scope: !5629)
!5676 = !DILocation(line: 205, column: 49, scope: !5629)
!5677 = !DILocation(line: 205, column: 13, scope: !5629)
!5678 = !DILocation(line: 785, column: 30, scope: !5635, inlinedAt: !5639)
!5679 = !DILocation(line: 785, column: 34, scope: !5635, inlinedAt: !5639)
!5680 = !DILocation(line: 785, column: 118, scope: !5635, inlinedAt: !5639)
!5681 = !DILocation(line: 785, column: 122, scope: !5635, inlinedAt: !5639)
!5682 = !DILocation(line: 786, column: 49, scope: !5635, inlinedAt: !5639)
!5683 = !DILocation(line: 786, column: 53, scope: !5635, inlinedAt: !5639)
!5684 = !DILocation(line: 786, column: 63, scope: !5635, inlinedAt: !5639)
!5685 = !DILocation(line: 786, column: 72, scope: !5635, inlinedAt: !5639)
!5686 = !DILocation(line: 786, column: 60, scope: !5635, inlinedAt: !5639)
!5687 = !DILocation(line: 786, column: 81, scope: !5635, inlinedAt: !5639)
!5688 = !DILocation(line: 786, column: 88, scope: !5635, inlinedAt: !5639)
!5689 = !DILocation(line: 786, column: 97, scope: !5635, inlinedAt: !5639)
!5690 = !DILocation(line: 786, column: 84, scope: !5635, inlinedAt: !5639)
!5691 = !DILocation(line: 786, column: 14, scope: !5635, inlinedAt: !5639)
!5692 = !DILocation(line: 788, column: 66, scope: !5693, inlinedAt: !5639)
!5693 = !DILexicalBlockFile(scope: !5655, file: !3765, discriminator: 1)
!5694 = !DILocation(line: 788, column: 76, scope: !5693, inlinedAt: !5639)
!5695 = !DILocation(line: 788, column: 54, scope: !5693, inlinedAt: !5639)
!5696 = !DILocation(line: 788, column: 52, scope: !5693, inlinedAt: !5639)
!5697 = !DILocation(line: 788, column: 96, scope: !5693, inlinedAt: !5639)
!5698 = !DILocation(line: 788, column: 90, scope: !5693, inlinedAt: !5639)
!5699 = !DILocation(line: 788, column: 88, scope: !5693, inlinedAt: !5639)
!5700 = !DILocation(line: 788, column: 117, scope: !5693, inlinedAt: !5639)
!5701 = !DILocation(line: 788, column: 111, scope: !5693, inlinedAt: !5639)
!5702 = !DILocation(line: 788, column: 109, scope: !5693, inlinedAt: !5639)
!5703 = !DILocation(line: 788, column: 132, scope: !5693, inlinedAt: !5639)
!5704 = !DILocation(line: 788, column: 142, scope: !5693, inlinedAt: !5639)
!5705 = !DILocation(line: 788, column: 146, scope: !5693, inlinedAt: !5639)
!5706 = !DILocation(line: 788, column: 149, scope: !5707, inlinedAt: !5639)
!5707 = !DILexicalBlockFile(scope: !5708, file: !3765, discriminator: 2)
!5708 = distinct !DILexicalBlock(scope: !5655, file: !3765, line: 788, column: 132)
!5709 = !DILocation(line: 788, column: 151, scope: !5707, inlinedAt: !5639)
!5710 = !DILocation(line: 788, column: 132, scope: !5707, inlinedAt: !5639)
!5711 = !DILocation(line: 788, column: 171, scope: !5712, inlinedAt: !5639)
!5712 = !DILexicalBlockFile(scope: !5713, file: !3765, discriminator: 3)
!5713 = distinct !DILexicalBlock(scope: !5708, file: !3765, line: 788, column: 156)
!5714 = !DILocation(line: 788, column: 189, scope: !5712, inlinedAt: !5639)
!5715 = !DILocation(line: 788, column: 201, scope: !5712, inlinedAt: !5639)
!5716 = !DILocation(line: 788, column: 198, scope: !5712, inlinedAt: !5639)
!5717 = !DILocation(line: 788, column: 186, scope: !5712, inlinedAt: !5639)
!5718 = !DILocation(line: 788, column: 170, scope: !5712, inlinedAt: !5639)
!5719 = !DILocation(line: 788, column: 211, scope: !5720, inlinedAt: !5639)
!5720 = !DILexicalBlockFile(scope: !5713, file: !3765, discriminator: 4)
!5721 = !DILocation(line: 788, column: 223, scope: !5720, inlinedAt: !5639)
!5722 = !DILocation(line: 788, column: 220, scope: !5720, inlinedAt: !5639)
!5723 = !DILocation(line: 788, column: 170, scope: !5720, inlinedAt: !5639)
!5724 = !DILocation(line: 788, column: 233, scope: !5725, inlinedAt: !5639)
!5725 = !DILexicalBlockFile(scope: !5713, file: !3765, discriminator: 5)
!5726 = !DILocation(line: 788, column: 170, scope: !5725, inlinedAt: !5639)
!5727 = !DILocation(line: 788, column: 170, scope: !5728, inlinedAt: !5639)
!5728 = !DILexicalBlockFile(scope: !5713, file: !3765, discriminator: 6)
!5729 = !DILocation(line: 788, column: 167, scope: !5728, inlinedAt: !5639)
!5730 = !DILocation(line: 788, column: 294, scope: !5728, inlinedAt: !5639)
!5731 = !DILocation(line: 788, column: 298, scope: !5728, inlinedAt: !5639)
!5732 = !DILocation(line: 788, column: 308, scope: !5728, inlinedAt: !5639)
!5733 = !DILocation(line: 788, column: 317, scope: !5728, inlinedAt: !5639)
!5734 = !DILocation(line: 788, column: 305, scope: !5728, inlinedAt: !5639)
!5735 = !DILocation(line: 788, column: 326, scope: !5728, inlinedAt: !5639)
!5736 = !DILocation(line: 788, column: 333, scope: !5728, inlinedAt: !5639)
!5737 = !DILocation(line: 788, column: 342, scope: !5728, inlinedAt: !5639)
!5738 = !DILocation(line: 788, column: 329, scope: !5728, inlinedAt: !5639)
!5739 = !DILocation(line: 788, column: 259, scope: !5728, inlinedAt: !5639)
!5740 = !DILocation(line: 788, column: 359, scope: !5728, inlinedAt: !5639)
!5741 = !DILocation(line: 788, column: 358, scope: !5728, inlinedAt: !5639)
!5742 = !DILocation(line: 788, column: 356, scope: !5728, inlinedAt: !5639)
!5743 = !DILocation(line: 788, column: 382, scope: !5728, inlinedAt: !5639)
!5744 = !DILocation(line: 788, column: 392, scope: !5728, inlinedAt: !5639)
!5745 = !DILocation(line: 788, column: 370, scope: !5728, inlinedAt: !5639)
!5746 = !DILocation(line: 788, column: 403, scope: !5728, inlinedAt: !5639)
!5747 = !DILocation(line: 788, column: 401, scope: !5728, inlinedAt: !5639)
!5748 = !DILocation(line: 788, column: 368, scope: !5728, inlinedAt: !5639)
!5749 = !DILocation(line: 788, column: 422, scope: !5728, inlinedAt: !5639)
!5750 = !DILocation(line: 788, column: 416, scope: !5728, inlinedAt: !5639)
!5751 = !DILocation(line: 788, column: 414, scope: !5728, inlinedAt: !5639)
!5752 = !DILocation(line: 788, column: 443, scope: !5728, inlinedAt: !5639)
!5753 = !DILocation(line: 788, column: 437, scope: !5728, inlinedAt: !5639)
!5754 = !DILocation(line: 788, column: 435, scope: !5728, inlinedAt: !5639)
!5755 = !DILocation(line: 788, column: 458, scope: !5728, inlinedAt: !5639)
!5756 = !DILocation(line: 788, column: 468, scope: !5728, inlinedAt: !5639)
!5757 = !DILocation(line: 788, column: 472, scope: !5728, inlinedAt: !5639)
!5758 = !DILocation(line: 788, column: 475, scope: !5759, inlinedAt: !5639)
!5759 = !DILexicalBlockFile(scope: !5760, file: !3765, discriminator: 7)
!5760 = distinct !DILexicalBlock(scope: !5713, file: !3765, line: 788, column: 458)
!5761 = !DILocation(line: 788, column: 477, scope: !5759, inlinedAt: !5639)
!5762 = !DILocation(line: 788, column: 458, scope: !5759, inlinedAt: !5639)
!5763 = !DILocation(line: 788, column: 497, scope: !5764, inlinedAt: !5639)
!5764 = !DILexicalBlockFile(scope: !5765, file: !3765, discriminator: 8)
!5765 = distinct !DILexicalBlock(scope: !5760, file: !3765, line: 788, column: 482)
!5766 = !DILocation(line: 788, column: 515, scope: !5764, inlinedAt: !5639)
!5767 = !DILocation(line: 788, column: 527, scope: !5764, inlinedAt: !5639)
!5768 = !DILocation(line: 788, column: 524, scope: !5764, inlinedAt: !5639)
!5769 = !DILocation(line: 788, column: 512, scope: !5764, inlinedAt: !5639)
!5770 = !DILocation(line: 788, column: 496, scope: !5764, inlinedAt: !5639)
!5771 = !DILocation(line: 788, column: 540, scope: !5772, inlinedAt: !5639)
!5772 = !DILexicalBlockFile(scope: !5765, file: !3765, discriminator: 9)
!5773 = !DILocation(line: 788, column: 552, scope: !5772, inlinedAt: !5639)
!5774 = !DILocation(line: 788, column: 549, scope: !5772, inlinedAt: !5639)
!5775 = !DILocation(line: 788, column: 496, scope: !5772, inlinedAt: !5639)
!5776 = !DILocation(line: 788, column: 565, scope: !5777, inlinedAt: !5639)
!5777 = !DILexicalBlockFile(scope: !5765, file: !3765, discriminator: 10)
!5778 = !DILocation(line: 788, column: 496, scope: !5777, inlinedAt: !5639)
!5779 = !DILocation(line: 788, column: 496, scope: !5780, inlinedAt: !5639)
!5780 = !DILexicalBlockFile(scope: !5765, file: !3765, discriminator: 11)
!5781 = !DILocation(line: 788, column: 493, scope: !5780, inlinedAt: !5639)
!5782 = !DILocation(line: 788, column: 626, scope: !5780, inlinedAt: !5639)
!5783 = !DILocation(line: 788, column: 630, scope: !5780, inlinedAt: !5639)
!5784 = !DILocation(line: 788, column: 640, scope: !5780, inlinedAt: !5639)
!5785 = !DILocation(line: 788, column: 649, scope: !5780, inlinedAt: !5639)
!5786 = !DILocation(line: 788, column: 637, scope: !5780, inlinedAt: !5639)
!5787 = !DILocation(line: 788, column: 658, scope: !5780, inlinedAt: !5639)
!5788 = !DILocation(line: 788, column: 665, scope: !5780, inlinedAt: !5639)
!5789 = !DILocation(line: 788, column: 674, scope: !5780, inlinedAt: !5639)
!5790 = !DILocation(line: 788, column: 661, scope: !5780, inlinedAt: !5639)
!5791 = !DILocation(line: 788, column: 591, scope: !5780, inlinedAt: !5639)
!5792 = !DILocation(line: 788, column: 691, scope: !5780, inlinedAt: !5639)
!5793 = !DILocation(line: 788, column: 690, scope: !5780, inlinedAt: !5639)
!5794 = !DILocation(line: 788, column: 688, scope: !5780, inlinedAt: !5639)
!5795 = !DILocation(line: 788, column: 714, scope: !5780, inlinedAt: !5639)
!5796 = !DILocation(line: 788, column: 724, scope: !5780, inlinedAt: !5639)
!5797 = !DILocation(line: 788, column: 702, scope: !5780, inlinedAt: !5639)
!5798 = !DILocation(line: 788, column: 735, scope: !5780, inlinedAt: !5639)
!5799 = !DILocation(line: 788, column: 733, scope: !5780, inlinedAt: !5639)
!5800 = !DILocation(line: 788, column: 700, scope: !5780, inlinedAt: !5639)
!5801 = !DILocation(line: 788, column: 754, scope: !5780, inlinedAt: !5639)
!5802 = !DILocation(line: 788, column: 748, scope: !5780, inlinedAt: !5639)
!5803 = !DILocation(line: 788, column: 746, scope: !5780, inlinedAt: !5639)
!5804 = !DILocation(line: 788, column: 775, scope: !5780, inlinedAt: !5639)
!5805 = !DILocation(line: 788, column: 769, scope: !5780, inlinedAt: !5639)
!5806 = !DILocation(line: 788, column: 767, scope: !5780, inlinedAt: !5639)
!5807 = !DILocation(line: 788, column: 786, scope: !5780, inlinedAt: !5639)
!5808 = !DILocation(line: 788, column: 788, scope: !5809, inlinedAt: !5639)
!5809 = !DILexicalBlockFile(scope: !5713, file: !3765, discriminator: 12)
!5810 = !DILocation(line: 788, column: 809, scope: !5811, inlinedAt: !5639)
!5811 = !DILexicalBlockFile(scope: !5812, file: !3765, discriminator: 14)
!5812 = distinct !DILexicalBlock(scope: !5655, file: !3765, line: 788, column: 793)
!5813 = !DILocation(line: 788, column: 804, scope: !5811, inlinedAt: !5639)
!5814 = !DILocation(line: 788, column: 826, scope: !5811, inlinedAt: !5639)
!5815 = !DILocation(line: 788, column: 844, scope: !5811, inlinedAt: !5639)
!5816 = !DILocation(line: 788, column: 856, scope: !5811, inlinedAt: !5639)
!5817 = !DILocation(line: 788, column: 853, scope: !5811, inlinedAt: !5639)
!5818 = !DILocation(line: 788, column: 841, scope: !5811, inlinedAt: !5639)
!5819 = !DILocation(line: 788, column: 825, scope: !5811, inlinedAt: !5639)
!5820 = !DILocation(line: 788, column: 863, scope: !5821, inlinedAt: !5639)
!5821 = !DILexicalBlockFile(scope: !5812, file: !3765, discriminator: 15)
!5822 = !DILocation(line: 788, column: 875, scope: !5821, inlinedAt: !5639)
!5823 = !DILocation(line: 788, column: 872, scope: !5821, inlinedAt: !5639)
!5824 = !DILocation(line: 788, column: 825, scope: !5821, inlinedAt: !5639)
!5825 = !DILocation(line: 788, column: 882, scope: !5826, inlinedAt: !5639)
!5826 = !DILexicalBlockFile(scope: !5812, file: !3765, discriminator: 16)
!5827 = !DILocation(line: 788, column: 825, scope: !5826, inlinedAt: !5639)
!5828 = !DILocation(line: 788, column: 825, scope: !5829, inlinedAt: !5639)
!5829 = !DILexicalBlockFile(scope: !5812, file: !3765, discriminator: 17)
!5830 = !DILocation(line: 788, column: 822, scope: !5829, inlinedAt: !5639)
!5831 = !DILocation(line: 790, column: 18, scope: !5635, inlinedAt: !5639)
!5832 = !DILocation(line: 790, column: 6, scope: !5635, inlinedAt: !5639)
!5833 = !DILocation(line: 790, column: 10, scope: !5635, inlinedAt: !5639)
!5834 = !DILocation(line: 790, column: 16, scope: !5635, inlinedAt: !5639)
!5835 = !DILocation(line: 792, column: 12, scope: !5635, inlinedAt: !5639)
!5836 = !DILocation(line: 205, column: 11, scope: !5629)
!5837 = !DILocation(line: 208, column: 14, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5629, file: !934, line: 208, column: 9)
!5839 = !DILocation(line: 208, column: 17, scope: !5838)
!5840 = !DILocation(line: 208, column: 9, scope: !5629)
!5841 = !DILocation(line: 209, column: 26, scope: !5838)
!5842 = !DILocation(line: 209, column: 39, scope: !5838)
!5843 = !DILocation(line: 209, column: 30, scope: !5838)
!5844 = !DILocation(line: 209, column: 46, scope: !5838)
!5845 = !DILocation(line: 209, column: 17, scope: !5846)
!5846 = !DILexicalBlockFile(scope: !5838, file: !934, discriminator: 1)
!5847 = !DILocation(line: 209, column: 15, scope: !5838)
!5848 = !DILocation(line: 209, column: 9, scope: !5838)
!5849 = !DILocation(line: 212, column: 9, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5629, file: !934, line: 212, column: 9)
!5851 = !DILocation(line: 212, column: 9, scope: !5629)
!5852 = !DILocalVariable(name: "tmp", scope: !5853, file: !934, line: 213, type: !905)
!5853 = distinct !DILexicalBlock(scope: !5850, file: !934, line: 212, column: 15)
!5854 = !DILocation(line: 213, column: 13, scope: !5853)
!5855 = !DILocation(line: 215, column: 13, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5853, file: !934, line: 215, column: 13)
!5857 = !DILocation(line: 215, column: 19, scope: !5856)
!5858 = !DILocation(line: 215, column: 13, scope: !5853)
!5859 = !DILocation(line: 216, column: 69, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5856, file: !934, line: 215, column: 26)
!5861 = !DILocation(line: 216, column: 13, scope: !5860)
!5862 = !DILocation(line: 217, column: 13, scope: !5860)
!5863 = !DILocation(line: 220, column: 32, scope: !5853)
!5864 = !DILocation(line: 220, column: 14, scope: !5853)
!5865 = !DILocation(line: 220, column: 12, scope: !5853)
!5866 = !DILocation(line: 222, column: 14, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5853, file: !934, line: 222, column: 13)
!5868 = !DILocation(line: 222, column: 20, scope: !5867)
!5869 = !DILocation(line: 222, column: 26, scope: !5867)
!5870 = !DILocation(line: 222, column: 13, scope: !5853)
!5871 = !DILocation(line: 223, column: 29, scope: !5867)
!5872 = !DILocation(line: 223, column: 34, scope: !5867)
!5873 = !DILocation(line: 223, column: 40, scope: !5867)
!5874 = !DILocation(line: 223, column: 20, scope: !5867)
!5875 = !DILocation(line: 223, column: 17, scope: !5867)
!5876 = !DILocation(line: 223, column: 13, scope: !5867)
!5877 = !DILocation(line: 224, column: 17, scope: !5853)
!5878 = !DILocation(line: 224, column: 15, scope: !5853)
!5879 = !DILocation(line: 225, column: 5, scope: !5853)
!5880 = !DILocation(line: 227, column: 12, scope: !5629)
!5881 = !DILocation(line: 227, column: 5, scope: !5629)
!5882 = !DILocation(line: 228, column: 1, scope: !5629)
!5883 = distinct !DISubprogram(name: "process_synthesis_subpackets", scope: !934, file: !934, line: 1081, type: !5884, isLocal: true, isDefinition: true, scopeLine: 1082, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!5884 = !DISubroutineType(types: !5885)
!5885 = !{null, !1999, !5886}
!5886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64, align: 64)
!5887 = !DILocalVariable(name: "q", arg: 1, scope: !5883, file: !934, line: 1081, type: !1999)
!5888 = !DILocation(line: 1081, column: 55, scope: !5883)
!5889 = !DILocalVariable(name: "list", arg: 2, scope: !5883, file: !934, line: 1081, type: !5886)
!5890 = !DILocation(line: 1081, column: 72, scope: !5883)
!5891 = !DILocalVariable(name: "nodes", scope: !5883, file: !934, line: 1083, type: !5892)
!5892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5886, size: 256, align: 64, elements: !1158)
!5893 = !DILocation(line: 1083, column: 19, scope: !5883)
!5894 = !DILocation(line: 1085, column: 51, scope: !5883)
!5895 = !DILocation(line: 1085, column: 16, scope: !5883)
!5896 = !DILocation(line: 1085, column: 5, scope: !5883)
!5897 = !DILocation(line: 1085, column: 14, scope: !5883)
!5898 = !DILocation(line: 1086, column: 9, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5883, file: !934, line: 1086, column: 9)
!5900 = !DILocation(line: 1086, column: 9, scope: !5883)
!5901 = !DILocation(line: 1087, column: 29, scope: !5899)
!5902 = !DILocation(line: 1087, column: 32, scope: !5899)
!5903 = !DILocation(line: 1087, column: 9, scope: !5899)
!5904 = !DILocation(line: 1089, column: 51, scope: !5883)
!5905 = !DILocation(line: 1089, column: 16, scope: !5883)
!5906 = !DILocation(line: 1089, column: 5, scope: !5883)
!5907 = !DILocation(line: 1089, column: 14, scope: !5883)
!5908 = !DILocation(line: 1090, column: 9, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5883, file: !934, line: 1090, column: 9)
!5910 = !DILocation(line: 1090, column: 9, scope: !5883)
!5911 = !DILocation(line: 1091, column: 30, scope: !5909)
!5912 = !DILocation(line: 1091, column: 33, scope: !5909)
!5913 = !DILocation(line: 1091, column: 9, scope: !5909)
!5914 = !DILocation(line: 1093, column: 30, scope: !5909)
!5915 = !DILocation(line: 1093, column: 9, scope: !5909)
!5916 = !DILocation(line: 1095, column: 51, scope: !5883)
!5917 = !DILocation(line: 1095, column: 16, scope: !5883)
!5918 = !DILocation(line: 1095, column: 5, scope: !5883)
!5919 = !DILocation(line: 1095, column: 14, scope: !5883)
!5920 = !DILocation(line: 1096, column: 9, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5883, file: !934, line: 1096, column: 9)
!5922 = !DILocation(line: 1096, column: 18, scope: !5921)
!5923 = !DILocation(line: 1096, column: 21, scope: !5924)
!5924 = !DILexicalBlockFile(scope: !5921, file: !934, discriminator: 1)
!5925 = !DILocation(line: 1096, column: 30, scope: !5924)
!5926 = !DILocation(line: 1096, column: 33, scope: !5927)
!5927 = !DILexicalBlockFile(scope: !5921, file: !934, discriminator: 2)
!5928 = !DILocation(line: 1096, column: 9, scope: !5927)
!5929 = !DILocation(line: 1097, column: 30, scope: !5921)
!5930 = !DILocation(line: 1097, column: 33, scope: !5921)
!5931 = !DILocation(line: 1097, column: 9, scope: !5921)
!5932 = !DILocation(line: 1099, column: 30, scope: !5921)
!5933 = !DILocation(line: 1099, column: 9, scope: !5921)
!5934 = !DILocation(line: 1101, column: 51, scope: !5883)
!5935 = !DILocation(line: 1101, column: 16, scope: !5883)
!5936 = !DILocation(line: 1101, column: 5, scope: !5883)
!5937 = !DILocation(line: 1101, column: 14, scope: !5883)
!5938 = !DILocation(line: 1102, column: 9, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5883, file: !934, line: 1102, column: 9)
!5940 = !DILocation(line: 1102, column: 18, scope: !5939)
!5941 = !DILocation(line: 1102, column: 21, scope: !5942)
!5942 = !DILexicalBlockFile(scope: !5939, file: !934, discriminator: 1)
!5943 = !DILocation(line: 1102, column: 30, scope: !5942)
!5944 = !DILocation(line: 1102, column: 33, scope: !5945)
!5945 = !DILexicalBlockFile(scope: !5939, file: !934, discriminator: 2)
!5946 = !DILocation(line: 1102, column: 9, scope: !5945)
!5947 = !DILocation(line: 1103, column: 30, scope: !5939)
!5948 = !DILocation(line: 1103, column: 33, scope: !5939)
!5949 = !DILocation(line: 1103, column: 9, scope: !5939)
!5950 = !DILocation(line: 1105, column: 30, scope: !5939)
!5951 = !DILocation(line: 1105, column: 9, scope: !5939)
!5952 = !DILocation(line: 1106, column: 1, scope: !5883)
!5953 = distinct !DISubprogram(name: "process_subpacket_10", scope: !934, file: !934, line: 1014, type: !5884, isLocal: true, isDefinition: true, scopeLine: 1015, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!5954 = !DILocalVariable(name: "q", arg: 1, scope: !5953, file: !934, line: 1014, type: !1999)
!5955 = !DILocation(line: 1014, column: 47, scope: !5953)
!5956 = !DILocalVariable(name: "node", arg: 2, scope: !5953, file: !934, line: 1014, type: !5886)
!5957 = !DILocation(line: 1014, column: 64, scope: !5953)
!5958 = !DILocalVariable(name: "gb", scope: !5953, file: !934, line: 1016, type: !3764)
!5959 = !DILocation(line: 1016, column: 19, scope: !5953)
!5960 = !DILocation(line: 1018, column: 9, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5953, file: !934, line: 1018, column: 9)
!5962 = !DILocation(line: 1018, column: 9, scope: !5953)
!5963 = !DILocation(line: 1019, column: 28, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5961, file: !934, line: 1018, column: 15)
!5965 = !DILocation(line: 1019, column: 34, scope: !5964)
!5966 = !DILocation(line: 1019, column: 42, scope: !5964)
!5967 = !DILocation(line: 1019, column: 48, scope: !5964)
!5968 = !DILocation(line: 1019, column: 54, scope: !5964)
!5969 = !DILocation(line: 1019, column: 62, scope: !5964)
!5970 = !DILocation(line: 1019, column: 67, scope: !5964)
!5971 = !DILocation(line: 1019, column: 9, scope: !5964)
!5972 = !DILocation(line: 1020, column: 40, scope: !5964)
!5973 = !DILocation(line: 1020, column: 9, scope: !5964)
!5974 = !DILocation(line: 1021, column: 31, scope: !5964)
!5975 = !DILocation(line: 1021, column: 9, scope: !5964)
!5976 = !DILocation(line: 1022, column: 5, scope: !5964)
!5977 = !DILocation(line: 1023, column: 31, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5961, file: !934, line: 1022, column: 12)
!5979 = !DILocation(line: 1023, column: 9, scope: !5978)
!5980 = !DILocation(line: 1025, column: 1, scope: !5953)
!5981 = distinct !DISubprogram(name: "process_subpacket_11", scope: !934, file: !934, line: 1033, type: !5884, isLocal: true, isDefinition: true, scopeLine: 1034, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!5982 = !DILocalVariable(name: "q", arg: 1, scope: !5981, file: !934, line: 1033, type: !1999)
!5983 = !DILocation(line: 1033, column: 47, scope: !5981)
!5984 = !DILocalVariable(name: "node", arg: 2, scope: !5981, file: !934, line: 1033, type: !5886)
!5985 = !DILocation(line: 1033, column: 64, scope: !5981)
!5986 = !DILocalVariable(name: "gb", scope: !5981, file: !934, line: 1035, type: !3764)
!5987 = !DILocation(line: 1035, column: 19, scope: !5981)
!5988 = !DILocalVariable(name: "length", scope: !5981, file: !934, line: 1036, type: !905)
!5989 = !DILocation(line: 1036, column: 9, scope: !5981)
!5990 = !DILocation(line: 1038, column: 9, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5981, file: !934, line: 1038, column: 9)
!5992 = !DILocation(line: 1038, column: 9, scope: !5981)
!5993 = !DILocation(line: 1039, column: 18, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5991, file: !934, line: 1038, column: 15)
!5995 = !DILocation(line: 1039, column: 24, scope: !5994)
!5996 = !DILocation(line: 1039, column: 32, scope: !5994)
!5997 = !DILocation(line: 1039, column: 37, scope: !5994)
!5998 = !DILocation(line: 1039, column: 16, scope: !5994)
!5999 = !DILocation(line: 1040, column: 28, scope: !5994)
!6000 = !DILocation(line: 1040, column: 34, scope: !5994)
!6001 = !DILocation(line: 1040, column: 42, scope: !5994)
!6002 = !DILocation(line: 1040, column: 48, scope: !5994)
!6003 = !DILocation(line: 1040, column: 9, scope: !5994)
!6004 = !DILocation(line: 1041, column: 5, scope: !5994)
!6005 = !DILocation(line: 1043, column: 9, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5981, file: !934, line: 1043, column: 9)
!6007 = !DILocation(line: 1043, column: 16, scope: !6006)
!6008 = !DILocation(line: 1043, column: 9, scope: !5981)
!6009 = !DILocalVariable(name: "c", scope: !6010, file: !934, line: 1044, type: !905)
!6010 = distinct !DILexicalBlock(scope: !6006, file: !934, line: 1043, column: 23)
!6011 = !DILocation(line: 1044, column: 13, scope: !6010)
!6012 = !DILocation(line: 1044, column: 17, scope: !6010)
!6013 = !DILocation(line: 1046, column: 13, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6010, file: !934, line: 1046, column: 13)
!6015 = !DILocation(line: 1046, column: 15, scope: !6014)
!6016 = !DILocation(line: 1046, column: 13, scope: !6010)
!6017 = !DILocation(line: 1047, column: 38, scope: !6014)
!6018 = !DILocation(line: 1047, column: 41, scope: !6014)
!6019 = !DILocation(line: 1048, column: 38, scope: !6014)
!6020 = !DILocation(line: 1048, column: 41, scope: !6014)
!6021 = !DILocation(line: 1048, column: 62, scope: !6014)
!6022 = !DILocation(line: 1048, column: 65, scope: !6014)
!6023 = !DILocation(line: 1049, column: 38, scope: !6014)
!6024 = !DILocation(line: 1049, column: 41, scope: !6014)
!6025 = !DILocation(line: 1049, column: 58, scope: !6014)
!6026 = !DILocation(line: 1049, column: 56, scope: !6014)
!6027 = !DILocation(line: 1050, column: 38, scope: !6014)
!6028 = !DILocation(line: 1050, column: 41, scope: !6014)
!6029 = !DILocation(line: 1050, column: 61, scope: !6014)
!6030 = !DILocation(line: 1050, column: 64, scope: !6014)
!6031 = !DILocation(line: 1047, column: 13, scope: !6014)
!6032 = !DILocation(line: 1051, column: 5, scope: !6010)
!6033 = !DILocation(line: 1053, column: 32, scope: !5981)
!6034 = !DILocation(line: 1053, column: 40, scope: !5981)
!6035 = !DILocation(line: 1053, column: 5, scope: !5981)
!6036 = !DILocation(line: 1054, column: 1, scope: !5981)
!6037 = distinct !DISubprogram(name: "process_subpacket_12", scope: !934, file: !934, line: 1062, type: !5884, isLocal: true, isDefinition: true, scopeLine: 1063, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!6038 = !DILocalVariable(name: "q", arg: 1, scope: !6037, file: !934, line: 1062, type: !1999)
!6039 = !DILocation(line: 1062, column: 47, scope: !6037)
!6040 = !DILocalVariable(name: "node", arg: 2, scope: !6037, file: !934, line: 1062, type: !5886)
!6041 = !DILocation(line: 1062, column: 64, scope: !6037)
!6042 = !DILocalVariable(name: "gb", scope: !6037, file: !934, line: 1064, type: !3764)
!6043 = !DILocation(line: 1064, column: 19, scope: !6037)
!6044 = !DILocalVariable(name: "length", scope: !6037, file: !934, line: 1065, type: !905)
!6045 = !DILocation(line: 1065, column: 9, scope: !6037)
!6046 = !DILocation(line: 1067, column: 9, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6037, file: !934, line: 1067, column: 9)
!6048 = !DILocation(line: 1067, column: 9, scope: !6037)
!6049 = !DILocation(line: 1068, column: 18, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6047, file: !934, line: 1067, column: 15)
!6051 = !DILocation(line: 1068, column: 24, scope: !6050)
!6052 = !DILocation(line: 1068, column: 32, scope: !6050)
!6053 = !DILocation(line: 1068, column: 37, scope: !6050)
!6054 = !DILocation(line: 1068, column: 16, scope: !6050)
!6055 = !DILocation(line: 1069, column: 28, scope: !6050)
!6056 = !DILocation(line: 1069, column: 34, scope: !6050)
!6057 = !DILocation(line: 1069, column: 42, scope: !6050)
!6058 = !DILocation(line: 1069, column: 48, scope: !6050)
!6059 = !DILocation(line: 1069, column: 9, scope: !6050)
!6060 = !DILocation(line: 1070, column: 5, scope: !6050)
!6061 = !DILocation(line: 1072, column: 32, scope: !6037)
!6062 = !DILocation(line: 1072, column: 40, scope: !6037)
!6063 = !DILocation(line: 1072, column: 54, scope: !6037)
!6064 = !DILocation(line: 1072, column: 57, scope: !6037)
!6065 = !DILocation(line: 1072, column: 71, scope: !6037)
!6066 = !DILocation(line: 1072, column: 52, scope: !6037)
!6067 = !DILocation(line: 1072, column: 52, scope: !6068)
!6068 = !DILexicalBlockFile(scope: !6037, file: !934, discriminator: 1)
!6069 = !DILocation(line: 1072, column: 90, scope: !6070)
!6070 = !DILexicalBlockFile(scope: !6037, file: !934, discriminator: 2)
!6071 = !DILocation(line: 1072, column: 93, scope: !6070)
!6072 = !DILocation(line: 1072, column: 86, scope: !6070)
!6073 = !DILocation(line: 1072, column: 52, scope: !6070)
!6074 = !DILocation(line: 1072, column: 52, scope: !6075)
!6075 = !DILexicalBlockFile(scope: !6037, file: !934, discriminator: 3)
!6076 = !DILocation(line: 1072, column: 5, scope: !6075)
!6077 = !DILocation(line: 1073, column: 1, scope: !6037)
!6078 = distinct !DISubprogram(name: "zero_extend", scope: !6079, file: !6079, line: 139, type: !6080, isLocal: true, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!6079 = !DIFile(filename: "libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6080 = !DISubroutineType(types: !6081)
!6081 = !{!906, !906, !906}
!6082 = !DILocalVariable(name: "val", arg: 1, scope: !6078, file: !6079, line: 139, type: !906)
!6083 = !DILocation(line: 139, column: 68, scope: !6078)
!6084 = !DILocalVariable(name: "bits", arg: 2, scope: !6078, file: !6079, line: 139, type: !906)
!6085 = !DILocation(line: 139, column: 82, scope: !6078)
!6086 = !DILocation(line: 141, column: 13, scope: !6078)
!6087 = !DILocation(line: 141, column: 41, scope: !6078)
!6088 = !DILocation(line: 141, column: 39, scope: !6078)
!6089 = !DILocation(line: 141, column: 17, scope: !6078)
!6090 = !DILocation(line: 141, column: 72, scope: !6078)
!6091 = !DILocation(line: 141, column: 70, scope: !6078)
!6092 = !DILocation(line: 141, column: 48, scope: !6078)
!6093 = !DILocation(line: 141, column: 5, scope: !6078)
!6094 = distinct !DISubprogram(name: "qdm2_search_subpacket_type_in_list", scope: !934, file: !934, line: 297, type: !6095, isLocal: true, isDefinition: true, scopeLine: 299, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!6095 = !DISubroutineType(types: !6096)
!6096 = !{!5886, !5886, !905}
!6097 = !DILocalVariable(name: "list", arg: 1, scope: !6094, file: !934, line: 297, type: !5886)
!6098 = !DILocation(line: 297, column: 71, scope: !6094)
!6099 = !DILocalVariable(name: "type", arg: 2, scope: !6094, file: !934, line: 298, type: !905)
!6100 = !DILocation(line: 298, column: 61, scope: !6094)
!6101 = !DILocation(line: 300, column: 5, scope: !6094)
!6102 = !DILocation(line: 300, column: 12, scope: !6103)
!6103 = !DILexicalBlockFile(scope: !6094, file: !934, discriminator: 1)
!6104 = !DILocation(line: 300, column: 17, scope: !6103)
!6105 = !DILocation(line: 300, column: 20, scope: !6106)
!6106 = !DILexicalBlockFile(scope: !6094, file: !934, discriminator: 2)
!6107 = !DILocation(line: 300, column: 26, scope: !6106)
!6108 = !DILocation(line: 300, column: 17, scope: !6106)
!6109 = !DILocation(line: 300, column: 5, scope: !6110)
!6110 = !DILexicalBlockFile(scope: !6094, file: !934, discriminator: 3)
!6111 = !DILocation(line: 301, column: 13, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6113, file: !934, line: 301, column: 13)
!6113 = distinct !DILexicalBlock(scope: !6094, file: !934, line: 300, column: 34)
!6114 = !DILocation(line: 301, column: 19, scope: !6112)
!6115 = !DILocation(line: 301, column: 27, scope: !6112)
!6116 = !DILocation(line: 301, column: 35, scope: !6112)
!6117 = !DILocation(line: 301, column: 32, scope: !6112)
!6118 = !DILocation(line: 301, column: 13, scope: !6113)
!6119 = !DILocation(line: 302, column: 20, scope: !6112)
!6120 = !DILocation(line: 302, column: 13, scope: !6112)
!6121 = !DILocation(line: 303, column: 16, scope: !6113)
!6122 = !DILocation(line: 303, column: 22, scope: !6113)
!6123 = !DILocation(line: 303, column: 14, scope: !6113)
!6124 = !DILocation(line: 300, column: 5, scope: !6125)
!6125 = !DILexicalBlockFile(scope: !6094, file: !934, discriminator: 4)
!6126 = distinct !{!6126, !6101}
!6127 = !DILocation(line: 305, column: 5, scope: !6094)
!6128 = !DILocation(line: 306, column: 1, scope: !6094)
!6129 = distinct !DISubprogram(name: "process_subpacket_9", scope: !934, file: !934, line: 972, type: !6130, isLocal: true, isDefinition: true, scopeLine: 973, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!6130 = !DISubroutineType(types: !6131)
!6131 = !{!905, !1999, !5886}
!6132 = !DILocalVariable(name: "q", arg: 1, scope: !6129, file: !934, line: 972, type: !1999)
!6133 = !DILocation(line: 972, column: 45, scope: !6129)
!6134 = !DILocalVariable(name: "node", arg: 2, scope: !6129, file: !934, line: 972, type: !5886)
!6135 = !DILocation(line: 972, column: 62, scope: !6129)
!6136 = !DILocalVariable(name: "gb", scope: !6129, file: !934, line: 974, type: !3764)
!6137 = !DILocation(line: 974, column: 19, scope: !6129)
!6138 = !DILocalVariable(name: "i", scope: !6129, file: !934, line: 975, type: !905)
!6139 = !DILocation(line: 975, column: 9, scope: !6129)
!6140 = !DILocalVariable(name: "j", scope: !6129, file: !934, line: 975, type: !905)
!6141 = !DILocation(line: 975, column: 12, scope: !6129)
!6142 = !DILocalVariable(name: "k", scope: !6129, file: !934, line: 975, type: !905)
!6143 = !DILocation(line: 975, column: 15, scope: !6129)
!6144 = !DILocalVariable(name: "n", scope: !6129, file: !934, line: 975, type: !905)
!6145 = !DILocation(line: 975, column: 18, scope: !6129)
!6146 = !DILocalVariable(name: "ch", scope: !6129, file: !934, line: 975, type: !905)
!6147 = !DILocation(line: 975, column: 21, scope: !6129)
!6148 = !DILocalVariable(name: "run", scope: !6129, file: !934, line: 975, type: !905)
!6149 = !DILocation(line: 975, column: 25, scope: !6129)
!6150 = !DILocalVariable(name: "level", scope: !6129, file: !934, line: 975, type: !905)
!6151 = !DILocation(line: 975, column: 30, scope: !6129)
!6152 = !DILocalVariable(name: "diff", scope: !6129, file: !934, line: 975, type: !905)
!6153 = !DILocation(line: 975, column: 37, scope: !6129)
!6154 = !DILocation(line: 977, column: 24, scope: !6129)
!6155 = !DILocation(line: 977, column: 30, scope: !6129)
!6156 = !DILocation(line: 977, column: 38, scope: !6129)
!6157 = !DILocation(line: 977, column: 44, scope: !6129)
!6158 = !DILocation(line: 977, column: 50, scope: !6129)
!6159 = !DILocation(line: 977, column: 58, scope: !6129)
!6160 = !DILocation(line: 977, column: 63, scope: !6129)
!6161 = !DILocation(line: 977, column: 5, scope: !6129)
!6162 = !DILocation(line: 979, column: 57, scope: !6129)
!6163 = !DILocation(line: 979, column: 60, scope: !6129)
!6164 = !DILocation(line: 979, column: 74, scope: !6129)
!6165 = !DILocation(line: 979, column: 55, scope: !6129)
!6166 = !DILocation(line: 979, column: 55, scope: !6167)
!6167 = !DILexicalBlockFile(scope: !6129, file: !934, discriminator: 1)
!6168 = !DILocation(line: 979, column: 93, scope: !6169)
!6169 = !DILexicalBlockFile(scope: !6129, file: !934, discriminator: 2)
!6170 = !DILocation(line: 979, column: 96, scope: !6169)
!6171 = !DILocation(line: 979, column: 89, scope: !6169)
!6172 = !DILocation(line: 979, column: 55, scope: !6169)
!6173 = !DILocation(line: 979, column: 55, scope: !6174)
!6174 = !DILexicalBlockFile(scope: !6129, file: !934, discriminator: 3)
!6175 = !DILocation(line: 979, column: 111, scope: !6174)
!6176 = !DILocation(line: 979, column: 9, scope: !6174)
!6177 = !DILocation(line: 979, column: 30, scope: !6174)
!6178 = !DILocation(line: 979, column: 33, scope: !6174)
!6179 = !DILocation(line: 979, column: 116, scope: !6174)
!6180 = !DILocation(line: 979, column: 7, scope: !6174)
!6181 = !DILocation(line: 981, column: 12, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6129, file: !934, line: 981, column: 5)
!6183 = !DILocation(line: 981, column: 10, scope: !6182)
!6184 = !DILocation(line: 981, column: 17, scope: !6185)
!6185 = !DILexicalBlockFile(scope: !6186, file: !934, discriminator: 1)
!6186 = distinct !DILexicalBlock(scope: !6182, file: !934, line: 981, column: 5)
!6187 = !DILocation(line: 981, column: 21, scope: !6185)
!6188 = !DILocation(line: 981, column: 19, scope: !6185)
!6189 = !DILocation(line: 981, column: 5, scope: !6185)
!6190 = !DILocation(line: 982, column: 17, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6186, file: !934, line: 982, column: 9)
!6192 = !DILocation(line: 982, column: 14, scope: !6191)
!6193 = !DILocation(line: 982, column: 22, scope: !6194)
!6194 = !DILexicalBlockFile(scope: !6195, file: !934, discriminator: 1)
!6195 = distinct !DILexicalBlock(scope: !6191, file: !934, line: 982, column: 9)
!6196 = !DILocation(line: 982, column: 27, scope: !6194)
!6197 = !DILocation(line: 982, column: 30, scope: !6194)
!6198 = !DILocation(line: 982, column: 25, scope: !6194)
!6199 = !DILocation(line: 982, column: 9, scope: !6194)
!6200 = !DILocation(line: 983, column: 21, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6195, file: !934, line: 982, column: 49)
!6202 = !DILocation(line: 983, column: 19, scope: !6201)
!6203 = !DILocation(line: 984, column: 45, scope: !6201)
!6204 = !DILocation(line: 984, column: 37, scope: !6201)
!6205 = !DILocation(line: 984, column: 13, scope: !6201)
!6206 = !DILocation(line: 984, column: 33, scope: !6201)
!6207 = !DILocation(line: 984, column: 16, scope: !6201)
!6208 = !DILocation(line: 984, column: 43, scope: !6201)
!6209 = !DILocation(line: 986, column: 20, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6201, file: !934, line: 986, column: 13)
!6211 = !DILocation(line: 986, column: 18, scope: !6210)
!6212 = !DILocation(line: 986, column: 25, scope: !6213)
!6213 = !DILexicalBlockFile(scope: !6214, file: !934, discriminator: 1)
!6214 = distinct !DILexicalBlock(scope: !6210, file: !934, line: 986, column: 13)
!6215 = !DILocation(line: 986, column: 27, scope: !6213)
!6216 = !DILocation(line: 986, column: 13, scope: !6213)
!6217 = !DILocation(line: 987, column: 23, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6214, file: !934, line: 986, column: 40)
!6219 = !DILocation(line: 987, column: 61, scope: !6218)
!6220 = !DILocation(line: 987, column: 21, scope: !6218)
!6221 = !DILocation(line: 988, column: 24, scope: !6218)
!6222 = !DILocation(line: 988, column: 22, scope: !6218)
!6223 = !DILocation(line: 990, column: 21, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6218, file: !934, line: 990, column: 21)
!6225 = !DILocation(line: 990, column: 25, scope: !6224)
!6226 = !DILocation(line: 990, column: 23, scope: !6224)
!6227 = !DILocation(line: 990, column: 29, scope: !6224)
!6228 = !DILocation(line: 990, column: 21, scope: !6218)
!6229 = !DILocation(line: 991, column: 21, scope: !6224)
!6230 = !DILocation(line: 993, column: 24, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6218, file: !934, line: 993, column: 17)
!6232 = !DILocation(line: 993, column: 22, scope: !6231)
!6233 = !DILocation(line: 993, column: 29, scope: !6234)
!6234 = !DILexicalBlockFile(scope: !6235, file: !934, discriminator: 1)
!6235 = distinct !DILexicalBlock(scope: !6231, file: !934, line: 993, column: 17)
!6236 = !DILocation(line: 993, column: 34, scope: !6234)
!6237 = !DILocation(line: 993, column: 31, scope: !6234)
!6238 = !DILocation(line: 993, column: 17, scope: !6234)
!6239 = !DILocation(line: 994, column: 58, scope: !6235)
!6240 = !DILocation(line: 994, column: 68, scope: !6235)
!6241 = !DILocation(line: 994, column: 72, scope: !6235)
!6242 = !DILocation(line: 994, column: 70, scope: !6235)
!6243 = !DILocation(line: 994, column: 80, scope: !6235)
!6244 = !DILocation(line: 994, column: 78, scope: !6235)
!6245 = !DILocation(line: 994, column: 64, scope: !6235)
!6246 = !DILocation(line: 994, column: 57, scope: !6235)
!6247 = !DILocation(line: 994, column: 48, scope: !6235)
!6248 = !DILocation(line: 994, column: 52, scope: !6235)
!6249 = !DILocation(line: 994, column: 50, scope: !6235)
!6250 = !DILocation(line: 994, column: 21, scope: !6235)
!6251 = !DILocation(line: 994, column: 45, scope: !6235)
!6252 = !DILocation(line: 994, column: 41, scope: !6235)
!6253 = !DILocation(line: 994, column: 24, scope: !6235)
!6254 = !DILocation(line: 994, column: 55, scope: !6235)
!6255 = !DILocation(line: 993, column: 40, scope: !6256)
!6256 = !DILexicalBlockFile(scope: !6235, file: !934, discriminator: 2)
!6257 = !DILocation(line: 993, column: 17, scope: !6256)
!6258 = distinct !{!6258, !6259}
!6259 = !DILocation(line: 993, column: 17, scope: !6218)
!6260 = !DILocation(line: 996, column: 26, scope: !6218)
!6261 = !DILocation(line: 996, column: 23, scope: !6218)
!6262 = !DILocation(line: 997, column: 22, scope: !6218)
!6263 = !DILocation(line: 997, column: 19, scope: !6218)
!6264 = !DILocation(line: 986, column: 13, scope: !6265)
!6265 = !DILexicalBlockFile(scope: !6214, file: !934, discriminator: 2)
!6266 = distinct !{!6266, !6267}
!6267 = !DILocation(line: 986, column: 13, scope: !6201)
!6268 = !DILocation(line: 999, column: 9, scope: !6201)
!6269 = !DILocation(line: 982, column: 45, scope: !6270)
!6270 = !DILexicalBlockFile(scope: !6195, file: !934, discriminator: 2)
!6271 = !DILocation(line: 982, column: 9, scope: !6270)
!6272 = distinct !{!6272, !6273}
!6273 = !DILocation(line: 982, column: 9, scope: !6186)
!6274 = !DILocation(line: 999, column: 9, scope: !6275)
!6275 = !DILexicalBlockFile(scope: !6191, file: !934, discriminator: 1)
!6276 = !DILocation(line: 981, column: 25, scope: !6277)
!6277 = !DILexicalBlockFile(scope: !6186, file: !934, discriminator: 2)
!6278 = !DILocation(line: 981, column: 5, scope: !6277)
!6279 = distinct !{!6279, !6280}
!6280 = !DILocation(line: 981, column: 5, scope: !6129)
!6281 = !DILocation(line: 1001, column: 13, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6129, file: !934, line: 1001, column: 5)
!6283 = !DILocation(line: 1001, column: 10, scope: !6282)
!6284 = !DILocation(line: 1001, column: 18, scope: !6285)
!6285 = !DILexicalBlockFile(scope: !6286, file: !934, discriminator: 1)
!6286 = distinct !DILexicalBlock(scope: !6282, file: !934, line: 1001, column: 5)
!6287 = !DILocation(line: 1001, column: 23, scope: !6285)
!6288 = !DILocation(line: 1001, column: 26, scope: !6285)
!6289 = !DILocation(line: 1001, column: 21, scope: !6285)
!6290 = !DILocation(line: 1001, column: 5, scope: !6285)
!6291 = !DILocation(line: 1002, column: 16, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6286, file: !934, line: 1002, column: 9)
!6293 = !DILocation(line: 1002, column: 14, scope: !6292)
!6294 = !DILocation(line: 1002, column: 21, scope: !6295)
!6295 = !DILexicalBlockFile(scope: !6296, file: !934, discriminator: 1)
!6296 = distinct !DILexicalBlock(scope: !6292, file: !934, line: 1002, column: 9)
!6297 = !DILocation(line: 1002, column: 23, scope: !6295)
!6298 = !DILocation(line: 1002, column: 9, scope: !6295)
!6299 = !DILocation(line: 1003, column: 40, scope: !6296)
!6300 = !DILocation(line: 1003, column: 13, scope: !6296)
!6301 = !DILocation(line: 1003, column: 33, scope: !6296)
!6302 = !DILocation(line: 1003, column: 16, scope: !6296)
!6303 = !DILocation(line: 1003, column: 43, scope: !6296)
!6304 = !DILocation(line: 1002, column: 29, scope: !6305)
!6305 = !DILexicalBlockFile(scope: !6296, file: !934, discriminator: 2)
!6306 = !DILocation(line: 1002, column: 9, scope: !6305)
!6307 = distinct !{!6307, !6308}
!6308 = !DILocation(line: 1002, column: 9, scope: !6286)
!6309 = !DILocation(line: 1003, column: 45, scope: !6310)
!6310 = !DILexicalBlockFile(scope: !6292, file: !934, discriminator: 1)
!6311 = !DILocation(line: 1001, column: 41, scope: !6312)
!6312 = !DILexicalBlockFile(scope: !6286, file: !934, discriminator: 2)
!6313 = !DILocation(line: 1001, column: 5, scope: !6312)
!6314 = distinct !{!6314, !6315}
!6315 = !DILocation(line: 1001, column: 5, scope: !6129)
!6316 = !DILocation(line: 1005, column: 5, scope: !6129)
!6317 = !DILocation(line: 1006, column: 1, scope: !6129)
!6318 = distinct !DISubprogram(name: "qdm2_get_se_vlc", scope: !934, file: !934, line: 230, type: !6319, isLocal: true, isDefinition: true, scopeLine: 231, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!6319 = !DISubroutineType(types: !6320)
!6320 = !{!905, !5632, !5359, !905}
!6321 = !DILocalVariable(name: "vlc", arg: 1, scope: !6318, file: !934, line: 230, type: !5632)
!6322 = !DILocation(line: 230, column: 39, scope: !6318)
!6323 = !DILocalVariable(name: "gb", arg: 2, scope: !6318, file: !934, line: 230, type: !5359)
!6324 = !DILocation(line: 230, column: 59, scope: !6318)
!6325 = !DILocalVariable(name: "depth", arg: 3, scope: !6318, file: !934, line: 230, type: !905)
!6326 = !DILocation(line: 230, column: 67, scope: !6318)
!6327 = !DILocalVariable(name: "value", scope: !6318, file: !934, line: 232, type: !905)
!6328 = !DILocation(line: 232, column: 9, scope: !6318)
!6329 = !DILocation(line: 232, column: 30, scope: !6318)
!6330 = !DILocation(line: 232, column: 34, scope: !6318)
!6331 = !DILocation(line: 232, column: 42, scope: !6318)
!6332 = !DILocation(line: 232, column: 17, scope: !6318)
!6333 = !DILocation(line: 234, column: 13, scope: !6318)
!6334 = !DILocation(line: 234, column: 19, scope: !6318)
!6335 = !DILocation(line: 234, column: 12, scope: !6318)
!6336 = !DILocation(line: 234, column: 28, scope: !6337)
!6337 = !DILexicalBlockFile(scope: !6318, file: !934, discriminator: 1)
!6338 = !DILocation(line: 234, column: 34, scope: !6337)
!6339 = !DILocation(line: 234, column: 39, scope: !6337)
!6340 = !DILocation(line: 234, column: 12, scope: !6337)
!6341 = !DILocation(line: 234, column: 49, scope: !6342)
!6342 = !DILexicalBlockFile(scope: !6318, file: !934, discriminator: 2)
!6343 = !DILocation(line: 234, column: 55, scope: !6342)
!6344 = !DILocation(line: 234, column: 47, scope: !6342)
!6345 = !DILocation(line: 234, column: 12, scope: !6342)
!6346 = !DILocation(line: 234, column: 12, scope: !6347)
!6347 = !DILexicalBlockFile(scope: !6318, file: !934, discriminator: 3)
!6348 = !DILocation(line: 234, column: 5, scope: !6347)
!6349 = distinct !DISubprogram(name: "init_tone_level_dequantization", scope: !934, file: !934, line: 909, type: !6350, isLocal: true, isDefinition: true, scopeLine: 910, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!6350 = !DISubroutineType(types: !6351)
!6351 = !{null, !1999, !5359}
!6352 = !DILocalVariable(name: "q", arg: 1, scope: !6349, file: !934, line: 909, type: !1999)
!6353 = !DILocation(line: 909, column: 57, scope: !6349)
!6354 = !DILocalVariable(name: "gb", arg: 2, scope: !6349, file: !934, line: 909, type: !5359)
!6355 = !DILocation(line: 909, column: 75, scope: !6349)
!6356 = !DILocalVariable(name: "sb", scope: !6349, file: !934, line: 911, type: !905)
!6357 = !DILocation(line: 911, column: 9, scope: !6349)
!6358 = !DILocalVariable(name: "j", scope: !6349, file: !934, line: 911, type: !905)
!6359 = !DILocation(line: 911, column: 13, scope: !6349)
!6360 = !DILocalVariable(name: "k", scope: !6349, file: !934, line: 911, type: !905)
!6361 = !DILocation(line: 911, column: 16, scope: !6349)
!6362 = !DILocalVariable(name: "n", scope: !6349, file: !934, line: 911, type: !905)
!6363 = !DILocation(line: 911, column: 19, scope: !6349)
!6364 = !DILocalVariable(name: "ch", scope: !6349, file: !934, line: 911, type: !905)
!6365 = !DILocation(line: 911, column: 22, scope: !6349)
!6366 = !DILocation(line: 913, column: 13, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6349, file: !934, line: 913, column: 5)
!6368 = !DILocation(line: 913, column: 10, scope: !6367)
!6369 = !DILocation(line: 913, column: 18, scope: !6370)
!6370 = !DILexicalBlockFile(scope: !6371, file: !934, discriminator: 1)
!6371 = distinct !DILexicalBlock(scope: !6367, file: !934, line: 913, column: 5)
!6372 = !DILocation(line: 913, column: 23, scope: !6370)
!6373 = !DILocation(line: 913, column: 26, scope: !6370)
!6374 = !DILocation(line: 913, column: 21, scope: !6370)
!6375 = !DILocation(line: 913, column: 5, scope: !6370)
!6376 = !DILocation(line: 914, column: 57, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6371, file: !934, line: 913, column: 45)
!6378 = !DILocation(line: 914, column: 37, scope: !6377)
!6379 = !DILocation(line: 914, column: 40, scope: !6377)
!6380 = !DILocation(line: 914, column: 65, scope: !6377)
!6381 = !DILocation(line: 914, column: 9, scope: !6377)
!6382 = !DILocation(line: 916, column: 27, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6377, file: !934, line: 916, column: 13)
!6384 = !DILocation(line: 916, column: 13, scope: !6383)
!6385 = !DILocation(line: 916, column: 31, scope: !6383)
!6386 = !DILocation(line: 916, column: 13, scope: !6377)
!6387 = !DILocation(line: 917, column: 40, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6383, file: !934, line: 916, column: 37)
!6389 = !DILocation(line: 917, column: 20, scope: !6388)
!6390 = !DILocation(line: 917, column: 23, scope: !6388)
!6391 = !DILocation(line: 917, column: 13, scope: !6388)
!6392 = !DILocation(line: 918, column: 13, scope: !6388)
!6393 = !DILocation(line: 920, column: 5, scope: !6377)
!6394 = !DILocation(line: 913, column: 41, scope: !6395)
!6395 = !DILexicalBlockFile(scope: !6371, file: !934, discriminator: 2)
!6396 = !DILocation(line: 913, column: 5, scope: !6395)
!6397 = distinct !{!6397, !6398}
!6398 = !DILocation(line: 913, column: 5, scope: !6349)
!6399 = !DILocation(line: 922, column: 9, scope: !6349)
!6400 = !DILocation(line: 922, column: 12, scope: !6349)
!6401 = !DILocation(line: 922, column: 25, scope: !6349)
!6402 = !DILocation(line: 922, column: 7, scope: !6349)
!6403 = !DILocation(line: 924, column: 13, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6349, file: !934, line: 924, column: 5)
!6405 = !DILocation(line: 924, column: 10, scope: !6404)
!6406 = !DILocation(line: 924, column: 18, scope: !6407)
!6407 = !DILexicalBlockFile(scope: !6408, file: !934, discriminator: 1)
!6408 = distinct !DILexicalBlock(scope: !6404, file: !934, line: 924, column: 5)
!6409 = !DILocation(line: 924, column: 23, scope: !6407)
!6410 = !DILocation(line: 924, column: 21, scope: !6407)
!6411 = !DILocation(line: 924, column: 5, scope: !6407)
!6412 = !DILocation(line: 925, column: 17, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6408, file: !934, line: 925, column: 9)
!6414 = !DILocation(line: 925, column: 14, scope: !6413)
!6415 = !DILocation(line: 925, column: 22, scope: !6416)
!6416 = !DILexicalBlockFile(scope: !6417, file: !934, discriminator: 1)
!6417 = distinct !DILexicalBlock(scope: !6413, file: !934, line: 925, column: 9)
!6418 = !DILocation(line: 925, column: 27, scope: !6416)
!6419 = !DILocation(line: 925, column: 30, scope: !6416)
!6420 = !DILocation(line: 925, column: 25, scope: !6416)
!6421 = !DILocation(line: 925, column: 9, scope: !6416)
!6422 = !DILocation(line: 926, column: 20, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6417, file: !934, line: 926, column: 13)
!6424 = !DILocation(line: 926, column: 18, scope: !6423)
!6425 = !DILocation(line: 926, column: 25, scope: !6426)
!6426 = !DILexicalBlockFile(scope: !6427, file: !934, discriminator: 1)
!6427 = distinct !DILexicalBlock(scope: !6423, file: !934, line: 926, column: 13)
!6428 = !DILocation(line: 926, column: 27, scope: !6426)
!6429 = !DILocation(line: 926, column: 13, scope: !6426)
!6430 = !DILocation(line: 927, column: 35, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6432, file: !934, line: 927, column: 21)
!6432 = distinct !DILexicalBlock(scope: !6427, file: !934, line: 926, column: 37)
!6433 = !DILocation(line: 927, column: 21, scope: !6431)
!6434 = !DILocation(line: 927, column: 39, scope: !6431)
!6435 = !DILocation(line: 927, column: 21, scope: !6432)
!6436 = !DILocation(line: 928, column: 21, scope: !6431)
!6437 = !DILocation(line: 929, column: 31, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6432, file: !934, line: 929, column: 21)
!6439 = !DILocation(line: 929, column: 21, scope: !6438)
!6440 = !DILocation(line: 929, column: 21, scope: !6432)
!6441 = !DILocation(line: 930, column: 27, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6443, file: !934, line: 930, column: 21)
!6443 = distinct !DILexicalBlock(scope: !6438, file: !934, line: 929, column: 36)
!6444 = !DILocation(line: 930, column: 26, scope: !6442)
!6445 = !DILocation(line: 930, column: 31, scope: !6446)
!6446 = !DILexicalBlockFile(scope: !6447, file: !934, discriminator: 1)
!6447 = distinct !DILexicalBlock(scope: !6442, file: !934, line: 930, column: 21)
!6448 = !DILocation(line: 930, column: 33, scope: !6446)
!6449 = !DILocation(line: 930, column: 21, scope: !6446)
!6450 = !DILocation(line: 931, column: 43, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6452, file: !934, line: 931, column: 29)
!6452 = distinct !DILexicalBlock(scope: !6447, file: !934, line: 930, column: 43)
!6453 = !DILocation(line: 931, column: 29, scope: !6451)
!6454 = !DILocation(line: 931, column: 47, scope: !6451)
!6455 = !DILocation(line: 931, column: 29, scope: !6452)
!6456 = !DILocation(line: 932, column: 29, scope: !6451)
!6457 = !DILocation(line: 933, column: 76, scope: !6452)
!6458 = !DILocation(line: 933, column: 63, scope: !6452)
!6459 = !DILocation(line: 933, column: 58, scope: !6452)
!6460 = !DILocation(line: 933, column: 25, scope: !6452)
!6461 = !DILocation(line: 933, column: 55, scope: !6452)
!6462 = !DILocation(line: 933, column: 51, scope: !6452)
!6463 = !DILocation(line: 933, column: 47, scope: !6452)
!6464 = !DILocation(line: 933, column: 28, scope: !6452)
!6465 = !DILocation(line: 933, column: 61, scope: !6452)
!6466 = !DILocation(line: 934, column: 21, scope: !6452)
!6467 = !DILocation(line: 930, column: 39, scope: !6468)
!6468 = !DILexicalBlockFile(scope: !6447, file: !934, discriminator: 2)
!6469 = !DILocation(line: 930, column: 21, scope: !6468)
!6470 = distinct !{!6470, !6471}
!6471 = !DILocation(line: 930, column: 21, scope: !6443)
!6472 = !DILocation(line: 935, column: 17, scope: !6443)
!6473 = !DILocation(line: 936, column: 27, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6475, file: !934, line: 936, column: 21)
!6475 = distinct !DILexicalBlock(scope: !6438, file: !934, line: 935, column: 24)
!6476 = !DILocation(line: 936, column: 26, scope: !6474)
!6477 = !DILocation(line: 936, column: 31, scope: !6478)
!6478 = !DILexicalBlockFile(scope: !6479, file: !934, discriminator: 1)
!6479 = distinct !DILexicalBlock(scope: !6474, file: !934, line: 936, column: 21)
!6480 = !DILocation(line: 936, column: 33, scope: !6478)
!6481 = !DILocation(line: 936, column: 21, scope: !6478)
!6482 = !DILocation(line: 937, column: 58, scope: !6479)
!6483 = !DILocation(line: 937, column: 25, scope: !6479)
!6484 = !DILocation(line: 937, column: 55, scope: !6479)
!6485 = !DILocation(line: 937, column: 51, scope: !6479)
!6486 = !DILocation(line: 937, column: 47, scope: !6479)
!6487 = !DILocation(line: 937, column: 28, scope: !6479)
!6488 = !DILocation(line: 937, column: 61, scope: !6479)
!6489 = !DILocation(line: 936, column: 39, scope: !6490)
!6490 = !DILexicalBlockFile(scope: !6479, file: !934, discriminator: 2)
!6491 = !DILocation(line: 936, column: 21, scope: !6490)
!6492 = distinct !{!6492, !6493}
!6493 = !DILocation(line: 936, column: 21, scope: !6475)
!6494 = !DILocation(line: 939, column: 13, scope: !6432)
!6495 = !DILocation(line: 926, column: 33, scope: !6496)
!6496 = !DILexicalBlockFile(scope: !6427, file: !934, discriminator: 2)
!6497 = !DILocation(line: 926, column: 13, scope: !6496)
!6498 = distinct !{!6498, !6499}
!6499 = !DILocation(line: 926, column: 13, scope: !6417)
!6500 = !DILocation(line: 939, column: 13, scope: !6501)
!6501 = !DILexicalBlockFile(scope: !6423, file: !934, discriminator: 1)
!6502 = !DILocation(line: 925, column: 45, scope: !6503)
!6503 = !DILexicalBlockFile(scope: !6417, file: !934, discriminator: 2)
!6504 = !DILocation(line: 925, column: 9, scope: !6503)
!6505 = distinct !{!6505, !6506}
!6506 = !DILocation(line: 925, column: 9, scope: !6408)
!6507 = !DILocation(line: 939, column: 13, scope: !6508)
!6508 = !DILexicalBlockFile(scope: !6413, file: !934, discriminator: 2)
!6509 = !DILocation(line: 924, column: 28, scope: !6510)
!6510 = !DILexicalBlockFile(scope: !6408, file: !934, discriminator: 2)
!6511 = !DILocation(line: 924, column: 5, scope: !6510)
!6512 = distinct !{!6512, !6513}
!6513 = !DILocation(line: 924, column: 5, scope: !6349)
!6514 = !DILocation(line: 941, column: 12, scope: !6349)
!6515 = !DILocation(line: 941, column: 15, scope: !6349)
!6516 = !DILocation(line: 941, column: 29, scope: !6349)
!6517 = !DILocation(line: 941, column: 10, scope: !6349)
!6518 = !DILocation(line: 941, column: 10, scope: !6519)
!6519 = !DILexicalBlockFile(scope: !6349, file: !934, discriminator: 1)
!6520 = !DILocation(line: 941, column: 48, scope: !6521)
!6521 = !DILexicalBlockFile(scope: !6349, file: !934, discriminator: 2)
!6522 = !DILocation(line: 941, column: 51, scope: !6521)
!6523 = !DILocation(line: 941, column: 44, scope: !6521)
!6524 = !DILocation(line: 941, column: 10, scope: !6521)
!6525 = !DILocation(line: 941, column: 10, scope: !6526)
!6526 = !DILexicalBlockFile(scope: !6349, file: !934, discriminator: 3)
!6527 = !DILocation(line: 941, column: 66, scope: !6526)
!6528 = !DILocation(line: 941, column: 7, scope: !6526)
!6529 = !DILocation(line: 943, column: 13, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6349, file: !934, line: 943, column: 5)
!6531 = !DILocation(line: 943, column: 10, scope: !6530)
!6532 = !DILocation(line: 943, column: 18, scope: !6533)
!6533 = !DILexicalBlockFile(scope: !6534, file: !934, discriminator: 1)
!6534 = distinct !DILexicalBlock(scope: !6530, file: !934, line: 943, column: 5)
!6535 = !DILocation(line: 943, column: 23, scope: !6533)
!6536 = !DILocation(line: 943, column: 21, scope: !6533)
!6537 = !DILocation(line: 943, column: 5, scope: !6533)
!6538 = !DILocation(line: 944, column: 17, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6534, file: !934, line: 944, column: 9)
!6540 = !DILocation(line: 944, column: 14, scope: !6539)
!6541 = !DILocation(line: 944, column: 22, scope: !6542)
!6542 = !DILexicalBlockFile(scope: !6543, file: !934, discriminator: 1)
!6543 = distinct !DILexicalBlock(scope: !6539, file: !934, line: 944, column: 9)
!6544 = !DILocation(line: 944, column: 27, scope: !6542)
!6545 = !DILocation(line: 944, column: 30, scope: !6542)
!6546 = !DILocation(line: 944, column: 25, scope: !6542)
!6547 = !DILocation(line: 944, column: 9, scope: !6542)
!6548 = !DILocation(line: 945, column: 31, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !934, line: 945, column: 17)
!6550 = distinct !DILexicalBlock(scope: !6543, file: !934, line: 944, column: 49)
!6551 = !DILocation(line: 945, column: 17, scope: !6549)
!6552 = !DILocation(line: 945, column: 35, scope: !6549)
!6553 = !DILocation(line: 945, column: 17, scope: !6550)
!6554 = !DILocation(line: 946, column: 17, scope: !6549)
!6555 = !DILocation(line: 947, column: 58, scope: !6550)
!6556 = !DILocation(line: 947, column: 45, scope: !6550)
!6557 = !DILocation(line: 947, column: 39, scope: !6550)
!6558 = !DILocation(line: 947, column: 13, scope: !6550)
!6559 = !DILocation(line: 947, column: 35, scope: !6550)
!6560 = !DILocation(line: 947, column: 16, scope: !6550)
!6561 = !DILocation(line: 947, column: 43, scope: !6550)
!6562 = !DILocation(line: 948, column: 17, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6550, file: !934, line: 948, column: 17)
!6564 = !DILocation(line: 948, column: 20, scope: !6563)
!6565 = !DILocation(line: 948, column: 17, scope: !6550)
!6566 = !DILocation(line: 949, column: 43, scope: !6563)
!6567 = !DILocation(line: 949, column: 17, scope: !6563)
!6568 = !DILocation(line: 949, column: 39, scope: !6563)
!6569 = !DILocation(line: 949, column: 20, scope: !6563)
!6570 = !DILocation(line: 949, column: 47, scope: !6563)
!6571 = !DILocation(line: 951, column: 24, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6563, file: !934, line: 951, column: 17)
!6573 = !DILocation(line: 951, column: 22, scope: !6572)
!6574 = !DILocation(line: 951, column: 29, scope: !6575)
!6575 = !DILexicalBlockFile(scope: !6576, file: !934, discriminator: 1)
!6576 = distinct !DILexicalBlock(scope: !6572, file: !934, line: 951, column: 17)
!6577 = !DILocation(line: 951, column: 31, scope: !6575)
!6578 = !DILocation(line: 951, column: 17, scope: !6575)
!6579 = !DILocation(line: 952, column: 51, scope: !6576)
!6580 = !DILocation(line: 952, column: 21, scope: !6576)
!6581 = !DILocation(line: 952, column: 47, scope: !6576)
!6582 = !DILocation(line: 952, column: 43, scope: !6576)
!6583 = !DILocation(line: 952, column: 24, scope: !6576)
!6584 = !DILocation(line: 952, column: 54, scope: !6576)
!6585 = !DILocation(line: 951, column: 37, scope: !6586)
!6586 = !DILexicalBlockFile(scope: !6576, file: !934, discriminator: 2)
!6587 = !DILocation(line: 951, column: 17, scope: !6586)
!6588 = distinct !{!6588, !6589}
!6589 = !DILocation(line: 951, column: 17, scope: !6563)
!6590 = !DILocation(line: 953, column: 9, scope: !6550)
!6591 = !DILocation(line: 944, column: 45, scope: !6592)
!6592 = !DILexicalBlockFile(scope: !6543, file: !934, discriminator: 2)
!6593 = !DILocation(line: 944, column: 9, scope: !6592)
!6594 = distinct !{!6594, !6595}
!6595 = !DILocation(line: 944, column: 9, scope: !6534)
!6596 = !DILocation(line: 953, column: 9, scope: !6597)
!6597 = !DILexicalBlockFile(scope: !6539, file: !934, discriminator: 1)
!6598 = !DILocation(line: 943, column: 28, scope: !6599)
!6599 = !DILexicalBlockFile(scope: !6534, file: !934, discriminator: 2)
!6600 = !DILocation(line: 943, column: 5, scope: !6599)
!6601 = distinct !{!6601, !6602}
!6602 = !DILocation(line: 943, column: 5, scope: !6349)
!6603 = !DILocation(line: 955, column: 12, scope: !6349)
!6604 = !DILocation(line: 955, column: 15, scope: !6349)
!6605 = !DILocation(line: 955, column: 29, scope: !6349)
!6606 = !DILocation(line: 955, column: 10, scope: !6349)
!6607 = !DILocation(line: 955, column: 10, scope: !6519)
!6608 = !DILocation(line: 955, column: 48, scope: !6521)
!6609 = !DILocation(line: 955, column: 51, scope: !6521)
!6610 = !DILocation(line: 955, column: 44, scope: !6521)
!6611 = !DILocation(line: 955, column: 10, scope: !6521)
!6612 = !DILocation(line: 955, column: 10, scope: !6526)
!6613 = !DILocation(line: 955, column: 66, scope: !6526)
!6614 = !DILocation(line: 955, column: 7, scope: !6526)
!6615 = !DILocation(line: 957, column: 13, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6349, file: !934, line: 957, column: 5)
!6617 = !DILocation(line: 957, column: 10, scope: !6616)
!6618 = !DILocation(line: 957, column: 18, scope: !6619)
!6619 = !DILexicalBlockFile(scope: !6620, file: !934, discriminator: 1)
!6620 = distinct !DILexicalBlock(scope: !6616, file: !934, line: 957, column: 5)
!6621 = !DILocation(line: 957, column: 23, scope: !6619)
!6622 = !DILocation(line: 957, column: 21, scope: !6619)
!6623 = !DILocation(line: 957, column: 5, scope: !6619)
!6624 = !DILocation(line: 958, column: 17, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6620, file: !934, line: 958, column: 9)
!6626 = !DILocation(line: 958, column: 14, scope: !6625)
!6627 = !DILocation(line: 958, column: 22, scope: !6628)
!6628 = !DILexicalBlockFile(scope: !6629, file: !934, discriminator: 1)
!6629 = distinct !DILexicalBlock(scope: !6625, file: !934, line: 958, column: 9)
!6630 = !DILocation(line: 958, column: 27, scope: !6628)
!6631 = !DILocation(line: 958, column: 30, scope: !6628)
!6632 = !DILocation(line: 958, column: 25, scope: !6628)
!6633 = !DILocation(line: 958, column: 9, scope: !6628)
!6634 = !DILocation(line: 959, column: 20, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6629, file: !934, line: 959, column: 13)
!6636 = !DILocation(line: 959, column: 18, scope: !6635)
!6637 = !DILocation(line: 959, column: 25, scope: !6638)
!6638 = !DILexicalBlockFile(scope: !6639, file: !934, discriminator: 1)
!6639 = distinct !DILexicalBlock(scope: !6635, file: !934, line: 959, column: 13)
!6640 = !DILocation(line: 959, column: 27, scope: !6638)
!6641 = !DILocation(line: 959, column: 13, scope: !6638)
!6642 = !DILocation(line: 960, column: 35, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6644, file: !934, line: 960, column: 21)
!6644 = distinct !DILexicalBlock(scope: !6639, file: !934, line: 959, column: 37)
!6645 = !DILocation(line: 960, column: 21, scope: !6643)
!6646 = !DILocation(line: 960, column: 39, scope: !6643)
!6647 = !DILocation(line: 960, column: 21, scope: !6644)
!6648 = !DILocation(line: 961, column: 21, scope: !6643)
!6649 = !DILocation(line: 962, column: 65, scope: !6644)
!6650 = !DILocation(line: 962, column: 52, scope: !6644)
!6651 = !DILocation(line: 962, column: 104, scope: !6644)
!6652 = !DILocation(line: 962, column: 47, scope: !6644)
!6653 = !DILocation(line: 962, column: 17, scope: !6644)
!6654 = !DILocation(line: 962, column: 43, scope: !6644)
!6655 = !DILocation(line: 962, column: 39, scope: !6644)
!6656 = !DILocation(line: 962, column: 20, scope: !6644)
!6657 = !DILocation(line: 962, column: 50, scope: !6644)
!6658 = !DILocation(line: 963, column: 13, scope: !6644)
!6659 = !DILocation(line: 959, column: 33, scope: !6660)
!6660 = !DILexicalBlockFile(scope: !6639, file: !934, discriminator: 2)
!6661 = !DILocation(line: 959, column: 13, scope: !6660)
!6662 = distinct !{!6662, !6663}
!6663 = !DILocation(line: 959, column: 13, scope: !6629)
!6664 = !DILocation(line: 963, column: 13, scope: !6665)
!6665 = !DILexicalBlockFile(scope: !6635, file: !934, discriminator: 1)
!6666 = !DILocation(line: 958, column: 45, scope: !6667)
!6667 = !DILexicalBlockFile(scope: !6629, file: !934, discriminator: 2)
!6668 = !DILocation(line: 958, column: 9, scope: !6667)
!6669 = distinct !{!6669, !6670}
!6670 = !DILocation(line: 958, column: 9, scope: !6620)
!6671 = !DILocation(line: 963, column: 13, scope: !6672)
!6672 = !DILexicalBlockFile(scope: !6625, file: !934, discriminator: 2)
!6673 = !DILocation(line: 957, column: 28, scope: !6674)
!6674 = !DILexicalBlockFile(scope: !6620, file: !934, discriminator: 2)
!6675 = !DILocation(line: 957, column: 5, scope: !6674)
!6676 = distinct !{!6676, !6677}
!6677 = !DILocation(line: 957, column: 5, scope: !6349)
!6678 = !DILocation(line: 964, column: 1, scope: !6349)
!6679 = distinct !DISubprogram(name: "fill_tone_level_array", scope: !934, file: !934, line: 436, type: !4548, isLocal: true, isDefinition: true, scopeLine: 437, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!6680 = !DILocalVariable(name: "q", arg: 1, scope: !6679, file: !934, line: 436, type: !1999)
!6681 = !DILocation(line: 436, column: 48, scope: !6679)
!6682 = !DILocalVariable(name: "flag", arg: 2, scope: !6679, file: !934, line: 436, type: !905)
!6683 = !DILocation(line: 436, column: 55, scope: !6679)
!6684 = !DILocalVariable(name: "i", scope: !6679, file: !934, line: 438, type: !905)
!6685 = !DILocation(line: 438, column: 9, scope: !6679)
!6686 = !DILocalVariable(name: "sb", scope: !6679, file: !934, line: 438, type: !905)
!6687 = !DILocation(line: 438, column: 12, scope: !6679)
!6688 = !DILocalVariable(name: "ch", scope: !6679, file: !934, line: 438, type: !905)
!6689 = !DILocation(line: 438, column: 16, scope: !6679)
!6690 = !DILocalVariable(name: "sb_used", scope: !6679, file: !934, line: 438, type: !905)
!6691 = !DILocation(line: 438, column: 20, scope: !6679)
!6692 = !DILocalVariable(name: "tmp", scope: !6679, file: !934, line: 439, type: !905)
!6693 = !DILocation(line: 439, column: 9, scope: !6679)
!6694 = !DILocalVariable(name: "tab", scope: !6679, file: !934, line: 439, type: !905)
!6695 = !DILocation(line: 439, column: 14, scope: !6679)
!6696 = !DILocation(line: 441, column: 13, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6679, file: !934, line: 441, column: 5)
!6698 = !DILocation(line: 441, column: 10, scope: !6697)
!6699 = !DILocation(line: 441, column: 18, scope: !6700)
!6700 = !DILexicalBlockFile(scope: !6701, file: !934, discriminator: 1)
!6701 = distinct !DILexicalBlock(scope: !6697, file: !934, line: 441, column: 5)
!6702 = !DILocation(line: 441, column: 23, scope: !6700)
!6703 = !DILocation(line: 441, column: 26, scope: !6700)
!6704 = !DILocation(line: 441, column: 21, scope: !6700)
!6705 = !DILocation(line: 441, column: 5, scope: !6700)
!6706 = !DILocation(line: 442, column: 17, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6701, file: !934, line: 442, column: 9)
!6708 = !DILocation(line: 442, column: 14, scope: !6707)
!6709 = !DILocation(line: 442, column: 22, scope: !6710)
!6710 = !DILexicalBlockFile(scope: !6711, file: !934, discriminator: 1)
!6711 = distinct !DILexicalBlock(scope: !6707, file: !934, line: 442, column: 9)
!6712 = !DILocation(line: 442, column: 25, scope: !6710)
!6713 = !DILocation(line: 442, column: 9, scope: !6710)
!6714 = !DILocation(line: 443, column: 20, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6711, file: !934, line: 443, column: 13)
!6716 = !DILocation(line: 443, column: 18, scope: !6715)
!6717 = !DILocation(line: 443, column: 25, scope: !6718)
!6718 = !DILexicalBlockFile(scope: !6719, file: !934, discriminator: 1)
!6719 = distinct !DILexicalBlock(scope: !6715, file: !934, line: 443, column: 13)
!6720 = !DILocation(line: 443, column: 27, scope: !6718)
!6721 = !DILocation(line: 443, column: 13, scope: !6718)
!6722 = !DILocation(line: 444, column: 75, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6724, file: !934, line: 444, column: 21)
!6724 = distinct !DILexicalBlock(scope: !6719, file: !934, line: 443, column: 37)
!6725 = !DILocation(line: 444, column: 26, scope: !6723)
!6726 = !DILocation(line: 444, column: 51, scope: !6723)
!6727 = !DILocation(line: 444, column: 54, scope: !6723)
!6728 = !DILocation(line: 444, column: 25, scope: !6723)
!6729 = !DILocation(line: 444, column: 94, scope: !6723)
!6730 = !DILocation(line: 444, column: 97, scope: !6723)
!6731 = !DILocation(line: 444, column: 83, scope: !6723)
!6732 = !DILocation(line: 444, column: 118, scope: !6723)
!6733 = !DILocation(line: 444, column: 80, scope: !6723)
!6734 = !DILocation(line: 444, column: 21, scope: !6724)
!6735 = !DILocation(line: 445, column: 60, scope: !6723)
!6736 = !DILocation(line: 445, column: 27, scope: !6723)
!6737 = !DILocation(line: 445, column: 51, scope: !6723)
!6738 = !DILocation(line: 445, column: 55, scope: !6723)
!6739 = !DILocation(line: 445, column: 47, scope: !6723)
!6740 = !DILocation(line: 445, column: 30, scope: !6723)
!6741 = !DILocation(line: 445, column: 112, scope: !6723)
!6742 = !DILocation(line: 445, column: 65, scope: !6723)
!6743 = !DILocation(line: 445, column: 103, scope: !6723)
!6744 = !DILocation(line: 445, column: 107, scope: !6723)
!6745 = !DILocation(line: 445, column: 79, scope: !6723)
!6746 = !DILocation(line: 445, column: 82, scope: !6723)
!6747 = !DILocation(line: 445, column: 63, scope: !6723)
!6748 = !DILocation(line: 446, column: 56, scope: !6723)
!6749 = !DILocation(line: 446, column: 27, scope: !6723)
!6750 = !DILocation(line: 446, column: 51, scope: !6723)
!6751 = !DILocation(line: 446, column: 47, scope: !6723)
!6752 = !DILocation(line: 446, column: 30, scope: !6723)
!6753 = !DILocation(line: 446, column: 104, scope: !6723)
!6754 = !DILocation(line: 446, column: 61, scope: !6723)
!6755 = !DILocation(line: 446, column: 99, scope: !6723)
!6756 = !DILocation(line: 446, column: 75, scope: !6723)
!6757 = !DILocation(line: 446, column: 78, scope: !6723)
!6758 = !DILocation(line: 446, column: 59, scope: !6723)
!6759 = !DILocation(line: 445, column: 115, scope: !6723)
!6760 = !DILocation(line: 445, column: 25, scope: !6723)
!6761 = !DILocation(line: 445, column: 21, scope: !6723)
!6762 = !DILocation(line: 448, column: 56, scope: !6723)
!6763 = !DILocation(line: 448, column: 27, scope: !6723)
!6764 = !DILocation(line: 448, column: 51, scope: !6723)
!6765 = !DILocation(line: 448, column: 47, scope: !6723)
!6766 = !DILocation(line: 448, column: 30, scope: !6723)
!6767 = !DILocation(line: 448, column: 104, scope: !6723)
!6768 = !DILocation(line: 448, column: 61, scope: !6723)
!6769 = !DILocation(line: 448, column: 99, scope: !6723)
!6770 = !DILocation(line: 448, column: 75, scope: !6723)
!6771 = !DILocation(line: 448, column: 78, scope: !6723)
!6772 = !DILocation(line: 448, column: 59, scope: !6723)
!6773 = !DILocation(line: 448, column: 25, scope: !6723)
!6774 = !DILocation(line: 449, column: 20, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6724, file: !934, line: 449, column: 20)
!6776 = !DILocation(line: 449, column: 24, scope: !6775)
!6777 = !DILocation(line: 449, column: 20, scope: !6724)
!6778 = !DILocation(line: 450, column: 25, scope: !6775)
!6779 = !DILocation(line: 450, column: 21, scope: !6775)
!6780 = !DILocation(line: 451, column: 54, scope: !6724)
!6781 = !DILocation(line: 451, column: 58, scope: !6724)
!6782 = !DILocation(line: 451, column: 65, scope: !6724)
!6783 = !DILocation(line: 451, column: 53, scope: !6724)
!6784 = !DILocation(line: 451, column: 48, scope: !6724)
!6785 = !DILocation(line: 451, column: 17, scope: !6724)
!6786 = !DILocation(line: 451, column: 44, scope: !6724)
!6787 = !DILocation(line: 451, column: 40, scope: !6724)
!6788 = !DILocation(line: 451, column: 20, scope: !6724)
!6789 = !DILocation(line: 451, column: 51, scope: !6724)
!6790 = !DILocation(line: 452, column: 13, scope: !6724)
!6791 = !DILocation(line: 443, column: 33, scope: !6792)
!6792 = !DILexicalBlockFile(scope: !6719, file: !934, discriminator: 2)
!6793 = !DILocation(line: 443, column: 13, scope: !6792)
!6794 = distinct !{!6794, !6795}
!6795 = !DILocation(line: 443, column: 13, scope: !6711)
!6796 = !DILocation(line: 452, column: 13, scope: !6797)
!6797 = !DILexicalBlockFile(scope: !6715, file: !934, discriminator: 1)
!6798 = !DILocation(line: 442, column: 33, scope: !6799)
!6799 = !DILexicalBlockFile(scope: !6711, file: !934, discriminator: 2)
!6800 = !DILocation(line: 442, column: 9, scope: !6799)
!6801 = distinct !{!6801, !6802}
!6802 = !DILocation(line: 442, column: 9, scope: !6701)
!6803 = !DILocation(line: 452, column: 13, scope: !6804)
!6804 = !DILexicalBlockFile(scope: !6707, file: !934, discriminator: 2)
!6805 = !DILocation(line: 441, column: 41, scope: !6806)
!6806 = !DILexicalBlockFile(scope: !6701, file: !934, discriminator: 2)
!6807 = !DILocation(line: 441, column: 5, scope: !6806)
!6808 = distinct !{!6808, !6809}
!6809 = !DILocation(line: 441, column: 5, scope: !6679)
!6810 = !DILocation(line: 454, column: 18, scope: !6679)
!6811 = !DILocation(line: 454, column: 21, scope: !6679)
!6812 = !DILocation(line: 454, column: 35, scope: !6679)
!6813 = !DILocation(line: 454, column: 16, scope: !6679)
!6814 = !DILocation(line: 454, column: 16, scope: !6815)
!6815 = !DILexicalBlockFile(scope: !6679, file: !934, discriminator: 1)
!6816 = !DILocation(line: 454, column: 54, scope: !6817)
!6817 = !DILexicalBlockFile(scope: !6679, file: !934, discriminator: 2)
!6818 = !DILocation(line: 454, column: 57, scope: !6817)
!6819 = !DILocation(line: 454, column: 50, scope: !6817)
!6820 = !DILocation(line: 454, column: 16, scope: !6817)
!6821 = !DILocation(line: 454, column: 16, scope: !6822)
!6822 = !DILexicalBlockFile(scope: !6679, file: !934, discriminator: 3)
!6823 = !DILocation(line: 454, column: 13, scope: !6822)
!6824 = !DILocation(line: 456, column: 10, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6679, file: !934, line: 456, column: 9)
!6826 = !DILocation(line: 456, column: 13, scope: !6825)
!6827 = !DILocation(line: 456, column: 32, scope: !6825)
!6828 = !DILocation(line: 456, column: 38, scope: !6825)
!6829 = !DILocation(line: 456, column: 42, scope: !6830)
!6830 = !DILexicalBlockFile(scope: !6825, file: !934, discriminator: 1)
!6831 = !DILocation(line: 456, column: 9, scope: !6830)
!6832 = !DILocation(line: 457, column: 17, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !934, line: 457, column: 9)
!6834 = distinct !DILexicalBlock(scope: !6825, file: !934, line: 456, column: 48)
!6835 = !DILocation(line: 457, column: 14, scope: !6833)
!6836 = !DILocation(line: 457, column: 22, scope: !6837)
!6837 = !DILexicalBlockFile(scope: !6838, file: !934, discriminator: 1)
!6838 = distinct !DILexicalBlock(scope: !6833, file: !934, line: 457, column: 9)
!6839 = !DILocation(line: 457, column: 27, scope: !6837)
!6840 = !DILocation(line: 457, column: 25, scope: !6837)
!6841 = !DILocation(line: 457, column: 9, scope: !6837)
!6842 = !DILocation(line: 458, column: 21, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6838, file: !934, line: 458, column: 13)
!6844 = !DILocation(line: 458, column: 18, scope: !6843)
!6845 = !DILocation(line: 458, column: 26, scope: !6846)
!6846 = !DILexicalBlockFile(scope: !6847, file: !934, discriminator: 1)
!6847 = distinct !DILexicalBlock(scope: !6843, file: !934, line: 458, column: 13)
!6848 = !DILocation(line: 458, column: 31, scope: !6846)
!6849 = !DILocation(line: 458, column: 34, scope: !6846)
!6850 = !DILocation(line: 458, column: 29, scope: !6846)
!6851 = !DILocation(line: 458, column: 13, scope: !6846)
!6852 = !DILocation(line: 459, column: 24, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6847, file: !934, line: 459, column: 17)
!6854 = !DILocation(line: 459, column: 22, scope: !6853)
!6855 = !DILocation(line: 459, column: 29, scope: !6856)
!6856 = !DILexicalBlockFile(scope: !6857, file: !934, discriminator: 1)
!6857 = distinct !DILexicalBlock(scope: !6853, file: !934, line: 459, column: 17)
!6858 = !DILocation(line: 459, column: 31, scope: !6856)
!6859 = !DILocation(line: 459, column: 17, scope: !6856)
!6860 = !DILocation(line: 460, column: 83, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6857, file: !934, line: 459, column: 42)
!6862 = !DILocation(line: 460, column: 85, scope: !6861)
!6863 = !DILocation(line: 460, column: 52, scope: !6861)
!6864 = !DILocation(line: 460, column: 79, scope: !6861)
!6865 = !DILocation(line: 460, column: 75, scope: !6861)
!6866 = !DILocation(line: 460, column: 55, scope: !6861)
!6867 = !DILocation(line: 460, column: 47, scope: !6861)
!6868 = !DILocation(line: 460, column: 21, scope: !6861)
!6869 = !DILocation(line: 460, column: 43, scope: !6861)
!6870 = !DILocation(line: 460, column: 39, scope: !6861)
!6871 = !DILocation(line: 460, column: 24, scope: !6861)
!6872 = !DILocation(line: 460, column: 50, scope: !6861)
!6873 = !DILocation(line: 461, column: 51, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6861, file: !934, line: 461, column: 25)
!6875 = !DILocation(line: 461, column: 25, scope: !6874)
!6876 = !DILocation(line: 461, column: 47, scope: !6874)
!6877 = !DILocation(line: 461, column: 43, scope: !6874)
!6878 = !DILocation(line: 461, column: 28, scope: !6874)
!6879 = !DILocation(line: 461, column: 54, scope: !6874)
!6880 = !DILocation(line: 461, column: 25, scope: !6861)
!6881 = !DILocation(line: 462, column: 47, scope: !6874)
!6882 = !DILocation(line: 462, column: 25, scope: !6874)
!6883 = !DILocation(line: 462, column: 43, scope: !6874)
!6884 = !DILocation(line: 462, column: 39, scope: !6874)
!6885 = !DILocation(line: 462, column: 28, scope: !6874)
!6886 = !DILocation(line: 462, column: 50, scope: !6874)
!6887 = !DILocation(line: 464, column: 102, scope: !6874)
!6888 = !DILocation(line: 464, column: 76, scope: !6874)
!6889 = !DILocation(line: 464, column: 98, scope: !6874)
!6890 = !DILocation(line: 464, column: 94, scope: !6874)
!6891 = !DILocation(line: 464, column: 79, scope: !6874)
!6892 = !DILocation(line: 464, column: 105, scope: !6874)
!6893 = !DILocation(line: 464, column: 52, scope: !6874)
!6894 = !DILocation(line: 464, column: 47, scope: !6874)
!6895 = !DILocation(line: 464, column: 25, scope: !6874)
!6896 = !DILocation(line: 464, column: 43, scope: !6874)
!6897 = !DILocation(line: 464, column: 39, scope: !6874)
!6898 = !DILocation(line: 464, column: 28, scope: !6874)
!6899 = !DILocation(line: 464, column: 50, scope: !6874)
!6900 = !DILocation(line: 465, column: 17, scope: !6861)
!6901 = !DILocation(line: 459, column: 38, scope: !6902)
!6902 = !DILexicalBlockFile(scope: !6857, file: !934, discriminator: 2)
!6903 = !DILocation(line: 459, column: 17, scope: !6902)
!6904 = distinct !{!6904, !6905}
!6905 = !DILocation(line: 459, column: 17, scope: !6847)
!6906 = !DILocation(line: 465, column: 17, scope: !6907)
!6907 = !DILexicalBlockFile(scope: !6853, file: !934, discriminator: 1)
!6908 = !DILocation(line: 458, column: 49, scope: !6909)
!6909 = !DILexicalBlockFile(scope: !6847, file: !934, discriminator: 2)
!6910 = !DILocation(line: 458, column: 13, scope: !6909)
!6911 = distinct !{!6911, !6912}
!6912 = !DILocation(line: 458, column: 13, scope: !6838)
!6913 = !DILocation(line: 465, column: 17, scope: !6914)
!6914 = !DILexicalBlockFile(scope: !6843, file: !934, discriminator: 2)
!6915 = !DILocation(line: 457, column: 38, scope: !6916)
!6916 = !DILexicalBlockFile(scope: !6838, file: !934, discriminator: 2)
!6917 = !DILocation(line: 457, column: 9, scope: !6916)
!6918 = distinct !{!6918, !6919}
!6919 = !DILocation(line: 457, column: 9, scope: !6834)
!6920 = !DILocation(line: 466, column: 5, scope: !6834)
!6921 = !DILocation(line: 467, column: 15, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6825, file: !934, line: 466, column: 12)
!6923 = !DILocation(line: 467, column: 18, scope: !6922)
!6924 = !DILocation(line: 467, column: 13, scope: !6922)
!6925 = !DILocation(line: 468, column: 17, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6922, file: !934, line: 468, column: 9)
!6927 = !DILocation(line: 468, column: 14, scope: !6926)
!6928 = !DILocation(line: 468, column: 22, scope: !6929)
!6929 = !DILexicalBlockFile(scope: !6930, file: !934, discriminator: 1)
!6930 = distinct !DILexicalBlock(scope: !6926, file: !934, line: 468, column: 9)
!6931 = !DILocation(line: 468, column: 27, scope: !6929)
!6932 = !DILocation(line: 468, column: 25, scope: !6929)
!6933 = !DILocation(line: 468, column: 9, scope: !6929)
!6934 = !DILocation(line: 469, column: 18, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !934, line: 469, column: 17)
!6936 = distinct !DILexicalBlock(scope: !6930, file: !934, line: 468, column: 42)
!6937 = !DILocation(line: 469, column: 21, scope: !6935)
!6938 = !DILocation(line: 469, column: 27, scope: !6935)
!6939 = !DILocation(line: 469, column: 31, scope: !6940)
!6940 = !DILexicalBlockFile(scope: !6935, file: !934, discriminator: 1)
!6941 = !DILocation(line: 469, column: 34, scope: !6940)
!6942 = !DILocation(line: 469, column: 17, scope: !6940)
!6943 = !DILocation(line: 470, column: 25, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !934, line: 470, column: 17)
!6945 = distinct !DILexicalBlock(scope: !6935, file: !934, line: 469, column: 42)
!6946 = !DILocation(line: 470, column: 22, scope: !6944)
!6947 = !DILocation(line: 470, column: 30, scope: !6948)
!6948 = !DILexicalBlockFile(scope: !6949, file: !934, discriminator: 1)
!6949 = distinct !DILexicalBlock(scope: !6944, file: !934, line: 470, column: 17)
!6950 = !DILocation(line: 470, column: 35, scope: !6948)
!6951 = !DILocation(line: 470, column: 38, scope: !6948)
!6952 = !DILocation(line: 470, column: 33, scope: !6948)
!6953 = !DILocation(line: 470, column: 17, scope: !6948)
!6954 = !DILocation(line: 471, column: 28, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6949, file: !934, line: 471, column: 21)
!6956 = !DILocation(line: 471, column: 26, scope: !6955)
!6957 = !DILocation(line: 471, column: 33, scope: !6958)
!6958 = !DILexicalBlockFile(scope: !6959, file: !934, discriminator: 1)
!6959 = distinct !DILexicalBlock(scope: !6955, file: !934, line: 471, column: 21)
!6960 = !DILocation(line: 471, column: 35, scope: !6958)
!6961 = !DILocation(line: 471, column: 21, scope: !6958)
!6962 = !DILocation(line: 472, column: 62, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6959, file: !934, line: 471, column: 46)
!6964 = !DILocation(line: 472, column: 64, scope: !6963)
!6965 = !DILocation(line: 472, column: 31, scope: !6963)
!6966 = !DILocation(line: 472, column: 58, scope: !6963)
!6967 = !DILocation(line: 472, column: 54, scope: !6963)
!6968 = !DILocation(line: 472, column: 34, scope: !6963)
!6969 = !DILocation(line: 473, column: 72, scope: !6963)
!6970 = !DILocation(line: 473, column: 74, scope: !6963)
!6971 = !DILocation(line: 473, column: 31, scope: !6963)
!6972 = !DILocation(line: 473, column: 65, scope: !6963)
!6973 = !DILocation(line: 473, column: 67, scope: !6963)
!6974 = !DILocation(line: 473, column: 57, scope: !6963)
!6975 = !DILocation(line: 473, column: 60, scope: !6963)
!6976 = !DILocation(line: 473, column: 53, scope: !6963)
!6977 = !DILocation(line: 473, column: 34, scope: !6963)
!6978 = !DILocation(line: 472, column: 69, scope: !6963)
!6979 = !DILocation(line: 474, column: 65, scope: !6963)
!6980 = !DILocation(line: 474, column: 67, scope: !6963)
!6981 = !DILocation(line: 474, column: 31, scope: !6963)
!6982 = !DILocation(line: 474, column: 57, scope: !6963)
!6983 = !DILocation(line: 474, column: 60, scope: !6963)
!6984 = !DILocation(line: 474, column: 53, scope: !6963)
!6985 = !DILocation(line: 474, column: 34, scope: !6963)
!6986 = !DILocation(line: 473, column: 79, scope: !6963)
!6987 = !DILocation(line: 475, column: 57, scope: !6963)
!6988 = !DILocation(line: 475, column: 60, scope: !6963)
!6989 = !DILocation(line: 475, column: 31, scope: !6963)
!6990 = !DILocation(line: 475, column: 53, scope: !6963)
!6991 = !DILocation(line: 475, column: 34, scope: !6963)
!6992 = !DILocation(line: 474, column: 72, scope: !6963)
!6993 = !DILocation(line: 472, column: 29, scope: !6963)
!6994 = !DILocation(line: 476, column: 56, scope: !6963)
!6995 = !DILocation(line: 476, column: 60, scope: !6963)
!6996 = !DILocation(line: 476, column: 51, scope: !6963)
!6997 = !DILocation(line: 476, column: 25, scope: !6963)
!6998 = !DILocation(line: 476, column: 47, scope: !6963)
!6999 = !DILocation(line: 476, column: 43, scope: !6963)
!7000 = !DILocation(line: 476, column: 28, scope: !6963)
!7001 = !DILocation(line: 476, column: 54, scope: !6963)
!7002 = !DILocation(line: 477, column: 30, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6963, file: !934, line: 477, column: 29)
!7004 = !DILocation(line: 477, column: 34, scope: !7003)
!7005 = !DILocation(line: 477, column: 39, scope: !7003)
!7006 = !DILocation(line: 477, column: 44, scope: !7007)
!7007 = !DILexicalBlockFile(scope: !7003, file: !934, discriminator: 1)
!7008 = !DILocation(line: 477, column: 47, scope: !7007)
!7009 = !DILocation(line: 477, column: 66, scope: !7007)
!7010 = !DILocation(line: 477, column: 70, scope: !7011)
!7011 = !DILexicalBlockFile(scope: !7003, file: !934, discriminator: 2)
!7012 = !DILocation(line: 477, column: 29, scope: !7011)
!7013 = !DILocation(line: 478, column: 51, scope: !7003)
!7014 = !DILocation(line: 478, column: 29, scope: !7003)
!7015 = !DILocation(line: 478, column: 47, scope: !7003)
!7016 = !DILocation(line: 478, column: 43, scope: !7003)
!7017 = !DILocation(line: 478, column: 32, scope: !7003)
!7018 = !DILocation(line: 478, column: 54, scope: !7003)
!7019 = !DILocation(line: 480, column: 82, scope: !7003)
!7020 = !DILocation(line: 480, column: 86, scope: !7003)
!7021 = !DILocation(line: 480, column: 56, scope: !7003)
!7022 = !DILocation(line: 480, column: 77, scope: !7003)
!7023 = !DILocation(line: 480, column: 51, scope: !7003)
!7024 = !DILocation(line: 480, column: 29, scope: !7003)
!7025 = !DILocation(line: 480, column: 47, scope: !7003)
!7026 = !DILocation(line: 480, column: 43, scope: !7003)
!7027 = !DILocation(line: 480, column: 32, scope: !7003)
!7028 = !DILocation(line: 480, column: 54, scope: !7003)
!7029 = !DILocation(line: 481, column: 17, scope: !6963)
!7030 = !DILocation(line: 471, column: 42, scope: !7031)
!7031 = !DILexicalBlockFile(scope: !6959, file: !934, discriminator: 2)
!7032 = !DILocation(line: 471, column: 21, scope: !7031)
!7033 = distinct !{!7033, !7034}
!7034 = !DILocation(line: 471, column: 21, scope: !6949)
!7035 = !DILocation(line: 481, column: 17, scope: !7036)
!7036 = !DILexicalBlockFile(scope: !6955, file: !934, discriminator: 1)
!7037 = !DILocation(line: 470, column: 53, scope: !7038)
!7038 = !DILexicalBlockFile(scope: !6949, file: !934, discriminator: 2)
!7039 = !DILocation(line: 470, column: 17, scope: !7038)
!7040 = distinct !{!7040, !7041}
!7041 = !DILocation(line: 470, column: 17, scope: !6945)
!7042 = !DILocation(line: 482, column: 13, scope: !6945)
!7043 = !DILocation(line: 483, column: 21, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7045, file: !934, line: 483, column: 21)
!7045 = distinct !DILexicalBlock(scope: !6935, file: !934, line: 482, column: 20)
!7046 = !DILocation(line: 483, column: 24, scope: !7044)
!7047 = !DILocation(line: 483, column: 21, scope: !7045)
!7048 = !DILocation(line: 484, column: 29, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !934, line: 484, column: 21)
!7050 = distinct !DILexicalBlock(scope: !7044, file: !934, line: 483, column: 29)
!7051 = !DILocation(line: 484, column: 26, scope: !7049)
!7052 = !DILocation(line: 484, column: 34, scope: !7053)
!7053 = !DILexicalBlockFile(scope: !7054, file: !934, discriminator: 1)
!7054 = distinct !DILexicalBlock(scope: !7049, file: !934, line: 484, column: 21)
!7055 = !DILocation(line: 484, column: 39, scope: !7053)
!7056 = !DILocation(line: 484, column: 42, scope: !7053)
!7057 = !DILocation(line: 484, column: 37, scope: !7053)
!7058 = !DILocation(line: 484, column: 21, scope: !7053)
!7059 = !DILocation(line: 485, column: 32, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7054, file: !934, line: 485, column: 25)
!7061 = !DILocation(line: 485, column: 30, scope: !7060)
!7062 = !DILocation(line: 485, column: 37, scope: !7063)
!7063 = !DILexicalBlockFile(scope: !7064, file: !934, discriminator: 1)
!7064 = distinct !DILexicalBlock(scope: !7060, file: !934, line: 485, column: 25)
!7065 = !DILocation(line: 485, column: 39, scope: !7063)
!7066 = !DILocation(line: 485, column: 25, scope: !7063)
!7067 = !DILocation(line: 486, column: 66, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7064, file: !934, line: 485, column: 50)
!7069 = !DILocation(line: 486, column: 68, scope: !7068)
!7070 = !DILocation(line: 486, column: 35, scope: !7068)
!7071 = !DILocation(line: 486, column: 62, scope: !7068)
!7072 = !DILocation(line: 486, column: 58, scope: !7068)
!7073 = !DILocation(line: 486, column: 38, scope: !7068)
!7074 = !DILocation(line: 487, column: 71, scope: !7068)
!7075 = !DILocation(line: 487, column: 73, scope: !7068)
!7076 = !DILocation(line: 487, column: 35, scope: !7068)
!7077 = !DILocation(line: 487, column: 64, scope: !7068)
!7078 = !DILocation(line: 487, column: 66, scope: !7068)
!7079 = !DILocation(line: 487, column: 57, scope: !7068)
!7080 = !DILocation(line: 487, column: 38, scope: !7068)
!7081 = !DILocation(line: 486, column: 73, scope: !7068)
!7082 = !DILocation(line: 488, column: 61, scope: !7068)
!7083 = !DILocation(line: 488, column: 64, scope: !7068)
!7084 = !DILocation(line: 488, column: 35, scope: !7068)
!7085 = !DILocation(line: 488, column: 57, scope: !7068)
!7086 = !DILocation(line: 488, column: 38, scope: !7068)
!7087 = !DILocation(line: 487, column: 78, scope: !7068)
!7088 = !DILocation(line: 486, column: 33, scope: !7068)
!7089 = !DILocation(line: 489, column: 60, scope: !7068)
!7090 = !DILocation(line: 489, column: 64, scope: !7068)
!7091 = !DILocation(line: 489, column: 55, scope: !7068)
!7092 = !DILocation(line: 489, column: 29, scope: !7068)
!7093 = !DILocation(line: 489, column: 51, scope: !7068)
!7094 = !DILocation(line: 489, column: 47, scope: !7068)
!7095 = !DILocation(line: 489, column: 32, scope: !7068)
!7096 = !DILocation(line: 489, column: 58, scope: !7068)
!7097 = !DILocation(line: 490, column: 34, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7068, file: !934, line: 490, column: 33)
!7099 = !DILocation(line: 490, column: 38, scope: !7098)
!7100 = !DILocation(line: 490, column: 43, scope: !7098)
!7101 = !DILocation(line: 490, column: 48, scope: !7102)
!7102 = !DILexicalBlockFile(scope: !7098, file: !934, discriminator: 1)
!7103 = !DILocation(line: 490, column: 51, scope: !7102)
!7104 = !DILocation(line: 490, column: 70, scope: !7102)
!7105 = !DILocation(line: 490, column: 74, scope: !7106)
!7106 = !DILexicalBlockFile(scope: !7098, file: !934, discriminator: 2)
!7107 = !DILocation(line: 490, column: 33, scope: !7106)
!7108 = !DILocation(line: 491, column: 55, scope: !7098)
!7109 = !DILocation(line: 491, column: 33, scope: !7098)
!7110 = !DILocation(line: 491, column: 51, scope: !7098)
!7111 = !DILocation(line: 491, column: 47, scope: !7098)
!7112 = !DILocation(line: 491, column: 36, scope: !7098)
!7113 = !DILocation(line: 491, column: 58, scope: !7098)
!7114 = !DILocation(line: 493, column: 86, scope: !7098)
!7115 = !DILocation(line: 493, column: 90, scope: !7098)
!7116 = !DILocation(line: 493, column: 60, scope: !7098)
!7117 = !DILocation(line: 493, column: 81, scope: !7098)
!7118 = !DILocation(line: 493, column: 55, scope: !7098)
!7119 = !DILocation(line: 493, column: 33, scope: !7098)
!7120 = !DILocation(line: 493, column: 51, scope: !7098)
!7121 = !DILocation(line: 493, column: 47, scope: !7098)
!7122 = !DILocation(line: 493, column: 36, scope: !7098)
!7123 = !DILocation(line: 493, column: 58, scope: !7098)
!7124 = !DILocation(line: 494, column: 21, scope: !7068)
!7125 = !DILocation(line: 485, column: 46, scope: !7126)
!7126 = !DILexicalBlockFile(scope: !7064, file: !934, discriminator: 2)
!7127 = !DILocation(line: 485, column: 25, scope: !7126)
!7128 = distinct !{!7128, !7129}
!7129 = !DILocation(line: 485, column: 25, scope: !7054)
!7130 = !DILocation(line: 494, column: 21, scope: !7131)
!7131 = !DILexicalBlockFile(scope: !7060, file: !934, discriminator: 1)
!7132 = !DILocation(line: 484, column: 57, scope: !7133)
!7133 = !DILexicalBlockFile(scope: !7054, file: !934, discriminator: 2)
!7134 = !DILocation(line: 484, column: 21, scope: !7133)
!7135 = distinct !{!7135, !7136}
!7136 = !DILocation(line: 484, column: 21, scope: !7050)
!7137 = !DILocation(line: 495, column: 17, scope: !7050)
!7138 = !DILocation(line: 496, column: 29, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7140, file: !934, line: 496, column: 21)
!7140 = distinct !DILexicalBlock(scope: !7044, file: !934, line: 495, column: 24)
!7141 = !DILocation(line: 496, column: 26, scope: !7139)
!7142 = !DILocation(line: 496, column: 34, scope: !7143)
!7143 = !DILexicalBlockFile(scope: !7144, file: !934, discriminator: 1)
!7144 = distinct !DILexicalBlock(scope: !7139, file: !934, line: 496, column: 21)
!7145 = !DILocation(line: 496, column: 39, scope: !7143)
!7146 = !DILocation(line: 496, column: 42, scope: !7143)
!7147 = !DILocation(line: 496, column: 37, scope: !7143)
!7148 = !DILocation(line: 496, column: 21, scope: !7143)
!7149 = !DILocation(line: 497, column: 32, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7144, file: !934, line: 497, column: 25)
!7151 = !DILocation(line: 497, column: 30, scope: !7150)
!7152 = !DILocation(line: 497, column: 37, scope: !7153)
!7153 = !DILexicalBlockFile(scope: !7154, file: !934, discriminator: 1)
!7154 = distinct !DILexicalBlock(scope: !7150, file: !934, line: 497, column: 25)
!7155 = !DILocation(line: 497, column: 39, scope: !7153)
!7156 = !DILocation(line: 497, column: 25, scope: !7153)
!7157 = !DILocation(line: 498, column: 97, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7154, file: !934, line: 497, column: 50)
!7159 = !DILocation(line: 498, column: 99, scope: !7158)
!7160 = !DILocation(line: 498, column: 66, scope: !7158)
!7161 = !DILocation(line: 498, column: 93, scope: !7158)
!7162 = !DILocation(line: 498, column: 89, scope: !7158)
!7163 = !DILocation(line: 498, column: 69, scope: !7158)
!7164 = !DILocation(line: 498, column: 61, scope: !7158)
!7165 = !DILocation(line: 498, column: 35, scope: !7158)
!7166 = !DILocation(line: 498, column: 57, scope: !7158)
!7167 = !DILocation(line: 498, column: 53, scope: !7158)
!7168 = !DILocation(line: 498, column: 38, scope: !7158)
!7169 = !DILocation(line: 498, column: 64, scope: !7158)
!7170 = !DILocation(line: 498, column: 33, scope: !7158)
!7171 = !DILocation(line: 499, column: 34, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7158, file: !934, line: 499, column: 33)
!7173 = !DILocation(line: 499, column: 38, scope: !7172)
!7174 = !DILocation(line: 499, column: 43, scope: !7172)
!7175 = !DILocation(line: 499, column: 48, scope: !7176)
!7176 = !DILexicalBlockFile(scope: !7172, file: !934, discriminator: 1)
!7177 = !DILocation(line: 499, column: 51, scope: !7176)
!7178 = !DILocation(line: 499, column: 70, scope: !7176)
!7179 = !DILocation(line: 499, column: 74, scope: !7180)
!7180 = !DILexicalBlockFile(scope: !7172, file: !934, discriminator: 2)
!7181 = !DILocation(line: 499, column: 33, scope: !7180)
!7182 = !DILocation(line: 500, column: 55, scope: !7172)
!7183 = !DILocation(line: 500, column: 33, scope: !7172)
!7184 = !DILocation(line: 500, column: 51, scope: !7172)
!7185 = !DILocation(line: 500, column: 47, scope: !7172)
!7186 = !DILocation(line: 500, column: 36, scope: !7172)
!7187 = !DILocation(line: 500, column: 58, scope: !7172)
!7188 = !DILocation(line: 502, column: 86, scope: !7172)
!7189 = !DILocation(line: 502, column: 90, scope: !7172)
!7190 = !DILocation(line: 502, column: 60, scope: !7172)
!7191 = !DILocation(line: 502, column: 81, scope: !7172)
!7192 = !DILocation(line: 502, column: 55, scope: !7172)
!7193 = !DILocation(line: 502, column: 33, scope: !7172)
!7194 = !DILocation(line: 502, column: 51, scope: !7172)
!7195 = !DILocation(line: 502, column: 47, scope: !7172)
!7196 = !DILocation(line: 502, column: 36, scope: !7172)
!7197 = !DILocation(line: 502, column: 58, scope: !7172)
!7198 = !DILocation(line: 503, column: 25, scope: !7158)
!7199 = !DILocation(line: 497, column: 46, scope: !7200)
!7200 = !DILexicalBlockFile(scope: !7154, file: !934, discriminator: 2)
!7201 = !DILocation(line: 497, column: 25, scope: !7200)
!7202 = distinct !{!7202, !7203}
!7203 = !DILocation(line: 497, column: 25, scope: !7144)
!7204 = !DILocation(line: 503, column: 25, scope: !7205)
!7205 = !DILexicalBlockFile(scope: !7150, file: !934, discriminator: 1)
!7206 = !DILocation(line: 496, column: 57, scope: !7207)
!7207 = !DILexicalBlockFile(scope: !7144, file: !934, discriminator: 2)
!7208 = !DILocation(line: 496, column: 21, scope: !7207)
!7209 = distinct !{!7209, !7210}
!7210 = !DILocation(line: 496, column: 21, scope: !7140)
!7211 = !DILocation(line: 506, column: 9, scope: !6936)
!7212 = !DILocation(line: 468, column: 38, scope: !7213)
!7213 = !DILexicalBlockFile(scope: !6930, file: !934, discriminator: 2)
!7214 = !DILocation(line: 468, column: 9, scope: !7213)
!7215 = distinct !{!7215, !7216}
!7216 = !DILocation(line: 468, column: 9, scope: !6922)
!7217 = !DILocation(line: 508, column: 1, scope: !6679)
!7218 = distinct !DISubprogram(name: "init_quantized_coeffs_elem0", scope: !934, file: !934, line: 868, type: !7219, isLocal: true, isDefinition: true, scopeLine: 870, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!7219 = !DISubroutineType(types: !7220)
!7220 = !{!905, !1133, !5359}
!7221 = !DILocalVariable(name: "quantized_coeffs", arg: 1, scope: !7218, file: !934, line: 868, type: !1133)
!7222 = !DILocation(line: 868, column: 48, scope: !7218)
!7223 = !DILocalVariable(name: "gb", arg: 2, scope: !7218, file: !934, line: 869, type: !5359)
!7224 = !DILocation(line: 869, column: 56, scope: !7218)
!7225 = !DILocalVariable(name: "i", scope: !7218, file: !934, line: 871, type: !905)
!7226 = !DILocation(line: 871, column: 9, scope: !7218)
!7227 = !DILocalVariable(name: "k", scope: !7218, file: !934, line: 871, type: !905)
!7228 = !DILocation(line: 871, column: 12, scope: !7218)
!7229 = !DILocalVariable(name: "run", scope: !7218, file: !934, line: 871, type: !905)
!7230 = !DILocation(line: 871, column: 15, scope: !7218)
!7231 = !DILocalVariable(name: "level", scope: !7218, file: !934, line: 871, type: !905)
!7232 = !DILocation(line: 871, column: 20, scope: !7218)
!7233 = !DILocalVariable(name: "diff", scope: !7218, file: !934, line: 871, type: !905)
!7234 = !DILocation(line: 871, column: 27, scope: !7218)
!7235 = !DILocation(line: 873, column: 23, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7218, file: !934, line: 873, column: 9)
!7237 = !DILocation(line: 873, column: 9, scope: !7236)
!7238 = !DILocation(line: 873, column: 27, scope: !7236)
!7239 = !DILocation(line: 873, column: 9, scope: !7218)
!7240 = !DILocation(line: 874, column: 9, scope: !7236)
!7241 = !DILocation(line: 875, column: 26, scope: !7218)
!7242 = !DILocation(line: 875, column: 13, scope: !7218)
!7243 = !DILocation(line: 875, column: 11, scope: !7218)
!7244 = !DILocation(line: 877, column: 27, scope: !7218)
!7245 = !DILocation(line: 877, column: 5, scope: !7218)
!7246 = !DILocation(line: 877, column: 25, scope: !7218)
!7247 = !DILocation(line: 879, column: 12, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7218, file: !934, line: 879, column: 5)
!7249 = !DILocation(line: 879, column: 10, scope: !7248)
!7250 = !DILocation(line: 879, column: 17, scope: !7251)
!7251 = !DILexicalBlockFile(scope: !7252, file: !934, discriminator: 1)
!7252 = distinct !DILexicalBlock(scope: !7248, file: !934, line: 879, column: 5)
!7253 = !DILocation(line: 879, column: 19, scope: !7251)
!7254 = !DILocation(line: 879, column: 5, scope: !7251)
!7255 = !DILocation(line: 880, column: 27, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7257, file: !934, line: 880, column: 13)
!7257 = distinct !DILexicalBlock(scope: !7252, file: !934, line: 879, column: 26)
!7258 = !DILocation(line: 880, column: 13, scope: !7256)
!7259 = !DILocation(line: 880, column: 31, scope: !7256)
!7260 = !DILocation(line: 880, column: 13, scope: !7257)
!7261 = !DILocation(line: 881, column: 13, scope: !7256)
!7262 = !DILocation(line: 882, column: 28, scope: !7257)
!7263 = !DILocation(line: 882, column: 15, scope: !7257)
!7264 = !DILocation(line: 882, column: 52, scope: !7257)
!7265 = !DILocation(line: 882, column: 13, scope: !7257)
!7266 = !DILocation(line: 884, column: 13, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7257, file: !934, line: 884, column: 13)
!7268 = !DILocation(line: 884, column: 17, scope: !7267)
!7269 = !DILocation(line: 884, column: 15, scope: !7267)
!7270 = !DILocation(line: 884, column: 21, scope: !7267)
!7271 = !DILocation(line: 884, column: 13, scope: !7257)
!7272 = !DILocation(line: 885, column: 13, scope: !7267)
!7273 = !DILocation(line: 887, column: 27, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7257, file: !934, line: 887, column: 13)
!7275 = !DILocation(line: 887, column: 13, scope: !7274)
!7276 = !DILocation(line: 887, column: 31, scope: !7274)
!7277 = !DILocation(line: 887, column: 13, scope: !7257)
!7278 = !DILocation(line: 888, column: 13, scope: !7274)
!7279 = !DILocation(line: 889, column: 47, scope: !7257)
!7280 = !DILocation(line: 889, column: 16, scope: !7257)
!7281 = !DILocation(line: 889, column: 14, scope: !7257)
!7282 = !DILocation(line: 891, column: 16, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7257, file: !934, line: 891, column: 9)
!7284 = !DILocation(line: 891, column: 14, scope: !7283)
!7285 = !DILocation(line: 891, column: 21, scope: !7286)
!7286 = !DILexicalBlockFile(scope: !7287, file: !934, discriminator: 1)
!7287 = distinct !DILexicalBlock(scope: !7283, file: !934, line: 891, column: 9)
!7288 = !DILocation(line: 891, column: 26, scope: !7286)
!7289 = !DILocation(line: 891, column: 23, scope: !7286)
!7290 = !DILocation(line: 891, column: 9, scope: !7286)
!7291 = !DILocation(line: 892, column: 40, scope: !7287)
!7292 = !DILocation(line: 892, column: 50, scope: !7287)
!7293 = !DILocation(line: 892, column: 54, scope: !7287)
!7294 = !DILocation(line: 892, column: 52, scope: !7287)
!7295 = !DILocation(line: 892, column: 62, scope: !7287)
!7296 = !DILocation(line: 892, column: 60, scope: !7287)
!7297 = !DILocation(line: 892, column: 46, scope: !7287)
!7298 = !DILocation(line: 892, column: 39, scope: !7287)
!7299 = !DILocation(line: 892, column: 30, scope: !7287)
!7300 = !DILocation(line: 892, column: 34, scope: !7287)
!7301 = !DILocation(line: 892, column: 32, scope: !7287)
!7302 = !DILocation(line: 892, column: 13, scope: !7287)
!7303 = !DILocation(line: 892, column: 37, scope: !7287)
!7304 = !DILocation(line: 891, column: 32, scope: !7305)
!7305 = !DILexicalBlockFile(scope: !7287, file: !934, discriminator: 2)
!7306 = !DILocation(line: 891, column: 9, scope: !7305)
!7307 = distinct !{!7307, !7308}
!7308 = !DILocation(line: 891, column: 9, scope: !7257)
!7309 = !DILocation(line: 894, column: 18, scope: !7257)
!7310 = !DILocation(line: 894, column: 15, scope: !7257)
!7311 = !DILocation(line: 895, column: 14, scope: !7257)
!7312 = !DILocation(line: 895, column: 11, scope: !7257)
!7313 = !DILocation(line: 879, column: 5, scope: !7314)
!7314 = !DILexicalBlockFile(scope: !7252, file: !934, discriminator: 2)
!7315 = distinct !{!7315, !7316}
!7316 = !DILocation(line: 879, column: 5, scope: !7218)
!7317 = !DILocation(line: 897, column: 5, scope: !7218)
!7318 = !DILocation(line: 898, column: 1, scope: !7218)
!7319 = distinct !DISubprogram(name: "get_bits_left", scope: !3765, file: !3765, line: 814, type: !7320, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!7320 = !DISubroutineType(types: !7321)
!7321 = !{!905, !5359}
!7322 = !DILocalVariable(name: "gb", arg: 1, scope: !7319, file: !3765, line: 814, type: !5359)
!7323 = !DILocation(line: 814, column: 48, scope: !7319)
!7324 = !DILocation(line: 816, column: 12, scope: !7319)
!7325 = !DILocation(line: 816, column: 16, scope: !7319)
!7326 = !DILocation(line: 816, column: 46, scope: !7319)
!7327 = !DILocation(line: 816, column: 31, scope: !7319)
!7328 = !DILocation(line: 816, column: 29, scope: !7319)
!7329 = !DILocation(line: 816, column: 5, scope: !7319)
!7330 = distinct !DISubprogram(name: "get_bits1", scope: !3765, file: !3765, line: 487, type: !7331, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!7331 = !DISubroutineType(types: !7332)
!7332 = !{!906, !5359}
!7333 = !DILocalVariable(name: "s", arg: 1, scope: !7330, file: !3765, line: 487, type: !5359)
!7334 = !DILocation(line: 487, column: 53, scope: !7330)
!7335 = !DILocalVariable(name: "index", scope: !7330, file: !3765, line: 499, type: !906)
!7336 = !DILocation(line: 499, column: 18, scope: !7330)
!7337 = !DILocation(line: 499, column: 26, scope: !7330)
!7338 = !DILocation(line: 499, column: 29, scope: !7330)
!7339 = !DILocalVariable(name: "result", scope: !7330, file: !3765, line: 500, type: !968)
!7340 = !DILocation(line: 500, column: 13, scope: !7330)
!7341 = !DILocation(line: 500, column: 32, scope: !7330)
!7342 = !DILocation(line: 500, column: 38, scope: !7330)
!7343 = !DILocation(line: 500, column: 22, scope: !7330)
!7344 = !DILocation(line: 500, column: 25, scope: !7330)
!7345 = !DILocation(line: 502, column: 16, scope: !7330)
!7346 = !DILocation(line: 502, column: 22, scope: !7330)
!7347 = !DILocation(line: 502, column: 12, scope: !7330)
!7348 = !DILocation(line: 503, column: 12, scope: !7330)
!7349 = !DILocation(line: 509, column: 9, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7330, file: !3765, line: 509, column: 9)
!7351 = !DILocation(line: 509, column: 12, scope: !7350)
!7352 = !DILocation(line: 509, column: 20, scope: !7350)
!7353 = !DILocation(line: 509, column: 23, scope: !7350)
!7354 = !DILocation(line: 509, column: 18, scope: !7350)
!7355 = !DILocation(line: 509, column: 9, scope: !7330)
!7356 = !DILocation(line: 511, column: 14, scope: !7350)
!7357 = !DILocation(line: 511, column: 9, scope: !7350)
!7358 = !DILocation(line: 512, column: 16, scope: !7330)
!7359 = !DILocation(line: 512, column: 5, scope: !7330)
!7360 = !DILocation(line: 512, column: 8, scope: !7330)
!7361 = !DILocation(line: 512, column: 14, scope: !7330)
!7362 = !DILocation(line: 514, column: 12, scope: !7330)
!7363 = !DILocation(line: 514, column: 5, scope: !7330)
!7364 = distinct !DISubprogram(name: "fill_coding_method_array", scope: !934, file: !934, line: 525, type: !7365, isLocal: true, isDefinition: true, scopeLine: 531, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!7365 = !DISubroutineType(types: !7366)
!7366 = !{null, !7367, !7367, !7367, !905, !905, !905, !905}
!7367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7368, size: 64, align: 64)
!7368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1134, size: 15360, align: 8, elements: !7369)
!7369 = !{!1803, !1821}
!7370 = !DILocalVariable(name: "tone_level_idx", arg: 1, scope: !7364, file: !934, line: 525, type: !7367)
!7371 = !DILocation(line: 525, column: 52, scope: !7364)
!7372 = !DILocalVariable(name: "tone_level_idx_temp", arg: 2, scope: !7364, file: !934, line: 526, type: !7367)
!7373 = !DILocation(line: 526, column: 52, scope: !7364)
!7374 = !DILocalVariable(name: "coding_method", arg: 3, scope: !7364, file: !934, line: 527, type: !7367)
!7375 = !DILocation(line: 527, column: 52, scope: !7364)
!7376 = !DILocalVariable(name: "nb_channels", arg: 4, scope: !7364, file: !934, line: 528, type: !905)
!7377 = !DILocation(line: 528, column: 42, scope: !7364)
!7378 = !DILocalVariable(name: "c", arg: 5, scope: !7364, file: !934, line: 529, type: !905)
!7379 = !DILocation(line: 529, column: 42, scope: !7364)
!7380 = !DILocalVariable(name: "superblocktype_2_3", arg: 6, scope: !7364, file: !934, line: 529, type: !905)
!7381 = !DILocation(line: 529, column: 49, scope: !7364)
!7382 = !DILocalVariable(name: "cm_table_select", arg: 7, scope: !7364, file: !934, line: 530, type: !905)
!7383 = !DILocation(line: 530, column: 42, scope: !7364)
!7384 = !DILocalVariable(name: "ch", scope: !7364, file: !934, line: 532, type: !905)
!7385 = !DILocation(line: 532, column: 9, scope: !7364)
!7386 = !DILocalVariable(name: "sb", scope: !7364, file: !934, line: 532, type: !905)
!7387 = !DILocation(line: 532, column: 13, scope: !7364)
!7388 = !DILocalVariable(name: "j", scope: !7364, file: !934, line: 532, type: !905)
!7389 = !DILocation(line: 532, column: 17, scope: !7364)
!7390 = !DILocalVariable(name: "tmp", scope: !7364, file: !934, line: 533, type: !905)
!7391 = !DILocation(line: 533, column: 9, scope: !7364)
!7392 = !DILocalVariable(name: "acc", scope: !7364, file: !934, line: 533, type: !905)
!7393 = !DILocation(line: 533, column: 14, scope: !7364)
!7394 = !DILocalVariable(name: "esp_40", scope: !7364, file: !934, line: 533, type: !905)
!7395 = !DILocation(line: 533, column: 19, scope: !7364)
!7396 = !DILocalVariable(name: "comp", scope: !7364, file: !934, line: 533, type: !905)
!7397 = !DILocation(line: 533, column: 27, scope: !7364)
!7398 = !DILocalVariable(name: "add1", scope: !7364, file: !934, line: 534, type: !905)
!7399 = !DILocation(line: 534, column: 9, scope: !7364)
!7400 = !DILocalVariable(name: "add2", scope: !7364, file: !934, line: 534, type: !905)
!7401 = !DILocation(line: 534, column: 15, scope: !7364)
!7402 = !DILocalVariable(name: "add3", scope: !7364, file: !934, line: 534, type: !905)
!7403 = !DILocation(line: 534, column: 21, scope: !7364)
!7404 = !DILocalVariable(name: "add4", scope: !7364, file: !934, line: 534, type: !905)
!7405 = !DILocation(line: 534, column: 27, scope: !7364)
!7406 = !DILocalVariable(name: "multres", scope: !7364, file: !934, line: 535, type: !1070)
!7407 = !DILocation(line: 535, column: 13, scope: !7364)
!7408 = !DILocation(line: 537, column: 10, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7364, file: !934, line: 537, column: 9)
!7410 = !DILocation(line: 537, column: 9, scope: !7364)
!7411 = !DILocation(line: 539, column: 9, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7409, file: !934, line: 537, column: 30)
!7413 = !DILocation(line: 540, column: 9, scope: !7412)
!7414 = !DILocation(line: 633, column: 17, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7416, file: !934, line: 633, column: 9)
!7416 = distinct !DILexicalBlock(scope: !7409, file: !934, line: 632, column: 12)
!7417 = !DILocation(line: 633, column: 14, scope: !7415)
!7418 = !DILocation(line: 633, column: 22, scope: !7419)
!7419 = !DILexicalBlockFile(scope: !7420, file: !934, discriminator: 1)
!7420 = distinct !DILexicalBlock(scope: !7415, file: !934, line: 633, column: 9)
!7421 = !DILocation(line: 633, column: 27, scope: !7419)
!7422 = !DILocation(line: 633, column: 25, scope: !7419)
!7423 = !DILocation(line: 633, column: 9, scope: !7419)
!7424 = !DILocation(line: 634, column: 21, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7420, file: !934, line: 634, column: 13)
!7426 = !DILocation(line: 634, column: 18, scope: !7425)
!7427 = !DILocation(line: 634, column: 26, scope: !7428)
!7428 = !DILexicalBlockFile(scope: !7429, file: !934, discriminator: 1)
!7429 = distinct !DILexicalBlock(scope: !7425, file: !934, line: 634, column: 13)
!7430 = !DILocation(line: 634, column: 29, scope: !7428)
!7431 = !DILocation(line: 634, column: 13, scope: !7428)
!7432 = !DILocation(line: 635, column: 24, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7429, file: !934, line: 635, column: 17)
!7434 = !DILocation(line: 635, column: 22, scope: !7433)
!7435 = !DILocation(line: 635, column: 29, scope: !7436)
!7436 = !DILexicalBlockFile(scope: !7437, file: !934, discriminator: 1)
!7437 = distinct !DILexicalBlock(scope: !7433, file: !934, line: 635, column: 17)
!7438 = !DILocation(line: 635, column: 31, scope: !7436)
!7439 = !DILocation(line: 635, column: 17, scope: !7436)
!7440 = !DILocation(line: 636, column: 85, scope: !7437)
!7441 = !DILocation(line: 636, column: 48, scope: !7437)
!7442 = !DILocation(line: 636, column: 68, scope: !7437)
!7443 = !DILocation(line: 636, column: 43, scope: !7437)
!7444 = !DILocation(line: 636, column: 21, scope: !7437)
!7445 = !DILocation(line: 636, column: 39, scope: !7437)
!7446 = !DILocation(line: 636, column: 35, scope: !7437)
!7447 = !DILocation(line: 636, column: 46, scope: !7437)
!7448 = !DILocation(line: 635, column: 38, scope: !7449)
!7449 = !DILexicalBlockFile(scope: !7437, file: !934, discriminator: 2)
!7450 = !DILocation(line: 635, column: 17, scope: !7449)
!7451 = distinct !{!7451, !7452}
!7452 = !DILocation(line: 635, column: 17, scope: !7429)
!7453 = !DILocation(line: 636, column: 87, scope: !7454)
!7454 = !DILexicalBlockFile(scope: !7433, file: !934, discriminator: 1)
!7455 = !DILocation(line: 634, column: 37, scope: !7456)
!7456 = !DILexicalBlockFile(scope: !7429, file: !934, discriminator: 2)
!7457 = !DILocation(line: 634, column: 13, scope: !7456)
!7458 = distinct !{!7458, !7459}
!7459 = !DILocation(line: 634, column: 13, scope: !7420)
!7460 = !DILocation(line: 636, column: 87, scope: !7461)
!7461 = !DILexicalBlockFile(scope: !7425, file: !934, discriminator: 2)
!7462 = !DILocation(line: 633, column: 42, scope: !7463)
!7463 = !DILexicalBlockFile(scope: !7420, file: !934, discriminator: 2)
!7464 = !DILocation(line: 633, column: 9, scope: !7463)
!7465 = distinct !{!7465, !7466}
!7466 = !DILocation(line: 633, column: 9, scope: !7416)
!7467 = !DILocation(line: 638, column: 1, scope: !7364)
!7468 = distinct !DISubprogram(name: "synthfilt_build_sb_samples", scope: !934, file: !934, line: 652, type: !7469, isLocal: true, isDefinition: true, scopeLine: 654, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!7469 = !DISubroutineType(types: !7470)
!7470 = !{!905, !1999, !5359, !905, !905, !905}
!7471 = !DILocalVariable(name: "q", arg: 1, scope: !7468, file: !934, line: 652, type: !1999)
!7472 = !DILocation(line: 652, column: 52, scope: !7468)
!7473 = !DILocalVariable(name: "gb", arg: 2, scope: !7468, file: !934, line: 652, type: !5359)
!7474 = !DILocation(line: 652, column: 70, scope: !7468)
!7475 = !DILocalVariable(name: "length", arg: 3, scope: !7468, file: !934, line: 653, type: !905)
!7476 = !DILocation(line: 653, column: 44, scope: !7468)
!7477 = !DILocalVariable(name: "sb_min", arg: 4, scope: !7468, file: !934, line: 653, type: !905)
!7478 = !DILocation(line: 653, column: 56, scope: !7468)
!7479 = !DILocalVariable(name: "sb_max", arg: 5, scope: !7468, file: !934, line: 653, type: !905)
!7480 = !DILocation(line: 653, column: 68, scope: !7468)
!7481 = !DILocalVariable(name: "sb", scope: !7468, file: !934, line: 655, type: !905)
!7482 = !DILocation(line: 655, column: 9, scope: !7468)
!7483 = !DILocalVariable(name: "j", scope: !7468, file: !934, line: 655, type: !905)
!7484 = !DILocation(line: 655, column: 13, scope: !7468)
!7485 = !DILocalVariable(name: "k", scope: !7468, file: !934, line: 655, type: !905)
!7486 = !DILocation(line: 655, column: 16, scope: !7468)
!7487 = !DILocalVariable(name: "n", scope: !7468, file: !934, line: 655, type: !905)
!7488 = !DILocation(line: 655, column: 19, scope: !7468)
!7489 = !DILocalVariable(name: "ch", scope: !7468, file: !934, line: 655, type: !905)
!7490 = !DILocation(line: 655, column: 22, scope: !7468)
!7491 = !DILocalVariable(name: "run", scope: !7468, file: !934, line: 655, type: !905)
!7492 = !DILocation(line: 655, column: 26, scope: !7468)
!7493 = !DILocalVariable(name: "channels", scope: !7468, file: !934, line: 655, type: !905)
!7494 = !DILocation(line: 655, column: 31, scope: !7468)
!7495 = !DILocalVariable(name: "joined_stereo", scope: !7468, file: !934, line: 656, type: !905)
!7496 = !DILocation(line: 656, column: 9, scope: !7468)
!7497 = !DILocalVariable(name: "zero_encoding", scope: !7468, file: !934, line: 656, type: !905)
!7498 = !DILocation(line: 656, column: 24, scope: !7468)
!7499 = !DILocalVariable(name: "type34_first", scope: !7468, file: !934, line: 657, type: !905)
!7500 = !DILocation(line: 657, column: 9, scope: !7468)
!7501 = !DILocalVariable(name: "type34_div", scope: !7468, file: !934, line: 658, type: !910)
!7502 = !DILocation(line: 658, column: 11, scope: !7468)
!7503 = !DILocalVariable(name: "type34_predictor", scope: !7468, file: !934, line: 659, type: !910)
!7504 = !DILocation(line: 659, column: 11, scope: !7468)
!7505 = !DILocalVariable(name: "samples", scope: !7468, file: !934, line: 660, type: !7506)
!7506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 320, align: 32, elements: !1747)
!7507 = !DILocation(line: 660, column: 11, scope: !7468)
!7508 = !DILocalVariable(name: "sign_bits", scope: !7468, file: !934, line: 661, type: !7509)
!7509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 512, align: 32, elements: !2023)
!7510 = !DILocation(line: 661, column: 9, scope: !7468)
!7511 = !DILocation(line: 663, column: 9, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7468, file: !934, line: 663, column: 9)
!7513 = !DILocation(line: 663, column: 16, scope: !7512)
!7514 = !DILocation(line: 663, column: 9, scope: !7468)
!7515 = !DILocation(line: 665, column: 17, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7517, file: !934, line: 665, column: 9)
!7517 = distinct !DILexicalBlock(scope: !7512, file: !934, line: 663, column: 22)
!7518 = !DILocation(line: 665, column: 16, scope: !7516)
!7519 = !DILocation(line: 665, column: 14, scope: !7516)
!7520 = !DILocation(line: 665, column: 25, scope: !7521)
!7521 = !DILexicalBlockFile(scope: !7522, file: !934, discriminator: 1)
!7522 = distinct !DILexicalBlock(scope: !7516, file: !934, line: 665, column: 9)
!7523 = !DILocation(line: 665, column: 30, scope: !7521)
!7524 = !DILocation(line: 665, column: 28, scope: !7521)
!7525 = !DILocation(line: 665, column: 9, scope: !7521)
!7526 = !DILocation(line: 666, column: 41, scope: !7522)
!7527 = !DILocation(line: 666, column: 44, scope: !7522)
!7528 = !DILocation(line: 666, column: 13, scope: !7522)
!7529 = !DILocation(line: 665, column: 40, scope: !7530)
!7530 = !DILexicalBlockFile(scope: !7522, file: !934, discriminator: 2)
!7531 = !DILocation(line: 665, column: 9, scope: !7530)
!7532 = distinct !{!7532, !7533}
!7533 = !DILocation(line: 665, column: 9, scope: !7517)
!7534 = !DILocation(line: 668, column: 9, scope: !7517)
!7535 = !DILocation(line: 671, column: 15, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7468, file: !934, line: 671, column: 5)
!7537 = !DILocation(line: 671, column: 13, scope: !7536)
!7538 = !DILocation(line: 671, column: 10, scope: !7536)
!7539 = !DILocation(line: 671, column: 23, scope: !7540)
!7540 = !DILexicalBlockFile(scope: !7541, file: !934, discriminator: 1)
!7541 = distinct !DILexicalBlock(scope: !7536, file: !934, line: 671, column: 5)
!7542 = !DILocation(line: 671, column: 28, scope: !7540)
!7543 = !DILocation(line: 671, column: 26, scope: !7540)
!7544 = !DILocation(line: 671, column: 5, scope: !7540)
!7545 = !DILocation(line: 672, column: 20, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7541, file: !934, line: 671, column: 42)
!7547 = !DILocation(line: 672, column: 23, scope: !7546)
!7548 = !DILocation(line: 672, column: 18, scope: !7546)
!7549 = !DILocation(line: 674, column: 13, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7546, file: !934, line: 674, column: 13)
!7551 = !DILocation(line: 674, column: 16, scope: !7550)
!7552 = !DILocation(line: 674, column: 28, scope: !7550)
!7553 = !DILocation(line: 674, column: 33, scope: !7550)
!7554 = !DILocation(line: 674, column: 36, scope: !7555)
!7555 = !DILexicalBlockFile(scope: !7550, file: !934, discriminator: 1)
!7556 = !DILocation(line: 674, column: 39, scope: !7555)
!7557 = !DILocation(line: 674, column: 13, scope: !7555)
!7558 = !DILocation(line: 675, column: 27, scope: !7550)
!7559 = !DILocation(line: 675, column: 13, scope: !7550)
!7560 = !DILocation(line: 676, column: 18, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7550, file: !934, line: 676, column: 18)
!7562 = !DILocation(line: 676, column: 21, scope: !7561)
!7563 = !DILocation(line: 676, column: 18, scope: !7550)
!7564 = !DILocation(line: 677, column: 27, scope: !7561)
!7565 = !DILocation(line: 677, column: 13, scope: !7561)
!7566 = !DILocation(line: 679, column: 44, scope: !7561)
!7567 = !DILocation(line: 679, column: 30, scope: !7561)
!7568 = !DILocation(line: 679, column: 48, scope: !7561)
!7569 = !DILocation(line: 679, column: 29, scope: !7561)
!7570 = !DILocation(line: 679, column: 66, scope: !7571)
!7571 = !DILexicalBlockFile(scope: !7561, file: !934, discriminator: 1)
!7572 = !DILocation(line: 679, column: 56, scope: !7571)
!7573 = !DILocation(line: 679, column: 29, scope: !7571)
!7574 = !DILocation(line: 679, column: 29, scope: !7575)
!7575 = !DILexicalBlockFile(scope: !7561, file: !934, discriminator: 2)
!7576 = !DILocation(line: 679, column: 29, scope: !7577)
!7577 = !DILexicalBlockFile(scope: !7561, file: !934, discriminator: 3)
!7578 = !DILocation(line: 679, column: 27, scope: !7577)
!7579 = !DILocation(line: 681, column: 13, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7546, file: !934, line: 681, column: 13)
!7581 = !DILocation(line: 681, column: 13, scope: !7546)
!7582 = !DILocation(line: 682, column: 31, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7584, file: !934, line: 682, column: 17)
!7584 = distinct !DILexicalBlock(scope: !7580, file: !934, line: 681, column: 28)
!7585 = !DILocation(line: 682, column: 17, scope: !7583)
!7586 = !DILocation(line: 682, column: 35, scope: !7583)
!7587 = !DILocation(line: 682, column: 17, scope: !7584)
!7588 = !DILocation(line: 683, column: 24, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7583, file: !934, line: 683, column: 17)
!7590 = !DILocation(line: 683, column: 22, scope: !7589)
!7591 = !DILocation(line: 683, column: 29, scope: !7592)
!7592 = !DILexicalBlockFile(scope: !7593, file: !934, discriminator: 1)
!7593 = distinct !DILexicalBlock(scope: !7589, file: !934, line: 683, column: 17)
!7594 = !DILocation(line: 683, column: 31, scope: !7592)
!7595 = !DILocation(line: 683, column: 17, scope: !7592)
!7596 = !DILocation(line: 684, column: 46, scope: !7593)
!7597 = !DILocation(line: 684, column: 36, scope: !7593)
!7598 = !DILocation(line: 684, column: 31, scope: !7593)
!7599 = !DILocation(line: 684, column: 21, scope: !7593)
!7600 = !DILocation(line: 684, column: 34, scope: !7593)
!7601 = !DILocation(line: 683, column: 38, scope: !7602)
!7602 = !DILexicalBlockFile(scope: !7593, file: !934, discriminator: 2)
!7603 = !DILocation(line: 683, column: 17, scope: !7602)
!7604 = distinct !{!7604, !7605}
!7605 = !DILocation(line: 683, column: 17, scope: !7583)
!7606 = !DILocation(line: 684, column: 48, scope: !7607)
!7607 = !DILexicalBlockFile(scope: !7589, file: !934, discriminator: 1)
!7608 = !DILocation(line: 686, column: 20, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7584, file: !934, line: 686, column: 13)
!7610 = !DILocation(line: 686, column: 18, scope: !7609)
!7611 = !DILocation(line: 686, column: 25, scope: !7612)
!7612 = !DILexicalBlockFile(scope: !7613, file: !934, discriminator: 1)
!7613 = distinct !DILexicalBlock(scope: !7609, file: !934, line: 686, column: 13)
!7614 = !DILocation(line: 686, column: 27, scope: !7612)
!7615 = !DILocation(line: 686, column: 13, scope: !7612)
!7616 = !DILocation(line: 687, column: 45, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7613, file: !934, line: 687, column: 21)
!7618 = !DILocation(line: 687, column: 21, scope: !7617)
!7619 = !DILocation(line: 687, column: 41, scope: !7617)
!7620 = !DILocation(line: 687, column: 24, scope: !7617)
!7621 = !DILocation(line: 687, column: 74, scope: !7617)
!7622 = !DILocation(line: 687, column: 50, scope: !7617)
!7623 = !DILocation(line: 687, column: 70, scope: !7617)
!7624 = !DILocation(line: 687, column: 53, scope: !7617)
!7625 = !DILocation(line: 687, column: 48, scope: !7617)
!7626 = !DILocation(line: 687, column: 21, scope: !7613)
!7627 = !DILocation(line: 688, column: 74, scope: !7617)
!7628 = !DILocation(line: 688, column: 50, scope: !7617)
!7629 = !DILocation(line: 688, column: 70, scope: !7617)
!7630 = !DILocation(line: 688, column: 53, scope: !7617)
!7631 = !DILocation(line: 688, column: 45, scope: !7617)
!7632 = !DILocation(line: 688, column: 21, scope: !7617)
!7633 = !DILocation(line: 688, column: 41, scope: !7617)
!7634 = !DILocation(line: 688, column: 24, scope: !7617)
!7635 = !DILocation(line: 688, column: 48, scope: !7617)
!7636 = !DILocation(line: 687, column: 75, scope: !7637)
!7637 = !DILexicalBlockFile(scope: !7617, file: !934, discriminator: 1)
!7638 = !DILocation(line: 686, column: 34, scope: !7639)
!7639 = !DILexicalBlockFile(scope: !7613, file: !934, discriminator: 2)
!7640 = !DILocation(line: 686, column: 13, scope: !7639)
!7641 = distinct !{!7641, !7642}
!7642 = !DILocation(line: 686, column: 13, scope: !7584)
!7643 = !DILocation(line: 690, column: 41, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7584, file: !934, line: 690, column: 17)
!7645 = !DILocation(line: 690, column: 45, scope: !7644)
!7646 = !DILocation(line: 690, column: 48, scope: !7644)
!7647 = !DILocation(line: 691, column: 45, scope: !7644)
!7648 = !DILocation(line: 691, column: 48, scope: !7644)
!7649 = !DILocation(line: 690, column: 17, scope: !7644)
!7650 = !DILocation(line: 690, column: 17, scope: !7584)
!7651 = !DILocation(line: 692, column: 17, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7644, file: !934, line: 691, column: 64)
!7653 = !DILocation(line: 693, column: 45, scope: !7652)
!7654 = !DILocation(line: 693, column: 48, scope: !7652)
!7655 = !DILocation(line: 693, column: 17, scope: !7652)
!7656 = !DILocation(line: 694, column: 17, scope: !7652)
!7657 = !DILocation(line: 696, column: 22, scope: !7584)
!7658 = !DILocation(line: 697, column: 9, scope: !7584)
!7659 = !DILocation(line: 699, column: 17, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7546, file: !934, line: 699, column: 9)
!7661 = !DILocation(line: 699, column: 14, scope: !7660)
!7662 = !DILocation(line: 699, column: 22, scope: !7663)
!7663 = !DILexicalBlockFile(scope: !7664, file: !934, discriminator: 1)
!7664 = distinct !DILexicalBlock(scope: !7660, file: !934, line: 699, column: 9)
!7665 = !DILocation(line: 699, column: 27, scope: !7663)
!7666 = !DILocation(line: 699, column: 25, scope: !7663)
!7667 = !DILocation(line: 699, column: 9, scope: !7663)
!7668 = !DILocation(line: 700, column: 18, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7670, file: !934, line: 700, column: 17)
!7670 = distinct !DILexicalBlock(scope: !7664, file: !934, line: 699, column: 43)
!7671 = !DILocation(line: 700, column: 21, scope: !7669)
!7672 = !DILocation(line: 700, column: 32, scope: !7669)
!7673 = !DILocation(line: 700, column: 17, scope: !7670)
!7674 = !DILocation(line: 700, column: 42, scope: !7675)
!7675 = !DILexicalBlockFile(scope: !7669, file: !934, discriminator: 1)
!7676 = !DILocation(line: 700, column: 45, scope: !7675)
!7677 = !DILocation(line: 700, column: 56, scope: !7675)
!7678 = !DILocation(line: 700, column: 41, scope: !7675)
!7679 = !DILocation(line: 701, column: 44, scope: !7670)
!7680 = !DILocation(line: 701, column: 30, scope: !7670)
!7681 = !DILocation(line: 701, column: 48, scope: !7670)
!7682 = !DILocation(line: 701, column: 29, scope: !7670)
!7683 = !DILocation(line: 701, column: 66, scope: !7684)
!7684 = !DILexicalBlockFile(scope: !7670, file: !934, discriminator: 1)
!7685 = !DILocation(line: 701, column: 56, scope: !7684)
!7686 = !DILocation(line: 701, column: 29, scope: !7684)
!7687 = !DILocation(line: 701, column: 29, scope: !7688)
!7688 = !DILexicalBlockFile(scope: !7670, file: !934, discriminator: 2)
!7689 = !DILocation(line: 701, column: 29, scope: !7690)
!7690 = !DILexicalBlockFile(scope: !7670, file: !934, discriminator: 3)
!7691 = !DILocation(line: 701, column: 27, scope: !7690)
!7692 = !DILocation(line: 702, column: 30, scope: !7670)
!7693 = !DILocation(line: 703, column: 26, scope: !7670)
!7694 = !DILocation(line: 705, column: 20, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7670, file: !934, line: 705, column: 13)
!7696 = !DILocation(line: 705, column: 18, scope: !7695)
!7697 = !DILocation(line: 705, column: 25, scope: !7698)
!7698 = !DILexicalBlockFile(scope: !7699, file: !934, discriminator: 1)
!7699 = distinct !DILexicalBlock(scope: !7695, file: !934, line: 705, column: 13)
!7700 = !DILocation(line: 705, column: 27, scope: !7698)
!7701 = !DILocation(line: 705, column: 13, scope: !7698)
!7702 = !DILocation(line: 706, column: 50, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7699, file: !934, line: 705, column: 36)
!7704 = !DILocation(line: 706, column: 52, scope: !7703)
!7705 = !DILocation(line: 706, column: 25, scope: !7703)
!7706 = !DILocation(line: 706, column: 46, scope: !7703)
!7707 = !DILocation(line: 706, column: 42, scope: !7703)
!7708 = !DILocation(line: 706, column: 28, scope: !7703)
!7709 = !DILocation(line: 706, column: 17, scope: !7703)
!7710 = !DILocation(line: 708, column: 43, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !934, line: 708, column: 29)
!7712 = distinct !DILexicalBlock(scope: !7703, file: !934, line: 706, column: 58)
!7713 = !DILocation(line: 708, column: 29, scope: !7711)
!7714 = !DILocation(line: 708, column: 47, scope: !7711)
!7715 = !DILocation(line: 708, column: 29, scope: !7712)
!7716 = !DILocation(line: 709, column: 33, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !934, line: 709, column: 33)
!7718 = distinct !DILexicalBlock(scope: !7711, file: !934, line: 708, column: 54)
!7719 = !DILocation(line: 709, column: 33, scope: !7718)
!7720 = !DILocation(line: 710, column: 40, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7722, file: !934, line: 710, column: 33)
!7722 = distinct !DILexicalBlock(scope: !7717, file: !934, line: 709, column: 48)
!7723 = !DILocation(line: 710, column: 38, scope: !7721)
!7724 = !DILocation(line: 710, column: 45, scope: !7725)
!7725 = !DILexicalBlockFile(scope: !7726, file: !934, discriminator: 1)
!7726 = distinct !DILexicalBlock(scope: !7721, file: !934, line: 710, column: 33)
!7727 = !DILocation(line: 710, column: 47, scope: !7725)
!7728 = !DILocation(line: 710, column: 33, scope: !7725)
!7729 = !DILocation(line: 711, column: 42, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7731, file: !934, line: 711, column: 41)
!7731 = distinct !DILexicalBlock(scope: !7726, file: !934, line: 710, column: 57)
!7732 = !DILocation(line: 711, column: 50, scope: !7730)
!7733 = !DILocation(line: 711, column: 48, scope: !7730)
!7734 = !DILocation(line: 711, column: 44, scope: !7730)
!7735 = !DILocation(line: 711, column: 53, scope: !7730)
!7736 = !DILocation(line: 711, column: 41, scope: !7731)
!7737 = !DILocation(line: 712, column: 41, scope: !7730)
!7738 = !DILocation(line: 713, column: 64, scope: !7731)
!7739 = !DILocation(line: 713, column: 54, scope: !7731)
!7740 = !DILocation(line: 713, column: 112, scope: !7741)
!7741 = !DILexicalBlockFile(scope: !7731, file: !934, discriminator: 1)
!7742 = !DILocation(line: 713, column: 102, scope: !7741)
!7743 = !DILocation(line: 713, column: 100, scope: !7741)
!7744 = !DILocation(line: 713, column: 70, scope: !7741)
!7745 = !DILocation(line: 713, column: 83, scope: !7741)
!7746 = !DILocation(line: 713, column: 54, scope: !7741)
!7747 = !DILocation(line: 713, column: 54, scope: !7748)
!7748 = !DILexicalBlockFile(scope: !7731, file: !934, discriminator: 2)
!7749 = !DILocation(line: 713, column: 54, scope: !7750)
!7750 = !DILexicalBlockFile(scope: !7731, file: !934, discriminator: 3)
!7751 = !DILocation(line: 713, column: 49, scope: !7750)
!7752 = !DILocation(line: 713, column: 47, scope: !7750)
!7753 = !DILocation(line: 713, column: 37, scope: !7750)
!7754 = !DILocation(line: 713, column: 52, scope: !7750)
!7755 = !DILocation(line: 714, column: 33, scope: !7731)
!7756 = !DILocation(line: 710, column: 53, scope: !7757)
!7757 = !DILexicalBlockFile(scope: !7726, file: !934, discriminator: 2)
!7758 = !DILocation(line: 710, column: 33, scope: !7757)
!7759 = distinct !{!7759, !7760}
!7760 = !DILocation(line: 710, column: 33, scope: !7722)
!7761 = !DILocation(line: 715, column: 29, scope: !7722)
!7762 = !DILocation(line: 716, column: 46, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7717, file: !934, line: 715, column: 36)
!7764 = !DILocation(line: 716, column: 37, scope: !7763)
!7765 = !DILocation(line: 716, column: 35, scope: !7763)
!7766 = !DILocation(line: 717, column: 37, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7763, file: !934, line: 717, column: 37)
!7768 = !DILocation(line: 717, column: 39, scope: !7767)
!7769 = !DILocation(line: 717, column: 37, scope: !7763)
!7770 = !DILocation(line: 718, column: 37, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7767, file: !934, line: 717, column: 47)
!7772 = !DILocation(line: 719, column: 37, scope: !7771)
!7773 = !DILocation(line: 722, column: 40, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7763, file: !934, line: 722, column: 33)
!7775 = !DILocation(line: 722, column: 38, scope: !7774)
!7776 = !DILocation(line: 722, column: 45, scope: !7777)
!7777 = !DILexicalBlockFile(scope: !7778, file: !934, discriminator: 1)
!7778 = distinct !DILexicalBlock(scope: !7774, file: !934, line: 722, column: 33)
!7779 = !DILocation(line: 722, column: 47, scope: !7777)
!7780 = !DILocation(line: 722, column: 33, scope: !7777)
!7781 = !DILocation(line: 723, column: 106, scope: !7778)
!7782 = !DILocation(line: 723, column: 82, scope: !7778)
!7783 = !DILocation(line: 723, column: 103, scope: !7778)
!7784 = !DILocation(line: 723, column: 54, scope: !7778)
!7785 = !DILocation(line: 723, column: 67, scope: !7778)
!7786 = !DILocation(line: 723, column: 49, scope: !7778)
!7787 = !DILocation(line: 723, column: 47, scope: !7778)
!7788 = !DILocation(line: 723, column: 37, scope: !7778)
!7789 = !DILocation(line: 723, column: 52, scope: !7778)
!7790 = !DILocation(line: 722, column: 53, scope: !7791)
!7791 = !DILexicalBlockFile(scope: !7778, file: !934, discriminator: 2)
!7792 = !DILocation(line: 722, column: 33, scope: !7791)
!7793 = distinct !{!7793, !7794}
!7794 = !DILocation(line: 722, column: 33, scope: !7763)
!7795 = !DILocation(line: 725, column: 36, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7718, file: !934, line: 725, column: 29)
!7797 = !DILocation(line: 725, column: 34, scope: !7796)
!7798 = !DILocation(line: 725, column: 41, scope: !7799)
!7799 = !DILexicalBlockFile(scope: !7800, file: !934, discriminator: 1)
!7800 = distinct !DILexicalBlock(scope: !7796, file: !934, line: 725, column: 29)
!7801 = !DILocation(line: 725, column: 43, scope: !7799)
!7802 = !DILocation(line: 725, column: 29, scope: !7799)
!7803 = !DILocation(line: 726, column: 68, scope: !7800)
!7804 = !DILocation(line: 726, column: 71, scope: !7800)
!7805 = !DILocation(line: 726, column: 81, scope: !7800)
!7806 = !DILocation(line: 726, column: 55, scope: !7800)
!7807 = !DILocation(line: 726, column: 109, scope: !7800)
!7808 = !DILocation(line: 726, column: 87, scope: !7800)
!7809 = !DILocation(line: 726, column: 85, scope: !7800)
!7810 = !DILocation(line: 726, column: 45, scope: !7800)
!7811 = !DILocation(line: 726, column: 43, scope: !7800)
!7812 = !DILocation(line: 726, column: 47, scope: !7800)
!7813 = !DILocation(line: 726, column: 33, scope: !7800)
!7814 = !DILocation(line: 726, column: 52, scope: !7800)
!7815 = !DILocation(line: 725, column: 49, scope: !7816)
!7816 = !DILexicalBlockFile(scope: !7800, file: !934, discriminator: 2)
!7817 = !DILocation(line: 725, column: 29, scope: !7816)
!7818 = distinct !{!7818, !7819}
!7819 = !DILocation(line: 725, column: 29, scope: !7718)
!7820 = !DILocation(line: 727, column: 25, scope: !7718)
!7821 = !DILocation(line: 728, column: 36, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !934, line: 728, column: 29)
!7823 = distinct !DILexicalBlock(scope: !7711, file: !934, line: 727, column: 32)
!7824 = !DILocation(line: 728, column: 34, scope: !7822)
!7825 = !DILocation(line: 728, column: 41, scope: !7826)
!7826 = !DILexicalBlockFile(scope: !7827, file: !934, discriminator: 1)
!7827 = distinct !DILexicalBlock(scope: !7822, file: !934, line: 728, column: 29)
!7828 = !DILocation(line: 728, column: 43, scope: !7826)
!7829 = !DILocation(line: 728, column: 29, scope: !7826)
!7830 = !DILocation(line: 729, column: 60, scope: !7827)
!7831 = !DILocation(line: 729, column: 63, scope: !7827)
!7832 = !DILocation(line: 729, column: 73, scope: !7827)
!7833 = !DILocation(line: 729, column: 47, scope: !7827)
!7834 = !DILocation(line: 729, column: 101, scope: !7827)
!7835 = !DILocation(line: 729, column: 79, scope: !7827)
!7836 = !DILocation(line: 729, column: 77, scope: !7827)
!7837 = !DILocation(line: 729, column: 41, scope: !7827)
!7838 = !DILocation(line: 729, column: 33, scope: !7827)
!7839 = !DILocation(line: 729, column: 44, scope: !7827)
!7840 = !DILocation(line: 728, column: 50, scope: !7841)
!7841 = !DILexicalBlockFile(scope: !7827, file: !934, discriminator: 2)
!7842 = !DILocation(line: 728, column: 29, scope: !7841)
!7843 = distinct !{!7843, !7844}
!7844 = !DILocation(line: 728, column: 29, scope: !7823)
!7845 = !DILocation(line: 731, column: 29, scope: !7712)
!7846 = !DILocation(line: 732, column: 25, scope: !7712)
!7847 = !DILocation(line: 735, column: 43, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7712, file: !934, line: 735, column: 29)
!7849 = !DILocation(line: 735, column: 29, scope: !7848)
!7850 = !DILocation(line: 735, column: 47, scope: !7848)
!7851 = !DILocation(line: 735, column: 29, scope: !7712)
!7852 = !DILocalVariable(name: "f", scope: !7853, file: !934, line: 736, type: !910)
!7853 = distinct !DILexicalBlock(scope: !7848, file: !934, line: 735, column: 53)
!7854 = !DILocation(line: 736, column: 35, scope: !7853)
!7855 = !DILocation(line: 738, column: 43, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7853, file: !934, line: 738, column: 33)
!7857 = !DILocation(line: 738, column: 33, scope: !7856)
!7858 = !DILocation(line: 738, column: 33, scope: !7853)
!7859 = !DILocation(line: 739, column: 38, scope: !7856)
!7860 = !DILocation(line: 739, column: 37, scope: !7856)
!7861 = !DILocation(line: 739, column: 35, scope: !7856)
!7862 = !DILocation(line: 739, column: 33, scope: !7856)
!7863 = !DILocation(line: 740, column: 50, scope: !7853)
!7864 = !DILocation(line: 740, column: 53, scope: !7853)
!7865 = !DILocation(line: 740, column: 61, scope: !7853)
!7866 = !DILocation(line: 740, column: 68, scope: !7853)
!7867 = !DILocation(line: 740, column: 66, scope: !7853)
!7868 = !DILocation(line: 740, column: 63, scope: !7853)
!7869 = !DILocation(line: 740, column: 71, scope: !7853)
!7870 = !DILocation(line: 740, column: 58, scope: !7853)
!7871 = !DILocation(line: 740, column: 77, scope: !7853)
!7872 = !DILocation(line: 740, column: 34, scope: !7853)
!7873 = !DILocation(line: 740, column: 84, scope: !7853)
!7874 = !DILocation(line: 740, column: 90, scope: !7853)
!7875 = !DILocation(line: 740, column: 31, scope: !7853)
!7876 = !DILocation(line: 741, column: 42, scope: !7853)
!7877 = !DILocation(line: 741, column: 29, scope: !7853)
!7878 = !DILocation(line: 741, column: 40, scope: !7853)
!7879 = !DILocation(line: 742, column: 25, scope: !7853)
!7880 = !DILocation(line: 743, column: 56, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7848, file: !934, line: 742, column: 32)
!7882 = !DILocation(line: 743, column: 59, scope: !7881)
!7883 = !DILocation(line: 743, column: 69, scope: !7881)
!7884 = !DILocation(line: 743, column: 43, scope: !7881)
!7885 = !DILocation(line: 743, column: 97, scope: !7881)
!7886 = !DILocation(line: 743, column: 75, scope: !7881)
!7887 = !DILocation(line: 743, column: 73, scope: !7881)
!7888 = !DILocation(line: 743, column: 29, scope: !7881)
!7889 = !DILocation(line: 743, column: 40, scope: !7881)
!7890 = !DILocation(line: 745, column: 29, scope: !7712)
!7891 = !DILocation(line: 746, column: 25, scope: !7712)
!7892 = !DILocation(line: 749, column: 43, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7712, file: !934, line: 749, column: 29)
!7894 = !DILocation(line: 749, column: 29, scope: !7893)
!7895 = !DILocation(line: 749, column: 47, scope: !7893)
!7896 = !DILocation(line: 749, column: 29, scope: !7712)
!7897 = !DILocation(line: 750, column: 33, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7899, file: !934, line: 750, column: 33)
!7899 = distinct !DILexicalBlock(scope: !7893, file: !934, line: 749, column: 54)
!7900 = !DILocation(line: 750, column: 33, scope: !7899)
!7901 = !DILocation(line: 751, column: 40, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7903, file: !934, line: 751, column: 33)
!7903 = distinct !DILexicalBlock(scope: !7898, file: !934, line: 750, column: 48)
!7904 = !DILocation(line: 751, column: 38, scope: !7902)
!7905 = !DILocation(line: 751, column: 45, scope: !7906)
!7906 = !DILexicalBlockFile(scope: !7907, file: !934, discriminator: 1)
!7907 = distinct !DILexicalBlock(scope: !7902, file: !934, line: 751, column: 33)
!7908 = !DILocation(line: 751, column: 47, scope: !7906)
!7909 = !DILocation(line: 751, column: 33, scope: !7906)
!7910 = !DILocation(line: 752, column: 42, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !934, line: 752, column: 41)
!7912 = distinct !DILexicalBlock(scope: !7907, file: !934, line: 751, column: 57)
!7913 = !DILocation(line: 752, column: 46, scope: !7911)
!7914 = !DILocation(line: 752, column: 44, scope: !7911)
!7915 = !DILocation(line: 752, column: 49, scope: !7911)
!7916 = !DILocation(line: 752, column: 41, scope: !7912)
!7917 = !DILocation(line: 753, column: 41, scope: !7911)
!7918 = !DILocation(line: 754, column: 61, scope: !7912)
!7919 = !DILocation(line: 754, column: 51, scope: !7912)
!7920 = !DILocation(line: 754, column: 65, scope: !7912)
!7921 = !DILocation(line: 754, column: 50, scope: !7912)
!7922 = !DILocation(line: 754, column: 50, scope: !7923)
!7923 = !DILexicalBlockFile(scope: !7912, file: !934, discriminator: 1)
!7924 = !DILocation(line: 754, column: 119, scope: !7925)
!7925 = !DILexicalBlockFile(scope: !7912, file: !934, discriminator: 2)
!7926 = !DILocation(line: 754, column: 109, scope: !7925)
!7927 = !DILocation(line: 754, column: 107, scope: !7925)
!7928 = !DILocation(line: 754, column: 77, scope: !7925)
!7929 = !DILocation(line: 754, column: 90, scope: !7925)
!7930 = !DILocation(line: 754, column: 50, scope: !7925)
!7931 = !DILocation(line: 754, column: 50, scope: !7932)
!7932 = !DILexicalBlockFile(scope: !7912, file: !934, discriminator: 3)
!7933 = !DILocation(line: 754, column: 45, scope: !7932)
!7934 = !DILocation(line: 754, column: 37, scope: !7932)
!7935 = !DILocation(line: 754, column: 48, scope: !7932)
!7936 = !DILocation(line: 755, column: 33, scope: !7912)
!7937 = !DILocation(line: 751, column: 53, scope: !7938)
!7938 = !DILexicalBlockFile(scope: !7907, file: !934, discriminator: 2)
!7939 = !DILocation(line: 751, column: 33, scope: !7938)
!7940 = distinct !{!7940, !7941}
!7941 = !DILocation(line: 751, column: 33, scope: !7903)
!7942 = !DILocation(line: 756, column: 29, scope: !7903)
!7943 = !DILocation(line: 757, column: 47, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7898, file: !934, line: 756, column: 36)
!7945 = !DILocation(line: 757, column: 37, scope: !7944)
!7946 = !DILocation(line: 757, column: 35, scope: !7944)
!7947 = !DILocation(line: 758, column: 37, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7944, file: !934, line: 758, column: 37)
!7949 = !DILocation(line: 758, column: 39, scope: !7948)
!7950 = !DILocation(line: 758, column: 37, scope: !7944)
!7951 = !DILocation(line: 759, column: 37, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7948, file: !934, line: 758, column: 47)
!7953 = !DILocation(line: 760, column: 37, scope: !7952)
!7954 = !DILocation(line: 763, column: 40, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7944, file: !934, line: 763, column: 33)
!7956 = !DILocation(line: 763, column: 38, scope: !7955)
!7957 = !DILocation(line: 763, column: 45, scope: !7958)
!7958 = !DILexicalBlockFile(scope: !7959, file: !934, discriminator: 1)
!7959 = distinct !DILexicalBlock(scope: !7955, file: !934, line: 763, column: 33)
!7960 = !DILocation(line: 763, column: 47, scope: !7958)
!7961 = !DILocation(line: 763, column: 33, scope: !7958)
!7962 = !DILocation(line: 764, column: 102, scope: !7959)
!7963 = !DILocation(line: 764, column: 78, scope: !7959)
!7964 = !DILocation(line: 764, column: 99, scope: !7959)
!7965 = !DILocation(line: 764, column: 50, scope: !7959)
!7966 = !DILocation(line: 764, column: 63, scope: !7959)
!7967 = !DILocation(line: 764, column: 45, scope: !7959)
!7968 = !DILocation(line: 764, column: 37, scope: !7959)
!7969 = !DILocation(line: 764, column: 48, scope: !7959)
!7970 = !DILocation(line: 763, column: 53, scope: !7971)
!7971 = !DILexicalBlockFile(scope: !7959, file: !934, discriminator: 2)
!7972 = !DILocation(line: 763, column: 33, scope: !7971)
!7973 = distinct !{!7973, !7974}
!7974 = !DILocation(line: 763, column: 33, scope: !7944)
!7975 = !DILocation(line: 766, column: 25, scope: !7899)
!7976 = !DILocation(line: 767, column: 36, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7978, file: !934, line: 767, column: 29)
!7978 = distinct !DILexicalBlock(scope: !7893, file: !934, line: 766, column: 32)
!7979 = !DILocation(line: 767, column: 34, scope: !7977)
!7980 = !DILocation(line: 767, column: 41, scope: !7981)
!7981 = !DILexicalBlockFile(scope: !7982, file: !934, discriminator: 1)
!7982 = distinct !DILexicalBlock(scope: !7977, file: !934, line: 767, column: 29)
!7983 = !DILocation(line: 767, column: 43, scope: !7981)
!7984 = !DILocation(line: 767, column: 29, scope: !7981)
!7985 = !DILocation(line: 768, column: 60, scope: !7982)
!7986 = !DILocation(line: 768, column: 63, scope: !7982)
!7987 = !DILocation(line: 768, column: 73, scope: !7982)
!7988 = !DILocation(line: 768, column: 47, scope: !7982)
!7989 = !DILocation(line: 768, column: 101, scope: !7982)
!7990 = !DILocation(line: 768, column: 79, scope: !7982)
!7991 = !DILocation(line: 768, column: 77, scope: !7982)
!7992 = !DILocation(line: 768, column: 41, scope: !7982)
!7993 = !DILocation(line: 768, column: 33, scope: !7982)
!7994 = !DILocation(line: 768, column: 44, scope: !7982)
!7995 = !DILocation(line: 767, column: 49, scope: !7996)
!7996 = !DILexicalBlockFile(scope: !7982, file: !934, discriminator: 2)
!7997 = !DILocation(line: 767, column: 29, scope: !7996)
!7998 = distinct !{!7998, !7999}
!7999 = !DILocation(line: 767, column: 29, scope: !7978)
!8000 = !DILocation(line: 770, column: 29, scope: !7712)
!8001 = !DILocation(line: 771, column: 25, scope: !7712)
!8002 = !DILocation(line: 774, column: 43, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7712, file: !934, line: 774, column: 29)
!8004 = !DILocation(line: 774, column: 29, scope: !8003)
!8005 = !DILocation(line: 774, column: 47, scope: !8003)
!8006 = !DILocation(line: 774, column: 29, scope: !7712)
!8007 = !DILocation(line: 775, column: 42, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !8003, file: !934, line: 774, column: 53)
!8009 = !DILocation(line: 775, column: 33, scope: !8008)
!8010 = !DILocation(line: 775, column: 31, scope: !8008)
!8011 = !DILocation(line: 776, column: 33, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8008, file: !934, line: 776, column: 33)
!8013 = !DILocation(line: 776, column: 35, scope: !8012)
!8014 = !DILocation(line: 776, column: 33, scope: !8008)
!8015 = !DILocation(line: 777, column: 33, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8012, file: !934, line: 776, column: 43)
!8017 = !DILocation(line: 778, column: 33, scope: !8016)
!8018 = !DILocation(line: 781, column: 36, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8008, file: !934, line: 781, column: 29)
!8020 = !DILocation(line: 781, column: 34, scope: !8019)
!8021 = !DILocation(line: 781, column: 41, scope: !8022)
!8022 = !DILexicalBlockFile(scope: !8023, file: !934, discriminator: 1)
!8023 = distinct !DILexicalBlock(scope: !8019, file: !934, line: 781, column: 29)
!8024 = !DILocation(line: 781, column: 43, scope: !8022)
!8025 = !DILocation(line: 781, column: 29, scope: !8022)
!8026 = !DILocation(line: 782, column: 72, scope: !8023)
!8027 = !DILocation(line: 782, column: 47, scope: !8023)
!8028 = !DILocation(line: 782, column: 69, scope: !8023)
!8029 = !DILocation(line: 782, column: 75, scope: !8023)
!8030 = !DILocation(line: 782, column: 82, scope: !8023)
!8031 = !DILocation(line: 782, column: 46, scope: !8023)
!8032 = !DILocation(line: 782, column: 41, scope: !8023)
!8033 = !DILocation(line: 782, column: 33, scope: !8023)
!8034 = !DILocation(line: 782, column: 44, scope: !8023)
!8035 = !DILocation(line: 781, column: 49, scope: !8036)
!8036 = !DILexicalBlockFile(scope: !8023, file: !934, discriminator: 2)
!8037 = !DILocation(line: 781, column: 29, scope: !8036)
!8038 = distinct !{!8038, !8039}
!8039 = !DILocation(line: 781, column: 29, scope: !8008)
!8040 = !DILocation(line: 783, column: 25, scope: !8008)
!8041 = !DILocation(line: 784, column: 36, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8043, file: !934, line: 784, column: 29)
!8043 = distinct !DILexicalBlock(scope: !8003, file: !934, line: 783, column: 32)
!8044 = !DILocation(line: 784, column: 34, scope: !8042)
!8045 = !DILocation(line: 784, column: 41, scope: !8046)
!8046 = !DILexicalBlockFile(scope: !8047, file: !934, discriminator: 1)
!8047 = distinct !DILexicalBlock(scope: !8042, file: !934, line: 784, column: 29)
!8048 = !DILocation(line: 784, column: 43, scope: !8046)
!8049 = !DILocation(line: 784, column: 29, scope: !8046)
!8050 = !DILocation(line: 785, column: 60, scope: !8047)
!8051 = !DILocation(line: 785, column: 63, scope: !8047)
!8052 = !DILocation(line: 785, column: 73, scope: !8047)
!8053 = !DILocation(line: 785, column: 47, scope: !8047)
!8054 = !DILocation(line: 785, column: 101, scope: !8047)
!8055 = !DILocation(line: 785, column: 79, scope: !8047)
!8056 = !DILocation(line: 785, column: 77, scope: !8047)
!8057 = !DILocation(line: 785, column: 41, scope: !8047)
!8058 = !DILocation(line: 785, column: 33, scope: !8047)
!8059 = !DILocation(line: 785, column: 44, scope: !8047)
!8060 = !DILocation(line: 784, column: 49, scope: !8061)
!8061 = !DILexicalBlockFile(scope: !8047, file: !934, discriminator: 2)
!8062 = !DILocation(line: 784, column: 29, scope: !8061)
!8063 = distinct !{!8063, !8064}
!8064 = !DILocation(line: 784, column: 29, scope: !8043)
!8065 = !DILocation(line: 787, column: 29, scope: !7712)
!8066 = !DILocation(line: 788, column: 25, scope: !7712)
!8067 = !DILocation(line: 791, column: 43, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !7712, file: !934, line: 791, column: 29)
!8069 = !DILocation(line: 791, column: 29, scope: !8068)
!8070 = !DILocation(line: 791, column: 47, scope: !8068)
!8071 = !DILocation(line: 791, column: 29, scope: !7712)
!8072 = !DILocalVariable(name: "index", scope: !8073, file: !934, line: 792, type: !906)
!8073 = distinct !DILexicalBlock(scope: !8068, file: !934, line: 791, column: 53)
!8074 = !DILocation(line: 792, column: 38, scope: !8073)
!8075 = !DILocation(line: 792, column: 59, scope: !8073)
!8076 = !DILocation(line: 792, column: 46, scope: !8073)
!8077 = !DILocation(line: 793, column: 33, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8073, file: !934, line: 793, column: 33)
!8079 = !DILocation(line: 793, column: 39, scope: !8078)
!8080 = !DILocation(line: 793, column: 33, scope: !8073)
!8081 = !DILocation(line: 794, column: 91, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8078, file: !934, line: 793, column: 98)
!8083 = !DILocation(line: 794, column: 33, scope: !8082)
!8084 = !DILocation(line: 795, column: 33, scope: !8082)
!8085 = !DILocation(line: 797, column: 57, scope: !8073)
!8086 = !DILocation(line: 797, column: 42, scope: !8073)
!8087 = !DILocation(line: 797, column: 29, scope: !8073)
!8088 = !DILocation(line: 797, column: 40, scope: !8073)
!8089 = !DILocation(line: 798, column: 25, scope: !8073)
!8090 = !DILocation(line: 799, column: 56, scope: !8068)
!8091 = !DILocation(line: 799, column: 59, scope: !8068)
!8092 = !DILocation(line: 799, column: 69, scope: !8068)
!8093 = !DILocation(line: 799, column: 43, scope: !8068)
!8094 = !DILocation(line: 799, column: 97, scope: !8068)
!8095 = !DILocation(line: 799, column: 75, scope: !8068)
!8096 = !DILocation(line: 799, column: 73, scope: !8068)
!8097 = !DILocation(line: 799, column: 29, scope: !8068)
!8098 = !DILocation(line: 799, column: 40, scope: !8068)
!8099 = !DILocation(line: 801, column: 29, scope: !7712)
!8100 = !DILocation(line: 802, column: 25, scope: !7712)
!8101 = !DILocation(line: 805, column: 43, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !7712, file: !934, line: 805, column: 29)
!8103 = !DILocation(line: 805, column: 29, scope: !8102)
!8104 = !DILocation(line: 805, column: 47, scope: !8102)
!8105 = !DILocation(line: 805, column: 29, scope: !7712)
!8106 = !DILocation(line: 806, column: 33, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8108, file: !934, line: 806, column: 33)
!8108 = distinct !DILexicalBlock(scope: !8102, file: !934, line: 805, column: 53)
!8109 = !DILocation(line: 806, column: 33, scope: !8108)
!8110 = !DILocation(line: 807, column: 68, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8107, file: !934, line: 806, column: 47)
!8112 = !DILocation(line: 807, column: 59, scope: !8111)
!8113 = !DILocation(line: 807, column: 56, scope: !8111)
!8114 = !DILocation(line: 807, column: 46, scope: !8111)
!8115 = !DILocation(line: 807, column: 44, scope: !8111)
!8116 = !DILocation(line: 808, column: 63, scope: !8111)
!8117 = !DILocation(line: 808, column: 54, scope: !8111)
!8118 = !DILocation(line: 808, column: 47, scope: !8111)
!8119 = !DILocation(line: 808, column: 70, scope: !8111)
!8120 = !DILocation(line: 808, column: 78, scope: !8111)
!8121 = !DILocation(line: 808, column: 46, scope: !8111)
!8122 = !DILocation(line: 808, column: 33, scope: !8111)
!8123 = !DILocation(line: 808, column: 44, scope: !8111)
!8124 = !DILocation(line: 809, column: 52, scope: !8111)
!8125 = !DILocation(line: 809, column: 50, scope: !8111)
!8126 = !DILocation(line: 810, column: 46, scope: !8111)
!8127 = !DILocation(line: 811, column: 29, scope: !8111)
!8128 = !DILocalVariable(name: "index", scope: !8129, file: !934, line: 812, type: !906)
!8129 = distinct !DILexicalBlock(scope: !8107, file: !934, line: 811, column: 36)
!8130 = !DILocation(line: 812, column: 42, scope: !8129)
!8131 = !DILocation(line: 812, column: 63, scope: !8129)
!8132 = !DILocation(line: 812, column: 50, scope: !8129)
!8133 = !DILocation(line: 813, column: 37, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8129, file: !934, line: 813, column: 37)
!8135 = !DILocation(line: 813, column: 43, scope: !8134)
!8136 = !DILocation(line: 813, column: 37, scope: !8129)
!8137 = !DILocation(line: 814, column: 93, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8134, file: !934, line: 813, column: 98)
!8139 = !DILocation(line: 814, column: 37, scope: !8138)
!8140 = !DILocation(line: 815, column: 37, scope: !8138)
!8141 = !DILocation(line: 817, column: 59, scope: !8129)
!8142 = !DILocation(line: 817, column: 46, scope: !8129)
!8143 = !DILocation(line: 817, column: 68, scope: !8129)
!8144 = !DILocation(line: 817, column: 66, scope: !8129)
!8145 = !DILocation(line: 817, column: 81, scope: !8129)
!8146 = !DILocation(line: 817, column: 79, scope: !8129)
!8147 = !DILocation(line: 817, column: 33, scope: !8129)
!8148 = !DILocation(line: 817, column: 44, scope: !8129)
!8149 = !DILocation(line: 818, column: 52, scope: !8129)
!8150 = !DILocation(line: 818, column: 50, scope: !8129)
!8151 = !DILocation(line: 820, column: 25, scope: !8108)
!8152 = !DILocation(line: 821, column: 56, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8102, file: !934, line: 820, column: 32)
!8154 = !DILocation(line: 821, column: 59, scope: !8153)
!8155 = !DILocation(line: 821, column: 69, scope: !8153)
!8156 = !DILocation(line: 821, column: 43, scope: !8153)
!8157 = !DILocation(line: 821, column: 97, scope: !8153)
!8158 = !DILocation(line: 821, column: 75, scope: !8153)
!8159 = !DILocation(line: 821, column: 73, scope: !8153)
!8160 = !DILocation(line: 821, column: 29, scope: !8153)
!8161 = !DILocation(line: 821, column: 40, scope: !8153)
!8162 = !DILocation(line: 823, column: 29, scope: !7712)
!8163 = !DILocation(line: 824, column: 25, scope: !7712)
!8164 = !DILocation(line: 827, column: 52, scope: !7712)
!8165 = !DILocation(line: 827, column: 55, scope: !7712)
!8166 = !DILocation(line: 827, column: 65, scope: !7712)
!8167 = !DILocation(line: 827, column: 39, scope: !7712)
!8168 = !DILocation(line: 827, column: 93, scope: !7712)
!8169 = !DILocation(line: 827, column: 71, scope: !7712)
!8170 = !DILocation(line: 827, column: 69, scope: !7712)
!8171 = !DILocation(line: 827, column: 25, scope: !7712)
!8172 = !DILocation(line: 827, column: 36, scope: !7712)
!8173 = !DILocation(line: 828, column: 29, scope: !7712)
!8174 = !DILocation(line: 829, column: 25, scope: !7712)
!8175 = !DILocation(line: 832, column: 21, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !7703, file: !934, line: 832, column: 21)
!8177 = !DILocation(line: 832, column: 21, scope: !7703)
!8178 = !DILocation(line: 833, column: 28, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8180, file: !934, line: 833, column: 21)
!8180 = distinct !DILexicalBlock(scope: !8176, file: !934, line: 832, column: 36)
!8181 = !DILocation(line: 833, column: 26, scope: !8179)
!8182 = !DILocation(line: 833, column: 33, scope: !8183)
!8183 = !DILexicalBlockFile(scope: !8184, file: !934, discriminator: 1)
!8184 = distinct !DILexicalBlock(scope: !8179, file: !934, line: 833, column: 21)
!8185 = !DILocation(line: 833, column: 37, scope: !8183)
!8186 = !DILocation(line: 833, column: 35, scope: !8183)
!8187 = !DILocation(line: 833, column: 41, scope: !8183)
!8188 = !DILocation(line: 833, column: 44, scope: !8189)
!8189 = !DILexicalBlockFile(scope: !8184, file: !934, discriminator: 2)
!8190 = !DILocation(line: 833, column: 48, scope: !8189)
!8191 = !DILocation(line: 833, column: 46, scope: !8189)
!8192 = !DILocation(line: 833, column: 50, scope: !8189)
!8193 = !DILocation(line: 833, column: 21, scope: !8194)
!8194 = !DILexicalBlockFile(scope: !8179, file: !934, discriminator: 3)
!8195 = !DILocation(line: 835, column: 51, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8184, file: !934, line: 833, column: 62)
!8197 = !DILocation(line: 835, column: 55, scope: !8196)
!8198 = !DILocation(line: 835, column: 53, scope: !8196)
!8199 = !DILocation(line: 835, column: 58, scope: !8196)
!8200 = !DILocation(line: 835, column: 29, scope: !8196)
!8201 = !DILocation(line: 835, column: 46, scope: !8196)
!8202 = !DILocation(line: 835, column: 32, scope: !8196)
!8203 = !DILocation(line: 835, column: 73, scope: !8196)
!8204 = !DILocation(line: 835, column: 65, scope: !8196)
!8205 = !DILocation(line: 835, column: 63, scope: !8196)
!8206 = !DILocation(line: 834, column: 49, scope: !8196)
!8207 = !DILocation(line: 834, column: 25, scope: !8196)
!8208 = !DILocation(line: 834, column: 42, scope: !8196)
!8209 = !DILocation(line: 834, column: 46, scope: !8196)
!8210 = !DILocation(line: 834, column: 44, scope: !8196)
!8211 = !DILocation(line: 834, column: 28, scope: !8196)
!8212 = !DILocation(line: 834, column: 53, scope: !8196)
!8213 = !DILocation(line: 836, column: 29, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8196, file: !934, line: 836, column: 29)
!8215 = !DILocation(line: 836, column: 32, scope: !8214)
!8216 = !DILocation(line: 836, column: 44, scope: !8214)
!8217 = !DILocation(line: 836, column: 29, scope: !8196)
!8218 = !DILocation(line: 837, column: 44, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !934, line: 837, column: 33)
!8220 = distinct !DILexicalBlock(scope: !8214, file: !934, line: 836, column: 50)
!8221 = !DILocation(line: 837, column: 48, scope: !8219)
!8222 = !DILocation(line: 837, column: 46, scope: !8219)
!8223 = !DILocation(line: 837, column: 51, scope: !8219)
!8224 = !DILocation(line: 837, column: 33, scope: !8219)
!8225 = !DILocation(line: 837, column: 33, scope: !8220)
!8226 = !DILocation(line: 839, column: 59, scope: !8219)
!8227 = !DILocation(line: 839, column: 63, scope: !8219)
!8228 = !DILocation(line: 839, column: 61, scope: !8219)
!8229 = !DILocation(line: 839, column: 66, scope: !8219)
!8230 = !DILocation(line: 839, column: 37, scope: !8219)
!8231 = !DILocation(line: 839, column: 54, scope: !8219)
!8232 = !DILocation(line: 839, column: 40, scope: !8219)
!8233 = !DILocation(line: 839, column: 82, scope: !8219)
!8234 = !DILocation(line: 839, column: 74, scope: !8219)
!8235 = !DILocation(line: 839, column: 73, scope: !8219)
!8236 = !DILocation(line: 839, column: 71, scope: !8219)
!8237 = !DILocation(line: 838, column: 57, scope: !8219)
!8238 = !DILocation(line: 838, column: 33, scope: !8219)
!8239 = !DILocation(line: 838, column: 50, scope: !8219)
!8240 = !DILocation(line: 838, column: 54, scope: !8219)
!8241 = !DILocation(line: 838, column: 52, scope: !8219)
!8242 = !DILocation(line: 838, column: 36, scope: !8219)
!8243 = !DILocation(line: 838, column: 61, scope: !8219)
!8244 = !DILocation(line: 842, column: 59, scope: !8219)
!8245 = !DILocation(line: 842, column: 63, scope: !8219)
!8246 = !DILocation(line: 842, column: 61, scope: !8219)
!8247 = !DILocation(line: 842, column: 66, scope: !8219)
!8248 = !DILocation(line: 842, column: 37, scope: !8219)
!8249 = !DILocation(line: 842, column: 54, scope: !8219)
!8250 = !DILocation(line: 842, column: 40, scope: !8219)
!8251 = !DILocation(line: 842, column: 81, scope: !8219)
!8252 = !DILocation(line: 842, column: 73, scope: !8219)
!8253 = !DILocation(line: 842, column: 71, scope: !8219)
!8254 = !DILocation(line: 841, column: 57, scope: !8219)
!8255 = !DILocation(line: 841, column: 33, scope: !8219)
!8256 = !DILocation(line: 841, column: 50, scope: !8219)
!8257 = !DILocation(line: 841, column: 54, scope: !8219)
!8258 = !DILocation(line: 841, column: 52, scope: !8219)
!8259 = !DILocation(line: 841, column: 36, scope: !8219)
!8260 = !DILocation(line: 841, column: 61, scope: !8219)
!8261 = !DILocation(line: 843, column: 25, scope: !8220)
!8262 = !DILocation(line: 844, column: 21, scope: !8196)
!8263 = !DILocation(line: 833, column: 58, scope: !8264)
!8264 = !DILexicalBlockFile(scope: !8184, file: !934, discriminator: 4)
!8265 = !DILocation(line: 833, column: 21, scope: !8264)
!8266 = distinct !{!8266, !8267}
!8267 = !DILocation(line: 833, column: 21, scope: !8180)
!8268 = !DILocation(line: 845, column: 17, scope: !8180)
!8269 = !DILocation(line: 846, column: 28, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8271, file: !934, line: 846, column: 21)
!8271 = distinct !DILexicalBlock(scope: !8176, file: !934, line: 845, column: 24)
!8272 = !DILocation(line: 846, column: 26, scope: !8270)
!8273 = !DILocation(line: 846, column: 33, scope: !8274)
!8274 = !DILexicalBlockFile(scope: !8275, file: !934, discriminator: 1)
!8275 = distinct !DILexicalBlock(scope: !8270, file: !934, line: 846, column: 21)
!8276 = !DILocation(line: 846, column: 37, scope: !8274)
!8277 = !DILocation(line: 846, column: 35, scope: !8274)
!8278 = !DILocation(line: 846, column: 21, scope: !8274)
!8279 = !DILocation(line: 847, column: 30, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8275, file: !934, line: 847, column: 29)
!8281 = !DILocation(line: 847, column: 34, scope: !8280)
!8282 = !DILocation(line: 847, column: 32, scope: !8280)
!8283 = !DILocation(line: 847, column: 37, scope: !8280)
!8284 = !DILocation(line: 847, column: 29, scope: !8275)
!8285 = !DILocation(line: 848, column: 83, scope: !8280)
!8286 = !DILocation(line: 848, column: 87, scope: !8280)
!8287 = !DILocation(line: 848, column: 85, scope: !8280)
!8288 = !DILocation(line: 848, column: 89, scope: !8280)
!8289 = !DILocation(line: 848, column: 60, scope: !8280)
!8290 = !DILocation(line: 848, column: 78, scope: !8280)
!8291 = !DILocation(line: 848, column: 74, scope: !8280)
!8292 = !DILocation(line: 848, column: 63, scope: !8280)
!8293 = !DILocation(line: 848, column: 103, scope: !8280)
!8294 = !DILocation(line: 848, column: 95, scope: !8280)
!8295 = !DILocation(line: 848, column: 93, scope: !8280)
!8296 = !DILocation(line: 848, column: 54, scope: !8280)
!8297 = !DILocation(line: 848, column: 29, scope: !8280)
!8298 = !DILocation(line: 848, column: 47, scope: !8280)
!8299 = !DILocation(line: 848, column: 51, scope: !8280)
!8300 = !DILocation(line: 848, column: 49, scope: !8280)
!8301 = !DILocation(line: 848, column: 43, scope: !8280)
!8302 = !DILocation(line: 848, column: 32, scope: !8280)
!8303 = !DILocation(line: 848, column: 58, scope: !8280)
!8304 = !DILocation(line: 847, column: 39, scope: !8305)
!8305 = !DILexicalBlockFile(scope: !8280, file: !934, discriminator: 1)
!8306 = !DILocation(line: 846, column: 43, scope: !8307)
!8307 = !DILexicalBlockFile(scope: !8275, file: !934, discriminator: 2)
!8308 = !DILocation(line: 846, column: 21, scope: !8307)
!8309 = distinct !{!8309, !8310}
!8310 = !DILocation(line: 846, column: 21, scope: !8271)
!8311 = !DILocation(line: 851, column: 22, scope: !7703)
!8312 = !DILocation(line: 851, column: 19, scope: !7703)
!8313 = !DILocation(line: 705, column: 13, scope: !8314)
!8314 = !DILexicalBlockFile(scope: !7699, file: !934, discriminator: 2)
!8315 = distinct !{!8315, !8316}
!8316 = !DILocation(line: 705, column: 13, scope: !7670)
!8317 = !DILocation(line: 853, column: 9, scope: !7670)
!8318 = !DILocation(line: 699, column: 39, scope: !8319)
!8319 = !DILexicalBlockFile(scope: !7664, file: !934, discriminator: 2)
!8320 = !DILocation(line: 699, column: 9, scope: !8319)
!8321 = distinct !{!8321, !8322}
!8322 = !DILocation(line: 699, column: 9, scope: !7546)
!8323 = !DILocation(line: 854, column: 5, scope: !7546)
!8324 = !DILocation(line: 671, column: 38, scope: !8325)
!8325 = !DILexicalBlockFile(scope: !7541, file: !934, discriminator: 2)
!8326 = !DILocation(line: 671, column: 5, scope: !8325)
!8327 = distinct !{!8327, !8328}
!8328 = !DILocation(line: 671, column: 5, scope: !7468)
!8329 = !DILocation(line: 855, column: 5, scope: !7468)
!8330 = !DILocation(line: 856, column: 1, scope: !7468)
!8331 = distinct !DISubprogram(name: "build_sb_samples_from_noise", scope: !934, file: !934, line: 343, type: !4548, isLocal: true, isDefinition: true, scopeLine: 344, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!8332 = !DILocalVariable(name: "q", arg: 1, scope: !8331, file: !934, line: 343, type: !1999)
!8333 = !DILocation(line: 343, column: 54, scope: !8331)
!8334 = !DILocalVariable(name: "sb", arg: 2, scope: !8331, file: !934, line: 343, type: !905)
!8335 = !DILocation(line: 343, column: 61, scope: !8331)
!8336 = !DILocalVariable(name: "ch", scope: !8331, file: !934, line: 345, type: !905)
!8337 = !DILocation(line: 345, column: 9, scope: !8331)
!8338 = !DILocalVariable(name: "j", scope: !8331, file: !934, line: 345, type: !905)
!8339 = !DILocation(line: 345, column: 13, scope: !8331)
!8340 = !DILocation(line: 347, column: 10, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8331, file: !934, line: 347, column: 9)
!8342 = !DILocation(line: 347, column: 13, scope: !8341)
!8343 = !DILocation(line: 347, column: 24, scope: !8341)
!8344 = !DILocation(line: 347, column: 9, scope: !8331)
!8345 = !DILocation(line: 347, column: 34, scope: !8346)
!8346 = !DILexicalBlockFile(scope: !8341, file: !934, discriminator: 1)
!8347 = !DILocation(line: 347, column: 37, scope: !8346)
!8348 = !DILocation(line: 347, column: 48, scope: !8346)
!8349 = !DILocation(line: 347, column: 33, scope: !8346)
!8350 = !DILocation(line: 349, column: 10, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8331, file: !934, line: 349, column: 9)
!8352 = !DILocation(line: 349, column: 13, scope: !8351)
!8353 = !DILocation(line: 349, column: 9, scope: !8331)
!8354 = !DILocation(line: 350, column: 9, scope: !8351)
!8355 = !DILocation(line: 352, column: 13, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8331, file: !934, line: 352, column: 5)
!8357 = !DILocation(line: 352, column: 10, scope: !8356)
!8358 = !DILocation(line: 352, column: 18, scope: !8359)
!8359 = !DILexicalBlockFile(scope: !8360, file: !934, discriminator: 1)
!8360 = distinct !DILexicalBlock(scope: !8356, file: !934, line: 352, column: 5)
!8361 = !DILocation(line: 352, column: 23, scope: !8359)
!8362 = !DILocation(line: 352, column: 26, scope: !8359)
!8363 = !DILocation(line: 352, column: 21, scope: !8359)
!8364 = !DILocation(line: 352, column: 5, scope: !8359)
!8365 = !DILocation(line: 353, column: 16, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !934, line: 353, column: 9)
!8367 = distinct !DILexicalBlock(scope: !8360, file: !934, line: 352, column: 45)
!8368 = !DILocation(line: 353, column: 14, scope: !8366)
!8369 = !DILocation(line: 353, column: 21, scope: !8370)
!8370 = !DILexicalBlockFile(scope: !8371, file: !934, discriminator: 1)
!8371 = distinct !DILexicalBlock(scope: !8366, file: !934, line: 353, column: 9)
!8372 = !DILocation(line: 353, column: 23, scope: !8370)
!8373 = !DILocation(line: 353, column: 9, scope: !8370)
!8374 = !DILocation(line: 355, column: 31, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8371, file: !934, line: 353, column: 34)
!8376 = !DILocation(line: 355, column: 34, scope: !8375)
!8377 = !DILocation(line: 355, column: 44, scope: !8375)
!8378 = !DILocation(line: 355, column: 18, scope: !8375)
!8379 = !DILocation(line: 355, column: 72, scope: !8375)
!8380 = !DILocation(line: 355, column: 50, scope: !8375)
!8381 = !DILocation(line: 355, column: 48, scope: !8375)
!8382 = !DILocation(line: 355, column: 102, scope: !8375)
!8383 = !DILocation(line: 355, column: 80, scope: !8375)
!8384 = !DILocation(line: 355, column: 98, scope: !8375)
!8385 = !DILocation(line: 355, column: 94, scope: !8375)
!8386 = !DILocation(line: 355, column: 83, scope: !8375)
!8387 = !DILocation(line: 355, column: 78, scope: !8375)
!8388 = !DILocation(line: 354, column: 38, scope: !8375)
!8389 = !DILocation(line: 354, column: 13, scope: !8375)
!8390 = !DILocation(line: 354, column: 31, scope: !8375)
!8391 = !DILocation(line: 354, column: 33, scope: !8375)
!8392 = !DILocation(line: 354, column: 27, scope: !8375)
!8393 = !DILocation(line: 354, column: 16, scope: !8375)
!8394 = !DILocation(line: 354, column: 42, scope: !8375)
!8395 = !DILocation(line: 357, column: 31, scope: !8375)
!8396 = !DILocation(line: 357, column: 34, scope: !8375)
!8397 = !DILocation(line: 357, column: 44, scope: !8375)
!8398 = !DILocation(line: 357, column: 18, scope: !8375)
!8399 = !DILocation(line: 357, column: 72, scope: !8375)
!8400 = !DILocation(line: 357, column: 50, scope: !8375)
!8401 = !DILocation(line: 357, column: 48, scope: !8375)
!8402 = !DILocation(line: 357, column: 102, scope: !8375)
!8403 = !DILocation(line: 357, column: 80, scope: !8375)
!8404 = !DILocation(line: 357, column: 98, scope: !8375)
!8405 = !DILocation(line: 357, column: 94, scope: !8375)
!8406 = !DILocation(line: 357, column: 83, scope: !8375)
!8407 = !DILocation(line: 357, column: 78, scope: !8375)
!8408 = !DILocation(line: 356, column: 42, scope: !8375)
!8409 = !DILocation(line: 356, column: 13, scope: !8375)
!8410 = !DILocation(line: 356, column: 31, scope: !8375)
!8411 = !DILocation(line: 356, column: 33, scope: !8375)
!8412 = !DILocation(line: 356, column: 37, scope: !8375)
!8413 = !DILocation(line: 356, column: 27, scope: !8375)
!8414 = !DILocation(line: 356, column: 16, scope: !8375)
!8415 = !DILocation(line: 356, column: 46, scope: !8375)
!8416 = !DILocation(line: 358, column: 9, scope: !8375)
!8417 = !DILocation(line: 353, column: 30, scope: !8418)
!8418 = !DILexicalBlockFile(scope: !8371, file: !934, discriminator: 2)
!8419 = !DILocation(line: 353, column: 9, scope: !8418)
!8420 = distinct !{!8420, !8421}
!8421 = !DILocation(line: 353, column: 9, scope: !8367)
!8422 = !DILocation(line: 359, column: 5, scope: !8367)
!8423 = !DILocation(line: 352, column: 41, scope: !8424)
!8424 = !DILexicalBlockFile(scope: !8360, file: !934, discriminator: 2)
!8425 = !DILocation(line: 352, column: 5, scope: !8424)
!8426 = distinct !{!8426, !8427}
!8427 = !DILocation(line: 352, column: 5, scope: !8331)
!8428 = !DILocation(line: 360, column: 1, scope: !8331)
!8429 = distinct !DISubprogram(name: "fix_coding_method_array", scope: !934, file: !934, line: 370, type: !8430, isLocal: true, isDefinition: true, scopeLine: 372, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!8430 = !DISubroutineType(types: !8431)
!8431 = !{!905, !905, !905, !7367}
!8432 = !DILocalVariable(name: "sb", arg: 1, scope: !8429, file: !934, line: 370, type: !905)
!8433 = !DILocation(line: 370, column: 40, scope: !8429)
!8434 = !DILocalVariable(name: "channels", arg: 2, scope: !8429, file: !934, line: 370, type: !905)
!8435 = !DILocation(line: 370, column: 48, scope: !8429)
!8436 = !DILocalVariable(name: "coding_method", arg: 3, scope: !8429, file: !934, line: 371, type: !7367)
!8437 = !DILocation(line: 371, column: 50, scope: !8429)
!8438 = !DILocalVariable(name: "j", scope: !8429, file: !934, line: 373, type: !905)
!8439 = !DILocation(line: 373, column: 9, scope: !8429)
!8440 = !DILocalVariable(name: "k", scope: !8429, file: !934, line: 373, type: !905)
!8441 = !DILocation(line: 373, column: 12, scope: !8429)
!8442 = !DILocalVariable(name: "ch", scope: !8429, file: !934, line: 374, type: !905)
!8443 = !DILocation(line: 374, column: 9, scope: !8429)
!8444 = !DILocalVariable(name: "run", scope: !8429, file: !934, line: 375, type: !905)
!8445 = !DILocation(line: 375, column: 9, scope: !8429)
!8446 = !DILocalVariable(name: "case_val", scope: !8429, file: !934, line: 375, type: !905)
!8447 = !DILocation(line: 375, column: 14, scope: !8429)
!8448 = !DILocation(line: 377, column: 13, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8429, file: !934, line: 377, column: 5)
!8450 = !DILocation(line: 377, column: 10, scope: !8449)
!8451 = !DILocation(line: 377, column: 18, scope: !8452)
!8452 = !DILexicalBlockFile(scope: !8453, file: !934, discriminator: 1)
!8453 = distinct !DILexicalBlock(scope: !8449, file: !934, line: 377, column: 5)
!8454 = !DILocation(line: 377, column: 23, scope: !8452)
!8455 = !DILocation(line: 377, column: 21, scope: !8452)
!8456 = !DILocation(line: 377, column: 5, scope: !8452)
!8457 = !DILocation(line: 378, column: 16, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8459, file: !934, line: 378, column: 9)
!8459 = distinct !DILexicalBlock(scope: !8453, file: !934, line: 377, column: 39)
!8460 = !DILocation(line: 378, column: 14, scope: !8458)
!8461 = !DILocation(line: 378, column: 21, scope: !8462)
!8462 = !DILexicalBlockFile(scope: !8463, file: !934, discriminator: 1)
!8463 = distinct !DILexicalBlock(scope: !8458, file: !934, line: 378, column: 9)
!8464 = !DILocation(line: 378, column: 23, scope: !8462)
!8465 = !DILocation(line: 378, column: 9, scope: !8462)
!8466 = !DILocation(line: 379, column: 39, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8468, file: !934, line: 379, column: 17)
!8468 = distinct !DILexicalBlock(scope: !8463, file: !934, line: 378, column: 31)
!8469 = !DILocation(line: 379, column: 17, scope: !8467)
!8470 = !DILocation(line: 379, column: 35, scope: !8467)
!8471 = !DILocation(line: 379, column: 31, scope: !8467)
!8472 = !DILocation(line: 379, column: 42, scope: !8467)
!8473 = !DILocation(line: 379, column: 17, scope: !8468)
!8474 = !DILocation(line: 380, column: 17, scope: !8467)
!8475 = !DILocation(line: 381, column: 40, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8468, file: !934, line: 381, column: 17)
!8477 = !DILocation(line: 381, column: 18, scope: !8476)
!8478 = !DILocation(line: 381, column: 36, scope: !8476)
!8479 = !DILocation(line: 381, column: 32, scope: !8476)
!8480 = !DILocation(line: 381, column: 43, scope: !8476)
!8481 = !DILocation(line: 381, column: 48, scope: !8476)
!8482 = !DILocation(line: 381, column: 17, scope: !8468)
!8483 = !DILocation(line: 382, column: 21, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8476, file: !934, line: 381, column: 54)
!8485 = !DILocation(line: 383, column: 26, scope: !8484)
!8486 = !DILocation(line: 384, column: 13, scope: !8484)
!8487 = !DILocation(line: 385, column: 59, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8476, file: !934, line: 384, column: 20)
!8489 = !DILocation(line: 385, column: 37, scope: !8488)
!8490 = !DILocation(line: 385, column: 55, scope: !8488)
!8491 = !DILocation(line: 385, column: 51, scope: !8488)
!8492 = !DILocation(line: 385, column: 62, scope: !8488)
!8493 = !DILocation(line: 385, column: 25, scope: !8488)
!8494 = !DILocation(line: 385, column: 17, scope: !8488)
!8495 = !DILocation(line: 386, column: 29, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8488, file: !934, line: 385, column: 68)
!8497 = !DILocation(line: 387, column: 30, scope: !8496)
!8498 = !DILocation(line: 388, column: 21, scope: !8496)
!8499 = !DILocation(line: 389, column: 29, scope: !8496)
!8500 = !DILocation(line: 390, column: 30, scope: !8496)
!8501 = !DILocation(line: 391, column: 21, scope: !8496)
!8502 = !DILocation(line: 392, column: 29, scope: !8496)
!8503 = !DILocation(line: 393, column: 30, scope: !8496)
!8504 = !DILocation(line: 394, column: 21, scope: !8496)
!8505 = !DILocation(line: 395, column: 29, scope: !8496)
!8506 = !DILocation(line: 396, column: 30, scope: !8496)
!8507 = !DILocation(line: 397, column: 21, scope: !8496)
!8508 = !DILocation(line: 398, column: 29, scope: !8496)
!8509 = !DILocation(line: 399, column: 30, scope: !8496)
!8510 = !DILocation(line: 400, column: 21, scope: !8496)
!8511 = !DILocation(line: 401, column: 29, scope: !8496)
!8512 = !DILocation(line: 402, column: 30, scope: !8496)
!8513 = !DILocation(line: 403, column: 21, scope: !8496)
!8514 = !DILocation(line: 404, column: 30, scope: !8496)
!8515 = !DILocation(line: 405, column: 30, scope: !8496)
!8516 = !DILocation(line: 406, column: 21, scope: !8496)
!8517 = !DILocation(line: 409, column: 20, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8468, file: !934, line: 409, column: 13)
!8519 = !DILocation(line: 409, column: 18, scope: !8518)
!8520 = !DILocation(line: 409, column: 25, scope: !8521)
!8521 = !DILexicalBlockFile(scope: !8522, file: !934, discriminator: 1)
!8522 = distinct !DILexicalBlock(scope: !8518, file: !934, line: 409, column: 13)
!8523 = !DILocation(line: 409, column: 29, scope: !8521)
!8524 = !DILocation(line: 409, column: 27, scope: !8521)
!8525 = !DILocation(line: 409, column: 13, scope: !8521)
!8526 = !DILocation(line: 410, column: 21, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8528, file: !934, line: 410, column: 21)
!8528 = distinct !DILexicalBlock(scope: !8522, file: !934, line: 409, column: 39)
!8529 = !DILocation(line: 410, column: 25, scope: !8527)
!8530 = !DILocation(line: 410, column: 23, scope: !8527)
!8531 = !DILocation(line: 410, column: 27, scope: !8527)
!8532 = !DILocation(line: 410, column: 21, scope: !8528)
!8533 = !DILocation(line: 411, column: 63, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8535, file: !934, line: 411, column: 25)
!8535 = distinct !DILexicalBlock(scope: !8527, file: !934, line: 410, column: 34)
!8536 = !DILocation(line: 411, column: 67, scope: !8534)
!8537 = !DILocation(line: 411, column: 65, scope: !8534)
!8538 = !DILocation(line: 411, column: 70, scope: !8534)
!8539 = !DILocation(line: 411, column: 25, scope: !8534)
!8540 = !DILocation(line: 411, column: 43, scope: !8534)
!8541 = !DILocation(line: 411, column: 49, scope: !8534)
!8542 = !DILocation(line: 411, column: 53, scope: !8534)
!8543 = !DILocation(line: 411, column: 51, scope: !8534)
!8544 = !DILocation(line: 411, column: 56, scope: !8534)
!8545 = !DILocation(line: 411, column: 46, scope: !8534)
!8546 = !DILocation(line: 411, column: 39, scope: !8534)
!8547 = !DILocation(line: 411, column: 100, scope: !8534)
!8548 = !DILocation(line: 411, column: 78, scope: !8534)
!8549 = !DILocation(line: 411, column: 96, scope: !8534)
!8550 = !DILocation(line: 411, column: 92, scope: !8534)
!8551 = !DILocation(line: 411, column: 76, scope: !8534)
!8552 = !DILocation(line: 411, column: 25, scope: !8535)
!8553 = !DILocation(line: 412, column: 29, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8555, file: !934, line: 412, column: 29)
!8555 = distinct !DILexicalBlock(scope: !8534, file: !934, line: 411, column: 104)
!8556 = !DILocation(line: 412, column: 31, scope: !8554)
!8557 = !DILocation(line: 412, column: 29, scope: !8555)
!8558 = !DILocation(line: 413, column: 29, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8554, file: !934, line: 412, column: 36)
!8560 = !DILocation(line: 415, column: 59, scope: !8559)
!8561 = !DILocation(line: 415, column: 63, scope: !8559)
!8562 = !DILocation(line: 415, column: 61, scope: !8559)
!8563 = !DILocation(line: 415, column: 37, scope: !8559)
!8564 = !DILocation(line: 415, column: 55, scope: !8559)
!8565 = !DILocation(line: 415, column: 51, scope: !8559)
!8566 = !DILocation(line: 415, column: 67, scope: !8559)
!8567 = !DILocation(line: 415, column: 29, scope: !8559)
!8568 = !DILocation(line: 416, column: 36, scope: !8559)
!8569 = !DILocation(line: 416, column: 38, scope: !8559)
!8570 = !DILocation(line: 417, column: 59, scope: !8559)
!8571 = !DILocation(line: 417, column: 63, scope: !8559)
!8572 = !DILocation(line: 417, column: 61, scope: !8559)
!8573 = !DILocation(line: 417, column: 37, scope: !8559)
!8574 = !DILocation(line: 417, column: 55, scope: !8559)
!8575 = !DILocation(line: 417, column: 51, scope: !8559)
!8576 = !DILocation(line: 417, column: 67, scope: !8559)
!8577 = !DILocation(line: 417, column: 29, scope: !8559)
!8578 = !DILocation(line: 419, column: 25, scope: !8559)
!8579 = !DILocation(line: 420, column: 21, scope: !8555)
!8580 = !DILocation(line: 421, column: 17, scope: !8535)
!8581 = !DILocation(line: 422, column: 13, scope: !8528)
!8582 = !DILocation(line: 409, column: 35, scope: !8583)
!8583 = !DILexicalBlockFile(scope: !8522, file: !934, discriminator: 2)
!8584 = !DILocation(line: 409, column: 13, scope: !8583)
!8585 = distinct !{!8585, !8586}
!8586 = !DILocation(line: 409, column: 13, scope: !8468)
!8587 = !DILocation(line: 423, column: 18, scope: !8468)
!8588 = !DILocation(line: 423, column: 15, scope: !8468)
!8589 = !DILocation(line: 378, column: 9, scope: !8590)
!8590 = !DILexicalBlockFile(scope: !8463, file: !934, discriminator: 2)
!8591 = distinct !{!8591, !8592}
!8592 = !DILocation(line: 378, column: 9, scope: !8459)
!8593 = !DILocation(line: 425, column: 5, scope: !8459)
!8594 = !DILocation(line: 377, column: 35, scope: !8595)
!8595 = !DILexicalBlockFile(scope: !8453, file: !934, discriminator: 2)
!8596 = !DILocation(line: 377, column: 5, scope: !8595)
!8597 = distinct !{!8597, !8598}
!8598 = !DILocation(line: 377, column: 5, scope: !8429)
!8599 = !DILocation(line: 426, column: 5, scope: !8429)
!8600 = !DILocation(line: 427, column: 1, scope: !8429)
!8601 = distinct !DISubprogram(name: "qdm2_fft_decode_tones", scope: !934, file: !934, line: 1253, type: !8602, isLocal: true, isDefinition: true, scopeLine: 1255, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!8602 = !DISubroutineType(types: !8603)
!8603 = !{null, !1999, !905, !5359, !905}
!8604 = !DILocalVariable(name: "q", arg: 1, scope: !8601, file: !934, line: 1253, type: !1999)
!8605 = !DILocation(line: 1253, column: 48, scope: !8601)
!8606 = !DILocalVariable(name: "duration", arg: 2, scope: !8601, file: !934, line: 1253, type: !905)
!8607 = !DILocation(line: 1253, column: 55, scope: !8601)
!8608 = !DILocalVariable(name: "gb", arg: 3, scope: !8601, file: !934, line: 1254, type: !5359)
!8609 = !DILocation(line: 1254, column: 50, scope: !8601)
!8610 = !DILocalVariable(name: "b", arg: 4, scope: !8601, file: !934, line: 1254, type: !905)
!8611 = !DILocation(line: 1254, column: 58, scope: !8601)
!8612 = !DILocalVariable(name: "channel", scope: !8601, file: !934, line: 1256, type: !905)
!8613 = !DILocation(line: 1256, column: 9, scope: !8601)
!8614 = !DILocalVariable(name: "stereo", scope: !8601, file: !934, line: 1256, type: !905)
!8615 = !DILocation(line: 1256, column: 18, scope: !8601)
!8616 = !DILocalVariable(name: "phase", scope: !8601, file: !934, line: 1256, type: !905)
!8617 = !DILocation(line: 1256, column: 26, scope: !8601)
!8618 = !DILocalVariable(name: "exp", scope: !8601, file: !934, line: 1256, type: !905)
!8619 = !DILocation(line: 1256, column: 33, scope: !8601)
!8620 = !DILocalVariable(name: "local_int_4", scope: !8601, file: !934, line: 1257, type: !905)
!8621 = !DILocation(line: 1257, column: 9, scope: !8601)
!8622 = !DILocalVariable(name: "local_int_8", scope: !8601, file: !934, line: 1257, type: !905)
!8623 = !DILocation(line: 1257, column: 22, scope: !8601)
!8624 = !DILocalVariable(name: "stereo_phase", scope: !8601, file: !934, line: 1257, type: !905)
!8625 = !DILocation(line: 1257, column: 35, scope: !8601)
!8626 = !DILocalVariable(name: "local_int_10", scope: !8601, file: !934, line: 1257, type: !905)
!8627 = !DILocation(line: 1257, column: 49, scope: !8601)
!8628 = !DILocalVariable(name: "local_int_14", scope: !8601, file: !934, line: 1258, type: !905)
!8629 = !DILocation(line: 1258, column: 9, scope: !8601)
!8630 = !DILocalVariable(name: "stereo_exp", scope: !8601, file: !934, line: 1258, type: !905)
!8631 = !DILocation(line: 1258, column: 23, scope: !8601)
!8632 = !DILocalVariable(name: "local_int_20", scope: !8601, file: !934, line: 1258, type: !905)
!8633 = !DILocation(line: 1258, column: 35, scope: !8601)
!8634 = !DILocalVariable(name: "local_int_28", scope: !8601, file: !934, line: 1258, type: !905)
!8635 = !DILocation(line: 1258, column: 49, scope: !8601)
!8636 = !DILocalVariable(name: "n", scope: !8601, file: !934, line: 1259, type: !905)
!8637 = !DILocation(line: 1259, column: 9, scope: !8601)
!8638 = !DILocalVariable(name: "offset", scope: !8601, file: !934, line: 1259, type: !905)
!8639 = !DILocation(line: 1259, column: 12, scope: !8601)
!8640 = !DILocation(line: 1261, column: 17, scope: !8601)
!8641 = !DILocation(line: 1262, column: 18, scope: !8601)
!8642 = !DILocation(line: 1263, column: 18, scope: !8601)
!8643 = !DILocation(line: 1264, column: 24, scope: !8601)
!8644 = !DILocation(line: 1264, column: 22, scope: !8601)
!8645 = !DILocation(line: 1264, column: 17, scope: !8601)
!8646 = !DILocation(line: 1265, column: 26, scope: !8601)
!8647 = !DILocation(line: 1265, column: 29, scope: !8601)
!8648 = !DILocation(line: 1265, column: 43, scope: !8601)
!8649 = !DILocation(line: 1265, column: 41, scope: !8601)
!8650 = !DILocation(line: 1265, column: 52, scope: !8601)
!8651 = !DILocation(line: 1265, column: 22, scope: !8601)
!8652 = !DILocation(line: 1265, column: 18, scope: !8601)
!8653 = !DILocation(line: 1266, column: 12, scope: !8601)
!8654 = !DILocation(line: 1268, column: 5, scope: !8601)
!8655 = !DILocation(line: 1268, column: 26, scope: !8656)
!8656 = !DILexicalBlockFile(scope: !8601, file: !934, discriminator: 1)
!8657 = !DILocation(line: 1268, column: 12, scope: !8656)
!8658 = !DILocation(line: 1268, column: 29, scope: !8656)
!8659 = !DILocation(line: 1268, column: 5, scope: !8656)
!8660 = !DILocation(line: 1269, column: 13, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8662, file: !934, line: 1269, column: 13)
!8662 = distinct !DILexicalBlock(scope: !8601, file: !934, line: 1268, column: 33)
!8663 = !DILocation(line: 1269, column: 16, scope: !8661)
!8664 = !DILocation(line: 1269, column: 13, scope: !8662)
!8665 = !DILocation(line: 1270, column: 13, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8661, file: !934, line: 1269, column: 36)
!8667 = !DILocation(line: 1270, column: 38, scope: !8668)
!8668 = !DILexicalBlockFile(scope: !8666, file: !934, discriminator: 1)
!8669 = !DILocation(line: 1270, column: 67, scope: !8668)
!8670 = !DILocation(line: 1270, column: 43, scope: !8668)
!8671 = !DILocation(line: 1270, column: 25, scope: !8668)
!8672 = !DILocation(line: 1270, column: 23, scope: !8668)
!8673 = !DILocation(line: 1270, column: 88, scope: !8668)
!8674 = !DILocation(line: 1270, column: 13, scope: !8668)
!8675 = !DILocation(line: 1271, column: 35, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8677, file: !934, line: 1271, column: 21)
!8677 = distinct !DILexicalBlock(scope: !8666, file: !934, line: 1270, column: 93)
!8678 = !DILocation(line: 1271, column: 21, scope: !8676)
!8679 = !DILocation(line: 1271, column: 38, scope: !8676)
!8680 = !DILocation(line: 1271, column: 21, scope: !8677)
!8681 = !DILocation(line: 1272, column: 24, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8683, file: !934, line: 1272, column: 24)
!8683 = distinct !DILexicalBlock(scope: !8676, file: !934, line: 1271, column: 42)
!8684 = !DILocation(line: 1272, column: 38, scope: !8682)
!8685 = !DILocation(line: 1272, column: 41, scope: !8682)
!8686 = !DILocation(line: 1272, column: 36, scope: !8682)
!8687 = !DILocation(line: 1272, column: 24, scope: !8683)
!8688 = !DILocation(line: 1273, column: 25, scope: !8682)
!8689 = !DILocation(line: 1274, column: 21, scope: !8683)
!8690 = !DILocation(line: 1276, column: 24, scope: !8677)
!8691 = !DILocation(line: 1277, column: 21, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8677, file: !934, line: 1277, column: 21)
!8693 = !DILocation(line: 1277, column: 23, scope: !8692)
!8694 = !DILocation(line: 1277, column: 21, scope: !8677)
!8695 = !DILocation(line: 1278, column: 36, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8692, file: !934, line: 1277, column: 29)
!8697 = !DILocation(line: 1278, column: 33, scope: !8696)
!8698 = !DILocation(line: 1279, column: 43, scope: !8696)
!8699 = !DILocation(line: 1279, column: 40, scope: !8696)
!8700 = !DILocation(line: 1279, column: 34, scope: !8696)
!8701 = !DILocation(line: 1280, column: 17, scope: !8696)
!8702 = !DILocation(line: 1281, column: 40, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8692, file: !934, line: 1280, column: 24)
!8704 = !DILocation(line: 1281, column: 38, scope: !8703)
!8705 = !DILocation(line: 1281, column: 33, scope: !8703)
!8706 = !DILocation(line: 1282, column: 43, scope: !8703)
!8707 = !DILocation(line: 1282, column: 40, scope: !8703)
!8708 = !DILocation(line: 1282, column: 34, scope: !8703)
!8709 = !DILocation(line: 1270, column: 13, scope: !8710)
!8710 = !DILexicalBlockFile(scope: !8666, file: !934, discriminator: 2)
!8711 = distinct !{!8711, !8665}
!8712 = !DILocation(line: 1285, column: 24, scope: !8666)
!8713 = !DILocation(line: 1285, column: 26, scope: !8666)
!8714 = !DILocation(line: 1285, column: 20, scope: !8666)
!8715 = !DILocation(line: 1286, column: 9, scope: !8666)
!8716 = !DILocation(line: 1287, column: 36, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8661, file: !934, line: 1286, column: 16)
!8718 = !DILocation(line: 1287, column: 65, scope: !8717)
!8719 = !DILocation(line: 1287, column: 41, scope: !8717)
!8720 = !DILocation(line: 1287, column: 23, scope: !8717)
!8721 = !DILocation(line: 1287, column: 20, scope: !8717)
!8722 = !DILocation(line: 1288, column: 13, scope: !8717)
!8723 = !DILocation(line: 1288, column: 20, scope: !8724)
!8724 = !DILexicalBlockFile(scope: !8717, file: !934, discriminator: 1)
!8725 = !DILocation(line: 1288, column: 31, scope: !8724)
!8726 = !DILocation(line: 1288, column: 44, scope: !8724)
!8727 = !DILocation(line: 1288, column: 27, scope: !8724)
!8728 = !DILocation(line: 1288, column: 13, scope: !8724)
!8729 = !DILocation(line: 1289, column: 33, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8717, file: !934, line: 1288, column: 50)
!8731 = !DILocation(line: 1289, column: 46, scope: !8730)
!8732 = !DILocation(line: 1289, column: 30, scope: !8730)
!8733 = !DILocation(line: 1289, column: 24, scope: !8730)
!8734 = !DILocation(line: 1290, column: 32, scope: !8730)
!8735 = !DILocation(line: 1290, column: 29, scope: !8730)
!8736 = !DILocation(line: 1291, column: 39, scope: !8730)
!8737 = !DILocation(line: 1291, column: 36, scope: !8730)
!8738 = !DILocation(line: 1291, column: 30, scope: !8730)
!8739 = !DILocation(line: 1288, column: 13, scope: !8740)
!8740 = !DILexicalBlockFile(scope: !8717, file: !934, discriminator: 2)
!8741 = distinct !{!8741, !8722}
!8742 = !DILocation(line: 1295, column: 13, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8662, file: !934, line: 1295, column: 13)
!8744 = !DILocation(line: 1295, column: 28, scope: !8743)
!8745 = !DILocation(line: 1295, column: 31, scope: !8743)
!8746 = !DILocation(line: 1295, column: 25, scope: !8743)
!8747 = !DILocation(line: 1295, column: 13, scope: !8662)
!8748 = !DILocation(line: 1296, column: 13, scope: !8743)
!8749 = !DILocation(line: 1298, column: 25, scope: !8662)
!8750 = !DILocation(line: 1298, column: 35, scope: !8662)
!8751 = !DILocation(line: 1298, column: 32, scope: !8662)
!8752 = !DILocation(line: 1298, column: 22, scope: !8662)
!8753 = !DILocation(line: 1299, column: 13, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8662, file: !934, line: 1299, column: 13)
!8755 = !DILocation(line: 1299, column: 26, scope: !8754)
!8756 = !DILocation(line: 1299, column: 13, scope: !8662)
!8757 = !DILocation(line: 1300, column: 13, scope: !8754)
!8758 = !DILocation(line: 1302, column: 13, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8662, file: !934, line: 1302, column: 13)
!8760 = !DILocation(line: 1302, column: 16, scope: !8759)
!8761 = !DILocation(line: 1302, column: 28, scope: !8759)
!8762 = !DILocation(line: 1302, column: 13, scope: !8662)
!8763 = !DILocation(line: 1303, column: 33, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8759, file: !934, line: 1302, column: 33)
!8765 = !DILocation(line: 1303, column: 23, scope: !8764)
!8766 = !DILocation(line: 1303, column: 21, scope: !8764)
!8767 = !DILocation(line: 1304, column: 32, scope: !8764)
!8768 = !DILocation(line: 1304, column: 22, scope: !8764)
!8769 = !DILocation(line: 1304, column: 20, scope: !8764)
!8770 = !DILocation(line: 1305, column: 9, scope: !8764)
!8771 = !DILocation(line: 1306, column: 21, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8759, file: !934, line: 1305, column: 16)
!8773 = !DILocation(line: 1307, column: 20, scope: !8772)
!8774 = !DILocation(line: 1310, column: 28, scope: !8662)
!8775 = !DILocation(line: 1310, column: 33, scope: !8662)
!8776 = !DILocation(line: 1310, column: 15, scope: !8662)
!8777 = !DILocation(line: 1310, column: 13, scope: !8662)
!8778 = !DILocation(line: 1311, column: 55, scope: !8662)
!8779 = !DILocation(line: 1311, column: 33, scope: !8662)
!8780 = !DILocation(line: 1311, column: 16, scope: !8662)
!8781 = !DILocation(line: 1311, column: 19, scope: !8662)
!8782 = !DILocation(line: 1311, column: 13, scope: !8662)
!8783 = !DILocation(line: 1312, column: 16, scope: !8662)
!8784 = !DILocation(line: 1312, column: 20, scope: !8662)
!8785 = !DILocation(line: 1312, column: 15, scope: !8662)
!8786 = !DILocation(line: 1312, column: 15, scope: !8787)
!8787 = !DILexicalBlockFile(scope: !8662, file: !934, discriminator: 1)
!8788 = !DILocation(line: 1312, column: 31, scope: !8789)
!8789 = !DILexicalBlockFile(scope: !8662, file: !934, discriminator: 2)
!8790 = !DILocation(line: 1312, column: 15, scope: !8789)
!8791 = !DILocation(line: 1312, column: 15, scope: !8792)
!8792 = !DILexicalBlockFile(scope: !8662, file: !934, discriminator: 3)
!8793 = !DILocation(line: 1312, column: 13, scope: !8792)
!8794 = !DILocation(line: 1314, column: 26, scope: !8662)
!8795 = !DILocation(line: 1314, column: 17, scope: !8662)
!8796 = !DILocation(line: 1314, column: 15, scope: !8662)
!8797 = !DILocation(line: 1315, column: 20, scope: !8662)
!8798 = !DILocation(line: 1316, column: 22, scope: !8662)
!8799 = !DILocation(line: 1318, column: 13, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8662, file: !934, line: 1318, column: 13)
!8801 = !DILocation(line: 1318, column: 13, scope: !8662)
!8802 = !DILocation(line: 1319, column: 27, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8800, file: !934, line: 1318, column: 21)
!8804 = !DILocation(line: 1319, column: 46, scope: !8803)
!8805 = !DILocation(line: 1319, column: 33, scope: !8803)
!8806 = !DILocation(line: 1319, column: 31, scope: !8803)
!8807 = !DILocation(line: 1319, column: 24, scope: !8803)
!8808 = !DILocation(line: 1320, column: 29, scope: !8803)
!8809 = !DILocation(line: 1320, column: 50, scope: !8803)
!8810 = !DILocation(line: 1320, column: 37, scope: !8803)
!8811 = !DILocation(line: 1320, column: 35, scope: !8803)
!8812 = !DILocation(line: 1320, column: 26, scope: !8803)
!8813 = !DILocation(line: 1321, column: 17, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8803, file: !934, line: 1321, column: 17)
!8815 = !DILocation(line: 1321, column: 30, scope: !8814)
!8816 = !DILocation(line: 1321, column: 17, scope: !8803)
!8817 = !DILocation(line: 1322, column: 30, scope: !8814)
!8818 = !DILocation(line: 1322, column: 17, scope: !8814)
!8819 = !DILocation(line: 1323, column: 9, scope: !8803)
!8820 = !DILocation(line: 1325, column: 13, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8662, file: !934, line: 1325, column: 13)
!8822 = !DILocation(line: 1325, column: 16, scope: !8821)
!8823 = !DILocation(line: 1325, column: 35, scope: !8821)
!8824 = !DILocation(line: 1325, column: 48, scope: !8821)
!8825 = !DILocation(line: 1325, column: 32, scope: !8821)
!8826 = !DILocation(line: 1325, column: 13, scope: !8662)
!8827 = !DILocalVariable(name: "sub_packet", scope: !8828, file: !934, line: 1326, type: !905)
!8828 = distinct !DILexicalBlock(scope: !8821, file: !934, line: 1325, column: 54)
!8829 = !DILocation(line: 1326, column: 17, scope: !8828)
!8830 = !DILocation(line: 1326, column: 31, scope: !8828)
!8831 = !DILocation(line: 1326, column: 46, scope: !8828)
!8832 = !DILocation(line: 1326, column: 44, scope: !8828)
!8833 = !DILocation(line: 1328, column: 39, scope: !8828)
!8834 = !DILocation(line: 1328, column: 42, scope: !8828)
!8835 = !DILocation(line: 1328, column: 54, scope: !8828)
!8836 = !DILocation(line: 1328, column: 62, scope: !8828)
!8837 = !DILocation(line: 1329, column: 39, scope: !8828)
!8838 = !DILocation(line: 1329, column: 48, scope: !8828)
!8839 = !DILocation(line: 1329, column: 53, scope: !8828)
!8840 = !DILocation(line: 1328, column: 13, scope: !8828)
!8841 = !DILocation(line: 1330, column: 17, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8828, file: !934, line: 1330, column: 17)
!8843 = !DILocation(line: 1330, column: 17, scope: !8828)
!8844 = !DILocation(line: 1331, column: 43, scope: !8842)
!8845 = !DILocation(line: 1331, column: 46, scope: !8842)
!8846 = !DILocation(line: 1331, column: 58, scope: !8842)
!8847 = !DILocation(line: 1331, column: 66, scope: !8842)
!8848 = !DILocation(line: 1332, column: 47, scope: !8842)
!8849 = !DILocation(line: 1332, column: 45, scope: !8842)
!8850 = !DILocation(line: 1333, column: 43, scope: !8842)
!8851 = !DILocation(line: 1333, column: 55, scope: !8842)
!8852 = !DILocation(line: 1331, column: 17, scope: !8842)
!8853 = !DILocation(line: 1334, column: 9, scope: !8828)
!8854 = !DILocation(line: 1335, column: 15, scope: !8662)
!8855 = !DILocation(line: 1268, column: 5, scope: !8856)
!8856 = !DILexicalBlockFile(scope: !8601, file: !934, discriminator: 2)
!8857 = distinct !{!8857, !8654}
!8858 = !DILocation(line: 1337, column: 1, scope: !8601)
!8859 = distinct !DISubprogram(name: "qdm2_fft_init_coefficient", scope: !934, file: !934, line: 1237, type: !8860, isLocal: true, isDefinition: true, scopeLine: 1240, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!8860 = !DISubroutineType(types: !8861)
!8861 = !{null, !1999, !905, !905, !905, !905, !905, !905}
!8862 = !DILocalVariable(name: "q", arg: 1, scope: !8859, file: !934, line: 1237, type: !1999)
!8863 = !DILocation(line: 1237, column: 52, scope: !8859)
!8864 = !DILocalVariable(name: "sub_packet", arg: 2, scope: !8859, file: !934, line: 1237, type: !905)
!8865 = !DILocation(line: 1237, column: 59, scope: !8859)
!8866 = !DILocalVariable(name: "offset", arg: 3, scope: !8859, file: !934, line: 1238, type: !905)
!8867 = !DILocation(line: 1238, column: 43, scope: !8859)
!8868 = !DILocalVariable(name: "duration", arg: 4, scope: !8859, file: !934, line: 1238, type: !905)
!8869 = !DILocation(line: 1238, column: 55, scope: !8859)
!8870 = !DILocalVariable(name: "channel", arg: 5, scope: !8859, file: !934, line: 1238, type: !905)
!8871 = !DILocation(line: 1238, column: 69, scope: !8859)
!8872 = !DILocalVariable(name: "exp", arg: 6, scope: !8859, file: !934, line: 1239, type: !905)
!8873 = !DILocation(line: 1239, column: 43, scope: !8859)
!8874 = !DILocalVariable(name: "phase", arg: 7, scope: !8859, file: !934, line: 1239, type: !905)
!8875 = !DILocation(line: 1239, column: 52, scope: !8859)
!8876 = !DILocation(line: 1241, column: 32, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8859, file: !934, line: 1241, column: 9)
!8878 = !DILocation(line: 1241, column: 9, scope: !8877)
!8879 = !DILocation(line: 1241, column: 12, scope: !8877)
!8880 = !DILocation(line: 1241, column: 42, scope: !8877)
!8881 = !DILocation(line: 1241, column: 9, scope: !8859)
!8882 = !DILocation(line: 1242, column: 44, scope: !8877)
!8883 = !DILocation(line: 1242, column: 47, scope: !8877)
!8884 = !DILocation(line: 1242, column: 32, scope: !8877)
!8885 = !DILocation(line: 1242, column: 9, scope: !8877)
!8886 = !DILocation(line: 1242, column: 12, scope: !8877)
!8887 = !DILocation(line: 1242, column: 42, scope: !8877)
!8888 = !DILocation(line: 1245, column: 11, scope: !8859)
!8889 = !DILocation(line: 1245, column: 22, scope: !8859)
!8890 = !DILocation(line: 1245, column: 10, scope: !8859)
!8891 = !DILocation(line: 1245, column: 32, scope: !8892)
!8892 = !DILexicalBlockFile(scope: !8859, file: !934, discriminator: 1)
!8893 = !DILocation(line: 1245, column: 43, scope: !8892)
!8894 = !DILocation(line: 1245, column: 10, scope: !8892)
!8895 = !DILocation(line: 1245, column: 51, scope: !8896)
!8896 = !DILexicalBlockFile(scope: !8859, file: !934, discriminator: 2)
!8897 = !DILocation(line: 1245, column: 10, scope: !8896)
!8898 = !DILocation(line: 1245, column: 10, scope: !8899)
!8899 = !DILexicalBlockFile(scope: !8859, file: !934, discriminator: 3)
!8900 = !DILocation(line: 1245, column: 9, scope: !8899)
!8901 = !DILocation(line: 1244, column: 18, scope: !8859)
!8902 = !DILocation(line: 1244, column: 21, scope: !8859)
!8903 = !DILocation(line: 1244, column: 5, scope: !8859)
!8904 = !DILocation(line: 1244, column: 8, scope: !8859)
!8905 = !DILocation(line: 1244, column: 38, scope: !8859)
!8906 = !DILocation(line: 1244, column: 49, scope: !8859)
!8907 = !DILocation(line: 1246, column: 48, scope: !8859)
!8908 = !DILocation(line: 1246, column: 18, scope: !8859)
!8909 = !DILocation(line: 1246, column: 21, scope: !8859)
!8910 = !DILocation(line: 1246, column: 5, scope: !8859)
!8911 = !DILocation(line: 1246, column: 8, scope: !8859)
!8912 = !DILocation(line: 1246, column: 38, scope: !8859)
!8913 = !DILocation(line: 1246, column: 46, scope: !8859)
!8914 = !DILocation(line: 1247, column: 47, scope: !8859)
!8915 = !DILocation(line: 1247, column: 18, scope: !8859)
!8916 = !DILocation(line: 1247, column: 21, scope: !8859)
!8917 = !DILocation(line: 1247, column: 5, scope: !8859)
!8918 = !DILocation(line: 1247, column: 8, scope: !8859)
!8919 = !DILocation(line: 1247, column: 38, scope: !8859)
!8920 = !DILocation(line: 1247, column: 45, scope: !8859)
!8921 = !DILocation(line: 1248, column: 44, scope: !8859)
!8922 = !DILocation(line: 1248, column: 18, scope: !8859)
!8923 = !DILocation(line: 1248, column: 21, scope: !8859)
!8924 = !DILocation(line: 1248, column: 5, scope: !8859)
!8925 = !DILocation(line: 1248, column: 8, scope: !8859)
!8926 = !DILocation(line: 1248, column: 38, scope: !8859)
!8927 = !DILocation(line: 1248, column: 42, scope: !8859)
!8928 = !DILocation(line: 1249, column: 46, scope: !8859)
!8929 = !DILocation(line: 1249, column: 18, scope: !8859)
!8930 = !DILocation(line: 1249, column: 21, scope: !8859)
!8931 = !DILocation(line: 1249, column: 5, scope: !8859)
!8932 = !DILocation(line: 1249, column: 8, scope: !8859)
!8933 = !DILocation(line: 1249, column: 38, scope: !8859)
!8934 = !DILocation(line: 1249, column: 44, scope: !8859)
!8935 = !DILocation(line: 1250, column: 5, scope: !8859)
!8936 = !DILocation(line: 1250, column: 8, scope: !8859)
!8937 = !DILocation(line: 1250, column: 23, scope: !8859)
!8938 = !DILocation(line: 1251, column: 1, scope: !8859)
!8939 = distinct !DISubprogram(name: "qdm2_fft_generate_tone", scope: !934, file: !934, line: 1413, type: !8940, isLocal: true, isDefinition: true, scopeLine: 1414, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1662)
!8940 = !DISubroutineType(types: !8941)
!8941 = !{null, !1999, !8942}
!8942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64, align: 64)
!8943 = !DILocalVariable(name: "q", arg: 1, scope: !8939, file: !934, line: 1413, type: !1999)
!8944 = !DILocation(line: 1413, column: 49, scope: !8939)
!8945 = !DILocalVariable(name: "tone", arg: 2, scope: !8939, file: !934, line: 1413, type: !8942)
!8946 = !DILocation(line: 1413, column: 61, scope: !8939)
!8947 = !DILocalVariable(name: "level", scope: !8939, file: !934, line: 1415, type: !910)
!8948 = !DILocation(line: 1415, column: 11, scope: !8939)
!8949 = !DILocalVariable(name: "f", scope: !8939, file: !934, line: 1415, type: !8950)
!8950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !910, size: 192, align: 32, elements: !1703)
!8951 = !DILocation(line: 1415, column: 18, scope: !8939)
!8952 = !DILocalVariable(name: "i", scope: !8939, file: !934, line: 1416, type: !905)
!8953 = !DILocation(line: 1416, column: 9, scope: !8939)
!8954 = !DILocalVariable(name: "c", scope: !8939, file: !934, line: 1417, type: !2045)
!8955 = !DILocation(line: 1417, column: 17, scope: !8939)
!8956 = !DILocalVariable(name: "iscale", scope: !8939, file: !934, line: 1418, type: !4561)
!8957 = !DILocation(line: 1418, column: 18, scope: !8939)
!8958 = !DILocation(line: 1420, column: 20, scope: !8939)
!8959 = !DILocation(line: 1420, column: 26, scope: !8939)
!8960 = !DILocation(line: 1420, column: 5, scope: !8939)
!8961 = !DILocation(line: 1420, column: 11, scope: !8939)
!8962 = !DILocation(line: 1420, column: 17, scope: !8939)
!8963 = !DILocation(line: 1423, column: 53, scope: !8939)
!8964 = !DILocation(line: 1423, column: 59, scope: !8939)
!8965 = !DILocation(line: 1423, column: 13, scope: !8939)
!8966 = !DILocation(line: 1423, column: 37, scope: !8939)
!8967 = !DILocation(line: 1423, column: 43, scope: !8939)
!8968 = !DILocation(line: 1423, column: 73, scope: !8939)
!8969 = !DILocation(line: 1423, column: 79, scope: !8939)
!8970 = !DILocation(line: 1423, column: 71, scope: !8939)
!8971 = !DILocation(line: 1423, column: 11, scope: !8939)
!8972 = !DILocation(line: 1424, column: 12, scope: !8939)
!8973 = !DILocation(line: 1424, column: 24, scope: !8939)
!8974 = !DILocation(line: 1424, column: 30, scope: !8939)
!8975 = !DILocation(line: 1424, column: 36, scope: !8939)
!8976 = !DILocation(line: 1424, column: 20, scope: !8939)
!8977 = !DILocation(line: 1424, column: 18, scope: !8939)
!8978 = !DILocation(line: 1424, column: 7, scope: !8939)
!8979 = !DILocation(line: 1424, column: 10, scope: !8939)
!8980 = !DILocation(line: 1425, column: 12, scope: !8939)
!8981 = !DILocation(line: 1425, column: 24, scope: !8939)
!8982 = !DILocation(line: 1425, column: 30, scope: !8939)
!8983 = !DILocation(line: 1425, column: 36, scope: !8939)
!8984 = !DILocation(line: 1425, column: 20, scope: !8939)
!8985 = !DILocation(line: 1425, column: 18, scope: !8939)
!8986 = !DILocation(line: 1425, column: 7, scope: !8939)
!8987 = !DILocation(line: 1425, column: 10, scope: !8939)
!8988 = !DILocation(line: 1428, column: 9, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8939, file: !934, line: 1428, column: 9)
!8990 = !DILocation(line: 1428, column: 15, scope: !8989)
!8991 = !DILocation(line: 1428, column: 24, scope: !8989)
!8992 = !DILocation(line: 1428, column: 29, scope: !8989)
!8993 = !DILocation(line: 1428, column: 32, scope: !8994)
!8994 = !DILexicalBlockFile(scope: !8989, file: !934, discriminator: 1)
!8995 = !DILocation(line: 1428, column: 38, scope: !8994)
!8996 = !DILocation(line: 1428, column: 45, scope: !8994)
!8997 = !DILocation(line: 1428, column: 9, scope: !8994)
!8998 = !DILocation(line: 1429, column: 34, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8989, file: !934, line: 1428, column: 51)
!9000 = !DILocation(line: 1429, column: 9, scope: !8999)
!9001 = !DILocation(line: 1429, column: 15, scope: !8999)
!9002 = !DILocation(line: 1429, column: 26, scope: !8999)
!9003 = !DILocation(line: 1429, column: 29, scope: !8999)
!9004 = !DILocation(line: 1430, column: 34, scope: !8999)
!9005 = !DILocation(line: 1430, column: 9, scope: !8999)
!9006 = !DILocation(line: 1430, column: 15, scope: !8999)
!9007 = !DILocation(line: 1430, column: 26, scope: !8999)
!9008 = !DILocation(line: 1430, column: 29, scope: !8999)
!9009 = !DILocation(line: 1431, column: 34, scope: !8999)
!9010 = !DILocation(line: 1431, column: 9, scope: !8999)
!9011 = !DILocation(line: 1431, column: 15, scope: !8999)
!9012 = !DILocation(line: 1431, column: 26, scope: !8999)
!9013 = !DILocation(line: 1431, column: 29, scope: !8999)
!9014 = !DILocation(line: 1432, column: 34, scope: !8999)
!9015 = !DILocation(line: 1432, column: 9, scope: !8999)
!9016 = !DILocation(line: 1432, column: 15, scope: !8999)
!9017 = !DILocation(line: 1432, column: 26, scope: !8999)
!9018 = !DILocation(line: 1432, column: 29, scope: !8999)
!9019 = !DILocation(line: 1433, column: 5, scope: !8999)
!9020 = !DILocation(line: 1434, column: 17, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !8989, file: !934, line: 1433, column: 12)
!9022 = !DILocation(line: 1434, column: 23, scope: !9021)
!9023 = !DILocation(line: 1434, column: 16, scope: !9021)
!9024 = !DILocation(line: 1434, column: 9, scope: !9021)
!9025 = !DILocation(line: 1434, column: 14, scope: !9021)
!9026 = !DILocation(line: 1435, column: 16, scope: !9021)
!9027 = !DILocation(line: 1435, column: 22, scope: !9021)
!9028 = !DILocation(line: 1435, column: 33, scope: !9021)
!9029 = !DILocation(line: 1435, column: 39, scope: !9021)
!9030 = !DILocation(line: 1435, column: 31, scope: !9021)
!9031 = !DILocation(line: 1435, column: 9, scope: !9021)
!9032 = !DILocation(line: 1435, column: 14, scope: !9021)
!9033 = !DILocation(line: 1436, column: 22, scope: !9021)
!9034 = !DILocation(line: 1436, column: 28, scope: !9021)
!9035 = !DILocation(line: 1436, column: 20, scope: !9021)
!9036 = !DILocation(line: 1436, column: 39, scope: !9021)
!9037 = !DILocation(line: 1436, column: 45, scope: !9021)
!9038 = !DILocation(line: 1436, column: 37, scope: !9021)
!9039 = !DILocation(line: 1436, column: 16, scope: !9021)
!9040 = !DILocation(line: 1436, column: 9, scope: !9021)
!9041 = !DILocation(line: 1436, column: 14, scope: !9021)
!9042 = !DILocation(line: 1437, column: 16, scope: !9021)
!9043 = !DILocation(line: 1437, column: 22, scope: !9021)
!9044 = !DILocation(line: 1437, column: 33, scope: !9021)
!9045 = !DILocation(line: 1437, column: 39, scope: !9021)
!9046 = !DILocation(line: 1437, column: 31, scope: !9021)
!9047 = !DILocation(line: 1437, column: 48, scope: !9021)
!9048 = !DILocation(line: 1437, column: 9, scope: !9021)
!9049 = !DILocation(line: 1437, column: 14, scope: !9021)
!9050 = !DILocation(line: 1438, column: 16, scope: !9021)
!9051 = !DILocation(line: 1438, column: 22, scope: !9021)
!9052 = !DILocation(line: 1438, column: 33, scope: !9021)
!9053 = !DILocation(line: 1438, column: 39, scope: !9021)
!9054 = !DILocation(line: 1438, column: 31, scope: !9021)
!9055 = !DILocation(line: 1438, column: 9, scope: !9021)
!9056 = !DILocation(line: 1438, column: 14, scope: !9021)
!9057 = !DILocation(line: 1439, column: 16, scope: !9021)
!9058 = !DILocation(line: 1439, column: 22, scope: !9021)
!9059 = !DILocation(line: 1439, column: 9, scope: !9021)
!9060 = !DILocation(line: 1439, column: 14, scope: !9021)
!9061 = !DILocation(line: 1440, column: 16, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9021, file: !934, line: 1440, column: 9)
!9063 = !DILocation(line: 1440, column: 14, scope: !9062)
!9064 = !DILocation(line: 1440, column: 21, scope: !9065)
!9065 = !DILexicalBlockFile(scope: !9066, file: !934, discriminator: 1)
!9066 = distinct !DILexicalBlock(scope: !9062, file: !934, line: 1440, column: 9)
!9067 = !DILocation(line: 1440, column: 23, scope: !9065)
!9068 = !DILocation(line: 1440, column: 9, scope: !9065)
!9069 = !DILocation(line: 1442, column: 19, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9066, file: !934, line: 1440, column: 33)
!9071 = !DILocation(line: 1442, column: 26, scope: !9070)
!9072 = !DILocation(line: 1442, column: 24, scope: !9070)
!9073 = !DILocation(line: 1442, column: 22, scope: !9070)
!9074 = !DILocation(line: 1441, column: 64, scope: !9070)
!9075 = !DILocation(line: 1441, column: 27, scope: !9070)
!9076 = !DILocation(line: 1441, column: 50, scope: !9070)
!9077 = !DILocation(line: 1441, column: 56, scope: !9070)
!9078 = !DILocation(line: 1441, column: 13, scope: !9070)
!9079 = !DILocation(line: 1441, column: 19, scope: !9070)
!9080 = !DILocation(line: 1441, column: 68, scope: !9070)
!9081 = !DILocation(line: 1441, column: 71, scope: !9070)
!9082 = !DILocation(line: 1444, column: 19, scope: !9070)
!9083 = !DILocation(line: 1444, column: 26, scope: !9070)
!9084 = !DILocation(line: 1444, column: 32, scope: !9070)
!9085 = !DILocation(line: 1444, column: 42, scope: !9070)
!9086 = !DILocation(line: 1444, column: 39, scope: !9070)
!9087 = !DILocation(line: 1444, column: 25, scope: !9070)
!9088 = !DILocation(line: 1444, column: 50, scope: !9089)
!9089 = !DILexicalBlockFile(scope: !9070, file: !934, discriminator: 1)
!9090 = !DILocation(line: 1444, column: 48, scope: !9089)
!9091 = !DILocation(line: 1444, column: 47, scope: !9089)
!9092 = !DILocation(line: 1444, column: 25, scope: !9089)
!9093 = !DILocation(line: 1444, column: 57, scope: !9094)
!9094 = !DILexicalBlockFile(scope: !9070, file: !934, discriminator: 2)
!9095 = !DILocation(line: 1444, column: 55, scope: !9094)
!9096 = !DILocation(line: 1444, column: 25, scope: !9094)
!9097 = !DILocation(line: 1444, column: 25, scope: !9098)
!9098 = !DILexicalBlockFile(scope: !9070, file: !934, discriminator: 3)
!9099 = !DILocation(line: 1444, column: 22, scope: !9098)
!9100 = !DILocation(line: 1443, column: 64, scope: !9070)
!9101 = !DILocation(line: 1443, column: 27, scope: !9070)
!9102 = !DILocation(line: 1443, column: 50, scope: !9070)
!9103 = !DILocation(line: 1443, column: 56, scope: !9070)
!9104 = !DILocation(line: 1443, column: 13, scope: !9070)
!9105 = !DILocation(line: 1443, column: 19, scope: !9070)
!9106 = !DILocation(line: 1443, column: 68, scope: !9070)
!9107 = !DILocation(line: 1443, column: 71, scope: !9070)
!9108 = !DILocation(line: 1445, column: 9, scope: !9070)
!9109 = !DILocation(line: 1440, column: 29, scope: !9110)
!9110 = !DILexicalBlockFile(scope: !9066, file: !934, discriminator: 2)
!9111 = !DILocation(line: 1440, column: 9, scope: !9110)
!9112 = distinct !{!9112, !9113}
!9113 = !DILocation(line: 1440, column: 9, scope: !9021)
!9114 = !DILocation(line: 1446, column: 16, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9021, file: !934, line: 1446, column: 9)
!9116 = !DILocation(line: 1446, column: 14, scope: !9115)
!9117 = !DILocation(line: 1446, column: 21, scope: !9118)
!9118 = !DILexicalBlockFile(scope: !9119, file: !934, discriminator: 1)
!9119 = distinct !DILexicalBlock(scope: !9115, file: !934, line: 1446, column: 9)
!9120 = !DILocation(line: 1446, column: 23, scope: !9118)
!9121 = !DILocation(line: 1446, column: 9, scope: !9118)
!9122 = !DILocation(line: 1447, column: 38, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9119, file: !934, line: 1446, column: 33)
!9124 = !DILocation(line: 1447, column: 45, scope: !9123)
!9125 = !DILocation(line: 1447, column: 47, scope: !9123)
!9126 = !DILocation(line: 1447, column: 43, scope: !9123)
!9127 = !DILocation(line: 1447, column: 41, scope: !9123)
!9128 = !DILocation(line: 1447, column: 27, scope: !9123)
!9129 = !DILocation(line: 1447, column: 13, scope: !9123)
!9130 = !DILocation(line: 1447, column: 19, scope: !9123)
!9131 = !DILocation(line: 1447, column: 30, scope: !9123)
!9132 = !DILocation(line: 1447, column: 33, scope: !9123)
!9133 = !DILocation(line: 1448, column: 38, scope: !9123)
!9134 = !DILocation(line: 1448, column: 45, scope: !9123)
!9135 = !DILocation(line: 1448, column: 47, scope: !9123)
!9136 = !DILocation(line: 1448, column: 43, scope: !9123)
!9137 = !DILocation(line: 1448, column: 41, scope: !9123)
!9138 = !DILocation(line: 1448, column: 27, scope: !9123)
!9139 = !DILocation(line: 1448, column: 13, scope: !9123)
!9140 = !DILocation(line: 1448, column: 19, scope: !9123)
!9141 = !DILocation(line: 1448, column: 30, scope: !9123)
!9142 = !DILocation(line: 1448, column: 33, scope: !9123)
!9143 = !DILocation(line: 1449, column: 9, scope: !9123)
!9144 = !DILocation(line: 1446, column: 29, scope: !9145)
!9145 = !DILexicalBlockFile(scope: !9119, file: !934, discriminator: 2)
!9146 = !DILocation(line: 1446, column: 9, scope: !9145)
!9147 = distinct !{!9147, !9148}
!9148 = !DILocation(line: 1446, column: 9, scope: !9021)
!9149 = !DILocation(line: 1453, column: 11, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !8939, file: !934, line: 1453, column: 9)
!9151 = !DILocation(line: 1453, column: 17, scope: !9150)
!9152 = !DILocation(line: 1453, column: 9, scope: !9150)
!9153 = !DILocation(line: 1453, column: 42, scope: !9150)
!9154 = !DILocation(line: 1453, column: 48, scope: !9150)
!9155 = !DILocation(line: 1453, column: 40, scope: !9150)
!9156 = !DILocation(line: 1453, column: 34, scope: !9150)
!9157 = !DILocation(line: 1453, column: 59, scope: !9150)
!9158 = !DILocation(line: 1453, column: 28, scope: !9150)
!9159 = !DILocation(line: 1453, column: 9, scope: !8939)
!9160 = !DILocation(line: 1454, column: 30, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9150, file: !934, line: 1453, column: 65)
!9162 = !DILocation(line: 1454, column: 33, scope: !9161)
!9163 = !DILocation(line: 1454, column: 17, scope: !9161)
!9164 = !DILocation(line: 1454, column: 20, scope: !9161)
!9165 = !DILocation(line: 1454, column: 9, scope: !9161)
!9166 = !DILocation(line: 1454, column: 48, scope: !9161)
!9167 = !DILocation(line: 1455, column: 28, scope: !9161)
!9168 = !DILocation(line: 1455, column: 31, scope: !9161)
!9169 = !DILocation(line: 1455, column: 44, scope: !9161)
!9170 = !DILocation(line: 1455, column: 49, scope: !9161)
!9171 = !DILocation(line: 1455, column: 9, scope: !9161)
!9172 = !DILocation(line: 1455, column: 12, scope: !9161)
!9173 = !DILocation(line: 1455, column: 25, scope: !9161)
!9174 = !DILocation(line: 1456, column: 5, scope: !9161)
!9175 = !DILocation(line: 1457, column: 1, scope: !8939)
