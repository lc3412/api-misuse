; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ffv1dec.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ffv1dec.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.FFV1Context = type { %struct.AVClass*, %struct.AVCodecContext*, %struct.RangeCoder, %struct.GetBitContext, %struct.PutBitContext, [256 x [2 x i64]], [8 x [32 x [2 x i64]]*], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ThreadFrame, %struct.ThreadFrame, %struct.FFV1Context*, %struct.AVFrame*, i32, i32, i32, [4 x %struct.PlaneContext], [5 x [256 x i16]], [8 x [5 x [256 x i16]]], [8 x i32], [256 x i8], [8 x [32 x i8]*], i32, i32, i16*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1024 x %struct.FFV1Context*], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.RangeCoder = type { i32, i32, i32, i32, [256 x i8], [256 x i8], i8*, i8*, i8*, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.ThreadFrame = type { %struct.AVFrame*, [2 x %struct.AVCodecContext*], %struct.AVBufferRef* }
%struct.PlaneContext = type { [5 x [256 x i16]], i32, i32, [32 x i8]*, %struct.VlcState*, [2 x i8] }
%struct.VlcState = type { i16, i16, i8, i8 }
%struct.AVPixFmtDescriptor = type { i8*, i8, i8, i8, i64, [4 x %struct.AVComponentDescriptor], i8* }
%struct.AVComponentDescriptor = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%union.unaligned_32 = type { i32 }
%union.anon.0 = type { i32 }

@.str = private unnamed_addr constant [5 x i8] c"ffv1\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"FFmpeg video codec #1\00", align 1
@ff_ffv1_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i32 0, i32 0), i32 0, i32 33, i32 12290, %struct.AVRational* null, i32* null, i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 47016, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* @init_thread_copy, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* @update_thread_context, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @decode_frame, i32 (%struct.AVCodecContext*)* @ff_ffv1_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 2, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"f->version > 1\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"libavcodec/ffv1dec.c\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"!fdst->plane[0].state\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"!fdst->sample_buffer\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"Invalid version in global header\0A\00", align 1
@.str.8 = private unnamed_addr constant [43 x i8] c"chroma shift parameters %d %d are invalid\0A\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"slice count invalid\0A\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"quant table count %d is invalid\0A\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"read_quant_table error\0A\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"CRC mismatch %X!\0A\00", align 1
@.str.13 = private unnamed_addr constant [127 x i8] c"global: ver:%d.%d, coder:%d, colorspace: %d bpr:%d chroma:%d(%d:%d), alpha:%d slices:%dx%d qtabs:%d ec:%d intra:%d CRC:0x%08X\0A\00", align 1
@.str.14 = private unnamed_addr constant [51 x i8] c"Cannot decode non-keyframe without valid keyframe\0A\00", align 1
@.str.15 = private unnamed_addr constant [52 x i8] c"ver:%d keyframe:%d coder:%d ec:%d slices:%d bps:%d\0A\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"Slice pointer chain broken\0A\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"CRC mismatch %X!\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"at %f seconds\0A\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"at %ld\0A\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"slice %d, CRC: 0x%08X\0A\00", align 1
@.str.22 = private unnamed_addr constant [36 x i8] c"invalid version %d in ver01 header\0A\00", align 1
@.str.23 = private unnamed_addr constant [29 x i8] c"invalid state transition %d\0A\00", align 1
@.str.24 = private unnamed_addr constant [37 x i8] c"Invalid change of global parameters\0A\00", align 1
@.str.25 = private unnamed_addr constant [53 x i8] c"chroma subsampling not supported in this colorspace\0A\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"colorspace not supported\0A\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"format not supported\0A\00", align 1
@.str.28 = private unnamed_addr constant [36 x i8] c"slice count %d is invalid (max=%d)\0A\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"quant_table_index out of range\0A\00", align 1
@.str.30 = private unnamed_addr constant [19 x i8] c"context_count >= 0\00", align 1
@.str.31 = private unnamed_addr constant [34 x i8] c"bytestream end mismatching by %d\0A\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"f->version > 2\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ignoring invalid SAR: %u/%u\0A\00", align 1
@.str.34 = private unnamed_addr constant [31 x i8] c"slice_rct_y_coef out of range\0A\00", align 1
@ff_log2_run = external constant [41 x i8], align 16

; Function Attrs: nounwind uwtable
define internal i32 @init_thread_copy(%struct.AVCodecContext* %avctx) #0 !dbg !1703 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %f = alloca %struct.FFV1Context*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1705, metadata !1706), !dbg !1707
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %f, metadata !1708, metadata !1706), !dbg !1863
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1864
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1865
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1865
  %2 = bitcast i8* %1 to %struct.FFV1Context*, !dbg !1864
  store %struct.FFV1Context* %2, %struct.FFV1Context** %f, align 8, !dbg !1863
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1866, metadata !1706), !dbg !1867
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1868, metadata !1706), !dbg !1869
  %3 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !1870
  %picture = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %3, i32 0, i32 18, !dbg !1871
  %f1 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %picture, i32 0, i32 0, !dbg !1872
  store %struct.AVFrame* null, %struct.AVFrame** %f1, align 8, !dbg !1873
  %4 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !1874
  %last_picture = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %4, i32 0, i32 19, !dbg !1875
  %f2 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_picture, i32 0, i32 0, !dbg !1876
  store %struct.AVFrame* null, %struct.AVFrame** %f2, align 8, !dbg !1877
  %5 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !1878
  %sample_buffer = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %5, i32 0, i32 33, !dbg !1879
  store i16* null, i16** %sample_buffer, align 8, !dbg !1880
  %6 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !1881
  %max_slice_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %6, i32 0, i32 47, !dbg !1882
  store i32 0, i32* %max_slice_count, align 4, !dbg !1883
  %7 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !1884
  %slice_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %7, i32 0, i32 46, !dbg !1885
  store i32 0, i32* %slice_count, align 8, !dbg !1886
  store i32 0, i32* %i, align 4, !dbg !1887
  br label %for.cond, !dbg !1889

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !1890
  %9 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !1893
  %quant_table_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %9, i32 0, i32 44, !dbg !1894
  %10 = load i32, i32* %quant_table_count, align 4, !dbg !1894
  %cmp = icmp slt i32 %8, %10, !dbg !1895
  br i1 %cmp, label %for.body, label %for.end, !dbg !1896

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !1897, !llvm.loop !1899

do.body:                                          ; preds = %for.body
  %11 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !1900
  %version = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %11, i32 0, i32 7, !dbg !1904
  %12 = load i32, i32* %version, align 8, !dbg !1904
  %cmp3 = icmp sgt i32 %12, 1, !dbg !1905
  br i1 %cmp3, label %if.end, label %if.then, !dbg !1906

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i32 0, i32 0), i32 998), !dbg !1907
  call void @abort() #10, !dbg !1910
  unreachable, !dbg !1912

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !1913

do.end:                                           ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !1915
  %idxprom = sext i32 %13 to i64, !dbg !1916
  %14 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !1916
  %initial_states = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %14, i32 0, i32 30, !dbg !1917
  %arrayidx = getelementptr inbounds [8 x [32 x i8]*], [8 x [32 x i8]*]* %initial_states, i64 0, i64 %idxprom, !dbg !1916
  %15 = load [32 x i8]*, [32 x i8]** %arrayidx, align 8, !dbg !1916
  %16 = bitcast [32 x i8]* %15 to i8*, !dbg !1916
  %17 = load i32, i32* %i, align 4, !dbg !1918
  %idxprom4 = sext i32 %17 to i64, !dbg !1919
  %18 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !1919
  %context_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %18, i32 0, i32 28, !dbg !1920
  %arrayidx5 = getelementptr inbounds [8 x i32], [8 x i32]* %context_count, i64 0, i64 %idxprom4, !dbg !1919
  %19 = load i32, i32* %arrayidx5, align 4, !dbg !1919
  %conv = sext i32 %19 to i64, !dbg !1919
  %mul = mul i64 %conv, 32, !dbg !1921
  %call = call i8* @av_memdup(i8* %16, i64 %mul), !dbg !1922
  %20 = bitcast i8* %call to [32 x i8]*, !dbg !1922
  %21 = load i32, i32* %i, align 4, !dbg !1923
  %idxprom6 = sext i32 %21 to i64, !dbg !1924
  %22 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !1924
  %initial_states7 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %22, i32 0, i32 30, !dbg !1925
  %arrayidx8 = getelementptr inbounds [8 x [32 x i8]*], [8 x [32 x i8]*]* %initial_states7, i64 0, i64 %idxprom6, !dbg !1924
  store [32 x i8]* %20, [32 x i8]** %arrayidx8, align 8, !dbg !1926
  br label %for.inc, !dbg !1927

for.inc:                                          ; preds = %do.end
  %23 = load i32, i32* %i, align 4, !dbg !1928
  %inc = add nsw i32 %23, 1, !dbg !1928
  store i32 %inc, i32* %i, align 4, !dbg !1928
  br label %for.cond, !dbg !1930, !llvm.loop !1931

for.end:                                          ; preds = %for.cond
  %call9 = call %struct.AVFrame* @av_frame_alloc(), !dbg !1933
  %24 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !1934
  %picture10 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %24, i32 0, i32 18, !dbg !1935
  %f11 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %picture10, i32 0, i32 0, !dbg !1936
  store %struct.AVFrame* %call9, %struct.AVFrame** %f11, align 8, !dbg !1937
  %call12 = call %struct.AVFrame* @av_frame_alloc(), !dbg !1938
  %25 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !1939
  %last_picture13 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %25, i32 0, i32 19, !dbg !1940
  %f14 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_picture13, i32 0, i32 0, !dbg !1941
  store %struct.AVFrame* %call12, %struct.AVFrame** %f14, align 8, !dbg !1942
  %26 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !1943
  %call15 = call i32 @ff_ffv1_init_slice_contexts(%struct.FFV1Context* %26), !dbg !1945
  store i32 %call15, i32* %ret, align 4, !dbg !1946
  %cmp16 = icmp slt i32 %call15, 0, !dbg !1947
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !1948

if.then18:                                        ; preds = %for.end
  %27 = load i32, i32* %ret, align 4, !dbg !1949
  store i32 %27, i32* %retval, align 4, !dbg !1950
  br label %return, !dbg !1950

if.end19:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !1951
  br label %return, !dbg !1951

return:                                           ; preds = %if.end19, %if.then18
  %28 = load i32, i32* %retval, align 4, !dbg !1952
  ret i32 %28, !dbg !1952
}

; Function Attrs: nounwind uwtable
define internal i32 @update_thread_context(%struct.AVCodecContext* %dst, %struct.AVCodecContext* %src) #0 !dbg !1953 {
entry:
  %retval = alloca i32, align 4
  %dst.addr = alloca %struct.AVCodecContext*, align 8
  %src.addr = alloca %struct.AVCodecContext*, align 8
  %fsrc = alloca %struct.FFV1Context*, align 8
  %fdst = alloca %struct.FFV1Context*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %picture = alloca %struct.ThreadFrame, align 8
  %last_picture = alloca %struct.ThreadFrame, align 8
  %initial_states = alloca [8 x [32 x i8]*], align 16
  %slice_context = alloca [1024 x %struct.FFV1Context*], align 16
  %fssrc = alloca %struct.FFV1Context*, align 8
  %fsdst = alloca %struct.FFV1Context*, align 8
  store %struct.AVCodecContext* %dst, %struct.AVCodecContext** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %dst.addr, metadata !1954, metadata !1706), !dbg !1955
  store %struct.AVCodecContext* %src, %struct.AVCodecContext** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %src.addr, metadata !1956, metadata !1706), !dbg !1957
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fsrc, metadata !1958, metadata !1706), !dbg !1959
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %src.addr, align 8, !dbg !1960
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1961
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1961
  %2 = bitcast i8* %1 to %struct.FFV1Context*, !dbg !1960
  store %struct.FFV1Context* %2, %struct.FFV1Context** %fsrc, align 8, !dbg !1959
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fdst, metadata !1962, metadata !1706), !dbg !1963
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dst.addr, align 8, !dbg !1964
  %priv_data1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 6, !dbg !1965
  %4 = load i8*, i8** %priv_data1, align 8, !dbg !1965
  %5 = bitcast i8* %4 to %struct.FFV1Context*, !dbg !1964
  store %struct.FFV1Context* %5, %struct.FFV1Context** %fdst, align 8, !dbg !1963
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1966, metadata !1706), !dbg !1967
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1968, metadata !1706), !dbg !1969
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dst.addr, align 8, !dbg !1970
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %src.addr, align 8, !dbg !1972
  %cmp = icmp eq %struct.AVCodecContext* %6, %7, !dbg !1973
  br i1 %cmp, label %if.then, label %if.end, !dbg !1974

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !1975
  br label %return, !dbg !1975

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ThreadFrame* %picture, metadata !1976, metadata !1706), !dbg !1978
  %8 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !1979
  %picture2 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %8, i32 0, i32 18, !dbg !1980
  %9 = bitcast %struct.ThreadFrame* %picture to i8*, !dbg !1980
  %10 = bitcast %struct.ThreadFrame* %picture2 to i8*, !dbg !1980
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 32, i32 8, i1 false), !dbg !1980
  call void @llvm.dbg.declare(metadata %struct.ThreadFrame* %last_picture, metadata !1981, metadata !1706), !dbg !1982
  %11 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !1983
  %last_picture3 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %11, i32 0, i32 19, !dbg !1984
  %12 = bitcast %struct.ThreadFrame* %last_picture to i8*, !dbg !1984
  %13 = bitcast %struct.ThreadFrame* %last_picture3 to i8*, !dbg !1984
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 32, i32 8, i1 false), !dbg !1985
  call void @llvm.dbg.declare(metadata [8 x [32 x i8]*]* %initial_states, metadata !1987, metadata !1706), !dbg !1988
  call void @llvm.dbg.declare(metadata [1024 x %struct.FFV1Context*]* %slice_context, metadata !1989, metadata !1706), !dbg !1990
  %arraydecay = getelementptr inbounds [8 x [32 x i8]*], [8 x [32 x i8]*]* %initial_states, i32 0, i32 0, !dbg !1991
  %14 = bitcast [32 x i8]** %arraydecay to i8*, !dbg !1991
  %15 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !1992
  %initial_states4 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %15, i32 0, i32 30, !dbg !1993
  %arraydecay5 = getelementptr inbounds [8 x [32 x i8]*], [8 x [32 x i8]*]* %initial_states4, i32 0, i32 0, !dbg !1991
  %16 = bitcast [32 x i8]** %arraydecay5 to i8*, !dbg !1991
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %16, i64 64, i32 8, i1 false), !dbg !1991
  %arraydecay6 = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context, i32 0, i32 0, !dbg !1994
  %17 = bitcast %struct.FFV1Context** %arraydecay6 to i8*, !dbg !1994
  %18 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !1995
  %slice_context7 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %18, i32 0, i32 45, !dbg !1996
  %arraydecay8 = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context7, i32 0, i32 0, !dbg !1994
  %19 = bitcast %struct.FFV1Context** %arraydecay8 to i8*, !dbg !1994
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %19, i64 8192, i32 8, i1 false), !dbg !1994
  %20 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !1997
  %21 = bitcast %struct.FFV1Context* %20 to i8*, !dbg !1998
  %22 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc, align 8, !dbg !1999
  %23 = bitcast %struct.FFV1Context* %22 to i8*, !dbg !1998
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %23, i64 47016, i32 8, i1 false), !dbg !1998
  %24 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !2000
  %initial_states9 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %24, i32 0, i32 30, !dbg !2001
  %arraydecay10 = getelementptr inbounds [8 x [32 x i8]*], [8 x [32 x i8]*]* %initial_states9, i32 0, i32 0, !dbg !2002
  %25 = bitcast [32 x i8]** %arraydecay10 to i8*, !dbg !2002
  %arraydecay11 = getelementptr inbounds [8 x [32 x i8]*], [8 x [32 x i8]*]* %initial_states, i32 0, i32 0, !dbg !2002
  %26 = bitcast [32 x i8]** %arraydecay11 to i8*, !dbg !2002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 64, i32 8, i1 false), !dbg !2002
  %27 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !2003
  %slice_context12 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %27, i32 0, i32 45, !dbg !2004
  %arraydecay13 = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context12, i32 0, i32 0, !dbg !2005
  %28 = bitcast %struct.FFV1Context** %arraydecay13 to i8*, !dbg !2005
  %arraydecay14 = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context, i32 0, i32 0, !dbg !2005
  %29 = bitcast %struct.FFV1Context** %arraydecay14 to i8*, !dbg !2005
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8192, i32 8, i1 false), !dbg !2005
  %30 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !2006
  %picture15 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %30, i32 0, i32 18, !dbg !2007
  %31 = bitcast %struct.ThreadFrame* %picture15 to i8*, !dbg !2008
  %32 = bitcast %struct.ThreadFrame* %picture to i8*, !dbg !2008
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 32, i32 8, i1 false), !dbg !2008
  %33 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !2009
  %last_picture16 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %33, i32 0, i32 19, !dbg !2010
  %34 = bitcast %struct.ThreadFrame* %last_picture16 to i8*, !dbg !2011
  %35 = bitcast %struct.ThreadFrame* %last_picture to i8*, !dbg !2011
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 32, i32 8, i1 false), !dbg !2011
  store i32 0, i32* %i, align 4, !dbg !2012
  br label %for.cond, !dbg !2014

for.cond:                                         ; preds = %for.inc, %if.end
  %36 = load i32, i32* %i, align 4, !dbg !2015
  %37 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !2018
  %num_h_slices = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %37, i32 0, i32 49, !dbg !2019
  %38 = load i32, i32* %num_h_slices, align 4, !dbg !2019
  %39 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !2020
  %num_v_slices = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %39, i32 0, i32 48, !dbg !2021
  %40 = load i32, i32* %num_v_slices, align 8, !dbg !2021
  %mul = mul nsw i32 %38, %40, !dbg !2022
  %cmp17 = icmp slt i32 %36, %mul, !dbg !2023
  br i1 %cmp17, label %for.body, label %for.end, !dbg !2024

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fssrc, metadata !2025, metadata !1706), !dbg !2027
  %41 = load i32, i32* %i, align 4, !dbg !2028
  %idxprom = sext i32 %41 to i64, !dbg !2029
  %42 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc, align 8, !dbg !2029
  %slice_context18 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %42, i32 0, i32 45, !dbg !2030
  %arrayidx = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context18, i64 0, i64 %idxprom, !dbg !2029
  %43 = load %struct.FFV1Context*, %struct.FFV1Context** %arrayidx, align 8, !dbg !2029
  store %struct.FFV1Context* %43, %struct.FFV1Context** %fssrc, align 8, !dbg !2027
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fsdst, metadata !2031, metadata !1706), !dbg !2032
  %44 = load i32, i32* %i, align 4, !dbg !2033
  %idxprom19 = sext i32 %44 to i64, !dbg !2034
  %45 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !2034
  %slice_context20 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %45, i32 0, i32 45, !dbg !2035
  %arrayidx21 = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context20, i64 0, i64 %idxprom19, !dbg !2034
  %46 = load %struct.FFV1Context*, %struct.FFV1Context** %arrayidx21, align 8, !dbg !2034
  store %struct.FFV1Context* %46, %struct.FFV1Context** %fsdst, align 8, !dbg !2032
  %47 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst, align 8, !dbg !2036
  %48 = load %struct.FFV1Context*, %struct.FFV1Context** %fssrc, align 8, !dbg !2037
  %49 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc, align 8, !dbg !2038
  call void @copy_fields(%struct.FFV1Context* %47, %struct.FFV1Context* %48, %struct.FFV1Context* %49), !dbg !2039
  br label %for.inc, !dbg !2040

for.inc:                                          ; preds = %for.body
  %50 = load i32, i32* %i, align 4, !dbg !2041
  %inc = add nsw i32 %50, 1, !dbg !2041
  store i32 %inc, i32* %i, align 4, !dbg !2041
  br label %for.cond, !dbg !2043, !llvm.loop !2044

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !2046, !llvm.loop !2047

do.body:                                          ; preds = %for.end
  %51 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !2048
  %plane = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %51, i32 0, i32 25, !dbg !2052
  %arrayidx22 = getelementptr inbounds [4 x %struct.PlaneContext], [4 x %struct.PlaneContext]* %plane, i64 0, i64 0, !dbg !2048
  %state = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %arrayidx22, i32 0, i32 3, !dbg !2053
  %52 = load [32 x i8]*, [32 x i8]** %state, align 8, !dbg !2053
  %tobool = icmp ne [32 x i8]* %52, null, !dbg !2048
  br i1 %tobool, label %if.then23, label %if.end24, !dbg !2054

if.then23:                                        ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i32 0, i32 0), i32 1068), !dbg !2055
  call void @abort() #10, !dbg !2058
  unreachable, !dbg !2060

if.end24:                                         ; preds = %do.body
  br label %do.end, !dbg !2061

do.end:                                           ; preds = %if.end24
  br label %do.body25, !dbg !2063, !llvm.loop !2064

do.body25:                                        ; preds = %do.end
  %53 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !2065
  %sample_buffer = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %53, i32 0, i32 33, !dbg !2069
  %54 = load i16*, i16** %sample_buffer, align 8, !dbg !2069
  %tobool26 = icmp ne i16* %54, null, !dbg !2065
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !2070

if.then27:                                        ; preds = %do.body25
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i32 0, i32 0), i32 1069), !dbg !2071
  call void @abort() #10, !dbg !2074
  unreachable, !dbg !2076

if.end28:                                         ; preds = %do.body25
  br label %do.end29, !dbg !2077

do.end29:                                         ; preds = %if.end28
  %55 = load %struct.AVCodecContext*, %struct.AVCodecContext** %dst.addr, align 8, !dbg !2079
  %56 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !2080
  %picture30 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %56, i32 0, i32 18, !dbg !2081
  call void @ff_thread_release_buffer(%struct.AVCodecContext* %55, %struct.ThreadFrame* %picture30), !dbg !2082
  %57 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc, align 8, !dbg !2083
  %picture31 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %57, i32 0, i32 18, !dbg !2085
  %f = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %picture31, i32 0, i32 0, !dbg !2086
  %58 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !2086
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %58, i32 0, i32 0, !dbg !2087
  %arrayidx32 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !2083
  %59 = load i8*, i8** %arrayidx32, align 8, !dbg !2083
  %tobool33 = icmp ne i8* %59, null, !dbg !2083
  br i1 %tobool33, label %if.then34, label %if.end40, !dbg !2088

if.then34:                                        ; preds = %do.end29
  %60 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !2089
  %picture35 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %60, i32 0, i32 18, !dbg !2092
  %61 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc, align 8, !dbg !2093
  %picture36 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %61, i32 0, i32 18, !dbg !2094
  %call = call i32 @ff_thread_ref_frame(%struct.ThreadFrame* %picture35, %struct.ThreadFrame* %picture36), !dbg !2095
  store i32 %call, i32* %ret, align 4, !dbg !2096
  %cmp37 = icmp slt i32 %call, 0, !dbg !2097
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !2098

if.then38:                                        ; preds = %if.then34
  %62 = load i32, i32* %ret, align 4, !dbg !2099
  store i32 %62, i32* %retval, align 4, !dbg !2100
  br label %return, !dbg !2100

if.end39:                                         ; preds = %if.then34
  br label %if.end40, !dbg !2101

if.end40:                                         ; preds = %if.end39, %do.end29
  %63 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc, align 8, !dbg !2102
  %64 = load %struct.FFV1Context*, %struct.FFV1Context** %fdst, align 8, !dbg !2103
  %fsrc41 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %64, i32 0, i32 20, !dbg !2104
  store %struct.FFV1Context* %63, %struct.FFV1Context** %fsrc41, align 8, !dbg !2105
  store i32 0, i32* %retval, align 4, !dbg !2106
  br label %return, !dbg !2106

return:                                           ; preds = %if.end40, %if.then38, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !2107
  ret i32 %65, !dbg !2107
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_init(%struct.AVCodecContext* %avctx) #1 !dbg !2108 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %f = alloca %struct.FFV1Context*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2109, metadata !1706), !dbg !2110
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %f, metadata !2111, metadata !1706), !dbg !2112
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2113
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2114
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2114
  %2 = bitcast i8* %1 to %struct.FFV1Context*, !dbg !2113
  store %struct.FFV1Context* %2, %struct.FFV1Context** %f, align 8, !dbg !2112
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2115, metadata !1706), !dbg !2116
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2117
  %call = call i32 @ff_ffv1_common_init(%struct.AVCodecContext* %3), !dbg !2119
  store i32 %call, i32* %ret, align 4, !dbg !2120
  %cmp = icmp slt i32 %call, 0, !dbg !2121
  br i1 %cmp, label %if.then, label %if.end, !dbg !2122

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !2123
  store i32 %4, i32* %retval, align 4, !dbg !2124
  br label %return, !dbg !2124

if.end:                                           ; preds = %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2125
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 16, !dbg !2127
  %6 = load i32, i32* %extradata_size, align 8, !dbg !2127
  %cmp1 = icmp sgt i32 %6, 0, !dbg !2128
  br i1 %cmp1, label %land.lhs.true, label %if.end5, !dbg !2129

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2130
  %call2 = call i32 @read_extra_header(%struct.FFV1Context* %7), !dbg !2132
  store i32 %call2, i32* %ret, align 4, !dbg !2133
  %cmp3 = icmp slt i32 %call2, 0, !dbg !2134
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2135

if.then4:                                         ; preds = %land.lhs.true
  %8 = load i32, i32* %ret, align 4, !dbg !2136
  store i32 %8, i32* %retval, align 4, !dbg !2137
  br label %return, !dbg !2137

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %9 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2138
  %call6 = call i32 @ff_ffv1_init_slice_contexts(%struct.FFV1Context* %9), !dbg !2140
  store i32 %call6, i32* %ret, align 4, !dbg !2141
  %cmp7 = icmp slt i32 %call6, 0, !dbg !2142
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2143

if.then8:                                         ; preds = %if.end5
  %10 = load i32, i32* %ret, align 4, !dbg !2144
  store i32 %10, i32* %retval, align 4, !dbg !2145
  br label %return, !dbg !2145

if.end9:                                          ; preds = %if.end5
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2146
  %internal = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 7, !dbg !2147
  %12 = load %struct.AVCodecInternal*, %struct.AVCodecInternal** %internal, align 8, !dbg !2147
  %allocate_progress = getelementptr inbounds %struct.AVCodecInternal, %struct.AVCodecInternal* %12, i32 0, i32 1, !dbg !2148
  store i32 1, i32* %allocate_progress, align 4, !dbg !2149
  store i32 0, i32* %retval, align 4, !dbg !2150
  br label %return, !dbg !2150

return:                                           ; preds = %if.end9, %if.then8, %if.then4, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !2151
  ret i32 %13, !dbg !2151
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame, %struct.AVPacket* %avpkt) #0 !dbg !2152 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2153, metadata !1706), !dbg !2158
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %f = alloca %struct.FFV1Context*, align 8
  %c = alloca %struct.RangeCoder*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %keystate = alloca i8, align 1
  %buf_p = alloca i8*, align 8
  %p = alloca %struct.AVFrame*, align 8
  %SWAP_tmp = alloca %struct.ThreadFrame, align 8
  %fs = alloca %struct.FFV1Context*, align 8
  %trailer = alloca i32, align 4
  %v = alloca i32, align 4
  %crc = alloca i32, align 4
  %ts = alloca i64, align 8
  %fs150 = alloca %struct.FFV1Context*, align 8
  %j = alloca i32, align 4
  %desc = alloca %struct.AVPixFmtDescriptor*, align 8
  %src = alloca [4 x i8*], align 16
  %dst = alloca [4 x i8*], align 16
  %pixshift = alloca i32, align 4
  %sh = alloca i32, align 4
  %sv = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2167, metadata !1706), !dbg !2168
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2169, metadata !1706), !dbg !2170
  store i32* %got_frame, i32** %got_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame.addr, metadata !2171, metadata !1706), !dbg !2172
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2173, metadata !1706), !dbg !2174
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2175, metadata !1706), !dbg !2176
  %0 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2177
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i32 0, i32 3, !dbg !2178
  %1 = load i8*, i8** %data1, align 8, !dbg !2178
  store i8* %1, i8** %buf, align 8, !dbg !2176
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2179, metadata !1706), !dbg !2180
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2181
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 4, !dbg !2182
  %3 = load i32, i32* %size, align 8, !dbg !2182
  store i32 %3, i32* %buf_size, align 4, !dbg !2180
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %f, metadata !2183, metadata !1706), !dbg !2184
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2185
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 6, !dbg !2186
  %5 = load i8*, i8** %priv_data, align 8, !dbg !2186
  %6 = bitcast i8* %5 to %struct.FFV1Context*, !dbg !2185
  store %struct.FFV1Context* %6, %struct.FFV1Context** %f, align 8, !dbg !2184
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c, metadata !2187, metadata !1706), !dbg !2190
  %7 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2191
  %slice_context = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %7, i32 0, i32 45, !dbg !2192
  %arrayidx = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context, i64 0, i64 0, !dbg !2191
  %8 = load %struct.FFV1Context*, %struct.FFV1Context** %arrayidx, align 8, !dbg !2191
  %c2 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %8, i32 0, i32 2, !dbg !2193
  store %struct.RangeCoder* %c2, %struct.RangeCoder** %c, align 8, !dbg !2190
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2194, metadata !1706), !dbg !2195
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2196, metadata !1706), !dbg !2197
  call void @llvm.dbg.declare(metadata i8* %keystate, metadata !2198, metadata !1706), !dbg !2199
  store i8 -128, i8* %keystate, align 1, !dbg !2199
  call void @llvm.dbg.declare(metadata i8** %buf_p, metadata !2200, metadata !1706), !dbg !2201
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %p, metadata !2202, metadata !1706), !dbg !2203
  %9 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2204
  %last_picture = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %9, i32 0, i32 19, !dbg !2206
  %f3 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_picture, i32 0, i32 0, !dbg !2207
  %10 = load %struct.AVFrame*, %struct.AVFrame** %f3, align 8, !dbg !2207
  %tobool = icmp ne %struct.AVFrame* %10, null, !dbg !2204
  br i1 %tobool, label %if.then, label %if.end, !dbg !2208

if.then:                                          ; preds = %entry
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2209
  %12 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2210
  %last_picture4 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %12, i32 0, i32 19, !dbg !2211
  call void @ff_thread_release_buffer(%struct.AVCodecContext* %11, %struct.ThreadFrame* %last_picture4), !dbg !2212
  br label %if.end, !dbg !2212

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !2213, !llvm.loop !2214

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.ThreadFrame* %SWAP_tmp, metadata !2215, metadata !1706), !dbg !2217
  %13 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2218
  %last_picture5 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %13, i32 0, i32 19, !dbg !2220
  %14 = bitcast %struct.ThreadFrame* %SWAP_tmp to i8*, !dbg !2220
  %15 = bitcast %struct.ThreadFrame* %last_picture5 to i8*, !dbg !2220
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 32, i32 8, i1 false), !dbg !2220
  %16 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2221
  %last_picture6 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %16, i32 0, i32 19, !dbg !2222
  %17 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2223
  %picture = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %17, i32 0, i32 18, !dbg !2224
  %18 = bitcast %struct.ThreadFrame* %last_picture6 to i8*, !dbg !2224
  %19 = bitcast %struct.ThreadFrame* %picture to i8*, !dbg !2224
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 32, i32 8, i1 false), !dbg !2225
  %20 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2227
  %picture7 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %20, i32 0, i32 18, !dbg !2228
  %21 = bitcast %struct.ThreadFrame* %picture7 to i8*, !dbg !2229
  %22 = bitcast %struct.ThreadFrame* %SWAP_tmp to i8*, !dbg !2229
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 32, i32 8, i1 false), !dbg !2230
  br label %do.end, !dbg !2232

do.end:                                           ; preds = %do.body
  %23 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2233
  %picture8 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %23, i32 0, i32 18, !dbg !2234
  %f9 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %picture8, i32 0, i32 0, !dbg !2235
  %24 = load %struct.AVFrame*, %struct.AVFrame** %f9, align 8, !dbg !2235
  store %struct.AVFrame* %24, %struct.AVFrame** %p, align 8, !dbg !2236
  %25 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2237
  %cur = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %25, i32 0, i32 21, !dbg !2238
  store %struct.AVFrame* %24, %struct.AVFrame** %cur, align 8, !dbg !2239
  %26 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2240
  %version = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %26, i32 0, i32 7, !dbg !2242
  %27 = load i32, i32* %version, align 8, !dbg !2242
  %cmp = icmp slt i32 %27, 3, !dbg !2243
  br i1 %cmp, label %land.lhs.true, label %if.end18, !dbg !2244

land.lhs.true:                                    ; preds = %do.end
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2245
  %field_order = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %28, i32 0, i32 81, !dbg !2247
  %29 = load i32, i32* %field_order, align 4, !dbg !2247
  %cmp10 = icmp ugt i32 %29, 1, !dbg !2248
  br i1 %cmp10, label %if.then11, label %if.end18, !dbg !2249

if.then11:                                        ; preds = %land.lhs.true
  %30 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2250
  %interlaced_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %30, i32 0, i32 19, !dbg !2252
  store i32 1, i32* %interlaced_frame, align 4, !dbg !2253
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2254
  %field_order12 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 81, !dbg !2256
  %32 = load i32, i32* %field_order12, align 4, !dbg !2256
  %cmp13 = icmp eq i32 %32, 2, !dbg !2257
  br i1 %cmp13, label %if.then16, label %lor.lhs.false, !dbg !2258

lor.lhs.false:                                    ; preds = %if.then11
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2259
  %field_order14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 81, !dbg !2261
  %34 = load i32, i32* %field_order14, align 4, !dbg !2261
  %cmp15 = icmp eq i32 %34, 4, !dbg !2262
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !2263

if.then16:                                        ; preds = %lor.lhs.false, %if.then11
  %35 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2264
  %top_field_first = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %35, i32 0, i32 20, !dbg !2265
  store i32 1, i32* %top_field_first, align 8, !dbg !2266
  br label %if.end17, !dbg !2264

if.end17:                                         ; preds = %if.then16, %lor.lhs.false
  br label %if.end18, !dbg !2267

if.end18:                                         ; preds = %if.end17, %land.lhs.true, %do.end
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2268
  %37 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2269
  %avctx19 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %37, i32 0, i32 1, !dbg !2270
  store %struct.AVCodecContext* %36, %struct.AVCodecContext** %avctx19, align 8, !dbg !2271
  %38 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !2272
  %39 = load i8*, i8** %buf, align 8, !dbg !2273
  %40 = load i32, i32* %buf_size, align 4, !dbg !2274
  call void @ff_init_range_decoder(%struct.RangeCoder* %38, i8* %39, i32 %40), !dbg !2275
  %41 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !2276
  call void @ff_build_rac_states(%struct.RangeCoder* %41, i32 214748364, i32 248), !dbg !2277
  %42 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2278
  %pict_type = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %42, i32 0, i32 8, !dbg !2279
  store i32 1, i32* %pict_type, align 4, !dbg !2280
  %43 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !2281
  %call = call i32 @get_rac(%struct.RangeCoder* %43, i8* %keystate), !dbg !2283
  %tobool20 = icmp ne i32 %call, 0, !dbg !2283
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !2284

if.then21:                                        ; preds = %if.end18
  %44 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2285
  %key_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %44, i32 0, i32 7, !dbg !2287
  store i32 1, i32* %key_frame, align 8, !dbg !2288
  %45 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2289
  %key_frame_ok = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %45, i32 0, i32 39, !dbg !2290
  store i32 0, i32* %key_frame_ok, align 8, !dbg !2291
  %46 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2292
  %call22 = call i32 @read_header(%struct.FFV1Context* %46), !dbg !2294
  store i32 %call22, i32* %ret, align 4, !dbg !2295
  %cmp23 = icmp slt i32 %call22, 0, !dbg !2296
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !2297

if.then24:                                        ; preds = %if.then21
  %47 = load i32, i32* %ret, align 4, !dbg !2298
  store i32 %47, i32* %retval, align 4, !dbg !2299
  br label %return, !dbg !2299

if.end25:                                         ; preds = %if.then21
  %48 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2300
  %key_frame_ok26 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %48, i32 0, i32 39, !dbg !2301
  store i32 1, i32* %key_frame_ok26, align 8, !dbg !2302
  br label %if.end32, !dbg !2303

if.else:                                          ; preds = %if.end18
  %49 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2304
  %key_frame_ok27 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %49, i32 0, i32 39, !dbg !2307
  %50 = load i32, i32* %key_frame_ok27, align 8, !dbg !2307
  %tobool28 = icmp ne i32 %50, 0, !dbg !2304
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !2308

if.then29:                                        ; preds = %if.else
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2309
  %52 = bitcast %struct.AVCodecContext* %51 to i8*, !dbg !2309
  call void (i8*, i32, i8*, ...) @av_log(i8* %52, i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.14, i32 0, i32 0)), !dbg !2311
  store i32 -1094995529, i32* %retval, align 4, !dbg !2312
  br label %return, !dbg !2312

if.end30:                                         ; preds = %if.else
  %53 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2313
  %key_frame31 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %53, i32 0, i32 7, !dbg !2314
  store i32 0, i32* %key_frame31, align 8, !dbg !2315
  br label %if.end32

if.end32:                                         ; preds = %if.end30, %if.end25
  %54 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2316
  %55 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2318
  %picture33 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %55, i32 0, i32 18, !dbg !2319
  %call34 = call i32 @ff_thread_get_buffer(%struct.AVCodecContext* %54, %struct.ThreadFrame* %picture33, i32 1), !dbg !2320
  store i32 %call34, i32* %ret, align 4, !dbg !2321
  %cmp35 = icmp slt i32 %call34, 0, !dbg !2322
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !2323

if.then36:                                        ; preds = %if.end32
  %56 = load i32, i32* %ret, align 4, !dbg !2324
  store i32 %56, i32* %retval, align 4, !dbg !2325
  br label %return, !dbg !2325

if.end37:                                         ; preds = %if.end32
  %57 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2326
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %57, i32 0, i32 134, !dbg !2328
  %58 = load i32, i32* %debug, align 4, !dbg !2328
  %and = and i32 %58, 1, !dbg !2329
  %tobool38 = icmp ne i32 %and, 0, !dbg !2329
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !2330

if.then39:                                        ; preds = %if.end37
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2331
  %60 = bitcast %struct.AVCodecContext* %59 to i8*, !dbg !2331
  %61 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2332
  %version40 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %61, i32 0, i32 7, !dbg !2333
  %62 = load i32, i32* %version40, align 8, !dbg !2333
  %63 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2334
  %key_frame41 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %63, i32 0, i32 7, !dbg !2335
  %64 = load i32, i32* %key_frame41, align 8, !dbg !2335
  %65 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2336
  %ac = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %65, i32 0, i32 23, !dbg !2337
  %66 = load i32, i32* %ac, align 4, !dbg !2337
  %67 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2338
  %ec = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %67, i32 0, i32 36, !dbg !2339
  %68 = load i32, i32* %ec, align 4, !dbg !2339
  %69 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2340
  %slice_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %69, i32 0, i32 46, !dbg !2341
  %70 = load i32, i32* %slice_count, align 8, !dbg !2341
  %71 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2342
  %avctx42 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %71, i32 0, i32 1, !dbg !2343
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx42, align 8, !dbg !2343
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %72, i32 0, i32 143, !dbg !2344
  %73 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !2344
  call void (i8*, i32, i8*, ...) @av_log(i8* %60, i32 48, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15, i32 0, i32 0), i32 %62, i32 %64, i32 %66, i32 %68, i32 %70, i32 %73), !dbg !2345
  br label %if.end43, !dbg !2345

if.end43:                                         ; preds = %if.then39, %if.end37
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2346
  call void @ff_thread_finish_setup(%struct.AVCodecContext* %74), !dbg !2347
  %75 = load i8*, i8** %buf, align 8, !dbg !2348
  %76 = load i32, i32* %buf_size, align 4, !dbg !2349
  %idx.ext = sext i32 %76 to i64, !dbg !2350
  %add.ptr = getelementptr inbounds i8, i8* %75, i64 %idx.ext, !dbg !2350
  store i8* %add.ptr, i8** %buf_p, align 8, !dbg !2351
  %77 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2352
  %slice_count44 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %77, i32 0, i32 46, !dbg !2353
  %78 = load i32, i32* %slice_count44, align 8, !dbg !2353
  %sub = sub nsw i32 %78, 1, !dbg !2354
  store i32 %sub, i32* %i, align 4, !dbg !2355
  br label %for.cond, !dbg !2356

for.cond:                                         ; preds = %for.inc, %if.end43
  %79 = load i32, i32* %i, align 4, !dbg !2357
  %cmp45 = icmp sge i32 %79, 0, !dbg !2359
  br i1 %cmp45, label %for.body, label %for.end, !dbg !2360

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fs, metadata !2361, metadata !1706), !dbg !2362
  %80 = load i32, i32* %i, align 4, !dbg !2363
  %idxprom = sext i32 %80 to i64, !dbg !2364
  %81 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2364
  %slice_context46 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %81, i32 0, i32 45, !dbg !2365
  %arrayidx47 = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context46, i64 0, i64 %idxprom, !dbg !2364
  %82 = load %struct.FFV1Context*, %struct.FFV1Context** %arrayidx47, align 8, !dbg !2364
  store %struct.FFV1Context* %82, %struct.FFV1Context** %fs, align 8, !dbg !2362
  call void @llvm.dbg.declare(metadata i32* %trailer, metadata !2366, metadata !1706), !dbg !2367
  %83 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2368
  %ec48 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %83, i32 0, i32 36, !dbg !2369
  %84 = load i32, i32* %ec48, align 4, !dbg !2369
  %tobool49 = icmp ne i32 %84, 0, !dbg !2370
  %lnot = xor i1 %tobool49, true, !dbg !2370
  %lnot50 = xor i1 %lnot, true, !dbg !2371
  %lnot.ext = zext i1 %lnot50 to i32, !dbg !2371
  %mul = mul nsw i32 5, %lnot.ext, !dbg !2372
  %add = add nsw i32 3, %mul, !dbg !2373
  store i32 %add, i32* %trailer, align 4, !dbg !2367
  call void @llvm.dbg.declare(metadata i32* %v, metadata !2374, metadata !1706), !dbg !2375
  %85 = load i32, i32* %i, align 4, !dbg !2376
  %tobool51 = icmp ne i32 %85, 0, !dbg !2376
  br i1 %tobool51, label %if.then55, label %lor.lhs.false52, !dbg !2378

lor.lhs.false52:                                  ; preds = %for.body
  %86 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2379
  %version53 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %86, i32 0, i32 7, !dbg !2381
  %87 = load i32, i32* %version53, align 8, !dbg !2381
  %cmp54 = icmp sgt i32 %87, 2, !dbg !2382
  br i1 %cmp54, label %if.then55, label %if.else72, !dbg !2383

if.then55:                                        ; preds = %lor.lhs.false52, %for.body
  %88 = load i8*, i8** %buf_p, align 8, !dbg !2384
  %89 = load i32, i32* %trailer, align 4, !dbg !2386
  %idx.ext56 = sext i32 %89 to i64, !dbg !2387
  %idx.neg = sub i64 0, %idx.ext56, !dbg !2387
  %add.ptr57 = getelementptr inbounds i8, i8* %88, i64 %idx.neg, !dbg !2387
  %arrayidx58 = getelementptr inbounds i8, i8* %add.ptr57, i64 0, !dbg !2388
  %90 = load i8, i8* %arrayidx58, align 1, !dbg !2388
  %conv = zext i8 %90 to i32, !dbg !2388
  %shl = shl i32 %conv, 16, !dbg !2389
  %91 = load i8*, i8** %buf_p, align 8, !dbg !2390
  %92 = load i32, i32* %trailer, align 4, !dbg !2391
  %idx.ext59 = sext i32 %92 to i64, !dbg !2392
  %idx.neg60 = sub i64 0, %idx.ext59, !dbg !2392
  %add.ptr61 = getelementptr inbounds i8, i8* %91, i64 %idx.neg60, !dbg !2392
  %arrayidx62 = getelementptr inbounds i8, i8* %add.ptr61, i64 1, !dbg !2393
  %93 = load i8, i8* %arrayidx62, align 1, !dbg !2393
  %conv63 = zext i8 %93 to i32, !dbg !2393
  %shl64 = shl i32 %conv63, 8, !dbg !2394
  %or = or i32 %shl, %shl64, !dbg !2395
  %94 = load i8*, i8** %buf_p, align 8, !dbg !2396
  %95 = load i32, i32* %trailer, align 4, !dbg !2397
  %idx.ext65 = sext i32 %95 to i64, !dbg !2398
  %idx.neg66 = sub i64 0, %idx.ext65, !dbg !2398
  %add.ptr67 = getelementptr inbounds i8, i8* %94, i64 %idx.neg66, !dbg !2398
  %arrayidx68 = getelementptr inbounds i8, i8* %add.ptr67, i64 2, !dbg !2399
  %96 = load i8, i8* %arrayidx68, align 1, !dbg !2399
  %conv69 = zext i8 %96 to i32, !dbg !2399
  %or70 = or i32 %or, %conv69, !dbg !2400
  %97 = load i32, i32* %trailer, align 4, !dbg !2401
  %add71 = add nsw i32 %or70, %97, !dbg !2402
  store i32 %add71, i32* %v, align 4, !dbg !2403
  br label %if.end74, !dbg !2404

if.else72:                                        ; preds = %lor.lhs.false52
  %98 = load i8*, i8** %buf_p, align 8, !dbg !2405
  %99 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !2406
  %bytestream_start = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %99, i32 0, i32 6, !dbg !2407
  %100 = load i8*, i8** %bytestream_start, align 8, !dbg !2407
  %sub.ptr.lhs.cast = ptrtoint i8* %98 to i64, !dbg !2408
  %sub.ptr.rhs.cast = ptrtoint i8* %100 to i64, !dbg !2408
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2408
  %conv73 = trunc i64 %sub.ptr.sub to i32, !dbg !2405
  store i32 %conv73, i32* %v, align 4, !dbg !2409
  br label %if.end74

if.end74:                                         ; preds = %if.else72, %if.then55
  %101 = load i8*, i8** %buf_p, align 8, !dbg !2410
  %102 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !2412
  %bytestream_start75 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %102, i32 0, i32 6, !dbg !2413
  %103 = load i8*, i8** %bytestream_start75, align 8, !dbg !2413
  %sub.ptr.lhs.cast76 = ptrtoint i8* %101 to i64, !dbg !2414
  %sub.ptr.rhs.cast77 = ptrtoint i8* %103 to i64, !dbg !2414
  %sub.ptr.sub78 = sub i64 %sub.ptr.lhs.cast76, %sub.ptr.rhs.cast77, !dbg !2414
  %104 = load i32, i32* %v, align 4, !dbg !2415
  %conv79 = sext i32 %104 to i64, !dbg !2415
  %cmp80 = icmp slt i64 %sub.ptr.sub78, %conv79, !dbg !2416
  br i1 %cmp80, label %if.then82, label %if.end84, !dbg !2417

if.then82:                                        ; preds = %if.end74
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2418
  %106 = bitcast %struct.AVCodecContext* %105 to i8*, !dbg !2418
  call void (i8*, i32, i8*, ...) @av_log(i8* %106, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i32 0, i32 0)), !dbg !2420
  %107 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2421
  %picture83 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %107, i32 0, i32 18, !dbg !2422
  call void @ff_thread_report_progress(%struct.ThreadFrame* %picture83, i32 2147483647, i32 0), !dbg !2423
  store i32 -1094995529, i32* %retval, align 4, !dbg !2424
  br label %return, !dbg !2424

if.end84:                                         ; preds = %if.end74
  %108 = load i32, i32* %v, align 4, !dbg !2425
  %109 = load i8*, i8** %buf_p, align 8, !dbg !2426
  %idx.ext85 = sext i32 %108 to i64, !dbg !2426
  %idx.neg86 = sub i64 0, %idx.ext85, !dbg !2426
  %add.ptr87 = getelementptr inbounds i8, i8* %109, i64 %idx.neg86, !dbg !2426
  store i8* %add.ptr87, i8** %buf_p, align 8, !dbg !2426
  %110 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2427
  %ec88 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %110, i32 0, i32 36, !dbg !2428
  %111 = load i32, i32* %ec88, align 4, !dbg !2428
  %tobool89 = icmp ne i32 %111, 0, !dbg !2427
  br i1 %tobool89, label %if.then90, label %if.end129, !dbg !2429

if.then90:                                        ; preds = %if.end84
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !2430, metadata !1706), !dbg !2431
  %call91 = call i32* @av_crc_get_table(i32 3), !dbg !2432
  %112 = load i8*, i8** %buf_p, align 8, !dbg !2433
  %113 = load i32, i32* %v, align 4, !dbg !2434
  %conv92 = sext i32 %113 to i64, !dbg !2434
  %call93 = call i32 @av_crc(i32* %call91, i32 0, i8* %112, i64 %conv92) #11, !dbg !2435
  store i32 %call93, i32* %crc, align 4, !dbg !2431
  %114 = load i32, i32* %crc, align 4, !dbg !2437
  %tobool94 = icmp ne i32 %114, 0, !dbg !2437
  br i1 %tobool94, label %if.then95, label %if.end119, !dbg !2439

if.then95:                                        ; preds = %if.then90
  call void @llvm.dbg.declare(metadata i64* %ts, metadata !2440, metadata !1706), !dbg !2442
  %115 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2443
  %pts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %115, i32 0, i32 1, !dbg !2444
  %116 = load i64, i64* %pts, align 8, !dbg !2444
  %cmp96 = icmp ne i64 %116, -9223372036854775808, !dbg !2445
  br i1 %cmp96, label %cond.true, label %cond.false, !dbg !2443

cond.true:                                        ; preds = %if.then95
  %117 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2446
  %pts98 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %117, i32 0, i32 1, !dbg !2448
  %118 = load i64, i64* %pts98, align 8, !dbg !2448
  br label %cond.end, !dbg !2449

cond.false:                                       ; preds = %if.then95
  %119 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2450
  %dts = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %119, i32 0, i32 2, !dbg !2452
  %120 = load i64, i64* %dts, align 8, !dbg !2452
  br label %cond.end, !dbg !2453

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %118, %cond.true ], [ %120, %cond.false ], !dbg !2454
  store i64 %cond, i64* %ts, align 8, !dbg !2456
  %121 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2457
  %avctx99 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %121, i32 0, i32 1, !dbg !2458
  %122 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx99, align 8, !dbg !2458
  %123 = bitcast %struct.AVCodecContext* %122 to i8*, !dbg !2457
  %124 = load i32, i32* %crc, align 4, !dbg !2459
  call void (i8*, i32, i8*, ...) @av_log(i8* %123, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i32 0, i32 0), i32 %124), !dbg !2460
  %125 = load i64, i64* %ts, align 8, !dbg !2461
  %cmp100 = icmp ne i64 %125, -9223372036854775808, !dbg !2463
  br i1 %cmp100, label %land.lhs.true102, label %if.else110, !dbg !2464

land.lhs.true102:                                 ; preds = %cond.end
  %126 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2465
  %pkt_timebase = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %126, i32 0, i32 165, !dbg !2467
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %pkt_timebase, i32 0, i32 0, !dbg !2468
  %127 = load i32, i32* %num, align 4, !dbg !2468
  %tobool103 = icmp ne i32 %127, 0, !dbg !2465
  br i1 %tobool103, label %if.then104, label %if.else110, !dbg !2469

if.then104:                                       ; preds = %land.lhs.true102
  %128 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2470
  %avctx105 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %128, i32 0, i32 1, !dbg !2472
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx105, align 8, !dbg !2472
  %130 = bitcast %struct.AVCodecContext* %129 to i8*, !dbg !2470
  %131 = load i64, i64* %ts, align 8, !dbg !2473
  %conv106 = sitofp i64 %131 to double, !dbg !2473
  %132 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2474
  %pkt_timebase107 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %132, i32 0, i32 165, !dbg !2475
  %133 = bitcast %struct.AVRational* %pkt_timebase107 to i64*, !dbg !2476
  %134 = load i64, i64* %133, align 4, !dbg !2476
  %call108 = call double @av_q2d(i64 %134), !dbg !2476
  %mul109 = fmul double %conv106, %call108, !dbg !2477
  call void (i8*, i32, i8*, ...) @av_log(i8* %130, i32 16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i32 0, i32 0), double %mul109), !dbg !2478
  br label %if.end118, !dbg !2480

if.else110:                                       ; preds = %land.lhs.true102, %cond.end
  %135 = load i64, i64* %ts, align 8, !dbg !2481
  %cmp111 = icmp ne i64 %135, -9223372036854775808, !dbg !2484
  br i1 %cmp111, label %if.then113, label %if.else115, !dbg !2481

if.then113:                                       ; preds = %if.else110
  %136 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2485
  %avctx114 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %136, i32 0, i32 1, !dbg !2487
  %137 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx114, align 8, !dbg !2487
  %138 = bitcast %struct.AVCodecContext* %137 to i8*, !dbg !2485
  %139 = load i64, i64* %ts, align 8, !dbg !2488
  call void (i8*, i32, i8*, ...) @av_log(i8* %138, i32 16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i64 %139), !dbg !2489
  br label %if.end117, !dbg !2490

if.else115:                                       ; preds = %if.else110
  %140 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2491
  %avctx116 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %140, i32 0, i32 1, !dbg !2493
  %141 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx116, align 8, !dbg !2493
  %142 = bitcast %struct.AVCodecContext* %141 to i8*, !dbg !2491
  call void (i8*, i32, i8*, ...) @av_log(i8* %142, i32 16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i32 0, i32 0)), !dbg !2494
  br label %if.end117

if.end117:                                        ; preds = %if.else115, %if.then113
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then104
  %143 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !2495
  %slice_damaged = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %143, i32 0, i32 38, !dbg !2496
  store i32 1, i32* %slice_damaged, align 4, !dbg !2497
  br label %if.end119, !dbg !2498

if.end119:                                        ; preds = %if.end118, %if.then90
  %144 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2499
  %debug120 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %144, i32 0, i32 134, !dbg !2500
  %145 = load i32, i32* %debug120, align 4, !dbg !2500
  %and121 = and i32 %145, 1, !dbg !2501
  %tobool122 = icmp ne i32 %and121, 0, !dbg !2501
  br i1 %tobool122, label %if.then123, label %if.end128, !dbg !2502

if.then123:                                       ; preds = %if.end119
  %146 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2503
  %147 = bitcast %struct.AVCodecContext* %146 to i8*, !dbg !2503
  %148 = load i32, i32* %i, align 4, !dbg !2504
  %149 = load i8*, i8** %buf_p, align 8, !dbg !2505
  %150 = load i32, i32* %v, align 4, !dbg !2506
  %idx.ext124 = sext i32 %150 to i64, !dbg !2507
  %add.ptr125 = getelementptr inbounds i8, i8* %149, i64 %idx.ext124, !dbg !2507
  %add.ptr126 = getelementptr inbounds i8, i8* %add.ptr125, i64 -4, !dbg !2508
  %151 = bitcast i8* %add.ptr126 to %union.unaligned_32*, !dbg !2509
  %l = bitcast %union.unaligned_32* %151 to i32*, !dbg !2509
  %152 = load i32, i32* %l, align 1, !dbg !2509
  store i32 %152, i32* %x.addr.i, align 4, !dbg !2510
  %153 = load i32, i32* %x.addr.i, align 4, !dbg !2511
  %shl.i = shl i32 %153, 8, !dbg !2512
  %and.i = and i32 %shl.i, 65280, !dbg !2513
  %154 = load i32, i32* %x.addr.i, align 4, !dbg !2514
  %shr.i = lshr i32 %154, 8, !dbg !2515
  %and1.i = and i32 %shr.i, 255, !dbg !2516
  %or.i = or i32 %and.i, %and1.i, !dbg !2517
  %shl2.i = shl i32 %or.i, 16, !dbg !2518
  %155 = load i32, i32* %x.addr.i, align 4, !dbg !2519
  %shr3.i = lshr i32 %155, 16, !dbg !2520
  %shl4.i = shl i32 %shr3.i, 8, !dbg !2521
  %and5.i = and i32 %shl4.i, 65280, !dbg !2522
  %156 = load i32, i32* %x.addr.i, align 4, !dbg !2523
  %shr6.i = lshr i32 %156, 16, !dbg !2524
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !2525
  %and8.i = and i32 %shr7.i, 255, !dbg !2526
  %or9.i = or i32 %and5.i, %and8.i, !dbg !2527
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !2528
  call void (i8*, i32, i8*, ...) @av_log(i8* %147, i32 48, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i32 0, i32 0), i32 %148, i32 %or10.i), !dbg !2529
  br label %if.end128, !dbg !2531

if.end128:                                        ; preds = %if.then123, %if.end119
  br label %if.end129, !dbg !2532

if.end129:                                        ; preds = %if.end128, %if.end84
  %157 = load i32, i32* %i, align 4, !dbg !2533
  %tobool130 = icmp ne i32 %157, 0, !dbg !2533
  br i1 %tobool130, label %if.then131, label %if.else133, !dbg !2535

if.then131:                                       ; preds = %if.end129
  %158 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !2536
  %c132 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %158, i32 0, i32 2, !dbg !2538
  %159 = load i8*, i8** %buf_p, align 8, !dbg !2539
  %160 = load i32, i32* %v, align 4, !dbg !2540
  call void @ff_init_range_decoder(%struct.RangeCoder* %c132, i8* %159, i32 %160), !dbg !2541
  br label %if.end137, !dbg !2542

if.else133:                                       ; preds = %if.end129
  %161 = load i8*, i8** %buf_p, align 8, !dbg !2543
  %162 = load i32, i32* %v, align 4, !dbg !2544
  %idx.ext134 = sext i32 %162 to i64, !dbg !2545
  %add.ptr135 = getelementptr inbounds i8, i8* %161, i64 %idx.ext134, !dbg !2545
  %163 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !2546
  %c136 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %163, i32 0, i32 2, !dbg !2547
  %bytestream_end = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %c136, i32 0, i32 8, !dbg !2548
  store i8* %add.ptr135, i8** %bytestream_end, align 8, !dbg !2549
  br label %if.end137

if.end137:                                        ; preds = %if.else133, %if.then131
  %164 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2550
  %165 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !2551
  %avctx138 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %165, i32 0, i32 1, !dbg !2552
  store %struct.AVCodecContext* %164, %struct.AVCodecContext** %avctx138, align 8, !dbg !2553
  %166 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2554
  %167 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !2555
  %cur139 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %167, i32 0, i32 21, !dbg !2556
  store %struct.AVFrame* %166, %struct.AVFrame** %cur139, align 8, !dbg !2557
  br label %for.inc, !dbg !2558

for.inc:                                          ; preds = %if.end137
  %168 = load i32, i32* %i, align 4, !dbg !2559
  %dec = add nsw i32 %168, -1, !dbg !2559
  store i32 %dec, i32* %i, align 4, !dbg !2559
  br label %for.cond, !dbg !2561, !llvm.loop !2562

for.end:                                          ; preds = %for.cond
  %169 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2564
  %execute = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %169, i32 0, i32 150, !dbg !2565
  %170 = load i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)** %execute, align 8, !dbg !2565
  %171 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2566
  %172 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2567
  %slice_context140 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %172, i32 0, i32 45, !dbg !2568
  %arrayidx141 = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context140, i64 0, i64 0, !dbg !2567
  %173 = bitcast %struct.FFV1Context** %arrayidx141 to i8*, !dbg !2569
  %174 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2570
  %slice_count142 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %174, i32 0, i32 46, !dbg !2571
  %175 = load i32, i32* %slice_count142, align 8, !dbg !2571
  %call143 = call i32 %170(%struct.AVCodecContext* %171, i32 (%struct.AVCodecContext*, i8*)* @decode_slice, i8* %173, i32* null, i32 %175, i32 8), !dbg !2564
  %176 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2572
  %slice_count144 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %176, i32 0, i32 46, !dbg !2574
  %177 = load i32, i32* %slice_count144, align 8, !dbg !2574
  %sub145 = sub nsw i32 %177, 1, !dbg !2575
  store i32 %sub145, i32* %i, align 4, !dbg !2576
  br label %for.cond146, !dbg !2577

for.cond146:                                      ; preds = %for.inc255, %for.end
  %178 = load i32, i32* %i, align 4, !dbg !2578
  %cmp147 = icmp sge i32 %178, 0, !dbg !2581
  br i1 %cmp147, label %for.body149, label %for.end257, !dbg !2582

for.body149:                                      ; preds = %for.cond146
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fs150, metadata !2583, metadata !1706), !dbg !2585
  %179 = load i32, i32* %i, align 4, !dbg !2586
  %idxprom151 = sext i32 %179 to i64, !dbg !2587
  %180 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2587
  %slice_context152 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %180, i32 0, i32 45, !dbg !2588
  %arrayidx153 = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context152, i64 0, i64 %idxprom151, !dbg !2587
  %181 = load %struct.FFV1Context*, %struct.FFV1Context** %arrayidx153, align 8, !dbg !2587
  store %struct.FFV1Context* %181, %struct.FFV1Context** %fs150, align 8, !dbg !2585
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2589, metadata !1706), !dbg !2590
  %182 = load %struct.FFV1Context*, %struct.FFV1Context** %fs150, align 8, !dbg !2591
  %slice_damaged154 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %182, i32 0, i32 38, !dbg !2593
  %183 = load i32, i32* %slice_damaged154, align 4, !dbg !2593
  %tobool155 = icmp ne i32 %183, 0, !dbg !2591
  br i1 %tobool155, label %land.lhs.true156, label %if.end254, !dbg !2594

land.lhs.true156:                                 ; preds = %for.body149
  %184 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2595
  %last_picture157 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %184, i32 0, i32 19, !dbg !2597
  %f158 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_picture157, i32 0, i32 0, !dbg !2598
  %185 = load %struct.AVFrame*, %struct.AVFrame** %f158, align 8, !dbg !2598
  %data159 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %185, i32 0, i32 0, !dbg !2599
  %arrayidx160 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data159, i64 0, i64 0, !dbg !2595
  %186 = load i8*, i8** %arrayidx160, align 8, !dbg !2595
  %tobool161 = icmp ne i8* %186, null, !dbg !2595
  br i1 %tobool161, label %if.then162, label %if.end254, !dbg !2600

if.then162:                                       ; preds = %land.lhs.true156
  call void @llvm.dbg.declare(metadata %struct.AVPixFmtDescriptor** %desc, metadata !2601, metadata !1706), !dbg !2628
  %187 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2629
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %187, i32 0, i32 25, !dbg !2630
  %188 = load i32, i32* %pix_fmt, align 8, !dbg !2630
  %call163 = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %188), !dbg !2631
  store %struct.AVPixFmtDescriptor* %call163, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !2628
  call void @llvm.dbg.declare(metadata [4 x i8*]* %src, metadata !2632, metadata !1706), !dbg !2634
  call void @llvm.dbg.declare(metadata [4 x i8*]* %dst, metadata !2635, metadata !1706), !dbg !2636
  %189 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2637
  %last_picture164 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %189, i32 0, i32 19, !dbg !2638
  call void @ff_thread_await_progress(%struct.ThreadFrame* %last_picture164, i32 2147483647, i32 0), !dbg !2639
  store i32 0, i32* %j, align 4, !dbg !2640
  br label %for.cond165, !dbg !2642

for.cond165:                                      ; preds = %for.inc228, %if.then162
  %190 = load i32, i32* %j, align 4, !dbg !2643
  %191 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !2646
  %nb_components = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %191, i32 0, i32 1, !dbg !2647
  %192 = load i8, i8* %nb_components, align 8, !dbg !2647
  %conv166 = zext i8 %192 to i32, !dbg !2646
  %cmp167 = icmp slt i32 %190, %conv166, !dbg !2648
  br i1 %cmp167, label %for.body169, label %for.end229, !dbg !2649

for.body169:                                      ; preds = %for.cond165
  call void @llvm.dbg.declare(metadata i32* %pixshift, metadata !2650, metadata !1706), !dbg !2652
  %193 = load i32, i32* %j, align 4, !dbg !2653
  %idxprom170 = sext i32 %193 to i64, !dbg !2654
  %194 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !2654
  %comp = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %194, i32 0, i32 5, !dbg !2655
  %arrayidx171 = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp, i64 0, i64 %idxprom170, !dbg !2654
  %depth = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx171, i32 0, i32 4, !dbg !2656
  %195 = load i32, i32* %depth, align 8, !dbg !2656
  %cmp172 = icmp sgt i32 %195, 8, !dbg !2657
  %conv173 = zext i1 %cmp172 to i32, !dbg !2657
  store i32 %conv173, i32* %pixshift, align 4, !dbg !2652
  call void @llvm.dbg.declare(metadata i32* %sh, metadata !2658, metadata !1706), !dbg !2659
  %196 = load i32, i32* %j, align 4, !dbg !2660
  %cmp174 = icmp eq i32 %196, 1, !dbg !2661
  br i1 %cmp174, label %cond.true179, label %lor.lhs.false176, !dbg !2662

lor.lhs.false176:                                 ; preds = %for.body169
  %197 = load i32, i32* %j, align 4, !dbg !2663
  %cmp177 = icmp eq i32 %197, 2, !dbg !2665
  br i1 %cmp177, label %cond.true179, label %cond.false180, !dbg !2666

cond.true179:                                     ; preds = %lor.lhs.false176, %for.body169
  %198 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2667
  %chroma_h_shift = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %198, i32 0, i32 12, !dbg !2669
  %199 = load i32, i32* %chroma_h_shift, align 4, !dbg !2669
  br label %cond.end181, !dbg !2670

cond.false180:                                    ; preds = %lor.lhs.false176
  br label %cond.end181, !dbg !2671

cond.end181:                                      ; preds = %cond.false180, %cond.true179
  %cond182 = phi i32 [ %199, %cond.true179 ], [ 0, %cond.false180 ], !dbg !2673
  store i32 %cond182, i32* %sh, align 4, !dbg !2675
  call void @llvm.dbg.declare(metadata i32* %sv, metadata !2676, metadata !1706), !dbg !2677
  %200 = load i32, i32* %j, align 4, !dbg !2678
  %cmp183 = icmp eq i32 %200, 1, !dbg !2679
  br i1 %cmp183, label %cond.true188, label %lor.lhs.false185, !dbg !2680

lor.lhs.false185:                                 ; preds = %cond.end181
  %201 = load i32, i32* %j, align 4, !dbg !2681
  %cmp186 = icmp eq i32 %201, 2, !dbg !2682
  br i1 %cmp186, label %cond.true188, label %cond.false189, !dbg !2683

cond.true188:                                     ; preds = %lor.lhs.false185, %cond.end181
  %202 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2684
  %chroma_v_shift = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %202, i32 0, i32 13, !dbg !2685
  %203 = load i32, i32* %chroma_v_shift, align 8, !dbg !2685
  br label %cond.end190, !dbg !2686

cond.false189:                                    ; preds = %lor.lhs.false185
  br label %cond.end190, !dbg !2687

cond.end190:                                      ; preds = %cond.false189, %cond.true188
  %cond191 = phi i32 [ %203, %cond.true188 ], [ 0, %cond.false189 ], !dbg !2688
  store i32 %cond191, i32* %sv, align 4, !dbg !2689
  %204 = load i32, i32* %j, align 4, !dbg !2690
  %idxprom192 = sext i32 %204 to i64, !dbg !2691
  %205 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2691
  %data193 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %205, i32 0, i32 0, !dbg !2692
  %arrayidx194 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data193, i64 0, i64 %idxprom192, !dbg !2691
  %206 = load i8*, i8** %arrayidx194, align 8, !dbg !2691
  %207 = load i32, i32* %j, align 4, !dbg !2693
  %idxprom195 = sext i32 %207 to i64, !dbg !2694
  %208 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2694
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %208, i32 0, i32 1, !dbg !2695
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom195, !dbg !2694
  %209 = load i32, i32* %arrayidx196, align 4, !dbg !2694
  %210 = load %struct.FFV1Context*, %struct.FFV1Context** %fs150, align 8, !dbg !2696
  %slice_y = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %210, i32 0, i32 53, !dbg !2697
  %211 = load i32, i32* %slice_y, align 4, !dbg !2697
  %212 = load i32, i32* %sv, align 4, !dbg !2698
  %shr = ashr i32 %211, %212, !dbg !2699
  %mul197 = mul nsw i32 %209, %shr, !dbg !2700
  %idx.ext198 = sext i32 %mul197 to i64, !dbg !2701
  %add.ptr199 = getelementptr inbounds i8, i8* %206, i64 %idx.ext198, !dbg !2701
  %213 = load %struct.FFV1Context*, %struct.FFV1Context** %fs150, align 8, !dbg !2702
  %slice_x = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %213, i32 0, i32 52, !dbg !2703
  %214 = load i32, i32* %slice_x, align 8, !dbg !2703
  %215 = load i32, i32* %sh, align 4, !dbg !2704
  %shr200 = ashr i32 %214, %215, !dbg !2705
  %216 = load i32, i32* %pixshift, align 4, !dbg !2706
  %shl201 = shl i32 %shr200, %216, !dbg !2707
  %idx.ext202 = sext i32 %shl201 to i64, !dbg !2708
  %add.ptr203 = getelementptr inbounds i8, i8* %add.ptr199, i64 %idx.ext202, !dbg !2708
  %217 = load i32, i32* %j, align 4, !dbg !2709
  %idxprom204 = sext i32 %217 to i64, !dbg !2710
  %arrayidx205 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst, i64 0, i64 %idxprom204, !dbg !2710
  store i8* %add.ptr203, i8** %arrayidx205, align 8, !dbg !2711
  %218 = load i32, i32* %j, align 4, !dbg !2712
  %idxprom206 = sext i32 %218 to i64, !dbg !2713
  %219 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2713
  %last_picture207 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %219, i32 0, i32 19, !dbg !2714
  %f208 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_picture207, i32 0, i32 0, !dbg !2715
  %220 = load %struct.AVFrame*, %struct.AVFrame** %f208, align 8, !dbg !2715
  %data209 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %220, i32 0, i32 0, !dbg !2716
  %arrayidx210 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data209, i64 0, i64 %idxprom206, !dbg !2713
  %221 = load i8*, i8** %arrayidx210, align 8, !dbg !2713
  %222 = load i32, i32* %j, align 4, !dbg !2717
  %idxprom211 = sext i32 %222 to i64, !dbg !2718
  %223 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2718
  %last_picture212 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %223, i32 0, i32 19, !dbg !2719
  %f213 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_picture212, i32 0, i32 0, !dbg !2720
  %224 = load %struct.AVFrame*, %struct.AVFrame** %f213, align 8, !dbg !2720
  %linesize214 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %224, i32 0, i32 1, !dbg !2721
  %arrayidx215 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize214, i64 0, i64 %idxprom211, !dbg !2718
  %225 = load i32, i32* %arrayidx215, align 4, !dbg !2718
  %226 = load %struct.FFV1Context*, %struct.FFV1Context** %fs150, align 8, !dbg !2722
  %slice_y216 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %226, i32 0, i32 53, !dbg !2723
  %227 = load i32, i32* %slice_y216, align 4, !dbg !2723
  %228 = load i32, i32* %sv, align 4, !dbg !2724
  %shr217 = ashr i32 %227, %228, !dbg !2725
  %mul218 = mul nsw i32 %225, %shr217, !dbg !2726
  %idx.ext219 = sext i32 %mul218 to i64, !dbg !2727
  %add.ptr220 = getelementptr inbounds i8, i8* %221, i64 %idx.ext219, !dbg !2727
  %229 = load %struct.FFV1Context*, %struct.FFV1Context** %fs150, align 8, !dbg !2728
  %slice_x221 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %229, i32 0, i32 52, !dbg !2729
  %230 = load i32, i32* %slice_x221, align 8, !dbg !2729
  %231 = load i32, i32* %sh, align 4, !dbg !2730
  %shr222 = ashr i32 %230, %231, !dbg !2731
  %232 = load i32, i32* %pixshift, align 4, !dbg !2732
  %shl223 = shl i32 %shr222, %232, !dbg !2733
  %idx.ext224 = sext i32 %shl223 to i64, !dbg !2734
  %add.ptr225 = getelementptr inbounds i8, i8* %add.ptr220, i64 %idx.ext224, !dbg !2734
  %233 = load i32, i32* %j, align 4, !dbg !2735
  %idxprom226 = sext i32 %233 to i64, !dbg !2736
  %arrayidx227 = getelementptr inbounds [4 x i8*], [4 x i8*]* %src, i64 0, i64 %idxprom226, !dbg !2736
  store i8* %add.ptr225, i8** %arrayidx227, align 8, !dbg !2737
  br label %for.inc228, !dbg !2738

for.inc228:                                       ; preds = %cond.end190
  %234 = load i32, i32* %j, align 4, !dbg !2739
  %inc = add nsw i32 %234, 1, !dbg !2739
  store i32 %inc, i32* %j, align 4, !dbg !2739
  br label %for.cond165, !dbg !2741, !llvm.loop !2742

for.end229:                                       ; preds = %for.cond165
  %235 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !2744
  %flags = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %235, i32 0, i32 4, !dbg !2746
  %236 = load i64, i64* %flags, align 8, !dbg !2746
  %and230 = and i64 %236, 2, !dbg !2747
  %tobool231 = icmp ne i64 %and230, 0, !dbg !2747
  br i1 %tobool231, label %if.then236, label %lor.lhs.false232, !dbg !2748

lor.lhs.false232:                                 ; preds = %for.end229
  %237 = load %struct.AVPixFmtDescriptor*, %struct.AVPixFmtDescriptor** %desc, align 8, !dbg !2749
  %flags233 = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %237, i32 0, i32 4, !dbg !2750
  %238 = load i64, i64* %flags233, align 8, !dbg !2750
  %and234 = and i64 %238, 64, !dbg !2751
  %tobool235 = icmp ne i64 %and234, 0, !dbg !2751
  br i1 %tobool235, label %if.then236, label %if.end245, !dbg !2752

if.then236:                                       ; preds = %lor.lhs.false232, %for.end229
  %239 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2754
  %data237 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %239, i32 0, i32 0, !dbg !2756
  %arrayidx238 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data237, i64 0, i64 1, !dbg !2754
  %240 = load i8*, i8** %arrayidx238, align 8, !dbg !2754
  %arrayidx239 = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst, i64 0, i64 1, !dbg !2757
  store i8* %240, i8** %arrayidx239, align 8, !dbg !2758
  %241 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2759
  %last_picture240 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %241, i32 0, i32 19, !dbg !2760
  %f241 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_picture240, i32 0, i32 0, !dbg !2761
  %242 = load %struct.AVFrame*, %struct.AVFrame** %f241, align 8, !dbg !2761
  %data242 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %242, i32 0, i32 0, !dbg !2762
  %arrayidx243 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data242, i64 0, i64 1, !dbg !2759
  %243 = load i8*, i8** %arrayidx243, align 8, !dbg !2759
  %arrayidx244 = getelementptr inbounds [4 x i8*], [4 x i8*]* %src, i64 0, i64 1, !dbg !2763
  store i8* %243, i8** %arrayidx244, align 8, !dbg !2764
  br label %if.end245, !dbg !2765

if.end245:                                        ; preds = %if.then236, %lor.lhs.false232
  %arraydecay = getelementptr inbounds [4 x i8*], [4 x i8*]* %dst, i32 0, i32 0, !dbg !2766
  %244 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !2767
  %linesize246 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %244, i32 0, i32 1, !dbg !2768
  %arraydecay247 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize246, i32 0, i32 0, !dbg !2767
  %arraydecay248 = getelementptr inbounds [4 x i8*], [4 x i8*]* %src, i32 0, i32 0, !dbg !2769
  %245 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2770
  %last_picture249 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %245, i32 0, i32 19, !dbg !2771
  %f250 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_picture249, i32 0, i32 0, !dbg !2772
  %246 = load %struct.AVFrame*, %struct.AVFrame** %f250, align 8, !dbg !2772
  %linesize251 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %246, i32 0, i32 1, !dbg !2773
  %arraydecay252 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize251, i32 0, i32 0, !dbg !2770
  %247 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2774
  %pix_fmt253 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %247, i32 0, i32 25, !dbg !2775
  %248 = load i32, i32* %pix_fmt253, align 8, !dbg !2775
  %249 = load %struct.FFV1Context*, %struct.FFV1Context** %fs150, align 8, !dbg !2776
  %slice_width = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %249, i32 0, i32 50, !dbg !2777
  %250 = load i32, i32* %slice_width, align 8, !dbg !2777
  %251 = load %struct.FFV1Context*, %struct.FFV1Context** %fs150, align 8, !dbg !2778
  %slice_height = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %251, i32 0, i32 51, !dbg !2779
  %252 = load i32, i32* %slice_height, align 4, !dbg !2779
  call void @av_image_copy(i8** %arraydecay, i32* %arraydecay247, i8** %arraydecay248, i32* %arraydecay252, i32 %248, i32 %250, i32 %252), !dbg !2780
  br label %if.end254, !dbg !2781

if.end254:                                        ; preds = %if.end245, %land.lhs.true156, %for.body149
  br label %for.inc255, !dbg !2782

for.inc255:                                       ; preds = %if.end254
  %253 = load i32, i32* %i, align 4, !dbg !2783
  %dec256 = add nsw i32 %253, -1, !dbg !2783
  store i32 %dec256, i32* %i, align 4, !dbg !2783
  br label %for.cond146, !dbg !2785, !llvm.loop !2786

for.end257:                                       ; preds = %for.cond146
  %254 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2788
  %picture258 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %254, i32 0, i32 18, !dbg !2789
  call void @ff_thread_report_progress(%struct.ThreadFrame* %picture258, i32 2147483647, i32 0), !dbg !2790
  %255 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2791
  %picture_number = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %255, i32 0, i32 16, !dbg !2792
  %256 = load i32, i32* %picture_number, align 4, !dbg !2793
  %inc259 = add nsw i32 %256, 1, !dbg !2793
  store i32 %inc259, i32* %picture_number, align 4, !dbg !2793
  %257 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2794
  %last_picture260 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %257, i32 0, i32 19, !dbg !2796
  %f261 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %last_picture260, i32 0, i32 0, !dbg !2797
  %258 = load %struct.AVFrame*, %struct.AVFrame** %f261, align 8, !dbg !2797
  %tobool262 = icmp ne %struct.AVFrame* %258, null, !dbg !2794
  br i1 %tobool262, label %if.then263, label %if.end265, !dbg !2798

if.then263:                                       ; preds = %for.end257
  %259 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2799
  %260 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2800
  %last_picture264 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %260, i32 0, i32 19, !dbg !2801
  call void @ff_thread_release_buffer(%struct.AVCodecContext* %259, %struct.ThreadFrame* %last_picture264), !dbg !2802
  br label %if.end265, !dbg !2802

if.end265:                                        ; preds = %if.then263, %for.end257
  %261 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2803
  %cur266 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %261, i32 0, i32 21, !dbg !2804
  store %struct.AVFrame* null, %struct.AVFrame** %cur266, align 8, !dbg !2805
  %262 = load i8*, i8** %data.addr, align 8, !dbg !2806
  %263 = bitcast i8* %262 to %struct.AVFrame*, !dbg !2806
  %264 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !2808
  %picture267 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %264, i32 0, i32 18, !dbg !2809
  %f268 = getelementptr inbounds %struct.ThreadFrame, %struct.ThreadFrame* %picture267, i32 0, i32 0, !dbg !2810
  %265 = load %struct.AVFrame*, %struct.AVFrame** %f268, align 8, !dbg !2810
  %call269 = call i32 @av_frame_ref(%struct.AVFrame* %263, %struct.AVFrame* %265), !dbg !2811
  store i32 %call269, i32* %ret, align 4, !dbg !2812
  %cmp270 = icmp slt i32 %call269, 0, !dbg !2813
  br i1 %cmp270, label %if.then272, label %if.end273, !dbg !2814

if.then272:                                       ; preds = %if.end265
  %266 = load i32, i32* %ret, align 4, !dbg !2815
  store i32 %266, i32* %retval, align 4, !dbg !2816
  br label %return, !dbg !2816

if.end273:                                        ; preds = %if.end265
  %267 = load i32*, i32** %got_frame.addr, align 8, !dbg !2817
  store i32 1, i32* %267, align 4, !dbg !2818
  %268 = load i32, i32* %buf_size, align 4, !dbg !2819
  store i32 %268, i32* %retval, align 4, !dbg !2820
  br label %return, !dbg !2820

return:                                           ; preds = %if.end273, %if.then272, %if.then82, %if.then36, %if.then29, %if.then24
  %269 = load i32, i32* %retval, align 4, !dbg !2821
  ret i32 %269, !dbg !2821
}

declare i32 @ff_ffv1_close(%struct.AVCodecContext*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

declare void @av_log(i8*, i32, i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @abort() #4

declare i8* @av_memdup(i8*, i64) #2

declare %struct.AVFrame* @av_frame_alloc() #2

declare i32 @ff_ffv1_init_slice_contexts(%struct.FFV1Context*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define internal void @copy_fields(%struct.FFV1Context* %fsdst, %struct.FFV1Context* %fssrc, %struct.FFV1Context* %fsrc) #0 !dbg !2822 {
entry:
  %fsdst.addr = alloca %struct.FFV1Context*, align 8
  %fssrc.addr = alloca %struct.FFV1Context*, align 8
  %fsrc.addr = alloca %struct.FFV1Context*, align 8
  store %struct.FFV1Context* %fsdst, %struct.FFV1Context** %fsdst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fsdst.addr, metadata !2825, metadata !1706), !dbg !2826
  store %struct.FFV1Context* %fssrc, %struct.FFV1Context** %fssrc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fssrc.addr, metadata !2827, metadata !1706), !dbg !2828
  store %struct.FFV1Context* %fsrc, %struct.FFV1Context** %fsrc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fsrc.addr, metadata !2829, metadata !1706), !dbg !2830
  %0 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2831
  %version = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %0, i32 0, i32 7, !dbg !2832
  %1 = load i32, i32* %version, align 8, !dbg !2832
  %2 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2833
  %version1 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %2, i32 0, i32 7, !dbg !2834
  store i32 %1, i32* %version1, align 8, !dbg !2835
  %3 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2836
  %micro_version = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %3, i32 0, i32 8, !dbg !2837
  %4 = load i32, i32* %micro_version, align 4, !dbg !2837
  %5 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2838
  %micro_version2 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %5, i32 0, i32 8, !dbg !2839
  store i32 %4, i32* %micro_version2, align 4, !dbg !2840
  %6 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2841
  %chroma_planes = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %6, i32 0, i32 11, !dbg !2842
  %7 = load i32, i32* %chroma_planes, align 8, !dbg !2842
  %8 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2843
  %chroma_planes3 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %8, i32 0, i32 11, !dbg !2844
  store i32 %7, i32* %chroma_planes3, align 8, !dbg !2845
  %9 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2846
  %chroma_h_shift = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %9, i32 0, i32 12, !dbg !2847
  %10 = load i32, i32* %chroma_h_shift, align 4, !dbg !2847
  %11 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2848
  %chroma_h_shift4 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %11, i32 0, i32 12, !dbg !2849
  store i32 %10, i32* %chroma_h_shift4, align 4, !dbg !2850
  %12 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2851
  %chroma_v_shift = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %12, i32 0, i32 13, !dbg !2852
  %13 = load i32, i32* %chroma_v_shift, align 8, !dbg !2852
  %14 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2853
  %chroma_v_shift5 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %14, i32 0, i32 13, !dbg !2854
  store i32 %13, i32* %chroma_v_shift5, align 8, !dbg !2855
  %15 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2856
  %transparency = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %15, i32 0, i32 14, !dbg !2857
  %16 = load i32, i32* %transparency, align 4, !dbg !2857
  %17 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2858
  %transparency6 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %17, i32 0, i32 14, !dbg !2859
  store i32 %16, i32* %transparency6, align 4, !dbg !2860
  %18 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2861
  %plane_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %18, i32 0, i32 22, !dbg !2862
  %19 = load i32, i32* %plane_count, align 8, !dbg !2862
  %20 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2863
  %plane_count7 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %20, i32 0, i32 22, !dbg !2864
  store i32 %19, i32* %plane_count7, align 8, !dbg !2865
  %21 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2866
  %ac = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %21, i32 0, i32 23, !dbg !2867
  %22 = load i32, i32* %ac, align 4, !dbg !2867
  %23 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2868
  %ac8 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %23, i32 0, i32 23, !dbg !2869
  store i32 %22, i32* %ac8, align 4, !dbg !2870
  %24 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2871
  %colorspace = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %24, i32 0, i32 32, !dbg !2872
  %25 = load i32, i32* %colorspace, align 4, !dbg !2872
  %26 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2873
  %colorspace9 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %26, i32 0, i32 32, !dbg !2874
  store i32 %25, i32* %colorspace9, align 4, !dbg !2875
  %27 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2876
  %ec = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %27, i32 0, i32 36, !dbg !2877
  %28 = load i32, i32* %ec, align 4, !dbg !2877
  %29 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2878
  %ec10 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %29, i32 0, i32 36, !dbg !2879
  store i32 %28, i32* %ec10, align 4, !dbg !2880
  %30 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2881
  %intra = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %30, i32 0, i32 37, !dbg !2882
  %31 = load i32, i32* %intra, align 8, !dbg !2882
  %32 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2883
  %intra11 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %32, i32 0, i32 37, !dbg !2884
  store i32 %31, i32* %intra11, align 8, !dbg !2885
  %33 = load %struct.FFV1Context*, %struct.FFV1Context** %fssrc.addr, align 8, !dbg !2886
  %slice_damaged = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %33, i32 0, i32 38, !dbg !2887
  %34 = load i32, i32* %slice_damaged, align 4, !dbg !2887
  %35 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2888
  %slice_damaged12 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %35, i32 0, i32 38, !dbg !2889
  store i32 %34, i32* %slice_damaged12, align 4, !dbg !2890
  %36 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2891
  %key_frame_ok = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %36, i32 0, i32 39, !dbg !2892
  %37 = load i32, i32* %key_frame_ok, align 8, !dbg !2892
  %38 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2893
  %key_frame_ok13 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %38, i32 0, i32 39, !dbg !2894
  store i32 %37, i32* %key_frame_ok13, align 8, !dbg !2895
  %39 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2896
  %bits_per_raw_sample = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %39, i32 0, i32 41, !dbg !2897
  %40 = load i32, i32* %bits_per_raw_sample, align 8, !dbg !2897
  %41 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2898
  %bits_per_raw_sample14 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %41, i32 0, i32 41, !dbg !2899
  store i32 %40, i32* %bits_per_raw_sample14, align 8, !dbg !2900
  %42 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2901
  %packed_at_lsb = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %42, i32 0, i32 42, !dbg !2902
  %43 = load i32, i32* %packed_at_lsb, align 4, !dbg !2902
  %44 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2903
  %packed_at_lsb15 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %44, i32 0, i32 42, !dbg !2904
  store i32 %43, i32* %packed_at_lsb15, align 4, !dbg !2905
  %45 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2906
  %slice_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %45, i32 0, i32 46, !dbg !2907
  %46 = load i32, i32* %slice_count, align 8, !dbg !2907
  %47 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2908
  %slice_count16 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %47, i32 0, i32 46, !dbg !2909
  store i32 %46, i32* %slice_count16, align 8, !dbg !2910
  %48 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc.addr, align 8, !dbg !2911
  %version17 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %48, i32 0, i32 7, !dbg !2913
  %49 = load i32, i32* %version17, align 8, !dbg !2913
  %cmp = icmp slt i32 %49, 3, !dbg !2914
  br i1 %cmp, label %if.then, label %if.end, !dbg !2915

if.then:                                          ; preds = %entry
  %50 = load %struct.FFV1Context*, %struct.FFV1Context** %fssrc.addr, align 8, !dbg !2916
  %slice_x = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %50, i32 0, i32 52, !dbg !2918
  %51 = load i32, i32* %slice_x, align 8, !dbg !2918
  %52 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2919
  %slice_x18 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %52, i32 0, i32 52, !dbg !2920
  store i32 %51, i32* %slice_x18, align 8, !dbg !2921
  %53 = load %struct.FFV1Context*, %struct.FFV1Context** %fssrc.addr, align 8, !dbg !2922
  %slice_y = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %53, i32 0, i32 53, !dbg !2923
  %54 = load i32, i32* %slice_y, align 4, !dbg !2923
  %55 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2924
  %slice_y19 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %55, i32 0, i32 53, !dbg !2925
  store i32 %54, i32* %slice_y19, align 4, !dbg !2926
  %56 = load %struct.FFV1Context*, %struct.FFV1Context** %fssrc.addr, align 8, !dbg !2927
  %slice_width = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %56, i32 0, i32 50, !dbg !2928
  %57 = load i32, i32* %slice_width, align 8, !dbg !2928
  %58 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2929
  %slice_width20 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %58, i32 0, i32 50, !dbg !2930
  store i32 %57, i32* %slice_width20, align 8, !dbg !2931
  %59 = load %struct.FFV1Context*, %struct.FFV1Context** %fssrc.addr, align 8, !dbg !2932
  %slice_height = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %59, i32 0, i32 51, !dbg !2933
  %60 = load i32, i32* %slice_height, align 4, !dbg !2933
  %61 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst.addr, align 8, !dbg !2934
  %slice_height21 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %61, i32 0, i32 51, !dbg !2935
  store i32 %60, i32* %slice_height21, align 4, !dbg !2936
  br label %if.end, !dbg !2937

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2938
}

declare void @ff_thread_release_buffer(%struct.AVCodecContext*, %struct.ThreadFrame*) #2

declare i32 @ff_thread_ref_frame(%struct.ThreadFrame*, %struct.ThreadFrame*) #2

declare i32 @ff_ffv1_common_init(%struct.AVCodecContext*) #2

; Function Attrs: nounwind uwtable
define internal i32 @read_extra_header(%struct.FFV1Context* %f) #0 !dbg !2939 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2153, metadata !1706), !dbg !2942
  %retval = alloca i32, align 4
  %f.addr = alloca %struct.FFV1Context*, align 8
  %c = alloca %struct.RangeCoder*, align 8
  %state = alloca [32 x i8], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ret = alloca i32, align 4
  %state2 = alloca [32 x [32 x i8]], align 16
  %crc = alloca i32, align 4
  %pred = alloca i32, align 4
  %v = alloca i32, align 4
  store %struct.FFV1Context* %f, %struct.FFV1Context** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %f.addr, metadata !2946, metadata !1706), !dbg !2947
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c, metadata !2948, metadata !1706), !dbg !2949
  %0 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !2950
  %c1 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %0, i32 0, i32 2, !dbg !2951
  store %struct.RangeCoder* %c1, %struct.RangeCoder** %c, align 8, !dbg !2949
  call void @llvm.dbg.declare(metadata [32 x i8]* %state, metadata !2952, metadata !1706), !dbg !2953
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2954, metadata !1706), !dbg !2955
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2956, metadata !1706), !dbg !2957
  call void @llvm.dbg.declare(metadata i32* %k, metadata !2958, metadata !1706), !dbg !2959
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2960, metadata !1706), !dbg !2961
  call void @llvm.dbg.declare(metadata [32 x [32 x i8]]* %state2, metadata !2962, metadata !1706), !dbg !2965
  call void @llvm.dbg.declare(metadata i32* %crc, metadata !2966, metadata !1706), !dbg !2967
  store i32 0, i32* %crc, align 4, !dbg !2967
  %arraydecay = getelementptr inbounds [32 x [32 x i8]], [32 x [32 x i8]]* %state2, i32 0, i32 0, !dbg !2968
  %1 = bitcast [32 x i8]* %arraydecay to i8*, !dbg !2968
  call void @llvm.memset.p0i8.i64(i8* %1, i8 -128, i64 1024, i32 16, i1 false), !dbg !2968
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !2969
  call void @llvm.memset.p0i8.i64(i8* %arraydecay2, i8 -128, i64 32, i32 16, i1 false), !dbg !2969
  %2 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !2970
  %3 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !2971
  %avctx = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %3, i32 0, i32 1, !dbg !2972
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !2972
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 15, !dbg !2973
  %5 = load i8*, i8** %extradata, align 8, !dbg !2973
  %6 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !2974
  %avctx3 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %6, i32 0, i32 1, !dbg !2975
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx3, align 8, !dbg !2975
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 16, !dbg !2976
  %8 = load i32, i32* %extradata_size, align 8, !dbg !2976
  call void @ff_init_range_decoder(%struct.RangeCoder* %2, i8* %5, i32 %8), !dbg !2977
  %9 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !2978
  call void @ff_build_rac_states(%struct.RangeCoder* %9, i32 214748364, i32 248), !dbg !2979
  %10 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !2980
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !2981
  %call = call i32 @get_symbol(%struct.RangeCoder* %10, i8* %arraydecay4, i32 0), !dbg !2982
  %11 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !2983
  %version = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %11, i32 0, i32 7, !dbg !2984
  store i32 %call, i32* %version, align 8, !dbg !2985
  %12 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !2986
  %version5 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %12, i32 0, i32 7, !dbg !2988
  %13 = load i32, i32* %version5, align 8, !dbg !2988
  %cmp = icmp slt i32 %13, 2, !dbg !2989
  br i1 %cmp, label %if.then, label %if.end, !dbg !2990

if.then:                                          ; preds = %entry
  %14 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !2991
  %avctx6 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %14, i32 0, i32 1, !dbg !2993
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx6, align 8, !dbg !2993
  %16 = bitcast %struct.AVCodecContext* %15 to i8*, !dbg !2991
  call void (i8*, i32, i8*, ...) @av_log(i8* %16, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i32 0, i32 0)), !dbg !2994
  store i32 -1094995529, i32* %retval, align 4, !dbg !2995
  br label %return, !dbg !2995

if.end:                                           ; preds = %entry
  %17 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !2996
  %version7 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %17, i32 0, i32 7, !dbg !2998
  %18 = load i32, i32* %version7, align 8, !dbg !2998
  %cmp8 = icmp sgt i32 %18, 2, !dbg !2999
  br i1 %cmp8, label %if.then9, label %if.end16, !dbg !3000

if.then9:                                         ; preds = %if.end
  %19 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3001
  %bytestream_end = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %19, i32 0, i32 8, !dbg !3003
  %20 = load i8*, i8** %bytestream_end, align 8, !dbg !3004
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 -4, !dbg !3004
  store i8* %add.ptr, i8** %bytestream_end, align 8, !dbg !3004
  %21 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3005
  %arraydecay10 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3006
  %call11 = call i32 @get_symbol(%struct.RangeCoder* %21, i8* %arraydecay10, i32 0), !dbg !3007
  %22 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3008
  %micro_version = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %22, i32 0, i32 8, !dbg !3009
  store i32 %call11, i32* %micro_version, align 4, !dbg !3010
  %23 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3011
  %micro_version12 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %23, i32 0, i32 8, !dbg !3013
  %24 = load i32, i32* %micro_version12, align 4, !dbg !3013
  %cmp13 = icmp slt i32 %24, 0, !dbg !3014
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !3015

if.then14:                                        ; preds = %if.then9
  store i32 -1094995529, i32* %retval, align 4, !dbg !3016
  br label %return, !dbg !3016

if.end15:                                         ; preds = %if.then9
  br label %if.end16, !dbg !3017

if.end16:                                         ; preds = %if.end15, %if.end
  %25 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3018
  %arraydecay17 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3019
  %call18 = call i32 @get_symbol(%struct.RangeCoder* %25, i8* %arraydecay17, i32 0), !dbg !3020
  %26 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3021
  %ac = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %26, i32 0, i32 23, !dbg !3022
  store i32 %call18, i32* %ac, align 4, !dbg !3023
  %27 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3024
  %ac19 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %27, i32 0, i32 23, !dbg !3026
  %28 = load i32, i32* %ac19, align 4, !dbg !3026
  %cmp20 = icmp eq i32 %28, 2, !dbg !3027
  br i1 %cmp20, label %if.then21, label %if.end28, !dbg !3028

if.then21:                                        ; preds = %if.end16
  store i32 1, i32* %i, align 4, !dbg !3029
  br label %for.cond, !dbg !3032

for.cond:                                         ; preds = %for.inc, %if.then21
  %29 = load i32, i32* %i, align 4, !dbg !3033
  %cmp22 = icmp slt i32 %29, 256, !dbg !3036
  br i1 %cmp22, label %for.body, label %for.end, !dbg !3037

for.body:                                         ; preds = %for.cond
  %30 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3038
  %arraydecay23 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3039
  %call24 = call i32 @get_symbol(%struct.RangeCoder* %30, i8* %arraydecay23, i32 1), !dbg !3040
  %31 = load i32, i32* %i, align 4, !dbg !3041
  %idxprom = sext i32 %31 to i64, !dbg !3042
  %32 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3042
  %one_state = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %32, i32 0, i32 5, !dbg !3043
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %one_state, i64 0, i64 %idxprom, !dbg !3042
  %33 = load i8, i8* %arrayidx, align 1, !dbg !3042
  %conv = zext i8 %33 to i32, !dbg !3042
  %add = add nsw i32 %call24, %conv, !dbg !3044
  %conv25 = trunc i32 %add to i8, !dbg !3040
  %34 = load i32, i32* %i, align 4, !dbg !3045
  %idxprom26 = sext i32 %34 to i64, !dbg !3046
  %35 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3046
  %state_transition = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %35, i32 0, i32 29, !dbg !3047
  %arrayidx27 = getelementptr inbounds [256 x i8], [256 x i8]* %state_transition, i64 0, i64 %idxprom26, !dbg !3046
  store i8 %conv25, i8* %arrayidx27, align 1, !dbg !3048
  br label %for.inc, !dbg !3046

for.inc:                                          ; preds = %for.body
  %36 = load i32, i32* %i, align 4, !dbg !3049
  %inc = add nsw i32 %36, 1, !dbg !3049
  store i32 %inc, i32* %i, align 4, !dbg !3049
  br label %for.cond, !dbg !3051, !llvm.loop !3052

for.end:                                          ; preds = %for.cond
  br label %if.end28, !dbg !3054

if.end28:                                         ; preds = %for.end, %if.end16
  %37 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3055
  %arraydecay29 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3056
  %call30 = call i32 @get_symbol(%struct.RangeCoder* %37, i8* %arraydecay29, i32 0), !dbg !3057
  %38 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3058
  %colorspace = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %38, i32 0, i32 32, !dbg !3059
  store i32 %call30, i32* %colorspace, align 4, !dbg !3060
  %39 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3061
  %arraydecay31 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3062
  %call32 = call i32 @get_symbol(%struct.RangeCoder* %39, i8* %arraydecay31, i32 0), !dbg !3063
  %40 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3064
  %avctx33 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %40, i32 0, i32 1, !dbg !3065
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx33, align 8, !dbg !3065
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 143, !dbg !3066
  store i32 %call32, i32* %bits_per_raw_sample, align 4, !dbg !3067
  %42 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3068
  %arraydecay34 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3069
  %call35 = call i32 @get_rac(%struct.RangeCoder* %42, i8* %arraydecay34), !dbg !3070
  %43 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3071
  %chroma_planes = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %43, i32 0, i32 11, !dbg !3072
  store i32 %call35, i32* %chroma_planes, align 8, !dbg !3073
  %44 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3074
  %arraydecay36 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3075
  %call37 = call i32 @get_symbol(%struct.RangeCoder* %44, i8* %arraydecay36, i32 0), !dbg !3076
  %45 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3077
  %chroma_h_shift = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %45, i32 0, i32 12, !dbg !3078
  store i32 %call37, i32* %chroma_h_shift, align 4, !dbg !3079
  %46 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3080
  %arraydecay38 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3081
  %call39 = call i32 @get_symbol(%struct.RangeCoder* %46, i8* %arraydecay38, i32 0), !dbg !3082
  %47 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3083
  %chroma_v_shift = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %47, i32 0, i32 13, !dbg !3084
  store i32 %call39, i32* %chroma_v_shift, align 8, !dbg !3085
  %48 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3086
  %arraydecay40 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3087
  %call41 = call i32 @get_rac(%struct.RangeCoder* %48, i8* %arraydecay40), !dbg !3088
  %49 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3089
  %transparency = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %49, i32 0, i32 14, !dbg !3090
  store i32 %call41, i32* %transparency, align 4, !dbg !3091
  %50 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3092
  %chroma_planes42 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %50, i32 0, i32 11, !dbg !3093
  %51 = load i32, i32* %chroma_planes42, align 8, !dbg !3093
  %tobool = icmp ne i32 %51, 0, !dbg !3092
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !3094

lor.rhs:                                          ; preds = %if.end28
  %52 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3095
  %version43 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %52, i32 0, i32 7, !dbg !3097
  %53 = load i32, i32* %version43, align 8, !dbg !3097
  %cmp44 = icmp slt i32 %53, 4, !dbg !3098
  br label %lor.end, !dbg !3099

lor.end:                                          ; preds = %lor.rhs, %if.end28
  %54 = phi i1 [ true, %if.end28 ], [ %cmp44, %lor.rhs ]
  %lor.ext = zext i1 %54 to i32, !dbg !3100
  %add46 = add nsw i32 1, %lor.ext, !dbg !3102
  %55 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3103
  %transparency47 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %55, i32 0, i32 14, !dbg !3104
  %56 = load i32, i32* %transparency47, align 4, !dbg !3104
  %add48 = add nsw i32 %add46, %56, !dbg !3105
  %57 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3106
  %plane_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %57, i32 0, i32 22, !dbg !3107
  store i32 %add48, i32* %plane_count, align 8, !dbg !3108
  %58 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3109
  %arraydecay49 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3110
  %call50 = call i32 @get_symbol(%struct.RangeCoder* %58, i8* %arraydecay49, i32 0), !dbg !3111
  %add51 = add nsw i32 1, %call50, !dbg !3112
  %59 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3113
  %num_h_slices = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %59, i32 0, i32 49, !dbg !3114
  store i32 %add51, i32* %num_h_slices, align 4, !dbg !3115
  %60 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3116
  %arraydecay52 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3117
  %call53 = call i32 @get_symbol(%struct.RangeCoder* %60, i8* %arraydecay52, i32 0), !dbg !3118
  %add54 = add nsw i32 1, %call53, !dbg !3119
  %61 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3120
  %num_v_slices = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %61, i32 0, i32 48, !dbg !3121
  store i32 %add54, i32* %num_v_slices, align 8, !dbg !3122
  %62 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3123
  %chroma_h_shift55 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %62, i32 0, i32 12, !dbg !3125
  %63 = load i32, i32* %chroma_h_shift55, align 4, !dbg !3125
  %cmp56 = icmp ugt i32 %63, 4, !dbg !3126
  br i1 %cmp56, label %if.then61, label %lor.lhs.false, !dbg !3127

lor.lhs.false:                                    ; preds = %lor.end
  %64 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3128
  %chroma_v_shift58 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %64, i32 0, i32 13, !dbg !3130
  %65 = load i32, i32* %chroma_v_shift58, align 8, !dbg !3130
  %cmp59 = icmp ugt i32 %65, 4, !dbg !3131
  br i1 %cmp59, label %if.then61, label %if.end65, !dbg !3132

if.then61:                                        ; preds = %lor.lhs.false, %lor.end
  %66 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3133
  %avctx62 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %66, i32 0, i32 1, !dbg !3135
  %67 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx62, align 8, !dbg !3135
  %68 = bitcast %struct.AVCodecContext* %67 to i8*, !dbg !3133
  %69 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3136
  %chroma_h_shift63 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %69, i32 0, i32 12, !dbg !3137
  %70 = load i32, i32* %chroma_h_shift63, align 4, !dbg !3137
  %71 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3138
  %chroma_v_shift64 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %71, i32 0, i32 13, !dbg !3139
  %72 = load i32, i32* %chroma_v_shift64, align 8, !dbg !3139
  call void (i8*, i32, i8*, ...) @av_log(i8* %68, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i32 0, i32 0), i32 %70, i32 %72), !dbg !3140
  store i32 -1094995529, i32* %retval, align 4, !dbg !3141
  br label %return, !dbg !3141

if.end65:                                         ; preds = %lor.lhs.false
  %73 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3142
  %num_h_slices66 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %73, i32 0, i32 49, !dbg !3144
  %74 = load i32, i32* %num_h_slices66, align 4, !dbg !3144
  %75 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3145
  %width = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %75, i32 0, i32 9, !dbg !3146
  %76 = load i32, i32* %width, align 8, !dbg !3146
  %cmp67 = icmp ugt i32 %74, %76, !dbg !3147
  br i1 %cmp67, label %if.then79, label %lor.lhs.false69, !dbg !3148

lor.lhs.false69:                                  ; preds = %if.end65
  %77 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3149
  %num_h_slices70 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %77, i32 0, i32 49, !dbg !3151
  %78 = load i32, i32* %num_h_slices70, align 4, !dbg !3151
  %tobool71 = icmp ne i32 %78, 0, !dbg !3149
  br i1 %tobool71, label %lor.lhs.false72, label %if.then79, !dbg !3152

lor.lhs.false72:                                  ; preds = %lor.lhs.false69
  %79 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3153
  %num_v_slices73 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %79, i32 0, i32 48, !dbg !3154
  %80 = load i32, i32* %num_v_slices73, align 8, !dbg !3154
  %81 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3155
  %height = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %81, i32 0, i32 10, !dbg !3156
  %82 = load i32, i32* %height, align 4, !dbg !3156
  %cmp74 = icmp ugt i32 %80, %82, !dbg !3157
  br i1 %cmp74, label %if.then79, label %lor.lhs.false76, !dbg !3158

lor.lhs.false76:                                  ; preds = %lor.lhs.false72
  %83 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3159
  %num_v_slices77 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %83, i32 0, i32 48, !dbg !3160
  %84 = load i32, i32* %num_v_slices77, align 8, !dbg !3160
  %tobool78 = icmp ne i32 %84, 0, !dbg !3159
  br i1 %tobool78, label %if.end81, label %if.then79, !dbg !3161

if.then79:                                        ; preds = %lor.lhs.false76, %lor.lhs.false72, %lor.lhs.false69, %if.end65
  %85 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3162
  %avctx80 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %85, i32 0, i32 1, !dbg !3164
  %86 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx80, align 8, !dbg !3164
  %87 = bitcast %struct.AVCodecContext* %86 to i8*, !dbg !3162
  call void (i8*, i32, i8*, ...) @av_log(i8* %87, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i32 0, i32 0)), !dbg !3165
  store i32 -1094995529, i32* %retval, align 4, !dbg !3166
  br label %return, !dbg !3166

if.end81:                                         ; preds = %lor.lhs.false76
  %88 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3167
  %arraydecay82 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3168
  %call83 = call i32 @get_symbol(%struct.RangeCoder* %88, i8* %arraydecay82, i32 0), !dbg !3169
  %89 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3170
  %quant_table_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %89, i32 0, i32 44, !dbg !3171
  store i32 %call83, i32* %quant_table_count, align 4, !dbg !3172
  %90 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3173
  %quant_table_count84 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %90, i32 0, i32 44, !dbg !3175
  %91 = load i32, i32* %quant_table_count84, align 4, !dbg !3175
  %cmp85 = icmp ugt i32 %91, 8, !dbg !3176
  br i1 %cmp85, label %if.then90, label %lor.lhs.false87, !dbg !3177

lor.lhs.false87:                                  ; preds = %if.end81
  %92 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3178
  %quant_table_count88 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %92, i32 0, i32 44, !dbg !3180
  %93 = load i32, i32* %quant_table_count88, align 4, !dbg !3180
  %tobool89 = icmp ne i32 %93, 0, !dbg !3178
  br i1 %tobool89, label %if.end94, label %if.then90, !dbg !3181

if.then90:                                        ; preds = %lor.lhs.false87, %if.end81
  %94 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3182
  %avctx91 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %94, i32 0, i32 1, !dbg !3184
  %95 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx91, align 8, !dbg !3184
  %96 = bitcast %struct.AVCodecContext* %95 to i8*, !dbg !3182
  %97 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3185
  %quant_table_count92 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %97, i32 0, i32 44, !dbg !3186
  %98 = load i32, i32* %quant_table_count92, align 4, !dbg !3186
  call void (i8*, i32, i8*, ...) @av_log(i8* %96, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i32 0, i32 0), i32 %98), !dbg !3187
  %99 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3188
  %quant_table_count93 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %99, i32 0, i32 44, !dbg !3189
  store i32 0, i32* %quant_table_count93, align 4, !dbg !3190
  store i32 -1094995529, i32* %retval, align 4, !dbg !3191
  br label %return, !dbg !3191

if.end94:                                         ; preds = %lor.lhs.false87
  store i32 0, i32* %i, align 4, !dbg !3192
  br label %for.cond95, !dbg !3194

for.cond95:                                       ; preds = %for.inc114, %if.end94
  %100 = load i32, i32* %i, align 4, !dbg !3195
  %101 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3198
  %quant_table_count96 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %101, i32 0, i32 44, !dbg !3199
  %102 = load i32, i32* %quant_table_count96, align 4, !dbg !3199
  %cmp97 = icmp slt i32 %100, %102, !dbg !3200
  br i1 %cmp97, label %for.body99, label %for.end116, !dbg !3201

for.body99:                                       ; preds = %for.cond95
  %103 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3202
  %104 = load i32, i32* %i, align 4, !dbg !3204
  %idxprom100 = sext i32 %104 to i64, !dbg !3205
  %105 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3205
  %quant_tables = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %105, i32 0, i32 27, !dbg !3206
  %arrayidx101 = getelementptr inbounds [8 x [5 x [256 x i16]]], [8 x [5 x [256 x i16]]]* %quant_tables, i64 0, i64 %idxprom100, !dbg !3205
  %arraydecay102 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %arrayidx101, i32 0, i32 0, !dbg !3205
  %call103 = call i32 @read_quant_tables(%struct.RangeCoder* %103, [256 x i16]* %arraydecay102), !dbg !3207
  %106 = load i32, i32* %i, align 4, !dbg !3208
  %idxprom104 = sext i32 %106 to i64, !dbg !3209
  %107 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3209
  %context_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %107, i32 0, i32 28, !dbg !3210
  %arrayidx105 = getelementptr inbounds [8 x i32], [8 x i32]* %context_count, i64 0, i64 %idxprom104, !dbg !3209
  store i32 %call103, i32* %arrayidx105, align 4, !dbg !3211
  %108 = load i32, i32* %i, align 4, !dbg !3212
  %idxprom106 = sext i32 %108 to i64, !dbg !3214
  %109 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3214
  %context_count107 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %109, i32 0, i32 28, !dbg !3215
  %arrayidx108 = getelementptr inbounds [8 x i32], [8 x i32]* %context_count107, i64 0, i64 %idxprom106, !dbg !3214
  %110 = load i32, i32* %arrayidx108, align 4, !dbg !3214
  %cmp109 = icmp slt i32 %110, 0, !dbg !3216
  br i1 %cmp109, label %if.then111, label %if.end113, !dbg !3217

if.then111:                                       ; preds = %for.body99
  %111 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3218
  %avctx112 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %111, i32 0, i32 1, !dbg !3220
  %112 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx112, align 8, !dbg !3220
  %113 = bitcast %struct.AVCodecContext* %112 to i8*, !dbg !3218
  call void (i8*, i32, i8*, ...) @av_log(i8* %113, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i32 0, i32 0)), !dbg !3221
  store i32 -1094995529, i32* %retval, align 4, !dbg !3222
  br label %return, !dbg !3222

if.end113:                                        ; preds = %for.body99
  br label %for.inc114, !dbg !3223

for.inc114:                                       ; preds = %if.end113
  %114 = load i32, i32* %i, align 4, !dbg !3224
  %inc115 = add nsw i32 %114, 1, !dbg !3224
  store i32 %inc115, i32* %i, align 4, !dbg !3224
  br label %for.cond95, !dbg !3226, !llvm.loop !3227

for.end116:                                       ; preds = %for.cond95
  %115 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3229
  %call117 = call i32 @ff_ffv1_allocate_initial_states(%struct.FFV1Context* %115), !dbg !3231
  store i32 %call117, i32* %ret, align 4, !dbg !3232
  %cmp118 = icmp slt i32 %call117, 0, !dbg !3233
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !3234

if.then120:                                       ; preds = %for.end116
  %116 = load i32, i32* %ret, align 4, !dbg !3235
  store i32 %116, i32* %retval, align 4, !dbg !3236
  br label %return, !dbg !3236

if.end121:                                        ; preds = %for.end116
  store i32 0, i32* %i, align 4, !dbg !3237
  br label %for.cond122, !dbg !3239

for.cond122:                                      ; preds = %for.inc170, %if.end121
  %117 = load i32, i32* %i, align 4, !dbg !3240
  %118 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3243
  %quant_table_count123 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %118, i32 0, i32 44, !dbg !3244
  %119 = load i32, i32* %quant_table_count123, align 4, !dbg !3244
  %cmp124 = icmp slt i32 %117, %119, !dbg !3245
  br i1 %cmp124, label %for.body126, label %for.end172, !dbg !3246

for.body126:                                      ; preds = %for.cond122
  %120 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3247
  %arraydecay127 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3249
  %call128 = call i32 @get_rac(%struct.RangeCoder* %120, i8* %arraydecay127), !dbg !3250
  %tobool129 = icmp ne i32 %call128, 0, !dbg !3250
  br i1 %tobool129, label %if.then130, label %if.end169, !dbg !3251

if.then130:                                       ; preds = %for.body126
  store i32 0, i32* %j, align 4, !dbg !3252
  br label %for.cond131, !dbg !3255

for.cond131:                                      ; preds = %for.inc166, %if.then130
  %121 = load i32, i32* %j, align 4, !dbg !3256
  %122 = load i32, i32* %i, align 4, !dbg !3259
  %idxprom132 = sext i32 %122 to i64, !dbg !3260
  %123 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3260
  %context_count133 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %123, i32 0, i32 28, !dbg !3261
  %arrayidx134 = getelementptr inbounds [8 x i32], [8 x i32]* %context_count133, i64 0, i64 %idxprom132, !dbg !3260
  %124 = load i32, i32* %arrayidx134, align 4, !dbg !3260
  %cmp135 = icmp slt i32 %121, %124, !dbg !3262
  br i1 %cmp135, label %for.body137, label %for.end168, !dbg !3263

for.body137:                                      ; preds = %for.cond131
  store i32 0, i32* %k, align 4, !dbg !3264
  br label %for.cond138, !dbg !3266

for.cond138:                                      ; preds = %for.inc163, %for.body137
  %125 = load i32, i32* %k, align 4, !dbg !3267
  %cmp139 = icmp slt i32 %125, 32, !dbg !3270
  br i1 %cmp139, label %for.body141, label %for.end165, !dbg !3271

for.body141:                                      ; preds = %for.cond138
  call void @llvm.dbg.declare(metadata i32* %pred, metadata !3272, metadata !1706), !dbg !3274
  %126 = load i32, i32* %j, align 4, !dbg !3275
  %tobool142 = icmp ne i32 %126, 0, !dbg !3275
  br i1 %tobool142, label %cond.true, label %cond.false, !dbg !3275

cond.true:                                        ; preds = %for.body141
  %127 = load i32, i32* %k, align 4, !dbg !3276
  %idxprom143 = sext i32 %127 to i64, !dbg !3278
  %128 = load i32, i32* %j, align 4, !dbg !3279
  %sub = sub nsw i32 %128, 1, !dbg !3280
  %idxprom144 = sext i32 %sub to i64, !dbg !3278
  %129 = load i32, i32* %i, align 4, !dbg !3281
  %idxprom145 = sext i32 %129 to i64, !dbg !3278
  %130 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3278
  %initial_states = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %130, i32 0, i32 30, !dbg !3282
  %arrayidx146 = getelementptr inbounds [8 x [32 x i8]*], [8 x [32 x i8]*]* %initial_states, i64 0, i64 %idxprom145, !dbg !3278
  %131 = load [32 x i8]*, [32 x i8]** %arrayidx146, align 8, !dbg !3278
  %arrayidx147 = getelementptr inbounds [32 x i8], [32 x i8]* %131, i64 %idxprom144, !dbg !3278
  %arrayidx148 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx147, i64 0, i64 %idxprom143, !dbg !3278
  %132 = load i8, i8* %arrayidx148, align 1, !dbg !3278
  %conv149 = zext i8 %132 to i32, !dbg !3278
  br label %cond.end, !dbg !3283

cond.false:                                       ; preds = %for.body141
  br label %cond.end, !dbg !3284

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv149, %cond.true ], [ 128, %cond.false ], !dbg !3286
  store i32 %cond, i32* %pred, align 4, !dbg !3288
  %133 = load i32, i32* %pred, align 4, !dbg !3289
  %134 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3290
  %135 = load i32, i32* %k, align 4, !dbg !3291
  %idxprom150 = sext i32 %135 to i64, !dbg !3292
  %arrayidx151 = getelementptr inbounds [32 x [32 x i8]], [32 x [32 x i8]]* %state2, i64 0, i64 %idxprom150, !dbg !3292
  %arraydecay152 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx151, i32 0, i32 0, !dbg !3292
  %call153 = call i32 @get_symbol(%struct.RangeCoder* %134, i8* %arraydecay152, i32 1), !dbg !3293
  %add154 = add nsw i32 %133, %call153, !dbg !3294
  %and = and i32 %add154, 255, !dbg !3295
  %conv155 = trunc i32 %and to i8, !dbg !3296
  %136 = load i32, i32* %k, align 4, !dbg !3297
  %idxprom156 = sext i32 %136 to i64, !dbg !3298
  %137 = load i32, i32* %j, align 4, !dbg !3299
  %idxprom157 = sext i32 %137 to i64, !dbg !3298
  %138 = load i32, i32* %i, align 4, !dbg !3300
  %idxprom158 = sext i32 %138 to i64, !dbg !3298
  %139 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3298
  %initial_states159 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %139, i32 0, i32 30, !dbg !3301
  %arrayidx160 = getelementptr inbounds [8 x [32 x i8]*], [8 x [32 x i8]*]* %initial_states159, i64 0, i64 %idxprom158, !dbg !3298
  %140 = load [32 x i8]*, [32 x i8]** %arrayidx160, align 8, !dbg !3298
  %arrayidx161 = getelementptr inbounds [32 x i8], [32 x i8]* %140, i64 %idxprom157, !dbg !3298
  %arrayidx162 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx161, i64 0, i64 %idxprom156, !dbg !3298
  store i8 %conv155, i8* %arrayidx162, align 1, !dbg !3302
  br label %for.inc163, !dbg !3303

for.inc163:                                       ; preds = %cond.end
  %141 = load i32, i32* %k, align 4, !dbg !3304
  %inc164 = add nsw i32 %141, 1, !dbg !3304
  store i32 %inc164, i32* %k, align 4, !dbg !3304
  br label %for.cond138, !dbg !3306, !llvm.loop !3307

for.end165:                                       ; preds = %for.cond138
  br label %for.inc166, !dbg !3309

for.inc166:                                       ; preds = %for.end165
  %142 = load i32, i32* %j, align 4, !dbg !3311
  %inc167 = add nsw i32 %142, 1, !dbg !3311
  store i32 %inc167, i32* %j, align 4, !dbg !3311
  br label %for.cond131, !dbg !3313, !llvm.loop !3314

for.end168:                                       ; preds = %for.cond131
  br label %if.end169, !dbg !3316

if.end169:                                        ; preds = %for.end168, %for.body126
  br label %for.inc170, !dbg !3317

for.inc170:                                       ; preds = %if.end169
  %143 = load i32, i32* %i, align 4, !dbg !3319
  %inc171 = add nsw i32 %143, 1, !dbg !3319
  store i32 %inc171, i32* %i, align 4, !dbg !3319
  br label %for.cond122, !dbg !3321, !llvm.loop !3322

for.end172:                                       ; preds = %for.cond122
  %144 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3324
  %version173 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %144, i32 0, i32 7, !dbg !3326
  %145 = load i32, i32* %version173, align 8, !dbg !3326
  %cmp174 = icmp sgt i32 %145, 2, !dbg !3327
  br i1 %cmp174, label %if.then176, label %if.end186, !dbg !3328

if.then176:                                       ; preds = %for.end172
  %146 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3329
  %arraydecay177 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3331
  %call178 = call i32 @get_symbol(%struct.RangeCoder* %146, i8* %arraydecay177, i32 0), !dbg !3332
  %147 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3333
  %ec = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %147, i32 0, i32 36, !dbg !3334
  store i32 %call178, i32* %ec, align 4, !dbg !3335
  %148 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3336
  %micro_version179 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %148, i32 0, i32 8, !dbg !3338
  %149 = load i32, i32* %micro_version179, align 4, !dbg !3338
  %cmp180 = icmp sgt i32 %149, 2, !dbg !3339
  br i1 %cmp180, label %if.then182, label %if.end185, !dbg !3340

if.then182:                                       ; preds = %if.then176
  %150 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !3341
  %arraydecay183 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3342
  %call184 = call i32 @get_symbol(%struct.RangeCoder* %150, i8* %arraydecay183, i32 0), !dbg !3343
  %151 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3344
  %intra = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %151, i32 0, i32 37, !dbg !3345
  store i32 %call184, i32* %intra, align 8, !dbg !3346
  br label %if.end185, !dbg !3344

if.end185:                                        ; preds = %if.then182, %if.then176
  br label %if.end186, !dbg !3347

if.end186:                                        ; preds = %if.end185, %for.end172
  %152 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3348
  %version187 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %152, i32 0, i32 7, !dbg !3349
  %153 = load i32, i32* %version187, align 8, !dbg !3349
  %cmp188 = icmp sgt i32 %153, 2, !dbg !3350
  br i1 %cmp188, label %if.then190, label %if.end214, !dbg !3351

if.then190:                                       ; preds = %if.end186
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3352, metadata !1706), !dbg !3353
  %call191 = call i32* @av_crc_get_table(i32 3), !dbg !3354
  %154 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3355
  %avctx192 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %154, i32 0, i32 1, !dbg !3356
  %155 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx192, align 8, !dbg !3356
  %extradata193 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %155, i32 0, i32 15, !dbg !3357
  %156 = load i8*, i8** %extradata193, align 8, !dbg !3357
  %157 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3358
  %avctx194 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %157, i32 0, i32 1, !dbg !3359
  %158 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx194, align 8, !dbg !3359
  %extradata_size195 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %158, i32 0, i32 16, !dbg !3360
  %159 = load i32, i32* %extradata_size195, align 8, !dbg !3360
  %conv196 = sext i32 %159 to i64, !dbg !3358
  %call197 = call i32 @av_crc(i32* %call191, i32 0, i8* %156, i64 %conv196) #11, !dbg !3361
  store i32 %call197, i32* %v, align 4, !dbg !3363
  %160 = load i32, i32* %v, align 4, !dbg !3364
  %tobool198 = icmp ne i32 %160, 0, !dbg !3364
  br i1 %tobool198, label %if.then204, label %lor.lhs.false199, !dbg !3366

lor.lhs.false199:                                 ; preds = %if.then190
  %161 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3367
  %avctx200 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %161, i32 0, i32 1, !dbg !3369
  %162 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx200, align 8, !dbg !3369
  %extradata_size201 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %162, i32 0, i32 16, !dbg !3370
  %163 = load i32, i32* %extradata_size201, align 8, !dbg !3370
  %cmp202 = icmp slt i32 %163, 4, !dbg !3371
  br i1 %cmp202, label %if.then204, label %if.end206, !dbg !3372

if.then204:                                       ; preds = %lor.lhs.false199, %if.then190
  %164 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3373
  %avctx205 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %164, i32 0, i32 1, !dbg !3375
  %165 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx205, align 8, !dbg !3375
  %166 = bitcast %struct.AVCodecContext* %165 to i8*, !dbg !3373
  %167 = load i32, i32* %v, align 4, !dbg !3376
  call void (i8*, i32, i8*, ...) @av_log(i8* %166, i32 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i32 0, i32 0), i32 %167), !dbg !3377
  store i32 -1094995529, i32* %retval, align 4, !dbg !3378
  br label %return, !dbg !3378

if.end206:                                        ; preds = %lor.lhs.false199
  %168 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3379
  %avctx207 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %168, i32 0, i32 1, !dbg !3380
  %169 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx207, align 8, !dbg !3380
  %extradata208 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %169, i32 0, i32 15, !dbg !3381
  %170 = load i8*, i8** %extradata208, align 8, !dbg !3381
  %171 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3382
  %avctx209 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %171, i32 0, i32 1, !dbg !3383
  %172 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx209, align 8, !dbg !3383
  %extradata_size210 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %172, i32 0, i32 16, !dbg !3384
  %173 = load i32, i32* %extradata_size210, align 8, !dbg !3384
  %idx.ext = sext i32 %173 to i64, !dbg !3385
  %add.ptr211 = getelementptr inbounds i8, i8* %170, i64 %idx.ext, !dbg !3385
  %add.ptr212 = getelementptr inbounds i8, i8* %add.ptr211, i64 -4, !dbg !3386
  %174 = bitcast i8* %add.ptr212 to %union.unaligned_32*, !dbg !3387
  %l = bitcast %union.unaligned_32* %174 to i32*, !dbg !3387
  %175 = load i32, i32* %l, align 1, !dbg !3387
  store i32 %175, i32* %x.addr.i, align 4, !dbg !3388
  %176 = load i32, i32* %x.addr.i, align 4, !dbg !3389
  %shl.i = shl i32 %176, 8, !dbg !3390
  %and.i = and i32 %shl.i, 65280, !dbg !3391
  %177 = load i32, i32* %x.addr.i, align 4, !dbg !3392
  %shr.i = lshr i32 %177, 8, !dbg !3393
  %and1.i = and i32 %shr.i, 255, !dbg !3394
  %or.i = or i32 %and.i, %and1.i, !dbg !3395
  %shl2.i = shl i32 %or.i, 16, !dbg !3396
  %178 = load i32, i32* %x.addr.i, align 4, !dbg !3397
  %shr3.i = lshr i32 %178, 16, !dbg !3398
  %shl4.i = shl i32 %shr3.i, 8, !dbg !3399
  %and5.i = and i32 %shl4.i, 65280, !dbg !3400
  %179 = load i32, i32* %x.addr.i, align 4, !dbg !3401
  %shr6.i = lshr i32 %179, 16, !dbg !3402
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !3403
  %and8.i = and i32 %shr7.i, 255, !dbg !3404
  %or9.i = or i32 %and5.i, %and8.i, !dbg !3405
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !3406
  store i32 %or10.i, i32* %crc, align 4, !dbg !3407
  br label %if.end214, !dbg !3408

if.end214:                                        ; preds = %if.end206, %if.end186
  %180 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3409
  %avctx215 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %180, i32 0, i32 1, !dbg !3411
  %181 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx215, align 8, !dbg !3411
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %181, i32 0, i32 134, !dbg !3412
  %182 = load i32, i32* %debug, align 4, !dbg !3412
  %and216 = and i32 %182, 1, !dbg !3413
  %tobool217 = icmp ne i32 %and216, 0, !dbg !3413
  br i1 %tobool217, label %if.then218, label %if.end235, !dbg !3414

if.then218:                                       ; preds = %if.end214
  %183 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3415
  %avctx219 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %183, i32 0, i32 1, !dbg !3416
  %184 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx219, align 8, !dbg !3416
  %185 = bitcast %struct.AVCodecContext* %184 to i8*, !dbg !3415
  %186 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3417
  %version220 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %186, i32 0, i32 7, !dbg !3418
  %187 = load i32, i32* %version220, align 8, !dbg !3418
  %188 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3419
  %micro_version221 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %188, i32 0, i32 8, !dbg !3420
  %189 = load i32, i32* %micro_version221, align 4, !dbg !3420
  %190 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3421
  %ac222 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %190, i32 0, i32 23, !dbg !3422
  %191 = load i32, i32* %ac222, align 4, !dbg !3422
  %192 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3423
  %colorspace223 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %192, i32 0, i32 32, !dbg !3424
  %193 = load i32, i32* %colorspace223, align 4, !dbg !3424
  %194 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3425
  %avctx224 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %194, i32 0, i32 1, !dbg !3426
  %195 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx224, align 8, !dbg !3426
  %bits_per_raw_sample225 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %195, i32 0, i32 143, !dbg !3427
  %196 = load i32, i32* %bits_per_raw_sample225, align 4, !dbg !3427
  %197 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3428
  %chroma_planes226 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %197, i32 0, i32 11, !dbg !3429
  %198 = load i32, i32* %chroma_planes226, align 8, !dbg !3429
  %199 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3430
  %chroma_h_shift227 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %199, i32 0, i32 12, !dbg !3431
  %200 = load i32, i32* %chroma_h_shift227, align 4, !dbg !3431
  %201 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3432
  %chroma_v_shift228 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %201, i32 0, i32 13, !dbg !3433
  %202 = load i32, i32* %chroma_v_shift228, align 8, !dbg !3433
  %203 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3434
  %transparency229 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %203, i32 0, i32 14, !dbg !3435
  %204 = load i32, i32* %transparency229, align 4, !dbg !3435
  %205 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3436
  %num_h_slices230 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %205, i32 0, i32 49, !dbg !3437
  %206 = load i32, i32* %num_h_slices230, align 4, !dbg !3437
  %207 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3438
  %num_v_slices231 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %207, i32 0, i32 48, !dbg !3439
  %208 = load i32, i32* %num_v_slices231, align 8, !dbg !3439
  %209 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3440
  %quant_table_count232 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %209, i32 0, i32 44, !dbg !3441
  %210 = load i32, i32* %quant_table_count232, align 4, !dbg !3441
  %211 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3442
  %ec233 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %211, i32 0, i32 36, !dbg !3443
  %212 = load i32, i32* %ec233, align 4, !dbg !3443
  %213 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !3444
  %intra234 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %213, i32 0, i32 37, !dbg !3445
  %214 = load i32, i32* %intra234, align 8, !dbg !3445
  %215 = load i32, i32* %crc, align 4, !dbg !3446
  call void (i8*, i32, i8*, ...) @av_log(i8* %185, i32 48, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.13, i32 0, i32 0), i32 %187, i32 %189, i32 %191, i32 %193, i32 %196, i32 %198, i32 %200, i32 %202, i32 %204, i32 %206, i32 %208, i32 %210, i32 %212, i32 %214, i32 %215), !dbg !3447
  br label %if.end235, !dbg !3447

if.end235:                                        ; preds = %if.then218, %if.end214
  store i32 0, i32* %retval, align 4, !dbg !3448
  br label %return, !dbg !3448

return:                                           ; preds = %if.end235, %if.then204, %if.then120, %if.then111, %if.then90, %if.then79, %if.then61, %if.then14, %if.then
  %216 = load i32, i32* %retval, align 4, !dbg !3449
  ret i32 %216, !dbg !3449
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

declare void @ff_init_range_decoder(%struct.RangeCoder*, i8*, i32) #2

declare void @ff_build_rac_states(%struct.RangeCoder*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_symbol(%struct.RangeCoder* %c, i8* %state, i32 %is_signed) #6 !dbg !3450 {
entry:
  %c.addr = alloca %struct.RangeCoder*, align 8
  %state.addr = alloca i8*, align 8
  %is_signed.addr = alloca i32, align 4
  store %struct.RangeCoder* %c, %struct.RangeCoder** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.addr, metadata !3453, metadata !1706), !dbg !3454
  store i8* %state, i8** %state.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr, metadata !3455, metadata !1706), !dbg !3456
  store i32 %is_signed, i32* %is_signed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_signed.addr, metadata !3457, metadata !1706), !dbg !3458
  %0 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3459
  %1 = load i8*, i8** %state.addr, align 8, !dbg !3460
  %2 = load i32, i32* %is_signed.addr, align 4, !dbg !3461
  %call = call i32 @get_symbol_inline(%struct.RangeCoder* %0, i8* %1, i32 %2), !dbg !3462
  ret i32 %call, !dbg !3463
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_rac(%struct.RangeCoder* %c, i8* %state) #7 !dbg !3464 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.RangeCoder*, align 8
  %state.addr = alloca i8*, align 8
  %range1 = alloca i32, align 4
  store %struct.RangeCoder* %c, %struct.RangeCoder** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.addr, metadata !3468, metadata !1706), !dbg !3469
  store i8* %state, i8** %state.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr, metadata !3470, metadata !1706), !dbg !3471
  call void @llvm.dbg.declare(metadata i32* %range1, metadata !3472, metadata !1706), !dbg !3473
  %0 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3474
  %range = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %0, i32 0, i32 1, !dbg !3475
  %1 = load i32, i32* %range, align 4, !dbg !3475
  %2 = load i8*, i8** %state.addr, align 8, !dbg !3476
  %3 = load i8, i8* %2, align 1, !dbg !3477
  %conv = zext i8 %3 to i32, !dbg !3478
  %mul = mul nsw i32 %1, %conv, !dbg !3479
  %shr = ashr i32 %mul, 8, !dbg !3480
  store i32 %shr, i32* %range1, align 4, !dbg !3473
  %4 = load i32, i32* %range1, align 4, !dbg !3481
  %5 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3482
  %range2 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %5, i32 0, i32 1, !dbg !3483
  %6 = load i32, i32* %range2, align 4, !dbg !3484
  %sub = sub nsw i32 %6, %4, !dbg !3484
  store i32 %sub, i32* %range2, align 4, !dbg !3484
  %7 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3485
  %low = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %7, i32 0, i32 0, !dbg !3487
  %8 = load i32, i32* %low, align 8, !dbg !3487
  %9 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3488
  %range3 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %9, i32 0, i32 1, !dbg !3489
  %10 = load i32, i32* %range3, align 4, !dbg !3489
  %cmp = icmp slt i32 %8, %10, !dbg !3490
  br i1 %cmp, label %if.then, label %if.else, !dbg !3491

if.then:                                          ; preds = %entry
  %11 = load i8*, i8** %state.addr, align 8, !dbg !3492
  %12 = load i8, i8* %11, align 1, !dbg !3494
  %idxprom = zext i8 %12 to i64, !dbg !3495
  %13 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3495
  %zero_state = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %13, i32 0, i32 4, !dbg !3496
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %zero_state, i64 0, i64 %idxprom, !dbg !3495
  %14 = load i8, i8* %arrayidx, align 1, !dbg !3495
  %15 = load i8*, i8** %state.addr, align 8, !dbg !3497
  store i8 %14, i8* %15, align 1, !dbg !3498
  %16 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3499
  call void @refill(%struct.RangeCoder* %16), !dbg !3500
  store i32 0, i32* %retval, align 4, !dbg !3501
  br label %return, !dbg !3501

if.else:                                          ; preds = %entry
  %17 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3502
  %range5 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %17, i32 0, i32 1, !dbg !3504
  %18 = load i32, i32* %range5, align 4, !dbg !3504
  %19 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3505
  %low6 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %19, i32 0, i32 0, !dbg !3506
  %20 = load i32, i32* %low6, align 8, !dbg !3507
  %sub7 = sub nsw i32 %20, %18, !dbg !3507
  store i32 %sub7, i32* %low6, align 8, !dbg !3507
  %21 = load i8*, i8** %state.addr, align 8, !dbg !3508
  %22 = load i8, i8* %21, align 1, !dbg !3509
  %idxprom8 = zext i8 %22 to i64, !dbg !3510
  %23 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3510
  %one_state = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %23, i32 0, i32 5, !dbg !3511
  %arrayidx9 = getelementptr inbounds [256 x i8], [256 x i8]* %one_state, i64 0, i64 %idxprom8, !dbg !3510
  %24 = load i8, i8* %arrayidx9, align 1, !dbg !3510
  %25 = load i8*, i8** %state.addr, align 8, !dbg !3512
  store i8 %24, i8* %25, align 1, !dbg !3513
  %26 = load i32, i32* %range1, align 4, !dbg !3514
  %27 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3515
  %range10 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %27, i32 0, i32 1, !dbg !3516
  store i32 %26, i32* %range10, align 4, !dbg !3517
  %28 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3518
  call void @refill(%struct.RangeCoder* %28), !dbg !3519
  store i32 1, i32* %retval, align 4, !dbg !3520
  br label %return, !dbg !3520

return:                                           ; preds = %if.else, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !3521
  ret i32 %29, !dbg !3521
}

; Function Attrs: nounwind uwtable
define internal i32 @read_quant_tables(%struct.RangeCoder* %c, [256 x i16]* %quant_table) #0 !dbg !3522 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.RangeCoder*, align 8
  %quant_table.addr = alloca [256 x i16]*, align 8
  %i = alloca i32, align 4
  %context_count = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.RangeCoder* %c, %struct.RangeCoder** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.addr, metadata !3527, metadata !1706), !dbg !3528
  store [256 x i16]* %quant_table, [256 x i16]** %quant_table.addr, align 8
  call void @llvm.dbg.declare(metadata [256 x i16]** %quant_table.addr, metadata !3529, metadata !1706), !dbg !3530
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3531, metadata !1706), !dbg !3532
  call void @llvm.dbg.declare(metadata i32* %context_count, metadata !3533, metadata !1706), !dbg !3534
  store i32 1, i32* %context_count, align 4, !dbg !3534
  store i32 0, i32* %i, align 4, !dbg !3535
  br label %for.cond, !dbg !3537

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3538
  %cmp = icmp slt i32 %0, 5, !dbg !3541
  br i1 %cmp, label %for.body, label %for.end, !dbg !3542

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3543, metadata !1706), !dbg !3545
  %1 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3546
  %2 = load i32, i32* %i, align 4, !dbg !3547
  %idxprom = sext i32 %2 to i64, !dbg !3548
  %3 = load [256 x i16]*, [256 x i16]** %quant_table.addr, align 8, !dbg !3548
  %arrayidx = getelementptr inbounds [256 x i16], [256 x i16]* %3, i64 %idxprom, !dbg !3548
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx, i32 0, i32 0, !dbg !3548
  %4 = load i32, i32* %context_count, align 4, !dbg !3549
  %call = call i32 @read_quant_table(%struct.RangeCoder* %1, i16* %arraydecay, i32 %4), !dbg !3550
  store i32 %call, i32* %ret, align 4, !dbg !3545
  %5 = load i32, i32* %ret, align 4, !dbg !3551
  %cmp1 = icmp slt i32 %5, 0, !dbg !3553
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3554

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %ret, align 4, !dbg !3555
  store i32 %6, i32* %retval, align 4, !dbg !3556
  br label %return, !dbg !3556

if.end:                                           ; preds = %for.body
  %7 = load i32, i32* %ret, align 4, !dbg !3557
  %8 = load i32, i32* %context_count, align 4, !dbg !3558
  %mul = mul nsw i32 %8, %7, !dbg !3558
  store i32 %mul, i32* %context_count, align 4, !dbg !3558
  %9 = load i32, i32* %context_count, align 4, !dbg !3559
  %cmp2 = icmp ugt i32 %9, 32768, !dbg !3561
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3562

if.then3:                                         ; preds = %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !3563
  br label %return, !dbg !3563

if.end4:                                          ; preds = %if.end
  br label %for.inc, !dbg !3565

for.inc:                                          ; preds = %if.end4
  %10 = load i32, i32* %i, align 4, !dbg !3566
  %inc = add nsw i32 %10, 1, !dbg !3566
  store i32 %inc, i32* %i, align 4, !dbg !3566
  br label %for.cond, !dbg !3568, !llvm.loop !3569

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %context_count, align 4, !dbg !3571
  %add = add nsw i32 %11, 1, !dbg !3572
  %div = sdiv i32 %add, 2, !dbg !3573
  store i32 %div, i32* %retval, align 4, !dbg !3574
  br label %return, !dbg !3574

return:                                           ; preds = %for.end, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !3575
  ret i32 %12, !dbg !3575
}

declare i32 @ff_ffv1_allocate_initial_states(%struct.FFV1Context*) #2

; Function Attrs: nounwind readonly
declare i32 @av_crc(i32*, i32, i8*, i64) #8

declare i32* @av_crc_get_table(i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_symbol_inline(%struct.RangeCoder* %c, i8* %state, i32 %is_signed) #7 !dbg !3576 {
entry:
  %retval.i83 = alloca i32, align 4
  %c.addr.i84 = alloca %struct.RangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.addr.i84, metadata !3468, metadata !1706), !dbg !3577
  %state.addr.i85 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr.i85, metadata !3470, metadata !1706), !dbg !3582
  %range1.i86 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %range1.i86, metadata !3472, metadata !1706), !dbg !3583
  %retval.i57 = alloca i32, align 4
  %c.addr.i58 = alloca %struct.RangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.addr.i58, metadata !3468, metadata !1706), !dbg !3584
  %state.addr.i59 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr.i59, metadata !3470, metadata !1706), !dbg !3589
  %range1.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %range1.i60, metadata !3472, metadata !1706), !dbg !3590
  %retval.i31 = alloca i32, align 4
  %c.addr.i32 = alloca %struct.RangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.addr.i32, metadata !3468, metadata !1706), !dbg !3591
  %state.addr.i33 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr.i33, metadata !3470, metadata !1706), !dbg !3593
  %range1.i34 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %range1.i34, metadata !3472, metadata !1706), !dbg !3594
  %retval.i = alloca i32, align 4
  %c.addr.i = alloca %struct.RangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.addr.i, metadata !3468, metadata !1706), !dbg !3595
  %state.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr.i, metadata !3470, metadata !1706), !dbg !3597
  %range1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %range1.i, metadata !3472, metadata !1706), !dbg !3598
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.RangeCoder*, align 8
  %state.addr = alloca i8*, align 8
  %is_signed.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %e = alloca i32, align 4
  %a = alloca i32, align 4
  store %struct.RangeCoder* %c, %struct.RangeCoder** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.addr, metadata !3599, metadata !1706), !dbg !3600
  store i8* %state, i8** %state.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %state.addr, metadata !3601, metadata !1706), !dbg !3602
  store i32 %is_signed, i32* %is_signed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_signed.addr, metadata !3603, metadata !1706), !dbg !3604
  %0 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3605
  %1 = load i8*, i8** %state.addr, align 8, !dbg !3606
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0, !dbg !3607
  store %struct.RangeCoder* %0, %struct.RangeCoder** %c.addr.i, align 8, !dbg !3608
  store i8* %add.ptr, i8** %state.addr.i, align 8, !dbg !3608
  %2 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i, align 8, !dbg !3609
  %range.i = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %2, i32 0, i32 1, !dbg !3610
  %3 = load i32, i32* %range.i, align 4, !dbg !3610
  %4 = load i8*, i8** %state.addr.i, align 8, !dbg !3611
  %5 = load i8, i8* %4, align 1, !dbg !3612
  %conv.i = zext i8 %5 to i32, !dbg !3613
  %mul.i = mul nsw i32 %3, %conv.i, !dbg !3614
  %shr.i = ashr i32 %mul.i, 8, !dbg !3615
  store i32 %shr.i, i32* %range1.i, align 4, !dbg !3598
  %6 = load i32, i32* %range1.i, align 4, !dbg !3616
  %7 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i, align 8, !dbg !3617
  %range2.i = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %7, i32 0, i32 1, !dbg !3618
  %8 = load i32, i32* %range2.i, align 4, !dbg !3619
  %sub.i = sub nsw i32 %8, %6, !dbg !3619
  store i32 %sub.i, i32* %range2.i, align 4, !dbg !3619
  %9 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i, align 8, !dbg !3620
  %low.i = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %9, i32 0, i32 0, !dbg !3621
  %10 = load i32, i32* %low.i, align 8, !dbg !3621
  %11 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i, align 8, !dbg !3622
  %range3.i = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %11, i32 0, i32 1, !dbg !3623
  %12 = load i32, i32* %range3.i, align 4, !dbg !3623
  %cmp.i = icmp slt i32 %10, %12, !dbg !3624
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !3625

if.then.i:                                        ; preds = %entry
  %13 = load i8*, i8** %state.addr.i, align 8, !dbg !3626
  %14 = load i8, i8* %13, align 1, !dbg !3627
  %idxprom.i = zext i8 %14 to i64, !dbg !3628
  %15 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i, align 8, !dbg !3628
  %zero_state.i = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %15, i32 0, i32 4, !dbg !3629
  %arrayidx.i = getelementptr inbounds [256 x i8], [256 x i8]* %zero_state.i, i64 0, i64 %idxprom.i, !dbg !3628
  %16 = load i8, i8* %arrayidx.i, align 1, !dbg !3628
  %17 = load i8*, i8** %state.addr.i, align 8, !dbg !3630
  store i8 %16, i8* %17, align 1, !dbg !3631
  %18 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i, align 8, !dbg !3632
  call void @refill(%struct.RangeCoder* %18) #12, !dbg !3633
  store i32 0, i32* %retval.i, align 4, !dbg !3634
  br label %get_rac.exit, !dbg !3634

if.else.i:                                        ; preds = %entry
  %19 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i, align 8, !dbg !3635
  %range5.i = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %19, i32 0, i32 1, !dbg !3636
  %20 = load i32, i32* %range5.i, align 4, !dbg !3636
  %21 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i, align 8, !dbg !3637
  %low6.i = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %21, i32 0, i32 0, !dbg !3638
  %22 = load i32, i32* %low6.i, align 8, !dbg !3639
  %sub7.i = sub nsw i32 %22, %20, !dbg !3639
  store i32 %sub7.i, i32* %low6.i, align 8, !dbg !3639
  %23 = load i8*, i8** %state.addr.i, align 8, !dbg !3640
  %24 = load i8, i8* %23, align 1, !dbg !3641
  %idxprom8.i = zext i8 %24 to i64, !dbg !3642
  %25 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i, align 8, !dbg !3642
  %one_state.i = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %25, i32 0, i32 5, !dbg !3643
  %arrayidx9.i = getelementptr inbounds [256 x i8], [256 x i8]* %one_state.i, i64 0, i64 %idxprom8.i, !dbg !3642
  %26 = load i8, i8* %arrayidx9.i, align 1, !dbg !3642
  %27 = load i8*, i8** %state.addr.i, align 8, !dbg !3644
  store i8 %26, i8* %27, align 1, !dbg !3645
  %28 = load i32, i32* %range1.i, align 4, !dbg !3646
  %29 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i, align 8, !dbg !3647
  %range10.i = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %29, i32 0, i32 1, !dbg !3648
  store i32 %28, i32* %range10.i, align 4, !dbg !3649
  %30 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i, align 8, !dbg !3650
  call void @refill(%struct.RangeCoder* %30) #12, !dbg !3651
  store i32 1, i32* %retval.i, align 4, !dbg !3652
  br label %get_rac.exit, !dbg !3652

get_rac.exit:                                     ; preds = %if.then.i, %if.else.i
  %31 = load i32, i32* %retval.i, align 4, !dbg !3653
  %tobool = icmp ne i32 %31, 0, !dbg !3608
  br i1 %tobool, label %if.then, label %if.else, !dbg !3654

if.then:                                          ; preds = %get_rac.exit
  store i32 0, i32* %retval, align 4, !dbg !3655
  br label %return, !dbg !3655

if.else:                                          ; preds = %get_rac.exit
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3656, metadata !1706), !dbg !3657
  call void @llvm.dbg.declare(metadata i32* %e, metadata !3658, metadata !1706), !dbg !3659
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3660, metadata !1706), !dbg !3661
  store i32 0, i32* %e, align 4, !dbg !3662
  br label %while.cond, !dbg !3663

while.cond:                                       ; preds = %if.end, %if.else
  %32 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3664
  %33 = load i8*, i8** %state.addr, align 8, !dbg !3666
  %add.ptr1 = getelementptr inbounds i8, i8* %33, i64 1, !dbg !3667
  %34 = load i32, i32* %e, align 4, !dbg !3668
  %cmp = icmp sgt i32 %34, 9, !dbg !3669
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3670

cond.true:                                        ; preds = %while.cond
  br label %cond.end, !dbg !3671

cond.false:                                       ; preds = %while.cond
  %35 = load i32, i32* %e, align 4, !dbg !3673
  br label %cond.end, !dbg !3675

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 9, %cond.true ], [ %35, %cond.false ], !dbg !3676
  %idx.ext = sext i32 %cond to i64, !dbg !3677
  %add.ptr2 = getelementptr inbounds i8, i8* %add.ptr1, i64 %idx.ext, !dbg !3677
  store %struct.RangeCoder* %32, %struct.RangeCoder** %c.addr.i32, align 8, !dbg !3678
  store i8* %add.ptr2, i8** %state.addr.i33, align 8, !dbg !3678
  %36 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i32, align 8, !dbg !3679
  %range.i35 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %36, i32 0, i32 1, !dbg !3680
  %37 = load i32, i32* %range.i35, align 4, !dbg !3680
  %38 = load i8*, i8** %state.addr.i33, align 8, !dbg !3681
  %39 = load i8, i8* %38, align 1, !dbg !3682
  %conv.i36 = zext i8 %39 to i32, !dbg !3683
  %mul.i37 = mul nsw i32 %37, %conv.i36, !dbg !3684
  %shr.i38 = ashr i32 %mul.i37, 8, !dbg !3685
  store i32 %shr.i38, i32* %range1.i34, align 4, !dbg !3594
  %40 = load i32, i32* %range1.i34, align 4, !dbg !3686
  %41 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i32, align 8, !dbg !3687
  %range2.i39 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %41, i32 0, i32 1, !dbg !3688
  %42 = load i32, i32* %range2.i39, align 4, !dbg !3689
  %sub.i40 = sub nsw i32 %42, %40, !dbg !3689
  store i32 %sub.i40, i32* %range2.i39, align 4, !dbg !3689
  %43 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i32, align 8, !dbg !3690
  %low.i41 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %43, i32 0, i32 0, !dbg !3691
  %44 = load i32, i32* %low.i41, align 8, !dbg !3691
  %45 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i32, align 8, !dbg !3692
  %range3.i42 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %45, i32 0, i32 1, !dbg !3693
  %46 = load i32, i32* %range3.i42, align 4, !dbg !3693
  %cmp.i43 = icmp slt i32 %44, %46, !dbg !3694
  br i1 %cmp.i43, label %if.then.i47, label %if.else.i55, !dbg !3695

if.then.i47:                                      ; preds = %cond.end
  %47 = load i8*, i8** %state.addr.i33, align 8, !dbg !3696
  %48 = load i8, i8* %47, align 1, !dbg !3697
  %idxprom.i44 = zext i8 %48 to i64, !dbg !3698
  %49 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i32, align 8, !dbg !3698
  %zero_state.i45 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %49, i32 0, i32 4, !dbg !3699
  %arrayidx.i46 = getelementptr inbounds [256 x i8], [256 x i8]* %zero_state.i45, i64 0, i64 %idxprom.i44, !dbg !3698
  %50 = load i8, i8* %arrayidx.i46, align 1, !dbg !3698
  %51 = load i8*, i8** %state.addr.i33, align 8, !dbg !3700
  store i8 %50, i8* %51, align 1, !dbg !3701
  %52 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i32, align 8, !dbg !3702
  call void @refill(%struct.RangeCoder* %52) #12, !dbg !3703
  store i32 0, i32* %retval.i31, align 4, !dbg !3704
  br label %get_rac.exit56, !dbg !3704

if.else.i55:                                      ; preds = %cond.end
  %53 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i32, align 8, !dbg !3705
  %range5.i48 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %53, i32 0, i32 1, !dbg !3706
  %54 = load i32, i32* %range5.i48, align 4, !dbg !3706
  %55 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i32, align 8, !dbg !3707
  %low6.i49 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %55, i32 0, i32 0, !dbg !3708
  %56 = load i32, i32* %low6.i49, align 8, !dbg !3709
  %sub7.i50 = sub nsw i32 %56, %54, !dbg !3709
  store i32 %sub7.i50, i32* %low6.i49, align 8, !dbg !3709
  %57 = load i8*, i8** %state.addr.i33, align 8, !dbg !3710
  %58 = load i8, i8* %57, align 1, !dbg !3711
  %idxprom8.i51 = zext i8 %58 to i64, !dbg !3712
  %59 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i32, align 8, !dbg !3712
  %one_state.i52 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %59, i32 0, i32 5, !dbg !3713
  %arrayidx9.i53 = getelementptr inbounds [256 x i8], [256 x i8]* %one_state.i52, i64 0, i64 %idxprom8.i51, !dbg !3712
  %60 = load i8, i8* %arrayidx9.i53, align 1, !dbg !3712
  %61 = load i8*, i8** %state.addr.i33, align 8, !dbg !3714
  store i8 %60, i8* %61, align 1, !dbg !3715
  %62 = load i32, i32* %range1.i34, align 4, !dbg !3716
  %63 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i32, align 8, !dbg !3717
  %range10.i54 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %63, i32 0, i32 1, !dbg !3718
  store i32 %62, i32* %range10.i54, align 4, !dbg !3719
  %64 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i32, align 8, !dbg !3720
  call void @refill(%struct.RangeCoder* %64) #12, !dbg !3721
  store i32 1, i32* %retval.i31, align 4, !dbg !3722
  br label %get_rac.exit56, !dbg !3722

get_rac.exit56:                                   ; preds = %if.then.i47, %if.else.i55
  %65 = load i32, i32* %retval.i31, align 4, !dbg !3723
  %tobool4 = icmp ne i32 %65, 0, !dbg !3724
  br i1 %tobool4, label %while.body, label %while.end, !dbg !3724

while.body:                                       ; preds = %get_rac.exit56
  %66 = load i32, i32* %e, align 4, !dbg !3725
  %inc = add nsw i32 %66, 1, !dbg !3725
  store i32 %inc, i32* %e, align 4, !dbg !3725
  %67 = load i32, i32* %e, align 4, !dbg !3727
  %cmp5 = icmp sgt i32 %67, 31, !dbg !3729
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !3730

if.then6:                                         ; preds = %while.body
  store i32 -1094995529, i32* %retval, align 4, !dbg !3731
  br label %return, !dbg !3731

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !3732, !llvm.loop !3734

while.end:                                        ; preds = %get_rac.exit56
  store i32 1, i32* %a, align 4, !dbg !3735
  %68 = load i32, i32* %e, align 4, !dbg !3736
  %sub = sub nsw i32 %68, 1, !dbg !3737
  store i32 %sub, i32* %i, align 4, !dbg !3738
  br label %for.cond, !dbg !3739

for.cond:                                         ; preds = %for.inc, %while.end
  %69 = load i32, i32* %i, align 4, !dbg !3740
  %cmp7 = icmp sge i32 %69, 0, !dbg !3742
  br i1 %cmp7, label %for.body, label %for.end, !dbg !3743

for.body:                                         ; preds = %for.cond
  %70 = load i32, i32* %a, align 4, !dbg !3744
  %71 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3745
  %72 = load i8*, i8** %state.addr, align 8, !dbg !3746
  %add.ptr8 = getelementptr inbounds i8, i8* %72, i64 22, !dbg !3747
  %73 = load i32, i32* %i, align 4, !dbg !3748
  %cmp9 = icmp sgt i32 %73, 9, !dbg !3749
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !3750

cond.true10:                                      ; preds = %for.body
  br label %cond.end12, !dbg !3751

cond.false11:                                     ; preds = %for.body
  %74 = load i32, i32* %i, align 4, !dbg !3752
  br label %cond.end12, !dbg !3754

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond13 = phi i32 [ 9, %cond.true10 ], [ %74, %cond.false11 ], !dbg !3755
  %idx.ext14 = sext i32 %cond13 to i64, !dbg !3756
  %add.ptr15 = getelementptr inbounds i8, i8* %add.ptr8, i64 %idx.ext14, !dbg !3756
  store %struct.RangeCoder* %71, %struct.RangeCoder** %c.addr.i58, align 8, !dbg !3757
  store i8* %add.ptr15, i8** %state.addr.i59, align 8, !dbg !3757
  %75 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i58, align 8, !dbg !3758
  %range.i61 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %75, i32 0, i32 1, !dbg !3759
  %76 = load i32, i32* %range.i61, align 4, !dbg !3759
  %77 = load i8*, i8** %state.addr.i59, align 8, !dbg !3760
  %78 = load i8, i8* %77, align 1, !dbg !3761
  %conv.i62 = zext i8 %78 to i32, !dbg !3762
  %mul.i63 = mul nsw i32 %76, %conv.i62, !dbg !3763
  %shr.i64 = ashr i32 %mul.i63, 8, !dbg !3764
  store i32 %shr.i64, i32* %range1.i60, align 4, !dbg !3590
  %79 = load i32, i32* %range1.i60, align 4, !dbg !3765
  %80 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i58, align 8, !dbg !3766
  %range2.i65 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %80, i32 0, i32 1, !dbg !3767
  %81 = load i32, i32* %range2.i65, align 4, !dbg !3768
  %sub.i66 = sub nsw i32 %81, %79, !dbg !3768
  store i32 %sub.i66, i32* %range2.i65, align 4, !dbg !3768
  %82 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i58, align 8, !dbg !3769
  %low.i67 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %82, i32 0, i32 0, !dbg !3770
  %83 = load i32, i32* %low.i67, align 8, !dbg !3770
  %84 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i58, align 8, !dbg !3771
  %range3.i68 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %84, i32 0, i32 1, !dbg !3772
  %85 = load i32, i32* %range3.i68, align 4, !dbg !3772
  %cmp.i69 = icmp slt i32 %83, %85, !dbg !3773
  br i1 %cmp.i69, label %if.then.i73, label %if.else.i81, !dbg !3774

if.then.i73:                                      ; preds = %cond.end12
  %86 = load i8*, i8** %state.addr.i59, align 8, !dbg !3775
  %87 = load i8, i8* %86, align 1, !dbg !3776
  %idxprom.i70 = zext i8 %87 to i64, !dbg !3777
  %88 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i58, align 8, !dbg !3777
  %zero_state.i71 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %88, i32 0, i32 4, !dbg !3778
  %arrayidx.i72 = getelementptr inbounds [256 x i8], [256 x i8]* %zero_state.i71, i64 0, i64 %idxprom.i70, !dbg !3777
  %89 = load i8, i8* %arrayidx.i72, align 1, !dbg !3777
  %90 = load i8*, i8** %state.addr.i59, align 8, !dbg !3779
  store i8 %89, i8* %90, align 1, !dbg !3780
  %91 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i58, align 8, !dbg !3781
  call void @refill(%struct.RangeCoder* %91) #12, !dbg !3782
  store i32 0, i32* %retval.i57, align 4, !dbg !3783
  br label %get_rac.exit82, !dbg !3783

if.else.i81:                                      ; preds = %cond.end12
  %92 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i58, align 8, !dbg !3784
  %range5.i74 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %92, i32 0, i32 1, !dbg !3785
  %93 = load i32, i32* %range5.i74, align 4, !dbg !3785
  %94 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i58, align 8, !dbg !3786
  %low6.i75 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %94, i32 0, i32 0, !dbg !3787
  %95 = load i32, i32* %low6.i75, align 8, !dbg !3788
  %sub7.i76 = sub nsw i32 %95, %93, !dbg !3788
  store i32 %sub7.i76, i32* %low6.i75, align 8, !dbg !3788
  %96 = load i8*, i8** %state.addr.i59, align 8, !dbg !3789
  %97 = load i8, i8* %96, align 1, !dbg !3790
  %idxprom8.i77 = zext i8 %97 to i64, !dbg !3791
  %98 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i58, align 8, !dbg !3791
  %one_state.i78 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %98, i32 0, i32 5, !dbg !3792
  %arrayidx9.i79 = getelementptr inbounds [256 x i8], [256 x i8]* %one_state.i78, i64 0, i64 %idxprom8.i77, !dbg !3791
  %99 = load i8, i8* %arrayidx9.i79, align 1, !dbg !3791
  %100 = load i8*, i8** %state.addr.i59, align 8, !dbg !3793
  store i8 %99, i8* %100, align 1, !dbg !3794
  %101 = load i32, i32* %range1.i60, align 4, !dbg !3795
  %102 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i58, align 8, !dbg !3796
  %range10.i80 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %102, i32 0, i32 1, !dbg !3797
  store i32 %101, i32* %range10.i80, align 4, !dbg !3798
  %103 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i58, align 8, !dbg !3799
  call void @refill(%struct.RangeCoder* %103) #12, !dbg !3800
  store i32 1, i32* %retval.i57, align 4, !dbg !3801
  br label %get_rac.exit82, !dbg !3801

get_rac.exit82:                                   ; preds = %if.then.i73, %if.else.i81
  %104 = load i32, i32* %retval.i57, align 4, !dbg !3802
  %add = add i32 %70, %104, !dbg !3803
  %105 = load i32, i32* %a, align 4, !dbg !3804
  %add17 = add i32 %105, %add, !dbg !3804
  store i32 %add17, i32* %a, align 4, !dbg !3804
  br label %for.inc, !dbg !3805

for.inc:                                          ; preds = %get_rac.exit82
  %106 = load i32, i32* %i, align 4, !dbg !3806
  %dec = add nsw i32 %106, -1, !dbg !3806
  store i32 %dec, i32* %i, align 4, !dbg !3806
  br label %for.cond, !dbg !3807, !llvm.loop !3808

for.end:                                          ; preds = %for.cond
  %107 = load i32, i32* %is_signed.addr, align 4, !dbg !3810
  %tobool18 = icmp ne i32 %107, 0, !dbg !3810
  br i1 %tobool18, label %land.rhs, label %land.end, !dbg !3811

land.rhs:                                         ; preds = %for.end
  %108 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3812
  %109 = load i8*, i8** %state.addr, align 8, !dbg !3813
  %add.ptr19 = getelementptr inbounds i8, i8* %109, i64 11, !dbg !3814
  %110 = load i32, i32* %e, align 4, !dbg !3815
  %cmp20 = icmp sgt i32 %110, 10, !dbg !3816
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !3817

cond.true21:                                      ; preds = %land.rhs
  br label %cond.end23, !dbg !3818

cond.false22:                                     ; preds = %land.rhs
  %111 = load i32, i32* %e, align 4, !dbg !3819
  br label %cond.end23, !dbg !3820

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32 [ 10, %cond.true21 ], [ %111, %cond.false22 ], !dbg !3821
  %idx.ext25 = sext i32 %cond24 to i64, !dbg !3822
  %add.ptr26 = getelementptr inbounds i8, i8* %add.ptr19, i64 %idx.ext25, !dbg !3822
  store %struct.RangeCoder* %108, %struct.RangeCoder** %c.addr.i84, align 8, !dbg !3823
  store i8* %add.ptr26, i8** %state.addr.i85, align 8, !dbg !3823
  %112 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i84, align 8, !dbg !3824
  %range.i87 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %112, i32 0, i32 1, !dbg !3825
  %113 = load i32, i32* %range.i87, align 4, !dbg !3825
  %114 = load i8*, i8** %state.addr.i85, align 8, !dbg !3826
  %115 = load i8, i8* %114, align 1, !dbg !3827
  %conv.i88 = zext i8 %115 to i32, !dbg !3828
  %mul.i89 = mul nsw i32 %113, %conv.i88, !dbg !3829
  %shr.i90 = ashr i32 %mul.i89, 8, !dbg !3830
  store i32 %shr.i90, i32* %range1.i86, align 4, !dbg !3583
  %116 = load i32, i32* %range1.i86, align 4, !dbg !3831
  %117 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i84, align 8, !dbg !3832
  %range2.i91 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %117, i32 0, i32 1, !dbg !3833
  %118 = load i32, i32* %range2.i91, align 4, !dbg !3834
  %sub.i92 = sub nsw i32 %118, %116, !dbg !3834
  store i32 %sub.i92, i32* %range2.i91, align 4, !dbg !3834
  %119 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i84, align 8, !dbg !3835
  %low.i93 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %119, i32 0, i32 0, !dbg !3836
  %120 = load i32, i32* %low.i93, align 8, !dbg !3836
  %121 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i84, align 8, !dbg !3837
  %range3.i94 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %121, i32 0, i32 1, !dbg !3838
  %122 = load i32, i32* %range3.i94, align 4, !dbg !3838
  %cmp.i95 = icmp slt i32 %120, %122, !dbg !3839
  br i1 %cmp.i95, label %if.then.i99, label %if.else.i107, !dbg !3840

if.then.i99:                                      ; preds = %cond.end23
  %123 = load i8*, i8** %state.addr.i85, align 8, !dbg !3841
  %124 = load i8, i8* %123, align 1, !dbg !3842
  %idxprom.i96 = zext i8 %124 to i64, !dbg !3843
  %125 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i84, align 8, !dbg !3843
  %zero_state.i97 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %125, i32 0, i32 4, !dbg !3844
  %arrayidx.i98 = getelementptr inbounds [256 x i8], [256 x i8]* %zero_state.i97, i64 0, i64 %idxprom.i96, !dbg !3843
  %126 = load i8, i8* %arrayidx.i98, align 1, !dbg !3843
  %127 = load i8*, i8** %state.addr.i85, align 8, !dbg !3845
  store i8 %126, i8* %127, align 1, !dbg !3846
  %128 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i84, align 8, !dbg !3847
  call void @refill(%struct.RangeCoder* %128) #12, !dbg !3848
  store i32 0, i32* %retval.i83, align 4, !dbg !3849
  br label %get_rac.exit108, !dbg !3849

if.else.i107:                                     ; preds = %cond.end23
  %129 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i84, align 8, !dbg !3850
  %range5.i100 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %129, i32 0, i32 1, !dbg !3851
  %130 = load i32, i32* %range5.i100, align 4, !dbg !3851
  %131 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i84, align 8, !dbg !3852
  %low6.i101 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %131, i32 0, i32 0, !dbg !3853
  %132 = load i32, i32* %low6.i101, align 8, !dbg !3854
  %sub7.i102 = sub nsw i32 %132, %130, !dbg !3854
  store i32 %sub7.i102, i32* %low6.i101, align 8, !dbg !3854
  %133 = load i8*, i8** %state.addr.i85, align 8, !dbg !3855
  %134 = load i8, i8* %133, align 1, !dbg !3856
  %idxprom8.i103 = zext i8 %134 to i64, !dbg !3857
  %135 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i84, align 8, !dbg !3857
  %one_state.i104 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %135, i32 0, i32 5, !dbg !3858
  %arrayidx9.i105 = getelementptr inbounds [256 x i8], [256 x i8]* %one_state.i104, i64 0, i64 %idxprom8.i103, !dbg !3857
  %136 = load i8, i8* %arrayidx9.i105, align 1, !dbg !3857
  %137 = load i8*, i8** %state.addr.i85, align 8, !dbg !3859
  store i8 %136, i8* %137, align 1, !dbg !3860
  %138 = load i32, i32* %range1.i86, align 4, !dbg !3861
  %139 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i84, align 8, !dbg !3862
  %range10.i106 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %139, i32 0, i32 1, !dbg !3863
  store i32 %138, i32* %range10.i106, align 4, !dbg !3864
  %140 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr.i84, align 8, !dbg !3865
  call void @refill(%struct.RangeCoder* %140) #12, !dbg !3866
  store i32 1, i32* %retval.i83, align 4, !dbg !3867
  br label %get_rac.exit108, !dbg !3867

get_rac.exit108:                                  ; preds = %if.then.i99, %if.else.i107
  %141 = load i32, i32* %retval.i83, align 4, !dbg !3868
  %tobool28 = icmp ne i32 %141, 0, !dbg !3869
  br label %land.end

land.end:                                         ; preds = %get_rac.exit108, %for.end
  %142 = phi i1 [ false, %for.end ], [ %tobool28, %get_rac.exit108 ]
  %land.ext = zext i1 %142 to i32, !dbg !3870
  %sub29 = sub nsw i32 0, %land.ext, !dbg !3871
  store i32 %sub29, i32* %e, align 4, !dbg !3872
  %143 = load i32, i32* %a, align 4, !dbg !3873
  %144 = load i32, i32* %e, align 4, !dbg !3874
  %xor = xor i32 %143, %144, !dbg !3875
  %145 = load i32, i32* %e, align 4, !dbg !3876
  %sub30 = sub i32 %xor, %145, !dbg !3877
  store i32 %sub30, i32* %retval, align 4, !dbg !3878
  br label %return, !dbg !3878

return:                                           ; preds = %land.end, %if.then6, %if.then
  %146 = load i32, i32* %retval, align 4, !dbg !3879
  ret i32 %146, !dbg !3879
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @refill(%struct.RangeCoder* %c) #7 !dbg !3880 {
entry:
  %c.addr = alloca %struct.RangeCoder*, align 8
  store %struct.RangeCoder* %c, %struct.RangeCoder** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.addr, metadata !3883, metadata !1706), !dbg !3884
  %0 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3885
  %range = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %0, i32 0, i32 1, !dbg !3887
  %1 = load i32, i32* %range, align 4, !dbg !3887
  %cmp = icmp slt i32 %1, 256, !dbg !3888
  br i1 %cmp, label %if.then, label %if.end8, !dbg !3889

if.then:                                          ; preds = %entry
  %2 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3890
  %range1 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %2, i32 0, i32 1, !dbg !3892
  %3 = load i32, i32* %range1, align 4, !dbg !3893
  %shl = shl i32 %3, 8, !dbg !3893
  store i32 %shl, i32* %range1, align 4, !dbg !3893
  %4 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3894
  %low = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %4, i32 0, i32 0, !dbg !3895
  %5 = load i32, i32* %low, align 8, !dbg !3896
  %shl2 = shl i32 %5, 8, !dbg !3896
  store i32 %shl2, i32* %low, align 8, !dbg !3896
  %6 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3897
  %bytestream = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %6, i32 0, i32 7, !dbg !3899
  %7 = load i8*, i8** %bytestream, align 8, !dbg !3899
  %8 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3900
  %bytestream_end = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %8, i32 0, i32 8, !dbg !3901
  %9 = load i8*, i8** %bytestream_end, align 8, !dbg !3901
  %cmp3 = icmp ult i8* %7, %9, !dbg !3902
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !3903

if.then4:                                         ; preds = %if.then
  %10 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3904
  %bytestream5 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %10, i32 0, i32 7, !dbg !3906
  %11 = load i8*, i8** %bytestream5, align 8, !dbg !3906
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 0, !dbg !3904
  %12 = load i8, i8* %arrayidx, align 1, !dbg !3904
  %conv = zext i8 %12 to i32, !dbg !3904
  %13 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3907
  %low6 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %13, i32 0, i32 0, !dbg !3908
  %14 = load i32, i32* %low6, align 8, !dbg !3909
  %add = add nsw i32 %14, %conv, !dbg !3909
  store i32 %add, i32* %low6, align 8, !dbg !3909
  %15 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3910
  %bytestream7 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %15, i32 0, i32 7, !dbg !3911
  %16 = load i8*, i8** %bytestream7, align 8, !dbg !3912
  %incdec.ptr = getelementptr inbounds i8, i8* %16, i32 1, !dbg !3912
  store i8* %incdec.ptr, i8** %bytestream7, align 8, !dbg !3912
  br label %if.end, !dbg !3913

if.else:                                          ; preds = %if.then
  %17 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3914
  %overread = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %17, i32 0, i32 9, !dbg !3915
  %18 = load i32, i32* %overread, align 8, !dbg !3916
  %inc = add nsw i32 %18, 1, !dbg !3916
  store i32 %inc, i32* %overread, align 8, !dbg !3916
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end8, !dbg !3917

if.end8:                                          ; preds = %if.end, %entry
  ret void, !dbg !3918
}

; Function Attrs: nounwind uwtable
define internal i32 @read_quant_table(%struct.RangeCoder* %c, i16* %quant_table, i32 %scale) #0 !dbg !3919 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.RangeCoder*, align 8
  %quant_table.addr = alloca i16*, align 8
  %scale.addr = alloca i32, align 4
  %v = alloca i32, align 4
  %i = alloca i32, align 4
  %state = alloca [32 x i8], align 16
  %len = alloca i32, align 4
  store %struct.RangeCoder* %c, %struct.RangeCoder** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.addr, metadata !3922, metadata !1706), !dbg !3923
  store i16* %quant_table, i16** %quant_table.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %quant_table.addr, metadata !3924, metadata !1706), !dbg !3925
  store i32 %scale, i32* %scale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale.addr, metadata !3926, metadata !1706), !dbg !3927
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3928, metadata !1706), !dbg !3929
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3930, metadata !1706), !dbg !3931
  store i32 0, i32* %i, align 4, !dbg !3931
  call void @llvm.dbg.declare(metadata [32 x i8]* %state, metadata !3932, metadata !1706), !dbg !3933
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3934
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 -128, i64 32, i32 16, i1 false), !dbg !3934
  store i32 0, i32* %v, align 4, !dbg !3935
  br label %for.cond, !dbg !3937

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3938
  %cmp = icmp slt i32 %0, 128, !dbg !3941
  br i1 %cmp, label %for.body, label %for.end, !dbg !3942

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3943, metadata !1706), !dbg !3945
  %1 = load %struct.RangeCoder*, %struct.RangeCoder** %c.addr, align 8, !dbg !3946
  %arraydecay1 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !3947
  %call = call i32 @get_symbol(%struct.RangeCoder* %1, i8* %arraydecay1, i32 0), !dbg !3948
  %add = add i32 %call, 1, !dbg !3949
  store i32 %add, i32* %len, align 4, !dbg !3945
  %2 = load i32, i32* %len, align 4, !dbg !3950
  %3 = load i32, i32* %i, align 4, !dbg !3952
  %sub = sub nsw i32 128, %3, !dbg !3953
  %cmp2 = icmp ugt i32 %2, %sub, !dbg !3954
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !3955

lor.lhs.false:                                    ; preds = %for.body
  %4 = load i32, i32* %len, align 4, !dbg !3956
  %tobool = icmp ne i32 %4, 0, !dbg !3956
  br i1 %tobool, label %if.end, label %if.then, !dbg !3958

if.then:                                          ; preds = %lor.lhs.false, %for.body
  store i32 -1094995529, i32* %retval, align 4, !dbg !3959
  br label %return, !dbg !3959

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond, !dbg !3960

while.cond:                                       ; preds = %while.body, %if.end
  %5 = load i32, i32* %len, align 4, !dbg !3961
  %dec = add i32 %5, -1, !dbg !3961
  store i32 %dec, i32* %len, align 4, !dbg !3961
  %tobool3 = icmp ne i32 %5, 0, !dbg !3963
  br i1 %tobool3, label %while.body, label %while.end, !dbg !3963

while.body:                                       ; preds = %while.cond
  %6 = load i32, i32* %scale.addr, align 4, !dbg !3964
  %7 = load i32, i32* %v, align 4, !dbg !3966
  %mul = mul nsw i32 %6, %7, !dbg !3967
  %conv = trunc i32 %mul to i16, !dbg !3964
  %8 = load i32, i32* %i, align 4, !dbg !3968
  %idxprom = sext i32 %8 to i64, !dbg !3969
  %9 = load i16*, i16** %quant_table.addr, align 8, !dbg !3969
  %arrayidx = getelementptr inbounds i16, i16* %9, i64 %idxprom, !dbg !3969
  store i16 %conv, i16* %arrayidx, align 2, !dbg !3970
  %10 = load i32, i32* %i, align 4, !dbg !3971
  %inc = add nsw i32 %10, 1, !dbg !3971
  store i32 %inc, i32* %i, align 4, !dbg !3971
  br label %while.cond, !dbg !3972, !llvm.loop !3974

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !3975

for.inc:                                          ; preds = %while.end
  %11 = load i32, i32* %v, align 4, !dbg !3976
  %inc4 = add nsw i32 %11, 1, !dbg !3976
  store i32 %inc4, i32* %v, align 4, !dbg !3976
  br label %for.cond, !dbg !3978, !llvm.loop !3979

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %i, align 4, !dbg !3981
  br label %for.cond5, !dbg !3983

for.cond5:                                        ; preds = %for.inc17, %for.end
  %12 = load i32, i32* %i, align 4, !dbg !3984
  %cmp6 = icmp slt i32 %12, 128, !dbg !3987
  br i1 %cmp6, label %for.body8, label %for.end19, !dbg !3988

for.body8:                                        ; preds = %for.cond5
  %13 = load i32, i32* %i, align 4, !dbg !3989
  %idxprom9 = sext i32 %13 to i64, !dbg !3990
  %14 = load i16*, i16** %quant_table.addr, align 8, !dbg !3990
  %arrayidx10 = getelementptr inbounds i16, i16* %14, i64 %idxprom9, !dbg !3990
  %15 = load i16, i16* %arrayidx10, align 2, !dbg !3990
  %conv11 = sext i16 %15 to i32, !dbg !3990
  %sub12 = sub nsw i32 0, %conv11, !dbg !3991
  %conv13 = trunc i32 %sub12 to i16, !dbg !3991
  %16 = load i32, i32* %i, align 4, !dbg !3992
  %sub14 = sub nsw i32 256, %16, !dbg !3993
  %idxprom15 = sext i32 %sub14 to i64, !dbg !3994
  %17 = load i16*, i16** %quant_table.addr, align 8, !dbg !3994
  %arrayidx16 = getelementptr inbounds i16, i16* %17, i64 %idxprom15, !dbg !3994
  store i16 %conv13, i16* %arrayidx16, align 2, !dbg !3995
  br label %for.inc17, !dbg !3994

for.inc17:                                        ; preds = %for.body8
  %18 = load i32, i32* %i, align 4, !dbg !3996
  %inc18 = add nsw i32 %18, 1, !dbg !3996
  store i32 %inc18, i32* %i, align 4, !dbg !3996
  br label %for.cond5, !dbg !3998, !llvm.loop !3999

for.end19:                                        ; preds = %for.cond5
  %19 = load i16*, i16** %quant_table.addr, align 8, !dbg !4001
  %arrayidx20 = getelementptr inbounds i16, i16* %19, i64 127, !dbg !4001
  %20 = load i16, i16* %arrayidx20, align 2, !dbg !4001
  %conv21 = sext i16 %20 to i32, !dbg !4001
  %sub22 = sub nsw i32 0, %conv21, !dbg !4002
  %conv23 = trunc i32 %sub22 to i16, !dbg !4002
  %21 = load i16*, i16** %quant_table.addr, align 8, !dbg !4003
  %arrayidx24 = getelementptr inbounds i16, i16* %21, i64 128, !dbg !4003
  store i16 %conv23, i16* %arrayidx24, align 2, !dbg !4004
  %22 = load i32, i32* %v, align 4, !dbg !4005
  %mul25 = mul nsw i32 2, %22, !dbg !4006
  %sub26 = sub nsw i32 %mul25, 1, !dbg !4007
  store i32 %sub26, i32* %retval, align 4, !dbg !4008
  br label %return, !dbg !4008

return:                                           ; preds = %for.end19, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !4009
  ret i32 %23, !dbg !4009
}

; Function Attrs: nounwind uwtable
define internal i32 @read_header(%struct.FFV1Context* %f) #0 !dbg !4010 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca %struct.FFV1Context*, align 8
  %state = alloca [32 x i8], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %context_count = alloca i32, align 4
  %c = alloca %struct.RangeCoder*, align 8
  %chroma_planes = alloca i32, align 4
  %chroma_h_shift = alloca i32, align 4
  %chroma_v_shift = alloca i32, align 4
  %transparency = alloca i32, align 4
  %colorspace = alloca i32, align 4
  %bits_per_raw_sample = alloca i32, align 4
  %v = alloca i32, align 4
  %st = alloca i32, align 4
  %p = alloca i8*, align 8
  %trailer = alloca i32, align 4
  %size = alloca i32, align 4
  %fs = alloca %struct.FFV1Context*, align 8
  %p764 = alloca %struct.PlaneContext*, align 8
  %idx = alloca i32, align 4
  store %struct.FFV1Context* %f, %struct.FFV1Context** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %f.addr, metadata !4011, metadata !1706), !dbg !4012
  call void @llvm.dbg.declare(metadata [32 x i8]* %state, metadata !4013, metadata !1706), !dbg !4014
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4015, metadata !1706), !dbg !4016
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4017, metadata !1706), !dbg !4018
  call void @llvm.dbg.declare(metadata i32* %context_count, metadata !4019, metadata !1706), !dbg !4020
  store i32 -1, i32* %context_count, align 4, !dbg !4020
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c, metadata !4021, metadata !1706), !dbg !4022
  %0 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4023
  %slice_context = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %0, i32 0, i32 45, !dbg !4024
  %arrayidx = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context, i64 0, i64 0, !dbg !4023
  %1 = load %struct.FFV1Context*, %struct.FFV1Context** %arrayidx, align 8, !dbg !4023
  %c1 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %1, i32 0, i32 2, !dbg !4025
  store %struct.RangeCoder* %c1, %struct.RangeCoder** %c, align 8, !dbg !4022
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !4026
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 -128, i64 32, i32 16, i1 false), !dbg !4026
  %2 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4027
  %version = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %2, i32 0, i32 7, !dbg !4029
  %3 = load i32, i32* %version, align 8, !dbg !4029
  %cmp = icmp slt i32 %3, 2, !dbg !4030
  br i1 %cmp, label %if.then, label %if.end96, !dbg !4031

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %chroma_planes, metadata !4032, metadata !1706), !dbg !4034
  call void @llvm.dbg.declare(metadata i32* %chroma_h_shift, metadata !4035, metadata !1706), !dbg !4036
  call void @llvm.dbg.declare(metadata i32* %chroma_v_shift, metadata !4037, metadata !1706), !dbg !4038
  call void @llvm.dbg.declare(metadata i32* %transparency, metadata !4039, metadata !1706), !dbg !4040
  call void @llvm.dbg.declare(metadata i32* %colorspace, metadata !4041, metadata !1706), !dbg !4042
  call void @llvm.dbg.declare(metadata i32* %bits_per_raw_sample, metadata !4043, metadata !1706), !dbg !4044
  call void @llvm.dbg.declare(metadata i32* %v, metadata !4045, metadata !1706), !dbg !4046
  %4 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !4047
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !4048
  %call = call i32 @get_symbol(%struct.RangeCoder* %4, i8* %arraydecay2, i32 0), !dbg !4049
  store i32 %call, i32* %v, align 4, !dbg !4046
  %5 = load i32, i32* %v, align 4, !dbg !4050
  %cmp3 = icmp uge i32 %5, 2, !dbg !4052
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !4053

if.then4:                                         ; preds = %if.then
  %6 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4054
  %avctx = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %6, i32 0, i32 1, !dbg !4056
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !4056
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !4054
  %9 = load i32, i32* %v, align 4, !dbg !4057
  call void (i8*, i32, i8*, ...) @av_log(i8* %8, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22, i32 0, i32 0), i32 %9), !dbg !4058
  store i32 -1094995529, i32* %retval, align 4, !dbg !4059
  br label %return, !dbg !4059

if.end:                                           ; preds = %if.then
  %10 = load i32, i32* %v, align 4, !dbg !4060
  %11 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4061
  %version5 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %11, i32 0, i32 7, !dbg !4062
  store i32 %10, i32* %version5, align 8, !dbg !4063
  %12 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !4064
  %arraydecay6 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !4065
  %call7 = call i32 @get_symbol(%struct.RangeCoder* %12, i8* %arraydecay6, i32 0), !dbg !4066
  %13 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4067
  %ac = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %13, i32 0, i32 23, !dbg !4068
  store i32 %call7, i32* %ac, align 4, !dbg !4069
  %14 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4070
  %ac8 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %14, i32 0, i32 23, !dbg !4072
  %15 = load i32, i32* %ac8, align 4, !dbg !4072
  %cmp9 = icmp eq i32 %15, 2, !dbg !4073
  br i1 %cmp9, label %if.then10, label %if.end25, !dbg !4074

if.then10:                                        ; preds = %if.end
  store i32 1, i32* %i, align 4, !dbg !4075
  br label %for.cond, !dbg !4078

for.cond:                                         ; preds = %for.inc, %if.then10
  %16 = load i32, i32* %i, align 4, !dbg !4079
  %cmp11 = icmp slt i32 %16, 256, !dbg !4082
  br i1 %cmp11, label %for.body, label %for.end, !dbg !4083

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %st, metadata !4084, metadata !1706), !dbg !4086
  %17 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !4087
  %arraydecay12 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !4088
  %call13 = call i32 @get_symbol(%struct.RangeCoder* %17, i8* %arraydecay12, i32 1), !dbg !4089
  %18 = load i32, i32* %i, align 4, !dbg !4090
  %idxprom = sext i32 %18 to i64, !dbg !4091
  %19 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !4091
  %one_state = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %19, i32 0, i32 5, !dbg !4092
  %arrayidx14 = getelementptr inbounds [256 x i8], [256 x i8]* %one_state, i64 0, i64 %idxprom, !dbg !4091
  %20 = load i8, i8* %arrayidx14, align 1, !dbg !4091
  %conv = zext i8 %20 to i32, !dbg !4091
  %add = add nsw i32 %call13, %conv, !dbg !4093
  store i32 %add, i32* %st, align 4, !dbg !4086
  %21 = load i32, i32* %st, align 4, !dbg !4094
  %cmp15 = icmp slt i32 %21, 1, !dbg !4096
  br i1 %cmp15, label %if.then19, label %lor.lhs.false, !dbg !4097

lor.lhs.false:                                    ; preds = %for.body
  %22 = load i32, i32* %st, align 4, !dbg !4098
  %cmp17 = icmp sgt i32 %22, 255, !dbg !4100
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !4101

if.then19:                                        ; preds = %lor.lhs.false, %for.body
  %23 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4102
  %avctx20 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %23, i32 0, i32 1, !dbg !4104
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx20, align 8, !dbg !4104
  %25 = bitcast %struct.AVCodecContext* %24 to i8*, !dbg !4102
  %26 = load i32, i32* %st, align 4, !dbg !4105
  call void (i8*, i32, i8*, ...) @av_log(i8* %25, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i32 0, i32 0), i32 %26), !dbg !4106
  store i32 -1094995529, i32* %retval, align 4, !dbg !4107
  br label %return, !dbg !4107

if.end21:                                         ; preds = %lor.lhs.false
  %27 = load i32, i32* %st, align 4, !dbg !4108
  %conv22 = trunc i32 %27 to i8, !dbg !4108
  %28 = load i32, i32* %i, align 4, !dbg !4109
  %idxprom23 = sext i32 %28 to i64, !dbg !4110
  %29 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4110
  %state_transition = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %29, i32 0, i32 29, !dbg !4111
  %arrayidx24 = getelementptr inbounds [256 x i8], [256 x i8]* %state_transition, i64 0, i64 %idxprom23, !dbg !4110
  store i8 %conv22, i8* %arrayidx24, align 1, !dbg !4112
  br label %for.inc, !dbg !4113

for.inc:                                          ; preds = %if.end21
  %30 = load i32, i32* %i, align 4, !dbg !4114
  %inc = add nsw i32 %30, 1, !dbg !4114
  store i32 %inc, i32* %i, align 4, !dbg !4114
  br label %for.cond, !dbg !4116, !llvm.loop !4117

for.end:                                          ; preds = %for.cond
  br label %if.end25, !dbg !4119

if.end25:                                         ; preds = %for.end, %if.end
  %31 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !4120
  %arraydecay26 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !4121
  %call27 = call i32 @get_symbol(%struct.RangeCoder* %31, i8* %arraydecay26, i32 0), !dbg !4122
  store i32 %call27, i32* %colorspace, align 4, !dbg !4123
  %32 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4124
  %version28 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %32, i32 0, i32 7, !dbg !4125
  %33 = load i32, i32* %version28, align 8, !dbg !4125
  %cmp29 = icmp sgt i32 %33, 0, !dbg !4126
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !4124

cond.true:                                        ; preds = %if.end25
  %34 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !4127
  %arraydecay31 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !4129
  %call32 = call i32 @get_symbol(%struct.RangeCoder* %34, i8* %arraydecay31, i32 0), !dbg !4130
  br label %cond.end, !dbg !4131

cond.false:                                       ; preds = %if.end25
  %35 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4132
  %avctx33 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %35, i32 0, i32 1, !dbg !4134
  %36 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx33, align 8, !dbg !4134
  %bits_per_raw_sample34 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %36, i32 0, i32 143, !dbg !4135
  %37 = load i32, i32* %bits_per_raw_sample34, align 4, !dbg !4135
  br label %cond.end, !dbg !4136

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call32, %cond.true ], [ %37, %cond.false ], !dbg !4137
  store i32 %cond, i32* %bits_per_raw_sample, align 4, !dbg !4139
  %38 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !4140
  %arraydecay35 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !4141
  %call36 = call i32 @get_rac(%struct.RangeCoder* %38, i8* %arraydecay35), !dbg !4142
  store i32 %call36, i32* %chroma_planes, align 4, !dbg !4143
  %39 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !4144
  %arraydecay37 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !4145
  %call38 = call i32 @get_symbol(%struct.RangeCoder* %39, i8* %arraydecay37, i32 0), !dbg !4146
  store i32 %call38, i32* %chroma_h_shift, align 4, !dbg !4147
  %40 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !4148
  %arraydecay39 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !4149
  %call40 = call i32 @get_symbol(%struct.RangeCoder* %40, i8* %arraydecay39, i32 0), !dbg !4150
  store i32 %call40, i32* %chroma_v_shift, align 4, !dbg !4151
  %41 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !4152
  %arraydecay41 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !4153
  %call42 = call i32 @get_rac(%struct.RangeCoder* %41, i8* %arraydecay41), !dbg !4154
  store i32 %call42, i32* %transparency, align 4, !dbg !4155
  %42 = load i32, i32* %colorspace, align 4, !dbg !4156
  %cmp43 = icmp eq i32 %42, 0, !dbg !4158
  br i1 %cmp43, label %land.lhs.true, label %if.end47, !dbg !4159

land.lhs.true:                                    ; preds = %cond.end
  %43 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4160
  %avctx45 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %43, i32 0, i32 1, !dbg !4162
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx45, align 8, !dbg !4162
  %skip_alpha = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %44, i32 0, i32 173, !dbg !4163
  %45 = load i32, i32* %skip_alpha, align 4, !dbg !4163
  %tobool = icmp ne i32 %45, 0, !dbg !4160
  br i1 %tobool, label %if.then46, label %if.end47, !dbg !4164

if.then46:                                        ; preds = %land.lhs.true
  store i32 0, i32* %transparency, align 4, !dbg !4165
  br label %if.end47, !dbg !4166

if.end47:                                         ; preds = %if.then46, %land.lhs.true, %cond.end
  %46 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4167
  %plane_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %46, i32 0, i32 22, !dbg !4169
  %47 = load i32, i32* %plane_count, align 8, !dbg !4169
  %tobool48 = icmp ne i32 %47, 0, !dbg !4167
  br i1 %tobool48, label %if.then49, label %if.end77, !dbg !4170

if.then49:                                        ; preds = %if.end47
  %48 = load i32, i32* %colorspace, align 4, !dbg !4171
  %49 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4174
  %colorspace50 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %49, i32 0, i32 32, !dbg !4175
  %50 = load i32, i32* %colorspace50, align 4, !dbg !4175
  %cmp51 = icmp ne i32 %48, %50, !dbg !4176
  br i1 %cmp51, label %if.then74, label %lor.lhs.false53, !dbg !4177

lor.lhs.false53:                                  ; preds = %if.then49
  %51 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !4178
  %52 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4179
  %avctx54 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %52, i32 0, i32 1, !dbg !4180
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx54, align 8, !dbg !4180
  %bits_per_raw_sample55 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 143, !dbg !4181
  %54 = load i32, i32* %bits_per_raw_sample55, align 4, !dbg !4181
  %cmp56 = icmp ne i32 %51, %54, !dbg !4182
  br i1 %cmp56, label %if.then74, label %lor.lhs.false58, !dbg !4183

lor.lhs.false58:                                  ; preds = %lor.lhs.false53
  %55 = load i32, i32* %chroma_planes, align 4, !dbg !4184
  %56 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4185
  %chroma_planes59 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %56, i32 0, i32 11, !dbg !4186
  %57 = load i32, i32* %chroma_planes59, align 8, !dbg !4186
  %cmp60 = icmp ne i32 %55, %57, !dbg !4187
  br i1 %cmp60, label %if.then74, label %lor.lhs.false62, !dbg !4188

lor.lhs.false62:                                  ; preds = %lor.lhs.false58
  %58 = load i32, i32* %chroma_h_shift, align 4, !dbg !4189
  %59 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4190
  %chroma_h_shift63 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %59, i32 0, i32 12, !dbg !4191
  %60 = load i32, i32* %chroma_h_shift63, align 4, !dbg !4191
  %cmp64 = icmp ne i32 %58, %60, !dbg !4192
  br i1 %cmp64, label %if.then74, label %lor.lhs.false66, !dbg !4193

lor.lhs.false66:                                  ; preds = %lor.lhs.false62
  %61 = load i32, i32* %chroma_v_shift, align 4, !dbg !4194
  %62 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4195
  %chroma_v_shift67 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %62, i32 0, i32 13, !dbg !4196
  %63 = load i32, i32* %chroma_v_shift67, align 8, !dbg !4196
  %cmp68 = icmp ne i32 %61, %63, !dbg !4197
  br i1 %cmp68, label %if.then74, label %lor.lhs.false70, !dbg !4198

lor.lhs.false70:                                  ; preds = %lor.lhs.false66
  %64 = load i32, i32* %transparency, align 4, !dbg !4199
  %65 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4200
  %transparency71 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %65, i32 0, i32 14, !dbg !4201
  %66 = load i32, i32* %transparency71, align 4, !dbg !4201
  %cmp72 = icmp ne i32 %64, %66, !dbg !4202
  br i1 %cmp72, label %if.then74, label %if.end76, !dbg !4203

if.then74:                                        ; preds = %lor.lhs.false70, %lor.lhs.false66, %lor.lhs.false62, %lor.lhs.false58, %lor.lhs.false53, %if.then49
  %67 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4205
  %avctx75 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %67, i32 0, i32 1, !dbg !4207
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx75, align 8, !dbg !4207
  %69 = bitcast %struct.AVCodecContext* %68 to i8*, !dbg !4205
  call void (i8*, i32, i8*, ...) @av_log(i8* %69, i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.24, i32 0, i32 0)), !dbg !4208
  store i32 -1094995529, i32* %retval, align 4, !dbg !4209
  br label %return, !dbg !4209

if.end76:                                         ; preds = %lor.lhs.false70
  br label %if.end77, !dbg !4210

if.end77:                                         ; preds = %if.end76, %if.end47
  %70 = load i32, i32* %chroma_h_shift, align 4, !dbg !4211
  %cmp78 = icmp ugt i32 %70, 4, !dbg !4213
  br i1 %cmp78, label %if.then83, label %lor.lhs.false80, !dbg !4214

lor.lhs.false80:                                  ; preds = %if.end77
  %71 = load i32, i32* %chroma_v_shift, align 4, !dbg !4215
  %cmp81 = icmp ugt i32 %71, 4, !dbg !4217
  br i1 %cmp81, label %if.then83, label %if.end85, !dbg !4218

if.then83:                                        ; preds = %lor.lhs.false80, %if.end77
  %72 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4219
  %avctx84 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %72, i32 0, i32 1, !dbg !4221
  %73 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx84, align 8, !dbg !4221
  %74 = bitcast %struct.AVCodecContext* %73 to i8*, !dbg !4219
  %75 = load i32, i32* %chroma_h_shift, align 4, !dbg !4222
  %76 = load i32, i32* %chroma_v_shift, align 4, !dbg !4223
  call void (i8*, i32, i8*, ...) @av_log(i8* %74, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i32 0, i32 0), i32 %75, i32 %76), !dbg !4224
  store i32 -1094995529, i32* %retval, align 4, !dbg !4225
  br label %return, !dbg !4225

if.end85:                                         ; preds = %lor.lhs.false80
  %77 = load i32, i32* %colorspace, align 4, !dbg !4226
  %78 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4227
  %colorspace86 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %78, i32 0, i32 32, !dbg !4228
  store i32 %77, i32* %colorspace86, align 4, !dbg !4229
  %79 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !4230
  %80 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4231
  %avctx87 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %80, i32 0, i32 1, !dbg !4232
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx87, align 8, !dbg !4232
  %bits_per_raw_sample88 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %81, i32 0, i32 143, !dbg !4233
  store i32 %79, i32* %bits_per_raw_sample88, align 4, !dbg !4234
  %82 = load i32, i32* %chroma_planes, align 4, !dbg !4235
  %83 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4236
  %chroma_planes89 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %83, i32 0, i32 11, !dbg !4237
  store i32 %82, i32* %chroma_planes89, align 8, !dbg !4238
  %84 = load i32, i32* %chroma_h_shift, align 4, !dbg !4239
  %85 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4240
  %chroma_h_shift90 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %85, i32 0, i32 12, !dbg !4241
  store i32 %84, i32* %chroma_h_shift90, align 4, !dbg !4242
  %86 = load i32, i32* %chroma_v_shift, align 4, !dbg !4243
  %87 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4244
  %chroma_v_shift91 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %87, i32 0, i32 13, !dbg !4245
  store i32 %86, i32* %chroma_v_shift91, align 8, !dbg !4246
  %88 = load i32, i32* %transparency, align 4, !dbg !4247
  %89 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4248
  %transparency92 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %89, i32 0, i32 14, !dbg !4249
  store i32 %88, i32* %transparency92, align 4, !dbg !4250
  %90 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4251
  %transparency93 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %90, i32 0, i32 14, !dbg !4252
  %91 = load i32, i32* %transparency93, align 4, !dbg !4252
  %add94 = add nsw i32 2, %91, !dbg !4253
  %92 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4254
  %plane_count95 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %92, i32 0, i32 22, !dbg !4255
  store i32 %add94, i32* %plane_count95, align 8, !dbg !4256
  br label %if.end96, !dbg !4257

if.end96:                                         ; preds = %if.end85, %entry
  %93 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4258
  %colorspace97 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %93, i32 0, i32 32, !dbg !4260
  %94 = load i32, i32* %colorspace97, align 4, !dbg !4260
  %cmp98 = icmp eq i32 %94, 0, !dbg !4261
  br i1 %cmp98, label %if.then100, label %if.else440, !dbg !4262

if.then100:                                       ; preds = %if.end96
  %95 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4263
  %transparency101 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %95, i32 0, i32 14, !dbg !4266
  %96 = load i32, i32* %transparency101, align 4, !dbg !4266
  %tobool102 = icmp ne i32 %96, 0, !dbg !4263
  br i1 %tobool102, label %if.else162, label %land.lhs.true103, !dbg !4267

land.lhs.true103:                                 ; preds = %if.then100
  %97 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4268
  %chroma_planes104 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %97, i32 0, i32 11, !dbg !4270
  %98 = load i32, i32* %chroma_planes104, align 8, !dbg !4270
  %tobool105 = icmp ne i32 %98, 0, !dbg !4268
  br i1 %tobool105, label %if.else162, label %if.then106, !dbg !4271

if.then106:                                       ; preds = %land.lhs.true103
  %99 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4272
  %avctx107 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %99, i32 0, i32 1, !dbg !4275
  %100 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx107, align 8, !dbg !4275
  %bits_per_raw_sample108 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %100, i32 0, i32 143, !dbg !4276
  %101 = load i32, i32* %bits_per_raw_sample108, align 4, !dbg !4276
  %cmp109 = icmp sle i32 %101, 8, !dbg !4277
  br i1 %cmp109, label %if.then111, label %if.else, !dbg !4278

if.then111:                                       ; preds = %if.then106
  %102 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4279
  %avctx112 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %102, i32 0, i32 1, !dbg !4280
  %103 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx112, align 8, !dbg !4280
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %103, i32 0, i32 25, !dbg !4281
  store i32 8, i32* %pix_fmt, align 8, !dbg !4282
  br label %if.end161, !dbg !4279

if.else:                                          ; preds = %if.then106
  %104 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4283
  %avctx113 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %104, i32 0, i32 1, !dbg !4285
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx113, align 8, !dbg !4285
  %bits_per_raw_sample114 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %105, i32 0, i32 143, !dbg !4286
  %106 = load i32, i32* %bits_per_raw_sample114, align 4, !dbg !4286
  %cmp115 = icmp eq i32 %106, 9, !dbg !4287
  br i1 %cmp115, label %if.then117, label %if.else120, !dbg !4288

if.then117:                                       ; preds = %if.else
  %107 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4289
  %packed_at_lsb = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %107, i32 0, i32 42, !dbg !4291
  store i32 1, i32* %packed_at_lsb, align 4, !dbg !4292
  %108 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4293
  %avctx118 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %108, i32 0, i32 1, !dbg !4294
  %109 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx118, align 8, !dbg !4294
  %pix_fmt119 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %109, i32 0, i32 25, !dbg !4295
  store i32 176, i32* %pix_fmt119, align 8, !dbg !4296
  br label %if.end160, !dbg !4297

if.else120:                                       ; preds = %if.else
  %110 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4298
  %avctx121 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %110, i32 0, i32 1, !dbg !4301
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx121, align 8, !dbg !4301
  %bits_per_raw_sample122 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %111, i32 0, i32 143, !dbg !4302
  %112 = load i32, i32* %bits_per_raw_sample122, align 4, !dbg !4302
  %cmp123 = icmp eq i32 %112, 10, !dbg !4303
  br i1 %cmp123, label %if.then125, label %if.else129, !dbg !4298

if.then125:                                       ; preds = %if.else120
  %113 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4304
  %packed_at_lsb126 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %113, i32 0, i32 42, !dbg !4306
  store i32 1, i32* %packed_at_lsb126, align 4, !dbg !4307
  %114 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4308
  %avctx127 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %114, i32 0, i32 1, !dbg !4309
  %115 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx127, align 8, !dbg !4309
  %pix_fmt128 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %115, i32 0, i32 25, !dbg !4310
  store i32 171, i32* %pix_fmt128, align 8, !dbg !4311
  br label %if.end159, !dbg !4312

if.else129:                                       ; preds = %if.else120
  %116 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4313
  %avctx130 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %116, i32 0, i32 1, !dbg !4316
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx130, align 8, !dbg !4316
  %bits_per_raw_sample131 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %117, i32 0, i32 143, !dbg !4317
  %118 = load i32, i32* %bits_per_raw_sample131, align 4, !dbg !4317
  %cmp132 = icmp eq i32 %118, 12, !dbg !4318
  br i1 %cmp132, label %if.then134, label %if.else138, !dbg !4313

if.then134:                                       ; preds = %if.else129
  %119 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4319
  %packed_at_lsb135 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %119, i32 0, i32 42, !dbg !4321
  store i32 1, i32* %packed_at_lsb135, align 4, !dbg !4322
  %120 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4323
  %avctx136 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %120, i32 0, i32 1, !dbg !4324
  %121 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx136, align 8, !dbg !4324
  %pix_fmt137 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %121, i32 0, i32 25, !dbg !4325
  store i32 169, i32* %pix_fmt137, align 8, !dbg !4326
  br label %if.end158, !dbg !4327

if.else138:                                       ; preds = %if.else129
  %122 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4328
  %avctx139 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %122, i32 0, i32 1, !dbg !4331
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx139, align 8, !dbg !4331
  %bits_per_raw_sample140 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %123, i32 0, i32 143, !dbg !4332
  %124 = load i32, i32* %bits_per_raw_sample140, align 4, !dbg !4332
  %cmp141 = icmp eq i32 %124, 16, !dbg !4333
  br i1 %cmp141, label %if.then143, label %if.else147, !dbg !4328

if.then143:                                       ; preds = %if.else138
  %125 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4334
  %packed_at_lsb144 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %125, i32 0, i32 42, !dbg !4336
  store i32 1, i32* %packed_at_lsb144, align 4, !dbg !4337
  %126 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4338
  %avctx145 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %126, i32 0, i32 1, !dbg !4339
  %127 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx145, align 8, !dbg !4339
  %pix_fmt146 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %127, i32 0, i32 25, !dbg !4340
  store i32 30, i32* %pix_fmt146, align 8, !dbg !4341
  br label %if.end157, !dbg !4342

if.else147:                                       ; preds = %if.else138
  %128 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4343
  %avctx148 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %128, i32 0, i32 1, !dbg !4346
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx148, align 8, !dbg !4346
  %bits_per_raw_sample149 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %129, i32 0, i32 143, !dbg !4347
  %130 = load i32, i32* %bits_per_raw_sample149, align 4, !dbg !4347
  %cmp150 = icmp slt i32 %130, 16, !dbg !4348
  br i1 %cmp150, label %if.then152, label %if.else155, !dbg !4343

if.then152:                                       ; preds = %if.else147
  %131 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4349
  %avctx153 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %131, i32 0, i32 1, !dbg !4351
  %132 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx153, align 8, !dbg !4351
  %pix_fmt154 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %132, i32 0, i32 25, !dbg !4352
  store i32 30, i32* %pix_fmt154, align 8, !dbg !4353
  br label %if.end156, !dbg !4354

if.else155:                                       ; preds = %if.else147
  store i32 -38, i32* %retval, align 4, !dbg !4355
  br label %return, !dbg !4355

if.end156:                                        ; preds = %if.then152
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.then143
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.then134
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.then125
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %if.then117
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then111
  br label %if.end439, !dbg !4356

if.else162:                                       ; preds = %land.lhs.true103, %if.then100
  %133 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4357
  %transparency163 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %133, i32 0, i32 14, !dbg !4360
  %134 = load i32, i32* %transparency163, align 4, !dbg !4360
  %tobool164 = icmp ne i32 %134, 0, !dbg !4357
  br i1 %tobool164, label %land.lhs.true165, label %if.else178, !dbg !4361

land.lhs.true165:                                 ; preds = %if.else162
  %135 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4362
  %chroma_planes166 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %135, i32 0, i32 11, !dbg !4364
  %136 = load i32, i32* %chroma_planes166, align 8, !dbg !4364
  %tobool167 = icmp ne i32 %136, 0, !dbg !4362
  br i1 %tobool167, label %if.else178, label %if.then168, !dbg !4365

if.then168:                                       ; preds = %land.lhs.true165
  %137 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4366
  %avctx169 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %137, i32 0, i32 1, !dbg !4369
  %138 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx169, align 8, !dbg !4369
  %bits_per_raw_sample170 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %138, i32 0, i32 143, !dbg !4370
  %139 = load i32, i32* %bits_per_raw_sample170, align 4, !dbg !4370
  %cmp171 = icmp sle i32 %139, 8, !dbg !4371
  br i1 %cmp171, label %if.then173, label %if.else176, !dbg !4372

if.then173:                                       ; preds = %if.then168
  %140 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4373
  %avctx174 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %140, i32 0, i32 1, !dbg !4374
  %141 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx174, align 8, !dbg !4374
  %pix_fmt175 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %141, i32 0, i32 25, !dbg !4375
  store i32 58, i32* %pix_fmt175, align 8, !dbg !4376
  br label %if.end177, !dbg !4373

if.else176:                                       ; preds = %if.then168
  store i32 -38, i32* %retval, align 4, !dbg !4377
  br label %return, !dbg !4377

if.end177:                                        ; preds = %if.then173
  br label %if.end438, !dbg !4378

if.else178:                                       ; preds = %land.lhs.true165, %if.else162
  %142 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4379
  %avctx179 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %142, i32 0, i32 1, !dbg !4382
  %143 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx179, align 8, !dbg !4382
  %bits_per_raw_sample180 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %143, i32 0, i32 143, !dbg !4383
  %144 = load i32, i32* %bits_per_raw_sample180, align 4, !dbg !4383
  %cmp181 = icmp sle i32 %144, 8, !dbg !4384
  br i1 %cmp181, label %land.lhs.true183, label %if.else207, !dbg !4385

land.lhs.true183:                                 ; preds = %if.else178
  %145 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4386
  %transparency184 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %145, i32 0, i32 14, !dbg !4388
  %146 = load i32, i32* %transparency184, align 4, !dbg !4388
  %tobool185 = icmp ne i32 %146, 0, !dbg !4386
  br i1 %tobool185, label %if.else207, label %if.then186, !dbg !4389

if.then186:                                       ; preds = %land.lhs.true183
  %147 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4390
  %chroma_h_shift187 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %147, i32 0, i32 12, !dbg !4392
  %148 = load i32, i32* %chroma_h_shift187, align 4, !dbg !4392
  %mul = mul nsw i32 16, %148, !dbg !4393
  %149 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4394
  %chroma_v_shift188 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %149, i32 0, i32 13, !dbg !4395
  %150 = load i32, i32* %chroma_v_shift188, align 8, !dbg !4395
  %add189 = add nsw i32 %mul, %150, !dbg !4396
  switch i32 %add189, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb192
    i32 16, label %sw.bb195
    i32 17, label %sw.bb198
    i32 32, label %sw.bb201
    i32 34, label %sw.bb204
  ], !dbg !4397

sw.bb:                                            ; preds = %if.then186
  %151 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4398
  %avctx190 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %151, i32 0, i32 1, !dbg !4400
  %152 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx190, align 8, !dbg !4400
  %pix_fmt191 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %152, i32 0, i32 25, !dbg !4401
  store i32 5, i32* %pix_fmt191, align 8, !dbg !4402
  br label %sw.epilog, !dbg !4403

sw.bb192:                                         ; preds = %if.then186
  %153 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4404
  %avctx193 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %153, i32 0, i32 1, !dbg !4405
  %154 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx193, align 8, !dbg !4405
  %pix_fmt194 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %154, i32 0, i32 25, !dbg !4406
  store i32 31, i32* %pix_fmt194, align 8, !dbg !4407
  br label %sw.epilog, !dbg !4408

sw.bb195:                                         ; preds = %if.then186
  %155 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4409
  %avctx196 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %155, i32 0, i32 1, !dbg !4410
  %156 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx196, align 8, !dbg !4410
  %pix_fmt197 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %156, i32 0, i32 25, !dbg !4411
  store i32 4, i32* %pix_fmt197, align 8, !dbg !4412
  br label %sw.epilog, !dbg !4413

sw.bb198:                                         ; preds = %if.then186
  %157 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4414
  %avctx199 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %157, i32 0, i32 1, !dbg !4415
  %158 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx199, align 8, !dbg !4415
  %pix_fmt200 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %158, i32 0, i32 25, !dbg !4416
  store i32 0, i32* %pix_fmt200, align 8, !dbg !4417
  br label %sw.epilog, !dbg !4418

sw.bb201:                                         ; preds = %if.then186
  %159 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4419
  %avctx202 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %159, i32 0, i32 1, !dbg !4420
  %160 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx202, align 8, !dbg !4420
  %pix_fmt203 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %160, i32 0, i32 25, !dbg !4421
  store i32 7, i32* %pix_fmt203, align 8, !dbg !4422
  br label %sw.epilog, !dbg !4423

sw.bb204:                                         ; preds = %if.then186
  %161 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4424
  %avctx205 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %161, i32 0, i32 1, !dbg !4425
  %162 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx205, align 8, !dbg !4425
  %pix_fmt206 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %162, i32 0, i32 25, !dbg !4426
  store i32 6, i32* %pix_fmt206, align 8, !dbg !4427
  br label %sw.epilog, !dbg !4428

sw.epilog:                                        ; preds = %if.then186, %sw.bb204, %sw.bb201, %sw.bb198, %sw.bb195, %sw.bb192, %sw.bb
  br label %if.end437, !dbg !4429

if.else207:                                       ; preds = %land.lhs.true183, %if.else178
  %163 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4430
  %avctx208 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %163, i32 0, i32 1, !dbg !4433
  %164 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx208, align 8, !dbg !4433
  %bits_per_raw_sample209 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %164, i32 0, i32 143, !dbg !4434
  %165 = load i32, i32* %bits_per_raw_sample209, align 4, !dbg !4434
  %cmp210 = icmp sle i32 %165, 8, !dbg !4435
  br i1 %cmp210, label %land.lhs.true212, label %if.else230, !dbg !4436

land.lhs.true212:                                 ; preds = %if.else207
  %166 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4437
  %transparency213 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %166, i32 0, i32 14, !dbg !4439
  %167 = load i32, i32* %transparency213, align 4, !dbg !4439
  %tobool214 = icmp ne i32 %167, 0, !dbg !4437
  br i1 %tobool214, label %if.then215, label %if.else230, !dbg !4440

if.then215:                                       ; preds = %land.lhs.true212
  %168 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4441
  %chroma_h_shift216 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %168, i32 0, i32 12, !dbg !4443
  %169 = load i32, i32* %chroma_h_shift216, align 4, !dbg !4443
  %mul217 = mul nsw i32 16, %169, !dbg !4444
  %170 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4445
  %chroma_v_shift218 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %170, i32 0, i32 13, !dbg !4446
  %171 = load i32, i32* %chroma_v_shift218, align 8, !dbg !4446
  %add219 = add nsw i32 %mul217, %171, !dbg !4447
  switch i32 %add219, label %sw.epilog229 [
    i32 0, label %sw.bb220
    i32 16, label %sw.bb223
    i32 17, label %sw.bb226
  ], !dbg !4448

sw.bb220:                                         ; preds = %if.then215
  %172 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4449
  %avctx221 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %172, i32 0, i32 1, !dbg !4451
  %173 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx221, align 8, !dbg !4451
  %pix_fmt222 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %173, i32 0, i32 25, !dbg !4452
  store i32 81, i32* %pix_fmt222, align 8, !dbg !4453
  br label %sw.epilog229, !dbg !4454

sw.bb223:                                         ; preds = %if.then215
  %174 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4455
  %avctx224 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %174, i32 0, i32 1, !dbg !4456
  %175 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx224, align 8, !dbg !4456
  %pix_fmt225 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %175, i32 0, i32 25, !dbg !4457
  store i32 80, i32* %pix_fmt225, align 8, !dbg !4458
  br label %sw.epilog229, !dbg !4459

sw.bb226:                                         ; preds = %if.then215
  %176 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4460
  %avctx227 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %176, i32 0, i32 1, !dbg !4461
  %177 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx227, align 8, !dbg !4461
  %pix_fmt228 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %177, i32 0, i32 25, !dbg !4462
  store i32 33, i32* %pix_fmt228, align 8, !dbg !4463
  br label %sw.epilog229, !dbg !4464

sw.epilog229:                                     ; preds = %if.then215, %sw.bb226, %sw.bb223, %sw.bb220
  br label %if.end436, !dbg !4465

if.else230:                                       ; preds = %land.lhs.true212, %if.else207
  %178 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4466
  %avctx231 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %178, i32 0, i32 1, !dbg !4469
  %179 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx231, align 8, !dbg !4469
  %bits_per_raw_sample232 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %179, i32 0, i32 143, !dbg !4470
  %180 = load i32, i32* %bits_per_raw_sample232, align 4, !dbg !4470
  %cmp233 = icmp eq i32 %180, 9, !dbg !4471
  br i1 %cmp233, label %land.lhs.true235, label %if.else254, !dbg !4472

land.lhs.true235:                                 ; preds = %if.else230
  %181 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4473
  %transparency236 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %181, i32 0, i32 14, !dbg !4475
  %182 = load i32, i32* %transparency236, align 4, !dbg !4475
  %tobool237 = icmp ne i32 %182, 0, !dbg !4473
  br i1 %tobool237, label %if.else254, label %if.then238, !dbg !4476

if.then238:                                       ; preds = %land.lhs.true235
  %183 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4477
  %packed_at_lsb239 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %183, i32 0, i32 42, !dbg !4479
  store i32 1, i32* %packed_at_lsb239, align 4, !dbg !4480
  %184 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4481
  %chroma_h_shift240 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %184, i32 0, i32 12, !dbg !4482
  %185 = load i32, i32* %chroma_h_shift240, align 4, !dbg !4482
  %mul241 = mul nsw i32 16, %185, !dbg !4483
  %186 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4484
  %chroma_v_shift242 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %186, i32 0, i32 13, !dbg !4485
  %187 = load i32, i32* %chroma_v_shift242, align 8, !dbg !4485
  %add243 = add nsw i32 %mul241, %187, !dbg !4486
  switch i32 %add243, label %sw.epilog253 [
    i32 0, label %sw.bb244
    i32 16, label %sw.bb247
    i32 17, label %sw.bb250
  ], !dbg !4487

sw.bb244:                                         ; preds = %if.then238
  %188 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4488
  %avctx245 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %188, i32 0, i32 1, !dbg !4490
  %189 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx245, align 8, !dbg !4490
  %pix_fmt246 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %189, i32 0, i32 25, !dbg !4491
  store i32 68, i32* %pix_fmt246, align 8, !dbg !4492
  br label %sw.epilog253, !dbg !4493

sw.bb247:                                         ; preds = %if.then238
  %190 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4494
  %avctx248 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %190, i32 0, i32 1, !dbg !4495
  %191 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx248, align 8, !dbg !4495
  %pix_fmt249 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %191, i32 0, i32 25, !dbg !4496
  store i32 72, i32* %pix_fmt249, align 8, !dbg !4497
  br label %sw.epilog253, !dbg !4498

sw.bb250:                                         ; preds = %if.then238
  %192 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4499
  %avctx251 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %192, i32 0, i32 1, !dbg !4500
  %193 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx251, align 8, !dbg !4500
  %pix_fmt252 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %193, i32 0, i32 25, !dbg !4501
  store i32 62, i32* %pix_fmt252, align 8, !dbg !4502
  br label %sw.epilog253, !dbg !4503

sw.epilog253:                                     ; preds = %if.then238, %sw.bb250, %sw.bb247, %sw.bb244
  br label %if.end435, !dbg !4504

if.else254:                                       ; preds = %land.lhs.true235, %if.else230
  %194 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4505
  %avctx255 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %194, i32 0, i32 1, !dbg !4508
  %195 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx255, align 8, !dbg !4508
  %bits_per_raw_sample256 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %195, i32 0, i32 143, !dbg !4509
  %196 = load i32, i32* %bits_per_raw_sample256, align 4, !dbg !4509
  %cmp257 = icmp eq i32 %196, 9, !dbg !4510
  br i1 %cmp257, label %land.lhs.true259, label %if.else278, !dbg !4511

land.lhs.true259:                                 ; preds = %if.else254
  %197 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4512
  %transparency260 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %197, i32 0, i32 14, !dbg !4514
  %198 = load i32, i32* %transparency260, align 4, !dbg !4514
  %tobool261 = icmp ne i32 %198, 0, !dbg !4512
  br i1 %tobool261, label %if.then262, label %if.else278, !dbg !4515

if.then262:                                       ; preds = %land.lhs.true259
  %199 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4516
  %packed_at_lsb263 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %199, i32 0, i32 42, !dbg !4518
  store i32 1, i32* %packed_at_lsb263, align 4, !dbg !4519
  %200 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4520
  %chroma_h_shift264 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %200, i32 0, i32 12, !dbg !4521
  %201 = load i32, i32* %chroma_h_shift264, align 4, !dbg !4521
  %mul265 = mul nsw i32 16, %201, !dbg !4522
  %202 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4523
  %chroma_v_shift266 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %202, i32 0, i32 13, !dbg !4524
  %203 = load i32, i32* %chroma_v_shift266, align 8, !dbg !4524
  %add267 = add nsw i32 %mul265, %203, !dbg !4525
  switch i32 %add267, label %sw.epilog277 [
    i32 0, label %sw.bb268
    i32 16, label %sw.bb271
    i32 17, label %sw.bb274
  ], !dbg !4526

sw.bb268:                                         ; preds = %if.then262
  %204 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4527
  %avctx269 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %204, i32 0, i32 1, !dbg !4529
  %205 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx269, align 8, !dbg !4529
  %pix_fmt270 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %205, i32 0, i32 25, !dbg !4530
  store i32 87, i32* %pix_fmt270, align 8, !dbg !4531
  br label %sw.epilog277, !dbg !4532

sw.bb271:                                         ; preds = %if.then262
  %206 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4533
  %avctx272 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %206, i32 0, i32 1, !dbg !4534
  %207 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx272, align 8, !dbg !4534
  %pix_fmt273 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %207, i32 0, i32 25, !dbg !4535
  store i32 85, i32* %pix_fmt273, align 8, !dbg !4536
  br label %sw.epilog277, !dbg !4537

sw.bb274:                                         ; preds = %if.then262
  %208 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4538
  %avctx275 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %208, i32 0, i32 1, !dbg !4539
  %209 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx275, align 8, !dbg !4539
  %pix_fmt276 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %209, i32 0, i32 25, !dbg !4540
  store i32 83, i32* %pix_fmt276, align 8, !dbg !4541
  br label %sw.epilog277, !dbg !4542

sw.epilog277:                                     ; preds = %if.then262, %sw.bb274, %sw.bb271, %sw.bb268
  br label %if.end434, !dbg !4543

if.else278:                                       ; preds = %land.lhs.true259, %if.else254
  %210 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4544
  %avctx279 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %210, i32 0, i32 1, !dbg !4547
  %211 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx279, align 8, !dbg !4547
  %bits_per_raw_sample280 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %211, i32 0, i32 143, !dbg !4548
  %212 = load i32, i32* %bits_per_raw_sample280, align 4, !dbg !4548
  %cmp281 = icmp eq i32 %212, 10, !dbg !4549
  br i1 %cmp281, label %land.lhs.true283, label %if.else305, !dbg !4550

land.lhs.true283:                                 ; preds = %if.else278
  %213 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4551
  %transparency284 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %213, i32 0, i32 14, !dbg !4553
  %214 = load i32, i32* %transparency284, align 4, !dbg !4553
  %tobool285 = icmp ne i32 %214, 0, !dbg !4551
  br i1 %tobool285, label %if.else305, label %if.then286, !dbg !4554

if.then286:                                       ; preds = %land.lhs.true283
  %215 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4555
  %packed_at_lsb287 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %215, i32 0, i32 42, !dbg !4557
  store i32 1, i32* %packed_at_lsb287, align 4, !dbg !4558
  %216 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4559
  %chroma_h_shift288 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %216, i32 0, i32 12, !dbg !4560
  %217 = load i32, i32* %chroma_h_shift288, align 4, !dbg !4560
  %mul289 = mul nsw i32 16, %217, !dbg !4561
  %218 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4562
  %chroma_v_shift290 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %218, i32 0, i32 13, !dbg !4563
  %219 = load i32, i32* %chroma_v_shift290, align 8, !dbg !4563
  %add291 = add nsw i32 %mul289, %219, !dbg !4564
  switch i32 %add291, label %sw.epilog304 [
    i32 0, label %sw.bb292
    i32 1, label %sw.bb295
    i32 16, label %sw.bb298
    i32 17, label %sw.bb301
  ], !dbg !4565

sw.bb292:                                         ; preds = %if.then286
  %220 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4566
  %avctx293 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %220, i32 0, i32 1, !dbg !4568
  %221 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx293, align 8, !dbg !4568
  %pix_fmt294 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %221, i32 0, i32 25, !dbg !4569
  store i32 70, i32* %pix_fmt294, align 8, !dbg !4570
  br label %sw.epilog304, !dbg !4571

sw.bb295:                                         ; preds = %if.then286
  %222 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4572
  %avctx296 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %222, i32 0, i32 1, !dbg !4573
  %223 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx296, align 8, !dbg !4573
  %pix_fmt297 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %223, i32 0, i32 25, !dbg !4574
  store i32 154, i32* %pix_fmt297, align 8, !dbg !4575
  br label %sw.epilog304, !dbg !4576

sw.bb298:                                         ; preds = %if.then286
  %224 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4577
  %avctx299 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %224, i32 0, i32 1, !dbg !4578
  %225 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx299, align 8, !dbg !4578
  %pix_fmt300 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %225, i32 0, i32 25, !dbg !4579
  store i32 66, i32* %pix_fmt300, align 8, !dbg !4580
  br label %sw.epilog304, !dbg !4581

sw.bb301:                                         ; preds = %if.then286
  %226 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4582
  %avctx302 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %226, i32 0, i32 1, !dbg !4583
  %227 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx302, align 8, !dbg !4583
  %pix_fmt303 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %227, i32 0, i32 25, !dbg !4584
  store i32 64, i32* %pix_fmt303, align 8, !dbg !4585
  br label %sw.epilog304, !dbg !4586

sw.epilog304:                                     ; preds = %if.then286, %sw.bb301, %sw.bb298, %sw.bb295, %sw.bb292
  br label %if.end433, !dbg !4587

if.else305:                                       ; preds = %land.lhs.true283, %if.else278
  %228 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4588
  %avctx306 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %228, i32 0, i32 1, !dbg !4591
  %229 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx306, align 8, !dbg !4591
  %bits_per_raw_sample307 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %229, i32 0, i32 143, !dbg !4592
  %230 = load i32, i32* %bits_per_raw_sample307, align 4, !dbg !4592
  %cmp308 = icmp eq i32 %230, 10, !dbg !4593
  br i1 %cmp308, label %land.lhs.true310, label %if.else329, !dbg !4594

land.lhs.true310:                                 ; preds = %if.else305
  %231 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4595
  %transparency311 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %231, i32 0, i32 14, !dbg !4597
  %232 = load i32, i32* %transparency311, align 4, !dbg !4597
  %tobool312 = icmp ne i32 %232, 0, !dbg !4595
  br i1 %tobool312, label %if.then313, label %if.else329, !dbg !4598

if.then313:                                       ; preds = %land.lhs.true310
  %233 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4599
  %packed_at_lsb314 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %233, i32 0, i32 42, !dbg !4601
  store i32 1, i32* %packed_at_lsb314, align 4, !dbg !4602
  %234 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4603
  %chroma_h_shift315 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %234, i32 0, i32 12, !dbg !4604
  %235 = load i32, i32* %chroma_h_shift315, align 4, !dbg !4604
  %mul316 = mul nsw i32 16, %235, !dbg !4605
  %236 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4606
  %chroma_v_shift317 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %236, i32 0, i32 13, !dbg !4607
  %237 = load i32, i32* %chroma_v_shift317, align 8, !dbg !4607
  %add318 = add nsw i32 %mul316, %237, !dbg !4608
  switch i32 %add318, label %sw.epilog328 [
    i32 0, label %sw.bb319
    i32 16, label %sw.bb322
    i32 17, label %sw.bb325
  ], !dbg !4609

sw.bb319:                                         ; preds = %if.then313
  %238 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4610
  %avctx320 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %238, i32 0, i32 1, !dbg !4612
  %239 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx320, align 8, !dbg !4612
  %pix_fmt321 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %239, i32 0, i32 25, !dbg !4613
  store i32 93, i32* %pix_fmt321, align 8, !dbg !4614
  br label %sw.epilog328, !dbg !4615

sw.bb322:                                         ; preds = %if.then313
  %240 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4616
  %avctx323 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %240, i32 0, i32 1, !dbg !4617
  %241 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx323, align 8, !dbg !4617
  %pix_fmt324 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %241, i32 0, i32 25, !dbg !4618
  store i32 91, i32* %pix_fmt324, align 8, !dbg !4619
  br label %sw.epilog328, !dbg !4620

sw.bb325:                                         ; preds = %if.then313
  %242 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4621
  %avctx326 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %242, i32 0, i32 1, !dbg !4622
  %243 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx326, align 8, !dbg !4622
  %pix_fmt327 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %243, i32 0, i32 25, !dbg !4623
  store i32 89, i32* %pix_fmt327, align 8, !dbg !4624
  br label %sw.epilog328, !dbg !4625

sw.epilog328:                                     ; preds = %if.then313, %sw.bb325, %sw.bb322, %sw.bb319
  br label %if.end432, !dbg !4626

if.else329:                                       ; preds = %land.lhs.true310, %if.else305
  %244 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4627
  %avctx330 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %244, i32 0, i32 1, !dbg !4630
  %245 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx330, align 8, !dbg !4630
  %bits_per_raw_sample331 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %245, i32 0, i32 143, !dbg !4631
  %246 = load i32, i32* %bits_per_raw_sample331, align 4, !dbg !4631
  %cmp332 = icmp eq i32 %246, 12, !dbg !4632
  br i1 %cmp332, label %land.lhs.true334, label %if.else356, !dbg !4633

land.lhs.true334:                                 ; preds = %if.else329
  %247 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4634
  %transparency335 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %247, i32 0, i32 14, !dbg !4636
  %248 = load i32, i32* %transparency335, align 4, !dbg !4636
  %tobool336 = icmp ne i32 %248, 0, !dbg !4634
  br i1 %tobool336, label %if.else356, label %if.then337, !dbg !4637

if.then337:                                       ; preds = %land.lhs.true334
  %249 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4638
  %packed_at_lsb338 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %249, i32 0, i32 42, !dbg !4640
  store i32 1, i32* %packed_at_lsb338, align 4, !dbg !4641
  %250 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4642
  %chroma_h_shift339 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %250, i32 0, i32 12, !dbg !4643
  %251 = load i32, i32* %chroma_h_shift339, align 4, !dbg !4643
  %mul340 = mul nsw i32 16, %251, !dbg !4644
  %252 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4645
  %chroma_v_shift341 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %252, i32 0, i32 13, !dbg !4646
  %253 = load i32, i32* %chroma_v_shift341, align 8, !dbg !4646
  %add342 = add nsw i32 %mul340, %253, !dbg !4647
  switch i32 %add342, label %sw.epilog355 [
    i32 0, label %sw.bb343
    i32 1, label %sw.bb346
    i32 16, label %sw.bb349
    i32 17, label %sw.bb352
  ], !dbg !4648

sw.bb343:                                         ; preds = %if.then337
  %254 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4649
  %avctx344 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %254, i32 0, i32 1, !dbg !4651
  %255 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx344, align 8, !dbg !4651
  %pix_fmt345 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %255, i32 0, i32 25, !dbg !4652
  store i32 133, i32* %pix_fmt345, align 8, !dbg !4653
  br label %sw.epilog355, !dbg !4654

sw.bb346:                                         ; preds = %if.then337
  %256 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4655
  %avctx347 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %256, i32 0, i32 1, !dbg !4656
  %257 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx347, align 8, !dbg !4656
  %pix_fmt348 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %257, i32 0, i32 25, !dbg !4657
  store i32 156, i32* %pix_fmt348, align 8, !dbg !4658
  br label %sw.epilog355, !dbg !4659

sw.bb349:                                         ; preds = %if.then337
  %258 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4660
  %avctx350 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %258, i32 0, i32 1, !dbg !4661
  %259 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx350, align 8, !dbg !4661
  %pix_fmt351 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %259, i32 0, i32 25, !dbg !4662
  store i32 129, i32* %pix_fmt351, align 8, !dbg !4663
  br label %sw.epilog355, !dbg !4664

sw.bb352:                                         ; preds = %if.then337
  %260 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4665
  %avctx353 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %260, i32 0, i32 1, !dbg !4666
  %261 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx353, align 8, !dbg !4666
  %pix_fmt354 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %261, i32 0, i32 25, !dbg !4667
  store i32 125, i32* %pix_fmt354, align 8, !dbg !4668
  br label %sw.epilog355, !dbg !4669

sw.epilog355:                                     ; preds = %if.then337, %sw.bb352, %sw.bb349, %sw.bb346, %sw.bb343
  br label %if.end431, !dbg !4670

if.else356:                                       ; preds = %land.lhs.true334, %if.else329
  %262 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4671
  %avctx357 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %262, i32 0, i32 1, !dbg !4674
  %263 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx357, align 8, !dbg !4674
  %bits_per_raw_sample358 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %263, i32 0, i32 143, !dbg !4675
  %264 = load i32, i32* %bits_per_raw_sample358, align 4, !dbg !4675
  %cmp359 = icmp eq i32 %264, 14, !dbg !4676
  br i1 %cmp359, label %land.lhs.true361, label %if.else380, !dbg !4677

land.lhs.true361:                                 ; preds = %if.else356
  %265 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4678
  %transparency362 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %265, i32 0, i32 14, !dbg !4680
  %266 = load i32, i32* %transparency362, align 4, !dbg !4680
  %tobool363 = icmp ne i32 %266, 0, !dbg !4678
  br i1 %tobool363, label %if.else380, label %if.then364, !dbg !4681

if.then364:                                       ; preds = %land.lhs.true361
  %267 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4682
  %packed_at_lsb365 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %267, i32 0, i32 42, !dbg !4684
  store i32 1, i32* %packed_at_lsb365, align 4, !dbg !4685
  %268 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4686
  %chroma_h_shift366 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %268, i32 0, i32 12, !dbg !4687
  %269 = load i32, i32* %chroma_h_shift366, align 4, !dbg !4687
  %mul367 = mul nsw i32 16, %269, !dbg !4688
  %270 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4689
  %chroma_v_shift368 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %270, i32 0, i32 13, !dbg !4690
  %271 = load i32, i32* %chroma_v_shift368, align 8, !dbg !4690
  %add369 = add nsw i32 %mul367, %271, !dbg !4691
  switch i32 %add369, label %sw.epilog379 [
    i32 0, label %sw.bb370
    i32 16, label %sw.bb373
    i32 17, label %sw.bb376
  ], !dbg !4692

sw.bb370:                                         ; preds = %if.then364
  %272 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4693
  %avctx371 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %272, i32 0, i32 1, !dbg !4695
  %273 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx371, align 8, !dbg !4695
  %pix_fmt372 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %273, i32 0, i32 25, !dbg !4696
  store i32 135, i32* %pix_fmt372, align 8, !dbg !4697
  br label %sw.epilog379, !dbg !4698

sw.bb373:                                         ; preds = %if.then364
  %274 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4699
  %avctx374 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %274, i32 0, i32 1, !dbg !4700
  %275 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx374, align 8, !dbg !4700
  %pix_fmt375 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %275, i32 0, i32 25, !dbg !4701
  store i32 131, i32* %pix_fmt375, align 8, !dbg !4702
  br label %sw.epilog379, !dbg !4703

sw.bb376:                                         ; preds = %if.then364
  %276 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4704
  %avctx377 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %276, i32 0, i32 1, !dbg !4705
  %277 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx377, align 8, !dbg !4705
  %pix_fmt378 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %277, i32 0, i32 25, !dbg !4706
  store i32 127, i32* %pix_fmt378, align 8, !dbg !4707
  br label %sw.epilog379, !dbg !4708

sw.epilog379:                                     ; preds = %if.then364, %sw.bb376, %sw.bb373, %sw.bb370
  br label %if.end430, !dbg !4709

if.else380:                                       ; preds = %land.lhs.true361, %if.else356
  %278 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4710
  %avctx381 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %278, i32 0, i32 1, !dbg !4713
  %279 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx381, align 8, !dbg !4713
  %bits_per_raw_sample382 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %279, i32 0, i32 143, !dbg !4714
  %280 = load i32, i32* %bits_per_raw_sample382, align 4, !dbg !4714
  %cmp383 = icmp eq i32 %280, 16, !dbg !4715
  br i1 %cmp383, label %land.lhs.true385, label %if.else404, !dbg !4716

land.lhs.true385:                                 ; preds = %if.else380
  %281 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4717
  %transparency386 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %281, i32 0, i32 14, !dbg !4719
  %282 = load i32, i32* %transparency386, align 4, !dbg !4719
  %tobool387 = icmp ne i32 %282, 0, !dbg !4717
  br i1 %tobool387, label %if.else404, label %if.then388, !dbg !4720

if.then388:                                       ; preds = %land.lhs.true385
  %283 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4721
  %packed_at_lsb389 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %283, i32 0, i32 42, !dbg !4723
  store i32 1, i32* %packed_at_lsb389, align 4, !dbg !4724
  %284 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4725
  %chroma_h_shift390 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %284, i32 0, i32 12, !dbg !4726
  %285 = load i32, i32* %chroma_h_shift390, align 4, !dbg !4726
  %mul391 = mul nsw i32 16, %285, !dbg !4727
  %286 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4728
  %chroma_v_shift392 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %286, i32 0, i32 13, !dbg !4729
  %287 = load i32, i32* %chroma_v_shift392, align 8, !dbg !4729
  %add393 = add nsw i32 %mul391, %287, !dbg !4730
  switch i32 %add393, label %sw.epilog403 [
    i32 0, label %sw.bb394
    i32 16, label %sw.bb397
    i32 17, label %sw.bb400
  ], !dbg !4731

sw.bb394:                                         ; preds = %if.then388
  %288 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4732
  %avctx395 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %288, i32 0, i32 1, !dbg !4734
  %289 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx395, align 8, !dbg !4734
  %pix_fmt396 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %289, i32 0, i32 25, !dbg !4735
  store i32 51, i32* %pix_fmt396, align 8, !dbg !4736
  br label %sw.epilog403, !dbg !4737

sw.bb397:                                         ; preds = %if.then388
  %290 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4738
  %avctx398 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %290, i32 0, i32 1, !dbg !4739
  %291 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx398, align 8, !dbg !4739
  %pix_fmt399 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %291, i32 0, i32 25, !dbg !4740
  store i32 49, i32* %pix_fmt399, align 8, !dbg !4741
  br label %sw.epilog403, !dbg !4742

sw.bb400:                                         ; preds = %if.then388
  %292 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4743
  %avctx401 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %292, i32 0, i32 1, !dbg !4744
  %293 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx401, align 8, !dbg !4744
  %pix_fmt402 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %293, i32 0, i32 25, !dbg !4745
  store i32 47, i32* %pix_fmt402, align 8, !dbg !4746
  br label %sw.epilog403, !dbg !4747

sw.epilog403:                                     ; preds = %if.then388, %sw.bb400, %sw.bb397, %sw.bb394
  br label %if.end429, !dbg !4748

if.else404:                                       ; preds = %land.lhs.true385, %if.else380
  %294 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4749
  %avctx405 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %294, i32 0, i32 1, !dbg !4752
  %295 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx405, align 8, !dbg !4752
  %bits_per_raw_sample406 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %295, i32 0, i32 143, !dbg !4753
  %296 = load i32, i32* %bits_per_raw_sample406, align 4, !dbg !4753
  %cmp407 = icmp eq i32 %296, 16, !dbg !4754
  br i1 %cmp407, label %land.lhs.true409, label %if.end428, !dbg !4755

land.lhs.true409:                                 ; preds = %if.else404
  %297 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4756
  %transparency410 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %297, i32 0, i32 14, !dbg !4758
  %298 = load i32, i32* %transparency410, align 4, !dbg !4758
  %tobool411 = icmp ne i32 %298, 0, !dbg !4756
  br i1 %tobool411, label %if.then412, label %if.end428, !dbg !4759

if.then412:                                       ; preds = %land.lhs.true409
  %299 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4760
  %packed_at_lsb413 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %299, i32 0, i32 42, !dbg !4762
  store i32 1, i32* %packed_at_lsb413, align 4, !dbg !4763
  %300 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4764
  %chroma_h_shift414 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %300, i32 0, i32 12, !dbg !4765
  %301 = load i32, i32* %chroma_h_shift414, align 4, !dbg !4765
  %mul415 = mul nsw i32 16, %301, !dbg !4766
  %302 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4767
  %chroma_v_shift416 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %302, i32 0, i32 13, !dbg !4768
  %303 = load i32, i32* %chroma_v_shift416, align 8, !dbg !4768
  %add417 = add nsw i32 %mul415, %303, !dbg !4769
  switch i32 %add417, label %sw.epilog427 [
    i32 0, label %sw.bb418
    i32 16, label %sw.bb421
    i32 17, label %sw.bb424
  ], !dbg !4770

sw.bb418:                                         ; preds = %if.then412
  %304 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4771
  %avctx419 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %304, i32 0, i32 1, !dbg !4773
  %305 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx419, align 8, !dbg !4773
  %pix_fmt420 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %305, i32 0, i32 25, !dbg !4774
  store i32 99, i32* %pix_fmt420, align 8, !dbg !4775
  br label %sw.epilog427, !dbg !4776

sw.bb421:                                         ; preds = %if.then412
  %306 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4777
  %avctx422 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %306, i32 0, i32 1, !dbg !4778
  %307 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx422, align 8, !dbg !4778
  %pix_fmt423 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %307, i32 0, i32 25, !dbg !4779
  store i32 97, i32* %pix_fmt423, align 8, !dbg !4780
  br label %sw.epilog427, !dbg !4781

sw.bb424:                                         ; preds = %if.then412
  %308 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4782
  %avctx425 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %308, i32 0, i32 1, !dbg !4783
  %309 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx425, align 8, !dbg !4783
  %pix_fmt426 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %309, i32 0, i32 25, !dbg !4784
  store i32 95, i32* %pix_fmt426, align 8, !dbg !4785
  br label %sw.epilog427, !dbg !4786

sw.epilog427:                                     ; preds = %if.then412, %sw.bb424, %sw.bb421, %sw.bb418
  br label %if.end428, !dbg !4787

if.end428:                                        ; preds = %sw.epilog427, %land.lhs.true409, %if.else404
  br label %if.end429

if.end429:                                        ; preds = %if.end428, %sw.epilog403
  br label %if.end430

if.end430:                                        ; preds = %if.end429, %sw.epilog379
  br label %if.end431

if.end431:                                        ; preds = %if.end430, %sw.epilog355
  br label %if.end432

if.end432:                                        ; preds = %if.end431, %sw.epilog328
  br label %if.end433

if.end433:                                        ; preds = %if.end432, %sw.epilog304
  br label %if.end434

if.end434:                                        ; preds = %if.end433, %sw.epilog277
  br label %if.end435

if.end435:                                        ; preds = %if.end434, %sw.epilog253
  br label %if.end436

if.end436:                                        ; preds = %if.end435, %sw.epilog229
  br label %if.end437

if.end437:                                        ; preds = %if.end436, %sw.epilog
  br label %if.end438

if.end438:                                        ; preds = %if.end437, %if.end177
  br label %if.end439

if.end439:                                        ; preds = %if.end438, %if.end161
  br label %if.end576, !dbg !4788

if.else440:                                       ; preds = %if.end96
  %310 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4789
  %colorspace441 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %310, i32 0, i32 32, !dbg !4792
  %311 = load i32, i32* %colorspace441, align 4, !dbg !4792
  %cmp442 = icmp eq i32 %311, 1, !dbg !4793
  br i1 %cmp442, label %if.then444, label %if.else573, !dbg !4789

if.then444:                                       ; preds = %if.else440
  %312 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4794
  %chroma_h_shift445 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %312, i32 0, i32 12, !dbg !4797
  %313 = load i32, i32* %chroma_h_shift445, align 4, !dbg !4797
  %tobool446 = icmp ne i32 %313, 0, !dbg !4794
  br i1 %tobool446, label %if.then450, label %lor.lhs.false447, !dbg !4798

lor.lhs.false447:                                 ; preds = %if.then444
  %314 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4799
  %chroma_v_shift448 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %314, i32 0, i32 13, !dbg !4801
  %315 = load i32, i32* %chroma_v_shift448, align 8, !dbg !4801
  %tobool449 = icmp ne i32 %315, 0, !dbg !4799
  br i1 %tobool449, label %if.then450, label %if.end452, !dbg !4802

if.then450:                                       ; preds = %lor.lhs.false447, %if.then444
  %316 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4803
  %avctx451 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %316, i32 0, i32 1, !dbg !4805
  %317 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx451, align 8, !dbg !4805
  %318 = bitcast %struct.AVCodecContext* %317 to i8*, !dbg !4803
  call void (i8*, i32, i8*, ...) @av_log(i8* %318, i32 16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.25, i32 0, i32 0)), !dbg !4806
  store i32 -38, i32* %retval, align 4, !dbg !4807
  br label %return, !dbg !4807

if.end452:                                        ; preds = %lor.lhs.false447
  %319 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4808
  %avctx453 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %319, i32 0, i32 1, !dbg !4810
  %320 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx453, align 8, !dbg !4810
  %bits_per_raw_sample454 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %320, i32 0, i32 143, !dbg !4811
  %321 = load i32, i32* %bits_per_raw_sample454, align 4, !dbg !4811
  %cmp455 = icmp sle i32 %321, 8, !dbg !4812
  br i1 %cmp455, label %land.lhs.true457, label %if.else463, !dbg !4813

land.lhs.true457:                                 ; preds = %if.end452
  %322 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4814
  %transparency458 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %322, i32 0, i32 14, !dbg !4816
  %323 = load i32, i32* %transparency458, align 4, !dbg !4816
  %tobool459 = icmp ne i32 %323, 0, !dbg !4814
  br i1 %tobool459, label %if.else463, label %if.then460, !dbg !4817

if.then460:                                       ; preds = %land.lhs.true457
  %324 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4818
  %avctx461 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %324, i32 0, i32 1, !dbg !4819
  %325 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx461, align 8, !dbg !4819
  %pix_fmt462 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %325, i32 0, i32 25, !dbg !4820
  store i32 123, i32* %pix_fmt462, align 8, !dbg !4821
  br label %if.end572, !dbg !4818

if.else463:                                       ; preds = %land.lhs.true457, %if.end452
  %326 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4822
  %avctx464 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %326, i32 0, i32 1, !dbg !4824
  %327 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx464, align 8, !dbg !4824
  %bits_per_raw_sample465 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %327, i32 0, i32 143, !dbg !4825
  %328 = load i32, i32* %bits_per_raw_sample465, align 4, !dbg !4825
  %cmp466 = icmp sle i32 %328, 8, !dbg !4826
  br i1 %cmp466, label %land.lhs.true468, label %if.else474, !dbg !4827

land.lhs.true468:                                 ; preds = %if.else463
  %329 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4828
  %transparency469 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %329, i32 0, i32 14, !dbg !4830
  %330 = load i32, i32* %transparency469, align 4, !dbg !4830
  %tobool470 = icmp ne i32 %330, 0, !dbg !4828
  br i1 %tobool470, label %if.then471, label %if.else474, !dbg !4831

if.then471:                                       ; preds = %land.lhs.true468
  %331 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4832
  %avctx472 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %331, i32 0, i32 1, !dbg !4833
  %332 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx472, align 8, !dbg !4833
  %pix_fmt473 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %332, i32 0, i32 25, !dbg !4834
  store i32 28, i32* %pix_fmt473, align 8, !dbg !4835
  br label %if.end571, !dbg !4832

if.else474:                                       ; preds = %land.lhs.true468, %if.else463
  %333 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4836
  %avctx475 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %333, i32 0, i32 1, !dbg !4838
  %334 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx475, align 8, !dbg !4838
  %bits_per_raw_sample476 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %334, i32 0, i32 143, !dbg !4839
  %335 = load i32, i32* %bits_per_raw_sample476, align 4, !dbg !4839
  %cmp477 = icmp eq i32 %335, 9, !dbg !4840
  br i1 %cmp477, label %land.lhs.true479, label %if.else485, !dbg !4841

land.lhs.true479:                                 ; preds = %if.else474
  %336 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4842
  %transparency480 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %336, i32 0, i32 14, !dbg !4844
  %337 = load i32, i32* %transparency480, align 4, !dbg !4844
  %tobool481 = icmp ne i32 %337, 0, !dbg !4842
  br i1 %tobool481, label %if.else485, label %if.then482, !dbg !4845

if.then482:                                       ; preds = %land.lhs.true479
  %338 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4846
  %avctx483 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %338, i32 0, i32 1, !dbg !4847
  %339 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx483, align 8, !dbg !4847
  %pix_fmt484 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %339, i32 0, i32 25, !dbg !4848
  store i32 75, i32* %pix_fmt484, align 8, !dbg !4849
  br label %if.end570, !dbg !4846

if.else485:                                       ; preds = %land.lhs.true479, %if.else474
  %340 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4850
  %avctx486 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %340, i32 0, i32 1, !dbg !4852
  %341 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx486, align 8, !dbg !4852
  %bits_per_raw_sample487 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %341, i32 0, i32 143, !dbg !4853
  %342 = load i32, i32* %bits_per_raw_sample487, align 4, !dbg !4853
  %cmp488 = icmp eq i32 %342, 10, !dbg !4854
  br i1 %cmp488, label %land.lhs.true490, label %if.else496, !dbg !4855

land.lhs.true490:                                 ; preds = %if.else485
  %343 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4856
  %transparency491 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %343, i32 0, i32 14, !dbg !4858
  %344 = load i32, i32* %transparency491, align 4, !dbg !4858
  %tobool492 = icmp ne i32 %344, 0, !dbg !4856
  br i1 %tobool492, label %if.else496, label %if.then493, !dbg !4859

if.then493:                                       ; preds = %land.lhs.true490
  %345 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4860
  %avctx494 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %345, i32 0, i32 1, !dbg !4861
  %346 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx494, align 8, !dbg !4861
  %pix_fmt495 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %346, i32 0, i32 25, !dbg !4862
  store i32 77, i32* %pix_fmt495, align 8, !dbg !4863
  br label %if.end569, !dbg !4860

if.else496:                                       ; preds = %land.lhs.true490, %if.else485
  %347 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4864
  %avctx497 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %347, i32 0, i32 1, !dbg !4866
  %348 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx497, align 8, !dbg !4866
  %bits_per_raw_sample498 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %348, i32 0, i32 143, !dbg !4867
  %349 = load i32, i32* %bits_per_raw_sample498, align 4, !dbg !4867
  %cmp499 = icmp eq i32 %349, 10, !dbg !4868
  br i1 %cmp499, label %land.lhs.true501, label %if.else507, !dbg !4869

land.lhs.true501:                                 ; preds = %if.else496
  %350 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4870
  %transparency502 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %350, i32 0, i32 14, !dbg !4872
  %351 = load i32, i32* %transparency502, align 4, !dbg !4872
  %tobool503 = icmp ne i32 %351, 0, !dbg !4870
  br i1 %tobool503, label %if.then504, label %if.else507, !dbg !4873

if.then504:                                       ; preds = %land.lhs.true501
  %352 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4874
  %avctx505 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %352, i32 0, i32 1, !dbg !4875
  %353 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx505, align 8, !dbg !4875
  %pix_fmt506 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %353, i32 0, i32 25, !dbg !4876
  store i32 166, i32* %pix_fmt506, align 8, !dbg !4877
  br label %if.end568, !dbg !4874

if.else507:                                       ; preds = %land.lhs.true501, %if.else496
  %354 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4878
  %avctx508 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %354, i32 0, i32 1, !dbg !4880
  %355 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx508, align 8, !dbg !4880
  %bits_per_raw_sample509 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %355, i32 0, i32 143, !dbg !4881
  %356 = load i32, i32* %bits_per_raw_sample509, align 4, !dbg !4881
  %cmp510 = icmp eq i32 %356, 12, !dbg !4882
  br i1 %cmp510, label %land.lhs.true512, label %if.else518, !dbg !4883

land.lhs.true512:                                 ; preds = %if.else507
  %357 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4884
  %transparency513 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %357, i32 0, i32 14, !dbg !4886
  %358 = load i32, i32* %transparency513, align 4, !dbg !4886
  %tobool514 = icmp ne i32 %358, 0, !dbg !4884
  br i1 %tobool514, label %if.else518, label %if.then515, !dbg !4887

if.then515:                                       ; preds = %land.lhs.true512
  %359 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4888
  %avctx516 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %359, i32 0, i32 1, !dbg !4889
  %360 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx516, align 8, !dbg !4889
  %pix_fmt517 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %360, i32 0, i32 25, !dbg !4890
  store i32 137, i32* %pix_fmt517, align 8, !dbg !4891
  br label %if.end567, !dbg !4888

if.else518:                                       ; preds = %land.lhs.true512, %if.else507
  %361 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4892
  %avctx519 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %361, i32 0, i32 1, !dbg !4894
  %362 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx519, align 8, !dbg !4894
  %bits_per_raw_sample520 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %362, i32 0, i32 143, !dbg !4895
  %363 = load i32, i32* %bits_per_raw_sample520, align 4, !dbg !4895
  %cmp521 = icmp eq i32 %363, 12, !dbg !4896
  br i1 %cmp521, label %land.lhs.true523, label %if.else529, !dbg !4897

land.lhs.true523:                                 ; preds = %if.else518
  %364 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4898
  %transparency524 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %364, i32 0, i32 14, !dbg !4900
  %365 = load i32, i32* %transparency524, align 4, !dbg !4900
  %tobool525 = icmp ne i32 %365, 0, !dbg !4898
  br i1 %tobool525, label %if.then526, label %if.else529, !dbg !4901

if.then526:                                       ; preds = %land.lhs.true523
  %366 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4902
  %avctx527 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %366, i32 0, i32 1, !dbg !4903
  %367 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx527, align 8, !dbg !4903
  %pix_fmt528 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %367, i32 0, i32 25, !dbg !4904
  store i32 164, i32* %pix_fmt528, align 8, !dbg !4905
  br label %if.end566, !dbg !4902

if.else529:                                       ; preds = %land.lhs.true523, %if.else518
  %368 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4906
  %avctx530 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %368, i32 0, i32 1, !dbg !4908
  %369 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx530, align 8, !dbg !4908
  %bits_per_raw_sample531 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %369, i32 0, i32 143, !dbg !4909
  %370 = load i32, i32* %bits_per_raw_sample531, align 4, !dbg !4909
  %cmp532 = icmp eq i32 %370, 14, !dbg !4910
  br i1 %cmp532, label %land.lhs.true534, label %if.else540, !dbg !4911

land.lhs.true534:                                 ; preds = %if.else529
  %371 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4912
  %transparency535 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %371, i32 0, i32 14, !dbg !4914
  %372 = load i32, i32* %transparency535, align 4, !dbg !4914
  %tobool536 = icmp ne i32 %372, 0, !dbg !4912
  br i1 %tobool536, label %if.else540, label %if.then537, !dbg !4915

if.then537:                                       ; preds = %land.lhs.true534
  %373 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4916
  %avctx538 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %373, i32 0, i32 1, !dbg !4917
  %374 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx538, align 8, !dbg !4917
  %pix_fmt539 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %374, i32 0, i32 25, !dbg !4918
  store i32 139, i32* %pix_fmt539, align 8, !dbg !4919
  br label %if.end565, !dbg !4916

if.else540:                                       ; preds = %land.lhs.true534, %if.else529
  %375 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4920
  %avctx541 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %375, i32 0, i32 1, !dbg !4922
  %376 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx541, align 8, !dbg !4922
  %bits_per_raw_sample542 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %376, i32 0, i32 143, !dbg !4923
  %377 = load i32, i32* %bits_per_raw_sample542, align 4, !dbg !4923
  %cmp543 = icmp eq i32 %377, 16, !dbg !4924
  br i1 %cmp543, label %land.lhs.true545, label %if.else551, !dbg !4925

land.lhs.true545:                                 ; preds = %if.else540
  %378 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4926
  %transparency546 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %378, i32 0, i32 14, !dbg !4928
  %379 = load i32, i32* %transparency546, align 4, !dbg !4928
  %tobool547 = icmp ne i32 %379, 0, !dbg !4926
  br i1 %tobool547, label %if.else551, label %if.then548, !dbg !4929

if.then548:                                       ; preds = %land.lhs.true545
  %380 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4930
  %avctx549 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %380, i32 0, i32 1, !dbg !4932
  %381 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx549, align 8, !dbg !4932
  %pix_fmt550 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %381, i32 0, i32 25, !dbg !4933
  store i32 79, i32* %pix_fmt550, align 8, !dbg !4934
  %382 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4935
  %use32bit = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %382, i32 0, i32 35, !dbg !4936
  store i32 1, i32* %use32bit, align 8, !dbg !4937
  br label %if.end564, !dbg !4938

if.else551:                                       ; preds = %land.lhs.true545, %if.else540
  %383 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4939
  %avctx552 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %383, i32 0, i32 1, !dbg !4941
  %384 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx552, align 8, !dbg !4941
  %bits_per_raw_sample553 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %384, i32 0, i32 143, !dbg !4942
  %385 = load i32, i32* %bits_per_raw_sample553, align 4, !dbg !4942
  %cmp554 = icmp eq i32 %385, 16, !dbg !4943
  br i1 %cmp554, label %land.lhs.true556, label %if.end563, !dbg !4944

land.lhs.true556:                                 ; preds = %if.else551
  %386 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4945
  %transparency557 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %386, i32 0, i32 14, !dbg !4947
  %387 = load i32, i32* %transparency557, align 4, !dbg !4947
  %tobool558 = icmp ne i32 %387, 0, !dbg !4945
  br i1 %tobool558, label %if.then559, label %if.end563, !dbg !4948

if.then559:                                       ; preds = %land.lhs.true556
  %388 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4949
  %avctx560 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %388, i32 0, i32 1, !dbg !4951
  %389 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx560, align 8, !dbg !4951
  %pix_fmt561 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %389, i32 0, i32 25, !dbg !4952
  store i32 115, i32* %pix_fmt561, align 8, !dbg !4953
  %390 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4954
  %use32bit562 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %390, i32 0, i32 35, !dbg !4955
  store i32 1, i32* %use32bit562, align 8, !dbg !4956
  br label %if.end563, !dbg !4957

if.end563:                                        ; preds = %if.then559, %land.lhs.true556, %if.else551
  br label %if.end564

if.end564:                                        ; preds = %if.end563, %if.then548
  br label %if.end565

if.end565:                                        ; preds = %if.end564, %if.then537
  br label %if.end566

if.end566:                                        ; preds = %if.end565, %if.then526
  br label %if.end567

if.end567:                                        ; preds = %if.end566, %if.then515
  br label %if.end568

if.end568:                                        ; preds = %if.end567, %if.then504
  br label %if.end569

if.end569:                                        ; preds = %if.end568, %if.then493
  br label %if.end570

if.end570:                                        ; preds = %if.end569, %if.then482
  br label %if.end571

if.end571:                                        ; preds = %if.end570, %if.then471
  br label %if.end572

if.end572:                                        ; preds = %if.end571, %if.then460
  br label %if.end575, !dbg !4958

if.else573:                                       ; preds = %if.else440
  %391 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4959
  %avctx574 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %391, i32 0, i32 1, !dbg !4961
  %392 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx574, align 8, !dbg !4961
  %393 = bitcast %struct.AVCodecContext* %392 to i8*, !dbg !4959
  call void (i8*, i32, i8*, ...) @av_log(i8* %393, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26, i32 0, i32 0)), !dbg !4962
  store i32 -38, i32* %retval, align 4, !dbg !4963
  br label %return, !dbg !4963

if.end575:                                        ; preds = %if.end572
  br label %if.end576

if.end576:                                        ; preds = %if.end575, %if.end439
  %394 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4964
  %avctx577 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %394, i32 0, i32 1, !dbg !4966
  %395 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx577, align 8, !dbg !4966
  %pix_fmt578 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %395, i32 0, i32 25, !dbg !4967
  %396 = load i32, i32* %pix_fmt578, align 8, !dbg !4967
  %cmp579 = icmp eq i32 %396, -1, !dbg !4968
  br i1 %cmp579, label %if.then581, label %if.end583, !dbg !4969

if.then581:                                       ; preds = %if.end576
  %397 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4970
  %avctx582 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %397, i32 0, i32 1, !dbg !4972
  %398 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx582, align 8, !dbg !4972
  %399 = bitcast %struct.AVCodecContext* %398 to i8*, !dbg !4970
  call void (i8*, i32, i8*, ...) @av_log(i8* %399, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0)), !dbg !4973
  store i32 -38, i32* %retval, align 4, !dbg !4974
  br label %return, !dbg !4974

if.end583:                                        ; preds = %if.end576
  br label %do.body, !dbg !4975, !llvm.loop !4976

do.body:                                          ; preds = %if.end583
  br label %do.end, !dbg !4977

do.end:                                           ; preds = %do.body
  %400 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4980
  %version584 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %400, i32 0, i32 7, !dbg !4982
  %401 = load i32, i32* %version584, align 8, !dbg !4982
  %cmp585 = icmp slt i32 %401, 2, !dbg !4983
  br i1 %cmp585, label %if.then587, label %if.else595, !dbg !4984

if.then587:                                       ; preds = %do.end
  %402 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !4985
  %403 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4987
  %quant_table = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %403, i32 0, i32 26, !dbg !4988
  %arraydecay588 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table, i32 0, i32 0, !dbg !4987
  %call589 = call i32 @read_quant_tables(%struct.RangeCoder* %402, [256 x i16]* %arraydecay588), !dbg !4989
  store i32 %call589, i32* %context_count, align 4, !dbg !4990
  %404 = load i32, i32* %context_count, align 4, !dbg !4991
  %cmp590 = icmp slt i32 %404, 0, !dbg !4993
  br i1 %cmp590, label %if.then592, label %if.end594, !dbg !4994

if.then592:                                       ; preds = %if.then587
  %405 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !4995
  %avctx593 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %405, i32 0, i32 1, !dbg !4997
  %406 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx593, align 8, !dbg !4997
  %407 = bitcast %struct.AVCodecContext* %406 to i8*, !dbg !4995
  call void (i8*, i32, i8*, ...) @av_log(i8* %407, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i32 0, i32 0)), !dbg !4998
  store i32 -1094995529, i32* %retval, align 4, !dbg !4999
  br label %return, !dbg !4999

if.end594:                                        ; preds = %if.then587
  %408 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5000
  %max_slice_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %408, i32 0, i32 47, !dbg !5001
  %409 = load i32, i32* %max_slice_count, align 4, !dbg !5001
  %410 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5002
  %slice_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %410, i32 0, i32 46, !dbg !5003
  store i32 %409, i32* %slice_count, align 8, !dbg !5004
  br label %if.end658, !dbg !5005

if.else595:                                       ; preds = %do.end
  %411 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5006
  %version596 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %411, i32 0, i32 7, !dbg !5009
  %412 = load i32, i32* %version596, align 8, !dbg !5009
  %cmp597 = icmp slt i32 %412, 3, !dbg !5010
  br i1 %cmp597, label %if.then599, label %if.else603, !dbg !5006

if.then599:                                       ; preds = %if.else595
  %413 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !5011
  %arraydecay600 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !5013
  %call601 = call i32 @get_symbol(%struct.RangeCoder* %413, i8* %arraydecay600, i32 0), !dbg !5014
  %414 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5015
  %slice_count602 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %414, i32 0, i32 46, !dbg !5016
  store i32 %call601, i32* %slice_count602, align 8, !dbg !5017
  br label %if.end657, !dbg !5018

if.else603:                                       ; preds = %if.else595
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5019, metadata !1706), !dbg !5021
  %415 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !5022
  %bytestream_end = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %415, i32 0, i32 8, !dbg !5023
  %416 = load i8*, i8** %bytestream_end, align 8, !dbg !5023
  store i8* %416, i8** %p, align 8, !dbg !5021
  %417 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5024
  %slice_count604 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %417, i32 0, i32 46, !dbg !5026
  store i32 0, i32* %slice_count604, align 8, !dbg !5027
  br label %for.cond605, !dbg !5024

for.cond605:                                      ; preds = %for.inc653, %if.else603
  %418 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5028
  %slice_count606 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %418, i32 0, i32 46, !dbg !5030
  %419 = load i32, i32* %slice_count606, align 8, !dbg !5030
  %cmp607 = icmp slt i32 %419, 1024, !dbg !5031
  br i1 %cmp607, label %land.rhs, label %land.end, !dbg !5032

land.rhs:                                         ; preds = %for.cond605
  %420 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5033
  %ec = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %420, i32 0, i32 36, !dbg !5035
  %421 = load i32, i32* %ec, align 4, !dbg !5035
  %tobool609 = icmp ne i32 %421, 0, !dbg !5036
  %lnot = xor i1 %tobool609, true, !dbg !5036
  %lnot610 = xor i1 %lnot, true, !dbg !5037
  %lnot.ext = zext i1 %lnot610 to i32, !dbg !5037
  %mul611 = mul nsw i32 5, %lnot.ext, !dbg !5038
  %add612 = add nsw i32 3, %mul611, !dbg !5039
  %conv613 = sext i32 %add612 to i64, !dbg !5040
  %422 = load i8*, i8** %p, align 8, !dbg !5041
  %423 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !5042
  %bytestream_start = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %423, i32 0, i32 6, !dbg !5043
  %424 = load i8*, i8** %bytestream_start, align 8, !dbg !5043
  %sub.ptr.lhs.cast = ptrtoint i8* %422 to i64, !dbg !5044
  %sub.ptr.rhs.cast = ptrtoint i8* %424 to i64, !dbg !5044
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5044
  %cmp614 = icmp slt i64 %conv613, %sub.ptr.sub, !dbg !5045
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond605
  %425 = phi i1 [ false, %for.cond605 ], [ %cmp614, %land.rhs ]
  br i1 %425, label %for.body616, label %for.end656, !dbg !5046

for.body616:                                      ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %trailer, metadata !5048, metadata !1706), !dbg !5050
  %426 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5051
  %ec617 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %426, i32 0, i32 36, !dbg !5052
  %427 = load i32, i32* %ec617, align 4, !dbg !5052
  %tobool618 = icmp ne i32 %427, 0, !dbg !5053
  %lnot619 = xor i1 %tobool618, true, !dbg !5053
  %lnot621 = xor i1 %lnot619, true, !dbg !5054
  %lnot.ext622 = zext i1 %lnot621 to i32, !dbg !5054
  %mul623 = mul nsw i32 5, %lnot.ext622, !dbg !5055
  %add624 = add nsw i32 3, %mul623, !dbg !5056
  store i32 %add624, i32* %trailer, align 4, !dbg !5050
  call void @llvm.dbg.declare(metadata i32* %size, metadata !5057, metadata !1706), !dbg !5058
  %428 = load i8*, i8** %p, align 8, !dbg !5059
  %429 = load i32, i32* %trailer, align 4, !dbg !5060
  %idx.ext = sext i32 %429 to i64, !dbg !5061
  %idx.neg = sub i64 0, %idx.ext, !dbg !5061
  %add.ptr = getelementptr inbounds i8, i8* %428, i64 %idx.neg, !dbg !5061
  %arrayidx625 = getelementptr inbounds i8, i8* %add.ptr, i64 0, !dbg !5062
  %430 = load i8, i8* %arrayidx625, align 1, !dbg !5062
  %conv626 = zext i8 %430 to i32, !dbg !5062
  %shl = shl i32 %conv626, 16, !dbg !5063
  %431 = load i8*, i8** %p, align 8, !dbg !5064
  %432 = load i32, i32* %trailer, align 4, !dbg !5065
  %idx.ext627 = sext i32 %432 to i64, !dbg !5066
  %idx.neg628 = sub i64 0, %idx.ext627, !dbg !5066
  %add.ptr629 = getelementptr inbounds i8, i8* %431, i64 %idx.neg628, !dbg !5066
  %arrayidx630 = getelementptr inbounds i8, i8* %add.ptr629, i64 1, !dbg !5067
  %433 = load i8, i8* %arrayidx630, align 1, !dbg !5067
  %conv631 = zext i8 %433 to i32, !dbg !5067
  %shl632 = shl i32 %conv631, 8, !dbg !5068
  %or = or i32 %shl, %shl632, !dbg !5069
  %434 = load i8*, i8** %p, align 8, !dbg !5070
  %435 = load i32, i32* %trailer, align 4, !dbg !5071
  %idx.ext633 = sext i32 %435 to i64, !dbg !5072
  %idx.neg634 = sub i64 0, %idx.ext633, !dbg !5072
  %add.ptr635 = getelementptr inbounds i8, i8* %434, i64 %idx.neg634, !dbg !5072
  %arrayidx636 = getelementptr inbounds i8, i8* %add.ptr635, i64 2, !dbg !5073
  %436 = load i8, i8* %arrayidx636, align 1, !dbg !5073
  %conv637 = zext i8 %436 to i32, !dbg !5073
  %or638 = or i32 %or, %conv637, !dbg !5074
  store i32 %or638, i32* %size, align 4, !dbg !5058
  %437 = load i32, i32* %size, align 4, !dbg !5075
  %438 = load i32, i32* %trailer, align 4, !dbg !5077
  %add639 = add nsw i32 %437, %438, !dbg !5078
  %conv640 = sext i32 %add639 to i64, !dbg !5075
  %439 = load i8*, i8** %p, align 8, !dbg !5079
  %440 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !5080
  %bytestream_start641 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %440, i32 0, i32 6, !dbg !5081
  %441 = load i8*, i8** %bytestream_start641, align 8, !dbg !5081
  %sub.ptr.lhs.cast642 = ptrtoint i8* %439 to i64, !dbg !5082
  %sub.ptr.rhs.cast643 = ptrtoint i8* %441 to i64, !dbg !5082
  %sub.ptr.sub644 = sub i64 %sub.ptr.lhs.cast642, %sub.ptr.rhs.cast643, !dbg !5082
  %cmp645 = icmp sgt i64 %conv640, %sub.ptr.sub644, !dbg !5083
  br i1 %cmp645, label %if.then647, label %if.end648, !dbg !5084

if.then647:                                       ; preds = %for.body616
  br label %for.end656, !dbg !5085

if.end648:                                        ; preds = %for.body616
  %442 = load i32, i32* %size, align 4, !dbg !5086
  %443 = load i32, i32* %trailer, align 4, !dbg !5087
  %add649 = add nsw i32 %442, %443, !dbg !5088
  %444 = load i8*, i8** %p, align 8, !dbg !5089
  %idx.ext650 = sext i32 %add649 to i64, !dbg !5089
  %idx.neg651 = sub i64 0, %idx.ext650, !dbg !5089
  %add.ptr652 = getelementptr inbounds i8, i8* %444, i64 %idx.neg651, !dbg !5089
  store i8* %add.ptr652, i8** %p, align 8, !dbg !5089
  br label %for.inc653, !dbg !5090

for.inc653:                                       ; preds = %if.end648
  %445 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5091
  %slice_count654 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %445, i32 0, i32 46, !dbg !5092
  %446 = load i32, i32* %slice_count654, align 8, !dbg !5093
  %inc655 = add nsw i32 %446, 1, !dbg !5093
  store i32 %inc655, i32* %slice_count654, align 8, !dbg !5093
  br label %for.cond605, !dbg !5094, !llvm.loop !5096

for.end656:                                       ; preds = %if.then647, %land.end
  br label %if.end657

if.end657:                                        ; preds = %for.end656, %if.then599
  br label %if.end658

if.end658:                                        ; preds = %if.end657, %if.end594
  %447 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5098
  %slice_count659 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %447, i32 0, i32 46, !dbg !5100
  %448 = load i32, i32* %slice_count659, align 8, !dbg !5100
  %cmp660 = icmp ugt i32 %448, 1024, !dbg !5101
  br i1 %cmp660, label %if.then671, label %lor.lhs.false662, !dbg !5102

lor.lhs.false662:                                 ; preds = %if.end658
  %449 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5103
  %slice_count663 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %449, i32 0, i32 46, !dbg !5105
  %450 = load i32, i32* %slice_count663, align 8, !dbg !5105
  %cmp664 = icmp sle i32 %450, 0, !dbg !5106
  br i1 %cmp664, label %if.then671, label %lor.lhs.false666, !dbg !5107

lor.lhs.false666:                                 ; preds = %lor.lhs.false662
  %451 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5108
  %slice_count667 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %451, i32 0, i32 46, !dbg !5110
  %452 = load i32, i32* %slice_count667, align 8, !dbg !5110
  %453 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5111
  %max_slice_count668 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %453, i32 0, i32 47, !dbg !5112
  %454 = load i32, i32* %max_slice_count668, align 4, !dbg !5112
  %cmp669 = icmp sgt i32 %452, %454, !dbg !5113
  br i1 %cmp669, label %if.then671, label %if.end675, !dbg !5114

if.then671:                                       ; preds = %lor.lhs.false666, %lor.lhs.false662, %if.end658
  %455 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5115
  %avctx672 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %455, i32 0, i32 1, !dbg !5117
  %456 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx672, align 8, !dbg !5117
  %457 = bitcast %struct.AVCodecContext* %456 to i8*, !dbg !5115
  %458 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5118
  %slice_count673 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %458, i32 0, i32 46, !dbg !5119
  %459 = load i32, i32* %slice_count673, align 8, !dbg !5119
  %460 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5120
  %max_slice_count674 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %460, i32 0, i32 47, !dbg !5121
  %461 = load i32, i32* %max_slice_count674, align 4, !dbg !5121
  call void (i8*, i32, i8*, ...) @av_log(i8* %457, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28, i32 0, i32 0), i32 %459, i32 %461), !dbg !5122
  store i32 -1094995529, i32* %retval, align 4, !dbg !5123
  br label %return, !dbg !5123

if.end675:                                        ; preds = %lor.lhs.false666
  store i32 0, i32* %j, align 4, !dbg !5124
  br label %for.cond676, !dbg !5126

for.cond676:                                      ; preds = %for.inc813, %if.end675
  %462 = load i32, i32* %j, align 4, !dbg !5127
  %463 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5130
  %slice_count677 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %463, i32 0, i32 46, !dbg !5131
  %464 = load i32, i32* %slice_count677, align 8, !dbg !5131
  %cmp678 = icmp slt i32 %462, %464, !dbg !5132
  br i1 %cmp678, label %for.body680, label %for.end815, !dbg !5133

for.body680:                                      ; preds = %for.cond676
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fs, metadata !5134, metadata !1706), !dbg !5136
  %465 = load i32, i32* %j, align 4, !dbg !5137
  %idxprom681 = sext i32 %465 to i64, !dbg !5138
  %466 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5138
  %slice_context682 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %466, i32 0, i32 45, !dbg !5139
  %arrayidx683 = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context682, i64 0, i64 %idxprom681, !dbg !5138
  %467 = load %struct.FFV1Context*, %struct.FFV1Context** %arrayidx683, align 8, !dbg !5138
  store %struct.FFV1Context* %467, %struct.FFV1Context** %fs, align 8, !dbg !5136
  %468 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5140
  %ac684 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %468, i32 0, i32 23, !dbg !5141
  %469 = load i32, i32* %ac684, align 4, !dbg !5141
  %470 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5142
  %ac685 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %470, i32 0, i32 23, !dbg !5143
  store i32 %469, i32* %ac685, align 4, !dbg !5144
  %471 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5145
  %packed_at_lsb686 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %471, i32 0, i32 42, !dbg !5146
  %472 = load i32, i32* %packed_at_lsb686, align 4, !dbg !5146
  %473 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5147
  %packed_at_lsb687 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %473, i32 0, i32 42, !dbg !5148
  store i32 %472, i32* %packed_at_lsb687, align 4, !dbg !5149
  %474 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5150
  %slice_damaged = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %474, i32 0, i32 38, !dbg !5151
  store i32 0, i32* %slice_damaged, align 4, !dbg !5152
  %475 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5153
  %version688 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %475, i32 0, i32 7, !dbg !5155
  %476 = load i32, i32* %version688, align 8, !dbg !5155
  %cmp689 = icmp eq i32 %476, 2, !dbg !5156
  br i1 %cmp689, label %if.then691, label %if.end758, !dbg !5157

if.then691:                                       ; preds = %for.body680
  %477 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !5158
  %arraydecay692 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !5160
  %call693 = call i32 @get_symbol(%struct.RangeCoder* %477, i8* %arraydecay692, i32 0), !dbg !5161
  %478 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5162
  %width = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %478, i32 0, i32 9, !dbg !5163
  %479 = load i32, i32* %width, align 8, !dbg !5163
  %mul694 = mul nsw i32 %call693, %479, !dbg !5164
  %480 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5165
  %slice_x = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %480, i32 0, i32 52, !dbg !5166
  store i32 %mul694, i32* %slice_x, align 8, !dbg !5167
  %481 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !5168
  %arraydecay695 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !5169
  %call696 = call i32 @get_symbol(%struct.RangeCoder* %481, i8* %arraydecay695, i32 0), !dbg !5170
  %482 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5171
  %height = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %482, i32 0, i32 10, !dbg !5172
  %483 = load i32, i32* %height, align 4, !dbg !5172
  %mul697 = mul nsw i32 %call696, %483, !dbg !5173
  %484 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5174
  %slice_y = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %484, i32 0, i32 53, !dbg !5175
  store i32 %mul697, i32* %slice_y, align 4, !dbg !5176
  %485 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !5177
  %arraydecay698 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !5178
  %call699 = call i32 @get_symbol(%struct.RangeCoder* %485, i8* %arraydecay698, i32 0), !dbg !5179
  %add700 = add nsw i32 %call699, 1, !dbg !5180
  %486 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5181
  %width701 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %486, i32 0, i32 9, !dbg !5182
  %487 = load i32, i32* %width701, align 8, !dbg !5182
  %mul702 = mul nsw i32 %add700, %487, !dbg !5183
  %488 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5184
  %slice_x703 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %488, i32 0, i32 52, !dbg !5185
  %489 = load i32, i32* %slice_x703, align 8, !dbg !5185
  %add704 = add nsw i32 %mul702, %489, !dbg !5186
  %490 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5187
  %slice_width = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %490, i32 0, i32 50, !dbg !5188
  store i32 %add704, i32* %slice_width, align 8, !dbg !5189
  %491 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !5190
  %arraydecay705 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !5191
  %call706 = call i32 @get_symbol(%struct.RangeCoder* %491, i8* %arraydecay705, i32 0), !dbg !5192
  %add707 = add nsw i32 %call706, 1, !dbg !5193
  %492 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5194
  %height708 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %492, i32 0, i32 10, !dbg !5195
  %493 = load i32, i32* %height708, align 4, !dbg !5195
  %mul709 = mul nsw i32 %add707, %493, !dbg !5196
  %494 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5197
  %slice_y710 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %494, i32 0, i32 53, !dbg !5198
  %495 = load i32, i32* %slice_y710, align 4, !dbg !5198
  %add711 = add nsw i32 %mul709, %495, !dbg !5199
  %496 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5200
  %slice_height = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %496, i32 0, i32 51, !dbg !5201
  store i32 %add711, i32* %slice_height, align 4, !dbg !5202
  %497 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5203
  %num_h_slices = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %497, i32 0, i32 49, !dbg !5204
  %498 = load i32, i32* %num_h_slices, align 4, !dbg !5204
  %499 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5205
  %slice_x712 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %499, i32 0, i32 52, !dbg !5206
  %500 = load i32, i32* %slice_x712, align 8, !dbg !5207
  %div = sdiv i32 %500, %498, !dbg !5207
  store i32 %div, i32* %slice_x712, align 8, !dbg !5207
  %501 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5208
  %num_v_slices = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %501, i32 0, i32 48, !dbg !5209
  %502 = load i32, i32* %num_v_slices, align 8, !dbg !5209
  %503 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5210
  %slice_y713 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %503, i32 0, i32 53, !dbg !5211
  %504 = load i32, i32* %slice_y713, align 4, !dbg !5212
  %div714 = sdiv i32 %504, %502, !dbg !5212
  store i32 %div714, i32* %slice_y713, align 4, !dbg !5212
  %505 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5213
  %slice_width715 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %505, i32 0, i32 50, !dbg !5214
  %506 = load i32, i32* %slice_width715, align 8, !dbg !5214
  %507 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5215
  %num_h_slices716 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %507, i32 0, i32 49, !dbg !5216
  %508 = load i32, i32* %num_h_slices716, align 4, !dbg !5216
  %div717 = sdiv i32 %506, %508, !dbg !5217
  %509 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5218
  %slice_x718 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %509, i32 0, i32 52, !dbg !5219
  %510 = load i32, i32* %slice_x718, align 8, !dbg !5219
  %sub = sub nsw i32 %div717, %510, !dbg !5220
  %511 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5221
  %slice_width719 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %511, i32 0, i32 50, !dbg !5222
  store i32 %sub, i32* %slice_width719, align 8, !dbg !5223
  %512 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5224
  %slice_height720 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %512, i32 0, i32 51, !dbg !5225
  %513 = load i32, i32* %slice_height720, align 4, !dbg !5225
  %514 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5226
  %num_v_slices721 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %514, i32 0, i32 48, !dbg !5227
  %515 = load i32, i32* %num_v_slices721, align 8, !dbg !5227
  %div722 = sdiv i32 %513, %515, !dbg !5228
  %516 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5229
  %slice_y723 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %516, i32 0, i32 53, !dbg !5230
  %517 = load i32, i32* %slice_y723, align 4, !dbg !5230
  %sub724 = sub nsw i32 %div722, %517, !dbg !5231
  %518 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5232
  %slice_height725 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %518, i32 0, i32 51, !dbg !5233
  store i32 %sub724, i32* %slice_height725, align 4, !dbg !5234
  %519 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5235
  %slice_width726 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %519, i32 0, i32 50, !dbg !5237
  %520 = load i32, i32* %slice_width726, align 8, !dbg !5237
  %521 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5238
  %width727 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %521, i32 0, i32 9, !dbg !5239
  %522 = load i32, i32* %width727, align 8, !dbg !5239
  %cmp728 = icmp ugt i32 %520, %522, !dbg !5240
  br i1 %cmp728, label %if.then735, label %lor.lhs.false730, !dbg !5241

lor.lhs.false730:                                 ; preds = %if.then691
  %523 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5242
  %slice_height731 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %523, i32 0, i32 51, !dbg !5243
  %524 = load i32, i32* %slice_height731, align 4, !dbg !5243
  %525 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5244
  %height732 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %525, i32 0, i32 10, !dbg !5245
  %526 = load i32, i32* %height732, align 4, !dbg !5245
  %cmp733 = icmp ugt i32 %524, %526, !dbg !5246
  br i1 %cmp733, label %if.then735, label %if.end736, !dbg !5247

if.then735:                                       ; preds = %lor.lhs.false730, %if.then691
  store i32 -1094995529, i32* %retval, align 4, !dbg !5249
  br label %return, !dbg !5249

if.end736:                                        ; preds = %lor.lhs.false730
  %527 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5250
  %slice_x737 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %527, i32 0, i32 52, !dbg !5252
  %528 = load i32, i32* %slice_x737, align 8, !dbg !5252
  %conv738 = zext i32 %528 to i64, !dbg !5253
  %529 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5254
  %slice_width739 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %529, i32 0, i32 50, !dbg !5255
  %530 = load i32, i32* %slice_width739, align 8, !dbg !5255
  %conv740 = sext i32 %530 to i64, !dbg !5256
  %add741 = add i64 %conv738, %conv740, !dbg !5257
  %531 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5258
  %width742 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %531, i32 0, i32 9, !dbg !5259
  %532 = load i32, i32* %width742, align 8, !dbg !5259
  %conv743 = sext i32 %532 to i64, !dbg !5258
  %cmp744 = icmp ugt i64 %add741, %conv743, !dbg !5260
  br i1 %cmp744, label %if.then756, label %lor.lhs.false746, !dbg !5261

lor.lhs.false746:                                 ; preds = %if.end736
  %533 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5262
  %slice_y747 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %533, i32 0, i32 53, !dbg !5264
  %534 = load i32, i32* %slice_y747, align 4, !dbg !5264
  %conv748 = zext i32 %534 to i64, !dbg !5265
  %535 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5266
  %slice_height749 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %535, i32 0, i32 51, !dbg !5267
  %536 = load i32, i32* %slice_height749, align 4, !dbg !5267
  %conv750 = sext i32 %536 to i64, !dbg !5268
  %add751 = add i64 %conv748, %conv750, !dbg !5269
  %537 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5270
  %height752 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %537, i32 0, i32 10, !dbg !5271
  %538 = load i32, i32* %height752, align 4, !dbg !5271
  %conv753 = sext i32 %538 to i64, !dbg !5270
  %cmp754 = icmp ugt i64 %add751, %conv753, !dbg !5272
  br i1 %cmp754, label %if.then756, label %if.end757, !dbg !5273

if.then756:                                       ; preds = %lor.lhs.false746, %if.end736
  store i32 -1094995529, i32* %retval, align 4, !dbg !5274
  br label %return, !dbg !5274

if.end757:                                        ; preds = %lor.lhs.false746
  br label %if.end758, !dbg !5275

if.end758:                                        ; preds = %if.end757, %for.body680
  store i32 0, i32* %i, align 4, !dbg !5276
  br label %for.cond759, !dbg !5278

for.cond759:                                      ; preds = %for.inc810, %if.end758
  %539 = load i32, i32* %i, align 4, !dbg !5279
  %540 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5282
  %plane_count760 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %540, i32 0, i32 22, !dbg !5283
  %541 = load i32, i32* %plane_count760, align 8, !dbg !5283
  %cmp761 = icmp slt i32 %539, %541, !dbg !5284
  br i1 %cmp761, label %for.body763, label %for.end812, !dbg !5285

for.body763:                                      ; preds = %for.cond759
  call void @llvm.dbg.declare(metadata %struct.PlaneContext** %p764, metadata !5286, metadata !1706), !dbg !5290
  %542 = load i32, i32* %i, align 4, !dbg !5291
  %idxprom765 = sext i32 %542 to i64, !dbg !5292
  %543 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5292
  %plane = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %543, i32 0, i32 25, !dbg !5293
  %arrayidx766 = getelementptr inbounds [4 x %struct.PlaneContext], [4 x %struct.PlaneContext]* %plane, i64 0, i64 %idxprom765, !dbg !5292
  store %struct.PlaneContext* %arrayidx766, %struct.PlaneContext** %p764, align 8, !dbg !5290
  %544 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5294
  %version767 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %544, i32 0, i32 7, !dbg !5296
  %545 = load i32, i32* %version767, align 8, !dbg !5296
  %cmp768 = icmp eq i32 %545, 2, !dbg !5297
  br i1 %cmp768, label %if.then770, label %if.else786, !dbg !5298

if.then770:                                       ; preds = %for.body763
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5299, metadata !1706), !dbg !5301
  %546 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !5302
  %arraydecay771 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !5303
  %call772 = call i32 @get_symbol(%struct.RangeCoder* %546, i8* %arraydecay771, i32 0), !dbg !5304
  store i32 %call772, i32* %idx, align 4, !dbg !5301
  %547 = load i32, i32* %idx, align 4, !dbg !5305
  %548 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5307
  %quant_table_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %548, i32 0, i32 44, !dbg !5308
  %549 = load i32, i32* %quant_table_count, align 4, !dbg !5308
  %cmp773 = icmp ugt i32 %547, %549, !dbg !5309
  br i1 %cmp773, label %if.then775, label %if.end777, !dbg !5310

if.then775:                                       ; preds = %if.then770
  %550 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5311
  %avctx776 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %550, i32 0, i32 1, !dbg !5313
  %551 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx776, align 8, !dbg !5313
  %552 = bitcast %struct.AVCodecContext* %551 to i8*, !dbg !5311
  call void (i8*, i32, i8*, ...) @av_log(i8* %552, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i32 0, i32 0)), !dbg !5314
  store i32 -1094995529, i32* %retval, align 4, !dbg !5315
  br label %return, !dbg !5315

if.end777:                                        ; preds = %if.then770
  %553 = load i32, i32* %idx, align 4, !dbg !5316
  %554 = load %struct.PlaneContext*, %struct.PlaneContext** %p764, align 8, !dbg !5317
  %quant_table_index = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %554, i32 0, i32 1, !dbg !5318
  store i32 %553, i32* %quant_table_index, align 8, !dbg !5319
  %555 = load %struct.PlaneContext*, %struct.PlaneContext** %p764, align 8, !dbg !5320
  %quant_table778 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %555, i32 0, i32 0, !dbg !5321
  %arraydecay779 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table778, i32 0, i32 0, !dbg !5322
  %556 = bitcast [256 x i16]* %arraydecay779 to i8*, !dbg !5322
  %557 = load i32, i32* %idx, align 4, !dbg !5323
  %idxprom780 = sext i32 %557 to i64, !dbg !5324
  %558 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5324
  %quant_tables = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %558, i32 0, i32 27, !dbg !5325
  %arrayidx781 = getelementptr inbounds [8 x [5 x [256 x i16]]], [8 x [5 x [256 x i16]]]* %quant_tables, i64 0, i64 %idxprom780, !dbg !5324
  %arraydecay782 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %arrayidx781, i32 0, i32 0, !dbg !5322
  %559 = bitcast [256 x i16]* %arraydecay782 to i8*, !dbg !5322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %556, i8* %559, i64 2560, i32 8, i1 false), !dbg !5322
  %560 = load i32, i32* %idx, align 4, !dbg !5326
  %idxprom783 = sext i32 %560 to i64, !dbg !5327
  %561 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5327
  %context_count784 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %561, i32 0, i32 28, !dbg !5328
  %arrayidx785 = getelementptr inbounds [8 x i32], [8 x i32]* %context_count784, i64 0, i64 %idxprom783, !dbg !5327
  %562 = load i32, i32* %arrayidx785, align 4, !dbg !5327
  store i32 %562, i32* %context_count, align 4, !dbg !5329
  br label %if.end791, !dbg !5330

if.else786:                                       ; preds = %for.body763
  %563 = load %struct.PlaneContext*, %struct.PlaneContext** %p764, align 8, !dbg !5331
  %quant_table787 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %563, i32 0, i32 0, !dbg !5333
  %arraydecay788 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table787, i32 0, i32 0, !dbg !5334
  %564 = bitcast [256 x i16]* %arraydecay788 to i8*, !dbg !5334
  %565 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5335
  %quant_table789 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %565, i32 0, i32 26, !dbg !5336
  %arraydecay790 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table789, i32 0, i32 0, !dbg !5334
  %566 = bitcast [256 x i16]* %arraydecay790 to i8*, !dbg !5334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %564, i8* %566, i64 2560, i32 8, i1 false), !dbg !5334
  br label %if.end791

if.end791:                                        ; preds = %if.else786, %if.end777
  %567 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !5337
  %version792 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %567, i32 0, i32 7, !dbg !5339
  %568 = load i32, i32* %version792, align 8, !dbg !5339
  %cmp793 = icmp sle i32 %568, 2, !dbg !5340
  br i1 %cmp793, label %if.then795, label %if.end809, !dbg !5341

if.then795:                                       ; preds = %if.end791
  br label %do.body796, !dbg !5342, !llvm.loop !5344

do.body796:                                       ; preds = %if.then795
  %569 = load i32, i32* %context_count, align 4, !dbg !5345
  %cmp797 = icmp sge i32 %569, 0, !dbg !5349
  br i1 %cmp797, label %if.end800, label %if.then799, !dbg !5350

if.then799:                                       ; preds = %do.body796
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i32 0, i32 0), i32 806), !dbg !5351
  call void @abort() #10, !dbg !5354
  unreachable, !dbg !5356

if.end800:                                        ; preds = %do.body796
  br label %do.end801, !dbg !5357

do.end801:                                        ; preds = %if.end800
  %570 = load %struct.PlaneContext*, %struct.PlaneContext** %p764, align 8, !dbg !5359
  %context_count802 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %570, i32 0, i32 2, !dbg !5361
  %571 = load i32, i32* %context_count802, align 4, !dbg !5361
  %572 = load i32, i32* %context_count, align 4, !dbg !5362
  %cmp803 = icmp slt i32 %571, %572, !dbg !5363
  br i1 %cmp803, label %if.then805, label %if.end807, !dbg !5364

if.then805:                                       ; preds = %do.end801
  %573 = load %struct.PlaneContext*, %struct.PlaneContext** %p764, align 8, !dbg !5365
  %state806 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %573, i32 0, i32 3, !dbg !5367
  %574 = bitcast [32 x i8]** %state806 to i8*, !dbg !5368
  call void @av_freep(i8* %574), !dbg !5369
  %575 = load %struct.PlaneContext*, %struct.PlaneContext** %p764, align 8, !dbg !5370
  %vlc_state = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %575, i32 0, i32 4, !dbg !5371
  %576 = bitcast %struct.VlcState** %vlc_state to i8*, !dbg !5372
  call void @av_freep(i8* %576), !dbg !5373
  br label %if.end807, !dbg !5374

if.end807:                                        ; preds = %if.then805, %do.end801
  %577 = load i32, i32* %context_count, align 4, !dbg !5375
  %578 = load %struct.PlaneContext*, %struct.PlaneContext** %p764, align 8, !dbg !5376
  %context_count808 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %578, i32 0, i32 2, !dbg !5377
  store i32 %577, i32* %context_count808, align 4, !dbg !5378
  br label %if.end809, !dbg !5379

if.end809:                                        ; preds = %if.end807, %if.end791
  br label %for.inc810, !dbg !5380

for.inc810:                                       ; preds = %if.end809
  %579 = load i32, i32* %i, align 4, !dbg !5381
  %inc811 = add nsw i32 %579, 1, !dbg !5381
  store i32 %inc811, i32* %i, align 4, !dbg !5381
  br label %for.cond759, !dbg !5383, !llvm.loop !5384

for.end812:                                       ; preds = %for.cond759
  br label %for.inc813, !dbg !5386

for.inc813:                                       ; preds = %for.end812
  %580 = load i32, i32* %j, align 4, !dbg !5387
  %inc814 = add nsw i32 %580, 1, !dbg !5387
  store i32 %inc814, i32* %j, align 4, !dbg !5387
  br label %for.cond676, !dbg !5389, !llvm.loop !5390

for.end815:                                       ; preds = %for.cond676
  store i32 0, i32* %retval, align 4, !dbg !5392
  br label %return, !dbg !5392

return:                                           ; preds = %for.end815, %if.then775, %if.then756, %if.then735, %if.then671, %if.then592, %if.then581, %if.else573, %if.then450, %if.else176, %if.else155, %if.then83, %if.then74, %if.then19, %if.then4
  %581 = load i32, i32* %retval, align 4, !dbg !5393
  ret i32 %581, !dbg !5393
}

declare i32 @ff_thread_get_buffer(%struct.AVCodecContext*, %struct.ThreadFrame*, i32) #2

declare void @ff_thread_finish_setup(%struct.AVCodecContext*) #2

declare void @ff_thread_report_progress(%struct.ThreadFrame*, i32, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal double @av_q2d(i64 %a.coerce) #7 !dbg !5394 {
entry:
  %a = alloca %struct.AVRational, align 4
  %0 = bitcast %struct.AVRational* %a to i64*
  store i64 %a.coerce, i64* %0, align 4
  call void @llvm.dbg.declare(metadata %struct.AVRational* %a, metadata !5397, metadata !1706), !dbg !5398
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 0, !dbg !5399
  %1 = load i32, i32* %num, align 4, !dbg !5399
  %conv = sitofp i32 %1 to double, !dbg !5400
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %a, i32 0, i32 1, !dbg !5401
  %2 = load i32, i32* %den, align 4, !dbg !5401
  %conv1 = sitofp i32 %2 to double, !dbg !5402
  %div = fdiv double %conv, %conv1, !dbg !5403
  ret double %div, !dbg !5404
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_slice(%struct.AVCodecContext* %c, i8* %arg) #0 !dbg !5405 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.AVCodecContext*, align 8
  %arg.addr = alloca i8*, align 8
  %fs = alloca %struct.FFV1Context*, align 8
  %f = alloca %struct.FFV1Context*, align 8
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %ret = alloca i32, align 4
  %ps = alloca i32, align 4
  %p = alloca %struct.AVFrame*, align 8
  %i = alloca i32, align 4
  %si = alloca i32, align 4
  %fssrc = alloca %struct.FFV1Context*, align 8
  %fsdst = alloca %struct.FFV1Context*, align 8
  %psrc = alloca %struct.PlaneContext*, align 8
  %pdst = alloca %struct.PlaneContext*, align 8
  %.compoundliteral = alloca [1 x i8], align 1
  %chroma_width = alloca i32, align 4
  %chroma_height = alloca i32, align 4
  %cx = alloca i32, align 4
  %cy = alloca i32, align 4
  %planes = alloca [4 x i8*], align 16
  %planes290 = alloca [4 x i8*], align 16
  %v = alloca i32, align 4
  %.compoundliteral351 = alloca [1 x i8], align 1
  store %struct.AVCodecContext* %c, %struct.AVCodecContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %c.addr, metadata !5408, metadata !1706), !dbg !5409
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5410, metadata !1706), !dbg !5411
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fs, metadata !5412, metadata !1706), !dbg !5413
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5414
  %1 = bitcast i8* %0 to i8**, !dbg !5415
  %2 = load i8*, i8** %1, align 8, !dbg !5416
  %3 = bitcast i8* %2 to %struct.FFV1Context*, !dbg !5416
  store %struct.FFV1Context* %3, %struct.FFV1Context** %fs, align 8, !dbg !5413
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %f, metadata !5417, metadata !1706), !dbg !5418
  %4 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5419
  %avctx = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %4, i32 0, i32 1, !dbg !5420
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !5420
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 6, !dbg !5421
  %6 = load i8*, i8** %priv_data, align 8, !dbg !5421
  %7 = bitcast i8* %6 to %struct.FFV1Context*, !dbg !5419
  store %struct.FFV1Context* %7, %struct.FFV1Context** %f, align 8, !dbg !5418
  call void @llvm.dbg.declare(metadata i32* %width, metadata !5422, metadata !1706), !dbg !5423
  call void @llvm.dbg.declare(metadata i32* %height, metadata !5424, metadata !1706), !dbg !5425
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5426, metadata !1706), !dbg !5427
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5428, metadata !1706), !dbg !5429
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5430, metadata !1706), !dbg !5431
  call void @llvm.dbg.declare(metadata i32* %ps, metadata !5432, metadata !1706), !dbg !5433
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %c.addr, align 8, !dbg !5434
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 25, !dbg !5435
  %9 = load i32, i32* %pix_fmt, align 8, !dbg !5435
  %call = call %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32 %9), !dbg !5436
  %comp = getelementptr inbounds %struct.AVPixFmtDescriptor, %struct.AVPixFmtDescriptor* %call, i32 0, i32 5, !dbg !5437
  %arrayidx = getelementptr inbounds [4 x %struct.AVComponentDescriptor], [4 x %struct.AVComponentDescriptor]* %comp, i64 0, i64 0, !dbg !5436
  %step = getelementptr inbounds %struct.AVComponentDescriptor, %struct.AVComponentDescriptor* %arrayidx, i32 0, i32 1, !dbg !5438
  %10 = load i32, i32* %step, align 4, !dbg !5438
  store i32 %10, i32* %ps, align 4, !dbg !5433
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %p, metadata !5439, metadata !1706), !dbg !5441
  %11 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5442
  %cur = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %11, i32 0, i32 21, !dbg !5443
  %12 = load %struct.AVFrame*, %struct.AVFrame** %cur, align 8, !dbg !5443
  store %struct.AVFrame* %12, %struct.AVFrame** %p, align 8, !dbg !5441
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5444, metadata !1706), !dbg !5445
  call void @llvm.dbg.declare(metadata i32* %si, metadata !5446, metadata !1706), !dbg !5447
  store i32 0, i32* %si, align 4, !dbg !5448
  br label %for.cond, !dbg !5450

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5451
  %14 = load i32, i32* %si, align 4, !dbg !5454
  %idxprom = sext i32 %14 to i64, !dbg !5455
  %15 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5455
  %slice_context = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %15, i32 0, i32 45, !dbg !5456
  %arrayidx1 = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context, i64 0, i64 %idxprom, !dbg !5455
  %16 = load %struct.FFV1Context*, %struct.FFV1Context** %arrayidx1, align 8, !dbg !5455
  %cmp = icmp ne %struct.FFV1Context* %13, %16, !dbg !5457
  br i1 %cmp, label %for.body, label %for.end, !dbg !5458

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !5459

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %si, align 4, !dbg !5461
  %inc = add nsw i32 %17, 1, !dbg !5461
  store i32 %inc, i32* %si, align 4, !dbg !5461
  br label %for.cond, !dbg !5463, !llvm.loop !5464

for.end:                                          ; preds = %for.cond
  %18 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5466
  %fsrc = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %18, i32 0, i32 20, !dbg !5468
  %19 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc, align 8, !dbg !5468
  %tobool = icmp ne %struct.FFV1Context* %19, null, !dbg !5466
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5469

land.lhs.true:                                    ; preds = %for.end
  %20 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5470
  %key_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 7, !dbg !5472
  %21 = load i32, i32* %key_frame, align 8, !dbg !5472
  %tobool2 = icmp ne i32 %21, 0, !dbg !5470
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5473

if.then:                                          ; preds = %land.lhs.true
  %22 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5474
  %last_picture = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %22, i32 0, i32 19, !dbg !5475
  %23 = load i32, i32* %si, align 4, !dbg !5476
  call void @ff_thread_await_progress(%struct.ThreadFrame* %last_picture, i32 %23, i32 0), !dbg !5477
  br label %if.end, !dbg !5477

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.end
  %24 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5478
  %fsrc3 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %24, i32 0, i32 20, !dbg !5480
  %25 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc3, align 8, !dbg !5480
  %tobool4 = icmp ne %struct.FFV1Context* %25, null, !dbg !5478
  br i1 %tobool4, label %land.lhs.true5, label %if.end52, !dbg !5481

land.lhs.true5:                                   ; preds = %if.end
  %26 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5482
  %key_frame6 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %26, i32 0, i32 7, !dbg !5484
  %27 = load i32, i32* %key_frame6, align 8, !dbg !5484
  %tobool7 = icmp ne i32 %27, 0, !dbg !5482
  br i1 %tobool7, label %if.end52, label %if.then8, !dbg !5485

if.then8:                                         ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fssrc, metadata !5486, metadata !1706), !dbg !5488
  %28 = load i32, i32* %si, align 4, !dbg !5489
  %idxprom9 = sext i32 %28 to i64, !dbg !5490
  %29 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5490
  %fsrc10 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %29, i32 0, i32 20, !dbg !5491
  %30 = load %struct.FFV1Context*, %struct.FFV1Context** %fsrc10, align 8, !dbg !5491
  %slice_context11 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %30, i32 0, i32 45, !dbg !5492
  %arrayidx12 = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context11, i64 0, i64 %idxprom9, !dbg !5490
  %31 = load %struct.FFV1Context*, %struct.FFV1Context** %arrayidx12, align 8, !dbg !5490
  store %struct.FFV1Context* %31, %struct.FFV1Context** %fssrc, align 8, !dbg !5488
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fsdst, metadata !5493, metadata !1706), !dbg !5494
  %32 = load i32, i32* %si, align 4, !dbg !5495
  %idxprom13 = sext i32 %32 to i64, !dbg !5496
  %33 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5496
  %slice_context14 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %33, i32 0, i32 45, !dbg !5497
  %arrayidx15 = getelementptr inbounds [1024 x %struct.FFV1Context*], [1024 x %struct.FFV1Context*]* %slice_context14, i64 0, i64 %idxprom13, !dbg !5496
  %34 = load %struct.FFV1Context*, %struct.FFV1Context** %arrayidx15, align 8, !dbg !5496
  store %struct.FFV1Context* %34, %struct.FFV1Context** %fsdst, align 8, !dbg !5494
  %35 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5498
  %key_frame16 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %35, i32 0, i32 7, !dbg !5500
  %36 = load i32, i32* %key_frame16, align 8, !dbg !5500
  %tobool17 = icmp ne i32 %36, 0, !dbg !5498
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !5501

if.then18:                                        ; preds = %if.then8
  %37 = load %struct.FFV1Context*, %struct.FFV1Context** %fssrc, align 8, !dbg !5502
  %slice_damaged = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %37, i32 0, i32 38, !dbg !5503
  %38 = load i32, i32* %slice_damaged, align 4, !dbg !5503
  %39 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst, align 8, !dbg !5504
  %slice_damaged19 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %39, i32 0, i32 38, !dbg !5505
  %40 = load i32, i32* %slice_damaged19, align 4, !dbg !5506
  %or = or i32 %40, %38, !dbg !5506
  store i32 %or, i32* %slice_damaged19, align 4, !dbg !5506
  br label %if.end20, !dbg !5504

if.end20:                                         ; preds = %if.then18, %if.then8
  store i32 0, i32* %i, align 4, !dbg !5507
  br label %for.cond21, !dbg !5509

for.cond21:                                       ; preds = %for.inc49, %if.end20
  %41 = load i32, i32* %i, align 4, !dbg !5510
  %42 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5513
  %plane_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %42, i32 0, i32 22, !dbg !5514
  %43 = load i32, i32* %plane_count, align 8, !dbg !5514
  %cmp22 = icmp slt i32 %41, %43, !dbg !5515
  br i1 %cmp22, label %for.body23, label %for.end51, !dbg !5516

for.body23:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata %struct.PlaneContext** %psrc, metadata !5517, metadata !1706), !dbg !5519
  %44 = load i32, i32* %i, align 4, !dbg !5520
  %idxprom24 = sext i32 %44 to i64, !dbg !5521
  %45 = load %struct.FFV1Context*, %struct.FFV1Context** %fssrc, align 8, !dbg !5521
  %plane = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %45, i32 0, i32 25, !dbg !5522
  %arrayidx25 = getelementptr inbounds [4 x %struct.PlaneContext], [4 x %struct.PlaneContext]* %plane, i64 0, i64 %idxprom24, !dbg !5521
  store %struct.PlaneContext* %arrayidx25, %struct.PlaneContext** %psrc, align 8, !dbg !5519
  call void @llvm.dbg.declare(metadata %struct.PlaneContext** %pdst, metadata !5523, metadata !1706), !dbg !5524
  %46 = load i32, i32* %i, align 4, !dbg !5525
  %idxprom26 = sext i32 %46 to i64, !dbg !5526
  %47 = load %struct.FFV1Context*, %struct.FFV1Context** %fsdst, align 8, !dbg !5526
  %plane27 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %47, i32 0, i32 25, !dbg !5527
  %arrayidx28 = getelementptr inbounds [4 x %struct.PlaneContext], [4 x %struct.PlaneContext]* %plane27, i64 0, i64 %idxprom26, !dbg !5526
  store %struct.PlaneContext* %arrayidx28, %struct.PlaneContext** %pdst, align 8, !dbg !5524
  %48 = load %struct.PlaneContext*, %struct.PlaneContext** %pdst, align 8, !dbg !5528
  %state = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %48, i32 0, i32 3, !dbg !5529
  %49 = load [32 x i8]*, [32 x i8]** %state, align 8, !dbg !5529
  %50 = bitcast [32 x i8]* %49 to i8*, !dbg !5528
  call void @av_free(i8* %50), !dbg !5530
  %51 = load %struct.PlaneContext*, %struct.PlaneContext** %pdst, align 8, !dbg !5531
  %vlc_state = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %51, i32 0, i32 4, !dbg !5532
  %52 = load %struct.VlcState*, %struct.VlcState** %vlc_state, align 8, !dbg !5532
  %53 = bitcast %struct.VlcState* %52 to i8*, !dbg !5531
  call void @av_free(i8* %53), !dbg !5533
  %54 = load %struct.PlaneContext*, %struct.PlaneContext** %pdst, align 8, !dbg !5534
  %55 = bitcast %struct.PlaneContext* %54 to i8*, !dbg !5535
  %56 = load %struct.PlaneContext*, %struct.PlaneContext** %psrc, align 8, !dbg !5536
  %57 = bitcast %struct.PlaneContext* %56 to i8*, !dbg !5535
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %57, i64 2592, i32 8, i1 false), !dbg !5535
  %58 = load %struct.PlaneContext*, %struct.PlaneContext** %pdst, align 8, !dbg !5537
  %state29 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %58, i32 0, i32 3, !dbg !5538
  store [32 x i8]* null, [32 x i8]** %state29, align 8, !dbg !5539
  %59 = load %struct.PlaneContext*, %struct.PlaneContext** %pdst, align 8, !dbg !5540
  %vlc_state30 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %59, i32 0, i32 4, !dbg !5541
  store %struct.VlcState* null, %struct.VlcState** %vlc_state30, align 8, !dbg !5542
  %60 = load %struct.FFV1Context*, %struct.FFV1Context** %fssrc, align 8, !dbg !5543
  %ac = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %60, i32 0, i32 23, !dbg !5545
  %61 = load i32, i32* %ac, align 4, !dbg !5545
  %tobool31 = icmp ne i32 %61, 0, !dbg !5543
  br i1 %tobool31, label %if.then32, label %if.else, !dbg !5546

if.then32:                                        ; preds = %for.body23
  %62 = load %struct.PlaneContext*, %struct.PlaneContext** %psrc, align 8, !dbg !5547
  %context_count = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %62, i32 0, i32 2, !dbg !5549
  %63 = load i32, i32* %context_count, align 4, !dbg !5549
  %conv = sext i32 %63 to i64, !dbg !5547
  %call33 = call i8* @av_malloc_array(i64 32, i64 %conv), !dbg !5550
  %64 = bitcast i8* %call33 to [32 x i8]*, !dbg !5550
  %65 = load %struct.PlaneContext*, %struct.PlaneContext** %pdst, align 8, !dbg !5551
  %state34 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %65, i32 0, i32 3, !dbg !5552
  store [32 x i8]* %64, [32 x i8]** %state34, align 8, !dbg !5553
  %66 = load %struct.PlaneContext*, %struct.PlaneContext** %pdst, align 8, !dbg !5554
  %state35 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %66, i32 0, i32 3, !dbg !5555
  %67 = load [32 x i8]*, [32 x i8]** %state35, align 8, !dbg !5555
  %68 = bitcast [32 x i8]* %67 to i8*, !dbg !5556
  %69 = load %struct.PlaneContext*, %struct.PlaneContext** %psrc, align 8, !dbg !5557
  %state36 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %69, i32 0, i32 3, !dbg !5558
  %70 = load [32 x i8]*, [32 x i8]** %state36, align 8, !dbg !5558
  %71 = bitcast [32 x i8]* %70 to i8*, !dbg !5556
  %72 = load %struct.PlaneContext*, %struct.PlaneContext** %psrc, align 8, !dbg !5559
  %context_count37 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %72, i32 0, i32 2, !dbg !5560
  %73 = load i32, i32* %context_count37, align 4, !dbg !5560
  %mul = mul nsw i32 32, %73, !dbg !5561
  %conv38 = sext i32 %mul to i64, !dbg !5562
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %71, i64 %conv38, i32 1, i1 false), !dbg !5556
  br label %if.end48, !dbg !5563

if.else:                                          ; preds = %for.body23
  %74 = load %struct.PlaneContext*, %struct.PlaneContext** %psrc, align 8, !dbg !5564
  %context_count39 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %74, i32 0, i32 2, !dbg !5566
  %75 = load i32, i32* %context_count39, align 4, !dbg !5566
  %conv40 = sext i32 %75 to i64, !dbg !5564
  %call41 = call i8* @av_malloc_array(i64 6, i64 %conv40), !dbg !5567
  %76 = bitcast i8* %call41 to %struct.VlcState*, !dbg !5567
  %77 = load %struct.PlaneContext*, %struct.PlaneContext** %pdst, align 8, !dbg !5568
  %vlc_state42 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %77, i32 0, i32 4, !dbg !5569
  store %struct.VlcState* %76, %struct.VlcState** %vlc_state42, align 8, !dbg !5570
  %78 = load %struct.PlaneContext*, %struct.PlaneContext** %pdst, align 8, !dbg !5571
  %vlc_state43 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %78, i32 0, i32 4, !dbg !5572
  %79 = load %struct.VlcState*, %struct.VlcState** %vlc_state43, align 8, !dbg !5572
  %80 = bitcast %struct.VlcState* %79 to i8*, !dbg !5573
  %81 = load %struct.PlaneContext*, %struct.PlaneContext** %psrc, align 8, !dbg !5574
  %vlc_state44 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %81, i32 0, i32 4, !dbg !5575
  %82 = load %struct.VlcState*, %struct.VlcState** %vlc_state44, align 8, !dbg !5575
  %83 = bitcast %struct.VlcState* %82 to i8*, !dbg !5573
  %84 = load %struct.PlaneContext*, %struct.PlaneContext** %psrc, align 8, !dbg !5576
  %context_count45 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %84, i32 0, i32 2, !dbg !5577
  %85 = load i32, i32* %context_count45, align 4, !dbg !5577
  %conv46 = sext i32 %85 to i64, !dbg !5576
  %mul47 = mul i64 6, %conv46, !dbg !5578
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %83, i64 %mul47, i32 2, i1 false), !dbg !5573
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then32
  br label %for.inc49, !dbg !5579

for.inc49:                                        ; preds = %if.end48
  %86 = load i32, i32* %i, align 4, !dbg !5580
  %inc50 = add nsw i32 %86, 1, !dbg !5580
  store i32 %inc50, i32* %i, align 4, !dbg !5580
  br label %for.cond21, !dbg !5582, !llvm.loop !5583

for.end51:                                        ; preds = %for.cond21
  br label %if.end52, !dbg !5585

if.end52:                                         ; preds = %for.end51, %land.lhs.true5, %if.end
  %87 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5586
  %slice_rct_by_coef = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %87, i32 0, i32 56, !dbg !5587
  store i32 1, i32* %slice_rct_by_coef, align 8, !dbg !5588
  %88 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5589
  %slice_rct_ry_coef = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %88, i32 0, i32 57, !dbg !5590
  store i32 1, i32* %slice_rct_ry_coef, align 4, !dbg !5591
  %89 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5592
  %version = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %89, i32 0, i32 7, !dbg !5594
  %90 = load i32, i32* %version, align 8, !dbg !5594
  %cmp53 = icmp sgt i32 %90, 2, !dbg !5595
  br i1 %cmp53, label %if.then55, label %if.end67, !dbg !5596

if.then55:                                        ; preds = %if.end52
  %91 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5597
  %92 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5600
  %call56 = call i32 @ff_ffv1_init_slice_state(%struct.FFV1Context* %91, %struct.FFV1Context* %92), !dbg !5601
  %cmp57 = icmp slt i32 %call56, 0, !dbg !5602
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !5603

if.then59:                                        ; preds = %if.then55
  store i32 -12, i32* %retval, align 4, !dbg !5604
  br label %return, !dbg !5604

if.end60:                                         ; preds = %if.then55
  %93 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5605
  %94 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5607
  %call61 = call i32 @decode_slice_header(%struct.FFV1Context* %93, %struct.FFV1Context* %94), !dbg !5608
  %cmp62 = icmp slt i32 %call61, 0, !dbg !5609
  br i1 %cmp62, label %if.then64, label %if.end66, !dbg !5610

if.then64:                                        ; preds = %if.end60
  %95 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5611
  %slice_width = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %95, i32 0, i32 50, !dbg !5613
  store i32 0, i32* %slice_width, align 8, !dbg !5614
  %96 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5615
  %slice_height = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %96, i32 0, i32 51, !dbg !5616
  store i32 0, i32* %slice_height, align 4, !dbg !5617
  %97 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5618
  %slice_y = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %97, i32 0, i32 53, !dbg !5619
  store i32 0, i32* %slice_y, align 4, !dbg !5620
  %98 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5621
  %slice_x = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %98, i32 0, i32 52, !dbg !5622
  store i32 0, i32* %slice_x, align 8, !dbg !5623
  %99 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5624
  %slice_damaged65 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %99, i32 0, i32 38, !dbg !5625
  store i32 1, i32* %slice_damaged65, align 4, !dbg !5626
  store i32 -1094995529, i32* %retval, align 4, !dbg !5627
  br label %return, !dbg !5627

if.end66:                                         ; preds = %if.end60
  br label %if.end67, !dbg !5628

if.end67:                                         ; preds = %if.end66, %if.end52
  %100 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5629
  %101 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5631
  %call68 = call i32 @ff_ffv1_init_slice_state(%struct.FFV1Context* %100, %struct.FFV1Context* %101), !dbg !5632
  store i32 %call68, i32* %ret, align 4, !dbg !5633
  %cmp69 = icmp slt i32 %call68, 0, !dbg !5634
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !5635

if.then71:                                        ; preds = %if.end67
  %102 = load i32, i32* %ret, align 4, !dbg !5636
  store i32 %102, i32* %retval, align 4, !dbg !5637
  br label %return, !dbg !5637

if.end72:                                         ; preds = %if.end67
  %103 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5638
  %cur73 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %103, i32 0, i32 21, !dbg !5640
  %104 = load %struct.AVFrame*, %struct.AVFrame** %cur73, align 8, !dbg !5640
  %key_frame74 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %104, i32 0, i32 7, !dbg !5641
  %105 = load i32, i32* %key_frame74, align 8, !dbg !5641
  %tobool75 = icmp ne i32 %105, 0, !dbg !5638
  br i1 %tobool75, label %if.then77, label %lor.lhs.false, !dbg !5642

lor.lhs.false:                                    ; preds = %if.end72
  %106 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5643
  %slice_reset_contexts = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %106, i32 0, i32 54, !dbg !5645
  %107 = load i32, i32* %slice_reset_contexts, align 8, !dbg !5645
  %tobool76 = icmp ne i32 %107, 0, !dbg !5643
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !5646

if.then77:                                        ; preds = %lor.lhs.false, %if.end72
  %108 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5647
  %109 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5648
  call void @ff_ffv1_clear_slice_state(%struct.FFV1Context* %108, %struct.FFV1Context* %109), !dbg !5649
  br label %if.end78, !dbg !5649

if.end78:                                         ; preds = %if.then77, %lor.lhs.false
  %110 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5650
  %slice_width79 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %110, i32 0, i32 50, !dbg !5651
  %111 = load i32, i32* %slice_width79, align 8, !dbg !5651
  store i32 %111, i32* %width, align 4, !dbg !5652
  %112 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5653
  %slice_height80 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %112, i32 0, i32 51, !dbg !5654
  %113 = load i32, i32* %slice_height80, align 4, !dbg !5654
  store i32 %113, i32* %height, align 4, !dbg !5655
  %114 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5656
  %slice_x81 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %114, i32 0, i32 52, !dbg !5657
  %115 = load i32, i32* %slice_x81, align 8, !dbg !5657
  store i32 %115, i32* %x, align 4, !dbg !5658
  %116 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5659
  %slice_y82 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %116, i32 0, i32 53, !dbg !5660
  %117 = load i32, i32* %slice_y82, align 4, !dbg !5660
  store i32 %117, i32* %y, align 4, !dbg !5661
  %118 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5662
  %ac83 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %118, i32 0, i32 23, !dbg !5664
  %119 = load i32, i32* %ac83, align 4, !dbg !5664
  %cmp84 = icmp eq i32 %119, 0, !dbg !5665
  br i1 %cmp84, label %if.then86, label %if.end126, !dbg !5666

if.then86:                                        ; preds = %if.end78
  %120 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5667
  %version87 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %120, i32 0, i32 7, !dbg !5670
  %121 = load i32, i32* %version87, align 8, !dbg !5670
  %cmp88 = icmp eq i32 %121, 3, !dbg !5671
  br i1 %cmp88, label %land.lhs.true90, label %lor.lhs.false93, !dbg !5672

land.lhs.true90:                                  ; preds = %if.then86
  %122 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5673
  %micro_version = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %122, i32 0, i32 8, !dbg !5675
  %123 = load i32, i32* %micro_version, align 4, !dbg !5675
  %cmp91 = icmp sgt i32 %123, 1, !dbg !5676
  br i1 %cmp91, label %if.then97, label %lor.lhs.false93, !dbg !5677

lor.lhs.false93:                                  ; preds = %land.lhs.true90, %if.then86
  %124 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5678
  %version94 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %124, i32 0, i32 7, !dbg !5680
  %125 = load i32, i32* %version94, align 8, !dbg !5680
  %cmp95 = icmp sgt i32 %125, 3, !dbg !5681
  br i1 %cmp95, label %if.then97, label %if.end100, !dbg !5682

if.then97:                                        ; preds = %lor.lhs.false93, %land.lhs.true90
  %126 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5683
  %c98 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %126, i32 0, i32 2, !dbg !5684
  %arrayinit.begin = getelementptr inbounds [1 x i8], [1 x i8]* %.compoundliteral, i64 0, i64 0, !dbg !5685
  store i8 -127, i8* %arrayinit.begin, align 1, !dbg !5685
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %.compoundliteral, i32 0, i32 0, !dbg !5686
  %call99 = call i32 @get_rac(%struct.RangeCoder* %c98, i8* %arraydecay), !dbg !5687
  br label %if.end100, !dbg !5687

if.end100:                                        ; preds = %if.then97, %lor.lhs.false93
  %127 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5688
  %version101 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %127, i32 0, i32 7, !dbg !5689
  %128 = load i32, i32* %version101, align 8, !dbg !5689
  %cmp102 = icmp sgt i32 %128, 2, !dbg !5690
  br i1 %cmp102, label %cond.true, label %lor.lhs.false104, !dbg !5691

lor.lhs.false104:                                 ; preds = %if.end100
  %129 = load i32, i32* %x, align 4, !dbg !5692
  %tobool105 = icmp ne i32 %129, 0, !dbg !5692
  br i1 %tobool105, label %cond.false, label %land.lhs.true106, !dbg !5694

land.lhs.true106:                                 ; preds = %lor.lhs.false104
  %130 = load i32, i32* %y, align 4, !dbg !5695
  %tobool107 = icmp ne i32 %130, 0, !dbg !5695
  br i1 %tobool107, label %cond.false, label %cond.true, !dbg !5697

cond.true:                                        ; preds = %land.lhs.true106, %if.end100
  %131 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5698
  %c108 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %131, i32 0, i32 2, !dbg !5700
  %bytestream = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %c108, i32 0, i32 7, !dbg !5701
  %132 = load i8*, i8** %bytestream, align 8, !dbg !5701
  %133 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5702
  %c109 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %133, i32 0, i32 2, !dbg !5703
  %bytestream_start = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %c109, i32 0, i32 6, !dbg !5704
  %134 = load i8*, i8** %bytestream_start, align 8, !dbg !5704
  %sub.ptr.lhs.cast = ptrtoint i8* %132 to i64, !dbg !5705
  %sub.ptr.rhs.cast = ptrtoint i8* %134 to i64, !dbg !5705
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5705
  %sub = sub nsw i64 %sub.ptr.sub, 1, !dbg !5706
  br label %cond.end, !dbg !5707

cond.false:                                       ; preds = %land.lhs.true106, %lor.lhs.false104
  br label %cond.end, !dbg !5708

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ 0, %cond.false ], !dbg !5710
  %conv110 = trunc i64 %cond to i32, !dbg !5710
  %135 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5712
  %ac_byte_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %135, i32 0, i32 24, !dbg !5713
  store i32 %conv110, i32* %ac_byte_count, align 8, !dbg !5714
  %136 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5715
  %gb = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %136, i32 0, i32 3, !dbg !5716
  %137 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5717
  %c111 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %137, i32 0, i32 2, !dbg !5718
  %bytestream_start112 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %c111, i32 0, i32 6, !dbg !5719
  %138 = load i8*, i8** %bytestream_start112, align 8, !dbg !5719
  %139 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5720
  %ac_byte_count113 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %139, i32 0, i32 24, !dbg !5721
  %140 = load i32, i32* %ac_byte_count113, align 8, !dbg !5721
  %idx.ext = sext i32 %140 to i64, !dbg !5722
  %add.ptr = getelementptr inbounds i8, i8* %138, i64 %idx.ext, !dbg !5722
  %141 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5723
  %c114 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %141, i32 0, i32 2, !dbg !5724
  %bytestream_end = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %c114, i32 0, i32 8, !dbg !5725
  %142 = load i8*, i8** %bytestream_end, align 8, !dbg !5725
  %143 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5726
  %c115 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %143, i32 0, i32 2, !dbg !5727
  %bytestream_start116 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %c115, i32 0, i32 6, !dbg !5728
  %144 = load i8*, i8** %bytestream_start116, align 8, !dbg !5728
  %sub.ptr.lhs.cast117 = ptrtoint i8* %142 to i64, !dbg !5729
  %sub.ptr.rhs.cast118 = ptrtoint i8* %144 to i64, !dbg !5729
  %sub.ptr.sub119 = sub i64 %sub.ptr.lhs.cast117, %sub.ptr.rhs.cast118, !dbg !5729
  %145 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5730
  %ac_byte_count120 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %145, i32 0, i32 24, !dbg !5731
  %146 = load i32, i32* %ac_byte_count120, align 8, !dbg !5731
  %conv121 = sext i32 %146 to i64, !dbg !5730
  %sub122 = sub nsw i64 %sub.ptr.sub119, %conv121, !dbg !5732
  %mul123 = mul nsw i64 %sub122, 8, !dbg !5733
  %conv124 = trunc i64 %mul123 to i32, !dbg !5734
  %call125 = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %add.ptr, i32 %conv124), !dbg !5735
  br label %if.end126, !dbg !5736

if.end126:                                        ; preds = %cond.end, %if.end78
  %147 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5737
  %colorspace = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %147, i32 0, i32 32, !dbg !5739
  %148 = load i32, i32* %colorspace, align 4, !dbg !5739
  %cmp127 = icmp eq i32 %148, 0, !dbg !5740
  br i1 %cmp127, label %land.lhs.true129, label %if.else207, !dbg !5741

land.lhs.true129:                                 ; preds = %if.end126
  %149 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5742
  %chroma_planes = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %149, i32 0, i32 11, !dbg !5744
  %150 = load i32, i32* %chroma_planes, align 8, !dbg !5744
  %tobool130 = icmp ne i32 %150, 0, !dbg !5742
  br i1 %tobool130, label %if.then133, label %lor.lhs.false131, !dbg !5745

lor.lhs.false131:                                 ; preds = %land.lhs.true129
  %151 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5746
  %transparency = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %151, i32 0, i32 14, !dbg !5748
  %152 = load i32, i32* %transparency, align 4, !dbg !5748
  %tobool132 = icmp ne i32 %152, 0, !dbg !5746
  br i1 %tobool132, label %if.else207, label %if.then133, !dbg !5749

if.then133:                                       ; preds = %lor.lhs.false131, %land.lhs.true129
  call void @llvm.dbg.declare(metadata i32* %chroma_width, metadata !5750, metadata !1706), !dbg !5752
  %153 = load i32, i32* %width, align 4, !dbg !5753
  %sub134 = sub nsw i32 0, %153, !dbg !5754
  %154 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5755
  %chroma_h_shift = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %154, i32 0, i32 12, !dbg !5756
  %155 = load i32, i32* %chroma_h_shift, align 4, !dbg !5756
  %shr = ashr i32 %sub134, %155, !dbg !5757
  %sub135 = sub nsw i32 0, %shr, !dbg !5758
  store i32 %sub135, i32* %chroma_width, align 4, !dbg !5752
  call void @llvm.dbg.declare(metadata i32* %chroma_height, metadata !5759, metadata !1706), !dbg !5760
  %156 = load i32, i32* %height, align 4, !dbg !5761
  %sub136 = sub nsw i32 0, %156, !dbg !5762
  %157 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5763
  %chroma_v_shift = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %157, i32 0, i32 13, !dbg !5764
  %158 = load i32, i32* %chroma_v_shift, align 8, !dbg !5764
  %shr137 = ashr i32 %sub136, %158, !dbg !5765
  %sub138 = sub nsw i32 0, %shr137, !dbg !5766
  store i32 %sub138, i32* %chroma_height, align 4, !dbg !5760
  call void @llvm.dbg.declare(metadata i32* %cx, metadata !5767, metadata !1706), !dbg !5768
  %159 = load i32, i32* %x, align 4, !dbg !5769
  %160 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5770
  %chroma_h_shift139 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %160, i32 0, i32 12, !dbg !5771
  %161 = load i32, i32* %chroma_h_shift139, align 4, !dbg !5771
  %shr140 = ashr i32 %159, %161, !dbg !5772
  store i32 %shr140, i32* %cx, align 4, !dbg !5768
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !5773, metadata !1706), !dbg !5774
  %162 = load i32, i32* %y, align 4, !dbg !5775
  %163 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5776
  %chroma_v_shift141 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %163, i32 0, i32 13, !dbg !5777
  %164 = load i32, i32* %chroma_v_shift141, align 8, !dbg !5777
  %shr142 = ashr i32 %162, %164, !dbg !5778
  store i32 %shr142, i32* %cy, align 4, !dbg !5774
  %165 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5779
  %166 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5780
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %166, i32 0, i32 0, !dbg !5781
  %arrayidx143 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !5780
  %167 = load i8*, i8** %arrayidx143, align 8, !dbg !5780
  %168 = load i32, i32* %ps, align 4, !dbg !5782
  %169 = load i32, i32* %x, align 4, !dbg !5783
  %mul144 = mul nsw i32 %168, %169, !dbg !5784
  %idx.ext145 = sext i32 %mul144 to i64, !dbg !5785
  %add.ptr146 = getelementptr inbounds i8, i8* %167, i64 %idx.ext145, !dbg !5785
  %170 = load i32, i32* %y, align 4, !dbg !5786
  %171 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5787
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %171, i32 0, i32 1, !dbg !5788
  %arrayidx147 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !5787
  %172 = load i32, i32* %arrayidx147, align 8, !dbg !5787
  %mul148 = mul nsw i32 %170, %172, !dbg !5789
  %idx.ext149 = sext i32 %mul148 to i64, !dbg !5790
  %add.ptr150 = getelementptr inbounds i8, i8* %add.ptr146, i64 %idx.ext149, !dbg !5790
  %173 = load i32, i32* %width, align 4, !dbg !5791
  %174 = load i32, i32* %height, align 4, !dbg !5792
  %175 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5793
  %linesize151 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %175, i32 0, i32 1, !dbg !5794
  %arrayidx152 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize151, i64 0, i64 0, !dbg !5793
  %176 = load i32, i32* %arrayidx152, align 8, !dbg !5793
  %call153 = call i32 @decode_plane(%struct.FFV1Context* %165, i8* %add.ptr150, i32 %173, i32 %174, i32 %176, i32 0, i32 1), !dbg !5795
  %177 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5796
  %chroma_planes154 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %177, i32 0, i32 11, !dbg !5798
  %178 = load i32, i32* %chroma_planes154, align 8, !dbg !5798
  %tobool155 = icmp ne i32 %178, 0, !dbg !5796
  br i1 %tobool155, label %if.then156, label %if.end183, !dbg !5799

if.then156:                                       ; preds = %if.then133
  %179 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5800
  %180 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5802
  %data157 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %180, i32 0, i32 0, !dbg !5803
  %arrayidx158 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data157, i64 0, i64 1, !dbg !5802
  %181 = load i8*, i8** %arrayidx158, align 8, !dbg !5802
  %182 = load i32, i32* %ps, align 4, !dbg !5804
  %183 = load i32, i32* %cx, align 4, !dbg !5805
  %mul159 = mul nsw i32 %182, %183, !dbg !5806
  %idx.ext160 = sext i32 %mul159 to i64, !dbg !5807
  %add.ptr161 = getelementptr inbounds i8, i8* %181, i64 %idx.ext160, !dbg !5807
  %184 = load i32, i32* %cy, align 4, !dbg !5808
  %185 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5809
  %linesize162 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %185, i32 0, i32 1, !dbg !5810
  %arrayidx163 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize162, i64 0, i64 1, !dbg !5809
  %186 = load i32, i32* %arrayidx163, align 4, !dbg !5809
  %mul164 = mul nsw i32 %184, %186, !dbg !5811
  %idx.ext165 = sext i32 %mul164 to i64, !dbg !5812
  %add.ptr166 = getelementptr inbounds i8, i8* %add.ptr161, i64 %idx.ext165, !dbg !5812
  %187 = load i32, i32* %chroma_width, align 4, !dbg !5813
  %188 = load i32, i32* %chroma_height, align 4, !dbg !5814
  %189 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5815
  %linesize167 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %189, i32 0, i32 1, !dbg !5816
  %arrayidx168 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize167, i64 0, i64 1, !dbg !5815
  %190 = load i32, i32* %arrayidx168, align 4, !dbg !5815
  %call169 = call i32 @decode_plane(%struct.FFV1Context* %179, i8* %add.ptr166, i32 %187, i32 %188, i32 %190, i32 1, i32 1), !dbg !5817
  %191 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5818
  %192 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5819
  %data170 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %192, i32 0, i32 0, !dbg !5820
  %arrayidx171 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data170, i64 0, i64 2, !dbg !5819
  %193 = load i8*, i8** %arrayidx171, align 8, !dbg !5819
  %194 = load i32, i32* %ps, align 4, !dbg !5821
  %195 = load i32, i32* %cx, align 4, !dbg !5822
  %mul172 = mul nsw i32 %194, %195, !dbg !5823
  %idx.ext173 = sext i32 %mul172 to i64, !dbg !5824
  %add.ptr174 = getelementptr inbounds i8, i8* %193, i64 %idx.ext173, !dbg !5824
  %196 = load i32, i32* %cy, align 4, !dbg !5825
  %197 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5826
  %linesize175 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %197, i32 0, i32 1, !dbg !5827
  %arrayidx176 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize175, i64 0, i64 2, !dbg !5826
  %198 = load i32, i32* %arrayidx176, align 8, !dbg !5826
  %mul177 = mul nsw i32 %196, %198, !dbg !5828
  %idx.ext178 = sext i32 %mul177 to i64, !dbg !5829
  %add.ptr179 = getelementptr inbounds i8, i8* %add.ptr174, i64 %idx.ext178, !dbg !5829
  %199 = load i32, i32* %chroma_width, align 4, !dbg !5830
  %200 = load i32, i32* %chroma_height, align 4, !dbg !5831
  %201 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5832
  %linesize180 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %201, i32 0, i32 1, !dbg !5833
  %arrayidx181 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize180, i64 0, i64 2, !dbg !5832
  %202 = load i32, i32* %arrayidx181, align 8, !dbg !5832
  %call182 = call i32 @decode_plane(%struct.FFV1Context* %191, i8* %add.ptr179, i32 %199, i32 %200, i32 %202, i32 1, i32 1), !dbg !5834
  br label %if.end183, !dbg !5835

if.end183:                                        ; preds = %if.then156, %if.then133
  %203 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5836
  %transparency184 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %203, i32 0, i32 14, !dbg !5838
  %204 = load i32, i32* %transparency184, align 4, !dbg !5838
  %tobool185 = icmp ne i32 %204, 0, !dbg !5836
  br i1 %tobool185, label %if.then186, label %if.end206, !dbg !5839

if.then186:                                       ; preds = %if.end183
  %205 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5840
  %206 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5841
  %data187 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %206, i32 0, i32 0, !dbg !5842
  %arrayidx188 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data187, i64 0, i64 3, !dbg !5841
  %207 = load i8*, i8** %arrayidx188, align 8, !dbg !5841
  %208 = load i32, i32* %ps, align 4, !dbg !5843
  %209 = load i32, i32* %x, align 4, !dbg !5844
  %mul189 = mul nsw i32 %208, %209, !dbg !5845
  %idx.ext190 = sext i32 %mul189 to i64, !dbg !5846
  %add.ptr191 = getelementptr inbounds i8, i8* %207, i64 %idx.ext190, !dbg !5846
  %210 = load i32, i32* %y, align 4, !dbg !5847
  %211 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5848
  %linesize192 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %211, i32 0, i32 1, !dbg !5849
  %arrayidx193 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize192, i64 0, i64 3, !dbg !5848
  %212 = load i32, i32* %arrayidx193, align 4, !dbg !5848
  %mul194 = mul nsw i32 %210, %212, !dbg !5850
  %idx.ext195 = sext i32 %mul194 to i64, !dbg !5851
  %add.ptr196 = getelementptr inbounds i8, i8* %add.ptr191, i64 %idx.ext195, !dbg !5851
  %213 = load i32, i32* %width, align 4, !dbg !5852
  %214 = load i32, i32* %height, align 4, !dbg !5853
  %215 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5854
  %linesize197 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %215, i32 0, i32 1, !dbg !5855
  %arrayidx198 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize197, i64 0, i64 3, !dbg !5854
  %216 = load i32, i32* %arrayidx198, align 4, !dbg !5854
  %217 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5856
  %version199 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %217, i32 0, i32 7, !dbg !5857
  %218 = load i32, i32* %version199, align 8, !dbg !5857
  %cmp200 = icmp sge i32 %218, 4, !dbg !5858
  br i1 %cmp200, label %land.rhs, label %land.end, !dbg !5859

land.rhs:                                         ; preds = %if.then186
  %219 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5860
  %chroma_planes202 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %219, i32 0, i32 11, !dbg !5862
  %220 = load i32, i32* %chroma_planes202, align 8, !dbg !5862
  %tobool203 = icmp ne i32 %220, 0, !dbg !5863
  %lnot = xor i1 %tobool203, true, !dbg !5863
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then186
  %221 = phi i1 [ false, %if.then186 ], [ %lnot, %land.rhs ]
  %cond204 = select i1 %221, i32 1, i32 2, !dbg !5864
  %call205 = call i32 @decode_plane(%struct.FFV1Context* %205, i8* %add.ptr196, i32 %213, i32 %214, i32 %216, i32 %cond204, i32 1), !dbg !5866
  br label %if.end206, !dbg !5866

if.end206:                                        ; preds = %land.end, %if.end183
  br label %if.end341, !dbg !5867

if.else207:                                       ; preds = %lor.lhs.false131, %if.end126
  %222 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5868
  %colorspace208 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %222, i32 0, i32 32, !dbg !5871
  %223 = load i32, i32* %colorspace208, align 4, !dbg !5871
  %cmp209 = icmp eq i32 %223, 0, !dbg !5872
  br i1 %cmp209, label %if.then211, label %if.else239, !dbg !5868

if.then211:                                       ; preds = %if.else207
  %224 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5873
  %225 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5875
  %data212 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %225, i32 0, i32 0, !dbg !5876
  %arrayidx213 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data212, i64 0, i64 0, !dbg !5875
  %226 = load i8*, i8** %arrayidx213, align 8, !dbg !5875
  %227 = load i32, i32* %ps, align 4, !dbg !5877
  %228 = load i32, i32* %x, align 4, !dbg !5878
  %mul214 = mul nsw i32 %227, %228, !dbg !5879
  %idx.ext215 = sext i32 %mul214 to i64, !dbg !5880
  %add.ptr216 = getelementptr inbounds i8, i8* %226, i64 %idx.ext215, !dbg !5880
  %229 = load i32, i32* %y, align 4, !dbg !5881
  %230 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5882
  %linesize217 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %230, i32 0, i32 1, !dbg !5883
  %arrayidx218 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize217, i64 0, i64 0, !dbg !5882
  %231 = load i32, i32* %arrayidx218, align 8, !dbg !5882
  %mul219 = mul nsw i32 %229, %231, !dbg !5884
  %idx.ext220 = sext i32 %mul219 to i64, !dbg !5885
  %add.ptr221 = getelementptr inbounds i8, i8* %add.ptr216, i64 %idx.ext220, !dbg !5885
  %232 = load i32, i32* %width, align 4, !dbg !5886
  %233 = load i32, i32* %height, align 4, !dbg !5887
  %234 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5888
  %linesize222 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %234, i32 0, i32 1, !dbg !5889
  %arrayidx223 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize222, i64 0, i64 0, !dbg !5888
  %235 = load i32, i32* %arrayidx223, align 8, !dbg !5888
  %call224 = call i32 @decode_plane(%struct.FFV1Context* %224, i8* %add.ptr221, i32 %232, i32 %233, i32 %235, i32 0, i32 2), !dbg !5890
  %236 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5891
  %237 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5892
  %data225 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %237, i32 0, i32 0, !dbg !5893
  %arrayidx226 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data225, i64 0, i64 0, !dbg !5892
  %238 = load i8*, i8** %arrayidx226, align 8, !dbg !5892
  %239 = load i32, i32* %ps, align 4, !dbg !5894
  %240 = load i32, i32* %x, align 4, !dbg !5895
  %mul227 = mul nsw i32 %239, %240, !dbg !5896
  %idx.ext228 = sext i32 %mul227 to i64, !dbg !5897
  %add.ptr229 = getelementptr inbounds i8, i8* %238, i64 %idx.ext228, !dbg !5897
  %241 = load i32, i32* %y, align 4, !dbg !5898
  %242 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5899
  %linesize230 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %242, i32 0, i32 1, !dbg !5900
  %arrayidx231 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize230, i64 0, i64 0, !dbg !5899
  %243 = load i32, i32* %arrayidx231, align 8, !dbg !5899
  %mul232 = mul nsw i32 %241, %243, !dbg !5901
  %idx.ext233 = sext i32 %mul232 to i64, !dbg !5902
  %add.ptr234 = getelementptr inbounds i8, i8* %add.ptr229, i64 %idx.ext233, !dbg !5902
  %add.ptr235 = getelementptr inbounds i8, i8* %add.ptr234, i64 1, !dbg !5903
  %244 = load i32, i32* %width, align 4, !dbg !5904
  %245 = load i32, i32* %height, align 4, !dbg !5905
  %246 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5906
  %linesize236 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %246, i32 0, i32 1, !dbg !5907
  %arrayidx237 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize236, i64 0, i64 0, !dbg !5906
  %247 = load i32, i32* %arrayidx237, align 8, !dbg !5906
  %call238 = call i32 @decode_plane(%struct.FFV1Context* %236, i8* %add.ptr235, i32 %244, i32 %245, i32 %247, i32 1, i32 2), !dbg !5908
  br label %if.end340, !dbg !5909

if.else239:                                       ; preds = %if.else207
  %248 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !5910
  %use32bit = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %248, i32 0, i32 35, !dbg !5913
  %249 = load i32, i32* %use32bit, align 8, !dbg !5913
  %tobool240 = icmp ne i32 %249, 0, !dbg !5910
  br i1 %tobool240, label %if.then241, label %if.else289, !dbg !5910

if.then241:                                       ; preds = %if.else239
  call void @llvm.dbg.declare(metadata [4 x i8*]* %planes, metadata !5914, metadata !1706), !dbg !5916
  %arrayinit.begin242 = getelementptr inbounds [4 x i8*], [4 x i8*]* %planes, i64 0, i64 0, !dbg !5917
  %250 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5918
  %data243 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %250, i32 0, i32 0, !dbg !5919
  %arrayidx244 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data243, i64 0, i64 0, !dbg !5918
  %251 = load i8*, i8** %arrayidx244, align 8, !dbg !5918
  %252 = load i32, i32* %ps, align 4, !dbg !5920
  %253 = load i32, i32* %x, align 4, !dbg !5921
  %mul245 = mul nsw i32 %252, %253, !dbg !5922
  %idx.ext246 = sext i32 %mul245 to i64, !dbg !5923
  %add.ptr247 = getelementptr inbounds i8, i8* %251, i64 %idx.ext246, !dbg !5923
  %254 = load i32, i32* %y, align 4, !dbg !5924
  %255 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5925
  %linesize248 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %255, i32 0, i32 1, !dbg !5926
  %arrayidx249 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize248, i64 0, i64 0, !dbg !5925
  %256 = load i32, i32* %arrayidx249, align 8, !dbg !5925
  %mul250 = mul nsw i32 %254, %256, !dbg !5927
  %idx.ext251 = sext i32 %mul250 to i64, !dbg !5928
  %add.ptr252 = getelementptr inbounds i8, i8* %add.ptr247, i64 %idx.ext251, !dbg !5928
  store i8* %add.ptr252, i8** %arrayinit.begin242, align 8, !dbg !5917
  %arrayinit.element = getelementptr inbounds i8*, i8** %arrayinit.begin242, i64 1, !dbg !5917
  %257 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5929
  %data253 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %257, i32 0, i32 0, !dbg !5930
  %arrayidx254 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data253, i64 0, i64 1, !dbg !5929
  %258 = load i8*, i8** %arrayidx254, align 8, !dbg !5929
  %259 = load i32, i32* %ps, align 4, !dbg !5931
  %260 = load i32, i32* %x, align 4, !dbg !5932
  %mul255 = mul nsw i32 %259, %260, !dbg !5933
  %idx.ext256 = sext i32 %mul255 to i64, !dbg !5934
  %add.ptr257 = getelementptr inbounds i8, i8* %258, i64 %idx.ext256, !dbg !5934
  %261 = load i32, i32* %y, align 4, !dbg !5935
  %262 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5936
  %linesize258 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %262, i32 0, i32 1, !dbg !5937
  %arrayidx259 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize258, i64 0, i64 1, !dbg !5936
  %263 = load i32, i32* %arrayidx259, align 4, !dbg !5936
  %mul260 = mul nsw i32 %261, %263, !dbg !5938
  %idx.ext261 = sext i32 %mul260 to i64, !dbg !5939
  %add.ptr262 = getelementptr inbounds i8, i8* %add.ptr257, i64 %idx.ext261, !dbg !5939
  store i8* %add.ptr262, i8** %arrayinit.element, align 8, !dbg !5917
  %arrayinit.element263 = getelementptr inbounds i8*, i8** %arrayinit.element, i64 1, !dbg !5917
  %264 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5940
  %data264 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %264, i32 0, i32 0, !dbg !5941
  %arrayidx265 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data264, i64 0, i64 2, !dbg !5940
  %265 = load i8*, i8** %arrayidx265, align 8, !dbg !5940
  %266 = load i32, i32* %ps, align 4, !dbg !5942
  %267 = load i32, i32* %x, align 4, !dbg !5943
  %mul266 = mul nsw i32 %266, %267, !dbg !5944
  %idx.ext267 = sext i32 %mul266 to i64, !dbg !5945
  %add.ptr268 = getelementptr inbounds i8, i8* %265, i64 %idx.ext267, !dbg !5945
  %268 = load i32, i32* %y, align 4, !dbg !5946
  %269 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5947
  %linesize269 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %269, i32 0, i32 1, !dbg !5948
  %arrayidx270 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize269, i64 0, i64 2, !dbg !5947
  %270 = load i32, i32* %arrayidx270, align 8, !dbg !5947
  %mul271 = mul nsw i32 %268, %270, !dbg !5949
  %idx.ext272 = sext i32 %mul271 to i64, !dbg !5950
  %add.ptr273 = getelementptr inbounds i8, i8* %add.ptr268, i64 %idx.ext272, !dbg !5950
  store i8* %add.ptr273, i8** %arrayinit.element263, align 8, !dbg !5917
  %arrayinit.element274 = getelementptr inbounds i8*, i8** %arrayinit.element263, i64 1, !dbg !5917
  %271 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5951
  %data275 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %271, i32 0, i32 0, !dbg !5952
  %arrayidx276 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data275, i64 0, i64 3, !dbg !5951
  %272 = load i8*, i8** %arrayidx276, align 8, !dbg !5951
  %273 = load i32, i32* %ps, align 4, !dbg !5953
  %274 = load i32, i32* %x, align 4, !dbg !5954
  %mul277 = mul nsw i32 %273, %274, !dbg !5955
  %idx.ext278 = sext i32 %mul277 to i64, !dbg !5956
  %add.ptr279 = getelementptr inbounds i8, i8* %272, i64 %idx.ext278, !dbg !5956
  %275 = load i32, i32* %y, align 4, !dbg !5957
  %276 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5958
  %linesize280 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %276, i32 0, i32 1, !dbg !5959
  %arrayidx281 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize280, i64 0, i64 3, !dbg !5958
  %277 = load i32, i32* %arrayidx281, align 4, !dbg !5958
  %mul282 = mul nsw i32 %275, %277, !dbg !5960
  %idx.ext283 = sext i32 %mul282 to i64, !dbg !5961
  %add.ptr284 = getelementptr inbounds i8, i8* %add.ptr279, i64 %idx.ext283, !dbg !5961
  store i8* %add.ptr284, i8** %arrayinit.element274, align 8, !dbg !5917
  %278 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !5962
  %arraydecay285 = getelementptr inbounds [4 x i8*], [4 x i8*]* %planes, i32 0, i32 0, !dbg !5963
  %279 = load i32, i32* %width, align 4, !dbg !5964
  %280 = load i32, i32* %height, align 4, !dbg !5965
  %281 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5966
  %linesize286 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %281, i32 0, i32 1, !dbg !5967
  %arraydecay287 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize286, i32 0, i32 0, !dbg !5966
  %call288 = call i32 @decode_rgb_frame32(%struct.FFV1Context* %278, i8** %arraydecay285, i32 %279, i32 %280, i32* %arraydecay287), !dbg !5968
  br label %if.end339, !dbg !5969

if.else289:                                       ; preds = %if.else239
  call void @llvm.dbg.declare(metadata [4 x i8*]* %planes290, metadata !5970, metadata !1706), !dbg !5972
  %arrayinit.begin291 = getelementptr inbounds [4 x i8*], [4 x i8*]* %planes290, i64 0, i64 0, !dbg !5973
  %282 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5974
  %data292 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %282, i32 0, i32 0, !dbg !5975
  %arrayidx293 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data292, i64 0, i64 0, !dbg !5974
  %283 = load i8*, i8** %arrayidx293, align 8, !dbg !5974
  %284 = load i32, i32* %ps, align 4, !dbg !5976
  %285 = load i32, i32* %x, align 4, !dbg !5977
  %mul294 = mul nsw i32 %284, %285, !dbg !5978
  %idx.ext295 = sext i32 %mul294 to i64, !dbg !5979
  %add.ptr296 = getelementptr inbounds i8, i8* %283, i64 %idx.ext295, !dbg !5979
  %286 = load i32, i32* %y, align 4, !dbg !5980
  %287 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5981
  %linesize297 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %287, i32 0, i32 1, !dbg !5982
  %arrayidx298 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize297, i64 0, i64 0, !dbg !5981
  %288 = load i32, i32* %arrayidx298, align 8, !dbg !5981
  %mul299 = mul nsw i32 %286, %288, !dbg !5983
  %idx.ext300 = sext i32 %mul299 to i64, !dbg !5984
  %add.ptr301 = getelementptr inbounds i8, i8* %add.ptr296, i64 %idx.ext300, !dbg !5984
  store i8* %add.ptr301, i8** %arrayinit.begin291, align 8, !dbg !5973
  %arrayinit.element302 = getelementptr inbounds i8*, i8** %arrayinit.begin291, i64 1, !dbg !5973
  %289 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5985
  %data303 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %289, i32 0, i32 0, !dbg !5986
  %arrayidx304 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data303, i64 0, i64 1, !dbg !5985
  %290 = load i8*, i8** %arrayidx304, align 8, !dbg !5985
  %291 = load i32, i32* %ps, align 4, !dbg !5987
  %292 = load i32, i32* %x, align 4, !dbg !5988
  %mul305 = mul nsw i32 %291, %292, !dbg !5989
  %idx.ext306 = sext i32 %mul305 to i64, !dbg !5990
  %add.ptr307 = getelementptr inbounds i8, i8* %290, i64 %idx.ext306, !dbg !5990
  %293 = load i32, i32* %y, align 4, !dbg !5991
  %294 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5992
  %linesize308 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %294, i32 0, i32 1, !dbg !5993
  %arrayidx309 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize308, i64 0, i64 1, !dbg !5992
  %295 = load i32, i32* %arrayidx309, align 4, !dbg !5992
  %mul310 = mul nsw i32 %293, %295, !dbg !5994
  %idx.ext311 = sext i32 %mul310 to i64, !dbg !5995
  %add.ptr312 = getelementptr inbounds i8, i8* %add.ptr307, i64 %idx.ext311, !dbg !5995
  store i8* %add.ptr312, i8** %arrayinit.element302, align 8, !dbg !5973
  %arrayinit.element313 = getelementptr inbounds i8*, i8** %arrayinit.element302, i64 1, !dbg !5973
  %296 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !5996
  %data314 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %296, i32 0, i32 0, !dbg !5997
  %arrayidx315 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data314, i64 0, i64 2, !dbg !5996
  %297 = load i8*, i8** %arrayidx315, align 8, !dbg !5996
  %298 = load i32, i32* %ps, align 4, !dbg !5998
  %299 = load i32, i32* %x, align 4, !dbg !5999
  %mul316 = mul nsw i32 %298, %299, !dbg !6000
  %idx.ext317 = sext i32 %mul316 to i64, !dbg !6001
  %add.ptr318 = getelementptr inbounds i8, i8* %297, i64 %idx.ext317, !dbg !6001
  %300 = load i32, i32* %y, align 4, !dbg !6002
  %301 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !6003
  %linesize319 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %301, i32 0, i32 1, !dbg !6004
  %arrayidx320 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize319, i64 0, i64 2, !dbg !6003
  %302 = load i32, i32* %arrayidx320, align 8, !dbg !6003
  %mul321 = mul nsw i32 %300, %302, !dbg !6005
  %idx.ext322 = sext i32 %mul321 to i64, !dbg !6006
  %add.ptr323 = getelementptr inbounds i8, i8* %add.ptr318, i64 %idx.ext322, !dbg !6006
  store i8* %add.ptr323, i8** %arrayinit.element313, align 8, !dbg !5973
  %arrayinit.element324 = getelementptr inbounds i8*, i8** %arrayinit.element313, i64 1, !dbg !5973
  %303 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !6007
  %data325 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %303, i32 0, i32 0, !dbg !6008
  %arrayidx326 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data325, i64 0, i64 3, !dbg !6007
  %304 = load i8*, i8** %arrayidx326, align 8, !dbg !6007
  %305 = load i32, i32* %ps, align 4, !dbg !6009
  %306 = load i32, i32* %x, align 4, !dbg !6010
  %mul327 = mul nsw i32 %305, %306, !dbg !6011
  %idx.ext328 = sext i32 %mul327 to i64, !dbg !6012
  %add.ptr329 = getelementptr inbounds i8, i8* %304, i64 %idx.ext328, !dbg !6012
  %307 = load i32, i32* %y, align 4, !dbg !6013
  %308 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !6014
  %linesize330 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %308, i32 0, i32 1, !dbg !6015
  %arrayidx331 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize330, i64 0, i64 3, !dbg !6014
  %309 = load i32, i32* %arrayidx331, align 4, !dbg !6014
  %mul332 = mul nsw i32 %307, %309, !dbg !6016
  %idx.ext333 = sext i32 %mul332 to i64, !dbg !6017
  %add.ptr334 = getelementptr inbounds i8, i8* %add.ptr329, i64 %idx.ext333, !dbg !6017
  store i8* %add.ptr334, i8** %arrayinit.element324, align 8, !dbg !5973
  %310 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !6018
  %arraydecay335 = getelementptr inbounds [4 x i8*], [4 x i8*]* %planes290, i32 0, i32 0, !dbg !6019
  %311 = load i32, i32* %width, align 4, !dbg !6020
  %312 = load i32, i32* %height, align 4, !dbg !6021
  %313 = load %struct.AVFrame*, %struct.AVFrame** %p, align 8, !dbg !6022
  %linesize336 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %313, i32 0, i32 1, !dbg !6023
  %arraydecay337 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize336, i32 0, i32 0, !dbg !6022
  %call338 = call i32 @decode_rgb_frame(%struct.FFV1Context* %310, i8** %arraydecay335, i32 %311, i32 %312, i32* %arraydecay337), !dbg !6024
  br label %if.end339

if.end339:                                        ; preds = %if.else289, %if.then241
  br label %if.end340

if.end340:                                        ; preds = %if.end339, %if.then211
  br label %if.end341

if.end341:                                        ; preds = %if.end340, %if.end206
  %314 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !6025
  %ac342 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %314, i32 0, i32 23, !dbg !6027
  %315 = load i32, i32* %ac342, align 4, !dbg !6027
  %cmp343 = icmp ne i32 %315, 0, !dbg !6028
  br i1 %cmp343, label %land.lhs.true345, label %if.end372, !dbg !6029

land.lhs.true345:                                 ; preds = %if.end341
  %316 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !6030
  %version346 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %316, i32 0, i32 7, !dbg !6032
  %317 = load i32, i32* %version346, align 8, !dbg !6032
  %cmp347 = icmp sgt i32 %317, 2, !dbg !6033
  br i1 %cmp347, label %if.then349, label %if.end372, !dbg !6034

if.then349:                                       ; preds = %land.lhs.true345
  call void @llvm.dbg.declare(metadata i32* %v, metadata !6035, metadata !1706), !dbg !6037
  %318 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !6038
  %c350 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %318, i32 0, i32 2, !dbg !6039
  %arrayinit.begin352 = getelementptr inbounds [1 x i8], [1 x i8]* %.compoundliteral351, i64 0, i64 0, !dbg !6040
  store i8 -127, i8* %arrayinit.begin352, align 1, !dbg !6040
  %arraydecay353 = getelementptr inbounds [1 x i8], [1 x i8]* %.compoundliteral351, i32 0, i32 0, !dbg !6041
  %call354 = call i32 @get_rac(%struct.RangeCoder* %c350, i8* %arraydecay353), !dbg !6042
  %319 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !6043
  %c355 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %319, i32 0, i32 2, !dbg !6044
  %bytestream_end356 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %c355, i32 0, i32 8, !dbg !6045
  %320 = load i8*, i8** %bytestream_end356, align 8, !dbg !6045
  %321 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !6046
  %c357 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %321, i32 0, i32 2, !dbg !6047
  %bytestream358 = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %c357, i32 0, i32 7, !dbg !6048
  %322 = load i8*, i8** %bytestream358, align 8, !dbg !6048
  %sub.ptr.lhs.cast359 = ptrtoint i8* %320 to i64, !dbg !6049
  %sub.ptr.rhs.cast360 = ptrtoint i8* %322 to i64, !dbg !6049
  %sub.ptr.sub361 = sub i64 %sub.ptr.lhs.cast359, %sub.ptr.rhs.cast360, !dbg !6049
  %sub362 = sub nsw i64 %sub.ptr.sub361, 2, !dbg !6050
  %323 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !6051
  %ec = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %323, i32 0, i32 36, !dbg !6052
  %324 = load i32, i32* %ec, align 4, !dbg !6052
  %mul363 = mul nsw i32 5, %324, !dbg !6053
  %conv364 = sext i32 %mul363 to i64, !dbg !6054
  %sub365 = sub nsw i64 %sub362, %conv364, !dbg !6055
  %conv366 = trunc i64 %sub365 to i32, !dbg !6043
  store i32 %conv366, i32* %v, align 4, !dbg !6056
  %325 = load i32, i32* %v, align 4, !dbg !6057
  %tobool367 = icmp ne i32 %325, 0, !dbg !6057
  br i1 %tobool367, label %if.then368, label %if.end371, !dbg !6059

if.then368:                                       ; preds = %if.then349
  %326 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !6060
  %avctx369 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %326, i32 0, i32 1, !dbg !6062
  %327 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx369, align 8, !dbg !6062
  %328 = bitcast %struct.AVCodecContext* %327 to i8*, !dbg !6060
  %329 = load i32, i32* %v, align 4, !dbg !6063
  call void (i8*, i32, i8*, ...) @av_log(i8* %328, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31, i32 0, i32 0), i32 %329), !dbg !6064
  %330 = load %struct.FFV1Context*, %struct.FFV1Context** %fs, align 8, !dbg !6065
  %slice_damaged370 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %330, i32 0, i32 38, !dbg !6066
  store i32 1, i32* %slice_damaged370, align 4, !dbg !6067
  br label %if.end371, !dbg !6068

if.end371:                                        ; preds = %if.then368, %if.then349
  br label %if.end372, !dbg !6069

if.end372:                                        ; preds = %if.end371, %land.lhs.true345, %if.end341
  call void asm sideeffect "emms", "~{memory},~{dirflag},~{fpsr},~{flags}"() #12, !dbg !6070, !srcloc !6076
  %331 = load %struct.FFV1Context*, %struct.FFV1Context** %f, align 8, !dbg !6077
  %picture = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %331, i32 0, i32 18, !dbg !6078
  %332 = load i32, i32* %si, align 4, !dbg !6079
  call void @ff_thread_report_progress(%struct.ThreadFrame* %picture, i32 %332, i32 0), !dbg !6080
  store i32 0, i32* %retval, align 4, !dbg !6081
  br label %return, !dbg !6081

return:                                           ; preds = %if.end372, %if.then71, %if.then64, %if.then59
  %333 = load i32, i32* %retval, align 4, !dbg !6082
  ret i32 %333, !dbg !6082
}

declare %struct.AVPixFmtDescriptor* @av_pix_fmt_desc_get(i32) #2

declare void @ff_thread_await_progress(%struct.ThreadFrame*, i32, i32) #2

declare void @av_image_copy(i8**, i32*, i8**, i32*, i32, i32, i32) #2

declare i32 @av_frame_ref(%struct.AVFrame*, %struct.AVFrame*) #2

declare void @av_freep(i8*) #2

declare void @av_free(i8*) #2

declare i8* @av_malloc_array(i64, i64) #2

declare i32 @ff_ffv1_init_slice_state(%struct.FFV1Context*, %struct.FFV1Context*) #2

; Function Attrs: nounwind uwtable
define internal i32 @decode_slice_header(%struct.FFV1Context* %f, %struct.FFV1Context* %fs) #0 !dbg !6083 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca %struct.FFV1Context*, align 8
  %fs.addr = alloca %struct.FFV1Context*, align 8
  %c = alloca %struct.RangeCoder*, align 8
  %state = alloca [32 x i8], align 16
  %ps = alloca i32, align 4
  %i = alloca i32, align 4
  %context_count = alloca i32, align 4
  %p = alloca %struct.PlaneContext*, align 8
  %idx = alloca i32, align 4
  %.compoundliteral = alloca %struct.AVRational, align 4
  store %struct.FFV1Context* %f, %struct.FFV1Context** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %f.addr, metadata !6086, metadata !1706), !dbg !6087
  store %struct.FFV1Context* %fs, %struct.FFV1Context** %fs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %fs.addr, metadata !6088, metadata !1706), !dbg !6089
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c, metadata !6090, metadata !1706), !dbg !6091
  %0 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6092
  %c1 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %0, i32 0, i32 2, !dbg !6093
  store %struct.RangeCoder* %c1, %struct.RangeCoder** %c, align 8, !dbg !6091
  call void @llvm.dbg.declare(metadata [32 x i8]* %state, metadata !6094, metadata !1706), !dbg !6095
  call void @llvm.dbg.declare(metadata i32* %ps, metadata !6096, metadata !1706), !dbg !6097
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6098, metadata !1706), !dbg !6099
  call void @llvm.dbg.declare(metadata i32* %context_count, metadata !6100, metadata !1706), !dbg !6101
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !6102
  call void @llvm.memset.p0i8.i64(i8* %arraydecay, i8 -128, i64 32, i32 16, i1 false), !dbg !6102
  br label %do.body, !dbg !6103, !llvm.loop !6104

do.body:                                          ; preds = %entry
  %1 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6105
  %version = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %1, i32 0, i32 7, !dbg !6109
  %2 = load i32, i32* %version, align 8, !dbg !6109
  %cmp = icmp sgt i32 %2, 2, !dbg !6110
  br i1 %cmp, label %if.end, label %if.then, !dbg !6111

if.then:                                          ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i32 0, i32 0), i32 174), !dbg !6112
  call void @abort() #10, !dbg !6115
  unreachable, !dbg !6117

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !6118

do.end:                                           ; preds = %if.end
  %3 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !6120
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !6121
  %call = call i32 @get_symbol(%struct.RangeCoder* %3, i8* %arraydecay2, i32 0), !dbg !6122
  %4 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6123
  %width = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %4, i32 0, i32 9, !dbg !6124
  %5 = load i32, i32* %width, align 8, !dbg !6124
  %mul = mul nsw i32 %call, %5, !dbg !6125
  %6 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6126
  %slice_x = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %6, i32 0, i32 52, !dbg !6127
  store i32 %mul, i32* %slice_x, align 8, !dbg !6128
  %7 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !6129
  %arraydecay3 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !6130
  %call4 = call i32 @get_symbol(%struct.RangeCoder* %7, i8* %arraydecay3, i32 0), !dbg !6131
  %8 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6132
  %height = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %8, i32 0, i32 10, !dbg !6133
  %9 = load i32, i32* %height, align 4, !dbg !6133
  %mul5 = mul nsw i32 %call4, %9, !dbg !6134
  %10 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6135
  %slice_y = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %10, i32 0, i32 53, !dbg !6136
  store i32 %mul5, i32* %slice_y, align 4, !dbg !6137
  %11 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !6138
  %arraydecay6 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !6139
  %call7 = call i32 @get_symbol(%struct.RangeCoder* %11, i8* %arraydecay6, i32 0), !dbg !6140
  %add = add nsw i32 %call7, 1, !dbg !6141
  %12 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6142
  %width8 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %12, i32 0, i32 9, !dbg !6143
  %13 = load i32, i32* %width8, align 8, !dbg !6143
  %mul9 = mul nsw i32 %add, %13, !dbg !6144
  %14 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6145
  %slice_x10 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %14, i32 0, i32 52, !dbg !6146
  %15 = load i32, i32* %slice_x10, align 8, !dbg !6146
  %add11 = add nsw i32 %mul9, %15, !dbg !6147
  %16 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6148
  %slice_width = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %16, i32 0, i32 50, !dbg !6149
  store i32 %add11, i32* %slice_width, align 8, !dbg !6150
  %17 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !6151
  %arraydecay12 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !6152
  %call13 = call i32 @get_symbol(%struct.RangeCoder* %17, i8* %arraydecay12, i32 0), !dbg !6153
  %add14 = add nsw i32 %call13, 1, !dbg !6154
  %18 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6155
  %height15 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %18, i32 0, i32 10, !dbg !6156
  %19 = load i32, i32* %height15, align 4, !dbg !6156
  %mul16 = mul nsw i32 %add14, %19, !dbg !6157
  %20 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6158
  %slice_y17 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %20, i32 0, i32 53, !dbg !6159
  %21 = load i32, i32* %slice_y17, align 4, !dbg !6159
  %add18 = add nsw i32 %mul16, %21, !dbg !6160
  %22 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6161
  %slice_height = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %22, i32 0, i32 51, !dbg !6162
  store i32 %add18, i32* %slice_height, align 4, !dbg !6163
  %23 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6164
  %num_h_slices = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %23, i32 0, i32 49, !dbg !6165
  %24 = load i32, i32* %num_h_slices, align 4, !dbg !6165
  %25 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6166
  %slice_x19 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %25, i32 0, i32 52, !dbg !6167
  %26 = load i32, i32* %slice_x19, align 8, !dbg !6168
  %div = sdiv i32 %26, %24, !dbg !6168
  store i32 %div, i32* %slice_x19, align 8, !dbg !6168
  %27 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6169
  %num_v_slices = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %27, i32 0, i32 48, !dbg !6170
  %28 = load i32, i32* %num_v_slices, align 8, !dbg !6170
  %29 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6171
  %slice_y20 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %29, i32 0, i32 53, !dbg !6172
  %30 = load i32, i32* %slice_y20, align 4, !dbg !6173
  %div21 = sdiv i32 %30, %28, !dbg !6173
  store i32 %div21, i32* %slice_y20, align 4, !dbg !6173
  %31 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6174
  %slice_width22 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %31, i32 0, i32 50, !dbg !6175
  %32 = load i32, i32* %slice_width22, align 8, !dbg !6175
  %33 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6176
  %num_h_slices23 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %33, i32 0, i32 49, !dbg !6177
  %34 = load i32, i32* %num_h_slices23, align 4, !dbg !6177
  %div24 = sdiv i32 %32, %34, !dbg !6178
  %35 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6179
  %slice_x25 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %35, i32 0, i32 52, !dbg !6180
  %36 = load i32, i32* %slice_x25, align 8, !dbg !6180
  %sub = sub nsw i32 %div24, %36, !dbg !6181
  %37 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6182
  %slice_width26 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %37, i32 0, i32 50, !dbg !6183
  store i32 %sub, i32* %slice_width26, align 8, !dbg !6184
  %38 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6185
  %slice_height27 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %38, i32 0, i32 51, !dbg !6186
  %39 = load i32, i32* %slice_height27, align 4, !dbg !6186
  %40 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6187
  %num_v_slices28 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %40, i32 0, i32 48, !dbg !6188
  %41 = load i32, i32* %num_v_slices28, align 8, !dbg !6188
  %div29 = sdiv i32 %39, %41, !dbg !6189
  %42 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6190
  %slice_y30 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %42, i32 0, i32 53, !dbg !6191
  %43 = load i32, i32* %slice_y30, align 4, !dbg !6191
  %sub31 = sub nsw i32 %div29, %43, !dbg !6192
  %44 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6193
  %slice_height32 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %44, i32 0, i32 51, !dbg !6194
  store i32 %sub31, i32* %slice_height32, align 4, !dbg !6195
  %45 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6196
  %slice_width33 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %45, i32 0, i32 50, !dbg !6198
  %46 = load i32, i32* %slice_width33, align 8, !dbg !6198
  %47 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6199
  %width34 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %47, i32 0, i32 9, !dbg !6200
  %48 = load i32, i32* %width34, align 8, !dbg !6200
  %cmp35 = icmp ugt i32 %46, %48, !dbg !6201
  br i1 %cmp35, label %if.then39, label %lor.lhs.false, !dbg !6202

lor.lhs.false:                                    ; preds = %do.end
  %49 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6203
  %slice_height36 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %49, i32 0, i32 51, !dbg !6205
  %50 = load i32, i32* %slice_height36, align 4, !dbg !6205
  %51 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6206
  %height37 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %51, i32 0, i32 10, !dbg !6207
  %52 = load i32, i32* %height37, align 4, !dbg !6207
  %cmp38 = icmp ugt i32 %50, %52, !dbg !6208
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !6209

if.then39:                                        ; preds = %lor.lhs.false, %do.end
  store i32 -1, i32* %retval, align 4, !dbg !6210
  br label %return, !dbg !6210

if.end40:                                         ; preds = %lor.lhs.false
  %53 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6211
  %slice_x41 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %53, i32 0, i32 52, !dbg !6213
  %54 = load i32, i32* %slice_x41, align 8, !dbg !6213
  %conv = zext i32 %54 to i64, !dbg !6214
  %55 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6215
  %slice_width42 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %55, i32 0, i32 50, !dbg !6216
  %56 = load i32, i32* %slice_width42, align 8, !dbg !6216
  %conv43 = sext i32 %56 to i64, !dbg !6217
  %add44 = add i64 %conv, %conv43, !dbg !6218
  %57 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6219
  %width45 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %57, i32 0, i32 9, !dbg !6220
  %58 = load i32, i32* %width45, align 8, !dbg !6220
  %conv46 = sext i32 %58 to i64, !dbg !6219
  %cmp47 = icmp ugt i64 %add44, %conv46, !dbg !6221
  br i1 %cmp47, label %if.then59, label %lor.lhs.false49, !dbg !6222

lor.lhs.false49:                                  ; preds = %if.end40
  %59 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6223
  %slice_y50 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %59, i32 0, i32 53, !dbg !6225
  %60 = load i32, i32* %slice_y50, align 4, !dbg !6225
  %conv51 = zext i32 %60 to i64, !dbg !6226
  %61 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6227
  %slice_height52 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %61, i32 0, i32 51, !dbg !6228
  %62 = load i32, i32* %slice_height52, align 4, !dbg !6228
  %conv53 = sext i32 %62 to i64, !dbg !6229
  %add54 = add i64 %conv51, %conv53, !dbg !6230
  %63 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6231
  %height55 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %63, i32 0, i32 10, !dbg !6232
  %64 = load i32, i32* %height55, align 4, !dbg !6232
  %conv56 = sext i32 %64 to i64, !dbg !6231
  %cmp57 = icmp ugt i64 %add54, %conv56, !dbg !6233
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !6234

if.then59:                                        ; preds = %lor.lhs.false49, %if.end40
  store i32 -1, i32* %retval, align 4, !dbg !6236
  br label %return, !dbg !6236

if.end60:                                         ; preds = %lor.lhs.false49
  store i32 0, i32* %i, align 4, !dbg !6237
  br label %for.cond, !dbg !6239

for.cond:                                         ; preds = %for.inc, %if.end60
  %65 = load i32, i32* %i, align 4, !dbg !6240
  %66 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6243
  %plane_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %66, i32 0, i32 22, !dbg !6244
  %67 = load i32, i32* %plane_count, align 8, !dbg !6244
  %cmp61 = icmp ult i32 %65, %67, !dbg !6245
  br i1 %cmp61, label %for.body, label %for.end, !dbg !6246

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PlaneContext** %p, metadata !6247, metadata !1706), !dbg !6249
  %68 = load i32, i32* %i, align 4, !dbg !6250
  %idxprom = zext i32 %68 to i64, !dbg !6251
  %69 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6251
  %plane = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %69, i32 0, i32 25, !dbg !6252
  %arrayidx = getelementptr inbounds [4 x %struct.PlaneContext], [4 x %struct.PlaneContext]* %plane, i64 0, i64 %idxprom, !dbg !6251
  store %struct.PlaneContext* %arrayidx, %struct.PlaneContext** %p, align 8, !dbg !6249
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6253, metadata !1706), !dbg !6254
  %70 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !6255
  %arraydecay63 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !6256
  %call64 = call i32 @get_symbol(%struct.RangeCoder* %70, i8* %arraydecay63, i32 0), !dbg !6257
  store i32 %call64, i32* %idx, align 4, !dbg !6254
  %71 = load i32, i32* %idx, align 4, !dbg !6258
  %72 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6260
  %quant_table_count = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %72, i32 0, i32 44, !dbg !6261
  %73 = load i32, i32* %quant_table_count, align 4, !dbg !6261
  %cmp65 = icmp uge i32 %71, %73, !dbg !6262
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !6263

if.then67:                                        ; preds = %for.body
  %74 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6264
  %avctx = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %74, i32 0, i32 1, !dbg !6266
  %75 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6266
  %76 = bitcast %struct.AVCodecContext* %75 to i8*, !dbg !6264
  call void (i8*, i32, i8*, ...) @av_log(i8* %76, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i32 0, i32 0)), !dbg !6267
  store i32 -1, i32* %retval, align 4, !dbg !6268
  br label %return, !dbg !6268

if.end68:                                         ; preds = %for.body
  %77 = load i32, i32* %idx, align 4, !dbg !6269
  %78 = load %struct.PlaneContext*, %struct.PlaneContext** %p, align 8, !dbg !6270
  %quant_table_index = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %78, i32 0, i32 1, !dbg !6271
  store i32 %77, i32* %quant_table_index, align 8, !dbg !6272
  %79 = load %struct.PlaneContext*, %struct.PlaneContext** %p, align 8, !dbg !6273
  %quant_table = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %79, i32 0, i32 0, !dbg !6274
  %arraydecay69 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table, i32 0, i32 0, !dbg !6275
  %80 = bitcast [256 x i16]* %arraydecay69 to i8*, !dbg !6275
  %81 = load i32, i32* %idx, align 4, !dbg !6276
  %idxprom70 = sext i32 %81 to i64, !dbg !6277
  %82 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6277
  %quant_tables = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %82, i32 0, i32 27, !dbg !6278
  %arrayidx71 = getelementptr inbounds [8 x [5 x [256 x i16]]], [8 x [5 x [256 x i16]]]* %quant_tables, i64 0, i64 %idxprom70, !dbg !6277
  %arraydecay72 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %arrayidx71, i32 0, i32 0, !dbg !6275
  %83 = bitcast [256 x i16]* %arraydecay72 to i8*, !dbg !6275
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %83, i64 2560, i32 8, i1 false), !dbg !6275
  %84 = load i32, i32* %idx, align 4, !dbg !6279
  %idxprom73 = sext i32 %84 to i64, !dbg !6280
  %85 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6280
  %context_count74 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %85, i32 0, i32 28, !dbg !6281
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %context_count74, i64 0, i64 %idxprom73, !dbg !6280
  %86 = load i32, i32* %arrayidx75, align 4, !dbg !6280
  store i32 %86, i32* %context_count, align 4, !dbg !6282
  %87 = load %struct.PlaneContext*, %struct.PlaneContext** %p, align 8, !dbg !6283
  %context_count76 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %87, i32 0, i32 2, !dbg !6285
  %88 = load i32, i32* %context_count76, align 4, !dbg !6285
  %89 = load i32, i32* %context_count, align 4, !dbg !6286
  %cmp77 = icmp ult i32 %88, %89, !dbg !6287
  br i1 %cmp77, label %if.then79, label %if.end81, !dbg !6288

if.then79:                                        ; preds = %if.end68
  %90 = load %struct.PlaneContext*, %struct.PlaneContext** %p, align 8, !dbg !6289
  %state80 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %90, i32 0, i32 3, !dbg !6291
  %91 = bitcast [32 x i8]** %state80 to i8*, !dbg !6292
  call void @av_freep(i8* %91), !dbg !6293
  %92 = load %struct.PlaneContext*, %struct.PlaneContext** %p, align 8, !dbg !6294
  %vlc_state = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %92, i32 0, i32 4, !dbg !6295
  %93 = bitcast %struct.VlcState** %vlc_state to i8*, !dbg !6296
  call void @av_freep(i8* %93), !dbg !6297
  br label %if.end81, !dbg !6298

if.end81:                                         ; preds = %if.then79, %if.end68
  %94 = load i32, i32* %context_count, align 4, !dbg !6299
  %95 = load %struct.PlaneContext*, %struct.PlaneContext** %p, align 8, !dbg !6300
  %context_count82 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %95, i32 0, i32 2, !dbg !6301
  store i32 %94, i32* %context_count82, align 4, !dbg !6302
  br label %for.inc, !dbg !6303

for.inc:                                          ; preds = %if.end81
  %96 = load i32, i32* %i, align 4, !dbg !6304
  %inc = add i32 %96, 1, !dbg !6304
  store i32 %inc, i32* %i, align 4, !dbg !6304
  br label %for.cond, !dbg !6306, !llvm.loop !6307

for.end:                                          ; preds = %for.cond
  %97 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !6309
  %arraydecay83 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !6310
  %call84 = call i32 @get_symbol(%struct.RangeCoder* %97, i8* %arraydecay83, i32 0), !dbg !6311
  store i32 %call84, i32* %ps, align 4, !dbg !6312
  %98 = load i32, i32* %ps, align 4, !dbg !6313
  %cmp85 = icmp eq i32 %98, 1, !dbg !6315
  br i1 %cmp85, label %if.then87, label %if.else, !dbg !6316

if.then87:                                        ; preds = %for.end
  %99 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6317
  %cur = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %99, i32 0, i32 21, !dbg !6319
  %100 = load %struct.AVFrame*, %struct.AVFrame** %cur, align 8, !dbg !6319
  %interlaced_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %100, i32 0, i32 19, !dbg !6320
  store i32 1, i32* %interlaced_frame, align 4, !dbg !6321
  %101 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6322
  %cur88 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %101, i32 0, i32 21, !dbg !6323
  %102 = load %struct.AVFrame*, %struct.AVFrame** %cur88, align 8, !dbg !6323
  %top_field_first = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %102, i32 0, i32 20, !dbg !6324
  store i32 1, i32* %top_field_first, align 8, !dbg !6325
  br label %if.end104, !dbg !6326

if.else:                                          ; preds = %for.end
  %103 = load i32, i32* %ps, align 4, !dbg !6327
  %cmp89 = icmp eq i32 %103, 2, !dbg !6330
  br i1 %cmp89, label %if.then91, label %if.else96, !dbg !6327

if.then91:                                        ; preds = %if.else
  %104 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6331
  %cur92 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %104, i32 0, i32 21, !dbg !6333
  %105 = load %struct.AVFrame*, %struct.AVFrame** %cur92, align 8, !dbg !6333
  %interlaced_frame93 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %105, i32 0, i32 19, !dbg !6334
  store i32 1, i32* %interlaced_frame93, align 4, !dbg !6335
  %106 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6336
  %cur94 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %106, i32 0, i32 21, !dbg !6337
  %107 = load %struct.AVFrame*, %struct.AVFrame** %cur94, align 8, !dbg !6337
  %top_field_first95 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %107, i32 0, i32 20, !dbg !6338
  store i32 0, i32* %top_field_first95, align 8, !dbg !6339
  br label %if.end103, !dbg !6340

if.else96:                                        ; preds = %if.else
  %108 = load i32, i32* %ps, align 4, !dbg !6341
  %cmp97 = icmp eq i32 %108, 3, !dbg !6344
  br i1 %cmp97, label %if.then99, label %if.end102, !dbg !6341

if.then99:                                        ; preds = %if.else96
  %109 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6345
  %cur100 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %109, i32 0, i32 21, !dbg !6347
  %110 = load %struct.AVFrame*, %struct.AVFrame** %cur100, align 8, !dbg !6347
  %interlaced_frame101 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %110, i32 0, i32 19, !dbg !6348
  store i32 0, i32* %interlaced_frame101, align 4, !dbg !6349
  br label %if.end102, !dbg !6350

if.end102:                                        ; preds = %if.then99, %if.else96
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then91
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then87
  %111 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !6351
  %arraydecay105 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !6352
  %call106 = call i32 @get_symbol(%struct.RangeCoder* %111, i8* %arraydecay105, i32 0), !dbg !6353
  %112 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6354
  %cur107 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %112, i32 0, i32 21, !dbg !6355
  %113 = load %struct.AVFrame*, %struct.AVFrame** %cur107, align 8, !dbg !6355
  %sample_aspect_ratio = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %113, i32 0, i32 9, !dbg !6356
  %num = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio, i32 0, i32 0, !dbg !6357
  store i32 %call106, i32* %num, align 8, !dbg !6358
  %114 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !6359
  %arraydecay108 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !6360
  %call109 = call i32 @get_symbol(%struct.RangeCoder* %114, i8* %arraydecay108, i32 0), !dbg !6361
  %115 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6362
  %cur110 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %115, i32 0, i32 21, !dbg !6363
  %116 = load %struct.AVFrame*, %struct.AVFrame** %cur110, align 8, !dbg !6363
  %sample_aspect_ratio111 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %116, i32 0, i32 9, !dbg !6364
  %den = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio111, i32 0, i32 1, !dbg !6365
  store i32 %call109, i32* %den, align 4, !dbg !6366
  %117 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6367
  %width112 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %117, i32 0, i32 9, !dbg !6369
  %118 = load i32, i32* %width112, align 8, !dbg !6369
  %119 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6370
  %height113 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %119, i32 0, i32 10, !dbg !6371
  %120 = load i32, i32* %height113, align 4, !dbg !6371
  %121 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6372
  %cur114 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %121, i32 0, i32 21, !dbg !6373
  %122 = load %struct.AVFrame*, %struct.AVFrame** %cur114, align 8, !dbg !6373
  %sample_aspect_ratio115 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %122, i32 0, i32 9, !dbg !6374
  %123 = bitcast %struct.AVRational* %sample_aspect_ratio115 to i64*, !dbg !6375
  %124 = load i64, i64* %123, align 8, !dbg !6375
  %call116 = call i32 @av_image_check_sar(i32 %118, i32 %120, i64 %124), !dbg !6375
  %cmp117 = icmp slt i32 %call116, 0, !dbg !6376
  br i1 %cmp117, label %if.then119, label %if.end131, !dbg !6377

if.then119:                                       ; preds = %if.end104
  %125 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6378
  %avctx120 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %125, i32 0, i32 1, !dbg !6380
  %126 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx120, align 8, !dbg !6380
  %127 = bitcast %struct.AVCodecContext* %126 to i8*, !dbg !6378
  %128 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6381
  %cur121 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %128, i32 0, i32 21, !dbg !6382
  %129 = load %struct.AVFrame*, %struct.AVFrame** %cur121, align 8, !dbg !6382
  %sample_aspect_ratio122 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %129, i32 0, i32 9, !dbg !6383
  %num123 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio122, i32 0, i32 0, !dbg !6384
  %130 = load i32, i32* %num123, align 8, !dbg !6384
  %131 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6385
  %cur124 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %131, i32 0, i32 21, !dbg !6386
  %132 = load %struct.AVFrame*, %struct.AVFrame** %cur124, align 8, !dbg !6386
  %sample_aspect_ratio125 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %132, i32 0, i32 9, !dbg !6387
  %den126 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %sample_aspect_ratio125, i32 0, i32 1, !dbg !6388
  %133 = load i32, i32* %den126, align 4, !dbg !6388
  call void (i8*, i32, i8*, ...) @av_log(i8* %127, i32 24, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i32 %130, i32 %133), !dbg !6389
  %134 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6390
  %cur127 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %134, i32 0, i32 21, !dbg !6391
  %135 = load %struct.AVFrame*, %struct.AVFrame** %cur127, align 8, !dbg !6391
  %sample_aspect_ratio128 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %135, i32 0, i32 9, !dbg !6392
  %num129 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 0, !dbg !6393
  store i32 0, i32* %num129, align 4, !dbg !6393
  %den130 = getelementptr inbounds %struct.AVRational, %struct.AVRational* %.compoundliteral, i32 0, i32 1, !dbg !6393
  store i32 1, i32* %den130, align 4, !dbg !6393
  %136 = bitcast %struct.AVRational* %sample_aspect_ratio128 to i8*, !dbg !6394
  %137 = bitcast %struct.AVRational* %.compoundliteral to i8*, !dbg !6394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %137, i64 8, i32 4, i1 false), !dbg !6394
  br label %if.end131, !dbg !6395

if.end131:                                        ; preds = %if.then119, %if.end104
  %138 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6396
  %version132 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %138, i32 0, i32 7, !dbg !6398
  %139 = load i32, i32* %version132, align 8, !dbg !6398
  %cmp133 = icmp sgt i32 %139, 3, !dbg !6399
  br i1 %cmp133, label %if.then135, label %if.end159, !dbg !6400

if.then135:                                       ; preds = %if.end131
  %140 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !6401
  %arraydecay136 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !6403
  %call137 = call i32 @get_rac(%struct.RangeCoder* %140, i8* %arraydecay136), !dbg !6404
  %141 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6405
  %slice_reset_contexts = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %141, i32 0, i32 54, !dbg !6406
  store i32 %call137, i32* %slice_reset_contexts, align 8, !dbg !6407
  %142 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !6408
  %arraydecay138 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !6409
  %call139 = call i32 @get_symbol(%struct.RangeCoder* %142, i8* %arraydecay138, i32 0), !dbg !6410
  %143 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6411
  %slice_coding_mode = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %143, i32 0, i32 55, !dbg !6412
  store i32 %call139, i32* %slice_coding_mode, align 4, !dbg !6413
  %144 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6414
  %slice_coding_mode140 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %144, i32 0, i32 55, !dbg !6416
  %145 = load i32, i32* %slice_coding_mode140, align 4, !dbg !6416
  %cmp141 = icmp ne i32 %145, 1, !dbg !6417
  br i1 %cmp141, label %if.then143, label %if.end158, !dbg !6418

if.then143:                                       ; preds = %if.then135
  %146 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !6419
  %arraydecay144 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !6421
  %call145 = call i32 @get_symbol(%struct.RangeCoder* %146, i8* %arraydecay144, i32 0), !dbg !6422
  %147 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6423
  %slice_rct_by_coef = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %147, i32 0, i32 56, !dbg !6424
  store i32 %call145, i32* %slice_rct_by_coef, align 8, !dbg !6425
  %148 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !6426
  %arraydecay146 = getelementptr inbounds [32 x i8], [32 x i8]* %state, i32 0, i32 0, !dbg !6427
  %call147 = call i32 @get_symbol(%struct.RangeCoder* %148, i8* %arraydecay146, i32 0), !dbg !6428
  %149 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6429
  %slice_rct_ry_coef = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %149, i32 0, i32 57, !dbg !6430
  store i32 %call147, i32* %slice_rct_ry_coef, align 4, !dbg !6431
  %150 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6432
  %slice_rct_by_coef148 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %150, i32 0, i32 56, !dbg !6434
  %151 = load i32, i32* %slice_rct_by_coef148, align 8, !dbg !6434
  %conv149 = sext i32 %151 to i64, !dbg !6435
  %152 = load %struct.FFV1Context*, %struct.FFV1Context** %fs.addr, align 8, !dbg !6436
  %slice_rct_ry_coef150 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %152, i32 0, i32 57, !dbg !6437
  %153 = load i32, i32* %slice_rct_ry_coef150, align 4, !dbg !6437
  %conv151 = sext i32 %153 to i64, !dbg !6438
  %add152 = add i64 %conv149, %conv151, !dbg !6439
  %cmp153 = icmp ugt i64 %add152, 4, !dbg !6440
  br i1 %cmp153, label %if.then155, label %if.end157, !dbg !6441

if.then155:                                       ; preds = %if.then143
  %154 = load %struct.FFV1Context*, %struct.FFV1Context** %f.addr, align 8, !dbg !6442
  %avctx156 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %154, i32 0, i32 1, !dbg !6444
  %155 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx156, align 8, !dbg !6444
  %156 = bitcast %struct.AVCodecContext* %155 to i8*, !dbg !6442
  call void (i8*, i32, i8*, ...) @av_log(i8* %156, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i32 0, i32 0)), !dbg !6445
  store i32 -1094995529, i32* %retval, align 4, !dbg !6446
  br label %return, !dbg !6446

if.end157:                                        ; preds = %if.then143
  br label %if.end158, !dbg !6447

if.end158:                                        ; preds = %if.end157, %if.then135
  br label %if.end159, !dbg !6448

if.end159:                                        ; preds = %if.end158, %if.end131
  store i32 0, i32* %retval, align 4, !dbg !6449
  br label %return, !dbg !6449

return:                                           ; preds = %if.end159, %if.then155, %if.then67, %if.then59, %if.then39
  %157 = load i32, i32* %retval, align 4, !dbg !6450
  ret i32 %157, !dbg !6450
}

declare void @ff_ffv1_clear_slice_state(%struct.FFV1Context*, %struct.FFV1Context*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #7 !dbg !6451 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6455, metadata !1706), !dbg !6456
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !6457, metadata !1706), !dbg !6458
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !6459, metadata !1706), !dbg !6460
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !6461, metadata !1706), !dbg !6462
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6463, metadata !1706), !dbg !6464
  store i32 0, i32* %ret, align 4, !dbg !6464
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !6465
  %cmp = icmp sge i32 %0, 2147483135, !dbg !6467
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6468

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !6469
  %cmp1 = icmp slt i32 %1, 0, !dbg !6471
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !6472

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !6473
  %tobool = icmp ne i8* %2, null, !dbg !6473
  br i1 %tobool, label %if.end, label %if.then, !dbg !6475

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !6476
  store i8* null, i8** %buffer.addr, align 8, !dbg !6478
  store i32 -1094995529, i32* %ret, align 4, !dbg !6479
  br label %if.end, !dbg !6480

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !6481
  %add = add nsw i32 %3, 7, !dbg !6482
  %shr = ashr i32 %add, 3, !dbg !6483
  store i32 %shr, i32* %buffer_size, align 4, !dbg !6484
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !6485
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6486
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !6487
  store i8* %4, i8** %buffer3, align 8, !dbg !6488
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !6489
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6490
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !6491
  store i32 %6, i32* %size_in_bits, align 4, !dbg !6492
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !6493
  %add4 = add nsw i32 %8, 8, !dbg !6494
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6495
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !6496
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !6497
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !6498
  %11 = load i32, i32* %buffer_size, align 4, !dbg !6499
  %idx.ext = sext i32 %11 to i64, !dbg !6500
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !6500
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6501
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !6502
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !6503
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6504
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !6505
  store i32 0, i32* %index, align 8, !dbg !6506
  %14 = load i32, i32* %ret, align 4, !dbg !6507
  ret i32 %14, !dbg !6508
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_plane(%struct.FFV1Context* %s, i8* %src, i32 %w, i32 %h, i32 %stride, i32 %plane_index, i32 %pixel_stride) #0 !dbg !6509 {
entry:
  %a.addr.i.i102 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i102, metadata !6512, metadata !1706), !dbg !6517
  %p.addr.i.i103 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i103, metadata !6534, metadata !1706), !dbg !6535
  %retval.i104 = alloca i32, align 4
  %s.addr.i105 = alloca %struct.FFV1Context*, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %s.addr.i105, metadata !6536, metadata !1706), !dbg !6537
  %w.addr.i106 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i106, metadata !6538, metadata !1706), !dbg !6539
  %sample.addr.i107 = alloca i16**, align 8
  call void @llvm.dbg.declare(metadata i16*** %sample.addr.i107, metadata !6540, metadata !1706), !dbg !6541
  %plane_index.addr.i108 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_index.addr.i108, metadata !6542, metadata !1706), !dbg !6543
  %bits.addr.i109 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i109, metadata !6544, metadata !1706), !dbg !6545
  %p.i110 = alloca %struct.PlaneContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PlaneContext** %p.i110, metadata !6546, metadata !1706), !dbg !6547
  %c.i111 = alloca %struct.RangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.i111, metadata !6548, metadata !1706), !dbg !6549
  %x.i112 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.i112, metadata !6550, metadata !1706), !dbg !6551
  %run_count.i113 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_count.i113, metadata !6552, metadata !1706), !dbg !6553
  %run_mode.i114 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_mode.i114, metadata !6554, metadata !1706), !dbg !6555
  %run_index.i115 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_index.i115, metadata !6556, metadata !1706), !dbg !6557
  %i.i116 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i116, metadata !6558, metadata !1706), !dbg !6561
  %v.i117 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %v.i117, metadata !6562, metadata !1706), !dbg !6566
  %state.i118 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %state.i118, metadata !6567, metadata !1706), !dbg !6571
  %diff.i119 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff.i119, metadata !6572, metadata !1706), !dbg !6573
  %context.i120 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %context.i120, metadata !6574, metadata !1706), !dbg !6575
  %sign.i121 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i121, metadata !6576, metadata !1706), !dbg !6577
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !6512, metadata !1706), !dbg !6578
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !6534, metadata !1706), !dbg !6582
  %retval.i = alloca i32, align 4
  %s.addr.i = alloca %struct.FFV1Context*, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %s.addr.i, metadata !6536, metadata !1706), !dbg !6583
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !6538, metadata !1706), !dbg !6584
  %sample.addr.i = alloca i16**, align 8
  call void @llvm.dbg.declare(metadata i16*** %sample.addr.i, metadata !6540, metadata !1706), !dbg !6585
  %plane_index.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_index.addr.i, metadata !6542, metadata !1706), !dbg !6586
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !6544, metadata !1706), !dbg !6587
  %p.i = alloca %struct.PlaneContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PlaneContext** %p.i, metadata !6546, metadata !1706), !dbg !6588
  %c.i = alloca %struct.RangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.i, metadata !6548, metadata !1706), !dbg !6589
  %x.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.i, metadata !6550, metadata !1706), !dbg !6590
  %run_count.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_count.i, metadata !6552, metadata !1706), !dbg !6591
  %run_mode.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_mode.i, metadata !6554, metadata !1706), !dbg !6592
  %run_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_index.i, metadata !6556, metadata !1706), !dbg !6593
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !6558, metadata !1706), !dbg !6594
  %v.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %v.i, metadata !6562, metadata !1706), !dbg !6595
  %state.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %state.i, metadata !6567, metadata !1706), !dbg !6596
  %diff.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff.i, metadata !6572, metadata !1706), !dbg !6597
  %context.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %context.i, metadata !6574, metadata !1706), !dbg !6598
  %sign.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i, metadata !6576, metadata !1706), !dbg !6599
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.FFV1Context*, align 8
  %src.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %plane_index.addr = alloca i32, align 4
  %pixel_stride.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sample = alloca [2 x i16*], align 16
  %temp = alloca i16*, align 8
  %ret = alloca i32, align 4
  %ret40 = alloca i32, align 4
  store %struct.FFV1Context* %s, %struct.FFV1Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %s.addr, metadata !6600, metadata !1706), !dbg !6601
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6602, metadata !1706), !dbg !6603
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !6604, metadata !1706), !dbg !6605
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !6606, metadata !1706), !dbg !6607
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !6608, metadata !1706), !dbg !6609
  store i32 %plane_index, i32* %plane_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_index.addr, metadata !6610, metadata !1706), !dbg !6611
  store i32 %pixel_stride, i32* %pixel_stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pixel_stride.addr, metadata !6612, metadata !1706), !dbg !6613
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6614, metadata !1706), !dbg !6615
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6616, metadata !1706), !dbg !6617
  call void @llvm.dbg.declare(metadata [2 x i16*]* %sample, metadata !6618, metadata !1706), !dbg !6620
  %0 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !6621
  %sample_buffer = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %0, i32 0, i32 33, !dbg !6622
  %1 = load i16*, i16** %sample_buffer, align 8, !dbg !6622
  %add.ptr = getelementptr inbounds i16, i16* %1, i64 3, !dbg !6623
  %arrayidx = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i64 0, i64 0, !dbg !6624
  store i16* %add.ptr, i16** %arrayidx, align 16, !dbg !6625
  %2 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !6626
  %sample_buffer1 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %2, i32 0, i32 33, !dbg !6627
  %3 = load i16*, i16** %sample_buffer1, align 8, !dbg !6627
  %4 = load i32, i32* %w.addr, align 4, !dbg !6628
  %idx.ext = sext i32 %4 to i64, !dbg !6629
  %add.ptr2 = getelementptr inbounds i16, i16* %3, i64 %idx.ext, !dbg !6629
  %add.ptr3 = getelementptr inbounds i16, i16* %add.ptr2, i64 6, !dbg !6630
  %add.ptr4 = getelementptr inbounds i16, i16* %add.ptr3, i64 3, !dbg !6631
  %arrayidx5 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i64 0, i64 1, !dbg !6632
  store i16* %add.ptr4, i16** %arrayidx5, align 8, !dbg !6633
  %5 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !6634
  %run_index = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %5, i32 0, i32 31, !dbg !6635
  store i32 0, i32* %run_index, align 8, !dbg !6636
  %6 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !6637
  %sample_buffer6 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %6, i32 0, i32 33, !dbg !6638
  %7 = load i16*, i16** %sample_buffer6, align 8, !dbg !6638
  %8 = bitcast i16* %7 to i8*, !dbg !6639
  %9 = load i32, i32* %w.addr, align 4, !dbg !6640
  %add = add nsw i32 %9, 6, !dbg !6641
  %mul = mul nsw i32 2, %add, !dbg !6642
  %conv = sext i32 %mul to i64, !dbg !6643
  %mul7 = mul i64 %conv, 2, !dbg !6644
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 %mul7, i32 2, i1 false), !dbg !6639
  store i32 0, i32* %y, align 4, !dbg !6645
  br label %for.cond, !dbg !6646

for.cond:                                         ; preds = %for.inc99, %entry
  %10 = load i32, i32* %y, align 4, !dbg !6647
  %11 = load i32, i32* %h.addr, align 4, !dbg !6649
  %cmp = icmp slt i32 %10, %11, !dbg !6650
  br i1 %cmp, label %for.body, label %for.end101, !dbg !6651

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %temp, metadata !6652, metadata !1706), !dbg !6653
  %arrayidx9 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i64 0, i64 0, !dbg !6654
  %12 = load i16*, i16** %arrayidx9, align 16, !dbg !6654
  store i16* %12, i16** %temp, align 8, !dbg !6653
  %arrayidx10 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i64 0, i64 1, !dbg !6655
  %13 = load i16*, i16** %arrayidx10, align 8, !dbg !6655
  %arrayidx11 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i64 0, i64 0, !dbg !6656
  store i16* %13, i16** %arrayidx11, align 16, !dbg !6657
  %14 = load i16*, i16** %temp, align 8, !dbg !6658
  %arrayidx12 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i64 0, i64 1, !dbg !6659
  store i16* %14, i16** %arrayidx12, align 8, !dbg !6660
  %arrayidx13 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i64 0, i64 0, !dbg !6661
  %15 = load i16*, i16** %arrayidx13, align 16, !dbg !6661
  %arrayidx14 = getelementptr inbounds i16, i16* %15, i64 0, !dbg !6661
  %16 = load i16, i16* %arrayidx14, align 2, !dbg !6661
  %arrayidx15 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i64 0, i64 1, !dbg !6662
  %17 = load i16*, i16** %arrayidx15, align 8, !dbg !6662
  %arrayidx16 = getelementptr inbounds i16, i16* %17, i64 -1, !dbg !6662
  store i16 %16, i16* %arrayidx16, align 2, !dbg !6663
  %18 = load i32, i32* %w.addr, align 4, !dbg !6664
  %sub = sub nsw i32 %18, 1, !dbg !6665
  %idxprom = sext i32 %sub to i64, !dbg !6666
  %arrayidx17 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i64 0, i64 0, !dbg !6666
  %19 = load i16*, i16** %arrayidx17, align 16, !dbg !6666
  %arrayidx18 = getelementptr inbounds i16, i16* %19, i64 %idxprom, !dbg !6666
  %20 = load i16, i16* %arrayidx18, align 2, !dbg !6666
  %21 = load i32, i32* %w.addr, align 4, !dbg !6667
  %idxprom19 = sext i32 %21 to i64, !dbg !6668
  %arrayidx20 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i64 0, i64 0, !dbg !6668
  %22 = load i16*, i16** %arrayidx20, align 16, !dbg !6668
  %arrayidx21 = getelementptr inbounds i16, i16* %22, i64 %idxprom19, !dbg !6668
  store i16 %20, i16* %arrayidx21, align 2, !dbg !6669
  %23 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !6670
  %avctx = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %23, i32 0, i32 1, !dbg !6671
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !6671
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 143, !dbg !6672
  %25 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !6672
  %cmp22 = icmp sle i32 %25, 8, !dbg !6673
  br i1 %cmp22, label %if.then, label %if.else, !dbg !6674

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6675, metadata !1706), !dbg !6676
  %26 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !6677
  %27 = load i32, i32* %w.addr, align 4, !dbg !6678
  %arraydecay = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i32 0, i32 0, !dbg !6679
  %28 = load i32, i32* %plane_index.addr, align 4, !dbg !6680
  store %struct.FFV1Context* %26, %struct.FFV1Context** %s.addr.i, align 8, !dbg !6681
  store i32 %27, i32* %w.addr.i, align 4, !dbg !6681
  store i16** %arraydecay, i16*** %sample.addr.i, align 8, !dbg !6681
  store i32 %28, i32* %plane_index.addr.i, align 4, !dbg !6681
  store i32 8, i32* %bits.addr.i, align 4, !dbg !6681
  %29 = load i32, i32* %plane_index.addr.i, align 4, !dbg !6682
  %idxprom.i = sext i32 %29 to i64, !dbg !6683
  %30 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !6683
  %plane.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %30, i32 0, i32 25, !dbg !6684
  %arrayidx.i = getelementptr inbounds [4 x %struct.PlaneContext], [4 x %struct.PlaneContext]* %plane.i, i64 0, i64 %idxprom.i, !dbg !6683
  store %struct.PlaneContext* %arrayidx.i, %struct.PlaneContext** %p.i, align 8, !dbg !6588
  %31 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !6685
  %c1.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %31, i32 0, i32 2, !dbg !6686
  store %struct.RangeCoder* %c1.i, %struct.RangeCoder** %c.i, align 8, !dbg !6589
  store i32 0, i32* %run_count.i, align 4, !dbg !6591
  store i32 0, i32* %run_mode.i, align 4, !dbg !6592
  %32 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !6687
  %run_index2.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %32, i32 0, i32 31, !dbg !6688
  %33 = load i32, i32* %run_index2.i, align 8, !dbg !6688
  store i32 %33, i32* %run_index.i, align 4, !dbg !6593
  %34 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !6689
  %call.i = call i32 @is_input_end(%struct.FFV1Context* %34) #12, !dbg !6691
  %tobool.i = icmp ne i32 %call.i, 0, !dbg !6691
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !6692

if.then.i:                                        ; preds = %if.then
  store i32 -1094995529, i32* %retval.i, align 4, !dbg !6693
  br label %decode_line.exit, !dbg !6693

if.end.i:                                         ; preds = %if.then
  %35 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !6694
  %slice_coding_mode.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %35, i32 0, i32 55, !dbg !6695
  %36 = load i32, i32* %slice_coding_mode.i, align 4, !dbg !6695
  %cmp.i = icmp eq i32 %36, 1, !dbg !6696
  br i1 %cmp.i, label %if.then3.i, label %if.end16.i, !dbg !6697

if.then3.i:                                       ; preds = %if.end.i
  store i32 0, i32* %x.i, align 4, !dbg !6698
  br label %for.cond.i, !dbg !6699

for.cond.i:                                       ; preds = %for.end.i, %if.then3.i
  %37 = load i32, i32* %x.i, align 4, !dbg !6700
  %38 = load i32, i32* %w.addr.i, align 4, !dbg !6702
  %cmp4.i = icmp slt i32 %37, %38, !dbg !6703
  br i1 %cmp4.i, label %for.body.i, label %for.end15.i, !dbg !6704

for.body.i:                                       ; preds = %for.cond.i
  store i32 0, i32* %v.i, align 4, !dbg !6595
  store i32 0, i32* %i.i, align 4, !dbg !6705
  br label %for.cond5.i, !dbg !6706

for.cond5.i:                                      ; preds = %for.body7.i, %for.body.i
  %39 = load i32, i32* %i.i, align 4, !dbg !6707
  %40 = load i32, i32* %bits.addr.i, align 4, !dbg !6709
  %cmp6.i = icmp slt i32 %39, %40, !dbg !6710
  br i1 %cmp6.i, label %for.body7.i, label %for.end.i, !dbg !6711

for.body7.i:                                      ; preds = %for.cond5.i
  store i8 -128, i8* %state.i, align 1, !dbg !6596
  %41 = load i32, i32* %v.i, align 4, !dbg !6712
  %42 = load %struct.RangeCoder*, %struct.RangeCoder** %c.i, align 8, !dbg !6713
  %call8.i = call i32 @get_rac(%struct.RangeCoder* %42, i8* %state.i) #12, !dbg !6714
  %add.i = add nsw i32 %41, %call8.i, !dbg !6715
  %43 = load i32, i32* %v.i, align 4, !dbg !6716
  %add9.i = add nsw i32 %43, %add.i, !dbg !6716
  store i32 %add9.i, i32* %v.i, align 4, !dbg !6716
  %44 = load i32, i32* %i.i, align 4, !dbg !6717
  %inc.i = add nsw i32 %44, 1, !dbg !6717
  store i32 %inc.i, i32* %i.i, align 4, !dbg !6717
  br label %for.cond5.i, !dbg !6719, !llvm.loop !6720

for.end.i:                                        ; preds = %for.cond5.i
  %45 = load i32, i32* %v.i, align 4, !dbg !6722
  %conv.i = trunc i32 %45 to i16, !dbg !6722
  %46 = load i32, i32* %x.i, align 4, !dbg !6723
  %idxprom10.i = sext i32 %46 to i64, !dbg !6724
  %47 = load i16**, i16*** %sample.addr.i, align 8, !dbg !6724
  %arrayidx11.i = getelementptr inbounds i16*, i16** %47, i64 1, !dbg !6724
  %48 = load i16*, i16** %arrayidx11.i, align 8, !dbg !6724
  %arrayidx12.i = getelementptr inbounds i16, i16* %48, i64 %idxprom10.i, !dbg !6724
  store i16 %conv.i, i16* %arrayidx12.i, align 2, !dbg !6725
  %49 = load i32, i32* %x.i, align 4, !dbg !6726
  %inc14.i = add nsw i32 %49, 1, !dbg !6726
  store i32 %inc14.i, i32* %x.i, align 4, !dbg !6726
  br label %for.cond.i, !dbg !6728, !llvm.loop !6729

for.end15.i:                                      ; preds = %for.cond.i
  store i32 0, i32* %retval.i, align 4, !dbg !6731
  br label %decode_line.exit, !dbg !6731

if.end16.i:                                       ; preds = %if.end.i
  store i32 0, i32* %x.i, align 4, !dbg !6732
  br label %for.cond17.i, !dbg !6733

for.cond17.i:                                     ; preds = %if.end117.i, %if.end16.i
  %50 = load i32, i32* %x.i, align 4, !dbg !6734
  %51 = load i32, i32* %w.addr.i, align 4, !dbg !6736
  %cmp18.i = icmp slt i32 %50, %51, !dbg !6737
  br i1 %cmp18.i, label %for.body20.i, label %for.end133.i, !dbg !6738

for.body20.i:                                     ; preds = %for.cond17.i
  %52 = load i32, i32* %x.i, align 4, !dbg !6739
  %and.i = and i32 %52, 1023, !dbg !6741
  %tobool21.i = icmp ne i32 %and.i, 0, !dbg !6741
  br i1 %tobool21.i, label %if.end27.i, label %if.then22.i, !dbg !6742

if.then22.i:                                      ; preds = %for.body20.i
  %53 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !6743
  %call23.i = call i32 @is_input_end(%struct.FFV1Context* %53) #12, !dbg !6746
  %tobool24.i = icmp ne i32 %call23.i, 0, !dbg !6746
  br i1 %tobool24.i, label %if.then25.i, label %if.end26.i, !dbg !6747

if.then25.i:                                      ; preds = %if.then22.i
  store i32 -1094995529, i32* %retval.i, align 4, !dbg !6748
  br label %decode_line.exit, !dbg !6748

if.end26.i:                                       ; preds = %if.then22.i
  br label %if.end27.i, !dbg !6749

if.end27.i:                                       ; preds = %if.end26.i, %for.body20.i
  %54 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i, align 8, !dbg !6750
  %55 = load i16**, i16*** %sample.addr.i, align 8, !dbg !6751
  %arrayidx28.i = getelementptr inbounds i16*, i16** %55, i64 1, !dbg !6751
  %56 = load i16*, i16** %arrayidx28.i, align 8, !dbg !6751
  %57 = load i32, i32* %x.i, align 4, !dbg !6752
  %idx.ext.i = sext i32 %57 to i64, !dbg !6753
  %add.ptr.i = getelementptr inbounds i16, i16* %56, i64 %idx.ext.i, !dbg !6753
  %58 = load i16**, i16*** %sample.addr.i, align 8, !dbg !6754
  %59 = load i16*, i16** %58, align 8, !dbg !6754
  %60 = load i32, i32* %x.i, align 4, !dbg !6755
  %idx.ext30.i = sext i32 %60 to i64, !dbg !6756
  %add.ptr31.i = getelementptr inbounds i16, i16* %59, i64 %idx.ext30.i, !dbg !6756
  %61 = load i16**, i16*** %sample.addr.i, align 8, !dbg !6757
  %arrayidx32.i = getelementptr inbounds i16*, i16** %61, i64 1, !dbg !6757
  %62 = load i16*, i16** %arrayidx32.i, align 8, !dbg !6757
  %63 = load i32, i32* %x.i, align 4, !dbg !6758
  %idx.ext33.i = sext i32 %63 to i64, !dbg !6759
  %add.ptr34.i = getelementptr inbounds i16, i16* %62, i64 %idx.ext33.i, !dbg !6759
  %call35.i = call i32 @get_context(%struct.PlaneContext* %54, i16* %add.ptr.i, i16* %add.ptr31.i, i16* %add.ptr34.i) #12, !dbg !6760
  store i32 %call35.i, i32* %context.i, align 4, !dbg !6761
  %64 = load i32, i32* %context.i, align 4, !dbg !6762
  %cmp36.i = icmp slt i32 %64, 0, !dbg !6764
  br i1 %cmp36.i, label %if.then38.i, label %if.else.i, !dbg !6765

if.then38.i:                                      ; preds = %if.end27.i
  %65 = load i32, i32* %context.i, align 4, !dbg !6766
  %sub.i = sub nsw i32 0, %65, !dbg !6768
  store i32 %sub.i, i32* %context.i, align 4, !dbg !6769
  store i32 1, i32* %sign.i, align 4, !dbg !6770
  br label %if.end39.i, !dbg !6771

if.else.i:                                        ; preds = %if.end27.i
  store i32 0, i32* %sign.i, align 4, !dbg !6772
  br label %if.end39.i, !dbg !6681

if.end39.i:                                       ; preds = %if.else.i, %if.then38.i
  %66 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !6773
  %ac.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %66, i32 0, i32 23, !dbg !6775
  %67 = load i32, i32* %ac.i, align 4, !dbg !6775
  %cmp40.i = icmp ne i32 %67, 0, !dbg !6776
  br i1 %cmp40.i, label %if.then42.i, label %if.else47.i, !dbg !6777

if.then42.i:                                      ; preds = %if.end39.i
  %68 = load %struct.RangeCoder*, %struct.RangeCoder** %c.i, align 8, !dbg !6778
  %69 = load i32, i32* %context.i, align 4, !dbg !6780
  %idxprom43.i = sext i32 %69 to i64, !dbg !6781
  %70 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i, align 8, !dbg !6781
  %state44.i = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %70, i32 0, i32 3, !dbg !6782
  %71 = load [32 x i8]*, [32 x i8]** %state44.i, align 8, !dbg !6782
  %arrayidx45.i = getelementptr inbounds [32 x i8], [32 x i8]* %71, i64 %idxprom43.i, !dbg !6781
  %arraydecay.i = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx45.i, i32 0, i32 0, !dbg !6781
  %call46.i = call i32 @get_symbol_inline(%struct.RangeCoder* %68, i8* %arraydecay.i, i32 1) #12, !dbg !6783
  store i32 %call46.i, i32* %diff.i, align 4, !dbg !6784
  br label %if.end113.i, !dbg !6785

if.else47.i:                                      ; preds = %if.end39.i
  %72 = load i32, i32* %context.i, align 4, !dbg !6786
  %cmp48.i = icmp eq i32 %72, 0, !dbg !6789
  br i1 %cmp48.i, label %land.lhs.true.i, label %if.end53.i, !dbg !6790

land.lhs.true.i:                                  ; preds = %if.else47.i
  %73 = load i32, i32* %run_mode.i, align 4, !dbg !6791
  %cmp50.i = icmp eq i32 %73, 0, !dbg !6793
  br i1 %cmp50.i, label %if.then52.i, label %if.end53.i, !dbg !6794

if.then52.i:                                      ; preds = %land.lhs.true.i
  store i32 1, i32* %run_mode.i, align 4, !dbg !6795
  br label %if.end53.i, !dbg !6796

if.end53.i:                                       ; preds = %if.then52.i, %land.lhs.true.i, %if.else47.i
  %74 = load i32, i32* %run_mode.i, align 4, !dbg !6797
  %tobool54.i = icmp ne i32 %74, 0, !dbg !6797
  br i1 %tobool54.i, label %if.then55.i, label %if.else106.i, !dbg !6799

if.then55.i:                                      ; preds = %if.end53.i
  %75 = load i32, i32* %run_count.i, align 4, !dbg !6800
  %cmp56.i = icmp eq i32 %75, 0, !dbg !6803
  br i1 %cmp56.i, label %land.lhs.true58.i, label %if.end90.i, !dbg !6804

land.lhs.true58.i:                                ; preds = %if.then55.i
  %76 = load i32, i32* %run_mode.i, align 4, !dbg !6805
  %cmp59.i = icmp eq i32 %76, 1, !dbg !6807
  br i1 %cmp59.i, label %if.then61.i, label %if.end90.i, !dbg !6808

if.then61.i:                                      ; preds = %land.lhs.true58.i
  %77 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !6809
  %gb.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %77, i32 0, i32 3, !dbg !6812
  %call62.i = call i32 @get_bits1(%struct.GetBitContext* %gb.i) #12, !dbg !6813
  %tobool63.i = icmp ne i32 %call62.i, 0, !dbg !6813
  br i1 %tobool63.i, label %if.then64.i, label %if.else74.i, !dbg !6814

if.then64.i:                                      ; preds = %if.then61.i
  %78 = load i32, i32* %run_index.i, align 4, !dbg !6815
  %idxprom65.i = sext i32 %78 to i64, !dbg !6817
  %arrayidx66.i = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom65.i, !dbg !6817
  %79 = load i8, i8* %arrayidx66.i, align 1, !dbg !6817
  %conv67.i = zext i8 %79 to i32, !dbg !6817
  %shl.i = shl i32 1, %conv67.i, !dbg !6818
  store i32 %shl.i, i32* %run_count.i, align 4, !dbg !6819
  %80 = load i32, i32* %x.i, align 4, !dbg !6820
  %81 = load i32, i32* %run_count.i, align 4, !dbg !6822
  %add68.i = add nsw i32 %80, %81, !dbg !6823
  %82 = load i32, i32* %w.addr.i, align 4, !dbg !6824
  %cmp69.i = icmp sle i32 %add68.i, %82, !dbg !6825
  br i1 %cmp69.i, label %if.then71.i, label %if.end73.i, !dbg !6826

if.then71.i:                                      ; preds = %if.then64.i
  %83 = load i32, i32* %run_index.i, align 4, !dbg !6827
  %inc72.i = add nsw i32 %83, 1, !dbg !6827
  store i32 %inc72.i, i32* %run_index.i, align 4, !dbg !6827
  br label %if.end73.i, !dbg !6828

if.end73.i:                                       ; preds = %if.then71.i, %if.then64.i
  br label %if.end89.i, !dbg !6829

if.else74.i:                                      ; preds = %if.then61.i
  %84 = load i32, i32* %run_index.i, align 4, !dbg !6830
  %idxprom75.i = sext i32 %84 to i64, !dbg !6833
  %arrayidx76.i = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom75.i, !dbg !6833
  %85 = load i8, i8* %arrayidx76.i, align 1, !dbg !6833
  %tobool77.i = icmp ne i8 %85, 0, !dbg !6833
  br i1 %tobool77.i, label %if.then78.i, label %if.else84.i, !dbg !6834

if.then78.i:                                      ; preds = %if.else74.i
  %86 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !6835
  %gb79.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %86, i32 0, i32 3, !dbg !6836
  %87 = load i32, i32* %run_index.i, align 4, !dbg !6837
  %idxprom80.i = sext i32 %87 to i64, !dbg !6838
  %arrayidx81.i = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom80.i, !dbg !6838
  %88 = load i8, i8* %arrayidx81.i, align 1, !dbg !6838
  %conv82.i = zext i8 %88 to i32, !dbg !6838
  %call83.i = call i32 @get_bits(%struct.GetBitContext* %gb79.i, i32 %conv82.i) #12, !dbg !6839
  store i32 %call83.i, i32* %run_count.i, align 4, !dbg !6840
  br label %if.end85.i, !dbg !6841

if.else84.i:                                      ; preds = %if.else74.i
  store i32 0, i32* %run_count.i, align 4, !dbg !6842
  br label %if.end85.i, !dbg !6681

if.end85.i:                                       ; preds = %if.else84.i, %if.then78.i
  %89 = load i32, i32* %run_index.i, align 4, !dbg !6843
  %tobool86.i = icmp ne i32 %89, 0, !dbg !6843
  br i1 %tobool86.i, label %if.then87.i, label %if.end88.i, !dbg !6845

if.then87.i:                                      ; preds = %if.end85.i
  %90 = load i32, i32* %run_index.i, align 4, !dbg !6846
  %dec.i = add nsw i32 %90, -1, !dbg !6846
  store i32 %dec.i, i32* %run_index.i, align 4, !dbg !6846
  br label %if.end88.i, !dbg !6847

if.end88.i:                                       ; preds = %if.then87.i, %if.end85.i
  store i32 2, i32* %run_mode.i, align 4, !dbg !6848
  br label %if.end89.i, !dbg !6681

if.end89.i:                                       ; preds = %if.end88.i, %if.end73.i
  br label %if.end90.i, !dbg !6849

if.end90.i:                                       ; preds = %if.end89.i, %land.lhs.true58.i, %if.then55.i
  %91 = load i32, i32* %run_count.i, align 4, !dbg !6850
  %dec91.i = add nsw i32 %91, -1, !dbg !6850
  store i32 %dec91.i, i32* %run_count.i, align 4, !dbg !6850
  %92 = load i32, i32* %run_count.i, align 4, !dbg !6851
  %cmp92.i = icmp slt i32 %92, 0, !dbg !6853
  br i1 %cmp92.i, label %if.then94.i, label %if.else104.i, !dbg !6854

if.then94.i:                                      ; preds = %if.end90.i
  store i32 0, i32* %run_mode.i, align 4, !dbg !6855
  store i32 0, i32* %run_count.i, align 4, !dbg !6857
  %93 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !6858
  %gb95.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %93, i32 0, i32 3, !dbg !6859
  %94 = load i32, i32* %context.i, align 4, !dbg !6860
  %idxprom96.i = sext i32 %94 to i64, !dbg !6861
  %95 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i, align 8, !dbg !6861
  %vlc_state.i = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %95, i32 0, i32 4, !dbg !6862
  %96 = load %struct.VlcState*, %struct.VlcState** %vlc_state.i, align 8, !dbg !6862
  %arrayidx97.i = getelementptr inbounds %struct.VlcState, %struct.VlcState* %96, i64 %idxprom96.i, !dbg !6861
  %97 = load i32, i32* %bits.addr.i, align 4, !dbg !6863
  %call98.i = call i32 @get_vlc_symbol(%struct.GetBitContext* %gb95.i, %struct.VlcState* %arrayidx97.i, i32 %97) #12, !dbg !6864
  store i32 %call98.i, i32* %diff.i, align 4, !dbg !6865
  %98 = load i32, i32* %diff.i, align 4, !dbg !6866
  %cmp99.i = icmp sge i32 %98, 0, !dbg !6868
  br i1 %cmp99.i, label %if.then101.i, label %if.end103.i, !dbg !6869

if.then101.i:                                     ; preds = %if.then94.i
  %99 = load i32, i32* %diff.i, align 4, !dbg !6870
  %inc102.i = add nsw i32 %99, 1, !dbg !6870
  store i32 %inc102.i, i32* %diff.i, align 4, !dbg !6870
  br label %if.end103.i, !dbg !6871

if.end103.i:                                      ; preds = %if.then101.i, %if.then94.i
  br label %if.end105.i, !dbg !6872

if.else104.i:                                     ; preds = %if.end90.i
  store i32 0, i32* %diff.i, align 4, !dbg !6873
  br label %if.end105.i, !dbg !6681

if.end105.i:                                      ; preds = %if.else104.i, %if.end103.i
  br label %if.end112.i, !dbg !6874

if.else106.i:                                     ; preds = %if.end53.i
  %100 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !6875
  %gb107.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %100, i32 0, i32 3, !dbg !6876
  %101 = load i32, i32* %context.i, align 4, !dbg !6877
  %idxprom108.i = sext i32 %101 to i64, !dbg !6878
  %102 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i, align 8, !dbg !6878
  %vlc_state109.i = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %102, i32 0, i32 4, !dbg !6879
  %103 = load %struct.VlcState*, %struct.VlcState** %vlc_state109.i, align 8, !dbg !6879
  %arrayidx110.i = getelementptr inbounds %struct.VlcState, %struct.VlcState* %103, i64 %idxprom108.i, !dbg !6878
  %104 = load i32, i32* %bits.addr.i, align 4, !dbg !6880
  %call111.i = call i32 @get_vlc_symbol(%struct.GetBitContext* %gb107.i, %struct.VlcState* %arrayidx110.i, i32 %104) #12, !dbg !6881
  store i32 %call111.i, i32* %diff.i, align 4, !dbg !6882
  br label %if.end112.i, !dbg !6681

if.end112.i:                                      ; preds = %if.else106.i, %if.end105.i
  br label %if.end113.i, !dbg !6681

if.end113.i:                                      ; preds = %if.end112.i, %if.then42.i
  %105 = load i32, i32* %sign.i, align 4, !dbg !6883
  %tobool114.i = icmp ne i32 %105, 0, !dbg !6883
  br i1 %tobool114.i, label %if.then115.i, label %if.end117.i, !dbg !6885

if.then115.i:                                     ; preds = %if.end113.i
  %106 = load i32, i32* %diff.i, align 4, !dbg !6886
  %sub116.i = sub i32 0, %106, !dbg !6887
  store i32 %sub116.i, i32* %diff.i, align 4, !dbg !6888
  br label %if.end117.i, !dbg !6889

if.end117.i:                                      ; preds = %if.then115.i, %if.end113.i
  %107 = load i16**, i16*** %sample.addr.i, align 8, !dbg !6890
  %arrayidx118.i = getelementptr inbounds i16*, i16** %107, i64 1, !dbg !6890
  %108 = load i16*, i16** %arrayidx118.i, align 8, !dbg !6890
  %109 = load i32, i32* %x.i, align 4, !dbg !6891
  %idx.ext119.i = sext i32 %109 to i64, !dbg !6892
  %add.ptr120.i = getelementptr inbounds i16, i16* %108, i64 %idx.ext119.i, !dbg !6892
  %110 = load i16**, i16*** %sample.addr.i, align 8, !dbg !6893
  %111 = load i16*, i16** %110, align 8, !dbg !6893
  %112 = load i32, i32* %x.i, align 4, !dbg !6894
  %idx.ext122.i = sext i32 %112 to i64, !dbg !6895
  %add.ptr123.i = getelementptr inbounds i16, i16* %111, i64 %idx.ext122.i, !dbg !6895
  %call124.i = call i32 @predict(i16* %add.ptr120.i, i16* %add.ptr123.i) #12, !dbg !6896
  %113 = load i32, i32* %diff.i, align 4, !dbg !6897
  %add125.i = add i32 %call124.i, %113, !dbg !6898
  %114 = load i32, i32* %bits.addr.i, align 4, !dbg !6899
  store i32 %add125.i, i32* %a.addr.i.i, align 4, !dbg !6900
  store i32 %114, i32* %p.addr.i.i, align 4, !dbg !6900
  %115 = load i32, i32* %a.addr.i.i, align 4, !dbg !6901
  %116 = load i32, i32* %p.addr.i.i, align 4, !dbg !6902
  %shl.i.i = shl i32 1, %116, !dbg !6903
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !6904
  %and.i.i = and i32 %115, %sub.i.i, !dbg !6905
  %conv127.i = trunc i32 %and.i.i to i16, !dbg !6906
  %117 = load i32, i32* %x.i, align 4, !dbg !6907
  %idxprom128.i = sext i32 %117 to i64, !dbg !6908
  %118 = load i16**, i16*** %sample.addr.i, align 8, !dbg !6908
  %arrayidx129.i = getelementptr inbounds i16*, i16** %118, i64 1, !dbg !6908
  %119 = load i16*, i16** %arrayidx129.i, align 8, !dbg !6908
  %arrayidx130.i = getelementptr inbounds i16, i16* %119, i64 %idxprom128.i, !dbg !6908
  store i16 %conv127.i, i16* %arrayidx130.i, align 2, !dbg !6909
  %120 = load i32, i32* %x.i, align 4, !dbg !6910
  %inc132.i = add nsw i32 %120, 1, !dbg !6910
  store i32 %inc132.i, i32* %x.i, align 4, !dbg !6910
  br label %for.cond17.i, !dbg !6912, !llvm.loop !6913

for.end133.i:                                     ; preds = %for.cond17.i
  %121 = load i32, i32* %run_index.i, align 4, !dbg !6915
  %122 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !6916
  %run_index134.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %122, i32 0, i32 31, !dbg !6917
  store i32 %121, i32* %run_index134.i, align 8, !dbg !6918
  store i32 0, i32* %retval.i, align 4, !dbg !6919
  br label %decode_line.exit, !dbg !6919

decode_line.exit:                                 ; preds = %if.then.i, %for.end15.i, %if.then25.i, %for.end133.i
  %123 = load i32, i32* %retval.i, align 4, !dbg !6920
  store i32 %123, i32* %ret, align 4, !dbg !6676
  %124 = load i32, i32* %ret, align 4, !dbg !6921
  %cmp24 = icmp slt i32 %124, 0, !dbg !6923
  br i1 %cmp24, label %if.then26, label %if.end, !dbg !6924

if.then26:                                        ; preds = %decode_line.exit
  %125 = load i32, i32* %ret, align 4, !dbg !6925
  store i32 %125, i32* %retval, align 4, !dbg !6926
  br label %return, !dbg !6926

if.end:                                           ; preds = %decode_line.exit
  store i32 0, i32* %x, align 4, !dbg !6927
  br label %for.cond27, !dbg !6929

for.cond27:                                       ; preds = %for.inc, %if.end
  %126 = load i32, i32* %x, align 4, !dbg !6930
  %127 = load i32, i32* %w.addr, align 4, !dbg !6933
  %cmp28 = icmp slt i32 %126, %127, !dbg !6934
  br i1 %cmp28, label %for.body30, label %for.end, !dbg !6935

for.body30:                                       ; preds = %for.cond27
  %128 = load i32, i32* %x, align 4, !dbg !6936
  %idxprom31 = sext i32 %128 to i64, !dbg !6937
  %arrayidx32 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i64 0, i64 1, !dbg !6937
  %129 = load i16*, i16** %arrayidx32, align 8, !dbg !6937
  %arrayidx33 = getelementptr inbounds i16, i16* %129, i64 %idxprom31, !dbg !6937
  %130 = load i16, i16* %arrayidx33, align 2, !dbg !6937
  %conv34 = trunc i16 %130 to i8, !dbg !6937
  %131 = load i32, i32* %x, align 4, !dbg !6938
  %132 = load i32, i32* %pixel_stride.addr, align 4, !dbg !6939
  %mul35 = mul nsw i32 %131, %132, !dbg !6940
  %133 = load i32, i32* %stride.addr, align 4, !dbg !6941
  %134 = load i32, i32* %y, align 4, !dbg !6942
  %mul36 = mul nsw i32 %133, %134, !dbg !6943
  %add37 = add nsw i32 %mul35, %mul36, !dbg !6944
  %idxprom38 = sext i32 %add37 to i64, !dbg !6945
  %135 = load i8*, i8** %src.addr, align 8, !dbg !6945
  %arrayidx39 = getelementptr inbounds i8, i8* %135, i64 %idxprom38, !dbg !6945
  store i8 %conv34, i8* %arrayidx39, align 1, !dbg !6946
  br label %for.inc, !dbg !6945

for.inc:                                          ; preds = %for.body30
  %136 = load i32, i32* %x, align 4, !dbg !6947
  %inc = add nsw i32 %136, 1, !dbg !6947
  store i32 %inc, i32* %x, align 4, !dbg !6947
  br label %for.cond27, !dbg !6949, !llvm.loop !6950

for.end:                                          ; preds = %for.cond27
  br label %if.end98, !dbg !6952

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %ret40, metadata !6953, metadata !1706), !dbg !6954
  %137 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !6955
  %138 = load i32, i32* %w.addr, align 4, !dbg !6956
  %arraydecay41 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i32 0, i32 0, !dbg !6957
  %139 = load i32, i32* %plane_index.addr, align 4, !dbg !6958
  %140 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !6959
  %avctx42 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %140, i32 0, i32 1, !dbg !6960
  %141 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx42, align 8, !dbg !6960
  %bits_per_raw_sample43 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %141, i32 0, i32 143, !dbg !6961
  %142 = load i32, i32* %bits_per_raw_sample43, align 4, !dbg !6961
  store %struct.FFV1Context* %137, %struct.FFV1Context** %s.addr.i105, align 8, !dbg !6962
  store i32 %138, i32* %w.addr.i106, align 4, !dbg !6962
  store i16** %arraydecay41, i16*** %sample.addr.i107, align 8, !dbg !6962
  store i32 %139, i32* %plane_index.addr.i108, align 4, !dbg !6962
  store i32 %142, i32* %bits.addr.i109, align 4, !dbg !6962
  %143 = load i32, i32* %plane_index.addr.i108, align 4, !dbg !6963
  %idxprom.i122 = sext i32 %143 to i64, !dbg !6964
  %144 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i105, align 8, !dbg !6964
  %plane.i123 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %144, i32 0, i32 25, !dbg !6965
  %arrayidx.i124 = getelementptr inbounds [4 x %struct.PlaneContext], [4 x %struct.PlaneContext]* %plane.i123, i64 0, i64 %idxprom.i122, !dbg !6964
  store %struct.PlaneContext* %arrayidx.i124, %struct.PlaneContext** %p.i110, align 8, !dbg !6547
  %145 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i105, align 8, !dbg !6966
  %c1.i125 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %145, i32 0, i32 2, !dbg !6967
  store %struct.RangeCoder* %c1.i125, %struct.RangeCoder** %c.i111, align 8, !dbg !6549
  store i32 0, i32* %run_count.i113, align 4, !dbg !6553
  store i32 0, i32* %run_mode.i114, align 4, !dbg !6555
  %146 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i105, align 8, !dbg !6968
  %run_index2.i126 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %146, i32 0, i32 31, !dbg !6969
  %147 = load i32, i32* %run_index2.i126, align 8, !dbg !6969
  store i32 %147, i32* %run_index.i115, align 4, !dbg !6557
  %148 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i105, align 8, !dbg !6970
  %call.i127 = call i32 @is_input_end(%struct.FFV1Context* %148) #12, !dbg !6971
  %tobool.i128 = icmp ne i32 %call.i127, 0, !dbg !6971
  br i1 %tobool.i128, label %if.then.i129, label %if.end.i132, !dbg !6972

if.then.i129:                                     ; preds = %if.else
  store i32 -1094995529, i32* %retval.i104, align 4, !dbg !6973
  br label %decode_line.exit271, !dbg !6973

if.end.i132:                                      ; preds = %if.else
  %149 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i105, align 8, !dbg !6974
  %slice_coding_mode.i130 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %149, i32 0, i32 55, !dbg !6975
  %150 = load i32, i32* %slice_coding_mode.i130, align 4, !dbg !6975
  %cmp.i131 = icmp eq i32 %150, 1, !dbg !6976
  br i1 %cmp.i131, label %if.then3.i133, label %if.end16.i151, !dbg !6977

if.then3.i133:                                    ; preds = %if.end.i132
  store i32 0, i32* %x.i112, align 4, !dbg !6978
  br label %for.cond.i135, !dbg !6979

for.cond.i135:                                    ; preds = %for.end.i148, %if.then3.i133
  %151 = load i32, i32* %x.i112, align 4, !dbg !6980
  %152 = load i32, i32* %w.addr.i106, align 4, !dbg !6981
  %cmp4.i134 = icmp slt i32 %151, %152, !dbg !6982
  br i1 %cmp4.i134, label %for.body.i136, label %for.end15.i150, !dbg !6983

for.body.i136:                                    ; preds = %for.cond.i135
  store i32 0, i32* %v.i117, align 4, !dbg !6566
  store i32 0, i32* %i.i116, align 4, !dbg !6984
  br label %for.cond5.i138, !dbg !6985

for.cond5.i138:                                   ; preds = %for.body7.i142, %for.body.i136
  %153 = load i32, i32* %i.i116, align 4, !dbg !6986
  %154 = load i32, i32* %bits.addr.i109, align 4, !dbg !6987
  %cmp6.i137 = icmp slt i32 %153, %154, !dbg !6988
  br i1 %cmp6.i137, label %for.body7.i142, label %for.end.i148, !dbg !6989

for.body7.i142:                                   ; preds = %for.cond5.i138
  store i8 -128, i8* %state.i118, align 1, !dbg !6571
  %155 = load i32, i32* %v.i117, align 4, !dbg !6990
  %156 = load %struct.RangeCoder*, %struct.RangeCoder** %c.i111, align 8, !dbg !6991
  %call8.i139 = call i32 @get_rac(%struct.RangeCoder* %156, i8* %state.i118) #12, !dbg !6992
  %add.i140 = add nsw i32 %155, %call8.i139, !dbg !6993
  %157 = load i32, i32* %v.i117, align 4, !dbg !6994
  %add9.i141 = add nsw i32 %157, %add.i140, !dbg !6994
  store i32 %add9.i141, i32* %v.i117, align 4, !dbg !6994
  %158 = load i32, i32* %i.i116, align 4, !dbg !6995
  %inc.i143 = add nsw i32 %158, 1, !dbg !6995
  store i32 %inc.i143, i32* %i.i116, align 4, !dbg !6995
  br label %for.cond5.i138, !dbg !6996, !llvm.loop !6720

for.end.i148:                                     ; preds = %for.cond5.i138
  %159 = load i32, i32* %v.i117, align 4, !dbg !6997
  %conv.i144 = trunc i32 %159 to i16, !dbg !6997
  %160 = load i32, i32* %x.i112, align 4, !dbg !6998
  %idxprom10.i145 = sext i32 %160 to i64, !dbg !6999
  %161 = load i16**, i16*** %sample.addr.i107, align 8, !dbg !6999
  %arrayidx11.i146 = getelementptr inbounds i16*, i16** %161, i64 1, !dbg !6999
  %162 = load i16*, i16** %arrayidx11.i146, align 8, !dbg !6999
  %arrayidx12.i147 = getelementptr inbounds i16, i16* %162, i64 %idxprom10.i145, !dbg !6999
  store i16 %conv.i144, i16* %arrayidx12.i147, align 2, !dbg !7000
  %163 = load i32, i32* %x.i112, align 4, !dbg !7001
  %inc14.i149 = add nsw i32 %163, 1, !dbg !7001
  store i32 %inc14.i149, i32* %x.i112, align 4, !dbg !7001
  br label %for.cond.i135, !dbg !7002, !llvm.loop !6729

for.end15.i150:                                   ; preds = %for.cond.i135
  store i32 0, i32* %retval.i104, align 4, !dbg !7003
  br label %decode_line.exit271, !dbg !7003

if.end16.i151:                                    ; preds = %if.end.i132
  store i32 0, i32* %x.i112, align 4, !dbg !7004
  br label %for.cond17.i153, !dbg !7005

for.cond17.i153:                                  ; preds = %if.end117.i267, %if.end16.i151
  %164 = load i32, i32* %x.i112, align 4, !dbg !7006
  %165 = load i32, i32* %w.addr.i106, align 4, !dbg !7007
  %cmp18.i152 = icmp slt i32 %164, %165, !dbg !7008
  br i1 %cmp18.i152, label %for.body20.i156, label %for.end133.i270, !dbg !7009

for.body20.i156:                                  ; preds = %for.cond17.i153
  %166 = load i32, i32* %x.i112, align 4, !dbg !7010
  %and.i154 = and i32 %166, 1023, !dbg !7011
  %tobool21.i155 = icmp ne i32 %and.i154, 0, !dbg !7011
  br i1 %tobool21.i155, label %if.end27.i172, label %if.then22.i159, !dbg !7012

if.then22.i159:                                   ; preds = %for.body20.i156
  %167 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i105, align 8, !dbg !7013
  %call23.i157 = call i32 @is_input_end(%struct.FFV1Context* %167) #12, !dbg !7014
  %tobool24.i158 = icmp ne i32 %call23.i157, 0, !dbg !7014
  br i1 %tobool24.i158, label %if.then25.i160, label %if.end26.i161, !dbg !7015

if.then25.i160:                                   ; preds = %if.then22.i159
  store i32 -1094995529, i32* %retval.i104, align 4, !dbg !7016
  br label %decode_line.exit271, !dbg !7016

if.end26.i161:                                    ; preds = %if.then22.i159
  br label %if.end27.i172, !dbg !7017

if.end27.i172:                                    ; preds = %if.end26.i161, %for.body20.i156
  %168 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i110, align 8, !dbg !7018
  %169 = load i16**, i16*** %sample.addr.i107, align 8, !dbg !7019
  %arrayidx28.i162 = getelementptr inbounds i16*, i16** %169, i64 1, !dbg !7019
  %170 = load i16*, i16** %arrayidx28.i162, align 8, !dbg !7019
  %171 = load i32, i32* %x.i112, align 4, !dbg !7020
  %idx.ext.i163 = sext i32 %171 to i64, !dbg !7021
  %add.ptr.i164 = getelementptr inbounds i16, i16* %170, i64 %idx.ext.i163, !dbg !7021
  %172 = load i16**, i16*** %sample.addr.i107, align 8, !dbg !7022
  %173 = load i16*, i16** %172, align 8, !dbg !7022
  %174 = load i32, i32* %x.i112, align 4, !dbg !7023
  %idx.ext30.i165 = sext i32 %174 to i64, !dbg !7024
  %add.ptr31.i166 = getelementptr inbounds i16, i16* %173, i64 %idx.ext30.i165, !dbg !7024
  %175 = load i16**, i16*** %sample.addr.i107, align 8, !dbg !7025
  %arrayidx32.i167 = getelementptr inbounds i16*, i16** %175, i64 1, !dbg !7025
  %176 = load i16*, i16** %arrayidx32.i167, align 8, !dbg !7025
  %177 = load i32, i32* %x.i112, align 4, !dbg !7026
  %idx.ext33.i168 = sext i32 %177 to i64, !dbg !7027
  %add.ptr34.i169 = getelementptr inbounds i16, i16* %176, i64 %idx.ext33.i168, !dbg !7027
  %call35.i170 = call i32 @get_context(%struct.PlaneContext* %168, i16* %add.ptr.i164, i16* %add.ptr31.i166, i16* %add.ptr34.i169) #12, !dbg !7028
  store i32 %call35.i170, i32* %context.i120, align 4, !dbg !7029
  %178 = load i32, i32* %context.i120, align 4, !dbg !7030
  %cmp36.i171 = icmp slt i32 %178, 0, !dbg !7031
  br i1 %cmp36.i171, label %if.then38.i174, label %if.else.i175, !dbg !7032

if.then38.i174:                                   ; preds = %if.end27.i172
  %179 = load i32, i32* %context.i120, align 4, !dbg !7033
  %sub.i173 = sub nsw i32 0, %179, !dbg !7034
  store i32 %sub.i173, i32* %context.i120, align 4, !dbg !7035
  store i32 1, i32* %sign.i121, align 4, !dbg !7036
  br label %if.end39.i178, !dbg !7037

if.else.i175:                                     ; preds = %if.end27.i172
  store i32 0, i32* %sign.i121, align 4, !dbg !7038
  br label %if.end39.i178, !dbg !6962

if.end39.i178:                                    ; preds = %if.else.i175, %if.then38.i174
  %180 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i105, align 8, !dbg !7039
  %ac.i176 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %180, i32 0, i32 23, !dbg !7040
  %181 = load i32, i32* %ac.i176, align 4, !dbg !7040
  %cmp40.i177 = icmp ne i32 %181, 0, !dbg !7041
  br i1 %cmp40.i177, label %if.then42.i184, label %if.else47.i186, !dbg !7042

if.then42.i184:                                   ; preds = %if.end39.i178
  %182 = load %struct.RangeCoder*, %struct.RangeCoder** %c.i111, align 8, !dbg !7043
  %183 = load i32, i32* %context.i120, align 4, !dbg !7044
  %idxprom43.i179 = sext i32 %183 to i64, !dbg !7045
  %184 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i110, align 8, !dbg !7045
  %state44.i180 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %184, i32 0, i32 3, !dbg !7046
  %185 = load [32 x i8]*, [32 x i8]** %state44.i180, align 8, !dbg !7046
  %arrayidx45.i181 = getelementptr inbounds [32 x i8], [32 x i8]* %185, i64 %idxprom43.i179, !dbg !7045
  %arraydecay.i182 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx45.i181, i32 0, i32 0, !dbg !7045
  %call46.i183 = call i32 @get_symbol_inline(%struct.RangeCoder* %182, i8* %arraydecay.i182, i32 1) #12, !dbg !7047
  store i32 %call46.i183, i32* %diff.i119, align 4, !dbg !7048
  br label %if.end113.i250, !dbg !7049

if.else47.i186:                                   ; preds = %if.end39.i178
  %186 = load i32, i32* %context.i120, align 4, !dbg !7050
  %cmp48.i185 = icmp eq i32 %186, 0, !dbg !7051
  br i1 %cmp48.i185, label %land.lhs.true.i188, label %if.end53.i191, !dbg !7052

land.lhs.true.i188:                               ; preds = %if.else47.i186
  %187 = load i32, i32* %run_mode.i114, align 4, !dbg !7053
  %cmp50.i187 = icmp eq i32 %187, 0, !dbg !7054
  br i1 %cmp50.i187, label %if.then52.i189, label %if.end53.i191, !dbg !7055

if.then52.i189:                                   ; preds = %land.lhs.true.i188
  store i32 1, i32* %run_mode.i114, align 4, !dbg !7056
  br label %if.end53.i191, !dbg !7057

if.end53.i191:                                    ; preds = %if.then52.i189, %land.lhs.true.i188, %if.else47.i186
  %188 = load i32, i32* %run_mode.i114, align 4, !dbg !7058
  %tobool54.i190 = icmp ne i32 %188, 0, !dbg !7058
  br i1 %tobool54.i190, label %if.then55.i193, label %if.else106.i247, !dbg !7059

if.then55.i193:                                   ; preds = %if.end53.i191
  %189 = load i32, i32* %run_count.i113, align 4, !dbg !7060
  %cmp56.i192 = icmp eq i32 %189, 0, !dbg !7061
  br i1 %cmp56.i192, label %land.lhs.true58.i195, label %if.end90.i229, !dbg !7062

land.lhs.true58.i195:                             ; preds = %if.then55.i193
  %190 = load i32, i32* %run_mode.i114, align 4, !dbg !7063
  %cmp59.i194 = icmp eq i32 %190, 1, !dbg !7064
  br i1 %cmp59.i194, label %if.then61.i199, label %if.end90.i229, !dbg !7065

if.then61.i199:                                   ; preds = %land.lhs.true58.i195
  %191 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i105, align 8, !dbg !7066
  %gb.i196 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %191, i32 0, i32 3, !dbg !7067
  %call62.i197 = call i32 @get_bits1(%struct.GetBitContext* %gb.i196) #12, !dbg !7068
  %tobool63.i198 = icmp ne i32 %call62.i197, 0, !dbg !7068
  br i1 %tobool63.i198, label %if.then64.i206, label %if.else74.i213, !dbg !7069

if.then64.i206:                                   ; preds = %if.then61.i199
  %192 = load i32, i32* %run_index.i115, align 4, !dbg !7070
  %idxprom65.i200 = sext i32 %192 to i64, !dbg !7071
  %arrayidx66.i201 = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom65.i200, !dbg !7071
  %193 = load i8, i8* %arrayidx66.i201, align 1, !dbg !7071
  %conv67.i202 = zext i8 %193 to i32, !dbg !7071
  %shl.i203 = shl i32 1, %conv67.i202, !dbg !7072
  store i32 %shl.i203, i32* %run_count.i113, align 4, !dbg !7073
  %194 = load i32, i32* %x.i112, align 4, !dbg !7074
  %195 = load i32, i32* %run_count.i113, align 4, !dbg !7075
  %add68.i204 = add nsw i32 %194, %195, !dbg !7076
  %196 = load i32, i32* %w.addr.i106, align 4, !dbg !7077
  %cmp69.i205 = icmp sle i32 %add68.i204, %196, !dbg !7078
  br i1 %cmp69.i205, label %if.then71.i208, label %if.end73.i209, !dbg !7079

if.then71.i208:                                   ; preds = %if.then64.i206
  %197 = load i32, i32* %run_index.i115, align 4, !dbg !7080
  %inc72.i207 = add nsw i32 %197, 1, !dbg !7080
  store i32 %inc72.i207, i32* %run_index.i115, align 4, !dbg !7080
  br label %if.end73.i209, !dbg !7081

if.end73.i209:                                    ; preds = %if.then71.i208, %if.then64.i206
  br label %if.end89.i226, !dbg !7082

if.else74.i213:                                   ; preds = %if.then61.i199
  %198 = load i32, i32* %run_index.i115, align 4, !dbg !7083
  %idxprom75.i210 = sext i32 %198 to i64, !dbg !7084
  %arrayidx76.i211 = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom75.i210, !dbg !7084
  %199 = load i8, i8* %arrayidx76.i211, align 1, !dbg !7084
  %tobool77.i212 = icmp ne i8 %199, 0, !dbg !7084
  br i1 %tobool77.i212, label %if.then78.i219, label %if.else84.i220, !dbg !7085

if.then78.i219:                                   ; preds = %if.else74.i213
  %200 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i105, align 8, !dbg !7086
  %gb79.i214 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %200, i32 0, i32 3, !dbg !7087
  %201 = load i32, i32* %run_index.i115, align 4, !dbg !7088
  %idxprom80.i215 = sext i32 %201 to i64, !dbg !7089
  %arrayidx81.i216 = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom80.i215, !dbg !7089
  %202 = load i8, i8* %arrayidx81.i216, align 1, !dbg !7089
  %conv82.i217 = zext i8 %202 to i32, !dbg !7089
  %call83.i218 = call i32 @get_bits(%struct.GetBitContext* %gb79.i214, i32 %conv82.i217) #12, !dbg !7090
  store i32 %call83.i218, i32* %run_count.i113, align 4, !dbg !7091
  br label %if.end85.i222, !dbg !7092

if.else84.i220:                                   ; preds = %if.else74.i213
  store i32 0, i32* %run_count.i113, align 4, !dbg !7093
  br label %if.end85.i222, !dbg !6962

if.end85.i222:                                    ; preds = %if.else84.i220, %if.then78.i219
  %203 = load i32, i32* %run_index.i115, align 4, !dbg !7094
  %tobool86.i221 = icmp ne i32 %203, 0, !dbg !7094
  br i1 %tobool86.i221, label %if.then87.i224, label %if.end88.i225, !dbg !7095

if.then87.i224:                                   ; preds = %if.end85.i222
  %204 = load i32, i32* %run_index.i115, align 4, !dbg !7096
  %dec.i223 = add nsw i32 %204, -1, !dbg !7096
  store i32 %dec.i223, i32* %run_index.i115, align 4, !dbg !7096
  br label %if.end88.i225, !dbg !7097

if.end88.i225:                                    ; preds = %if.then87.i224, %if.end85.i222
  store i32 2, i32* %run_mode.i114, align 4, !dbg !7098
  br label %if.end89.i226, !dbg !6962

if.end89.i226:                                    ; preds = %if.end88.i225, %if.end73.i209
  br label %if.end90.i229, !dbg !7099

if.end90.i229:                                    ; preds = %if.end89.i226, %land.lhs.true58.i195, %if.then55.i193
  %205 = load i32, i32* %run_count.i113, align 4, !dbg !7100
  %dec91.i227 = add nsw i32 %205, -1, !dbg !7100
  store i32 %dec91.i227, i32* %run_count.i113, align 4, !dbg !7100
  %206 = load i32, i32* %run_count.i113, align 4, !dbg !7101
  %cmp92.i228 = icmp slt i32 %206, 0, !dbg !7102
  br i1 %cmp92.i228, label %if.then94.i236, label %if.else104.i240, !dbg !7103

if.then94.i236:                                   ; preds = %if.end90.i229
  store i32 0, i32* %run_mode.i114, align 4, !dbg !7104
  store i32 0, i32* %run_count.i113, align 4, !dbg !7105
  %207 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i105, align 8, !dbg !7106
  %gb95.i230 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %207, i32 0, i32 3, !dbg !7107
  %208 = load i32, i32* %context.i120, align 4, !dbg !7108
  %idxprom96.i231 = sext i32 %208 to i64, !dbg !7109
  %209 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i110, align 8, !dbg !7109
  %vlc_state.i232 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %209, i32 0, i32 4, !dbg !7110
  %210 = load %struct.VlcState*, %struct.VlcState** %vlc_state.i232, align 8, !dbg !7110
  %arrayidx97.i233 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %210, i64 %idxprom96.i231, !dbg !7109
  %211 = load i32, i32* %bits.addr.i109, align 4, !dbg !7111
  %call98.i234 = call i32 @get_vlc_symbol(%struct.GetBitContext* %gb95.i230, %struct.VlcState* %arrayidx97.i233, i32 %211) #12, !dbg !7112
  store i32 %call98.i234, i32* %diff.i119, align 4, !dbg !7113
  %212 = load i32, i32* %diff.i119, align 4, !dbg !7114
  %cmp99.i235 = icmp sge i32 %212, 0, !dbg !7115
  br i1 %cmp99.i235, label %if.then101.i238, label %if.end103.i239, !dbg !7116

if.then101.i238:                                  ; preds = %if.then94.i236
  %213 = load i32, i32* %diff.i119, align 4, !dbg !7117
  %inc102.i237 = add nsw i32 %213, 1, !dbg !7117
  store i32 %inc102.i237, i32* %diff.i119, align 4, !dbg !7117
  br label %if.end103.i239, !dbg !7118

if.end103.i239:                                   ; preds = %if.then101.i238, %if.then94.i236
  br label %if.end105.i241, !dbg !7119

if.else104.i240:                                  ; preds = %if.end90.i229
  store i32 0, i32* %diff.i119, align 4, !dbg !7120
  br label %if.end105.i241, !dbg !6962

if.end105.i241:                                   ; preds = %if.else104.i240, %if.end103.i239
  br label %if.end112.i248, !dbg !7121

if.else106.i247:                                  ; preds = %if.end53.i191
  %214 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i105, align 8, !dbg !7122
  %gb107.i242 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %214, i32 0, i32 3, !dbg !7123
  %215 = load i32, i32* %context.i120, align 4, !dbg !7124
  %idxprom108.i243 = sext i32 %215 to i64, !dbg !7125
  %216 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i110, align 8, !dbg !7125
  %vlc_state109.i244 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %216, i32 0, i32 4, !dbg !7126
  %217 = load %struct.VlcState*, %struct.VlcState** %vlc_state109.i244, align 8, !dbg !7126
  %arrayidx110.i245 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %217, i64 %idxprom108.i243, !dbg !7125
  %218 = load i32, i32* %bits.addr.i109, align 4, !dbg !7127
  %call111.i246 = call i32 @get_vlc_symbol(%struct.GetBitContext* %gb107.i242, %struct.VlcState* %arrayidx110.i245, i32 %218) #12, !dbg !7128
  store i32 %call111.i246, i32* %diff.i119, align 4, !dbg !7129
  br label %if.end112.i248, !dbg !6962

if.end112.i248:                                   ; preds = %if.else106.i247, %if.end105.i241
  br label %if.end113.i250, !dbg !6962

if.end113.i250:                                   ; preds = %if.end112.i248, %if.then42.i184
  %219 = load i32, i32* %sign.i121, align 4, !dbg !7130
  %tobool114.i249 = icmp ne i32 %219, 0, !dbg !7130
  br i1 %tobool114.i249, label %if.then115.i252, label %if.end117.i267, !dbg !7131

if.then115.i252:                                  ; preds = %if.end113.i250
  %220 = load i32, i32* %diff.i119, align 4, !dbg !7132
  %sub116.i251 = sub i32 0, %220, !dbg !7133
  store i32 %sub116.i251, i32* %diff.i119, align 4, !dbg !7134
  br label %if.end117.i267, !dbg !7135

if.end117.i267:                                   ; preds = %if.then115.i252, %if.end113.i250
  %221 = load i16**, i16*** %sample.addr.i107, align 8, !dbg !7136
  %arrayidx118.i253 = getelementptr inbounds i16*, i16** %221, i64 1, !dbg !7136
  %222 = load i16*, i16** %arrayidx118.i253, align 8, !dbg !7136
  %223 = load i32, i32* %x.i112, align 4, !dbg !7137
  %idx.ext119.i254 = sext i32 %223 to i64, !dbg !7138
  %add.ptr120.i255 = getelementptr inbounds i16, i16* %222, i64 %idx.ext119.i254, !dbg !7138
  %224 = load i16**, i16*** %sample.addr.i107, align 8, !dbg !7139
  %225 = load i16*, i16** %224, align 8, !dbg !7139
  %226 = load i32, i32* %x.i112, align 4, !dbg !7140
  %idx.ext122.i256 = sext i32 %226 to i64, !dbg !7141
  %add.ptr123.i257 = getelementptr inbounds i16, i16* %225, i64 %idx.ext122.i256, !dbg !7141
  %call124.i258 = call i32 @predict(i16* %add.ptr120.i255, i16* %add.ptr123.i257) #12, !dbg !7142
  %227 = load i32, i32* %diff.i119, align 4, !dbg !7143
  %add125.i259 = add i32 %call124.i258, %227, !dbg !7144
  %228 = load i32, i32* %bits.addr.i109, align 4, !dbg !7145
  store i32 %add125.i259, i32* %a.addr.i.i102, align 4, !dbg !7146
  store i32 %228, i32* %p.addr.i.i103, align 4, !dbg !7146
  %229 = load i32, i32* %a.addr.i.i102, align 4, !dbg !7147
  %230 = load i32, i32* %p.addr.i.i103, align 4, !dbg !7148
  %shl.i.i260 = shl i32 1, %230, !dbg !7149
  %sub.i.i261 = sub nsw i32 %shl.i.i260, 1, !dbg !7150
  %and.i.i262 = and i32 %229, %sub.i.i261, !dbg !7151
  %conv127.i263 = trunc i32 %and.i.i262 to i16, !dbg !7152
  %231 = load i32, i32* %x.i112, align 4, !dbg !7153
  %idxprom128.i264 = sext i32 %231 to i64, !dbg !7154
  %232 = load i16**, i16*** %sample.addr.i107, align 8, !dbg !7154
  %arrayidx129.i265 = getelementptr inbounds i16*, i16** %232, i64 1, !dbg !7154
  %233 = load i16*, i16** %arrayidx129.i265, align 8, !dbg !7154
  %arrayidx130.i266 = getelementptr inbounds i16, i16* %233, i64 %idxprom128.i264, !dbg !7154
  store i16 %conv127.i263, i16* %arrayidx130.i266, align 2, !dbg !7155
  %234 = load i32, i32* %x.i112, align 4, !dbg !7156
  %inc132.i268 = add nsw i32 %234, 1, !dbg !7156
  store i32 %inc132.i268, i32* %x.i112, align 4, !dbg !7156
  br label %for.cond17.i153, !dbg !7157, !llvm.loop !6913

for.end133.i270:                                  ; preds = %for.cond17.i153
  %235 = load i32, i32* %run_index.i115, align 4, !dbg !7158
  %236 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i105, align 8, !dbg !7159
  %run_index134.i269 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %236, i32 0, i32 31, !dbg !7160
  store i32 %235, i32* %run_index134.i269, align 8, !dbg !7161
  store i32 0, i32* %retval.i104, align 4, !dbg !7162
  br label %decode_line.exit271, !dbg !7162

decode_line.exit271:                              ; preds = %if.then.i129, %for.end15.i150, %if.then25.i160, %for.end133.i270
  %237 = load i32, i32* %retval.i104, align 4, !dbg !7163
  store i32 %237, i32* %ret40, align 4, !dbg !6954
  %238 = load i32, i32* %ret40, align 4, !dbg !7164
  %cmp45 = icmp slt i32 %238, 0, !dbg !7166
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !7167

if.then47:                                        ; preds = %decode_line.exit271
  %239 = load i32, i32* %ret40, align 4, !dbg !7168
  store i32 %239, i32* %retval, align 4, !dbg !7169
  br label %return, !dbg !7169

if.end48:                                         ; preds = %decode_line.exit271
  %240 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7170
  %packed_at_lsb = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %240, i32 0, i32 42, !dbg !7172
  %241 = load i32, i32* %packed_at_lsb, align 4, !dbg !7172
  %tobool = icmp ne i32 %241, 0, !dbg !7170
  br i1 %tobool, label %if.then49, label %if.else66, !dbg !7173

if.then49:                                        ; preds = %if.end48
  store i32 0, i32* %x, align 4, !dbg !7174
  br label %for.cond50, !dbg !7177

for.cond50:                                       ; preds = %for.inc63, %if.then49
  %242 = load i32, i32* %x, align 4, !dbg !7178
  %243 = load i32, i32* %w.addr, align 4, !dbg !7181
  %cmp51 = icmp slt i32 %242, %243, !dbg !7182
  br i1 %cmp51, label %for.body53, label %for.end65, !dbg !7183

for.body53:                                       ; preds = %for.cond50
  %244 = load i32, i32* %x, align 4, !dbg !7184
  %idxprom54 = sext i32 %244 to i64, !dbg !7186
  %arrayidx55 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i64 0, i64 1, !dbg !7186
  %245 = load i16*, i16** %arrayidx55, align 8, !dbg !7186
  %arrayidx56 = getelementptr inbounds i16, i16* %245, i64 %idxprom54, !dbg !7186
  %246 = load i16, i16* %arrayidx56, align 2, !dbg !7186
  %247 = load i32, i32* %x, align 4, !dbg !7187
  %248 = load i32, i32* %pixel_stride.addr, align 4, !dbg !7188
  %mul57 = mul nsw i32 %247, %248, !dbg !7189
  %idxprom58 = sext i32 %mul57 to i64, !dbg !7190
  %249 = load i8*, i8** %src.addr, align 8, !dbg !7191
  %250 = load i32, i32* %stride.addr, align 4, !dbg !7192
  %251 = load i32, i32* %y, align 4, !dbg !7193
  %mul59 = mul nsw i32 %250, %251, !dbg !7194
  %idx.ext60 = sext i32 %mul59 to i64, !dbg !7195
  %add.ptr61 = getelementptr inbounds i8, i8* %249, i64 %idx.ext60, !dbg !7195
  %252 = bitcast i8* %add.ptr61 to i16*, !dbg !7190
  %arrayidx62 = getelementptr inbounds i16, i16* %252, i64 %idxprom58, !dbg !7190
  store i16 %246, i16* %arrayidx62, align 2, !dbg !7196
  br label %for.inc63, !dbg !7197

for.inc63:                                        ; preds = %for.body53
  %253 = load i32, i32* %x, align 4, !dbg !7198
  %inc64 = add nsw i32 %253, 1, !dbg !7198
  store i32 %inc64, i32* %x, align 4, !dbg !7198
  br label %for.cond50, !dbg !7200, !llvm.loop !7201

for.end65:                                        ; preds = %for.cond50
  br label %if.end97, !dbg !7203

if.else66:                                        ; preds = %if.end48
  store i32 0, i32* %x, align 4, !dbg !7204
  br label %for.cond67, !dbg !7207

for.cond67:                                       ; preds = %for.inc94, %if.else66
  %254 = load i32, i32* %x, align 4, !dbg !7208
  %255 = load i32, i32* %w.addr, align 4, !dbg !7211
  %cmp68 = icmp slt i32 %254, %255, !dbg !7212
  br i1 %cmp68, label %for.body70, label %for.end96, !dbg !7213

for.body70:                                       ; preds = %for.cond67
  %256 = load i32, i32* %x, align 4, !dbg !7214
  %idxprom71 = sext i32 %256 to i64, !dbg !7216
  %arrayidx72 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i64 0, i64 1, !dbg !7216
  %257 = load i16*, i16** %arrayidx72, align 8, !dbg !7216
  %arrayidx73 = getelementptr inbounds i16, i16* %257, i64 %idxprom71, !dbg !7216
  %258 = load i16, i16* %arrayidx73, align 2, !dbg !7216
  %conv74 = sext i16 %258 to i32, !dbg !7216
  %259 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7217
  %avctx75 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %259, i32 0, i32 1, !dbg !7218
  %260 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx75, align 8, !dbg !7218
  %bits_per_raw_sample76 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %260, i32 0, i32 143, !dbg !7219
  %261 = load i32, i32* %bits_per_raw_sample76, align 4, !dbg !7219
  %sub77 = sub nsw i32 16, %261, !dbg !7220
  %shl = shl i32 %conv74, %sub77, !dbg !7221
  %262 = load i32, i32* %x, align 4, !dbg !7222
  %idxprom78 = sext i32 %262 to i64, !dbg !7223
  %arraydecay79 = getelementptr inbounds [2 x i16*], [2 x i16*]* %sample, i32 0, i32 0, !dbg !7223
  %arrayidx80 = getelementptr inbounds i16*, i16** %arraydecay79, i64 1, !dbg !7223
  %263 = load i16*, i16** %arrayidx80, align 8, !dbg !7223
  %arrayidx81 = getelementptr inbounds i16, i16* %263, i64 %idxprom78, !dbg !7223
  %264 = load i16, i16* %arrayidx81, align 2, !dbg !7223
  %conv82 = zext i16 %264 to i32, !dbg !7223
  %265 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7224
  %avctx83 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %265, i32 0, i32 1, !dbg !7225
  %266 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx83, align 8, !dbg !7225
  %bits_per_raw_sample84 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %266, i32 0, i32 143, !dbg !7226
  %267 = load i32, i32* %bits_per_raw_sample84, align 4, !dbg !7226
  %mul85 = mul nsw i32 2, %267, !dbg !7227
  %sub86 = sub nsw i32 %mul85, 16, !dbg !7228
  %shr = ashr i32 %conv82, %sub86, !dbg !7229
  %or = or i32 %shl, %shr, !dbg !7230
  %conv87 = trunc i32 %or to i16, !dbg !7216
  %268 = load i32, i32* %x, align 4, !dbg !7231
  %269 = load i32, i32* %pixel_stride.addr, align 4, !dbg !7232
  %mul88 = mul nsw i32 %268, %269, !dbg !7233
  %idxprom89 = sext i32 %mul88 to i64, !dbg !7234
  %270 = load i8*, i8** %src.addr, align 8, !dbg !7235
  %271 = load i32, i32* %stride.addr, align 4, !dbg !7236
  %272 = load i32, i32* %y, align 4, !dbg !7237
  %mul90 = mul nsw i32 %271, %272, !dbg !7238
  %idx.ext91 = sext i32 %mul90 to i64, !dbg !7239
  %add.ptr92 = getelementptr inbounds i8, i8* %270, i64 %idx.ext91, !dbg !7239
  %273 = bitcast i8* %add.ptr92 to i16*, !dbg !7234
  %arrayidx93 = getelementptr inbounds i16, i16* %273, i64 %idxprom89, !dbg !7234
  store i16 %conv87, i16* %arrayidx93, align 2, !dbg !7240
  br label %for.inc94, !dbg !7241

for.inc94:                                        ; preds = %for.body70
  %274 = load i32, i32* %x, align 4, !dbg !7242
  %inc95 = add nsw i32 %274, 1, !dbg !7242
  store i32 %inc95, i32* %x, align 4, !dbg !7242
  br label %for.cond67, !dbg !7244, !llvm.loop !7245

for.end96:                                        ; preds = %for.cond67
  br label %if.end97

if.end97:                                         ; preds = %for.end96, %for.end65
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %for.end
  br label %for.inc99, !dbg !7247

for.inc99:                                        ; preds = %if.end98
  %275 = load i32, i32* %y, align 4, !dbg !7248
  %inc100 = add nsw i32 %275, 1, !dbg !7248
  store i32 %inc100, i32* %y, align 4, !dbg !7248
  br label %for.cond, !dbg !7250, !llvm.loop !7251

for.end101:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7253
  br label %return, !dbg !7253

return:                                           ; preds = %for.end101, %if.then47, %if.then26
  %276 = load i32, i32* %retval, align 4, !dbg !7254
  ret i32 %276, !dbg !7254
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_rgb_frame32(%struct.FFV1Context* %s, i8** %src, i32 %w, i32 %h, i32* %stride) #0 !dbg !7255 {
entry:
  %a.addr.i.i186 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i186, metadata !6512, metadata !1706), !dbg !7258
  %p.addr.i.i187 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i187, metadata !6534, metadata !1706), !dbg !7276
  %retval.i188 = alloca i32, align 4
  %s.addr.i189 = alloca %struct.FFV1Context*, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %s.addr.i189, metadata !7277, metadata !1706), !dbg !7278
  %w.addr.i190 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i190, metadata !7279, metadata !1706), !dbg !7280
  %sample.addr.i191 = alloca i32**, align 8
  call void @llvm.dbg.declare(metadata i32*** %sample.addr.i191, metadata !7281, metadata !1706), !dbg !7282
  %plane_index.addr.i192 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_index.addr.i192, metadata !7283, metadata !1706), !dbg !7284
  %bits.addr.i193 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i193, metadata !7285, metadata !1706), !dbg !7286
  %p.i194 = alloca %struct.PlaneContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PlaneContext** %p.i194, metadata !7287, metadata !1706), !dbg !7288
  %c.i195 = alloca %struct.RangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.i195, metadata !7289, metadata !1706), !dbg !7290
  %x.i196 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.i196, metadata !7291, metadata !1706), !dbg !7292
  %run_count.i197 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_count.i197, metadata !7293, metadata !1706), !dbg !7294
  %run_mode.i198 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_mode.i198, metadata !7295, metadata !1706), !dbg !7296
  %run_index.i199 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_index.i199, metadata !7297, metadata !1706), !dbg !7298
  %i.i200 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i200, metadata !7299, metadata !1706), !dbg !7302
  %v.i201 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %v.i201, metadata !7303, metadata !1706), !dbg !7307
  %state.i202 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %state.i202, metadata !7308, metadata !1706), !dbg !7312
  %diff.i203 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff.i203, metadata !7313, metadata !1706), !dbg !7314
  %context.i204 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %context.i204, metadata !7315, metadata !1706), !dbg !7316
  %sign.i205 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i205, metadata !7317, metadata !1706), !dbg !7318
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !6512, metadata !1706), !dbg !7319
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !6534, metadata !1706), !dbg !7322
  %retval.i = alloca i32, align 4
  %s.addr.i = alloca %struct.FFV1Context*, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %s.addr.i, metadata !7277, metadata !1706), !dbg !7323
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !7279, metadata !1706), !dbg !7324
  %sample.addr.i = alloca i32**, align 8
  call void @llvm.dbg.declare(metadata i32*** %sample.addr.i, metadata !7281, metadata !1706), !dbg !7325
  %plane_index.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_index.addr.i, metadata !7283, metadata !1706), !dbg !7326
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !7285, metadata !1706), !dbg !7327
  %p.i = alloca %struct.PlaneContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PlaneContext** %p.i, metadata !7287, metadata !1706), !dbg !7328
  %c.i = alloca %struct.RangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.i, metadata !7289, metadata !1706), !dbg !7329
  %x.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.i, metadata !7291, metadata !1706), !dbg !7330
  %run_count.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_count.i, metadata !7293, metadata !1706), !dbg !7331
  %run_mode.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_mode.i, metadata !7295, metadata !1706), !dbg !7332
  %run_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_index.i, metadata !7297, metadata !1706), !dbg !7333
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !7299, metadata !1706), !dbg !7334
  %v.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %v.i, metadata !7303, metadata !1706), !dbg !7335
  %state.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %state.i, metadata !7308, metadata !1706), !dbg !7336
  %diff.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff.i, metadata !7313, metadata !1706), !dbg !7337
  %context.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %context.i, metadata !7315, metadata !1706), !dbg !7338
  %sign.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i, metadata !7317, metadata !1706), !dbg !7339
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.FFV1Context*, align 8
  %src.addr = alloca i8**, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %stride.addr = alloca i32*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %p = alloca i32, align 4
  %sample = alloca [4 x [2 x i32*]], align 16
  %lbd = alloca i32, align 4
  %bits = alloca i32, align 4
  %offset = alloca i32, align 4
  %transparency = alloca i32, align 4
  %ret = alloca i32, align 4
  %temp = alloca i32*, align 8
  %g = alloca i32, align 4
  %b = alloca i32, align 4
  %r = alloca i32, align 4
  %a = alloca i32, align 4
  store %struct.FFV1Context* %s, %struct.FFV1Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %s.addr, metadata !7340, metadata !1706), !dbg !7341
  store i8** %src, i8*** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %src.addr, metadata !7342, metadata !1706), !dbg !7343
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !7344, metadata !1706), !dbg !7345
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !7346, metadata !1706), !dbg !7347
  store i32* %stride, i32** %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %stride.addr, metadata !7348, metadata !1706), !dbg !7349
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7350, metadata !1706), !dbg !7351
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7352, metadata !1706), !dbg !7353
  call void @llvm.dbg.declare(metadata i32* %p, metadata !7354, metadata !1706), !dbg !7355
  call void @llvm.dbg.declare(metadata [4 x [2 x i32*]]* %sample, metadata !7356, metadata !1706), !dbg !7359
  call void @llvm.dbg.declare(metadata i32* %lbd, metadata !7360, metadata !1706), !dbg !7361
  %0 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7362
  %avctx = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %0, i32 0, i32 1, !dbg !7363
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7363
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 143, !dbg !7364
  %2 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !7364
  %cmp = icmp sle i32 %2, 8, !dbg !7365
  %conv = zext i1 %cmp to i32, !dbg !7365
  store i32 %conv, i32* %lbd, align 4, !dbg !7361
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !7366, metadata !1706), !dbg !7367
  %3 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7368
  %avctx1 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %3, i32 0, i32 1, !dbg !7369
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !7369
  %bits_per_raw_sample2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 143, !dbg !7370
  %5 = load i32, i32* %bits_per_raw_sample2, align 4, !dbg !7370
  %cmp3 = icmp sgt i32 %5, 0, !dbg !7371
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !7368

cond.true:                                        ; preds = %entry
  %6 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7372
  %avctx5 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %6, i32 0, i32 1, !dbg !7374
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx5, align 8, !dbg !7374
  %bits_per_raw_sample6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 143, !dbg !7375
  %8 = load i32, i32* %bits_per_raw_sample6, align 4, !dbg !7375
  br label %cond.end, !dbg !7376

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7377

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 8, %cond.false ], !dbg !7379
  store i32 %cond, i32* %bits, align 4, !dbg !7381
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !7382, metadata !1706), !dbg !7383
  %9 = load i32, i32* %bits, align 4, !dbg !7384
  %shl = shl i32 1, %9, !dbg !7385
  store i32 %shl, i32* %offset, align 4, !dbg !7383
  call void @llvm.dbg.declare(metadata i32* %transparency, metadata !7386, metadata !1706), !dbg !7387
  %10 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7388
  %transparency7 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %10, i32 0, i32 14, !dbg !7389
  %11 = load i32, i32* %transparency7, align 4, !dbg !7389
  store i32 %11, i32* %transparency, align 4, !dbg !7387
  store i32 0, i32* %x, align 4, !dbg !7390
  br label %for.cond, !dbg !7392

for.cond:                                         ; preds = %for.inc, %cond.end
  %12 = load i32, i32* %x, align 4, !dbg !7393
  %cmp8 = icmp slt i32 %12, 4, !dbg !7396
  br i1 %cmp8, label %for.body, label %for.end, !dbg !7397

for.body:                                         ; preds = %for.cond
  %13 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7398
  %sample_buffer32 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %13, i32 0, i32 34, !dbg !7400
  %14 = load i32*, i32** %sample_buffer32, align 8, !dbg !7400
  %15 = load i32, i32* %x, align 4, !dbg !7401
  %mul = mul nsw i32 %15, 2, !dbg !7402
  %16 = load i32, i32* %w.addr, align 4, !dbg !7403
  %add = add nsw i32 %16, 6, !dbg !7404
  %mul10 = mul nsw i32 %mul, %add, !dbg !7405
  %idx.ext = sext i32 %mul10 to i64, !dbg !7406
  %add.ptr = getelementptr inbounds i32, i32* %14, i64 %idx.ext, !dbg !7406
  %add.ptr11 = getelementptr inbounds i32, i32* %add.ptr, i64 3, !dbg !7407
  %17 = load i32, i32* %x, align 4, !dbg !7408
  %idxprom = sext i32 %17 to i64, !dbg !7409
  %arrayidx = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 %idxprom, !dbg !7409
  %arrayidx12 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx, i64 0, i64 0, !dbg !7409
  store i32* %add.ptr11, i32** %arrayidx12, align 16, !dbg !7410
  %18 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7411
  %sample_buffer3213 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %18, i32 0, i32 34, !dbg !7412
  %19 = load i32*, i32** %sample_buffer3213, align 8, !dbg !7412
  %20 = load i32, i32* %x, align 4, !dbg !7413
  %mul14 = mul nsw i32 %20, 2, !dbg !7414
  %add15 = add nsw i32 %mul14, 1, !dbg !7415
  %21 = load i32, i32* %w.addr, align 4, !dbg !7416
  %add16 = add nsw i32 %21, 6, !dbg !7417
  %mul17 = mul nsw i32 %add15, %add16, !dbg !7418
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !7419
  %add.ptr19 = getelementptr inbounds i32, i32* %19, i64 %idx.ext18, !dbg !7419
  %add.ptr20 = getelementptr inbounds i32, i32* %add.ptr19, i64 3, !dbg !7420
  %22 = load i32, i32* %x, align 4, !dbg !7421
  %idxprom21 = sext i32 %22 to i64, !dbg !7422
  %arrayidx22 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 %idxprom21, !dbg !7422
  %arrayidx23 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx22, i64 0, i64 1, !dbg !7422
  store i32* %add.ptr20, i32** %arrayidx23, align 8, !dbg !7423
  br label %for.inc, !dbg !7424

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %x, align 4, !dbg !7425
  %inc = add nsw i32 %23, 1, !dbg !7425
  store i32 %inc, i32* %x, align 4, !dbg !7425
  br label %for.cond, !dbg !7427, !llvm.loop !7428

for.end:                                          ; preds = %for.cond
  %24 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7430
  %run_index = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %24, i32 0, i32 31, !dbg !7431
  store i32 0, i32* %run_index, align 8, !dbg !7432
  %25 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7433
  %sample_buffer3224 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %25, i32 0, i32 34, !dbg !7434
  %26 = load i32*, i32** %sample_buffer3224, align 8, !dbg !7434
  %27 = bitcast i32* %26 to i8*, !dbg !7435
  %28 = load i32, i32* %w.addr, align 4, !dbg !7436
  %add25 = add nsw i32 %28, 6, !dbg !7437
  %mul26 = mul nsw i32 8, %add25, !dbg !7438
  %conv27 = sext i32 %mul26 to i64, !dbg !7439
  %mul28 = mul i64 %conv27, 4, !dbg !7440
  call void @llvm.memset.p0i8.i64(i8* %27, i8 0, i64 %mul28, i32 4, i1 false), !dbg !7435
  store i32 0, i32* %y, align 4, !dbg !7441
  br label %for.cond29, !dbg !7442

for.cond29:                                       ; preds = %for.inc183, %for.end
  %29 = load i32, i32* %y, align 4, !dbg !7443
  %30 = load i32, i32* %h.addr, align 4, !dbg !7445
  %cmp30 = icmp slt i32 %29, %30, !dbg !7446
  br i1 %cmp30, label %for.body32, label %for.end185, !dbg !7447

for.body32:                                       ; preds = %for.cond29
  store i32 0, i32* %p, align 4, !dbg !7448
  br label %for.cond33, !dbg !7449

for.cond33:                                       ; preds = %for.inc87, %for.body32
  %31 = load i32, i32* %p, align 4, !dbg !7450
  %32 = load i32, i32* %transparency, align 4, !dbg !7452
  %add34 = add nsw i32 3, %32, !dbg !7453
  %cmp35 = icmp slt i32 %31, %add34, !dbg !7454
  br i1 %cmp35, label %for.body37, label %for.end89, !dbg !7455

for.body37:                                       ; preds = %for.cond33
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7456, metadata !1706), !dbg !7457
  call void @llvm.dbg.declare(metadata i32** %temp, metadata !7458, metadata !1706), !dbg !7459
  %33 = load i32, i32* %p, align 4, !dbg !7460
  %idxprom38 = sext i32 %33 to i64, !dbg !7461
  %arrayidx39 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 %idxprom38, !dbg !7461
  %arrayidx40 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx39, i64 0, i64 0, !dbg !7461
  %34 = load i32*, i32** %arrayidx40, align 16, !dbg !7461
  store i32* %34, i32** %temp, align 8, !dbg !7459
  %35 = load i32, i32* %p, align 4, !dbg !7462
  %idxprom41 = sext i32 %35 to i64, !dbg !7463
  %arrayidx42 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 %idxprom41, !dbg !7463
  %arrayidx43 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx42, i64 0, i64 1, !dbg !7463
  %36 = load i32*, i32** %arrayidx43, align 8, !dbg !7463
  %37 = load i32, i32* %p, align 4, !dbg !7464
  %idxprom44 = sext i32 %37 to i64, !dbg !7465
  %arrayidx45 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 %idxprom44, !dbg !7465
  %arrayidx46 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx45, i64 0, i64 0, !dbg !7465
  store i32* %36, i32** %arrayidx46, align 16, !dbg !7466
  %38 = load i32*, i32** %temp, align 8, !dbg !7467
  %39 = load i32, i32* %p, align 4, !dbg !7468
  %idxprom47 = sext i32 %39 to i64, !dbg !7469
  %arrayidx48 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 %idxprom47, !dbg !7469
  %arrayidx49 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx48, i64 0, i64 1, !dbg !7469
  store i32* %38, i32** %arrayidx49, align 8, !dbg !7470
  %40 = load i32, i32* %p, align 4, !dbg !7471
  %idxprom50 = sext i32 %40 to i64, !dbg !7472
  %arrayidx51 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 %idxprom50, !dbg !7472
  %arrayidx52 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx51, i64 0, i64 0, !dbg !7472
  %41 = load i32*, i32** %arrayidx52, align 16, !dbg !7472
  %arrayidx53 = getelementptr inbounds i32, i32* %41, i64 0, !dbg !7472
  %42 = load i32, i32* %arrayidx53, align 4, !dbg !7472
  %43 = load i32, i32* %p, align 4, !dbg !7473
  %idxprom54 = sext i32 %43 to i64, !dbg !7474
  %arrayidx55 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 %idxprom54, !dbg !7474
  %arrayidx56 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx55, i64 0, i64 1, !dbg !7474
  %44 = load i32*, i32** %arrayidx56, align 8, !dbg !7474
  %arrayidx57 = getelementptr inbounds i32, i32* %44, i64 -1, !dbg !7474
  store i32 %42, i32* %arrayidx57, align 4, !dbg !7475
  %45 = load i32, i32* %w.addr, align 4, !dbg !7476
  %sub = sub nsw i32 %45, 1, !dbg !7477
  %idxprom58 = sext i32 %sub to i64, !dbg !7478
  %46 = load i32, i32* %p, align 4, !dbg !7479
  %idxprom59 = sext i32 %46 to i64, !dbg !7478
  %arrayidx60 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 %idxprom59, !dbg !7478
  %arrayidx61 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx60, i64 0, i64 0, !dbg !7478
  %47 = load i32*, i32** %arrayidx61, align 16, !dbg !7478
  %arrayidx62 = getelementptr inbounds i32, i32* %47, i64 %idxprom58, !dbg !7478
  %48 = load i32, i32* %arrayidx62, align 4, !dbg !7478
  %49 = load i32, i32* %w.addr, align 4, !dbg !7480
  %idxprom63 = sext i32 %49 to i64, !dbg !7481
  %50 = load i32, i32* %p, align 4, !dbg !7482
  %idxprom64 = sext i32 %50 to i64, !dbg !7481
  %arrayidx65 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 %idxprom64, !dbg !7481
  %arrayidx66 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx65, i64 0, i64 0, !dbg !7481
  %51 = load i32*, i32** %arrayidx66, align 16, !dbg !7481
  %arrayidx67 = getelementptr inbounds i32, i32* %51, i64 %idxprom63, !dbg !7481
  store i32 %48, i32* %arrayidx67, align 4, !dbg !7483
  %52 = load i32, i32* %lbd, align 4, !dbg !7484
  %tobool = icmp ne i32 %52, 0, !dbg !7484
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !7485

land.lhs.true:                                    ; preds = %for.body37
  %53 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7486
  %slice_coding_mode = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %53, i32 0, i32 55, !dbg !7488
  %54 = load i32, i32* %slice_coding_mode, align 4, !dbg !7488
  %cmp68 = icmp eq i32 %54, 0, !dbg !7489
  br i1 %cmp68, label %if.then, label %if.else, !dbg !7490

if.then:                                          ; preds = %land.lhs.true
  %55 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7491
  %56 = load i32, i32* %w.addr, align 4, !dbg !7492
  %57 = load i32, i32* %p, align 4, !dbg !7493
  %idxprom70 = sext i32 %57 to i64, !dbg !7494
  %arrayidx71 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 %idxprom70, !dbg !7494
  %arraydecay = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx71, i32 0, i32 0, !dbg !7494
  %58 = load i32, i32* %p, align 4, !dbg !7495
  %add72 = add nsw i32 %58, 1, !dbg !7496
  %div = sdiv i32 %add72, 2, !dbg !7497
  store %struct.FFV1Context* %55, %struct.FFV1Context** %s.addr.i, align 8, !dbg !7498
  store i32 %56, i32* %w.addr.i, align 4, !dbg !7498
  store i32** %arraydecay, i32*** %sample.addr.i, align 8, !dbg !7498
  store i32 %div, i32* %plane_index.addr.i, align 4, !dbg !7498
  store i32 9, i32* %bits.addr.i, align 4, !dbg !7498
  %59 = load i32, i32* %plane_index.addr.i, align 4, !dbg !7499
  %idxprom.i = sext i32 %59 to i64, !dbg !7500
  %60 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !7500
  %plane.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %60, i32 0, i32 25, !dbg !7501
  %arrayidx.i = getelementptr inbounds [4 x %struct.PlaneContext], [4 x %struct.PlaneContext]* %plane.i, i64 0, i64 %idxprom.i, !dbg !7500
  store %struct.PlaneContext* %arrayidx.i, %struct.PlaneContext** %p.i, align 8, !dbg !7328
  %61 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !7502
  %c1.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %61, i32 0, i32 2, !dbg !7503
  store %struct.RangeCoder* %c1.i, %struct.RangeCoder** %c.i, align 8, !dbg !7329
  store i32 0, i32* %run_count.i, align 4, !dbg !7331
  store i32 0, i32* %run_mode.i, align 4, !dbg !7332
  %62 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !7504
  %run_index2.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %62, i32 0, i32 31, !dbg !7505
  %63 = load i32, i32* %run_index2.i, align 8, !dbg !7505
  store i32 %63, i32* %run_index.i, align 4, !dbg !7333
  %64 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !7506
  %call.i = call i32 @is_input_end(%struct.FFV1Context* %64) #12, !dbg !7508
  %tobool.i = icmp ne i32 %call.i, 0, !dbg !7508
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !7509

if.then.i:                                        ; preds = %if.then
  store i32 -1094995529, i32* %retval.i, align 4, !dbg !7510
  br label %decode_line32.exit, !dbg !7510

if.end.i:                                         ; preds = %if.then
  %65 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !7511
  %slice_coding_mode.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %65, i32 0, i32 55, !dbg !7512
  %66 = load i32, i32* %slice_coding_mode.i, align 4, !dbg !7512
  %cmp.i = icmp eq i32 %66, 1, !dbg !7513
  br i1 %cmp.i, label %if.then3.i, label %if.end16.i, !dbg !7514

if.then3.i:                                       ; preds = %if.end.i
  store i32 0, i32* %x.i, align 4, !dbg !7515
  br label %for.cond.i, !dbg !7516

for.cond.i:                                       ; preds = %for.end.i, %if.then3.i
  %67 = load i32, i32* %x.i, align 4, !dbg !7517
  %68 = load i32, i32* %w.addr.i, align 4, !dbg !7519
  %cmp4.i = icmp slt i32 %67, %68, !dbg !7520
  br i1 %cmp4.i, label %for.body.i, label %for.end15.i, !dbg !7521

for.body.i:                                       ; preds = %for.cond.i
  store i32 0, i32* %v.i, align 4, !dbg !7335
  store i32 0, i32* %i.i, align 4, !dbg !7522
  br label %for.cond5.i, !dbg !7523

for.cond5.i:                                      ; preds = %for.body7.i, %for.body.i
  %69 = load i32, i32* %i.i, align 4, !dbg !7524
  %70 = load i32, i32* %bits.addr.i, align 4, !dbg !7526
  %cmp6.i = icmp slt i32 %69, %70, !dbg !7527
  br i1 %cmp6.i, label %for.body7.i, label %for.end.i, !dbg !7528

for.body7.i:                                      ; preds = %for.cond5.i
  store i8 -128, i8* %state.i, align 1, !dbg !7336
  %71 = load i32, i32* %v.i, align 4, !dbg !7529
  %72 = load %struct.RangeCoder*, %struct.RangeCoder** %c.i, align 8, !dbg !7530
  %call8.i = call i32 @get_rac(%struct.RangeCoder* %72, i8* %state.i) #12, !dbg !7531
  %add.i = add nsw i32 %71, %call8.i, !dbg !7532
  %73 = load i32, i32* %v.i, align 4, !dbg !7533
  %add9.i = add nsw i32 %73, %add.i, !dbg !7533
  store i32 %add9.i, i32* %v.i, align 4, !dbg !7533
  %74 = load i32, i32* %i.i, align 4, !dbg !7534
  %inc.i = add nsw i32 %74, 1, !dbg !7534
  store i32 %inc.i, i32* %i.i, align 4, !dbg !7534
  br label %for.cond5.i, !dbg !7536, !llvm.loop !7537

for.end.i:                                        ; preds = %for.cond5.i
  %75 = load i32, i32* %v.i, align 4, !dbg !7539
  %76 = load i32, i32* %x.i, align 4, !dbg !7540
  %idxprom10.i = sext i32 %76 to i64, !dbg !7541
  %77 = load i32**, i32*** %sample.addr.i, align 8, !dbg !7541
  %arrayidx11.i = getelementptr inbounds i32*, i32** %77, i64 1, !dbg !7541
  %78 = load i32*, i32** %arrayidx11.i, align 8, !dbg !7541
  %arrayidx12.i = getelementptr inbounds i32, i32* %78, i64 %idxprom10.i, !dbg !7541
  store i32 %75, i32* %arrayidx12.i, align 4, !dbg !7542
  %79 = load i32, i32* %x.i, align 4, !dbg !7543
  %inc14.i = add nsw i32 %79, 1, !dbg !7543
  store i32 %inc14.i, i32* %x.i, align 4, !dbg !7543
  br label %for.cond.i, !dbg !7545, !llvm.loop !7546

for.end15.i:                                      ; preds = %for.cond.i
  store i32 0, i32* %retval.i, align 4, !dbg !7548
  br label %decode_line32.exit, !dbg !7548

if.end16.i:                                       ; preds = %if.end.i
  store i32 0, i32* %x.i, align 4, !dbg !7549
  br label %for.cond17.i, !dbg !7550

for.cond17.i:                                     ; preds = %if.end109.i, %if.end16.i
  %80 = load i32, i32* %x.i, align 4, !dbg !7551
  %81 = load i32, i32* %w.addr.i, align 4, !dbg !7553
  %cmp18.i = icmp slt i32 %80, %81, !dbg !7554
  br i1 %cmp18.i, label %for.body19.i, label %for.end124.i, !dbg !7555

for.body19.i:                                     ; preds = %for.cond17.i
  %82 = load i32, i32* %x.i, align 4, !dbg !7556
  %and.i = and i32 %82, 1023, !dbg !7558
  %tobool20.i = icmp ne i32 %and.i, 0, !dbg !7558
  br i1 %tobool20.i, label %if.end26.i, label %if.then21.i, !dbg !7559

if.then21.i:                                      ; preds = %for.body19.i
  %83 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !7560
  %call22.i = call i32 @is_input_end(%struct.FFV1Context* %83) #12, !dbg !7563
  %tobool23.i = icmp ne i32 %call22.i, 0, !dbg !7563
  br i1 %tobool23.i, label %if.then24.i, label %if.end25.i, !dbg !7564

if.then24.i:                                      ; preds = %if.then21.i
  store i32 -1094995529, i32* %retval.i, align 4, !dbg !7565
  br label %decode_line32.exit, !dbg !7565

if.end25.i:                                       ; preds = %if.then21.i
  br label %if.end26.i, !dbg !7566

if.end26.i:                                       ; preds = %if.end25.i, %for.body19.i
  %84 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i, align 8, !dbg !7567
  %85 = load i32**, i32*** %sample.addr.i, align 8, !dbg !7568
  %arrayidx27.i = getelementptr inbounds i32*, i32** %85, i64 1, !dbg !7568
  %86 = load i32*, i32** %arrayidx27.i, align 8, !dbg !7568
  %87 = load i32, i32* %x.i, align 4, !dbg !7569
  %idx.ext.i = sext i32 %87 to i64, !dbg !7570
  %add.ptr.i = getelementptr inbounds i32, i32* %86, i64 %idx.ext.i, !dbg !7570
  %88 = load i32**, i32*** %sample.addr.i, align 8, !dbg !7571
  %89 = load i32*, i32** %88, align 8, !dbg !7571
  %90 = load i32, i32* %x.i, align 4, !dbg !7572
  %idx.ext29.i = sext i32 %90 to i64, !dbg !7573
  %add.ptr30.i = getelementptr inbounds i32, i32* %89, i64 %idx.ext29.i, !dbg !7573
  %91 = load i32**, i32*** %sample.addr.i, align 8, !dbg !7574
  %arrayidx31.i = getelementptr inbounds i32*, i32** %91, i64 1, !dbg !7574
  %92 = load i32*, i32** %arrayidx31.i, align 8, !dbg !7574
  %93 = load i32, i32* %x.i, align 4, !dbg !7575
  %idx.ext32.i = sext i32 %93 to i64, !dbg !7576
  %add.ptr33.i = getelementptr inbounds i32, i32* %92, i64 %idx.ext32.i, !dbg !7576
  %call34.i = call i32 @get_context32(%struct.PlaneContext* %84, i32* %add.ptr.i, i32* %add.ptr30.i, i32* %add.ptr33.i) #12, !dbg !7577
  store i32 %call34.i, i32* %context.i, align 4, !dbg !7578
  %94 = load i32, i32* %context.i, align 4, !dbg !7579
  %cmp35.i = icmp slt i32 %94, 0, !dbg !7581
  br i1 %cmp35.i, label %if.then36.i, label %if.else.i, !dbg !7582

if.then36.i:                                      ; preds = %if.end26.i
  %95 = load i32, i32* %context.i, align 4, !dbg !7583
  %sub.i = sub nsw i32 0, %95, !dbg !7585
  store i32 %sub.i, i32* %context.i, align 4, !dbg !7586
  store i32 1, i32* %sign.i, align 4, !dbg !7587
  br label %if.end37.i, !dbg !7588

if.else.i:                                        ; preds = %if.end26.i
  store i32 0, i32* %sign.i, align 4, !dbg !7589
  br label %if.end37.i, !dbg !7498

if.end37.i:                                       ; preds = %if.else.i, %if.then36.i
  %96 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !7590
  %ac.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %96, i32 0, i32 23, !dbg !7592
  %97 = load i32, i32* %ac.i, align 4, !dbg !7592
  %cmp38.i = icmp ne i32 %97, 0, !dbg !7593
  br i1 %cmp38.i, label %if.then39.i, label %if.else44.i, !dbg !7594

if.then39.i:                                      ; preds = %if.end37.i
  %98 = load %struct.RangeCoder*, %struct.RangeCoder** %c.i, align 8, !dbg !7595
  %99 = load i32, i32* %context.i, align 4, !dbg !7597
  %idxprom40.i = sext i32 %99 to i64, !dbg !7598
  %100 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i, align 8, !dbg !7598
  %state41.i = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %100, i32 0, i32 3, !dbg !7599
  %101 = load [32 x i8]*, [32 x i8]** %state41.i, align 8, !dbg !7599
  %arrayidx42.i = getelementptr inbounds [32 x i8], [32 x i8]* %101, i64 %idxprom40.i, !dbg !7598
  %arraydecay.i = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx42.i, i32 0, i32 0, !dbg !7598
  %call43.i = call i32 @get_symbol_inline(%struct.RangeCoder* %98, i8* %arraydecay.i, i32 1) #12, !dbg !7600
  store i32 %call43.i, i32* %diff.i, align 4, !dbg !7601
  br label %if.end105.i, !dbg !7602

if.else44.i:                                      ; preds = %if.end37.i
  %102 = load i32, i32* %context.i, align 4, !dbg !7603
  %cmp45.i = icmp eq i32 %102, 0, !dbg !7606
  br i1 %cmp45.i, label %land.lhs.true.i, label %if.end48.i, !dbg !7607

land.lhs.true.i:                                  ; preds = %if.else44.i
  %103 = load i32, i32* %run_mode.i, align 4, !dbg !7608
  %cmp46.i = icmp eq i32 %103, 0, !dbg !7610
  br i1 %cmp46.i, label %if.then47.i, label %if.end48.i, !dbg !7611

if.then47.i:                                      ; preds = %land.lhs.true.i
  store i32 1, i32* %run_mode.i, align 4, !dbg !7612
  br label %if.end48.i, !dbg !7613

if.end48.i:                                       ; preds = %if.then47.i, %land.lhs.true.i, %if.else44.i
  %104 = load i32, i32* %run_mode.i, align 4, !dbg !7614
  %tobool49.i = icmp ne i32 %104, 0, !dbg !7614
  br i1 %tobool49.i, label %if.then50.i, label %if.else98.i, !dbg !7616

if.then50.i:                                      ; preds = %if.end48.i
  %105 = load i32, i32* %run_count.i, align 4, !dbg !7617
  %cmp51.i = icmp eq i32 %105, 0, !dbg !7620
  br i1 %cmp51.i, label %land.lhs.true52.i, label %if.end82.i, !dbg !7621

land.lhs.true52.i:                                ; preds = %if.then50.i
  %106 = load i32, i32* %run_mode.i, align 4, !dbg !7622
  %cmp53.i = icmp eq i32 %106, 1, !dbg !7624
  br i1 %cmp53.i, label %if.then54.i, label %if.end82.i, !dbg !7625

if.then54.i:                                      ; preds = %land.lhs.true52.i
  %107 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !7626
  %gb.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %107, i32 0, i32 3, !dbg !7629
  %call55.i = call i32 @get_bits1(%struct.GetBitContext* %gb.i) #12, !dbg !7630
  %tobool56.i = icmp ne i32 %call55.i, 0, !dbg !7630
  br i1 %tobool56.i, label %if.then57.i, label %if.else66.i, !dbg !7631

if.then57.i:                                      ; preds = %if.then54.i
  %108 = load i32, i32* %run_index.i, align 4, !dbg !7632
  %idxprom58.i = sext i32 %108 to i64, !dbg !7634
  %arrayidx59.i = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom58.i, !dbg !7634
  %109 = load i8, i8* %arrayidx59.i, align 1, !dbg !7634
  %conv.i = zext i8 %109 to i32, !dbg !7634
  %shl.i = shl i32 1, %conv.i, !dbg !7635
  store i32 %shl.i, i32* %run_count.i, align 4, !dbg !7636
  %110 = load i32, i32* %x.i, align 4, !dbg !7637
  %111 = load i32, i32* %run_count.i, align 4, !dbg !7639
  %add60.i = add nsw i32 %110, %111, !dbg !7640
  %112 = load i32, i32* %w.addr.i, align 4, !dbg !7641
  %cmp61.i = icmp sle i32 %add60.i, %112, !dbg !7642
  br i1 %cmp61.i, label %if.then63.i, label %if.end65.i, !dbg !7643

if.then63.i:                                      ; preds = %if.then57.i
  %113 = load i32, i32* %run_index.i, align 4, !dbg !7644
  %inc64.i = add nsw i32 %113, 1, !dbg !7644
  store i32 %inc64.i, i32* %run_index.i, align 4, !dbg !7644
  br label %if.end65.i, !dbg !7645

if.end65.i:                                       ; preds = %if.then63.i, %if.then57.i
  br label %if.end81.i, !dbg !7646

if.else66.i:                                      ; preds = %if.then54.i
  %114 = load i32, i32* %run_index.i, align 4, !dbg !7647
  %idxprom67.i = sext i32 %114 to i64, !dbg !7650
  %arrayidx68.i = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom67.i, !dbg !7650
  %115 = load i8, i8* %arrayidx68.i, align 1, !dbg !7650
  %tobool69.i = icmp ne i8 %115, 0, !dbg !7650
  br i1 %tobool69.i, label %if.then70.i, label %if.else76.i, !dbg !7651

if.then70.i:                                      ; preds = %if.else66.i
  %116 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !7652
  %gb71.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %116, i32 0, i32 3, !dbg !7653
  %117 = load i32, i32* %run_index.i, align 4, !dbg !7654
  %idxprom72.i = sext i32 %117 to i64, !dbg !7655
  %arrayidx73.i = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom72.i, !dbg !7655
  %118 = load i8, i8* %arrayidx73.i, align 1, !dbg !7655
  %conv74.i = zext i8 %118 to i32, !dbg !7655
  %call75.i = call i32 @get_bits(%struct.GetBitContext* %gb71.i, i32 %conv74.i) #12, !dbg !7656
  store i32 %call75.i, i32* %run_count.i, align 4, !dbg !7657
  br label %if.end77.i, !dbg !7658

if.else76.i:                                      ; preds = %if.else66.i
  store i32 0, i32* %run_count.i, align 4, !dbg !7659
  br label %if.end77.i, !dbg !7498

if.end77.i:                                       ; preds = %if.else76.i, %if.then70.i
  %119 = load i32, i32* %run_index.i, align 4, !dbg !7660
  %tobool78.i = icmp ne i32 %119, 0, !dbg !7660
  br i1 %tobool78.i, label %if.then79.i, label %if.end80.i, !dbg !7662

if.then79.i:                                      ; preds = %if.end77.i
  %120 = load i32, i32* %run_index.i, align 4, !dbg !7663
  %dec.i = add nsw i32 %120, -1, !dbg !7663
  store i32 %dec.i, i32* %run_index.i, align 4, !dbg !7663
  br label %if.end80.i, !dbg !7664

if.end80.i:                                       ; preds = %if.then79.i, %if.end77.i
  store i32 2, i32* %run_mode.i, align 4, !dbg !7665
  br label %if.end81.i, !dbg !7498

if.end81.i:                                       ; preds = %if.end80.i, %if.end65.i
  br label %if.end82.i, !dbg !7666

if.end82.i:                                       ; preds = %if.end81.i, %land.lhs.true52.i, %if.then50.i
  %121 = load i32, i32* %run_count.i, align 4, !dbg !7667
  %dec83.i = add nsw i32 %121, -1, !dbg !7667
  store i32 %dec83.i, i32* %run_count.i, align 4, !dbg !7667
  %122 = load i32, i32* %run_count.i, align 4, !dbg !7668
  %cmp84.i = icmp slt i32 %122, 0, !dbg !7670
  br i1 %cmp84.i, label %if.then86.i, label %if.else96.i, !dbg !7671

if.then86.i:                                      ; preds = %if.end82.i
  store i32 0, i32* %run_mode.i, align 4, !dbg !7672
  store i32 0, i32* %run_count.i, align 4, !dbg !7674
  %123 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !7675
  %gb87.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %123, i32 0, i32 3, !dbg !7676
  %124 = load i32, i32* %context.i, align 4, !dbg !7677
  %idxprom88.i = sext i32 %124 to i64, !dbg !7678
  %125 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i, align 8, !dbg !7678
  %vlc_state.i = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %125, i32 0, i32 4, !dbg !7679
  %126 = load %struct.VlcState*, %struct.VlcState** %vlc_state.i, align 8, !dbg !7679
  %arrayidx89.i = getelementptr inbounds %struct.VlcState, %struct.VlcState* %126, i64 %idxprom88.i, !dbg !7678
  %127 = load i32, i32* %bits.addr.i, align 4, !dbg !7680
  %call90.i = call i32 @get_vlc_symbol(%struct.GetBitContext* %gb87.i, %struct.VlcState* %arrayidx89.i, i32 %127) #12, !dbg !7681
  store i32 %call90.i, i32* %diff.i, align 4, !dbg !7682
  %128 = load i32, i32* %diff.i, align 4, !dbg !7683
  %cmp91.i = icmp sge i32 %128, 0, !dbg !7685
  br i1 %cmp91.i, label %if.then93.i, label %if.end95.i, !dbg !7686

if.then93.i:                                      ; preds = %if.then86.i
  %129 = load i32, i32* %diff.i, align 4, !dbg !7687
  %inc94.i = add nsw i32 %129, 1, !dbg !7687
  store i32 %inc94.i, i32* %diff.i, align 4, !dbg !7687
  br label %if.end95.i, !dbg !7688

if.end95.i:                                       ; preds = %if.then93.i, %if.then86.i
  br label %if.end97.i, !dbg !7689

if.else96.i:                                      ; preds = %if.end82.i
  store i32 0, i32* %diff.i, align 4, !dbg !7690
  br label %if.end97.i, !dbg !7498

if.end97.i:                                       ; preds = %if.else96.i, %if.end95.i
  br label %if.end104.i, !dbg !7691

if.else98.i:                                      ; preds = %if.end48.i
  %130 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !7692
  %gb99.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %130, i32 0, i32 3, !dbg !7693
  %131 = load i32, i32* %context.i, align 4, !dbg !7694
  %idxprom100.i = sext i32 %131 to i64, !dbg !7695
  %132 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i, align 8, !dbg !7695
  %vlc_state101.i = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %132, i32 0, i32 4, !dbg !7696
  %133 = load %struct.VlcState*, %struct.VlcState** %vlc_state101.i, align 8, !dbg !7696
  %arrayidx102.i = getelementptr inbounds %struct.VlcState, %struct.VlcState* %133, i64 %idxprom100.i, !dbg !7695
  %134 = load i32, i32* %bits.addr.i, align 4, !dbg !7697
  %call103.i = call i32 @get_vlc_symbol(%struct.GetBitContext* %gb99.i, %struct.VlcState* %arrayidx102.i, i32 %134) #12, !dbg !7698
  store i32 %call103.i, i32* %diff.i, align 4, !dbg !7699
  br label %if.end104.i, !dbg !7498

if.end104.i:                                      ; preds = %if.else98.i, %if.end97.i
  br label %if.end105.i, !dbg !7498

if.end105.i:                                      ; preds = %if.end104.i, %if.then39.i
  %135 = load i32, i32* %sign.i, align 4, !dbg !7700
  %tobool106.i = icmp ne i32 %135, 0, !dbg !7700
  br i1 %tobool106.i, label %if.then107.i, label %if.end109.i, !dbg !7702

if.then107.i:                                     ; preds = %if.end105.i
  %136 = load i32, i32* %diff.i, align 4, !dbg !7703
  %sub108.i = sub i32 0, %136, !dbg !7704
  store i32 %sub108.i, i32* %diff.i, align 4, !dbg !7705
  br label %if.end109.i, !dbg !7706

if.end109.i:                                      ; preds = %if.then107.i, %if.end105.i
  %137 = load i32**, i32*** %sample.addr.i, align 8, !dbg !7707
  %arrayidx110.i = getelementptr inbounds i32*, i32** %137, i64 1, !dbg !7707
  %138 = load i32*, i32** %arrayidx110.i, align 8, !dbg !7707
  %139 = load i32, i32* %x.i, align 4, !dbg !7708
  %idx.ext111.i = sext i32 %139 to i64, !dbg !7709
  %add.ptr112.i = getelementptr inbounds i32, i32* %138, i64 %idx.ext111.i, !dbg !7709
  %140 = load i32**, i32*** %sample.addr.i, align 8, !dbg !7710
  %141 = load i32*, i32** %140, align 8, !dbg !7710
  %142 = load i32, i32* %x.i, align 4, !dbg !7711
  %idx.ext114.i = sext i32 %142 to i64, !dbg !7712
  %add.ptr115.i = getelementptr inbounds i32, i32* %141, i64 %idx.ext114.i, !dbg !7712
  %call116.i = call i32 @predict32(i32* %add.ptr112.i, i32* %add.ptr115.i) #12, !dbg !7713
  %143 = load i32, i32* %diff.i, align 4, !dbg !7714
  %add117.i = add i32 %call116.i, %143, !dbg !7715
  %144 = load i32, i32* %bits.addr.i, align 4, !dbg !7716
  store i32 %add117.i, i32* %a.addr.i.i, align 4, !dbg !7717
  store i32 %144, i32* %p.addr.i.i, align 4, !dbg !7717
  %145 = load i32, i32* %a.addr.i.i, align 4, !dbg !7718
  %146 = load i32, i32* %p.addr.i.i, align 4, !dbg !7719
  %shl.i.i = shl i32 1, %146, !dbg !7720
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !7721
  %and.i.i = and i32 %145, %sub.i.i, !dbg !7722
  %147 = load i32, i32* %x.i, align 4, !dbg !7723
  %idxprom119.i = sext i32 %147 to i64, !dbg !7724
  %148 = load i32**, i32*** %sample.addr.i, align 8, !dbg !7724
  %arrayidx120.i = getelementptr inbounds i32*, i32** %148, i64 1, !dbg !7724
  %149 = load i32*, i32** %arrayidx120.i, align 8, !dbg !7724
  %arrayidx121.i = getelementptr inbounds i32, i32* %149, i64 %idxprom119.i, !dbg !7724
  store i32 %and.i.i, i32* %arrayidx121.i, align 4, !dbg !7725
  %150 = load i32, i32* %x.i, align 4, !dbg !7726
  %inc123.i = add nsw i32 %150, 1, !dbg !7726
  store i32 %inc123.i, i32* %x.i, align 4, !dbg !7726
  br label %for.cond17.i, !dbg !7728, !llvm.loop !7729

for.end124.i:                                     ; preds = %for.cond17.i
  %151 = load i32, i32* %run_index.i, align 4, !dbg !7731
  %152 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !7732
  %run_index125.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %152, i32 0, i32 31, !dbg !7733
  store i32 %151, i32* %run_index125.i, align 8, !dbg !7734
  store i32 0, i32* %retval.i, align 4, !dbg !7735
  br label %decode_line32.exit, !dbg !7735

decode_line32.exit:                               ; preds = %if.then.i, %for.end15.i, %if.then24.i, %for.end124.i
  %153 = load i32, i32* %retval.i, align 4, !dbg !7736
  store i32 %153, i32* %ret, align 4, !dbg !7737
  br label %if.end, !dbg !7738

if.else:                                          ; preds = %land.lhs.true, %for.body37
  %154 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7739
  %155 = load i32, i32* %w.addr, align 4, !dbg !7740
  %156 = load i32, i32* %p, align 4, !dbg !7741
  %idxprom73 = sext i32 %156 to i64, !dbg !7742
  %arrayidx74 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 %idxprom73, !dbg !7742
  %arraydecay75 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx74, i32 0, i32 0, !dbg !7742
  %157 = load i32, i32* %p, align 4, !dbg !7743
  %add76 = add nsw i32 %157, 1, !dbg !7744
  %div77 = sdiv i32 %add76, 2, !dbg !7745
  %158 = load i32, i32* %bits, align 4, !dbg !7746
  %159 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7747
  %slice_coding_mode78 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %159, i32 0, i32 55, !dbg !7748
  %160 = load i32, i32* %slice_coding_mode78, align 4, !dbg !7748
  %cmp79 = icmp ne i32 %160, 1, !dbg !7749
  %conv80 = zext i1 %cmp79 to i32, !dbg !7749
  %add81 = add nsw i32 %158, %conv80, !dbg !7750
  store %struct.FFV1Context* %154, %struct.FFV1Context** %s.addr.i189, align 8, !dbg !7751
  store i32 %155, i32* %w.addr.i190, align 4, !dbg !7751
  store i32** %arraydecay75, i32*** %sample.addr.i191, align 8, !dbg !7751
  store i32 %div77, i32* %plane_index.addr.i192, align 4, !dbg !7751
  store i32 %add81, i32* %bits.addr.i193, align 4, !dbg !7751
  %161 = load i32, i32* %plane_index.addr.i192, align 4, !dbg !7752
  %idxprom.i206 = sext i32 %161 to i64, !dbg !7753
  %162 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i189, align 8, !dbg !7753
  %plane.i207 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %162, i32 0, i32 25, !dbg !7754
  %arrayidx.i208 = getelementptr inbounds [4 x %struct.PlaneContext], [4 x %struct.PlaneContext]* %plane.i207, i64 0, i64 %idxprom.i206, !dbg !7753
  store %struct.PlaneContext* %arrayidx.i208, %struct.PlaneContext** %p.i194, align 8, !dbg !7288
  %163 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i189, align 8, !dbg !7755
  %c1.i209 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %163, i32 0, i32 2, !dbg !7756
  store %struct.RangeCoder* %c1.i209, %struct.RangeCoder** %c.i195, align 8, !dbg !7290
  store i32 0, i32* %run_count.i197, align 4, !dbg !7294
  store i32 0, i32* %run_mode.i198, align 4, !dbg !7296
  %164 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i189, align 8, !dbg !7757
  %run_index2.i210 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %164, i32 0, i32 31, !dbg !7758
  %165 = load i32, i32* %run_index2.i210, align 8, !dbg !7758
  store i32 %165, i32* %run_index.i199, align 4, !dbg !7298
  %166 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i189, align 8, !dbg !7759
  %call.i211 = call i32 @is_input_end(%struct.FFV1Context* %166) #12, !dbg !7760
  %tobool.i212 = icmp ne i32 %call.i211, 0, !dbg !7760
  br i1 %tobool.i212, label %if.then.i213, label %if.end.i216, !dbg !7761

if.then.i213:                                     ; preds = %if.else
  store i32 -1094995529, i32* %retval.i188, align 4, !dbg !7762
  br label %decode_line32.exit353, !dbg !7762

if.end.i216:                                      ; preds = %if.else
  %167 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i189, align 8, !dbg !7763
  %slice_coding_mode.i214 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %167, i32 0, i32 55, !dbg !7764
  %168 = load i32, i32* %slice_coding_mode.i214, align 4, !dbg !7764
  %cmp.i215 = icmp eq i32 %168, 1, !dbg !7765
  br i1 %cmp.i215, label %if.then3.i217, label %if.end16.i234, !dbg !7766

if.then3.i217:                                    ; preds = %if.end.i216
  store i32 0, i32* %x.i196, align 4, !dbg !7767
  br label %for.cond.i219, !dbg !7768

for.cond.i219:                                    ; preds = %for.end.i231, %if.then3.i217
  %169 = load i32, i32* %x.i196, align 4, !dbg !7769
  %170 = load i32, i32* %w.addr.i190, align 4, !dbg !7770
  %cmp4.i218 = icmp slt i32 %169, %170, !dbg !7771
  br i1 %cmp4.i218, label %for.body.i220, label %for.end15.i233, !dbg !7772

for.body.i220:                                    ; preds = %for.cond.i219
  store i32 0, i32* %v.i201, align 4, !dbg !7307
  store i32 0, i32* %i.i200, align 4, !dbg !7773
  br label %for.cond5.i222, !dbg !7774

for.cond5.i222:                                   ; preds = %for.body7.i226, %for.body.i220
  %171 = load i32, i32* %i.i200, align 4, !dbg !7775
  %172 = load i32, i32* %bits.addr.i193, align 4, !dbg !7776
  %cmp6.i221 = icmp slt i32 %171, %172, !dbg !7777
  br i1 %cmp6.i221, label %for.body7.i226, label %for.end.i231, !dbg !7778

for.body7.i226:                                   ; preds = %for.cond5.i222
  store i8 -128, i8* %state.i202, align 1, !dbg !7312
  %173 = load i32, i32* %v.i201, align 4, !dbg !7779
  %174 = load %struct.RangeCoder*, %struct.RangeCoder** %c.i195, align 8, !dbg !7780
  %call8.i223 = call i32 @get_rac(%struct.RangeCoder* %174, i8* %state.i202) #12, !dbg !7781
  %add.i224 = add nsw i32 %173, %call8.i223, !dbg !7782
  %175 = load i32, i32* %v.i201, align 4, !dbg !7783
  %add9.i225 = add nsw i32 %175, %add.i224, !dbg !7783
  store i32 %add9.i225, i32* %v.i201, align 4, !dbg !7783
  %176 = load i32, i32* %i.i200, align 4, !dbg !7784
  %inc.i227 = add nsw i32 %176, 1, !dbg !7784
  store i32 %inc.i227, i32* %i.i200, align 4, !dbg !7784
  br label %for.cond5.i222, !dbg !7785, !llvm.loop !7537

for.end.i231:                                     ; preds = %for.cond5.i222
  %177 = load i32, i32* %v.i201, align 4, !dbg !7786
  %178 = load i32, i32* %x.i196, align 4, !dbg !7787
  %idxprom10.i228 = sext i32 %178 to i64, !dbg !7788
  %179 = load i32**, i32*** %sample.addr.i191, align 8, !dbg !7788
  %arrayidx11.i229 = getelementptr inbounds i32*, i32** %179, i64 1, !dbg !7788
  %180 = load i32*, i32** %arrayidx11.i229, align 8, !dbg !7788
  %arrayidx12.i230 = getelementptr inbounds i32, i32* %180, i64 %idxprom10.i228, !dbg !7788
  store i32 %177, i32* %arrayidx12.i230, align 4, !dbg !7789
  %181 = load i32, i32* %x.i196, align 4, !dbg !7790
  %inc14.i232 = add nsw i32 %181, 1, !dbg !7790
  store i32 %inc14.i232, i32* %x.i196, align 4, !dbg !7790
  br label %for.cond.i219, !dbg !7791, !llvm.loop !7546

for.end15.i233:                                   ; preds = %for.cond.i219
  store i32 0, i32* %retval.i188, align 4, !dbg !7792
  br label %decode_line32.exit353, !dbg !7792

if.end16.i234:                                    ; preds = %if.end.i216
  store i32 0, i32* %x.i196, align 4, !dbg !7793
  br label %for.cond17.i236, !dbg !7794

for.cond17.i236:                                  ; preds = %if.end109.i349, %if.end16.i234
  %182 = load i32, i32* %x.i196, align 4, !dbg !7795
  %183 = load i32, i32* %w.addr.i190, align 4, !dbg !7796
  %cmp18.i235 = icmp slt i32 %182, %183, !dbg !7797
  br i1 %cmp18.i235, label %for.body19.i239, label %for.end124.i352, !dbg !7798

for.body19.i239:                                  ; preds = %for.cond17.i236
  %184 = load i32, i32* %x.i196, align 4, !dbg !7799
  %and.i237 = and i32 %184, 1023, !dbg !7800
  %tobool20.i238 = icmp ne i32 %and.i237, 0, !dbg !7800
  br i1 %tobool20.i238, label %if.end26.i255, label %if.then21.i242, !dbg !7801

if.then21.i242:                                   ; preds = %for.body19.i239
  %185 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i189, align 8, !dbg !7802
  %call22.i240 = call i32 @is_input_end(%struct.FFV1Context* %185) #12, !dbg !7803
  %tobool23.i241 = icmp ne i32 %call22.i240, 0, !dbg !7803
  br i1 %tobool23.i241, label %if.then24.i243, label %if.end25.i244, !dbg !7804

if.then24.i243:                                   ; preds = %if.then21.i242
  store i32 -1094995529, i32* %retval.i188, align 4, !dbg !7805
  br label %decode_line32.exit353, !dbg !7805

if.end25.i244:                                    ; preds = %if.then21.i242
  br label %if.end26.i255, !dbg !7806

if.end26.i255:                                    ; preds = %if.end25.i244, %for.body19.i239
  %186 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i194, align 8, !dbg !7807
  %187 = load i32**, i32*** %sample.addr.i191, align 8, !dbg !7808
  %arrayidx27.i245 = getelementptr inbounds i32*, i32** %187, i64 1, !dbg !7808
  %188 = load i32*, i32** %arrayidx27.i245, align 8, !dbg !7808
  %189 = load i32, i32* %x.i196, align 4, !dbg !7809
  %idx.ext.i246 = sext i32 %189 to i64, !dbg !7810
  %add.ptr.i247 = getelementptr inbounds i32, i32* %188, i64 %idx.ext.i246, !dbg !7810
  %190 = load i32**, i32*** %sample.addr.i191, align 8, !dbg !7811
  %191 = load i32*, i32** %190, align 8, !dbg !7811
  %192 = load i32, i32* %x.i196, align 4, !dbg !7812
  %idx.ext29.i248 = sext i32 %192 to i64, !dbg !7813
  %add.ptr30.i249 = getelementptr inbounds i32, i32* %191, i64 %idx.ext29.i248, !dbg !7813
  %193 = load i32**, i32*** %sample.addr.i191, align 8, !dbg !7814
  %arrayidx31.i250 = getelementptr inbounds i32*, i32** %193, i64 1, !dbg !7814
  %194 = load i32*, i32** %arrayidx31.i250, align 8, !dbg !7814
  %195 = load i32, i32* %x.i196, align 4, !dbg !7815
  %idx.ext32.i251 = sext i32 %195 to i64, !dbg !7816
  %add.ptr33.i252 = getelementptr inbounds i32, i32* %194, i64 %idx.ext32.i251, !dbg !7816
  %call34.i253 = call i32 @get_context32(%struct.PlaneContext* %186, i32* %add.ptr.i247, i32* %add.ptr30.i249, i32* %add.ptr33.i252) #12, !dbg !7817
  store i32 %call34.i253, i32* %context.i204, align 4, !dbg !7818
  %196 = load i32, i32* %context.i204, align 4, !dbg !7819
  %cmp35.i254 = icmp slt i32 %196, 0, !dbg !7820
  br i1 %cmp35.i254, label %if.then36.i257, label %if.else.i258, !dbg !7821

if.then36.i257:                                   ; preds = %if.end26.i255
  %197 = load i32, i32* %context.i204, align 4, !dbg !7822
  %sub.i256 = sub nsw i32 0, %197, !dbg !7823
  store i32 %sub.i256, i32* %context.i204, align 4, !dbg !7824
  store i32 1, i32* %sign.i205, align 4, !dbg !7825
  br label %if.end37.i261, !dbg !7826

if.else.i258:                                     ; preds = %if.end26.i255
  store i32 0, i32* %sign.i205, align 4, !dbg !7827
  br label %if.end37.i261, !dbg !7751

if.end37.i261:                                    ; preds = %if.else.i258, %if.then36.i257
  %198 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i189, align 8, !dbg !7828
  %ac.i259 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %198, i32 0, i32 23, !dbg !7829
  %199 = load i32, i32* %ac.i259, align 4, !dbg !7829
  %cmp38.i260 = icmp ne i32 %199, 0, !dbg !7830
  br i1 %cmp38.i260, label %if.then39.i267, label %if.else44.i269, !dbg !7831

if.then39.i267:                                   ; preds = %if.end37.i261
  %200 = load %struct.RangeCoder*, %struct.RangeCoder** %c.i195, align 8, !dbg !7832
  %201 = load i32, i32* %context.i204, align 4, !dbg !7833
  %idxprom40.i262 = sext i32 %201 to i64, !dbg !7834
  %202 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i194, align 8, !dbg !7834
  %state41.i263 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %202, i32 0, i32 3, !dbg !7835
  %203 = load [32 x i8]*, [32 x i8]** %state41.i263, align 8, !dbg !7835
  %arrayidx42.i264 = getelementptr inbounds [32 x i8], [32 x i8]* %203, i64 %idxprom40.i262, !dbg !7834
  %arraydecay.i265 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx42.i264, i32 0, i32 0, !dbg !7834
  %call43.i266 = call i32 @get_symbol_inline(%struct.RangeCoder* %200, i8* %arraydecay.i265, i32 1) #12, !dbg !7836
  store i32 %call43.i266, i32* %diff.i203, align 4, !dbg !7837
  br label %if.end105.i333, !dbg !7838

if.else44.i269:                                   ; preds = %if.end37.i261
  %204 = load i32, i32* %context.i204, align 4, !dbg !7839
  %cmp45.i268 = icmp eq i32 %204, 0, !dbg !7840
  br i1 %cmp45.i268, label %land.lhs.true.i271, label %if.end48.i274, !dbg !7841

land.lhs.true.i271:                               ; preds = %if.else44.i269
  %205 = load i32, i32* %run_mode.i198, align 4, !dbg !7842
  %cmp46.i270 = icmp eq i32 %205, 0, !dbg !7843
  br i1 %cmp46.i270, label %if.then47.i272, label %if.end48.i274, !dbg !7844

if.then47.i272:                                   ; preds = %land.lhs.true.i271
  store i32 1, i32* %run_mode.i198, align 4, !dbg !7845
  br label %if.end48.i274, !dbg !7846

if.end48.i274:                                    ; preds = %if.then47.i272, %land.lhs.true.i271, %if.else44.i269
  %206 = load i32, i32* %run_mode.i198, align 4, !dbg !7847
  %tobool49.i273 = icmp ne i32 %206, 0, !dbg !7847
  br i1 %tobool49.i273, label %if.then50.i276, label %if.else98.i330, !dbg !7848

if.then50.i276:                                   ; preds = %if.end48.i274
  %207 = load i32, i32* %run_count.i197, align 4, !dbg !7849
  %cmp51.i275 = icmp eq i32 %207, 0, !dbg !7850
  br i1 %cmp51.i275, label %land.lhs.true52.i278, label %if.end82.i312, !dbg !7851

land.lhs.true52.i278:                             ; preds = %if.then50.i276
  %208 = load i32, i32* %run_mode.i198, align 4, !dbg !7852
  %cmp53.i277 = icmp eq i32 %208, 1, !dbg !7853
  br i1 %cmp53.i277, label %if.then54.i282, label %if.end82.i312, !dbg !7854

if.then54.i282:                                   ; preds = %land.lhs.true52.i278
  %209 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i189, align 8, !dbg !7855
  %gb.i279 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %209, i32 0, i32 3, !dbg !7856
  %call55.i280 = call i32 @get_bits1(%struct.GetBitContext* %gb.i279) #12, !dbg !7857
  %tobool56.i281 = icmp ne i32 %call55.i280, 0, !dbg !7857
  br i1 %tobool56.i281, label %if.then57.i289, label %if.else66.i296, !dbg !7858

if.then57.i289:                                   ; preds = %if.then54.i282
  %210 = load i32, i32* %run_index.i199, align 4, !dbg !7859
  %idxprom58.i283 = sext i32 %210 to i64, !dbg !7860
  %arrayidx59.i284 = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom58.i283, !dbg !7860
  %211 = load i8, i8* %arrayidx59.i284, align 1, !dbg !7860
  %conv.i285 = zext i8 %211 to i32, !dbg !7860
  %shl.i286 = shl i32 1, %conv.i285, !dbg !7861
  store i32 %shl.i286, i32* %run_count.i197, align 4, !dbg !7862
  %212 = load i32, i32* %x.i196, align 4, !dbg !7863
  %213 = load i32, i32* %run_count.i197, align 4, !dbg !7864
  %add60.i287 = add nsw i32 %212, %213, !dbg !7865
  %214 = load i32, i32* %w.addr.i190, align 4, !dbg !7866
  %cmp61.i288 = icmp sle i32 %add60.i287, %214, !dbg !7867
  br i1 %cmp61.i288, label %if.then63.i291, label %if.end65.i292, !dbg !7868

if.then63.i291:                                   ; preds = %if.then57.i289
  %215 = load i32, i32* %run_index.i199, align 4, !dbg !7869
  %inc64.i290 = add nsw i32 %215, 1, !dbg !7869
  store i32 %inc64.i290, i32* %run_index.i199, align 4, !dbg !7869
  br label %if.end65.i292, !dbg !7870

if.end65.i292:                                    ; preds = %if.then63.i291, %if.then57.i289
  br label %if.end81.i309, !dbg !7871

if.else66.i296:                                   ; preds = %if.then54.i282
  %216 = load i32, i32* %run_index.i199, align 4, !dbg !7872
  %idxprom67.i293 = sext i32 %216 to i64, !dbg !7873
  %arrayidx68.i294 = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom67.i293, !dbg !7873
  %217 = load i8, i8* %arrayidx68.i294, align 1, !dbg !7873
  %tobool69.i295 = icmp ne i8 %217, 0, !dbg !7873
  br i1 %tobool69.i295, label %if.then70.i302, label %if.else76.i303, !dbg !7874

if.then70.i302:                                   ; preds = %if.else66.i296
  %218 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i189, align 8, !dbg !7875
  %gb71.i297 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %218, i32 0, i32 3, !dbg !7876
  %219 = load i32, i32* %run_index.i199, align 4, !dbg !7877
  %idxprom72.i298 = sext i32 %219 to i64, !dbg !7878
  %arrayidx73.i299 = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom72.i298, !dbg !7878
  %220 = load i8, i8* %arrayidx73.i299, align 1, !dbg !7878
  %conv74.i300 = zext i8 %220 to i32, !dbg !7878
  %call75.i301 = call i32 @get_bits(%struct.GetBitContext* %gb71.i297, i32 %conv74.i300) #12, !dbg !7879
  store i32 %call75.i301, i32* %run_count.i197, align 4, !dbg !7880
  br label %if.end77.i305, !dbg !7881

if.else76.i303:                                   ; preds = %if.else66.i296
  store i32 0, i32* %run_count.i197, align 4, !dbg !7882
  br label %if.end77.i305, !dbg !7751

if.end77.i305:                                    ; preds = %if.else76.i303, %if.then70.i302
  %221 = load i32, i32* %run_index.i199, align 4, !dbg !7883
  %tobool78.i304 = icmp ne i32 %221, 0, !dbg !7883
  br i1 %tobool78.i304, label %if.then79.i307, label %if.end80.i308, !dbg !7884

if.then79.i307:                                   ; preds = %if.end77.i305
  %222 = load i32, i32* %run_index.i199, align 4, !dbg !7885
  %dec.i306 = add nsw i32 %222, -1, !dbg !7885
  store i32 %dec.i306, i32* %run_index.i199, align 4, !dbg !7885
  br label %if.end80.i308, !dbg !7886

if.end80.i308:                                    ; preds = %if.then79.i307, %if.end77.i305
  store i32 2, i32* %run_mode.i198, align 4, !dbg !7887
  br label %if.end81.i309, !dbg !7751

if.end81.i309:                                    ; preds = %if.end80.i308, %if.end65.i292
  br label %if.end82.i312, !dbg !7888

if.end82.i312:                                    ; preds = %if.end81.i309, %land.lhs.true52.i278, %if.then50.i276
  %223 = load i32, i32* %run_count.i197, align 4, !dbg !7889
  %dec83.i310 = add nsw i32 %223, -1, !dbg !7889
  store i32 %dec83.i310, i32* %run_count.i197, align 4, !dbg !7889
  %224 = load i32, i32* %run_count.i197, align 4, !dbg !7890
  %cmp84.i311 = icmp slt i32 %224, 0, !dbg !7891
  br i1 %cmp84.i311, label %if.then86.i319, label %if.else96.i323, !dbg !7892

if.then86.i319:                                   ; preds = %if.end82.i312
  store i32 0, i32* %run_mode.i198, align 4, !dbg !7893
  store i32 0, i32* %run_count.i197, align 4, !dbg !7894
  %225 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i189, align 8, !dbg !7895
  %gb87.i313 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %225, i32 0, i32 3, !dbg !7896
  %226 = load i32, i32* %context.i204, align 4, !dbg !7897
  %idxprom88.i314 = sext i32 %226 to i64, !dbg !7898
  %227 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i194, align 8, !dbg !7898
  %vlc_state.i315 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %227, i32 0, i32 4, !dbg !7899
  %228 = load %struct.VlcState*, %struct.VlcState** %vlc_state.i315, align 8, !dbg !7899
  %arrayidx89.i316 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %228, i64 %idxprom88.i314, !dbg !7898
  %229 = load i32, i32* %bits.addr.i193, align 4, !dbg !7900
  %call90.i317 = call i32 @get_vlc_symbol(%struct.GetBitContext* %gb87.i313, %struct.VlcState* %arrayidx89.i316, i32 %229) #12, !dbg !7901
  store i32 %call90.i317, i32* %diff.i203, align 4, !dbg !7902
  %230 = load i32, i32* %diff.i203, align 4, !dbg !7903
  %cmp91.i318 = icmp sge i32 %230, 0, !dbg !7904
  br i1 %cmp91.i318, label %if.then93.i321, label %if.end95.i322, !dbg !7905

if.then93.i321:                                   ; preds = %if.then86.i319
  %231 = load i32, i32* %diff.i203, align 4, !dbg !7906
  %inc94.i320 = add nsw i32 %231, 1, !dbg !7906
  store i32 %inc94.i320, i32* %diff.i203, align 4, !dbg !7906
  br label %if.end95.i322, !dbg !7907

if.end95.i322:                                    ; preds = %if.then93.i321, %if.then86.i319
  br label %if.end97.i324, !dbg !7908

if.else96.i323:                                   ; preds = %if.end82.i312
  store i32 0, i32* %diff.i203, align 4, !dbg !7909
  br label %if.end97.i324, !dbg !7751

if.end97.i324:                                    ; preds = %if.else96.i323, %if.end95.i322
  br label %if.end104.i331, !dbg !7910

if.else98.i330:                                   ; preds = %if.end48.i274
  %232 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i189, align 8, !dbg !7911
  %gb99.i325 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %232, i32 0, i32 3, !dbg !7912
  %233 = load i32, i32* %context.i204, align 4, !dbg !7913
  %idxprom100.i326 = sext i32 %233 to i64, !dbg !7914
  %234 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i194, align 8, !dbg !7914
  %vlc_state101.i327 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %234, i32 0, i32 4, !dbg !7915
  %235 = load %struct.VlcState*, %struct.VlcState** %vlc_state101.i327, align 8, !dbg !7915
  %arrayidx102.i328 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %235, i64 %idxprom100.i326, !dbg !7914
  %236 = load i32, i32* %bits.addr.i193, align 4, !dbg !7916
  %call103.i329 = call i32 @get_vlc_symbol(%struct.GetBitContext* %gb99.i325, %struct.VlcState* %arrayidx102.i328, i32 %236) #12, !dbg !7917
  store i32 %call103.i329, i32* %diff.i203, align 4, !dbg !7918
  br label %if.end104.i331, !dbg !7751

if.end104.i331:                                   ; preds = %if.else98.i330, %if.end97.i324
  br label %if.end105.i333, !dbg !7751

if.end105.i333:                                   ; preds = %if.end104.i331, %if.then39.i267
  %237 = load i32, i32* %sign.i205, align 4, !dbg !7919
  %tobool106.i332 = icmp ne i32 %237, 0, !dbg !7919
  br i1 %tobool106.i332, label %if.then107.i335, label %if.end109.i349, !dbg !7920

if.then107.i335:                                  ; preds = %if.end105.i333
  %238 = load i32, i32* %diff.i203, align 4, !dbg !7921
  %sub108.i334 = sub i32 0, %238, !dbg !7922
  store i32 %sub108.i334, i32* %diff.i203, align 4, !dbg !7923
  br label %if.end109.i349, !dbg !7924

if.end109.i349:                                   ; preds = %if.then107.i335, %if.end105.i333
  %239 = load i32**, i32*** %sample.addr.i191, align 8, !dbg !7925
  %arrayidx110.i336 = getelementptr inbounds i32*, i32** %239, i64 1, !dbg !7925
  %240 = load i32*, i32** %arrayidx110.i336, align 8, !dbg !7925
  %241 = load i32, i32* %x.i196, align 4, !dbg !7926
  %idx.ext111.i337 = sext i32 %241 to i64, !dbg !7927
  %add.ptr112.i338 = getelementptr inbounds i32, i32* %240, i64 %idx.ext111.i337, !dbg !7927
  %242 = load i32**, i32*** %sample.addr.i191, align 8, !dbg !7928
  %243 = load i32*, i32** %242, align 8, !dbg !7928
  %244 = load i32, i32* %x.i196, align 4, !dbg !7929
  %idx.ext114.i339 = sext i32 %244 to i64, !dbg !7930
  %add.ptr115.i340 = getelementptr inbounds i32, i32* %243, i64 %idx.ext114.i339, !dbg !7930
  %call116.i341 = call i32 @predict32(i32* %add.ptr112.i338, i32* %add.ptr115.i340) #12, !dbg !7931
  %245 = load i32, i32* %diff.i203, align 4, !dbg !7932
  %add117.i342 = add i32 %call116.i341, %245, !dbg !7933
  %246 = load i32, i32* %bits.addr.i193, align 4, !dbg !7934
  store i32 %add117.i342, i32* %a.addr.i.i186, align 4, !dbg !7935
  store i32 %246, i32* %p.addr.i.i187, align 4, !dbg !7935
  %247 = load i32, i32* %a.addr.i.i186, align 4, !dbg !7936
  %248 = load i32, i32* %p.addr.i.i187, align 4, !dbg !7937
  %shl.i.i343 = shl i32 1, %248, !dbg !7938
  %sub.i.i344 = sub nsw i32 %shl.i.i343, 1, !dbg !7939
  %and.i.i345 = and i32 %247, %sub.i.i344, !dbg !7940
  %249 = load i32, i32* %x.i196, align 4, !dbg !7941
  %idxprom119.i346 = sext i32 %249 to i64, !dbg !7942
  %250 = load i32**, i32*** %sample.addr.i191, align 8, !dbg !7942
  %arrayidx120.i347 = getelementptr inbounds i32*, i32** %250, i64 1, !dbg !7942
  %251 = load i32*, i32** %arrayidx120.i347, align 8, !dbg !7942
  %arrayidx121.i348 = getelementptr inbounds i32, i32* %251, i64 %idxprom119.i346, !dbg !7942
  store i32 %and.i.i345, i32* %arrayidx121.i348, align 4, !dbg !7943
  %252 = load i32, i32* %x.i196, align 4, !dbg !7944
  %inc123.i350 = add nsw i32 %252, 1, !dbg !7944
  store i32 %inc123.i350, i32* %x.i196, align 4, !dbg !7944
  br label %for.cond17.i236, !dbg !7945, !llvm.loop !7729

for.end124.i352:                                  ; preds = %for.cond17.i236
  %253 = load i32, i32* %run_index.i199, align 4, !dbg !7946
  %254 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i189, align 8, !dbg !7947
  %run_index125.i351 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %254, i32 0, i32 31, !dbg !7948
  store i32 %253, i32* %run_index125.i351, align 8, !dbg !7949
  store i32 0, i32* %retval.i188, align 4, !dbg !7950
  br label %decode_line32.exit353, !dbg !7950

decode_line32.exit353:                            ; preds = %if.then.i213, %for.end15.i233, %if.then24.i243, %for.end124.i352
  %255 = load i32, i32* %retval.i188, align 4, !dbg !7951
  store i32 %255, i32* %ret, align 4, !dbg !7952
  br label %if.end

if.end:                                           ; preds = %decode_line32.exit353, %decode_line32.exit
  %256 = load i32, i32* %ret, align 4, !dbg !7953
  %cmp83 = icmp slt i32 %256, 0, !dbg !7955
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !7956

if.then85:                                        ; preds = %if.end
  %257 = load i32, i32* %ret, align 4, !dbg !7957
  store i32 %257, i32* %retval, align 4, !dbg !7958
  br label %return, !dbg !7958

if.end86:                                         ; preds = %if.end
  br label %for.inc87, !dbg !7959

for.inc87:                                        ; preds = %if.end86
  %258 = load i32, i32* %p, align 4, !dbg !7960
  %inc88 = add nsw i32 %258, 1, !dbg !7960
  store i32 %inc88, i32* %p, align 4, !dbg !7960
  br label %for.cond33, !dbg !7962, !llvm.loop !7963

for.end89:                                        ; preds = %for.cond33
  store i32 0, i32* %x, align 4, !dbg !7965
  br label %for.cond90, !dbg !7967

for.cond90:                                       ; preds = %for.inc180, %for.end89
  %259 = load i32, i32* %x, align 4, !dbg !7968
  %260 = load i32, i32* %w.addr, align 4, !dbg !7971
  %cmp91 = icmp slt i32 %259, %260, !dbg !7972
  br i1 %cmp91, label %for.body93, label %for.end182, !dbg !7973

for.body93:                                       ; preds = %for.cond90
  call void @llvm.dbg.declare(metadata i32* %g, metadata !7974, metadata !1706), !dbg !7976
  %261 = load i32, i32* %x, align 4, !dbg !7977
  %idxprom94 = sext i32 %261 to i64, !dbg !7978
  %arrayidx95 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 0, !dbg !7978
  %arrayidx96 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx95, i64 0, i64 1, !dbg !7978
  %262 = load i32*, i32** %arrayidx96, align 8, !dbg !7978
  %arrayidx97 = getelementptr inbounds i32, i32* %262, i64 %idxprom94, !dbg !7978
  %263 = load i32, i32* %arrayidx97, align 4, !dbg !7978
  store i32 %263, i32* %g, align 4, !dbg !7976
  call void @llvm.dbg.declare(metadata i32* %b, metadata !7979, metadata !1706), !dbg !7980
  %264 = load i32, i32* %x, align 4, !dbg !7981
  %idxprom98 = sext i32 %264 to i64, !dbg !7982
  %arrayidx99 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 1, !dbg !7982
  %arrayidx100 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx99, i64 0, i64 1, !dbg !7982
  %265 = load i32*, i32** %arrayidx100, align 8, !dbg !7982
  %arrayidx101 = getelementptr inbounds i32, i32* %265, i64 %idxprom98, !dbg !7982
  %266 = load i32, i32* %arrayidx101, align 4, !dbg !7982
  store i32 %266, i32* %b, align 4, !dbg !7980
  call void @llvm.dbg.declare(metadata i32* %r, metadata !7983, metadata !1706), !dbg !7984
  %267 = load i32, i32* %x, align 4, !dbg !7985
  %idxprom102 = sext i32 %267 to i64, !dbg !7986
  %arrayidx103 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 2, !dbg !7986
  %arrayidx104 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx103, i64 0, i64 1, !dbg !7986
  %268 = load i32*, i32** %arrayidx104, align 8, !dbg !7986
  %arrayidx105 = getelementptr inbounds i32, i32* %268, i64 %idxprom102, !dbg !7986
  %269 = load i32, i32* %arrayidx105, align 4, !dbg !7986
  store i32 %269, i32* %r, align 4, !dbg !7984
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7987, metadata !1706), !dbg !7988
  %270 = load i32, i32* %x, align 4, !dbg !7989
  %idxprom106 = sext i32 %270 to i64, !dbg !7990
  %arrayidx107 = getelementptr inbounds [4 x [2 x i32*]], [4 x [2 x i32*]]* %sample, i64 0, i64 3, !dbg !7990
  %arrayidx108 = getelementptr inbounds [2 x i32*], [2 x i32*]* %arrayidx107, i64 0, i64 1, !dbg !7990
  %271 = load i32*, i32** %arrayidx108, align 8, !dbg !7990
  %arrayidx109 = getelementptr inbounds i32, i32* %271, i64 %idxprom106, !dbg !7990
  %272 = load i32, i32* %arrayidx109, align 4, !dbg !7990
  store i32 %272, i32* %a, align 4, !dbg !7988
  %273 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !7991
  %slice_coding_mode110 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %273, i32 0, i32 55, !dbg !7993
  %274 = load i32, i32* %slice_coding_mode110, align 4, !dbg !7993
  %cmp111 = icmp ne i32 %274, 1, !dbg !7994
  br i1 %cmp111, label %if.then113, label %if.end122, !dbg !7995

if.then113:                                       ; preds = %for.body93
  %275 = load i32, i32* %offset, align 4, !dbg !7996
  %276 = load i32, i32* %b, align 4, !dbg !7998
  %sub114 = sub nsw i32 %276, %275, !dbg !7998
  store i32 %sub114, i32* %b, align 4, !dbg !7998
  %277 = load i32, i32* %offset, align 4, !dbg !7999
  %278 = load i32, i32* %r, align 4, !dbg !8000
  %sub115 = sub nsw i32 %278, %277, !dbg !8000
  store i32 %sub115, i32* %r, align 4, !dbg !8000
  %279 = load i32, i32* %b, align 4, !dbg !8001
  %280 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8002
  %slice_rct_by_coef = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %280, i32 0, i32 56, !dbg !8003
  %281 = load i32, i32* %slice_rct_by_coef, align 8, !dbg !8003
  %mul116 = mul nsw i32 %279, %281, !dbg !8004
  %282 = load i32, i32* %r, align 4, !dbg !8005
  %283 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8006
  %slice_rct_ry_coef = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %283, i32 0, i32 57, !dbg !8007
  %284 = load i32, i32* %slice_rct_ry_coef, align 4, !dbg !8007
  %mul117 = mul nsw i32 %282, %284, !dbg !8008
  %add118 = add nsw i32 %mul116, %mul117, !dbg !8009
  %shr = ashr i32 %add118, 2, !dbg !8010
  %285 = load i32, i32* %g, align 4, !dbg !8011
  %sub119 = sub nsw i32 %285, %shr, !dbg !8011
  store i32 %sub119, i32* %g, align 4, !dbg !8011
  %286 = load i32, i32* %g, align 4, !dbg !8012
  %287 = load i32, i32* %b, align 4, !dbg !8013
  %add120 = add nsw i32 %287, %286, !dbg !8013
  store i32 %add120, i32* %b, align 4, !dbg !8013
  %288 = load i32, i32* %g, align 4, !dbg !8014
  %289 = load i32, i32* %r, align 4, !dbg !8015
  %add121 = add nsw i32 %289, %288, !dbg !8015
  store i32 %add121, i32* %r, align 4, !dbg !8015
  br label %if.end122, !dbg !8016

if.end122:                                        ; preds = %if.then113, %for.body93
  %290 = load i32, i32* %lbd, align 4, !dbg !8017
  %tobool123 = icmp ne i32 %290, 0, !dbg !8017
  br i1 %tobool123, label %if.then124, label %if.else139, !dbg !8019

if.then124:                                       ; preds = %if.end122
  %291 = load i32, i32* %b, align 4, !dbg !8020
  %292 = load i32, i32* %g, align 4, !dbg !8021
  %shl125 = shl i32 %292, 8, !dbg !8022
  %add126 = add i32 %291, %shl125, !dbg !8023
  %293 = load i32, i32* %r, align 4, !dbg !8024
  %shl127 = shl i32 %293, 16, !dbg !8025
  %add128 = add i32 %add126, %shl127, !dbg !8026
  %294 = load i32, i32* %a, align 4, !dbg !8027
  %shl129 = shl i32 %294, 24, !dbg !8028
  %add130 = add i32 %add128, %shl129, !dbg !8029
  %295 = load i8**, i8*** %src.addr, align 8, !dbg !8030
  %arrayidx131 = getelementptr inbounds i8*, i8** %295, i64 0, !dbg !8030
  %296 = load i8*, i8** %arrayidx131, align 8, !dbg !8030
  %297 = load i32, i32* %x, align 4, !dbg !8031
  %mul132 = mul nsw i32 %297, 4, !dbg !8032
  %idx.ext133 = sext i32 %mul132 to i64, !dbg !8033
  %add.ptr134 = getelementptr inbounds i8, i8* %296, i64 %idx.ext133, !dbg !8033
  %298 = load i32*, i32** %stride.addr, align 8, !dbg !8034
  %arrayidx135 = getelementptr inbounds i32, i32* %298, i64 0, !dbg !8034
  %299 = load i32, i32* %arrayidx135, align 4, !dbg !8034
  %300 = load i32, i32* %y, align 4, !dbg !8035
  %mul136 = mul nsw i32 %299, %300, !dbg !8036
  %idx.ext137 = sext i32 %mul136 to i64, !dbg !8037
  %add.ptr138 = getelementptr inbounds i8, i8* %add.ptr134, i64 %idx.ext137, !dbg !8037
  %301 = bitcast i8* %add.ptr138 to i32*, !dbg !8038
  store i32 %add130, i32* %301, align 4, !dbg !8039
  br label %if.end179, !dbg !8038

if.else139:                                       ; preds = %if.end122
  %302 = load i32, i32* %g, align 4, !dbg !8040
  %conv140 = trunc i32 %302 to i16, !dbg !8040
  %303 = load i8**, i8*** %src.addr, align 8, !dbg !8043
  %arrayidx141 = getelementptr inbounds i8*, i8** %303, i64 0, !dbg !8043
  %304 = load i8*, i8** %arrayidx141, align 8, !dbg !8043
  %305 = load i32, i32* %x, align 4, !dbg !8044
  %mul142 = mul nsw i32 %305, 2, !dbg !8045
  %idx.ext143 = sext i32 %mul142 to i64, !dbg !8046
  %add.ptr144 = getelementptr inbounds i8, i8* %304, i64 %idx.ext143, !dbg !8046
  %306 = load i32*, i32** %stride.addr, align 8, !dbg !8047
  %arrayidx145 = getelementptr inbounds i32, i32* %306, i64 0, !dbg !8047
  %307 = load i32, i32* %arrayidx145, align 4, !dbg !8047
  %308 = load i32, i32* %y, align 4, !dbg !8048
  %mul146 = mul nsw i32 %307, %308, !dbg !8049
  %idx.ext147 = sext i32 %mul146 to i64, !dbg !8050
  %add.ptr148 = getelementptr inbounds i8, i8* %add.ptr144, i64 %idx.ext147, !dbg !8050
  %309 = bitcast i8* %add.ptr148 to i16*, !dbg !8051
  store i16 %conv140, i16* %309, align 2, !dbg !8052
  %310 = load i32, i32* %b, align 4, !dbg !8053
  %conv149 = trunc i32 %310 to i16, !dbg !8053
  %311 = load i8**, i8*** %src.addr, align 8, !dbg !8054
  %arrayidx150 = getelementptr inbounds i8*, i8** %311, i64 1, !dbg !8054
  %312 = load i8*, i8** %arrayidx150, align 8, !dbg !8054
  %313 = load i32, i32* %x, align 4, !dbg !8055
  %mul151 = mul nsw i32 %313, 2, !dbg !8056
  %idx.ext152 = sext i32 %mul151 to i64, !dbg !8057
  %add.ptr153 = getelementptr inbounds i8, i8* %312, i64 %idx.ext152, !dbg !8057
  %314 = load i32*, i32** %stride.addr, align 8, !dbg !8058
  %arrayidx154 = getelementptr inbounds i32, i32* %314, i64 1, !dbg !8058
  %315 = load i32, i32* %arrayidx154, align 4, !dbg !8058
  %316 = load i32, i32* %y, align 4, !dbg !8059
  %mul155 = mul nsw i32 %315, %316, !dbg !8060
  %idx.ext156 = sext i32 %mul155 to i64, !dbg !8061
  %add.ptr157 = getelementptr inbounds i8, i8* %add.ptr153, i64 %idx.ext156, !dbg !8061
  %317 = bitcast i8* %add.ptr157 to i16*, !dbg !8062
  store i16 %conv149, i16* %317, align 2, !dbg !8063
  %318 = load i32, i32* %r, align 4, !dbg !8064
  %conv158 = trunc i32 %318 to i16, !dbg !8064
  %319 = load i8**, i8*** %src.addr, align 8, !dbg !8065
  %arrayidx159 = getelementptr inbounds i8*, i8** %319, i64 2, !dbg !8065
  %320 = load i8*, i8** %arrayidx159, align 8, !dbg !8065
  %321 = load i32, i32* %x, align 4, !dbg !8066
  %mul160 = mul nsw i32 %321, 2, !dbg !8067
  %idx.ext161 = sext i32 %mul160 to i64, !dbg !8068
  %add.ptr162 = getelementptr inbounds i8, i8* %320, i64 %idx.ext161, !dbg !8068
  %322 = load i32*, i32** %stride.addr, align 8, !dbg !8069
  %arrayidx163 = getelementptr inbounds i32, i32* %322, i64 2, !dbg !8069
  %323 = load i32, i32* %arrayidx163, align 4, !dbg !8069
  %324 = load i32, i32* %y, align 4, !dbg !8070
  %mul164 = mul nsw i32 %323, %324, !dbg !8071
  %idx.ext165 = sext i32 %mul164 to i64, !dbg !8072
  %add.ptr166 = getelementptr inbounds i8, i8* %add.ptr162, i64 %idx.ext165, !dbg !8072
  %325 = bitcast i8* %add.ptr166 to i16*, !dbg !8073
  store i16 %conv158, i16* %325, align 2, !dbg !8074
  %326 = load i32, i32* %transparency, align 4, !dbg !8075
  %tobool167 = icmp ne i32 %326, 0, !dbg !8075
  br i1 %tobool167, label %if.then168, label %if.end178, !dbg !8077

if.then168:                                       ; preds = %if.else139
  %327 = load i32, i32* %a, align 4, !dbg !8078
  %conv169 = trunc i32 %327 to i16, !dbg !8078
  %328 = load i8**, i8*** %src.addr, align 8, !dbg !8079
  %arrayidx170 = getelementptr inbounds i8*, i8** %328, i64 3, !dbg !8079
  %329 = load i8*, i8** %arrayidx170, align 8, !dbg !8079
  %330 = load i32, i32* %x, align 4, !dbg !8080
  %mul171 = mul nsw i32 %330, 2, !dbg !8081
  %idx.ext172 = sext i32 %mul171 to i64, !dbg !8082
  %add.ptr173 = getelementptr inbounds i8, i8* %329, i64 %idx.ext172, !dbg !8082
  %331 = load i32*, i32** %stride.addr, align 8, !dbg !8083
  %arrayidx174 = getelementptr inbounds i32, i32* %331, i64 3, !dbg !8083
  %332 = load i32, i32* %arrayidx174, align 4, !dbg !8083
  %333 = load i32, i32* %y, align 4, !dbg !8084
  %mul175 = mul nsw i32 %332, %333, !dbg !8085
  %idx.ext176 = sext i32 %mul175 to i64, !dbg !8086
  %add.ptr177 = getelementptr inbounds i8, i8* %add.ptr173, i64 %idx.ext176, !dbg !8086
  %334 = bitcast i8* %add.ptr177 to i16*, !dbg !8087
  store i16 %conv169, i16* %334, align 2, !dbg !8088
  br label %if.end178, !dbg !8087

if.end178:                                        ; preds = %if.then168, %if.else139
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.then124
  br label %for.inc180, !dbg !8089

for.inc180:                                       ; preds = %if.end179
  %335 = load i32, i32* %x, align 4, !dbg !8090
  %inc181 = add nsw i32 %335, 1, !dbg !8090
  store i32 %inc181, i32* %x, align 4, !dbg !8090
  br label %for.cond90, !dbg !8092, !llvm.loop !8093

for.end182:                                       ; preds = %for.cond90
  br label %for.inc183, !dbg !8095

for.inc183:                                       ; preds = %for.end182
  %336 = load i32, i32* %y, align 4, !dbg !8096
  %inc184 = add nsw i32 %336, 1, !dbg !8096
  store i32 %inc184, i32* %y, align 4, !dbg !8096
  br label %for.cond29, !dbg !8098, !llvm.loop !8099

for.end185:                                       ; preds = %for.cond29
  store i32 0, i32* %retval, align 4, !dbg !8101
  br label %return, !dbg !8101

return:                                           ; preds = %for.end185, %if.then85
  %337 = load i32, i32* %retval, align 4, !dbg !8102
  ret i32 %337, !dbg !8102
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_rgb_frame(%struct.FFV1Context* %s, i8** %src, i32 %w, i32 %h, i32* %stride) #0 !dbg !8103 {
entry:
  %a.addr.i.i221 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i221, metadata !6512, metadata !1706), !dbg !8104
  %p.addr.i.i222 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i222, metadata !6534, metadata !1706), !dbg !8114
  %retval.i223 = alloca i32, align 4
  %s.addr.i224 = alloca %struct.FFV1Context*, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %s.addr.i224, metadata !6536, metadata !1706), !dbg !8115
  %w.addr.i225 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i225, metadata !6538, metadata !1706), !dbg !8116
  %sample.addr.i226 = alloca i16**, align 8
  call void @llvm.dbg.declare(metadata i16*** %sample.addr.i226, metadata !6540, metadata !1706), !dbg !8117
  %plane_index.addr.i227 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_index.addr.i227, metadata !6542, metadata !1706), !dbg !8118
  %bits.addr.i228 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i228, metadata !6544, metadata !1706), !dbg !8119
  %p.i229 = alloca %struct.PlaneContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PlaneContext** %p.i229, metadata !6546, metadata !1706), !dbg !8120
  %c.i230 = alloca %struct.RangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.i230, metadata !6548, metadata !1706), !dbg !8121
  %x.i231 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.i231, metadata !6550, metadata !1706), !dbg !8122
  %run_count.i232 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_count.i232, metadata !6552, metadata !1706), !dbg !8123
  %run_mode.i233 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_mode.i233, metadata !6554, metadata !1706), !dbg !8124
  %run_index.i234 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_index.i234, metadata !6556, metadata !1706), !dbg !8125
  %i.i235 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i235, metadata !6558, metadata !1706), !dbg !8126
  %v.i236 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %v.i236, metadata !6562, metadata !1706), !dbg !8127
  %state.i237 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %state.i237, metadata !6567, metadata !1706), !dbg !8128
  %diff.i238 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff.i238, metadata !6572, metadata !1706), !dbg !8129
  %context.i239 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %context.i239, metadata !6574, metadata !1706), !dbg !8130
  %sign.i240 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i240, metadata !6576, metadata !1706), !dbg !8131
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !6512, metadata !1706), !dbg !8132
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !6534, metadata !1706), !dbg !8135
  %retval.i = alloca i32, align 4
  %s.addr.i = alloca %struct.FFV1Context*, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %s.addr.i, metadata !6536, metadata !1706), !dbg !8136
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !6538, metadata !1706), !dbg !8137
  %sample.addr.i = alloca i16**, align 8
  call void @llvm.dbg.declare(metadata i16*** %sample.addr.i, metadata !6540, metadata !1706), !dbg !8138
  %plane_index.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_index.addr.i, metadata !6542, metadata !1706), !dbg !8139
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !6544, metadata !1706), !dbg !8140
  %p.i = alloca %struct.PlaneContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PlaneContext** %p.i, metadata !6546, metadata !1706), !dbg !8141
  %c.i = alloca %struct.RangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c.i, metadata !6548, metadata !1706), !dbg !8142
  %x.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.i, metadata !6550, metadata !1706), !dbg !8143
  %run_count.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_count.i, metadata !6552, metadata !1706), !dbg !8144
  %run_mode.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_mode.i, metadata !6554, metadata !1706), !dbg !8145
  %run_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %run_index.i, metadata !6556, metadata !1706), !dbg !8146
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !6558, metadata !1706), !dbg !8147
  %v.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %v.i, metadata !6562, metadata !1706), !dbg !8148
  %state.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %state.i, metadata !6567, metadata !1706), !dbg !8149
  %diff.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff.i, metadata !6572, metadata !1706), !dbg !8150
  %context.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %context.i, metadata !6574, metadata !1706), !dbg !8151
  %sign.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i, metadata !6576, metadata !1706), !dbg !8152
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.FFV1Context*, align 8
  %src.addr = alloca i8**, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %stride.addr = alloca i32*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %p = alloca i32, align 4
  %sample = alloca [4 x [2 x i16*]], align 16
  %lbd = alloca i32, align 4
  %bits = alloca i32, align 4
  %offset = alloca i32, align 4
  %transparency = alloca i32, align 4
  %ret = alloca i32, align 4
  %temp = alloca i16*, align 8
  %g = alloca i32, align 4
  %b = alloca i32, align 4
  %r = alloca i32, align 4
  %a = alloca i32, align 4
  store %struct.FFV1Context* %s, %struct.FFV1Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %s.addr, metadata !8153, metadata !1706), !dbg !8154
  store i8** %src, i8*** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %src.addr, metadata !8155, metadata !1706), !dbg !8156
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !8157, metadata !1706), !dbg !8158
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !8159, metadata !1706), !dbg !8160
  store i32* %stride, i32** %stride.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %stride.addr, metadata !8161, metadata !1706), !dbg !8162
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8163, metadata !1706), !dbg !8164
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8165, metadata !1706), !dbg !8166
  call void @llvm.dbg.declare(metadata i32* %p, metadata !8167, metadata !1706), !dbg !8168
  call void @llvm.dbg.declare(metadata [4 x [2 x i16*]]* %sample, metadata !8169, metadata !1706), !dbg !8171
  call void @llvm.dbg.declare(metadata i32* %lbd, metadata !8172, metadata !1706), !dbg !8173
  %0 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8174
  %avctx = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %0, i32 0, i32 1, !dbg !8175
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !8175
  %bits_per_raw_sample = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i32 0, i32 143, !dbg !8176
  %2 = load i32, i32* %bits_per_raw_sample, align 4, !dbg !8176
  %cmp = icmp sle i32 %2, 8, !dbg !8177
  %conv = zext i1 %cmp to i32, !dbg !8177
  store i32 %conv, i32* %lbd, align 4, !dbg !8173
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !8178, metadata !1706), !dbg !8179
  %3 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8180
  %avctx1 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %3, i32 0, i32 1, !dbg !8181
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !8181
  %bits_per_raw_sample2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 143, !dbg !8182
  %5 = load i32, i32* %bits_per_raw_sample2, align 4, !dbg !8182
  %cmp3 = icmp sgt i32 %5, 0, !dbg !8183
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !8180

cond.true:                                        ; preds = %entry
  %6 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8184
  %avctx5 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %6, i32 0, i32 1, !dbg !8186
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx5, align 8, !dbg !8186
  %bits_per_raw_sample6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 143, !dbg !8187
  %8 = load i32, i32* %bits_per_raw_sample6, align 4, !dbg !8187
  br label %cond.end, !dbg !8188

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8189

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 8, %cond.false ], !dbg !8191
  store i32 %cond, i32* %bits, align 4, !dbg !8193
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8194, metadata !1706), !dbg !8195
  %9 = load i32, i32* %bits, align 4, !dbg !8196
  %shl = shl i32 1, %9, !dbg !8197
  store i32 %shl, i32* %offset, align 4, !dbg !8195
  call void @llvm.dbg.declare(metadata i32* %transparency, metadata !8198, metadata !1706), !dbg !8199
  %10 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8200
  %transparency7 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %10, i32 0, i32 14, !dbg !8201
  %11 = load i32, i32* %transparency7, align 4, !dbg !8201
  store i32 %11, i32* %transparency, align 4, !dbg !8199
  store i32 0, i32* %x, align 4, !dbg !8202
  br label %for.cond, !dbg !8204

for.cond:                                         ; preds = %for.inc, %cond.end
  %12 = load i32, i32* %x, align 4, !dbg !8205
  %cmp8 = icmp slt i32 %12, 4, !dbg !8208
  br i1 %cmp8, label %for.body, label %for.end, !dbg !8209

for.body:                                         ; preds = %for.cond
  %13 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8210
  %sample_buffer = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %13, i32 0, i32 33, !dbg !8212
  %14 = load i16*, i16** %sample_buffer, align 8, !dbg !8212
  %15 = load i32, i32* %x, align 4, !dbg !8213
  %mul = mul nsw i32 %15, 2, !dbg !8214
  %16 = load i32, i32* %w.addr, align 4, !dbg !8215
  %add = add nsw i32 %16, 6, !dbg !8216
  %mul10 = mul nsw i32 %mul, %add, !dbg !8217
  %idx.ext = sext i32 %mul10 to i64, !dbg !8218
  %add.ptr = getelementptr inbounds i16, i16* %14, i64 %idx.ext, !dbg !8218
  %add.ptr11 = getelementptr inbounds i16, i16* %add.ptr, i64 3, !dbg !8219
  %17 = load i32, i32* %x, align 4, !dbg !8220
  %idxprom = sext i32 %17 to i64, !dbg !8221
  %arrayidx = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 %idxprom, !dbg !8221
  %arrayidx12 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx, i64 0, i64 0, !dbg !8221
  store i16* %add.ptr11, i16** %arrayidx12, align 16, !dbg !8222
  %18 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8223
  %sample_buffer13 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %18, i32 0, i32 33, !dbg !8224
  %19 = load i16*, i16** %sample_buffer13, align 8, !dbg !8224
  %20 = load i32, i32* %x, align 4, !dbg !8225
  %mul14 = mul nsw i32 %20, 2, !dbg !8226
  %add15 = add nsw i32 %mul14, 1, !dbg !8227
  %21 = load i32, i32* %w.addr, align 4, !dbg !8228
  %add16 = add nsw i32 %21, 6, !dbg !8229
  %mul17 = mul nsw i32 %add15, %add16, !dbg !8230
  %idx.ext18 = sext i32 %mul17 to i64, !dbg !8231
  %add.ptr19 = getelementptr inbounds i16, i16* %19, i64 %idx.ext18, !dbg !8231
  %add.ptr20 = getelementptr inbounds i16, i16* %add.ptr19, i64 3, !dbg !8232
  %22 = load i32, i32* %x, align 4, !dbg !8233
  %idxprom21 = sext i32 %22 to i64, !dbg !8234
  %arrayidx22 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 %idxprom21, !dbg !8234
  %arrayidx23 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx22, i64 0, i64 1, !dbg !8234
  store i16* %add.ptr20, i16** %arrayidx23, align 8, !dbg !8235
  br label %for.inc, !dbg !8236

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %x, align 4, !dbg !8237
  %inc = add nsw i32 %23, 1, !dbg !8237
  store i32 %inc, i32* %x, align 4, !dbg !8237
  br label %for.cond, !dbg !8239, !llvm.loop !8240

for.end:                                          ; preds = %for.cond
  %24 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8242
  %run_index = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %24, i32 0, i32 31, !dbg !8243
  store i32 0, i32* %run_index, align 8, !dbg !8244
  %25 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8245
  %sample_buffer24 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %25, i32 0, i32 33, !dbg !8246
  %26 = load i16*, i16** %sample_buffer24, align 8, !dbg !8246
  %27 = bitcast i16* %26 to i8*, !dbg !8247
  %28 = load i32, i32* %w.addr, align 4, !dbg !8248
  %add25 = add nsw i32 %28, 6, !dbg !8249
  %mul26 = mul nsw i32 8, %add25, !dbg !8250
  %conv27 = sext i32 %mul26 to i64, !dbg !8251
  %mul28 = mul i64 %conv27, 2, !dbg !8252
  call void @llvm.memset.p0i8.i64(i8* %27, i8 0, i64 %mul28, i32 2, i1 false), !dbg !8247
  store i32 0, i32* %y, align 4, !dbg !8253
  br label %for.cond29, !dbg !8254

for.cond29:                                       ; preds = %for.inc218, %for.end
  %29 = load i32, i32* %y, align 4, !dbg !8255
  %30 = load i32, i32* %h.addr, align 4, !dbg !8257
  %cmp30 = icmp slt i32 %29, %30, !dbg !8258
  br i1 %cmp30, label %for.body32, label %for.end220, !dbg !8259

for.body32:                                       ; preds = %for.cond29
  store i32 0, i32* %p, align 4, !dbg !8260
  br label %for.cond33, !dbg !8261

for.cond33:                                       ; preds = %for.inc87, %for.body32
  %31 = load i32, i32* %p, align 4, !dbg !8262
  %32 = load i32, i32* %transparency, align 4, !dbg !8264
  %add34 = add nsw i32 3, %32, !dbg !8265
  %cmp35 = icmp slt i32 %31, %add34, !dbg !8266
  br i1 %cmp35, label %for.body37, label %for.end89, !dbg !8267

for.body37:                                       ; preds = %for.cond33
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8268, metadata !1706), !dbg !8269
  call void @llvm.dbg.declare(metadata i16** %temp, metadata !8270, metadata !1706), !dbg !8271
  %33 = load i32, i32* %p, align 4, !dbg !8272
  %idxprom38 = sext i32 %33 to i64, !dbg !8273
  %arrayidx39 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 %idxprom38, !dbg !8273
  %arrayidx40 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx39, i64 0, i64 0, !dbg !8273
  %34 = load i16*, i16** %arrayidx40, align 16, !dbg !8273
  store i16* %34, i16** %temp, align 8, !dbg !8271
  %35 = load i32, i32* %p, align 4, !dbg !8274
  %idxprom41 = sext i32 %35 to i64, !dbg !8275
  %arrayidx42 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 %idxprom41, !dbg !8275
  %arrayidx43 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx42, i64 0, i64 1, !dbg !8275
  %36 = load i16*, i16** %arrayidx43, align 8, !dbg !8275
  %37 = load i32, i32* %p, align 4, !dbg !8276
  %idxprom44 = sext i32 %37 to i64, !dbg !8277
  %arrayidx45 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 %idxprom44, !dbg !8277
  %arrayidx46 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx45, i64 0, i64 0, !dbg !8277
  store i16* %36, i16** %arrayidx46, align 16, !dbg !8278
  %38 = load i16*, i16** %temp, align 8, !dbg !8279
  %39 = load i32, i32* %p, align 4, !dbg !8280
  %idxprom47 = sext i32 %39 to i64, !dbg !8281
  %arrayidx48 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 %idxprom47, !dbg !8281
  %arrayidx49 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx48, i64 0, i64 1, !dbg !8281
  store i16* %38, i16** %arrayidx49, align 8, !dbg !8282
  %40 = load i32, i32* %p, align 4, !dbg !8283
  %idxprom50 = sext i32 %40 to i64, !dbg !8284
  %arrayidx51 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 %idxprom50, !dbg !8284
  %arrayidx52 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx51, i64 0, i64 0, !dbg !8284
  %41 = load i16*, i16** %arrayidx52, align 16, !dbg !8284
  %arrayidx53 = getelementptr inbounds i16, i16* %41, i64 0, !dbg !8284
  %42 = load i16, i16* %arrayidx53, align 2, !dbg !8284
  %43 = load i32, i32* %p, align 4, !dbg !8285
  %idxprom54 = sext i32 %43 to i64, !dbg !8286
  %arrayidx55 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 %idxprom54, !dbg !8286
  %arrayidx56 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx55, i64 0, i64 1, !dbg !8286
  %44 = load i16*, i16** %arrayidx56, align 8, !dbg !8286
  %arrayidx57 = getelementptr inbounds i16, i16* %44, i64 -1, !dbg !8286
  store i16 %42, i16* %arrayidx57, align 2, !dbg !8287
  %45 = load i32, i32* %w.addr, align 4, !dbg !8288
  %sub = sub nsw i32 %45, 1, !dbg !8289
  %idxprom58 = sext i32 %sub to i64, !dbg !8290
  %46 = load i32, i32* %p, align 4, !dbg !8291
  %idxprom59 = sext i32 %46 to i64, !dbg !8290
  %arrayidx60 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 %idxprom59, !dbg !8290
  %arrayidx61 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx60, i64 0, i64 0, !dbg !8290
  %47 = load i16*, i16** %arrayidx61, align 16, !dbg !8290
  %arrayidx62 = getelementptr inbounds i16, i16* %47, i64 %idxprom58, !dbg !8290
  %48 = load i16, i16* %arrayidx62, align 2, !dbg !8290
  %49 = load i32, i32* %w.addr, align 4, !dbg !8292
  %idxprom63 = sext i32 %49 to i64, !dbg !8293
  %50 = load i32, i32* %p, align 4, !dbg !8294
  %idxprom64 = sext i32 %50 to i64, !dbg !8293
  %arrayidx65 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 %idxprom64, !dbg !8293
  %arrayidx66 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx65, i64 0, i64 0, !dbg !8293
  %51 = load i16*, i16** %arrayidx66, align 16, !dbg !8293
  %arrayidx67 = getelementptr inbounds i16, i16* %51, i64 %idxprom63, !dbg !8293
  store i16 %48, i16* %arrayidx67, align 2, !dbg !8295
  %52 = load i32, i32* %lbd, align 4, !dbg !8296
  %tobool = icmp ne i32 %52, 0, !dbg !8296
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8297

land.lhs.true:                                    ; preds = %for.body37
  %53 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8298
  %slice_coding_mode = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %53, i32 0, i32 55, !dbg !8300
  %54 = load i32, i32* %slice_coding_mode, align 4, !dbg !8300
  %cmp68 = icmp eq i32 %54, 0, !dbg !8301
  br i1 %cmp68, label %if.then, label %if.else, !dbg !8302

if.then:                                          ; preds = %land.lhs.true
  %55 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8303
  %56 = load i32, i32* %w.addr, align 4, !dbg !8304
  %57 = load i32, i32* %p, align 4, !dbg !8305
  %idxprom70 = sext i32 %57 to i64, !dbg !8306
  %arrayidx71 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 %idxprom70, !dbg !8306
  %arraydecay = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx71, i32 0, i32 0, !dbg !8306
  %58 = load i32, i32* %p, align 4, !dbg !8307
  %add72 = add nsw i32 %58, 1, !dbg !8308
  %div = sdiv i32 %add72, 2, !dbg !8309
  store %struct.FFV1Context* %55, %struct.FFV1Context** %s.addr.i, align 8, !dbg !8310
  store i32 %56, i32* %w.addr.i, align 4, !dbg !8310
  store i16** %arraydecay, i16*** %sample.addr.i, align 8, !dbg !8310
  store i32 %div, i32* %plane_index.addr.i, align 4, !dbg !8310
  store i32 9, i32* %bits.addr.i, align 4, !dbg !8310
  %59 = load i32, i32* %plane_index.addr.i, align 4, !dbg !8311
  %idxprom.i = sext i32 %59 to i64, !dbg !8312
  %60 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !8312
  %plane.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %60, i32 0, i32 25, !dbg !8313
  %arrayidx.i = getelementptr inbounds [4 x %struct.PlaneContext], [4 x %struct.PlaneContext]* %plane.i, i64 0, i64 %idxprom.i, !dbg !8312
  store %struct.PlaneContext* %arrayidx.i, %struct.PlaneContext** %p.i, align 8, !dbg !8141
  %61 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !8314
  %c1.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %61, i32 0, i32 2, !dbg !8315
  store %struct.RangeCoder* %c1.i, %struct.RangeCoder** %c.i, align 8, !dbg !8142
  store i32 0, i32* %run_count.i, align 4, !dbg !8144
  store i32 0, i32* %run_mode.i, align 4, !dbg !8145
  %62 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !8316
  %run_index2.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %62, i32 0, i32 31, !dbg !8317
  %63 = load i32, i32* %run_index2.i, align 8, !dbg !8317
  store i32 %63, i32* %run_index.i, align 4, !dbg !8146
  %64 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !8318
  %call.i = call i32 @is_input_end(%struct.FFV1Context* %64) #12, !dbg !8319
  %tobool.i = icmp ne i32 %call.i, 0, !dbg !8319
  br i1 %tobool.i, label %if.then.i, label %if.end.i, !dbg !8320

if.then.i:                                        ; preds = %if.then
  store i32 -1094995529, i32* %retval.i, align 4, !dbg !8321
  br label %decode_line.exit, !dbg !8321

if.end.i:                                         ; preds = %if.then
  %65 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !8322
  %slice_coding_mode.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %65, i32 0, i32 55, !dbg !8323
  %66 = load i32, i32* %slice_coding_mode.i, align 4, !dbg !8323
  %cmp.i = icmp eq i32 %66, 1, !dbg !8324
  br i1 %cmp.i, label %if.then3.i, label %if.end16.i, !dbg !8325

if.then3.i:                                       ; preds = %if.end.i
  store i32 0, i32* %x.i, align 4, !dbg !8326
  br label %for.cond.i, !dbg !8327

for.cond.i:                                       ; preds = %for.end.i, %if.then3.i
  %67 = load i32, i32* %x.i, align 4, !dbg !8328
  %68 = load i32, i32* %w.addr.i, align 4, !dbg !8329
  %cmp4.i = icmp slt i32 %67, %68, !dbg !8330
  br i1 %cmp4.i, label %for.body.i, label %for.end15.i, !dbg !8331

for.body.i:                                       ; preds = %for.cond.i
  store i32 0, i32* %v.i, align 4, !dbg !8148
  store i32 0, i32* %i.i, align 4, !dbg !8332
  br label %for.cond5.i, !dbg !8333

for.cond5.i:                                      ; preds = %for.body7.i, %for.body.i
  %69 = load i32, i32* %i.i, align 4, !dbg !8334
  %70 = load i32, i32* %bits.addr.i, align 4, !dbg !8335
  %cmp6.i = icmp slt i32 %69, %70, !dbg !8336
  br i1 %cmp6.i, label %for.body7.i, label %for.end.i, !dbg !8337

for.body7.i:                                      ; preds = %for.cond5.i
  store i8 -128, i8* %state.i, align 1, !dbg !8149
  %71 = load i32, i32* %v.i, align 4, !dbg !8338
  %72 = load %struct.RangeCoder*, %struct.RangeCoder** %c.i, align 8, !dbg !8339
  %call8.i = call i32 @get_rac(%struct.RangeCoder* %72, i8* %state.i) #12, !dbg !8340
  %add.i = add nsw i32 %71, %call8.i, !dbg !8341
  %73 = load i32, i32* %v.i, align 4, !dbg !8342
  %add9.i = add nsw i32 %73, %add.i, !dbg !8342
  store i32 %add9.i, i32* %v.i, align 4, !dbg !8342
  %74 = load i32, i32* %i.i, align 4, !dbg !8343
  %inc.i = add nsw i32 %74, 1, !dbg !8343
  store i32 %inc.i, i32* %i.i, align 4, !dbg !8343
  br label %for.cond5.i, !dbg !8344, !llvm.loop !6720

for.end.i:                                        ; preds = %for.cond5.i
  %75 = load i32, i32* %v.i, align 4, !dbg !8345
  %conv.i = trunc i32 %75 to i16, !dbg !8345
  %76 = load i32, i32* %x.i, align 4, !dbg !8346
  %idxprom10.i = sext i32 %76 to i64, !dbg !8347
  %77 = load i16**, i16*** %sample.addr.i, align 8, !dbg !8347
  %arrayidx11.i = getelementptr inbounds i16*, i16** %77, i64 1, !dbg !8347
  %78 = load i16*, i16** %arrayidx11.i, align 8, !dbg !8347
  %arrayidx12.i = getelementptr inbounds i16, i16* %78, i64 %idxprom10.i, !dbg !8347
  store i16 %conv.i, i16* %arrayidx12.i, align 2, !dbg !8348
  %79 = load i32, i32* %x.i, align 4, !dbg !8349
  %inc14.i = add nsw i32 %79, 1, !dbg !8349
  store i32 %inc14.i, i32* %x.i, align 4, !dbg !8349
  br label %for.cond.i, !dbg !8350, !llvm.loop !6729

for.end15.i:                                      ; preds = %for.cond.i
  store i32 0, i32* %retval.i, align 4, !dbg !8351
  br label %decode_line.exit, !dbg !8351

if.end16.i:                                       ; preds = %if.end.i
  store i32 0, i32* %x.i, align 4, !dbg !8352
  br label %for.cond17.i, !dbg !8353

for.cond17.i:                                     ; preds = %if.end117.i, %if.end16.i
  %80 = load i32, i32* %x.i, align 4, !dbg !8354
  %81 = load i32, i32* %w.addr.i, align 4, !dbg !8355
  %cmp18.i = icmp slt i32 %80, %81, !dbg !8356
  br i1 %cmp18.i, label %for.body20.i, label %for.end133.i, !dbg !8357

for.body20.i:                                     ; preds = %for.cond17.i
  %82 = load i32, i32* %x.i, align 4, !dbg !8358
  %and.i = and i32 %82, 1023, !dbg !8359
  %tobool21.i = icmp ne i32 %and.i, 0, !dbg !8359
  br i1 %tobool21.i, label %if.end27.i, label %if.then22.i, !dbg !8360

if.then22.i:                                      ; preds = %for.body20.i
  %83 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !8361
  %call23.i = call i32 @is_input_end(%struct.FFV1Context* %83) #12, !dbg !8362
  %tobool24.i = icmp ne i32 %call23.i, 0, !dbg !8362
  br i1 %tobool24.i, label %if.then25.i, label %if.end26.i, !dbg !8363

if.then25.i:                                      ; preds = %if.then22.i
  store i32 -1094995529, i32* %retval.i, align 4, !dbg !8364
  br label %decode_line.exit, !dbg !8364

if.end26.i:                                       ; preds = %if.then22.i
  br label %if.end27.i, !dbg !8365

if.end27.i:                                       ; preds = %if.end26.i, %for.body20.i
  %84 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i, align 8, !dbg !8366
  %85 = load i16**, i16*** %sample.addr.i, align 8, !dbg !8367
  %arrayidx28.i = getelementptr inbounds i16*, i16** %85, i64 1, !dbg !8367
  %86 = load i16*, i16** %arrayidx28.i, align 8, !dbg !8367
  %87 = load i32, i32* %x.i, align 4, !dbg !8368
  %idx.ext.i = sext i32 %87 to i64, !dbg !8369
  %add.ptr.i = getelementptr inbounds i16, i16* %86, i64 %idx.ext.i, !dbg !8369
  %88 = load i16**, i16*** %sample.addr.i, align 8, !dbg !8370
  %89 = load i16*, i16** %88, align 8, !dbg !8370
  %90 = load i32, i32* %x.i, align 4, !dbg !8371
  %idx.ext30.i = sext i32 %90 to i64, !dbg !8372
  %add.ptr31.i = getelementptr inbounds i16, i16* %89, i64 %idx.ext30.i, !dbg !8372
  %91 = load i16**, i16*** %sample.addr.i, align 8, !dbg !8373
  %arrayidx32.i = getelementptr inbounds i16*, i16** %91, i64 1, !dbg !8373
  %92 = load i16*, i16** %arrayidx32.i, align 8, !dbg !8373
  %93 = load i32, i32* %x.i, align 4, !dbg !8374
  %idx.ext33.i = sext i32 %93 to i64, !dbg !8375
  %add.ptr34.i = getelementptr inbounds i16, i16* %92, i64 %idx.ext33.i, !dbg !8375
  %call35.i = call i32 @get_context(%struct.PlaneContext* %84, i16* %add.ptr.i, i16* %add.ptr31.i, i16* %add.ptr34.i) #12, !dbg !8376
  store i32 %call35.i, i32* %context.i, align 4, !dbg !8377
  %94 = load i32, i32* %context.i, align 4, !dbg !8378
  %cmp36.i = icmp slt i32 %94, 0, !dbg !8379
  br i1 %cmp36.i, label %if.then38.i, label %if.else.i, !dbg !8380

if.then38.i:                                      ; preds = %if.end27.i
  %95 = load i32, i32* %context.i, align 4, !dbg !8381
  %sub.i = sub nsw i32 0, %95, !dbg !8382
  store i32 %sub.i, i32* %context.i, align 4, !dbg !8383
  store i32 1, i32* %sign.i, align 4, !dbg !8384
  br label %if.end39.i, !dbg !8385

if.else.i:                                        ; preds = %if.end27.i
  store i32 0, i32* %sign.i, align 4, !dbg !8386
  br label %if.end39.i, !dbg !8310

if.end39.i:                                       ; preds = %if.else.i, %if.then38.i
  %96 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !8387
  %ac.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %96, i32 0, i32 23, !dbg !8388
  %97 = load i32, i32* %ac.i, align 4, !dbg !8388
  %cmp40.i = icmp ne i32 %97, 0, !dbg !8389
  br i1 %cmp40.i, label %if.then42.i, label %if.else47.i, !dbg !8390

if.then42.i:                                      ; preds = %if.end39.i
  %98 = load %struct.RangeCoder*, %struct.RangeCoder** %c.i, align 8, !dbg !8391
  %99 = load i32, i32* %context.i, align 4, !dbg !8392
  %idxprom43.i = sext i32 %99 to i64, !dbg !8393
  %100 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i, align 8, !dbg !8393
  %state44.i = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %100, i32 0, i32 3, !dbg !8394
  %101 = load [32 x i8]*, [32 x i8]** %state44.i, align 8, !dbg !8394
  %arrayidx45.i = getelementptr inbounds [32 x i8], [32 x i8]* %101, i64 %idxprom43.i, !dbg !8393
  %arraydecay.i = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx45.i, i32 0, i32 0, !dbg !8393
  %call46.i = call i32 @get_symbol_inline(%struct.RangeCoder* %98, i8* %arraydecay.i, i32 1) #12, !dbg !8395
  store i32 %call46.i, i32* %diff.i, align 4, !dbg !8396
  br label %if.end113.i, !dbg !8397

if.else47.i:                                      ; preds = %if.end39.i
  %102 = load i32, i32* %context.i, align 4, !dbg !8398
  %cmp48.i = icmp eq i32 %102, 0, !dbg !8399
  br i1 %cmp48.i, label %land.lhs.true.i, label %if.end53.i, !dbg !8400

land.lhs.true.i:                                  ; preds = %if.else47.i
  %103 = load i32, i32* %run_mode.i, align 4, !dbg !8401
  %cmp50.i = icmp eq i32 %103, 0, !dbg !8402
  br i1 %cmp50.i, label %if.then52.i, label %if.end53.i, !dbg !8403

if.then52.i:                                      ; preds = %land.lhs.true.i
  store i32 1, i32* %run_mode.i, align 4, !dbg !8404
  br label %if.end53.i, !dbg !8405

if.end53.i:                                       ; preds = %if.then52.i, %land.lhs.true.i, %if.else47.i
  %104 = load i32, i32* %run_mode.i, align 4, !dbg !8406
  %tobool54.i = icmp ne i32 %104, 0, !dbg !8406
  br i1 %tobool54.i, label %if.then55.i, label %if.else106.i, !dbg !8407

if.then55.i:                                      ; preds = %if.end53.i
  %105 = load i32, i32* %run_count.i, align 4, !dbg !8408
  %cmp56.i = icmp eq i32 %105, 0, !dbg !8409
  br i1 %cmp56.i, label %land.lhs.true58.i, label %if.end90.i, !dbg !8410

land.lhs.true58.i:                                ; preds = %if.then55.i
  %106 = load i32, i32* %run_mode.i, align 4, !dbg !8411
  %cmp59.i = icmp eq i32 %106, 1, !dbg !8412
  br i1 %cmp59.i, label %if.then61.i, label %if.end90.i, !dbg !8413

if.then61.i:                                      ; preds = %land.lhs.true58.i
  %107 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !8414
  %gb.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %107, i32 0, i32 3, !dbg !8415
  %call62.i = call i32 @get_bits1(%struct.GetBitContext* %gb.i) #12, !dbg !8416
  %tobool63.i = icmp ne i32 %call62.i, 0, !dbg !8416
  br i1 %tobool63.i, label %if.then64.i, label %if.else74.i, !dbg !8417

if.then64.i:                                      ; preds = %if.then61.i
  %108 = load i32, i32* %run_index.i, align 4, !dbg !8418
  %idxprom65.i = sext i32 %108 to i64, !dbg !8419
  %arrayidx66.i = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom65.i, !dbg !8419
  %109 = load i8, i8* %arrayidx66.i, align 1, !dbg !8419
  %conv67.i = zext i8 %109 to i32, !dbg !8419
  %shl.i = shl i32 1, %conv67.i, !dbg !8420
  store i32 %shl.i, i32* %run_count.i, align 4, !dbg !8421
  %110 = load i32, i32* %x.i, align 4, !dbg !8422
  %111 = load i32, i32* %run_count.i, align 4, !dbg !8423
  %add68.i = add nsw i32 %110, %111, !dbg !8424
  %112 = load i32, i32* %w.addr.i, align 4, !dbg !8425
  %cmp69.i = icmp sle i32 %add68.i, %112, !dbg !8426
  br i1 %cmp69.i, label %if.then71.i, label %if.end73.i, !dbg !8427

if.then71.i:                                      ; preds = %if.then64.i
  %113 = load i32, i32* %run_index.i, align 4, !dbg !8428
  %inc72.i = add nsw i32 %113, 1, !dbg !8428
  store i32 %inc72.i, i32* %run_index.i, align 4, !dbg !8428
  br label %if.end73.i, !dbg !8429

if.end73.i:                                       ; preds = %if.then71.i, %if.then64.i
  br label %if.end89.i, !dbg !8430

if.else74.i:                                      ; preds = %if.then61.i
  %114 = load i32, i32* %run_index.i, align 4, !dbg !8431
  %idxprom75.i = sext i32 %114 to i64, !dbg !8432
  %arrayidx76.i = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom75.i, !dbg !8432
  %115 = load i8, i8* %arrayidx76.i, align 1, !dbg !8432
  %tobool77.i = icmp ne i8 %115, 0, !dbg !8432
  br i1 %tobool77.i, label %if.then78.i, label %if.else84.i, !dbg !8433

if.then78.i:                                      ; preds = %if.else74.i
  %116 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !8434
  %gb79.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %116, i32 0, i32 3, !dbg !8435
  %117 = load i32, i32* %run_index.i, align 4, !dbg !8436
  %idxprom80.i = sext i32 %117 to i64, !dbg !8437
  %arrayidx81.i = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom80.i, !dbg !8437
  %118 = load i8, i8* %arrayidx81.i, align 1, !dbg !8437
  %conv82.i = zext i8 %118 to i32, !dbg !8437
  %call83.i = call i32 @get_bits(%struct.GetBitContext* %gb79.i, i32 %conv82.i) #12, !dbg !8438
  store i32 %call83.i, i32* %run_count.i, align 4, !dbg !8439
  br label %if.end85.i, !dbg !8440

if.else84.i:                                      ; preds = %if.else74.i
  store i32 0, i32* %run_count.i, align 4, !dbg !8441
  br label %if.end85.i, !dbg !8310

if.end85.i:                                       ; preds = %if.else84.i, %if.then78.i
  %119 = load i32, i32* %run_index.i, align 4, !dbg !8442
  %tobool86.i = icmp ne i32 %119, 0, !dbg !8442
  br i1 %tobool86.i, label %if.then87.i, label %if.end88.i, !dbg !8443

if.then87.i:                                      ; preds = %if.end85.i
  %120 = load i32, i32* %run_index.i, align 4, !dbg !8444
  %dec.i = add nsw i32 %120, -1, !dbg !8444
  store i32 %dec.i, i32* %run_index.i, align 4, !dbg !8444
  br label %if.end88.i, !dbg !8445

if.end88.i:                                       ; preds = %if.then87.i, %if.end85.i
  store i32 2, i32* %run_mode.i, align 4, !dbg !8446
  br label %if.end89.i, !dbg !8310

if.end89.i:                                       ; preds = %if.end88.i, %if.end73.i
  br label %if.end90.i, !dbg !8447

if.end90.i:                                       ; preds = %if.end89.i, %land.lhs.true58.i, %if.then55.i
  %121 = load i32, i32* %run_count.i, align 4, !dbg !8448
  %dec91.i = add nsw i32 %121, -1, !dbg !8448
  store i32 %dec91.i, i32* %run_count.i, align 4, !dbg !8448
  %122 = load i32, i32* %run_count.i, align 4, !dbg !8449
  %cmp92.i = icmp slt i32 %122, 0, !dbg !8450
  br i1 %cmp92.i, label %if.then94.i, label %if.else104.i, !dbg !8451

if.then94.i:                                      ; preds = %if.end90.i
  store i32 0, i32* %run_mode.i, align 4, !dbg !8452
  store i32 0, i32* %run_count.i, align 4, !dbg !8453
  %123 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !8454
  %gb95.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %123, i32 0, i32 3, !dbg !8455
  %124 = load i32, i32* %context.i, align 4, !dbg !8456
  %idxprom96.i = sext i32 %124 to i64, !dbg !8457
  %125 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i, align 8, !dbg !8457
  %vlc_state.i = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %125, i32 0, i32 4, !dbg !8458
  %126 = load %struct.VlcState*, %struct.VlcState** %vlc_state.i, align 8, !dbg !8458
  %arrayidx97.i = getelementptr inbounds %struct.VlcState, %struct.VlcState* %126, i64 %idxprom96.i, !dbg !8457
  %127 = load i32, i32* %bits.addr.i, align 4, !dbg !8459
  %call98.i = call i32 @get_vlc_symbol(%struct.GetBitContext* %gb95.i, %struct.VlcState* %arrayidx97.i, i32 %127) #12, !dbg !8460
  store i32 %call98.i, i32* %diff.i, align 4, !dbg !8461
  %128 = load i32, i32* %diff.i, align 4, !dbg !8462
  %cmp99.i = icmp sge i32 %128, 0, !dbg !8463
  br i1 %cmp99.i, label %if.then101.i, label %if.end103.i, !dbg !8464

if.then101.i:                                     ; preds = %if.then94.i
  %129 = load i32, i32* %diff.i, align 4, !dbg !8465
  %inc102.i = add nsw i32 %129, 1, !dbg !8465
  store i32 %inc102.i, i32* %diff.i, align 4, !dbg !8465
  br label %if.end103.i, !dbg !8466

if.end103.i:                                      ; preds = %if.then101.i, %if.then94.i
  br label %if.end105.i, !dbg !8467

if.else104.i:                                     ; preds = %if.end90.i
  store i32 0, i32* %diff.i, align 4, !dbg !8468
  br label %if.end105.i, !dbg !8310

if.end105.i:                                      ; preds = %if.else104.i, %if.end103.i
  br label %if.end112.i, !dbg !8469

if.else106.i:                                     ; preds = %if.end53.i
  %130 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !8470
  %gb107.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %130, i32 0, i32 3, !dbg !8471
  %131 = load i32, i32* %context.i, align 4, !dbg !8472
  %idxprom108.i = sext i32 %131 to i64, !dbg !8473
  %132 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i, align 8, !dbg !8473
  %vlc_state109.i = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %132, i32 0, i32 4, !dbg !8474
  %133 = load %struct.VlcState*, %struct.VlcState** %vlc_state109.i, align 8, !dbg !8474
  %arrayidx110.i = getelementptr inbounds %struct.VlcState, %struct.VlcState* %133, i64 %idxprom108.i, !dbg !8473
  %134 = load i32, i32* %bits.addr.i, align 4, !dbg !8475
  %call111.i = call i32 @get_vlc_symbol(%struct.GetBitContext* %gb107.i, %struct.VlcState* %arrayidx110.i, i32 %134) #12, !dbg !8476
  store i32 %call111.i, i32* %diff.i, align 4, !dbg !8477
  br label %if.end112.i, !dbg !8310

if.end112.i:                                      ; preds = %if.else106.i, %if.end105.i
  br label %if.end113.i, !dbg !8310

if.end113.i:                                      ; preds = %if.end112.i, %if.then42.i
  %135 = load i32, i32* %sign.i, align 4, !dbg !8478
  %tobool114.i = icmp ne i32 %135, 0, !dbg !8478
  br i1 %tobool114.i, label %if.then115.i, label %if.end117.i, !dbg !8479

if.then115.i:                                     ; preds = %if.end113.i
  %136 = load i32, i32* %diff.i, align 4, !dbg !8480
  %sub116.i = sub i32 0, %136, !dbg !8481
  store i32 %sub116.i, i32* %diff.i, align 4, !dbg !8482
  br label %if.end117.i, !dbg !8483

if.end117.i:                                      ; preds = %if.then115.i, %if.end113.i
  %137 = load i16**, i16*** %sample.addr.i, align 8, !dbg !8484
  %arrayidx118.i = getelementptr inbounds i16*, i16** %137, i64 1, !dbg !8484
  %138 = load i16*, i16** %arrayidx118.i, align 8, !dbg !8484
  %139 = load i32, i32* %x.i, align 4, !dbg !8485
  %idx.ext119.i = sext i32 %139 to i64, !dbg !8486
  %add.ptr120.i = getelementptr inbounds i16, i16* %138, i64 %idx.ext119.i, !dbg !8486
  %140 = load i16**, i16*** %sample.addr.i, align 8, !dbg !8487
  %141 = load i16*, i16** %140, align 8, !dbg !8487
  %142 = load i32, i32* %x.i, align 4, !dbg !8488
  %idx.ext122.i = sext i32 %142 to i64, !dbg !8489
  %add.ptr123.i = getelementptr inbounds i16, i16* %141, i64 %idx.ext122.i, !dbg !8489
  %call124.i = call i32 @predict(i16* %add.ptr120.i, i16* %add.ptr123.i) #12, !dbg !8490
  %143 = load i32, i32* %diff.i, align 4, !dbg !8491
  %add125.i = add i32 %call124.i, %143, !dbg !8492
  %144 = load i32, i32* %bits.addr.i, align 4, !dbg !8493
  store i32 %add125.i, i32* %a.addr.i.i, align 4, !dbg !8494
  store i32 %144, i32* %p.addr.i.i, align 4, !dbg !8494
  %145 = load i32, i32* %a.addr.i.i, align 4, !dbg !8495
  %146 = load i32, i32* %p.addr.i.i, align 4, !dbg !8496
  %shl.i.i = shl i32 1, %146, !dbg !8497
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !8498
  %and.i.i = and i32 %145, %sub.i.i, !dbg !8499
  %conv127.i = trunc i32 %and.i.i to i16, !dbg !8500
  %147 = load i32, i32* %x.i, align 4, !dbg !8501
  %idxprom128.i = sext i32 %147 to i64, !dbg !8502
  %148 = load i16**, i16*** %sample.addr.i, align 8, !dbg !8502
  %arrayidx129.i = getelementptr inbounds i16*, i16** %148, i64 1, !dbg !8502
  %149 = load i16*, i16** %arrayidx129.i, align 8, !dbg !8502
  %arrayidx130.i = getelementptr inbounds i16, i16* %149, i64 %idxprom128.i, !dbg !8502
  store i16 %conv127.i, i16* %arrayidx130.i, align 2, !dbg !8503
  %150 = load i32, i32* %x.i, align 4, !dbg !8504
  %inc132.i = add nsw i32 %150, 1, !dbg !8504
  store i32 %inc132.i, i32* %x.i, align 4, !dbg !8504
  br label %for.cond17.i, !dbg !8505, !llvm.loop !6913

for.end133.i:                                     ; preds = %for.cond17.i
  %151 = load i32, i32* %run_index.i, align 4, !dbg !8506
  %152 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i, align 8, !dbg !8507
  %run_index134.i = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %152, i32 0, i32 31, !dbg !8508
  store i32 %151, i32* %run_index134.i, align 8, !dbg !8509
  store i32 0, i32* %retval.i, align 4, !dbg !8510
  br label %decode_line.exit, !dbg !8510

decode_line.exit:                                 ; preds = %if.then.i, %for.end15.i, %if.then25.i, %for.end133.i
  %153 = load i32, i32* %retval.i, align 4, !dbg !8511
  store i32 %153, i32* %ret, align 4, !dbg !8512
  br label %if.end, !dbg !8513

if.else:                                          ; preds = %land.lhs.true, %for.body37
  %154 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8514
  %155 = load i32, i32* %w.addr, align 4, !dbg !8515
  %156 = load i32, i32* %p, align 4, !dbg !8516
  %idxprom73 = sext i32 %156 to i64, !dbg !8517
  %arrayidx74 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 %idxprom73, !dbg !8517
  %arraydecay75 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx74, i32 0, i32 0, !dbg !8517
  %157 = load i32, i32* %p, align 4, !dbg !8518
  %add76 = add nsw i32 %157, 1, !dbg !8519
  %div77 = sdiv i32 %add76, 2, !dbg !8520
  %158 = load i32, i32* %bits, align 4, !dbg !8521
  %159 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8522
  %slice_coding_mode78 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %159, i32 0, i32 55, !dbg !8523
  %160 = load i32, i32* %slice_coding_mode78, align 4, !dbg !8523
  %cmp79 = icmp ne i32 %160, 1, !dbg !8524
  %conv80 = zext i1 %cmp79 to i32, !dbg !8524
  %add81 = add nsw i32 %158, %conv80, !dbg !8525
  store %struct.FFV1Context* %154, %struct.FFV1Context** %s.addr.i224, align 8, !dbg !8526
  store i32 %155, i32* %w.addr.i225, align 4, !dbg !8526
  store i16** %arraydecay75, i16*** %sample.addr.i226, align 8, !dbg !8526
  store i32 %div77, i32* %plane_index.addr.i227, align 4, !dbg !8526
  store i32 %add81, i32* %bits.addr.i228, align 4, !dbg !8526
  %161 = load i32, i32* %plane_index.addr.i227, align 4, !dbg !8527
  %idxprom.i241 = sext i32 %161 to i64, !dbg !8528
  %162 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i224, align 8, !dbg !8528
  %plane.i242 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %162, i32 0, i32 25, !dbg !8529
  %arrayidx.i243 = getelementptr inbounds [4 x %struct.PlaneContext], [4 x %struct.PlaneContext]* %plane.i242, i64 0, i64 %idxprom.i241, !dbg !8528
  store %struct.PlaneContext* %arrayidx.i243, %struct.PlaneContext** %p.i229, align 8, !dbg !8120
  %163 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i224, align 8, !dbg !8530
  %c1.i244 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %163, i32 0, i32 2, !dbg !8531
  store %struct.RangeCoder* %c1.i244, %struct.RangeCoder** %c.i230, align 8, !dbg !8121
  store i32 0, i32* %run_count.i232, align 4, !dbg !8123
  store i32 0, i32* %run_mode.i233, align 4, !dbg !8124
  %164 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i224, align 8, !dbg !8532
  %run_index2.i245 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %164, i32 0, i32 31, !dbg !8533
  %165 = load i32, i32* %run_index2.i245, align 8, !dbg !8533
  store i32 %165, i32* %run_index.i234, align 4, !dbg !8125
  %166 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i224, align 8, !dbg !8534
  %call.i246 = call i32 @is_input_end(%struct.FFV1Context* %166) #12, !dbg !8535
  %tobool.i247 = icmp ne i32 %call.i246, 0, !dbg !8535
  br i1 %tobool.i247, label %if.then.i248, label %if.end.i251, !dbg !8536

if.then.i248:                                     ; preds = %if.else
  store i32 -1094995529, i32* %retval.i223, align 4, !dbg !8537
  br label %decode_line.exit390, !dbg !8537

if.end.i251:                                      ; preds = %if.else
  %167 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i224, align 8, !dbg !8538
  %slice_coding_mode.i249 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %167, i32 0, i32 55, !dbg !8539
  %168 = load i32, i32* %slice_coding_mode.i249, align 4, !dbg !8539
  %cmp.i250 = icmp eq i32 %168, 1, !dbg !8540
  br i1 %cmp.i250, label %if.then3.i252, label %if.end16.i270, !dbg !8541

if.then3.i252:                                    ; preds = %if.end.i251
  store i32 0, i32* %x.i231, align 4, !dbg !8542
  br label %for.cond.i254, !dbg !8543

for.cond.i254:                                    ; preds = %for.end.i267, %if.then3.i252
  %169 = load i32, i32* %x.i231, align 4, !dbg !8544
  %170 = load i32, i32* %w.addr.i225, align 4, !dbg !8545
  %cmp4.i253 = icmp slt i32 %169, %170, !dbg !8546
  br i1 %cmp4.i253, label %for.body.i255, label %for.end15.i269, !dbg !8547

for.body.i255:                                    ; preds = %for.cond.i254
  store i32 0, i32* %v.i236, align 4, !dbg !8127
  store i32 0, i32* %i.i235, align 4, !dbg !8548
  br label %for.cond5.i257, !dbg !8549

for.cond5.i257:                                   ; preds = %for.body7.i261, %for.body.i255
  %171 = load i32, i32* %i.i235, align 4, !dbg !8550
  %172 = load i32, i32* %bits.addr.i228, align 4, !dbg !8551
  %cmp6.i256 = icmp slt i32 %171, %172, !dbg !8552
  br i1 %cmp6.i256, label %for.body7.i261, label %for.end.i267, !dbg !8553

for.body7.i261:                                   ; preds = %for.cond5.i257
  store i8 -128, i8* %state.i237, align 1, !dbg !8128
  %173 = load i32, i32* %v.i236, align 4, !dbg !8554
  %174 = load %struct.RangeCoder*, %struct.RangeCoder** %c.i230, align 8, !dbg !8555
  %call8.i258 = call i32 @get_rac(%struct.RangeCoder* %174, i8* %state.i237) #12, !dbg !8556
  %add.i259 = add nsw i32 %173, %call8.i258, !dbg !8557
  %175 = load i32, i32* %v.i236, align 4, !dbg !8558
  %add9.i260 = add nsw i32 %175, %add.i259, !dbg !8558
  store i32 %add9.i260, i32* %v.i236, align 4, !dbg !8558
  %176 = load i32, i32* %i.i235, align 4, !dbg !8559
  %inc.i262 = add nsw i32 %176, 1, !dbg !8559
  store i32 %inc.i262, i32* %i.i235, align 4, !dbg !8559
  br label %for.cond5.i257, !dbg !8560, !llvm.loop !6720

for.end.i267:                                     ; preds = %for.cond5.i257
  %177 = load i32, i32* %v.i236, align 4, !dbg !8561
  %conv.i263 = trunc i32 %177 to i16, !dbg !8561
  %178 = load i32, i32* %x.i231, align 4, !dbg !8562
  %idxprom10.i264 = sext i32 %178 to i64, !dbg !8563
  %179 = load i16**, i16*** %sample.addr.i226, align 8, !dbg !8563
  %arrayidx11.i265 = getelementptr inbounds i16*, i16** %179, i64 1, !dbg !8563
  %180 = load i16*, i16** %arrayidx11.i265, align 8, !dbg !8563
  %arrayidx12.i266 = getelementptr inbounds i16, i16* %180, i64 %idxprom10.i264, !dbg !8563
  store i16 %conv.i263, i16* %arrayidx12.i266, align 2, !dbg !8564
  %181 = load i32, i32* %x.i231, align 4, !dbg !8565
  %inc14.i268 = add nsw i32 %181, 1, !dbg !8565
  store i32 %inc14.i268, i32* %x.i231, align 4, !dbg !8565
  br label %for.cond.i254, !dbg !8566, !llvm.loop !6729

for.end15.i269:                                   ; preds = %for.cond.i254
  store i32 0, i32* %retval.i223, align 4, !dbg !8567
  br label %decode_line.exit390, !dbg !8567

if.end16.i270:                                    ; preds = %if.end.i251
  store i32 0, i32* %x.i231, align 4, !dbg !8568
  br label %for.cond17.i272, !dbg !8569

for.cond17.i272:                                  ; preds = %if.end117.i386, %if.end16.i270
  %182 = load i32, i32* %x.i231, align 4, !dbg !8570
  %183 = load i32, i32* %w.addr.i225, align 4, !dbg !8571
  %cmp18.i271 = icmp slt i32 %182, %183, !dbg !8572
  br i1 %cmp18.i271, label %for.body20.i275, label %for.end133.i389, !dbg !8573

for.body20.i275:                                  ; preds = %for.cond17.i272
  %184 = load i32, i32* %x.i231, align 4, !dbg !8574
  %and.i273 = and i32 %184, 1023, !dbg !8575
  %tobool21.i274 = icmp ne i32 %and.i273, 0, !dbg !8575
  br i1 %tobool21.i274, label %if.end27.i291, label %if.then22.i278, !dbg !8576

if.then22.i278:                                   ; preds = %for.body20.i275
  %185 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i224, align 8, !dbg !8577
  %call23.i276 = call i32 @is_input_end(%struct.FFV1Context* %185) #12, !dbg !8578
  %tobool24.i277 = icmp ne i32 %call23.i276, 0, !dbg !8578
  br i1 %tobool24.i277, label %if.then25.i279, label %if.end26.i280, !dbg !8579

if.then25.i279:                                   ; preds = %if.then22.i278
  store i32 -1094995529, i32* %retval.i223, align 4, !dbg !8580
  br label %decode_line.exit390, !dbg !8580

if.end26.i280:                                    ; preds = %if.then22.i278
  br label %if.end27.i291, !dbg !8581

if.end27.i291:                                    ; preds = %if.end26.i280, %for.body20.i275
  %186 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i229, align 8, !dbg !8582
  %187 = load i16**, i16*** %sample.addr.i226, align 8, !dbg !8583
  %arrayidx28.i281 = getelementptr inbounds i16*, i16** %187, i64 1, !dbg !8583
  %188 = load i16*, i16** %arrayidx28.i281, align 8, !dbg !8583
  %189 = load i32, i32* %x.i231, align 4, !dbg !8584
  %idx.ext.i282 = sext i32 %189 to i64, !dbg !8585
  %add.ptr.i283 = getelementptr inbounds i16, i16* %188, i64 %idx.ext.i282, !dbg !8585
  %190 = load i16**, i16*** %sample.addr.i226, align 8, !dbg !8586
  %191 = load i16*, i16** %190, align 8, !dbg !8586
  %192 = load i32, i32* %x.i231, align 4, !dbg !8587
  %idx.ext30.i284 = sext i32 %192 to i64, !dbg !8588
  %add.ptr31.i285 = getelementptr inbounds i16, i16* %191, i64 %idx.ext30.i284, !dbg !8588
  %193 = load i16**, i16*** %sample.addr.i226, align 8, !dbg !8589
  %arrayidx32.i286 = getelementptr inbounds i16*, i16** %193, i64 1, !dbg !8589
  %194 = load i16*, i16** %arrayidx32.i286, align 8, !dbg !8589
  %195 = load i32, i32* %x.i231, align 4, !dbg !8590
  %idx.ext33.i287 = sext i32 %195 to i64, !dbg !8591
  %add.ptr34.i288 = getelementptr inbounds i16, i16* %194, i64 %idx.ext33.i287, !dbg !8591
  %call35.i289 = call i32 @get_context(%struct.PlaneContext* %186, i16* %add.ptr.i283, i16* %add.ptr31.i285, i16* %add.ptr34.i288) #12, !dbg !8592
  store i32 %call35.i289, i32* %context.i239, align 4, !dbg !8593
  %196 = load i32, i32* %context.i239, align 4, !dbg !8594
  %cmp36.i290 = icmp slt i32 %196, 0, !dbg !8595
  br i1 %cmp36.i290, label %if.then38.i293, label %if.else.i294, !dbg !8596

if.then38.i293:                                   ; preds = %if.end27.i291
  %197 = load i32, i32* %context.i239, align 4, !dbg !8597
  %sub.i292 = sub nsw i32 0, %197, !dbg !8598
  store i32 %sub.i292, i32* %context.i239, align 4, !dbg !8599
  store i32 1, i32* %sign.i240, align 4, !dbg !8600
  br label %if.end39.i297, !dbg !8601

if.else.i294:                                     ; preds = %if.end27.i291
  store i32 0, i32* %sign.i240, align 4, !dbg !8602
  br label %if.end39.i297, !dbg !8526

if.end39.i297:                                    ; preds = %if.else.i294, %if.then38.i293
  %198 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i224, align 8, !dbg !8603
  %ac.i295 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %198, i32 0, i32 23, !dbg !8604
  %199 = load i32, i32* %ac.i295, align 4, !dbg !8604
  %cmp40.i296 = icmp ne i32 %199, 0, !dbg !8605
  br i1 %cmp40.i296, label %if.then42.i303, label %if.else47.i305, !dbg !8606

if.then42.i303:                                   ; preds = %if.end39.i297
  %200 = load %struct.RangeCoder*, %struct.RangeCoder** %c.i230, align 8, !dbg !8607
  %201 = load i32, i32* %context.i239, align 4, !dbg !8608
  %idxprom43.i298 = sext i32 %201 to i64, !dbg !8609
  %202 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i229, align 8, !dbg !8609
  %state44.i299 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %202, i32 0, i32 3, !dbg !8610
  %203 = load [32 x i8]*, [32 x i8]** %state44.i299, align 8, !dbg !8610
  %arrayidx45.i300 = getelementptr inbounds [32 x i8], [32 x i8]* %203, i64 %idxprom43.i298, !dbg !8609
  %arraydecay.i301 = getelementptr inbounds [32 x i8], [32 x i8]* %arrayidx45.i300, i32 0, i32 0, !dbg !8609
  %call46.i302 = call i32 @get_symbol_inline(%struct.RangeCoder* %200, i8* %arraydecay.i301, i32 1) #12, !dbg !8611
  store i32 %call46.i302, i32* %diff.i238, align 4, !dbg !8612
  br label %if.end113.i369, !dbg !8613

if.else47.i305:                                   ; preds = %if.end39.i297
  %204 = load i32, i32* %context.i239, align 4, !dbg !8614
  %cmp48.i304 = icmp eq i32 %204, 0, !dbg !8615
  br i1 %cmp48.i304, label %land.lhs.true.i307, label %if.end53.i310, !dbg !8616

land.lhs.true.i307:                               ; preds = %if.else47.i305
  %205 = load i32, i32* %run_mode.i233, align 4, !dbg !8617
  %cmp50.i306 = icmp eq i32 %205, 0, !dbg !8618
  br i1 %cmp50.i306, label %if.then52.i308, label %if.end53.i310, !dbg !8619

if.then52.i308:                                   ; preds = %land.lhs.true.i307
  store i32 1, i32* %run_mode.i233, align 4, !dbg !8620
  br label %if.end53.i310, !dbg !8621

if.end53.i310:                                    ; preds = %if.then52.i308, %land.lhs.true.i307, %if.else47.i305
  %206 = load i32, i32* %run_mode.i233, align 4, !dbg !8622
  %tobool54.i309 = icmp ne i32 %206, 0, !dbg !8622
  br i1 %tobool54.i309, label %if.then55.i312, label %if.else106.i366, !dbg !8623

if.then55.i312:                                   ; preds = %if.end53.i310
  %207 = load i32, i32* %run_count.i232, align 4, !dbg !8624
  %cmp56.i311 = icmp eq i32 %207, 0, !dbg !8625
  br i1 %cmp56.i311, label %land.lhs.true58.i314, label %if.end90.i348, !dbg !8626

land.lhs.true58.i314:                             ; preds = %if.then55.i312
  %208 = load i32, i32* %run_mode.i233, align 4, !dbg !8627
  %cmp59.i313 = icmp eq i32 %208, 1, !dbg !8628
  br i1 %cmp59.i313, label %if.then61.i318, label %if.end90.i348, !dbg !8629

if.then61.i318:                                   ; preds = %land.lhs.true58.i314
  %209 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i224, align 8, !dbg !8630
  %gb.i315 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %209, i32 0, i32 3, !dbg !8631
  %call62.i316 = call i32 @get_bits1(%struct.GetBitContext* %gb.i315) #12, !dbg !8632
  %tobool63.i317 = icmp ne i32 %call62.i316, 0, !dbg !8632
  br i1 %tobool63.i317, label %if.then64.i325, label %if.else74.i332, !dbg !8633

if.then64.i325:                                   ; preds = %if.then61.i318
  %210 = load i32, i32* %run_index.i234, align 4, !dbg !8634
  %idxprom65.i319 = sext i32 %210 to i64, !dbg !8635
  %arrayidx66.i320 = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom65.i319, !dbg !8635
  %211 = load i8, i8* %arrayidx66.i320, align 1, !dbg !8635
  %conv67.i321 = zext i8 %211 to i32, !dbg !8635
  %shl.i322 = shl i32 1, %conv67.i321, !dbg !8636
  store i32 %shl.i322, i32* %run_count.i232, align 4, !dbg !8637
  %212 = load i32, i32* %x.i231, align 4, !dbg !8638
  %213 = load i32, i32* %run_count.i232, align 4, !dbg !8639
  %add68.i323 = add nsw i32 %212, %213, !dbg !8640
  %214 = load i32, i32* %w.addr.i225, align 4, !dbg !8641
  %cmp69.i324 = icmp sle i32 %add68.i323, %214, !dbg !8642
  br i1 %cmp69.i324, label %if.then71.i327, label %if.end73.i328, !dbg !8643

if.then71.i327:                                   ; preds = %if.then64.i325
  %215 = load i32, i32* %run_index.i234, align 4, !dbg !8644
  %inc72.i326 = add nsw i32 %215, 1, !dbg !8644
  store i32 %inc72.i326, i32* %run_index.i234, align 4, !dbg !8644
  br label %if.end73.i328, !dbg !8645

if.end73.i328:                                    ; preds = %if.then71.i327, %if.then64.i325
  br label %if.end89.i345, !dbg !8646

if.else74.i332:                                   ; preds = %if.then61.i318
  %216 = load i32, i32* %run_index.i234, align 4, !dbg !8647
  %idxprom75.i329 = sext i32 %216 to i64, !dbg !8648
  %arrayidx76.i330 = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom75.i329, !dbg !8648
  %217 = load i8, i8* %arrayidx76.i330, align 1, !dbg !8648
  %tobool77.i331 = icmp ne i8 %217, 0, !dbg !8648
  br i1 %tobool77.i331, label %if.then78.i338, label %if.else84.i339, !dbg !8649

if.then78.i338:                                   ; preds = %if.else74.i332
  %218 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i224, align 8, !dbg !8650
  %gb79.i333 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %218, i32 0, i32 3, !dbg !8651
  %219 = load i32, i32* %run_index.i234, align 4, !dbg !8652
  %idxprom80.i334 = sext i32 %219 to i64, !dbg !8653
  %arrayidx81.i335 = getelementptr inbounds [41 x i8], [41 x i8]* @ff_log2_run, i64 0, i64 %idxprom80.i334, !dbg !8653
  %220 = load i8, i8* %arrayidx81.i335, align 1, !dbg !8653
  %conv82.i336 = zext i8 %220 to i32, !dbg !8653
  %call83.i337 = call i32 @get_bits(%struct.GetBitContext* %gb79.i333, i32 %conv82.i336) #12, !dbg !8654
  store i32 %call83.i337, i32* %run_count.i232, align 4, !dbg !8655
  br label %if.end85.i341, !dbg !8656

if.else84.i339:                                   ; preds = %if.else74.i332
  store i32 0, i32* %run_count.i232, align 4, !dbg !8657
  br label %if.end85.i341, !dbg !8526

if.end85.i341:                                    ; preds = %if.else84.i339, %if.then78.i338
  %221 = load i32, i32* %run_index.i234, align 4, !dbg !8658
  %tobool86.i340 = icmp ne i32 %221, 0, !dbg !8658
  br i1 %tobool86.i340, label %if.then87.i343, label %if.end88.i344, !dbg !8659

if.then87.i343:                                   ; preds = %if.end85.i341
  %222 = load i32, i32* %run_index.i234, align 4, !dbg !8660
  %dec.i342 = add nsw i32 %222, -1, !dbg !8660
  store i32 %dec.i342, i32* %run_index.i234, align 4, !dbg !8660
  br label %if.end88.i344, !dbg !8661

if.end88.i344:                                    ; preds = %if.then87.i343, %if.end85.i341
  store i32 2, i32* %run_mode.i233, align 4, !dbg !8662
  br label %if.end89.i345, !dbg !8526

if.end89.i345:                                    ; preds = %if.end88.i344, %if.end73.i328
  br label %if.end90.i348, !dbg !8663

if.end90.i348:                                    ; preds = %if.end89.i345, %land.lhs.true58.i314, %if.then55.i312
  %223 = load i32, i32* %run_count.i232, align 4, !dbg !8664
  %dec91.i346 = add nsw i32 %223, -1, !dbg !8664
  store i32 %dec91.i346, i32* %run_count.i232, align 4, !dbg !8664
  %224 = load i32, i32* %run_count.i232, align 4, !dbg !8665
  %cmp92.i347 = icmp slt i32 %224, 0, !dbg !8666
  br i1 %cmp92.i347, label %if.then94.i355, label %if.else104.i359, !dbg !8667

if.then94.i355:                                   ; preds = %if.end90.i348
  store i32 0, i32* %run_mode.i233, align 4, !dbg !8668
  store i32 0, i32* %run_count.i232, align 4, !dbg !8669
  %225 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i224, align 8, !dbg !8670
  %gb95.i349 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %225, i32 0, i32 3, !dbg !8671
  %226 = load i32, i32* %context.i239, align 4, !dbg !8672
  %idxprom96.i350 = sext i32 %226 to i64, !dbg !8673
  %227 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i229, align 8, !dbg !8673
  %vlc_state.i351 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %227, i32 0, i32 4, !dbg !8674
  %228 = load %struct.VlcState*, %struct.VlcState** %vlc_state.i351, align 8, !dbg !8674
  %arrayidx97.i352 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %228, i64 %idxprom96.i350, !dbg !8673
  %229 = load i32, i32* %bits.addr.i228, align 4, !dbg !8675
  %call98.i353 = call i32 @get_vlc_symbol(%struct.GetBitContext* %gb95.i349, %struct.VlcState* %arrayidx97.i352, i32 %229) #12, !dbg !8676
  store i32 %call98.i353, i32* %diff.i238, align 4, !dbg !8677
  %230 = load i32, i32* %diff.i238, align 4, !dbg !8678
  %cmp99.i354 = icmp sge i32 %230, 0, !dbg !8679
  br i1 %cmp99.i354, label %if.then101.i357, label %if.end103.i358, !dbg !8680

if.then101.i357:                                  ; preds = %if.then94.i355
  %231 = load i32, i32* %diff.i238, align 4, !dbg !8681
  %inc102.i356 = add nsw i32 %231, 1, !dbg !8681
  store i32 %inc102.i356, i32* %diff.i238, align 4, !dbg !8681
  br label %if.end103.i358, !dbg !8682

if.end103.i358:                                   ; preds = %if.then101.i357, %if.then94.i355
  br label %if.end105.i360, !dbg !8683

if.else104.i359:                                  ; preds = %if.end90.i348
  store i32 0, i32* %diff.i238, align 4, !dbg !8684
  br label %if.end105.i360, !dbg !8526

if.end105.i360:                                   ; preds = %if.else104.i359, %if.end103.i358
  br label %if.end112.i367, !dbg !8685

if.else106.i366:                                  ; preds = %if.end53.i310
  %232 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i224, align 8, !dbg !8686
  %gb107.i361 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %232, i32 0, i32 3, !dbg !8687
  %233 = load i32, i32* %context.i239, align 4, !dbg !8688
  %idxprom108.i362 = sext i32 %233 to i64, !dbg !8689
  %234 = load %struct.PlaneContext*, %struct.PlaneContext** %p.i229, align 8, !dbg !8689
  %vlc_state109.i363 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %234, i32 0, i32 4, !dbg !8690
  %235 = load %struct.VlcState*, %struct.VlcState** %vlc_state109.i363, align 8, !dbg !8690
  %arrayidx110.i364 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %235, i64 %idxprom108.i362, !dbg !8689
  %236 = load i32, i32* %bits.addr.i228, align 4, !dbg !8691
  %call111.i365 = call i32 @get_vlc_symbol(%struct.GetBitContext* %gb107.i361, %struct.VlcState* %arrayidx110.i364, i32 %236) #12, !dbg !8692
  store i32 %call111.i365, i32* %diff.i238, align 4, !dbg !8693
  br label %if.end112.i367, !dbg !8526

if.end112.i367:                                   ; preds = %if.else106.i366, %if.end105.i360
  br label %if.end113.i369, !dbg !8526

if.end113.i369:                                   ; preds = %if.end112.i367, %if.then42.i303
  %237 = load i32, i32* %sign.i240, align 4, !dbg !8694
  %tobool114.i368 = icmp ne i32 %237, 0, !dbg !8694
  br i1 %tobool114.i368, label %if.then115.i371, label %if.end117.i386, !dbg !8695

if.then115.i371:                                  ; preds = %if.end113.i369
  %238 = load i32, i32* %diff.i238, align 4, !dbg !8696
  %sub116.i370 = sub i32 0, %238, !dbg !8697
  store i32 %sub116.i370, i32* %diff.i238, align 4, !dbg !8698
  br label %if.end117.i386, !dbg !8699

if.end117.i386:                                   ; preds = %if.then115.i371, %if.end113.i369
  %239 = load i16**, i16*** %sample.addr.i226, align 8, !dbg !8700
  %arrayidx118.i372 = getelementptr inbounds i16*, i16** %239, i64 1, !dbg !8700
  %240 = load i16*, i16** %arrayidx118.i372, align 8, !dbg !8700
  %241 = load i32, i32* %x.i231, align 4, !dbg !8701
  %idx.ext119.i373 = sext i32 %241 to i64, !dbg !8702
  %add.ptr120.i374 = getelementptr inbounds i16, i16* %240, i64 %idx.ext119.i373, !dbg !8702
  %242 = load i16**, i16*** %sample.addr.i226, align 8, !dbg !8703
  %243 = load i16*, i16** %242, align 8, !dbg !8703
  %244 = load i32, i32* %x.i231, align 4, !dbg !8704
  %idx.ext122.i375 = sext i32 %244 to i64, !dbg !8705
  %add.ptr123.i376 = getelementptr inbounds i16, i16* %243, i64 %idx.ext122.i375, !dbg !8705
  %call124.i377 = call i32 @predict(i16* %add.ptr120.i374, i16* %add.ptr123.i376) #12, !dbg !8706
  %245 = load i32, i32* %diff.i238, align 4, !dbg !8707
  %add125.i378 = add i32 %call124.i377, %245, !dbg !8708
  %246 = load i32, i32* %bits.addr.i228, align 4, !dbg !8709
  store i32 %add125.i378, i32* %a.addr.i.i221, align 4, !dbg !8710
  store i32 %246, i32* %p.addr.i.i222, align 4, !dbg !8710
  %247 = load i32, i32* %a.addr.i.i221, align 4, !dbg !8711
  %248 = load i32, i32* %p.addr.i.i222, align 4, !dbg !8712
  %shl.i.i379 = shl i32 1, %248, !dbg !8713
  %sub.i.i380 = sub nsw i32 %shl.i.i379, 1, !dbg !8714
  %and.i.i381 = and i32 %247, %sub.i.i380, !dbg !8715
  %conv127.i382 = trunc i32 %and.i.i381 to i16, !dbg !8716
  %249 = load i32, i32* %x.i231, align 4, !dbg !8717
  %idxprom128.i383 = sext i32 %249 to i64, !dbg !8718
  %250 = load i16**, i16*** %sample.addr.i226, align 8, !dbg !8718
  %arrayidx129.i384 = getelementptr inbounds i16*, i16** %250, i64 1, !dbg !8718
  %251 = load i16*, i16** %arrayidx129.i384, align 8, !dbg !8718
  %arrayidx130.i385 = getelementptr inbounds i16, i16* %251, i64 %idxprom128.i383, !dbg !8718
  store i16 %conv127.i382, i16* %arrayidx130.i385, align 2, !dbg !8719
  %252 = load i32, i32* %x.i231, align 4, !dbg !8720
  %inc132.i387 = add nsw i32 %252, 1, !dbg !8720
  store i32 %inc132.i387, i32* %x.i231, align 4, !dbg !8720
  br label %for.cond17.i272, !dbg !8721, !llvm.loop !6913

for.end133.i389:                                  ; preds = %for.cond17.i272
  %253 = load i32, i32* %run_index.i234, align 4, !dbg !8722
  %254 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr.i224, align 8, !dbg !8723
  %run_index134.i388 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %254, i32 0, i32 31, !dbg !8724
  store i32 %253, i32* %run_index134.i388, align 8, !dbg !8725
  store i32 0, i32* %retval.i223, align 4, !dbg !8726
  br label %decode_line.exit390, !dbg !8726

decode_line.exit390:                              ; preds = %if.then.i248, %for.end15.i269, %if.then25.i279, %for.end133.i389
  %255 = load i32, i32* %retval.i223, align 4, !dbg !8727
  store i32 %255, i32* %ret, align 4, !dbg !8728
  br label %if.end

if.end:                                           ; preds = %decode_line.exit390, %decode_line.exit
  %256 = load i32, i32* %ret, align 4, !dbg !8729
  %cmp83 = icmp slt i32 %256, 0, !dbg !8731
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !8732

if.then85:                                        ; preds = %if.end
  %257 = load i32, i32* %ret, align 4, !dbg !8733
  store i32 %257, i32* %retval, align 4, !dbg !8734
  br label %return, !dbg !8734

if.end86:                                         ; preds = %if.end
  br label %for.inc87, !dbg !8735

for.inc87:                                        ; preds = %if.end86
  %258 = load i32, i32* %p, align 4, !dbg !8736
  %inc88 = add nsw i32 %258, 1, !dbg !8736
  store i32 %inc88, i32* %p, align 4, !dbg !8736
  br label %for.cond33, !dbg !8738, !llvm.loop !8739

for.end89:                                        ; preds = %for.cond33
  store i32 0, i32* %x, align 4, !dbg !8741
  br label %for.cond90, !dbg !8743

for.cond90:                                       ; preds = %for.inc215, %for.end89
  %259 = load i32, i32* %x, align 4, !dbg !8744
  %260 = load i32, i32* %w.addr, align 4, !dbg !8747
  %cmp91 = icmp slt i32 %259, %260, !dbg !8748
  br i1 %cmp91, label %for.body93, label %for.end217, !dbg !8749

for.body93:                                       ; preds = %for.cond90
  call void @llvm.dbg.declare(metadata i32* %g, metadata !8750, metadata !1706), !dbg !8752
  %261 = load i32, i32* %x, align 4, !dbg !8753
  %idxprom94 = sext i32 %261 to i64, !dbg !8754
  %arrayidx95 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 0, !dbg !8754
  %arrayidx96 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx95, i64 0, i64 1, !dbg !8754
  %262 = load i16*, i16** %arrayidx96, align 8, !dbg !8754
  %arrayidx97 = getelementptr inbounds i16, i16* %262, i64 %idxprom94, !dbg !8754
  %263 = load i16, i16* %arrayidx97, align 2, !dbg !8754
  %conv98 = sext i16 %263 to i32, !dbg !8754
  store i32 %conv98, i32* %g, align 4, !dbg !8752
  call void @llvm.dbg.declare(metadata i32* %b, metadata !8755, metadata !1706), !dbg !8756
  %264 = load i32, i32* %x, align 4, !dbg !8757
  %idxprom99 = sext i32 %264 to i64, !dbg !8758
  %arrayidx100 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 1, !dbg !8758
  %arrayidx101 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx100, i64 0, i64 1, !dbg !8758
  %265 = load i16*, i16** %arrayidx101, align 8, !dbg !8758
  %arrayidx102 = getelementptr inbounds i16, i16* %265, i64 %idxprom99, !dbg !8758
  %266 = load i16, i16* %arrayidx102, align 2, !dbg !8758
  %conv103 = sext i16 %266 to i32, !dbg !8758
  store i32 %conv103, i32* %b, align 4, !dbg !8756
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8759, metadata !1706), !dbg !8760
  %267 = load i32, i32* %x, align 4, !dbg !8761
  %idxprom104 = sext i32 %267 to i64, !dbg !8762
  %arrayidx105 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 2, !dbg !8762
  %arrayidx106 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx105, i64 0, i64 1, !dbg !8762
  %268 = load i16*, i16** %arrayidx106, align 8, !dbg !8762
  %arrayidx107 = getelementptr inbounds i16, i16* %268, i64 %idxprom104, !dbg !8762
  %269 = load i16, i16* %arrayidx107, align 2, !dbg !8762
  %conv108 = sext i16 %269 to i32, !dbg !8762
  store i32 %conv108, i32* %r, align 4, !dbg !8760
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8763, metadata !1706), !dbg !8764
  %270 = load i32, i32* %x, align 4, !dbg !8765
  %idxprom109 = sext i32 %270 to i64, !dbg !8766
  %arrayidx110 = getelementptr inbounds [4 x [2 x i16*]], [4 x [2 x i16*]]* %sample, i64 0, i64 3, !dbg !8766
  %arrayidx111 = getelementptr inbounds [2 x i16*], [2 x i16*]* %arrayidx110, i64 0, i64 1, !dbg !8766
  %271 = load i16*, i16** %arrayidx111, align 8, !dbg !8766
  %arrayidx112 = getelementptr inbounds i16, i16* %271, i64 %idxprom109, !dbg !8766
  %272 = load i16, i16* %arrayidx112, align 2, !dbg !8766
  %conv113 = sext i16 %272 to i32, !dbg !8766
  store i32 %conv113, i32* %a, align 4, !dbg !8764
  %273 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8767
  %slice_coding_mode114 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %273, i32 0, i32 55, !dbg !8769
  %274 = load i32, i32* %slice_coding_mode114, align 4, !dbg !8769
  %cmp115 = icmp ne i32 %274, 1, !dbg !8770
  br i1 %cmp115, label %if.then117, label %if.end126, !dbg !8771

if.then117:                                       ; preds = %for.body93
  %275 = load i32, i32* %offset, align 4, !dbg !8772
  %276 = load i32, i32* %b, align 4, !dbg !8774
  %sub118 = sub nsw i32 %276, %275, !dbg !8774
  store i32 %sub118, i32* %b, align 4, !dbg !8774
  %277 = load i32, i32* %offset, align 4, !dbg !8775
  %278 = load i32, i32* %r, align 4, !dbg !8776
  %sub119 = sub nsw i32 %278, %277, !dbg !8776
  store i32 %sub119, i32* %r, align 4, !dbg !8776
  %279 = load i32, i32* %b, align 4, !dbg !8777
  %280 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8778
  %slice_rct_by_coef = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %280, i32 0, i32 56, !dbg !8779
  %281 = load i32, i32* %slice_rct_by_coef, align 8, !dbg !8779
  %mul120 = mul nsw i32 %279, %281, !dbg !8780
  %282 = load i32, i32* %r, align 4, !dbg !8781
  %283 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8782
  %slice_rct_ry_coef = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %283, i32 0, i32 57, !dbg !8783
  %284 = load i32, i32* %slice_rct_ry_coef, align 4, !dbg !8783
  %mul121 = mul nsw i32 %282, %284, !dbg !8784
  %add122 = add nsw i32 %mul120, %mul121, !dbg !8785
  %shr = ashr i32 %add122, 2, !dbg !8786
  %285 = load i32, i32* %g, align 4, !dbg !8787
  %sub123 = sub nsw i32 %285, %shr, !dbg !8787
  store i32 %sub123, i32* %g, align 4, !dbg !8787
  %286 = load i32, i32* %g, align 4, !dbg !8788
  %287 = load i32, i32* %b, align 4, !dbg !8789
  %add124 = add nsw i32 %287, %286, !dbg !8789
  store i32 %add124, i32* %b, align 4, !dbg !8789
  %288 = load i32, i32* %g, align 4, !dbg !8790
  %289 = load i32, i32* %r, align 4, !dbg !8791
  %add125 = add nsw i32 %289, %288, !dbg !8791
  store i32 %add125, i32* %r, align 4, !dbg !8791
  br label %if.end126, !dbg !8792

if.end126:                                        ; preds = %if.then117, %for.body93
  %290 = load i32, i32* %lbd, align 4, !dbg !8793
  %tobool127 = icmp ne i32 %290, 0, !dbg !8793
  br i1 %tobool127, label %if.then128, label %if.else143, !dbg !8795

if.then128:                                       ; preds = %if.end126
  %291 = load i32, i32* %b, align 4, !dbg !8796
  %292 = load i32, i32* %g, align 4, !dbg !8797
  %shl129 = shl i32 %292, 8, !dbg !8798
  %add130 = add i32 %291, %shl129, !dbg !8799
  %293 = load i32, i32* %r, align 4, !dbg !8800
  %shl131 = shl i32 %293, 16, !dbg !8801
  %add132 = add i32 %add130, %shl131, !dbg !8802
  %294 = load i32, i32* %a, align 4, !dbg !8803
  %shl133 = shl i32 %294, 24, !dbg !8804
  %add134 = add i32 %add132, %shl133, !dbg !8805
  %295 = load i8**, i8*** %src.addr, align 8, !dbg !8806
  %arrayidx135 = getelementptr inbounds i8*, i8** %295, i64 0, !dbg !8806
  %296 = load i8*, i8** %arrayidx135, align 8, !dbg !8806
  %297 = load i32, i32* %x, align 4, !dbg !8807
  %mul136 = mul nsw i32 %297, 4, !dbg !8808
  %idx.ext137 = sext i32 %mul136 to i64, !dbg !8809
  %add.ptr138 = getelementptr inbounds i8, i8* %296, i64 %idx.ext137, !dbg !8809
  %298 = load i32*, i32** %stride.addr, align 8, !dbg !8810
  %arrayidx139 = getelementptr inbounds i32, i32* %298, i64 0, !dbg !8810
  %299 = load i32, i32* %arrayidx139, align 4, !dbg !8810
  %300 = load i32, i32* %y, align 4, !dbg !8811
  %mul140 = mul nsw i32 %299, %300, !dbg !8812
  %idx.ext141 = sext i32 %mul140 to i64, !dbg !8813
  %add.ptr142 = getelementptr inbounds i8, i8* %add.ptr138, i64 %idx.ext141, !dbg !8813
  %301 = bitcast i8* %add.ptr142 to i32*, !dbg !8814
  store i32 %add134, i32* %301, align 4, !dbg !8815
  br label %if.end214, !dbg !8814

if.else143:                                       ; preds = %if.end126
  %302 = load i32, i32* %transparency, align 4, !dbg !8816
  %tobool144 = icmp ne i32 %302, 0, !dbg !8816
  br i1 %tobool144, label %if.then145, label %if.else185, !dbg !8818

if.then145:                                       ; preds = %if.else143
  %303 = load i32, i32* %g, align 4, !dbg !8819
  %conv146 = trunc i32 %303 to i16, !dbg !8819
  %304 = load i8**, i8*** %src.addr, align 8, !dbg !8821
  %arrayidx147 = getelementptr inbounds i8*, i8** %304, i64 0, !dbg !8821
  %305 = load i8*, i8** %arrayidx147, align 8, !dbg !8821
  %306 = load i32, i32* %x, align 4, !dbg !8822
  %mul148 = mul nsw i32 %306, 2, !dbg !8823
  %idx.ext149 = sext i32 %mul148 to i64, !dbg !8824
  %add.ptr150 = getelementptr inbounds i8, i8* %305, i64 %idx.ext149, !dbg !8824
  %307 = load i32*, i32** %stride.addr, align 8, !dbg !8825
  %arrayidx151 = getelementptr inbounds i32, i32* %307, i64 0, !dbg !8825
  %308 = load i32, i32* %arrayidx151, align 4, !dbg !8825
  %309 = load i32, i32* %y, align 4, !dbg !8826
  %mul152 = mul nsw i32 %308, %309, !dbg !8827
  %idx.ext153 = sext i32 %mul152 to i64, !dbg !8828
  %add.ptr154 = getelementptr inbounds i8, i8* %add.ptr150, i64 %idx.ext153, !dbg !8828
  %310 = bitcast i8* %add.ptr154 to i16*, !dbg !8829
  store i16 %conv146, i16* %310, align 2, !dbg !8830
  %311 = load i32, i32* %b, align 4, !dbg !8831
  %conv155 = trunc i32 %311 to i16, !dbg !8831
  %312 = load i8**, i8*** %src.addr, align 8, !dbg !8832
  %arrayidx156 = getelementptr inbounds i8*, i8** %312, i64 1, !dbg !8832
  %313 = load i8*, i8** %arrayidx156, align 8, !dbg !8832
  %314 = load i32, i32* %x, align 4, !dbg !8833
  %mul157 = mul nsw i32 %314, 2, !dbg !8834
  %idx.ext158 = sext i32 %mul157 to i64, !dbg !8835
  %add.ptr159 = getelementptr inbounds i8, i8* %313, i64 %idx.ext158, !dbg !8835
  %315 = load i32*, i32** %stride.addr, align 8, !dbg !8836
  %arrayidx160 = getelementptr inbounds i32, i32* %315, i64 1, !dbg !8836
  %316 = load i32, i32* %arrayidx160, align 4, !dbg !8836
  %317 = load i32, i32* %y, align 4, !dbg !8837
  %mul161 = mul nsw i32 %316, %317, !dbg !8838
  %idx.ext162 = sext i32 %mul161 to i64, !dbg !8839
  %add.ptr163 = getelementptr inbounds i8, i8* %add.ptr159, i64 %idx.ext162, !dbg !8839
  %318 = bitcast i8* %add.ptr163 to i16*, !dbg !8840
  store i16 %conv155, i16* %318, align 2, !dbg !8841
  %319 = load i32, i32* %r, align 4, !dbg !8842
  %conv164 = trunc i32 %319 to i16, !dbg !8842
  %320 = load i8**, i8*** %src.addr, align 8, !dbg !8843
  %arrayidx165 = getelementptr inbounds i8*, i8** %320, i64 2, !dbg !8843
  %321 = load i8*, i8** %arrayidx165, align 8, !dbg !8843
  %322 = load i32, i32* %x, align 4, !dbg !8844
  %mul166 = mul nsw i32 %322, 2, !dbg !8845
  %idx.ext167 = sext i32 %mul166 to i64, !dbg !8846
  %add.ptr168 = getelementptr inbounds i8, i8* %321, i64 %idx.ext167, !dbg !8846
  %323 = load i32*, i32** %stride.addr, align 8, !dbg !8847
  %arrayidx169 = getelementptr inbounds i32, i32* %323, i64 2, !dbg !8847
  %324 = load i32, i32* %arrayidx169, align 4, !dbg !8847
  %325 = load i32, i32* %y, align 4, !dbg !8848
  %mul170 = mul nsw i32 %324, %325, !dbg !8849
  %idx.ext171 = sext i32 %mul170 to i64, !dbg !8850
  %add.ptr172 = getelementptr inbounds i8, i8* %add.ptr168, i64 %idx.ext171, !dbg !8850
  %326 = bitcast i8* %add.ptr172 to i16*, !dbg !8851
  store i16 %conv164, i16* %326, align 2, !dbg !8852
  %327 = load i32, i32* %transparency, align 4, !dbg !8853
  %tobool173 = icmp ne i32 %327, 0, !dbg !8853
  br i1 %tobool173, label %if.then174, label %if.end184, !dbg !8855

if.then174:                                       ; preds = %if.then145
  %328 = load i32, i32* %a, align 4, !dbg !8856
  %conv175 = trunc i32 %328 to i16, !dbg !8856
  %329 = load i8**, i8*** %src.addr, align 8, !dbg !8857
  %arrayidx176 = getelementptr inbounds i8*, i8** %329, i64 3, !dbg !8857
  %330 = load i8*, i8** %arrayidx176, align 8, !dbg !8857
  %331 = load i32, i32* %x, align 4, !dbg !8858
  %mul177 = mul nsw i32 %331, 2, !dbg !8859
  %idx.ext178 = sext i32 %mul177 to i64, !dbg !8860
  %add.ptr179 = getelementptr inbounds i8, i8* %330, i64 %idx.ext178, !dbg !8860
  %332 = load i32*, i32** %stride.addr, align 8, !dbg !8861
  %arrayidx180 = getelementptr inbounds i32, i32* %332, i64 3, !dbg !8861
  %333 = load i32, i32* %arrayidx180, align 4, !dbg !8861
  %334 = load i32, i32* %y, align 4, !dbg !8862
  %mul181 = mul nsw i32 %333, %334, !dbg !8863
  %idx.ext182 = sext i32 %mul181 to i64, !dbg !8864
  %add.ptr183 = getelementptr inbounds i8, i8* %add.ptr179, i64 %idx.ext182, !dbg !8864
  %335 = bitcast i8* %add.ptr183 to i16*, !dbg !8865
  store i16 %conv175, i16* %335, align 2, !dbg !8866
  br label %if.end184, !dbg !8865

if.end184:                                        ; preds = %if.then174, %if.then145
  br label %if.end213, !dbg !8867

if.else185:                                       ; preds = %if.else143
  %336 = load i32, i32* %b, align 4, !dbg !8868
  %conv186 = trunc i32 %336 to i16, !dbg !8868
  %337 = load i8**, i8*** %src.addr, align 8, !dbg !8870
  %arrayidx187 = getelementptr inbounds i8*, i8** %337, i64 0, !dbg !8870
  %338 = load i8*, i8** %arrayidx187, align 8, !dbg !8870
  %339 = load i32, i32* %x, align 4, !dbg !8871
  %mul188 = mul nsw i32 %339, 2, !dbg !8872
  %idx.ext189 = sext i32 %mul188 to i64, !dbg !8873
  %add.ptr190 = getelementptr inbounds i8, i8* %338, i64 %idx.ext189, !dbg !8873
  %340 = load i32*, i32** %stride.addr, align 8, !dbg !8874
  %arrayidx191 = getelementptr inbounds i32, i32* %340, i64 0, !dbg !8874
  %341 = load i32, i32* %arrayidx191, align 4, !dbg !8874
  %342 = load i32, i32* %y, align 4, !dbg !8875
  %mul192 = mul nsw i32 %341, %342, !dbg !8876
  %idx.ext193 = sext i32 %mul192 to i64, !dbg !8877
  %add.ptr194 = getelementptr inbounds i8, i8* %add.ptr190, i64 %idx.ext193, !dbg !8877
  %343 = bitcast i8* %add.ptr194 to i16*, !dbg !8878
  store i16 %conv186, i16* %343, align 2, !dbg !8879
  %344 = load i32, i32* %g, align 4, !dbg !8880
  %conv195 = trunc i32 %344 to i16, !dbg !8880
  %345 = load i8**, i8*** %src.addr, align 8, !dbg !8881
  %arrayidx196 = getelementptr inbounds i8*, i8** %345, i64 1, !dbg !8881
  %346 = load i8*, i8** %arrayidx196, align 8, !dbg !8881
  %347 = load i32, i32* %x, align 4, !dbg !8882
  %mul197 = mul nsw i32 %347, 2, !dbg !8883
  %idx.ext198 = sext i32 %mul197 to i64, !dbg !8884
  %add.ptr199 = getelementptr inbounds i8, i8* %346, i64 %idx.ext198, !dbg !8884
  %348 = load i32*, i32** %stride.addr, align 8, !dbg !8885
  %arrayidx200 = getelementptr inbounds i32, i32* %348, i64 1, !dbg !8885
  %349 = load i32, i32* %arrayidx200, align 4, !dbg !8885
  %350 = load i32, i32* %y, align 4, !dbg !8886
  %mul201 = mul nsw i32 %349, %350, !dbg !8887
  %idx.ext202 = sext i32 %mul201 to i64, !dbg !8888
  %add.ptr203 = getelementptr inbounds i8, i8* %add.ptr199, i64 %idx.ext202, !dbg !8888
  %351 = bitcast i8* %add.ptr203 to i16*, !dbg !8889
  store i16 %conv195, i16* %351, align 2, !dbg !8890
  %352 = load i32, i32* %r, align 4, !dbg !8891
  %conv204 = trunc i32 %352 to i16, !dbg !8891
  %353 = load i8**, i8*** %src.addr, align 8, !dbg !8892
  %arrayidx205 = getelementptr inbounds i8*, i8** %353, i64 2, !dbg !8892
  %354 = load i8*, i8** %arrayidx205, align 8, !dbg !8892
  %355 = load i32, i32* %x, align 4, !dbg !8893
  %mul206 = mul nsw i32 %355, 2, !dbg !8894
  %idx.ext207 = sext i32 %mul206 to i64, !dbg !8895
  %add.ptr208 = getelementptr inbounds i8, i8* %354, i64 %idx.ext207, !dbg !8895
  %356 = load i32*, i32** %stride.addr, align 8, !dbg !8896
  %arrayidx209 = getelementptr inbounds i32, i32* %356, i64 2, !dbg !8896
  %357 = load i32, i32* %arrayidx209, align 4, !dbg !8896
  %358 = load i32, i32* %y, align 4, !dbg !8897
  %mul210 = mul nsw i32 %357, %358, !dbg !8898
  %idx.ext211 = sext i32 %mul210 to i64, !dbg !8899
  %add.ptr212 = getelementptr inbounds i8, i8* %add.ptr208, i64 %idx.ext211, !dbg !8899
  %359 = bitcast i8* %add.ptr212 to i16*, !dbg !8900
  store i16 %conv204, i16* %359, align 2, !dbg !8901
  br label %if.end213

if.end213:                                        ; preds = %if.else185, %if.end184
  br label %if.end214

if.end214:                                        ; preds = %if.end213, %if.then128
  br label %for.inc215, !dbg !8902

for.inc215:                                       ; preds = %if.end214
  %360 = load i32, i32* %x, align 4, !dbg !8903
  %inc216 = add nsw i32 %360, 1, !dbg !8903
  store i32 %inc216, i32* %x, align 4, !dbg !8903
  br label %for.cond90, !dbg !8905, !llvm.loop !8906

for.end217:                                       ; preds = %for.cond90
  br label %for.inc218, !dbg !8908

for.inc218:                                       ; preds = %for.end217
  %361 = load i32, i32* %y, align 4, !dbg !8909
  %inc219 = add nsw i32 %361, 1, !dbg !8909
  store i32 %inc219, i32* %y, align 4, !dbg !8909
  br label %for.cond29, !dbg !8911, !llvm.loop !8912

for.end220:                                       ; preds = %for.cond29
  store i32 0, i32* %retval, align 4, !dbg !8914
  br label %return, !dbg !8914

return:                                           ; preds = %for.end220, %if.then85
  %362 = load i32, i32* %retval, align 4, !dbg !8915
  ret i32 %362, !dbg !8915
}

declare i32 @av_image_check_sar(i32, i32, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @is_input_end(%struct.FFV1Context* %s) #0 !dbg !8916 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.FFV1Context*, align 8
  %c = alloca %struct.RangeCoder*, align 8
  store %struct.FFV1Context* %s, %struct.FFV1Context** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FFV1Context** %s.addr, metadata !8917, metadata !1706), !dbg !8918
  %0 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8919
  %ac = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %0, i32 0, i32 23, !dbg !8921
  %1 = load i32, i32* %ac, align 4, !dbg !8921
  %cmp = icmp ne i32 %1, 0, !dbg !8922
  br i1 %cmp, label %if.then, label %if.else, !dbg !8923

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.RangeCoder** %c, metadata !8924, metadata !1706), !dbg !8926
  %2 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8927
  %c1 = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %2, i32 0, i32 2, !dbg !8928
  store %struct.RangeCoder* %c1, %struct.RangeCoder** %c, align 8, !dbg !8926
  %3 = load %struct.RangeCoder*, %struct.RangeCoder** %c, align 8, !dbg !8929
  %overread = getelementptr inbounds %struct.RangeCoder, %struct.RangeCoder* %3, i32 0, i32 9, !dbg !8931
  %4 = load i32, i32* %overread, align 8, !dbg !8931
  %cmp2 = icmp sgt i32 %4, 2, !dbg !8932
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !8933

if.then3:                                         ; preds = %if.then
  store i32 -1094995529, i32* %retval, align 4, !dbg !8934
  br label %return, !dbg !8934

if.end:                                           ; preds = %if.then
  br label %if.end7, !dbg !8935

if.else:                                          ; preds = %entry
  %5 = load %struct.FFV1Context*, %struct.FFV1Context** %s.addr, align 8, !dbg !8936
  %gb = getelementptr inbounds %struct.FFV1Context, %struct.FFV1Context* %5, i32 0, i32 3, !dbg !8939
  %call = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !8940
  %cmp4 = icmp slt i32 %call, 1, !dbg !8941
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !8942

if.then5:                                         ; preds = %if.else
  store i32 -1094995529, i32* %retval, align 4, !dbg !8943
  br label %return, !dbg !8943

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8944
  br label %return, !dbg !8944

return:                                           ; preds = %if.end7, %if.then5, %if.then3
  %6 = load i32, i32* %retval, align 4, !dbg !8945
  ret i32 %6, !dbg !8945
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_context(%struct.PlaneContext* %p, i16* %src, i16* %last, i16* %last2) #7 !dbg !8946 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct.PlaneContext*, align 8
  %src.addr = alloca i16*, align 8
  %last.addr = alloca i16*, align 8
  %last2.addr = alloca i16*, align 8
  %LT = alloca i32, align 4
  %T = alloca i32, align 4
  %RT = alloca i32, align 4
  %L = alloca i32, align 4
  %TT = alloca i32, align 4
  %LL = alloca i32, align 4
  store %struct.PlaneContext* %p, %struct.PlaneContext** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PlaneContext** %p.addr, metadata !8950, metadata !1706), !dbg !8951
  store i16* %src, i16** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %src.addr, metadata !8952, metadata !1706), !dbg !8953
  store i16* %last, i16** %last.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %last.addr, metadata !8954, metadata !1706), !dbg !8955
  store i16* %last2, i16** %last2.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %last2.addr, metadata !8956, metadata !1706), !dbg !8957
  call void @llvm.dbg.declare(metadata i32* %LT, metadata !8958, metadata !1706), !dbg !8959
  %0 = load i16*, i16** %last.addr, align 8, !dbg !8960
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 -1, !dbg !8960
  %1 = load i16, i16* %arrayidx, align 2, !dbg !8960
  %conv = sext i16 %1 to i32, !dbg !8960
  store i32 %conv, i32* %LT, align 4, !dbg !8959
  call void @llvm.dbg.declare(metadata i32* %T, metadata !8961, metadata !1706), !dbg !8962
  %2 = load i16*, i16** %last.addr, align 8, !dbg !8963
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 0, !dbg !8963
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !8963
  %conv2 = sext i16 %3 to i32, !dbg !8963
  store i32 %conv2, i32* %T, align 4, !dbg !8962
  call void @llvm.dbg.declare(metadata i32* %RT, metadata !8964, metadata !1706), !dbg !8965
  %4 = load i16*, i16** %last.addr, align 8, !dbg !8966
  %arrayidx3 = getelementptr inbounds i16, i16* %4, i64 1, !dbg !8966
  %5 = load i16, i16* %arrayidx3, align 2, !dbg !8966
  %conv4 = sext i16 %5 to i32, !dbg !8966
  store i32 %conv4, i32* %RT, align 4, !dbg !8965
  call void @llvm.dbg.declare(metadata i32* %L, metadata !8967, metadata !1706), !dbg !8968
  %6 = load i16*, i16** %src.addr, align 8, !dbg !8969
  %arrayidx5 = getelementptr inbounds i16, i16* %6, i64 -1, !dbg !8969
  %7 = load i16, i16* %arrayidx5, align 2, !dbg !8969
  %conv6 = sext i16 %7 to i32, !dbg !8969
  store i32 %conv6, i32* %L, align 4, !dbg !8968
  %8 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !8970
  %quant_table = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %8, i32 0, i32 0, !dbg !8972
  %arrayidx7 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table, i64 0, i64 3, !dbg !8970
  %arrayidx8 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx7, i64 0, i64 127, !dbg !8970
  %9 = load i16, i16* %arrayidx8, align 2, !dbg !8970
  %tobool = icmp ne i16 %9, 0, !dbg !8970
  br i1 %tobool, label %if.then, label %if.else, !dbg !8973

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %TT, metadata !8974, metadata !1706), !dbg !8976
  %10 = load i16*, i16** %last2.addr, align 8, !dbg !8977
  %arrayidx9 = getelementptr inbounds i16, i16* %10, i64 0, !dbg !8977
  %11 = load i16, i16* %arrayidx9, align 2, !dbg !8977
  %conv10 = sext i16 %11 to i32, !dbg !8977
  store i32 %conv10, i32* %TT, align 4, !dbg !8976
  call void @llvm.dbg.declare(metadata i32* %LL, metadata !8978, metadata !1706), !dbg !8979
  %12 = load i16*, i16** %src.addr, align 8, !dbg !8980
  %arrayidx11 = getelementptr inbounds i16, i16* %12, i64 -2, !dbg !8980
  %13 = load i16, i16* %arrayidx11, align 2, !dbg !8980
  %conv12 = sext i16 %13 to i32, !dbg !8980
  store i32 %conv12, i32* %LL, align 4, !dbg !8979
  %14 = load i32, i32* %L, align 4, !dbg !8981
  %15 = load i32, i32* %LT, align 4, !dbg !8982
  %sub = sub nsw i32 %14, %15, !dbg !8983
  %and = and i32 %sub, 255, !dbg !8984
  %idxprom = sext i32 %and to i64, !dbg !8985
  %16 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !8985
  %quant_table13 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %16, i32 0, i32 0, !dbg !8986
  %arrayidx14 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table13, i64 0, i64 0, !dbg !8985
  %arrayidx15 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx14, i64 0, i64 %idxprom, !dbg !8985
  %17 = load i16, i16* %arrayidx15, align 2, !dbg !8985
  %conv16 = sext i16 %17 to i32, !dbg !8985
  %18 = load i32, i32* %LT, align 4, !dbg !8987
  %19 = load i32, i32* %T, align 4, !dbg !8988
  %sub17 = sub nsw i32 %18, %19, !dbg !8989
  %and18 = and i32 %sub17, 255, !dbg !8990
  %idxprom19 = sext i32 %and18 to i64, !dbg !8991
  %20 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !8991
  %quant_table20 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %20, i32 0, i32 0, !dbg !8992
  %arrayidx21 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table20, i64 0, i64 1, !dbg !8991
  %arrayidx22 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx21, i64 0, i64 %idxprom19, !dbg !8991
  %21 = load i16, i16* %arrayidx22, align 2, !dbg !8991
  %conv23 = sext i16 %21 to i32, !dbg !8991
  %add = add nsw i32 %conv16, %conv23, !dbg !8993
  %22 = load i32, i32* %T, align 4, !dbg !8994
  %23 = load i32, i32* %RT, align 4, !dbg !8995
  %sub24 = sub nsw i32 %22, %23, !dbg !8996
  %and25 = and i32 %sub24, 255, !dbg !8997
  %idxprom26 = sext i32 %and25 to i64, !dbg !8998
  %24 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !8998
  %quant_table27 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %24, i32 0, i32 0, !dbg !8999
  %arrayidx28 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table27, i64 0, i64 2, !dbg !8998
  %arrayidx29 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx28, i64 0, i64 %idxprom26, !dbg !8998
  %25 = load i16, i16* %arrayidx29, align 2, !dbg !8998
  %conv30 = sext i16 %25 to i32, !dbg !8998
  %add31 = add nsw i32 %add, %conv30, !dbg !9000
  %26 = load i32, i32* %LL, align 4, !dbg !9001
  %27 = load i32, i32* %L, align 4, !dbg !9002
  %sub32 = sub nsw i32 %26, %27, !dbg !9003
  %and33 = and i32 %sub32, 255, !dbg !9004
  %idxprom34 = sext i32 %and33 to i64, !dbg !9005
  %28 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9005
  %quant_table35 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %28, i32 0, i32 0, !dbg !9006
  %arrayidx36 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table35, i64 0, i64 3, !dbg !9005
  %arrayidx37 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx36, i64 0, i64 %idxprom34, !dbg !9005
  %29 = load i16, i16* %arrayidx37, align 2, !dbg !9005
  %conv38 = sext i16 %29 to i32, !dbg !9005
  %add39 = add nsw i32 %add31, %conv38, !dbg !9007
  %30 = load i32, i32* %TT, align 4, !dbg !9008
  %31 = load i32, i32* %T, align 4, !dbg !9009
  %sub40 = sub nsw i32 %30, %31, !dbg !9010
  %and41 = and i32 %sub40, 255, !dbg !9011
  %idxprom42 = sext i32 %and41 to i64, !dbg !9012
  %32 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9012
  %quant_table43 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %32, i32 0, i32 0, !dbg !9013
  %arrayidx44 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table43, i64 0, i64 4, !dbg !9012
  %arrayidx45 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx44, i64 0, i64 %idxprom42, !dbg !9012
  %33 = load i16, i16* %arrayidx45, align 2, !dbg !9012
  %conv46 = sext i16 %33 to i32, !dbg !9012
  %add47 = add nsw i32 %add39, %conv46, !dbg !9014
  store i32 %add47, i32* %retval, align 4, !dbg !9015
  br label %return, !dbg !9015

if.else:                                          ; preds = %entry
  %34 = load i32, i32* %L, align 4, !dbg !9016
  %35 = load i32, i32* %LT, align 4, !dbg !9017
  %sub48 = sub nsw i32 %34, %35, !dbg !9018
  %and49 = and i32 %sub48, 255, !dbg !9019
  %idxprom50 = sext i32 %and49 to i64, !dbg !9020
  %36 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9020
  %quant_table51 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %36, i32 0, i32 0, !dbg !9021
  %arrayidx52 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table51, i64 0, i64 0, !dbg !9020
  %arrayidx53 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx52, i64 0, i64 %idxprom50, !dbg !9020
  %37 = load i16, i16* %arrayidx53, align 2, !dbg !9020
  %conv54 = sext i16 %37 to i32, !dbg !9020
  %38 = load i32, i32* %LT, align 4, !dbg !9022
  %39 = load i32, i32* %T, align 4, !dbg !9023
  %sub55 = sub nsw i32 %38, %39, !dbg !9024
  %and56 = and i32 %sub55, 255, !dbg !9025
  %idxprom57 = sext i32 %and56 to i64, !dbg !9026
  %40 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9026
  %quant_table58 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %40, i32 0, i32 0, !dbg !9027
  %arrayidx59 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table58, i64 0, i64 1, !dbg !9026
  %arrayidx60 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx59, i64 0, i64 %idxprom57, !dbg !9026
  %41 = load i16, i16* %arrayidx60, align 2, !dbg !9026
  %conv61 = sext i16 %41 to i32, !dbg !9026
  %add62 = add nsw i32 %conv54, %conv61, !dbg !9028
  %42 = load i32, i32* %T, align 4, !dbg !9029
  %43 = load i32, i32* %RT, align 4, !dbg !9030
  %sub63 = sub nsw i32 %42, %43, !dbg !9031
  %and64 = and i32 %sub63, 255, !dbg !9032
  %idxprom65 = sext i32 %and64 to i64, !dbg !9033
  %44 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9033
  %quant_table66 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %44, i32 0, i32 0, !dbg !9034
  %arrayidx67 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table66, i64 0, i64 2, !dbg !9033
  %arrayidx68 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx67, i64 0, i64 %idxprom65, !dbg !9033
  %45 = load i16, i16* %arrayidx68, align 2, !dbg !9033
  %conv69 = sext i16 %45 to i32, !dbg !9033
  %add70 = add nsw i32 %add62, %conv69, !dbg !9035
  store i32 %add70, i32* %retval, align 4, !dbg !9036
  br label %return, !dbg !9036

return:                                           ; preds = %if.else, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !9037
  ret i32 %46, !dbg !9037
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #7 !dbg !9038 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !9041, metadata !1706), !dbg !9042
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9043, metadata !1706), !dbg !9044
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9045
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !9046
  %1 = load i32, i32* %index1, align 8, !dbg !9046
  store i32 %1, i32* %index, align 4, !dbg !9044
  call void @llvm.dbg.declare(metadata i8* %result, metadata !9047, metadata !1706), !dbg !9048
  %2 = load i32, i32* %index, align 4, !dbg !9049
  %shr = lshr i32 %2, 3, !dbg !9050
  %idxprom = zext i32 %shr to i64, !dbg !9051
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9051
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !9052
  %4 = load i8*, i8** %buffer, align 8, !dbg !9052
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !9051
  %5 = load i8, i8* %arrayidx, align 1, !dbg !9051
  store i8 %5, i8* %result, align 1, !dbg !9048
  %6 = load i32, i32* %index, align 4, !dbg !9053
  %and = and i32 %6, 7, !dbg !9054
  %7 = load i8, i8* %result, align 1, !dbg !9055
  %conv = zext i8 %7 to i32, !dbg !9055
  %shl = shl i32 %conv, %and, !dbg !9055
  %conv2 = trunc i32 %shl to i8, !dbg !9055
  store i8 %conv2, i8* %result, align 1, !dbg !9055
  %8 = load i8, i8* %result, align 1, !dbg !9056
  %conv3 = zext i8 %8 to i32, !dbg !9056
  %shr4 = ashr i32 %conv3, 7, !dbg !9056
  %conv5 = trunc i32 %shr4 to i8, !dbg !9056
  store i8 %conv5, i8* %result, align 1, !dbg !9056
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9057
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !9059
  %10 = load i32, i32* %index6, align 8, !dbg !9059
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9060
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !9061
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !9061
  %cmp = icmp slt i32 %10, %12, !dbg !9062
  br i1 %cmp, label %if.then, label %if.end, !dbg !9063

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !9064
  %inc = add i32 %13, 1, !dbg !9064
  store i32 %inc, i32* %index, align 4, !dbg !9064
  br label %if.end, !dbg !9065

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !9066
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9067
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !9068
  store i32 %14, i32* %index8, align 8, !dbg !9069
  %16 = load i8, i8* %result, align 1, !dbg !9070
  %conv9 = zext i8 %16 to i32, !dbg !9070
  ret i32 %conv9, !dbg !9071
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #7 !dbg !9072 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2153, metadata !1706), !dbg !9075
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !9077, metadata !1706), !dbg !9078
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !9079, metadata !1706), !dbg !9080
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !9081, metadata !1706), !dbg !9082
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !9083, metadata !1706), !dbg !9084
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9085
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !9086
  %1 = load i32, i32* %index, align 8, !dbg !9086
  store i32 %1, i32* %re_index, align 4, !dbg !9084
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !9087, metadata !1706), !dbg !9088
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !9089, metadata !1706), !dbg !9090
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9091
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !9092
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !9092
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !9090
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9093
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !9094
  %5 = load i8*, i8** %buffer, align 8, !dbg !9094
  %6 = load i32, i32* %re_index, align 4, !dbg !9095
  %shr = lshr i32 %6, 3, !dbg !9096
  %idx.ext = zext i32 %shr to i64, !dbg !9097
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !9097
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !9098
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !9098
  %8 = load i32, i32* %l, align 1, !dbg !9098
  store i32 %8, i32* %x.addr.i, align 4, !dbg !9099
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !9100
  %shl.i = shl i32 %9, 8, !dbg !9101
  %and.i = and i32 %shl.i, 65280, !dbg !9102
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !9103
  %shr.i = lshr i32 %10, 8, !dbg !9104
  %and1.i = and i32 %shr.i, 255, !dbg !9105
  %or.i = or i32 %and.i, %and1.i, !dbg !9106
  %shl2.i = shl i32 %or.i, 16, !dbg !9107
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !9108
  %shr3.i = lshr i32 %11, 16, !dbg !9109
  %shl4.i = shl i32 %shr3.i, 8, !dbg !9110
  %and5.i = and i32 %shl4.i, 65280, !dbg !9111
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !9112
  %shr6.i = lshr i32 %12, 16, !dbg !9113
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !9114
  %and8.i = and i32 %shr7.i, 255, !dbg !9115
  %or9.i = or i32 %and5.i, %and8.i, !dbg !9116
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !9117
  %13 = load i32, i32* %re_index, align 4, !dbg !9118
  %and = and i32 %13, 7, !dbg !9119
  %shl = shl i32 %or10.i, %and, !dbg !9120
  store i32 %shl, i32* %re_cache, align 4, !dbg !9121
  %14 = load i32, i32* %re_cache, align 4, !dbg !9122
  %15 = load i32, i32* %n.addr, align 4, !dbg !9123
  %conv = trunc i32 %15 to i8, !dbg !9123
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !9124
  store i32 %call4, i32* %tmp, align 4, !dbg !9125
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !9126
  %17 = load i32, i32* %re_index, align 4, !dbg !9127
  %18 = load i32, i32* %n.addr, align 4, !dbg !9128
  %add = add i32 %17, %18, !dbg !9129
  %cmp = icmp ugt i32 %16, %add, !dbg !9130
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9131

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !9132
  %20 = load i32, i32* %n.addr, align 4, !dbg !9134
  %add6 = add i32 %19, %20, !dbg !9135
  br label %cond.end, !dbg !9136

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !9137
  br label %cond.end, !dbg !9139

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !9140
  store i32 %cond, i32* %re_index, align 4, !dbg !9142
  %22 = load i32, i32* %re_index, align 4, !dbg !9143
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9144
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !9145
  store i32 %22, i32* %index7, align 8, !dbg !9146
  %24 = load i32, i32* %tmp, align 4, !dbg !9147
  ret i32 %24, !dbg !9148
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_vlc_symbol(%struct.GetBitContext* %gb, %struct.VlcState* %state, i32 %bits) #7 !dbg !9149 {
entry:
  %diff.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %diff.addr.i, metadata !9153, metadata !1706), !dbg !9157
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !9159, metadata !1706), !dbg !9160
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %state.addr = alloca %struct.VlcState*, align 8
  %bits.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %v = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9161, metadata !1706), !dbg !9162
  store %struct.VlcState* %state, %struct.VlcState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlcState** %state.addr, metadata !9163, metadata !1706), !dbg !9164
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !9165, metadata !1706), !dbg !9166
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9167, metadata !1706), !dbg !9168
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9169, metadata !1706), !dbg !9170
  call void @llvm.dbg.declare(metadata i32* %v, metadata !9171, metadata !1706), !dbg !9172
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9173, metadata !1706), !dbg !9174
  %0 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9175
  %count = getelementptr inbounds %struct.VlcState, %struct.VlcState* %0, i32 0, i32 3, !dbg !9176
  %1 = load i8, i8* %count, align 1, !dbg !9176
  %conv = zext i8 %1 to i32, !dbg !9175
  store i32 %conv, i32* %i, align 4, !dbg !9177
  store i32 0, i32* %k, align 4, !dbg !9178
  br label %while.cond, !dbg !9179

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i32, i32* %i, align 4, !dbg !9180
  %3 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9182
  %error_sum = getelementptr inbounds %struct.VlcState, %struct.VlcState* %3, i32 0, i32 1, !dbg !9183
  %4 = load i16, i16* %error_sum, align 2, !dbg !9183
  %conv1 = zext i16 %4 to i32, !dbg !9182
  %cmp = icmp slt i32 %2, %conv1, !dbg !9184
  br i1 %cmp, label %while.body, label %while.end, !dbg !9185

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %k, align 4, !dbg !9186
  %inc = add nsw i32 %5, 1, !dbg !9186
  store i32 %inc, i32* %k, align 4, !dbg !9186
  %6 = load i32, i32* %i, align 4, !dbg !9188
  %7 = load i32, i32* %i, align 4, !dbg !9189
  %add = add nsw i32 %7, %6, !dbg !9189
  store i32 %add, i32* %i, align 4, !dbg !9189
  br label %while.cond, !dbg !9190, !llvm.loop !9192

while.end:                                        ; preds = %while.cond
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9193
  %9 = load i32, i32* %k, align 4, !dbg !9194
  %10 = load i32, i32* %bits.addr, align 4, !dbg !9195
  %call = call i32 @get_sr_golomb(%struct.GetBitContext* %8, i32 %9, i32 12, i32 %10), !dbg !9196
  store i32 %call, i32* %v, align 4, !dbg !9197
  br label %do.body, !dbg !9198, !llvm.loop !9199

do.body:                                          ; preds = %while.end
  br label %do.end, !dbg !9200

do.end:                                           ; preds = %do.body
  %11 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9203
  %drift = getelementptr inbounds %struct.VlcState, %struct.VlcState* %11, i32 0, i32 0, !dbg !9204
  %12 = load i16, i16* %drift, align 2, !dbg !9204
  %conv3 = sext i16 %12 to i32, !dbg !9203
  %mul = mul nsw i32 2, %conv3, !dbg !9205
  %13 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9206
  %count4 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %13, i32 0, i32 3, !dbg !9207
  %14 = load i8, i8* %count4, align 1, !dbg !9207
  %conv5 = zext i8 %14 to i32, !dbg !9206
  %add6 = add nsw i32 %mul, %conv5, !dbg !9208
  %shr = ashr i32 %add6, 31, !dbg !9209
  %15 = load i32, i32* %v, align 4, !dbg !9210
  %xor = xor i32 %15, %shr, !dbg !9210
  store i32 %xor, i32* %v, align 4, !dbg !9210
  %16 = load i32, i32* %v, align 4, !dbg !9211
  %17 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9212
  %bias = getelementptr inbounds %struct.VlcState, %struct.VlcState* %17, i32 0, i32 2, !dbg !9213
  %18 = load i8, i8* %bias, align 2, !dbg !9213
  %conv7 = sext i8 %18 to i32, !dbg !9212
  %add8 = add nsw i32 %16, %conv7, !dbg !9214
  %19 = load i32, i32* %bits.addr, align 4, !dbg !9215
  store i32 %add8, i32* %diff.addr.i, align 4, !dbg !9216
  store i32 %19, i32* %bits.addr.i, align 4, !dbg !9216
  %20 = load i32, i32* %bits.addr.i, align 4, !dbg !9217
  %cmp.i = icmp eq i32 %20, 8, !dbg !9219
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !9220

if.then.i:                                        ; preds = %do.end
  %21 = load i32, i32* %diff.addr.i, align 4, !dbg !9221
  %conv.i = trunc i32 %21 to i8, !dbg !9222
  %conv1.i = sext i8 %conv.i to i32, !dbg !9222
  store i32 %conv1.i, i32* %diff.addr.i, align 4, !dbg !9223
  br label %fold.exit, !dbg !9224

if.else.i:                                        ; preds = %do.end
  %22 = load i32, i32* %diff.addr.i, align 4, !dbg !9225
  %23 = load i32, i32* %bits.addr.i, align 4, !dbg !9227
  %call.i = call i32 @sign_extend(i32 %22, i32 %23) #3, !dbg !9228
  store i32 %call.i, i32* %diff.addr.i, align 4, !dbg !9229
  br label %fold.exit, !dbg !9216

fold.exit:                                        ; preds = %if.then.i, %if.else.i
  %24 = load i32, i32* %diff.addr.i, align 4, !dbg !9230
  store i32 %24, i32* %ret, align 4, !dbg !9231
  %25 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9232
  %26 = load i32, i32* %v, align 4, !dbg !9233
  call void @update_vlc_state(%struct.VlcState* %25, i32 %26), !dbg !9234
  %27 = load i32, i32* %ret, align 4, !dbg !9235
  ret i32 %27, !dbg !9236
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @predict(i16* %src, i16* %last) #7 !dbg !9237 {
entry:
  %src.addr = alloca i16*, align 8
  %last.addr = alloca i16*, align 8
  %LT = alloca i32, align 4
  %T = alloca i32, align 4
  %L = alloca i32, align 4
  store i16* %src, i16** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %src.addr, metadata !9240, metadata !1706), !dbg !9241
  store i16* %last, i16** %last.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %last.addr, metadata !9242, metadata !1706), !dbg !9243
  call void @llvm.dbg.declare(metadata i32* %LT, metadata !9244, metadata !1706), !dbg !9245
  %0 = load i16*, i16** %last.addr, align 8, !dbg !9246
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 -1, !dbg !9246
  %1 = load i16, i16* %arrayidx, align 2, !dbg !9246
  %conv = sext i16 %1 to i32, !dbg !9246
  store i32 %conv, i32* %LT, align 4, !dbg !9245
  call void @llvm.dbg.declare(metadata i32* %T, metadata !9247, metadata !1706), !dbg !9248
  %2 = load i16*, i16** %last.addr, align 8, !dbg !9249
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 0, !dbg !9249
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !9249
  %conv2 = sext i16 %3 to i32, !dbg !9249
  store i32 %conv2, i32* %T, align 4, !dbg !9248
  call void @llvm.dbg.declare(metadata i32* %L, metadata !9250, metadata !1706), !dbg !9251
  %4 = load i16*, i16** %src.addr, align 8, !dbg !9252
  %arrayidx3 = getelementptr inbounds i16, i16* %4, i64 -1, !dbg !9252
  %5 = load i16, i16* %arrayidx3, align 2, !dbg !9252
  %conv4 = sext i16 %5 to i32, !dbg !9252
  store i32 %conv4, i32* %L, align 4, !dbg !9251
  %6 = load i32, i32* %L, align 4, !dbg !9253
  %7 = load i32, i32* %L, align 4, !dbg !9254
  %8 = load i32, i32* %T, align 4, !dbg !9255
  %add = add nsw i32 %7, %8, !dbg !9256
  %9 = load i32, i32* %LT, align 4, !dbg !9257
  %sub = sub nsw i32 %add, %9, !dbg !9258
  %10 = load i32, i32* %T, align 4, !dbg !9259
  %call = call i32 @mid_pred(i32 %6, i32 %sub, i32 %10) #3, !dbg !9260
  ret i32 %call, !dbg !9261
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #7 !dbg !9262 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9265, metadata !1706), !dbg !9266
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9267
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !9268
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !9268
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9269
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !9270
  %sub = sub nsw i32 %1, %call, !dbg !9271
  ret i32 %sub, !dbg !9272
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #7 !dbg !9273 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !9278, metadata !1706), !dbg !9279
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !9280
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !9281
  %1 = load i32, i32* %index, align 8, !dbg !9281
  ret i32 %1, !dbg !9282
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #7 !dbg !9283 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9287, metadata !1706), !dbg !9288
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !9289, metadata !1706), !dbg !9290
  %0 = load i32, i32* %a.addr, align 4, !dbg !9291
  %1 = load i8, i8* %s.addr, align 1, !dbg !9292
  %conv = sext i8 %1 to i32, !dbg !9292
  %sub = sub nsw i32 0, %conv, !dbg !9293
  %conv1 = trunc i32 %sub to i8, !dbg !9294
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #3, !dbg !9291, !srcloc !9295
  store i32 %2, i32* %a.addr, align 4, !dbg !9291
  %3 = load i32, i32* %a.addr, align 4, !dbg !9296
  ret i32 %3, !dbg !9297
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_sr_golomb(%struct.GetBitContext* %gb, i32 %k, i32 %limit, i32 %esc_len) #7 !dbg !9298 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %k.addr = alloca i32, align 4
  %limit.addr = alloca i32, align 4
  %esc_len.addr = alloca i32, align 4
  %v = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9302, metadata !1706), !dbg !9303
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !9304, metadata !1706), !dbg !9305
  store i32 %limit, i32* %limit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %limit.addr, metadata !9306, metadata !1706), !dbg !9307
  store i32 %esc_len, i32* %esc_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %esc_len.addr, metadata !9308, metadata !1706), !dbg !9309
  call void @llvm.dbg.declare(metadata i32* %v, metadata !9310, metadata !1706), !dbg !9311
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9312
  %1 = load i32, i32* %k.addr, align 4, !dbg !9313
  %2 = load i32, i32* %limit.addr, align 4, !dbg !9314
  %3 = load i32, i32* %esc_len.addr, align 4, !dbg !9315
  %call = call i32 @get_ur_golomb(%struct.GetBitContext* %0, i32 %1, i32 %2, i32 %3), !dbg !9316
  store i32 %call, i32* %v, align 4, !dbg !9311
  %4 = load i32, i32* %v, align 4, !dbg !9317
  %shr = lshr i32 %4, 1, !dbg !9318
  %5 = load i32, i32* %v, align 4, !dbg !9319
  %and = and i32 %5, 1, !dbg !9320
  %sub = sub i32 0, %and, !dbg !9321
  %xor = xor i32 %shr, %sub, !dbg !9322
  ret i32 %xor, !dbg !9323
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @update_vlc_state(%struct.VlcState* %state, i32 %v) #7 !dbg !9324 {
entry:
  %state.addr = alloca %struct.VlcState*, align 8
  %v.addr = alloca i32, align 4
  %drift = alloca i32, align 4
  %count = alloca i32, align 4
  store %struct.VlcState* %state, %struct.VlcState** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlcState** %state.addr, metadata !9327, metadata !1706), !dbg !9328
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !9329, metadata !1706), !dbg !9330
  call void @llvm.dbg.declare(metadata i32* %drift, metadata !9331, metadata !1706), !dbg !9332
  %0 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9333
  %drift1 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %0, i32 0, i32 0, !dbg !9334
  %1 = load i16, i16* %drift1, align 2, !dbg !9334
  %conv = sext i16 %1 to i32, !dbg !9333
  store i32 %conv, i32* %drift, align 4, !dbg !9332
  call void @llvm.dbg.declare(metadata i32* %count, metadata !9335, metadata !1706), !dbg !9336
  %2 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9337
  %count2 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %2, i32 0, i32 3, !dbg !9338
  %3 = load i8, i8* %count2, align 1, !dbg !9338
  %conv3 = zext i8 %3 to i32, !dbg !9337
  store i32 %conv3, i32* %count, align 4, !dbg !9336
  %4 = load i32, i32* %v.addr, align 4, !dbg !9339
  %cmp = icmp sge i32 %4, 0, !dbg !9340
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9341

cond.true:                                        ; preds = %entry
  %5 = load i32, i32* %v.addr, align 4, !dbg !9342
  br label %cond.end, !dbg !9344

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %v.addr, align 4, !dbg !9345
  %sub = sub nsw i32 0, %6, !dbg !9347
  br label %cond.end, !dbg !9348

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %sub, %cond.false ], !dbg !9349
  %7 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9351
  %error_sum = getelementptr inbounds %struct.VlcState, %struct.VlcState* %7, i32 0, i32 1, !dbg !9352
  %8 = load i16, i16* %error_sum, align 2, !dbg !9353
  %conv5 = zext i16 %8 to i32, !dbg !9353
  %add = add nsw i32 %conv5, %cond, !dbg !9353
  %conv6 = trunc i32 %add to i16, !dbg !9353
  store i16 %conv6, i16* %error_sum, align 2, !dbg !9353
  %9 = load i32, i32* %v.addr, align 4, !dbg !9354
  %10 = load i32, i32* %drift, align 4, !dbg !9355
  %add7 = add nsw i32 %10, %9, !dbg !9355
  store i32 %add7, i32* %drift, align 4, !dbg !9355
  %11 = load i32, i32* %count, align 4, !dbg !9356
  %cmp8 = icmp eq i32 %11, 128, !dbg !9358
  br i1 %cmp8, label %if.then, label %if.end, !dbg !9359

if.then:                                          ; preds = %cond.end
  %12 = load i32, i32* %count, align 4, !dbg !9360
  %shr = ashr i32 %12, 1, !dbg !9360
  store i32 %shr, i32* %count, align 4, !dbg !9360
  %13 = load i32, i32* %drift, align 4, !dbg !9362
  %shr10 = ashr i32 %13, 1, !dbg !9362
  store i32 %shr10, i32* %drift, align 4, !dbg !9362
  %14 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9363
  %error_sum11 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %14, i32 0, i32 1, !dbg !9364
  %15 = load i16, i16* %error_sum11, align 2, !dbg !9365
  %conv12 = zext i16 %15 to i32, !dbg !9365
  %shr13 = ashr i32 %conv12, 1, !dbg !9365
  %conv14 = trunc i32 %shr13 to i16, !dbg !9365
  store i16 %conv14, i16* %error_sum11, align 2, !dbg !9365
  br label %if.end, !dbg !9366

if.end:                                           ; preds = %if.then, %cond.end
  %16 = load i32, i32* %count, align 4, !dbg !9367
  %inc = add nsw i32 %16, 1, !dbg !9367
  store i32 %inc, i32* %count, align 4, !dbg !9367
  %17 = load i32, i32* %drift, align 4, !dbg !9368
  %18 = load i32, i32* %count, align 4, !dbg !9370
  %sub15 = sub nsw i32 0, %18, !dbg !9371
  %cmp16 = icmp sle i32 %17, %sub15, !dbg !9372
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !9373

if.then18:                                        ; preds = %if.end
  %19 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9374
  %bias = getelementptr inbounds %struct.VlcState, %struct.VlcState* %19, i32 0, i32 2, !dbg !9376
  %20 = load i8, i8* %bias, align 2, !dbg !9376
  %conv19 = sext i8 %20 to i32, !dbg !9374
  %sub20 = sub nsw i32 %conv19, 1, !dbg !9377
  %cmp21 = icmp sgt i32 %sub20, -128, !dbg !9378
  br i1 %cmp21, label %cond.true23, label %cond.false27, !dbg !9379

cond.true23:                                      ; preds = %if.then18
  %21 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9380
  %bias24 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %21, i32 0, i32 2, !dbg !9382
  %22 = load i8, i8* %bias24, align 2, !dbg !9382
  %conv25 = sext i8 %22 to i32, !dbg !9380
  %sub26 = sub nsw i32 %conv25, 1, !dbg !9383
  br label %cond.end28, !dbg !9384

cond.false27:                                     ; preds = %if.then18
  br label %cond.end28, !dbg !9385

cond.end28:                                       ; preds = %cond.false27, %cond.true23
  %cond29 = phi i32 [ %sub26, %cond.true23 ], [ -128, %cond.false27 ], !dbg !9387
  %conv30 = trunc i32 %cond29 to i8, !dbg !9389
  %23 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9390
  %bias31 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %23, i32 0, i32 2, !dbg !9391
  store i8 %conv30, i8* %bias31, align 2, !dbg !9392
  %24 = load i32, i32* %drift, align 4, !dbg !9393
  %25 = load i32, i32* %count, align 4, !dbg !9394
  %add32 = add nsw i32 %24, %25, !dbg !9395
  %26 = load i32, i32* %count, align 4, !dbg !9396
  %sub33 = sub nsw i32 0, %26, !dbg !9397
  %add34 = add nsw i32 %sub33, 1, !dbg !9398
  %cmp35 = icmp sgt i32 %add32, %add34, !dbg !9399
  br i1 %cmp35, label %cond.true37, label %cond.false39, !dbg !9400

cond.true37:                                      ; preds = %cond.end28
  %27 = load i32, i32* %drift, align 4, !dbg !9401
  %28 = load i32, i32* %count, align 4, !dbg !9402
  %add38 = add nsw i32 %27, %28, !dbg !9403
  br label %cond.end42, !dbg !9404

cond.false39:                                     ; preds = %cond.end28
  %29 = load i32, i32* %count, align 4, !dbg !9405
  %sub40 = sub nsw i32 0, %29, !dbg !9406
  %add41 = add nsw i32 %sub40, 1, !dbg !9407
  br label %cond.end42, !dbg !9408

cond.end42:                                       ; preds = %cond.false39, %cond.true37
  %cond43 = phi i32 [ %add38, %cond.true37 ], [ %add41, %cond.false39 ], !dbg !9409
  store i32 %cond43, i32* %drift, align 4, !dbg !9410
  br label %if.end70, !dbg !9411

if.else:                                          ; preds = %if.end
  %30 = load i32, i32* %drift, align 4, !dbg !9412
  %cmp44 = icmp sgt i32 %30, 0, !dbg !9415
  br i1 %cmp44, label %if.then46, label %if.end69, !dbg !9412

if.then46:                                        ; preds = %if.else
  %31 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9416
  %bias47 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %31, i32 0, i32 2, !dbg !9418
  %32 = load i8, i8* %bias47, align 2, !dbg !9418
  %conv48 = sext i8 %32 to i32, !dbg !9416
  %add49 = add nsw i32 %conv48, 1, !dbg !9419
  %cmp50 = icmp sgt i32 %add49, 127, !dbg !9420
  br i1 %cmp50, label %cond.true52, label %cond.false53, !dbg !9421

cond.true52:                                      ; preds = %if.then46
  br label %cond.end57, !dbg !9422

cond.false53:                                     ; preds = %if.then46
  %33 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9424
  %bias54 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %33, i32 0, i32 2, !dbg !9426
  %34 = load i8, i8* %bias54, align 2, !dbg !9426
  %conv55 = sext i8 %34 to i32, !dbg !9424
  %add56 = add nsw i32 %conv55, 1, !dbg !9427
  br label %cond.end57, !dbg !9428

cond.end57:                                       ; preds = %cond.false53, %cond.true52
  %cond58 = phi i32 [ 127, %cond.true52 ], [ %add56, %cond.false53 ], !dbg !9429
  %conv59 = trunc i32 %cond58 to i8, !dbg !9431
  %35 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9432
  %bias60 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %35, i32 0, i32 2, !dbg !9433
  store i8 %conv59, i8* %bias60, align 2, !dbg !9434
  %36 = load i32, i32* %drift, align 4, !dbg !9435
  %37 = load i32, i32* %count, align 4, !dbg !9436
  %sub61 = sub nsw i32 %36, %37, !dbg !9437
  %cmp62 = icmp sgt i32 %sub61, 0, !dbg !9438
  br i1 %cmp62, label %cond.true64, label %cond.false65, !dbg !9439

cond.true64:                                      ; preds = %cond.end57
  br label %cond.end67, !dbg !9440

cond.false65:                                     ; preds = %cond.end57
  %38 = load i32, i32* %drift, align 4, !dbg !9441
  %39 = load i32, i32* %count, align 4, !dbg !9442
  %sub66 = sub nsw i32 %38, %39, !dbg !9443
  br label %cond.end67, !dbg !9444

cond.end67:                                       ; preds = %cond.false65, %cond.true64
  %cond68 = phi i32 [ 0, %cond.true64 ], [ %sub66, %cond.false65 ], !dbg !9445
  store i32 %cond68, i32* %drift, align 4, !dbg !9446
  br label %if.end69, !dbg !9447

if.end69:                                         ; preds = %cond.end67, %if.else
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %cond.end42
  %40 = load i32, i32* %drift, align 4, !dbg !9448
  %conv71 = trunc i32 %40 to i16, !dbg !9448
  %41 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9449
  %drift72 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %41, i32 0, i32 0, !dbg !9450
  store i16 %conv71, i16* %drift72, align 2, !dbg !9451
  %42 = load i32, i32* %count, align 4, !dbg !9452
  %conv73 = trunc i32 %42 to i8, !dbg !9452
  %43 = load %struct.VlcState*, %struct.VlcState** %state.addr, align 8, !dbg !9453
  %count74 = getelementptr inbounds %struct.VlcState, %struct.VlcState* %43, i32 0, i32 3, !dbg !9454
  store i8 %conv73, i8* %count74, align 1, !dbg !9455
  ret void, !dbg !9456
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_ur_golomb(%struct.GetBitContext* %gb, i32 %k, i32 %limit, i32 %esc_len) #7 !dbg !9457 {
entry:
  %x.addr.i41 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i41, metadata !2153, metadata !1706), !dbg !9458
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !2153, metadata !1706), !dbg !9462
  %retval = alloca i32, align 4
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %k.addr = alloca i32, align 4
  %limit.addr = alloca i32, align 4
  %esc_len.addr = alloca i32, align 4
  %buf = alloca i32, align 4
  %log = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !9464, metadata !1706), !dbg !9465
  store i32 %k, i32* %k.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %k.addr, metadata !9466, metadata !1706), !dbg !9467
  store i32 %limit, i32* %limit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %limit.addr, metadata !9468, metadata !1706), !dbg !9469
  store i32 %esc_len, i32* %esc_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %esc_len.addr, metadata !9470, metadata !1706), !dbg !9471
  call void @llvm.dbg.declare(metadata i32* %buf, metadata !9472, metadata !1706), !dbg !9473
  call void @llvm.dbg.declare(metadata i32* %log, metadata !9474, metadata !1706), !dbg !9475
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !9476, metadata !1706), !dbg !9477
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9478
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !9479
  %1 = load i32, i32* %index, align 8, !dbg !9479
  store i32 %1, i32* %re_index, align 4, !dbg !9477
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !9480, metadata !1706), !dbg !9481
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !9482, metadata !1706), !dbg !9483
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9484
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !9485
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !9485
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !9483
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9486
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !9487
  %5 = load i8*, i8** %buffer, align 8, !dbg !9487
  %6 = load i32, i32* %re_index, align 4, !dbg !9488
  %shr = lshr i32 %6, 3, !dbg !9489
  %idx.ext = zext i32 %shr to i64, !dbg !9490
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !9490
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !9491
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !9491
  %8 = load i32, i32* %l, align 1, !dbg !9491
  store i32 %8, i32* %x.addr.i, align 4, !dbg !9492
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !9493
  %shl.i = shl i32 %9, 8, !dbg !9494
  %and.i = and i32 %shl.i, 65280, !dbg !9495
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !9496
  %shr.i = lshr i32 %10, 8, !dbg !9497
  %and1.i = and i32 %shr.i, 255, !dbg !9498
  %or.i = or i32 %and.i, %and1.i, !dbg !9499
  %shl2.i = shl i32 %or.i, 16, !dbg !9500
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !9501
  %shr3.i = lshr i32 %11, 16, !dbg !9502
  %shl4.i = shl i32 %shr3.i, 8, !dbg !9503
  %and5.i = and i32 %shl4.i, 65280, !dbg !9504
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !9505
  %shr6.i = lshr i32 %12, 16, !dbg !9506
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !9507
  %and8.i = and i32 %shr7.i, 255, !dbg !9508
  %or9.i = or i32 %and5.i, %and8.i, !dbg !9509
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !9510
  %13 = load i32, i32* %re_index, align 4, !dbg !9511
  %and = and i32 %13, 7, !dbg !9512
  %shl = shl i32 %or10.i, %and, !dbg !9513
  store i32 %shl, i32* %re_cache, align 4, !dbg !9514
  %14 = load i32, i32* %re_cache, align 4, !dbg !9515
  store i32 %14, i32* %buf, align 4, !dbg !9516
  %15 = load i32, i32* %buf, align 4, !dbg !9517
  %or = or i32 %15, 1, !dbg !9518
  %16 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !9519
  %sub = sub nsw i32 31, %16, !dbg !9520
  store i32 %sub, i32* %log, align 4, !dbg !9521
  %17 = load i32, i32* %log, align 4, !dbg !9522
  %18 = load i32, i32* %limit.addr, align 4, !dbg !9523
  %sub1 = sub nsw i32 31, %18, !dbg !9524
  %cmp = icmp sgt i32 %17, %sub1, !dbg !9525
  br i1 %cmp, label %if.then, label %if.else, !dbg !9526

if.then:                                          ; preds = %entry
  %19 = load i32, i32* %log, align 4, !dbg !9527
  %20 = load i32, i32* %k.addr, align 4, !dbg !9529
  %sub2 = sub nsw i32 %19, %20, !dbg !9530
  %21 = load i32, i32* %buf, align 4, !dbg !9531
  %shr3 = lshr i32 %21, %sub2, !dbg !9531
  store i32 %shr3, i32* %buf, align 4, !dbg !9531
  %22 = load i32, i32* %log, align 4, !dbg !9532
  %sub4 = sub i32 30, %22, !dbg !9533
  %23 = load i32, i32* %k.addr, align 4, !dbg !9534
  %shl5 = shl i32 %sub4, %23, !dbg !9535
  %24 = load i32, i32* %buf, align 4, !dbg !9536
  %add = add i32 %24, %shl5, !dbg !9536
  store i32 %add, i32* %buf, align 4, !dbg !9536
  %25 = load i32, i32* %re_size_plus8, align 4, !dbg !9537
  %26 = load i32, i32* %re_index, align 4, !dbg !9538
  %27 = load i32, i32* %k.addr, align 4, !dbg !9539
  %add6 = add nsw i32 32, %27, !dbg !9540
  %28 = load i32, i32* %log, align 4, !dbg !9541
  %sub7 = sub nsw i32 %add6, %28, !dbg !9542
  %add8 = add i32 %26, %sub7, !dbg !9543
  %cmp9 = icmp ugt i32 %25, %add8, !dbg !9544
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !9545

cond.true:                                        ; preds = %if.then
  %29 = load i32, i32* %re_index, align 4, !dbg !9546
  %30 = load i32, i32* %k.addr, align 4, !dbg !9548
  %add10 = add nsw i32 32, %30, !dbg !9549
  %31 = load i32, i32* %log, align 4, !dbg !9550
  %sub11 = sub nsw i32 %add10, %31, !dbg !9551
  %add12 = add i32 %29, %sub11, !dbg !9552
  br label %cond.end, !dbg !9553

cond.false:                                       ; preds = %if.then
  %32 = load i32, i32* %re_size_plus8, align 4, !dbg !9554
  br label %cond.end, !dbg !9556

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add12, %cond.true ], [ %32, %cond.false ], !dbg !9557
  store i32 %cond, i32* %re_index, align 4, !dbg !9559
  %33 = load i32, i32* %re_index, align 4, !dbg !9560
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9561
  %index13 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %34, i32 0, i32 2, !dbg !9562
  store i32 %33, i32* %index13, align 8, !dbg !9563
  %35 = load i32, i32* %buf, align 4, !dbg !9564
  store i32 %35, i32* %retval, align 4, !dbg !9565
  br label %return, !dbg !9565

if.else:                                          ; preds = %entry
  %36 = load i32, i32* %re_size_plus8, align 4, !dbg !9566
  %37 = load i32, i32* %re_index, align 4, !dbg !9567
  %38 = load i32, i32* %limit.addr, align 4, !dbg !9568
  %add14 = add i32 %37, %38, !dbg !9569
  %cmp15 = icmp ugt i32 %36, %add14, !dbg !9570
  br i1 %cmp15, label %cond.true16, label %cond.false18, !dbg !9571

cond.true16:                                      ; preds = %if.else
  %39 = load i32, i32* %re_index, align 4, !dbg !9572
  %40 = load i32, i32* %limit.addr, align 4, !dbg !9574
  %add17 = add i32 %39, %40, !dbg !9575
  br label %cond.end19, !dbg !9576

cond.false18:                                     ; preds = %if.else
  %41 = load i32, i32* %re_size_plus8, align 4, !dbg !9577
  br label %cond.end19, !dbg !9579

cond.end19:                                       ; preds = %cond.false18, %cond.true16
  %cond20 = phi i32 [ %add17, %cond.true16 ], [ %41, %cond.false18 ], !dbg !9580
  store i32 %cond20, i32* %re_index, align 4, !dbg !9582
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9583
  %buffer21 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %42, i32 0, i32 0, !dbg !9584
  %43 = load i8*, i8** %buffer21, align 8, !dbg !9584
  %44 = load i32, i32* %re_index, align 4, !dbg !9585
  %shr22 = lshr i32 %44, 3, !dbg !9586
  %idx.ext23 = zext i32 %shr22 to i64, !dbg !9587
  %add.ptr24 = getelementptr inbounds i8, i8* %43, i64 %idx.ext23, !dbg !9587
  %45 = bitcast i8* %add.ptr24 to %union.unaligned_32*, !dbg !9588
  %l25 = bitcast %union.unaligned_32* %45 to i32*, !dbg !9588
  %46 = load i32, i32* %l25, align 1, !dbg !9588
  store i32 %46, i32* %x.addr.i41, align 4, !dbg !9589
  %47 = load i32, i32* %x.addr.i41, align 4, !dbg !9590
  %shl.i42 = shl i32 %47, 8, !dbg !9591
  %and.i43 = and i32 %shl.i42, 65280, !dbg !9592
  %48 = load i32, i32* %x.addr.i41, align 4, !dbg !9593
  %shr.i44 = lshr i32 %48, 8, !dbg !9594
  %and1.i45 = and i32 %shr.i44, 255, !dbg !9595
  %or.i46 = or i32 %and.i43, %and1.i45, !dbg !9596
  %shl2.i47 = shl i32 %or.i46, 16, !dbg !9597
  %49 = load i32, i32* %x.addr.i41, align 4, !dbg !9598
  %shr3.i48 = lshr i32 %49, 16, !dbg !9599
  %shl4.i49 = shl i32 %shr3.i48, 8, !dbg !9600
  %and5.i50 = and i32 %shl4.i49, 65280, !dbg !9601
  %50 = load i32, i32* %x.addr.i41, align 4, !dbg !9602
  %shr6.i51 = lshr i32 %50, 16, !dbg !9603
  %shr7.i52 = lshr i32 %shr6.i51, 8, !dbg !9604
  %and8.i53 = and i32 %shr7.i52, 255, !dbg !9605
  %or9.i54 = or i32 %and5.i50, %and8.i53, !dbg !9606
  %or10.i55 = or i32 %shl2.i47, %or9.i54, !dbg !9607
  %51 = load i32, i32* %re_index, align 4, !dbg !9608
  %and27 = and i32 %51, 7, !dbg !9609
  %shl28 = shl i32 %or10.i55, %and27, !dbg !9610
  store i32 %shl28, i32* %re_cache, align 4, !dbg !9611
  %52 = load i32, i32* %re_cache, align 4, !dbg !9612
  %53 = load i32, i32* %esc_len.addr, align 4, !dbg !9613
  %conv = trunc i32 %53 to i8, !dbg !9613
  %call29 = call i32 @NEG_USR32(i32 %52, i8 signext %conv), !dbg !9614
  store i32 %call29, i32* %buf, align 4, !dbg !9615
  %54 = load i32, i32* %re_size_plus8, align 4, !dbg !9616
  %55 = load i32, i32* %re_index, align 4, !dbg !9617
  %56 = load i32, i32* %esc_len.addr, align 4, !dbg !9618
  %add30 = add i32 %55, %56, !dbg !9619
  %cmp31 = icmp ugt i32 %54, %add30, !dbg !9620
  br i1 %cmp31, label %cond.true33, label %cond.false35, !dbg !9621

cond.true33:                                      ; preds = %cond.end19
  %57 = load i32, i32* %re_index, align 4, !dbg !9622
  %58 = load i32, i32* %esc_len.addr, align 4, !dbg !9623
  %add34 = add i32 %57, %58, !dbg !9624
  br label %cond.end36, !dbg !9625

cond.false35:                                     ; preds = %cond.end19
  %59 = load i32, i32* %re_size_plus8, align 4, !dbg !9626
  br label %cond.end36, !dbg !9627

cond.end36:                                       ; preds = %cond.false35, %cond.true33
  %cond37 = phi i32 [ %add34, %cond.true33 ], [ %59, %cond.false35 ], !dbg !9628
  store i32 %cond37, i32* %re_index, align 4, !dbg !9629
  %60 = load i32, i32* %re_index, align 4, !dbg !9630
  %61 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !9631
  %index38 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %61, i32 0, i32 2, !dbg !9632
  store i32 %60, i32* %index38, align 8, !dbg !9633
  %62 = load i32, i32* %buf, align 4, !dbg !9634
  %63 = load i32, i32* %limit.addr, align 4, !dbg !9635
  %add39 = add i32 %62, %63, !dbg !9636
  %sub40 = sub i32 %add39, 1, !dbg !9637
  store i32 %sub40, i32* %retval, align 4, !dbg !9638
  br label %return, !dbg !9638

return:                                           ; preds = %cond.end36, %cond.end
  %64 = load i32, i32* %retval, align 4, !dbg !9639
  ret i32 %64, !dbg !9639
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #3

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @sign_extend(i32 %val, i32 %bits) #9 !dbg !9640 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %v = alloca %union.anon.0, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !9644, metadata !1706), !dbg !9645
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !9646, metadata !1706), !dbg !9647
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !9648, metadata !1706), !dbg !9649
  %0 = load i32, i32* %bits.addr, align 4, !dbg !9650
  %conv = zext i32 %0 to i64, !dbg !9650
  %sub = sub i64 32, %conv, !dbg !9651
  %conv1 = trunc i64 %sub to i32, !dbg !9652
  store i32 %conv1, i32* %shift, align 4, !dbg !9649
  call void @llvm.dbg.declare(metadata %union.anon.0* %v, metadata !9653, metadata !1706), !dbg !9658
  %u = bitcast %union.anon.0* %v to i32*, !dbg !9659
  %1 = load i32, i32* %val.addr, align 4, !dbg !9660
  %2 = load i32, i32* %shift, align 4, !dbg !9661
  %shl = shl i32 %1, %2, !dbg !9662
  store i32 %shl, i32* %u, align 4, !dbg !9659
  %s = bitcast %union.anon.0* %v to i32*, !dbg !9663
  %3 = load i32, i32* %s, align 4, !dbg !9663
  %4 = load i32, i32* %shift, align 4, !dbg !9664
  %shr = ashr i32 %3, %4, !dbg !9665
  ret i32 %shr, !dbg !9666
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @mid_pred(i32 %a, i32 %b, i32 %c) #9 !dbg !9667 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9670, metadata !1706), !dbg !9671
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !9672, metadata !1706), !dbg !9673
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9674, metadata !1706), !dbg !9675
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9676, metadata !1706), !dbg !9677
  %0 = load i32, i32* %b.addr, align 4, !dbg !9678
  store i32 %0, i32* %i, align 4, !dbg !9677
  %1 = load i32, i32* %i, align 4, !dbg !9679
  %2 = load i32, i32* %a.addr, align 4, !dbg !9679
  %3 = load i32, i32* %b.addr, align 4, !dbg !9680
  %4 = load i32, i32* %c.addr, align 4, !dbg !9681
  %5 = call { i32, i32 } asm "cmp    $2, $1 \0A\09cmovg  $1, $0 \0A\09cmovg  $2, $1 \0A\09cmp    $3, $1 \0A\09cmovl  $3, $1 \0A\09cmp    $1, $0 \0A\09cmovg  $1, $0 \0A\09", "=&r,=&r,r,r,0,1,~{dirflag},~{fpsr},~{flags}"(i32 %3, i32 %4, i32 %1, i32 %2) #3, !dbg !9679, !srcloc !9682
  %asmresult = extractvalue { i32, i32 } %5, 0, !dbg !9679
  %asmresult1 = extractvalue { i32, i32 } %5, 1, !dbg !9679
  store i32 %asmresult, i32* %i, align 4, !dbg !9679
  store i32 %asmresult1, i32* %a.addr, align 4, !dbg !9679
  %6 = load i32, i32* %i, align 4, !dbg !9683
  ret i32 %6, !dbg !9684
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_context32(%struct.PlaneContext* %p, i32* %src, i32* %last, i32* %last2) #7 !dbg !9685 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct.PlaneContext*, align 8
  %src.addr = alloca i32*, align 8
  %last.addr = alloca i32*, align 8
  %last2.addr = alloca i32*, align 8
  %LT = alloca i32, align 4
  %T = alloca i32, align 4
  %RT = alloca i32, align 4
  %L = alloca i32, align 4
  %TT = alloca i32, align 4
  %LL = alloca i32, align 4
  store %struct.PlaneContext* %p, %struct.PlaneContext** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PlaneContext** %p.addr, metadata !9688, metadata !1706), !dbg !9689
  store i32* %src, i32** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %src.addr, metadata !9690, metadata !1706), !dbg !9691
  store i32* %last, i32** %last.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %last.addr, metadata !9692, metadata !1706), !dbg !9693
  store i32* %last2, i32** %last2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %last2.addr, metadata !9694, metadata !1706), !dbg !9695
  call void @llvm.dbg.declare(metadata i32* %LT, metadata !9696, metadata !1706), !dbg !9697
  %0 = load i32*, i32** %last.addr, align 8, !dbg !9698
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 -1, !dbg !9698
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9698
  store i32 %1, i32* %LT, align 4, !dbg !9697
  call void @llvm.dbg.declare(metadata i32* %T, metadata !9699, metadata !1706), !dbg !9700
  %2 = load i32*, i32** %last.addr, align 8, !dbg !9701
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 0, !dbg !9701
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !9701
  store i32 %3, i32* %T, align 4, !dbg !9700
  call void @llvm.dbg.declare(metadata i32* %RT, metadata !9702, metadata !1706), !dbg !9703
  %4 = load i32*, i32** %last.addr, align 8, !dbg !9704
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 1, !dbg !9704
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !9704
  store i32 %5, i32* %RT, align 4, !dbg !9703
  call void @llvm.dbg.declare(metadata i32* %L, metadata !9705, metadata !1706), !dbg !9706
  %6 = load i32*, i32** %src.addr, align 8, !dbg !9707
  %arrayidx3 = getelementptr inbounds i32, i32* %6, i64 -1, !dbg !9707
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !9707
  store i32 %7, i32* %L, align 4, !dbg !9706
  %8 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9708
  %quant_table = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %8, i32 0, i32 0, !dbg !9710
  %arrayidx4 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table, i64 0, i64 3, !dbg !9708
  %arrayidx5 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx4, i64 0, i64 127, !dbg !9708
  %9 = load i16, i16* %arrayidx5, align 2, !dbg !9708
  %tobool = icmp ne i16 %9, 0, !dbg !9708
  br i1 %tobool, label %if.then, label %if.else, !dbg !9711

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %TT, metadata !9712, metadata !1706), !dbg !9714
  %10 = load i32*, i32** %last2.addr, align 8, !dbg !9715
  %arrayidx6 = getelementptr inbounds i32, i32* %10, i64 0, !dbg !9715
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !9715
  store i32 %11, i32* %TT, align 4, !dbg !9714
  call void @llvm.dbg.declare(metadata i32* %LL, metadata !9716, metadata !1706), !dbg !9717
  %12 = load i32*, i32** %src.addr, align 8, !dbg !9718
  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 -2, !dbg !9718
  %13 = load i32, i32* %arrayidx7, align 4, !dbg !9718
  store i32 %13, i32* %LL, align 4, !dbg !9717
  %14 = load i32, i32* %L, align 4, !dbg !9719
  %15 = load i32, i32* %LT, align 4, !dbg !9720
  %sub = sub nsw i32 %14, %15, !dbg !9721
  %and = and i32 %sub, 255, !dbg !9722
  %idxprom = sext i32 %and to i64, !dbg !9723
  %16 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9723
  %quant_table8 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %16, i32 0, i32 0, !dbg !9724
  %arrayidx9 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table8, i64 0, i64 0, !dbg !9723
  %arrayidx10 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx9, i64 0, i64 %idxprom, !dbg !9723
  %17 = load i16, i16* %arrayidx10, align 2, !dbg !9723
  %conv = sext i16 %17 to i32, !dbg !9723
  %18 = load i32, i32* %LT, align 4, !dbg !9725
  %19 = load i32, i32* %T, align 4, !dbg !9726
  %sub11 = sub nsw i32 %18, %19, !dbg !9727
  %and12 = and i32 %sub11, 255, !dbg !9728
  %idxprom13 = sext i32 %and12 to i64, !dbg !9729
  %20 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9729
  %quant_table14 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %20, i32 0, i32 0, !dbg !9730
  %arrayidx15 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table14, i64 0, i64 1, !dbg !9729
  %arrayidx16 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx15, i64 0, i64 %idxprom13, !dbg !9729
  %21 = load i16, i16* %arrayidx16, align 2, !dbg !9729
  %conv17 = sext i16 %21 to i32, !dbg !9729
  %add = add nsw i32 %conv, %conv17, !dbg !9731
  %22 = load i32, i32* %T, align 4, !dbg !9732
  %23 = load i32, i32* %RT, align 4, !dbg !9733
  %sub18 = sub nsw i32 %22, %23, !dbg !9734
  %and19 = and i32 %sub18, 255, !dbg !9735
  %idxprom20 = sext i32 %and19 to i64, !dbg !9736
  %24 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9736
  %quant_table21 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %24, i32 0, i32 0, !dbg !9737
  %arrayidx22 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table21, i64 0, i64 2, !dbg !9736
  %arrayidx23 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx22, i64 0, i64 %idxprom20, !dbg !9736
  %25 = load i16, i16* %arrayidx23, align 2, !dbg !9736
  %conv24 = sext i16 %25 to i32, !dbg !9736
  %add25 = add nsw i32 %add, %conv24, !dbg !9738
  %26 = load i32, i32* %LL, align 4, !dbg !9739
  %27 = load i32, i32* %L, align 4, !dbg !9740
  %sub26 = sub nsw i32 %26, %27, !dbg !9741
  %and27 = and i32 %sub26, 255, !dbg !9742
  %idxprom28 = sext i32 %and27 to i64, !dbg !9743
  %28 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9743
  %quant_table29 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %28, i32 0, i32 0, !dbg !9744
  %arrayidx30 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table29, i64 0, i64 3, !dbg !9743
  %arrayidx31 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx30, i64 0, i64 %idxprom28, !dbg !9743
  %29 = load i16, i16* %arrayidx31, align 2, !dbg !9743
  %conv32 = sext i16 %29 to i32, !dbg !9743
  %add33 = add nsw i32 %add25, %conv32, !dbg !9745
  %30 = load i32, i32* %TT, align 4, !dbg !9746
  %31 = load i32, i32* %T, align 4, !dbg !9747
  %sub34 = sub nsw i32 %30, %31, !dbg !9748
  %and35 = and i32 %sub34, 255, !dbg !9749
  %idxprom36 = sext i32 %and35 to i64, !dbg !9750
  %32 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9750
  %quant_table37 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %32, i32 0, i32 0, !dbg !9751
  %arrayidx38 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table37, i64 0, i64 4, !dbg !9750
  %arrayidx39 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx38, i64 0, i64 %idxprom36, !dbg !9750
  %33 = load i16, i16* %arrayidx39, align 2, !dbg !9750
  %conv40 = sext i16 %33 to i32, !dbg !9750
  %add41 = add nsw i32 %add33, %conv40, !dbg !9752
  store i32 %add41, i32* %retval, align 4, !dbg !9753
  br label %return, !dbg !9753

if.else:                                          ; preds = %entry
  %34 = load i32, i32* %L, align 4, !dbg !9754
  %35 = load i32, i32* %LT, align 4, !dbg !9755
  %sub42 = sub nsw i32 %34, %35, !dbg !9756
  %and43 = and i32 %sub42, 255, !dbg !9757
  %idxprom44 = sext i32 %and43 to i64, !dbg !9758
  %36 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9758
  %quant_table45 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %36, i32 0, i32 0, !dbg !9759
  %arrayidx46 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table45, i64 0, i64 0, !dbg !9758
  %arrayidx47 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx46, i64 0, i64 %idxprom44, !dbg !9758
  %37 = load i16, i16* %arrayidx47, align 2, !dbg !9758
  %conv48 = sext i16 %37 to i32, !dbg !9758
  %38 = load i32, i32* %LT, align 4, !dbg !9760
  %39 = load i32, i32* %T, align 4, !dbg !9761
  %sub49 = sub nsw i32 %38, %39, !dbg !9762
  %and50 = and i32 %sub49, 255, !dbg !9763
  %idxprom51 = sext i32 %and50 to i64, !dbg !9764
  %40 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9764
  %quant_table52 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %40, i32 0, i32 0, !dbg !9765
  %arrayidx53 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table52, i64 0, i64 1, !dbg !9764
  %arrayidx54 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx53, i64 0, i64 %idxprom51, !dbg !9764
  %41 = load i16, i16* %arrayidx54, align 2, !dbg !9764
  %conv55 = sext i16 %41 to i32, !dbg !9764
  %add56 = add nsw i32 %conv48, %conv55, !dbg !9766
  %42 = load i32, i32* %T, align 4, !dbg !9767
  %43 = load i32, i32* %RT, align 4, !dbg !9768
  %sub57 = sub nsw i32 %42, %43, !dbg !9769
  %and58 = and i32 %sub57, 255, !dbg !9770
  %idxprom59 = sext i32 %and58 to i64, !dbg !9771
  %44 = load %struct.PlaneContext*, %struct.PlaneContext** %p.addr, align 8, !dbg !9771
  %quant_table60 = getelementptr inbounds %struct.PlaneContext, %struct.PlaneContext* %44, i32 0, i32 0, !dbg !9772
  %arrayidx61 = getelementptr inbounds [5 x [256 x i16]], [5 x [256 x i16]]* %quant_table60, i64 0, i64 2, !dbg !9771
  %arrayidx62 = getelementptr inbounds [256 x i16], [256 x i16]* %arrayidx61, i64 0, i64 %idxprom59, !dbg !9771
  %45 = load i16, i16* %arrayidx62, align 2, !dbg !9771
  %conv63 = sext i16 %45 to i32, !dbg !9771
  %add64 = add nsw i32 %add56, %conv63, !dbg !9773
  store i32 %add64, i32* %retval, align 4, !dbg !9774
  br label %return, !dbg !9774

return:                                           ; preds = %if.else, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !9775
  ret i32 %46, !dbg !9775
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @predict32(i32* %src, i32* %last) #7 !dbg !9776 {
entry:
  %src.addr = alloca i32*, align 8
  %last.addr = alloca i32*, align 8
  %LT = alloca i32, align 4
  %T = alloca i32, align 4
  %L = alloca i32, align 4
  store i32* %src, i32** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %src.addr, metadata !9779, metadata !1706), !dbg !9780
  store i32* %last, i32** %last.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %last.addr, metadata !9781, metadata !1706), !dbg !9782
  call void @llvm.dbg.declare(metadata i32* %LT, metadata !9783, metadata !1706), !dbg !9784
  %0 = load i32*, i32** %last.addr, align 8, !dbg !9785
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 -1, !dbg !9785
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9785
  store i32 %1, i32* %LT, align 4, !dbg !9784
  call void @llvm.dbg.declare(metadata i32* %T, metadata !9786, metadata !1706), !dbg !9787
  %2 = load i32*, i32** %last.addr, align 8, !dbg !9788
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 0, !dbg !9788
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !9788
  store i32 %3, i32* %T, align 4, !dbg !9787
  call void @llvm.dbg.declare(metadata i32* %L, metadata !9789, metadata !1706), !dbg !9790
  %4 = load i32*, i32** %src.addr, align 8, !dbg !9791
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 -1, !dbg !9791
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !9791
  store i32 %5, i32* %L, align 4, !dbg !9790
  %6 = load i32, i32* %L, align 4, !dbg !9792
  %7 = load i32, i32* %L, align 4, !dbg !9793
  %8 = load i32, i32* %T, align 4, !dbg !9794
  %add = add nsw i32 %7, %8, !dbg !9795
  %9 = load i32, i32* %LT, align 4, !dbg !9796
  %sub = sub nsw i32 %add, %9, !dbg !9797
  %10 = load i32, i32* %T, align 4, !dbg !9798
  %call = call i32 @mid_pred(i32 %6, i32 %sub, i32 %10) #3, !dbg !9799
  ret i32 %call, !dbg !9800
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noinline nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1700, !1701}
!llvm.ident = !{!1702}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !921, globals: !951)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--ffv1dec.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !712, !733, !743, !767, !773, !791, !815, !834, !844, !874, !882, !894, !903, !909}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !691, line: 221, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711}
!693 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!694 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!695 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!696 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!697 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!698 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!699 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!700 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!701 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!702 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!703 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!704 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!705 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!706 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!707 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!708 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!709 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!710 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!711 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!712 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !713, line: 29, size: 32, align: 32, elements: !714)
!713 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!714 = !{!715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!715 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!716 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!717 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!718 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!719 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!720 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!721 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!722 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!723 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!724 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!725 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!726 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!727 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!728 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!729 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!730 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!731 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!732 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738, !739, !740, !741, !742}
!735 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!736 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!737 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!738 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!739 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!740 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!741 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!742 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !744, line: 48, size: 32, align: 32, elements: !745)
!744 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!746 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!747 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!748 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!749 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!750 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!751 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!752 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!753 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!754 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!755 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!756 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!757 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!758 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!759 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!760 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !768)
!768 = !{!769, !770, !771, !772}
!769 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!770 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!771 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!772 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!775 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!776 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!777 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!778 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!779 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!780 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!781 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!782 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!783 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!784 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!785 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!786 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!787 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!788 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!789 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!790 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !792)
!792 = !{!793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!793 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!794 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!795 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!796 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!797 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!798 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!799 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!800 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!801 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!802 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!803 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!804 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!805 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!806 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!807 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!809 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!810 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!811 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!812 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!813 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!814 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !816)
!816 = !{!817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833}
!817 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!818 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!819 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!820 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!821 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!822 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!823 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!824 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!825 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!826 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!827 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!828 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!829 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!830 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!831 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!832 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!833 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !835)
!835 = !{!836, !837, !838, !839, !840, !841, !842, !843}
!836 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!837 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!838 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!839 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!840 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!841 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!842 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!843 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !845)
!845 = !{!846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873}
!846 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!847 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!848 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!849 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!850 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!851 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!852 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!853 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!854 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!855 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!856 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!857 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!858 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!859 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!860 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!861 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!862 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!863 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!864 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!865 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!866 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!867 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!868 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!869 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!870 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!871 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!872 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!873 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881}
!876 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!877 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!878 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!879 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!880 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!881 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!884 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!885 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!886 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!887 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!888 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!889 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!890 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!891 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!892 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!893 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901, !902}
!896 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!897 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!898 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!899 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!900 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!901 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!902 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !904)
!904 = !{!905, !906, !907, !908}
!905 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!906 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!907 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!908 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!909 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !910, line: 49, size: 32, align: 32, elements: !911)
!910 = !DIFile(filename: "./libavutil/crc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!911 = !{!912, !913, !914, !915, !916, !917, !918, !919, !920}
!912 = !DIEnumerator(name: "AV_CRC_8_ATM", value: 0)
!913 = !DIEnumerator(name: "AV_CRC_16_ANSI", value: 1)
!914 = !DIEnumerator(name: "AV_CRC_16_CCITT", value: 2)
!915 = !DIEnumerator(name: "AV_CRC_32_IEEE", value: 3)
!916 = !DIEnumerator(name: "AV_CRC_32_IEEE_LE", value: 4)
!917 = !DIEnumerator(name: "AV_CRC_16_ANSI_LE", value: 5)
!918 = !DIEnumerator(name: "AV_CRC_24_IEEE", value: 6)
!919 = !DIEnumerator(name: "AV_CRC_8_EBU", value: 7)
!920 = !DIEnumerator(name: "AV_CRC_MAX", value: 8)
!921 = !{!922, !923, !924, !925, !933, !937, !940, !942, !943, !944, !947, !935, !931, !948, !950}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!923 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!924 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64, align: 64)
!926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !927)
!927 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !928, line: 221, size: 32, align: 8, elements: !929)
!928 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!929 = !{!930}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !927, file: !928, line: 221, baseType: !931, size: 32, align: 32)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !932, line: 51, baseType: !924)
!932 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64, align: 64)
!934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !932, line: 48, baseType: !936)
!936 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !938, line: 197, baseType: !939)
!938 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!939 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !932, line: 55, baseType: !941)
!941 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!942 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64, align: 64)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64, align: 64)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !932, line: 49, baseType: !946)
!946 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64, align: 64)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !938, line: 194, baseType: !949)
!949 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64, align: 64)
!951 = !{!952}
!952 = distinct !DIGlobalVariable(name: "ff_ffv1_decoder", scope: !0, file: !953, line: 1087, type: !954, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_ffv1_decoder)
!953 = !DIFile(filename: "libavcodec/ffv1dec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !955)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !956)
!956 = !{!957, !961, !962, !963, !964, !965, !974, !977, !980, !983, !986, !987, !1059, !1067, !1068, !1069, !1071, !1615, !1621, !1629, !1633, !1634, !1671, !1675, !1679, !1680, !1684, !1688, !1689, !1693, !1694, !1695}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !955, file: !14, line: 3475, baseType: !958, size: 64, align: 64)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64, align: 64)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !960)
!960 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !955, file: !14, line: 3480, baseType: !958, size: 64, align: 64, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !955, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !955, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !955, file: !14, line: 3487, baseType: !923, size: 32, align: 32, offset: 192)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !955, file: !14, line: 3488, baseType: !966, size: 64, align: 64, offset: 256)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64, align: 64)
!967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !969, line: 61, baseType: !970)
!969 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !969, line: 58, size: 64, align: 32, elements: !971)
!971 = !{!972, !973}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !970, file: !969, line: 59, baseType: !923, size: 32, align: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !970, file: !969, line: 60, baseType: !923, size: 32, align: 32, offset: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !955, file: !14, line: 3489, baseType: !975, size: 64, align: 64, offset: 320)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64, align: 64)
!976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !955, file: !14, line: 3490, baseType: !978, size: 64, align: 64, offset: 384)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !923)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !955, file: !14, line: 3491, baseType: !981, size: 64, align: 64, offset: 448)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64, align: 64)
!982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !955, file: !14, line: 3492, baseType: !984, size: 64, align: 64, offset: 512)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64, align: 64)
!985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !940)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !955, file: !14, line: 3493, baseType: !935, size: 8, align: 8, offset: 576)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !955, file: !14, line: 3494, baseType: !988, size: 64, align: 64, offset: 640)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !713, line: 143, baseType: !991)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !713, line: 67, size: 640, align: 64, elements: !992)
!992 = !{!993, !994, !998, !1018, !1019, !1020, !1021, !1025, !1031, !1033, !1037}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !991, file: !713, line: 72, baseType: !958, size: 64, align: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !991, file: !713, line: 78, baseType: !995, size: 64, align: 64, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64, align: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{!958, !922}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !991, file: !713, line: 85, baseType: !999, size: 64, align: 64, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64, align: 64)
!1000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1001)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 246, size: 512, align: 64, elements: !1002)
!1002 = !{!1003, !1004, !1005, !1006, !1007, !1014, !1015, !1016, !1017}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1001, file: !691, line: 247, baseType: !958, size: 64, align: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1001, file: !691, line: 253, baseType: !958, size: 64, align: 64, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1001, file: !691, line: 259, baseType: !923, size: 32, align: 32, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1001, file: !691, line: 260, baseType: !690, size: 32, align: 32, offset: 160)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1001, file: !691, line: 271, baseType: !1008, size: 64, align: 64, offset: 192)
!1008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1001, file: !691, line: 265, size: 64, align: 64, elements: !1009)
!1009 = !{!1010, !1011, !1012, !1013}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1008, file: !691, line: 266, baseType: !937, size: 64, align: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1008, file: !691, line: 267, baseType: !942, size: 64, align: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1008, file: !691, line: 268, baseType: !958, size: 64, align: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1008, file: !691, line: 270, baseType: !968, size: 64, align: 32)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1001, file: !691, line: 272, baseType: !942, size: 64, align: 64, offset: 256)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1001, file: !691, line: 273, baseType: !942, size: 64, align: 64, offset: 320)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1001, file: !691, line: 275, baseType: !923, size: 32, align: 32, offset: 384)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1001, file: !691, line: 300, baseType: !958, size: 64, align: 64, offset: 448)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !991, file: !713, line: 93, baseType: !923, size: 32, align: 32, offset: 192)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !991, file: !713, line: 99, baseType: !923, size: 32, align: 32, offset: 224)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !991, file: !713, line: 108, baseType: !923, size: 32, align: 32, offset: 256)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !991, file: !713, line: 113, baseType: !1022, size: 64, align: 64, offset: 320)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64, align: 64)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!922, !922, !922}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !991, file: !713, line: 123, baseType: !1026, size: 64, align: 64, offset: 384)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64, align: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!1029, !1029}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64, align: 64)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !991)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !991, file: !713, line: 130, baseType: !1032, size: 32, align: 32, offset: 448)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !713, line: 48, baseType: !712)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !991, file: !713, line: 136, baseType: !1034, size: 64, align: 64, offset: 512)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64, align: 64)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!1032, !922}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !991, file: !713, line: 142, baseType: !1038, size: 64, align: 64, offset: 576)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64, align: 64)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{!923, !1041, !922, !958, !923}
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64, align: 64)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 329, size: 128, align: 64, elements: !1044)
!1044 = !{!1045, !1057, !1058}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1043, file: !691, line: 360, baseType: !1046, size: 64, align: 64)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64, align: 64)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64, align: 64)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !691, line: 324, baseType: !1049)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !691, line: 306, size: 384, align: 64, elements: !1050)
!1050 = !{!1051, !1052, !1053, !1054, !1055, !1056}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1049, file: !691, line: 307, baseType: !958, size: 64, align: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1049, file: !691, line: 313, baseType: !942, size: 64, align: 64, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1049, file: !691, line: 313, baseType: !942, size: 64, align: 64, offset: 128)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1049, file: !691, line: 318, baseType: !942, size: 64, align: 64, offset: 192)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1049, file: !691, line: 318, baseType: !942, size: 64, align: 64, offset: 256)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1049, file: !691, line: 323, baseType: !923, size: 32, align: 32, offset: 320)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1043, file: !691, line: 364, baseType: !923, size: 32, align: 32, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1043, file: !691, line: 368, baseType: !923, size: 32, align: 32, offset: 96)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !955, file: !14, line: 3495, baseType: !1060, size: 64, align: 64, offset: 704)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64, align: 64)
!1061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1062)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1064)
!1064 = !{!1065, !1066}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1063, file: !14, line: 3402, baseType: !923, size: 32, align: 32)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1063, file: !14, line: 3403, baseType: !958, size: 64, align: 64, offset: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !955, file: !14, line: 3507, baseType: !958, size: 64, align: 64, offset: 768)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !955, file: !14, line: 3516, baseType: !923, size: 32, align: 32, offset: 832)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !955, file: !14, line: 3517, baseType: !1070, size: 64, align: 64, offset: 896)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64, align: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !955, file: !14, line: 3527, baseType: !1072, size: 64, align: 64, offset: 960)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64, align: 64)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!923, !1075}
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1077)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1078)
!1078 = !{!1079, !1080, !1081, !1082, !1085, !1086, !1087, !1088, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1366, !1370, !1371, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1553, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1077, file: !14, line: 1561, baseType: !988, size: 64, align: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1077, file: !14, line: 1562, baseType: !923, size: 32, align: 32, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1077, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1077, file: !14, line: 1565, baseType: !1083, size: 64, align: 64, offset: 128)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64, align: 64)
!1084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1077, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1077, file: !14, line: 1581, baseType: !924, size: 32, align: 32, offset: 224)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1077, file: !14, line: 1583, baseType: !922, size: 64, align: 64, offset: 256)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1077, file: !14, line: 1591, baseType: !1089, size: 64, align: 64, offset: 320)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64, align: 64)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1091, line: 129, size: 1664, align: 64, elements: !1092)
!1091 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1092 = !{!1093, !1094, !1095, !1096, !1192, !1213, !1214, !1243, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1090, file: !1091, line: 136, baseType: !923, size: 32, align: 32)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1090, file: !1091, line: 151, baseType: !923, size: 32, align: 32, offset: 32)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1090, file: !1091, line: 157, baseType: !923, size: 32, align: 32, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1090, file: !1091, line: 159, baseType: !1097, size: 64, align: 64, offset: 128)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64, align: 64)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !744, line: 646, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !744, line: 268, size: 4288, align: 64, elements: !1100)
!1100 = !{!1101, !1106, !1108, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1146, !1148, !1149, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1180, !1181, !1182, !1183, !1184, !1185, !1188, !1189, !1190, !1191}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1099, file: !744, line: 282, baseType: !1102, size: 512, align: 64)
!1102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1103, size: 512, align: 64, elements: !1104)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64, align: 64)
!1104 = !{!1105}
!1105 = !DISubrange(count: 8)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1099, file: !744, line: 299, baseType: !1107, size: 256, align: 32, offset: 512)
!1107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 256, align: 32, elements: !1104)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1099, file: !744, line: 315, baseType: !1109, size: 64, align: 64, offset: 768)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64, align: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1099, file: !744, line: 326, baseType: !923, size: 32, align: 32, offset: 832)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1099, file: !744, line: 326, baseType: !923, size: 32, align: 32, offset: 864)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1099, file: !744, line: 334, baseType: !923, size: 32, align: 32, offset: 896)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1099, file: !744, line: 341, baseType: !923, size: 32, align: 32, offset: 928)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1099, file: !744, line: 346, baseType: !923, size: 32, align: 32, offset: 960)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1099, file: !744, line: 351, baseType: !733, size: 32, align: 32, offset: 992)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1099, file: !744, line: 356, baseType: !968, size: 64, align: 32, offset: 1024)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1099, file: !744, line: 361, baseType: !937, size: 64, align: 64, offset: 1088)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1099, file: !744, line: 369, baseType: !937, size: 64, align: 64, offset: 1152)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1099, file: !744, line: 377, baseType: !937, size: 64, align: 64, offset: 1216)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1099, file: !744, line: 382, baseType: !923, size: 32, align: 32, offset: 1280)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1099, file: !744, line: 386, baseType: !923, size: 32, align: 32, offset: 1312)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1099, file: !744, line: 391, baseType: !923, size: 32, align: 32, offset: 1344)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1099, file: !744, line: 396, baseType: !922, size: 64, align: 64, offset: 1408)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1099, file: !744, line: 403, baseType: !1125, size: 512, align: 64, offset: 1472)
!1125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !940, size: 512, align: 64, elements: !1104)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1099, file: !744, line: 410, baseType: !923, size: 32, align: 32, offset: 1984)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1099, file: !744, line: 415, baseType: !923, size: 32, align: 32, offset: 2016)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1099, file: !744, line: 420, baseType: !923, size: 32, align: 32, offset: 2048)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1099, file: !744, line: 425, baseType: !923, size: 32, align: 32, offset: 2080)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1099, file: !744, line: 435, baseType: !937, size: 64, align: 64, offset: 2112)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1099, file: !744, line: 440, baseType: !923, size: 32, align: 32, offset: 2176)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1099, file: !744, line: 445, baseType: !940, size: 64, align: 64, offset: 2240)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1099, file: !744, line: 459, baseType: !1134, size: 512, align: 64, offset: 2304)
!1134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1135, size: 512, align: 64, elements: !1104)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64, align: 64)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1137, line: 94, baseType: !1138)
!1137 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1137, line: 81, size: 192, align: 64, elements: !1139)
!1139 = !{!1140, !1144, !1145}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1138, file: !1137, line: 82, baseType: !1141, size: 64, align: 64)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1137, line: 73, baseType: !1143)
!1143 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1137, line: 73, flags: DIFlagFwdDecl)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1138, file: !1137, line: 89, baseType: !1103, size: 64, align: 64, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1138, file: !1137, line: 93, baseType: !923, size: 32, align: 32, offset: 128)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1099, file: !744, line: 473, baseType: !1147, size: 64, align: 64, offset: 2816)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64, align: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1099, file: !744, line: 477, baseType: !923, size: 32, align: 32, offset: 2880)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1099, file: !744, line: 479, baseType: !1150, size: 64, align: 64, offset: 2944)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64, align: 64)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64, align: 64)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !744, line: 207, baseType: !1153)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !744, line: 201, size: 320, align: 64, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1163}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1153, file: !744, line: 202, baseType: !743, size: 32, align: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1153, file: !744, line: 203, baseType: !1103, size: 64, align: 64, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1153, file: !744, line: 204, baseType: !923, size: 32, align: 32, offset: 128)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1153, file: !744, line: 205, baseType: !1159, size: 64, align: 64, offset: 192)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64, align: 64)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1161, line: 86, baseType: !1162)
!1161 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1162 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1161, line: 86, flags: DIFlagFwdDecl)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1153, file: !744, line: 206, baseType: !1135, size: 64, align: 64, offset: 256)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1099, file: !744, line: 480, baseType: !923, size: 32, align: 32, offset: 3008)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1099, file: !744, line: 505, baseType: !923, size: 32, align: 32, offset: 3040)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1099, file: !744, line: 512, baseType: !767, size: 32, align: 32, offset: 3072)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1099, file: !744, line: 514, baseType: !773, size: 32, align: 32, offset: 3104)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1099, file: !744, line: 516, baseType: !791, size: 32, align: 32, offset: 3136)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1099, file: !744, line: 523, baseType: !815, size: 32, align: 32, offset: 3168)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1099, file: !744, line: 525, baseType: !834, size: 32, align: 32, offset: 3200)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1099, file: !744, line: 532, baseType: !937, size: 64, align: 64, offset: 3264)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1099, file: !744, line: 539, baseType: !937, size: 64, align: 64, offset: 3328)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1099, file: !744, line: 547, baseType: !937, size: 64, align: 64, offset: 3392)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1099, file: !744, line: 554, baseType: !1159, size: 64, align: 64, offset: 3456)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1099, file: !744, line: 563, baseType: !923, size: 32, align: 32, offset: 3520)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1099, file: !744, line: 572, baseType: !923, size: 32, align: 32, offset: 3552)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1099, file: !744, line: 581, baseType: !923, size: 32, align: 32, offset: 3584)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1099, file: !744, line: 588, baseType: !1179, size: 64, align: 64, offset: 3648)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1099, file: !744, line: 593, baseType: !923, size: 32, align: 32, offset: 3712)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1099, file: !744, line: 596, baseType: !923, size: 32, align: 32, offset: 3744)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1099, file: !744, line: 599, baseType: !1135, size: 64, align: 64, offset: 3776)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1099, file: !744, line: 605, baseType: !1135, size: 64, align: 64, offset: 3840)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1099, file: !744, line: 616, baseType: !1135, size: 64, align: 64, offset: 3904)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1099, file: !744, line: 626, baseType: !1186, size: 64, align: 64, offset: 3968)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1187, line: 216, baseType: !941)
!1187 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1099, file: !744, line: 627, baseType: !1186, size: 64, align: 64, offset: 4032)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1099, file: !744, line: 628, baseType: !1186, size: 64, align: 64, offset: 4096)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1099, file: !744, line: 629, baseType: !1186, size: 64, align: 64, offset: 4160)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1099, file: !744, line: 645, baseType: !1135, size: 64, align: 64, offset: 4224)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1090, file: !1091, line: 161, baseType: !1193, size: 64, align: 64, offset: 192)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64, align: 64)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1091, line: 117, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1091, line: 100, size: 832, align: 64, elements: !1196)
!1196 = !{!1197, !1204, !1205, !1206, !1207, !1208, !1210, !1211, !1212}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1195, file: !1091, line: 105, baseType: !1198, size: 256, align: 64)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1199, size: 256, align: 64, elements: !1202)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64, align: 64)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1137, line: 238, baseType: !1201)
!1201 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1137, line: 238, flags: DIFlagFwdDecl)
!1202 = !{!1203}
!1203 = !DISubrange(count: 4)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1195, file: !1091, line: 110, baseType: !923, size: 32, align: 32, offset: 256)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1195, file: !1091, line: 111, baseType: !923, size: 32, align: 32, offset: 288)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1195, file: !1091, line: 111, baseType: !923, size: 32, align: 32, offset: 320)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1195, file: !1091, line: 112, baseType: !1107, size: 256, align: 32, offset: 352)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1195, file: !1091, line: 113, baseType: !1209, size: 128, align: 32, offset: 608)
!1209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 128, align: 32, elements: !1202)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1195, file: !1091, line: 114, baseType: !923, size: 32, align: 32, offset: 736)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1195, file: !1091, line: 115, baseType: !923, size: 32, align: 32, offset: 768)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1195, file: !1091, line: 116, baseType: !923, size: 32, align: 32, offset: 800)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1090, file: !1091, line: 163, baseType: !922, size: 64, align: 64, offset: 256)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1090, file: !1091, line: 165, baseType: !1215, size: 128, align: 64, offset: 320)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1091, line: 122, baseType: !1216)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1091, line: 119, size: 128, align: 64, elements: !1217)
!1217 = !{!1218, !1242}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1216, file: !1091, line: 120, baseType: !1219, size: 64, align: 64)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64, align: 64)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1222)
!1222 = !{!1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1238, !1239, !1240, !1241}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1221, file: !14, line: 1451, baseType: !1135, size: 64, align: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1221, file: !14, line: 1461, baseType: !937, size: 64, align: 64, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1221, file: !14, line: 1467, baseType: !937, size: 64, align: 64, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1221, file: !14, line: 1468, baseType: !1103, size: 64, align: 64, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1221, file: !14, line: 1469, baseType: !923, size: 32, align: 32, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1221, file: !14, line: 1470, baseType: !923, size: 32, align: 32, offset: 288)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1221, file: !14, line: 1474, baseType: !923, size: 32, align: 32, offset: 320)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1221, file: !14, line: 1479, baseType: !1231, size: 64, align: 64, offset: 384)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64, align: 64)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1233)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1234)
!1234 = !{!1235, !1236, !1237}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1233, file: !14, line: 1412, baseType: !1103, size: 64, align: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1233, file: !14, line: 1413, baseType: !923, size: 32, align: 32, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1233, file: !14, line: 1414, baseType: !844, size: 32, align: 32, offset: 96)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1221, file: !14, line: 1480, baseType: !923, size: 32, align: 32, offset: 448)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1221, file: !14, line: 1486, baseType: !937, size: 64, align: 64, offset: 512)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1221, file: !14, line: 1488, baseType: !937, size: 64, align: 64, offset: 576)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1221, file: !14, line: 1497, baseType: !937, size: 64, align: 64, offset: 640)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1216, file: !1091, line: 121, baseType: !1097, size: 64, align: 64, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1090, file: !1091, line: 166, baseType: !1244, size: 128, align: 64, offset: 448)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1091, line: 127, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1091, line: 124, size: 128, align: 64, elements: !1246)
!1246 = !{!1247, !1320}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1245, file: !1091, line: 125, baseType: !1248, size: 64, align: 64)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64, align: 64)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64, align: 64)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1252)
!1252 = !{!1253, !1254, !1278, !1282, !1283, !1317, !1318, !1319}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1251, file: !14, line: 5751, baseType: !988, size: 64, align: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1251, file: !14, line: 5756, baseType: !1255, size: 64, align: 64, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64, align: 64)
!1256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1257)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1258)
!1258 = !{!1259, !1260, !1263, !1264, !1265, !1269, !1273, !1277}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1257, file: !14, line: 5797, baseType: !958, size: 64, align: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1257, file: !14, line: 5804, baseType: !1261, size: 64, align: 64, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64, align: 64)
!1262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1257, file: !14, line: 5815, baseType: !988, size: 64, align: 64, offset: 128)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1257, file: !14, line: 5825, baseType: !923, size: 32, align: 32, offset: 192)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1257, file: !14, line: 5826, baseType: !1266, size: 64, align: 64, offset: 256)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64, align: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!923, !1249}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1257, file: !14, line: 5827, baseType: !1270, size: 64, align: 64, offset: 320)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64, align: 64)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!923, !1249, !1219}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1257, file: !14, line: 5828, baseType: !1274, size: 64, align: 64, offset: 384)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64, align: 64)
!1275 = !DISubroutineType(types: !1276)
!1276 = !{null, !1249}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1257, file: !14, line: 5829, baseType: !1274, size: 64, align: 64, offset: 448)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1251, file: !14, line: 5762, baseType: !1279, size: 64, align: 64, offset: 128)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64, align: 64)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1281)
!1281 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1251, file: !14, line: 5768, baseType: !922, size: 64, align: 64, offset: 192)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1251, file: !14, line: 5775, baseType: !1284, size: 64, align: 64, offset: 256)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64, align: 64)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1286)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1287)
!1287 = !{!1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1286, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1286, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1286, file: !14, line: 3948, baseType: !931, size: 32, align: 32, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1286, file: !14, line: 3958, baseType: !1103, size: 64, align: 64, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1286, file: !14, line: 3962, baseType: !923, size: 32, align: 32, offset: 192)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1286, file: !14, line: 3968, baseType: !923, size: 32, align: 32, offset: 224)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1286, file: !14, line: 3973, baseType: !937, size: 64, align: 64, offset: 256)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1286, file: !14, line: 3986, baseType: !923, size: 32, align: 32, offset: 320)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1286, file: !14, line: 3999, baseType: !923, size: 32, align: 32, offset: 352)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1286, file: !14, line: 4004, baseType: !923, size: 32, align: 32, offset: 384)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1286, file: !14, line: 4005, baseType: !923, size: 32, align: 32, offset: 416)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1286, file: !14, line: 4010, baseType: !923, size: 32, align: 32, offset: 448)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1286, file: !14, line: 4011, baseType: !923, size: 32, align: 32, offset: 480)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1286, file: !14, line: 4020, baseType: !968, size: 64, align: 32, offset: 512)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1286, file: !14, line: 4025, baseType: !874, size: 32, align: 32, offset: 576)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1286, file: !14, line: 4030, baseType: !767, size: 32, align: 32, offset: 608)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1286, file: !14, line: 4031, baseType: !773, size: 32, align: 32, offset: 640)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1286, file: !14, line: 4032, baseType: !791, size: 32, align: 32, offset: 672)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1286, file: !14, line: 4033, baseType: !815, size: 32, align: 32, offset: 704)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1286, file: !14, line: 4034, baseType: !834, size: 32, align: 32, offset: 736)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1286, file: !14, line: 4039, baseType: !923, size: 32, align: 32, offset: 768)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1286, file: !14, line: 4046, baseType: !940, size: 64, align: 64, offset: 832)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1286, file: !14, line: 4050, baseType: !923, size: 32, align: 32, offset: 896)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1286, file: !14, line: 4054, baseType: !923, size: 32, align: 32, offset: 928)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1286, file: !14, line: 4061, baseType: !923, size: 32, align: 32, offset: 960)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1286, file: !14, line: 4065, baseType: !923, size: 32, align: 32, offset: 992)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1286, file: !14, line: 4073, baseType: !923, size: 32, align: 32, offset: 1024)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1286, file: !14, line: 4080, baseType: !923, size: 32, align: 32, offset: 1056)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1286, file: !14, line: 4084, baseType: !923, size: 32, align: 32, offset: 1088)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1251, file: !14, line: 5781, baseType: !1284, size: 64, align: 64, offset: 320)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1251, file: !14, line: 5787, baseType: !968, size: 64, align: 32, offset: 384)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1251, file: !14, line: 5793, baseType: !968, size: 64, align: 32, offset: 448)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1245, file: !1091, line: 126, baseType: !923, size: 32, align: 32, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1090, file: !1091, line: 172, baseType: !1219, size: 64, align: 64, offset: 576)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1090, file: !1091, line: 177, baseType: !1103, size: 64, align: 64, offset: 640)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1090, file: !1091, line: 178, baseType: !924, size: 32, align: 32, offset: 704)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1090, file: !1091, line: 180, baseType: !922, size: 64, align: 64, offset: 768)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1090, file: !1091, line: 185, baseType: !923, size: 32, align: 32, offset: 832)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1090, file: !1091, line: 190, baseType: !922, size: 64, align: 64, offset: 896)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1090, file: !1091, line: 195, baseType: !923, size: 32, align: 32, offset: 960)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1090, file: !1091, line: 200, baseType: !1219, size: 64, align: 64, offset: 1024)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1090, file: !1091, line: 201, baseType: !923, size: 32, align: 32, offset: 1088)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1090, file: !1091, line: 202, baseType: !1097, size: 64, align: 64, offset: 1152)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1090, file: !1091, line: 203, baseType: !923, size: 32, align: 32, offset: 1216)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1090, file: !1091, line: 205, baseType: !923, size: 32, align: 32, offset: 1248)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1090, file: !1091, line: 206, baseType: !923, size: 32, align: 32, offset: 1280)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1090, file: !1091, line: 209, baseType: !1186, size: 64, align: 64, offset: 1344)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1090, file: !1091, line: 212, baseType: !1186, size: 64, align: 64, offset: 1408)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1090, file: !1091, line: 213, baseType: !1097, size: 64, align: 64, offset: 1472)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1090, file: !1091, line: 215, baseType: !923, size: 32, align: 32, offset: 1536)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1090, file: !1091, line: 217, baseType: !923, size: 32, align: 32, offset: 1568)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1090, file: !1091, line: 220, baseType: !923, size: 32, align: 32, offset: 1600)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1077, file: !14, line: 1598, baseType: !922, size: 64, align: 64, offset: 384)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1077, file: !14, line: 1606, baseType: !937, size: 64, align: 64, offset: 448)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1077, file: !14, line: 1614, baseType: !923, size: 32, align: 32, offset: 512)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1077, file: !14, line: 1622, baseType: !923, size: 32, align: 32, offset: 544)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1077, file: !14, line: 1628, baseType: !923, size: 32, align: 32, offset: 576)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1077, file: !14, line: 1636, baseType: !923, size: 32, align: 32, offset: 608)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1077, file: !14, line: 1643, baseType: !923, size: 32, align: 32, offset: 640)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1077, file: !14, line: 1657, baseType: !1103, size: 64, align: 64, offset: 704)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1077, file: !14, line: 1658, baseType: !923, size: 32, align: 32, offset: 768)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1077, file: !14, line: 1679, baseType: !968, size: 64, align: 32, offset: 800)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1077, file: !14, line: 1688, baseType: !923, size: 32, align: 32, offset: 864)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1077, file: !14, line: 1712, baseType: !923, size: 32, align: 32, offset: 896)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1077, file: !14, line: 1729, baseType: !923, size: 32, align: 32, offset: 928)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1077, file: !14, line: 1729, baseType: !923, size: 32, align: 32, offset: 960)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1077, file: !14, line: 1744, baseType: !923, size: 32, align: 32, offset: 992)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1077, file: !14, line: 1744, baseType: !923, size: 32, align: 32, offset: 1024)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1077, file: !14, line: 1751, baseType: !923, size: 32, align: 32, offset: 1056)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1077, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1077, file: !14, line: 1791, baseType: !1359, size: 64, align: 64, offset: 1152)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64, align: 64)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{null, !1362, !1363, !1365, !923, !923, !923}
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64, align: 64)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64, align: 64)
!1364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1098)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64, align: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1077, file: !14, line: 1808, baseType: !1367, size: 64, align: 64, offset: 1216)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64, align: 64)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!473, !1362, !975}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1077, file: !14, line: 1816, baseType: !923, size: 32, align: 32, offset: 1280)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1077, file: !14, line: 1825, baseType: !1372, size: 32, align: 32, offset: 1312)
!1372 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1077, file: !14, line: 1830, baseType: !923, size: 32, align: 32, offset: 1344)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1077, file: !14, line: 1838, baseType: !1372, size: 32, align: 32, offset: 1376)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1077, file: !14, line: 1846, baseType: !923, size: 32, align: 32, offset: 1408)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1077, file: !14, line: 1851, baseType: !923, size: 32, align: 32, offset: 1440)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1077, file: !14, line: 1861, baseType: !1372, size: 32, align: 32, offset: 1472)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1077, file: !14, line: 1868, baseType: !1372, size: 32, align: 32, offset: 1504)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1077, file: !14, line: 1875, baseType: !1372, size: 32, align: 32, offset: 1536)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1077, file: !14, line: 1882, baseType: !1372, size: 32, align: 32, offset: 1568)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1077, file: !14, line: 1889, baseType: !1372, size: 32, align: 32, offset: 1600)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1077, file: !14, line: 1896, baseType: !1372, size: 32, align: 32, offset: 1632)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1077, file: !14, line: 1903, baseType: !1372, size: 32, align: 32, offset: 1664)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1077, file: !14, line: 1910, baseType: !923, size: 32, align: 32, offset: 1696)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1077, file: !14, line: 1915, baseType: !923, size: 32, align: 32, offset: 1728)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1077, file: !14, line: 1926, baseType: !1365, size: 64, align: 64, offset: 1792)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1077, file: !14, line: 1935, baseType: !968, size: 64, align: 32, offset: 1856)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1077, file: !14, line: 1942, baseType: !923, size: 32, align: 32, offset: 1920)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1077, file: !14, line: 1948, baseType: !923, size: 32, align: 32, offset: 1952)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1077, file: !14, line: 1954, baseType: !923, size: 32, align: 32, offset: 1984)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1077, file: !14, line: 1960, baseType: !923, size: 32, align: 32, offset: 2016)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1077, file: !14, line: 1984, baseType: !923, size: 32, align: 32, offset: 2048)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1077, file: !14, line: 1991, baseType: !923, size: 32, align: 32, offset: 2080)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1077, file: !14, line: 1996, baseType: !923, size: 32, align: 32, offset: 2112)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1077, file: !14, line: 2004, baseType: !923, size: 32, align: 32, offset: 2144)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1077, file: !14, line: 2011, baseType: !923, size: 32, align: 32, offset: 2176)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1077, file: !14, line: 2018, baseType: !923, size: 32, align: 32, offset: 2208)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1077, file: !14, line: 2027, baseType: !923, size: 32, align: 32, offset: 2240)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1077, file: !14, line: 2034, baseType: !923, size: 32, align: 32, offset: 2272)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1077, file: !14, line: 2044, baseType: !923, size: 32, align: 32, offset: 2304)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1077, file: !14, line: 2054, baseType: !944, size: 64, align: 64, offset: 2368)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1077, file: !14, line: 2061, baseType: !944, size: 64, align: 64, offset: 2432)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1077, file: !14, line: 2066, baseType: !923, size: 32, align: 32, offset: 2496)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1077, file: !14, line: 2070, baseType: !923, size: 32, align: 32, offset: 2528)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1077, file: !14, line: 2078, baseType: !923, size: 32, align: 32, offset: 2560)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1077, file: !14, line: 2085, baseType: !923, size: 32, align: 32, offset: 2592)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1077, file: !14, line: 2092, baseType: !923, size: 32, align: 32, offset: 2624)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1077, file: !14, line: 2099, baseType: !923, size: 32, align: 32, offset: 2656)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1077, file: !14, line: 2106, baseType: !923, size: 32, align: 32, offset: 2688)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1077, file: !14, line: 2113, baseType: !923, size: 32, align: 32, offset: 2720)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1077, file: !14, line: 2120, baseType: !923, size: 32, align: 32, offset: 2752)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1077, file: !14, line: 2125, baseType: !923, size: 32, align: 32, offset: 2784)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1077, file: !14, line: 2133, baseType: !923, size: 32, align: 32, offset: 2816)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1077, file: !14, line: 2140, baseType: !923, size: 32, align: 32, offset: 2848)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1077, file: !14, line: 2145, baseType: !923, size: 32, align: 32, offset: 2880)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1077, file: !14, line: 2153, baseType: !923, size: 32, align: 32, offset: 2912)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1077, file: !14, line: 2158, baseType: !923, size: 32, align: 32, offset: 2944)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1077, file: !14, line: 2166, baseType: !773, size: 32, align: 32, offset: 2976)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1077, file: !14, line: 2173, baseType: !791, size: 32, align: 32, offset: 3008)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1077, file: !14, line: 2180, baseType: !815, size: 32, align: 32, offset: 3040)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1077, file: !14, line: 2187, baseType: !767, size: 32, align: 32, offset: 3072)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1077, file: !14, line: 2194, baseType: !834, size: 32, align: 32, offset: 3104)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1077, file: !14, line: 2203, baseType: !923, size: 32, align: 32, offset: 3136)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1077, file: !14, line: 2209, baseType: !874, size: 32, align: 32, offset: 3168)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1077, file: !14, line: 2212, baseType: !923, size: 32, align: 32, offset: 3200)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1077, file: !14, line: 2213, baseType: !923, size: 32, align: 32, offset: 3232)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1077, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1077, file: !14, line: 2232, baseType: !923, size: 32, align: 32, offset: 3296)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1077, file: !14, line: 2243, baseType: !923, size: 32, align: 32, offset: 3328)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1077, file: !14, line: 2249, baseType: !923, size: 32, align: 32, offset: 3360)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1077, file: !14, line: 2256, baseType: !923, size: 32, align: 32, offset: 3392)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1077, file: !14, line: 2263, baseType: !940, size: 64, align: 64, offset: 3456)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1077, file: !14, line: 2270, baseType: !940, size: 64, align: 64, offset: 3520)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1077, file: !14, line: 2277, baseType: !882, size: 32, align: 32, offset: 3584)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1077, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1077, file: !14, line: 2367, baseType: !1437, size: 64, align: 64, offset: 3648)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64, align: 64)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!923, !1362, !1097, !923}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1077, file: !14, line: 2383, baseType: !923, size: 32, align: 32, offset: 3712)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1077, file: !14, line: 2386, baseType: !1372, size: 32, align: 32, offset: 3744)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1077, file: !14, line: 2387, baseType: !1372, size: 32, align: 32, offset: 3776)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1077, file: !14, line: 2394, baseType: !923, size: 32, align: 32, offset: 3808)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1077, file: !14, line: 2401, baseType: !923, size: 32, align: 32, offset: 3840)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1077, file: !14, line: 2408, baseType: !923, size: 32, align: 32, offset: 3872)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1077, file: !14, line: 2415, baseType: !923, size: 32, align: 32, offset: 3904)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1077, file: !14, line: 2422, baseType: !923, size: 32, align: 32, offset: 3936)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1077, file: !14, line: 2423, baseType: !1449, size: 64, align: 64, offset: 3968)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64, align: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1452)
!1452 = !{!1453, !1454, !1455, !1456}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1451, file: !14, line: 827, baseType: !923, size: 32, align: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1451, file: !14, line: 828, baseType: !923, size: 32, align: 32, offset: 32)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1451, file: !14, line: 829, baseType: !923, size: 32, align: 32, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1451, file: !14, line: 830, baseType: !1372, size: 32, align: 32, offset: 96)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1077, file: !14, line: 2430, baseType: !937, size: 64, align: 64, offset: 4032)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1077, file: !14, line: 2437, baseType: !937, size: 64, align: 64, offset: 4096)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1077, file: !14, line: 2444, baseType: !1372, size: 32, align: 32, offset: 4160)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1077, file: !14, line: 2451, baseType: !1372, size: 32, align: 32, offset: 4192)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1077, file: !14, line: 2458, baseType: !923, size: 32, align: 32, offset: 4224)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1077, file: !14, line: 2469, baseType: !923, size: 32, align: 32, offset: 4256)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1077, file: !14, line: 2475, baseType: !923, size: 32, align: 32, offset: 4288)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1077, file: !14, line: 2481, baseType: !923, size: 32, align: 32, offset: 4320)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1077, file: !14, line: 2485, baseType: !923, size: 32, align: 32, offset: 4352)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1077, file: !14, line: 2489, baseType: !923, size: 32, align: 32, offset: 4384)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1077, file: !14, line: 2493, baseType: !923, size: 32, align: 32, offset: 4416)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1077, file: !14, line: 2501, baseType: !923, size: 32, align: 32, offset: 4448)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1077, file: !14, line: 2506, baseType: !923, size: 32, align: 32, offset: 4480)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1077, file: !14, line: 2510, baseType: !923, size: 32, align: 32, offset: 4512)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1077, file: !14, line: 2514, baseType: !937, size: 64, align: 64, offset: 4544)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1077, file: !14, line: 2528, baseType: !1473, size: 64, align: 64, offset: 4608)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64, align: 64)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{null, !1362, !922, !923, !923}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1077, file: !14, line: 2534, baseType: !923, size: 32, align: 32, offset: 4672)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1077, file: !14, line: 2545, baseType: !923, size: 32, align: 32, offset: 4704)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1077, file: !14, line: 2547, baseType: !923, size: 32, align: 32, offset: 4736)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1077, file: !14, line: 2549, baseType: !923, size: 32, align: 32, offset: 4768)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1077, file: !14, line: 2551, baseType: !923, size: 32, align: 32, offset: 4800)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1077, file: !14, line: 2553, baseType: !923, size: 32, align: 32, offset: 4832)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1077, file: !14, line: 2555, baseType: !923, size: 32, align: 32, offset: 4864)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1077, file: !14, line: 2557, baseType: !923, size: 32, align: 32, offset: 4896)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1077, file: !14, line: 2559, baseType: !923, size: 32, align: 32, offset: 4928)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1077, file: !14, line: 2563, baseType: !923, size: 32, align: 32, offset: 4960)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1077, file: !14, line: 2571, baseType: !1487, size: 64, align: 64, offset: 4992)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64, align: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1077, file: !14, line: 2579, baseType: !1487, size: 64, align: 64, offset: 5056)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1077, file: !14, line: 2586, baseType: !923, size: 32, align: 32, offset: 5120)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1077, file: !14, line: 2615, baseType: !923, size: 32, align: 32, offset: 5152)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1077, file: !14, line: 2627, baseType: !923, size: 32, align: 32, offset: 5184)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1077, file: !14, line: 2637, baseType: !923, size: 32, align: 32, offset: 5216)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1077, file: !14, line: 2681, baseType: !923, size: 32, align: 32, offset: 5248)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1077, file: !14, line: 2709, baseType: !937, size: 64, align: 64, offset: 5312)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1077, file: !14, line: 2716, baseType: !1496, size: 64, align: 64, offset: 5376)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64, align: 64)
!1497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1499)
!1499 = !{!1500, !1501, !1502, !1503, !1504, !1505, !1509, !1513, !1517, !1518, !1519, !1520, !1526, !1527, !1528, !1529, !1530}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1498, file: !14, line: 3642, baseType: !958, size: 64, align: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1498, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1498, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1498, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1498, file: !14, line: 3669, baseType: !923, size: 32, align: 32, offset: 160)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1498, file: !14, line: 3682, baseType: !1506, size: 64, align: 64, offset: 192)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64, align: 64)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!923, !1075, !1097}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1498, file: !14, line: 3698, baseType: !1510, size: 64, align: 64, offset: 256)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64, align: 64)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!923, !1075, !933, !931}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1498, file: !14, line: 3712, baseType: !1514, size: 64, align: 64, offset: 320)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64, align: 64)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!923, !1075, !923, !933, !931}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1498, file: !14, line: 3726, baseType: !1510, size: 64, align: 64, offset: 384)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1498, file: !14, line: 3737, baseType: !1072, size: 64, align: 64, offset: 448)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1498, file: !14, line: 3746, baseType: !923, size: 32, align: 32, offset: 512)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1498, file: !14, line: 3757, baseType: !1521, size: 64, align: 64, offset: 576)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64, align: 64)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{null, !1524}
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64, align: 64)
!1525 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1498, file: !14, line: 3766, baseType: !1072, size: 64, align: 64, offset: 640)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1498, file: !14, line: 3774, baseType: !1072, size: 64, align: 64, offset: 704)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1498, file: !14, line: 3780, baseType: !923, size: 32, align: 32, offset: 768)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1498, file: !14, line: 3785, baseType: !923, size: 32, align: 32, offset: 800)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1498, file: !14, line: 3795, baseType: !1531, size: 64, align: 64, offset: 832)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64, align: 64)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!923, !1075, !1135}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1077, file: !14, line: 2728, baseType: !922, size: 64, align: 64, offset: 5440)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1077, file: !14, line: 2735, baseType: !1125, size: 512, align: 64, offset: 5504)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1077, file: !14, line: 2742, baseType: !923, size: 32, align: 32, offset: 6016)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1077, file: !14, line: 2755, baseType: !923, size: 32, align: 32, offset: 6048)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1077, file: !14, line: 2776, baseType: !923, size: 32, align: 32, offset: 6080)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1077, file: !14, line: 2783, baseType: !923, size: 32, align: 32, offset: 6112)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1077, file: !14, line: 2791, baseType: !923, size: 32, align: 32, offset: 6144)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1077, file: !14, line: 2802, baseType: !1097, size: 64, align: 64, offset: 6208)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1077, file: !14, line: 2811, baseType: !923, size: 32, align: 32, offset: 6272)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1077, file: !14, line: 2821, baseType: !923, size: 32, align: 32, offset: 6304)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1077, file: !14, line: 2830, baseType: !923, size: 32, align: 32, offset: 6336)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1077, file: !14, line: 2840, baseType: !923, size: 32, align: 32, offset: 6368)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1077, file: !14, line: 2851, baseType: !1547, size: 64, align: 64, offset: 6400)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64, align: 64)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{!923, !1362, !1550, !922, !1365, !923, !923}
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64, align: 64)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!923, !1362, !922}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1077, file: !14, line: 2871, baseType: !1554, size: 64, align: 64, offset: 6464)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64, align: 64)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!923, !1362, !1557, !922, !1365, !923}
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64, align: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{!923, !1362, !922, !923, !923}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1077, file: !14, line: 2878, baseType: !923, size: 32, align: 32, offset: 6528)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1077, file: !14, line: 2885, baseType: !923, size: 32, align: 32, offset: 6560)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1077, file: !14, line: 3005, baseType: !923, size: 32, align: 32, offset: 6592)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1077, file: !14, line: 3013, baseType: !894, size: 32, align: 32, offset: 6624)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1077, file: !14, line: 3020, baseType: !894, size: 32, align: 32, offset: 6656)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1077, file: !14, line: 3027, baseType: !894, size: 32, align: 32, offset: 6688)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1077, file: !14, line: 3037, baseType: !1103, size: 64, align: 64, offset: 6720)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1077, file: !14, line: 3038, baseType: !923, size: 32, align: 32, offset: 6784)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1077, file: !14, line: 3050, baseType: !940, size: 64, align: 64, offset: 6848)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1077, file: !14, line: 3065, baseType: !923, size: 32, align: 32, offset: 6912)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1077, file: !14, line: 3083, baseType: !923, size: 32, align: 32, offset: 6944)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1077, file: !14, line: 3092, baseType: !968, size: 64, align: 32, offset: 6976)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1077, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1077, file: !14, line: 3106, baseType: !968, size: 64, align: 32, offset: 7072)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1077, file: !14, line: 3113, baseType: !1575, size: 64, align: 64, offset: 7168)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64, align: 64)
!1576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1578)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1579)
!1579 = !{!1580, !1581, !1582, !1583, !1584, !1585, !1588}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1578, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1578, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1578, file: !14, line: 720, baseType: !958, size: 64, align: 64, offset: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1578, file: !14, line: 724, baseType: !958, size: 64, align: 64, offset: 128)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1578, file: !14, line: 728, baseType: !923, size: 32, align: 32, offset: 192)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1578, file: !14, line: 734, baseType: !1586, size: 64, align: 64, offset: 256)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64, align: 64)
!1587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !958)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1578, file: !14, line: 739, baseType: !1589, size: 64, align: 64, offset: 320)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64, align: 64)
!1590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1063)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1077, file: !14, line: 3129, baseType: !937, size: 64, align: 64, offset: 7232)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1077, file: !14, line: 3130, baseType: !937, size: 64, align: 64, offset: 7296)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1077, file: !14, line: 3131, baseType: !937, size: 64, align: 64, offset: 7360)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1077, file: !14, line: 3132, baseType: !937, size: 64, align: 64, offset: 7424)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1077, file: !14, line: 3139, baseType: !1487, size: 64, align: 64, offset: 7488)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1077, file: !14, line: 3147, baseType: !923, size: 32, align: 32, offset: 7552)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1077, file: !14, line: 3165, baseType: !923, size: 32, align: 32, offset: 7584)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1077, file: !14, line: 3172, baseType: !923, size: 32, align: 32, offset: 7616)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1077, file: !14, line: 3180, baseType: !923, size: 32, align: 32, offset: 7648)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1077, file: !14, line: 3191, baseType: !944, size: 64, align: 64, offset: 7680)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1077, file: !14, line: 3199, baseType: !1103, size: 64, align: 64, offset: 7744)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1077, file: !14, line: 3207, baseType: !1487, size: 64, align: 64, offset: 7808)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1077, file: !14, line: 3214, baseType: !924, size: 32, align: 32, offset: 7872)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1077, file: !14, line: 3224, baseType: !1231, size: 64, align: 64, offset: 7936)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1077, file: !14, line: 3225, baseType: !923, size: 32, align: 32, offset: 8000)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1077, file: !14, line: 3249, baseType: !1135, size: 64, align: 64, offset: 8064)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1077, file: !14, line: 3256, baseType: !923, size: 32, align: 32, offset: 8128)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1077, file: !14, line: 3271, baseType: !923, size: 32, align: 32, offset: 8160)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1077, file: !14, line: 3279, baseType: !937, size: 64, align: 64, offset: 8192)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1077, file: !14, line: 3301, baseType: !1135, size: 64, align: 64, offset: 8256)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1077, file: !14, line: 3310, baseType: !923, size: 32, align: 32, offset: 8320)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1077, file: !14, line: 3337, baseType: !923, size: 32, align: 32, offset: 8352)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1077, file: !14, line: 3351, baseType: !923, size: 32, align: 32, offset: 8384)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1077, file: !14, line: 3359, baseType: !923, size: 32, align: 32, offset: 8416)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !955, file: !14, line: 3535, baseType: !1616, size: 64, align: 64, offset: 1024)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64, align: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!923, !1075, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64, align: 64)
!1620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !955, file: !14, line: 3541, baseType: !1622, size: 64, align: 64, offset: 1088)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64, align: 64)
!1623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1624)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1091, line: 223, size: 128, align: 64, elements: !1626)
!1626 = !{!1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1625, file: !1091, line: 224, baseType: !933, size: 64, align: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1625, file: !1091, line: 225, baseType: !933, size: 64, align: 64, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !955, file: !14, line: 3549, baseType: !1630, size: 64, align: 64, offset: 1152)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64, align: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{null, !1070}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !955, file: !14, line: 3551, baseType: !1072, size: 64, align: 64, offset: 1216)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !955, file: !14, line: 3552, baseType: !1635, size: 64, align: 64, offset: 1280)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64, align: 64)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!923, !1075, !1103, !923, !1638}
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64, align: 64)
!1639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1641)
!1641 = !{!1642, !1643, !1644, !1645, !1646, !1670}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1640, file: !14, line: 3921, baseType: !945, size: 16, align: 16)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1640, file: !14, line: 3922, baseType: !931, size: 32, align: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1640, file: !14, line: 3923, baseType: !931, size: 32, align: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1640, file: !14, line: 3924, baseType: !924, size: 32, align: 32, offset: 96)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1640, file: !14, line: 3925, baseType: !1647, size: 64, align: 64, offset: 128)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64, align: 64)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64, align: 64)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1650)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1651)
!1651 = !{!1652, !1653, !1654, !1655, !1656, !1657, !1663, !1665, !1666, !1667, !1668, !1669}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1650, file: !14, line: 3886, baseType: !923, size: 32, align: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1650, file: !14, line: 3887, baseType: !923, size: 32, align: 32, offset: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1650, file: !14, line: 3888, baseType: !923, size: 32, align: 32, offset: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1650, file: !14, line: 3889, baseType: !923, size: 32, align: 32, offset: 96)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1650, file: !14, line: 3890, baseType: !923, size: 32, align: 32, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1650, file: !14, line: 3897, baseType: !1658, size: 768, align: 64, offset: 192)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1659)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1660)
!1660 = !{!1661, !1662}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1659, file: !14, line: 3855, baseType: !1102, size: 512, align: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1659, file: !14, line: 3857, baseType: !1107, size: 256, align: 32, offset: 512)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1650, file: !14, line: 3903, baseType: !1664, size: 256, align: 64, offset: 960)
!1664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1103, size: 256, align: 64, elements: !1202)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1650, file: !14, line: 3904, baseType: !1209, size: 128, align: 32, offset: 1216)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1650, file: !14, line: 3906, baseType: !903, size: 32, align: 32, offset: 1344)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1650, file: !14, line: 3908, baseType: !1487, size: 64, align: 64, offset: 1408)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1650, file: !14, line: 3915, baseType: !1487, size: 64, align: 64, offset: 1472)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1650, file: !14, line: 3917, baseType: !923, size: 32, align: 32, offset: 1536)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1640, file: !14, line: 3926, baseType: !937, size: 64, align: 64, offset: 192)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !955, file: !14, line: 3564, baseType: !1672, size: 64, align: 64, offset: 1344)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64, align: 64)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{!923, !1075, !1219, !1363, !1365}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !955, file: !14, line: 3566, baseType: !1676, size: 64, align: 64, offset: 1408)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64, align: 64)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!923, !1075, !922, !1365, !1219}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !955, file: !14, line: 3567, baseType: !1072, size: 64, align: 64, offset: 1472)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !955, file: !14, line: 3576, baseType: !1681, size: 64, align: 64, offset: 1536)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64, align: 64)
!1682 = !DISubroutineType(types: !1683)
!1683 = !{!923, !1075, !1363}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !955, file: !14, line: 3577, baseType: !1685, size: 64, align: 64, offset: 1600)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64, align: 64)
!1686 = !DISubroutineType(types: !1687)
!1687 = !{!923, !1075, !1219}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !955, file: !14, line: 3584, baseType: !1506, size: 64, align: 64, offset: 1664)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !955, file: !14, line: 3589, baseType: !1690, size: 64, align: 64, offset: 1728)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64, align: 64)
!1691 = !DISubroutineType(types: !1692)
!1692 = !{null, !1075}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !955, file: !14, line: 3594, baseType: !923, size: 32, align: 32, offset: 1792)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !955, file: !14, line: 3600, baseType: !958, size: 64, align: 64, offset: 1856)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !955, file: !14, line: 3609, baseType: !1696, size: 64, align: 64, offset: 1920)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64, align: 64)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64, align: 64)
!1698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1699)
!1699 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1700 = !{i32 2, !"Dwarf Version", i32 4}
!1701 = !{i32 2, !"Debug Info Version", i32 3}
!1702 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1703 = distinct !DISubprogram(name: "init_thread_copy", scope: !953, file: !953, line: 986, type: !1073, isLocal: true, isDefinition: true, scopeLine: 987, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!1704 = !{}
!1705 = !DILocalVariable(name: "avctx", arg: 1, scope: !1703, file: !953, line: 986, type: !1075)
!1706 = !DIExpression()
!1707 = !DILocation(line: 986, column: 45, scope: !1703)
!1708 = !DILocalVariable(name: "f", scope: !1703, file: !953, line: 988, type: !1709)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64, align: 64)
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFV1Context", file: !1711, line: 141, baseType: !1712)
!1711 = !DIFile(filename: "libavcodec/ffv1.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFV1Context", file: !1711, line: 79, size: 376128, align: 64, elements: !1713)
!1713 = !{!1714, !1716, !1717, !1735, !1745, !1756, !1760, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1787, !1788, !1790, !1791, !1792, !1793, !1794, !1822, !1823, !1826, !1827, !1828, !1830, !1831, !1832, !1834, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1712, file: !1711, line: 80, baseType: !1715, size: 64, align: 64)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64, align: 64)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1712, file: !1711, line: 81, baseType: !1075, size: 64, align: 64, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1712, file: !1711, line: 82, baseType: !1718, size: 4480, align: 64, offset: 128)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "RangeCoder", file: !1719, line: 47, baseType: !1720)
!1719 = !DIFile(filename: "libavcodec/rangecoder.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RangeCoder", file: !1719, line: 35, size: 4480, align: 64, elements: !1721)
!1721 = !{!1722, !1723, !1724, !1725, !1726, !1730, !1731, !1732, !1733, !1734}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1720, file: !1719, line: 36, baseType: !923, size: 32, align: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1720, file: !1719, line: 37, baseType: !923, size: 32, align: 32, offset: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "outstanding_count", scope: !1720, file: !1719, line: 38, baseType: !923, size: 32, align: 32, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "outstanding_byte", scope: !1720, file: !1719, line: 39, baseType: !923, size: 32, align: 32, offset: 96)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "zero_state", scope: !1720, file: !1719, line: 40, baseType: !1727, size: 2048, align: 8, offset: 128)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !935, size: 2048, align: 8, elements: !1728)
!1728 = !{!1729}
!1729 = !DISubrange(count: 256)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "one_state", scope: !1720, file: !1719, line: 41, baseType: !1727, size: 2048, align: 8, offset: 2176)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "bytestream_start", scope: !1720, file: !1719, line: 42, baseType: !1103, size: 64, align: 64, offset: 4224)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "bytestream", scope: !1720, file: !1719, line: 43, baseType: !1103, size: 64, align: 64, offset: 4288)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "bytestream_end", scope: !1720, file: !1719, line: 44, baseType: !1103, size: 64, align: 64, offset: 4352)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "overread", scope: !1720, file: !1719, line: 45, baseType: !923, size: 32, align: 32, offset: 4416)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1712, file: !1711, line: 83, baseType: !1736, size: 256, align: 64, offset: 4608)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1737, line: 70, baseType: !1738)
!1737 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1737, line: 61, size: 256, align: 64, elements: !1739)
!1739 = !{!1740, !1741, !1742, !1743, !1744}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1738, file: !1737, line: 62, baseType: !933, size: 64, align: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1738, file: !1737, line: 62, baseType: !933, size: 64, align: 64, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1738, file: !1737, line: 67, baseType: !923, size: 32, align: 32, offset: 128)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1738, file: !1737, line: 68, baseType: !923, size: 32, align: 32, offset: 160)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1738, file: !1737, line: 69, baseType: !923, size: 32, align: 32, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1712, file: !1711, line: 84, baseType: !1746, size: 320, align: 64, offset: 4864)
!1746 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1747, line: 40, baseType: !1748)
!1747 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1747, line: 35, size: 320, align: 64, elements: !1749)
!1749 = !{!1750, !1751, !1752, !1753, !1754, !1755}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1748, file: !1747, line: 36, baseType: !931, size: 32, align: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1748, file: !1747, line: 37, baseType: !923, size: 32, align: 32, offset: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1748, file: !1747, line: 38, baseType: !1103, size: 64, align: 64, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1748, file: !1747, line: 38, baseType: !1103, size: 64, align: 64, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1748, file: !1747, line: 38, baseType: !1103, size: 64, align: 64, offset: 192)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1748, file: !1747, line: 39, baseType: !923, size: 32, align: 32, offset: 256)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "rc_stat", scope: !1712, file: !1711, line: 85, baseType: !1757, size: 32768, align: 64, offset: 5184)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !940, size: 32768, align: 64, elements: !1758)
!1758 = !{!1729, !1759}
!1759 = !DISubrange(count: 2)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "rc_stat2", scope: !1712, file: !1711, line: 86, baseType: !1761, size: 512, align: 64, offset: 37952)
!1761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1762, size: 512, align: 64, elements: !1104)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64, align: 64)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !940, size: 4096, align: 64, elements: !1764)
!1764 = !{!1765, !1759}
!1765 = !DISubrange(count: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1712, file: !1711, line: 87, baseType: !923, size: 32, align: 32, offset: 38464)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "micro_version", scope: !1712, file: !1711, line: 88, baseType: !923, size: 32, align: 32, offset: 38496)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1712, file: !1711, line: 89, baseType: !923, size: 32, align: 32, offset: 38528)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1712, file: !1711, line: 89, baseType: !923, size: 32, align: 32, offset: 38560)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_planes", scope: !1712, file: !1711, line: 90, baseType: !923, size: 32, align: 32, offset: 38592)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_h_shift", scope: !1712, file: !1711, line: 91, baseType: !923, size: 32, align: 32, offset: 38624)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_v_shift", scope: !1712, file: !1711, line: 91, baseType: !923, size: 32, align: 32, offset: 38656)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "transparency", scope: !1712, file: !1711, line: 92, baseType: !923, size: 32, align: 32, offset: 38688)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1712, file: !1711, line: 93, baseType: !923, size: 32, align: 32, offset: 38720)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "picture_number", scope: !1712, file: !1711, line: 94, baseType: !923, size: 32, align: 32, offset: 38752)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1712, file: !1711, line: 95, baseType: !923, size: 32, align: 32, offset: 38784)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "picture", scope: !1712, file: !1711, line: 96, baseType: !1778, size: 256, align: 64, offset: 38848)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadFrame", file: !1779, line: 40, baseType: !1780)
!1779 = !DIFile(filename: "libavcodec/thread.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThreadFrame", file: !1779, line: 34, size: 256, align: 64, elements: !1781)
!1781 = !{!1782, !1783, !1786}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1780, file: !1779, line: 35, baseType: !1097, size: 64, align: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1780, file: !1779, line: 36, baseType: !1784, size: 128, align: 64, offset: 64)
!1784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1075, size: 128, align: 64, elements: !1785)
!1785 = !{!1759}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1780, file: !1779, line: 39, baseType: !1135, size: 64, align: 64, offset: 192)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "last_picture", scope: !1712, file: !1711, line: 96, baseType: !1778, size: 256, align: 64, offset: 39104)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "fsrc", scope: !1712, file: !1711, line: 97, baseType: !1789, size: 64, align: 64, offset: 39360)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64, align: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1712, file: !1711, line: 99, baseType: !1097, size: 64, align: 64, offset: 39424)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "plane_count", scope: !1712, file: !1711, line: 100, baseType: !923, size: 32, align: 32, offset: 39488)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ac", scope: !1712, file: !1711, line: 101, baseType: !923, size: 32, align: 32, offset: 39520)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "ac_byte_count", scope: !1712, file: !1711, line: 102, baseType: !923, size: 32, align: 32, offset: 39552)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !1712, file: !1711, line: 103, baseType: !1795, size: 82944, align: 64, offset: 39616)
!1795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1796, size: 82944, align: 64, elements: !1202)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "PlaneContext", file: !1711, line: 75, baseType: !1797)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PlaneContext", file: !1711, line: 68, size: 20736, align: 64, elements: !1798)
!1798 = !{!1799, !1805, !1806, !1807, !1811, !1820}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "quant_table", scope: !1797, file: !1711, line: 69, baseType: !1800, size: 20480, align: 16)
!1800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1801, size: 20480, align: 16, elements: !1803)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !938, line: 195, baseType: !1802)
!1802 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1803 = !{!1804, !1729}
!1804 = !DISubrange(count: 5)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "quant_table_index", scope: !1797, file: !1711, line: 70, baseType: !923, size: 32, align: 32, offset: 20480)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "context_count", scope: !1797, file: !1711, line: 71, baseType: !923, size: 32, align: 32, offset: 20512)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1797, file: !1711, line: 72, baseType: !1808, size: 64, align: 64, offset: 20544)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64, align: 64)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !935, size: 256, align: 8, elements: !1810)
!1810 = !{!1765}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "vlc_state", scope: !1797, file: !1711, line: 73, baseType: !1812, size: 64, align: 64, offset: 20608)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64, align: 64)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "VlcState", file: !1711, line: 66, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlcState", file: !1711, line: 61, size: 48, align: 16, elements: !1815)
!1815 = !{!1816, !1817, !1818, !1819}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "drift", scope: !1814, file: !1711, line: 62, baseType: !1801, size: 16, align: 16)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "error_sum", scope: !1814, file: !1711, line: 63, baseType: !945, size: 16, align: 16, offset: 16)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !1814, file: !1711, line: 64, baseType: !948, size: 8, align: 8, offset: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1814, file: !1711, line: 65, baseType: !935, size: 8, align: 8, offset: 40)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "interlace_bit_state", scope: !1797, file: !1711, line: 74, baseType: !1821, size: 16, align: 8, offset: 20672)
!1821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !935, size: 16, align: 8, elements: !1785)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "quant_table", scope: !1712, file: !1711, line: 104, baseType: !1800, size: 20480, align: 16, offset: 122560)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "quant_tables", scope: !1712, file: !1711, line: 105, baseType: !1824, size: 163840, align: 16, offset: 143040)
!1824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1801, size: 163840, align: 16, elements: !1825)
!1825 = !{!1105, !1804, !1729}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "context_count", scope: !1712, file: !1711, line: 106, baseType: !1107, size: 256, align: 32, offset: 306880)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "state_transition", scope: !1712, file: !1711, line: 107, baseType: !1727, size: 2048, align: 8, offset: 307136)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "initial_states", scope: !1712, file: !1711, line: 108, baseType: !1829, size: 512, align: 64, offset: 309184)
!1829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1808, size: 512, align: 64, elements: !1104)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "run_index", scope: !1712, file: !1711, line: 109, baseType: !923, size: 32, align: 32, offset: 309696)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1712, file: !1711, line: 110, baseType: !923, size: 32, align: 32, offset: 309728)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "sample_buffer", scope: !1712, file: !1711, line: 111, baseType: !1833, size: 64, align: 64, offset: 309760)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64, align: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "sample_buffer32", scope: !1712, file: !1711, line: 112, baseType: !1835, size: 64, align: 64, offset: 309824)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64, align: 64)
!1836 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !938, line: 196, baseType: !923)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "use32bit", scope: !1712, file: !1711, line: 114, baseType: !923, size: 32, align: 32, offset: 309888)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !1712, file: !1711, line: 116, baseType: !923, size: 32, align: 32, offset: 309920)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "intra", scope: !1712, file: !1711, line: 117, baseType: !923, size: 32, align: 32, offset: 309952)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "slice_damaged", scope: !1712, file: !1711, line: 118, baseType: !923, size: 32, align: 32, offset: 309984)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame_ok", scope: !1712, file: !1711, line: 119, baseType: !923, size: 32, align: 32, offset: 310016)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1712, file: !1711, line: 120, baseType: !923, size: 32, align: 32, offset: 310048)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1712, file: !1711, line: 122, baseType: !923, size: 32, align: 32, offset: 310080)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "packed_at_lsb", scope: !1712, file: !1711, line: 123, baseType: !923, size: 32, align: 32, offset: 310112)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "gob_count", scope: !1712, file: !1711, line: 125, baseType: !923, size: 32, align: 32, offset: 310144)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "quant_table_count", scope: !1712, file: !1711, line: 126, baseType: !923, size: 32, align: 32, offset: 310176)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "slice_context", scope: !1712, file: !1711, line: 128, baseType: !1848, size: 65536, align: 64, offset: 310208)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1789, size: 65536, align: 64, elements: !1849)
!1849 = !{!1850}
!1850 = !DISubrange(count: 1024)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1712, file: !1711, line: 129, baseType: !923, size: 32, align: 32, offset: 375744)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "max_slice_count", scope: !1712, file: !1711, line: 130, baseType: !923, size: 32, align: 32, offset: 375776)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "num_v_slices", scope: !1712, file: !1711, line: 131, baseType: !923, size: 32, align: 32, offset: 375808)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "num_h_slices", scope: !1712, file: !1711, line: 132, baseType: !923, size: 32, align: 32, offset: 375840)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "slice_width", scope: !1712, file: !1711, line: 133, baseType: !923, size: 32, align: 32, offset: 375872)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "slice_height", scope: !1712, file: !1711, line: 134, baseType: !923, size: 32, align: 32, offset: 375904)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "slice_x", scope: !1712, file: !1711, line: 135, baseType: !923, size: 32, align: 32, offset: 375936)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "slice_y", scope: !1712, file: !1711, line: 136, baseType: !923, size: 32, align: 32, offset: 375968)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "slice_reset_contexts", scope: !1712, file: !1711, line: 137, baseType: !923, size: 32, align: 32, offset: 376000)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "slice_coding_mode", scope: !1712, file: !1711, line: 138, baseType: !923, size: 32, align: 32, offset: 376032)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "slice_rct_by_coef", scope: !1712, file: !1711, line: 139, baseType: !923, size: 32, align: 32, offset: 376064)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "slice_rct_ry_coef", scope: !1712, file: !1711, line: 140, baseType: !923, size: 32, align: 32, offset: 376096)
!1863 = !DILocation(line: 988, column: 18, scope: !1703)
!1864 = !DILocation(line: 988, column: 22, scope: !1703)
!1865 = !DILocation(line: 988, column: 29, scope: !1703)
!1866 = !DILocalVariable(name: "i", scope: !1703, file: !953, line: 989, type: !923)
!1867 = !DILocation(line: 989, column: 9, scope: !1703)
!1868 = !DILocalVariable(name: "ret", scope: !1703, file: !953, line: 989, type: !923)
!1869 = !DILocation(line: 989, column: 12, scope: !1703)
!1870 = !DILocation(line: 991, column: 5, scope: !1703)
!1871 = !DILocation(line: 991, column: 8, scope: !1703)
!1872 = !DILocation(line: 991, column: 16, scope: !1703)
!1873 = !DILocation(line: 991, column: 18, scope: !1703)
!1874 = !DILocation(line: 992, column: 5, scope: !1703)
!1875 = !DILocation(line: 992, column: 8, scope: !1703)
!1876 = !DILocation(line: 992, column: 21, scope: !1703)
!1877 = !DILocation(line: 992, column: 23, scope: !1703)
!1878 = !DILocation(line: 993, column: 5, scope: !1703)
!1879 = !DILocation(line: 993, column: 8, scope: !1703)
!1880 = !DILocation(line: 993, column: 22, scope: !1703)
!1881 = !DILocation(line: 994, column: 5, scope: !1703)
!1882 = !DILocation(line: 994, column: 8, scope: !1703)
!1883 = !DILocation(line: 994, column: 24, scope: !1703)
!1884 = !DILocation(line: 995, column: 5, scope: !1703)
!1885 = !DILocation(line: 995, column: 8, scope: !1703)
!1886 = !DILocation(line: 995, column: 20, scope: !1703)
!1887 = !DILocation(line: 997, column: 12, scope: !1888)
!1888 = distinct !DILexicalBlock(scope: !1703, file: !953, line: 997, column: 5)
!1889 = !DILocation(line: 997, column: 10, scope: !1888)
!1890 = !DILocation(line: 997, column: 17, scope: !1891)
!1891 = !DILexicalBlockFile(scope: !1892, file: !953, discriminator: 1)
!1892 = distinct !DILexicalBlock(scope: !1888, file: !953, line: 997, column: 5)
!1893 = !DILocation(line: 997, column: 21, scope: !1891)
!1894 = !DILocation(line: 997, column: 24, scope: !1891)
!1895 = !DILocation(line: 997, column: 19, scope: !1891)
!1896 = !DILocation(line: 997, column: 5, scope: !1891)
!1897 = !DILocation(line: 998, column: 9, scope: !1898)
!1898 = distinct !DILexicalBlock(scope: !1892, file: !953, line: 997, column: 48)
!1899 = distinct !{!1899, !1897}
!1900 = !DILocation(line: 998, column: 20, scope: !1901)
!1901 = !DILexicalBlockFile(scope: !1902, file: !953, discriminator: 1)
!1902 = distinct !DILexicalBlock(scope: !1903, file: !953, line: 998, column: 18)
!1903 = distinct !DILexicalBlock(scope: !1898, file: !953, line: 998, column: 12)
!1904 = !DILocation(line: 998, column: 23, scope: !1901)
!1905 = !DILocation(line: 998, column: 31, scope: !1901)
!1906 = !DILocation(line: 998, column: 18, scope: !1901)
!1907 = !DILocation(line: 998, column: 39, scope: !1908)
!1908 = !DILexicalBlockFile(scope: !1909, file: !953, discriminator: 2)
!1909 = distinct !DILexicalBlock(scope: !1902, file: !953, line: 998, column: 37)
!1910 = !DILocation(line: 998, column: 95, scope: !1911)
!1911 = !DILexicalBlockFile(scope: !1908, file: !953, discriminator: 4)
!1912 = !DILocation(line: 998, column: 95, scope: !1908)
!1913 = !DILocation(line: 998, column: 106, scope: !1914)
!1914 = !DILexicalBlockFile(scope: !1903, file: !953, discriminator: 3)
!1915 = !DILocation(line: 999, column: 60, scope: !1898)
!1916 = !DILocation(line: 999, column: 42, scope: !1898)
!1917 = !DILocation(line: 999, column: 45, scope: !1898)
!1918 = !DILocation(line: 1000, column: 59, scope: !1898)
!1919 = !DILocation(line: 1000, column: 42, scope: !1898)
!1920 = !DILocation(line: 1000, column: 45, scope: !1898)
!1921 = !DILocation(line: 1000, column: 62, scope: !1898)
!1922 = !DILocation(line: 999, column: 32, scope: !1898)
!1923 = !DILocation(line: 999, column: 27, scope: !1898)
!1924 = !DILocation(line: 999, column: 9, scope: !1898)
!1925 = !DILocation(line: 999, column: 12, scope: !1898)
!1926 = !DILocation(line: 999, column: 30, scope: !1898)
!1927 = !DILocation(line: 1001, column: 5, scope: !1898)
!1928 = !DILocation(line: 997, column: 44, scope: !1929)
!1929 = !DILexicalBlockFile(scope: !1892, file: !953, discriminator: 2)
!1930 = !DILocation(line: 997, column: 5, scope: !1929)
!1931 = distinct !{!1931, !1932}
!1932 = !DILocation(line: 997, column: 5, scope: !1703)
!1933 = !DILocation(line: 1003, column: 20, scope: !1703)
!1934 = !DILocation(line: 1003, column: 5, scope: !1703)
!1935 = !DILocation(line: 1003, column: 8, scope: !1703)
!1936 = !DILocation(line: 1003, column: 16, scope: !1703)
!1937 = !DILocation(line: 1003, column: 18, scope: !1703)
!1938 = !DILocation(line: 1004, column: 25, scope: !1703)
!1939 = !DILocation(line: 1004, column: 5, scope: !1703)
!1940 = !DILocation(line: 1004, column: 8, scope: !1703)
!1941 = !DILocation(line: 1004, column: 21, scope: !1703)
!1942 = !DILocation(line: 1004, column: 23, scope: !1703)
!1943 = !DILocation(line: 1006, column: 44, scope: !1944)
!1944 = distinct !DILexicalBlock(scope: !1703, file: !953, line: 1006, column: 9)
!1945 = !DILocation(line: 1006, column: 16, scope: !1944)
!1946 = !DILocation(line: 1006, column: 14, scope: !1944)
!1947 = !DILocation(line: 1006, column: 48, scope: !1944)
!1948 = !DILocation(line: 1006, column: 9, scope: !1703)
!1949 = !DILocation(line: 1007, column: 16, scope: !1944)
!1950 = !DILocation(line: 1007, column: 9, scope: !1944)
!1951 = !DILocation(line: 1009, column: 5, scope: !1703)
!1952 = !DILocation(line: 1010, column: 1, scope: !1703)
!1953 = distinct !DISubprogram(name: "update_thread_context", scope: !953, file: !953, line: 1042, type: !1617, isLocal: true, isDefinition: true, scopeLine: 1043, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!1954 = !DILocalVariable(name: "dst", arg: 1, scope: !1953, file: !953, line: 1042, type: !1075)
!1955 = !DILocation(line: 1042, column: 50, scope: !1953)
!1956 = !DILocalVariable(name: "src", arg: 2, scope: !1953, file: !953, line: 1042, type: !1619)
!1957 = !DILocation(line: 1042, column: 77, scope: !1953)
!1958 = !DILocalVariable(name: "fsrc", scope: !1953, file: !953, line: 1044, type: !1709)
!1959 = !DILocation(line: 1044, column: 18, scope: !1953)
!1960 = !DILocation(line: 1044, column: 25, scope: !1953)
!1961 = !DILocation(line: 1044, column: 30, scope: !1953)
!1962 = !DILocalVariable(name: "fdst", scope: !1953, file: !953, line: 1045, type: !1709)
!1963 = !DILocation(line: 1045, column: 18, scope: !1953)
!1964 = !DILocation(line: 1045, column: 25, scope: !1953)
!1965 = !DILocation(line: 1045, column: 30, scope: !1953)
!1966 = !DILocalVariable(name: "i", scope: !1953, file: !953, line: 1046, type: !923)
!1967 = !DILocation(line: 1046, column: 9, scope: !1953)
!1968 = !DILocalVariable(name: "ret", scope: !1953, file: !953, line: 1046, type: !923)
!1969 = !DILocation(line: 1046, column: 12, scope: !1953)
!1970 = !DILocation(line: 1048, column: 9, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !1953, file: !953, line: 1048, column: 9)
!1972 = !DILocation(line: 1048, column: 16, scope: !1971)
!1973 = !DILocation(line: 1048, column: 13, scope: !1971)
!1974 = !DILocation(line: 1048, column: 9, scope: !1953)
!1975 = !DILocation(line: 1049, column: 9, scope: !1971)
!1976 = !DILocalVariable(name: "picture", scope: !1977, file: !953, line: 1052, type: !1778)
!1977 = distinct !DILexicalBlock(scope: !1953, file: !953, line: 1051, column: 5)
!1978 = !DILocation(line: 1052, column: 21, scope: !1977)
!1979 = !DILocation(line: 1052, column: 31, scope: !1977)
!1980 = !DILocation(line: 1052, column: 37, scope: !1977)
!1981 = !DILocalVariable(name: "last_picture", scope: !1977, file: !953, line: 1052, type: !1778)
!1982 = !DILocation(line: 1052, column: 46, scope: !1977)
!1983 = !DILocation(line: 1052, column: 61, scope: !1977)
!1984 = !DILocation(line: 1052, column: 67, scope: !1977)
!1985 = !DILocation(line: 1052, column: 67, scope: !1986)
!1986 = !DILexicalBlockFile(scope: !1977, file: !953, discriminator: 1)
!1987 = !DILocalVariable(name: "initial_states", scope: !1977, file: !953, line: 1053, type: !1829)
!1988 = !DILocation(line: 1053, column: 19, scope: !1977)
!1989 = !DILocalVariable(name: "slice_context", scope: !1977, file: !953, line: 1054, type: !1848)
!1990 = !DILocation(line: 1054, column: 29, scope: !1977)
!1991 = !DILocation(line: 1055, column: 9, scope: !1977)
!1992 = !DILocation(line: 1055, column: 32, scope: !1977)
!1993 = !DILocation(line: 1055, column: 38, scope: !1977)
!1994 = !DILocation(line: 1056, column: 9, scope: !1977)
!1995 = !DILocation(line: 1056, column: 31, scope: !1977)
!1996 = !DILocation(line: 1056, column: 37, scope: !1977)
!1997 = !DILocation(line: 1058, column: 16, scope: !1977)
!1998 = !DILocation(line: 1058, column: 9, scope: !1977)
!1999 = !DILocation(line: 1058, column: 22, scope: !1977)
!2000 = !DILocation(line: 1059, column: 16, scope: !1977)
!2001 = !DILocation(line: 1059, column: 22, scope: !1977)
!2002 = !DILocation(line: 1059, column: 9, scope: !1977)
!2003 = !DILocation(line: 1060, column: 16, scope: !1977)
!2004 = !DILocation(line: 1060, column: 22, scope: !1977)
!2005 = !DILocation(line: 1060, column: 9, scope: !1977)
!2006 = !DILocation(line: 1061, column: 9, scope: !1977)
!2007 = !DILocation(line: 1061, column: 15, scope: !1977)
!2008 = !DILocation(line: 1061, column: 25, scope: !1977)
!2009 = !DILocation(line: 1062, column: 9, scope: !1977)
!2010 = !DILocation(line: 1062, column: 15, scope: !1977)
!2011 = !DILocation(line: 1062, column: 30, scope: !1977)
!2012 = !DILocation(line: 1063, column: 16, scope: !2013)
!2013 = distinct !DILexicalBlock(scope: !1977, file: !953, line: 1063, column: 9)
!2014 = !DILocation(line: 1063, column: 14, scope: !2013)
!2015 = !DILocation(line: 1063, column: 21, scope: !2016)
!2016 = !DILexicalBlockFile(scope: !2017, file: !953, discriminator: 1)
!2017 = distinct !DILexicalBlock(scope: !2013, file: !953, line: 1063, column: 9)
!2018 = !DILocation(line: 1063, column: 23, scope: !2016)
!2019 = !DILocation(line: 1063, column: 29, scope: !2016)
!2020 = !DILocation(line: 1063, column: 44, scope: !2016)
!2021 = !DILocation(line: 1063, column: 50, scope: !2016)
!2022 = !DILocation(line: 1063, column: 42, scope: !2016)
!2023 = !DILocation(line: 1063, column: 22, scope: !2016)
!2024 = !DILocation(line: 1063, column: 9, scope: !2016)
!2025 = !DILocalVariable(name: "fssrc", scope: !2026, file: !953, line: 1064, type: !1709)
!2026 = distinct !DILexicalBlock(scope: !2017, file: !953, line: 1063, column: 69)
!2027 = !DILocation(line: 1064, column: 26, scope: !2026)
!2028 = !DILocation(line: 1064, column: 54, scope: !2026)
!2029 = !DILocation(line: 1064, column: 34, scope: !2026)
!2030 = !DILocation(line: 1064, column: 40, scope: !2026)
!2031 = !DILocalVariable(name: "fsdst", scope: !2026, file: !953, line: 1065, type: !1709)
!2032 = !DILocation(line: 1065, column: 26, scope: !2026)
!2033 = !DILocation(line: 1065, column: 54, scope: !2026)
!2034 = !DILocation(line: 1065, column: 34, scope: !2026)
!2035 = !DILocation(line: 1065, column: 40, scope: !2026)
!2036 = !DILocation(line: 1066, column: 25, scope: !2026)
!2037 = !DILocation(line: 1066, column: 32, scope: !2026)
!2038 = !DILocation(line: 1066, column: 39, scope: !2026)
!2039 = !DILocation(line: 1066, column: 13, scope: !2026)
!2040 = !DILocation(line: 1067, column: 9, scope: !2026)
!2041 = !DILocation(line: 1063, column: 65, scope: !2042)
!2042 = !DILexicalBlockFile(scope: !2017, file: !953, discriminator: 2)
!2043 = !DILocation(line: 1063, column: 9, scope: !2042)
!2044 = distinct !{!2044, !2045}
!2045 = !DILocation(line: 1063, column: 9, scope: !1977)
!2046 = !DILocation(line: 1068, column: 9, scope: !1977)
!2047 = distinct !{!2047, !2046}
!2048 = !DILocation(line: 1068, column: 21, scope: !2049)
!2049 = !DILexicalBlockFile(scope: !2050, file: !953, discriminator: 1)
!2050 = distinct !DILexicalBlock(scope: !2051, file: !953, line: 1068, column: 18)
!2051 = distinct !DILexicalBlock(scope: !1977, file: !953, line: 1068, column: 12)
!2052 = !DILocation(line: 1068, column: 27, scope: !2049)
!2053 = !DILocation(line: 1068, column: 36, scope: !2049)
!2054 = !DILocation(line: 1068, column: 18, scope: !2049)
!2055 = !DILocation(line: 1068, column: 46, scope: !2056)
!2056 = !DILexicalBlockFile(scope: !2057, file: !953, discriminator: 2)
!2057 = distinct !DILexicalBlock(scope: !2050, file: !953, line: 1068, column: 44)
!2058 = !DILocation(line: 1068, column: 103, scope: !2059)
!2059 = !DILexicalBlockFile(scope: !2056, file: !953, discriminator: 4)
!2060 = !DILocation(line: 1068, column: 103, scope: !2056)
!2061 = !DILocation(line: 1068, column: 114, scope: !2062)
!2062 = !DILexicalBlockFile(scope: !2051, file: !953, discriminator: 3)
!2063 = !DILocation(line: 1069, column: 9, scope: !1977)
!2064 = distinct !{!2064, !2063}
!2065 = !DILocation(line: 1069, column: 21, scope: !2066)
!2066 = !DILexicalBlockFile(scope: !2067, file: !953, discriminator: 1)
!2067 = distinct !DILexicalBlock(scope: !2068, file: !953, line: 1069, column: 18)
!2068 = distinct !DILexicalBlock(scope: !1977, file: !953, line: 1069, column: 12)
!2069 = !DILocation(line: 1069, column: 27, scope: !2066)
!2070 = !DILocation(line: 1069, column: 18, scope: !2066)
!2071 = !DILocation(line: 1069, column: 45, scope: !2072)
!2072 = !DILexicalBlockFile(scope: !2073, file: !953, discriminator: 2)
!2073 = distinct !DILexicalBlock(scope: !2067, file: !953, line: 1069, column: 43)
!2074 = !DILocation(line: 1069, column: 102, scope: !2075)
!2075 = !DILexicalBlockFile(scope: !2072, file: !953, discriminator: 4)
!2076 = !DILocation(line: 1069, column: 102, scope: !2072)
!2077 = !DILocation(line: 1069, column: 113, scope: !2078)
!2078 = !DILexicalBlockFile(scope: !2068, file: !953, discriminator: 3)
!2079 = !DILocation(line: 1075, column: 30, scope: !1953)
!2080 = !DILocation(line: 1075, column: 36, scope: !1953)
!2081 = !DILocation(line: 1075, column: 42, scope: !1953)
!2082 = !DILocation(line: 1075, column: 5, scope: !1953)
!2083 = !DILocation(line: 1076, column: 9, scope: !2084)
!2084 = distinct !DILexicalBlock(scope: !1953, file: !953, line: 1076, column: 9)
!2085 = !DILocation(line: 1076, column: 15, scope: !2084)
!2086 = !DILocation(line: 1076, column: 23, scope: !2084)
!2087 = !DILocation(line: 1076, column: 26, scope: !2084)
!2088 = !DILocation(line: 1076, column: 9, scope: !1953)
!2089 = !DILocation(line: 1077, column: 41, scope: !2090)
!2090 = distinct !DILexicalBlock(scope: !2091, file: !953, line: 1077, column: 13)
!2091 = distinct !DILexicalBlock(scope: !2084, file: !953, line: 1076, column: 35)
!2092 = !DILocation(line: 1077, column: 47, scope: !2090)
!2093 = !DILocation(line: 1077, column: 57, scope: !2090)
!2094 = !DILocation(line: 1077, column: 63, scope: !2090)
!2095 = !DILocation(line: 1077, column: 20, scope: !2090)
!2096 = !DILocation(line: 1077, column: 18, scope: !2090)
!2097 = !DILocation(line: 1077, column: 73, scope: !2090)
!2098 = !DILocation(line: 1077, column: 13, scope: !2091)
!2099 = !DILocation(line: 1078, column: 20, scope: !2090)
!2100 = !DILocation(line: 1078, column: 13, scope: !2090)
!2101 = !DILocation(line: 1079, column: 5, scope: !2091)
!2102 = !DILocation(line: 1081, column: 18, scope: !1953)
!2103 = !DILocation(line: 1081, column: 5, scope: !1953)
!2104 = !DILocation(line: 1081, column: 11, scope: !1953)
!2105 = !DILocation(line: 1081, column: 16, scope: !1953)
!2106 = !DILocation(line: 1083, column: 5, scope: !1953)
!2107 = !DILocation(line: 1084, column: 1, scope: !1953)
!2108 = distinct !DISubprogram(name: "decode_init", scope: !953, file: !953, line: 818, type: !1073, isLocal: true, isDefinition: true, scopeLine: 819, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!2109 = !DILocalVariable(name: "avctx", arg: 1, scope: !2108, file: !953, line: 818, type: !1075)
!2110 = !DILocation(line: 818, column: 62, scope: !2108)
!2111 = !DILocalVariable(name: "f", scope: !2108, file: !953, line: 820, type: !1709)
!2112 = !DILocation(line: 820, column: 18, scope: !2108)
!2113 = !DILocation(line: 820, column: 22, scope: !2108)
!2114 = !DILocation(line: 820, column: 29, scope: !2108)
!2115 = !DILocalVariable(name: "ret", scope: !2108, file: !953, line: 821, type: !923)
!2116 = !DILocation(line: 821, column: 9, scope: !2108)
!2117 = !DILocation(line: 823, column: 36, scope: !2118)
!2118 = distinct !DILexicalBlock(scope: !2108, file: !953, line: 823, column: 9)
!2119 = !DILocation(line: 823, column: 16, scope: !2118)
!2120 = !DILocation(line: 823, column: 14, scope: !2118)
!2121 = !DILocation(line: 823, column: 44, scope: !2118)
!2122 = !DILocation(line: 823, column: 9, scope: !2108)
!2123 = !DILocation(line: 824, column: 16, scope: !2118)
!2124 = !DILocation(line: 824, column: 9, scope: !2118)
!2125 = !DILocation(line: 826, column: 9, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !2108, file: !953, line: 826, column: 9)
!2127 = !DILocation(line: 826, column: 16, scope: !2126)
!2128 = !DILocation(line: 826, column: 31, scope: !2126)
!2129 = !DILocation(line: 826, column: 35, scope: !2126)
!2130 = !DILocation(line: 826, column: 63, scope: !2131)
!2131 = !DILexicalBlockFile(scope: !2126, file: !953, discriminator: 1)
!2132 = !DILocation(line: 826, column: 45, scope: !2131)
!2133 = !DILocation(line: 826, column: 43, scope: !2131)
!2134 = !DILocation(line: 826, column: 67, scope: !2131)
!2135 = !DILocation(line: 826, column: 9, scope: !2131)
!2136 = !DILocation(line: 827, column: 16, scope: !2126)
!2137 = !DILocation(line: 827, column: 9, scope: !2126)
!2138 = !DILocation(line: 829, column: 44, scope: !2139)
!2139 = distinct !DILexicalBlock(scope: !2108, file: !953, line: 829, column: 9)
!2140 = !DILocation(line: 829, column: 16, scope: !2139)
!2141 = !DILocation(line: 829, column: 14, scope: !2139)
!2142 = !DILocation(line: 829, column: 48, scope: !2139)
!2143 = !DILocation(line: 829, column: 9, scope: !2108)
!2144 = !DILocation(line: 830, column: 16, scope: !2139)
!2145 = !DILocation(line: 830, column: 9, scope: !2139)
!2146 = !DILocation(line: 832, column: 5, scope: !2108)
!2147 = !DILocation(line: 832, column: 12, scope: !2108)
!2148 = !DILocation(line: 832, column: 22, scope: !2108)
!2149 = !DILocation(line: 832, column: 40, scope: !2108)
!2150 = !DILocation(line: 834, column: 5, scope: !2108)
!2151 = !DILocation(line: 835, column: 1, scope: !2108)
!2152 = distinct !DISubprogram(name: "decode_frame", scope: !953, file: !953, line: 837, type: !1677, isLocal: true, isDefinition: true, scopeLine: 838, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!2153 = !DILocalVariable(name: "x", arg: 1, scope: !2154, file: !2155, line: 66, type: !931)
!2154 = distinct !DISubprogram(name: "av_bswap32", scope: !2155, file: !2155, line: 66, type: !2156, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!2155 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!931, !931}
!2158 = !DILocation(line: 66, column: 98, scope: !2154, inlinedAt: !2159)
!2159 = distinct !DILocation(line: 920, column: 81, scope: !2160)
!2160 = distinct !DILexicalBlock(scope: !2161, file: !953, line: 919, column: 35)
!2161 = distinct !DILexicalBlock(scope: !2162, file: !953, line: 919, column: 17)
!2162 = distinct !DILexicalBlock(scope: !2163, file: !953, line: 905, column: 20)
!2163 = distinct !DILexicalBlock(scope: !2164, file: !953, line: 905, column: 13)
!2164 = distinct !DILexicalBlock(scope: !2165, file: !953, line: 891, column: 47)
!2165 = distinct !DILexicalBlock(scope: !2166, file: !953, line: 891, column: 5)
!2166 = distinct !DILexicalBlock(scope: !2152, file: !953, line: 891, column: 5)
!2167 = !DILocalVariable(name: "avctx", arg: 1, scope: !2152, file: !953, line: 837, type: !1075)
!2168 = !DILocation(line: 837, column: 41, scope: !2152)
!2169 = !DILocalVariable(name: "data", arg: 2, scope: !2152, file: !953, line: 837, type: !922)
!2170 = !DILocation(line: 837, column: 54, scope: !2152)
!2171 = !DILocalVariable(name: "got_frame", arg: 3, scope: !2152, file: !953, line: 837, type: !1365)
!2172 = !DILocation(line: 837, column: 65, scope: !2152)
!2173 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2152, file: !953, line: 837, type: !1219)
!2174 = !DILocation(line: 837, column: 86, scope: !2152)
!2175 = !DILocalVariable(name: "buf", scope: !2152, file: !953, line: 839, type: !1103)
!2176 = !DILocation(line: 839, column: 14, scope: !2152)
!2177 = !DILocation(line: 839, column: 20, scope: !2152)
!2178 = !DILocation(line: 839, column: 27, scope: !2152)
!2179 = !DILocalVariable(name: "buf_size", scope: !2152, file: !953, line: 840, type: !923)
!2180 = !DILocation(line: 840, column: 9, scope: !2152)
!2181 = !DILocation(line: 840, column: 20, scope: !2152)
!2182 = !DILocation(line: 840, column: 27, scope: !2152)
!2183 = !DILocalVariable(name: "f", scope: !2152, file: !953, line: 841, type: !1709)
!2184 = !DILocation(line: 841, column: 18, scope: !2152)
!2185 = !DILocation(line: 841, column: 22, scope: !2152)
!2186 = !DILocation(line: 841, column: 29, scope: !2152)
!2187 = !DILocalVariable(name: "c", scope: !2152, file: !953, line: 842, type: !2188)
!2188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2189)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64, align: 64)
!2190 = !DILocation(line: 842, column: 23, scope: !2152)
!2191 = !DILocation(line: 842, column: 28, scope: !2152)
!2192 = !DILocation(line: 842, column: 31, scope: !2152)
!2193 = !DILocation(line: 842, column: 49, scope: !2152)
!2194 = !DILocalVariable(name: "i", scope: !2152, file: !953, line: 843, type: !923)
!2195 = !DILocation(line: 843, column: 9, scope: !2152)
!2196 = !DILocalVariable(name: "ret", scope: !2152, file: !953, line: 843, type: !923)
!2197 = !DILocation(line: 843, column: 12, scope: !2152)
!2198 = !DILocalVariable(name: "keystate", scope: !2152, file: !953, line: 844, type: !935)
!2199 = !DILocation(line: 844, column: 13, scope: !2152)
!2200 = !DILocalVariable(name: "buf_p", scope: !2152, file: !953, line: 845, type: !1103)
!2201 = !DILocation(line: 845, column: 14, scope: !2152)
!2202 = !DILocalVariable(name: "p", scope: !2152, file: !953, line: 846, type: !1097)
!2203 = !DILocation(line: 846, column: 14, scope: !2152)
!2204 = !DILocation(line: 848, column: 9, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !2152, file: !953, line: 848, column: 9)
!2206 = !DILocation(line: 848, column: 12, scope: !2205)
!2207 = !DILocation(line: 848, column: 25, scope: !2205)
!2208 = !DILocation(line: 848, column: 9, scope: !2152)
!2209 = !DILocation(line: 849, column: 34, scope: !2205)
!2210 = !DILocation(line: 849, column: 42, scope: !2205)
!2211 = !DILocation(line: 849, column: 45, scope: !2205)
!2212 = !DILocation(line: 849, column: 9, scope: !2205)
!2213 = !DILocation(line: 850, column: 5, scope: !2152)
!2214 = distinct !{!2214, !2213}
!2215 = !DILocalVariable(name: "SWAP_tmp", scope: !2216, file: !953, line: 850, type: !1778)
!2216 = distinct !DILexicalBlock(scope: !2152, file: !953, line: 850, column: 7)
!2217 = !DILocation(line: 850, column: 20, scope: !2216)
!2218 = !DILocation(line: 850, column: 30, scope: !2219)
!2219 = !DILexicalBlockFile(scope: !2216, file: !953, discriminator: 1)
!2220 = !DILocation(line: 850, column: 33, scope: !2219)
!2221 = !DILocation(line: 850, column: 47, scope: !2219)
!2222 = !DILocation(line: 850, column: 50, scope: !2219)
!2223 = !DILocation(line: 850, column: 64, scope: !2219)
!2224 = !DILocation(line: 850, column: 67, scope: !2219)
!2225 = !DILocation(line: 850, column: 67, scope: !2226)
!2226 = !DILexicalBlockFile(scope: !2219, file: !953, discriminator: 2)
!2227 = !DILocation(line: 850, column: 76, scope: !2219)
!2228 = !DILocation(line: 850, column: 79, scope: !2219)
!2229 = !DILocation(line: 850, column: 88, scope: !2219)
!2230 = !DILocation(line: 850, column: 88, scope: !2231)
!2231 = !DILexicalBlockFile(scope: !2219, file: !953, discriminator: 3)
!2232 = !DILocation(line: 850, column: 97, scope: !2219)
!2233 = !DILocation(line: 852, column: 18, scope: !2152)
!2234 = !DILocation(line: 852, column: 21, scope: !2152)
!2235 = !DILocation(line: 852, column: 29, scope: !2152)
!2236 = !DILocation(line: 852, column: 16, scope: !2152)
!2237 = !DILocation(line: 852, column: 5, scope: !2152)
!2238 = !DILocation(line: 852, column: 8, scope: !2152)
!2239 = !DILocation(line: 852, column: 12, scope: !2152)
!2240 = !DILocation(line: 854, column: 9, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2152, file: !953, line: 854, column: 9)
!2242 = !DILocation(line: 854, column: 12, scope: !2241)
!2243 = !DILocation(line: 854, column: 20, scope: !2241)
!2244 = !DILocation(line: 854, column: 24, scope: !2241)
!2245 = !DILocation(line: 854, column: 27, scope: !2246)
!2246 = !DILexicalBlockFile(scope: !2241, file: !953, discriminator: 1)
!2247 = !DILocation(line: 854, column: 34, scope: !2246)
!2248 = !DILocation(line: 854, column: 46, scope: !2246)
!2249 = !DILocation(line: 854, column: 9, scope: !2246)
!2250 = !DILocation(line: 856, column: 9, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2241, file: !953, line: 854, column: 70)
!2252 = !DILocation(line: 856, column: 12, scope: !2251)
!2253 = !DILocation(line: 856, column: 29, scope: !2251)
!2254 = !DILocation(line: 857, column: 13, scope: !2255)
!2255 = distinct !DILexicalBlock(scope: !2251, file: !953, line: 857, column: 13)
!2256 = !DILocation(line: 857, column: 20, scope: !2255)
!2257 = !DILocation(line: 857, column: 32, scope: !2255)
!2258 = !DILocation(line: 857, column: 47, scope: !2255)
!2259 = !DILocation(line: 857, column: 50, scope: !2260)
!2260 = !DILexicalBlockFile(scope: !2255, file: !953, discriminator: 1)
!2261 = !DILocation(line: 857, column: 57, scope: !2260)
!2262 = !DILocation(line: 857, column: 69, scope: !2260)
!2263 = !DILocation(line: 857, column: 13, scope: !2260)
!2264 = !DILocation(line: 858, column: 13, scope: !2255)
!2265 = !DILocation(line: 858, column: 16, scope: !2255)
!2266 = !DILocation(line: 858, column: 32, scope: !2255)
!2267 = !DILocation(line: 859, column: 5, scope: !2251)
!2268 = !DILocation(line: 861, column: 16, scope: !2152)
!2269 = !DILocation(line: 861, column: 5, scope: !2152)
!2270 = !DILocation(line: 861, column: 8, scope: !2152)
!2271 = !DILocation(line: 861, column: 14, scope: !2152)
!2272 = !DILocation(line: 862, column: 27, scope: !2152)
!2273 = !DILocation(line: 862, column: 30, scope: !2152)
!2274 = !DILocation(line: 862, column: 35, scope: !2152)
!2275 = !DILocation(line: 862, column: 5, scope: !2152)
!2276 = !DILocation(line: 863, column: 25, scope: !2152)
!2277 = !DILocation(line: 863, column: 5, scope: !2152)
!2278 = !DILocation(line: 865, column: 5, scope: !2152)
!2279 = !DILocation(line: 865, column: 8, scope: !2152)
!2280 = !DILocation(line: 865, column: 18, scope: !2152)
!2281 = !DILocation(line: 866, column: 17, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2152, file: !953, line: 866, column: 9)
!2283 = !DILocation(line: 866, column: 9, scope: !2282)
!2284 = !DILocation(line: 866, column: 9, scope: !2152)
!2285 = !DILocation(line: 867, column: 9, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2282, file: !953, line: 866, column: 32)
!2287 = !DILocation(line: 867, column: 12, scope: !2286)
!2288 = !DILocation(line: 867, column: 22, scope: !2286)
!2289 = !DILocation(line: 868, column: 9, scope: !2286)
!2290 = !DILocation(line: 868, column: 12, scope: !2286)
!2291 = !DILocation(line: 868, column: 25, scope: !2286)
!2292 = !DILocation(line: 869, column: 32, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2286, file: !953, line: 869, column: 13)
!2294 = !DILocation(line: 869, column: 20, scope: !2293)
!2295 = !DILocation(line: 869, column: 18, scope: !2293)
!2296 = !DILocation(line: 869, column: 36, scope: !2293)
!2297 = !DILocation(line: 869, column: 13, scope: !2286)
!2298 = !DILocation(line: 870, column: 20, scope: !2293)
!2299 = !DILocation(line: 870, column: 13, scope: !2293)
!2300 = !DILocation(line: 871, column: 9, scope: !2286)
!2301 = !DILocation(line: 871, column: 12, scope: !2286)
!2302 = !DILocation(line: 871, column: 25, scope: !2286)
!2303 = !DILocation(line: 872, column: 5, scope: !2286)
!2304 = !DILocation(line: 873, column: 14, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2306, file: !953, line: 873, column: 13)
!2306 = distinct !DILexicalBlock(scope: !2282, file: !953, line: 872, column: 12)
!2307 = !DILocation(line: 873, column: 17, scope: !2305)
!2308 = !DILocation(line: 873, column: 13, scope: !2306)
!2309 = !DILocation(line: 874, column: 20, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2305, file: !953, line: 873, column: 31)
!2311 = !DILocation(line: 874, column: 13, scope: !2310)
!2312 = !DILocation(line: 876, column: 13, scope: !2310)
!2313 = !DILocation(line: 878, column: 9, scope: !2306)
!2314 = !DILocation(line: 878, column: 12, scope: !2306)
!2315 = !DILocation(line: 878, column: 22, scope: !2306)
!2316 = !DILocation(line: 881, column: 37, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !2152, file: !953, line: 881, column: 9)
!2318 = !DILocation(line: 881, column: 45, scope: !2317)
!2319 = !DILocation(line: 881, column: 48, scope: !2317)
!2320 = !DILocation(line: 881, column: 16, scope: !2317)
!2321 = !DILocation(line: 881, column: 14, scope: !2317)
!2322 = !DILocation(line: 881, column: 68, scope: !2317)
!2323 = !DILocation(line: 881, column: 9, scope: !2152)
!2324 = !DILocation(line: 882, column: 16, scope: !2317)
!2325 = !DILocation(line: 882, column: 9, scope: !2317)
!2326 = !DILocation(line: 884, column: 9, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2152, file: !953, line: 884, column: 9)
!2328 = !DILocation(line: 884, column: 16, scope: !2327)
!2329 = !DILocation(line: 884, column: 22, scope: !2327)
!2330 = !DILocation(line: 884, column: 9, scope: !2152)
!2331 = !DILocation(line: 885, column: 16, scope: !2327)
!2332 = !DILocation(line: 886, column: 16, scope: !2327)
!2333 = !DILocation(line: 886, column: 19, scope: !2327)
!2334 = !DILocation(line: 886, column: 28, scope: !2327)
!2335 = !DILocation(line: 886, column: 31, scope: !2327)
!2336 = !DILocation(line: 886, column: 42, scope: !2327)
!2337 = !DILocation(line: 886, column: 45, scope: !2327)
!2338 = !DILocation(line: 886, column: 49, scope: !2327)
!2339 = !DILocation(line: 886, column: 52, scope: !2327)
!2340 = !DILocation(line: 886, column: 56, scope: !2327)
!2341 = !DILocation(line: 886, column: 59, scope: !2327)
!2342 = !DILocation(line: 886, column: 72, scope: !2327)
!2343 = !DILocation(line: 886, column: 75, scope: !2327)
!2344 = !DILocation(line: 886, column: 82, scope: !2327)
!2345 = !DILocation(line: 885, column: 9, scope: !2327)
!2346 = !DILocation(line: 888, column: 28, scope: !2152)
!2347 = !DILocation(line: 888, column: 5, scope: !2152)
!2348 = !DILocation(line: 890, column: 13, scope: !2152)
!2349 = !DILocation(line: 890, column: 19, scope: !2152)
!2350 = !DILocation(line: 890, column: 17, scope: !2152)
!2351 = !DILocation(line: 890, column: 11, scope: !2152)
!2352 = !DILocation(line: 891, column: 14, scope: !2166)
!2353 = !DILocation(line: 891, column: 17, scope: !2166)
!2354 = !DILocation(line: 891, column: 29, scope: !2166)
!2355 = !DILocation(line: 891, column: 12, scope: !2166)
!2356 = !DILocation(line: 891, column: 10, scope: !2166)
!2357 = !DILocation(line: 891, column: 34, scope: !2358)
!2358 = !DILexicalBlockFile(scope: !2165, file: !953, discriminator: 1)
!2359 = !DILocation(line: 891, column: 36, scope: !2358)
!2360 = !DILocation(line: 891, column: 5, scope: !2358)
!2361 = !DILocalVariable(name: "fs", scope: !2164, file: !953, line: 892, type: !1709)
!2362 = !DILocation(line: 892, column: 22, scope: !2164)
!2363 = !DILocation(line: 892, column: 44, scope: !2164)
!2364 = !DILocation(line: 892, column: 27, scope: !2164)
!2365 = !DILocation(line: 892, column: 30, scope: !2164)
!2366 = !DILocalVariable(name: "trailer", scope: !2164, file: !953, line: 893, type: !923)
!2367 = !DILocation(line: 893, column: 13, scope: !2164)
!2368 = !DILocation(line: 893, column: 31, scope: !2164)
!2369 = !DILocation(line: 893, column: 34, scope: !2164)
!2370 = !DILocation(line: 893, column: 30, scope: !2164)
!2371 = !DILocation(line: 893, column: 29, scope: !2164)
!2372 = !DILocation(line: 893, column: 28, scope: !2164)
!2373 = !DILocation(line: 893, column: 25, scope: !2164)
!2374 = !DILocalVariable(name: "v", scope: !2164, file: !953, line: 894, type: !923)
!2375 = !DILocation(line: 894, column: 13, scope: !2164)
!2376 = !DILocation(line: 896, column: 13, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2164, file: !953, line: 896, column: 13)
!2378 = !DILocation(line: 896, column: 15, scope: !2377)
!2379 = !DILocation(line: 896, column: 18, scope: !2380)
!2380 = !DILexicalBlockFile(scope: !2377, file: !953, discriminator: 1)
!2381 = !DILocation(line: 896, column: 21, scope: !2380)
!2382 = !DILocation(line: 896, column: 29, scope: !2380)
!2383 = !DILocation(line: 896, column: 13, scope: !2380)
!2384 = !DILocation(line: 896, column: 58, scope: !2385)
!2385 = !DILexicalBlockFile(scope: !2377, file: !953, discriminator: 2)
!2386 = !DILocation(line: 896, column: 64, scope: !2385)
!2387 = !DILocation(line: 896, column: 63, scope: !2385)
!2388 = !DILocation(line: 896, column: 40, scope: !2385)
!2389 = !DILocation(line: 896, column: 77, scope: !2385)
!2390 = !DILocation(line: 896, column: 105, scope: !2385)
!2391 = !DILocation(line: 896, column: 111, scope: !2385)
!2392 = !DILocation(line: 896, column: 110, scope: !2385)
!2393 = !DILocation(line: 896, column: 87, scope: !2385)
!2394 = !DILocation(line: 896, column: 124, scope: !2385)
!2395 = !DILocation(line: 896, column: 84, scope: !2385)
!2396 = !DILocation(line: 896, column: 150, scope: !2385)
!2397 = !DILocation(line: 896, column: 156, scope: !2385)
!2398 = !DILocation(line: 896, column: 155, scope: !2385)
!2399 = !DILocation(line: 896, column: 132, scope: !2385)
!2400 = !DILocation(line: 896, column: 130, scope: !2385)
!2401 = !DILocation(line: 896, column: 172, scope: !2385)
!2402 = !DILocation(line: 896, column: 170, scope: !2385)
!2403 = !DILocation(line: 896, column: 36, scope: !2385)
!2404 = !DILocation(line: 896, column: 34, scope: !2385)
!2405 = !DILocation(line: 897, column: 18, scope: !2377)
!2406 = !DILocation(line: 897, column: 26, scope: !2377)
!2407 = !DILocation(line: 897, column: 29, scope: !2377)
!2408 = !DILocation(line: 897, column: 24, scope: !2377)
!2409 = !DILocation(line: 897, column: 16, scope: !2377)
!2410 = !DILocation(line: 898, column: 13, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2164, file: !953, line: 898, column: 13)
!2412 = !DILocation(line: 898, column: 21, scope: !2411)
!2413 = !DILocation(line: 898, column: 24, scope: !2411)
!2414 = !DILocation(line: 898, column: 19, scope: !2411)
!2415 = !DILocation(line: 898, column: 43, scope: !2411)
!2416 = !DILocation(line: 898, column: 41, scope: !2411)
!2417 = !DILocation(line: 898, column: 13, scope: !2164)
!2418 = !DILocation(line: 899, column: 20, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2411, file: !953, line: 898, column: 46)
!2420 = !DILocation(line: 899, column: 13, scope: !2419)
!2421 = !DILocation(line: 900, column: 40, scope: !2419)
!2422 = !DILocation(line: 900, column: 43, scope: !2419)
!2423 = !DILocation(line: 900, column: 13, scope: !2419)
!2424 = !DILocation(line: 901, column: 13, scope: !2419)
!2425 = !DILocation(line: 903, column: 18, scope: !2164)
!2426 = !DILocation(line: 903, column: 15, scope: !2164)
!2427 = !DILocation(line: 905, column: 13, scope: !2163)
!2428 = !DILocation(line: 905, column: 16, scope: !2163)
!2429 = !DILocation(line: 905, column: 13, scope: !2164)
!2430 = !DILocalVariable(name: "crc", scope: !2162, file: !953, line: 906, type: !924)
!2431 = !DILocation(line: 906, column: 22, scope: !2162)
!2432 = !DILocation(line: 906, column: 35, scope: !2162)
!2433 = !DILocation(line: 906, column: 72, scope: !2162)
!2434 = !DILocation(line: 906, column: 79, scope: !2162)
!2435 = !DILocation(line: 906, column: 28, scope: !2436)
!2436 = !DILexicalBlockFile(scope: !2162, file: !953, discriminator: 1)
!2437 = !DILocation(line: 907, column: 17, scope: !2438)
!2438 = distinct !DILexicalBlock(scope: !2162, file: !953, line: 907, column: 17)
!2439 = !DILocation(line: 907, column: 17, scope: !2162)
!2440 = !DILocalVariable(name: "ts", scope: !2441, file: !953, line: 908, type: !937)
!2441 = distinct !DILexicalBlock(scope: !2438, file: !953, line: 907, column: 22)
!2442 = !DILocation(line: 908, column: 25, scope: !2441)
!2443 = !DILocation(line: 908, column: 30, scope: !2441)
!2444 = !DILocation(line: 908, column: 37, scope: !2441)
!2445 = !DILocation(line: 908, column: 41, scope: !2441)
!2446 = !DILocation(line: 908, column: 78, scope: !2447)
!2447 = !DILexicalBlockFile(scope: !2441, file: !953, discriminator: 1)
!2448 = !DILocation(line: 908, column: 85, scope: !2447)
!2449 = !DILocation(line: 908, column: 30, scope: !2447)
!2450 = !DILocation(line: 908, column: 91, scope: !2451)
!2451 = !DILexicalBlockFile(scope: !2441, file: !953, discriminator: 2)
!2452 = !DILocation(line: 908, column: 98, scope: !2451)
!2453 = !DILocation(line: 908, column: 30, scope: !2451)
!2454 = !DILocation(line: 908, column: 30, scope: !2455)
!2455 = !DILexicalBlockFile(scope: !2441, file: !953, discriminator: 3)
!2456 = !DILocation(line: 908, column: 25, scope: !2455)
!2457 = !DILocation(line: 909, column: 24, scope: !2441)
!2458 = !DILocation(line: 909, column: 27, scope: !2441)
!2459 = !DILocation(line: 909, column: 58, scope: !2441)
!2460 = !DILocation(line: 909, column: 17, scope: !2441)
!2461 = !DILocation(line: 910, column: 21, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2441, file: !953, line: 910, column: 21)
!2463 = !DILocation(line: 910, column: 24, scope: !2462)
!2464 = !DILocation(line: 910, column: 59, scope: !2462)
!2465 = !DILocation(line: 910, column: 62, scope: !2466)
!2466 = !DILexicalBlockFile(scope: !2462, file: !953, discriminator: 1)
!2467 = !DILocation(line: 910, column: 69, scope: !2466)
!2468 = !DILocation(line: 910, column: 82, scope: !2466)
!2469 = !DILocation(line: 910, column: 21, scope: !2466)
!2470 = !DILocation(line: 911, column: 28, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2462, file: !953, line: 910, column: 87)
!2472 = !DILocation(line: 911, column: 31, scope: !2471)
!2473 = !DILocation(line: 911, column: 61, scope: !2471)
!2474 = !DILocation(line: 911, column: 71, scope: !2471)
!2475 = !DILocation(line: 911, column: 78, scope: !2471)
!2476 = !DILocation(line: 911, column: 64, scope: !2471)
!2477 = !DILocation(line: 911, column: 63, scope: !2471)
!2478 = !DILocation(line: 911, column: 21, scope: !2479)
!2479 = !DILexicalBlockFile(scope: !2471, file: !953, discriminator: 1)
!2480 = !DILocation(line: 912, column: 17, scope: !2471)
!2481 = !DILocation(line: 912, column: 28, scope: !2482)
!2482 = !DILexicalBlockFile(scope: !2483, file: !953, discriminator: 1)
!2483 = distinct !DILexicalBlock(scope: !2462, file: !953, line: 912, column: 28)
!2484 = !DILocation(line: 912, column: 31, scope: !2482)
!2485 = !DILocation(line: 913, column: 28, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2483, file: !953, line: 912, column: 67)
!2487 = !DILocation(line: 913, column: 31, scope: !2486)
!2488 = !DILocation(line: 913, column: 69, scope: !2486)
!2489 = !DILocation(line: 913, column: 21, scope: !2486)
!2490 = !DILocation(line: 914, column: 17, scope: !2486)
!2491 = !DILocation(line: 915, column: 28, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2483, file: !953, line: 914, column: 24)
!2493 = !DILocation(line: 915, column: 31, scope: !2492)
!2494 = !DILocation(line: 915, column: 21, scope: !2492)
!2495 = !DILocation(line: 917, column: 17, scope: !2441)
!2496 = !DILocation(line: 917, column: 21, scope: !2441)
!2497 = !DILocation(line: 917, column: 35, scope: !2441)
!2498 = !DILocation(line: 918, column: 13, scope: !2441)
!2499 = !DILocation(line: 919, column: 17, scope: !2161)
!2500 = !DILocation(line: 919, column: 24, scope: !2161)
!2501 = !DILocation(line: 919, column: 30, scope: !2161)
!2502 = !DILocation(line: 919, column: 17, scope: !2162)
!2503 = !DILocation(line: 920, column: 24, scope: !2160)
!2504 = !DILocation(line: 920, column: 78, scope: !2160)
!2505 = !DILocation(line: 920, column: 124, scope: !2160)
!2506 = !DILocation(line: 920, column: 132, scope: !2160)
!2507 = !DILocation(line: 920, column: 130, scope: !2160)
!2508 = !DILocation(line: 920, column: 134, scope: !2160)
!2509 = !DILocation(line: 920, column: 141, scope: !2160)
!2510 = !DILocation(line: 920, column: 81, scope: !2160)
!2511 = !DILocation(line: 68, column: 16, scope: !2154, inlinedAt: !2159)
!2512 = !DILocation(line: 68, column: 19, scope: !2154, inlinedAt: !2159)
!2513 = !DILocation(line: 68, column: 24, scope: !2154, inlinedAt: !2159)
!2514 = !DILocation(line: 68, column: 38, scope: !2154, inlinedAt: !2159)
!2515 = !DILocation(line: 68, column: 41, scope: !2154, inlinedAt: !2159)
!2516 = !DILocation(line: 68, column: 46, scope: !2154, inlinedAt: !2159)
!2517 = !DILocation(line: 68, column: 34, scope: !2154, inlinedAt: !2159)
!2518 = !DILocation(line: 68, column: 57, scope: !2154, inlinedAt: !2159)
!2519 = !DILocation(line: 68, column: 69, scope: !2154, inlinedAt: !2159)
!2520 = !DILocation(line: 68, column: 72, scope: !2154, inlinedAt: !2159)
!2521 = !DILocation(line: 68, column: 79, scope: !2154, inlinedAt: !2159)
!2522 = !DILocation(line: 68, column: 84, scope: !2154, inlinedAt: !2159)
!2523 = !DILocation(line: 68, column: 99, scope: !2154, inlinedAt: !2159)
!2524 = !DILocation(line: 68, column: 102, scope: !2154, inlinedAt: !2159)
!2525 = !DILocation(line: 68, column: 109, scope: !2154, inlinedAt: !2159)
!2526 = !DILocation(line: 68, column: 114, scope: !2154, inlinedAt: !2159)
!2527 = !DILocation(line: 68, column: 94, scope: !2154, inlinedAt: !2159)
!2528 = !DILocation(line: 68, column: 63, scope: !2154, inlinedAt: !2159)
!2529 = !DILocation(line: 920, column: 17, scope: !2530)
!2530 = !DILexicalBlockFile(scope: !2160, file: !953, discriminator: 1)
!2531 = !DILocation(line: 921, column: 13, scope: !2160)
!2532 = !DILocation(line: 922, column: 9, scope: !2162)
!2533 = !DILocation(line: 924, column: 13, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2164, file: !953, line: 924, column: 13)
!2535 = !DILocation(line: 924, column: 13, scope: !2164)
!2536 = !DILocation(line: 925, column: 36, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2534, file: !953, line: 924, column: 16)
!2538 = !DILocation(line: 925, column: 40, scope: !2537)
!2539 = !DILocation(line: 925, column: 43, scope: !2537)
!2540 = !DILocation(line: 925, column: 50, scope: !2537)
!2541 = !DILocation(line: 925, column: 13, scope: !2537)
!2542 = !DILocation(line: 926, column: 9, scope: !2537)
!2543 = !DILocation(line: 927, column: 36, scope: !2534)
!2544 = !DILocation(line: 927, column: 44, scope: !2534)
!2545 = !DILocation(line: 927, column: 42, scope: !2534)
!2546 = !DILocation(line: 927, column: 13, scope: !2534)
!2547 = !DILocation(line: 927, column: 17, scope: !2534)
!2548 = !DILocation(line: 927, column: 19, scope: !2534)
!2549 = !DILocation(line: 927, column: 34, scope: !2534)
!2550 = !DILocation(line: 929, column: 21, scope: !2164)
!2551 = !DILocation(line: 929, column: 9, scope: !2164)
!2552 = !DILocation(line: 929, column: 13, scope: !2164)
!2553 = !DILocation(line: 929, column: 19, scope: !2164)
!2554 = !DILocation(line: 930, column: 19, scope: !2164)
!2555 = !DILocation(line: 930, column: 9, scope: !2164)
!2556 = !DILocation(line: 930, column: 13, scope: !2164)
!2557 = !DILocation(line: 930, column: 17, scope: !2164)
!2558 = !DILocation(line: 931, column: 5, scope: !2164)
!2559 = !DILocation(line: 891, column: 43, scope: !2560)
!2560 = !DILexicalBlockFile(scope: !2165, file: !953, discriminator: 2)
!2561 = !DILocation(line: 891, column: 5, scope: !2560)
!2562 = distinct !{!2562, !2563}
!2563 = !DILocation(line: 891, column: 5, scope: !2152)
!2564 = !DILocation(line: 933, column: 5, scope: !2152)
!2565 = !DILocation(line: 933, column: 12, scope: !2152)
!2566 = !DILocation(line: 933, column: 20, scope: !2152)
!2567 = !DILocation(line: 935, column: 21, scope: !2152)
!2568 = !DILocation(line: 935, column: 24, scope: !2152)
!2569 = !DILocation(line: 935, column: 20, scope: !2152)
!2570 = !DILocation(line: 937, column: 20, scope: !2152)
!2571 = !DILocation(line: 937, column: 23, scope: !2152)
!2572 = !DILocation(line: 940, column: 14, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2152, file: !953, line: 940, column: 5)
!2574 = !DILocation(line: 940, column: 17, scope: !2573)
!2575 = !DILocation(line: 940, column: 29, scope: !2573)
!2576 = !DILocation(line: 940, column: 12, scope: !2573)
!2577 = !DILocation(line: 940, column: 10, scope: !2573)
!2578 = !DILocation(line: 940, column: 34, scope: !2579)
!2579 = !DILexicalBlockFile(scope: !2580, file: !953, discriminator: 1)
!2580 = distinct !DILexicalBlock(scope: !2573, file: !953, line: 940, column: 5)
!2581 = !DILocation(line: 940, column: 36, scope: !2579)
!2582 = !DILocation(line: 940, column: 5, scope: !2579)
!2583 = !DILocalVariable(name: "fs", scope: !2584, file: !953, line: 941, type: !1709)
!2584 = distinct !DILexicalBlock(scope: !2580, file: !953, line: 940, column: 47)
!2585 = !DILocation(line: 941, column: 22, scope: !2584)
!2586 = !DILocation(line: 941, column: 44, scope: !2584)
!2587 = !DILocation(line: 941, column: 27, scope: !2584)
!2588 = !DILocation(line: 941, column: 30, scope: !2584)
!2589 = !DILocalVariable(name: "j", scope: !2584, file: !953, line: 942, type: !923)
!2590 = !DILocation(line: 942, column: 13, scope: !2584)
!2591 = !DILocation(line: 943, column: 13, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2584, file: !953, line: 943, column: 13)
!2593 = !DILocation(line: 943, column: 17, scope: !2592)
!2594 = !DILocation(line: 943, column: 31, scope: !2592)
!2595 = !DILocation(line: 943, column: 34, scope: !2596)
!2596 = !DILexicalBlockFile(scope: !2592, file: !953, discriminator: 1)
!2597 = !DILocation(line: 943, column: 37, scope: !2596)
!2598 = !DILocation(line: 943, column: 50, scope: !2596)
!2599 = !DILocation(line: 943, column: 53, scope: !2596)
!2600 = !DILocation(line: 943, column: 13, scope: !2596)
!2601 = !DILocalVariable(name: "desc", scope: !2602, file: !953, line: 944, type: !2603)
!2602 = distinct !DILexicalBlock(scope: !2592, file: !953, line: 943, column: 62)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64, align: 64)
!2604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2605)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPixFmtDescriptor", file: !2606, line: 123, baseType: !2607)
!2606 = !DIFile(filename: "./libavutil/pixdesc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPixFmtDescriptor", file: !2606, line: 81, size: 1280, align: 64, elements: !2608)
!2608 = !{!2609, !2610, !2611, !2612, !2613, !2614, !2627}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2607, file: !2606, line: 82, baseType: !958, size: 64, align: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !2607, file: !2606, line: 83, baseType: !935, size: 8, align: 8, offset: 64)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_w", scope: !2607, file: !2606, line: 92, baseType: !935, size: 8, align: 8, offset: 72)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "log2_chroma_h", scope: !2607, file: !2606, line: 101, baseType: !935, size: 8, align: 8, offset: 80)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2607, file: !2606, line: 106, baseType: !940, size: 64, align: 64, offset: 128)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !2607, file: !2606, line: 117, baseType: !2615, size: 1024, align: 32, offset: 192)
!2615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2616, size: 1024, align: 32, elements: !1202)
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVComponentDescriptor", file: !2606, line: 70, baseType: !2617)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVComponentDescriptor", file: !2606, line: 31, size: 256, align: 32, elements: !2618)
!2618 = !{!2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !2617, file: !2606, line: 35, baseType: !923, size: 32, align: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2617, file: !2606, line: 41, baseType: !923, size: 32, align: 32, offset: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2617, file: !2606, line: 47, baseType: !923, size: 32, align: 32, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2617, file: !2606, line: 53, baseType: !923, size: 32, align: 32, offset: 96)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2617, file: !2606, line: 58, baseType: !923, size: 32, align: 32, offset: 128)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "step_minus1", scope: !2617, file: !2606, line: 62, baseType: !923, size: 32, align: 32, offset: 160)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "depth_minus1", scope: !2617, file: !2606, line: 65, baseType: !923, size: 32, align: 32, offset: 192)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "offset_plus1", scope: !2617, file: !2606, line: 68, baseType: !923, size: 32, align: 32, offset: 224)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2607, file: !2606, line: 122, baseType: !958, size: 64, align: 64, offset: 1216)
!2628 = !DILocation(line: 944, column: 39, scope: !2602)
!2629 = !DILocation(line: 944, column: 66, scope: !2602)
!2630 = !DILocation(line: 944, column: 73, scope: !2602)
!2631 = !DILocation(line: 944, column: 46, scope: !2602)
!2632 = !DILocalVariable(name: "src", scope: !2602, file: !953, line: 945, type: !2633)
!2633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 256, align: 64, elements: !1202)
!2634 = !DILocation(line: 945, column: 28, scope: !2602)
!2635 = !DILocalVariable(name: "dst", scope: !2602, file: !953, line: 946, type: !1664)
!2636 = !DILocation(line: 946, column: 22, scope: !2602)
!2637 = !DILocation(line: 947, column: 39, scope: !2602)
!2638 = !DILocation(line: 947, column: 42, scope: !2602)
!2639 = !DILocation(line: 947, column: 13, scope: !2602)
!2640 = !DILocation(line: 948, column: 20, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2602, file: !953, line: 948, column: 13)
!2642 = !DILocation(line: 948, column: 18, scope: !2641)
!2643 = !DILocation(line: 948, column: 25, scope: !2644)
!2644 = !DILexicalBlockFile(scope: !2645, file: !953, discriminator: 1)
!2645 = distinct !DILexicalBlock(scope: !2641, file: !953, line: 948, column: 13)
!2646 = !DILocation(line: 948, column: 29, scope: !2644)
!2647 = !DILocation(line: 948, column: 35, scope: !2644)
!2648 = !DILocation(line: 948, column: 27, scope: !2644)
!2649 = !DILocation(line: 948, column: 13, scope: !2644)
!2650 = !DILocalVariable(name: "pixshift", scope: !2651, file: !953, line: 949, type: !923)
!2651 = distinct !DILexicalBlock(scope: !2645, file: !953, line: 948, column: 55)
!2652 = !DILocation(line: 949, column: 21, scope: !2651)
!2653 = !DILocation(line: 949, column: 43, scope: !2651)
!2654 = !DILocation(line: 949, column: 32, scope: !2651)
!2655 = !DILocation(line: 949, column: 38, scope: !2651)
!2656 = !DILocation(line: 949, column: 46, scope: !2651)
!2657 = !DILocation(line: 949, column: 52, scope: !2651)
!2658 = !DILocalVariable(name: "sh", scope: !2651, file: !953, line: 950, type: !923)
!2659 = !DILocation(line: 950, column: 21, scope: !2651)
!2660 = !DILocation(line: 950, column: 27, scope: !2651)
!2661 = !DILocation(line: 950, column: 29, scope: !2651)
!2662 = !DILocation(line: 950, column: 34, scope: !2651)
!2663 = !DILocation(line: 950, column: 37, scope: !2664)
!2664 = !DILexicalBlockFile(scope: !2651, file: !953, discriminator: 1)
!2665 = !DILocation(line: 950, column: 39, scope: !2664)
!2666 = !DILocation(line: 950, column: 26, scope: !2664)
!2667 = !DILocation(line: 950, column: 47, scope: !2668)
!2668 = !DILexicalBlockFile(scope: !2651, file: !953, discriminator: 2)
!2669 = !DILocation(line: 950, column: 50, scope: !2668)
!2670 = !DILocation(line: 950, column: 26, scope: !2668)
!2671 = !DILocation(line: 950, column: 26, scope: !2672)
!2672 = !DILexicalBlockFile(scope: !2651, file: !953, discriminator: 3)
!2673 = !DILocation(line: 950, column: 26, scope: !2674)
!2674 = !DILexicalBlockFile(scope: !2651, file: !953, discriminator: 4)
!2675 = !DILocation(line: 950, column: 21, scope: !2674)
!2676 = !DILocalVariable(name: "sv", scope: !2651, file: !953, line: 951, type: !923)
!2677 = !DILocation(line: 951, column: 21, scope: !2651)
!2678 = !DILocation(line: 951, column: 27, scope: !2651)
!2679 = !DILocation(line: 951, column: 29, scope: !2651)
!2680 = !DILocation(line: 951, column: 34, scope: !2651)
!2681 = !DILocation(line: 951, column: 37, scope: !2664)
!2682 = !DILocation(line: 951, column: 39, scope: !2664)
!2683 = !DILocation(line: 951, column: 26, scope: !2664)
!2684 = !DILocation(line: 951, column: 47, scope: !2668)
!2685 = !DILocation(line: 951, column: 50, scope: !2668)
!2686 = !DILocation(line: 951, column: 26, scope: !2668)
!2687 = !DILocation(line: 951, column: 26, scope: !2672)
!2688 = !DILocation(line: 951, column: 26, scope: !2674)
!2689 = !DILocation(line: 951, column: 21, scope: !2674)
!2690 = !DILocation(line: 952, column: 34, scope: !2651)
!2691 = !DILocation(line: 952, column: 26, scope: !2651)
!2692 = !DILocation(line: 952, column: 29, scope: !2651)
!2693 = !DILocation(line: 952, column: 51, scope: !2651)
!2694 = !DILocation(line: 952, column: 39, scope: !2651)
!2695 = !DILocation(line: 952, column: 42, scope: !2651)
!2696 = !DILocation(line: 953, column: 27, scope: !2651)
!2697 = !DILocation(line: 953, column: 31, scope: !2651)
!2698 = !DILocation(line: 953, column: 42, scope: !2651)
!2699 = !DILocation(line: 953, column: 39, scope: !2651)
!2700 = !DILocation(line: 952, column: 54, scope: !2651)
!2701 = !DILocation(line: 952, column: 37, scope: !2651)
!2702 = !DILocation(line: 953, column: 50, scope: !2651)
!2703 = !DILocation(line: 953, column: 54, scope: !2651)
!2704 = !DILocation(line: 953, column: 65, scope: !2651)
!2705 = !DILocation(line: 953, column: 62, scope: !2651)
!2706 = !DILocation(line: 953, column: 72, scope: !2651)
!2707 = !DILocation(line: 953, column: 69, scope: !2651)
!2708 = !DILocation(line: 953, column: 46, scope: !2651)
!2709 = !DILocation(line: 952, column: 21, scope: !2651)
!2710 = !DILocation(line: 952, column: 17, scope: !2651)
!2711 = !DILocation(line: 952, column: 24, scope: !2651)
!2712 = !DILocation(line: 954, column: 50, scope: !2651)
!2713 = !DILocation(line: 954, column: 26, scope: !2651)
!2714 = !DILocation(line: 954, column: 29, scope: !2651)
!2715 = !DILocation(line: 954, column: 42, scope: !2651)
!2716 = !DILocation(line: 954, column: 45, scope: !2651)
!2717 = !DILocation(line: 954, column: 83, scope: !2651)
!2718 = !DILocation(line: 954, column: 55, scope: !2651)
!2719 = !DILocation(line: 954, column: 58, scope: !2651)
!2720 = !DILocation(line: 954, column: 71, scope: !2651)
!2721 = !DILocation(line: 954, column: 74, scope: !2651)
!2722 = !DILocation(line: 955, column: 27, scope: !2651)
!2723 = !DILocation(line: 955, column: 31, scope: !2651)
!2724 = !DILocation(line: 955, column: 42, scope: !2651)
!2725 = !DILocation(line: 955, column: 39, scope: !2651)
!2726 = !DILocation(line: 954, column: 86, scope: !2651)
!2727 = !DILocation(line: 954, column: 53, scope: !2651)
!2728 = !DILocation(line: 955, column: 50, scope: !2651)
!2729 = !DILocation(line: 955, column: 54, scope: !2651)
!2730 = !DILocation(line: 955, column: 65, scope: !2651)
!2731 = !DILocation(line: 955, column: 62, scope: !2651)
!2732 = !DILocation(line: 955, column: 72, scope: !2651)
!2733 = !DILocation(line: 955, column: 69, scope: !2651)
!2734 = !DILocation(line: 955, column: 46, scope: !2651)
!2735 = !DILocation(line: 954, column: 21, scope: !2651)
!2736 = !DILocation(line: 954, column: 17, scope: !2651)
!2737 = !DILocation(line: 954, column: 24, scope: !2651)
!2738 = !DILocation(line: 957, column: 13, scope: !2651)
!2739 = !DILocation(line: 948, column: 51, scope: !2740)
!2740 = !DILexicalBlockFile(scope: !2645, file: !953, discriminator: 2)
!2741 = !DILocation(line: 948, column: 13, scope: !2740)
!2742 = distinct !{!2742, !2743}
!2743 = !DILocation(line: 948, column: 13, scope: !2602)
!2744 = !DILocation(line: 958, column: 17, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2602, file: !953, line: 958, column: 17)
!2746 = !DILocation(line: 958, column: 23, scope: !2745)
!2747 = !DILocation(line: 958, column: 29, scope: !2745)
!2748 = !DILocation(line: 958, column: 40, scope: !2745)
!2749 = !DILocation(line: 959, column: 17, scope: !2745)
!2750 = !DILocation(line: 959, column: 23, scope: !2745)
!2751 = !DILocation(line: 959, column: 29, scope: !2745)
!2752 = !DILocation(line: 958, column: 17, scope: !2753)
!2753 = !DILexicalBlockFile(scope: !2602, file: !953, discriminator: 1)
!2754 = !DILocation(line: 960, column: 26, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2745, file: !953, line: 959, column: 41)
!2756 = !DILocation(line: 960, column: 29, scope: !2755)
!2757 = !DILocation(line: 960, column: 17, scope: !2755)
!2758 = !DILocation(line: 960, column: 24, scope: !2755)
!2759 = !DILocation(line: 961, column: 26, scope: !2755)
!2760 = !DILocation(line: 961, column: 29, scope: !2755)
!2761 = !DILocation(line: 961, column: 42, scope: !2755)
!2762 = !DILocation(line: 961, column: 45, scope: !2755)
!2763 = !DILocation(line: 961, column: 17, scope: !2755)
!2764 = !DILocation(line: 961, column: 24, scope: !2755)
!2765 = !DILocation(line: 962, column: 13, scope: !2755)
!2766 = !DILocation(line: 963, column: 27, scope: !2602)
!2767 = !DILocation(line: 963, column: 32, scope: !2602)
!2768 = !DILocation(line: 963, column: 35, scope: !2602)
!2769 = !DILocation(line: 963, column: 45, scope: !2602)
!2770 = !DILocation(line: 964, column: 27, scope: !2602)
!2771 = !DILocation(line: 964, column: 30, scope: !2602)
!2772 = !DILocation(line: 964, column: 43, scope: !2602)
!2773 = !DILocation(line: 964, column: 46, scope: !2602)
!2774 = !DILocation(line: 965, column: 27, scope: !2602)
!2775 = !DILocation(line: 965, column: 34, scope: !2602)
!2776 = !DILocation(line: 966, column: 27, scope: !2602)
!2777 = !DILocation(line: 966, column: 31, scope: !2602)
!2778 = !DILocation(line: 967, column: 27, scope: !2602)
!2779 = !DILocation(line: 967, column: 31, scope: !2602)
!2780 = !DILocation(line: 963, column: 13, scope: !2602)
!2781 = !DILocation(line: 968, column: 9, scope: !2602)
!2782 = !DILocation(line: 969, column: 5, scope: !2584)
!2783 = !DILocation(line: 940, column: 43, scope: !2784)
!2784 = !DILexicalBlockFile(scope: !2580, file: !953, discriminator: 2)
!2785 = !DILocation(line: 940, column: 5, scope: !2784)
!2786 = distinct !{!2786, !2787}
!2787 = !DILocation(line: 940, column: 5, scope: !2152)
!2788 = !DILocation(line: 970, column: 32, scope: !2152)
!2789 = !DILocation(line: 970, column: 35, scope: !2152)
!2790 = !DILocation(line: 970, column: 5, scope: !2152)
!2791 = !DILocation(line: 972, column: 5, scope: !2152)
!2792 = !DILocation(line: 972, column: 8, scope: !2152)
!2793 = !DILocation(line: 972, column: 22, scope: !2152)
!2794 = !DILocation(line: 974, column: 9, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2152, file: !953, line: 974, column: 9)
!2796 = !DILocation(line: 974, column: 12, scope: !2795)
!2797 = !DILocation(line: 974, column: 25, scope: !2795)
!2798 = !DILocation(line: 974, column: 9, scope: !2152)
!2799 = !DILocation(line: 975, column: 34, scope: !2795)
!2800 = !DILocation(line: 975, column: 42, scope: !2795)
!2801 = !DILocation(line: 975, column: 45, scope: !2795)
!2802 = !DILocation(line: 975, column: 9, scope: !2795)
!2803 = !DILocation(line: 976, column: 5, scope: !2152)
!2804 = !DILocation(line: 976, column: 8, scope: !2152)
!2805 = !DILocation(line: 976, column: 12, scope: !2152)
!2806 = !DILocation(line: 977, column: 29, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2152, file: !953, line: 977, column: 9)
!2808 = !DILocation(line: 977, column: 35, scope: !2807)
!2809 = !DILocation(line: 977, column: 38, scope: !2807)
!2810 = !DILocation(line: 977, column: 46, scope: !2807)
!2811 = !DILocation(line: 977, column: 16, scope: !2807)
!2812 = !DILocation(line: 977, column: 14, scope: !2807)
!2813 = !DILocation(line: 977, column: 50, scope: !2807)
!2814 = !DILocation(line: 977, column: 9, scope: !2152)
!2815 = !DILocation(line: 978, column: 16, scope: !2807)
!2816 = !DILocation(line: 978, column: 9, scope: !2807)
!2817 = !DILocation(line: 980, column: 6, scope: !2152)
!2818 = !DILocation(line: 980, column: 16, scope: !2152)
!2819 = !DILocation(line: 982, column: 12, scope: !2152)
!2820 = !DILocation(line: 982, column: 5, scope: !2152)
!2821 = !DILocation(line: 983, column: 1, scope: !2152)
!2822 = distinct !DISubprogram(name: "copy_fields", scope: !953, file: !953, line: 1013, type: !2823, isLocal: true, isDefinition: true, scopeLine: 1014, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{null, !1709, !1709, !1709}
!2825 = !DILocalVariable(name: "fsdst", arg: 1, scope: !2822, file: !953, line: 1013, type: !1709)
!2826 = !DILocation(line: 1013, column: 38, scope: !2822)
!2827 = !DILocalVariable(name: "fssrc", arg: 2, scope: !2822, file: !953, line: 1013, type: !1709)
!2828 = !DILocation(line: 1013, column: 58, scope: !2822)
!2829 = !DILocalVariable(name: "fsrc", arg: 3, scope: !2822, file: !953, line: 1013, type: !1709)
!2830 = !DILocation(line: 1013, column: 78, scope: !2822)
!2831 = !DILocation(line: 1015, column: 22, scope: !2822)
!2832 = !DILocation(line: 1015, column: 28, scope: !2822)
!2833 = !DILocation(line: 1015, column: 5, scope: !2822)
!2834 = !DILocation(line: 1015, column: 12, scope: !2822)
!2835 = !DILocation(line: 1015, column: 20, scope: !2822)
!2836 = !DILocation(line: 1016, column: 28, scope: !2822)
!2837 = !DILocation(line: 1016, column: 34, scope: !2822)
!2838 = !DILocation(line: 1016, column: 5, scope: !2822)
!2839 = !DILocation(line: 1016, column: 12, scope: !2822)
!2840 = !DILocation(line: 1016, column: 26, scope: !2822)
!2841 = !DILocation(line: 1017, column: 28, scope: !2822)
!2842 = !DILocation(line: 1017, column: 34, scope: !2822)
!2843 = !DILocation(line: 1017, column: 5, scope: !2822)
!2844 = !DILocation(line: 1017, column: 12, scope: !2822)
!2845 = !DILocation(line: 1017, column: 26, scope: !2822)
!2846 = !DILocation(line: 1018, column: 29, scope: !2822)
!2847 = !DILocation(line: 1018, column: 35, scope: !2822)
!2848 = !DILocation(line: 1018, column: 5, scope: !2822)
!2849 = !DILocation(line: 1018, column: 12, scope: !2822)
!2850 = !DILocation(line: 1018, column: 27, scope: !2822)
!2851 = !DILocation(line: 1019, column: 29, scope: !2822)
!2852 = !DILocation(line: 1019, column: 35, scope: !2822)
!2853 = !DILocation(line: 1019, column: 5, scope: !2822)
!2854 = !DILocation(line: 1019, column: 12, scope: !2822)
!2855 = !DILocation(line: 1019, column: 27, scope: !2822)
!2856 = !DILocation(line: 1020, column: 27, scope: !2822)
!2857 = !DILocation(line: 1020, column: 33, scope: !2822)
!2858 = !DILocation(line: 1020, column: 5, scope: !2822)
!2859 = !DILocation(line: 1020, column: 12, scope: !2822)
!2860 = !DILocation(line: 1020, column: 25, scope: !2822)
!2861 = !DILocation(line: 1021, column: 26, scope: !2822)
!2862 = !DILocation(line: 1021, column: 32, scope: !2822)
!2863 = !DILocation(line: 1021, column: 5, scope: !2822)
!2864 = !DILocation(line: 1021, column: 12, scope: !2822)
!2865 = !DILocation(line: 1021, column: 24, scope: !2822)
!2866 = !DILocation(line: 1022, column: 17, scope: !2822)
!2867 = !DILocation(line: 1022, column: 23, scope: !2822)
!2868 = !DILocation(line: 1022, column: 5, scope: !2822)
!2869 = !DILocation(line: 1022, column: 12, scope: !2822)
!2870 = !DILocation(line: 1022, column: 15, scope: !2822)
!2871 = !DILocation(line: 1023, column: 25, scope: !2822)
!2872 = !DILocation(line: 1023, column: 31, scope: !2822)
!2873 = !DILocation(line: 1023, column: 5, scope: !2822)
!2874 = !DILocation(line: 1023, column: 12, scope: !2822)
!2875 = !DILocation(line: 1023, column: 23, scope: !2822)
!2876 = !DILocation(line: 1025, column: 17, scope: !2822)
!2877 = !DILocation(line: 1025, column: 23, scope: !2822)
!2878 = !DILocation(line: 1025, column: 5, scope: !2822)
!2879 = !DILocation(line: 1025, column: 12, scope: !2822)
!2880 = !DILocation(line: 1025, column: 15, scope: !2822)
!2881 = !DILocation(line: 1026, column: 20, scope: !2822)
!2882 = !DILocation(line: 1026, column: 26, scope: !2822)
!2883 = !DILocation(line: 1026, column: 5, scope: !2822)
!2884 = !DILocation(line: 1026, column: 12, scope: !2822)
!2885 = !DILocation(line: 1026, column: 18, scope: !2822)
!2886 = !DILocation(line: 1027, column: 28, scope: !2822)
!2887 = !DILocation(line: 1027, column: 35, scope: !2822)
!2888 = !DILocation(line: 1027, column: 5, scope: !2822)
!2889 = !DILocation(line: 1027, column: 12, scope: !2822)
!2890 = !DILocation(line: 1027, column: 26, scope: !2822)
!2891 = !DILocation(line: 1028, column: 27, scope: !2822)
!2892 = !DILocation(line: 1028, column: 33, scope: !2822)
!2893 = !DILocation(line: 1028, column: 5, scope: !2822)
!2894 = !DILocation(line: 1028, column: 12, scope: !2822)
!2895 = !DILocation(line: 1028, column: 25, scope: !2822)
!2896 = !DILocation(line: 1030, column: 34, scope: !2822)
!2897 = !DILocation(line: 1030, column: 40, scope: !2822)
!2898 = !DILocation(line: 1030, column: 5, scope: !2822)
!2899 = !DILocation(line: 1030, column: 12, scope: !2822)
!2900 = !DILocation(line: 1030, column: 32, scope: !2822)
!2901 = !DILocation(line: 1031, column: 28, scope: !2822)
!2902 = !DILocation(line: 1031, column: 34, scope: !2822)
!2903 = !DILocation(line: 1031, column: 5, scope: !2822)
!2904 = !DILocation(line: 1031, column: 12, scope: !2822)
!2905 = !DILocation(line: 1031, column: 26, scope: !2822)
!2906 = !DILocation(line: 1032, column: 26, scope: !2822)
!2907 = !DILocation(line: 1032, column: 32, scope: !2822)
!2908 = !DILocation(line: 1032, column: 5, scope: !2822)
!2909 = !DILocation(line: 1032, column: 12, scope: !2822)
!2910 = !DILocation(line: 1032, column: 24, scope: !2822)
!2911 = !DILocation(line: 1033, column: 9, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2822, file: !953, line: 1033, column: 9)
!2913 = !DILocation(line: 1033, column: 15, scope: !2912)
!2914 = !DILocation(line: 1033, column: 22, scope: !2912)
!2915 = !DILocation(line: 1033, column: 9, scope: !2822)
!2916 = !DILocation(line: 1034, column: 26, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2912, file: !953, line: 1033, column: 25)
!2918 = !DILocation(line: 1034, column: 33, scope: !2917)
!2919 = !DILocation(line: 1034, column: 9, scope: !2917)
!2920 = !DILocation(line: 1034, column: 16, scope: !2917)
!2921 = !DILocation(line: 1034, column: 24, scope: !2917)
!2922 = !DILocation(line: 1035, column: 26, scope: !2917)
!2923 = !DILocation(line: 1035, column: 33, scope: !2917)
!2924 = !DILocation(line: 1035, column: 9, scope: !2917)
!2925 = !DILocation(line: 1035, column: 16, scope: !2917)
!2926 = !DILocation(line: 1035, column: 24, scope: !2917)
!2927 = !DILocation(line: 1036, column: 30, scope: !2917)
!2928 = !DILocation(line: 1036, column: 37, scope: !2917)
!2929 = !DILocation(line: 1036, column: 9, scope: !2917)
!2930 = !DILocation(line: 1036, column: 16, scope: !2917)
!2931 = !DILocation(line: 1036, column: 28, scope: !2917)
!2932 = !DILocation(line: 1037, column: 31, scope: !2917)
!2933 = !DILocation(line: 1037, column: 38, scope: !2917)
!2934 = !DILocation(line: 1037, column: 9, scope: !2917)
!2935 = !DILocation(line: 1037, column: 16, scope: !2917)
!2936 = !DILocation(line: 1037, column: 29, scope: !2917)
!2937 = !DILocation(line: 1038, column: 5, scope: !2917)
!2938 = !DILocation(line: 1039, column: 1, scope: !2822)
!2939 = distinct !DISubprogram(name: "read_extra_header", scope: !953, file: !953, line: 413, type: !2940, isLocal: true, isDefinition: true, scopeLine: 414, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!923, !1709}
!2942 = !DILocation(line: 66, column: 98, scope: !2154, inlinedAt: !2943)
!2943 = distinct !DILocation(line: 509, column: 15, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2945, file: !953, line: 501, column: 25)
!2945 = distinct !DILexicalBlock(scope: !2939, file: !953, line: 501, column: 9)
!2946 = !DILocalVariable(name: "f", arg: 1, scope: !2939, file: !953, line: 413, type: !1709)
!2947 = !DILocation(line: 413, column: 43, scope: !2939)
!2948 = !DILocalVariable(name: "c", scope: !2939, file: !953, line: 415, type: !2188)
!2949 = !DILocation(line: 415, column: 23, scope: !2939)
!2950 = !DILocation(line: 415, column: 28, scope: !2939)
!2951 = !DILocation(line: 415, column: 31, scope: !2939)
!2952 = !DILocalVariable(name: "state", scope: !2939, file: !953, line: 416, type: !1809)
!2953 = !DILocation(line: 416, column: 13, scope: !2939)
!2954 = !DILocalVariable(name: "i", scope: !2939, file: !953, line: 417, type: !923)
!2955 = !DILocation(line: 417, column: 9, scope: !2939)
!2956 = !DILocalVariable(name: "j", scope: !2939, file: !953, line: 417, type: !923)
!2957 = !DILocation(line: 417, column: 12, scope: !2939)
!2958 = !DILocalVariable(name: "k", scope: !2939, file: !953, line: 417, type: !923)
!2959 = !DILocation(line: 417, column: 15, scope: !2939)
!2960 = !DILocalVariable(name: "ret", scope: !2939, file: !953, line: 417, type: !923)
!2961 = !DILocation(line: 417, column: 18, scope: !2939)
!2962 = !DILocalVariable(name: "state2", scope: !2939, file: !953, line: 418, type: !2963)
!2963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !935, size: 8192, align: 8, elements: !2964)
!2964 = !{!1765, !1765}
!2965 = !DILocation(line: 418, column: 13, scope: !2939)
!2966 = !DILocalVariable(name: "crc", scope: !2939, file: !953, line: 419, type: !924)
!2967 = !DILocation(line: 419, column: 14, scope: !2939)
!2968 = !DILocation(line: 421, column: 5, scope: !2939)
!2969 = !DILocation(line: 422, column: 5, scope: !2939)
!2970 = !DILocation(line: 424, column: 27, scope: !2939)
!2971 = !DILocation(line: 424, column: 30, scope: !2939)
!2972 = !DILocation(line: 424, column: 33, scope: !2939)
!2973 = !DILocation(line: 424, column: 40, scope: !2939)
!2974 = !DILocation(line: 424, column: 51, scope: !2939)
!2975 = !DILocation(line: 424, column: 54, scope: !2939)
!2976 = !DILocation(line: 424, column: 61, scope: !2939)
!2977 = !DILocation(line: 424, column: 5, scope: !2939)
!2978 = !DILocation(line: 425, column: 25, scope: !2939)
!2979 = !DILocation(line: 425, column: 5, scope: !2939)
!2980 = !DILocation(line: 427, column: 29, scope: !2939)
!2981 = !DILocation(line: 427, column: 32, scope: !2939)
!2982 = !DILocation(line: 427, column: 18, scope: !2939)
!2983 = !DILocation(line: 427, column: 5, scope: !2939)
!2984 = !DILocation(line: 427, column: 8, scope: !2939)
!2985 = !DILocation(line: 427, column: 16, scope: !2939)
!2986 = !DILocation(line: 428, column: 9, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2939, file: !953, line: 428, column: 9)
!2988 = !DILocation(line: 428, column: 12, scope: !2987)
!2989 = !DILocation(line: 428, column: 20, scope: !2987)
!2990 = !DILocation(line: 428, column: 9, scope: !2939)
!2991 = !DILocation(line: 429, column: 16, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2987, file: !953, line: 428, column: 25)
!2993 = !DILocation(line: 429, column: 19, scope: !2992)
!2994 = !DILocation(line: 429, column: 9, scope: !2992)
!2995 = !DILocation(line: 430, column: 9, scope: !2992)
!2996 = !DILocation(line: 432, column: 9, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2939, file: !953, line: 432, column: 9)
!2998 = !DILocation(line: 432, column: 12, scope: !2997)
!2999 = !DILocation(line: 432, column: 20, scope: !2997)
!3000 = !DILocation(line: 432, column: 9, scope: !2939)
!3001 = !DILocation(line: 433, column: 9, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2997, file: !953, line: 432, column: 25)
!3003 = !DILocation(line: 433, column: 12, scope: !3002)
!3004 = !DILocation(line: 433, column: 27, scope: !3002)
!3005 = !DILocation(line: 434, column: 39, scope: !3002)
!3006 = !DILocation(line: 434, column: 42, scope: !3002)
!3007 = !DILocation(line: 434, column: 28, scope: !3002)
!3008 = !DILocation(line: 434, column: 9, scope: !3002)
!3009 = !DILocation(line: 434, column: 12, scope: !3002)
!3010 = !DILocation(line: 434, column: 26, scope: !3002)
!3011 = !DILocation(line: 435, column: 13, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3002, file: !953, line: 435, column: 13)
!3013 = !DILocation(line: 435, column: 16, scope: !3012)
!3014 = !DILocation(line: 435, column: 30, scope: !3012)
!3015 = !DILocation(line: 435, column: 13, scope: !3002)
!3016 = !DILocation(line: 436, column: 13, scope: !3012)
!3017 = !DILocation(line: 437, column: 5, scope: !3002)
!3018 = !DILocation(line: 438, column: 24, scope: !2939)
!3019 = !DILocation(line: 438, column: 27, scope: !2939)
!3020 = !DILocation(line: 438, column: 13, scope: !2939)
!3021 = !DILocation(line: 438, column: 5, scope: !2939)
!3022 = !DILocation(line: 438, column: 8, scope: !2939)
!3023 = !DILocation(line: 438, column: 11, scope: !2939)
!3024 = !DILocation(line: 440, column: 9, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !2939, file: !953, line: 440, column: 9)
!3026 = !DILocation(line: 440, column: 12, scope: !3025)
!3027 = !DILocation(line: 440, column: 15, scope: !3025)
!3028 = !DILocation(line: 440, column: 9, scope: !2939)
!3029 = !DILocation(line: 441, column: 16, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3031, file: !953, line: 441, column: 9)
!3031 = distinct !DILexicalBlock(scope: !3025, file: !953, line: 440, column: 21)
!3032 = !DILocation(line: 441, column: 14, scope: !3030)
!3033 = !DILocation(line: 441, column: 21, scope: !3034)
!3034 = !DILexicalBlockFile(scope: !3035, file: !953, discriminator: 1)
!3035 = distinct !DILexicalBlock(scope: !3030, file: !953, line: 441, column: 9)
!3036 = !DILocation(line: 441, column: 23, scope: !3034)
!3037 = !DILocation(line: 441, column: 9, scope: !3034)
!3038 = !DILocation(line: 442, column: 49, scope: !3035)
!3039 = !DILocation(line: 442, column: 52, scope: !3035)
!3040 = !DILocation(line: 442, column: 38, scope: !3035)
!3041 = !DILocation(line: 442, column: 77, scope: !3035)
!3042 = !DILocation(line: 442, column: 64, scope: !3035)
!3043 = !DILocation(line: 442, column: 67, scope: !3035)
!3044 = !DILocation(line: 442, column: 62, scope: !3035)
!3045 = !DILocation(line: 442, column: 33, scope: !3035)
!3046 = !DILocation(line: 442, column: 13, scope: !3035)
!3047 = !DILocation(line: 442, column: 16, scope: !3035)
!3048 = !DILocation(line: 442, column: 36, scope: !3035)
!3049 = !DILocation(line: 441, column: 31, scope: !3050)
!3050 = !DILexicalBlockFile(scope: !3035, file: !953, discriminator: 2)
!3051 = !DILocation(line: 441, column: 9, scope: !3050)
!3052 = distinct !{!3052, !3053}
!3053 = !DILocation(line: 441, column: 9, scope: !3031)
!3054 = !DILocation(line: 443, column: 5, scope: !3031)
!3055 = !DILocation(line: 445, column: 32, scope: !2939)
!3056 = !DILocation(line: 445, column: 35, scope: !2939)
!3057 = !DILocation(line: 445, column: 21, scope: !2939)
!3058 = !DILocation(line: 445, column: 5, scope: !2939)
!3059 = !DILocation(line: 445, column: 8, scope: !2939)
!3060 = !DILocation(line: 445, column: 19, scope: !2939)
!3061 = !DILocation(line: 446, column: 48, scope: !2939)
!3062 = !DILocation(line: 446, column: 51, scope: !2939)
!3063 = !DILocation(line: 446, column: 37, scope: !2939)
!3064 = !DILocation(line: 446, column: 5, scope: !2939)
!3065 = !DILocation(line: 446, column: 8, scope: !2939)
!3066 = !DILocation(line: 446, column: 15, scope: !2939)
!3067 = !DILocation(line: 446, column: 35, scope: !2939)
!3068 = !DILocation(line: 447, column: 32, scope: !2939)
!3069 = !DILocation(line: 447, column: 35, scope: !2939)
!3070 = !DILocation(line: 447, column: 24, scope: !2939)
!3071 = !DILocation(line: 447, column: 5, scope: !2939)
!3072 = !DILocation(line: 447, column: 8, scope: !2939)
!3073 = !DILocation(line: 447, column: 22, scope: !2939)
!3074 = !DILocation(line: 448, column: 36, scope: !2939)
!3075 = !DILocation(line: 448, column: 39, scope: !2939)
!3076 = !DILocation(line: 448, column: 25, scope: !2939)
!3077 = !DILocation(line: 448, column: 5, scope: !2939)
!3078 = !DILocation(line: 448, column: 8, scope: !2939)
!3079 = !DILocation(line: 448, column: 23, scope: !2939)
!3080 = !DILocation(line: 449, column: 36, scope: !2939)
!3081 = !DILocation(line: 449, column: 39, scope: !2939)
!3082 = !DILocation(line: 449, column: 25, scope: !2939)
!3083 = !DILocation(line: 449, column: 5, scope: !2939)
!3084 = !DILocation(line: 449, column: 8, scope: !2939)
!3085 = !DILocation(line: 449, column: 23, scope: !2939)
!3086 = !DILocation(line: 450, column: 31, scope: !2939)
!3087 = !DILocation(line: 450, column: 34, scope: !2939)
!3088 = !DILocation(line: 450, column: 23, scope: !2939)
!3089 = !DILocation(line: 450, column: 5, scope: !2939)
!3090 = !DILocation(line: 450, column: 8, scope: !2939)
!3091 = !DILocation(line: 450, column: 21, scope: !2939)
!3092 = !DILocation(line: 451, column: 27, scope: !2939)
!3093 = !DILocation(line: 451, column: 30, scope: !2939)
!3094 = !DILocation(line: 451, column: 44, scope: !2939)
!3095 = !DILocation(line: 451, column: 47, scope: !3096)
!3096 = !DILexicalBlockFile(scope: !2939, file: !953, discriminator: 1)
!3097 = !DILocation(line: 451, column: 50, scope: !3096)
!3098 = !DILocation(line: 451, column: 57, scope: !3096)
!3099 = !DILocation(line: 451, column: 44, scope: !3096)
!3100 = !DILocation(line: 451, column: 44, scope: !3101)
!3101 = !DILexicalBlockFile(scope: !2939, file: !953, discriminator: 2)
!3102 = !DILocation(line: 451, column: 24, scope: !3101)
!3103 = !DILocation(line: 451, column: 63, scope: !3101)
!3104 = !DILocation(line: 451, column: 66, scope: !3101)
!3105 = !DILocation(line: 451, column: 61, scope: !3101)
!3106 = !DILocation(line: 451, column: 5, scope: !3101)
!3107 = !DILocation(line: 451, column: 8, scope: !3101)
!3108 = !DILocation(line: 451, column: 20, scope: !3101)
!3109 = !DILocation(line: 452, column: 38, scope: !2939)
!3110 = !DILocation(line: 452, column: 41, scope: !2939)
!3111 = !DILocation(line: 452, column: 27, scope: !2939)
!3112 = !DILocation(line: 452, column: 25, scope: !2939)
!3113 = !DILocation(line: 452, column: 5, scope: !2939)
!3114 = !DILocation(line: 452, column: 8, scope: !2939)
!3115 = !DILocation(line: 452, column: 21, scope: !2939)
!3116 = !DILocation(line: 453, column: 38, scope: !2939)
!3117 = !DILocation(line: 453, column: 41, scope: !2939)
!3118 = !DILocation(line: 453, column: 27, scope: !2939)
!3119 = !DILocation(line: 453, column: 25, scope: !2939)
!3120 = !DILocation(line: 453, column: 5, scope: !2939)
!3121 = !DILocation(line: 453, column: 8, scope: !2939)
!3122 = !DILocation(line: 453, column: 21, scope: !2939)
!3123 = !DILocation(line: 455, column: 9, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !2939, file: !953, line: 455, column: 9)
!3125 = !DILocation(line: 455, column: 12, scope: !3124)
!3126 = !DILocation(line: 455, column: 27, scope: !3124)
!3127 = !DILocation(line: 455, column: 32, scope: !3124)
!3128 = !DILocation(line: 455, column: 35, scope: !3129)
!3129 = !DILexicalBlockFile(scope: !3124, file: !953, discriminator: 1)
!3130 = !DILocation(line: 455, column: 38, scope: !3129)
!3131 = !DILocation(line: 455, column: 53, scope: !3129)
!3132 = !DILocation(line: 455, column: 9, scope: !3129)
!3133 = !DILocation(line: 456, column: 16, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3124, file: !953, line: 455, column: 59)
!3135 = !DILocation(line: 456, column: 19, scope: !3134)
!3136 = !DILocation(line: 457, column: 16, scope: !3134)
!3137 = !DILocation(line: 457, column: 19, scope: !3134)
!3138 = !DILocation(line: 457, column: 35, scope: !3134)
!3139 = !DILocation(line: 457, column: 38, scope: !3134)
!3140 = !DILocation(line: 456, column: 9, scope: !3134)
!3141 = !DILocation(line: 458, column: 9, scope: !3134)
!3142 = !DILocation(line: 461, column: 9, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !2939, file: !953, line: 461, column: 9)
!3144 = !DILocation(line: 461, column: 12, scope: !3143)
!3145 = !DILocation(line: 461, column: 37, scope: !3143)
!3146 = !DILocation(line: 461, column: 40, scope: !3143)
!3147 = !DILocation(line: 461, column: 25, scope: !3143)
!3148 = !DILocation(line: 461, column: 46, scope: !3143)
!3149 = !DILocation(line: 461, column: 50, scope: !3150)
!3150 = !DILexicalBlockFile(scope: !3143, file: !953, discriminator: 1)
!3151 = !DILocation(line: 461, column: 53, scope: !3150)
!3152 = !DILocation(line: 461, column: 66, scope: !3150)
!3153 = !DILocation(line: 462, column: 9, scope: !3143)
!3154 = !DILocation(line: 462, column: 12, scope: !3143)
!3155 = !DILocation(line: 462, column: 37, scope: !3143)
!3156 = !DILocation(line: 462, column: 40, scope: !3143)
!3157 = !DILocation(line: 462, column: 25, scope: !3143)
!3158 = !DILocation(line: 462, column: 47, scope: !3143)
!3159 = !DILocation(line: 462, column: 51, scope: !3150)
!3160 = !DILocation(line: 462, column: 54, scope: !3150)
!3161 = !DILocation(line: 461, column: 9, scope: !3101)
!3162 = !DILocation(line: 464, column: 16, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3143, file: !953, line: 463, column: 10)
!3164 = !DILocation(line: 464, column: 19, scope: !3163)
!3165 = !DILocation(line: 464, column: 9, scope: !3163)
!3166 = !DILocation(line: 465, column: 9, scope: !3163)
!3167 = !DILocation(line: 468, column: 39, scope: !2939)
!3168 = !DILocation(line: 468, column: 42, scope: !2939)
!3169 = !DILocation(line: 468, column: 28, scope: !2939)
!3170 = !DILocation(line: 468, column: 5, scope: !2939)
!3171 = !DILocation(line: 468, column: 8, scope: !2939)
!3172 = !DILocation(line: 468, column: 26, scope: !2939)
!3173 = !DILocation(line: 469, column: 9, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !2939, file: !953, line: 469, column: 9)
!3175 = !DILocation(line: 469, column: 12, scope: !3174)
!3176 = !DILocation(line: 469, column: 30, scope: !3174)
!3177 = !DILocation(line: 469, column: 44, scope: !3174)
!3178 = !DILocation(line: 469, column: 48, scope: !3179)
!3179 = !DILexicalBlockFile(scope: !3174, file: !953, discriminator: 1)
!3180 = !DILocation(line: 469, column: 51, scope: !3179)
!3181 = !DILocation(line: 469, column: 9, scope: !3179)
!3182 = !DILocation(line: 470, column: 16, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3174, file: !953, line: 469, column: 70)
!3184 = !DILocation(line: 470, column: 19, scope: !3183)
!3185 = !DILocation(line: 470, column: 67, scope: !3183)
!3186 = !DILocation(line: 470, column: 70, scope: !3183)
!3187 = !DILocation(line: 470, column: 9, scope: !3183)
!3188 = !DILocation(line: 471, column: 9, scope: !3183)
!3189 = !DILocation(line: 471, column: 12, scope: !3183)
!3190 = !DILocation(line: 471, column: 30, scope: !3183)
!3191 = !DILocation(line: 472, column: 9, scope: !3183)
!3192 = !DILocation(line: 475, column: 12, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !2939, file: !953, line: 475, column: 5)
!3194 = !DILocation(line: 475, column: 10, scope: !3193)
!3195 = !DILocation(line: 475, column: 17, scope: !3196)
!3196 = !DILexicalBlockFile(scope: !3197, file: !953, discriminator: 1)
!3197 = distinct !DILexicalBlock(scope: !3193, file: !953, line: 475, column: 5)
!3198 = !DILocation(line: 475, column: 21, scope: !3196)
!3199 = !DILocation(line: 475, column: 24, scope: !3196)
!3200 = !DILocation(line: 475, column: 19, scope: !3196)
!3201 = !DILocation(line: 475, column: 5, scope: !3196)
!3202 = !DILocation(line: 476, column: 49, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3197, file: !953, line: 475, column: 48)
!3204 = !DILocation(line: 476, column: 68, scope: !3203)
!3205 = !DILocation(line: 476, column: 52, scope: !3203)
!3206 = !DILocation(line: 476, column: 55, scope: !3203)
!3207 = !DILocation(line: 476, column: 31, scope: !3203)
!3208 = !DILocation(line: 476, column: 26, scope: !3203)
!3209 = !DILocation(line: 476, column: 9, scope: !3203)
!3210 = !DILocation(line: 476, column: 12, scope: !3203)
!3211 = !DILocation(line: 476, column: 29, scope: !3203)
!3212 = !DILocation(line: 477, column: 30, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3203, file: !953, line: 477, column: 13)
!3214 = !DILocation(line: 477, column: 13, scope: !3213)
!3215 = !DILocation(line: 477, column: 16, scope: !3213)
!3216 = !DILocation(line: 477, column: 33, scope: !3213)
!3217 = !DILocation(line: 477, column: 13, scope: !3203)
!3218 = !DILocation(line: 478, column: 20, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3213, file: !953, line: 477, column: 38)
!3220 = !DILocation(line: 478, column: 23, scope: !3219)
!3221 = !DILocation(line: 478, column: 13, scope: !3219)
!3222 = !DILocation(line: 479, column: 13, scope: !3219)
!3223 = !DILocation(line: 481, column: 5, scope: !3203)
!3224 = !DILocation(line: 475, column: 44, scope: !3225)
!3225 = !DILexicalBlockFile(scope: !3197, file: !953, discriminator: 2)
!3226 = !DILocation(line: 475, column: 5, scope: !3225)
!3227 = distinct !{!3227, !3228}
!3228 = !DILocation(line: 475, column: 5, scope: !2939)
!3229 = !DILocation(line: 482, column: 48, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !2939, file: !953, line: 482, column: 9)
!3231 = !DILocation(line: 482, column: 16, scope: !3230)
!3232 = !DILocation(line: 482, column: 14, scope: !3230)
!3233 = !DILocation(line: 482, column: 52, scope: !3230)
!3234 = !DILocation(line: 482, column: 9, scope: !2939)
!3235 = !DILocation(line: 483, column: 16, scope: !3230)
!3236 = !DILocation(line: 483, column: 9, scope: !3230)
!3237 = !DILocation(line: 485, column: 12, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !2939, file: !953, line: 485, column: 5)
!3239 = !DILocation(line: 485, column: 10, scope: !3238)
!3240 = !DILocation(line: 485, column: 17, scope: !3241)
!3241 = !DILexicalBlockFile(scope: !3242, file: !953, discriminator: 1)
!3242 = distinct !DILexicalBlock(scope: !3238, file: !953, line: 485, column: 5)
!3243 = !DILocation(line: 485, column: 21, scope: !3241)
!3244 = !DILocation(line: 485, column: 24, scope: !3241)
!3245 = !DILocation(line: 485, column: 19, scope: !3241)
!3246 = !DILocation(line: 485, column: 5, scope: !3241)
!3247 = !DILocation(line: 486, column: 21, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3242, file: !953, line: 486, column: 13)
!3249 = !DILocation(line: 486, column: 24, scope: !3248)
!3250 = !DILocation(line: 486, column: 13, scope: !3248)
!3251 = !DILocation(line: 486, column: 13, scope: !3242)
!3252 = !DILocation(line: 487, column: 20, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3254, file: !953, line: 487, column: 13)
!3254 = distinct !DILexicalBlock(scope: !3248, file: !953, line: 486, column: 32)
!3255 = !DILocation(line: 487, column: 18, scope: !3253)
!3256 = !DILocation(line: 487, column: 25, scope: !3257)
!3257 = !DILexicalBlockFile(scope: !3258, file: !953, discriminator: 1)
!3258 = distinct !DILexicalBlock(scope: !3253, file: !953, line: 487, column: 13)
!3259 = !DILocation(line: 487, column: 46, scope: !3257)
!3260 = !DILocation(line: 487, column: 29, scope: !3257)
!3261 = !DILocation(line: 487, column: 32, scope: !3257)
!3262 = !DILocation(line: 487, column: 27, scope: !3257)
!3263 = !DILocation(line: 487, column: 13, scope: !3257)
!3264 = !DILocation(line: 488, column: 24, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3258, file: !953, line: 488, column: 17)
!3266 = !DILocation(line: 488, column: 22, scope: !3265)
!3267 = !DILocation(line: 488, column: 29, scope: !3268)
!3268 = !DILexicalBlockFile(scope: !3269, file: !953, discriminator: 1)
!3269 = distinct !DILexicalBlock(scope: !3265, file: !953, line: 488, column: 17)
!3270 = !DILocation(line: 488, column: 31, scope: !3268)
!3271 = !DILocation(line: 488, column: 17, scope: !3268)
!3272 = !DILocalVariable(name: "pred", scope: !3273, file: !953, line: 489, type: !923)
!3273 = distinct !DILexicalBlock(scope: !3269, file: !953, line: 488, column: 42)
!3274 = !DILocation(line: 489, column: 25, scope: !3273)
!3275 = !DILocation(line: 489, column: 32, scope: !3273)
!3276 = !DILocation(line: 489, column: 64, scope: !3277)
!3277 = !DILexicalBlockFile(scope: !3273, file: !953, discriminator: 1)
!3278 = !DILocation(line: 489, column: 36, scope: !3277)
!3279 = !DILocation(line: 489, column: 57, scope: !3277)
!3280 = !DILocation(line: 489, column: 59, scope: !3277)
!3281 = !DILocation(line: 489, column: 54, scope: !3277)
!3282 = !DILocation(line: 489, column: 39, scope: !3277)
!3283 = !DILocation(line: 489, column: 32, scope: !3277)
!3284 = !DILocation(line: 489, column: 32, scope: !3285)
!3285 = !DILexicalBlockFile(scope: !3273, file: !953, discriminator: 2)
!3286 = !DILocation(line: 489, column: 32, scope: !3287)
!3287 = !DILexicalBlockFile(scope: !3273, file: !953, discriminator: 3)
!3288 = !DILocation(line: 489, column: 25, scope: !3287)
!3289 = !DILocation(line: 491, column: 26, scope: !3273)
!3290 = !DILocation(line: 491, column: 44, scope: !3273)
!3291 = !DILocation(line: 491, column: 54, scope: !3273)
!3292 = !DILocation(line: 491, column: 47, scope: !3273)
!3293 = !DILocation(line: 491, column: 33, scope: !3273)
!3294 = !DILocation(line: 491, column: 31, scope: !3273)
!3295 = !DILocation(line: 491, column: 62, scope: !3273)
!3296 = !DILocation(line: 491, column: 25, scope: !3273)
!3297 = !DILocation(line: 490, column: 45, scope: !3273)
!3298 = !DILocation(line: 490, column: 21, scope: !3273)
!3299 = !DILocation(line: 490, column: 42, scope: !3273)
!3300 = !DILocation(line: 490, column: 39, scope: !3273)
!3301 = !DILocation(line: 490, column: 24, scope: !3273)
!3302 = !DILocation(line: 490, column: 48, scope: !3273)
!3303 = !DILocation(line: 492, column: 17, scope: !3273)
!3304 = !DILocation(line: 488, column: 38, scope: !3305)
!3305 = !DILexicalBlockFile(scope: !3269, file: !953, discriminator: 2)
!3306 = !DILocation(line: 488, column: 17, scope: !3305)
!3307 = distinct !{!3307, !3308}
!3308 = !DILocation(line: 488, column: 17, scope: !3258)
!3309 = !DILocation(line: 492, column: 17, scope: !3310)
!3310 = !DILexicalBlockFile(scope: !3265, file: !953, discriminator: 1)
!3311 = !DILocation(line: 487, column: 51, scope: !3312)
!3312 = !DILexicalBlockFile(scope: !3258, file: !953, discriminator: 2)
!3313 = !DILocation(line: 487, column: 13, scope: !3312)
!3314 = distinct !{!3314, !3315}
!3315 = !DILocation(line: 487, column: 13, scope: !3254)
!3316 = !DILocation(line: 493, column: 9, scope: !3254)
!3317 = !DILocation(line: 486, column: 29, scope: !3318)
!3318 = !DILexicalBlockFile(scope: !3248, file: !953, discriminator: 1)
!3319 = !DILocation(line: 485, column: 44, scope: !3320)
!3320 = !DILexicalBlockFile(scope: !3242, file: !953, discriminator: 2)
!3321 = !DILocation(line: 485, column: 5, scope: !3320)
!3322 = distinct !{!3322, !3323}
!3323 = !DILocation(line: 485, column: 5, scope: !2939)
!3324 = !DILocation(line: 495, column: 9, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !2939, file: !953, line: 495, column: 9)
!3326 = !DILocation(line: 495, column: 12, scope: !3325)
!3327 = !DILocation(line: 495, column: 20, scope: !3325)
!3328 = !DILocation(line: 495, column: 9, scope: !2939)
!3329 = !DILocation(line: 496, column: 28, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3325, file: !953, line: 495, column: 25)
!3331 = !DILocation(line: 496, column: 31, scope: !3330)
!3332 = !DILocation(line: 496, column: 17, scope: !3330)
!3333 = !DILocation(line: 496, column: 9, scope: !3330)
!3334 = !DILocation(line: 496, column: 12, scope: !3330)
!3335 = !DILocation(line: 496, column: 15, scope: !3330)
!3336 = !DILocation(line: 497, column: 13, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3330, file: !953, line: 497, column: 13)
!3338 = !DILocation(line: 497, column: 16, scope: !3337)
!3339 = !DILocation(line: 497, column: 30, scope: !3337)
!3340 = !DILocation(line: 497, column: 13, scope: !3330)
!3341 = !DILocation(line: 498, column: 35, scope: !3337)
!3342 = !DILocation(line: 498, column: 38, scope: !3337)
!3343 = !DILocation(line: 498, column: 24, scope: !3337)
!3344 = !DILocation(line: 498, column: 13, scope: !3337)
!3345 = !DILocation(line: 498, column: 16, scope: !3337)
!3346 = !DILocation(line: 498, column: 22, scope: !3337)
!3347 = !DILocation(line: 499, column: 5, scope: !3330)
!3348 = !DILocation(line: 501, column: 9, scope: !2945)
!3349 = !DILocation(line: 501, column: 12, scope: !2945)
!3350 = !DILocation(line: 501, column: 20, scope: !2945)
!3351 = !DILocation(line: 501, column: 9, scope: !2939)
!3352 = !DILocalVariable(name: "v", scope: !2944, file: !953, line: 502, type: !924)
!3353 = !DILocation(line: 502, column: 18, scope: !2944)
!3354 = !DILocation(line: 503, column: 20, scope: !2944)
!3355 = !DILocation(line: 504, column: 20, scope: !2944)
!3356 = !DILocation(line: 504, column: 23, scope: !2944)
!3357 = !DILocation(line: 504, column: 30, scope: !2944)
!3358 = !DILocation(line: 504, column: 41, scope: !2944)
!3359 = !DILocation(line: 504, column: 44, scope: !2944)
!3360 = !DILocation(line: 504, column: 51, scope: !2944)
!3361 = !DILocation(line: 503, column: 13, scope: !3362)
!3362 = !DILexicalBlockFile(scope: !2944, file: !953, discriminator: 1)
!3363 = !DILocation(line: 503, column: 11, scope: !2944)
!3364 = !DILocation(line: 505, column: 13, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !2944, file: !953, line: 505, column: 13)
!3366 = !DILocation(line: 505, column: 15, scope: !3365)
!3367 = !DILocation(line: 505, column: 18, scope: !3368)
!3368 = !DILexicalBlockFile(scope: !3365, file: !953, discriminator: 1)
!3369 = !DILocation(line: 505, column: 21, scope: !3368)
!3370 = !DILocation(line: 505, column: 28, scope: !3368)
!3371 = !DILocation(line: 505, column: 43, scope: !3368)
!3372 = !DILocation(line: 505, column: 13, scope: !3368)
!3373 = !DILocation(line: 506, column: 20, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3365, file: !953, line: 505, column: 48)
!3375 = !DILocation(line: 506, column: 23, scope: !3374)
!3376 = !DILocation(line: 506, column: 56, scope: !3374)
!3377 = !DILocation(line: 506, column: 13, scope: !3374)
!3378 = !DILocation(line: 507, column: 13, scope: !3374)
!3379 = !DILocation(line: 509, column: 58, scope: !2944)
!3380 = !DILocation(line: 509, column: 61, scope: !2944)
!3381 = !DILocation(line: 509, column: 68, scope: !2944)
!3382 = !DILocation(line: 509, column: 80, scope: !2944)
!3383 = !DILocation(line: 509, column: 83, scope: !2944)
!3384 = !DILocation(line: 509, column: 90, scope: !2944)
!3385 = !DILocation(line: 509, column: 78, scope: !2944)
!3386 = !DILocation(line: 509, column: 105, scope: !2944)
!3387 = !DILocation(line: 509, column: 112, scope: !2944)
!3388 = !DILocation(line: 509, column: 15, scope: !2944)
!3389 = !DILocation(line: 68, column: 16, scope: !2154, inlinedAt: !2943)
!3390 = !DILocation(line: 68, column: 19, scope: !2154, inlinedAt: !2943)
!3391 = !DILocation(line: 68, column: 24, scope: !2154, inlinedAt: !2943)
!3392 = !DILocation(line: 68, column: 38, scope: !2154, inlinedAt: !2943)
!3393 = !DILocation(line: 68, column: 41, scope: !2154, inlinedAt: !2943)
!3394 = !DILocation(line: 68, column: 46, scope: !2154, inlinedAt: !2943)
!3395 = !DILocation(line: 68, column: 34, scope: !2154, inlinedAt: !2943)
!3396 = !DILocation(line: 68, column: 57, scope: !2154, inlinedAt: !2943)
!3397 = !DILocation(line: 68, column: 69, scope: !2154, inlinedAt: !2943)
!3398 = !DILocation(line: 68, column: 72, scope: !2154, inlinedAt: !2943)
!3399 = !DILocation(line: 68, column: 79, scope: !2154, inlinedAt: !2943)
!3400 = !DILocation(line: 68, column: 84, scope: !2154, inlinedAt: !2943)
!3401 = !DILocation(line: 68, column: 99, scope: !2154, inlinedAt: !2943)
!3402 = !DILocation(line: 68, column: 102, scope: !2154, inlinedAt: !2943)
!3403 = !DILocation(line: 68, column: 109, scope: !2154, inlinedAt: !2943)
!3404 = !DILocation(line: 68, column: 114, scope: !2154, inlinedAt: !2943)
!3405 = !DILocation(line: 68, column: 94, scope: !2154, inlinedAt: !2943)
!3406 = !DILocation(line: 68, column: 63, scope: !2154, inlinedAt: !2943)
!3407 = !DILocation(line: 509, column: 13, scope: !2944)
!3408 = !DILocation(line: 510, column: 5, scope: !2944)
!3409 = !DILocation(line: 512, column: 9, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !2939, file: !953, line: 512, column: 9)
!3411 = !DILocation(line: 512, column: 12, scope: !3410)
!3412 = !DILocation(line: 512, column: 19, scope: !3410)
!3413 = !DILocation(line: 512, column: 25, scope: !3410)
!3414 = !DILocation(line: 512, column: 9, scope: !2939)
!3415 = !DILocation(line: 513, column: 16, scope: !3410)
!3416 = !DILocation(line: 513, column: 19, scope: !3410)
!3417 = !DILocation(line: 515, column: 16, scope: !3410)
!3418 = !DILocation(line: 515, column: 19, scope: !3410)
!3419 = !DILocation(line: 515, column: 28, scope: !3410)
!3420 = !DILocation(line: 515, column: 31, scope: !3410)
!3421 = !DILocation(line: 516, column: 16, scope: !3410)
!3422 = !DILocation(line: 516, column: 19, scope: !3410)
!3423 = !DILocation(line: 517, column: 16, scope: !3410)
!3424 = !DILocation(line: 517, column: 19, scope: !3410)
!3425 = !DILocation(line: 518, column: 16, scope: !3410)
!3426 = !DILocation(line: 518, column: 19, scope: !3410)
!3427 = !DILocation(line: 518, column: 26, scope: !3410)
!3428 = !DILocation(line: 519, column: 16, scope: !3410)
!3429 = !DILocation(line: 519, column: 19, scope: !3410)
!3430 = !DILocation(line: 519, column: 34, scope: !3410)
!3431 = !DILocation(line: 519, column: 37, scope: !3410)
!3432 = !DILocation(line: 519, column: 53, scope: !3410)
!3433 = !DILocation(line: 519, column: 56, scope: !3410)
!3434 = !DILocation(line: 520, column: 16, scope: !3410)
!3435 = !DILocation(line: 520, column: 19, scope: !3410)
!3436 = !DILocation(line: 521, column: 16, scope: !3410)
!3437 = !DILocation(line: 521, column: 19, scope: !3410)
!3438 = !DILocation(line: 521, column: 33, scope: !3410)
!3439 = !DILocation(line: 521, column: 36, scope: !3410)
!3440 = !DILocation(line: 522, column: 16, scope: !3410)
!3441 = !DILocation(line: 522, column: 19, scope: !3410)
!3442 = !DILocation(line: 523, column: 16, scope: !3410)
!3443 = !DILocation(line: 523, column: 19, scope: !3410)
!3444 = !DILocation(line: 524, column: 16, scope: !3410)
!3445 = !DILocation(line: 524, column: 19, scope: !3410)
!3446 = !DILocation(line: 525, column: 16, scope: !3410)
!3447 = !DILocation(line: 513, column: 9, scope: !3410)
!3448 = !DILocation(line: 527, column: 5, scope: !2939)
!3449 = !DILocation(line: 528, column: 1, scope: !2939)
!3450 = distinct !DISubprogram(name: "get_symbol", scope: !953, file: !953, line: 66, type: !3451, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!3451 = !DISubroutineType(types: !3452)
!3452 = !{!923, !2189, !1103, !923}
!3453 = !DILocalVariable(name: "c", arg: 1, scope: !3450, file: !953, line: 66, type: !2189)
!3454 = !DILocation(line: 66, column: 61, scope: !3450)
!3455 = !DILocalVariable(name: "state", arg: 2, scope: !3450, file: !953, line: 66, type: !1103)
!3456 = !DILocation(line: 66, column: 73, scope: !3450)
!3457 = !DILocalVariable(name: "is_signed", arg: 3, scope: !3450, file: !953, line: 66, type: !923)
!3458 = !DILocation(line: 66, column: 84, scope: !3450)
!3459 = !DILocation(line: 68, column: 30, scope: !3450)
!3460 = !DILocation(line: 68, column: 33, scope: !3450)
!3461 = !DILocation(line: 68, column: 40, scope: !3450)
!3462 = !DILocation(line: 68, column: 12, scope: !3450)
!3463 = !DILocation(line: 68, column: 5, scope: !3450)
!3464 = distinct !DISubprogram(name: "get_rac", scope: !1719, file: !1719, line: 136, type: !3465, isLocal: true, isDefinition: true, scopeLine: 137, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!3465 = !DISubroutineType(types: !3466)
!3466 = !{!923, !2189, !3467}
!3467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1103)
!3468 = !DILocalVariable(name: "c", arg: 1, scope: !3464, file: !1719, line: 136, type: !2189)
!3469 = !DILocation(line: 136, column: 39, scope: !3464)
!3470 = !DILocalVariable(name: "state", arg: 2, scope: !3464, file: !1719, line: 136, type: !3467)
!3471 = !DILocation(line: 136, column: 57, scope: !3464)
!3472 = !DILocalVariable(name: "range1", scope: !3464, file: !1719, line: 138, type: !923)
!3473 = !DILocation(line: 138, column: 9, scope: !3464)
!3474 = !DILocation(line: 138, column: 19, scope: !3464)
!3475 = !DILocation(line: 138, column: 22, scope: !3464)
!3476 = !DILocation(line: 138, column: 32, scope: !3464)
!3477 = !DILocation(line: 138, column: 31, scope: !3464)
!3478 = !DILocation(line: 138, column: 30, scope: !3464)
!3479 = !DILocation(line: 138, column: 28, scope: !3464)
!3480 = !DILocation(line: 138, column: 40, scope: !3464)
!3481 = !DILocation(line: 140, column: 17, scope: !3464)
!3482 = !DILocation(line: 140, column: 5, scope: !3464)
!3483 = !DILocation(line: 140, column: 8, scope: !3464)
!3484 = !DILocation(line: 140, column: 14, scope: !3464)
!3485 = !DILocation(line: 141, column: 9, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3464, file: !1719, line: 141, column: 9)
!3487 = !DILocation(line: 141, column: 12, scope: !3486)
!3488 = !DILocation(line: 141, column: 18, scope: !3486)
!3489 = !DILocation(line: 141, column: 21, scope: !3486)
!3490 = !DILocation(line: 141, column: 16, scope: !3486)
!3491 = !DILocation(line: 141, column: 9, scope: !3464)
!3492 = !DILocation(line: 142, column: 33, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3486, file: !1719, line: 141, column: 28)
!3494 = !DILocation(line: 142, column: 32, scope: !3493)
!3495 = !DILocation(line: 142, column: 18, scope: !3493)
!3496 = !DILocation(line: 142, column: 21, scope: !3493)
!3497 = !DILocation(line: 142, column: 10, scope: !3493)
!3498 = !DILocation(line: 142, column: 16, scope: !3493)
!3499 = !DILocation(line: 143, column: 16, scope: !3493)
!3500 = !DILocation(line: 143, column: 9, scope: !3493)
!3501 = !DILocation(line: 144, column: 9, scope: !3493)
!3502 = !DILocation(line: 146, column: 19, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3486, file: !1719, line: 145, column: 12)
!3504 = !DILocation(line: 146, column: 22, scope: !3503)
!3505 = !DILocation(line: 146, column: 9, scope: !3503)
!3506 = !DILocation(line: 146, column: 12, scope: !3503)
!3507 = !DILocation(line: 146, column: 16, scope: !3503)
!3508 = !DILocation(line: 147, column: 32, scope: !3503)
!3509 = !DILocation(line: 147, column: 31, scope: !3503)
!3510 = !DILocation(line: 147, column: 18, scope: !3503)
!3511 = !DILocation(line: 147, column: 21, scope: !3503)
!3512 = !DILocation(line: 147, column: 10, scope: !3503)
!3513 = !DILocation(line: 147, column: 16, scope: !3503)
!3514 = !DILocation(line: 148, column: 20, scope: !3503)
!3515 = !DILocation(line: 148, column: 9, scope: !3503)
!3516 = !DILocation(line: 148, column: 12, scope: !3503)
!3517 = !DILocation(line: 148, column: 18, scope: !3503)
!3518 = !DILocation(line: 149, column: 16, scope: !3503)
!3519 = !DILocation(line: 149, column: 9, scope: !3503)
!3520 = !DILocation(line: 150, column: 9, scope: !3503)
!3521 = !DILocation(line: 152, column: 1, scope: !3464)
!3522 = distinct !DISubprogram(name: "read_quant_tables", scope: !953, file: !953, line: 395, type: !3523, isLocal: true, isDefinition: true, scopeLine: 397, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!3523 = !DISubroutineType(types: !3524)
!3524 = !{!923, !2189, !3525}
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64, align: 64)
!3526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1801, size: 4096, align: 16, elements: !1728)
!3527 = !DILocalVariable(name: "c", arg: 1, scope: !3522, file: !953, line: 395, type: !2189)
!3528 = !DILocation(line: 395, column: 42, scope: !3522)
!3529 = !DILocalVariable(name: "quant_table", arg: 2, scope: !3522, file: !953, line: 396, type: !3525)
!3530 = !DILocation(line: 396, column: 38, scope: !3522)
!3531 = !DILocalVariable(name: "i", scope: !3522, file: !953, line: 398, type: !923)
!3532 = !DILocation(line: 398, column: 9, scope: !3522)
!3533 = !DILocalVariable(name: "context_count", scope: !3522, file: !953, line: 399, type: !923)
!3534 = !DILocation(line: 399, column: 9, scope: !3522)
!3535 = !DILocation(line: 401, column: 12, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3522, file: !953, line: 401, column: 5)
!3537 = !DILocation(line: 401, column: 10, scope: !3536)
!3538 = !DILocation(line: 401, column: 17, scope: !3539)
!3539 = !DILexicalBlockFile(scope: !3540, file: !953, discriminator: 1)
!3540 = distinct !DILexicalBlock(scope: !3536, file: !953, line: 401, column: 5)
!3541 = !DILocation(line: 401, column: 19, scope: !3539)
!3542 = !DILocation(line: 401, column: 5, scope: !3539)
!3543 = !DILocalVariable(name: "ret", scope: !3544, file: !953, line: 402, type: !923)
!3544 = distinct !DILexicalBlock(scope: !3540, file: !953, line: 401, column: 29)
!3545 = !DILocation(line: 402, column: 13, scope: !3544)
!3546 = !DILocation(line: 402, column: 36, scope: !3544)
!3547 = !DILocation(line: 402, column: 51, scope: !3544)
!3548 = !DILocation(line: 402, column: 39, scope: !3544)
!3549 = !DILocation(line: 402, column: 55, scope: !3544)
!3550 = !DILocation(line: 402, column: 19, scope: !3544)
!3551 = !DILocation(line: 403, column: 13, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3544, file: !953, line: 403, column: 13)
!3553 = !DILocation(line: 403, column: 17, scope: !3552)
!3554 = !DILocation(line: 403, column: 13, scope: !3544)
!3555 = !DILocation(line: 404, column: 20, scope: !3552)
!3556 = !DILocation(line: 404, column: 13, scope: !3552)
!3557 = !DILocation(line: 405, column: 26, scope: !3544)
!3558 = !DILocation(line: 405, column: 23, scope: !3544)
!3559 = !DILocation(line: 406, column: 13, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3544, file: !953, line: 406, column: 13)
!3561 = !DILocation(line: 406, column: 27, scope: !3560)
!3562 = !DILocation(line: 406, column: 13, scope: !3544)
!3563 = !DILocation(line: 407, column: 13, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3560, file: !953, line: 406, column: 37)
!3565 = !DILocation(line: 409, column: 5, scope: !3544)
!3566 = !DILocation(line: 401, column: 25, scope: !3567)
!3567 = !DILexicalBlockFile(scope: !3540, file: !953, discriminator: 2)
!3568 = !DILocation(line: 401, column: 5, scope: !3567)
!3569 = distinct !{!3569, !3570}
!3570 = !DILocation(line: 401, column: 5, scope: !3522)
!3571 = !DILocation(line: 410, column: 13, scope: !3522)
!3572 = !DILocation(line: 410, column: 27, scope: !3522)
!3573 = !DILocation(line: 410, column: 32, scope: !3522)
!3574 = !DILocation(line: 410, column: 5, scope: !3522)
!3575 = !DILocation(line: 411, column: 1, scope: !3522)
!3576 = distinct !DISubprogram(name: "get_symbol_inline", scope: !953, file: !953, line: 42, type: !3451, isLocal: true, isDefinition: true, scopeLine: 44, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!3577 = !DILocation(line: 136, column: 39, scope: !3464, inlinedAt: !3578)
!3578 = distinct !DILocation(line: 61, column: 28, scope: !3579)
!3579 = !DILexicalBlockFile(scope: !3580, file: !953, discriminator: 4)
!3580 = distinct !DILexicalBlock(scope: !3581, file: !953, line: 47, column: 10)
!3581 = distinct !DILexicalBlock(scope: !3576, file: !953, line: 45, column: 9)
!3582 = !DILocation(line: 136, column: 57, scope: !3464, inlinedAt: !3578)
!3583 = !DILocation(line: 138, column: 9, scope: !3464, inlinedAt: !3578)
!3584 = !DILocation(line: 136, column: 39, scope: !3464, inlinedAt: !3585)
!3585 = distinct !DILocation(line: 59, column: 22, scope: !3586)
!3586 = !DILexicalBlockFile(scope: !3587, file: !953, discriminator: 3)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !953, line: 58, column: 9)
!3588 = distinct !DILexicalBlock(scope: !3580, file: !953, line: 58, column: 9)
!3589 = !DILocation(line: 136, column: 57, scope: !3464, inlinedAt: !3585)
!3590 = !DILocation(line: 138, column: 9, scope: !3464, inlinedAt: !3585)
!3591 = !DILocation(line: 136, column: 39, scope: !3464, inlinedAt: !3592)
!3592 = distinct !DILocation(line: 51, column: 16, scope: !3579)
!3593 = !DILocation(line: 136, column: 57, scope: !3464, inlinedAt: !3592)
!3594 = !DILocation(line: 138, column: 9, scope: !3464, inlinedAt: !3592)
!3595 = !DILocation(line: 136, column: 39, scope: !3464, inlinedAt: !3596)
!3596 = distinct !DILocation(line: 45, column: 9, scope: !3581)
!3597 = !DILocation(line: 136, column: 57, scope: !3464, inlinedAt: !3596)
!3598 = !DILocation(line: 138, column: 9, scope: !3464, inlinedAt: !3596)
!3599 = !DILocalVariable(name: "c", arg: 1, scope: !3576, file: !953, line: 42, type: !2189)
!3600 = !DILocation(line: 42, column: 74, scope: !3576)
!3601 = !DILocalVariable(name: "state", arg: 2, scope: !3576, file: !953, line: 42, type: !1103)
!3602 = !DILocation(line: 42, column: 86, scope: !3576)
!3603 = !DILocalVariable(name: "is_signed", arg: 3, scope: !3576, file: !953, line: 43, type: !923)
!3604 = !DILocation(line: 43, column: 52, scope: !3576)
!3605 = !DILocation(line: 45, column: 17, scope: !3581)
!3606 = !DILocation(line: 45, column: 20, scope: !3581)
!3607 = !DILocation(line: 45, column: 26, scope: !3581)
!3608 = !DILocation(line: 45, column: 9, scope: !3581)
!3609 = !DILocation(line: 138, column: 19, scope: !3464, inlinedAt: !3596)
!3610 = !DILocation(line: 138, column: 22, scope: !3464, inlinedAt: !3596)
!3611 = !DILocation(line: 138, column: 32, scope: !3464, inlinedAt: !3596)
!3612 = !DILocation(line: 138, column: 31, scope: !3464, inlinedAt: !3596)
!3613 = !DILocation(line: 138, column: 30, scope: !3464, inlinedAt: !3596)
!3614 = !DILocation(line: 138, column: 28, scope: !3464, inlinedAt: !3596)
!3615 = !DILocation(line: 138, column: 40, scope: !3464, inlinedAt: !3596)
!3616 = !DILocation(line: 140, column: 17, scope: !3464, inlinedAt: !3596)
!3617 = !DILocation(line: 140, column: 5, scope: !3464, inlinedAt: !3596)
!3618 = !DILocation(line: 140, column: 8, scope: !3464, inlinedAt: !3596)
!3619 = !DILocation(line: 140, column: 14, scope: !3464, inlinedAt: !3596)
!3620 = !DILocation(line: 141, column: 9, scope: !3486, inlinedAt: !3596)
!3621 = !DILocation(line: 141, column: 12, scope: !3486, inlinedAt: !3596)
!3622 = !DILocation(line: 141, column: 18, scope: !3486, inlinedAt: !3596)
!3623 = !DILocation(line: 141, column: 21, scope: !3486, inlinedAt: !3596)
!3624 = !DILocation(line: 141, column: 16, scope: !3486, inlinedAt: !3596)
!3625 = !DILocation(line: 141, column: 9, scope: !3464, inlinedAt: !3596)
!3626 = !DILocation(line: 142, column: 33, scope: !3493, inlinedAt: !3596)
!3627 = !DILocation(line: 142, column: 32, scope: !3493, inlinedAt: !3596)
!3628 = !DILocation(line: 142, column: 18, scope: !3493, inlinedAt: !3596)
!3629 = !DILocation(line: 142, column: 21, scope: !3493, inlinedAt: !3596)
!3630 = !DILocation(line: 142, column: 10, scope: !3493, inlinedAt: !3596)
!3631 = !DILocation(line: 142, column: 16, scope: !3493, inlinedAt: !3596)
!3632 = !DILocation(line: 143, column: 16, scope: !3493, inlinedAt: !3596)
!3633 = !DILocation(line: 143, column: 9, scope: !3493, inlinedAt: !3596)
!3634 = !DILocation(line: 144, column: 9, scope: !3493, inlinedAt: !3596)
!3635 = !DILocation(line: 146, column: 19, scope: !3503, inlinedAt: !3596)
!3636 = !DILocation(line: 146, column: 22, scope: !3503, inlinedAt: !3596)
!3637 = !DILocation(line: 146, column: 9, scope: !3503, inlinedAt: !3596)
!3638 = !DILocation(line: 146, column: 12, scope: !3503, inlinedAt: !3596)
!3639 = !DILocation(line: 146, column: 16, scope: !3503, inlinedAt: !3596)
!3640 = !DILocation(line: 147, column: 32, scope: !3503, inlinedAt: !3596)
!3641 = !DILocation(line: 147, column: 31, scope: !3503, inlinedAt: !3596)
!3642 = !DILocation(line: 147, column: 18, scope: !3503, inlinedAt: !3596)
!3643 = !DILocation(line: 147, column: 21, scope: !3503, inlinedAt: !3596)
!3644 = !DILocation(line: 147, column: 10, scope: !3503, inlinedAt: !3596)
!3645 = !DILocation(line: 147, column: 16, scope: !3503, inlinedAt: !3596)
!3646 = !DILocation(line: 148, column: 20, scope: !3503, inlinedAt: !3596)
!3647 = !DILocation(line: 148, column: 9, scope: !3503, inlinedAt: !3596)
!3648 = !DILocation(line: 148, column: 12, scope: !3503, inlinedAt: !3596)
!3649 = !DILocation(line: 148, column: 18, scope: !3503, inlinedAt: !3596)
!3650 = !DILocation(line: 149, column: 16, scope: !3503, inlinedAt: !3596)
!3651 = !DILocation(line: 149, column: 9, scope: !3503, inlinedAt: !3596)
!3652 = !DILocation(line: 150, column: 9, scope: !3503, inlinedAt: !3596)
!3653 = !DILocation(line: 152, column: 1, scope: !3464, inlinedAt: !3596)
!3654 = !DILocation(line: 45, column: 9, scope: !3576)
!3655 = !DILocation(line: 46, column: 9, scope: !3581)
!3656 = !DILocalVariable(name: "i", scope: !3580, file: !953, line: 48, type: !923)
!3657 = !DILocation(line: 48, column: 13, scope: !3580)
!3658 = !DILocalVariable(name: "e", scope: !3580, file: !953, line: 48, type: !923)
!3659 = !DILocation(line: 48, column: 16, scope: !3580)
!3660 = !DILocalVariable(name: "a", scope: !3580, file: !953, line: 49, type: !924)
!3661 = !DILocation(line: 49, column: 18, scope: !3580)
!3662 = !DILocation(line: 50, column: 11, scope: !3580)
!3663 = !DILocation(line: 51, column: 9, scope: !3580)
!3664 = !DILocation(line: 51, column: 24, scope: !3665)
!3665 = !DILexicalBlockFile(scope: !3580, file: !953, discriminator: 1)
!3666 = !DILocation(line: 51, column: 27, scope: !3665)
!3667 = !DILocation(line: 51, column: 33, scope: !3665)
!3668 = !DILocation(line: 51, column: 41, scope: !3665)
!3669 = !DILocation(line: 51, column: 44, scope: !3665)
!3670 = !DILocation(line: 51, column: 40, scope: !3665)
!3671 = !DILocation(line: 51, column: 40, scope: !3672)
!3672 = !DILexicalBlockFile(scope: !3580, file: !953, discriminator: 2)
!3673 = !DILocation(line: 51, column: 59, scope: !3674)
!3674 = !DILexicalBlockFile(scope: !3580, file: !953, discriminator: 3)
!3675 = !DILocation(line: 51, column: 40, scope: !3674)
!3676 = !DILocation(line: 51, column: 40, scope: !3579)
!3677 = !DILocation(line: 51, column: 37, scope: !3579)
!3678 = !DILocation(line: 51, column: 16, scope: !3579)
!3679 = !DILocation(line: 138, column: 19, scope: !3464, inlinedAt: !3592)
!3680 = !DILocation(line: 138, column: 22, scope: !3464, inlinedAt: !3592)
!3681 = !DILocation(line: 138, column: 32, scope: !3464, inlinedAt: !3592)
!3682 = !DILocation(line: 138, column: 31, scope: !3464, inlinedAt: !3592)
!3683 = !DILocation(line: 138, column: 30, scope: !3464, inlinedAt: !3592)
!3684 = !DILocation(line: 138, column: 28, scope: !3464, inlinedAt: !3592)
!3685 = !DILocation(line: 138, column: 40, scope: !3464, inlinedAt: !3592)
!3686 = !DILocation(line: 140, column: 17, scope: !3464, inlinedAt: !3592)
!3687 = !DILocation(line: 140, column: 5, scope: !3464, inlinedAt: !3592)
!3688 = !DILocation(line: 140, column: 8, scope: !3464, inlinedAt: !3592)
!3689 = !DILocation(line: 140, column: 14, scope: !3464, inlinedAt: !3592)
!3690 = !DILocation(line: 141, column: 9, scope: !3486, inlinedAt: !3592)
!3691 = !DILocation(line: 141, column: 12, scope: !3486, inlinedAt: !3592)
!3692 = !DILocation(line: 141, column: 18, scope: !3486, inlinedAt: !3592)
!3693 = !DILocation(line: 141, column: 21, scope: !3486, inlinedAt: !3592)
!3694 = !DILocation(line: 141, column: 16, scope: !3486, inlinedAt: !3592)
!3695 = !DILocation(line: 141, column: 9, scope: !3464, inlinedAt: !3592)
!3696 = !DILocation(line: 142, column: 33, scope: !3493, inlinedAt: !3592)
!3697 = !DILocation(line: 142, column: 32, scope: !3493, inlinedAt: !3592)
!3698 = !DILocation(line: 142, column: 18, scope: !3493, inlinedAt: !3592)
!3699 = !DILocation(line: 142, column: 21, scope: !3493, inlinedAt: !3592)
!3700 = !DILocation(line: 142, column: 10, scope: !3493, inlinedAt: !3592)
!3701 = !DILocation(line: 142, column: 16, scope: !3493, inlinedAt: !3592)
!3702 = !DILocation(line: 143, column: 16, scope: !3493, inlinedAt: !3592)
!3703 = !DILocation(line: 143, column: 9, scope: !3493, inlinedAt: !3592)
!3704 = !DILocation(line: 144, column: 9, scope: !3493, inlinedAt: !3592)
!3705 = !DILocation(line: 146, column: 19, scope: !3503, inlinedAt: !3592)
!3706 = !DILocation(line: 146, column: 22, scope: !3503, inlinedAt: !3592)
!3707 = !DILocation(line: 146, column: 9, scope: !3503, inlinedAt: !3592)
!3708 = !DILocation(line: 146, column: 12, scope: !3503, inlinedAt: !3592)
!3709 = !DILocation(line: 146, column: 16, scope: !3503, inlinedAt: !3592)
!3710 = !DILocation(line: 147, column: 32, scope: !3503, inlinedAt: !3592)
!3711 = !DILocation(line: 147, column: 31, scope: !3503, inlinedAt: !3592)
!3712 = !DILocation(line: 147, column: 18, scope: !3503, inlinedAt: !3592)
!3713 = !DILocation(line: 147, column: 21, scope: !3503, inlinedAt: !3592)
!3714 = !DILocation(line: 147, column: 10, scope: !3503, inlinedAt: !3592)
!3715 = !DILocation(line: 147, column: 16, scope: !3503, inlinedAt: !3592)
!3716 = !DILocation(line: 148, column: 20, scope: !3503, inlinedAt: !3592)
!3717 = !DILocation(line: 148, column: 9, scope: !3503, inlinedAt: !3592)
!3718 = !DILocation(line: 148, column: 12, scope: !3503, inlinedAt: !3592)
!3719 = !DILocation(line: 148, column: 18, scope: !3503, inlinedAt: !3592)
!3720 = !DILocation(line: 149, column: 16, scope: !3503, inlinedAt: !3592)
!3721 = !DILocation(line: 149, column: 9, scope: !3503, inlinedAt: !3592)
!3722 = !DILocation(line: 150, column: 9, scope: !3503, inlinedAt: !3592)
!3723 = !DILocation(line: 152, column: 1, scope: !3464, inlinedAt: !3592)
!3724 = !DILocation(line: 51, column: 9, scope: !3579)
!3725 = !DILocation(line: 52, column: 14, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3580, file: !953, line: 51, column: 65)
!3727 = !DILocation(line: 53, column: 17, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3726, file: !953, line: 53, column: 17)
!3729 = !DILocation(line: 53, column: 19, scope: !3728)
!3730 = !DILocation(line: 53, column: 17, scope: !3726)
!3731 = !DILocation(line: 54, column: 17, scope: !3728)
!3732 = !DILocation(line: 51, column: 9, scope: !3733)
!3733 = !DILexicalBlockFile(scope: !3580, file: !953, discriminator: 5)
!3734 = distinct !{!3734, !3663}
!3735 = !DILocation(line: 57, column: 11, scope: !3580)
!3736 = !DILocation(line: 58, column: 18, scope: !3588)
!3737 = !DILocation(line: 58, column: 20, scope: !3588)
!3738 = !DILocation(line: 58, column: 16, scope: !3588)
!3739 = !DILocation(line: 58, column: 14, scope: !3588)
!3740 = !DILocation(line: 58, column: 25, scope: !3741)
!3741 = !DILexicalBlockFile(scope: !3587, file: !953, discriminator: 1)
!3742 = !DILocation(line: 58, column: 27, scope: !3741)
!3743 = !DILocation(line: 58, column: 9, scope: !3741)
!3744 = !DILocation(line: 59, column: 18, scope: !3587)
!3745 = !DILocation(line: 59, column: 30, scope: !3587)
!3746 = !DILocation(line: 59, column: 33, scope: !3587)
!3747 = !DILocation(line: 59, column: 39, scope: !3587)
!3748 = !DILocation(line: 59, column: 48, scope: !3587)
!3749 = !DILocation(line: 59, column: 51, scope: !3587)
!3750 = !DILocation(line: 59, column: 47, scope: !3587)
!3751 = !DILocation(line: 59, column: 47, scope: !3741)
!3752 = !DILocation(line: 59, column: 66, scope: !3753)
!3753 = !DILexicalBlockFile(scope: !3587, file: !953, discriminator: 2)
!3754 = !DILocation(line: 59, column: 47, scope: !3753)
!3755 = !DILocation(line: 59, column: 47, scope: !3586)
!3756 = !DILocation(line: 59, column: 44, scope: !3586)
!3757 = !DILocation(line: 59, column: 22, scope: !3586)
!3758 = !DILocation(line: 138, column: 19, scope: !3464, inlinedAt: !3585)
!3759 = !DILocation(line: 138, column: 22, scope: !3464, inlinedAt: !3585)
!3760 = !DILocation(line: 138, column: 32, scope: !3464, inlinedAt: !3585)
!3761 = !DILocation(line: 138, column: 31, scope: !3464, inlinedAt: !3585)
!3762 = !DILocation(line: 138, column: 30, scope: !3464, inlinedAt: !3585)
!3763 = !DILocation(line: 138, column: 28, scope: !3464, inlinedAt: !3585)
!3764 = !DILocation(line: 138, column: 40, scope: !3464, inlinedAt: !3585)
!3765 = !DILocation(line: 140, column: 17, scope: !3464, inlinedAt: !3585)
!3766 = !DILocation(line: 140, column: 5, scope: !3464, inlinedAt: !3585)
!3767 = !DILocation(line: 140, column: 8, scope: !3464, inlinedAt: !3585)
!3768 = !DILocation(line: 140, column: 14, scope: !3464, inlinedAt: !3585)
!3769 = !DILocation(line: 141, column: 9, scope: !3486, inlinedAt: !3585)
!3770 = !DILocation(line: 141, column: 12, scope: !3486, inlinedAt: !3585)
!3771 = !DILocation(line: 141, column: 18, scope: !3486, inlinedAt: !3585)
!3772 = !DILocation(line: 141, column: 21, scope: !3486, inlinedAt: !3585)
!3773 = !DILocation(line: 141, column: 16, scope: !3486, inlinedAt: !3585)
!3774 = !DILocation(line: 141, column: 9, scope: !3464, inlinedAt: !3585)
!3775 = !DILocation(line: 142, column: 33, scope: !3493, inlinedAt: !3585)
!3776 = !DILocation(line: 142, column: 32, scope: !3493, inlinedAt: !3585)
!3777 = !DILocation(line: 142, column: 18, scope: !3493, inlinedAt: !3585)
!3778 = !DILocation(line: 142, column: 21, scope: !3493, inlinedAt: !3585)
!3779 = !DILocation(line: 142, column: 10, scope: !3493, inlinedAt: !3585)
!3780 = !DILocation(line: 142, column: 16, scope: !3493, inlinedAt: !3585)
!3781 = !DILocation(line: 143, column: 16, scope: !3493, inlinedAt: !3585)
!3782 = !DILocation(line: 143, column: 9, scope: !3493, inlinedAt: !3585)
!3783 = !DILocation(line: 144, column: 9, scope: !3493, inlinedAt: !3585)
!3784 = !DILocation(line: 146, column: 19, scope: !3503, inlinedAt: !3585)
!3785 = !DILocation(line: 146, column: 22, scope: !3503, inlinedAt: !3585)
!3786 = !DILocation(line: 146, column: 9, scope: !3503, inlinedAt: !3585)
!3787 = !DILocation(line: 146, column: 12, scope: !3503, inlinedAt: !3585)
!3788 = !DILocation(line: 146, column: 16, scope: !3503, inlinedAt: !3585)
!3789 = !DILocation(line: 147, column: 32, scope: !3503, inlinedAt: !3585)
!3790 = !DILocation(line: 147, column: 31, scope: !3503, inlinedAt: !3585)
!3791 = !DILocation(line: 147, column: 18, scope: !3503, inlinedAt: !3585)
!3792 = !DILocation(line: 147, column: 21, scope: !3503, inlinedAt: !3585)
!3793 = !DILocation(line: 147, column: 10, scope: !3503, inlinedAt: !3585)
!3794 = !DILocation(line: 147, column: 16, scope: !3503, inlinedAt: !3585)
!3795 = !DILocation(line: 148, column: 20, scope: !3503, inlinedAt: !3585)
!3796 = !DILocation(line: 148, column: 9, scope: !3503, inlinedAt: !3585)
!3797 = !DILocation(line: 148, column: 12, scope: !3503, inlinedAt: !3585)
!3798 = !DILocation(line: 148, column: 18, scope: !3503, inlinedAt: !3585)
!3799 = !DILocation(line: 149, column: 16, scope: !3503, inlinedAt: !3585)
!3800 = !DILocation(line: 149, column: 9, scope: !3503, inlinedAt: !3585)
!3801 = !DILocation(line: 150, column: 9, scope: !3503, inlinedAt: !3585)
!3802 = !DILocation(line: 152, column: 1, scope: !3464, inlinedAt: !3585)
!3803 = !DILocation(line: 59, column: 20, scope: !3586)
!3804 = !DILocation(line: 59, column: 15, scope: !3586)
!3805 = !DILocation(line: 59, column: 13, scope: !3586)
!3806 = !DILocation(line: 58, column: 34, scope: !3753)
!3807 = !DILocation(line: 58, column: 9, scope: !3753)
!3808 = distinct !{!3808, !3809}
!3809 = !DILocation(line: 58, column: 9, scope: !3580)
!3810 = !DILocation(line: 61, column: 15, scope: !3580)
!3811 = !DILocation(line: 61, column: 25, scope: !3580)
!3812 = !DILocation(line: 61, column: 36, scope: !3665)
!3813 = !DILocation(line: 61, column: 39, scope: !3665)
!3814 = !DILocation(line: 61, column: 45, scope: !3665)
!3815 = !DILocation(line: 61, column: 54, scope: !3665)
!3816 = !DILocation(line: 61, column: 57, scope: !3665)
!3817 = !DILocation(line: 61, column: 53, scope: !3665)
!3818 = !DILocation(line: 61, column: 53, scope: !3672)
!3819 = !DILocation(line: 61, column: 74, scope: !3674)
!3820 = !DILocation(line: 61, column: 53, scope: !3674)
!3821 = !DILocation(line: 61, column: 53, scope: !3579)
!3822 = !DILocation(line: 61, column: 50, scope: !3579)
!3823 = !DILocation(line: 61, column: 28, scope: !3579)
!3824 = !DILocation(line: 138, column: 19, scope: !3464, inlinedAt: !3578)
!3825 = !DILocation(line: 138, column: 22, scope: !3464, inlinedAt: !3578)
!3826 = !DILocation(line: 138, column: 32, scope: !3464, inlinedAt: !3578)
!3827 = !DILocation(line: 138, column: 31, scope: !3464, inlinedAt: !3578)
!3828 = !DILocation(line: 138, column: 30, scope: !3464, inlinedAt: !3578)
!3829 = !DILocation(line: 138, column: 28, scope: !3464, inlinedAt: !3578)
!3830 = !DILocation(line: 138, column: 40, scope: !3464, inlinedAt: !3578)
!3831 = !DILocation(line: 140, column: 17, scope: !3464, inlinedAt: !3578)
!3832 = !DILocation(line: 140, column: 5, scope: !3464, inlinedAt: !3578)
!3833 = !DILocation(line: 140, column: 8, scope: !3464, inlinedAt: !3578)
!3834 = !DILocation(line: 140, column: 14, scope: !3464, inlinedAt: !3578)
!3835 = !DILocation(line: 141, column: 9, scope: !3486, inlinedAt: !3578)
!3836 = !DILocation(line: 141, column: 12, scope: !3486, inlinedAt: !3578)
!3837 = !DILocation(line: 141, column: 18, scope: !3486, inlinedAt: !3578)
!3838 = !DILocation(line: 141, column: 21, scope: !3486, inlinedAt: !3578)
!3839 = !DILocation(line: 141, column: 16, scope: !3486, inlinedAt: !3578)
!3840 = !DILocation(line: 141, column: 9, scope: !3464, inlinedAt: !3578)
!3841 = !DILocation(line: 142, column: 33, scope: !3493, inlinedAt: !3578)
!3842 = !DILocation(line: 142, column: 32, scope: !3493, inlinedAt: !3578)
!3843 = !DILocation(line: 142, column: 18, scope: !3493, inlinedAt: !3578)
!3844 = !DILocation(line: 142, column: 21, scope: !3493, inlinedAt: !3578)
!3845 = !DILocation(line: 142, column: 10, scope: !3493, inlinedAt: !3578)
!3846 = !DILocation(line: 142, column: 16, scope: !3493, inlinedAt: !3578)
!3847 = !DILocation(line: 143, column: 16, scope: !3493, inlinedAt: !3578)
!3848 = !DILocation(line: 143, column: 9, scope: !3493, inlinedAt: !3578)
!3849 = !DILocation(line: 144, column: 9, scope: !3493, inlinedAt: !3578)
!3850 = !DILocation(line: 146, column: 19, scope: !3503, inlinedAt: !3578)
!3851 = !DILocation(line: 146, column: 22, scope: !3503, inlinedAt: !3578)
!3852 = !DILocation(line: 146, column: 9, scope: !3503, inlinedAt: !3578)
!3853 = !DILocation(line: 146, column: 12, scope: !3503, inlinedAt: !3578)
!3854 = !DILocation(line: 146, column: 16, scope: !3503, inlinedAt: !3578)
!3855 = !DILocation(line: 147, column: 32, scope: !3503, inlinedAt: !3578)
!3856 = !DILocation(line: 147, column: 31, scope: !3503, inlinedAt: !3578)
!3857 = !DILocation(line: 147, column: 18, scope: !3503, inlinedAt: !3578)
!3858 = !DILocation(line: 147, column: 21, scope: !3503, inlinedAt: !3578)
!3859 = !DILocation(line: 147, column: 10, scope: !3503, inlinedAt: !3578)
!3860 = !DILocation(line: 147, column: 16, scope: !3503, inlinedAt: !3578)
!3861 = !DILocation(line: 148, column: 20, scope: !3503, inlinedAt: !3578)
!3862 = !DILocation(line: 148, column: 9, scope: !3503, inlinedAt: !3578)
!3863 = !DILocation(line: 148, column: 12, scope: !3503, inlinedAt: !3578)
!3864 = !DILocation(line: 148, column: 18, scope: !3503, inlinedAt: !3578)
!3865 = !DILocation(line: 149, column: 16, scope: !3503, inlinedAt: !3578)
!3866 = !DILocation(line: 149, column: 9, scope: !3503, inlinedAt: !3578)
!3867 = !DILocation(line: 150, column: 9, scope: !3503, inlinedAt: !3578)
!3868 = !DILocation(line: 152, column: 1, scope: !3464, inlinedAt: !3578)
!3869 = !DILocation(line: 61, column: 25, scope: !3579)
!3870 = !DILocation(line: 61, column: 25, scope: !3733)
!3871 = !DILocation(line: 61, column: 13, scope: !3733)
!3872 = !DILocation(line: 61, column: 11, scope: !3733)
!3873 = !DILocation(line: 62, column: 17, scope: !3580)
!3874 = !DILocation(line: 62, column: 21, scope: !3580)
!3875 = !DILocation(line: 62, column: 19, scope: !3580)
!3876 = !DILocation(line: 62, column: 26, scope: !3580)
!3877 = !DILocation(line: 62, column: 24, scope: !3580)
!3878 = !DILocation(line: 62, column: 9, scope: !3580)
!3879 = !DILocation(line: 64, column: 1, scope: !3576)
!3880 = distinct !DISubprogram(name: "refill", scope: !1719, file: !1719, line: 123, type: !3881, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{null, !2189}
!3883 = !DILocalVariable(name: "c", arg: 1, scope: !3880, file: !1719, line: 123, type: !2189)
!3884 = !DILocation(line: 123, column: 39, scope: !3880)
!3885 = !DILocation(line: 125, column: 9, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3880, file: !1719, line: 125, column: 9)
!3887 = !DILocation(line: 125, column: 12, scope: !3886)
!3888 = !DILocation(line: 125, column: 18, scope: !3886)
!3889 = !DILocation(line: 125, column: 9, scope: !3880)
!3890 = !DILocation(line: 126, column: 9, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3886, file: !1719, line: 125, column: 27)
!3892 = !DILocation(line: 126, column: 12, scope: !3891)
!3893 = !DILocation(line: 126, column: 18, scope: !3891)
!3894 = !DILocation(line: 127, column: 9, scope: !3891)
!3895 = !DILocation(line: 127, column: 12, scope: !3891)
!3896 = !DILocation(line: 127, column: 16, scope: !3891)
!3897 = !DILocation(line: 128, column: 13, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3891, file: !1719, line: 128, column: 13)
!3899 = !DILocation(line: 128, column: 16, scope: !3898)
!3900 = !DILocation(line: 128, column: 29, scope: !3898)
!3901 = !DILocation(line: 128, column: 32, scope: !3898)
!3902 = !DILocation(line: 128, column: 27, scope: !3898)
!3903 = !DILocation(line: 128, column: 13, scope: !3891)
!3904 = !DILocation(line: 129, column: 23, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3898, file: !1719, line: 128, column: 48)
!3906 = !DILocation(line: 129, column: 26, scope: !3905)
!3907 = !DILocation(line: 129, column: 13, scope: !3905)
!3908 = !DILocation(line: 129, column: 16, scope: !3905)
!3909 = !DILocation(line: 129, column: 20, scope: !3905)
!3910 = !DILocation(line: 130, column: 13, scope: !3905)
!3911 = !DILocation(line: 130, column: 16, scope: !3905)
!3912 = !DILocation(line: 130, column: 26, scope: !3905)
!3913 = !DILocation(line: 131, column: 9, scope: !3905)
!3914 = !DILocation(line: 132, column: 13, scope: !3898)
!3915 = !DILocation(line: 132, column: 16, scope: !3898)
!3916 = !DILocation(line: 132, column: 25, scope: !3898)
!3917 = !DILocation(line: 133, column: 5, scope: !3891)
!3918 = !DILocation(line: 134, column: 1, scope: !3880)
!3919 = distinct !DISubprogram(name: "read_quant_table", scope: !953, file: !953, line: 368, type: !3920, isLocal: true, isDefinition: true, scopeLine: 369, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!3920 = !DISubroutineType(types: !3921)
!3921 = !{!923, !2189, !1833, !923}
!3922 = !DILocalVariable(name: "c", arg: 1, scope: !3919, file: !953, line: 368, type: !2189)
!3923 = !DILocation(line: 368, column: 41, scope: !3919)
!3924 = !DILocalVariable(name: "quant_table", arg: 2, scope: !3919, file: !953, line: 368, type: !1833)
!3925 = !DILocation(line: 368, column: 53, scope: !3919)
!3926 = !DILocalVariable(name: "scale", arg: 3, scope: !3919, file: !953, line: 368, type: !923)
!3927 = !DILocation(line: 368, column: 70, scope: !3919)
!3928 = !DILocalVariable(name: "v", scope: !3919, file: !953, line: 370, type: !923)
!3929 = !DILocation(line: 370, column: 9, scope: !3919)
!3930 = !DILocalVariable(name: "i", scope: !3919, file: !953, line: 371, type: !923)
!3931 = !DILocation(line: 371, column: 9, scope: !3919)
!3932 = !DILocalVariable(name: "state", scope: !3919, file: !953, line: 372, type: !1809)
!3933 = !DILocation(line: 372, column: 13, scope: !3919)
!3934 = !DILocation(line: 374, column: 5, scope: !3919)
!3935 = !DILocation(line: 376, column: 12, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3919, file: !953, line: 376, column: 5)
!3937 = !DILocation(line: 376, column: 10, scope: !3936)
!3938 = !DILocation(line: 376, column: 17, scope: !3939)
!3939 = !DILexicalBlockFile(scope: !3940, file: !953, discriminator: 1)
!3940 = distinct !DILexicalBlock(scope: !3936, file: !953, line: 376, column: 5)
!3941 = !DILocation(line: 376, column: 19, scope: !3939)
!3942 = !DILocation(line: 376, column: 5, scope: !3939)
!3943 = !DILocalVariable(name: "len", scope: !3944, file: !953, line: 377, type: !924)
!3944 = distinct !DILexicalBlock(scope: !3940, file: !953, line: 376, column: 31)
!3945 = !DILocation(line: 377, column: 18, scope: !3944)
!3946 = !DILocation(line: 377, column: 35, scope: !3944)
!3947 = !DILocation(line: 377, column: 38, scope: !3944)
!3948 = !DILocation(line: 377, column: 24, scope: !3944)
!3949 = !DILocation(line: 377, column: 48, scope: !3944)
!3950 = !DILocation(line: 379, column: 13, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3944, file: !953, line: 379, column: 13)
!3952 = !DILocation(line: 379, column: 25, scope: !3951)
!3953 = !DILocation(line: 379, column: 23, scope: !3951)
!3954 = !DILocation(line: 379, column: 17, scope: !3951)
!3955 = !DILocation(line: 379, column: 27, scope: !3951)
!3956 = !DILocation(line: 379, column: 31, scope: !3957)
!3957 = !DILexicalBlockFile(scope: !3951, file: !953, discriminator: 1)
!3958 = !DILocation(line: 379, column: 13, scope: !3957)
!3959 = !DILocation(line: 380, column: 13, scope: !3951)
!3960 = !DILocation(line: 382, column: 9, scope: !3944)
!3961 = !DILocation(line: 382, column: 19, scope: !3962)
!3962 = !DILexicalBlockFile(scope: !3944, file: !953, discriminator: 1)
!3963 = !DILocation(line: 382, column: 9, scope: !3962)
!3964 = !DILocation(line: 383, column: 30, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3944, file: !953, line: 382, column: 23)
!3966 = !DILocation(line: 383, column: 38, scope: !3965)
!3967 = !DILocation(line: 383, column: 36, scope: !3965)
!3968 = !DILocation(line: 383, column: 25, scope: !3965)
!3969 = !DILocation(line: 383, column: 13, scope: !3965)
!3970 = !DILocation(line: 383, column: 28, scope: !3965)
!3971 = !DILocation(line: 384, column: 14, scope: !3965)
!3972 = !DILocation(line: 382, column: 9, scope: !3973)
!3973 = !DILexicalBlockFile(scope: !3944, file: !953, discriminator: 2)
!3974 = distinct !{!3974, !3960}
!3975 = !DILocation(line: 386, column: 5, scope: !3944)
!3976 = !DILocation(line: 376, column: 27, scope: !3977)
!3977 = !DILexicalBlockFile(scope: !3940, file: !953, discriminator: 2)
!3978 = !DILocation(line: 376, column: 5, scope: !3977)
!3979 = distinct !{!3979, !3980}
!3980 = !DILocation(line: 376, column: 5, scope: !3919)
!3981 = !DILocation(line: 388, column: 12, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3919, file: !953, line: 388, column: 5)
!3983 = !DILocation(line: 388, column: 10, scope: !3982)
!3984 = !DILocation(line: 388, column: 17, scope: !3985)
!3985 = !DILexicalBlockFile(scope: !3986, file: !953, discriminator: 1)
!3986 = distinct !DILexicalBlock(scope: !3982, file: !953, line: 388, column: 5)
!3987 = !DILocation(line: 388, column: 19, scope: !3985)
!3988 = !DILocation(line: 388, column: 5, scope: !3985)
!3989 = !DILocation(line: 389, column: 45, scope: !3986)
!3990 = !DILocation(line: 389, column: 33, scope: !3986)
!3991 = !DILocation(line: 389, column: 32, scope: !3986)
!3992 = !DILocation(line: 389, column: 27, scope: !3986)
!3993 = !DILocation(line: 389, column: 25, scope: !3986)
!3994 = !DILocation(line: 389, column: 9, scope: !3986)
!3995 = !DILocation(line: 389, column: 30, scope: !3986)
!3996 = !DILocation(line: 388, column: 27, scope: !3997)
!3997 = !DILexicalBlockFile(scope: !3986, file: !953, discriminator: 2)
!3998 = !DILocation(line: 388, column: 5, scope: !3997)
!3999 = distinct !{!3999, !4000}
!4000 = !DILocation(line: 388, column: 5, scope: !3919)
!4001 = !DILocation(line: 390, column: 25, scope: !3919)
!4002 = !DILocation(line: 390, column: 24, scope: !3919)
!4003 = !DILocation(line: 390, column: 5, scope: !3919)
!4004 = !DILocation(line: 390, column: 22, scope: !3919)
!4005 = !DILocation(line: 392, column: 16, scope: !3919)
!4006 = !DILocation(line: 392, column: 14, scope: !3919)
!4007 = !DILocation(line: 392, column: 18, scope: !3919)
!4008 = !DILocation(line: 392, column: 5, scope: !3919)
!4009 = !DILocation(line: 393, column: 1, scope: !3919)
!4010 = distinct !DISubprogram(name: "read_header", scope: !953, file: !953, line: 530, type: !2940, isLocal: true, isDefinition: true, scopeLine: 531, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!4011 = !DILocalVariable(name: "f", arg: 1, scope: !4010, file: !953, line: 530, type: !1709)
!4012 = !DILocation(line: 530, column: 37, scope: !4010)
!4013 = !DILocalVariable(name: "state", scope: !4010, file: !953, line: 532, type: !1809)
!4014 = !DILocation(line: 532, column: 13, scope: !4010)
!4015 = !DILocalVariable(name: "i", scope: !4010, file: !953, line: 533, type: !923)
!4016 = !DILocation(line: 533, column: 9, scope: !4010)
!4017 = !DILocalVariable(name: "j", scope: !4010, file: !953, line: 533, type: !923)
!4018 = !DILocation(line: 533, column: 12, scope: !4010)
!4019 = !DILocalVariable(name: "context_count", scope: !4010, file: !953, line: 533, type: !923)
!4020 = !DILocation(line: 533, column: 15, scope: !4010)
!4021 = !DILocalVariable(name: "c", scope: !4010, file: !953, line: 534, type: !2188)
!4022 = !DILocation(line: 534, column: 23, scope: !4010)
!4023 = !DILocation(line: 534, column: 28, scope: !4010)
!4024 = !DILocation(line: 534, column: 31, scope: !4010)
!4025 = !DILocation(line: 534, column: 49, scope: !4010)
!4026 = !DILocation(line: 536, column: 5, scope: !4010)
!4027 = !DILocation(line: 538, column: 9, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4010, file: !953, line: 538, column: 9)
!4029 = !DILocation(line: 538, column: 12, scope: !4028)
!4030 = !DILocation(line: 538, column: 20, scope: !4028)
!4031 = !DILocation(line: 538, column: 9, scope: !4010)
!4032 = !DILocalVariable(name: "chroma_planes", scope: !4033, file: !953, line: 539, type: !923)
!4033 = distinct !DILexicalBlock(scope: !4028, file: !953, line: 538, column: 25)
!4034 = !DILocation(line: 539, column: 13, scope: !4033)
!4035 = !DILocalVariable(name: "chroma_h_shift", scope: !4033, file: !953, line: 539, type: !923)
!4036 = !DILocation(line: 539, column: 28, scope: !4033)
!4037 = !DILocalVariable(name: "chroma_v_shift", scope: !4033, file: !953, line: 539, type: !923)
!4038 = !DILocation(line: 539, column: 44, scope: !4033)
!4039 = !DILocalVariable(name: "transparency", scope: !4033, file: !953, line: 539, type: !923)
!4040 = !DILocation(line: 539, column: 60, scope: !4033)
!4041 = !DILocalVariable(name: "colorspace", scope: !4033, file: !953, line: 539, type: !923)
!4042 = !DILocation(line: 539, column: 74, scope: !4033)
!4043 = !DILocalVariable(name: "bits_per_raw_sample", scope: !4033, file: !953, line: 539, type: !923)
!4044 = !DILocation(line: 539, column: 86, scope: !4033)
!4045 = !DILocalVariable(name: "v", scope: !4033, file: !953, line: 540, type: !924)
!4046 = !DILocation(line: 540, column: 18, scope: !4033)
!4047 = !DILocation(line: 540, column: 32, scope: !4033)
!4048 = !DILocation(line: 540, column: 35, scope: !4033)
!4049 = !DILocation(line: 540, column: 21, scope: !4033)
!4050 = !DILocation(line: 541, column: 13, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4033, file: !953, line: 541, column: 13)
!4052 = !DILocation(line: 541, column: 15, scope: !4051)
!4053 = !DILocation(line: 541, column: 13, scope: !4033)
!4054 = !DILocation(line: 542, column: 20, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4051, file: !953, line: 541, column: 21)
!4056 = !DILocation(line: 542, column: 23, scope: !4055)
!4057 = !DILocation(line: 542, column: 74, scope: !4055)
!4058 = !DILocation(line: 542, column: 13, scope: !4055)
!4059 = !DILocation(line: 543, column: 13, scope: !4055)
!4060 = !DILocation(line: 545, column: 22, scope: !4033)
!4061 = !DILocation(line: 545, column: 9, scope: !4033)
!4062 = !DILocation(line: 545, column: 12, scope: !4033)
!4063 = !DILocation(line: 545, column: 20, scope: !4033)
!4064 = !DILocation(line: 546, column: 28, scope: !4033)
!4065 = !DILocation(line: 546, column: 31, scope: !4033)
!4066 = !DILocation(line: 546, column: 17, scope: !4033)
!4067 = !DILocation(line: 546, column: 9, scope: !4033)
!4068 = !DILocation(line: 546, column: 12, scope: !4033)
!4069 = !DILocation(line: 546, column: 15, scope: !4033)
!4070 = !DILocation(line: 548, column: 13, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4033, file: !953, line: 548, column: 13)
!4072 = !DILocation(line: 548, column: 16, scope: !4071)
!4073 = !DILocation(line: 548, column: 19, scope: !4071)
!4074 = !DILocation(line: 548, column: 13, scope: !4033)
!4075 = !DILocation(line: 549, column: 20, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4077, file: !953, line: 549, column: 13)
!4077 = distinct !DILexicalBlock(scope: !4071, file: !953, line: 548, column: 25)
!4078 = !DILocation(line: 549, column: 18, scope: !4076)
!4079 = !DILocation(line: 549, column: 25, scope: !4080)
!4080 = !DILexicalBlockFile(scope: !4081, file: !953, discriminator: 1)
!4081 = distinct !DILexicalBlock(scope: !4076, file: !953, line: 549, column: 13)
!4082 = !DILocation(line: 549, column: 27, scope: !4080)
!4083 = !DILocation(line: 549, column: 13, scope: !4080)
!4084 = !DILocalVariable(name: "st", scope: !4085, file: !953, line: 550, type: !923)
!4085 = distinct !DILexicalBlock(scope: !4081, file: !953, line: 549, column: 39)
!4086 = !DILocation(line: 550, column: 21, scope: !4085)
!4087 = !DILocation(line: 550, column: 37, scope: !4085)
!4088 = !DILocation(line: 550, column: 40, scope: !4085)
!4089 = !DILocation(line: 550, column: 26, scope: !4085)
!4090 = !DILocation(line: 550, column: 65, scope: !4085)
!4091 = !DILocation(line: 550, column: 52, scope: !4085)
!4092 = !DILocation(line: 550, column: 55, scope: !4085)
!4093 = !DILocation(line: 550, column: 50, scope: !4085)
!4094 = !DILocation(line: 551, column: 21, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4085, file: !953, line: 551, column: 21)
!4096 = !DILocation(line: 551, column: 24, scope: !4095)
!4097 = !DILocation(line: 551, column: 28, scope: !4095)
!4098 = !DILocation(line: 551, column: 31, scope: !4099)
!4099 = !DILexicalBlockFile(scope: !4095, file: !953, discriminator: 1)
!4100 = !DILocation(line: 551, column: 34, scope: !4099)
!4101 = !DILocation(line: 551, column: 21, scope: !4099)
!4102 = !DILocation(line: 552, column: 28, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4095, file: !953, line: 551, column: 41)
!4104 = !DILocation(line: 552, column: 31, scope: !4103)
!4105 = !DILocation(line: 552, column: 75, scope: !4103)
!4106 = !DILocation(line: 552, column: 21, scope: !4103)
!4107 = !DILocation(line: 553, column: 21, scope: !4103)
!4108 = !DILocation(line: 555, column: 42, scope: !4085)
!4109 = !DILocation(line: 555, column: 37, scope: !4085)
!4110 = !DILocation(line: 555, column: 17, scope: !4085)
!4111 = !DILocation(line: 555, column: 20, scope: !4085)
!4112 = !DILocation(line: 555, column: 40, scope: !4085)
!4113 = !DILocation(line: 556, column: 13, scope: !4085)
!4114 = !DILocation(line: 549, column: 35, scope: !4115)
!4115 = !DILexicalBlockFile(scope: !4081, file: !953, discriminator: 2)
!4116 = !DILocation(line: 549, column: 13, scope: !4115)
!4117 = distinct !{!4117, !4118}
!4118 = !DILocation(line: 549, column: 13, scope: !4077)
!4119 = !DILocation(line: 557, column: 9, scope: !4077)
!4120 = !DILocation(line: 559, column: 33, scope: !4033)
!4121 = !DILocation(line: 559, column: 36, scope: !4033)
!4122 = !DILocation(line: 559, column: 22, scope: !4033)
!4123 = !DILocation(line: 559, column: 20, scope: !4033)
!4124 = !DILocation(line: 560, column: 31, scope: !4033)
!4125 = !DILocation(line: 560, column: 34, scope: !4033)
!4126 = !DILocation(line: 560, column: 42, scope: !4033)
!4127 = !DILocation(line: 560, column: 59, scope: !4128)
!4128 = !DILexicalBlockFile(scope: !4033, file: !953, discriminator: 1)
!4129 = !DILocation(line: 560, column: 62, scope: !4128)
!4130 = !DILocation(line: 560, column: 48, scope: !4128)
!4131 = !DILocation(line: 560, column: 31, scope: !4128)
!4132 = !DILocation(line: 560, column: 74, scope: !4133)
!4133 = !DILexicalBlockFile(scope: !4033, file: !953, discriminator: 2)
!4134 = !DILocation(line: 560, column: 77, scope: !4133)
!4135 = !DILocation(line: 560, column: 84, scope: !4133)
!4136 = !DILocation(line: 560, column: 31, scope: !4133)
!4137 = !DILocation(line: 560, column: 31, scope: !4138)
!4138 = !DILexicalBlockFile(scope: !4033, file: !953, discriminator: 3)
!4139 = !DILocation(line: 560, column: 29, scope: !4138)
!4140 = !DILocation(line: 561, column: 33, scope: !4033)
!4141 = !DILocation(line: 561, column: 36, scope: !4033)
!4142 = !DILocation(line: 561, column: 25, scope: !4033)
!4143 = !DILocation(line: 561, column: 23, scope: !4033)
!4144 = !DILocation(line: 562, column: 37, scope: !4033)
!4145 = !DILocation(line: 562, column: 40, scope: !4033)
!4146 = !DILocation(line: 562, column: 26, scope: !4033)
!4147 = !DILocation(line: 562, column: 24, scope: !4033)
!4148 = !DILocation(line: 563, column: 37, scope: !4033)
!4149 = !DILocation(line: 563, column: 40, scope: !4033)
!4150 = !DILocation(line: 563, column: 26, scope: !4033)
!4151 = !DILocation(line: 563, column: 24, scope: !4033)
!4152 = !DILocation(line: 564, column: 32, scope: !4033)
!4153 = !DILocation(line: 564, column: 35, scope: !4033)
!4154 = !DILocation(line: 564, column: 24, scope: !4033)
!4155 = !DILocation(line: 564, column: 22, scope: !4033)
!4156 = !DILocation(line: 565, column: 13, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4033, file: !953, line: 565, column: 13)
!4158 = !DILocation(line: 565, column: 24, scope: !4157)
!4159 = !DILocation(line: 565, column: 29, scope: !4157)
!4160 = !DILocation(line: 565, column: 32, scope: !4161)
!4161 = !DILexicalBlockFile(scope: !4157, file: !953, discriminator: 1)
!4162 = !DILocation(line: 565, column: 35, scope: !4161)
!4163 = !DILocation(line: 565, column: 42, scope: !4161)
!4164 = !DILocation(line: 565, column: 13, scope: !4161)
!4165 = !DILocation(line: 566, column: 26, scope: !4157)
!4166 = !DILocation(line: 566, column: 13, scope: !4157)
!4167 = !DILocation(line: 568, column: 13, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4033, file: !953, line: 568, column: 13)
!4169 = !DILocation(line: 568, column: 16, scope: !4168)
!4170 = !DILocation(line: 568, column: 13, scope: !4033)
!4171 = !DILocation(line: 569, column: 17, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !953, line: 569, column: 17)
!4173 = distinct !DILexicalBlock(scope: !4168, file: !953, line: 568, column: 29)
!4174 = !DILocation(line: 569, column: 31, scope: !4172)
!4175 = !DILocation(line: 569, column: 34, scope: !4172)
!4176 = !DILocation(line: 569, column: 28, scope: !4172)
!4177 = !DILocation(line: 569, column: 45, scope: !4172)
!4178 = !DILocation(line: 570, column: 17, scope: !4172)
!4179 = !DILocation(line: 570, column: 40, scope: !4172)
!4180 = !DILocation(line: 570, column: 43, scope: !4172)
!4181 = !DILocation(line: 570, column: 50, scope: !4172)
!4182 = !DILocation(line: 570, column: 37, scope: !4172)
!4183 = !DILocation(line: 570, column: 70, scope: !4172)
!4184 = !DILocation(line: 571, column: 17, scope: !4172)
!4185 = !DILocation(line: 571, column: 34, scope: !4172)
!4186 = !DILocation(line: 571, column: 37, scope: !4172)
!4187 = !DILocation(line: 571, column: 31, scope: !4172)
!4188 = !DILocation(line: 571, column: 51, scope: !4172)
!4189 = !DILocation(line: 572, column: 17, scope: !4172)
!4190 = !DILocation(line: 572, column: 35, scope: !4172)
!4191 = !DILocation(line: 572, column: 38, scope: !4172)
!4192 = !DILocation(line: 572, column: 32, scope: !4172)
!4193 = !DILocation(line: 572, column: 53, scope: !4172)
!4194 = !DILocation(line: 573, column: 17, scope: !4172)
!4195 = !DILocation(line: 573, column: 35, scope: !4172)
!4196 = !DILocation(line: 573, column: 38, scope: !4172)
!4197 = !DILocation(line: 573, column: 32, scope: !4172)
!4198 = !DILocation(line: 573, column: 53, scope: !4172)
!4199 = !DILocation(line: 574, column: 17, scope: !4172)
!4200 = !DILocation(line: 574, column: 33, scope: !4172)
!4201 = !DILocation(line: 574, column: 36, scope: !4172)
!4202 = !DILocation(line: 574, column: 30, scope: !4172)
!4203 = !DILocation(line: 569, column: 17, scope: !4204)
!4204 = !DILexicalBlockFile(scope: !4173, file: !953, discriminator: 1)
!4205 = !DILocation(line: 575, column: 24, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4172, file: !953, line: 574, column: 50)
!4207 = !DILocation(line: 575, column: 27, scope: !4206)
!4208 = !DILocation(line: 575, column: 17, scope: !4206)
!4209 = !DILocation(line: 576, column: 17, scope: !4206)
!4210 = !DILocation(line: 578, column: 9, scope: !4173)
!4211 = !DILocation(line: 580, column: 13, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4033, file: !953, line: 580, column: 13)
!4213 = !DILocation(line: 580, column: 28, scope: !4212)
!4214 = !DILocation(line: 580, column: 33, scope: !4212)
!4215 = !DILocation(line: 580, column: 36, scope: !4216)
!4216 = !DILexicalBlockFile(scope: !4212, file: !953, discriminator: 1)
!4217 = !DILocation(line: 580, column: 51, scope: !4216)
!4218 = !DILocation(line: 580, column: 13, scope: !4216)
!4219 = !DILocation(line: 581, column: 20, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4212, file: !953, line: 580, column: 57)
!4221 = !DILocation(line: 581, column: 23, scope: !4220)
!4222 = !DILocation(line: 582, column: 20, scope: !4220)
!4223 = !DILocation(line: 582, column: 36, scope: !4220)
!4224 = !DILocation(line: 581, column: 13, scope: !4220)
!4225 = !DILocation(line: 583, column: 13, scope: !4220)
!4226 = !DILocation(line: 586, column: 25, scope: !4033)
!4227 = !DILocation(line: 586, column: 9, scope: !4033)
!4228 = !DILocation(line: 586, column: 12, scope: !4033)
!4229 = !DILocation(line: 586, column: 23, scope: !4033)
!4230 = !DILocation(line: 587, column: 41, scope: !4033)
!4231 = !DILocation(line: 587, column: 9, scope: !4033)
!4232 = !DILocation(line: 587, column: 12, scope: !4033)
!4233 = !DILocation(line: 587, column: 19, scope: !4033)
!4234 = !DILocation(line: 587, column: 39, scope: !4033)
!4235 = !DILocation(line: 588, column: 28, scope: !4033)
!4236 = !DILocation(line: 588, column: 9, scope: !4033)
!4237 = !DILocation(line: 588, column: 12, scope: !4033)
!4238 = !DILocation(line: 588, column: 26, scope: !4033)
!4239 = !DILocation(line: 589, column: 29, scope: !4033)
!4240 = !DILocation(line: 589, column: 9, scope: !4033)
!4241 = !DILocation(line: 589, column: 12, scope: !4033)
!4242 = !DILocation(line: 589, column: 27, scope: !4033)
!4243 = !DILocation(line: 590, column: 29, scope: !4033)
!4244 = !DILocation(line: 590, column: 9, scope: !4033)
!4245 = !DILocation(line: 590, column: 12, scope: !4033)
!4246 = !DILocation(line: 590, column: 27, scope: !4033)
!4247 = !DILocation(line: 591, column: 27, scope: !4033)
!4248 = !DILocation(line: 591, column: 9, scope: !4033)
!4249 = !DILocation(line: 591, column: 12, scope: !4033)
!4250 = !DILocation(line: 591, column: 25, scope: !4033)
!4251 = !DILocation(line: 593, column: 30, scope: !4033)
!4252 = !DILocation(line: 593, column: 33, scope: !4033)
!4253 = !DILocation(line: 593, column: 28, scope: !4033)
!4254 = !DILocation(line: 593, column: 9, scope: !4033)
!4255 = !DILocation(line: 593, column: 12, scope: !4033)
!4256 = !DILocation(line: 593, column: 24, scope: !4033)
!4257 = !DILocation(line: 594, column: 5, scope: !4033)
!4258 = !DILocation(line: 596, column: 9, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4010, file: !953, line: 596, column: 9)
!4260 = !DILocation(line: 596, column: 12, scope: !4259)
!4261 = !DILocation(line: 596, column: 23, scope: !4259)
!4262 = !DILocation(line: 596, column: 9, scope: !4010)
!4263 = !DILocation(line: 597, column: 14, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4265, file: !953, line: 597, column: 13)
!4265 = distinct !DILexicalBlock(scope: !4259, file: !953, line: 596, column: 29)
!4266 = !DILocation(line: 597, column: 17, scope: !4264)
!4267 = !DILocation(line: 597, column: 30, scope: !4264)
!4268 = !DILocation(line: 597, column: 34, scope: !4269)
!4269 = !DILexicalBlockFile(scope: !4264, file: !953, discriminator: 1)
!4270 = !DILocation(line: 597, column: 37, scope: !4269)
!4271 = !DILocation(line: 597, column: 13, scope: !4269)
!4272 = !DILocation(line: 598, column: 17, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4274, file: !953, line: 598, column: 17)
!4274 = distinct !DILexicalBlock(scope: !4264, file: !953, line: 597, column: 52)
!4275 = !DILocation(line: 598, column: 20, scope: !4273)
!4276 = !DILocation(line: 598, column: 27, scope: !4273)
!4277 = !DILocation(line: 598, column: 47, scope: !4273)
!4278 = !DILocation(line: 598, column: 17, scope: !4274)
!4279 = !DILocation(line: 599, column: 17, scope: !4273)
!4280 = !DILocation(line: 599, column: 20, scope: !4273)
!4281 = !DILocation(line: 599, column: 27, scope: !4273)
!4282 = !DILocation(line: 599, column: 35, scope: !4273)
!4283 = !DILocation(line: 600, column: 22, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4273, file: !953, line: 600, column: 22)
!4285 = !DILocation(line: 600, column: 25, scope: !4284)
!4286 = !DILocation(line: 600, column: 32, scope: !4284)
!4287 = !DILocation(line: 600, column: 52, scope: !4284)
!4288 = !DILocation(line: 600, column: 22, scope: !4273)
!4289 = !DILocation(line: 601, column: 17, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4284, file: !953, line: 600, column: 58)
!4291 = !DILocation(line: 601, column: 20, scope: !4290)
!4292 = !DILocation(line: 601, column: 34, scope: !4290)
!4293 = !DILocation(line: 602, column: 17, scope: !4290)
!4294 = !DILocation(line: 602, column: 20, scope: !4290)
!4295 = !DILocation(line: 602, column: 27, scope: !4290)
!4296 = !DILocation(line: 602, column: 35, scope: !4290)
!4297 = !DILocation(line: 603, column: 13, scope: !4290)
!4298 = !DILocation(line: 603, column: 24, scope: !4299)
!4299 = !DILexicalBlockFile(scope: !4300, file: !953, discriminator: 1)
!4300 = distinct !DILexicalBlock(scope: !4284, file: !953, line: 603, column: 24)
!4301 = !DILocation(line: 603, column: 27, scope: !4299)
!4302 = !DILocation(line: 603, column: 34, scope: !4299)
!4303 = !DILocation(line: 603, column: 54, scope: !4299)
!4304 = !DILocation(line: 604, column: 17, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4300, file: !953, line: 603, column: 61)
!4306 = !DILocation(line: 604, column: 20, scope: !4305)
!4307 = !DILocation(line: 604, column: 34, scope: !4305)
!4308 = !DILocation(line: 605, column: 17, scope: !4305)
!4309 = !DILocation(line: 605, column: 20, scope: !4305)
!4310 = !DILocation(line: 605, column: 27, scope: !4305)
!4311 = !DILocation(line: 605, column: 35, scope: !4305)
!4312 = !DILocation(line: 606, column: 13, scope: !4305)
!4313 = !DILocation(line: 606, column: 24, scope: !4314)
!4314 = !DILexicalBlockFile(scope: !4315, file: !953, discriminator: 1)
!4315 = distinct !DILexicalBlock(scope: !4300, file: !953, line: 606, column: 24)
!4316 = !DILocation(line: 606, column: 27, scope: !4314)
!4317 = !DILocation(line: 606, column: 34, scope: !4314)
!4318 = !DILocation(line: 606, column: 54, scope: !4314)
!4319 = !DILocation(line: 607, column: 17, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4315, file: !953, line: 606, column: 61)
!4321 = !DILocation(line: 607, column: 20, scope: !4320)
!4322 = !DILocation(line: 607, column: 34, scope: !4320)
!4323 = !DILocation(line: 608, column: 17, scope: !4320)
!4324 = !DILocation(line: 608, column: 20, scope: !4320)
!4325 = !DILocation(line: 608, column: 27, scope: !4320)
!4326 = !DILocation(line: 608, column: 35, scope: !4320)
!4327 = !DILocation(line: 609, column: 13, scope: !4320)
!4328 = !DILocation(line: 609, column: 24, scope: !4329)
!4329 = !DILexicalBlockFile(scope: !4330, file: !953, discriminator: 1)
!4330 = distinct !DILexicalBlock(scope: !4315, file: !953, line: 609, column: 24)
!4331 = !DILocation(line: 609, column: 27, scope: !4329)
!4332 = !DILocation(line: 609, column: 34, scope: !4329)
!4333 = !DILocation(line: 609, column: 54, scope: !4329)
!4334 = !DILocation(line: 610, column: 17, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4330, file: !953, line: 609, column: 61)
!4336 = !DILocation(line: 610, column: 20, scope: !4335)
!4337 = !DILocation(line: 610, column: 34, scope: !4335)
!4338 = !DILocation(line: 611, column: 17, scope: !4335)
!4339 = !DILocation(line: 611, column: 20, scope: !4335)
!4340 = !DILocation(line: 611, column: 27, scope: !4335)
!4341 = !DILocation(line: 611, column: 35, scope: !4335)
!4342 = !DILocation(line: 612, column: 13, scope: !4335)
!4343 = !DILocation(line: 612, column: 24, scope: !4344)
!4344 = !DILexicalBlockFile(scope: !4345, file: !953, discriminator: 1)
!4345 = distinct !DILexicalBlock(scope: !4330, file: !953, line: 612, column: 24)
!4346 = !DILocation(line: 612, column: 27, scope: !4344)
!4347 = !DILocation(line: 612, column: 34, scope: !4344)
!4348 = !DILocation(line: 612, column: 54, scope: !4344)
!4349 = !DILocation(line: 613, column: 17, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4345, file: !953, line: 612, column: 60)
!4351 = !DILocation(line: 613, column: 20, scope: !4350)
!4352 = !DILocation(line: 613, column: 27, scope: !4350)
!4353 = !DILocation(line: 613, column: 35, scope: !4350)
!4354 = !DILocation(line: 614, column: 13, scope: !4350)
!4355 = !DILocation(line: 615, column: 17, scope: !4345)
!4356 = !DILocation(line: 616, column: 9, scope: !4274)
!4357 = !DILocation(line: 616, column: 20, scope: !4358)
!4358 = !DILexicalBlockFile(scope: !4359, file: !953, discriminator: 1)
!4359 = distinct !DILexicalBlock(scope: !4264, file: !953, line: 616, column: 20)
!4360 = !DILocation(line: 616, column: 23, scope: !4358)
!4361 = !DILocation(line: 616, column: 36, scope: !4358)
!4362 = !DILocation(line: 616, column: 40, scope: !4363)
!4363 = !DILexicalBlockFile(scope: !4359, file: !953, discriminator: 2)
!4364 = !DILocation(line: 616, column: 43, scope: !4363)
!4365 = !DILocation(line: 616, column: 20, scope: !4363)
!4366 = !DILocation(line: 617, column: 17, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !953, line: 617, column: 17)
!4368 = distinct !DILexicalBlock(scope: !4359, file: !953, line: 616, column: 58)
!4369 = !DILocation(line: 617, column: 20, scope: !4367)
!4370 = !DILocation(line: 617, column: 27, scope: !4367)
!4371 = !DILocation(line: 617, column: 47, scope: !4367)
!4372 = !DILocation(line: 617, column: 17, scope: !4368)
!4373 = !DILocation(line: 618, column: 17, scope: !4367)
!4374 = !DILocation(line: 618, column: 20, scope: !4367)
!4375 = !DILocation(line: 618, column: 27, scope: !4367)
!4376 = !DILocation(line: 618, column: 35, scope: !4367)
!4377 = !DILocation(line: 620, column: 17, scope: !4367)
!4378 = !DILocation(line: 621, column: 9, scope: !4368)
!4379 = !DILocation(line: 621, column: 20, scope: !4380)
!4380 = !DILexicalBlockFile(scope: !4381, file: !953, discriminator: 1)
!4381 = distinct !DILexicalBlock(scope: !4359, file: !953, line: 621, column: 20)
!4382 = !DILocation(line: 621, column: 23, scope: !4380)
!4383 = !DILocation(line: 621, column: 30, scope: !4380)
!4384 = !DILocation(line: 621, column: 49, scope: !4380)
!4385 = !DILocation(line: 621, column: 53, scope: !4380)
!4386 = !DILocation(line: 621, column: 57, scope: !4387)
!4387 = !DILexicalBlockFile(scope: !4381, file: !953, discriminator: 2)
!4388 = !DILocation(line: 621, column: 60, scope: !4387)
!4389 = !DILocation(line: 621, column: 20, scope: !4387)
!4390 = !DILocation(line: 622, column: 25, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4381, file: !953, line: 621, column: 74)
!4392 = !DILocation(line: 622, column: 28, scope: !4391)
!4393 = !DILocation(line: 622, column: 23, scope: !4391)
!4394 = !DILocation(line: 622, column: 45, scope: !4391)
!4395 = !DILocation(line: 622, column: 48, scope: !4391)
!4396 = !DILocation(line: 622, column: 43, scope: !4391)
!4397 = !DILocation(line: 622, column: 13, scope: !4391)
!4398 = !DILocation(line: 623, column: 24, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4391, file: !953, line: 622, column: 64)
!4400 = !DILocation(line: 623, column: 27, scope: !4399)
!4401 = !DILocation(line: 623, column: 34, scope: !4399)
!4402 = !DILocation(line: 623, column: 42, scope: !4399)
!4403 = !DILocation(line: 623, column: 64, scope: !4399)
!4404 = !DILocation(line: 624, column: 24, scope: !4399)
!4405 = !DILocation(line: 624, column: 27, scope: !4399)
!4406 = !DILocation(line: 624, column: 34, scope: !4399)
!4407 = !DILocation(line: 624, column: 42, scope: !4399)
!4408 = !DILocation(line: 624, column: 64, scope: !4399)
!4409 = !DILocation(line: 625, column: 24, scope: !4399)
!4410 = !DILocation(line: 625, column: 27, scope: !4399)
!4411 = !DILocation(line: 625, column: 34, scope: !4399)
!4412 = !DILocation(line: 625, column: 42, scope: !4399)
!4413 = !DILocation(line: 625, column: 64, scope: !4399)
!4414 = !DILocation(line: 626, column: 24, scope: !4399)
!4415 = !DILocation(line: 626, column: 27, scope: !4399)
!4416 = !DILocation(line: 626, column: 34, scope: !4399)
!4417 = !DILocation(line: 626, column: 42, scope: !4399)
!4418 = !DILocation(line: 626, column: 64, scope: !4399)
!4419 = !DILocation(line: 627, column: 24, scope: !4399)
!4420 = !DILocation(line: 627, column: 27, scope: !4399)
!4421 = !DILocation(line: 627, column: 34, scope: !4399)
!4422 = !DILocation(line: 627, column: 42, scope: !4399)
!4423 = !DILocation(line: 627, column: 64, scope: !4399)
!4424 = !DILocation(line: 628, column: 24, scope: !4399)
!4425 = !DILocation(line: 628, column: 27, scope: !4399)
!4426 = !DILocation(line: 628, column: 34, scope: !4399)
!4427 = !DILocation(line: 628, column: 42, scope: !4399)
!4428 = !DILocation(line: 628, column: 64, scope: !4399)
!4429 = !DILocation(line: 630, column: 9, scope: !4391)
!4430 = !DILocation(line: 630, column: 20, scope: !4431)
!4431 = !DILexicalBlockFile(scope: !4432, file: !953, discriminator: 1)
!4432 = distinct !DILexicalBlock(scope: !4381, file: !953, line: 630, column: 20)
!4433 = !DILocation(line: 630, column: 23, scope: !4431)
!4434 = !DILocation(line: 630, column: 30, scope: !4431)
!4435 = !DILocation(line: 630, column: 50, scope: !4431)
!4436 = !DILocation(line: 630, column: 55, scope: !4431)
!4437 = !DILocation(line: 630, column: 58, scope: !4438)
!4438 = !DILexicalBlockFile(scope: !4432, file: !953, discriminator: 2)
!4439 = !DILocation(line: 630, column: 61, scope: !4438)
!4440 = !DILocation(line: 630, column: 20, scope: !4438)
!4441 = !DILocation(line: 631, column: 23, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4432, file: !953, line: 630, column: 75)
!4443 = !DILocation(line: 631, column: 26, scope: !4442)
!4444 = !DILocation(line: 631, column: 22, scope: !4442)
!4445 = !DILocation(line: 631, column: 43, scope: !4442)
!4446 = !DILocation(line: 631, column: 46, scope: !4442)
!4447 = !DILocation(line: 631, column: 41, scope: !4442)
!4448 = !DILocation(line: 631, column: 13, scope: !4442)
!4449 = !DILocation(line: 632, column: 24, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4442, file: !953, line: 631, column: 62)
!4451 = !DILocation(line: 632, column: 27, scope: !4450)
!4452 = !DILocation(line: 632, column: 34, scope: !4450)
!4453 = !DILocation(line: 632, column: 42, scope: !4450)
!4454 = !DILocation(line: 632, column: 65, scope: !4450)
!4455 = !DILocation(line: 633, column: 24, scope: !4450)
!4456 = !DILocation(line: 633, column: 27, scope: !4450)
!4457 = !DILocation(line: 633, column: 34, scope: !4450)
!4458 = !DILocation(line: 633, column: 42, scope: !4450)
!4459 = !DILocation(line: 633, column: 65, scope: !4450)
!4460 = !DILocation(line: 634, column: 24, scope: !4450)
!4461 = !DILocation(line: 634, column: 27, scope: !4450)
!4462 = !DILocation(line: 634, column: 34, scope: !4450)
!4463 = !DILocation(line: 634, column: 42, scope: !4450)
!4464 = !DILocation(line: 634, column: 65, scope: !4450)
!4465 = !DILocation(line: 636, column: 9, scope: !4442)
!4466 = !DILocation(line: 636, column: 20, scope: !4467)
!4467 = !DILexicalBlockFile(scope: !4468, file: !953, discriminator: 1)
!4468 = distinct !DILexicalBlock(scope: !4432, file: !953, line: 636, column: 20)
!4469 = !DILocation(line: 636, column: 23, scope: !4467)
!4470 = !DILocation(line: 636, column: 30, scope: !4467)
!4471 = !DILocation(line: 636, column: 50, scope: !4467)
!4472 = !DILocation(line: 636, column: 55, scope: !4467)
!4473 = !DILocation(line: 636, column: 59, scope: !4474)
!4474 = !DILexicalBlockFile(scope: !4468, file: !953, discriminator: 2)
!4475 = !DILocation(line: 636, column: 62, scope: !4474)
!4476 = !DILocation(line: 636, column: 20, scope: !4474)
!4477 = !DILocation(line: 637, column: 13, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4468, file: !953, line: 636, column: 76)
!4479 = !DILocation(line: 637, column: 16, scope: !4478)
!4480 = !DILocation(line: 637, column: 30, scope: !4478)
!4481 = !DILocation(line: 638, column: 25, scope: !4478)
!4482 = !DILocation(line: 638, column: 28, scope: !4478)
!4483 = !DILocation(line: 638, column: 23, scope: !4478)
!4484 = !DILocation(line: 638, column: 45, scope: !4478)
!4485 = !DILocation(line: 638, column: 48, scope: !4478)
!4486 = !DILocation(line: 638, column: 43, scope: !4478)
!4487 = !DILocation(line: 638, column: 13, scope: !4478)
!4488 = !DILocation(line: 639, column: 24, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4478, file: !953, line: 638, column: 64)
!4490 = !DILocation(line: 639, column: 27, scope: !4489)
!4491 = !DILocation(line: 639, column: 34, scope: !4489)
!4492 = !DILocation(line: 639, column: 42, scope: !4489)
!4493 = !DILocation(line: 639, column: 67, scope: !4489)
!4494 = !DILocation(line: 640, column: 24, scope: !4489)
!4495 = !DILocation(line: 640, column: 27, scope: !4489)
!4496 = !DILocation(line: 640, column: 34, scope: !4489)
!4497 = !DILocation(line: 640, column: 42, scope: !4489)
!4498 = !DILocation(line: 640, column: 67, scope: !4489)
!4499 = !DILocation(line: 641, column: 24, scope: !4489)
!4500 = !DILocation(line: 641, column: 27, scope: !4489)
!4501 = !DILocation(line: 641, column: 34, scope: !4489)
!4502 = !DILocation(line: 641, column: 42, scope: !4489)
!4503 = !DILocation(line: 641, column: 67, scope: !4489)
!4504 = !DILocation(line: 643, column: 9, scope: !4478)
!4505 = !DILocation(line: 643, column: 20, scope: !4506)
!4506 = !DILexicalBlockFile(scope: !4507, file: !953, discriminator: 1)
!4507 = distinct !DILexicalBlock(scope: !4468, file: !953, line: 643, column: 20)
!4508 = !DILocation(line: 643, column: 23, scope: !4506)
!4509 = !DILocation(line: 643, column: 30, scope: !4506)
!4510 = !DILocation(line: 643, column: 50, scope: !4506)
!4511 = !DILocation(line: 643, column: 55, scope: !4506)
!4512 = !DILocation(line: 643, column: 58, scope: !4513)
!4513 = !DILexicalBlockFile(scope: !4507, file: !953, discriminator: 2)
!4514 = !DILocation(line: 643, column: 61, scope: !4513)
!4515 = !DILocation(line: 643, column: 20, scope: !4513)
!4516 = !DILocation(line: 644, column: 13, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4507, file: !953, line: 643, column: 75)
!4518 = !DILocation(line: 644, column: 16, scope: !4517)
!4519 = !DILocation(line: 644, column: 30, scope: !4517)
!4520 = !DILocation(line: 645, column: 25, scope: !4517)
!4521 = !DILocation(line: 645, column: 28, scope: !4517)
!4522 = !DILocation(line: 645, column: 23, scope: !4517)
!4523 = !DILocation(line: 645, column: 45, scope: !4517)
!4524 = !DILocation(line: 645, column: 48, scope: !4517)
!4525 = !DILocation(line: 645, column: 43, scope: !4517)
!4526 = !DILocation(line: 645, column: 13, scope: !4517)
!4527 = !DILocation(line: 646, column: 24, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4517, file: !953, line: 645, column: 64)
!4529 = !DILocation(line: 646, column: 27, scope: !4528)
!4530 = !DILocation(line: 646, column: 34, scope: !4528)
!4531 = !DILocation(line: 646, column: 42, scope: !4528)
!4532 = !DILocation(line: 646, column: 68, scope: !4528)
!4533 = !DILocation(line: 647, column: 24, scope: !4528)
!4534 = !DILocation(line: 647, column: 27, scope: !4528)
!4535 = !DILocation(line: 647, column: 34, scope: !4528)
!4536 = !DILocation(line: 647, column: 42, scope: !4528)
!4537 = !DILocation(line: 647, column: 68, scope: !4528)
!4538 = !DILocation(line: 648, column: 24, scope: !4528)
!4539 = !DILocation(line: 648, column: 27, scope: !4528)
!4540 = !DILocation(line: 648, column: 34, scope: !4528)
!4541 = !DILocation(line: 648, column: 42, scope: !4528)
!4542 = !DILocation(line: 648, column: 68, scope: !4528)
!4543 = !DILocation(line: 650, column: 9, scope: !4517)
!4544 = !DILocation(line: 650, column: 20, scope: !4545)
!4545 = !DILexicalBlockFile(scope: !4546, file: !953, discriminator: 1)
!4546 = distinct !DILexicalBlock(scope: !4507, file: !953, line: 650, column: 20)
!4547 = !DILocation(line: 650, column: 23, scope: !4545)
!4548 = !DILocation(line: 650, column: 30, scope: !4545)
!4549 = !DILocation(line: 650, column: 50, scope: !4545)
!4550 = !DILocation(line: 650, column: 56, scope: !4545)
!4551 = !DILocation(line: 650, column: 60, scope: !4552)
!4552 = !DILexicalBlockFile(scope: !4546, file: !953, discriminator: 2)
!4553 = !DILocation(line: 650, column: 63, scope: !4552)
!4554 = !DILocation(line: 650, column: 20, scope: !4552)
!4555 = !DILocation(line: 651, column: 13, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4546, file: !953, line: 650, column: 77)
!4557 = !DILocation(line: 651, column: 16, scope: !4556)
!4558 = !DILocation(line: 651, column: 30, scope: !4556)
!4559 = !DILocation(line: 652, column: 25, scope: !4556)
!4560 = !DILocation(line: 652, column: 28, scope: !4556)
!4561 = !DILocation(line: 652, column: 23, scope: !4556)
!4562 = !DILocation(line: 652, column: 45, scope: !4556)
!4563 = !DILocation(line: 652, column: 48, scope: !4556)
!4564 = !DILocation(line: 652, column: 43, scope: !4556)
!4565 = !DILocation(line: 652, column: 13, scope: !4556)
!4566 = !DILocation(line: 653, column: 24, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4556, file: !953, line: 652, column: 64)
!4568 = !DILocation(line: 653, column: 27, scope: !4567)
!4569 = !DILocation(line: 653, column: 34, scope: !4567)
!4570 = !DILocation(line: 653, column: 42, scope: !4567)
!4571 = !DILocation(line: 653, column: 68, scope: !4567)
!4572 = !DILocation(line: 654, column: 24, scope: !4567)
!4573 = !DILocation(line: 654, column: 27, scope: !4567)
!4574 = !DILocation(line: 654, column: 34, scope: !4567)
!4575 = !DILocation(line: 654, column: 42, scope: !4567)
!4576 = !DILocation(line: 654, column: 68, scope: !4567)
!4577 = !DILocation(line: 655, column: 24, scope: !4567)
!4578 = !DILocation(line: 655, column: 27, scope: !4567)
!4579 = !DILocation(line: 655, column: 34, scope: !4567)
!4580 = !DILocation(line: 655, column: 42, scope: !4567)
!4581 = !DILocation(line: 655, column: 68, scope: !4567)
!4582 = !DILocation(line: 656, column: 24, scope: !4567)
!4583 = !DILocation(line: 656, column: 27, scope: !4567)
!4584 = !DILocation(line: 656, column: 34, scope: !4567)
!4585 = !DILocation(line: 656, column: 42, scope: !4567)
!4586 = !DILocation(line: 656, column: 68, scope: !4567)
!4587 = !DILocation(line: 658, column: 9, scope: !4556)
!4588 = !DILocation(line: 658, column: 20, scope: !4589)
!4589 = !DILexicalBlockFile(scope: !4590, file: !953, discriminator: 1)
!4590 = distinct !DILexicalBlock(scope: !4546, file: !953, line: 658, column: 20)
!4591 = !DILocation(line: 658, column: 23, scope: !4589)
!4592 = !DILocation(line: 658, column: 30, scope: !4589)
!4593 = !DILocation(line: 658, column: 50, scope: !4589)
!4594 = !DILocation(line: 658, column: 56, scope: !4589)
!4595 = !DILocation(line: 658, column: 59, scope: !4596)
!4596 = !DILexicalBlockFile(scope: !4590, file: !953, discriminator: 2)
!4597 = !DILocation(line: 658, column: 62, scope: !4596)
!4598 = !DILocation(line: 658, column: 20, scope: !4596)
!4599 = !DILocation(line: 659, column: 13, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4590, file: !953, line: 658, column: 76)
!4601 = !DILocation(line: 659, column: 16, scope: !4600)
!4602 = !DILocation(line: 659, column: 30, scope: !4600)
!4603 = !DILocation(line: 660, column: 25, scope: !4600)
!4604 = !DILocation(line: 660, column: 28, scope: !4600)
!4605 = !DILocation(line: 660, column: 23, scope: !4600)
!4606 = !DILocation(line: 660, column: 45, scope: !4600)
!4607 = !DILocation(line: 660, column: 48, scope: !4600)
!4608 = !DILocation(line: 660, column: 43, scope: !4600)
!4609 = !DILocation(line: 660, column: 13, scope: !4600)
!4610 = !DILocation(line: 661, column: 24, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4600, file: !953, line: 660, column: 64)
!4612 = !DILocation(line: 661, column: 27, scope: !4611)
!4613 = !DILocation(line: 661, column: 34, scope: !4611)
!4614 = !DILocation(line: 661, column: 42, scope: !4611)
!4615 = !DILocation(line: 661, column: 69, scope: !4611)
!4616 = !DILocation(line: 662, column: 24, scope: !4611)
!4617 = !DILocation(line: 662, column: 27, scope: !4611)
!4618 = !DILocation(line: 662, column: 34, scope: !4611)
!4619 = !DILocation(line: 662, column: 42, scope: !4611)
!4620 = !DILocation(line: 662, column: 69, scope: !4611)
!4621 = !DILocation(line: 663, column: 24, scope: !4611)
!4622 = !DILocation(line: 663, column: 27, scope: !4611)
!4623 = !DILocation(line: 663, column: 34, scope: !4611)
!4624 = !DILocation(line: 663, column: 42, scope: !4611)
!4625 = !DILocation(line: 663, column: 69, scope: !4611)
!4626 = !DILocation(line: 665, column: 9, scope: !4600)
!4627 = !DILocation(line: 665, column: 20, scope: !4628)
!4628 = !DILexicalBlockFile(scope: !4629, file: !953, discriminator: 1)
!4629 = distinct !DILexicalBlock(scope: !4590, file: !953, line: 665, column: 20)
!4630 = !DILocation(line: 665, column: 23, scope: !4628)
!4631 = !DILocation(line: 665, column: 30, scope: !4628)
!4632 = !DILocation(line: 665, column: 50, scope: !4628)
!4633 = !DILocation(line: 665, column: 56, scope: !4628)
!4634 = !DILocation(line: 665, column: 60, scope: !4635)
!4635 = !DILexicalBlockFile(scope: !4629, file: !953, discriminator: 2)
!4636 = !DILocation(line: 665, column: 63, scope: !4635)
!4637 = !DILocation(line: 665, column: 20, scope: !4635)
!4638 = !DILocation(line: 666, column: 13, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4629, file: !953, line: 665, column: 77)
!4640 = !DILocation(line: 666, column: 16, scope: !4639)
!4641 = !DILocation(line: 666, column: 30, scope: !4639)
!4642 = !DILocation(line: 667, column: 25, scope: !4639)
!4643 = !DILocation(line: 667, column: 28, scope: !4639)
!4644 = !DILocation(line: 667, column: 23, scope: !4639)
!4645 = !DILocation(line: 667, column: 45, scope: !4639)
!4646 = !DILocation(line: 667, column: 48, scope: !4639)
!4647 = !DILocation(line: 667, column: 43, scope: !4639)
!4648 = !DILocation(line: 667, column: 13, scope: !4639)
!4649 = !DILocation(line: 668, column: 24, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4639, file: !953, line: 667, column: 64)
!4651 = !DILocation(line: 668, column: 27, scope: !4650)
!4652 = !DILocation(line: 668, column: 34, scope: !4650)
!4653 = !DILocation(line: 668, column: 42, scope: !4650)
!4654 = !DILocation(line: 668, column: 68, scope: !4650)
!4655 = !DILocation(line: 669, column: 24, scope: !4650)
!4656 = !DILocation(line: 669, column: 27, scope: !4650)
!4657 = !DILocation(line: 669, column: 34, scope: !4650)
!4658 = !DILocation(line: 669, column: 42, scope: !4650)
!4659 = !DILocation(line: 669, column: 68, scope: !4650)
!4660 = !DILocation(line: 670, column: 24, scope: !4650)
!4661 = !DILocation(line: 670, column: 27, scope: !4650)
!4662 = !DILocation(line: 670, column: 34, scope: !4650)
!4663 = !DILocation(line: 670, column: 42, scope: !4650)
!4664 = !DILocation(line: 670, column: 68, scope: !4650)
!4665 = !DILocation(line: 671, column: 24, scope: !4650)
!4666 = !DILocation(line: 671, column: 27, scope: !4650)
!4667 = !DILocation(line: 671, column: 34, scope: !4650)
!4668 = !DILocation(line: 671, column: 42, scope: !4650)
!4669 = !DILocation(line: 671, column: 68, scope: !4650)
!4670 = !DILocation(line: 673, column: 9, scope: !4639)
!4671 = !DILocation(line: 673, column: 20, scope: !4672)
!4672 = !DILexicalBlockFile(scope: !4673, file: !953, discriminator: 1)
!4673 = distinct !DILexicalBlock(scope: !4629, file: !953, line: 673, column: 20)
!4674 = !DILocation(line: 673, column: 23, scope: !4672)
!4675 = !DILocation(line: 673, column: 30, scope: !4672)
!4676 = !DILocation(line: 673, column: 50, scope: !4672)
!4677 = !DILocation(line: 673, column: 56, scope: !4672)
!4678 = !DILocation(line: 673, column: 60, scope: !4679)
!4679 = !DILexicalBlockFile(scope: !4673, file: !953, discriminator: 2)
!4680 = !DILocation(line: 673, column: 63, scope: !4679)
!4681 = !DILocation(line: 673, column: 20, scope: !4679)
!4682 = !DILocation(line: 674, column: 13, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4673, file: !953, line: 673, column: 77)
!4684 = !DILocation(line: 674, column: 16, scope: !4683)
!4685 = !DILocation(line: 674, column: 30, scope: !4683)
!4686 = !DILocation(line: 675, column: 25, scope: !4683)
!4687 = !DILocation(line: 675, column: 28, scope: !4683)
!4688 = !DILocation(line: 675, column: 23, scope: !4683)
!4689 = !DILocation(line: 675, column: 45, scope: !4683)
!4690 = !DILocation(line: 675, column: 48, scope: !4683)
!4691 = !DILocation(line: 675, column: 43, scope: !4683)
!4692 = !DILocation(line: 675, column: 13, scope: !4683)
!4693 = !DILocation(line: 676, column: 24, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4683, file: !953, line: 675, column: 64)
!4695 = !DILocation(line: 676, column: 27, scope: !4694)
!4696 = !DILocation(line: 676, column: 34, scope: !4694)
!4697 = !DILocation(line: 676, column: 42, scope: !4694)
!4698 = !DILocation(line: 676, column: 68, scope: !4694)
!4699 = !DILocation(line: 677, column: 24, scope: !4694)
!4700 = !DILocation(line: 677, column: 27, scope: !4694)
!4701 = !DILocation(line: 677, column: 34, scope: !4694)
!4702 = !DILocation(line: 677, column: 42, scope: !4694)
!4703 = !DILocation(line: 677, column: 68, scope: !4694)
!4704 = !DILocation(line: 678, column: 24, scope: !4694)
!4705 = !DILocation(line: 678, column: 27, scope: !4694)
!4706 = !DILocation(line: 678, column: 34, scope: !4694)
!4707 = !DILocation(line: 678, column: 42, scope: !4694)
!4708 = !DILocation(line: 678, column: 68, scope: !4694)
!4709 = !DILocation(line: 680, column: 9, scope: !4683)
!4710 = !DILocation(line: 680, column: 20, scope: !4711)
!4711 = !DILexicalBlockFile(scope: !4712, file: !953, discriminator: 1)
!4712 = distinct !DILexicalBlock(scope: !4673, file: !953, line: 680, column: 20)
!4713 = !DILocation(line: 680, column: 23, scope: !4711)
!4714 = !DILocation(line: 680, column: 30, scope: !4711)
!4715 = !DILocation(line: 680, column: 50, scope: !4711)
!4716 = !DILocation(line: 680, column: 56, scope: !4711)
!4717 = !DILocation(line: 680, column: 60, scope: !4718)
!4718 = !DILexicalBlockFile(scope: !4712, file: !953, discriminator: 2)
!4719 = !DILocation(line: 680, column: 63, scope: !4718)
!4720 = !DILocation(line: 680, column: 20, scope: !4718)
!4721 = !DILocation(line: 681, column: 13, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4712, file: !953, line: 680, column: 76)
!4723 = !DILocation(line: 681, column: 16, scope: !4722)
!4724 = !DILocation(line: 681, column: 30, scope: !4722)
!4725 = !DILocation(line: 682, column: 25, scope: !4722)
!4726 = !DILocation(line: 682, column: 28, scope: !4722)
!4727 = !DILocation(line: 682, column: 23, scope: !4722)
!4728 = !DILocation(line: 682, column: 45, scope: !4722)
!4729 = !DILocation(line: 682, column: 48, scope: !4722)
!4730 = !DILocation(line: 682, column: 43, scope: !4722)
!4731 = !DILocation(line: 682, column: 13, scope: !4722)
!4732 = !DILocation(line: 683, column: 24, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4722, file: !953, line: 682, column: 64)
!4734 = !DILocation(line: 683, column: 27, scope: !4733)
!4735 = !DILocation(line: 683, column: 34, scope: !4733)
!4736 = !DILocation(line: 683, column: 42, scope: !4733)
!4737 = !DILocation(line: 683, column: 68, scope: !4733)
!4738 = !DILocation(line: 684, column: 24, scope: !4733)
!4739 = !DILocation(line: 684, column: 27, scope: !4733)
!4740 = !DILocation(line: 684, column: 34, scope: !4733)
!4741 = !DILocation(line: 684, column: 42, scope: !4733)
!4742 = !DILocation(line: 684, column: 68, scope: !4733)
!4743 = !DILocation(line: 685, column: 24, scope: !4733)
!4744 = !DILocation(line: 685, column: 27, scope: !4733)
!4745 = !DILocation(line: 685, column: 34, scope: !4733)
!4746 = !DILocation(line: 685, column: 42, scope: !4733)
!4747 = !DILocation(line: 685, column: 68, scope: !4733)
!4748 = !DILocation(line: 687, column: 9, scope: !4722)
!4749 = !DILocation(line: 687, column: 20, scope: !4750)
!4750 = !DILexicalBlockFile(scope: !4751, file: !953, discriminator: 1)
!4751 = distinct !DILexicalBlock(scope: !4712, file: !953, line: 687, column: 20)
!4752 = !DILocation(line: 687, column: 23, scope: !4750)
!4753 = !DILocation(line: 687, column: 30, scope: !4750)
!4754 = !DILocation(line: 687, column: 50, scope: !4750)
!4755 = !DILocation(line: 687, column: 56, scope: !4750)
!4756 = !DILocation(line: 687, column: 59, scope: !4757)
!4757 = !DILexicalBlockFile(scope: !4751, file: !953, discriminator: 2)
!4758 = !DILocation(line: 687, column: 62, scope: !4757)
!4759 = !DILocation(line: 687, column: 20, scope: !4757)
!4760 = !DILocation(line: 688, column: 13, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4751, file: !953, line: 687, column: 75)
!4762 = !DILocation(line: 688, column: 16, scope: !4761)
!4763 = !DILocation(line: 688, column: 30, scope: !4761)
!4764 = !DILocation(line: 689, column: 25, scope: !4761)
!4765 = !DILocation(line: 689, column: 28, scope: !4761)
!4766 = !DILocation(line: 689, column: 23, scope: !4761)
!4767 = !DILocation(line: 689, column: 45, scope: !4761)
!4768 = !DILocation(line: 689, column: 48, scope: !4761)
!4769 = !DILocation(line: 689, column: 43, scope: !4761)
!4770 = !DILocation(line: 689, column: 13, scope: !4761)
!4771 = !DILocation(line: 690, column: 24, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4761, file: !953, line: 689, column: 64)
!4773 = !DILocation(line: 690, column: 27, scope: !4772)
!4774 = !DILocation(line: 690, column: 34, scope: !4772)
!4775 = !DILocation(line: 690, column: 42, scope: !4772)
!4776 = !DILocation(line: 690, column: 69, scope: !4772)
!4777 = !DILocation(line: 691, column: 24, scope: !4772)
!4778 = !DILocation(line: 691, column: 27, scope: !4772)
!4779 = !DILocation(line: 691, column: 34, scope: !4772)
!4780 = !DILocation(line: 691, column: 42, scope: !4772)
!4781 = !DILocation(line: 691, column: 69, scope: !4772)
!4782 = !DILocation(line: 692, column: 24, scope: !4772)
!4783 = !DILocation(line: 692, column: 27, scope: !4772)
!4784 = !DILocation(line: 692, column: 34, scope: !4772)
!4785 = !DILocation(line: 692, column: 42, scope: !4772)
!4786 = !DILocation(line: 692, column: 69, scope: !4772)
!4787 = !DILocation(line: 694, column: 9, scope: !4761)
!4788 = !DILocation(line: 695, column: 5, scope: !4265)
!4789 = !DILocation(line: 695, column: 16, scope: !4790)
!4790 = !DILexicalBlockFile(scope: !4791, file: !953, discriminator: 1)
!4791 = distinct !DILexicalBlock(scope: !4259, file: !953, line: 695, column: 16)
!4792 = !DILocation(line: 695, column: 19, scope: !4790)
!4793 = !DILocation(line: 695, column: 30, scope: !4790)
!4794 = !DILocation(line: 696, column: 13, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !953, line: 696, column: 13)
!4796 = distinct !DILexicalBlock(scope: !4791, file: !953, line: 695, column: 36)
!4797 = !DILocation(line: 696, column: 16, scope: !4795)
!4798 = !DILocation(line: 696, column: 31, scope: !4795)
!4799 = !DILocation(line: 696, column: 34, scope: !4800)
!4800 = !DILexicalBlockFile(scope: !4795, file: !953, discriminator: 1)
!4801 = !DILocation(line: 696, column: 37, scope: !4800)
!4802 = !DILocation(line: 696, column: 13, scope: !4800)
!4803 = !DILocation(line: 697, column: 20, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4795, file: !953, line: 696, column: 53)
!4805 = !DILocation(line: 697, column: 23, scope: !4804)
!4806 = !DILocation(line: 697, column: 13, scope: !4804)
!4807 = !DILocation(line: 699, column: 13, scope: !4804)
!4808 = !DILocation(line: 701, column: 14, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4796, file: !953, line: 701, column: 14)
!4810 = !DILocation(line: 701, column: 17, scope: !4809)
!4811 = !DILocation(line: 701, column: 24, scope: !4809)
!4812 = !DILocation(line: 701, column: 44, scope: !4809)
!4813 = !DILocation(line: 701, column: 49, scope: !4809)
!4814 = !DILocation(line: 701, column: 53, scope: !4815)
!4815 = !DILexicalBlockFile(scope: !4809, file: !953, discriminator: 1)
!4816 = !DILocation(line: 701, column: 56, scope: !4815)
!4817 = !DILocation(line: 701, column: 14, scope: !4815)
!4818 = !DILocation(line: 702, column: 13, scope: !4809)
!4819 = !DILocation(line: 702, column: 16, scope: !4809)
!4820 = !DILocation(line: 702, column: 23, scope: !4809)
!4821 = !DILocation(line: 702, column: 31, scope: !4809)
!4822 = !DILocation(line: 703, column: 18, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4809, file: !953, line: 703, column: 18)
!4824 = !DILocation(line: 703, column: 21, scope: !4823)
!4825 = !DILocation(line: 703, column: 28, scope: !4823)
!4826 = !DILocation(line: 703, column: 48, scope: !4823)
!4827 = !DILocation(line: 703, column: 53, scope: !4823)
!4828 = !DILocation(line: 703, column: 56, scope: !4829)
!4829 = !DILexicalBlockFile(scope: !4823, file: !953, discriminator: 1)
!4830 = !DILocation(line: 703, column: 59, scope: !4829)
!4831 = !DILocation(line: 703, column: 18, scope: !4829)
!4832 = !DILocation(line: 704, column: 13, scope: !4823)
!4833 = !DILocation(line: 704, column: 16, scope: !4823)
!4834 = !DILocation(line: 704, column: 23, scope: !4823)
!4835 = !DILocation(line: 704, column: 31, scope: !4823)
!4836 = !DILocation(line: 705, column: 18, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4823, file: !953, line: 705, column: 18)
!4838 = !DILocation(line: 705, column: 21, scope: !4837)
!4839 = !DILocation(line: 705, column: 28, scope: !4837)
!4840 = !DILocation(line: 705, column: 48, scope: !4837)
!4841 = !DILocation(line: 705, column: 53, scope: !4837)
!4842 = !DILocation(line: 705, column: 57, scope: !4843)
!4843 = !DILexicalBlockFile(scope: !4837, file: !953, discriminator: 1)
!4844 = !DILocation(line: 705, column: 60, scope: !4843)
!4845 = !DILocation(line: 705, column: 18, scope: !4843)
!4846 = !DILocation(line: 706, column: 13, scope: !4837)
!4847 = !DILocation(line: 706, column: 16, scope: !4837)
!4848 = !DILocation(line: 706, column: 23, scope: !4837)
!4849 = !DILocation(line: 706, column: 31, scope: !4837)
!4850 = !DILocation(line: 707, column: 18, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4837, file: !953, line: 707, column: 18)
!4852 = !DILocation(line: 707, column: 21, scope: !4851)
!4853 = !DILocation(line: 707, column: 28, scope: !4851)
!4854 = !DILocation(line: 707, column: 48, scope: !4851)
!4855 = !DILocation(line: 707, column: 54, scope: !4851)
!4856 = !DILocation(line: 707, column: 58, scope: !4857)
!4857 = !DILexicalBlockFile(scope: !4851, file: !953, discriminator: 1)
!4858 = !DILocation(line: 707, column: 61, scope: !4857)
!4859 = !DILocation(line: 707, column: 18, scope: !4857)
!4860 = !DILocation(line: 708, column: 13, scope: !4851)
!4861 = !DILocation(line: 708, column: 16, scope: !4851)
!4862 = !DILocation(line: 708, column: 23, scope: !4851)
!4863 = !DILocation(line: 708, column: 31, scope: !4851)
!4864 = !DILocation(line: 709, column: 18, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4851, file: !953, line: 709, column: 18)
!4866 = !DILocation(line: 709, column: 21, scope: !4865)
!4867 = !DILocation(line: 709, column: 28, scope: !4865)
!4868 = !DILocation(line: 709, column: 48, scope: !4865)
!4869 = !DILocation(line: 709, column: 54, scope: !4865)
!4870 = !DILocation(line: 709, column: 57, scope: !4871)
!4871 = !DILexicalBlockFile(scope: !4865, file: !953, discriminator: 1)
!4872 = !DILocation(line: 709, column: 60, scope: !4871)
!4873 = !DILocation(line: 709, column: 18, scope: !4871)
!4874 = !DILocation(line: 710, column: 13, scope: !4865)
!4875 = !DILocation(line: 710, column: 16, scope: !4865)
!4876 = !DILocation(line: 710, column: 23, scope: !4865)
!4877 = !DILocation(line: 710, column: 31, scope: !4865)
!4878 = !DILocation(line: 711, column: 18, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4865, file: !953, line: 711, column: 18)
!4880 = !DILocation(line: 711, column: 21, scope: !4879)
!4881 = !DILocation(line: 711, column: 28, scope: !4879)
!4882 = !DILocation(line: 711, column: 48, scope: !4879)
!4883 = !DILocation(line: 711, column: 54, scope: !4879)
!4884 = !DILocation(line: 711, column: 58, scope: !4885)
!4885 = !DILexicalBlockFile(scope: !4879, file: !953, discriminator: 1)
!4886 = !DILocation(line: 711, column: 61, scope: !4885)
!4887 = !DILocation(line: 711, column: 18, scope: !4885)
!4888 = !DILocation(line: 712, column: 13, scope: !4879)
!4889 = !DILocation(line: 712, column: 16, scope: !4879)
!4890 = !DILocation(line: 712, column: 23, scope: !4879)
!4891 = !DILocation(line: 712, column: 31, scope: !4879)
!4892 = !DILocation(line: 713, column: 18, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4879, file: !953, line: 713, column: 18)
!4894 = !DILocation(line: 713, column: 21, scope: !4893)
!4895 = !DILocation(line: 713, column: 28, scope: !4893)
!4896 = !DILocation(line: 713, column: 48, scope: !4893)
!4897 = !DILocation(line: 713, column: 54, scope: !4893)
!4898 = !DILocation(line: 713, column: 57, scope: !4899)
!4899 = !DILexicalBlockFile(scope: !4893, file: !953, discriminator: 1)
!4900 = !DILocation(line: 713, column: 60, scope: !4899)
!4901 = !DILocation(line: 713, column: 18, scope: !4899)
!4902 = !DILocation(line: 714, column: 13, scope: !4893)
!4903 = !DILocation(line: 714, column: 16, scope: !4893)
!4904 = !DILocation(line: 714, column: 23, scope: !4893)
!4905 = !DILocation(line: 714, column: 31, scope: !4893)
!4906 = !DILocation(line: 715, column: 18, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4893, file: !953, line: 715, column: 18)
!4908 = !DILocation(line: 715, column: 21, scope: !4907)
!4909 = !DILocation(line: 715, column: 28, scope: !4907)
!4910 = !DILocation(line: 715, column: 48, scope: !4907)
!4911 = !DILocation(line: 715, column: 54, scope: !4907)
!4912 = !DILocation(line: 715, column: 58, scope: !4913)
!4913 = !DILexicalBlockFile(scope: !4907, file: !953, discriminator: 1)
!4914 = !DILocation(line: 715, column: 61, scope: !4913)
!4915 = !DILocation(line: 715, column: 18, scope: !4913)
!4916 = !DILocation(line: 716, column: 13, scope: !4907)
!4917 = !DILocation(line: 716, column: 16, scope: !4907)
!4918 = !DILocation(line: 716, column: 23, scope: !4907)
!4919 = !DILocation(line: 716, column: 31, scope: !4907)
!4920 = !DILocation(line: 717, column: 18, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4907, file: !953, line: 717, column: 18)
!4922 = !DILocation(line: 717, column: 21, scope: !4921)
!4923 = !DILocation(line: 717, column: 28, scope: !4921)
!4924 = !DILocation(line: 717, column: 48, scope: !4921)
!4925 = !DILocation(line: 717, column: 54, scope: !4921)
!4926 = !DILocation(line: 717, column: 58, scope: !4927)
!4927 = !DILexicalBlockFile(scope: !4921, file: !953, discriminator: 1)
!4928 = !DILocation(line: 717, column: 61, scope: !4927)
!4929 = !DILocation(line: 717, column: 18, scope: !4927)
!4930 = !DILocation(line: 718, column: 13, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4921, file: !953, line: 717, column: 75)
!4932 = !DILocation(line: 718, column: 16, scope: !4931)
!4933 = !DILocation(line: 718, column: 23, scope: !4931)
!4934 = !DILocation(line: 718, column: 31, scope: !4931)
!4935 = !DILocation(line: 719, column: 13, scope: !4931)
!4936 = !DILocation(line: 719, column: 16, scope: !4931)
!4937 = !DILocation(line: 719, column: 25, scope: !4931)
!4938 = !DILocation(line: 720, column: 9, scope: !4931)
!4939 = !DILocation(line: 721, column: 18, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4921, file: !953, line: 721, column: 18)
!4941 = !DILocation(line: 721, column: 21, scope: !4940)
!4942 = !DILocation(line: 721, column: 28, scope: !4940)
!4943 = !DILocation(line: 721, column: 48, scope: !4940)
!4944 = !DILocation(line: 721, column: 54, scope: !4940)
!4945 = !DILocation(line: 721, column: 57, scope: !4946)
!4946 = !DILexicalBlockFile(scope: !4940, file: !953, discriminator: 1)
!4947 = !DILocation(line: 721, column: 60, scope: !4946)
!4948 = !DILocation(line: 721, column: 18, scope: !4946)
!4949 = !DILocation(line: 722, column: 13, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4940, file: !953, line: 721, column: 74)
!4951 = !DILocation(line: 722, column: 16, scope: !4950)
!4952 = !DILocation(line: 722, column: 23, scope: !4950)
!4953 = !DILocation(line: 722, column: 31, scope: !4950)
!4954 = !DILocation(line: 723, column: 13, scope: !4950)
!4955 = !DILocation(line: 723, column: 16, scope: !4950)
!4956 = !DILocation(line: 723, column: 25, scope: !4950)
!4957 = !DILocation(line: 724, column: 9, scope: !4950)
!4958 = !DILocation(line: 725, column: 5, scope: !4796)
!4959 = !DILocation(line: 726, column: 16, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4791, file: !953, line: 725, column: 12)
!4961 = !DILocation(line: 726, column: 19, scope: !4960)
!4962 = !DILocation(line: 726, column: 9, scope: !4960)
!4963 = !DILocation(line: 727, column: 9, scope: !4960)
!4964 = !DILocation(line: 729, column: 9, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4010, file: !953, line: 729, column: 9)
!4966 = !DILocation(line: 729, column: 12, scope: !4965)
!4967 = !DILocation(line: 729, column: 19, scope: !4965)
!4968 = !DILocation(line: 729, column: 27, scope: !4965)
!4969 = !DILocation(line: 729, column: 9, scope: !4010)
!4970 = !DILocation(line: 730, column: 16, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4965, file: !953, line: 729, column: 47)
!4972 = !DILocation(line: 730, column: 19, scope: !4971)
!4973 = !DILocation(line: 730, column: 9, scope: !4971)
!4974 = !DILocation(line: 731, column: 9, scope: !4971)
!4975 = !DILocation(line: 734, column: 5, scope: !4010)
!4976 = distinct !{!4976, !4975}
!4977 = !DILocation(line: 734, column: 110, scope: !4978)
!4978 = !DILexicalBlockFile(scope: !4979, file: !953, discriminator: 1)
!4979 = distinct !DILexicalBlock(scope: !4010, file: !953, line: 734, column: 8)
!4980 = !DILocation(line: 736, column: 9, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4010, file: !953, line: 736, column: 9)
!4982 = !DILocation(line: 736, column: 12, scope: !4981)
!4983 = !DILocation(line: 736, column: 20, scope: !4981)
!4984 = !DILocation(line: 736, column: 9, scope: !4010)
!4985 = !DILocation(line: 737, column: 43, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4981, file: !953, line: 736, column: 25)
!4987 = !DILocation(line: 737, column: 46, scope: !4986)
!4988 = !DILocation(line: 737, column: 49, scope: !4986)
!4989 = !DILocation(line: 737, column: 25, scope: !4986)
!4990 = !DILocation(line: 737, column: 23, scope: !4986)
!4991 = !DILocation(line: 738, column: 13, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4986, file: !953, line: 738, column: 13)
!4993 = !DILocation(line: 738, column: 27, scope: !4992)
!4994 = !DILocation(line: 738, column: 13, scope: !4986)
!4995 = !DILocation(line: 739, column: 20, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4992, file: !953, line: 738, column: 32)
!4997 = !DILocation(line: 739, column: 23, scope: !4996)
!4998 = !DILocation(line: 739, column: 13, scope: !4996)
!4999 = !DILocation(line: 740, column: 13, scope: !4996)
!5000 = !DILocation(line: 742, column: 26, scope: !4986)
!5001 = !DILocation(line: 742, column: 29, scope: !4986)
!5002 = !DILocation(line: 742, column: 9, scope: !4986)
!5003 = !DILocation(line: 742, column: 12, scope: !4986)
!5004 = !DILocation(line: 742, column: 24, scope: !4986)
!5005 = !DILocation(line: 743, column: 5, scope: !4986)
!5006 = !DILocation(line: 743, column: 16, scope: !5007)
!5007 = !DILexicalBlockFile(scope: !5008, file: !953, discriminator: 1)
!5008 = distinct !DILexicalBlock(scope: !4981, file: !953, line: 743, column: 16)
!5009 = !DILocation(line: 743, column: 19, scope: !5007)
!5010 = !DILocation(line: 743, column: 27, scope: !5007)
!5011 = !DILocation(line: 744, column: 37, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5008, file: !953, line: 743, column: 32)
!5013 = !DILocation(line: 744, column: 40, scope: !5012)
!5014 = !DILocation(line: 744, column: 26, scope: !5012)
!5015 = !DILocation(line: 744, column: 9, scope: !5012)
!5016 = !DILocation(line: 744, column: 12, scope: !5012)
!5017 = !DILocation(line: 744, column: 24, scope: !5012)
!5018 = !DILocation(line: 745, column: 5, scope: !5012)
!5019 = !DILocalVariable(name: "p", scope: !5020, file: !953, line: 746, type: !933)
!5020 = distinct !DILexicalBlock(scope: !5008, file: !953, line: 745, column: 12)
!5021 = !DILocation(line: 746, column: 24, scope: !5020)
!5022 = !DILocation(line: 746, column: 28, scope: !5020)
!5023 = !DILocation(line: 746, column: 31, scope: !5020)
!5024 = !DILocation(line: 747, column: 14, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5020, file: !953, line: 747, column: 9)
!5026 = !DILocation(line: 747, column: 17, scope: !5025)
!5027 = !DILocation(line: 747, column: 29, scope: !5025)
!5028 = !DILocation(line: 748, column: 14, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5025, file: !953, line: 747, column: 9)
!5030 = !DILocation(line: 748, column: 17, scope: !5029)
!5031 = !DILocation(line: 748, column: 29, scope: !5029)
!5032 = !DILocation(line: 748, column: 36, scope: !5029)
!5033 = !DILocation(line: 748, column: 47, scope: !5034)
!5034 = !DILexicalBlockFile(scope: !5029, file: !953, discriminator: 1)
!5035 = !DILocation(line: 748, column: 50, scope: !5034)
!5036 = !DILocation(line: 748, column: 46, scope: !5034)
!5037 = !DILocation(line: 748, column: 45, scope: !5034)
!5038 = !DILocation(line: 748, column: 44, scope: !5034)
!5039 = !DILocation(line: 748, column: 41, scope: !5034)
!5040 = !DILocation(line: 748, column: 39, scope: !5034)
!5041 = !DILocation(line: 748, column: 55, scope: !5034)
!5042 = !DILocation(line: 748, column: 59, scope: !5034)
!5043 = !DILocation(line: 748, column: 62, scope: !5034)
!5044 = !DILocation(line: 748, column: 57, scope: !5034)
!5045 = !DILocation(line: 748, column: 53, scope: !5034)
!5046 = !DILocation(line: 747, column: 9, scope: !5047)
!5047 = !DILexicalBlockFile(scope: !5025, file: !953, discriminator: 1)
!5048 = !DILocalVariable(name: "trailer", scope: !5049, file: !953, line: 750, type: !923)
!5049 = distinct !DILexicalBlock(scope: !5029, file: !953, line: 749, column: 32)
!5050 = !DILocation(line: 750, column: 17, scope: !5049)
!5051 = !DILocation(line: 750, column: 35, scope: !5049)
!5052 = !DILocation(line: 750, column: 38, scope: !5049)
!5053 = !DILocation(line: 750, column: 34, scope: !5049)
!5054 = !DILocation(line: 750, column: 33, scope: !5049)
!5055 = !DILocation(line: 750, column: 32, scope: !5049)
!5056 = !DILocation(line: 750, column: 29, scope: !5049)
!5057 = !DILocalVariable(name: "size", scope: !5049, file: !953, line: 751, type: !923)
!5058 = !DILocation(line: 751, column: 17, scope: !5049)
!5059 = !DILocation(line: 751, column: 44, scope: !5049)
!5060 = !DILocation(line: 751, column: 46, scope: !5049)
!5061 = !DILocation(line: 751, column: 45, scope: !5049)
!5062 = !DILocation(line: 751, column: 26, scope: !5049)
!5063 = !DILocation(line: 751, column: 59, scope: !5049)
!5064 = !DILocation(line: 751, column: 87, scope: !5049)
!5065 = !DILocation(line: 751, column: 89, scope: !5049)
!5066 = !DILocation(line: 751, column: 88, scope: !5049)
!5067 = !DILocation(line: 751, column: 69, scope: !5049)
!5068 = !DILocation(line: 751, column: 102, scope: !5049)
!5069 = !DILocation(line: 751, column: 66, scope: !5049)
!5070 = !DILocation(line: 751, column: 128, scope: !5049)
!5071 = !DILocation(line: 751, column: 130, scope: !5049)
!5072 = !DILocation(line: 751, column: 129, scope: !5049)
!5073 = !DILocation(line: 751, column: 110, scope: !5049)
!5074 = !DILocation(line: 751, column: 108, scope: !5049)
!5075 = !DILocation(line: 752, column: 17, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5049, file: !953, line: 752, column: 17)
!5077 = !DILocation(line: 752, column: 24, scope: !5076)
!5078 = !DILocation(line: 752, column: 22, scope: !5076)
!5079 = !DILocation(line: 752, column: 34, scope: !5076)
!5080 = !DILocation(line: 752, column: 38, scope: !5076)
!5081 = !DILocation(line: 752, column: 41, scope: !5076)
!5082 = !DILocation(line: 752, column: 36, scope: !5076)
!5083 = !DILocation(line: 752, column: 32, scope: !5076)
!5084 = !DILocation(line: 752, column: 17, scope: !5049)
!5085 = !DILocation(line: 753, column: 17, scope: !5076)
!5086 = !DILocation(line: 754, column: 18, scope: !5049)
!5087 = !DILocation(line: 754, column: 25, scope: !5049)
!5088 = !DILocation(line: 754, column: 23, scope: !5049)
!5089 = !DILocation(line: 754, column: 15, scope: !5049)
!5090 = !DILocation(line: 755, column: 9, scope: !5049)
!5091 = !DILocation(line: 749, column: 14, scope: !5029)
!5092 = !DILocation(line: 749, column: 17, scope: !5029)
!5093 = !DILocation(line: 749, column: 28, scope: !5029)
!5094 = !DILocation(line: 747, column: 9, scope: !5095)
!5095 = !DILexicalBlockFile(scope: !5029, file: !953, discriminator: 2)
!5096 = distinct !{!5096, !5097}
!5097 = !DILocation(line: 747, column: 9, scope: !5020)
!5098 = !DILocation(line: 757, column: 9, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !4010, file: !953, line: 757, column: 9)
!5100 = !DILocation(line: 757, column: 12, scope: !5099)
!5101 = !DILocation(line: 757, column: 24, scope: !5099)
!5102 = !DILocation(line: 757, column: 41, scope: !5099)
!5103 = !DILocation(line: 757, column: 44, scope: !5104)
!5104 = !DILexicalBlockFile(scope: !5099, file: !953, discriminator: 1)
!5105 = !DILocation(line: 757, column: 47, scope: !5104)
!5106 = !DILocation(line: 757, column: 59, scope: !5104)
!5107 = !DILocation(line: 757, column: 64, scope: !5104)
!5108 = !DILocation(line: 757, column: 67, scope: !5109)
!5109 = !DILexicalBlockFile(scope: !5099, file: !953, discriminator: 2)
!5110 = !DILocation(line: 757, column: 70, scope: !5109)
!5111 = !DILocation(line: 757, column: 84, scope: !5109)
!5112 = !DILocation(line: 757, column: 87, scope: !5109)
!5113 = !DILocation(line: 757, column: 82, scope: !5109)
!5114 = !DILocation(line: 757, column: 9, scope: !5109)
!5115 = !DILocation(line: 758, column: 16, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5099, file: !953, line: 757, column: 104)
!5117 = !DILocation(line: 758, column: 19, scope: !5116)
!5118 = !DILocation(line: 758, column: 70, scope: !5116)
!5119 = !DILocation(line: 758, column: 73, scope: !5116)
!5120 = !DILocation(line: 758, column: 86, scope: !5116)
!5121 = !DILocation(line: 758, column: 89, scope: !5116)
!5122 = !DILocation(line: 758, column: 9, scope: !5116)
!5123 = !DILocation(line: 759, column: 9, scope: !5116)
!5124 = !DILocation(line: 762, column: 12, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !4010, file: !953, line: 762, column: 5)
!5126 = !DILocation(line: 762, column: 10, scope: !5125)
!5127 = !DILocation(line: 762, column: 17, scope: !5128)
!5128 = !DILexicalBlockFile(scope: !5129, file: !953, discriminator: 1)
!5129 = distinct !DILexicalBlock(scope: !5125, file: !953, line: 762, column: 5)
!5130 = !DILocation(line: 762, column: 21, scope: !5128)
!5131 = !DILocation(line: 762, column: 24, scope: !5128)
!5132 = !DILocation(line: 762, column: 19, scope: !5128)
!5133 = !DILocation(line: 762, column: 5, scope: !5128)
!5134 = !DILocalVariable(name: "fs", scope: !5135, file: !953, line: 763, type: !1709)
!5135 = distinct !DILexicalBlock(scope: !5129, file: !953, line: 762, column: 42)
!5136 = !DILocation(line: 763, column: 22, scope: !5135)
!5137 = !DILocation(line: 763, column: 44, scope: !5135)
!5138 = !DILocation(line: 763, column: 27, scope: !5135)
!5139 = !DILocation(line: 763, column: 30, scope: !5135)
!5140 = !DILocation(line: 764, column: 18, scope: !5135)
!5141 = !DILocation(line: 764, column: 21, scope: !5135)
!5142 = !DILocation(line: 764, column: 9, scope: !5135)
!5143 = !DILocation(line: 764, column: 13, scope: !5135)
!5144 = !DILocation(line: 764, column: 16, scope: !5135)
!5145 = !DILocation(line: 765, column: 29, scope: !5135)
!5146 = !DILocation(line: 765, column: 32, scope: !5135)
!5147 = !DILocation(line: 765, column: 9, scope: !5135)
!5148 = !DILocation(line: 765, column: 13, scope: !5135)
!5149 = !DILocation(line: 765, column: 27, scope: !5135)
!5150 = !DILocation(line: 767, column: 9, scope: !5135)
!5151 = !DILocation(line: 767, column: 13, scope: !5135)
!5152 = !DILocation(line: 767, column: 27, scope: !5135)
!5153 = !DILocation(line: 769, column: 13, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5135, file: !953, line: 769, column: 13)
!5155 = !DILocation(line: 769, column: 16, scope: !5154)
!5156 = !DILocation(line: 769, column: 24, scope: !5154)
!5157 = !DILocation(line: 769, column: 13, scope: !5135)
!5158 = !DILocation(line: 770, column: 38, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5154, file: !953, line: 769, column: 30)
!5160 = !DILocation(line: 770, column: 41, scope: !5159)
!5161 = !DILocation(line: 770, column: 27, scope: !5159)
!5162 = !DILocation(line: 770, column: 53, scope: !5159)
!5163 = !DILocation(line: 770, column: 56, scope: !5159)
!5164 = !DILocation(line: 770, column: 51, scope: !5159)
!5165 = !DILocation(line: 770, column: 13, scope: !5159)
!5166 = !DILocation(line: 770, column: 17, scope: !5159)
!5167 = !DILocation(line: 770, column: 25, scope: !5159)
!5168 = !DILocation(line: 771, column: 38, scope: !5159)
!5169 = !DILocation(line: 771, column: 41, scope: !5159)
!5170 = !DILocation(line: 771, column: 27, scope: !5159)
!5171 = !DILocation(line: 771, column: 53, scope: !5159)
!5172 = !DILocation(line: 771, column: 56, scope: !5159)
!5173 = !DILocation(line: 771, column: 51, scope: !5159)
!5174 = !DILocation(line: 771, column: 13, scope: !5159)
!5175 = !DILocation(line: 771, column: 17, scope: !5159)
!5176 = !DILocation(line: 771, column: 25, scope: !5159)
!5177 = !DILocation(line: 772, column: 43, scope: !5159)
!5178 = !DILocation(line: 772, column: 46, scope: !5159)
!5179 = !DILocation(line: 772, column: 32, scope: !5159)
!5180 = !DILocation(line: 772, column: 56, scope: !5159)
!5181 = !DILocation(line: 772, column: 63, scope: !5159)
!5182 = !DILocation(line: 772, column: 66, scope: !5159)
!5183 = !DILocation(line: 772, column: 61, scope: !5159)
!5184 = !DILocation(line: 772, column: 74, scope: !5159)
!5185 = !DILocation(line: 772, column: 78, scope: !5159)
!5186 = !DILocation(line: 772, column: 72, scope: !5159)
!5187 = !DILocation(line: 772, column: 13, scope: !5159)
!5188 = !DILocation(line: 772, column: 17, scope: !5159)
!5189 = !DILocation(line: 772, column: 29, scope: !5159)
!5190 = !DILocation(line: 773, column: 44, scope: !5159)
!5191 = !DILocation(line: 773, column: 47, scope: !5159)
!5192 = !DILocation(line: 773, column: 33, scope: !5159)
!5193 = !DILocation(line: 773, column: 57, scope: !5159)
!5194 = !DILocation(line: 773, column: 64, scope: !5159)
!5195 = !DILocation(line: 773, column: 67, scope: !5159)
!5196 = !DILocation(line: 773, column: 62, scope: !5159)
!5197 = !DILocation(line: 773, column: 76, scope: !5159)
!5198 = !DILocation(line: 773, column: 80, scope: !5159)
!5199 = !DILocation(line: 773, column: 74, scope: !5159)
!5200 = !DILocation(line: 773, column: 13, scope: !5159)
!5201 = !DILocation(line: 773, column: 17, scope: !5159)
!5202 = !DILocation(line: 773, column: 30, scope: !5159)
!5203 = !DILocation(line: 775, column: 28, scope: !5159)
!5204 = !DILocation(line: 775, column: 31, scope: !5159)
!5205 = !DILocation(line: 775, column: 13, scope: !5159)
!5206 = !DILocation(line: 775, column: 17, scope: !5159)
!5207 = !DILocation(line: 775, column: 25, scope: !5159)
!5208 = !DILocation(line: 776, column: 28, scope: !5159)
!5209 = !DILocation(line: 776, column: 31, scope: !5159)
!5210 = !DILocation(line: 776, column: 13, scope: !5159)
!5211 = !DILocation(line: 776, column: 17, scope: !5159)
!5212 = !DILocation(line: 776, column: 25, scope: !5159)
!5213 = !DILocation(line: 777, column: 31, scope: !5159)
!5214 = !DILocation(line: 777, column: 35, scope: !5159)
!5215 = !DILocation(line: 777, column: 49, scope: !5159)
!5216 = !DILocation(line: 777, column: 52, scope: !5159)
!5217 = !DILocation(line: 777, column: 47, scope: !5159)
!5218 = !DILocation(line: 777, column: 67, scope: !5159)
!5219 = !DILocation(line: 777, column: 71, scope: !5159)
!5220 = !DILocation(line: 777, column: 65, scope: !5159)
!5221 = !DILocation(line: 777, column: 13, scope: !5159)
!5222 = !DILocation(line: 777, column: 17, scope: !5159)
!5223 = !DILocation(line: 777, column: 29, scope: !5159)
!5224 = !DILocation(line: 778, column: 32, scope: !5159)
!5225 = !DILocation(line: 778, column: 36, scope: !5159)
!5226 = !DILocation(line: 778, column: 51, scope: !5159)
!5227 = !DILocation(line: 778, column: 54, scope: !5159)
!5228 = !DILocation(line: 778, column: 49, scope: !5159)
!5229 = !DILocation(line: 778, column: 69, scope: !5159)
!5230 = !DILocation(line: 778, column: 73, scope: !5159)
!5231 = !DILocation(line: 778, column: 67, scope: !5159)
!5232 = !DILocation(line: 778, column: 13, scope: !5159)
!5233 = !DILocation(line: 778, column: 17, scope: !5159)
!5234 = !DILocation(line: 778, column: 30, scope: !5159)
!5235 = !DILocation(line: 779, column: 27, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5159, file: !953, line: 779, column: 17)
!5237 = !DILocation(line: 779, column: 31, scope: !5236)
!5238 = !DILocation(line: 779, column: 45, scope: !5236)
!5239 = !DILocation(line: 779, column: 48, scope: !5236)
!5240 = !DILocation(line: 779, column: 43, scope: !5236)
!5241 = !DILocation(line: 779, column: 54, scope: !5236)
!5242 = !DILocation(line: 780, column: 27, scope: !5236)
!5243 = !DILocation(line: 780, column: 31, scope: !5236)
!5244 = !DILocation(line: 780, column: 46, scope: !5236)
!5245 = !DILocation(line: 780, column: 49, scope: !5236)
!5246 = !DILocation(line: 780, column: 44, scope: !5236)
!5247 = !DILocation(line: 779, column: 17, scope: !5248)
!5248 = !DILexicalBlockFile(scope: !5159, file: !953, discriminator: 1)
!5249 = !DILocation(line: 781, column: 17, scope: !5236)
!5250 = !DILocation(line: 782, column: 28, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5159, file: !953, line: 782, column: 18)
!5252 = !DILocation(line: 782, column: 32, scope: !5251)
!5253 = !DILocation(line: 782, column: 18, scope: !5251)
!5254 = !DILocation(line: 782, column: 52, scope: !5251)
!5255 = !DILocation(line: 782, column: 56, scope: !5251)
!5256 = !DILocation(line: 782, column: 42, scope: !5251)
!5257 = !DILocation(line: 782, column: 40, scope: !5251)
!5258 = !DILocation(line: 782, column: 70, scope: !5251)
!5259 = !DILocation(line: 782, column: 73, scope: !5251)
!5260 = !DILocation(line: 782, column: 68, scope: !5251)
!5261 = !DILocation(line: 783, column: 17, scope: !5251)
!5262 = !DILocation(line: 783, column: 30, scope: !5263)
!5263 = !DILexicalBlockFile(scope: !5251, file: !953, discriminator: 1)
!5264 = !DILocation(line: 783, column: 34, scope: !5263)
!5265 = !DILocation(line: 783, column: 20, scope: !5263)
!5266 = !DILocation(line: 783, column: 54, scope: !5263)
!5267 = !DILocation(line: 783, column: 58, scope: !5263)
!5268 = !DILocation(line: 783, column: 44, scope: !5263)
!5269 = !DILocation(line: 783, column: 42, scope: !5263)
!5270 = !DILocation(line: 783, column: 73, scope: !5263)
!5271 = !DILocation(line: 783, column: 76, scope: !5263)
!5272 = !DILocation(line: 783, column: 71, scope: !5263)
!5273 = !DILocation(line: 782, column: 18, scope: !5248)
!5274 = !DILocation(line: 784, column: 17, scope: !5251)
!5275 = !DILocation(line: 785, column: 9, scope: !5159)
!5276 = !DILocation(line: 787, column: 16, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5135, file: !953, line: 787, column: 9)
!5278 = !DILocation(line: 787, column: 14, scope: !5277)
!5279 = !DILocation(line: 787, column: 21, scope: !5280)
!5280 = !DILexicalBlockFile(scope: !5281, file: !953, discriminator: 1)
!5281 = distinct !DILexicalBlock(scope: !5277, file: !953, line: 787, column: 9)
!5282 = !DILocation(line: 787, column: 25, scope: !5280)
!5283 = !DILocation(line: 787, column: 28, scope: !5280)
!5284 = !DILocation(line: 787, column: 23, scope: !5280)
!5285 = !DILocation(line: 787, column: 9, scope: !5280)
!5286 = !DILocalVariable(name: "p", scope: !5287, file: !953, line: 788, type: !5288)
!5287 = distinct !DILexicalBlock(scope: !5281, file: !953, line: 787, column: 46)
!5288 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5289)
!5289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64, align: 64)
!5290 = !DILocation(line: 788, column: 33, scope: !5287)
!5291 = !DILocation(line: 788, column: 48, scope: !5287)
!5292 = !DILocation(line: 788, column: 38, scope: !5287)
!5293 = !DILocation(line: 788, column: 42, scope: !5287)
!5294 = !DILocation(line: 790, column: 17, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5287, file: !953, line: 790, column: 17)
!5296 = !DILocation(line: 790, column: 20, scope: !5295)
!5297 = !DILocation(line: 790, column: 28, scope: !5295)
!5298 = !DILocation(line: 790, column: 17, scope: !5287)
!5299 = !DILocalVariable(name: "idx", scope: !5300, file: !953, line: 791, type: !923)
!5300 = distinct !DILexicalBlock(scope: !5295, file: !953, line: 790, column: 34)
!5301 = !DILocation(line: 791, column: 21, scope: !5300)
!5302 = !DILocation(line: 791, column: 38, scope: !5300)
!5303 = !DILocation(line: 791, column: 41, scope: !5300)
!5304 = !DILocation(line: 791, column: 27, scope: !5300)
!5305 = !DILocation(line: 792, column: 21, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5300, file: !953, line: 792, column: 21)
!5307 = !DILocation(line: 792, column: 37, scope: !5306)
!5308 = !DILocation(line: 792, column: 40, scope: !5306)
!5309 = !DILocation(line: 792, column: 25, scope: !5306)
!5310 = !DILocation(line: 792, column: 21, scope: !5300)
!5311 = !DILocation(line: 793, column: 28, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5306, file: !953, line: 792, column: 59)
!5313 = !DILocation(line: 793, column: 31, scope: !5312)
!5314 = !DILocation(line: 793, column: 21, scope: !5312)
!5315 = !DILocation(line: 795, column: 21, scope: !5312)
!5316 = !DILocation(line: 797, column: 40, scope: !5300)
!5317 = !DILocation(line: 797, column: 17, scope: !5300)
!5318 = !DILocation(line: 797, column: 20, scope: !5300)
!5319 = !DILocation(line: 797, column: 38, scope: !5300)
!5320 = !DILocation(line: 798, column: 24, scope: !5300)
!5321 = !DILocation(line: 798, column: 27, scope: !5300)
!5322 = !DILocation(line: 798, column: 17, scope: !5300)
!5323 = !DILocation(line: 798, column: 56, scope: !5300)
!5324 = !DILocation(line: 798, column: 40, scope: !5300)
!5325 = !DILocation(line: 798, column: 43, scope: !5300)
!5326 = !DILocation(line: 800, column: 50, scope: !5300)
!5327 = !DILocation(line: 800, column: 33, scope: !5300)
!5328 = !DILocation(line: 800, column: 36, scope: !5300)
!5329 = !DILocation(line: 800, column: 31, scope: !5300)
!5330 = !DILocation(line: 801, column: 13, scope: !5300)
!5331 = !DILocation(line: 802, column: 24, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5295, file: !953, line: 801, column: 20)
!5333 = !DILocation(line: 802, column: 27, scope: !5332)
!5334 = !DILocation(line: 802, column: 17, scope: !5332)
!5335 = !DILocation(line: 802, column: 40, scope: !5332)
!5336 = !DILocation(line: 802, column: 43, scope: !5332)
!5337 = !DILocation(line: 805, column: 17, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5287, file: !953, line: 805, column: 17)
!5339 = !DILocation(line: 805, column: 20, scope: !5338)
!5340 = !DILocation(line: 805, column: 28, scope: !5338)
!5341 = !DILocation(line: 805, column: 17, scope: !5287)
!5342 = !DILocation(line: 806, column: 17, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5338, file: !953, line: 805, column: 34)
!5344 = distinct !{!5344, !5342}
!5345 = !DILocation(line: 806, column: 28, scope: !5346)
!5346 = !DILexicalBlockFile(scope: !5347, file: !953, discriminator: 1)
!5347 = distinct !DILexicalBlock(scope: !5348, file: !953, line: 806, column: 26)
!5348 = distinct !DILexicalBlock(scope: !5343, file: !953, line: 806, column: 20)
!5349 = !DILocation(line: 806, column: 42, scope: !5346)
!5350 = !DILocation(line: 806, column: 26, scope: !5346)
!5351 = !DILocation(line: 806, column: 51, scope: !5352)
!5352 = !DILexicalBlockFile(scope: !5353, file: !953, discriminator: 2)
!5353 = distinct !DILexicalBlock(scope: !5347, file: !953, line: 806, column: 49)
!5354 = !DILocation(line: 806, column: 107, scope: !5355)
!5355 = !DILexicalBlockFile(scope: !5352, file: !953, discriminator: 4)
!5356 = !DILocation(line: 806, column: 107, scope: !5352)
!5357 = !DILocation(line: 806, column: 118, scope: !5358)
!5358 = !DILexicalBlockFile(scope: !5348, file: !953, discriminator: 3)
!5359 = !DILocation(line: 807, column: 21, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5343, file: !953, line: 807, column: 21)
!5361 = !DILocation(line: 807, column: 24, scope: !5360)
!5362 = !DILocation(line: 807, column: 40, scope: !5360)
!5363 = !DILocation(line: 807, column: 38, scope: !5360)
!5364 = !DILocation(line: 807, column: 21, scope: !5343)
!5365 = !DILocation(line: 808, column: 31, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5360, file: !953, line: 807, column: 55)
!5367 = !DILocation(line: 808, column: 34, scope: !5366)
!5368 = !DILocation(line: 808, column: 30, scope: !5366)
!5369 = !DILocation(line: 808, column: 21, scope: !5366)
!5370 = !DILocation(line: 809, column: 31, scope: !5366)
!5371 = !DILocation(line: 809, column: 34, scope: !5366)
!5372 = !DILocation(line: 809, column: 30, scope: !5366)
!5373 = !DILocation(line: 809, column: 21, scope: !5366)
!5374 = !DILocation(line: 810, column: 17, scope: !5366)
!5375 = !DILocation(line: 811, column: 36, scope: !5343)
!5376 = !DILocation(line: 811, column: 17, scope: !5343)
!5377 = !DILocation(line: 811, column: 20, scope: !5343)
!5378 = !DILocation(line: 811, column: 34, scope: !5343)
!5379 = !DILocation(line: 812, column: 13, scope: !5343)
!5380 = !DILocation(line: 813, column: 9, scope: !5287)
!5381 = !DILocation(line: 787, column: 42, scope: !5382)
!5382 = !DILexicalBlockFile(scope: !5281, file: !953, discriminator: 2)
!5383 = !DILocation(line: 787, column: 9, scope: !5382)
!5384 = distinct !{!5384, !5385}
!5385 = !DILocation(line: 787, column: 9, scope: !5135)
!5386 = !DILocation(line: 814, column: 5, scope: !5135)
!5387 = !DILocation(line: 762, column: 38, scope: !5388)
!5388 = !DILexicalBlockFile(scope: !5129, file: !953, discriminator: 2)
!5389 = !DILocation(line: 762, column: 5, scope: !5388)
!5390 = distinct !{!5390, !5391}
!5391 = !DILocation(line: 762, column: 5, scope: !4010)
!5392 = !DILocation(line: 815, column: 5, scope: !4010)
!5393 = !DILocation(line: 816, column: 1, scope: !4010)
!5394 = distinct !DISubprogram(name: "av_q2d", scope: !969, file: !969, line: 104, type: !5395, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!5395 = !DISubroutineType(types: !5396)
!5396 = !{!942, !968}
!5397 = !DILocalVariable(name: "a", arg: 1, scope: !5394, file: !969, line: 104, type: !968)
!5398 = !DILocation(line: 104, column: 40, scope: !5394)
!5399 = !DILocation(line: 105, column: 14, scope: !5394)
!5400 = !DILocation(line: 105, column: 12, scope: !5394)
!5401 = !DILocation(line: 105, column: 31, scope: !5394)
!5402 = !DILocation(line: 105, column: 20, scope: !5394)
!5403 = !DILocation(line: 105, column: 18, scope: !5394)
!5404 = !DILocation(line: 105, column: 5, scope: !5394)
!5405 = distinct !DISubprogram(name: "decode_slice", scope: !953, file: !953, line: 246, type: !5406, isLocal: true, isDefinition: true, scopeLine: 247, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!5406 = !DISubroutineType(types: !5407)
!5407 = !{!923, !1075, !922}
!5408 = !DILocalVariable(name: "c", arg: 1, scope: !5405, file: !953, line: 246, type: !1075)
!5409 = !DILocation(line: 246, column: 41, scope: !5405)
!5410 = !DILocalVariable(name: "arg", arg: 2, scope: !5405, file: !953, line: 246, type: !922)
!5411 = !DILocation(line: 246, column: 50, scope: !5405)
!5412 = !DILocalVariable(name: "fs", scope: !5405, file: !953, line: 248, type: !1709)
!5413 = !DILocation(line: 248, column: 18, scope: !5405)
!5414 = !DILocation(line: 248, column: 33, scope: !5405)
!5415 = !DILocation(line: 248, column: 24, scope: !5405)
!5416 = !DILocation(line: 248, column: 23, scope: !5405)
!5417 = !DILocalVariable(name: "f", scope: !5405, file: !953, line: 249, type: !1709)
!5418 = !DILocation(line: 249, column: 18, scope: !5405)
!5419 = !DILocation(line: 249, column: 22, scope: !5405)
!5420 = !DILocation(line: 249, column: 26, scope: !5405)
!5421 = !DILocation(line: 249, column: 33, scope: !5405)
!5422 = !DILocalVariable(name: "width", scope: !5405, file: !953, line: 250, type: !923)
!5423 = !DILocation(line: 250, column: 9, scope: !5405)
!5424 = !DILocalVariable(name: "height", scope: !5405, file: !953, line: 250, type: !923)
!5425 = !DILocation(line: 250, column: 16, scope: !5405)
!5426 = !DILocalVariable(name: "x", scope: !5405, file: !953, line: 250, type: !923)
!5427 = !DILocation(line: 250, column: 24, scope: !5405)
!5428 = !DILocalVariable(name: "y", scope: !5405, file: !953, line: 250, type: !923)
!5429 = !DILocation(line: 250, column: 27, scope: !5405)
!5430 = !DILocalVariable(name: "ret", scope: !5405, file: !953, line: 250, type: !923)
!5431 = !DILocation(line: 250, column: 30, scope: !5405)
!5432 = !DILocalVariable(name: "ps", scope: !5405, file: !953, line: 251, type: !979)
!5433 = !DILocation(line: 251, column: 15, scope: !5405)
!5434 = !DILocation(line: 251, column: 40, scope: !5405)
!5435 = !DILocation(line: 251, column: 43, scope: !5405)
!5436 = !DILocation(line: 251, column: 20, scope: !5405)
!5437 = !DILocation(line: 251, column: 53, scope: !5405)
!5438 = !DILocation(line: 251, column: 61, scope: !5405)
!5439 = !DILocalVariable(name: "p", scope: !5405, file: !953, line: 252, type: !5440)
!5440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!5441 = !DILocation(line: 252, column: 21, scope: !5405)
!5442 = !DILocation(line: 252, column: 25, scope: !5405)
!5443 = !DILocation(line: 252, column: 28, scope: !5405)
!5444 = !DILocalVariable(name: "i", scope: !5405, file: !953, line: 253, type: !923)
!5445 = !DILocation(line: 253, column: 9, scope: !5405)
!5446 = !DILocalVariable(name: "si", scope: !5405, file: !953, line: 253, type: !923)
!5447 = !DILocation(line: 253, column: 12, scope: !5405)
!5448 = !DILocation(line: 255, column: 12, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5405, file: !953, line: 255, column: 5)
!5450 = !DILocation(line: 255, column: 10, scope: !5449)
!5451 = !DILocation(line: 255, column: 16, scope: !5452)
!5452 = !DILexicalBlockFile(scope: !5453, file: !953, discriminator: 1)
!5453 = distinct !DILexicalBlock(scope: !5449, file: !953, line: 255, column: 5)
!5454 = !DILocation(line: 255, column: 39, scope: !5452)
!5455 = !DILocation(line: 255, column: 22, scope: !5452)
!5456 = !DILocation(line: 255, column: 25, scope: !5452)
!5457 = !DILocation(line: 255, column: 19, scope: !5452)
!5458 = !DILocation(line: 255, column: 5, scope: !5452)
!5459 = !DILocation(line: 255, column: 5, scope: !5460)
!5460 = !DILexicalBlockFile(scope: !5449, file: !953, discriminator: 2)
!5461 = !DILocation(line: 255, column: 47, scope: !5462)
!5462 = !DILexicalBlockFile(scope: !5453, file: !953, discriminator: 3)
!5463 = !DILocation(line: 255, column: 5, scope: !5462)
!5464 = distinct !{!5464, !5465}
!5465 = !DILocation(line: 255, column: 5, scope: !5405)
!5466 = !DILocation(line: 258, column: 8, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5405, file: !953, line: 258, column: 8)
!5468 = !DILocation(line: 258, column: 11, scope: !5467)
!5469 = !DILocation(line: 258, column: 16, scope: !5467)
!5470 = !DILocation(line: 258, column: 20, scope: !5471)
!5471 = !DILexicalBlockFile(scope: !5467, file: !953, discriminator: 1)
!5472 = !DILocation(line: 258, column: 23, scope: !5471)
!5473 = !DILocation(line: 258, column: 8, scope: !5471)
!5474 = !DILocation(line: 259, column: 35, scope: !5467)
!5475 = !DILocation(line: 259, column: 38, scope: !5467)
!5476 = !DILocation(line: 259, column: 52, scope: !5467)
!5477 = !DILocation(line: 259, column: 9, scope: !5467)
!5478 = !DILocation(line: 261, column: 8, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5405, file: !953, line: 261, column: 8)
!5480 = !DILocation(line: 261, column: 11, scope: !5479)
!5481 = !DILocation(line: 261, column: 16, scope: !5479)
!5482 = !DILocation(line: 261, column: 20, scope: !5483)
!5483 = !DILexicalBlockFile(scope: !5479, file: !953, discriminator: 1)
!5484 = !DILocation(line: 261, column: 23, scope: !5483)
!5485 = !DILocation(line: 261, column: 8, scope: !5483)
!5486 = !DILocalVariable(name: "fssrc", scope: !5487, file: !953, line: 262, type: !1709)
!5487 = distinct !DILexicalBlock(scope: !5479, file: !953, line: 261, column: 34)
!5488 = !DILocation(line: 262, column: 22, scope: !5487)
!5489 = !DILocation(line: 262, column: 53, scope: !5487)
!5490 = !DILocation(line: 262, column: 30, scope: !5487)
!5491 = !DILocation(line: 262, column: 33, scope: !5487)
!5492 = !DILocation(line: 262, column: 39, scope: !5487)
!5493 = !DILocalVariable(name: "fsdst", scope: !5487, file: !953, line: 263, type: !1709)
!5494 = !DILocation(line: 263, column: 22, scope: !5487)
!5495 = !DILocation(line: 263, column: 47, scope: !5487)
!5496 = !DILocation(line: 263, column: 30, scope: !5487)
!5497 = !DILocation(line: 263, column: 33, scope: !5487)
!5498 = !DILocation(line: 267, column: 14, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5487, file: !953, line: 267, column: 13)
!5500 = !DILocation(line: 267, column: 17, scope: !5499)
!5501 = !DILocation(line: 267, column: 13, scope: !5487)
!5502 = !DILocation(line: 268, column: 37, scope: !5499)
!5503 = !DILocation(line: 268, column: 44, scope: !5499)
!5504 = !DILocation(line: 268, column: 13, scope: !5499)
!5505 = !DILocation(line: 268, column: 20, scope: !5499)
!5506 = !DILocation(line: 268, column: 34, scope: !5499)
!5507 = !DILocation(line: 270, column: 16, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5487, file: !953, line: 270, column: 9)
!5509 = !DILocation(line: 270, column: 14, scope: !5508)
!5510 = !DILocation(line: 270, column: 21, scope: !5511)
!5511 = !DILexicalBlockFile(scope: !5512, file: !953, discriminator: 1)
!5512 = distinct !DILexicalBlock(scope: !5508, file: !953, line: 270, column: 9)
!5513 = !DILocation(line: 270, column: 25, scope: !5511)
!5514 = !DILocation(line: 270, column: 28, scope: !5511)
!5515 = !DILocation(line: 270, column: 23, scope: !5511)
!5516 = !DILocation(line: 270, column: 9, scope: !5511)
!5517 = !DILocalVariable(name: "psrc", scope: !5518, file: !953, line: 271, type: !5289)
!5518 = distinct !DILexicalBlock(scope: !5512, file: !953, line: 270, column: 46)
!5519 = !DILocation(line: 271, column: 27, scope: !5518)
!5520 = !DILocation(line: 271, column: 48, scope: !5518)
!5521 = !DILocation(line: 271, column: 35, scope: !5518)
!5522 = !DILocation(line: 271, column: 42, scope: !5518)
!5523 = !DILocalVariable(name: "pdst", scope: !5518, file: !953, line: 272, type: !5289)
!5524 = !DILocation(line: 272, column: 27, scope: !5518)
!5525 = !DILocation(line: 272, column: 48, scope: !5518)
!5526 = !DILocation(line: 272, column: 35, scope: !5518)
!5527 = !DILocation(line: 272, column: 42, scope: !5518)
!5528 = !DILocation(line: 274, column: 21, scope: !5518)
!5529 = !DILocation(line: 274, column: 27, scope: !5518)
!5530 = !DILocation(line: 274, column: 13, scope: !5518)
!5531 = !DILocation(line: 275, column: 21, scope: !5518)
!5532 = !DILocation(line: 275, column: 27, scope: !5518)
!5533 = !DILocation(line: 275, column: 13, scope: !5518)
!5534 = !DILocation(line: 276, column: 20, scope: !5518)
!5535 = !DILocation(line: 276, column: 13, scope: !5518)
!5536 = !DILocation(line: 276, column: 26, scope: !5518)
!5537 = !DILocation(line: 277, column: 13, scope: !5518)
!5538 = !DILocation(line: 277, column: 19, scope: !5518)
!5539 = !DILocation(line: 277, column: 25, scope: !5518)
!5540 = !DILocation(line: 278, column: 13, scope: !5518)
!5541 = !DILocation(line: 278, column: 19, scope: !5518)
!5542 = !DILocation(line: 278, column: 29, scope: !5518)
!5543 = !DILocation(line: 280, column: 17, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5518, file: !953, line: 280, column: 17)
!5545 = !DILocation(line: 280, column: 24, scope: !5544)
!5546 = !DILocation(line: 280, column: 17, scope: !5518)
!5547 = !DILocation(line: 281, column: 51, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5544, file: !953, line: 280, column: 28)
!5549 = !DILocation(line: 281, column: 57, scope: !5548)
!5550 = !DILocation(line: 281, column: 31, scope: !5548)
!5551 = !DILocation(line: 281, column: 17, scope: !5548)
!5552 = !DILocation(line: 281, column: 23, scope: !5548)
!5553 = !DILocation(line: 281, column: 29, scope: !5548)
!5554 = !DILocation(line: 282, column: 24, scope: !5548)
!5555 = !DILocation(line: 282, column: 30, scope: !5548)
!5556 = !DILocation(line: 282, column: 17, scope: !5548)
!5557 = !DILocation(line: 282, column: 37, scope: !5548)
!5558 = !DILocation(line: 282, column: 43, scope: !5548)
!5559 = !DILocation(line: 282, column: 55, scope: !5548)
!5560 = !DILocation(line: 282, column: 61, scope: !5548)
!5561 = !DILocation(line: 282, column: 53, scope: !5548)
!5562 = !DILocation(line: 282, column: 50, scope: !5548)
!5563 = !DILocation(line: 283, column: 13, scope: !5548)
!5564 = !DILocation(line: 284, column: 77, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5544, file: !953, line: 283, column: 20)
!5566 = !DILocation(line: 284, column: 83, scope: !5565)
!5567 = !DILocation(line: 284, column: 35, scope: !5565)
!5568 = !DILocation(line: 284, column: 17, scope: !5565)
!5569 = !DILocation(line: 284, column: 23, scope: !5565)
!5570 = !DILocation(line: 284, column: 33, scope: !5565)
!5571 = !DILocation(line: 285, column: 24, scope: !5565)
!5572 = !DILocation(line: 285, column: 30, scope: !5565)
!5573 = !DILocation(line: 285, column: 17, scope: !5565)
!5574 = !DILocation(line: 285, column: 41, scope: !5565)
!5575 = !DILocation(line: 285, column: 47, scope: !5565)
!5576 = !DILocation(line: 285, column: 85, scope: !5565)
!5577 = !DILocation(line: 285, column: 91, scope: !5565)
!5578 = !DILocation(line: 285, column: 83, scope: !5565)
!5579 = !DILocation(line: 287, column: 9, scope: !5518)
!5580 = !DILocation(line: 270, column: 42, scope: !5581)
!5581 = !DILexicalBlockFile(scope: !5512, file: !953, discriminator: 2)
!5582 = !DILocation(line: 270, column: 9, scope: !5581)
!5583 = distinct !{!5583, !5584}
!5584 = !DILocation(line: 270, column: 9, scope: !5487)
!5585 = !DILocation(line: 288, column: 5, scope: !5487)
!5586 = !DILocation(line: 290, column: 5, scope: !5405)
!5587 = !DILocation(line: 290, column: 9, scope: !5405)
!5588 = !DILocation(line: 290, column: 27, scope: !5405)
!5589 = !DILocation(line: 291, column: 5, scope: !5405)
!5590 = !DILocation(line: 291, column: 9, scope: !5405)
!5591 = !DILocation(line: 291, column: 27, scope: !5405)
!5592 = !DILocation(line: 293, column: 9, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5405, file: !953, line: 293, column: 9)
!5594 = !DILocation(line: 293, column: 12, scope: !5593)
!5595 = !DILocation(line: 293, column: 20, scope: !5593)
!5596 = !DILocation(line: 293, column: 9, scope: !5405)
!5597 = !DILocation(line: 294, column: 38, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5599, file: !953, line: 294, column: 13)
!5599 = distinct !DILexicalBlock(scope: !5593, file: !953, line: 293, column: 25)
!5600 = !DILocation(line: 294, column: 41, scope: !5598)
!5601 = !DILocation(line: 294, column: 13, scope: !5598)
!5602 = !DILocation(line: 294, column: 45, scope: !5598)
!5603 = !DILocation(line: 294, column: 13, scope: !5599)
!5604 = !DILocation(line: 295, column: 13, scope: !5598)
!5605 = !DILocation(line: 296, column: 33, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5599, file: !953, line: 296, column: 13)
!5607 = !DILocation(line: 296, column: 36, scope: !5606)
!5608 = !DILocation(line: 296, column: 13, scope: !5606)
!5609 = !DILocation(line: 296, column: 40, scope: !5606)
!5610 = !DILocation(line: 296, column: 13, scope: !5599)
!5611 = !DILocation(line: 297, column: 60, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5606, file: !953, line: 296, column: 45)
!5613 = !DILocation(line: 297, column: 64, scope: !5612)
!5614 = !DILocation(line: 297, column: 76, scope: !5612)
!5615 = !DILocation(line: 297, column: 41, scope: !5612)
!5616 = !DILocation(line: 297, column: 45, scope: !5612)
!5617 = !DILocation(line: 297, column: 58, scope: !5612)
!5618 = !DILocation(line: 297, column: 27, scope: !5612)
!5619 = !DILocation(line: 297, column: 31, scope: !5612)
!5620 = !DILocation(line: 297, column: 39, scope: !5612)
!5621 = !DILocation(line: 297, column: 13, scope: !5612)
!5622 = !DILocation(line: 297, column: 17, scope: !5612)
!5623 = !DILocation(line: 297, column: 25, scope: !5612)
!5624 = !DILocation(line: 298, column: 13, scope: !5612)
!5625 = !DILocation(line: 298, column: 17, scope: !5612)
!5626 = !DILocation(line: 298, column: 31, scope: !5612)
!5627 = !DILocation(line: 299, column: 13, scope: !5612)
!5628 = !DILocation(line: 301, column: 5, scope: !5599)
!5629 = !DILocation(line: 302, column: 41, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5405, file: !953, line: 302, column: 9)
!5631 = !DILocation(line: 302, column: 44, scope: !5630)
!5632 = !DILocation(line: 302, column: 16, scope: !5630)
!5633 = !DILocation(line: 302, column: 14, scope: !5630)
!5634 = !DILocation(line: 302, column: 49, scope: !5630)
!5635 = !DILocation(line: 302, column: 9, scope: !5405)
!5636 = !DILocation(line: 303, column: 16, scope: !5630)
!5637 = !DILocation(line: 303, column: 9, scope: !5630)
!5638 = !DILocation(line: 304, column: 9, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5405, file: !953, line: 304, column: 9)
!5640 = !DILocation(line: 304, column: 12, scope: !5639)
!5641 = !DILocation(line: 304, column: 17, scope: !5639)
!5642 = !DILocation(line: 304, column: 27, scope: !5639)
!5643 = !DILocation(line: 304, column: 30, scope: !5644)
!5644 = !DILexicalBlockFile(scope: !5639, file: !953, discriminator: 1)
!5645 = !DILocation(line: 304, column: 34, scope: !5644)
!5646 = !DILocation(line: 304, column: 9, scope: !5644)
!5647 = !DILocation(line: 305, column: 35, scope: !5639)
!5648 = !DILocation(line: 305, column: 38, scope: !5639)
!5649 = !DILocation(line: 305, column: 9, scope: !5639)
!5650 = !DILocation(line: 307, column: 13, scope: !5405)
!5651 = !DILocation(line: 307, column: 17, scope: !5405)
!5652 = !DILocation(line: 307, column: 11, scope: !5405)
!5653 = !DILocation(line: 308, column: 14, scope: !5405)
!5654 = !DILocation(line: 308, column: 18, scope: !5405)
!5655 = !DILocation(line: 308, column: 12, scope: !5405)
!5656 = !DILocation(line: 309, column: 9, scope: !5405)
!5657 = !DILocation(line: 309, column: 13, scope: !5405)
!5658 = !DILocation(line: 309, column: 7, scope: !5405)
!5659 = !DILocation(line: 310, column: 9, scope: !5405)
!5660 = !DILocation(line: 310, column: 13, scope: !5405)
!5661 = !DILocation(line: 310, column: 7, scope: !5405)
!5662 = !DILocation(line: 312, column: 9, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5405, file: !953, line: 312, column: 9)
!5664 = !DILocation(line: 312, column: 13, scope: !5663)
!5665 = !DILocation(line: 312, column: 16, scope: !5663)
!5666 = !DILocation(line: 312, column: 9, scope: !5405)
!5667 = !DILocation(line: 313, column: 13, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !953, line: 313, column: 13)
!5669 = distinct !DILexicalBlock(scope: !5663, file: !953, line: 312, column: 22)
!5670 = !DILocation(line: 313, column: 16, scope: !5668)
!5671 = !DILocation(line: 313, column: 24, scope: !5668)
!5672 = !DILocation(line: 313, column: 29, scope: !5668)
!5673 = !DILocation(line: 313, column: 32, scope: !5674)
!5674 = !DILexicalBlockFile(scope: !5668, file: !953, discriminator: 1)
!5675 = !DILocation(line: 313, column: 35, scope: !5674)
!5676 = !DILocation(line: 313, column: 49, scope: !5674)
!5677 = !DILocation(line: 313, column: 53, scope: !5674)
!5678 = !DILocation(line: 313, column: 56, scope: !5679)
!5679 = !DILexicalBlockFile(scope: !5668, file: !953, discriminator: 2)
!5680 = !DILocation(line: 313, column: 59, scope: !5679)
!5681 = !DILocation(line: 313, column: 67, scope: !5679)
!5682 = !DILocation(line: 313, column: 13, scope: !5679)
!5683 = !DILocation(line: 314, column: 22, scope: !5668)
!5684 = !DILocation(line: 314, column: 26, scope: !5668)
!5685 = !DILocation(line: 314, column: 41, scope: !5668)
!5686 = !DILocation(line: 314, column: 29, scope: !5668)
!5687 = !DILocation(line: 314, column: 13, scope: !5668)
!5688 = !DILocation(line: 315, column: 29, scope: !5669)
!5689 = !DILocation(line: 315, column: 32, scope: !5669)
!5690 = !DILocation(line: 315, column: 40, scope: !5669)
!5691 = !DILocation(line: 315, column: 44, scope: !5669)
!5692 = !DILocation(line: 315, column: 49, scope: !5693)
!5693 = !DILexicalBlockFile(scope: !5669, file: !953, discriminator: 1)
!5694 = !DILocation(line: 315, column: 51, scope: !5693)
!5695 = !DILocation(line: 315, column: 55, scope: !5696)
!5696 = !DILexicalBlockFile(scope: !5669, file: !953, discriminator: 2)
!5697 = !DILocation(line: 315, column: 29, scope: !5696)
!5698 = !DILocation(line: 315, column: 60, scope: !5699)
!5699 = !DILexicalBlockFile(scope: !5669, file: !953, discriminator: 3)
!5700 = !DILocation(line: 315, column: 64, scope: !5699)
!5701 = !DILocation(line: 315, column: 66, scope: !5699)
!5702 = !DILocation(line: 315, column: 79, scope: !5699)
!5703 = !DILocation(line: 315, column: 83, scope: !5699)
!5704 = !DILocation(line: 315, column: 85, scope: !5699)
!5705 = !DILocation(line: 315, column: 77, scope: !5699)
!5706 = !DILocation(line: 315, column: 102, scope: !5699)
!5707 = !DILocation(line: 315, column: 29, scope: !5699)
!5708 = !DILocation(line: 315, column: 29, scope: !5709)
!5709 = !DILexicalBlockFile(scope: !5669, file: !953, discriminator: 4)
!5710 = !DILocation(line: 315, column: 29, scope: !5711)
!5711 = !DILexicalBlockFile(scope: !5669, file: !953, discriminator: 5)
!5712 = !DILocation(line: 315, column: 9, scope: !5711)
!5713 = !DILocation(line: 315, column: 13, scope: !5711)
!5714 = !DILocation(line: 315, column: 27, scope: !5711)
!5715 = !DILocation(line: 316, column: 24, scope: !5669)
!5716 = !DILocation(line: 316, column: 28, scope: !5669)
!5717 = !DILocation(line: 317, column: 23, scope: !5669)
!5718 = !DILocation(line: 317, column: 27, scope: !5669)
!5719 = !DILocation(line: 317, column: 29, scope: !5669)
!5720 = !DILocation(line: 317, column: 48, scope: !5669)
!5721 = !DILocation(line: 317, column: 52, scope: !5669)
!5722 = !DILocation(line: 317, column: 46, scope: !5669)
!5723 = !DILocation(line: 318, column: 24, scope: !5669)
!5724 = !DILocation(line: 318, column: 28, scope: !5669)
!5725 = !DILocation(line: 318, column: 30, scope: !5669)
!5726 = !DILocation(line: 318, column: 47, scope: !5669)
!5727 = !DILocation(line: 318, column: 51, scope: !5669)
!5728 = !DILocation(line: 318, column: 53, scope: !5669)
!5729 = !DILocation(line: 318, column: 45, scope: !5669)
!5730 = !DILocation(line: 318, column: 72, scope: !5669)
!5731 = !DILocation(line: 318, column: 76, scope: !5669)
!5732 = !DILocation(line: 318, column: 70, scope: !5669)
!5733 = !DILocation(line: 318, column: 91, scope: !5669)
!5734 = !DILocation(line: 318, column: 23, scope: !5669)
!5735 = !DILocation(line: 316, column: 9, scope: !5669)
!5736 = !DILocation(line: 319, column: 5, scope: !5669)
!5737 = !DILocation(line: 322, column: 9, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5405, file: !953, line: 322, column: 9)
!5739 = !DILocation(line: 322, column: 12, scope: !5738)
!5740 = !DILocation(line: 322, column: 23, scope: !5738)
!5741 = !DILocation(line: 322, column: 28, scope: !5738)
!5742 = !DILocation(line: 322, column: 32, scope: !5743)
!5743 = !DILexicalBlockFile(scope: !5738, file: !953, discriminator: 1)
!5744 = !DILocation(line: 322, column: 35, scope: !5743)
!5745 = !DILocation(line: 322, column: 49, scope: !5743)
!5746 = !DILocation(line: 322, column: 53, scope: !5747)
!5747 = !DILexicalBlockFile(scope: !5738, file: !953, discriminator: 2)
!5748 = !DILocation(line: 322, column: 57, scope: !5747)
!5749 = !DILocation(line: 322, column: 9, scope: !5747)
!5750 = !DILocalVariable(name: "chroma_width", scope: !5751, file: !953, line: 323, type: !979)
!5751 = distinct !DILexicalBlock(scope: !5738, file: !953, line: 322, column: 72)
!5752 = !DILocation(line: 323, column: 19, scope: !5751)
!5753 = !DILocation(line: 323, column: 83, scope: !5751)
!5754 = !DILocation(line: 323, column: 81, scope: !5751)
!5755 = !DILocation(line: 323, column: 95, scope: !5751)
!5756 = !DILocation(line: 323, column: 98, scope: !5751)
!5757 = !DILocation(line: 323, column: 91, scope: !5751)
!5758 = !DILocation(line: 323, column: 78, scope: !5751)
!5759 = !DILocalVariable(name: "chroma_height", scope: !5751, file: !953, line: 324, type: !979)
!5760 = !DILocation(line: 324, column: 19, scope: !5751)
!5761 = !DILocation(line: 324, column: 84, scope: !5751)
!5762 = !DILocation(line: 324, column: 82, scope: !5751)
!5763 = !DILocation(line: 324, column: 97, scope: !5751)
!5764 = !DILocation(line: 324, column: 100, scope: !5751)
!5765 = !DILocation(line: 324, column: 93, scope: !5751)
!5766 = !DILocation(line: 324, column: 79, scope: !5751)
!5767 = !DILocalVariable(name: "cx", scope: !5751, file: !953, line: 325, type: !979)
!5768 = !DILocation(line: 325, column: 19, scope: !5751)
!5769 = !DILocation(line: 325, column: 24, scope: !5751)
!5770 = !DILocation(line: 325, column: 29, scope: !5751)
!5771 = !DILocation(line: 325, column: 32, scope: !5751)
!5772 = !DILocation(line: 325, column: 26, scope: !5751)
!5773 = !DILocalVariable(name: "cy", scope: !5751, file: !953, line: 326, type: !979)
!5774 = !DILocation(line: 326, column: 19, scope: !5751)
!5775 = !DILocation(line: 326, column: 24, scope: !5751)
!5776 = !DILocation(line: 326, column: 29, scope: !5751)
!5777 = !DILocation(line: 326, column: 32, scope: !5751)
!5778 = !DILocation(line: 326, column: 26, scope: !5751)
!5779 = !DILocation(line: 327, column: 22, scope: !5751)
!5780 = !DILocation(line: 327, column: 26, scope: !5751)
!5781 = !DILocation(line: 327, column: 29, scope: !5751)
!5782 = !DILocation(line: 327, column: 39, scope: !5751)
!5783 = !DILocation(line: 327, column: 42, scope: !5751)
!5784 = !DILocation(line: 327, column: 41, scope: !5751)
!5785 = !DILocation(line: 327, column: 37, scope: !5751)
!5786 = !DILocation(line: 327, column: 46, scope: !5751)
!5787 = !DILocation(line: 327, column: 48, scope: !5751)
!5788 = !DILocation(line: 327, column: 51, scope: !5751)
!5789 = !DILocation(line: 327, column: 47, scope: !5751)
!5790 = !DILocation(line: 327, column: 44, scope: !5751)
!5791 = !DILocation(line: 327, column: 64, scope: !5751)
!5792 = !DILocation(line: 327, column: 71, scope: !5751)
!5793 = !DILocation(line: 327, column: 79, scope: !5751)
!5794 = !DILocation(line: 327, column: 82, scope: !5751)
!5795 = !DILocation(line: 327, column: 9, scope: !5751)
!5796 = !DILocation(line: 329, column: 13, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5751, file: !953, line: 329, column: 13)
!5798 = !DILocation(line: 329, column: 16, scope: !5797)
!5799 = !DILocation(line: 329, column: 13, scope: !5751)
!5800 = !DILocation(line: 330, column: 26, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5797, file: !953, line: 329, column: 31)
!5802 = !DILocation(line: 330, column: 30, scope: !5801)
!5803 = !DILocation(line: 330, column: 33, scope: !5801)
!5804 = !DILocation(line: 330, column: 43, scope: !5801)
!5805 = !DILocation(line: 330, column: 46, scope: !5801)
!5806 = !DILocation(line: 330, column: 45, scope: !5801)
!5807 = !DILocation(line: 330, column: 41, scope: !5801)
!5808 = !DILocation(line: 330, column: 49, scope: !5801)
!5809 = !DILocation(line: 330, column: 52, scope: !5801)
!5810 = !DILocation(line: 330, column: 55, scope: !5801)
!5811 = !DILocation(line: 330, column: 51, scope: !5801)
!5812 = !DILocation(line: 330, column: 48, scope: !5801)
!5813 = !DILocation(line: 330, column: 68, scope: !5801)
!5814 = !DILocation(line: 330, column: 82, scope: !5801)
!5815 = !DILocation(line: 330, column: 97, scope: !5801)
!5816 = !DILocation(line: 330, column: 100, scope: !5801)
!5817 = !DILocation(line: 330, column: 13, scope: !5801)
!5818 = !DILocation(line: 331, column: 26, scope: !5801)
!5819 = !DILocation(line: 331, column: 30, scope: !5801)
!5820 = !DILocation(line: 331, column: 33, scope: !5801)
!5821 = !DILocation(line: 331, column: 43, scope: !5801)
!5822 = !DILocation(line: 331, column: 46, scope: !5801)
!5823 = !DILocation(line: 331, column: 45, scope: !5801)
!5824 = !DILocation(line: 331, column: 41, scope: !5801)
!5825 = !DILocation(line: 331, column: 49, scope: !5801)
!5826 = !DILocation(line: 331, column: 52, scope: !5801)
!5827 = !DILocation(line: 331, column: 55, scope: !5801)
!5828 = !DILocation(line: 331, column: 51, scope: !5801)
!5829 = !DILocation(line: 331, column: 48, scope: !5801)
!5830 = !DILocation(line: 331, column: 68, scope: !5801)
!5831 = !DILocation(line: 331, column: 82, scope: !5801)
!5832 = !DILocation(line: 331, column: 97, scope: !5801)
!5833 = !DILocation(line: 331, column: 100, scope: !5801)
!5834 = !DILocation(line: 331, column: 13, scope: !5801)
!5835 = !DILocation(line: 332, column: 9, scope: !5801)
!5836 = !DILocation(line: 333, column: 13, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5751, file: !953, line: 333, column: 13)
!5838 = !DILocation(line: 333, column: 17, scope: !5837)
!5839 = !DILocation(line: 333, column: 13, scope: !5751)
!5840 = !DILocation(line: 334, column: 26, scope: !5837)
!5841 = !DILocation(line: 334, column: 30, scope: !5837)
!5842 = !DILocation(line: 334, column: 33, scope: !5837)
!5843 = !DILocation(line: 334, column: 43, scope: !5837)
!5844 = !DILocation(line: 334, column: 46, scope: !5837)
!5845 = !DILocation(line: 334, column: 45, scope: !5837)
!5846 = !DILocation(line: 334, column: 41, scope: !5837)
!5847 = !DILocation(line: 334, column: 50, scope: !5837)
!5848 = !DILocation(line: 334, column: 52, scope: !5837)
!5849 = !DILocation(line: 334, column: 55, scope: !5837)
!5850 = !DILocation(line: 334, column: 51, scope: !5837)
!5851 = !DILocation(line: 334, column: 48, scope: !5837)
!5852 = !DILocation(line: 334, column: 68, scope: !5837)
!5853 = !DILocation(line: 334, column: 75, scope: !5837)
!5854 = !DILocation(line: 334, column: 83, scope: !5837)
!5855 = !DILocation(line: 334, column: 86, scope: !5837)
!5856 = !DILocation(line: 334, column: 100, scope: !5837)
!5857 = !DILocation(line: 334, column: 103, scope: !5837)
!5858 = !DILocation(line: 334, column: 111, scope: !5837)
!5859 = !DILocation(line: 334, column: 116, scope: !5837)
!5860 = !DILocation(line: 334, column: 120, scope: !5861)
!5861 = !DILexicalBlockFile(scope: !5837, file: !953, discriminator: 1)
!5862 = !DILocation(line: 334, column: 123, scope: !5861)
!5863 = !DILocation(line: 334, column: 119, scope: !5861)
!5864 = !DILocation(line: 334, column: 99, scope: !5865)
!5865 = !DILexicalBlockFile(scope: !5837, file: !953, discriminator: 2)
!5866 = !DILocation(line: 334, column: 13, scope: !5865)
!5867 = !DILocation(line: 335, column: 5, scope: !5751)
!5868 = !DILocation(line: 335, column: 16, scope: !5869)
!5869 = !DILexicalBlockFile(scope: !5870, file: !953, discriminator: 1)
!5870 = distinct !DILexicalBlock(scope: !5738, file: !953, line: 335, column: 16)
!5871 = !DILocation(line: 335, column: 19, scope: !5869)
!5872 = !DILocation(line: 335, column: 30, scope: !5869)
!5873 = !DILocation(line: 336, column: 23, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5870, file: !953, line: 335, column: 36)
!5875 = !DILocation(line: 336, column: 27, scope: !5874)
!5876 = !DILocation(line: 336, column: 30, scope: !5874)
!5877 = !DILocation(line: 336, column: 40, scope: !5874)
!5878 = !DILocation(line: 336, column: 43, scope: !5874)
!5879 = !DILocation(line: 336, column: 42, scope: !5874)
!5880 = !DILocation(line: 336, column: 38, scope: !5874)
!5881 = !DILocation(line: 336, column: 47, scope: !5874)
!5882 = !DILocation(line: 336, column: 49, scope: !5874)
!5883 = !DILocation(line: 336, column: 52, scope: !5874)
!5884 = !DILocation(line: 336, column: 48, scope: !5874)
!5885 = !DILocation(line: 336, column: 45, scope: !5874)
!5886 = !DILocation(line: 336, column: 66, scope: !5874)
!5887 = !DILocation(line: 336, column: 73, scope: !5874)
!5888 = !DILocation(line: 336, column: 81, scope: !5874)
!5889 = !DILocation(line: 336, column: 84, scope: !5874)
!5890 = !DILocation(line: 336, column: 10, scope: !5874)
!5891 = !DILocation(line: 337, column: 23, scope: !5874)
!5892 = !DILocation(line: 337, column: 27, scope: !5874)
!5893 = !DILocation(line: 337, column: 30, scope: !5874)
!5894 = !DILocation(line: 337, column: 40, scope: !5874)
!5895 = !DILocation(line: 337, column: 43, scope: !5874)
!5896 = !DILocation(line: 337, column: 42, scope: !5874)
!5897 = !DILocation(line: 337, column: 38, scope: !5874)
!5898 = !DILocation(line: 337, column: 47, scope: !5874)
!5899 = !DILocation(line: 337, column: 49, scope: !5874)
!5900 = !DILocation(line: 337, column: 52, scope: !5874)
!5901 = !DILocation(line: 337, column: 48, scope: !5874)
!5902 = !DILocation(line: 337, column: 45, scope: !5874)
!5903 = !DILocation(line: 337, column: 64, scope: !5874)
!5904 = !DILocation(line: 337, column: 69, scope: !5874)
!5905 = !DILocation(line: 337, column: 76, scope: !5874)
!5906 = !DILocation(line: 337, column: 84, scope: !5874)
!5907 = !DILocation(line: 337, column: 87, scope: !5874)
!5908 = !DILocation(line: 337, column: 10, scope: !5874)
!5909 = !DILocation(line: 338, column: 5, scope: !5874)
!5910 = !DILocation(line: 338, column: 16, scope: !5911)
!5911 = !DILexicalBlockFile(scope: !5912, file: !953, discriminator: 1)
!5912 = distinct !DILexicalBlock(scope: !5870, file: !953, line: 338, column: 16)
!5913 = !DILocation(line: 338, column: 19, scope: !5911)
!5914 = !DILocalVariable(name: "planes", scope: !5915, file: !953, line: 339, type: !1664)
!5915 = distinct !DILexicalBlock(scope: !5912, file: !953, line: 338, column: 29)
!5916 = !DILocation(line: 339, column: 18, scope: !5915)
!5917 = !DILocation(line: 339, column: 30, scope: !5915)
!5918 = !DILocation(line: 339, column: 32, scope: !5915)
!5919 = !DILocation(line: 339, column: 35, scope: !5915)
!5920 = !DILocation(line: 339, column: 45, scope: !5915)
!5921 = !DILocation(line: 339, column: 50, scope: !5915)
!5922 = !DILocation(line: 339, column: 48, scope: !5915)
!5923 = !DILocation(line: 339, column: 43, scope: !5915)
!5924 = !DILocation(line: 339, column: 54, scope: !5915)
!5925 = !DILocation(line: 339, column: 58, scope: !5915)
!5926 = !DILocation(line: 339, column: 61, scope: !5915)
!5927 = !DILocation(line: 339, column: 56, scope: !5915)
!5928 = !DILocation(line: 339, column: 52, scope: !5915)
!5929 = !DILocation(line: 340, column: 32, scope: !5915)
!5930 = !DILocation(line: 340, column: 35, scope: !5915)
!5931 = !DILocation(line: 340, column: 45, scope: !5915)
!5932 = !DILocation(line: 340, column: 50, scope: !5915)
!5933 = !DILocation(line: 340, column: 48, scope: !5915)
!5934 = !DILocation(line: 340, column: 43, scope: !5915)
!5935 = !DILocation(line: 340, column: 54, scope: !5915)
!5936 = !DILocation(line: 340, column: 58, scope: !5915)
!5937 = !DILocation(line: 340, column: 61, scope: !5915)
!5938 = !DILocation(line: 340, column: 56, scope: !5915)
!5939 = !DILocation(line: 340, column: 52, scope: !5915)
!5940 = !DILocation(line: 341, column: 32, scope: !5915)
!5941 = !DILocation(line: 341, column: 35, scope: !5915)
!5942 = !DILocation(line: 341, column: 45, scope: !5915)
!5943 = !DILocation(line: 341, column: 50, scope: !5915)
!5944 = !DILocation(line: 341, column: 48, scope: !5915)
!5945 = !DILocation(line: 341, column: 43, scope: !5915)
!5946 = !DILocation(line: 341, column: 54, scope: !5915)
!5947 = !DILocation(line: 341, column: 58, scope: !5915)
!5948 = !DILocation(line: 341, column: 61, scope: !5915)
!5949 = !DILocation(line: 341, column: 56, scope: !5915)
!5950 = !DILocation(line: 341, column: 52, scope: !5915)
!5951 = !DILocation(line: 342, column: 32, scope: !5915)
!5952 = !DILocation(line: 342, column: 35, scope: !5915)
!5953 = !DILocation(line: 342, column: 45, scope: !5915)
!5954 = !DILocation(line: 342, column: 50, scope: !5915)
!5955 = !DILocation(line: 342, column: 48, scope: !5915)
!5956 = !DILocation(line: 342, column: 43, scope: !5915)
!5957 = !DILocation(line: 342, column: 54, scope: !5915)
!5958 = !DILocation(line: 342, column: 58, scope: !5915)
!5959 = !DILocation(line: 342, column: 61, scope: !5915)
!5960 = !DILocation(line: 342, column: 56, scope: !5915)
!5961 = !DILocation(line: 342, column: 52, scope: !5915)
!5962 = !DILocation(line: 343, column: 28, scope: !5915)
!5963 = !DILocation(line: 343, column: 32, scope: !5915)
!5964 = !DILocation(line: 343, column: 40, scope: !5915)
!5965 = !DILocation(line: 343, column: 47, scope: !5915)
!5966 = !DILocation(line: 343, column: 55, scope: !5915)
!5967 = !DILocation(line: 343, column: 58, scope: !5915)
!5968 = !DILocation(line: 343, column: 9, scope: !5915)
!5969 = !DILocation(line: 344, column: 5, scope: !5915)
!5970 = !DILocalVariable(name: "planes", scope: !5971, file: !953, line: 345, type: !1664)
!5971 = distinct !DILexicalBlock(scope: !5912, file: !953, line: 344, column: 12)
!5972 = !DILocation(line: 345, column: 18, scope: !5971)
!5973 = !DILocation(line: 345, column: 30, scope: !5971)
!5974 = !DILocation(line: 345, column: 32, scope: !5971)
!5975 = !DILocation(line: 345, column: 35, scope: !5971)
!5976 = !DILocation(line: 345, column: 45, scope: !5971)
!5977 = !DILocation(line: 345, column: 50, scope: !5971)
!5978 = !DILocation(line: 345, column: 48, scope: !5971)
!5979 = !DILocation(line: 345, column: 43, scope: !5971)
!5980 = !DILocation(line: 345, column: 54, scope: !5971)
!5981 = !DILocation(line: 345, column: 58, scope: !5971)
!5982 = !DILocation(line: 345, column: 61, scope: !5971)
!5983 = !DILocation(line: 345, column: 56, scope: !5971)
!5984 = !DILocation(line: 345, column: 52, scope: !5971)
!5985 = !DILocation(line: 346, column: 32, scope: !5971)
!5986 = !DILocation(line: 346, column: 35, scope: !5971)
!5987 = !DILocation(line: 346, column: 45, scope: !5971)
!5988 = !DILocation(line: 346, column: 50, scope: !5971)
!5989 = !DILocation(line: 346, column: 48, scope: !5971)
!5990 = !DILocation(line: 346, column: 43, scope: !5971)
!5991 = !DILocation(line: 346, column: 54, scope: !5971)
!5992 = !DILocation(line: 346, column: 58, scope: !5971)
!5993 = !DILocation(line: 346, column: 61, scope: !5971)
!5994 = !DILocation(line: 346, column: 56, scope: !5971)
!5995 = !DILocation(line: 346, column: 52, scope: !5971)
!5996 = !DILocation(line: 347, column: 32, scope: !5971)
!5997 = !DILocation(line: 347, column: 35, scope: !5971)
!5998 = !DILocation(line: 347, column: 45, scope: !5971)
!5999 = !DILocation(line: 347, column: 50, scope: !5971)
!6000 = !DILocation(line: 347, column: 48, scope: !5971)
!6001 = !DILocation(line: 347, column: 43, scope: !5971)
!6002 = !DILocation(line: 347, column: 54, scope: !5971)
!6003 = !DILocation(line: 347, column: 58, scope: !5971)
!6004 = !DILocation(line: 347, column: 61, scope: !5971)
!6005 = !DILocation(line: 347, column: 56, scope: !5971)
!6006 = !DILocation(line: 347, column: 52, scope: !5971)
!6007 = !DILocation(line: 348, column: 32, scope: !5971)
!6008 = !DILocation(line: 348, column: 35, scope: !5971)
!6009 = !DILocation(line: 348, column: 45, scope: !5971)
!6010 = !DILocation(line: 348, column: 50, scope: !5971)
!6011 = !DILocation(line: 348, column: 48, scope: !5971)
!6012 = !DILocation(line: 348, column: 43, scope: !5971)
!6013 = !DILocation(line: 348, column: 54, scope: !5971)
!6014 = !DILocation(line: 348, column: 58, scope: !5971)
!6015 = !DILocation(line: 348, column: 61, scope: !5971)
!6016 = !DILocation(line: 348, column: 56, scope: !5971)
!6017 = !DILocation(line: 348, column: 52, scope: !5971)
!6018 = !DILocation(line: 349, column: 26, scope: !5971)
!6019 = !DILocation(line: 349, column: 30, scope: !5971)
!6020 = !DILocation(line: 349, column: 38, scope: !5971)
!6021 = !DILocation(line: 349, column: 45, scope: !5971)
!6022 = !DILocation(line: 349, column: 53, scope: !5971)
!6023 = !DILocation(line: 349, column: 56, scope: !5971)
!6024 = !DILocation(line: 349, column: 9, scope: !5971)
!6025 = !DILocation(line: 351, column: 9, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !5405, file: !953, line: 351, column: 9)
!6027 = !DILocation(line: 351, column: 13, scope: !6026)
!6028 = !DILocation(line: 351, column: 16, scope: !6026)
!6029 = !DILocation(line: 351, column: 21, scope: !6026)
!6030 = !DILocation(line: 351, column: 24, scope: !6031)
!6031 = !DILexicalBlockFile(scope: !6026, file: !953, discriminator: 1)
!6032 = !DILocation(line: 351, column: 27, scope: !6031)
!6033 = !DILocation(line: 351, column: 35, scope: !6031)
!6034 = !DILocation(line: 351, column: 9, scope: !6031)
!6035 = !DILocalVariable(name: "v", scope: !6036, file: !953, line: 352, type: !923)
!6036 = distinct !DILexicalBlock(scope: !6026, file: !953, line: 351, column: 40)
!6037 = !DILocation(line: 352, column: 13, scope: !6036)
!6038 = !DILocation(line: 353, column: 18, scope: !6036)
!6039 = !DILocation(line: 353, column: 22, scope: !6036)
!6040 = !DILocation(line: 353, column: 37, scope: !6036)
!6041 = !DILocation(line: 353, column: 25, scope: !6036)
!6042 = !DILocation(line: 353, column: 9, scope: !6036)
!6043 = !DILocation(line: 354, column: 13, scope: !6036)
!6044 = !DILocation(line: 354, column: 17, scope: !6036)
!6045 = !DILocation(line: 354, column: 19, scope: !6036)
!6046 = !DILocation(line: 354, column: 36, scope: !6036)
!6047 = !DILocation(line: 354, column: 40, scope: !6036)
!6048 = !DILocation(line: 354, column: 42, scope: !6036)
!6049 = !DILocation(line: 354, column: 34, scope: !6036)
!6050 = !DILocation(line: 354, column: 53, scope: !6036)
!6051 = !DILocation(line: 354, column: 61, scope: !6036)
!6052 = !DILocation(line: 354, column: 64, scope: !6036)
!6053 = !DILocation(line: 354, column: 60, scope: !6036)
!6054 = !DILocation(line: 354, column: 59, scope: !6036)
!6055 = !DILocation(line: 354, column: 57, scope: !6036)
!6056 = !DILocation(line: 354, column: 11, scope: !6036)
!6057 = !DILocation(line: 355, column: 13, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6036, file: !953, line: 355, column: 13)
!6059 = !DILocation(line: 355, column: 13, scope: !6036)
!6060 = !DILocation(line: 356, column: 20, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6058, file: !953, line: 355, column: 16)
!6062 = !DILocation(line: 356, column: 23, scope: !6061)
!6063 = !DILocation(line: 356, column: 72, scope: !6061)
!6064 = !DILocation(line: 356, column: 13, scope: !6061)
!6065 = !DILocation(line: 357, column: 13, scope: !6061)
!6066 = !DILocation(line: 357, column: 17, scope: !6061)
!6067 = !DILocation(line: 357, column: 31, scope: !6061)
!6068 = !DILocation(line: 358, column: 9, scope: !6061)
!6069 = !DILocation(line: 359, column: 5, scope: !6036)
!6070 = !DILocation(line: 46, column: 9, scope: !6071, inlinedAt: !6075)
!6071 = distinct !DISubprogram(name: "emms_c", scope: !6072, file: !6072, line: 37, type: !6073, isLocal: true, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!6072 = !DIFile(filename: "./libavutil/x86/emms.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6073 = !DISubroutineType(types: !6074)
!6074 = !{null}
!6075 = distinct !DILocation(line: 361, column: 5, scope: !5405)
!6076 = !{i32 100610}
!6077 = !DILocation(line: 363, column: 32, scope: !5405)
!6078 = !DILocation(line: 363, column: 35, scope: !5405)
!6079 = !DILocation(line: 363, column: 44, scope: !5405)
!6080 = !DILocation(line: 363, column: 5, scope: !5405)
!6081 = !DILocation(line: 365, column: 5, scope: !5405)
!6082 = !DILocation(line: 366, column: 1, scope: !5405)
!6083 = distinct !DISubprogram(name: "decode_slice_header", scope: !953, file: !953, line: 167, type: !6084, isLocal: true, isDefinition: true, scopeLine: 168, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!6084 = !DISubroutineType(types: !6085)
!6085 = !{!923, !1709, !1709}
!6086 = !DILocalVariable(name: "f", arg: 1, scope: !6083, file: !953, line: 167, type: !1709)
!6087 = !DILocation(line: 167, column: 45, scope: !6083)
!6088 = !DILocalVariable(name: "fs", arg: 2, scope: !6083, file: !953, line: 167, type: !1709)
!6089 = !DILocation(line: 167, column: 61, scope: !6083)
!6090 = !DILocalVariable(name: "c", scope: !6083, file: !953, line: 169, type: !2189)
!6091 = !DILocation(line: 169, column: 17, scope: !6083)
!6092 = !DILocation(line: 169, column: 22, scope: !6083)
!6093 = !DILocation(line: 169, column: 26, scope: !6083)
!6094 = !DILocalVariable(name: "state", scope: !6083, file: !953, line: 170, type: !1809)
!6095 = !DILocation(line: 170, column: 13, scope: !6083)
!6096 = !DILocalVariable(name: "ps", scope: !6083, file: !953, line: 171, type: !924)
!6097 = !DILocation(line: 171, column: 14, scope: !6083)
!6098 = !DILocalVariable(name: "i", scope: !6083, file: !953, line: 171, type: !924)
!6099 = !DILocation(line: 171, column: 18, scope: !6083)
!6100 = !DILocalVariable(name: "context_count", scope: !6083, file: !953, line: 171, type: !924)
!6101 = !DILocation(line: 171, column: 21, scope: !6083)
!6102 = !DILocation(line: 172, column: 5, scope: !6083)
!6103 = !DILocation(line: 174, column: 5, scope: !6083)
!6104 = distinct !{!6104, !6103}
!6105 = !DILocation(line: 174, column: 16, scope: !6106)
!6106 = !DILexicalBlockFile(scope: !6107, file: !953, discriminator: 1)
!6107 = distinct !DILexicalBlock(scope: !6108, file: !953, line: 174, column: 14)
!6108 = distinct !DILexicalBlock(scope: !6083, file: !953, line: 174, column: 8)
!6109 = !DILocation(line: 174, column: 19, scope: !6106)
!6110 = !DILocation(line: 174, column: 27, scope: !6106)
!6111 = !DILocation(line: 174, column: 14, scope: !6106)
!6112 = !DILocation(line: 174, column: 35, scope: !6113)
!6113 = !DILexicalBlockFile(scope: !6114, file: !953, discriminator: 2)
!6114 = distinct !DILexicalBlock(scope: !6107, file: !953, line: 174, column: 33)
!6115 = !DILocation(line: 174, column: 91, scope: !6116)
!6116 = !DILexicalBlockFile(scope: !6113, file: !953, discriminator: 4)
!6117 = !DILocation(line: 174, column: 91, scope: !6113)
!6118 = !DILocation(line: 174, column: 102, scope: !6119)
!6119 = !DILexicalBlockFile(scope: !6108, file: !953, discriminator: 3)
!6120 = !DILocation(line: 176, column: 30, scope: !6083)
!6121 = !DILocation(line: 176, column: 33, scope: !6083)
!6122 = !DILocation(line: 176, column: 19, scope: !6083)
!6123 = !DILocation(line: 176, column: 45, scope: !6083)
!6124 = !DILocation(line: 176, column: 48, scope: !6083)
!6125 = !DILocation(line: 176, column: 43, scope: !6083)
!6126 = !DILocation(line: 176, column: 5, scope: !6083)
!6127 = !DILocation(line: 176, column: 9, scope: !6083)
!6128 = !DILocation(line: 176, column: 17, scope: !6083)
!6129 = !DILocation(line: 177, column: 30, scope: !6083)
!6130 = !DILocation(line: 177, column: 33, scope: !6083)
!6131 = !DILocation(line: 177, column: 19, scope: !6083)
!6132 = !DILocation(line: 177, column: 45, scope: !6083)
!6133 = !DILocation(line: 177, column: 48, scope: !6083)
!6134 = !DILocation(line: 177, column: 43, scope: !6083)
!6135 = !DILocation(line: 177, column: 5, scope: !6083)
!6136 = !DILocation(line: 177, column: 9, scope: !6083)
!6137 = !DILocation(line: 177, column: 17, scope: !6083)
!6138 = !DILocation(line: 178, column: 35, scope: !6083)
!6139 = !DILocation(line: 178, column: 38, scope: !6083)
!6140 = !DILocation(line: 178, column: 24, scope: !6083)
!6141 = !DILocation(line: 178, column: 48, scope: !6083)
!6142 = !DILocation(line: 178, column: 55, scope: !6083)
!6143 = !DILocation(line: 178, column: 58, scope: !6083)
!6144 = !DILocation(line: 178, column: 53, scope: !6083)
!6145 = !DILocation(line: 178, column: 66, scope: !6083)
!6146 = !DILocation(line: 178, column: 70, scope: !6083)
!6147 = !DILocation(line: 178, column: 64, scope: !6083)
!6148 = !DILocation(line: 178, column: 5, scope: !6083)
!6149 = !DILocation(line: 178, column: 9, scope: !6083)
!6150 = !DILocation(line: 178, column: 21, scope: !6083)
!6151 = !DILocation(line: 179, column: 36, scope: !6083)
!6152 = !DILocation(line: 179, column: 39, scope: !6083)
!6153 = !DILocation(line: 179, column: 25, scope: !6083)
!6154 = !DILocation(line: 179, column: 49, scope: !6083)
!6155 = !DILocation(line: 179, column: 56, scope: !6083)
!6156 = !DILocation(line: 179, column: 59, scope: !6083)
!6157 = !DILocation(line: 179, column: 54, scope: !6083)
!6158 = !DILocation(line: 179, column: 68, scope: !6083)
!6159 = !DILocation(line: 179, column: 72, scope: !6083)
!6160 = !DILocation(line: 179, column: 66, scope: !6083)
!6161 = !DILocation(line: 179, column: 5, scope: !6083)
!6162 = !DILocation(line: 179, column: 9, scope: !6083)
!6163 = !DILocation(line: 179, column: 22, scope: !6083)
!6164 = !DILocation(line: 181, column: 20, scope: !6083)
!6165 = !DILocation(line: 181, column: 23, scope: !6083)
!6166 = !DILocation(line: 181, column: 5, scope: !6083)
!6167 = !DILocation(line: 181, column: 9, scope: !6083)
!6168 = !DILocation(line: 181, column: 17, scope: !6083)
!6169 = !DILocation(line: 182, column: 20, scope: !6083)
!6170 = !DILocation(line: 182, column: 23, scope: !6083)
!6171 = !DILocation(line: 182, column: 5, scope: !6083)
!6172 = !DILocation(line: 182, column: 9, scope: !6083)
!6173 = !DILocation(line: 182, column: 17, scope: !6083)
!6174 = !DILocation(line: 183, column: 23, scope: !6083)
!6175 = !DILocation(line: 183, column: 27, scope: !6083)
!6176 = !DILocation(line: 183, column: 40, scope: !6083)
!6177 = !DILocation(line: 183, column: 43, scope: !6083)
!6178 = !DILocation(line: 183, column: 39, scope: !6083)
!6179 = !DILocation(line: 183, column: 58, scope: !6083)
!6180 = !DILocation(line: 183, column: 62, scope: !6083)
!6181 = !DILocation(line: 183, column: 56, scope: !6083)
!6182 = !DILocation(line: 183, column: 5, scope: !6083)
!6183 = !DILocation(line: 183, column: 9, scope: !6083)
!6184 = !DILocation(line: 183, column: 21, scope: !6083)
!6185 = !DILocation(line: 184, column: 24, scope: !6083)
!6186 = !DILocation(line: 184, column: 28, scope: !6083)
!6187 = !DILocation(line: 184, column: 41, scope: !6083)
!6188 = !DILocation(line: 184, column: 44, scope: !6083)
!6189 = !DILocation(line: 184, column: 40, scope: !6083)
!6190 = !DILocation(line: 184, column: 59, scope: !6083)
!6191 = !DILocation(line: 184, column: 63, scope: !6083)
!6192 = !DILocation(line: 184, column: 57, scope: !6083)
!6193 = !DILocation(line: 184, column: 5, scope: !6083)
!6194 = !DILocation(line: 184, column: 9, scope: !6083)
!6195 = !DILocation(line: 184, column: 22, scope: !6083)
!6196 = !DILocation(line: 185, column: 19, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6083, file: !953, line: 185, column: 9)
!6198 = !DILocation(line: 185, column: 23, scope: !6197)
!6199 = !DILocation(line: 185, column: 37, scope: !6197)
!6200 = !DILocation(line: 185, column: 40, scope: !6197)
!6201 = !DILocation(line: 185, column: 35, scope: !6197)
!6202 = !DILocation(line: 185, column: 46, scope: !6197)
!6203 = !DILocation(line: 185, column: 59, scope: !6204)
!6204 = !DILexicalBlockFile(scope: !6197, file: !953, discriminator: 1)
!6205 = !DILocation(line: 185, column: 63, scope: !6204)
!6206 = !DILocation(line: 185, column: 78, scope: !6204)
!6207 = !DILocation(line: 185, column: 81, scope: !6204)
!6208 = !DILocation(line: 185, column: 76, scope: !6204)
!6209 = !DILocation(line: 185, column: 9, scope: !6204)
!6210 = !DILocation(line: 186, column: 9, scope: !6197)
!6211 = !DILocation(line: 187, column: 20, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6083, file: !953, line: 187, column: 10)
!6213 = !DILocation(line: 187, column: 24, scope: !6212)
!6214 = !DILocation(line: 187, column: 10, scope: !6212)
!6215 = !DILocation(line: 187, column: 44, scope: !6212)
!6216 = !DILocation(line: 187, column: 48, scope: !6212)
!6217 = !DILocation(line: 187, column: 34, scope: !6212)
!6218 = !DILocation(line: 187, column: 32, scope: !6212)
!6219 = !DILocation(line: 187, column: 62, scope: !6212)
!6220 = !DILocation(line: 187, column: 65, scope: !6212)
!6221 = !DILocation(line: 187, column: 60, scope: !6212)
!6222 = !DILocation(line: 188, column: 10, scope: !6212)
!6223 = !DILocation(line: 188, column: 23, scope: !6224)
!6224 = !DILexicalBlockFile(scope: !6212, file: !953, discriminator: 1)
!6225 = !DILocation(line: 188, column: 27, scope: !6224)
!6226 = !DILocation(line: 188, column: 13, scope: !6224)
!6227 = !DILocation(line: 188, column: 47, scope: !6224)
!6228 = !DILocation(line: 188, column: 51, scope: !6224)
!6229 = !DILocation(line: 188, column: 37, scope: !6224)
!6230 = !DILocation(line: 188, column: 35, scope: !6224)
!6231 = !DILocation(line: 188, column: 66, scope: !6224)
!6232 = !DILocation(line: 188, column: 69, scope: !6224)
!6233 = !DILocation(line: 188, column: 64, scope: !6224)
!6234 = !DILocation(line: 187, column: 10, scope: !6235)
!6235 = !DILexicalBlockFile(scope: !6083, file: !953, discriminator: 1)
!6236 = !DILocation(line: 189, column: 9, scope: !6212)
!6237 = !DILocation(line: 191, column: 12, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6083, file: !953, line: 191, column: 5)
!6239 = !DILocation(line: 191, column: 10, scope: !6238)
!6240 = !DILocation(line: 191, column: 17, scope: !6241)
!6241 = !DILexicalBlockFile(scope: !6242, file: !953, discriminator: 1)
!6242 = distinct !DILexicalBlock(scope: !6238, file: !953, line: 191, column: 5)
!6243 = !DILocation(line: 191, column: 21, scope: !6241)
!6244 = !DILocation(line: 191, column: 24, scope: !6241)
!6245 = !DILocation(line: 191, column: 19, scope: !6241)
!6246 = !DILocation(line: 191, column: 5, scope: !6241)
!6247 = !DILocalVariable(name: "p", scope: !6248, file: !953, line: 192, type: !5288)
!6248 = distinct !DILexicalBlock(scope: !6242, file: !953, line: 191, column: 42)
!6249 = !DILocation(line: 192, column: 30, scope: !6248)
!6250 = !DILocation(line: 192, column: 45, scope: !6248)
!6251 = !DILocation(line: 192, column: 35, scope: !6248)
!6252 = !DILocation(line: 192, column: 39, scope: !6248)
!6253 = !DILocalVariable(name: "idx", scope: !6248, file: !953, line: 193, type: !923)
!6254 = !DILocation(line: 193, column: 13, scope: !6248)
!6255 = !DILocation(line: 193, column: 30, scope: !6248)
!6256 = !DILocation(line: 193, column: 33, scope: !6248)
!6257 = !DILocation(line: 193, column: 19, scope: !6248)
!6258 = !DILocation(line: 194, column: 13, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6248, file: !953, line: 194, column: 13)
!6260 = !DILocation(line: 194, column: 30, scope: !6259)
!6261 = !DILocation(line: 194, column: 33, scope: !6259)
!6262 = !DILocation(line: 194, column: 17, scope: !6259)
!6263 = !DILocation(line: 194, column: 13, scope: !6248)
!6264 = !DILocation(line: 195, column: 20, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6259, file: !953, line: 194, column: 52)
!6266 = !DILocation(line: 195, column: 23, scope: !6265)
!6267 = !DILocation(line: 195, column: 13, scope: !6265)
!6268 = !DILocation(line: 196, column: 13, scope: !6265)
!6269 = !DILocation(line: 198, column: 32, scope: !6248)
!6270 = !DILocation(line: 198, column: 9, scope: !6248)
!6271 = !DILocation(line: 198, column: 12, scope: !6248)
!6272 = !DILocation(line: 198, column: 30, scope: !6248)
!6273 = !DILocation(line: 199, column: 16, scope: !6248)
!6274 = !DILocation(line: 199, column: 19, scope: !6248)
!6275 = !DILocation(line: 199, column: 9, scope: !6248)
!6276 = !DILocation(line: 199, column: 48, scope: !6248)
!6277 = !DILocation(line: 199, column: 32, scope: !6248)
!6278 = !DILocation(line: 199, column: 35, scope: !6248)
!6279 = !DILocation(line: 200, column: 42, scope: !6248)
!6280 = !DILocation(line: 200, column: 25, scope: !6248)
!6281 = !DILocation(line: 200, column: 28, scope: !6248)
!6282 = !DILocation(line: 200, column: 23, scope: !6248)
!6283 = !DILocation(line: 202, column: 13, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6248, file: !953, line: 202, column: 13)
!6285 = !DILocation(line: 202, column: 16, scope: !6284)
!6286 = !DILocation(line: 202, column: 32, scope: !6284)
!6287 = !DILocation(line: 202, column: 30, scope: !6284)
!6288 = !DILocation(line: 202, column: 13, scope: !6248)
!6289 = !DILocation(line: 203, column: 23, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6284, file: !953, line: 202, column: 47)
!6291 = !DILocation(line: 203, column: 26, scope: !6290)
!6292 = !DILocation(line: 203, column: 22, scope: !6290)
!6293 = !DILocation(line: 203, column: 13, scope: !6290)
!6294 = !DILocation(line: 204, column: 23, scope: !6290)
!6295 = !DILocation(line: 204, column: 26, scope: !6290)
!6296 = !DILocation(line: 204, column: 22, scope: !6290)
!6297 = !DILocation(line: 204, column: 13, scope: !6290)
!6298 = !DILocation(line: 205, column: 9, scope: !6290)
!6299 = !DILocation(line: 206, column: 28, scope: !6248)
!6300 = !DILocation(line: 206, column: 9, scope: !6248)
!6301 = !DILocation(line: 206, column: 12, scope: !6248)
!6302 = !DILocation(line: 206, column: 26, scope: !6248)
!6303 = !DILocation(line: 207, column: 5, scope: !6248)
!6304 = !DILocation(line: 191, column: 38, scope: !6305)
!6305 = !DILexicalBlockFile(scope: !6242, file: !953, discriminator: 2)
!6306 = !DILocation(line: 191, column: 5, scope: !6305)
!6307 = distinct !{!6307, !6308}
!6308 = !DILocation(line: 191, column: 5, scope: !6083)
!6309 = !DILocation(line: 209, column: 21, scope: !6083)
!6310 = !DILocation(line: 209, column: 24, scope: !6083)
!6311 = !DILocation(line: 209, column: 10, scope: !6083)
!6312 = !DILocation(line: 209, column: 8, scope: !6083)
!6313 = !DILocation(line: 210, column: 9, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6083, file: !953, line: 210, column: 9)
!6315 = !DILocation(line: 210, column: 12, scope: !6314)
!6316 = !DILocation(line: 210, column: 9, scope: !6083)
!6317 = !DILocation(line: 211, column: 9, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6314, file: !953, line: 210, column: 18)
!6319 = !DILocation(line: 211, column: 12, scope: !6318)
!6320 = !DILocation(line: 211, column: 17, scope: !6318)
!6321 = !DILocation(line: 211, column: 34, scope: !6318)
!6322 = !DILocation(line: 212, column: 9, scope: !6318)
!6323 = !DILocation(line: 212, column: 12, scope: !6318)
!6324 = !DILocation(line: 212, column: 17, scope: !6318)
!6325 = !DILocation(line: 212, column: 33, scope: !6318)
!6326 = !DILocation(line: 213, column: 5, scope: !6318)
!6327 = !DILocation(line: 213, column: 16, scope: !6328)
!6328 = !DILexicalBlockFile(scope: !6329, file: !953, discriminator: 1)
!6329 = distinct !DILexicalBlock(scope: !6314, file: !953, line: 213, column: 16)
!6330 = !DILocation(line: 213, column: 19, scope: !6328)
!6331 = !DILocation(line: 214, column: 9, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6329, file: !953, line: 213, column: 25)
!6333 = !DILocation(line: 214, column: 12, scope: !6332)
!6334 = !DILocation(line: 214, column: 17, scope: !6332)
!6335 = !DILocation(line: 214, column: 34, scope: !6332)
!6336 = !DILocation(line: 215, column: 9, scope: !6332)
!6337 = !DILocation(line: 215, column: 12, scope: !6332)
!6338 = !DILocation(line: 215, column: 17, scope: !6332)
!6339 = !DILocation(line: 215, column: 33, scope: !6332)
!6340 = !DILocation(line: 216, column: 5, scope: !6332)
!6341 = !DILocation(line: 216, column: 16, scope: !6342)
!6342 = !DILexicalBlockFile(scope: !6343, file: !953, discriminator: 1)
!6343 = distinct !DILexicalBlock(scope: !6329, file: !953, line: 216, column: 16)
!6344 = !DILocation(line: 216, column: 19, scope: !6342)
!6345 = !DILocation(line: 217, column: 9, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6343, file: !953, line: 216, column: 25)
!6347 = !DILocation(line: 217, column: 12, scope: !6346)
!6348 = !DILocation(line: 217, column: 17, scope: !6346)
!6349 = !DILocation(line: 217, column: 34, scope: !6346)
!6350 = !DILocation(line: 218, column: 5, scope: !6346)
!6351 = !DILocation(line: 219, column: 50, scope: !6083)
!6352 = !DILocation(line: 219, column: 53, scope: !6083)
!6353 = !DILocation(line: 219, column: 39, scope: !6083)
!6354 = !DILocation(line: 219, column: 5, scope: !6083)
!6355 = !DILocation(line: 219, column: 8, scope: !6083)
!6356 = !DILocation(line: 219, column: 13, scope: !6083)
!6357 = !DILocation(line: 219, column: 33, scope: !6083)
!6358 = !DILocation(line: 219, column: 37, scope: !6083)
!6359 = !DILocation(line: 220, column: 50, scope: !6083)
!6360 = !DILocation(line: 220, column: 53, scope: !6083)
!6361 = !DILocation(line: 220, column: 39, scope: !6083)
!6362 = !DILocation(line: 220, column: 5, scope: !6083)
!6363 = !DILocation(line: 220, column: 8, scope: !6083)
!6364 = !DILocation(line: 220, column: 13, scope: !6083)
!6365 = !DILocation(line: 220, column: 33, scope: !6083)
!6366 = !DILocation(line: 220, column: 37, scope: !6083)
!6367 = !DILocation(line: 222, column: 28, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6083, file: !953, line: 222, column: 9)
!6369 = !DILocation(line: 222, column: 31, scope: !6368)
!6370 = !DILocation(line: 222, column: 38, scope: !6368)
!6371 = !DILocation(line: 222, column: 41, scope: !6368)
!6372 = !DILocation(line: 223, column: 28, scope: !6368)
!6373 = !DILocation(line: 223, column: 31, scope: !6368)
!6374 = !DILocation(line: 223, column: 36, scope: !6368)
!6375 = !DILocation(line: 222, column: 9, scope: !6368)
!6376 = !DILocation(line: 223, column: 57, scope: !6368)
!6377 = !DILocation(line: 222, column: 9, scope: !6083)
!6378 = !DILocation(line: 224, column: 16, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6368, file: !953, line: 223, column: 62)
!6380 = !DILocation(line: 224, column: 19, scope: !6379)
!6381 = !DILocation(line: 225, column: 16, scope: !6379)
!6382 = !DILocation(line: 225, column: 19, scope: !6379)
!6383 = !DILocation(line: 225, column: 24, scope: !6379)
!6384 = !DILocation(line: 225, column: 44, scope: !6379)
!6385 = !DILocation(line: 226, column: 16, scope: !6379)
!6386 = !DILocation(line: 226, column: 19, scope: !6379)
!6387 = !DILocation(line: 226, column: 24, scope: !6379)
!6388 = !DILocation(line: 226, column: 44, scope: !6379)
!6389 = !DILocation(line: 224, column: 9, scope: !6379)
!6390 = !DILocation(line: 227, column: 9, scope: !6379)
!6391 = !DILocation(line: 227, column: 12, scope: !6379)
!6392 = !DILocation(line: 227, column: 17, scope: !6379)
!6393 = !DILocation(line: 227, column: 51, scope: !6379)
!6394 = !DILocation(line: 227, column: 39, scope: !6379)
!6395 = !DILocation(line: 228, column: 5, scope: !6379)
!6396 = !DILocation(line: 230, column: 9, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6083, file: !953, line: 230, column: 9)
!6398 = !DILocation(line: 230, column: 13, scope: !6397)
!6399 = !DILocation(line: 230, column: 21, scope: !6397)
!6400 = !DILocation(line: 230, column: 9, scope: !6083)
!6401 = !DILocation(line: 231, column: 44, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6397, file: !953, line: 230, column: 26)
!6403 = !DILocation(line: 231, column: 47, scope: !6402)
!6404 = !DILocation(line: 231, column: 36, scope: !6402)
!6405 = !DILocation(line: 231, column: 9, scope: !6402)
!6406 = !DILocation(line: 231, column: 13, scope: !6402)
!6407 = !DILocation(line: 231, column: 34, scope: !6402)
!6408 = !DILocation(line: 232, column: 44, scope: !6402)
!6409 = !DILocation(line: 232, column: 47, scope: !6402)
!6410 = !DILocation(line: 232, column: 33, scope: !6402)
!6411 = !DILocation(line: 232, column: 9, scope: !6402)
!6412 = !DILocation(line: 232, column: 13, scope: !6402)
!6413 = !DILocation(line: 232, column: 31, scope: !6402)
!6414 = !DILocation(line: 233, column: 13, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6402, file: !953, line: 233, column: 13)
!6416 = !DILocation(line: 233, column: 17, scope: !6415)
!6417 = !DILocation(line: 233, column: 35, scope: !6415)
!6418 = !DILocation(line: 233, column: 13, scope: !6402)
!6419 = !DILocation(line: 234, column: 48, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6415, file: !953, line: 233, column: 41)
!6421 = !DILocation(line: 234, column: 51, scope: !6420)
!6422 = !DILocation(line: 234, column: 37, scope: !6420)
!6423 = !DILocation(line: 234, column: 13, scope: !6420)
!6424 = !DILocation(line: 234, column: 17, scope: !6420)
!6425 = !DILocation(line: 234, column: 35, scope: !6420)
!6426 = !DILocation(line: 235, column: 48, scope: !6420)
!6427 = !DILocation(line: 235, column: 51, scope: !6420)
!6428 = !DILocation(line: 235, column: 37, scope: !6420)
!6429 = !DILocation(line: 235, column: 13, scope: !6420)
!6430 = !DILocation(line: 235, column: 17, scope: !6420)
!6431 = !DILocation(line: 235, column: 35, scope: !6420)
!6432 = !DILocation(line: 236, column: 27, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6420, file: !953, line: 236, column: 17)
!6434 = !DILocation(line: 236, column: 31, scope: !6433)
!6435 = !DILocation(line: 236, column: 17, scope: !6433)
!6436 = !DILocation(line: 236, column: 61, scope: !6433)
!6437 = !DILocation(line: 236, column: 65, scope: !6433)
!6438 = !DILocation(line: 236, column: 51, scope: !6433)
!6439 = !DILocation(line: 236, column: 49, scope: !6433)
!6440 = !DILocation(line: 236, column: 83, scope: !6433)
!6441 = !DILocation(line: 236, column: 17, scope: !6420)
!6442 = !DILocation(line: 237, column: 24, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6433, file: !953, line: 236, column: 88)
!6444 = !DILocation(line: 237, column: 27, scope: !6443)
!6445 = !DILocation(line: 237, column: 17, scope: !6443)
!6446 = !DILocation(line: 238, column: 17, scope: !6443)
!6447 = !DILocation(line: 240, column: 9, scope: !6420)
!6448 = !DILocation(line: 241, column: 5, scope: !6402)
!6449 = !DILocation(line: 243, column: 5, scope: !6083)
!6450 = !DILocation(line: 244, column: 1, scope: !6083)
!6451 = distinct !DISubprogram(name: "init_get_bits", scope: !1737, file: !1737, line: 615, type: !6452, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!6452 = !DISubroutineType(types: !6453)
!6453 = !{!923, !6454, !933, !923}
!6454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64, align: 64)
!6455 = !DILocalVariable(name: "s", arg: 1, scope: !6451, file: !1737, line: 615, type: !6454)
!6456 = !DILocation(line: 615, column: 48, scope: !6451)
!6457 = !DILocalVariable(name: "buffer", arg: 2, scope: !6451, file: !1737, line: 615, type: !933)
!6458 = !DILocation(line: 615, column: 66, scope: !6451)
!6459 = !DILocalVariable(name: "bit_size", arg: 3, scope: !6451, file: !1737, line: 616, type: !923)
!6460 = !DILocation(line: 616, column: 37, scope: !6451)
!6461 = !DILocalVariable(name: "buffer_size", scope: !6451, file: !1737, line: 618, type: !923)
!6462 = !DILocation(line: 618, column: 9, scope: !6451)
!6463 = !DILocalVariable(name: "ret", scope: !6451, file: !1737, line: 619, type: !923)
!6464 = !DILocation(line: 619, column: 9, scope: !6451)
!6465 = !DILocation(line: 621, column: 9, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6451, file: !1737, line: 621, column: 9)
!6467 = !DILocation(line: 621, column: 18, scope: !6466)
!6468 = !DILocation(line: 621, column: 64, scope: !6466)
!6469 = !DILocation(line: 621, column: 67, scope: !6470)
!6470 = !DILexicalBlockFile(scope: !6466, file: !1737, discriminator: 1)
!6471 = !DILocation(line: 621, column: 76, scope: !6470)
!6472 = !DILocation(line: 621, column: 80, scope: !6470)
!6473 = !DILocation(line: 621, column: 84, scope: !6474)
!6474 = !DILexicalBlockFile(scope: !6466, file: !1737, discriminator: 2)
!6475 = !DILocation(line: 621, column: 9, scope: !6474)
!6476 = !DILocation(line: 622, column: 18, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6466, file: !1737, line: 621, column: 92)
!6478 = !DILocation(line: 623, column: 16, scope: !6477)
!6479 = !DILocation(line: 624, column: 13, scope: !6477)
!6480 = !DILocation(line: 625, column: 5, scope: !6477)
!6481 = !DILocation(line: 627, column: 20, scope: !6451)
!6482 = !DILocation(line: 627, column: 29, scope: !6451)
!6483 = !DILocation(line: 627, column: 34, scope: !6451)
!6484 = !DILocation(line: 627, column: 17, scope: !6451)
!6485 = !DILocation(line: 629, column: 17, scope: !6451)
!6486 = !DILocation(line: 629, column: 5, scope: !6451)
!6487 = !DILocation(line: 629, column: 8, scope: !6451)
!6488 = !DILocation(line: 629, column: 15, scope: !6451)
!6489 = !DILocation(line: 630, column: 23, scope: !6451)
!6490 = !DILocation(line: 630, column: 5, scope: !6451)
!6491 = !DILocation(line: 630, column: 8, scope: !6451)
!6492 = !DILocation(line: 630, column: 21, scope: !6451)
!6493 = !DILocation(line: 631, column: 29, scope: !6451)
!6494 = !DILocation(line: 631, column: 38, scope: !6451)
!6495 = !DILocation(line: 631, column: 5, scope: !6451)
!6496 = !DILocation(line: 631, column: 8, scope: !6451)
!6497 = !DILocation(line: 631, column: 27, scope: !6451)
!6498 = !DILocation(line: 632, column: 21, scope: !6451)
!6499 = !DILocation(line: 632, column: 30, scope: !6451)
!6500 = !DILocation(line: 632, column: 28, scope: !6451)
!6501 = !DILocation(line: 632, column: 5, scope: !6451)
!6502 = !DILocation(line: 632, column: 8, scope: !6451)
!6503 = !DILocation(line: 632, column: 19, scope: !6451)
!6504 = !DILocation(line: 633, column: 5, scope: !6451)
!6505 = !DILocation(line: 633, column: 8, scope: !6451)
!6506 = !DILocation(line: 633, column: 14, scope: !6451)
!6507 = !DILocation(line: 639, column: 12, scope: !6451)
!6508 = !DILocation(line: 639, column: 5, scope: !6451)
!6509 = distinct !DISubprogram(name: "decode_plane", scope: !953, file: !953, line: 119, type: !6510, isLocal: true, isDefinition: true, scopeLine: 122, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!6510 = !DISubroutineType(types: !6511)
!6511 = !{!923, !1709, !1103, !923, !923, !923, !923, !923}
!6512 = !DILocalVariable(name: "a", arg: 1, scope: !6513, file: !6514, line: 241, type: !924)
!6513 = distinct !DISubprogram(name: "av_mod_uintp2_c", scope: !6514, file: !6514, line: 241, type: !6515, isLocal: true, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!6514 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6515 = !DISubroutineType(types: !6516)
!6516 = !{!924, !924, !924}
!6517 = !DILocation(line: 241, column: 103, scope: !6513, inlinedAt: !6518)
!6518 = distinct !DILocation(line: 109, column: 24, scope: !6519, inlinedAt: !6528)
!6519 = !DILexicalBlockFile(scope: !6521, file: !6520, discriminator: 1)
!6520 = !DIFile(filename: "libavcodec/ffv1dec_template.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6521 = distinct !DILexicalBlock(scope: !6522, file: !6520, line: 50, column: 29)
!6522 = distinct !DILexicalBlock(scope: !6523, file: !6520, line: 50, column: 5)
!6523 = distinct !DILexicalBlock(scope: !6524, file: !6520, line: 50, column: 5)
!6524 = distinct !DISubprogram(name: "decode_line", scope: !6520, file: !6520, line: 23, type: !6525, isLocal: true, isDefinition: true, scopeLine: 26, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!6525 = !DISubroutineType(types: !6526)
!6526 = !{!923, !1709, !923, !6527, !923, !923}
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64, align: 64)
!6528 = distinct !DILocation(line: 149, column: 23, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6530, file: !953, line: 148, column: 16)
!6530 = distinct !DILexicalBlock(scope: !6531, file: !953, line: 142, column: 13)
!6531 = distinct !DILexicalBlock(scope: !6532, file: !953, line: 132, column: 29)
!6532 = distinct !DILexicalBlock(scope: !6533, file: !953, line: 132, column: 5)
!6533 = distinct !DILexicalBlock(scope: !6509, file: !953, line: 132, column: 5)
!6534 = !DILocalVariable(name: "p", arg: 2, scope: !6513, file: !6514, line: 241, type: !924)
!6535 = !DILocation(line: 241, column: 115, scope: !6513, inlinedAt: !6518)
!6536 = !DILocalVariable(name: "s", arg: 1, scope: !6524, file: !6520, line: 23, type: !1709)
!6537 = !DILocation(line: 23, column: 75, scope: !6524, inlinedAt: !6528)
!6538 = !DILocalVariable(name: "w", arg: 2, scope: !6524, file: !6520, line: 23, type: !923)
!6539 = !DILocation(line: 23, column: 82, scope: !6524, inlinedAt: !6528)
!6540 = !DILocalVariable(name: "sample", arg: 3, scope: !6524, file: !6520, line: 24, type: !6527)
!6541 = !DILocation(line: 24, column: 59, scope: !6524, inlinedAt: !6528)
!6542 = !DILocalVariable(name: "plane_index", arg: 4, scope: !6524, file: !6520, line: 25, type: !923)
!6543 = !DILocation(line: 25, column: 54, scope: !6524, inlinedAt: !6528)
!6544 = !DILocalVariable(name: "bits", arg: 5, scope: !6524, file: !6520, line: 25, type: !923)
!6545 = !DILocation(line: 25, column: 71, scope: !6524, inlinedAt: !6528)
!6546 = !DILocalVariable(name: "p", scope: !6524, file: !6520, line: 27, type: !5288)
!6547 = !DILocation(line: 27, column: 25, scope: !6524, inlinedAt: !6528)
!6548 = !DILocalVariable(name: "c", scope: !6524, file: !6520, line: 28, type: !2188)
!6549 = !DILocation(line: 28, column: 23, scope: !6524, inlinedAt: !6528)
!6550 = !DILocalVariable(name: "x", scope: !6524, file: !6520, line: 29, type: !923)
!6551 = !DILocation(line: 29, column: 9, scope: !6524, inlinedAt: !6528)
!6552 = !DILocalVariable(name: "run_count", scope: !6524, file: !6520, line: 30, type: !923)
!6553 = !DILocation(line: 30, column: 9, scope: !6524, inlinedAt: !6528)
!6554 = !DILocalVariable(name: "run_mode", scope: !6524, file: !6520, line: 31, type: !923)
!6555 = !DILocation(line: 31, column: 9, scope: !6524, inlinedAt: !6528)
!6556 = !DILocalVariable(name: "run_index", scope: !6524, file: !6520, line: 32, type: !923)
!6557 = !DILocation(line: 32, column: 9, scope: !6524, inlinedAt: !6528)
!6558 = !DILocalVariable(name: "i", scope: !6559, file: !6520, line: 38, type: !923)
!6559 = distinct !DILexicalBlock(scope: !6560, file: !6520, line: 37, column: 36)
!6560 = distinct !DILexicalBlock(scope: !6524, file: !6520, line: 37, column: 9)
!6561 = !DILocation(line: 38, column: 13, scope: !6559, inlinedAt: !6528)
!6562 = !DILocalVariable(name: "v", scope: !6563, file: !6520, line: 40, type: !923)
!6563 = distinct !DILexicalBlock(scope: !6564, file: !6520, line: 39, column: 33)
!6564 = distinct !DILexicalBlock(scope: !6565, file: !6520, line: 39, column: 9)
!6565 = distinct !DILexicalBlock(scope: !6559, file: !6520, line: 39, column: 9)
!6566 = !DILocation(line: 40, column: 17, scope: !6563, inlinedAt: !6528)
!6567 = !DILocalVariable(name: "state", scope: !6568, file: !6520, line: 42, type: !935)
!6568 = distinct !DILexicalBlock(scope: !6569, file: !6520, line: 41, column: 36)
!6569 = distinct !DILexicalBlock(scope: !6570, file: !6520, line: 41, column: 13)
!6570 = distinct !DILexicalBlock(scope: !6563, file: !6520, line: 41, column: 13)
!6571 = !DILocation(line: 42, column: 25, scope: !6568, inlinedAt: !6528)
!6572 = !DILocalVariable(name: "diff", scope: !6521, file: !6520, line: 51, type: !923)
!6573 = !DILocation(line: 51, column: 13, scope: !6521, inlinedAt: !6528)
!6574 = !DILocalVariable(name: "context", scope: !6521, file: !6520, line: 51, type: !923)
!6575 = !DILocation(line: 51, column: 19, scope: !6521, inlinedAt: !6528)
!6576 = !DILocalVariable(name: "sign", scope: !6521, file: !6520, line: 51, type: !923)
!6577 = !DILocation(line: 51, column: 28, scope: !6521, inlinedAt: !6528)
!6578 = !DILocation(line: 241, column: 103, scope: !6513, inlinedAt: !6579)
!6579 = distinct !DILocation(line: 109, column: 24, scope: !6519, inlinedAt: !6580)
!6580 = distinct !DILocation(line: 143, column: 23, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6530, file: !953, line: 142, column: 49)
!6582 = !DILocation(line: 241, column: 115, scope: !6513, inlinedAt: !6579)
!6583 = !DILocation(line: 23, column: 75, scope: !6524, inlinedAt: !6580)
!6584 = !DILocation(line: 23, column: 82, scope: !6524, inlinedAt: !6580)
!6585 = !DILocation(line: 24, column: 59, scope: !6524, inlinedAt: !6580)
!6586 = !DILocation(line: 25, column: 54, scope: !6524, inlinedAt: !6580)
!6587 = !DILocation(line: 25, column: 71, scope: !6524, inlinedAt: !6580)
!6588 = !DILocation(line: 27, column: 25, scope: !6524, inlinedAt: !6580)
!6589 = !DILocation(line: 28, column: 23, scope: !6524, inlinedAt: !6580)
!6590 = !DILocation(line: 29, column: 9, scope: !6524, inlinedAt: !6580)
!6591 = !DILocation(line: 30, column: 9, scope: !6524, inlinedAt: !6580)
!6592 = !DILocation(line: 31, column: 9, scope: !6524, inlinedAt: !6580)
!6593 = !DILocation(line: 32, column: 9, scope: !6524, inlinedAt: !6580)
!6594 = !DILocation(line: 38, column: 13, scope: !6559, inlinedAt: !6580)
!6595 = !DILocation(line: 40, column: 17, scope: !6563, inlinedAt: !6580)
!6596 = !DILocation(line: 42, column: 25, scope: !6568, inlinedAt: !6580)
!6597 = !DILocation(line: 51, column: 13, scope: !6521, inlinedAt: !6580)
!6598 = !DILocation(line: 51, column: 19, scope: !6521, inlinedAt: !6580)
!6599 = !DILocation(line: 51, column: 28, scope: !6521, inlinedAt: !6580)
!6600 = !DILocalVariable(name: "s", arg: 1, scope: !6509, file: !953, line: 119, type: !1709)
!6601 = !DILocation(line: 119, column: 38, scope: !6509)
!6602 = !DILocalVariable(name: "src", arg: 2, scope: !6509, file: !953, line: 119, type: !1103)
!6603 = !DILocation(line: 119, column: 50, scope: !6509)
!6604 = !DILocalVariable(name: "w", arg: 3, scope: !6509, file: !953, line: 120, type: !923)
!6605 = !DILocation(line: 120, column: 30, scope: !6509)
!6606 = !DILocalVariable(name: "h", arg: 4, scope: !6509, file: !953, line: 120, type: !923)
!6607 = !DILocation(line: 120, column: 37, scope: !6509)
!6608 = !DILocalVariable(name: "stride", arg: 5, scope: !6509, file: !953, line: 120, type: !923)
!6609 = !DILocation(line: 120, column: 44, scope: !6509)
!6610 = !DILocalVariable(name: "plane_index", arg: 6, scope: !6509, file: !953, line: 120, type: !923)
!6611 = !DILocation(line: 120, column: 56, scope: !6509)
!6612 = !DILocalVariable(name: "pixel_stride", arg: 7, scope: !6509, file: !953, line: 121, type: !923)
!6613 = !DILocation(line: 121, column: 30, scope: !6509)
!6614 = !DILocalVariable(name: "x", scope: !6509, file: !953, line: 123, type: !923)
!6615 = !DILocation(line: 123, column: 9, scope: !6509)
!6616 = !DILocalVariable(name: "y", scope: !6509, file: !953, line: 123, type: !923)
!6617 = !DILocation(line: 123, column: 12, scope: !6509)
!6618 = !DILocalVariable(name: "sample", scope: !6509, file: !953, line: 124, type: !6619)
!6619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1833, size: 128, align: 64, elements: !1785)
!6620 = !DILocation(line: 124, column: 14, scope: !6509)
!6621 = !DILocation(line: 125, column: 17, scope: !6509)
!6622 = !DILocation(line: 125, column: 20, scope: !6509)
!6623 = !DILocation(line: 125, column: 34, scope: !6509)
!6624 = !DILocation(line: 125, column: 5, scope: !6509)
!6625 = !DILocation(line: 125, column: 15, scope: !6509)
!6626 = !DILocation(line: 126, column: 17, scope: !6509)
!6627 = !DILocation(line: 126, column: 20, scope: !6509)
!6628 = !DILocation(line: 126, column: 36, scope: !6509)
!6629 = !DILocation(line: 126, column: 34, scope: !6509)
!6630 = !DILocation(line: 126, column: 38, scope: !6509)
!6631 = !DILocation(line: 126, column: 42, scope: !6509)
!6632 = !DILocation(line: 126, column: 5, scope: !6509)
!6633 = !DILocation(line: 126, column: 15, scope: !6509)
!6634 = !DILocation(line: 128, column: 5, scope: !6509)
!6635 = !DILocation(line: 128, column: 8, scope: !6509)
!6636 = !DILocation(line: 128, column: 18, scope: !6509)
!6637 = !DILocation(line: 130, column: 12, scope: !6509)
!6638 = !DILocation(line: 130, column: 15, scope: !6509)
!6639 = !DILocation(line: 130, column: 5, scope: !6509)
!6640 = !DILocation(line: 130, column: 38, scope: !6509)
!6641 = !DILocation(line: 130, column: 40, scope: !6509)
!6642 = !DILocation(line: 130, column: 35, scope: !6509)
!6643 = !DILocation(line: 130, column: 33, scope: !6509)
!6644 = !DILocation(line: 130, column: 45, scope: !6509)
!6645 = !DILocation(line: 132, column: 12, scope: !6533)
!6646 = !DILocation(line: 132, column: 10, scope: !6533)
!6647 = !DILocation(line: 132, column: 17, scope: !6648)
!6648 = !DILexicalBlockFile(scope: !6532, file: !953, discriminator: 1)
!6649 = !DILocation(line: 132, column: 21, scope: !6648)
!6650 = !DILocation(line: 132, column: 19, scope: !6648)
!6651 = !DILocation(line: 132, column: 5, scope: !6648)
!6652 = !DILocalVariable(name: "temp", scope: !6531, file: !953, line: 133, type: !1833)
!6653 = !DILocation(line: 133, column: 18, scope: !6531)
!6654 = !DILocation(line: 133, column: 25, scope: !6531)
!6655 = !DILocation(line: 135, column: 21, scope: !6531)
!6656 = !DILocation(line: 135, column: 9, scope: !6531)
!6657 = !DILocation(line: 135, column: 19, scope: !6531)
!6658 = !DILocation(line: 136, column: 21, scope: !6531)
!6659 = !DILocation(line: 136, column: 9, scope: !6531)
!6660 = !DILocation(line: 136, column: 19, scope: !6531)
!6661 = !DILocation(line: 138, column: 25, scope: !6531)
!6662 = !DILocation(line: 138, column: 9, scope: !6531)
!6663 = !DILocation(line: 138, column: 23, scope: !6531)
!6664 = !DILocation(line: 139, column: 34, scope: !6531)
!6665 = !DILocation(line: 139, column: 36, scope: !6531)
!6666 = !DILocation(line: 139, column: 24, scope: !6531)
!6667 = !DILocation(line: 139, column: 19, scope: !6531)
!6668 = !DILocation(line: 139, column: 9, scope: !6531)
!6669 = !DILocation(line: 139, column: 22, scope: !6531)
!6670 = !DILocation(line: 142, column: 13, scope: !6530)
!6671 = !DILocation(line: 142, column: 16, scope: !6530)
!6672 = !DILocation(line: 142, column: 23, scope: !6530)
!6673 = !DILocation(line: 142, column: 43, scope: !6530)
!6674 = !DILocation(line: 142, column: 13, scope: !6531)
!6675 = !DILocalVariable(name: "ret", scope: !6581, file: !953, line: 143, type: !923)
!6676 = !DILocation(line: 143, column: 17, scope: !6581)
!6677 = !DILocation(line: 143, column: 35, scope: !6581)
!6678 = !DILocation(line: 143, column: 38, scope: !6581)
!6679 = !DILocation(line: 143, column: 41, scope: !6581)
!6680 = !DILocation(line: 143, column: 49, scope: !6581)
!6681 = !DILocation(line: 143, column: 23, scope: !6581)
!6682 = !DILocation(line: 27, column: 39, scope: !6524, inlinedAt: !6580)
!6683 = !DILocation(line: 27, column: 30, scope: !6524, inlinedAt: !6580)
!6684 = !DILocation(line: 27, column: 33, scope: !6524, inlinedAt: !6580)
!6685 = !DILocation(line: 28, column: 28, scope: !6524, inlinedAt: !6580)
!6686 = !DILocation(line: 28, column: 31, scope: !6524, inlinedAt: !6580)
!6687 = !DILocation(line: 32, column: 21, scope: !6524, inlinedAt: !6580)
!6688 = !DILocation(line: 32, column: 24, scope: !6524, inlinedAt: !6580)
!6689 = !DILocation(line: 34, column: 22, scope: !6690, inlinedAt: !6580)
!6690 = distinct !DILexicalBlock(scope: !6524, file: !6520, line: 34, column: 9)
!6691 = !DILocation(line: 34, column: 9, scope: !6690, inlinedAt: !6580)
!6692 = !DILocation(line: 34, column: 9, scope: !6524, inlinedAt: !6580)
!6693 = !DILocation(line: 35, column: 9, scope: !6690, inlinedAt: !6580)
!6694 = !DILocation(line: 37, column: 9, scope: !6560, inlinedAt: !6580)
!6695 = !DILocation(line: 37, column: 12, scope: !6560, inlinedAt: !6580)
!6696 = !DILocation(line: 37, column: 30, scope: !6560, inlinedAt: !6580)
!6697 = !DILocation(line: 37, column: 9, scope: !6524, inlinedAt: !6580)
!6698 = !DILocation(line: 39, column: 16, scope: !6565, inlinedAt: !6580)
!6699 = !DILocation(line: 39, column: 14, scope: !6565, inlinedAt: !6580)
!6700 = !DILocation(line: 39, column: 21, scope: !6701, inlinedAt: !6580)
!6701 = !DILexicalBlockFile(scope: !6564, file: !6520, discriminator: 1)
!6702 = !DILocation(line: 39, column: 25, scope: !6701, inlinedAt: !6580)
!6703 = !DILocation(line: 39, column: 23, scope: !6701, inlinedAt: !6580)
!6704 = !DILocation(line: 39, column: 9, scope: !6701, inlinedAt: !6580)
!6705 = !DILocation(line: 41, column: 19, scope: !6570, inlinedAt: !6580)
!6706 = !DILocation(line: 41, column: 18, scope: !6570, inlinedAt: !6580)
!6707 = !DILocation(line: 41, column: 23, scope: !6708, inlinedAt: !6580)
!6708 = !DILexicalBlockFile(scope: !6569, file: !6520, discriminator: 1)
!6709 = !DILocation(line: 41, column: 25, scope: !6708, inlinedAt: !6580)
!6710 = !DILocation(line: 41, column: 24, scope: !6708, inlinedAt: !6580)
!6711 = !DILocation(line: 41, column: 13, scope: !6708, inlinedAt: !6580)
!6712 = !DILocation(line: 43, column: 22, scope: !6568, inlinedAt: !6580)
!6713 = !DILocation(line: 43, column: 34, scope: !6568, inlinedAt: !6580)
!6714 = !DILocation(line: 43, column: 26, scope: !6568, inlinedAt: !6580)
!6715 = !DILocation(line: 43, column: 24, scope: !6568, inlinedAt: !6580)
!6716 = !DILocation(line: 43, column: 19, scope: !6568, inlinedAt: !6580)
!6717 = !DILocation(line: 41, column: 32, scope: !6718, inlinedAt: !6580)
!6718 = !DILexicalBlockFile(scope: !6569, file: !6520, discriminator: 2)
!6719 = !DILocation(line: 41, column: 13, scope: !6718, inlinedAt: !6580)
!6720 = distinct !{!6720, !6721}
!6721 = !DILocation(line: 41, column: 13, scope: !6563)
!6722 = !DILocation(line: 45, column: 28, scope: !6563, inlinedAt: !6580)
!6723 = !DILocation(line: 45, column: 23, scope: !6563, inlinedAt: !6580)
!6724 = !DILocation(line: 45, column: 13, scope: !6563, inlinedAt: !6580)
!6725 = !DILocation(line: 45, column: 26, scope: !6563, inlinedAt: !6580)
!6726 = !DILocation(line: 39, column: 29, scope: !6727, inlinedAt: !6580)
!6727 = !DILexicalBlockFile(scope: !6564, file: !6520, discriminator: 2)
!6728 = !DILocation(line: 39, column: 9, scope: !6727, inlinedAt: !6580)
!6729 = distinct !{!6729, !6730}
!6730 = !DILocation(line: 39, column: 9, scope: !6559)
!6731 = !DILocation(line: 47, column: 9, scope: !6559, inlinedAt: !6580)
!6732 = !DILocation(line: 50, column: 12, scope: !6523, inlinedAt: !6580)
!6733 = !DILocation(line: 50, column: 10, scope: !6523, inlinedAt: !6580)
!6734 = !DILocation(line: 50, column: 17, scope: !6735, inlinedAt: !6580)
!6735 = !DILexicalBlockFile(scope: !6522, file: !6520, discriminator: 1)
!6736 = !DILocation(line: 50, column: 21, scope: !6735, inlinedAt: !6580)
!6737 = !DILocation(line: 50, column: 19, scope: !6735, inlinedAt: !6580)
!6738 = !DILocation(line: 50, column: 5, scope: !6735, inlinedAt: !6580)
!6739 = !DILocation(line: 53, column: 15, scope: !6740, inlinedAt: !6580)
!6740 = distinct !DILexicalBlock(scope: !6521, file: !6520, line: 53, column: 13)
!6741 = !DILocation(line: 53, column: 17, scope: !6740, inlinedAt: !6580)
!6742 = !DILocation(line: 53, column: 13, scope: !6521, inlinedAt: !6580)
!6743 = !DILocation(line: 54, column: 30, scope: !6744, inlinedAt: !6580)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !6520, line: 54, column: 17)
!6745 = distinct !DILexicalBlock(scope: !6740, file: !6520, line: 53, column: 26)
!6746 = !DILocation(line: 54, column: 17, scope: !6744, inlinedAt: !6580)
!6747 = !DILocation(line: 54, column: 17, scope: !6745, inlinedAt: !6580)
!6748 = !DILocation(line: 55, column: 17, scope: !6744, inlinedAt: !6580)
!6749 = !DILocation(line: 56, column: 9, scope: !6745, inlinedAt: !6580)
!6750 = !DILocation(line: 58, column: 31, scope: !6521, inlinedAt: !6580)
!6751 = !DILocation(line: 58, column: 34, scope: !6521, inlinedAt: !6580)
!6752 = !DILocation(line: 58, column: 46, scope: !6521, inlinedAt: !6580)
!6753 = !DILocation(line: 58, column: 44, scope: !6521, inlinedAt: !6580)
!6754 = !DILocation(line: 58, column: 49, scope: !6521, inlinedAt: !6580)
!6755 = !DILocation(line: 58, column: 61, scope: !6521, inlinedAt: !6580)
!6756 = !DILocation(line: 58, column: 59, scope: !6521, inlinedAt: !6580)
!6757 = !DILocation(line: 58, column: 64, scope: !6521, inlinedAt: !6580)
!6758 = !DILocation(line: 58, column: 76, scope: !6521, inlinedAt: !6580)
!6759 = !DILocation(line: 58, column: 74, scope: !6521, inlinedAt: !6580)
!6760 = !DILocation(line: 58, column: 19, scope: !6521, inlinedAt: !6580)
!6761 = !DILocation(line: 58, column: 17, scope: !6521, inlinedAt: !6580)
!6762 = !DILocation(line: 59, column: 13, scope: !6763, inlinedAt: !6580)
!6763 = distinct !DILexicalBlock(scope: !6521, file: !6520, line: 59, column: 13)
!6764 = !DILocation(line: 59, column: 21, scope: !6763, inlinedAt: !6580)
!6765 = !DILocation(line: 59, column: 13, scope: !6521, inlinedAt: !6580)
!6766 = !DILocation(line: 60, column: 24, scope: !6767, inlinedAt: !6580)
!6767 = distinct !DILexicalBlock(scope: !6763, file: !6520, line: 59, column: 26)
!6768 = !DILocation(line: 60, column: 23, scope: !6767, inlinedAt: !6580)
!6769 = !DILocation(line: 60, column: 21, scope: !6767, inlinedAt: !6580)
!6770 = !DILocation(line: 61, column: 18, scope: !6767, inlinedAt: !6580)
!6771 = !DILocation(line: 62, column: 9, scope: !6767, inlinedAt: !6580)
!6772 = !DILocation(line: 63, column: 18, scope: !6763, inlinedAt: !6580)
!6773 = !DILocation(line: 67, column: 13, scope: !6774, inlinedAt: !6580)
!6774 = distinct !DILexicalBlock(scope: !6521, file: !6520, line: 67, column: 13)
!6775 = !DILocation(line: 67, column: 16, scope: !6774, inlinedAt: !6580)
!6776 = !DILocation(line: 67, column: 19, scope: !6774, inlinedAt: !6580)
!6777 = !DILocation(line: 67, column: 13, scope: !6521, inlinedAt: !6580)
!6778 = !DILocation(line: 68, column: 38, scope: !6779, inlinedAt: !6580)
!6779 = distinct !DILexicalBlock(scope: !6774, file: !6520, line: 67, column: 25)
!6780 = !DILocation(line: 68, column: 50, scope: !6779, inlinedAt: !6580)
!6781 = !DILocation(line: 68, column: 41, scope: !6779, inlinedAt: !6580)
!6782 = !DILocation(line: 68, column: 44, scope: !6779, inlinedAt: !6580)
!6783 = !DILocation(line: 68, column: 20, scope: !6779, inlinedAt: !6580)
!6784 = !DILocation(line: 68, column: 18, scope: !6779, inlinedAt: !6580)
!6785 = !DILocation(line: 69, column: 9, scope: !6779, inlinedAt: !6580)
!6786 = !DILocation(line: 70, column: 17, scope: !6787, inlinedAt: !6580)
!6787 = distinct !DILexicalBlock(scope: !6788, file: !6520, line: 70, column: 17)
!6788 = distinct !DILexicalBlock(scope: !6774, file: !6520, line: 69, column: 16)
!6789 = !DILocation(line: 70, column: 25, scope: !6787, inlinedAt: !6580)
!6790 = !DILocation(line: 70, column: 30, scope: !6787, inlinedAt: !6580)
!6791 = !DILocation(line: 70, column: 33, scope: !6792, inlinedAt: !6580)
!6792 = !DILexicalBlockFile(scope: !6787, file: !6520, discriminator: 1)
!6793 = !DILocation(line: 70, column: 42, scope: !6792, inlinedAt: !6580)
!6794 = !DILocation(line: 70, column: 17, scope: !6792, inlinedAt: !6580)
!6795 = !DILocation(line: 71, column: 26, scope: !6787, inlinedAt: !6580)
!6796 = !DILocation(line: 71, column: 17, scope: !6787, inlinedAt: !6580)
!6797 = !DILocation(line: 73, column: 17, scope: !6798, inlinedAt: !6580)
!6798 = distinct !DILexicalBlock(scope: !6788, file: !6520, line: 73, column: 17)
!6799 = !DILocation(line: 73, column: 17, scope: !6788, inlinedAt: !6580)
!6800 = !DILocation(line: 74, column: 21, scope: !6801, inlinedAt: !6580)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !6520, line: 74, column: 21)
!6802 = distinct !DILexicalBlock(scope: !6798, file: !6520, line: 73, column: 27)
!6803 = !DILocation(line: 74, column: 31, scope: !6801, inlinedAt: !6580)
!6804 = !DILocation(line: 74, column: 36, scope: !6801, inlinedAt: !6580)
!6805 = !DILocation(line: 74, column: 39, scope: !6806, inlinedAt: !6580)
!6806 = !DILexicalBlockFile(scope: !6801, file: !6520, discriminator: 1)
!6807 = !DILocation(line: 74, column: 48, scope: !6806, inlinedAt: !6580)
!6808 = !DILocation(line: 74, column: 21, scope: !6806, inlinedAt: !6580)
!6809 = !DILocation(line: 75, column: 36, scope: !6810, inlinedAt: !6580)
!6810 = distinct !DILexicalBlock(scope: !6811, file: !6520, line: 75, column: 25)
!6811 = distinct !DILexicalBlock(scope: !6801, file: !6520, line: 74, column: 54)
!6812 = !DILocation(line: 75, column: 39, scope: !6810, inlinedAt: !6580)
!6813 = !DILocation(line: 75, column: 25, scope: !6810, inlinedAt: !6580)
!6814 = !DILocation(line: 75, column: 25, scope: !6811, inlinedAt: !6580)
!6815 = !DILocation(line: 76, column: 54, scope: !6816, inlinedAt: !6580)
!6816 = distinct !DILexicalBlock(scope: !6810, file: !6520, line: 75, column: 44)
!6817 = !DILocation(line: 76, column: 42, scope: !6816, inlinedAt: !6580)
!6818 = !DILocation(line: 76, column: 39, scope: !6816, inlinedAt: !6580)
!6819 = !DILocation(line: 76, column: 35, scope: !6816, inlinedAt: !6580)
!6820 = !DILocation(line: 77, column: 29, scope: !6821, inlinedAt: !6580)
!6821 = distinct !DILexicalBlock(scope: !6816, file: !6520, line: 77, column: 29)
!6822 = !DILocation(line: 77, column: 33, scope: !6821, inlinedAt: !6580)
!6823 = !DILocation(line: 77, column: 31, scope: !6821, inlinedAt: !6580)
!6824 = !DILocation(line: 77, column: 46, scope: !6821, inlinedAt: !6580)
!6825 = !DILocation(line: 77, column: 43, scope: !6821, inlinedAt: !6580)
!6826 = !DILocation(line: 77, column: 29, scope: !6816, inlinedAt: !6580)
!6827 = !DILocation(line: 78, column: 38, scope: !6821, inlinedAt: !6580)
!6828 = !DILocation(line: 78, column: 29, scope: !6821, inlinedAt: !6580)
!6829 = !DILocation(line: 79, column: 21, scope: !6816, inlinedAt: !6580)
!6830 = !DILocation(line: 80, column: 41, scope: !6831, inlinedAt: !6580)
!6831 = distinct !DILexicalBlock(scope: !6832, file: !6520, line: 80, column: 29)
!6832 = distinct !DILexicalBlock(scope: !6810, file: !6520, line: 79, column: 28)
!6833 = !DILocation(line: 80, column: 29, scope: !6831, inlinedAt: !6580)
!6834 = !DILocation(line: 80, column: 29, scope: !6832, inlinedAt: !6580)
!6835 = !DILocation(line: 81, column: 51, scope: !6831, inlinedAt: !6580)
!6836 = !DILocation(line: 81, column: 54, scope: !6831, inlinedAt: !6580)
!6837 = !DILocation(line: 81, column: 70, scope: !6831, inlinedAt: !6580)
!6838 = !DILocation(line: 81, column: 58, scope: !6831, inlinedAt: !6580)
!6839 = !DILocation(line: 81, column: 41, scope: !6831, inlinedAt: !6580)
!6840 = !DILocation(line: 81, column: 39, scope: !6831, inlinedAt: !6580)
!6841 = !DILocation(line: 81, column: 29, scope: !6831, inlinedAt: !6580)
!6842 = !DILocation(line: 83, column: 39, scope: !6831, inlinedAt: !6580)
!6843 = !DILocation(line: 84, column: 29, scope: !6844, inlinedAt: !6580)
!6844 = distinct !DILexicalBlock(scope: !6832, file: !6520, line: 84, column: 29)
!6845 = !DILocation(line: 84, column: 29, scope: !6832, inlinedAt: !6580)
!6846 = !DILocation(line: 85, column: 38, scope: !6844, inlinedAt: !6580)
!6847 = !DILocation(line: 85, column: 29, scope: !6844, inlinedAt: !6580)
!6848 = !DILocation(line: 86, column: 34, scope: !6832, inlinedAt: !6580)
!6849 = !DILocation(line: 88, column: 17, scope: !6811, inlinedAt: !6580)
!6850 = !DILocation(line: 89, column: 26, scope: !6802, inlinedAt: !6580)
!6851 = !DILocation(line: 90, column: 21, scope: !6852, inlinedAt: !6580)
!6852 = distinct !DILexicalBlock(scope: !6802, file: !6520, line: 90, column: 21)
!6853 = !DILocation(line: 90, column: 31, scope: !6852, inlinedAt: !6580)
!6854 = !DILocation(line: 90, column: 21, scope: !6802, inlinedAt: !6580)
!6855 = !DILocation(line: 91, column: 30, scope: !6856, inlinedAt: !6580)
!6856 = distinct !DILexicalBlock(scope: !6852, file: !6520, line: 90, column: 36)
!6857 = !DILocation(line: 92, column: 31, scope: !6856, inlinedAt: !6580)
!6858 = !DILocation(line: 93, column: 44, scope: !6856, inlinedAt: !6580)
!6859 = !DILocation(line: 93, column: 47, scope: !6856, inlinedAt: !6580)
!6860 = !DILocation(line: 93, column: 65, scope: !6856, inlinedAt: !6580)
!6861 = !DILocation(line: 93, column: 52, scope: !6856, inlinedAt: !6580)
!6862 = !DILocation(line: 93, column: 55, scope: !6856, inlinedAt: !6580)
!6863 = !DILocation(line: 94, column: 48, scope: !6856, inlinedAt: !6580)
!6864 = !DILocation(line: 93, column: 28, scope: !6856, inlinedAt: !6580)
!6865 = !DILocation(line: 93, column: 26, scope: !6856, inlinedAt: !6580)
!6866 = !DILocation(line: 95, column: 25, scope: !6867, inlinedAt: !6580)
!6867 = distinct !DILexicalBlock(scope: !6856, file: !6520, line: 95, column: 25)
!6868 = !DILocation(line: 95, column: 30, scope: !6867, inlinedAt: !6580)
!6869 = !DILocation(line: 95, column: 25, scope: !6856, inlinedAt: !6580)
!6870 = !DILocation(line: 96, column: 29, scope: !6867, inlinedAt: !6580)
!6871 = !DILocation(line: 96, column: 25, scope: !6867, inlinedAt: !6580)
!6872 = !DILocation(line: 97, column: 17, scope: !6856, inlinedAt: !6580)
!6873 = !DILocation(line: 98, column: 26, scope: !6852, inlinedAt: !6580)
!6874 = !DILocation(line: 99, column: 13, scope: !6802, inlinedAt: !6580)
!6875 = !DILocation(line: 100, column: 40, scope: !6798, inlinedAt: !6580)
!6876 = !DILocation(line: 100, column: 43, scope: !6798, inlinedAt: !6580)
!6877 = !DILocation(line: 100, column: 61, scope: !6798, inlinedAt: !6580)
!6878 = !DILocation(line: 100, column: 48, scope: !6798, inlinedAt: !6580)
!6879 = !DILocation(line: 100, column: 51, scope: !6798, inlinedAt: !6580)
!6880 = !DILocation(line: 100, column: 71, scope: !6798, inlinedAt: !6580)
!6881 = !DILocation(line: 100, column: 24, scope: !6798, inlinedAt: !6580)
!6882 = !DILocation(line: 100, column: 22, scope: !6798, inlinedAt: !6580)
!6883 = !DILocation(line: 106, column: 13, scope: !6884, inlinedAt: !6580)
!6884 = distinct !DILexicalBlock(scope: !6521, file: !6520, line: 106, column: 13)
!6885 = !DILocation(line: 106, column: 13, scope: !6521, inlinedAt: !6580)
!6886 = !DILocation(line: 107, column: 31, scope: !6884, inlinedAt: !6580)
!6887 = !DILocation(line: 107, column: 20, scope: !6884, inlinedAt: !6580)
!6888 = !DILocation(line: 107, column: 18, scope: !6884, inlinedAt: !6580)
!6889 = !DILocation(line: 107, column: 13, scope: !6884, inlinedAt: !6580)
!6890 = !DILocation(line: 109, column: 48, scope: !6521, inlinedAt: !6580)
!6891 = !DILocation(line: 109, column: 60, scope: !6521, inlinedAt: !6580)
!6892 = !DILocation(line: 109, column: 58, scope: !6521, inlinedAt: !6580)
!6893 = !DILocation(line: 109, column: 63, scope: !6521, inlinedAt: !6580)
!6894 = !DILocation(line: 109, column: 75, scope: !6521, inlinedAt: !6580)
!6895 = !DILocation(line: 109, column: 73, scope: !6521, inlinedAt: !6580)
!6896 = !DILocation(line: 109, column: 40, scope: !6521, inlinedAt: !6580)
!6897 = !DILocation(line: 109, column: 90, scope: !6521, inlinedAt: !6580)
!6898 = !DILocation(line: 109, column: 78, scope: !6521, inlinedAt: !6580)
!6899 = !DILocation(line: 109, column: 96, scope: !6521, inlinedAt: !6580)
!6900 = !DILocation(line: 109, column: 24, scope: !6519, inlinedAt: !6580)
!6901 = !DILocation(line: 243, column: 12, scope: !6513, inlinedAt: !6579)
!6902 = !DILocation(line: 243, column: 23, scope: !6513, inlinedAt: !6579)
!6903 = !DILocation(line: 243, column: 20, scope: !6513, inlinedAt: !6579)
!6904 = !DILocation(line: 243, column: 26, scope: !6513, inlinedAt: !6579)
!6905 = !DILocation(line: 243, column: 14, scope: !6513, inlinedAt: !6579)
!6906 = !DILocation(line: 109, column: 24, scope: !6521, inlinedAt: !6580)
!6907 = !DILocation(line: 109, column: 19, scope: !6521, inlinedAt: !6580)
!6908 = !DILocation(line: 109, column: 9, scope: !6521, inlinedAt: !6580)
!6909 = !DILocation(line: 109, column: 22, scope: !6521, inlinedAt: !6580)
!6910 = !DILocation(line: 50, column: 25, scope: !6911, inlinedAt: !6580)
!6911 = !DILexicalBlockFile(scope: !6522, file: !6520, discriminator: 2)
!6912 = !DILocation(line: 50, column: 5, scope: !6911, inlinedAt: !6580)
!6913 = distinct !{!6913, !6914}
!6914 = !DILocation(line: 50, column: 5, scope: !6524)
!6915 = !DILocation(line: 111, column: 20, scope: !6524, inlinedAt: !6580)
!6916 = !DILocation(line: 111, column: 5, scope: !6524, inlinedAt: !6580)
!6917 = !DILocation(line: 111, column: 8, scope: !6524, inlinedAt: !6580)
!6918 = !DILocation(line: 111, column: 18, scope: !6524, inlinedAt: !6580)
!6919 = !DILocation(line: 112, column: 5, scope: !6524, inlinedAt: !6580)
!6920 = !DILocation(line: 113, column: 1, scope: !6524, inlinedAt: !6580)
!6921 = !DILocation(line: 144, column: 17, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6581, file: !953, line: 144, column: 17)
!6923 = !DILocation(line: 144, column: 21, scope: !6922)
!6924 = !DILocation(line: 144, column: 17, scope: !6581)
!6925 = !DILocation(line: 145, column: 24, scope: !6922)
!6926 = !DILocation(line: 145, column: 17, scope: !6922)
!6927 = !DILocation(line: 146, column: 20, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6581, file: !953, line: 146, column: 13)
!6929 = !DILocation(line: 146, column: 18, scope: !6928)
!6930 = !DILocation(line: 146, column: 25, scope: !6931)
!6931 = !DILexicalBlockFile(scope: !6932, file: !953, discriminator: 1)
!6932 = distinct !DILexicalBlock(scope: !6928, file: !953, line: 146, column: 13)
!6933 = !DILocation(line: 146, column: 29, scope: !6931)
!6934 = !DILocation(line: 146, column: 27, scope: !6931)
!6935 = !DILocation(line: 146, column: 13, scope: !6931)
!6936 = !DILocation(line: 147, column: 62, scope: !6932)
!6937 = !DILocation(line: 147, column: 52, scope: !6932)
!6938 = !DILocation(line: 147, column: 21, scope: !6932)
!6939 = !DILocation(line: 147, column: 23, scope: !6932)
!6940 = !DILocation(line: 147, column: 22, scope: !6932)
!6941 = !DILocation(line: 147, column: 38, scope: !6932)
!6942 = !DILocation(line: 147, column: 47, scope: !6932)
!6943 = !DILocation(line: 147, column: 45, scope: !6932)
!6944 = !DILocation(line: 147, column: 36, scope: !6932)
!6945 = !DILocation(line: 147, column: 17, scope: !6932)
!6946 = !DILocation(line: 147, column: 50, scope: !6932)
!6947 = !DILocation(line: 146, column: 33, scope: !6948)
!6948 = !DILexicalBlockFile(scope: !6932, file: !953, discriminator: 2)
!6949 = !DILocation(line: 146, column: 13, scope: !6948)
!6950 = distinct !{!6950, !6951}
!6951 = !DILocation(line: 146, column: 13, scope: !6581)
!6952 = !DILocation(line: 148, column: 9, scope: !6581)
!6953 = !DILocalVariable(name: "ret", scope: !6529, file: !953, line: 149, type: !923)
!6954 = !DILocation(line: 149, column: 17, scope: !6529)
!6955 = !DILocation(line: 149, column: 35, scope: !6529)
!6956 = !DILocation(line: 149, column: 38, scope: !6529)
!6957 = !DILocation(line: 149, column: 41, scope: !6529)
!6958 = !DILocation(line: 149, column: 49, scope: !6529)
!6959 = !DILocation(line: 149, column: 62, scope: !6529)
!6960 = !DILocation(line: 149, column: 65, scope: !6529)
!6961 = !DILocation(line: 149, column: 72, scope: !6529)
!6962 = !DILocation(line: 149, column: 23, scope: !6529)
!6963 = !DILocation(line: 27, column: 39, scope: !6524, inlinedAt: !6528)
!6964 = !DILocation(line: 27, column: 30, scope: !6524, inlinedAt: !6528)
!6965 = !DILocation(line: 27, column: 33, scope: !6524, inlinedAt: !6528)
!6966 = !DILocation(line: 28, column: 28, scope: !6524, inlinedAt: !6528)
!6967 = !DILocation(line: 28, column: 31, scope: !6524, inlinedAt: !6528)
!6968 = !DILocation(line: 32, column: 21, scope: !6524, inlinedAt: !6528)
!6969 = !DILocation(line: 32, column: 24, scope: !6524, inlinedAt: !6528)
!6970 = !DILocation(line: 34, column: 22, scope: !6690, inlinedAt: !6528)
!6971 = !DILocation(line: 34, column: 9, scope: !6690, inlinedAt: !6528)
!6972 = !DILocation(line: 34, column: 9, scope: !6524, inlinedAt: !6528)
!6973 = !DILocation(line: 35, column: 9, scope: !6690, inlinedAt: !6528)
!6974 = !DILocation(line: 37, column: 9, scope: !6560, inlinedAt: !6528)
!6975 = !DILocation(line: 37, column: 12, scope: !6560, inlinedAt: !6528)
!6976 = !DILocation(line: 37, column: 30, scope: !6560, inlinedAt: !6528)
!6977 = !DILocation(line: 37, column: 9, scope: !6524, inlinedAt: !6528)
!6978 = !DILocation(line: 39, column: 16, scope: !6565, inlinedAt: !6528)
!6979 = !DILocation(line: 39, column: 14, scope: !6565, inlinedAt: !6528)
!6980 = !DILocation(line: 39, column: 21, scope: !6701, inlinedAt: !6528)
!6981 = !DILocation(line: 39, column: 25, scope: !6701, inlinedAt: !6528)
!6982 = !DILocation(line: 39, column: 23, scope: !6701, inlinedAt: !6528)
!6983 = !DILocation(line: 39, column: 9, scope: !6701, inlinedAt: !6528)
!6984 = !DILocation(line: 41, column: 19, scope: !6570, inlinedAt: !6528)
!6985 = !DILocation(line: 41, column: 18, scope: !6570, inlinedAt: !6528)
!6986 = !DILocation(line: 41, column: 23, scope: !6708, inlinedAt: !6528)
!6987 = !DILocation(line: 41, column: 25, scope: !6708, inlinedAt: !6528)
!6988 = !DILocation(line: 41, column: 24, scope: !6708, inlinedAt: !6528)
!6989 = !DILocation(line: 41, column: 13, scope: !6708, inlinedAt: !6528)
!6990 = !DILocation(line: 43, column: 22, scope: !6568, inlinedAt: !6528)
!6991 = !DILocation(line: 43, column: 34, scope: !6568, inlinedAt: !6528)
!6992 = !DILocation(line: 43, column: 26, scope: !6568, inlinedAt: !6528)
!6993 = !DILocation(line: 43, column: 24, scope: !6568, inlinedAt: !6528)
!6994 = !DILocation(line: 43, column: 19, scope: !6568, inlinedAt: !6528)
!6995 = !DILocation(line: 41, column: 32, scope: !6718, inlinedAt: !6528)
!6996 = !DILocation(line: 41, column: 13, scope: !6718, inlinedAt: !6528)
!6997 = !DILocation(line: 45, column: 28, scope: !6563, inlinedAt: !6528)
!6998 = !DILocation(line: 45, column: 23, scope: !6563, inlinedAt: !6528)
!6999 = !DILocation(line: 45, column: 13, scope: !6563, inlinedAt: !6528)
!7000 = !DILocation(line: 45, column: 26, scope: !6563, inlinedAt: !6528)
!7001 = !DILocation(line: 39, column: 29, scope: !6727, inlinedAt: !6528)
!7002 = !DILocation(line: 39, column: 9, scope: !6727, inlinedAt: !6528)
!7003 = !DILocation(line: 47, column: 9, scope: !6559, inlinedAt: !6528)
!7004 = !DILocation(line: 50, column: 12, scope: !6523, inlinedAt: !6528)
!7005 = !DILocation(line: 50, column: 10, scope: !6523, inlinedAt: !6528)
!7006 = !DILocation(line: 50, column: 17, scope: !6735, inlinedAt: !6528)
!7007 = !DILocation(line: 50, column: 21, scope: !6735, inlinedAt: !6528)
!7008 = !DILocation(line: 50, column: 19, scope: !6735, inlinedAt: !6528)
!7009 = !DILocation(line: 50, column: 5, scope: !6735, inlinedAt: !6528)
!7010 = !DILocation(line: 53, column: 15, scope: !6740, inlinedAt: !6528)
!7011 = !DILocation(line: 53, column: 17, scope: !6740, inlinedAt: !6528)
!7012 = !DILocation(line: 53, column: 13, scope: !6521, inlinedAt: !6528)
!7013 = !DILocation(line: 54, column: 30, scope: !6744, inlinedAt: !6528)
!7014 = !DILocation(line: 54, column: 17, scope: !6744, inlinedAt: !6528)
!7015 = !DILocation(line: 54, column: 17, scope: !6745, inlinedAt: !6528)
!7016 = !DILocation(line: 55, column: 17, scope: !6744, inlinedAt: !6528)
!7017 = !DILocation(line: 56, column: 9, scope: !6745, inlinedAt: !6528)
!7018 = !DILocation(line: 58, column: 31, scope: !6521, inlinedAt: !6528)
!7019 = !DILocation(line: 58, column: 34, scope: !6521, inlinedAt: !6528)
!7020 = !DILocation(line: 58, column: 46, scope: !6521, inlinedAt: !6528)
!7021 = !DILocation(line: 58, column: 44, scope: !6521, inlinedAt: !6528)
!7022 = !DILocation(line: 58, column: 49, scope: !6521, inlinedAt: !6528)
!7023 = !DILocation(line: 58, column: 61, scope: !6521, inlinedAt: !6528)
!7024 = !DILocation(line: 58, column: 59, scope: !6521, inlinedAt: !6528)
!7025 = !DILocation(line: 58, column: 64, scope: !6521, inlinedAt: !6528)
!7026 = !DILocation(line: 58, column: 76, scope: !6521, inlinedAt: !6528)
!7027 = !DILocation(line: 58, column: 74, scope: !6521, inlinedAt: !6528)
!7028 = !DILocation(line: 58, column: 19, scope: !6521, inlinedAt: !6528)
!7029 = !DILocation(line: 58, column: 17, scope: !6521, inlinedAt: !6528)
!7030 = !DILocation(line: 59, column: 13, scope: !6763, inlinedAt: !6528)
!7031 = !DILocation(line: 59, column: 21, scope: !6763, inlinedAt: !6528)
!7032 = !DILocation(line: 59, column: 13, scope: !6521, inlinedAt: !6528)
!7033 = !DILocation(line: 60, column: 24, scope: !6767, inlinedAt: !6528)
!7034 = !DILocation(line: 60, column: 23, scope: !6767, inlinedAt: !6528)
!7035 = !DILocation(line: 60, column: 21, scope: !6767, inlinedAt: !6528)
!7036 = !DILocation(line: 61, column: 18, scope: !6767, inlinedAt: !6528)
!7037 = !DILocation(line: 62, column: 9, scope: !6767, inlinedAt: !6528)
!7038 = !DILocation(line: 63, column: 18, scope: !6763, inlinedAt: !6528)
!7039 = !DILocation(line: 67, column: 13, scope: !6774, inlinedAt: !6528)
!7040 = !DILocation(line: 67, column: 16, scope: !6774, inlinedAt: !6528)
!7041 = !DILocation(line: 67, column: 19, scope: !6774, inlinedAt: !6528)
!7042 = !DILocation(line: 67, column: 13, scope: !6521, inlinedAt: !6528)
!7043 = !DILocation(line: 68, column: 38, scope: !6779, inlinedAt: !6528)
!7044 = !DILocation(line: 68, column: 50, scope: !6779, inlinedAt: !6528)
!7045 = !DILocation(line: 68, column: 41, scope: !6779, inlinedAt: !6528)
!7046 = !DILocation(line: 68, column: 44, scope: !6779, inlinedAt: !6528)
!7047 = !DILocation(line: 68, column: 20, scope: !6779, inlinedAt: !6528)
!7048 = !DILocation(line: 68, column: 18, scope: !6779, inlinedAt: !6528)
!7049 = !DILocation(line: 69, column: 9, scope: !6779, inlinedAt: !6528)
!7050 = !DILocation(line: 70, column: 17, scope: !6787, inlinedAt: !6528)
!7051 = !DILocation(line: 70, column: 25, scope: !6787, inlinedAt: !6528)
!7052 = !DILocation(line: 70, column: 30, scope: !6787, inlinedAt: !6528)
!7053 = !DILocation(line: 70, column: 33, scope: !6792, inlinedAt: !6528)
!7054 = !DILocation(line: 70, column: 42, scope: !6792, inlinedAt: !6528)
!7055 = !DILocation(line: 70, column: 17, scope: !6792, inlinedAt: !6528)
!7056 = !DILocation(line: 71, column: 26, scope: !6787, inlinedAt: !6528)
!7057 = !DILocation(line: 71, column: 17, scope: !6787, inlinedAt: !6528)
!7058 = !DILocation(line: 73, column: 17, scope: !6798, inlinedAt: !6528)
!7059 = !DILocation(line: 73, column: 17, scope: !6788, inlinedAt: !6528)
!7060 = !DILocation(line: 74, column: 21, scope: !6801, inlinedAt: !6528)
!7061 = !DILocation(line: 74, column: 31, scope: !6801, inlinedAt: !6528)
!7062 = !DILocation(line: 74, column: 36, scope: !6801, inlinedAt: !6528)
!7063 = !DILocation(line: 74, column: 39, scope: !6806, inlinedAt: !6528)
!7064 = !DILocation(line: 74, column: 48, scope: !6806, inlinedAt: !6528)
!7065 = !DILocation(line: 74, column: 21, scope: !6806, inlinedAt: !6528)
!7066 = !DILocation(line: 75, column: 36, scope: !6810, inlinedAt: !6528)
!7067 = !DILocation(line: 75, column: 39, scope: !6810, inlinedAt: !6528)
!7068 = !DILocation(line: 75, column: 25, scope: !6810, inlinedAt: !6528)
!7069 = !DILocation(line: 75, column: 25, scope: !6811, inlinedAt: !6528)
!7070 = !DILocation(line: 76, column: 54, scope: !6816, inlinedAt: !6528)
!7071 = !DILocation(line: 76, column: 42, scope: !6816, inlinedAt: !6528)
!7072 = !DILocation(line: 76, column: 39, scope: !6816, inlinedAt: !6528)
!7073 = !DILocation(line: 76, column: 35, scope: !6816, inlinedAt: !6528)
!7074 = !DILocation(line: 77, column: 29, scope: !6821, inlinedAt: !6528)
!7075 = !DILocation(line: 77, column: 33, scope: !6821, inlinedAt: !6528)
!7076 = !DILocation(line: 77, column: 31, scope: !6821, inlinedAt: !6528)
!7077 = !DILocation(line: 77, column: 46, scope: !6821, inlinedAt: !6528)
!7078 = !DILocation(line: 77, column: 43, scope: !6821, inlinedAt: !6528)
!7079 = !DILocation(line: 77, column: 29, scope: !6816, inlinedAt: !6528)
!7080 = !DILocation(line: 78, column: 38, scope: !6821, inlinedAt: !6528)
!7081 = !DILocation(line: 78, column: 29, scope: !6821, inlinedAt: !6528)
!7082 = !DILocation(line: 79, column: 21, scope: !6816, inlinedAt: !6528)
!7083 = !DILocation(line: 80, column: 41, scope: !6831, inlinedAt: !6528)
!7084 = !DILocation(line: 80, column: 29, scope: !6831, inlinedAt: !6528)
!7085 = !DILocation(line: 80, column: 29, scope: !6832, inlinedAt: !6528)
!7086 = !DILocation(line: 81, column: 51, scope: !6831, inlinedAt: !6528)
!7087 = !DILocation(line: 81, column: 54, scope: !6831, inlinedAt: !6528)
!7088 = !DILocation(line: 81, column: 70, scope: !6831, inlinedAt: !6528)
!7089 = !DILocation(line: 81, column: 58, scope: !6831, inlinedAt: !6528)
!7090 = !DILocation(line: 81, column: 41, scope: !6831, inlinedAt: !6528)
!7091 = !DILocation(line: 81, column: 39, scope: !6831, inlinedAt: !6528)
!7092 = !DILocation(line: 81, column: 29, scope: !6831, inlinedAt: !6528)
!7093 = !DILocation(line: 83, column: 39, scope: !6831, inlinedAt: !6528)
!7094 = !DILocation(line: 84, column: 29, scope: !6844, inlinedAt: !6528)
!7095 = !DILocation(line: 84, column: 29, scope: !6832, inlinedAt: !6528)
!7096 = !DILocation(line: 85, column: 38, scope: !6844, inlinedAt: !6528)
!7097 = !DILocation(line: 85, column: 29, scope: !6844, inlinedAt: !6528)
!7098 = !DILocation(line: 86, column: 34, scope: !6832, inlinedAt: !6528)
!7099 = !DILocation(line: 88, column: 17, scope: !6811, inlinedAt: !6528)
!7100 = !DILocation(line: 89, column: 26, scope: !6802, inlinedAt: !6528)
!7101 = !DILocation(line: 90, column: 21, scope: !6852, inlinedAt: !6528)
!7102 = !DILocation(line: 90, column: 31, scope: !6852, inlinedAt: !6528)
!7103 = !DILocation(line: 90, column: 21, scope: !6802, inlinedAt: !6528)
!7104 = !DILocation(line: 91, column: 30, scope: !6856, inlinedAt: !6528)
!7105 = !DILocation(line: 92, column: 31, scope: !6856, inlinedAt: !6528)
!7106 = !DILocation(line: 93, column: 44, scope: !6856, inlinedAt: !6528)
!7107 = !DILocation(line: 93, column: 47, scope: !6856, inlinedAt: !6528)
!7108 = !DILocation(line: 93, column: 65, scope: !6856, inlinedAt: !6528)
!7109 = !DILocation(line: 93, column: 52, scope: !6856, inlinedAt: !6528)
!7110 = !DILocation(line: 93, column: 55, scope: !6856, inlinedAt: !6528)
!7111 = !DILocation(line: 94, column: 48, scope: !6856, inlinedAt: !6528)
!7112 = !DILocation(line: 93, column: 28, scope: !6856, inlinedAt: !6528)
!7113 = !DILocation(line: 93, column: 26, scope: !6856, inlinedAt: !6528)
!7114 = !DILocation(line: 95, column: 25, scope: !6867, inlinedAt: !6528)
!7115 = !DILocation(line: 95, column: 30, scope: !6867, inlinedAt: !6528)
!7116 = !DILocation(line: 95, column: 25, scope: !6856, inlinedAt: !6528)
!7117 = !DILocation(line: 96, column: 29, scope: !6867, inlinedAt: !6528)
!7118 = !DILocation(line: 96, column: 25, scope: !6867, inlinedAt: !6528)
!7119 = !DILocation(line: 97, column: 17, scope: !6856, inlinedAt: !6528)
!7120 = !DILocation(line: 98, column: 26, scope: !6852, inlinedAt: !6528)
!7121 = !DILocation(line: 99, column: 13, scope: !6802, inlinedAt: !6528)
!7122 = !DILocation(line: 100, column: 40, scope: !6798, inlinedAt: !6528)
!7123 = !DILocation(line: 100, column: 43, scope: !6798, inlinedAt: !6528)
!7124 = !DILocation(line: 100, column: 61, scope: !6798, inlinedAt: !6528)
!7125 = !DILocation(line: 100, column: 48, scope: !6798, inlinedAt: !6528)
!7126 = !DILocation(line: 100, column: 51, scope: !6798, inlinedAt: !6528)
!7127 = !DILocation(line: 100, column: 71, scope: !6798, inlinedAt: !6528)
!7128 = !DILocation(line: 100, column: 24, scope: !6798, inlinedAt: !6528)
!7129 = !DILocation(line: 100, column: 22, scope: !6798, inlinedAt: !6528)
!7130 = !DILocation(line: 106, column: 13, scope: !6884, inlinedAt: !6528)
!7131 = !DILocation(line: 106, column: 13, scope: !6521, inlinedAt: !6528)
!7132 = !DILocation(line: 107, column: 31, scope: !6884, inlinedAt: !6528)
!7133 = !DILocation(line: 107, column: 20, scope: !6884, inlinedAt: !6528)
!7134 = !DILocation(line: 107, column: 18, scope: !6884, inlinedAt: !6528)
!7135 = !DILocation(line: 107, column: 13, scope: !6884, inlinedAt: !6528)
!7136 = !DILocation(line: 109, column: 48, scope: !6521, inlinedAt: !6528)
!7137 = !DILocation(line: 109, column: 60, scope: !6521, inlinedAt: !6528)
!7138 = !DILocation(line: 109, column: 58, scope: !6521, inlinedAt: !6528)
!7139 = !DILocation(line: 109, column: 63, scope: !6521, inlinedAt: !6528)
!7140 = !DILocation(line: 109, column: 75, scope: !6521, inlinedAt: !6528)
!7141 = !DILocation(line: 109, column: 73, scope: !6521, inlinedAt: !6528)
!7142 = !DILocation(line: 109, column: 40, scope: !6521, inlinedAt: !6528)
!7143 = !DILocation(line: 109, column: 90, scope: !6521, inlinedAt: !6528)
!7144 = !DILocation(line: 109, column: 78, scope: !6521, inlinedAt: !6528)
!7145 = !DILocation(line: 109, column: 96, scope: !6521, inlinedAt: !6528)
!7146 = !DILocation(line: 109, column: 24, scope: !6519, inlinedAt: !6528)
!7147 = !DILocation(line: 243, column: 12, scope: !6513, inlinedAt: !6518)
!7148 = !DILocation(line: 243, column: 23, scope: !6513, inlinedAt: !6518)
!7149 = !DILocation(line: 243, column: 20, scope: !6513, inlinedAt: !6518)
!7150 = !DILocation(line: 243, column: 26, scope: !6513, inlinedAt: !6518)
!7151 = !DILocation(line: 243, column: 14, scope: !6513, inlinedAt: !6518)
!7152 = !DILocation(line: 109, column: 24, scope: !6521, inlinedAt: !6528)
!7153 = !DILocation(line: 109, column: 19, scope: !6521, inlinedAt: !6528)
!7154 = !DILocation(line: 109, column: 9, scope: !6521, inlinedAt: !6528)
!7155 = !DILocation(line: 109, column: 22, scope: !6521, inlinedAt: !6528)
!7156 = !DILocation(line: 50, column: 25, scope: !6911, inlinedAt: !6528)
!7157 = !DILocation(line: 50, column: 5, scope: !6911, inlinedAt: !6528)
!7158 = !DILocation(line: 111, column: 20, scope: !6524, inlinedAt: !6528)
!7159 = !DILocation(line: 111, column: 5, scope: !6524, inlinedAt: !6528)
!7160 = !DILocation(line: 111, column: 8, scope: !6524, inlinedAt: !6528)
!7161 = !DILocation(line: 111, column: 18, scope: !6524, inlinedAt: !6528)
!7162 = !DILocation(line: 112, column: 5, scope: !6524, inlinedAt: !6528)
!7163 = !DILocation(line: 113, column: 1, scope: !6524, inlinedAt: !6528)
!7164 = !DILocation(line: 150, column: 17, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !6529, file: !953, line: 150, column: 17)
!7166 = !DILocation(line: 150, column: 21, scope: !7165)
!7167 = !DILocation(line: 150, column: 17, scope: !6529)
!7168 = !DILocation(line: 151, column: 24, scope: !7165)
!7169 = !DILocation(line: 151, column: 17, scope: !7165)
!7170 = !DILocation(line: 152, column: 17, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !6529, file: !953, line: 152, column: 17)
!7172 = !DILocation(line: 152, column: 20, scope: !7171)
!7173 = !DILocation(line: 152, column: 17, scope: !6529)
!7174 = !DILocation(line: 153, column: 24, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7176, file: !953, line: 153, column: 17)
!7176 = distinct !DILexicalBlock(scope: !7171, file: !953, line: 152, column: 35)
!7177 = !DILocation(line: 153, column: 22, scope: !7175)
!7178 = !DILocation(line: 153, column: 29, scope: !7179)
!7179 = !DILexicalBlockFile(scope: !7180, file: !953, discriminator: 1)
!7180 = distinct !DILexicalBlock(scope: !7175, file: !953, line: 153, column: 17)
!7181 = !DILocation(line: 153, column: 33, scope: !7179)
!7182 = !DILocation(line: 153, column: 31, scope: !7179)
!7183 = !DILocation(line: 153, column: 17, scope: !7179)
!7184 = !DILocation(line: 154, column: 79, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7180, file: !953, line: 153, column: 41)
!7186 = !DILocation(line: 154, column: 69, scope: !7185)
!7187 = !DILocation(line: 154, column: 51, scope: !7185)
!7188 = !DILocation(line: 154, column: 53, scope: !7185)
!7189 = !DILocation(line: 154, column: 52, scope: !7185)
!7190 = !DILocation(line: 154, column: 21, scope: !7185)
!7191 = !DILocation(line: 154, column: 34, scope: !7185)
!7192 = !DILocation(line: 154, column: 40, scope: !7185)
!7193 = !DILocation(line: 154, column: 47, scope: !7185)
!7194 = !DILocation(line: 154, column: 46, scope: !7185)
!7195 = !DILocation(line: 154, column: 38, scope: !7185)
!7196 = !DILocation(line: 154, column: 67, scope: !7185)
!7197 = !DILocation(line: 155, column: 17, scope: !7185)
!7198 = !DILocation(line: 153, column: 37, scope: !7199)
!7199 = !DILexicalBlockFile(scope: !7180, file: !953, discriminator: 2)
!7200 = !DILocation(line: 153, column: 17, scope: !7199)
!7201 = distinct !{!7201, !7202}
!7202 = !DILocation(line: 153, column: 17, scope: !7176)
!7203 = !DILocation(line: 156, column: 13, scope: !7176)
!7204 = !DILocation(line: 157, column: 24, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7206, file: !953, line: 157, column: 17)
!7206 = distinct !DILexicalBlock(scope: !7171, file: !953, line: 156, column: 20)
!7207 = !DILocation(line: 157, column: 22, scope: !7205)
!7208 = !DILocation(line: 157, column: 29, scope: !7209)
!7209 = !DILexicalBlockFile(scope: !7210, file: !953, discriminator: 1)
!7210 = distinct !DILexicalBlock(scope: !7205, file: !953, line: 157, column: 17)
!7211 = !DILocation(line: 157, column: 33, scope: !7209)
!7212 = !DILocation(line: 157, column: 31, scope: !7209)
!7213 = !DILocation(line: 157, column: 17, scope: !7209)
!7214 = !DILocation(line: 158, column: 79, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7210, file: !953, line: 157, column: 41)
!7216 = !DILocation(line: 158, column: 69, scope: !7215)
!7217 = !DILocation(line: 158, column: 91, scope: !7215)
!7218 = !DILocation(line: 158, column: 94, scope: !7215)
!7219 = !DILocation(line: 158, column: 101, scope: !7215)
!7220 = !DILocation(line: 158, column: 89, scope: !7215)
!7221 = !DILocation(line: 158, column: 82, scope: !7215)
!7222 = !DILocation(line: 158, column: 149, scope: !7215)
!7223 = !DILocation(line: 158, column: 124, scope: !7215)
!7224 = !DILocation(line: 158, column: 160, scope: !7215)
!7225 = !DILocation(line: 158, column: 163, scope: !7215)
!7226 = !DILocation(line: 158, column: 170, scope: !7215)
!7227 = !DILocation(line: 158, column: 158, scope: !7215)
!7228 = !DILocation(line: 158, column: 190, scope: !7215)
!7229 = !DILocation(line: 158, column: 152, scope: !7215)
!7230 = !DILocation(line: 158, column: 122, scope: !7215)
!7231 = !DILocation(line: 158, column: 51, scope: !7215)
!7232 = !DILocation(line: 158, column: 53, scope: !7215)
!7233 = !DILocation(line: 158, column: 52, scope: !7215)
!7234 = !DILocation(line: 158, column: 21, scope: !7215)
!7235 = !DILocation(line: 158, column: 34, scope: !7215)
!7236 = !DILocation(line: 158, column: 40, scope: !7215)
!7237 = !DILocation(line: 158, column: 47, scope: !7215)
!7238 = !DILocation(line: 158, column: 46, scope: !7215)
!7239 = !DILocation(line: 158, column: 38, scope: !7215)
!7240 = !DILocation(line: 158, column: 67, scope: !7215)
!7241 = !DILocation(line: 159, column: 17, scope: !7215)
!7242 = !DILocation(line: 157, column: 37, scope: !7243)
!7243 = !DILexicalBlockFile(scope: !7210, file: !953, discriminator: 2)
!7244 = !DILocation(line: 157, column: 17, scope: !7243)
!7245 = distinct !{!7245, !7246}
!7246 = !DILocation(line: 157, column: 17, scope: !7206)
!7247 = !DILocation(line: 163, column: 5, scope: !6531)
!7248 = !DILocation(line: 132, column: 25, scope: !7249)
!7249 = !DILexicalBlockFile(scope: !6532, file: !953, discriminator: 2)
!7250 = !DILocation(line: 132, column: 5, scope: !7249)
!7251 = distinct !{!7251, !7252}
!7252 = !DILocation(line: 132, column: 5, scope: !6509)
!7253 = !DILocation(line: 164, column: 5, scope: !6509)
!7254 = !DILocation(line: 165, column: 1, scope: !6509)
!7255 = distinct !DISubprogram(name: "decode_rgb_frame32", scope: !6520, file: !6520, line: 115, type: !7256, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!7256 = !DISubroutineType(types: !7257)
!7257 = !{!923, !1709, !1109, !923, !923, !1365}
!7258 = !DILocation(line: 241, column: 103, scope: !6513, inlinedAt: !7259)
!7259 = distinct !DILocation(line: 109, column: 24, scope: !7260, inlinedAt: !7268)
!7260 = !DILexicalBlockFile(scope: !7261, file: !6520, discriminator: 1)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !6520, line: 50, column: 29)
!7262 = distinct !DILexicalBlock(scope: !7263, file: !6520, line: 50, column: 5)
!7263 = distinct !DILexicalBlock(scope: !7264, file: !6520, line: 50, column: 5)
!7264 = distinct !DISubprogram(name: "decode_line32", scope: !6520, file: !6520, line: 23, type: !7265, isLocal: true, isDefinition: true, scopeLine: 26, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!7265 = !DISubroutineType(types: !7266)
!7266 = !{!923, !1709, !923, !7267, !923, !923}
!7267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64, align: 64)
!7268 = distinct !DILocation(line: 146, column: 23, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7270, file: !6520, line: 143, column: 17)
!7270 = distinct !DILexicalBlock(scope: !7271, file: !6520, line: 134, column: 48)
!7271 = distinct !DILexicalBlock(scope: !7272, file: !6520, line: 134, column: 9)
!7272 = distinct !DILexicalBlock(scope: !7273, file: !6520, line: 134, column: 9)
!7273 = distinct !DILexicalBlock(scope: !7274, file: !6520, line: 133, column: 29)
!7274 = distinct !DILexicalBlock(scope: !7275, file: !6520, line: 133, column: 5)
!7275 = distinct !DILexicalBlock(scope: !7255, file: !6520, line: 133, column: 5)
!7276 = !DILocation(line: 241, column: 115, scope: !6513, inlinedAt: !7259)
!7277 = !DILocalVariable(name: "s", arg: 1, scope: !7264, file: !6520, line: 23, type: !1709)
!7278 = !DILocation(line: 23, column: 77, scope: !7264, inlinedAt: !7268)
!7279 = !DILocalVariable(name: "w", arg: 2, scope: !7264, file: !6520, line: 23, type: !923)
!7280 = !DILocation(line: 23, column: 84, scope: !7264, inlinedAt: !7268)
!7281 = !DILocalVariable(name: "sample", arg: 3, scope: !7264, file: !6520, line: 24, type: !7267)
!7282 = !DILocation(line: 24, column: 59, scope: !7264, inlinedAt: !7268)
!7283 = !DILocalVariable(name: "plane_index", arg: 4, scope: !7264, file: !6520, line: 25, type: !923)
!7284 = !DILocation(line: 25, column: 54, scope: !7264, inlinedAt: !7268)
!7285 = !DILocalVariable(name: "bits", arg: 5, scope: !7264, file: !6520, line: 25, type: !923)
!7286 = !DILocation(line: 25, column: 71, scope: !7264, inlinedAt: !7268)
!7287 = !DILocalVariable(name: "p", scope: !7264, file: !6520, line: 27, type: !5288)
!7288 = !DILocation(line: 27, column: 25, scope: !7264, inlinedAt: !7268)
!7289 = !DILocalVariable(name: "c", scope: !7264, file: !6520, line: 28, type: !2188)
!7290 = !DILocation(line: 28, column: 23, scope: !7264, inlinedAt: !7268)
!7291 = !DILocalVariable(name: "x", scope: !7264, file: !6520, line: 29, type: !923)
!7292 = !DILocation(line: 29, column: 9, scope: !7264, inlinedAt: !7268)
!7293 = !DILocalVariable(name: "run_count", scope: !7264, file: !6520, line: 30, type: !923)
!7294 = !DILocation(line: 30, column: 9, scope: !7264, inlinedAt: !7268)
!7295 = !DILocalVariable(name: "run_mode", scope: !7264, file: !6520, line: 31, type: !923)
!7296 = !DILocation(line: 31, column: 9, scope: !7264, inlinedAt: !7268)
!7297 = !DILocalVariable(name: "run_index", scope: !7264, file: !6520, line: 32, type: !923)
!7298 = !DILocation(line: 32, column: 9, scope: !7264, inlinedAt: !7268)
!7299 = !DILocalVariable(name: "i", scope: !7300, file: !6520, line: 38, type: !923)
!7300 = distinct !DILexicalBlock(scope: !7301, file: !6520, line: 37, column: 36)
!7301 = distinct !DILexicalBlock(scope: !7264, file: !6520, line: 37, column: 9)
!7302 = !DILocation(line: 38, column: 13, scope: !7300, inlinedAt: !7268)
!7303 = !DILocalVariable(name: "v", scope: !7304, file: !6520, line: 40, type: !923)
!7304 = distinct !DILexicalBlock(scope: !7305, file: !6520, line: 39, column: 33)
!7305 = distinct !DILexicalBlock(scope: !7306, file: !6520, line: 39, column: 9)
!7306 = distinct !DILexicalBlock(scope: !7300, file: !6520, line: 39, column: 9)
!7307 = !DILocation(line: 40, column: 17, scope: !7304, inlinedAt: !7268)
!7308 = !DILocalVariable(name: "state", scope: !7309, file: !6520, line: 42, type: !935)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !6520, line: 41, column: 36)
!7310 = distinct !DILexicalBlock(scope: !7311, file: !6520, line: 41, column: 13)
!7311 = distinct !DILexicalBlock(scope: !7304, file: !6520, line: 41, column: 13)
!7312 = !DILocation(line: 42, column: 25, scope: !7309, inlinedAt: !7268)
!7313 = !DILocalVariable(name: "diff", scope: !7261, file: !6520, line: 51, type: !923)
!7314 = !DILocation(line: 51, column: 13, scope: !7261, inlinedAt: !7268)
!7315 = !DILocalVariable(name: "context", scope: !7261, file: !6520, line: 51, type: !923)
!7316 = !DILocation(line: 51, column: 19, scope: !7261, inlinedAt: !7268)
!7317 = !DILocalVariable(name: "sign", scope: !7261, file: !6520, line: 51, type: !923)
!7318 = !DILocation(line: 51, column: 28, scope: !7261, inlinedAt: !7268)
!7319 = !DILocation(line: 241, column: 103, scope: !6513, inlinedAt: !7320)
!7320 = distinct !DILocation(line: 109, column: 24, scope: !7260, inlinedAt: !7321)
!7321 = distinct !DILocation(line: 144, column: 23, scope: !7269)
!7322 = !DILocation(line: 241, column: 115, scope: !6513, inlinedAt: !7320)
!7323 = !DILocation(line: 23, column: 77, scope: !7264, inlinedAt: !7321)
!7324 = !DILocation(line: 23, column: 84, scope: !7264, inlinedAt: !7321)
!7325 = !DILocation(line: 24, column: 59, scope: !7264, inlinedAt: !7321)
!7326 = !DILocation(line: 25, column: 54, scope: !7264, inlinedAt: !7321)
!7327 = !DILocation(line: 25, column: 71, scope: !7264, inlinedAt: !7321)
!7328 = !DILocation(line: 27, column: 25, scope: !7264, inlinedAt: !7321)
!7329 = !DILocation(line: 28, column: 23, scope: !7264, inlinedAt: !7321)
!7330 = !DILocation(line: 29, column: 9, scope: !7264, inlinedAt: !7321)
!7331 = !DILocation(line: 30, column: 9, scope: !7264, inlinedAt: !7321)
!7332 = !DILocation(line: 31, column: 9, scope: !7264, inlinedAt: !7321)
!7333 = !DILocation(line: 32, column: 9, scope: !7264, inlinedAt: !7321)
!7334 = !DILocation(line: 38, column: 13, scope: !7300, inlinedAt: !7321)
!7335 = !DILocation(line: 40, column: 17, scope: !7304, inlinedAt: !7321)
!7336 = !DILocation(line: 42, column: 25, scope: !7309, inlinedAt: !7321)
!7337 = !DILocation(line: 51, column: 13, scope: !7261, inlinedAt: !7321)
!7338 = !DILocation(line: 51, column: 19, scope: !7261, inlinedAt: !7321)
!7339 = !DILocation(line: 51, column: 28, scope: !7261, inlinedAt: !7321)
!7340 = !DILocalVariable(name: "s", arg: 1, scope: !7255, file: !6520, line: 115, type: !1709)
!7341 = !DILocation(line: 115, column: 44, scope: !7255)
!7342 = !DILocalVariable(name: "src", arg: 2, scope: !7255, file: !6520, line: 115, type: !1109)
!7343 = !DILocation(line: 115, column: 56, scope: !7255)
!7344 = !DILocalVariable(name: "w", arg: 3, scope: !7255, file: !6520, line: 115, type: !923)
!7345 = !DILocation(line: 115, column: 68, scope: !7255)
!7346 = !DILocalVariable(name: "h", arg: 4, scope: !7255, file: !6520, line: 115, type: !923)
!7347 = !DILocation(line: 115, column: 75, scope: !7255)
!7348 = !DILocalVariable(name: "stride", arg: 5, scope: !7255, file: !6520, line: 115, type: !1365)
!7349 = !DILocation(line: 115, column: 82, scope: !7255)
!7350 = !DILocalVariable(name: "x", scope: !7255, file: !6520, line: 117, type: !923)
!7351 = !DILocation(line: 117, column: 9, scope: !7255)
!7352 = !DILocalVariable(name: "y", scope: !7255, file: !6520, line: 117, type: !923)
!7353 = !DILocation(line: 117, column: 12, scope: !7255)
!7354 = !DILocalVariable(name: "p", scope: !7255, file: !6520, line: 117, type: !923)
!7355 = !DILocation(line: 117, column: 15, scope: !7255)
!7356 = !DILocalVariable(name: "sample", scope: !7255, file: !6520, line: 118, type: !7357)
!7357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 512, align: 64, elements: !7358)
!7358 = !{!1203, !1759}
!7359 = !DILocation(line: 118, column: 14, scope: !7255)
!7360 = !DILocalVariable(name: "lbd", scope: !7255, file: !6520, line: 119, type: !923)
!7361 = !DILocation(line: 119, column: 9, scope: !7255)
!7362 = !DILocation(line: 119, column: 15, scope: !7255)
!7363 = !DILocation(line: 119, column: 18, scope: !7255)
!7364 = !DILocation(line: 119, column: 25, scope: !7255)
!7365 = !DILocation(line: 119, column: 45, scope: !7255)
!7366 = !DILocalVariable(name: "bits", scope: !7255, file: !6520, line: 120, type: !923)
!7367 = !DILocation(line: 120, column: 9, scope: !7255)
!7368 = !DILocation(line: 120, column: 16, scope: !7255)
!7369 = !DILocation(line: 120, column: 19, scope: !7255)
!7370 = !DILocation(line: 120, column: 26, scope: !7255)
!7371 = !DILocation(line: 120, column: 46, scope: !7255)
!7372 = !DILocation(line: 120, column: 52, scope: !7373)
!7373 = !DILexicalBlockFile(scope: !7255, file: !6520, discriminator: 1)
!7374 = !DILocation(line: 120, column: 55, scope: !7373)
!7375 = !DILocation(line: 120, column: 62, scope: !7373)
!7376 = !DILocation(line: 120, column: 16, scope: !7373)
!7377 = !DILocation(line: 120, column: 16, scope: !7378)
!7378 = !DILexicalBlockFile(scope: !7255, file: !6520, discriminator: 2)
!7379 = !DILocation(line: 120, column: 16, scope: !7380)
!7380 = !DILexicalBlockFile(scope: !7255, file: !6520, discriminator: 3)
!7381 = !DILocation(line: 120, column: 9, scope: !7380)
!7382 = !DILocalVariable(name: "offset", scope: !7255, file: !6520, line: 121, type: !923)
!7383 = !DILocation(line: 121, column: 9, scope: !7255)
!7384 = !DILocation(line: 121, column: 23, scope: !7255)
!7385 = !DILocation(line: 121, column: 20, scope: !7255)
!7386 = !DILocalVariable(name: "transparency", scope: !7255, file: !6520, line: 122, type: !923)
!7387 = !DILocation(line: 122, column: 9, scope: !7255)
!7388 = !DILocation(line: 122, column: 24, scope: !7255)
!7389 = !DILocation(line: 122, column: 27, scope: !7255)
!7390 = !DILocation(line: 124, column: 12, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7255, file: !6520, line: 124, column: 5)
!7392 = !DILocation(line: 124, column: 10, scope: !7391)
!7393 = !DILocation(line: 124, column: 17, scope: !7394)
!7394 = !DILexicalBlockFile(scope: !7395, file: !6520, discriminator: 1)
!7395 = distinct !DILexicalBlock(scope: !7391, file: !6520, line: 124, column: 5)
!7396 = !DILocation(line: 124, column: 19, scope: !7394)
!7397 = !DILocation(line: 124, column: 5, scope: !7394)
!7398 = !DILocation(line: 125, column: 24, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7395, file: !6520, line: 124, column: 29)
!7400 = !DILocation(line: 125, column: 27, scope: !7399)
!7401 = !DILocation(line: 125, column: 45, scope: !7399)
!7402 = !DILocation(line: 125, column: 47, scope: !7399)
!7403 = !DILocation(line: 125, column: 54, scope: !7399)
!7404 = !DILocation(line: 125, column: 56, scope: !7399)
!7405 = !DILocation(line: 125, column: 51, scope: !7399)
!7406 = !DILocation(line: 125, column: 43, scope: !7399)
!7407 = !DILocation(line: 125, column: 61, scope: !7399)
!7408 = !DILocation(line: 125, column: 16, scope: !7399)
!7409 = !DILocation(line: 125, column: 9, scope: !7399)
!7410 = !DILocation(line: 125, column: 22, scope: !7399)
!7411 = !DILocation(line: 126, column: 24, scope: !7399)
!7412 = !DILocation(line: 126, column: 27, scope: !7399)
!7413 = !DILocation(line: 126, column: 46, scope: !7399)
!7414 = !DILocation(line: 126, column: 48, scope: !7399)
!7415 = !DILocation(line: 126, column: 52, scope: !7399)
!7416 = !DILocation(line: 126, column: 60, scope: !7399)
!7417 = !DILocation(line: 126, column: 62, scope: !7399)
!7418 = !DILocation(line: 126, column: 57, scope: !7399)
!7419 = !DILocation(line: 126, column: 43, scope: !7399)
!7420 = !DILocation(line: 126, column: 67, scope: !7399)
!7421 = !DILocation(line: 126, column: 16, scope: !7399)
!7422 = !DILocation(line: 126, column: 9, scope: !7399)
!7423 = !DILocation(line: 126, column: 22, scope: !7399)
!7424 = !DILocation(line: 127, column: 5, scope: !7399)
!7425 = !DILocation(line: 124, column: 25, scope: !7426)
!7426 = !DILexicalBlockFile(scope: !7395, file: !6520, discriminator: 2)
!7427 = !DILocation(line: 124, column: 5, scope: !7426)
!7428 = distinct !{!7428, !7429}
!7429 = !DILocation(line: 124, column: 5, scope: !7255)
!7430 = !DILocation(line: 129, column: 5, scope: !7255)
!7431 = !DILocation(line: 129, column: 8, scope: !7255)
!7432 = !DILocation(line: 129, column: 18, scope: !7255)
!7433 = !DILocation(line: 131, column: 12, scope: !7255)
!7434 = !DILocation(line: 131, column: 15, scope: !7255)
!7435 = !DILocation(line: 131, column: 5, scope: !7255)
!7436 = !DILocation(line: 131, column: 40, scope: !7255)
!7437 = !DILocation(line: 131, column: 42, scope: !7255)
!7438 = !DILocation(line: 131, column: 37, scope: !7255)
!7439 = !DILocation(line: 131, column: 35, scope: !7255)
!7440 = !DILocation(line: 131, column: 47, scope: !7255)
!7441 = !DILocation(line: 133, column: 12, scope: !7275)
!7442 = !DILocation(line: 133, column: 10, scope: !7275)
!7443 = !DILocation(line: 133, column: 17, scope: !7444)
!7444 = !DILexicalBlockFile(scope: !7274, file: !6520, discriminator: 1)
!7445 = !DILocation(line: 133, column: 21, scope: !7444)
!7446 = !DILocation(line: 133, column: 19, scope: !7444)
!7447 = !DILocation(line: 133, column: 5, scope: !7444)
!7448 = !DILocation(line: 134, column: 16, scope: !7272)
!7449 = !DILocation(line: 134, column: 14, scope: !7272)
!7450 = !DILocation(line: 134, column: 21, scope: !7451)
!7451 = !DILexicalBlockFile(scope: !7271, file: !6520, discriminator: 1)
!7452 = !DILocation(line: 134, column: 29, scope: !7451)
!7453 = !DILocation(line: 134, column: 27, scope: !7451)
!7454 = !DILocation(line: 134, column: 23, scope: !7451)
!7455 = !DILocation(line: 134, column: 9, scope: !7451)
!7456 = !DILocalVariable(name: "ret", scope: !7270, file: !6520, line: 135, type: !923)
!7457 = !DILocation(line: 135, column: 17, scope: !7270)
!7458 = !DILocalVariable(name: "temp", scope: !7270, file: !6520, line: 136, type: !1835)
!7459 = !DILocation(line: 136, column: 22, scope: !7270)
!7460 = !DILocation(line: 136, column: 36, scope: !7270)
!7461 = !DILocation(line: 136, column: 29, scope: !7270)
!7462 = !DILocation(line: 138, column: 35, scope: !7270)
!7463 = !DILocation(line: 138, column: 28, scope: !7270)
!7464 = !DILocation(line: 138, column: 20, scope: !7270)
!7465 = !DILocation(line: 138, column: 13, scope: !7270)
!7466 = !DILocation(line: 138, column: 26, scope: !7270)
!7467 = !DILocation(line: 139, column: 28, scope: !7270)
!7468 = !DILocation(line: 139, column: 20, scope: !7270)
!7469 = !DILocation(line: 139, column: 13, scope: !7270)
!7470 = !DILocation(line: 139, column: 26, scope: !7270)
!7471 = !DILocation(line: 141, column: 38, scope: !7270)
!7472 = !DILocation(line: 141, column: 31, scope: !7270)
!7473 = !DILocation(line: 141, column: 20, scope: !7270)
!7474 = !DILocation(line: 141, column: 13, scope: !7270)
!7475 = !DILocation(line: 141, column: 29, scope: !7270)
!7476 = !DILocation(line: 142, column: 44, scope: !7270)
!7477 = !DILocation(line: 142, column: 45, scope: !7270)
!7478 = !DILocation(line: 142, column: 31, scope: !7270)
!7479 = !DILocation(line: 142, column: 38, scope: !7270)
!7480 = !DILocation(line: 142, column: 27, scope: !7270)
!7481 = !DILocation(line: 142, column: 13, scope: !7270)
!7482 = !DILocation(line: 142, column: 20, scope: !7270)
!7483 = !DILocation(line: 142, column: 29, scope: !7270)
!7484 = !DILocation(line: 143, column: 17, scope: !7269)
!7485 = !DILocation(line: 143, column: 21, scope: !7269)
!7486 = !DILocation(line: 143, column: 24, scope: !7487)
!7487 = !DILexicalBlockFile(scope: !7269, file: !6520, discriminator: 1)
!7488 = !DILocation(line: 143, column: 27, scope: !7487)
!7489 = !DILocation(line: 143, column: 45, scope: !7487)
!7490 = !DILocation(line: 143, column: 17, scope: !7487)
!7491 = !DILocation(line: 144, column: 37, scope: !7269)
!7492 = !DILocation(line: 144, column: 40, scope: !7269)
!7493 = !DILocation(line: 144, column: 50, scope: !7269)
!7494 = !DILocation(line: 144, column: 43, scope: !7269)
!7495 = !DILocation(line: 144, column: 55, scope: !7269)
!7496 = !DILocation(line: 144, column: 57, scope: !7269)
!7497 = !DILocation(line: 144, column: 61, scope: !7269)
!7498 = !DILocation(line: 144, column: 23, scope: !7269)
!7499 = !DILocation(line: 27, column: 39, scope: !7264, inlinedAt: !7321)
!7500 = !DILocation(line: 27, column: 30, scope: !7264, inlinedAt: !7321)
!7501 = !DILocation(line: 27, column: 33, scope: !7264, inlinedAt: !7321)
!7502 = !DILocation(line: 28, column: 28, scope: !7264, inlinedAt: !7321)
!7503 = !DILocation(line: 28, column: 31, scope: !7264, inlinedAt: !7321)
!7504 = !DILocation(line: 32, column: 21, scope: !7264, inlinedAt: !7321)
!7505 = !DILocation(line: 32, column: 24, scope: !7264, inlinedAt: !7321)
!7506 = !DILocation(line: 34, column: 22, scope: !7507, inlinedAt: !7321)
!7507 = distinct !DILexicalBlock(scope: !7264, file: !6520, line: 34, column: 9)
!7508 = !DILocation(line: 34, column: 9, scope: !7507, inlinedAt: !7321)
!7509 = !DILocation(line: 34, column: 9, scope: !7264, inlinedAt: !7321)
!7510 = !DILocation(line: 35, column: 9, scope: !7507, inlinedAt: !7321)
!7511 = !DILocation(line: 37, column: 9, scope: !7301, inlinedAt: !7321)
!7512 = !DILocation(line: 37, column: 12, scope: !7301, inlinedAt: !7321)
!7513 = !DILocation(line: 37, column: 30, scope: !7301, inlinedAt: !7321)
!7514 = !DILocation(line: 37, column: 9, scope: !7264, inlinedAt: !7321)
!7515 = !DILocation(line: 39, column: 16, scope: !7306, inlinedAt: !7321)
!7516 = !DILocation(line: 39, column: 14, scope: !7306, inlinedAt: !7321)
!7517 = !DILocation(line: 39, column: 21, scope: !7518, inlinedAt: !7321)
!7518 = !DILexicalBlockFile(scope: !7305, file: !6520, discriminator: 1)
!7519 = !DILocation(line: 39, column: 25, scope: !7518, inlinedAt: !7321)
!7520 = !DILocation(line: 39, column: 23, scope: !7518, inlinedAt: !7321)
!7521 = !DILocation(line: 39, column: 9, scope: !7518, inlinedAt: !7321)
!7522 = !DILocation(line: 41, column: 19, scope: !7311, inlinedAt: !7321)
!7523 = !DILocation(line: 41, column: 18, scope: !7311, inlinedAt: !7321)
!7524 = !DILocation(line: 41, column: 23, scope: !7525, inlinedAt: !7321)
!7525 = !DILexicalBlockFile(scope: !7310, file: !6520, discriminator: 1)
!7526 = !DILocation(line: 41, column: 25, scope: !7525, inlinedAt: !7321)
!7527 = !DILocation(line: 41, column: 24, scope: !7525, inlinedAt: !7321)
!7528 = !DILocation(line: 41, column: 13, scope: !7525, inlinedAt: !7321)
!7529 = !DILocation(line: 43, column: 22, scope: !7309, inlinedAt: !7321)
!7530 = !DILocation(line: 43, column: 34, scope: !7309, inlinedAt: !7321)
!7531 = !DILocation(line: 43, column: 26, scope: !7309, inlinedAt: !7321)
!7532 = !DILocation(line: 43, column: 24, scope: !7309, inlinedAt: !7321)
!7533 = !DILocation(line: 43, column: 19, scope: !7309, inlinedAt: !7321)
!7534 = !DILocation(line: 41, column: 32, scope: !7535, inlinedAt: !7321)
!7535 = !DILexicalBlockFile(scope: !7310, file: !6520, discriminator: 2)
!7536 = !DILocation(line: 41, column: 13, scope: !7535, inlinedAt: !7321)
!7537 = distinct !{!7537, !7538}
!7538 = !DILocation(line: 41, column: 13, scope: !7304)
!7539 = !DILocation(line: 45, column: 28, scope: !7304, inlinedAt: !7321)
!7540 = !DILocation(line: 45, column: 23, scope: !7304, inlinedAt: !7321)
!7541 = !DILocation(line: 45, column: 13, scope: !7304, inlinedAt: !7321)
!7542 = !DILocation(line: 45, column: 26, scope: !7304, inlinedAt: !7321)
!7543 = !DILocation(line: 39, column: 29, scope: !7544, inlinedAt: !7321)
!7544 = !DILexicalBlockFile(scope: !7305, file: !6520, discriminator: 2)
!7545 = !DILocation(line: 39, column: 9, scope: !7544, inlinedAt: !7321)
!7546 = distinct !{!7546, !7547}
!7547 = !DILocation(line: 39, column: 9, scope: !7300)
!7548 = !DILocation(line: 47, column: 9, scope: !7300, inlinedAt: !7321)
!7549 = !DILocation(line: 50, column: 12, scope: !7263, inlinedAt: !7321)
!7550 = !DILocation(line: 50, column: 10, scope: !7263, inlinedAt: !7321)
!7551 = !DILocation(line: 50, column: 17, scope: !7552, inlinedAt: !7321)
!7552 = !DILexicalBlockFile(scope: !7262, file: !6520, discriminator: 1)
!7553 = !DILocation(line: 50, column: 21, scope: !7552, inlinedAt: !7321)
!7554 = !DILocation(line: 50, column: 19, scope: !7552, inlinedAt: !7321)
!7555 = !DILocation(line: 50, column: 5, scope: !7552, inlinedAt: !7321)
!7556 = !DILocation(line: 53, column: 15, scope: !7557, inlinedAt: !7321)
!7557 = distinct !DILexicalBlock(scope: !7261, file: !6520, line: 53, column: 13)
!7558 = !DILocation(line: 53, column: 17, scope: !7557, inlinedAt: !7321)
!7559 = !DILocation(line: 53, column: 13, scope: !7261, inlinedAt: !7321)
!7560 = !DILocation(line: 54, column: 30, scope: !7561, inlinedAt: !7321)
!7561 = distinct !DILexicalBlock(scope: !7562, file: !6520, line: 54, column: 17)
!7562 = distinct !DILexicalBlock(scope: !7557, file: !6520, line: 53, column: 26)
!7563 = !DILocation(line: 54, column: 17, scope: !7561, inlinedAt: !7321)
!7564 = !DILocation(line: 54, column: 17, scope: !7562, inlinedAt: !7321)
!7565 = !DILocation(line: 55, column: 17, scope: !7561, inlinedAt: !7321)
!7566 = !DILocation(line: 56, column: 9, scope: !7562, inlinedAt: !7321)
!7567 = !DILocation(line: 58, column: 33, scope: !7261, inlinedAt: !7321)
!7568 = !DILocation(line: 58, column: 36, scope: !7261, inlinedAt: !7321)
!7569 = !DILocation(line: 58, column: 48, scope: !7261, inlinedAt: !7321)
!7570 = !DILocation(line: 58, column: 46, scope: !7261, inlinedAt: !7321)
!7571 = !DILocation(line: 58, column: 51, scope: !7261, inlinedAt: !7321)
!7572 = !DILocation(line: 58, column: 63, scope: !7261, inlinedAt: !7321)
!7573 = !DILocation(line: 58, column: 61, scope: !7261, inlinedAt: !7321)
!7574 = !DILocation(line: 58, column: 66, scope: !7261, inlinedAt: !7321)
!7575 = !DILocation(line: 58, column: 78, scope: !7261, inlinedAt: !7321)
!7576 = !DILocation(line: 58, column: 76, scope: !7261, inlinedAt: !7321)
!7577 = !DILocation(line: 58, column: 19, scope: !7261, inlinedAt: !7321)
!7578 = !DILocation(line: 58, column: 17, scope: !7261, inlinedAt: !7321)
!7579 = !DILocation(line: 59, column: 13, scope: !7580, inlinedAt: !7321)
!7580 = distinct !DILexicalBlock(scope: !7261, file: !6520, line: 59, column: 13)
!7581 = !DILocation(line: 59, column: 21, scope: !7580, inlinedAt: !7321)
!7582 = !DILocation(line: 59, column: 13, scope: !7261, inlinedAt: !7321)
!7583 = !DILocation(line: 60, column: 24, scope: !7584, inlinedAt: !7321)
!7584 = distinct !DILexicalBlock(scope: !7580, file: !6520, line: 59, column: 26)
!7585 = !DILocation(line: 60, column: 23, scope: !7584, inlinedAt: !7321)
!7586 = !DILocation(line: 60, column: 21, scope: !7584, inlinedAt: !7321)
!7587 = !DILocation(line: 61, column: 18, scope: !7584, inlinedAt: !7321)
!7588 = !DILocation(line: 62, column: 9, scope: !7584, inlinedAt: !7321)
!7589 = !DILocation(line: 63, column: 18, scope: !7580, inlinedAt: !7321)
!7590 = !DILocation(line: 67, column: 13, scope: !7591, inlinedAt: !7321)
!7591 = distinct !DILexicalBlock(scope: !7261, file: !6520, line: 67, column: 13)
!7592 = !DILocation(line: 67, column: 16, scope: !7591, inlinedAt: !7321)
!7593 = !DILocation(line: 67, column: 19, scope: !7591, inlinedAt: !7321)
!7594 = !DILocation(line: 67, column: 13, scope: !7261, inlinedAt: !7321)
!7595 = !DILocation(line: 68, column: 38, scope: !7596, inlinedAt: !7321)
!7596 = distinct !DILexicalBlock(scope: !7591, file: !6520, line: 67, column: 25)
!7597 = !DILocation(line: 68, column: 50, scope: !7596, inlinedAt: !7321)
!7598 = !DILocation(line: 68, column: 41, scope: !7596, inlinedAt: !7321)
!7599 = !DILocation(line: 68, column: 44, scope: !7596, inlinedAt: !7321)
!7600 = !DILocation(line: 68, column: 20, scope: !7596, inlinedAt: !7321)
!7601 = !DILocation(line: 68, column: 18, scope: !7596, inlinedAt: !7321)
!7602 = !DILocation(line: 69, column: 9, scope: !7596, inlinedAt: !7321)
!7603 = !DILocation(line: 70, column: 17, scope: !7604, inlinedAt: !7321)
!7604 = distinct !DILexicalBlock(scope: !7605, file: !6520, line: 70, column: 17)
!7605 = distinct !DILexicalBlock(scope: !7591, file: !6520, line: 69, column: 16)
!7606 = !DILocation(line: 70, column: 25, scope: !7604, inlinedAt: !7321)
!7607 = !DILocation(line: 70, column: 30, scope: !7604, inlinedAt: !7321)
!7608 = !DILocation(line: 70, column: 33, scope: !7609, inlinedAt: !7321)
!7609 = !DILexicalBlockFile(scope: !7604, file: !6520, discriminator: 1)
!7610 = !DILocation(line: 70, column: 42, scope: !7609, inlinedAt: !7321)
!7611 = !DILocation(line: 70, column: 17, scope: !7609, inlinedAt: !7321)
!7612 = !DILocation(line: 71, column: 26, scope: !7604, inlinedAt: !7321)
!7613 = !DILocation(line: 71, column: 17, scope: !7604, inlinedAt: !7321)
!7614 = !DILocation(line: 73, column: 17, scope: !7615, inlinedAt: !7321)
!7615 = distinct !DILexicalBlock(scope: !7605, file: !6520, line: 73, column: 17)
!7616 = !DILocation(line: 73, column: 17, scope: !7605, inlinedAt: !7321)
!7617 = !DILocation(line: 74, column: 21, scope: !7618, inlinedAt: !7321)
!7618 = distinct !DILexicalBlock(scope: !7619, file: !6520, line: 74, column: 21)
!7619 = distinct !DILexicalBlock(scope: !7615, file: !6520, line: 73, column: 27)
!7620 = !DILocation(line: 74, column: 31, scope: !7618, inlinedAt: !7321)
!7621 = !DILocation(line: 74, column: 36, scope: !7618, inlinedAt: !7321)
!7622 = !DILocation(line: 74, column: 39, scope: !7623, inlinedAt: !7321)
!7623 = !DILexicalBlockFile(scope: !7618, file: !6520, discriminator: 1)
!7624 = !DILocation(line: 74, column: 48, scope: !7623, inlinedAt: !7321)
!7625 = !DILocation(line: 74, column: 21, scope: !7623, inlinedAt: !7321)
!7626 = !DILocation(line: 75, column: 36, scope: !7627, inlinedAt: !7321)
!7627 = distinct !DILexicalBlock(scope: !7628, file: !6520, line: 75, column: 25)
!7628 = distinct !DILexicalBlock(scope: !7618, file: !6520, line: 74, column: 54)
!7629 = !DILocation(line: 75, column: 39, scope: !7627, inlinedAt: !7321)
!7630 = !DILocation(line: 75, column: 25, scope: !7627, inlinedAt: !7321)
!7631 = !DILocation(line: 75, column: 25, scope: !7628, inlinedAt: !7321)
!7632 = !DILocation(line: 76, column: 54, scope: !7633, inlinedAt: !7321)
!7633 = distinct !DILexicalBlock(scope: !7627, file: !6520, line: 75, column: 44)
!7634 = !DILocation(line: 76, column: 42, scope: !7633, inlinedAt: !7321)
!7635 = !DILocation(line: 76, column: 39, scope: !7633, inlinedAt: !7321)
!7636 = !DILocation(line: 76, column: 35, scope: !7633, inlinedAt: !7321)
!7637 = !DILocation(line: 77, column: 29, scope: !7638, inlinedAt: !7321)
!7638 = distinct !DILexicalBlock(scope: !7633, file: !6520, line: 77, column: 29)
!7639 = !DILocation(line: 77, column: 33, scope: !7638, inlinedAt: !7321)
!7640 = !DILocation(line: 77, column: 31, scope: !7638, inlinedAt: !7321)
!7641 = !DILocation(line: 77, column: 46, scope: !7638, inlinedAt: !7321)
!7642 = !DILocation(line: 77, column: 43, scope: !7638, inlinedAt: !7321)
!7643 = !DILocation(line: 77, column: 29, scope: !7633, inlinedAt: !7321)
!7644 = !DILocation(line: 78, column: 38, scope: !7638, inlinedAt: !7321)
!7645 = !DILocation(line: 78, column: 29, scope: !7638, inlinedAt: !7321)
!7646 = !DILocation(line: 79, column: 21, scope: !7633, inlinedAt: !7321)
!7647 = !DILocation(line: 80, column: 41, scope: !7648, inlinedAt: !7321)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !6520, line: 80, column: 29)
!7649 = distinct !DILexicalBlock(scope: !7627, file: !6520, line: 79, column: 28)
!7650 = !DILocation(line: 80, column: 29, scope: !7648, inlinedAt: !7321)
!7651 = !DILocation(line: 80, column: 29, scope: !7649, inlinedAt: !7321)
!7652 = !DILocation(line: 81, column: 51, scope: !7648, inlinedAt: !7321)
!7653 = !DILocation(line: 81, column: 54, scope: !7648, inlinedAt: !7321)
!7654 = !DILocation(line: 81, column: 70, scope: !7648, inlinedAt: !7321)
!7655 = !DILocation(line: 81, column: 58, scope: !7648, inlinedAt: !7321)
!7656 = !DILocation(line: 81, column: 41, scope: !7648, inlinedAt: !7321)
!7657 = !DILocation(line: 81, column: 39, scope: !7648, inlinedAt: !7321)
!7658 = !DILocation(line: 81, column: 29, scope: !7648, inlinedAt: !7321)
!7659 = !DILocation(line: 83, column: 39, scope: !7648, inlinedAt: !7321)
!7660 = !DILocation(line: 84, column: 29, scope: !7661, inlinedAt: !7321)
!7661 = distinct !DILexicalBlock(scope: !7649, file: !6520, line: 84, column: 29)
!7662 = !DILocation(line: 84, column: 29, scope: !7649, inlinedAt: !7321)
!7663 = !DILocation(line: 85, column: 38, scope: !7661, inlinedAt: !7321)
!7664 = !DILocation(line: 85, column: 29, scope: !7661, inlinedAt: !7321)
!7665 = !DILocation(line: 86, column: 34, scope: !7649, inlinedAt: !7321)
!7666 = !DILocation(line: 88, column: 17, scope: !7628, inlinedAt: !7321)
!7667 = !DILocation(line: 89, column: 26, scope: !7619, inlinedAt: !7321)
!7668 = !DILocation(line: 90, column: 21, scope: !7669, inlinedAt: !7321)
!7669 = distinct !DILexicalBlock(scope: !7619, file: !6520, line: 90, column: 21)
!7670 = !DILocation(line: 90, column: 31, scope: !7669, inlinedAt: !7321)
!7671 = !DILocation(line: 90, column: 21, scope: !7619, inlinedAt: !7321)
!7672 = !DILocation(line: 91, column: 30, scope: !7673, inlinedAt: !7321)
!7673 = distinct !DILexicalBlock(scope: !7669, file: !6520, line: 90, column: 36)
!7674 = !DILocation(line: 92, column: 31, scope: !7673, inlinedAt: !7321)
!7675 = !DILocation(line: 93, column: 44, scope: !7673, inlinedAt: !7321)
!7676 = !DILocation(line: 93, column: 47, scope: !7673, inlinedAt: !7321)
!7677 = !DILocation(line: 93, column: 65, scope: !7673, inlinedAt: !7321)
!7678 = !DILocation(line: 93, column: 52, scope: !7673, inlinedAt: !7321)
!7679 = !DILocation(line: 93, column: 55, scope: !7673, inlinedAt: !7321)
!7680 = !DILocation(line: 94, column: 48, scope: !7673, inlinedAt: !7321)
!7681 = !DILocation(line: 93, column: 28, scope: !7673, inlinedAt: !7321)
!7682 = !DILocation(line: 93, column: 26, scope: !7673, inlinedAt: !7321)
!7683 = !DILocation(line: 95, column: 25, scope: !7684, inlinedAt: !7321)
!7684 = distinct !DILexicalBlock(scope: !7673, file: !6520, line: 95, column: 25)
!7685 = !DILocation(line: 95, column: 30, scope: !7684, inlinedAt: !7321)
!7686 = !DILocation(line: 95, column: 25, scope: !7673, inlinedAt: !7321)
!7687 = !DILocation(line: 96, column: 29, scope: !7684, inlinedAt: !7321)
!7688 = !DILocation(line: 96, column: 25, scope: !7684, inlinedAt: !7321)
!7689 = !DILocation(line: 97, column: 17, scope: !7673, inlinedAt: !7321)
!7690 = !DILocation(line: 98, column: 26, scope: !7669, inlinedAt: !7321)
!7691 = !DILocation(line: 99, column: 13, scope: !7619, inlinedAt: !7321)
!7692 = !DILocation(line: 100, column: 40, scope: !7615, inlinedAt: !7321)
!7693 = !DILocation(line: 100, column: 43, scope: !7615, inlinedAt: !7321)
!7694 = !DILocation(line: 100, column: 61, scope: !7615, inlinedAt: !7321)
!7695 = !DILocation(line: 100, column: 48, scope: !7615, inlinedAt: !7321)
!7696 = !DILocation(line: 100, column: 51, scope: !7615, inlinedAt: !7321)
!7697 = !DILocation(line: 100, column: 71, scope: !7615, inlinedAt: !7321)
!7698 = !DILocation(line: 100, column: 24, scope: !7615, inlinedAt: !7321)
!7699 = !DILocation(line: 100, column: 22, scope: !7615, inlinedAt: !7321)
!7700 = !DILocation(line: 106, column: 13, scope: !7701, inlinedAt: !7321)
!7701 = distinct !DILexicalBlock(scope: !7261, file: !6520, line: 106, column: 13)
!7702 = !DILocation(line: 106, column: 13, scope: !7261, inlinedAt: !7321)
!7703 = !DILocation(line: 107, column: 31, scope: !7701, inlinedAt: !7321)
!7704 = !DILocation(line: 107, column: 20, scope: !7701, inlinedAt: !7321)
!7705 = !DILocation(line: 107, column: 18, scope: !7701, inlinedAt: !7321)
!7706 = !DILocation(line: 107, column: 13, scope: !7701, inlinedAt: !7321)
!7707 = !DILocation(line: 109, column: 50, scope: !7261, inlinedAt: !7321)
!7708 = !DILocation(line: 109, column: 62, scope: !7261, inlinedAt: !7321)
!7709 = !DILocation(line: 109, column: 60, scope: !7261, inlinedAt: !7321)
!7710 = !DILocation(line: 109, column: 65, scope: !7261, inlinedAt: !7321)
!7711 = !DILocation(line: 109, column: 77, scope: !7261, inlinedAt: !7321)
!7712 = !DILocation(line: 109, column: 75, scope: !7261, inlinedAt: !7321)
!7713 = !DILocation(line: 109, column: 40, scope: !7261, inlinedAt: !7321)
!7714 = !DILocation(line: 109, column: 92, scope: !7261, inlinedAt: !7321)
!7715 = !DILocation(line: 109, column: 80, scope: !7261, inlinedAt: !7321)
!7716 = !DILocation(line: 109, column: 98, scope: !7261, inlinedAt: !7321)
!7717 = !DILocation(line: 109, column: 24, scope: !7260, inlinedAt: !7321)
!7718 = !DILocation(line: 243, column: 12, scope: !6513, inlinedAt: !7320)
!7719 = !DILocation(line: 243, column: 23, scope: !6513, inlinedAt: !7320)
!7720 = !DILocation(line: 243, column: 20, scope: !6513, inlinedAt: !7320)
!7721 = !DILocation(line: 243, column: 26, scope: !6513, inlinedAt: !7320)
!7722 = !DILocation(line: 243, column: 14, scope: !6513, inlinedAt: !7320)
!7723 = !DILocation(line: 109, column: 19, scope: !7261, inlinedAt: !7321)
!7724 = !DILocation(line: 109, column: 9, scope: !7261, inlinedAt: !7321)
!7725 = !DILocation(line: 109, column: 22, scope: !7261, inlinedAt: !7321)
!7726 = !DILocation(line: 50, column: 25, scope: !7727, inlinedAt: !7321)
!7727 = !DILexicalBlockFile(scope: !7262, file: !6520, discriminator: 2)
!7728 = !DILocation(line: 50, column: 5, scope: !7727, inlinedAt: !7321)
!7729 = distinct !{!7729, !7730}
!7730 = !DILocation(line: 50, column: 5, scope: !7264)
!7731 = !DILocation(line: 111, column: 20, scope: !7264, inlinedAt: !7321)
!7732 = !DILocation(line: 111, column: 5, scope: !7264, inlinedAt: !7321)
!7733 = !DILocation(line: 111, column: 8, scope: !7264, inlinedAt: !7321)
!7734 = !DILocation(line: 111, column: 18, scope: !7264, inlinedAt: !7321)
!7735 = !DILocation(line: 112, column: 5, scope: !7264, inlinedAt: !7321)
!7736 = !DILocation(line: 113, column: 1, scope: !7264, inlinedAt: !7321)
!7737 = !DILocation(line: 144, column: 21, scope: !7269)
!7738 = !DILocation(line: 144, column: 17, scope: !7269)
!7739 = !DILocation(line: 146, column: 37, scope: !7269)
!7740 = !DILocation(line: 146, column: 40, scope: !7269)
!7741 = !DILocation(line: 146, column: 50, scope: !7269)
!7742 = !DILocation(line: 146, column: 43, scope: !7269)
!7743 = !DILocation(line: 146, column: 55, scope: !7269)
!7744 = !DILocation(line: 146, column: 57, scope: !7269)
!7745 = !DILocation(line: 146, column: 61, scope: !7269)
!7746 = !DILocation(line: 146, column: 65, scope: !7269)
!7747 = !DILocation(line: 146, column: 73, scope: !7269)
!7748 = !DILocation(line: 146, column: 76, scope: !7269)
!7749 = !DILocation(line: 146, column: 94, scope: !7269)
!7750 = !DILocation(line: 146, column: 70, scope: !7269)
!7751 = !DILocation(line: 146, column: 23, scope: !7269)
!7752 = !DILocation(line: 27, column: 39, scope: !7264, inlinedAt: !7268)
!7753 = !DILocation(line: 27, column: 30, scope: !7264, inlinedAt: !7268)
!7754 = !DILocation(line: 27, column: 33, scope: !7264, inlinedAt: !7268)
!7755 = !DILocation(line: 28, column: 28, scope: !7264, inlinedAt: !7268)
!7756 = !DILocation(line: 28, column: 31, scope: !7264, inlinedAt: !7268)
!7757 = !DILocation(line: 32, column: 21, scope: !7264, inlinedAt: !7268)
!7758 = !DILocation(line: 32, column: 24, scope: !7264, inlinedAt: !7268)
!7759 = !DILocation(line: 34, column: 22, scope: !7507, inlinedAt: !7268)
!7760 = !DILocation(line: 34, column: 9, scope: !7507, inlinedAt: !7268)
!7761 = !DILocation(line: 34, column: 9, scope: !7264, inlinedAt: !7268)
!7762 = !DILocation(line: 35, column: 9, scope: !7507, inlinedAt: !7268)
!7763 = !DILocation(line: 37, column: 9, scope: !7301, inlinedAt: !7268)
!7764 = !DILocation(line: 37, column: 12, scope: !7301, inlinedAt: !7268)
!7765 = !DILocation(line: 37, column: 30, scope: !7301, inlinedAt: !7268)
!7766 = !DILocation(line: 37, column: 9, scope: !7264, inlinedAt: !7268)
!7767 = !DILocation(line: 39, column: 16, scope: !7306, inlinedAt: !7268)
!7768 = !DILocation(line: 39, column: 14, scope: !7306, inlinedAt: !7268)
!7769 = !DILocation(line: 39, column: 21, scope: !7518, inlinedAt: !7268)
!7770 = !DILocation(line: 39, column: 25, scope: !7518, inlinedAt: !7268)
!7771 = !DILocation(line: 39, column: 23, scope: !7518, inlinedAt: !7268)
!7772 = !DILocation(line: 39, column: 9, scope: !7518, inlinedAt: !7268)
!7773 = !DILocation(line: 41, column: 19, scope: !7311, inlinedAt: !7268)
!7774 = !DILocation(line: 41, column: 18, scope: !7311, inlinedAt: !7268)
!7775 = !DILocation(line: 41, column: 23, scope: !7525, inlinedAt: !7268)
!7776 = !DILocation(line: 41, column: 25, scope: !7525, inlinedAt: !7268)
!7777 = !DILocation(line: 41, column: 24, scope: !7525, inlinedAt: !7268)
!7778 = !DILocation(line: 41, column: 13, scope: !7525, inlinedAt: !7268)
!7779 = !DILocation(line: 43, column: 22, scope: !7309, inlinedAt: !7268)
!7780 = !DILocation(line: 43, column: 34, scope: !7309, inlinedAt: !7268)
!7781 = !DILocation(line: 43, column: 26, scope: !7309, inlinedAt: !7268)
!7782 = !DILocation(line: 43, column: 24, scope: !7309, inlinedAt: !7268)
!7783 = !DILocation(line: 43, column: 19, scope: !7309, inlinedAt: !7268)
!7784 = !DILocation(line: 41, column: 32, scope: !7535, inlinedAt: !7268)
!7785 = !DILocation(line: 41, column: 13, scope: !7535, inlinedAt: !7268)
!7786 = !DILocation(line: 45, column: 28, scope: !7304, inlinedAt: !7268)
!7787 = !DILocation(line: 45, column: 23, scope: !7304, inlinedAt: !7268)
!7788 = !DILocation(line: 45, column: 13, scope: !7304, inlinedAt: !7268)
!7789 = !DILocation(line: 45, column: 26, scope: !7304, inlinedAt: !7268)
!7790 = !DILocation(line: 39, column: 29, scope: !7544, inlinedAt: !7268)
!7791 = !DILocation(line: 39, column: 9, scope: !7544, inlinedAt: !7268)
!7792 = !DILocation(line: 47, column: 9, scope: !7300, inlinedAt: !7268)
!7793 = !DILocation(line: 50, column: 12, scope: !7263, inlinedAt: !7268)
!7794 = !DILocation(line: 50, column: 10, scope: !7263, inlinedAt: !7268)
!7795 = !DILocation(line: 50, column: 17, scope: !7552, inlinedAt: !7268)
!7796 = !DILocation(line: 50, column: 21, scope: !7552, inlinedAt: !7268)
!7797 = !DILocation(line: 50, column: 19, scope: !7552, inlinedAt: !7268)
!7798 = !DILocation(line: 50, column: 5, scope: !7552, inlinedAt: !7268)
!7799 = !DILocation(line: 53, column: 15, scope: !7557, inlinedAt: !7268)
!7800 = !DILocation(line: 53, column: 17, scope: !7557, inlinedAt: !7268)
!7801 = !DILocation(line: 53, column: 13, scope: !7261, inlinedAt: !7268)
!7802 = !DILocation(line: 54, column: 30, scope: !7561, inlinedAt: !7268)
!7803 = !DILocation(line: 54, column: 17, scope: !7561, inlinedAt: !7268)
!7804 = !DILocation(line: 54, column: 17, scope: !7562, inlinedAt: !7268)
!7805 = !DILocation(line: 55, column: 17, scope: !7561, inlinedAt: !7268)
!7806 = !DILocation(line: 56, column: 9, scope: !7562, inlinedAt: !7268)
!7807 = !DILocation(line: 58, column: 33, scope: !7261, inlinedAt: !7268)
!7808 = !DILocation(line: 58, column: 36, scope: !7261, inlinedAt: !7268)
!7809 = !DILocation(line: 58, column: 48, scope: !7261, inlinedAt: !7268)
!7810 = !DILocation(line: 58, column: 46, scope: !7261, inlinedAt: !7268)
!7811 = !DILocation(line: 58, column: 51, scope: !7261, inlinedAt: !7268)
!7812 = !DILocation(line: 58, column: 63, scope: !7261, inlinedAt: !7268)
!7813 = !DILocation(line: 58, column: 61, scope: !7261, inlinedAt: !7268)
!7814 = !DILocation(line: 58, column: 66, scope: !7261, inlinedAt: !7268)
!7815 = !DILocation(line: 58, column: 78, scope: !7261, inlinedAt: !7268)
!7816 = !DILocation(line: 58, column: 76, scope: !7261, inlinedAt: !7268)
!7817 = !DILocation(line: 58, column: 19, scope: !7261, inlinedAt: !7268)
!7818 = !DILocation(line: 58, column: 17, scope: !7261, inlinedAt: !7268)
!7819 = !DILocation(line: 59, column: 13, scope: !7580, inlinedAt: !7268)
!7820 = !DILocation(line: 59, column: 21, scope: !7580, inlinedAt: !7268)
!7821 = !DILocation(line: 59, column: 13, scope: !7261, inlinedAt: !7268)
!7822 = !DILocation(line: 60, column: 24, scope: !7584, inlinedAt: !7268)
!7823 = !DILocation(line: 60, column: 23, scope: !7584, inlinedAt: !7268)
!7824 = !DILocation(line: 60, column: 21, scope: !7584, inlinedAt: !7268)
!7825 = !DILocation(line: 61, column: 18, scope: !7584, inlinedAt: !7268)
!7826 = !DILocation(line: 62, column: 9, scope: !7584, inlinedAt: !7268)
!7827 = !DILocation(line: 63, column: 18, scope: !7580, inlinedAt: !7268)
!7828 = !DILocation(line: 67, column: 13, scope: !7591, inlinedAt: !7268)
!7829 = !DILocation(line: 67, column: 16, scope: !7591, inlinedAt: !7268)
!7830 = !DILocation(line: 67, column: 19, scope: !7591, inlinedAt: !7268)
!7831 = !DILocation(line: 67, column: 13, scope: !7261, inlinedAt: !7268)
!7832 = !DILocation(line: 68, column: 38, scope: !7596, inlinedAt: !7268)
!7833 = !DILocation(line: 68, column: 50, scope: !7596, inlinedAt: !7268)
!7834 = !DILocation(line: 68, column: 41, scope: !7596, inlinedAt: !7268)
!7835 = !DILocation(line: 68, column: 44, scope: !7596, inlinedAt: !7268)
!7836 = !DILocation(line: 68, column: 20, scope: !7596, inlinedAt: !7268)
!7837 = !DILocation(line: 68, column: 18, scope: !7596, inlinedAt: !7268)
!7838 = !DILocation(line: 69, column: 9, scope: !7596, inlinedAt: !7268)
!7839 = !DILocation(line: 70, column: 17, scope: !7604, inlinedAt: !7268)
!7840 = !DILocation(line: 70, column: 25, scope: !7604, inlinedAt: !7268)
!7841 = !DILocation(line: 70, column: 30, scope: !7604, inlinedAt: !7268)
!7842 = !DILocation(line: 70, column: 33, scope: !7609, inlinedAt: !7268)
!7843 = !DILocation(line: 70, column: 42, scope: !7609, inlinedAt: !7268)
!7844 = !DILocation(line: 70, column: 17, scope: !7609, inlinedAt: !7268)
!7845 = !DILocation(line: 71, column: 26, scope: !7604, inlinedAt: !7268)
!7846 = !DILocation(line: 71, column: 17, scope: !7604, inlinedAt: !7268)
!7847 = !DILocation(line: 73, column: 17, scope: !7615, inlinedAt: !7268)
!7848 = !DILocation(line: 73, column: 17, scope: !7605, inlinedAt: !7268)
!7849 = !DILocation(line: 74, column: 21, scope: !7618, inlinedAt: !7268)
!7850 = !DILocation(line: 74, column: 31, scope: !7618, inlinedAt: !7268)
!7851 = !DILocation(line: 74, column: 36, scope: !7618, inlinedAt: !7268)
!7852 = !DILocation(line: 74, column: 39, scope: !7623, inlinedAt: !7268)
!7853 = !DILocation(line: 74, column: 48, scope: !7623, inlinedAt: !7268)
!7854 = !DILocation(line: 74, column: 21, scope: !7623, inlinedAt: !7268)
!7855 = !DILocation(line: 75, column: 36, scope: !7627, inlinedAt: !7268)
!7856 = !DILocation(line: 75, column: 39, scope: !7627, inlinedAt: !7268)
!7857 = !DILocation(line: 75, column: 25, scope: !7627, inlinedAt: !7268)
!7858 = !DILocation(line: 75, column: 25, scope: !7628, inlinedAt: !7268)
!7859 = !DILocation(line: 76, column: 54, scope: !7633, inlinedAt: !7268)
!7860 = !DILocation(line: 76, column: 42, scope: !7633, inlinedAt: !7268)
!7861 = !DILocation(line: 76, column: 39, scope: !7633, inlinedAt: !7268)
!7862 = !DILocation(line: 76, column: 35, scope: !7633, inlinedAt: !7268)
!7863 = !DILocation(line: 77, column: 29, scope: !7638, inlinedAt: !7268)
!7864 = !DILocation(line: 77, column: 33, scope: !7638, inlinedAt: !7268)
!7865 = !DILocation(line: 77, column: 31, scope: !7638, inlinedAt: !7268)
!7866 = !DILocation(line: 77, column: 46, scope: !7638, inlinedAt: !7268)
!7867 = !DILocation(line: 77, column: 43, scope: !7638, inlinedAt: !7268)
!7868 = !DILocation(line: 77, column: 29, scope: !7633, inlinedAt: !7268)
!7869 = !DILocation(line: 78, column: 38, scope: !7638, inlinedAt: !7268)
!7870 = !DILocation(line: 78, column: 29, scope: !7638, inlinedAt: !7268)
!7871 = !DILocation(line: 79, column: 21, scope: !7633, inlinedAt: !7268)
!7872 = !DILocation(line: 80, column: 41, scope: !7648, inlinedAt: !7268)
!7873 = !DILocation(line: 80, column: 29, scope: !7648, inlinedAt: !7268)
!7874 = !DILocation(line: 80, column: 29, scope: !7649, inlinedAt: !7268)
!7875 = !DILocation(line: 81, column: 51, scope: !7648, inlinedAt: !7268)
!7876 = !DILocation(line: 81, column: 54, scope: !7648, inlinedAt: !7268)
!7877 = !DILocation(line: 81, column: 70, scope: !7648, inlinedAt: !7268)
!7878 = !DILocation(line: 81, column: 58, scope: !7648, inlinedAt: !7268)
!7879 = !DILocation(line: 81, column: 41, scope: !7648, inlinedAt: !7268)
!7880 = !DILocation(line: 81, column: 39, scope: !7648, inlinedAt: !7268)
!7881 = !DILocation(line: 81, column: 29, scope: !7648, inlinedAt: !7268)
!7882 = !DILocation(line: 83, column: 39, scope: !7648, inlinedAt: !7268)
!7883 = !DILocation(line: 84, column: 29, scope: !7661, inlinedAt: !7268)
!7884 = !DILocation(line: 84, column: 29, scope: !7649, inlinedAt: !7268)
!7885 = !DILocation(line: 85, column: 38, scope: !7661, inlinedAt: !7268)
!7886 = !DILocation(line: 85, column: 29, scope: !7661, inlinedAt: !7268)
!7887 = !DILocation(line: 86, column: 34, scope: !7649, inlinedAt: !7268)
!7888 = !DILocation(line: 88, column: 17, scope: !7628, inlinedAt: !7268)
!7889 = !DILocation(line: 89, column: 26, scope: !7619, inlinedAt: !7268)
!7890 = !DILocation(line: 90, column: 21, scope: !7669, inlinedAt: !7268)
!7891 = !DILocation(line: 90, column: 31, scope: !7669, inlinedAt: !7268)
!7892 = !DILocation(line: 90, column: 21, scope: !7619, inlinedAt: !7268)
!7893 = !DILocation(line: 91, column: 30, scope: !7673, inlinedAt: !7268)
!7894 = !DILocation(line: 92, column: 31, scope: !7673, inlinedAt: !7268)
!7895 = !DILocation(line: 93, column: 44, scope: !7673, inlinedAt: !7268)
!7896 = !DILocation(line: 93, column: 47, scope: !7673, inlinedAt: !7268)
!7897 = !DILocation(line: 93, column: 65, scope: !7673, inlinedAt: !7268)
!7898 = !DILocation(line: 93, column: 52, scope: !7673, inlinedAt: !7268)
!7899 = !DILocation(line: 93, column: 55, scope: !7673, inlinedAt: !7268)
!7900 = !DILocation(line: 94, column: 48, scope: !7673, inlinedAt: !7268)
!7901 = !DILocation(line: 93, column: 28, scope: !7673, inlinedAt: !7268)
!7902 = !DILocation(line: 93, column: 26, scope: !7673, inlinedAt: !7268)
!7903 = !DILocation(line: 95, column: 25, scope: !7684, inlinedAt: !7268)
!7904 = !DILocation(line: 95, column: 30, scope: !7684, inlinedAt: !7268)
!7905 = !DILocation(line: 95, column: 25, scope: !7673, inlinedAt: !7268)
!7906 = !DILocation(line: 96, column: 29, scope: !7684, inlinedAt: !7268)
!7907 = !DILocation(line: 96, column: 25, scope: !7684, inlinedAt: !7268)
!7908 = !DILocation(line: 97, column: 17, scope: !7673, inlinedAt: !7268)
!7909 = !DILocation(line: 98, column: 26, scope: !7669, inlinedAt: !7268)
!7910 = !DILocation(line: 99, column: 13, scope: !7619, inlinedAt: !7268)
!7911 = !DILocation(line: 100, column: 40, scope: !7615, inlinedAt: !7268)
!7912 = !DILocation(line: 100, column: 43, scope: !7615, inlinedAt: !7268)
!7913 = !DILocation(line: 100, column: 61, scope: !7615, inlinedAt: !7268)
!7914 = !DILocation(line: 100, column: 48, scope: !7615, inlinedAt: !7268)
!7915 = !DILocation(line: 100, column: 51, scope: !7615, inlinedAt: !7268)
!7916 = !DILocation(line: 100, column: 71, scope: !7615, inlinedAt: !7268)
!7917 = !DILocation(line: 100, column: 24, scope: !7615, inlinedAt: !7268)
!7918 = !DILocation(line: 100, column: 22, scope: !7615, inlinedAt: !7268)
!7919 = !DILocation(line: 106, column: 13, scope: !7701, inlinedAt: !7268)
!7920 = !DILocation(line: 106, column: 13, scope: !7261, inlinedAt: !7268)
!7921 = !DILocation(line: 107, column: 31, scope: !7701, inlinedAt: !7268)
!7922 = !DILocation(line: 107, column: 20, scope: !7701, inlinedAt: !7268)
!7923 = !DILocation(line: 107, column: 18, scope: !7701, inlinedAt: !7268)
!7924 = !DILocation(line: 107, column: 13, scope: !7701, inlinedAt: !7268)
!7925 = !DILocation(line: 109, column: 50, scope: !7261, inlinedAt: !7268)
!7926 = !DILocation(line: 109, column: 62, scope: !7261, inlinedAt: !7268)
!7927 = !DILocation(line: 109, column: 60, scope: !7261, inlinedAt: !7268)
!7928 = !DILocation(line: 109, column: 65, scope: !7261, inlinedAt: !7268)
!7929 = !DILocation(line: 109, column: 77, scope: !7261, inlinedAt: !7268)
!7930 = !DILocation(line: 109, column: 75, scope: !7261, inlinedAt: !7268)
!7931 = !DILocation(line: 109, column: 40, scope: !7261, inlinedAt: !7268)
!7932 = !DILocation(line: 109, column: 92, scope: !7261, inlinedAt: !7268)
!7933 = !DILocation(line: 109, column: 80, scope: !7261, inlinedAt: !7268)
!7934 = !DILocation(line: 109, column: 98, scope: !7261, inlinedAt: !7268)
!7935 = !DILocation(line: 109, column: 24, scope: !7260, inlinedAt: !7268)
!7936 = !DILocation(line: 243, column: 12, scope: !6513, inlinedAt: !7259)
!7937 = !DILocation(line: 243, column: 23, scope: !6513, inlinedAt: !7259)
!7938 = !DILocation(line: 243, column: 20, scope: !6513, inlinedAt: !7259)
!7939 = !DILocation(line: 243, column: 26, scope: !6513, inlinedAt: !7259)
!7940 = !DILocation(line: 243, column: 14, scope: !6513, inlinedAt: !7259)
!7941 = !DILocation(line: 109, column: 19, scope: !7261, inlinedAt: !7268)
!7942 = !DILocation(line: 109, column: 9, scope: !7261, inlinedAt: !7268)
!7943 = !DILocation(line: 109, column: 22, scope: !7261, inlinedAt: !7268)
!7944 = !DILocation(line: 50, column: 25, scope: !7727, inlinedAt: !7268)
!7945 = !DILocation(line: 50, column: 5, scope: !7727, inlinedAt: !7268)
!7946 = !DILocation(line: 111, column: 20, scope: !7264, inlinedAt: !7268)
!7947 = !DILocation(line: 111, column: 5, scope: !7264, inlinedAt: !7268)
!7948 = !DILocation(line: 111, column: 8, scope: !7264, inlinedAt: !7268)
!7949 = !DILocation(line: 111, column: 18, scope: !7264, inlinedAt: !7268)
!7950 = !DILocation(line: 112, column: 5, scope: !7264, inlinedAt: !7268)
!7951 = !DILocation(line: 113, column: 1, scope: !7264, inlinedAt: !7268)
!7952 = !DILocation(line: 146, column: 21, scope: !7269)
!7953 = !DILocation(line: 147, column: 17, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7270, file: !6520, line: 147, column: 17)
!7955 = !DILocation(line: 147, column: 21, scope: !7954)
!7956 = !DILocation(line: 147, column: 17, scope: !7270)
!7957 = !DILocation(line: 148, column: 24, scope: !7954)
!7958 = !DILocation(line: 148, column: 17, scope: !7954)
!7959 = !DILocation(line: 149, column: 9, scope: !7270)
!7960 = !DILocation(line: 134, column: 44, scope: !7961)
!7961 = !DILexicalBlockFile(scope: !7271, file: !6520, discriminator: 2)
!7962 = !DILocation(line: 134, column: 9, scope: !7961)
!7963 = distinct !{!7963, !7964}
!7964 = !DILocation(line: 134, column: 9, scope: !7273)
!7965 = !DILocation(line: 150, column: 16, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7273, file: !6520, line: 150, column: 9)
!7967 = !DILocation(line: 150, column: 14, scope: !7966)
!7968 = !DILocation(line: 150, column: 21, scope: !7969)
!7969 = !DILexicalBlockFile(scope: !7970, file: !6520, discriminator: 1)
!7970 = distinct !DILexicalBlock(scope: !7966, file: !6520, line: 150, column: 9)
!7971 = !DILocation(line: 150, column: 25, scope: !7969)
!7972 = !DILocation(line: 150, column: 23, scope: !7969)
!7973 = !DILocation(line: 150, column: 9, scope: !7969)
!7974 = !DILocalVariable(name: "g", scope: !7975, file: !6520, line: 151, type: !923)
!7975 = distinct !DILexicalBlock(scope: !7970, file: !6520, line: 150, column: 33)
!7976 = !DILocation(line: 151, column: 17, scope: !7975)
!7977 = !DILocation(line: 151, column: 34, scope: !7975)
!7978 = !DILocation(line: 151, column: 21, scope: !7975)
!7979 = !DILocalVariable(name: "b", scope: !7975, file: !6520, line: 152, type: !923)
!7980 = !DILocation(line: 152, column: 17, scope: !7975)
!7981 = !DILocation(line: 152, column: 34, scope: !7975)
!7982 = !DILocation(line: 152, column: 21, scope: !7975)
!7983 = !DILocalVariable(name: "r", scope: !7975, file: !6520, line: 153, type: !923)
!7984 = !DILocation(line: 153, column: 17, scope: !7975)
!7985 = !DILocation(line: 153, column: 34, scope: !7975)
!7986 = !DILocation(line: 153, column: 21, scope: !7975)
!7987 = !DILocalVariable(name: "a", scope: !7975, file: !6520, line: 154, type: !923)
!7988 = !DILocation(line: 154, column: 17, scope: !7975)
!7989 = !DILocation(line: 154, column: 34, scope: !7975)
!7990 = !DILocation(line: 154, column: 21, scope: !7975)
!7991 = !DILocation(line: 156, column: 17, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7975, file: !6520, line: 156, column: 17)
!7993 = !DILocation(line: 156, column: 20, scope: !7992)
!7994 = !DILocation(line: 156, column: 38, scope: !7992)
!7995 = !DILocation(line: 156, column: 17, scope: !7975)
!7996 = !DILocation(line: 157, column: 22, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7992, file: !6520, line: 156, column: 44)
!7998 = !DILocation(line: 157, column: 19, scope: !7997)
!7999 = !DILocation(line: 158, column: 22, scope: !7997)
!8000 = !DILocation(line: 158, column: 19, scope: !7997)
!8001 = !DILocation(line: 159, column: 23, scope: !7997)
!8002 = !DILocation(line: 159, column: 27, scope: !7997)
!8003 = !DILocation(line: 159, column: 30, scope: !7997)
!8004 = !DILocation(line: 159, column: 25, scope: !7997)
!8005 = !DILocation(line: 159, column: 50, scope: !7997)
!8006 = !DILocation(line: 159, column: 54, scope: !7997)
!8007 = !DILocation(line: 159, column: 57, scope: !7997)
!8008 = !DILocation(line: 159, column: 52, scope: !7997)
!8009 = !DILocation(line: 159, column: 48, scope: !7997)
!8010 = !DILocation(line: 159, column: 76, scope: !7997)
!8011 = !DILocation(line: 159, column: 19, scope: !7997)
!8012 = !DILocation(line: 160, column: 22, scope: !7997)
!8013 = !DILocation(line: 160, column: 19, scope: !7997)
!8014 = !DILocation(line: 161, column: 22, scope: !7997)
!8015 = !DILocation(line: 161, column: 19, scope: !7997)
!8016 = !DILocation(line: 162, column: 13, scope: !7997)
!8017 = !DILocation(line: 164, column: 17, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !7975, file: !6520, line: 164, column: 17)
!8019 = !DILocation(line: 164, column: 17, scope: !7975)
!8020 = !DILocation(line: 165, column: 62, scope: !8018)
!8021 = !DILocation(line: 165, column: 77, scope: !8018)
!8022 = !DILocation(line: 165, column: 78, scope: !8018)
!8023 = !DILocation(line: 165, column: 64, scope: !8018)
!8024 = !DILocation(line: 165, column: 96, scope: !8018)
!8025 = !DILocation(line: 165, column: 97, scope: !8018)
!8026 = !DILocation(line: 165, column: 83, scope: !8018)
!8027 = !DILocation(line: 165, column: 116, scope: !8018)
!8028 = !DILocation(line: 165, column: 117, scope: !8018)
!8029 = !DILocation(line: 165, column: 103, scope: !8018)
!8030 = !DILocation(line: 165, column: 31, scope: !8018)
!8031 = !DILocation(line: 165, column: 40, scope: !8018)
!8032 = !DILocation(line: 165, column: 41, scope: !8018)
!8033 = !DILocation(line: 165, column: 38, scope: !8018)
!8034 = !DILocation(line: 165, column: 46, scope: !8018)
!8035 = !DILocation(line: 165, column: 56, scope: !8018)
!8036 = !DILocation(line: 165, column: 55, scope: !8018)
!8037 = !DILocation(line: 165, column: 44, scope: !8018)
!8038 = !DILocation(line: 165, column: 17, scope: !8018)
!8039 = !DILocation(line: 165, column: 60, scope: !8018)
!8040 = !DILocation(line: 167, column: 62, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !6520, line: 166, column: 60)
!8042 = distinct !DILexicalBlock(scope: !8018, file: !6520, line: 166, column: 22)
!8043 = !DILocation(line: 167, column: 31, scope: !8041)
!8044 = !DILocation(line: 167, column: 40, scope: !8041)
!8045 = !DILocation(line: 167, column: 41, scope: !8041)
!8046 = !DILocation(line: 167, column: 38, scope: !8041)
!8047 = !DILocation(line: 167, column: 46, scope: !8041)
!8048 = !DILocation(line: 167, column: 56, scope: !8041)
!8049 = !DILocation(line: 167, column: 55, scope: !8041)
!8050 = !DILocation(line: 167, column: 44, scope: !8041)
!8051 = !DILocation(line: 167, column: 17, scope: !8041)
!8052 = !DILocation(line: 167, column: 60, scope: !8041)
!8053 = !DILocation(line: 168, column: 62, scope: !8041)
!8054 = !DILocation(line: 168, column: 31, scope: !8041)
!8055 = !DILocation(line: 168, column: 40, scope: !8041)
!8056 = !DILocation(line: 168, column: 41, scope: !8041)
!8057 = !DILocation(line: 168, column: 38, scope: !8041)
!8058 = !DILocation(line: 168, column: 46, scope: !8041)
!8059 = !DILocation(line: 168, column: 56, scope: !8041)
!8060 = !DILocation(line: 168, column: 55, scope: !8041)
!8061 = !DILocation(line: 168, column: 44, scope: !8041)
!8062 = !DILocation(line: 168, column: 17, scope: !8041)
!8063 = !DILocation(line: 168, column: 60, scope: !8041)
!8064 = !DILocation(line: 169, column: 62, scope: !8041)
!8065 = !DILocation(line: 169, column: 31, scope: !8041)
!8066 = !DILocation(line: 169, column: 40, scope: !8041)
!8067 = !DILocation(line: 169, column: 41, scope: !8041)
!8068 = !DILocation(line: 169, column: 38, scope: !8041)
!8069 = !DILocation(line: 169, column: 46, scope: !8041)
!8070 = !DILocation(line: 169, column: 56, scope: !8041)
!8071 = !DILocation(line: 169, column: 55, scope: !8041)
!8072 = !DILocation(line: 169, column: 44, scope: !8041)
!8073 = !DILocation(line: 169, column: 17, scope: !8041)
!8074 = !DILocation(line: 169, column: 60, scope: !8041)
!8075 = !DILocation(line: 170, column: 21, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8041, file: !6520, line: 170, column: 21)
!8077 = !DILocation(line: 170, column: 21, scope: !8041)
!8078 = !DILocation(line: 171, column: 66, scope: !8076)
!8079 = !DILocation(line: 171, column: 35, scope: !8076)
!8080 = !DILocation(line: 171, column: 44, scope: !8076)
!8081 = !DILocation(line: 171, column: 45, scope: !8076)
!8082 = !DILocation(line: 171, column: 42, scope: !8076)
!8083 = !DILocation(line: 171, column: 50, scope: !8076)
!8084 = !DILocation(line: 171, column: 60, scope: !8076)
!8085 = !DILocation(line: 171, column: 59, scope: !8076)
!8086 = !DILocation(line: 171, column: 48, scope: !8076)
!8087 = !DILocation(line: 171, column: 21, scope: !8076)
!8088 = !DILocation(line: 171, column: 64, scope: !8076)
!8089 = !DILocation(line: 177, column: 9, scope: !7975)
!8090 = !DILocation(line: 150, column: 29, scope: !8091)
!8091 = !DILexicalBlockFile(scope: !7970, file: !6520, discriminator: 2)
!8092 = !DILocation(line: 150, column: 9, scope: !8091)
!8093 = distinct !{!8093, !8094}
!8094 = !DILocation(line: 150, column: 9, scope: !7273)
!8095 = !DILocation(line: 178, column: 5, scope: !7273)
!8096 = !DILocation(line: 133, column: 25, scope: !8097)
!8097 = !DILexicalBlockFile(scope: !7274, file: !6520, discriminator: 2)
!8098 = !DILocation(line: 133, column: 5, scope: !8097)
!8099 = distinct !{!8099, !8100}
!8100 = !DILocation(line: 133, column: 5, scope: !7255)
!8101 = !DILocation(line: 179, column: 5, scope: !7255)
!8102 = !DILocation(line: 180, column: 1, scope: !7255)
!8103 = distinct !DISubprogram(name: "decode_rgb_frame", scope: !6520, file: !6520, line: 115, type: !7256, isLocal: true, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!8104 = !DILocation(line: 241, column: 103, scope: !6513, inlinedAt: !8105)
!8105 = distinct !DILocation(line: 109, column: 24, scope: !6519, inlinedAt: !8106)
!8106 = distinct !DILocation(line: 146, column: 23, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8108, file: !6520, line: 143, column: 17)
!8108 = distinct !DILexicalBlock(scope: !8109, file: !6520, line: 134, column: 48)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !6520, line: 134, column: 9)
!8110 = distinct !DILexicalBlock(scope: !8111, file: !6520, line: 134, column: 9)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !6520, line: 133, column: 29)
!8112 = distinct !DILexicalBlock(scope: !8113, file: !6520, line: 133, column: 5)
!8113 = distinct !DILexicalBlock(scope: !8103, file: !6520, line: 133, column: 5)
!8114 = !DILocation(line: 241, column: 115, scope: !6513, inlinedAt: !8105)
!8115 = !DILocation(line: 23, column: 75, scope: !6524, inlinedAt: !8106)
!8116 = !DILocation(line: 23, column: 82, scope: !6524, inlinedAt: !8106)
!8117 = !DILocation(line: 24, column: 59, scope: !6524, inlinedAt: !8106)
!8118 = !DILocation(line: 25, column: 54, scope: !6524, inlinedAt: !8106)
!8119 = !DILocation(line: 25, column: 71, scope: !6524, inlinedAt: !8106)
!8120 = !DILocation(line: 27, column: 25, scope: !6524, inlinedAt: !8106)
!8121 = !DILocation(line: 28, column: 23, scope: !6524, inlinedAt: !8106)
!8122 = !DILocation(line: 29, column: 9, scope: !6524, inlinedAt: !8106)
!8123 = !DILocation(line: 30, column: 9, scope: !6524, inlinedAt: !8106)
!8124 = !DILocation(line: 31, column: 9, scope: !6524, inlinedAt: !8106)
!8125 = !DILocation(line: 32, column: 9, scope: !6524, inlinedAt: !8106)
!8126 = !DILocation(line: 38, column: 13, scope: !6559, inlinedAt: !8106)
!8127 = !DILocation(line: 40, column: 17, scope: !6563, inlinedAt: !8106)
!8128 = !DILocation(line: 42, column: 25, scope: !6568, inlinedAt: !8106)
!8129 = !DILocation(line: 51, column: 13, scope: !6521, inlinedAt: !8106)
!8130 = !DILocation(line: 51, column: 19, scope: !6521, inlinedAt: !8106)
!8131 = !DILocation(line: 51, column: 28, scope: !6521, inlinedAt: !8106)
!8132 = !DILocation(line: 241, column: 103, scope: !6513, inlinedAt: !8133)
!8133 = distinct !DILocation(line: 109, column: 24, scope: !6519, inlinedAt: !8134)
!8134 = distinct !DILocation(line: 144, column: 23, scope: !8107)
!8135 = !DILocation(line: 241, column: 115, scope: !6513, inlinedAt: !8133)
!8136 = !DILocation(line: 23, column: 75, scope: !6524, inlinedAt: !8134)
!8137 = !DILocation(line: 23, column: 82, scope: !6524, inlinedAt: !8134)
!8138 = !DILocation(line: 24, column: 59, scope: !6524, inlinedAt: !8134)
!8139 = !DILocation(line: 25, column: 54, scope: !6524, inlinedAt: !8134)
!8140 = !DILocation(line: 25, column: 71, scope: !6524, inlinedAt: !8134)
!8141 = !DILocation(line: 27, column: 25, scope: !6524, inlinedAt: !8134)
!8142 = !DILocation(line: 28, column: 23, scope: !6524, inlinedAt: !8134)
!8143 = !DILocation(line: 29, column: 9, scope: !6524, inlinedAt: !8134)
!8144 = !DILocation(line: 30, column: 9, scope: !6524, inlinedAt: !8134)
!8145 = !DILocation(line: 31, column: 9, scope: !6524, inlinedAt: !8134)
!8146 = !DILocation(line: 32, column: 9, scope: !6524, inlinedAt: !8134)
!8147 = !DILocation(line: 38, column: 13, scope: !6559, inlinedAt: !8134)
!8148 = !DILocation(line: 40, column: 17, scope: !6563, inlinedAt: !8134)
!8149 = !DILocation(line: 42, column: 25, scope: !6568, inlinedAt: !8134)
!8150 = !DILocation(line: 51, column: 13, scope: !6521, inlinedAt: !8134)
!8151 = !DILocation(line: 51, column: 19, scope: !6521, inlinedAt: !8134)
!8152 = !DILocation(line: 51, column: 28, scope: !6521, inlinedAt: !8134)
!8153 = !DILocalVariable(name: "s", arg: 1, scope: !8103, file: !6520, line: 115, type: !1709)
!8154 = !DILocation(line: 115, column: 42, scope: !8103)
!8155 = !DILocalVariable(name: "src", arg: 2, scope: !8103, file: !6520, line: 115, type: !1109)
!8156 = !DILocation(line: 115, column: 54, scope: !8103)
!8157 = !DILocalVariable(name: "w", arg: 3, scope: !8103, file: !6520, line: 115, type: !923)
!8158 = !DILocation(line: 115, column: 66, scope: !8103)
!8159 = !DILocalVariable(name: "h", arg: 4, scope: !8103, file: !6520, line: 115, type: !923)
!8160 = !DILocation(line: 115, column: 73, scope: !8103)
!8161 = !DILocalVariable(name: "stride", arg: 5, scope: !8103, file: !6520, line: 115, type: !1365)
!8162 = !DILocation(line: 115, column: 80, scope: !8103)
!8163 = !DILocalVariable(name: "x", scope: !8103, file: !6520, line: 117, type: !923)
!8164 = !DILocation(line: 117, column: 9, scope: !8103)
!8165 = !DILocalVariable(name: "y", scope: !8103, file: !6520, line: 117, type: !923)
!8166 = !DILocation(line: 117, column: 12, scope: !8103)
!8167 = !DILocalVariable(name: "p", scope: !8103, file: !6520, line: 117, type: !923)
!8168 = !DILocation(line: 117, column: 15, scope: !8103)
!8169 = !DILocalVariable(name: "sample", scope: !8103, file: !6520, line: 118, type: !8170)
!8170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1833, size: 512, align: 64, elements: !7358)
!8171 = !DILocation(line: 118, column: 14, scope: !8103)
!8172 = !DILocalVariable(name: "lbd", scope: !8103, file: !6520, line: 119, type: !923)
!8173 = !DILocation(line: 119, column: 9, scope: !8103)
!8174 = !DILocation(line: 119, column: 15, scope: !8103)
!8175 = !DILocation(line: 119, column: 18, scope: !8103)
!8176 = !DILocation(line: 119, column: 25, scope: !8103)
!8177 = !DILocation(line: 119, column: 45, scope: !8103)
!8178 = !DILocalVariable(name: "bits", scope: !8103, file: !6520, line: 120, type: !923)
!8179 = !DILocation(line: 120, column: 9, scope: !8103)
!8180 = !DILocation(line: 120, column: 16, scope: !8103)
!8181 = !DILocation(line: 120, column: 19, scope: !8103)
!8182 = !DILocation(line: 120, column: 26, scope: !8103)
!8183 = !DILocation(line: 120, column: 46, scope: !8103)
!8184 = !DILocation(line: 120, column: 52, scope: !8185)
!8185 = !DILexicalBlockFile(scope: !8103, file: !6520, discriminator: 1)
!8186 = !DILocation(line: 120, column: 55, scope: !8185)
!8187 = !DILocation(line: 120, column: 62, scope: !8185)
!8188 = !DILocation(line: 120, column: 16, scope: !8185)
!8189 = !DILocation(line: 120, column: 16, scope: !8190)
!8190 = !DILexicalBlockFile(scope: !8103, file: !6520, discriminator: 2)
!8191 = !DILocation(line: 120, column: 16, scope: !8192)
!8192 = !DILexicalBlockFile(scope: !8103, file: !6520, discriminator: 3)
!8193 = !DILocation(line: 120, column: 9, scope: !8192)
!8194 = !DILocalVariable(name: "offset", scope: !8103, file: !6520, line: 121, type: !923)
!8195 = !DILocation(line: 121, column: 9, scope: !8103)
!8196 = !DILocation(line: 121, column: 23, scope: !8103)
!8197 = !DILocation(line: 121, column: 20, scope: !8103)
!8198 = !DILocalVariable(name: "transparency", scope: !8103, file: !6520, line: 122, type: !923)
!8199 = !DILocation(line: 122, column: 9, scope: !8103)
!8200 = !DILocation(line: 122, column: 24, scope: !8103)
!8201 = !DILocation(line: 122, column: 27, scope: !8103)
!8202 = !DILocation(line: 124, column: 12, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8103, file: !6520, line: 124, column: 5)
!8204 = !DILocation(line: 124, column: 10, scope: !8203)
!8205 = !DILocation(line: 124, column: 17, scope: !8206)
!8206 = !DILexicalBlockFile(scope: !8207, file: !6520, discriminator: 1)
!8207 = distinct !DILexicalBlock(scope: !8203, file: !6520, line: 124, column: 5)
!8208 = !DILocation(line: 124, column: 19, scope: !8206)
!8209 = !DILocation(line: 124, column: 5, scope: !8206)
!8210 = !DILocation(line: 125, column: 24, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8207, file: !6520, line: 124, column: 29)
!8212 = !DILocation(line: 125, column: 27, scope: !8211)
!8213 = !DILocation(line: 125, column: 43, scope: !8211)
!8214 = !DILocation(line: 125, column: 45, scope: !8211)
!8215 = !DILocation(line: 125, column: 52, scope: !8211)
!8216 = !DILocation(line: 125, column: 54, scope: !8211)
!8217 = !DILocation(line: 125, column: 49, scope: !8211)
!8218 = !DILocation(line: 125, column: 41, scope: !8211)
!8219 = !DILocation(line: 125, column: 59, scope: !8211)
!8220 = !DILocation(line: 125, column: 16, scope: !8211)
!8221 = !DILocation(line: 125, column: 9, scope: !8211)
!8222 = !DILocation(line: 125, column: 22, scope: !8211)
!8223 = !DILocation(line: 126, column: 24, scope: !8211)
!8224 = !DILocation(line: 126, column: 27, scope: !8211)
!8225 = !DILocation(line: 126, column: 44, scope: !8211)
!8226 = !DILocation(line: 126, column: 46, scope: !8211)
!8227 = !DILocation(line: 126, column: 50, scope: !8211)
!8228 = !DILocation(line: 126, column: 58, scope: !8211)
!8229 = !DILocation(line: 126, column: 60, scope: !8211)
!8230 = !DILocation(line: 126, column: 55, scope: !8211)
!8231 = !DILocation(line: 126, column: 41, scope: !8211)
!8232 = !DILocation(line: 126, column: 65, scope: !8211)
!8233 = !DILocation(line: 126, column: 16, scope: !8211)
!8234 = !DILocation(line: 126, column: 9, scope: !8211)
!8235 = !DILocation(line: 126, column: 22, scope: !8211)
!8236 = !DILocation(line: 127, column: 5, scope: !8211)
!8237 = !DILocation(line: 124, column: 25, scope: !8238)
!8238 = !DILexicalBlockFile(scope: !8207, file: !6520, discriminator: 2)
!8239 = !DILocation(line: 124, column: 5, scope: !8238)
!8240 = distinct !{!8240, !8241}
!8241 = !DILocation(line: 124, column: 5, scope: !8103)
!8242 = !DILocation(line: 129, column: 5, scope: !8103)
!8243 = !DILocation(line: 129, column: 8, scope: !8103)
!8244 = !DILocation(line: 129, column: 18, scope: !8103)
!8245 = !DILocation(line: 131, column: 12, scope: !8103)
!8246 = !DILocation(line: 131, column: 15, scope: !8103)
!8247 = !DILocation(line: 131, column: 5, scope: !8103)
!8248 = !DILocation(line: 131, column: 38, scope: !8103)
!8249 = !DILocation(line: 131, column: 40, scope: !8103)
!8250 = !DILocation(line: 131, column: 35, scope: !8103)
!8251 = !DILocation(line: 131, column: 33, scope: !8103)
!8252 = !DILocation(line: 131, column: 45, scope: !8103)
!8253 = !DILocation(line: 133, column: 12, scope: !8113)
!8254 = !DILocation(line: 133, column: 10, scope: !8113)
!8255 = !DILocation(line: 133, column: 17, scope: !8256)
!8256 = !DILexicalBlockFile(scope: !8112, file: !6520, discriminator: 1)
!8257 = !DILocation(line: 133, column: 21, scope: !8256)
!8258 = !DILocation(line: 133, column: 19, scope: !8256)
!8259 = !DILocation(line: 133, column: 5, scope: !8256)
!8260 = !DILocation(line: 134, column: 16, scope: !8110)
!8261 = !DILocation(line: 134, column: 14, scope: !8110)
!8262 = !DILocation(line: 134, column: 21, scope: !8263)
!8263 = !DILexicalBlockFile(scope: !8109, file: !6520, discriminator: 1)
!8264 = !DILocation(line: 134, column: 29, scope: !8263)
!8265 = !DILocation(line: 134, column: 27, scope: !8263)
!8266 = !DILocation(line: 134, column: 23, scope: !8263)
!8267 = !DILocation(line: 134, column: 9, scope: !8263)
!8268 = !DILocalVariable(name: "ret", scope: !8108, file: !6520, line: 135, type: !923)
!8269 = !DILocation(line: 135, column: 17, scope: !8108)
!8270 = !DILocalVariable(name: "temp", scope: !8108, file: !6520, line: 136, type: !1833)
!8271 = !DILocation(line: 136, column: 22, scope: !8108)
!8272 = !DILocation(line: 136, column: 36, scope: !8108)
!8273 = !DILocation(line: 136, column: 29, scope: !8108)
!8274 = !DILocation(line: 138, column: 35, scope: !8108)
!8275 = !DILocation(line: 138, column: 28, scope: !8108)
!8276 = !DILocation(line: 138, column: 20, scope: !8108)
!8277 = !DILocation(line: 138, column: 13, scope: !8108)
!8278 = !DILocation(line: 138, column: 26, scope: !8108)
!8279 = !DILocation(line: 139, column: 28, scope: !8108)
!8280 = !DILocation(line: 139, column: 20, scope: !8108)
!8281 = !DILocation(line: 139, column: 13, scope: !8108)
!8282 = !DILocation(line: 139, column: 26, scope: !8108)
!8283 = !DILocation(line: 141, column: 38, scope: !8108)
!8284 = !DILocation(line: 141, column: 31, scope: !8108)
!8285 = !DILocation(line: 141, column: 20, scope: !8108)
!8286 = !DILocation(line: 141, column: 13, scope: !8108)
!8287 = !DILocation(line: 141, column: 29, scope: !8108)
!8288 = !DILocation(line: 142, column: 44, scope: !8108)
!8289 = !DILocation(line: 142, column: 45, scope: !8108)
!8290 = !DILocation(line: 142, column: 31, scope: !8108)
!8291 = !DILocation(line: 142, column: 38, scope: !8108)
!8292 = !DILocation(line: 142, column: 27, scope: !8108)
!8293 = !DILocation(line: 142, column: 13, scope: !8108)
!8294 = !DILocation(line: 142, column: 20, scope: !8108)
!8295 = !DILocation(line: 142, column: 29, scope: !8108)
!8296 = !DILocation(line: 143, column: 17, scope: !8107)
!8297 = !DILocation(line: 143, column: 21, scope: !8107)
!8298 = !DILocation(line: 143, column: 24, scope: !8299)
!8299 = !DILexicalBlockFile(scope: !8107, file: !6520, discriminator: 1)
!8300 = !DILocation(line: 143, column: 27, scope: !8299)
!8301 = !DILocation(line: 143, column: 45, scope: !8299)
!8302 = !DILocation(line: 143, column: 17, scope: !8299)
!8303 = !DILocation(line: 144, column: 35, scope: !8107)
!8304 = !DILocation(line: 144, column: 38, scope: !8107)
!8305 = !DILocation(line: 144, column: 48, scope: !8107)
!8306 = !DILocation(line: 144, column: 41, scope: !8107)
!8307 = !DILocation(line: 144, column: 53, scope: !8107)
!8308 = !DILocation(line: 144, column: 55, scope: !8107)
!8309 = !DILocation(line: 144, column: 59, scope: !8107)
!8310 = !DILocation(line: 144, column: 23, scope: !8107)
!8311 = !DILocation(line: 27, column: 39, scope: !6524, inlinedAt: !8134)
!8312 = !DILocation(line: 27, column: 30, scope: !6524, inlinedAt: !8134)
!8313 = !DILocation(line: 27, column: 33, scope: !6524, inlinedAt: !8134)
!8314 = !DILocation(line: 28, column: 28, scope: !6524, inlinedAt: !8134)
!8315 = !DILocation(line: 28, column: 31, scope: !6524, inlinedAt: !8134)
!8316 = !DILocation(line: 32, column: 21, scope: !6524, inlinedAt: !8134)
!8317 = !DILocation(line: 32, column: 24, scope: !6524, inlinedAt: !8134)
!8318 = !DILocation(line: 34, column: 22, scope: !6690, inlinedAt: !8134)
!8319 = !DILocation(line: 34, column: 9, scope: !6690, inlinedAt: !8134)
!8320 = !DILocation(line: 34, column: 9, scope: !6524, inlinedAt: !8134)
!8321 = !DILocation(line: 35, column: 9, scope: !6690, inlinedAt: !8134)
!8322 = !DILocation(line: 37, column: 9, scope: !6560, inlinedAt: !8134)
!8323 = !DILocation(line: 37, column: 12, scope: !6560, inlinedAt: !8134)
!8324 = !DILocation(line: 37, column: 30, scope: !6560, inlinedAt: !8134)
!8325 = !DILocation(line: 37, column: 9, scope: !6524, inlinedAt: !8134)
!8326 = !DILocation(line: 39, column: 16, scope: !6565, inlinedAt: !8134)
!8327 = !DILocation(line: 39, column: 14, scope: !6565, inlinedAt: !8134)
!8328 = !DILocation(line: 39, column: 21, scope: !6701, inlinedAt: !8134)
!8329 = !DILocation(line: 39, column: 25, scope: !6701, inlinedAt: !8134)
!8330 = !DILocation(line: 39, column: 23, scope: !6701, inlinedAt: !8134)
!8331 = !DILocation(line: 39, column: 9, scope: !6701, inlinedAt: !8134)
!8332 = !DILocation(line: 41, column: 19, scope: !6570, inlinedAt: !8134)
!8333 = !DILocation(line: 41, column: 18, scope: !6570, inlinedAt: !8134)
!8334 = !DILocation(line: 41, column: 23, scope: !6708, inlinedAt: !8134)
!8335 = !DILocation(line: 41, column: 25, scope: !6708, inlinedAt: !8134)
!8336 = !DILocation(line: 41, column: 24, scope: !6708, inlinedAt: !8134)
!8337 = !DILocation(line: 41, column: 13, scope: !6708, inlinedAt: !8134)
!8338 = !DILocation(line: 43, column: 22, scope: !6568, inlinedAt: !8134)
!8339 = !DILocation(line: 43, column: 34, scope: !6568, inlinedAt: !8134)
!8340 = !DILocation(line: 43, column: 26, scope: !6568, inlinedAt: !8134)
!8341 = !DILocation(line: 43, column: 24, scope: !6568, inlinedAt: !8134)
!8342 = !DILocation(line: 43, column: 19, scope: !6568, inlinedAt: !8134)
!8343 = !DILocation(line: 41, column: 32, scope: !6718, inlinedAt: !8134)
!8344 = !DILocation(line: 41, column: 13, scope: !6718, inlinedAt: !8134)
!8345 = !DILocation(line: 45, column: 28, scope: !6563, inlinedAt: !8134)
!8346 = !DILocation(line: 45, column: 23, scope: !6563, inlinedAt: !8134)
!8347 = !DILocation(line: 45, column: 13, scope: !6563, inlinedAt: !8134)
!8348 = !DILocation(line: 45, column: 26, scope: !6563, inlinedAt: !8134)
!8349 = !DILocation(line: 39, column: 29, scope: !6727, inlinedAt: !8134)
!8350 = !DILocation(line: 39, column: 9, scope: !6727, inlinedAt: !8134)
!8351 = !DILocation(line: 47, column: 9, scope: !6559, inlinedAt: !8134)
!8352 = !DILocation(line: 50, column: 12, scope: !6523, inlinedAt: !8134)
!8353 = !DILocation(line: 50, column: 10, scope: !6523, inlinedAt: !8134)
!8354 = !DILocation(line: 50, column: 17, scope: !6735, inlinedAt: !8134)
!8355 = !DILocation(line: 50, column: 21, scope: !6735, inlinedAt: !8134)
!8356 = !DILocation(line: 50, column: 19, scope: !6735, inlinedAt: !8134)
!8357 = !DILocation(line: 50, column: 5, scope: !6735, inlinedAt: !8134)
!8358 = !DILocation(line: 53, column: 15, scope: !6740, inlinedAt: !8134)
!8359 = !DILocation(line: 53, column: 17, scope: !6740, inlinedAt: !8134)
!8360 = !DILocation(line: 53, column: 13, scope: !6521, inlinedAt: !8134)
!8361 = !DILocation(line: 54, column: 30, scope: !6744, inlinedAt: !8134)
!8362 = !DILocation(line: 54, column: 17, scope: !6744, inlinedAt: !8134)
!8363 = !DILocation(line: 54, column: 17, scope: !6745, inlinedAt: !8134)
!8364 = !DILocation(line: 55, column: 17, scope: !6744, inlinedAt: !8134)
!8365 = !DILocation(line: 56, column: 9, scope: !6745, inlinedAt: !8134)
!8366 = !DILocation(line: 58, column: 31, scope: !6521, inlinedAt: !8134)
!8367 = !DILocation(line: 58, column: 34, scope: !6521, inlinedAt: !8134)
!8368 = !DILocation(line: 58, column: 46, scope: !6521, inlinedAt: !8134)
!8369 = !DILocation(line: 58, column: 44, scope: !6521, inlinedAt: !8134)
!8370 = !DILocation(line: 58, column: 49, scope: !6521, inlinedAt: !8134)
!8371 = !DILocation(line: 58, column: 61, scope: !6521, inlinedAt: !8134)
!8372 = !DILocation(line: 58, column: 59, scope: !6521, inlinedAt: !8134)
!8373 = !DILocation(line: 58, column: 64, scope: !6521, inlinedAt: !8134)
!8374 = !DILocation(line: 58, column: 76, scope: !6521, inlinedAt: !8134)
!8375 = !DILocation(line: 58, column: 74, scope: !6521, inlinedAt: !8134)
!8376 = !DILocation(line: 58, column: 19, scope: !6521, inlinedAt: !8134)
!8377 = !DILocation(line: 58, column: 17, scope: !6521, inlinedAt: !8134)
!8378 = !DILocation(line: 59, column: 13, scope: !6763, inlinedAt: !8134)
!8379 = !DILocation(line: 59, column: 21, scope: !6763, inlinedAt: !8134)
!8380 = !DILocation(line: 59, column: 13, scope: !6521, inlinedAt: !8134)
!8381 = !DILocation(line: 60, column: 24, scope: !6767, inlinedAt: !8134)
!8382 = !DILocation(line: 60, column: 23, scope: !6767, inlinedAt: !8134)
!8383 = !DILocation(line: 60, column: 21, scope: !6767, inlinedAt: !8134)
!8384 = !DILocation(line: 61, column: 18, scope: !6767, inlinedAt: !8134)
!8385 = !DILocation(line: 62, column: 9, scope: !6767, inlinedAt: !8134)
!8386 = !DILocation(line: 63, column: 18, scope: !6763, inlinedAt: !8134)
!8387 = !DILocation(line: 67, column: 13, scope: !6774, inlinedAt: !8134)
!8388 = !DILocation(line: 67, column: 16, scope: !6774, inlinedAt: !8134)
!8389 = !DILocation(line: 67, column: 19, scope: !6774, inlinedAt: !8134)
!8390 = !DILocation(line: 67, column: 13, scope: !6521, inlinedAt: !8134)
!8391 = !DILocation(line: 68, column: 38, scope: !6779, inlinedAt: !8134)
!8392 = !DILocation(line: 68, column: 50, scope: !6779, inlinedAt: !8134)
!8393 = !DILocation(line: 68, column: 41, scope: !6779, inlinedAt: !8134)
!8394 = !DILocation(line: 68, column: 44, scope: !6779, inlinedAt: !8134)
!8395 = !DILocation(line: 68, column: 20, scope: !6779, inlinedAt: !8134)
!8396 = !DILocation(line: 68, column: 18, scope: !6779, inlinedAt: !8134)
!8397 = !DILocation(line: 69, column: 9, scope: !6779, inlinedAt: !8134)
!8398 = !DILocation(line: 70, column: 17, scope: !6787, inlinedAt: !8134)
!8399 = !DILocation(line: 70, column: 25, scope: !6787, inlinedAt: !8134)
!8400 = !DILocation(line: 70, column: 30, scope: !6787, inlinedAt: !8134)
!8401 = !DILocation(line: 70, column: 33, scope: !6792, inlinedAt: !8134)
!8402 = !DILocation(line: 70, column: 42, scope: !6792, inlinedAt: !8134)
!8403 = !DILocation(line: 70, column: 17, scope: !6792, inlinedAt: !8134)
!8404 = !DILocation(line: 71, column: 26, scope: !6787, inlinedAt: !8134)
!8405 = !DILocation(line: 71, column: 17, scope: !6787, inlinedAt: !8134)
!8406 = !DILocation(line: 73, column: 17, scope: !6798, inlinedAt: !8134)
!8407 = !DILocation(line: 73, column: 17, scope: !6788, inlinedAt: !8134)
!8408 = !DILocation(line: 74, column: 21, scope: !6801, inlinedAt: !8134)
!8409 = !DILocation(line: 74, column: 31, scope: !6801, inlinedAt: !8134)
!8410 = !DILocation(line: 74, column: 36, scope: !6801, inlinedAt: !8134)
!8411 = !DILocation(line: 74, column: 39, scope: !6806, inlinedAt: !8134)
!8412 = !DILocation(line: 74, column: 48, scope: !6806, inlinedAt: !8134)
!8413 = !DILocation(line: 74, column: 21, scope: !6806, inlinedAt: !8134)
!8414 = !DILocation(line: 75, column: 36, scope: !6810, inlinedAt: !8134)
!8415 = !DILocation(line: 75, column: 39, scope: !6810, inlinedAt: !8134)
!8416 = !DILocation(line: 75, column: 25, scope: !6810, inlinedAt: !8134)
!8417 = !DILocation(line: 75, column: 25, scope: !6811, inlinedAt: !8134)
!8418 = !DILocation(line: 76, column: 54, scope: !6816, inlinedAt: !8134)
!8419 = !DILocation(line: 76, column: 42, scope: !6816, inlinedAt: !8134)
!8420 = !DILocation(line: 76, column: 39, scope: !6816, inlinedAt: !8134)
!8421 = !DILocation(line: 76, column: 35, scope: !6816, inlinedAt: !8134)
!8422 = !DILocation(line: 77, column: 29, scope: !6821, inlinedAt: !8134)
!8423 = !DILocation(line: 77, column: 33, scope: !6821, inlinedAt: !8134)
!8424 = !DILocation(line: 77, column: 31, scope: !6821, inlinedAt: !8134)
!8425 = !DILocation(line: 77, column: 46, scope: !6821, inlinedAt: !8134)
!8426 = !DILocation(line: 77, column: 43, scope: !6821, inlinedAt: !8134)
!8427 = !DILocation(line: 77, column: 29, scope: !6816, inlinedAt: !8134)
!8428 = !DILocation(line: 78, column: 38, scope: !6821, inlinedAt: !8134)
!8429 = !DILocation(line: 78, column: 29, scope: !6821, inlinedAt: !8134)
!8430 = !DILocation(line: 79, column: 21, scope: !6816, inlinedAt: !8134)
!8431 = !DILocation(line: 80, column: 41, scope: !6831, inlinedAt: !8134)
!8432 = !DILocation(line: 80, column: 29, scope: !6831, inlinedAt: !8134)
!8433 = !DILocation(line: 80, column: 29, scope: !6832, inlinedAt: !8134)
!8434 = !DILocation(line: 81, column: 51, scope: !6831, inlinedAt: !8134)
!8435 = !DILocation(line: 81, column: 54, scope: !6831, inlinedAt: !8134)
!8436 = !DILocation(line: 81, column: 70, scope: !6831, inlinedAt: !8134)
!8437 = !DILocation(line: 81, column: 58, scope: !6831, inlinedAt: !8134)
!8438 = !DILocation(line: 81, column: 41, scope: !6831, inlinedAt: !8134)
!8439 = !DILocation(line: 81, column: 39, scope: !6831, inlinedAt: !8134)
!8440 = !DILocation(line: 81, column: 29, scope: !6831, inlinedAt: !8134)
!8441 = !DILocation(line: 83, column: 39, scope: !6831, inlinedAt: !8134)
!8442 = !DILocation(line: 84, column: 29, scope: !6844, inlinedAt: !8134)
!8443 = !DILocation(line: 84, column: 29, scope: !6832, inlinedAt: !8134)
!8444 = !DILocation(line: 85, column: 38, scope: !6844, inlinedAt: !8134)
!8445 = !DILocation(line: 85, column: 29, scope: !6844, inlinedAt: !8134)
!8446 = !DILocation(line: 86, column: 34, scope: !6832, inlinedAt: !8134)
!8447 = !DILocation(line: 88, column: 17, scope: !6811, inlinedAt: !8134)
!8448 = !DILocation(line: 89, column: 26, scope: !6802, inlinedAt: !8134)
!8449 = !DILocation(line: 90, column: 21, scope: !6852, inlinedAt: !8134)
!8450 = !DILocation(line: 90, column: 31, scope: !6852, inlinedAt: !8134)
!8451 = !DILocation(line: 90, column: 21, scope: !6802, inlinedAt: !8134)
!8452 = !DILocation(line: 91, column: 30, scope: !6856, inlinedAt: !8134)
!8453 = !DILocation(line: 92, column: 31, scope: !6856, inlinedAt: !8134)
!8454 = !DILocation(line: 93, column: 44, scope: !6856, inlinedAt: !8134)
!8455 = !DILocation(line: 93, column: 47, scope: !6856, inlinedAt: !8134)
!8456 = !DILocation(line: 93, column: 65, scope: !6856, inlinedAt: !8134)
!8457 = !DILocation(line: 93, column: 52, scope: !6856, inlinedAt: !8134)
!8458 = !DILocation(line: 93, column: 55, scope: !6856, inlinedAt: !8134)
!8459 = !DILocation(line: 94, column: 48, scope: !6856, inlinedAt: !8134)
!8460 = !DILocation(line: 93, column: 28, scope: !6856, inlinedAt: !8134)
!8461 = !DILocation(line: 93, column: 26, scope: !6856, inlinedAt: !8134)
!8462 = !DILocation(line: 95, column: 25, scope: !6867, inlinedAt: !8134)
!8463 = !DILocation(line: 95, column: 30, scope: !6867, inlinedAt: !8134)
!8464 = !DILocation(line: 95, column: 25, scope: !6856, inlinedAt: !8134)
!8465 = !DILocation(line: 96, column: 29, scope: !6867, inlinedAt: !8134)
!8466 = !DILocation(line: 96, column: 25, scope: !6867, inlinedAt: !8134)
!8467 = !DILocation(line: 97, column: 17, scope: !6856, inlinedAt: !8134)
!8468 = !DILocation(line: 98, column: 26, scope: !6852, inlinedAt: !8134)
!8469 = !DILocation(line: 99, column: 13, scope: !6802, inlinedAt: !8134)
!8470 = !DILocation(line: 100, column: 40, scope: !6798, inlinedAt: !8134)
!8471 = !DILocation(line: 100, column: 43, scope: !6798, inlinedAt: !8134)
!8472 = !DILocation(line: 100, column: 61, scope: !6798, inlinedAt: !8134)
!8473 = !DILocation(line: 100, column: 48, scope: !6798, inlinedAt: !8134)
!8474 = !DILocation(line: 100, column: 51, scope: !6798, inlinedAt: !8134)
!8475 = !DILocation(line: 100, column: 71, scope: !6798, inlinedAt: !8134)
!8476 = !DILocation(line: 100, column: 24, scope: !6798, inlinedAt: !8134)
!8477 = !DILocation(line: 100, column: 22, scope: !6798, inlinedAt: !8134)
!8478 = !DILocation(line: 106, column: 13, scope: !6884, inlinedAt: !8134)
!8479 = !DILocation(line: 106, column: 13, scope: !6521, inlinedAt: !8134)
!8480 = !DILocation(line: 107, column: 31, scope: !6884, inlinedAt: !8134)
!8481 = !DILocation(line: 107, column: 20, scope: !6884, inlinedAt: !8134)
!8482 = !DILocation(line: 107, column: 18, scope: !6884, inlinedAt: !8134)
!8483 = !DILocation(line: 107, column: 13, scope: !6884, inlinedAt: !8134)
!8484 = !DILocation(line: 109, column: 48, scope: !6521, inlinedAt: !8134)
!8485 = !DILocation(line: 109, column: 60, scope: !6521, inlinedAt: !8134)
!8486 = !DILocation(line: 109, column: 58, scope: !6521, inlinedAt: !8134)
!8487 = !DILocation(line: 109, column: 63, scope: !6521, inlinedAt: !8134)
!8488 = !DILocation(line: 109, column: 75, scope: !6521, inlinedAt: !8134)
!8489 = !DILocation(line: 109, column: 73, scope: !6521, inlinedAt: !8134)
!8490 = !DILocation(line: 109, column: 40, scope: !6521, inlinedAt: !8134)
!8491 = !DILocation(line: 109, column: 90, scope: !6521, inlinedAt: !8134)
!8492 = !DILocation(line: 109, column: 78, scope: !6521, inlinedAt: !8134)
!8493 = !DILocation(line: 109, column: 96, scope: !6521, inlinedAt: !8134)
!8494 = !DILocation(line: 109, column: 24, scope: !6519, inlinedAt: !8134)
!8495 = !DILocation(line: 243, column: 12, scope: !6513, inlinedAt: !8133)
!8496 = !DILocation(line: 243, column: 23, scope: !6513, inlinedAt: !8133)
!8497 = !DILocation(line: 243, column: 20, scope: !6513, inlinedAt: !8133)
!8498 = !DILocation(line: 243, column: 26, scope: !6513, inlinedAt: !8133)
!8499 = !DILocation(line: 243, column: 14, scope: !6513, inlinedAt: !8133)
!8500 = !DILocation(line: 109, column: 24, scope: !6521, inlinedAt: !8134)
!8501 = !DILocation(line: 109, column: 19, scope: !6521, inlinedAt: !8134)
!8502 = !DILocation(line: 109, column: 9, scope: !6521, inlinedAt: !8134)
!8503 = !DILocation(line: 109, column: 22, scope: !6521, inlinedAt: !8134)
!8504 = !DILocation(line: 50, column: 25, scope: !6911, inlinedAt: !8134)
!8505 = !DILocation(line: 50, column: 5, scope: !6911, inlinedAt: !8134)
!8506 = !DILocation(line: 111, column: 20, scope: !6524, inlinedAt: !8134)
!8507 = !DILocation(line: 111, column: 5, scope: !6524, inlinedAt: !8134)
!8508 = !DILocation(line: 111, column: 8, scope: !6524, inlinedAt: !8134)
!8509 = !DILocation(line: 111, column: 18, scope: !6524, inlinedAt: !8134)
!8510 = !DILocation(line: 112, column: 5, scope: !6524, inlinedAt: !8134)
!8511 = !DILocation(line: 113, column: 1, scope: !6524, inlinedAt: !8134)
!8512 = !DILocation(line: 144, column: 21, scope: !8107)
!8513 = !DILocation(line: 144, column: 17, scope: !8107)
!8514 = !DILocation(line: 146, column: 35, scope: !8107)
!8515 = !DILocation(line: 146, column: 38, scope: !8107)
!8516 = !DILocation(line: 146, column: 48, scope: !8107)
!8517 = !DILocation(line: 146, column: 41, scope: !8107)
!8518 = !DILocation(line: 146, column: 53, scope: !8107)
!8519 = !DILocation(line: 146, column: 55, scope: !8107)
!8520 = !DILocation(line: 146, column: 59, scope: !8107)
!8521 = !DILocation(line: 146, column: 63, scope: !8107)
!8522 = !DILocation(line: 146, column: 71, scope: !8107)
!8523 = !DILocation(line: 146, column: 74, scope: !8107)
!8524 = !DILocation(line: 146, column: 92, scope: !8107)
!8525 = !DILocation(line: 146, column: 68, scope: !8107)
!8526 = !DILocation(line: 146, column: 23, scope: !8107)
!8527 = !DILocation(line: 27, column: 39, scope: !6524, inlinedAt: !8106)
!8528 = !DILocation(line: 27, column: 30, scope: !6524, inlinedAt: !8106)
!8529 = !DILocation(line: 27, column: 33, scope: !6524, inlinedAt: !8106)
!8530 = !DILocation(line: 28, column: 28, scope: !6524, inlinedAt: !8106)
!8531 = !DILocation(line: 28, column: 31, scope: !6524, inlinedAt: !8106)
!8532 = !DILocation(line: 32, column: 21, scope: !6524, inlinedAt: !8106)
!8533 = !DILocation(line: 32, column: 24, scope: !6524, inlinedAt: !8106)
!8534 = !DILocation(line: 34, column: 22, scope: !6690, inlinedAt: !8106)
!8535 = !DILocation(line: 34, column: 9, scope: !6690, inlinedAt: !8106)
!8536 = !DILocation(line: 34, column: 9, scope: !6524, inlinedAt: !8106)
!8537 = !DILocation(line: 35, column: 9, scope: !6690, inlinedAt: !8106)
!8538 = !DILocation(line: 37, column: 9, scope: !6560, inlinedAt: !8106)
!8539 = !DILocation(line: 37, column: 12, scope: !6560, inlinedAt: !8106)
!8540 = !DILocation(line: 37, column: 30, scope: !6560, inlinedAt: !8106)
!8541 = !DILocation(line: 37, column: 9, scope: !6524, inlinedAt: !8106)
!8542 = !DILocation(line: 39, column: 16, scope: !6565, inlinedAt: !8106)
!8543 = !DILocation(line: 39, column: 14, scope: !6565, inlinedAt: !8106)
!8544 = !DILocation(line: 39, column: 21, scope: !6701, inlinedAt: !8106)
!8545 = !DILocation(line: 39, column: 25, scope: !6701, inlinedAt: !8106)
!8546 = !DILocation(line: 39, column: 23, scope: !6701, inlinedAt: !8106)
!8547 = !DILocation(line: 39, column: 9, scope: !6701, inlinedAt: !8106)
!8548 = !DILocation(line: 41, column: 19, scope: !6570, inlinedAt: !8106)
!8549 = !DILocation(line: 41, column: 18, scope: !6570, inlinedAt: !8106)
!8550 = !DILocation(line: 41, column: 23, scope: !6708, inlinedAt: !8106)
!8551 = !DILocation(line: 41, column: 25, scope: !6708, inlinedAt: !8106)
!8552 = !DILocation(line: 41, column: 24, scope: !6708, inlinedAt: !8106)
!8553 = !DILocation(line: 41, column: 13, scope: !6708, inlinedAt: !8106)
!8554 = !DILocation(line: 43, column: 22, scope: !6568, inlinedAt: !8106)
!8555 = !DILocation(line: 43, column: 34, scope: !6568, inlinedAt: !8106)
!8556 = !DILocation(line: 43, column: 26, scope: !6568, inlinedAt: !8106)
!8557 = !DILocation(line: 43, column: 24, scope: !6568, inlinedAt: !8106)
!8558 = !DILocation(line: 43, column: 19, scope: !6568, inlinedAt: !8106)
!8559 = !DILocation(line: 41, column: 32, scope: !6718, inlinedAt: !8106)
!8560 = !DILocation(line: 41, column: 13, scope: !6718, inlinedAt: !8106)
!8561 = !DILocation(line: 45, column: 28, scope: !6563, inlinedAt: !8106)
!8562 = !DILocation(line: 45, column: 23, scope: !6563, inlinedAt: !8106)
!8563 = !DILocation(line: 45, column: 13, scope: !6563, inlinedAt: !8106)
!8564 = !DILocation(line: 45, column: 26, scope: !6563, inlinedAt: !8106)
!8565 = !DILocation(line: 39, column: 29, scope: !6727, inlinedAt: !8106)
!8566 = !DILocation(line: 39, column: 9, scope: !6727, inlinedAt: !8106)
!8567 = !DILocation(line: 47, column: 9, scope: !6559, inlinedAt: !8106)
!8568 = !DILocation(line: 50, column: 12, scope: !6523, inlinedAt: !8106)
!8569 = !DILocation(line: 50, column: 10, scope: !6523, inlinedAt: !8106)
!8570 = !DILocation(line: 50, column: 17, scope: !6735, inlinedAt: !8106)
!8571 = !DILocation(line: 50, column: 21, scope: !6735, inlinedAt: !8106)
!8572 = !DILocation(line: 50, column: 19, scope: !6735, inlinedAt: !8106)
!8573 = !DILocation(line: 50, column: 5, scope: !6735, inlinedAt: !8106)
!8574 = !DILocation(line: 53, column: 15, scope: !6740, inlinedAt: !8106)
!8575 = !DILocation(line: 53, column: 17, scope: !6740, inlinedAt: !8106)
!8576 = !DILocation(line: 53, column: 13, scope: !6521, inlinedAt: !8106)
!8577 = !DILocation(line: 54, column: 30, scope: !6744, inlinedAt: !8106)
!8578 = !DILocation(line: 54, column: 17, scope: !6744, inlinedAt: !8106)
!8579 = !DILocation(line: 54, column: 17, scope: !6745, inlinedAt: !8106)
!8580 = !DILocation(line: 55, column: 17, scope: !6744, inlinedAt: !8106)
!8581 = !DILocation(line: 56, column: 9, scope: !6745, inlinedAt: !8106)
!8582 = !DILocation(line: 58, column: 31, scope: !6521, inlinedAt: !8106)
!8583 = !DILocation(line: 58, column: 34, scope: !6521, inlinedAt: !8106)
!8584 = !DILocation(line: 58, column: 46, scope: !6521, inlinedAt: !8106)
!8585 = !DILocation(line: 58, column: 44, scope: !6521, inlinedAt: !8106)
!8586 = !DILocation(line: 58, column: 49, scope: !6521, inlinedAt: !8106)
!8587 = !DILocation(line: 58, column: 61, scope: !6521, inlinedAt: !8106)
!8588 = !DILocation(line: 58, column: 59, scope: !6521, inlinedAt: !8106)
!8589 = !DILocation(line: 58, column: 64, scope: !6521, inlinedAt: !8106)
!8590 = !DILocation(line: 58, column: 76, scope: !6521, inlinedAt: !8106)
!8591 = !DILocation(line: 58, column: 74, scope: !6521, inlinedAt: !8106)
!8592 = !DILocation(line: 58, column: 19, scope: !6521, inlinedAt: !8106)
!8593 = !DILocation(line: 58, column: 17, scope: !6521, inlinedAt: !8106)
!8594 = !DILocation(line: 59, column: 13, scope: !6763, inlinedAt: !8106)
!8595 = !DILocation(line: 59, column: 21, scope: !6763, inlinedAt: !8106)
!8596 = !DILocation(line: 59, column: 13, scope: !6521, inlinedAt: !8106)
!8597 = !DILocation(line: 60, column: 24, scope: !6767, inlinedAt: !8106)
!8598 = !DILocation(line: 60, column: 23, scope: !6767, inlinedAt: !8106)
!8599 = !DILocation(line: 60, column: 21, scope: !6767, inlinedAt: !8106)
!8600 = !DILocation(line: 61, column: 18, scope: !6767, inlinedAt: !8106)
!8601 = !DILocation(line: 62, column: 9, scope: !6767, inlinedAt: !8106)
!8602 = !DILocation(line: 63, column: 18, scope: !6763, inlinedAt: !8106)
!8603 = !DILocation(line: 67, column: 13, scope: !6774, inlinedAt: !8106)
!8604 = !DILocation(line: 67, column: 16, scope: !6774, inlinedAt: !8106)
!8605 = !DILocation(line: 67, column: 19, scope: !6774, inlinedAt: !8106)
!8606 = !DILocation(line: 67, column: 13, scope: !6521, inlinedAt: !8106)
!8607 = !DILocation(line: 68, column: 38, scope: !6779, inlinedAt: !8106)
!8608 = !DILocation(line: 68, column: 50, scope: !6779, inlinedAt: !8106)
!8609 = !DILocation(line: 68, column: 41, scope: !6779, inlinedAt: !8106)
!8610 = !DILocation(line: 68, column: 44, scope: !6779, inlinedAt: !8106)
!8611 = !DILocation(line: 68, column: 20, scope: !6779, inlinedAt: !8106)
!8612 = !DILocation(line: 68, column: 18, scope: !6779, inlinedAt: !8106)
!8613 = !DILocation(line: 69, column: 9, scope: !6779, inlinedAt: !8106)
!8614 = !DILocation(line: 70, column: 17, scope: !6787, inlinedAt: !8106)
!8615 = !DILocation(line: 70, column: 25, scope: !6787, inlinedAt: !8106)
!8616 = !DILocation(line: 70, column: 30, scope: !6787, inlinedAt: !8106)
!8617 = !DILocation(line: 70, column: 33, scope: !6792, inlinedAt: !8106)
!8618 = !DILocation(line: 70, column: 42, scope: !6792, inlinedAt: !8106)
!8619 = !DILocation(line: 70, column: 17, scope: !6792, inlinedAt: !8106)
!8620 = !DILocation(line: 71, column: 26, scope: !6787, inlinedAt: !8106)
!8621 = !DILocation(line: 71, column: 17, scope: !6787, inlinedAt: !8106)
!8622 = !DILocation(line: 73, column: 17, scope: !6798, inlinedAt: !8106)
!8623 = !DILocation(line: 73, column: 17, scope: !6788, inlinedAt: !8106)
!8624 = !DILocation(line: 74, column: 21, scope: !6801, inlinedAt: !8106)
!8625 = !DILocation(line: 74, column: 31, scope: !6801, inlinedAt: !8106)
!8626 = !DILocation(line: 74, column: 36, scope: !6801, inlinedAt: !8106)
!8627 = !DILocation(line: 74, column: 39, scope: !6806, inlinedAt: !8106)
!8628 = !DILocation(line: 74, column: 48, scope: !6806, inlinedAt: !8106)
!8629 = !DILocation(line: 74, column: 21, scope: !6806, inlinedAt: !8106)
!8630 = !DILocation(line: 75, column: 36, scope: !6810, inlinedAt: !8106)
!8631 = !DILocation(line: 75, column: 39, scope: !6810, inlinedAt: !8106)
!8632 = !DILocation(line: 75, column: 25, scope: !6810, inlinedAt: !8106)
!8633 = !DILocation(line: 75, column: 25, scope: !6811, inlinedAt: !8106)
!8634 = !DILocation(line: 76, column: 54, scope: !6816, inlinedAt: !8106)
!8635 = !DILocation(line: 76, column: 42, scope: !6816, inlinedAt: !8106)
!8636 = !DILocation(line: 76, column: 39, scope: !6816, inlinedAt: !8106)
!8637 = !DILocation(line: 76, column: 35, scope: !6816, inlinedAt: !8106)
!8638 = !DILocation(line: 77, column: 29, scope: !6821, inlinedAt: !8106)
!8639 = !DILocation(line: 77, column: 33, scope: !6821, inlinedAt: !8106)
!8640 = !DILocation(line: 77, column: 31, scope: !6821, inlinedAt: !8106)
!8641 = !DILocation(line: 77, column: 46, scope: !6821, inlinedAt: !8106)
!8642 = !DILocation(line: 77, column: 43, scope: !6821, inlinedAt: !8106)
!8643 = !DILocation(line: 77, column: 29, scope: !6816, inlinedAt: !8106)
!8644 = !DILocation(line: 78, column: 38, scope: !6821, inlinedAt: !8106)
!8645 = !DILocation(line: 78, column: 29, scope: !6821, inlinedAt: !8106)
!8646 = !DILocation(line: 79, column: 21, scope: !6816, inlinedAt: !8106)
!8647 = !DILocation(line: 80, column: 41, scope: !6831, inlinedAt: !8106)
!8648 = !DILocation(line: 80, column: 29, scope: !6831, inlinedAt: !8106)
!8649 = !DILocation(line: 80, column: 29, scope: !6832, inlinedAt: !8106)
!8650 = !DILocation(line: 81, column: 51, scope: !6831, inlinedAt: !8106)
!8651 = !DILocation(line: 81, column: 54, scope: !6831, inlinedAt: !8106)
!8652 = !DILocation(line: 81, column: 70, scope: !6831, inlinedAt: !8106)
!8653 = !DILocation(line: 81, column: 58, scope: !6831, inlinedAt: !8106)
!8654 = !DILocation(line: 81, column: 41, scope: !6831, inlinedAt: !8106)
!8655 = !DILocation(line: 81, column: 39, scope: !6831, inlinedAt: !8106)
!8656 = !DILocation(line: 81, column: 29, scope: !6831, inlinedAt: !8106)
!8657 = !DILocation(line: 83, column: 39, scope: !6831, inlinedAt: !8106)
!8658 = !DILocation(line: 84, column: 29, scope: !6844, inlinedAt: !8106)
!8659 = !DILocation(line: 84, column: 29, scope: !6832, inlinedAt: !8106)
!8660 = !DILocation(line: 85, column: 38, scope: !6844, inlinedAt: !8106)
!8661 = !DILocation(line: 85, column: 29, scope: !6844, inlinedAt: !8106)
!8662 = !DILocation(line: 86, column: 34, scope: !6832, inlinedAt: !8106)
!8663 = !DILocation(line: 88, column: 17, scope: !6811, inlinedAt: !8106)
!8664 = !DILocation(line: 89, column: 26, scope: !6802, inlinedAt: !8106)
!8665 = !DILocation(line: 90, column: 21, scope: !6852, inlinedAt: !8106)
!8666 = !DILocation(line: 90, column: 31, scope: !6852, inlinedAt: !8106)
!8667 = !DILocation(line: 90, column: 21, scope: !6802, inlinedAt: !8106)
!8668 = !DILocation(line: 91, column: 30, scope: !6856, inlinedAt: !8106)
!8669 = !DILocation(line: 92, column: 31, scope: !6856, inlinedAt: !8106)
!8670 = !DILocation(line: 93, column: 44, scope: !6856, inlinedAt: !8106)
!8671 = !DILocation(line: 93, column: 47, scope: !6856, inlinedAt: !8106)
!8672 = !DILocation(line: 93, column: 65, scope: !6856, inlinedAt: !8106)
!8673 = !DILocation(line: 93, column: 52, scope: !6856, inlinedAt: !8106)
!8674 = !DILocation(line: 93, column: 55, scope: !6856, inlinedAt: !8106)
!8675 = !DILocation(line: 94, column: 48, scope: !6856, inlinedAt: !8106)
!8676 = !DILocation(line: 93, column: 28, scope: !6856, inlinedAt: !8106)
!8677 = !DILocation(line: 93, column: 26, scope: !6856, inlinedAt: !8106)
!8678 = !DILocation(line: 95, column: 25, scope: !6867, inlinedAt: !8106)
!8679 = !DILocation(line: 95, column: 30, scope: !6867, inlinedAt: !8106)
!8680 = !DILocation(line: 95, column: 25, scope: !6856, inlinedAt: !8106)
!8681 = !DILocation(line: 96, column: 29, scope: !6867, inlinedAt: !8106)
!8682 = !DILocation(line: 96, column: 25, scope: !6867, inlinedAt: !8106)
!8683 = !DILocation(line: 97, column: 17, scope: !6856, inlinedAt: !8106)
!8684 = !DILocation(line: 98, column: 26, scope: !6852, inlinedAt: !8106)
!8685 = !DILocation(line: 99, column: 13, scope: !6802, inlinedAt: !8106)
!8686 = !DILocation(line: 100, column: 40, scope: !6798, inlinedAt: !8106)
!8687 = !DILocation(line: 100, column: 43, scope: !6798, inlinedAt: !8106)
!8688 = !DILocation(line: 100, column: 61, scope: !6798, inlinedAt: !8106)
!8689 = !DILocation(line: 100, column: 48, scope: !6798, inlinedAt: !8106)
!8690 = !DILocation(line: 100, column: 51, scope: !6798, inlinedAt: !8106)
!8691 = !DILocation(line: 100, column: 71, scope: !6798, inlinedAt: !8106)
!8692 = !DILocation(line: 100, column: 24, scope: !6798, inlinedAt: !8106)
!8693 = !DILocation(line: 100, column: 22, scope: !6798, inlinedAt: !8106)
!8694 = !DILocation(line: 106, column: 13, scope: !6884, inlinedAt: !8106)
!8695 = !DILocation(line: 106, column: 13, scope: !6521, inlinedAt: !8106)
!8696 = !DILocation(line: 107, column: 31, scope: !6884, inlinedAt: !8106)
!8697 = !DILocation(line: 107, column: 20, scope: !6884, inlinedAt: !8106)
!8698 = !DILocation(line: 107, column: 18, scope: !6884, inlinedAt: !8106)
!8699 = !DILocation(line: 107, column: 13, scope: !6884, inlinedAt: !8106)
!8700 = !DILocation(line: 109, column: 48, scope: !6521, inlinedAt: !8106)
!8701 = !DILocation(line: 109, column: 60, scope: !6521, inlinedAt: !8106)
!8702 = !DILocation(line: 109, column: 58, scope: !6521, inlinedAt: !8106)
!8703 = !DILocation(line: 109, column: 63, scope: !6521, inlinedAt: !8106)
!8704 = !DILocation(line: 109, column: 75, scope: !6521, inlinedAt: !8106)
!8705 = !DILocation(line: 109, column: 73, scope: !6521, inlinedAt: !8106)
!8706 = !DILocation(line: 109, column: 40, scope: !6521, inlinedAt: !8106)
!8707 = !DILocation(line: 109, column: 90, scope: !6521, inlinedAt: !8106)
!8708 = !DILocation(line: 109, column: 78, scope: !6521, inlinedAt: !8106)
!8709 = !DILocation(line: 109, column: 96, scope: !6521, inlinedAt: !8106)
!8710 = !DILocation(line: 109, column: 24, scope: !6519, inlinedAt: !8106)
!8711 = !DILocation(line: 243, column: 12, scope: !6513, inlinedAt: !8105)
!8712 = !DILocation(line: 243, column: 23, scope: !6513, inlinedAt: !8105)
!8713 = !DILocation(line: 243, column: 20, scope: !6513, inlinedAt: !8105)
!8714 = !DILocation(line: 243, column: 26, scope: !6513, inlinedAt: !8105)
!8715 = !DILocation(line: 243, column: 14, scope: !6513, inlinedAt: !8105)
!8716 = !DILocation(line: 109, column: 24, scope: !6521, inlinedAt: !8106)
!8717 = !DILocation(line: 109, column: 19, scope: !6521, inlinedAt: !8106)
!8718 = !DILocation(line: 109, column: 9, scope: !6521, inlinedAt: !8106)
!8719 = !DILocation(line: 109, column: 22, scope: !6521, inlinedAt: !8106)
!8720 = !DILocation(line: 50, column: 25, scope: !6911, inlinedAt: !8106)
!8721 = !DILocation(line: 50, column: 5, scope: !6911, inlinedAt: !8106)
!8722 = !DILocation(line: 111, column: 20, scope: !6524, inlinedAt: !8106)
!8723 = !DILocation(line: 111, column: 5, scope: !6524, inlinedAt: !8106)
!8724 = !DILocation(line: 111, column: 8, scope: !6524, inlinedAt: !8106)
!8725 = !DILocation(line: 111, column: 18, scope: !6524, inlinedAt: !8106)
!8726 = !DILocation(line: 112, column: 5, scope: !6524, inlinedAt: !8106)
!8727 = !DILocation(line: 113, column: 1, scope: !6524, inlinedAt: !8106)
!8728 = !DILocation(line: 146, column: 21, scope: !8107)
!8729 = !DILocation(line: 147, column: 17, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8108, file: !6520, line: 147, column: 17)
!8731 = !DILocation(line: 147, column: 21, scope: !8730)
!8732 = !DILocation(line: 147, column: 17, scope: !8108)
!8733 = !DILocation(line: 148, column: 24, scope: !8730)
!8734 = !DILocation(line: 148, column: 17, scope: !8730)
!8735 = !DILocation(line: 149, column: 9, scope: !8108)
!8736 = !DILocation(line: 134, column: 44, scope: !8737)
!8737 = !DILexicalBlockFile(scope: !8109, file: !6520, discriminator: 2)
!8738 = !DILocation(line: 134, column: 9, scope: !8737)
!8739 = distinct !{!8739, !8740}
!8740 = !DILocation(line: 134, column: 9, scope: !8111)
!8741 = !DILocation(line: 150, column: 16, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8111, file: !6520, line: 150, column: 9)
!8743 = !DILocation(line: 150, column: 14, scope: !8742)
!8744 = !DILocation(line: 150, column: 21, scope: !8745)
!8745 = !DILexicalBlockFile(scope: !8746, file: !6520, discriminator: 1)
!8746 = distinct !DILexicalBlock(scope: !8742, file: !6520, line: 150, column: 9)
!8747 = !DILocation(line: 150, column: 25, scope: !8745)
!8748 = !DILocation(line: 150, column: 23, scope: !8745)
!8749 = !DILocation(line: 150, column: 9, scope: !8745)
!8750 = !DILocalVariable(name: "g", scope: !8751, file: !6520, line: 151, type: !923)
!8751 = distinct !DILexicalBlock(scope: !8746, file: !6520, line: 150, column: 33)
!8752 = !DILocation(line: 151, column: 17, scope: !8751)
!8753 = !DILocation(line: 151, column: 34, scope: !8751)
!8754 = !DILocation(line: 151, column: 21, scope: !8751)
!8755 = !DILocalVariable(name: "b", scope: !8751, file: !6520, line: 152, type: !923)
!8756 = !DILocation(line: 152, column: 17, scope: !8751)
!8757 = !DILocation(line: 152, column: 34, scope: !8751)
!8758 = !DILocation(line: 152, column: 21, scope: !8751)
!8759 = !DILocalVariable(name: "r", scope: !8751, file: !6520, line: 153, type: !923)
!8760 = !DILocation(line: 153, column: 17, scope: !8751)
!8761 = !DILocation(line: 153, column: 34, scope: !8751)
!8762 = !DILocation(line: 153, column: 21, scope: !8751)
!8763 = !DILocalVariable(name: "a", scope: !8751, file: !6520, line: 154, type: !923)
!8764 = !DILocation(line: 154, column: 17, scope: !8751)
!8765 = !DILocation(line: 154, column: 34, scope: !8751)
!8766 = !DILocation(line: 154, column: 21, scope: !8751)
!8767 = !DILocation(line: 156, column: 17, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8751, file: !6520, line: 156, column: 17)
!8769 = !DILocation(line: 156, column: 20, scope: !8768)
!8770 = !DILocation(line: 156, column: 38, scope: !8768)
!8771 = !DILocation(line: 156, column: 17, scope: !8751)
!8772 = !DILocation(line: 157, column: 22, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8768, file: !6520, line: 156, column: 44)
!8774 = !DILocation(line: 157, column: 19, scope: !8773)
!8775 = !DILocation(line: 158, column: 22, scope: !8773)
!8776 = !DILocation(line: 158, column: 19, scope: !8773)
!8777 = !DILocation(line: 159, column: 23, scope: !8773)
!8778 = !DILocation(line: 159, column: 27, scope: !8773)
!8779 = !DILocation(line: 159, column: 30, scope: !8773)
!8780 = !DILocation(line: 159, column: 25, scope: !8773)
!8781 = !DILocation(line: 159, column: 50, scope: !8773)
!8782 = !DILocation(line: 159, column: 54, scope: !8773)
!8783 = !DILocation(line: 159, column: 57, scope: !8773)
!8784 = !DILocation(line: 159, column: 52, scope: !8773)
!8785 = !DILocation(line: 159, column: 48, scope: !8773)
!8786 = !DILocation(line: 159, column: 76, scope: !8773)
!8787 = !DILocation(line: 159, column: 19, scope: !8773)
!8788 = !DILocation(line: 160, column: 22, scope: !8773)
!8789 = !DILocation(line: 160, column: 19, scope: !8773)
!8790 = !DILocation(line: 161, column: 22, scope: !8773)
!8791 = !DILocation(line: 161, column: 19, scope: !8773)
!8792 = !DILocation(line: 162, column: 13, scope: !8773)
!8793 = !DILocation(line: 164, column: 17, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8751, file: !6520, line: 164, column: 17)
!8795 = !DILocation(line: 164, column: 17, scope: !8751)
!8796 = !DILocation(line: 165, column: 62, scope: !8794)
!8797 = !DILocation(line: 165, column: 77, scope: !8794)
!8798 = !DILocation(line: 165, column: 78, scope: !8794)
!8799 = !DILocation(line: 165, column: 64, scope: !8794)
!8800 = !DILocation(line: 165, column: 96, scope: !8794)
!8801 = !DILocation(line: 165, column: 97, scope: !8794)
!8802 = !DILocation(line: 165, column: 83, scope: !8794)
!8803 = !DILocation(line: 165, column: 116, scope: !8794)
!8804 = !DILocation(line: 165, column: 117, scope: !8794)
!8805 = !DILocation(line: 165, column: 103, scope: !8794)
!8806 = !DILocation(line: 165, column: 31, scope: !8794)
!8807 = !DILocation(line: 165, column: 40, scope: !8794)
!8808 = !DILocation(line: 165, column: 41, scope: !8794)
!8809 = !DILocation(line: 165, column: 38, scope: !8794)
!8810 = !DILocation(line: 165, column: 46, scope: !8794)
!8811 = !DILocation(line: 165, column: 56, scope: !8794)
!8812 = !DILocation(line: 165, column: 55, scope: !8794)
!8813 = !DILocation(line: 165, column: 44, scope: !8794)
!8814 = !DILocation(line: 165, column: 17, scope: !8794)
!8815 = !DILocation(line: 165, column: 60, scope: !8794)
!8816 = !DILocation(line: 166, column: 46, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8794, file: !6520, line: 166, column: 22)
!8818 = !DILocation(line: 166, column: 22, scope: !8794)
!8819 = !DILocation(line: 167, column: 62, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8817, file: !6520, line: 166, column: 60)
!8821 = !DILocation(line: 167, column: 31, scope: !8820)
!8822 = !DILocation(line: 167, column: 40, scope: !8820)
!8823 = !DILocation(line: 167, column: 41, scope: !8820)
!8824 = !DILocation(line: 167, column: 38, scope: !8820)
!8825 = !DILocation(line: 167, column: 46, scope: !8820)
!8826 = !DILocation(line: 167, column: 56, scope: !8820)
!8827 = !DILocation(line: 167, column: 55, scope: !8820)
!8828 = !DILocation(line: 167, column: 44, scope: !8820)
!8829 = !DILocation(line: 167, column: 17, scope: !8820)
!8830 = !DILocation(line: 167, column: 60, scope: !8820)
!8831 = !DILocation(line: 168, column: 62, scope: !8820)
!8832 = !DILocation(line: 168, column: 31, scope: !8820)
!8833 = !DILocation(line: 168, column: 40, scope: !8820)
!8834 = !DILocation(line: 168, column: 41, scope: !8820)
!8835 = !DILocation(line: 168, column: 38, scope: !8820)
!8836 = !DILocation(line: 168, column: 46, scope: !8820)
!8837 = !DILocation(line: 168, column: 56, scope: !8820)
!8838 = !DILocation(line: 168, column: 55, scope: !8820)
!8839 = !DILocation(line: 168, column: 44, scope: !8820)
!8840 = !DILocation(line: 168, column: 17, scope: !8820)
!8841 = !DILocation(line: 168, column: 60, scope: !8820)
!8842 = !DILocation(line: 169, column: 62, scope: !8820)
!8843 = !DILocation(line: 169, column: 31, scope: !8820)
!8844 = !DILocation(line: 169, column: 40, scope: !8820)
!8845 = !DILocation(line: 169, column: 41, scope: !8820)
!8846 = !DILocation(line: 169, column: 38, scope: !8820)
!8847 = !DILocation(line: 169, column: 46, scope: !8820)
!8848 = !DILocation(line: 169, column: 56, scope: !8820)
!8849 = !DILocation(line: 169, column: 55, scope: !8820)
!8850 = !DILocation(line: 169, column: 44, scope: !8820)
!8851 = !DILocation(line: 169, column: 17, scope: !8820)
!8852 = !DILocation(line: 169, column: 60, scope: !8820)
!8853 = !DILocation(line: 170, column: 21, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8820, file: !6520, line: 170, column: 21)
!8855 = !DILocation(line: 170, column: 21, scope: !8820)
!8856 = !DILocation(line: 171, column: 66, scope: !8854)
!8857 = !DILocation(line: 171, column: 35, scope: !8854)
!8858 = !DILocation(line: 171, column: 44, scope: !8854)
!8859 = !DILocation(line: 171, column: 45, scope: !8854)
!8860 = !DILocation(line: 171, column: 42, scope: !8854)
!8861 = !DILocation(line: 171, column: 50, scope: !8854)
!8862 = !DILocation(line: 171, column: 60, scope: !8854)
!8863 = !DILocation(line: 171, column: 59, scope: !8854)
!8864 = !DILocation(line: 171, column: 48, scope: !8854)
!8865 = !DILocation(line: 171, column: 21, scope: !8854)
!8866 = !DILocation(line: 171, column: 64, scope: !8854)
!8867 = !DILocation(line: 172, column: 13, scope: !8820)
!8868 = !DILocation(line: 173, column: 62, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8817, file: !6520, line: 172, column: 20)
!8870 = !DILocation(line: 173, column: 31, scope: !8869)
!8871 = !DILocation(line: 173, column: 40, scope: !8869)
!8872 = !DILocation(line: 173, column: 41, scope: !8869)
!8873 = !DILocation(line: 173, column: 38, scope: !8869)
!8874 = !DILocation(line: 173, column: 46, scope: !8869)
!8875 = !DILocation(line: 173, column: 56, scope: !8869)
!8876 = !DILocation(line: 173, column: 55, scope: !8869)
!8877 = !DILocation(line: 173, column: 44, scope: !8869)
!8878 = !DILocation(line: 173, column: 17, scope: !8869)
!8879 = !DILocation(line: 173, column: 60, scope: !8869)
!8880 = !DILocation(line: 174, column: 62, scope: !8869)
!8881 = !DILocation(line: 174, column: 31, scope: !8869)
!8882 = !DILocation(line: 174, column: 40, scope: !8869)
!8883 = !DILocation(line: 174, column: 41, scope: !8869)
!8884 = !DILocation(line: 174, column: 38, scope: !8869)
!8885 = !DILocation(line: 174, column: 46, scope: !8869)
!8886 = !DILocation(line: 174, column: 56, scope: !8869)
!8887 = !DILocation(line: 174, column: 55, scope: !8869)
!8888 = !DILocation(line: 174, column: 44, scope: !8869)
!8889 = !DILocation(line: 174, column: 17, scope: !8869)
!8890 = !DILocation(line: 174, column: 60, scope: !8869)
!8891 = !DILocation(line: 175, column: 62, scope: !8869)
!8892 = !DILocation(line: 175, column: 31, scope: !8869)
!8893 = !DILocation(line: 175, column: 40, scope: !8869)
!8894 = !DILocation(line: 175, column: 41, scope: !8869)
!8895 = !DILocation(line: 175, column: 38, scope: !8869)
!8896 = !DILocation(line: 175, column: 46, scope: !8869)
!8897 = !DILocation(line: 175, column: 56, scope: !8869)
!8898 = !DILocation(line: 175, column: 55, scope: !8869)
!8899 = !DILocation(line: 175, column: 44, scope: !8869)
!8900 = !DILocation(line: 175, column: 17, scope: !8869)
!8901 = !DILocation(line: 175, column: 60, scope: !8869)
!8902 = !DILocation(line: 177, column: 9, scope: !8751)
!8903 = !DILocation(line: 150, column: 29, scope: !8904)
!8904 = !DILexicalBlockFile(scope: !8746, file: !6520, discriminator: 2)
!8905 = !DILocation(line: 150, column: 9, scope: !8904)
!8906 = distinct !{!8906, !8907}
!8907 = !DILocation(line: 150, column: 9, scope: !8111)
!8908 = !DILocation(line: 178, column: 5, scope: !8111)
!8909 = !DILocation(line: 133, column: 25, scope: !8910)
!8910 = !DILexicalBlockFile(scope: !8112, file: !6520, discriminator: 2)
!8911 = !DILocation(line: 133, column: 5, scope: !8910)
!8912 = distinct !{!8912, !8913}
!8913 = !DILocation(line: 133, column: 5, scope: !8103)
!8914 = !DILocation(line: 179, column: 5, scope: !8103)
!8915 = !DILocation(line: 180, column: 1, scope: !8103)
!8916 = distinct !DISubprogram(name: "is_input_end", scope: !953, file: !953, line: 96, type: !2940, isLocal: true, isDefinition: true, scopeLine: 97, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!8917 = !DILocalVariable(name: "s", arg: 1, scope: !8916, file: !953, line: 96, type: !1709)
!8918 = !DILocation(line: 96, column: 38, scope: !8916)
!8919 = !DILocation(line: 98, column: 9, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8916, file: !953, line: 98, column: 9)
!8921 = !DILocation(line: 98, column: 12, scope: !8920)
!8922 = !DILocation(line: 98, column: 15, scope: !8920)
!8923 = !DILocation(line: 98, column: 9, scope: !8916)
!8924 = !DILocalVariable(name: "c", scope: !8925, file: !953, line: 99, type: !2188)
!8925 = distinct !DILexicalBlock(scope: !8920, file: !953, line: 98, column: 21)
!8926 = !DILocation(line: 99, column: 27, scope: !8925)
!8927 = !DILocation(line: 99, column: 32, scope: !8925)
!8928 = !DILocation(line: 99, column: 35, scope: !8925)
!8929 = !DILocation(line: 100, column: 13, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8925, file: !953, line: 100, column: 13)
!8931 = !DILocation(line: 100, column: 16, scope: !8930)
!8932 = !DILocation(line: 100, column: 25, scope: !8930)
!8933 = !DILocation(line: 100, column: 13, scope: !8925)
!8934 = !DILocation(line: 101, column: 13, scope: !8930)
!8935 = !DILocation(line: 102, column: 5, scope: !8925)
!8936 = !DILocation(line: 103, column: 28, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !953, line: 103, column: 13)
!8938 = distinct !DILexicalBlock(scope: !8920, file: !953, line: 102, column: 12)
!8939 = !DILocation(line: 103, column: 31, scope: !8937)
!8940 = !DILocation(line: 103, column: 13, scope: !8937)
!8941 = !DILocation(line: 103, column: 35, scope: !8937)
!8942 = !DILocation(line: 103, column: 13, scope: !8938)
!8943 = !DILocation(line: 104, column: 13, scope: !8937)
!8944 = !DILocation(line: 106, column: 5, scope: !8916)
!8945 = !DILocation(line: 107, column: 1, scope: !8916)
!8946 = distinct !DISubprogram(name: "get_context", scope: !8947, file: !8947, line: 32, type: !8948, isLocal: true, isDefinition: true, scopeLine: 34, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!8947 = !DIFile(filename: "libavcodec/ffv1_template.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!8948 = !DISubroutineType(types: !8949)
!8949 = !{!923, !5289, !1833, !1833, !1833}
!8950 = !DILocalVariable(name: "p", arg: 1, scope: !8946, file: !8947, line: 32, type: !5289)
!8951 = !DILocation(line: 32, column: 45, scope: !8946)
!8952 = !DILocalVariable(name: "src", arg: 2, scope: !8946, file: !8947, line: 32, type: !1833)
!8953 = !DILocation(line: 32, column: 57, scope: !8946)
!8954 = !DILocalVariable(name: "last", arg: 3, scope: !8946, file: !8947, line: 33, type: !1833)
!8955 = !DILocation(line: 33, column: 48, scope: !8946)
!8956 = !DILocalVariable(name: "last2", arg: 4, scope: !8946, file: !8947, line: 33, type: !1833)
!8957 = !DILocation(line: 33, column: 63, scope: !8946)
!8958 = !DILocalVariable(name: "LT", scope: !8946, file: !8947, line: 35, type: !979)
!8959 = !DILocation(line: 35, column: 15, scope: !8946)
!8960 = !DILocation(line: 35, column: 20, scope: !8946)
!8961 = !DILocalVariable(name: "T", scope: !8946, file: !8947, line: 36, type: !979)
!8962 = !DILocation(line: 36, column: 15, scope: !8946)
!8963 = !DILocation(line: 36, column: 19, scope: !8946)
!8964 = !DILocalVariable(name: "RT", scope: !8946, file: !8947, line: 37, type: !979)
!8965 = !DILocation(line: 37, column: 15, scope: !8946)
!8966 = !DILocation(line: 37, column: 20, scope: !8946)
!8967 = !DILocalVariable(name: "L", scope: !8946, file: !8947, line: 38, type: !979)
!8968 = !DILocation(line: 38, column: 15, scope: !8946)
!8969 = !DILocation(line: 38, column: 19, scope: !8946)
!8970 = !DILocation(line: 40, column: 9, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8946, file: !8947, line: 40, column: 9)
!8972 = !DILocation(line: 40, column: 12, scope: !8971)
!8973 = !DILocation(line: 40, column: 9, scope: !8946)
!8974 = !DILocalVariable(name: "TT", scope: !8975, file: !8947, line: 41, type: !979)
!8975 = distinct !DILexicalBlock(scope: !8971, file: !8947, line: 40, column: 33)
!8976 = !DILocation(line: 41, column: 19, scope: !8975)
!8977 = !DILocation(line: 41, column: 24, scope: !8975)
!8978 = !DILocalVariable(name: "LL", scope: !8975, file: !8947, line: 42, type: !979)
!8979 = !DILocation(line: 42, column: 19, scope: !8975)
!8980 = !DILocation(line: 42, column: 24, scope: !8975)
!8981 = !DILocation(line: 43, column: 35, scope: !8975)
!8982 = !DILocation(line: 43, column: 39, scope: !8975)
!8983 = !DILocation(line: 43, column: 37, scope: !8975)
!8984 = !DILocation(line: 43, column: 43, scope: !8975)
!8985 = !DILocation(line: 43, column: 16, scope: !8975)
!8986 = !DILocation(line: 43, column: 19, scope: !8975)
!8987 = !DILocation(line: 44, column: 35, scope: !8975)
!8988 = !DILocation(line: 44, column: 40, scope: !8975)
!8989 = !DILocation(line: 44, column: 38, scope: !8975)
!8990 = !DILocation(line: 44, column: 43, scope: !8975)
!8991 = !DILocation(line: 44, column: 16, scope: !8975)
!8992 = !DILocation(line: 44, column: 19, scope: !8975)
!8993 = !DILocation(line: 43, column: 51, scope: !8975)
!8994 = !DILocation(line: 45, column: 35, scope: !8975)
!8995 = !DILocation(line: 45, column: 39, scope: !8975)
!8996 = !DILocation(line: 45, column: 37, scope: !8975)
!8997 = !DILocation(line: 45, column: 43, scope: !8975)
!8998 = !DILocation(line: 45, column: 16, scope: !8975)
!8999 = !DILocation(line: 45, column: 19, scope: !8975)
!9000 = !DILocation(line: 44, column: 51, scope: !8975)
!9001 = !DILocation(line: 46, column: 35, scope: !8975)
!9002 = !DILocation(line: 46, column: 40, scope: !8975)
!9003 = !DILocation(line: 46, column: 38, scope: !8975)
!9004 = !DILocation(line: 46, column: 43, scope: !8975)
!9005 = !DILocation(line: 46, column: 16, scope: !8975)
!9006 = !DILocation(line: 46, column: 19, scope: !8975)
!9007 = !DILocation(line: 45, column: 51, scope: !8975)
!9008 = !DILocation(line: 47, column: 35, scope: !8975)
!9009 = !DILocation(line: 47, column: 40, scope: !8975)
!9010 = !DILocation(line: 47, column: 38, scope: !8975)
!9011 = !DILocation(line: 47, column: 43, scope: !8975)
!9012 = !DILocation(line: 47, column: 16, scope: !8975)
!9013 = !DILocation(line: 47, column: 19, scope: !8975)
!9014 = !DILocation(line: 46, column: 51, scope: !8975)
!9015 = !DILocation(line: 43, column: 9, scope: !8975)
!9016 = !DILocation(line: 49, column: 35, scope: !8971)
!9017 = !DILocation(line: 49, column: 39, scope: !8971)
!9018 = !DILocation(line: 49, column: 37, scope: !8971)
!9019 = !DILocation(line: 49, column: 43, scope: !8971)
!9020 = !DILocation(line: 49, column: 16, scope: !8971)
!9021 = !DILocation(line: 49, column: 19, scope: !8971)
!9022 = !DILocation(line: 50, column: 35, scope: !8971)
!9023 = !DILocation(line: 50, column: 40, scope: !8971)
!9024 = !DILocation(line: 50, column: 38, scope: !8971)
!9025 = !DILocation(line: 50, column: 43, scope: !8971)
!9026 = !DILocation(line: 50, column: 16, scope: !8971)
!9027 = !DILocation(line: 50, column: 19, scope: !8971)
!9028 = !DILocation(line: 49, column: 51, scope: !8971)
!9029 = !DILocation(line: 51, column: 35, scope: !8971)
!9030 = !DILocation(line: 51, column: 39, scope: !8971)
!9031 = !DILocation(line: 51, column: 37, scope: !8971)
!9032 = !DILocation(line: 51, column: 43, scope: !8971)
!9033 = !DILocation(line: 51, column: 16, scope: !8971)
!9034 = !DILocation(line: 51, column: 19, scope: !8971)
!9035 = !DILocation(line: 50, column: 51, scope: !8971)
!9036 = !DILocation(line: 49, column: 9, scope: !8971)
!9037 = !DILocation(line: 52, column: 1, scope: !8946)
!9038 = distinct !DISubprogram(name: "get_bits1", scope: !1737, file: !1737, line: 487, type: !9039, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9039 = !DISubroutineType(types: !9040)
!9040 = !{!924, !6454}
!9041 = !DILocalVariable(name: "s", arg: 1, scope: !9038, file: !1737, line: 487, type: !6454)
!9042 = !DILocation(line: 487, column: 53, scope: !9038)
!9043 = !DILocalVariable(name: "index", scope: !9038, file: !1737, line: 499, type: !924)
!9044 = !DILocation(line: 499, column: 18, scope: !9038)
!9045 = !DILocation(line: 499, column: 26, scope: !9038)
!9046 = !DILocation(line: 499, column: 29, scope: !9038)
!9047 = !DILocalVariable(name: "result", scope: !9038, file: !1737, line: 500, type: !935)
!9048 = !DILocation(line: 500, column: 13, scope: !9038)
!9049 = !DILocation(line: 500, column: 32, scope: !9038)
!9050 = !DILocation(line: 500, column: 38, scope: !9038)
!9051 = !DILocation(line: 500, column: 22, scope: !9038)
!9052 = !DILocation(line: 500, column: 25, scope: !9038)
!9053 = !DILocation(line: 505, column: 16, scope: !9038)
!9054 = !DILocation(line: 505, column: 22, scope: !9038)
!9055 = !DILocation(line: 505, column: 12, scope: !9038)
!9056 = !DILocation(line: 506, column: 12, scope: !9038)
!9057 = !DILocation(line: 509, column: 9, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9038, file: !1737, line: 509, column: 9)
!9059 = !DILocation(line: 509, column: 12, scope: !9058)
!9060 = !DILocation(line: 509, column: 20, scope: !9058)
!9061 = !DILocation(line: 509, column: 23, scope: !9058)
!9062 = !DILocation(line: 509, column: 18, scope: !9058)
!9063 = !DILocation(line: 509, column: 9, scope: !9038)
!9064 = !DILocation(line: 511, column: 14, scope: !9058)
!9065 = !DILocation(line: 511, column: 9, scope: !9058)
!9066 = !DILocation(line: 512, column: 16, scope: !9038)
!9067 = !DILocation(line: 512, column: 5, scope: !9038)
!9068 = !DILocation(line: 512, column: 8, scope: !9038)
!9069 = !DILocation(line: 512, column: 14, scope: !9038)
!9070 = !DILocation(line: 514, column: 12, scope: !9038)
!9071 = !DILocation(line: 514, column: 5, scope: !9038)
!9072 = distinct !DISubprogram(name: "get_bits", scope: !1737, file: !1737, line: 381, type: !9073, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9073 = !DISubroutineType(types: !9074)
!9074 = !{!924, !6454, !923}
!9075 = !DILocation(line: 66, column: 98, scope: !2154, inlinedAt: !9076)
!9076 = distinct !DILocation(line: 401, column: 16, scope: !9072)
!9077 = !DILocalVariable(name: "s", arg: 1, scope: !9072, file: !1737, line: 381, type: !6454)
!9078 = !DILocation(line: 381, column: 52, scope: !9072)
!9079 = !DILocalVariable(name: "n", arg: 2, scope: !9072, file: !1737, line: 381, type: !923)
!9080 = !DILocation(line: 381, column: 59, scope: !9072)
!9081 = !DILocalVariable(name: "tmp", scope: !9072, file: !1737, line: 383, type: !923)
!9082 = !DILocation(line: 383, column: 18, scope: !9072)
!9083 = !DILocalVariable(name: "re_index", scope: !9072, file: !1737, line: 399, type: !924)
!9084 = !DILocation(line: 399, column: 18, scope: !9072)
!9085 = !DILocation(line: 399, column: 30, scope: !9072)
!9086 = !DILocation(line: 399, column: 34, scope: !9072)
!9087 = !DILocalVariable(name: "re_cache", scope: !9072, file: !1737, line: 399, type: !924)
!9088 = !DILocation(line: 399, column: 78, scope: !9072)
!9089 = !DILocalVariable(name: "re_size_plus8", scope: !9072, file: !1737, line: 399, type: !924)
!9090 = !DILocation(line: 399, column: 101, scope: !9072)
!9091 = !DILocation(line: 399, column: 118, scope: !9072)
!9092 = !DILocation(line: 399, column: 122, scope: !9072)
!9093 = !DILocation(line: 401, column: 60, scope: !9072)
!9094 = !DILocation(line: 401, column: 64, scope: !9072)
!9095 = !DILocation(line: 401, column: 74, scope: !9072)
!9096 = !DILocation(line: 401, column: 83, scope: !9072)
!9097 = !DILocation(line: 401, column: 71, scope: !9072)
!9098 = !DILocation(line: 401, column: 92, scope: !9072)
!9099 = !DILocation(line: 401, column: 16, scope: !9072)
!9100 = !DILocation(line: 68, column: 16, scope: !2154, inlinedAt: !9076)
!9101 = !DILocation(line: 68, column: 19, scope: !2154, inlinedAt: !9076)
!9102 = !DILocation(line: 68, column: 24, scope: !2154, inlinedAt: !9076)
!9103 = !DILocation(line: 68, column: 38, scope: !2154, inlinedAt: !9076)
!9104 = !DILocation(line: 68, column: 41, scope: !2154, inlinedAt: !9076)
!9105 = !DILocation(line: 68, column: 46, scope: !2154, inlinedAt: !9076)
!9106 = !DILocation(line: 68, column: 34, scope: !2154, inlinedAt: !9076)
!9107 = !DILocation(line: 68, column: 57, scope: !2154, inlinedAt: !9076)
!9108 = !DILocation(line: 68, column: 69, scope: !2154, inlinedAt: !9076)
!9109 = !DILocation(line: 68, column: 72, scope: !2154, inlinedAt: !9076)
!9110 = !DILocation(line: 68, column: 79, scope: !2154, inlinedAt: !9076)
!9111 = !DILocation(line: 68, column: 84, scope: !2154, inlinedAt: !9076)
!9112 = !DILocation(line: 68, column: 99, scope: !2154, inlinedAt: !9076)
!9113 = !DILocation(line: 68, column: 102, scope: !2154, inlinedAt: !9076)
!9114 = !DILocation(line: 68, column: 109, scope: !2154, inlinedAt: !9076)
!9115 = !DILocation(line: 68, column: 114, scope: !2154, inlinedAt: !9076)
!9116 = !DILocation(line: 68, column: 94, scope: !2154, inlinedAt: !9076)
!9117 = !DILocation(line: 68, column: 63, scope: !2154, inlinedAt: !9076)
!9118 = !DILocation(line: 401, column: 100, scope: !9072)
!9119 = !DILocation(line: 401, column: 109, scope: !9072)
!9120 = !DILocation(line: 401, column: 96, scope: !9072)
!9121 = !DILocation(line: 401, column: 14, scope: !9072)
!9122 = !DILocation(line: 402, column: 21, scope: !9072)
!9123 = !DILocation(line: 402, column: 31, scope: !9072)
!9124 = !DILocation(line: 402, column: 11, scope: !9072)
!9125 = !DILocation(line: 402, column: 9, scope: !9072)
!9126 = !DILocation(line: 403, column: 18, scope: !9072)
!9127 = !DILocation(line: 403, column: 36, scope: !9072)
!9128 = !DILocation(line: 403, column: 48, scope: !9072)
!9129 = !DILocation(line: 403, column: 45, scope: !9072)
!9130 = !DILocation(line: 403, column: 33, scope: !9072)
!9131 = !DILocation(line: 403, column: 17, scope: !9072)
!9132 = !DILocation(line: 403, column: 55, scope: !9133)
!9133 = !DILexicalBlockFile(scope: !9072, file: !1737, discriminator: 1)
!9134 = !DILocation(line: 403, column: 67, scope: !9133)
!9135 = !DILocation(line: 403, column: 64, scope: !9133)
!9136 = !DILocation(line: 403, column: 17, scope: !9133)
!9137 = !DILocation(line: 403, column: 74, scope: !9138)
!9138 = !DILexicalBlockFile(scope: !9072, file: !1737, discriminator: 2)
!9139 = !DILocation(line: 403, column: 17, scope: !9138)
!9140 = !DILocation(line: 403, column: 17, scope: !9141)
!9141 = !DILexicalBlockFile(scope: !9072, file: !1737, discriminator: 3)
!9142 = !DILocation(line: 403, column: 14, scope: !9141)
!9143 = !DILocation(line: 404, column: 18, scope: !9072)
!9144 = !DILocation(line: 404, column: 6, scope: !9072)
!9145 = !DILocation(line: 404, column: 10, scope: !9072)
!9146 = !DILocation(line: 404, column: 16, scope: !9072)
!9147 = !DILocation(line: 406, column: 12, scope: !9072)
!9148 = !DILocation(line: 406, column: 5, scope: !9072)
!9149 = distinct !DISubprogram(name: "get_vlc_symbol", scope: !953, file: !953, line: 71, type: !9150, isLocal: true, isDefinition: true, scopeLine: 73, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9150 = !DISubroutineType(types: !9151)
!9151 = !{!923, !6454, !9152, !923}
!9152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1812)
!9153 = !DILocalVariable(name: "diff", arg: 1, scope: !9154, file: !1711, line: 151, type: !923)
!9154 = distinct !DISubprogram(name: "fold", scope: !1711, file: !1711, line: 151, type: !9155, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9155 = !DISubroutineType(types: !9156)
!9156 = !{!923, !923, !923}
!9157 = !DILocation(line: 151, column: 59, scope: !9154, inlinedAt: !9158)
!9158 = distinct !DILocation(line: 89, column: 11, scope: !9149)
!9159 = !DILocalVariable(name: "bits", arg: 2, scope: !9154, file: !1711, line: 151, type: !923)
!9160 = !DILocation(line: 151, column: 69, scope: !9154, inlinedAt: !9158)
!9161 = !DILocalVariable(name: "gb", arg: 1, scope: !9149, file: !953, line: 71, type: !6454)
!9162 = !DILocation(line: 71, column: 49, scope: !9149)
!9163 = !DILocalVariable(name: "state", arg: 2, scope: !9149, file: !953, line: 71, type: !9152)
!9164 = !DILocation(line: 71, column: 69, scope: !9149)
!9165 = !DILocalVariable(name: "bits", arg: 3, scope: !9149, file: !953, line: 72, type: !923)
!9166 = !DILocation(line: 72, column: 38, scope: !9149)
!9167 = !DILocalVariable(name: "k", scope: !9149, file: !953, line: 74, type: !923)
!9168 = !DILocation(line: 74, column: 9, scope: !9149)
!9169 = !DILocalVariable(name: "i", scope: !9149, file: !953, line: 74, type: !923)
!9170 = !DILocation(line: 74, column: 12, scope: !9149)
!9171 = !DILocalVariable(name: "v", scope: !9149, file: !953, line: 74, type: !923)
!9172 = !DILocation(line: 74, column: 15, scope: !9149)
!9173 = !DILocalVariable(name: "ret", scope: !9149, file: !953, line: 74, type: !923)
!9174 = !DILocation(line: 74, column: 18, scope: !9149)
!9175 = !DILocation(line: 76, column: 9, scope: !9149)
!9176 = !DILocation(line: 76, column: 16, scope: !9149)
!9177 = !DILocation(line: 76, column: 7, scope: !9149)
!9178 = !DILocation(line: 77, column: 7, scope: !9149)
!9179 = !DILocation(line: 78, column: 5, scope: !9149)
!9180 = !DILocation(line: 78, column: 12, scope: !9181)
!9181 = !DILexicalBlockFile(scope: !9149, file: !953, discriminator: 1)
!9182 = !DILocation(line: 78, column: 16, scope: !9181)
!9183 = !DILocation(line: 78, column: 23, scope: !9181)
!9184 = !DILocation(line: 78, column: 14, scope: !9181)
!9185 = !DILocation(line: 78, column: 5, scope: !9181)
!9186 = !DILocation(line: 79, column: 10, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9149, file: !953, line: 78, column: 34)
!9188 = !DILocation(line: 80, column: 14, scope: !9187)
!9189 = !DILocation(line: 80, column: 11, scope: !9187)
!9190 = !DILocation(line: 78, column: 5, scope: !9191)
!9191 = !DILexicalBlockFile(scope: !9149, file: !953, discriminator: 2)
!9192 = distinct !{!9192, !9179}
!9193 = !DILocation(line: 83, column: 23, scope: !9149)
!9194 = !DILocation(line: 83, column: 27, scope: !9149)
!9195 = !DILocation(line: 83, column: 34, scope: !9149)
!9196 = !DILocation(line: 83, column: 9, scope: !9149)
!9197 = !DILocation(line: 83, column: 7, scope: !9149)
!9198 = !DILocation(line: 84, column: 5, scope: !9149)
!9199 = distinct !{!9199, !9198}
!9200 = !DILocation(line: 84, column: 124, scope: !9201)
!9201 = !DILexicalBlockFile(scope: !9202, file: !953, discriminator: 1)
!9202 = distinct !DILexicalBlock(scope: !9149, file: !953, line: 84, column: 8)
!9203 = !DILocation(line: 87, column: 16, scope: !9149)
!9204 = !DILocation(line: 87, column: 23, scope: !9149)
!9205 = !DILocation(line: 87, column: 14, scope: !9149)
!9206 = !DILocation(line: 87, column: 31, scope: !9149)
!9207 = !DILocation(line: 87, column: 38, scope: !9149)
!9208 = !DILocation(line: 87, column: 29, scope: !9149)
!9209 = !DILocation(line: 87, column: 45, scope: !9149)
!9210 = !DILocation(line: 87, column: 7, scope: !9149)
!9211 = !DILocation(line: 89, column: 16, scope: !9149)
!9212 = !DILocation(line: 89, column: 20, scope: !9149)
!9213 = !DILocation(line: 89, column: 27, scope: !9149)
!9214 = !DILocation(line: 89, column: 18, scope: !9149)
!9215 = !DILocation(line: 89, column: 33, scope: !9149)
!9216 = !DILocation(line: 89, column: 11, scope: !9149)
!9217 = !DILocation(line: 153, column: 9, scope: !9218, inlinedAt: !9158)
!9218 = distinct !DILexicalBlock(scope: !9154, file: !1711, line: 153, column: 9)
!9219 = !DILocation(line: 153, column: 14, scope: !9218, inlinedAt: !9158)
!9220 = !DILocation(line: 153, column: 9, scope: !9154, inlinedAt: !9158)
!9221 = !DILocation(line: 154, column: 24, scope: !9218, inlinedAt: !9158)
!9222 = !DILocation(line: 154, column: 16, scope: !9218, inlinedAt: !9158)
!9223 = !DILocation(line: 154, column: 14, scope: !9218, inlinedAt: !9158)
!9224 = !DILocation(line: 154, column: 9, scope: !9218, inlinedAt: !9158)
!9225 = !DILocation(line: 156, column: 28, scope: !9226, inlinedAt: !9158)
!9226 = distinct !DILexicalBlock(scope: !9218, file: !1711, line: 155, column: 10)
!9227 = !DILocation(line: 156, column: 34, scope: !9226, inlinedAt: !9158)
!9228 = !DILocation(line: 156, column: 16, scope: !9226, inlinedAt: !9158)
!9229 = !DILocation(line: 156, column: 14, scope: !9226, inlinedAt: !9158)
!9230 = !DILocation(line: 159, column: 12, scope: !9154, inlinedAt: !9158)
!9231 = !DILocation(line: 89, column: 9, scope: !9149)
!9232 = !DILocation(line: 91, column: 22, scope: !9149)
!9233 = !DILocation(line: 91, column: 29, scope: !9149)
!9234 = !DILocation(line: 91, column: 5, scope: !9149)
!9235 = !DILocation(line: 93, column: 12, scope: !9149)
!9236 = !DILocation(line: 93, column: 5, scope: !9149)
!9237 = distinct !DISubprogram(name: "predict", scope: !8947, file: !8947, line: 23, type: !9238, isLocal: true, isDefinition: true, scopeLine: 24, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9238 = !DISubroutineType(types: !9239)
!9239 = !{!923, !1833, !1833}
!9240 = !DILocalVariable(name: "src", arg: 1, scope: !9237, file: !8947, line: 23, type: !1833)
!9241 = !DILocation(line: 23, column: 36, scope: !9237)
!9242 = !DILocalVariable(name: "last", arg: 2, scope: !9237, file: !8947, line: 23, type: !1833)
!9243 = !DILocation(line: 23, column: 50, scope: !9237)
!9244 = !DILocalVariable(name: "LT", scope: !9237, file: !8947, line: 25, type: !979)
!9245 = !DILocation(line: 25, column: 15, scope: !9237)
!9246 = !DILocation(line: 25, column: 20, scope: !9237)
!9247 = !DILocalVariable(name: "T", scope: !9237, file: !8947, line: 26, type: !979)
!9248 = !DILocation(line: 26, column: 15, scope: !9237)
!9249 = !DILocation(line: 26, column: 19, scope: !9237)
!9250 = !DILocalVariable(name: "L", scope: !9237, file: !8947, line: 27, type: !979)
!9251 = !DILocation(line: 27, column: 15, scope: !9237)
!9252 = !DILocation(line: 27, column: 19, scope: !9237)
!9253 = !DILocation(line: 29, column: 21, scope: !9237)
!9254 = !DILocation(line: 29, column: 24, scope: !9237)
!9255 = !DILocation(line: 29, column: 28, scope: !9237)
!9256 = !DILocation(line: 29, column: 26, scope: !9237)
!9257 = !DILocation(line: 29, column: 32, scope: !9237)
!9258 = !DILocation(line: 29, column: 30, scope: !9237)
!9259 = !DILocation(line: 29, column: 36, scope: !9237)
!9260 = !DILocation(line: 29, column: 12, scope: !9237)
!9261 = !DILocation(line: 29, column: 5, scope: !9237)
!9262 = distinct !DISubprogram(name: "get_bits_left", scope: !1737, file: !1737, line: 814, type: !9263, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9263 = !DISubroutineType(types: !9264)
!9264 = !{!923, !6454}
!9265 = !DILocalVariable(name: "gb", arg: 1, scope: !9262, file: !1737, line: 814, type: !6454)
!9266 = !DILocation(line: 814, column: 48, scope: !9262)
!9267 = !DILocation(line: 816, column: 12, scope: !9262)
!9268 = !DILocation(line: 816, column: 16, scope: !9262)
!9269 = !DILocation(line: 816, column: 46, scope: !9262)
!9270 = !DILocation(line: 816, column: 31, scope: !9262)
!9271 = !DILocation(line: 816, column: 29, scope: !9262)
!9272 = !DILocation(line: 816, column: 5, scope: !9262)
!9273 = distinct !DISubprogram(name: "get_bits_count", scope: !1737, file: !1737, line: 219, type: !9274, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9274 = !DISubroutineType(types: !9275)
!9275 = !{!923, !9276}
!9276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9277, size: 64, align: 64)
!9277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1736)
!9278 = !DILocalVariable(name: "s", arg: 1, scope: !9273, file: !1737, line: 219, type: !9276)
!9279 = !DILocation(line: 219, column: 55, scope: !9273)
!9280 = !DILocation(line: 224, column: 12, scope: !9273)
!9281 = !DILocation(line: 224, column: 15, scope: !9273)
!9282 = !DILocation(line: 224, column: 5, scope: !9273)
!9283 = distinct !DISubprogram(name: "NEG_USR32", scope: !9284, file: !9284, line: 124, type: !9285, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9284 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!9285 = !DISubroutineType(types: !9286)
!9286 = !{!931, !931, !948}
!9287 = !DILocalVariable(name: "a", arg: 1, scope: !9283, file: !9284, line: 124, type: !931)
!9288 = !DILocation(line: 124, column: 43, scope: !9283)
!9289 = !DILocalVariable(name: "s", arg: 2, scope: !9283, file: !9284, line: 124, type: !948)
!9290 = !DILocation(line: 124, column: 53, scope: !9283)
!9291 = !DILocation(line: 125, column: 5, scope: !9283)
!9292 = !DILocation(line: 127, column: 29, scope: !9283)
!9293 = !DILocation(line: 127, column: 28, scope: !9283)
!9294 = !DILocation(line: 127, column: 18, scope: !9283)
!9295 = !{i32 197210, i32 197224}
!9296 = !DILocation(line: 129, column: 12, scope: !9283)
!9297 = !DILocation(line: 129, column: 5, scope: !9283)
!9298 = distinct !DISubprogram(name: "get_sr_golomb", scope: !9299, file: !9299, line: 527, type: !9300, isLocal: true, isDefinition: true, scopeLine: 529, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9299 = !DIFile(filename: "libavcodec/golomb.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!9300 = !DISubroutineType(types: !9301)
!9301 = !{!923, !6454, !923, !923, !923}
!9302 = !DILocalVariable(name: "gb", arg: 1, scope: !9298, file: !9299, line: 527, type: !6454)
!9303 = !DILocation(line: 527, column: 48, scope: !9298)
!9304 = !DILocalVariable(name: "k", arg: 2, scope: !9298, file: !9299, line: 527, type: !923)
!9305 = !DILocation(line: 527, column: 56, scope: !9298)
!9306 = !DILocalVariable(name: "limit", arg: 3, scope: !9298, file: !9299, line: 527, type: !923)
!9307 = !DILocation(line: 527, column: 63, scope: !9298)
!9308 = !DILocalVariable(name: "esc_len", arg: 4, scope: !9298, file: !9299, line: 528, type: !923)
!9309 = !DILocation(line: 528, column: 37, scope: !9298)
!9310 = !DILocalVariable(name: "v", scope: !9298, file: !9299, line: 530, type: !924)
!9311 = !DILocation(line: 530, column: 14, scope: !9298)
!9312 = !DILocation(line: 530, column: 32, scope: !9298)
!9313 = !DILocation(line: 530, column: 36, scope: !9298)
!9314 = !DILocation(line: 530, column: 39, scope: !9298)
!9315 = !DILocation(line: 530, column: 46, scope: !9298)
!9316 = !DILocation(line: 530, column: 18, scope: !9298)
!9317 = !DILocation(line: 531, column: 13, scope: !9298)
!9318 = !DILocation(line: 531, column: 15, scope: !9298)
!9319 = !DILocation(line: 531, column: 25, scope: !9298)
!9320 = !DILocation(line: 531, column: 27, scope: !9298)
!9321 = !DILocation(line: 531, column: 23, scope: !9298)
!9322 = !DILocation(line: 531, column: 21, scope: !9298)
!9323 = !DILocation(line: 531, column: 5, scope: !9298)
!9324 = distinct !DISubprogram(name: "update_vlc_state", scope: !1711, file: !1711, line: 162, type: !9325, isLocal: true, isDefinition: true, scopeLine: 163, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9325 = !DISubroutineType(types: !9326)
!9326 = !{null, !9152, !979}
!9327 = !DILocalVariable(name: "state", arg: 1, scope: !9324, file: !1711, line: 162, type: !9152)
!9328 = !DILocation(line: 162, column: 53, scope: !9324)
!9329 = !DILocalVariable(name: "v", arg: 2, scope: !9324, file: !1711, line: 162, type: !979)
!9330 = !DILocation(line: 162, column: 70, scope: !9324)
!9331 = !DILocalVariable(name: "drift", scope: !9324, file: !1711, line: 164, type: !923)
!9332 = !DILocation(line: 164, column: 9, scope: !9324)
!9333 = !DILocation(line: 164, column: 17, scope: !9324)
!9334 = !DILocation(line: 164, column: 24, scope: !9324)
!9335 = !DILocalVariable(name: "count", scope: !9324, file: !1711, line: 165, type: !923)
!9336 = !DILocation(line: 165, column: 9, scope: !9324)
!9337 = !DILocation(line: 165, column: 17, scope: !9324)
!9338 = !DILocation(line: 165, column: 24, scope: !9324)
!9339 = !DILocation(line: 166, column: 27, scope: !9324)
!9340 = !DILocation(line: 166, column: 30, scope: !9324)
!9341 = !DILocation(line: 166, column: 26, scope: !9324)
!9342 = !DILocation(line: 166, column: 38, scope: !9343)
!9343 = !DILexicalBlockFile(scope: !9324, file: !1711, discriminator: 1)
!9344 = !DILocation(line: 166, column: 26, scope: !9343)
!9345 = !DILocation(line: 166, column: 46, scope: !9346)
!9346 = !DILexicalBlockFile(scope: !9324, file: !1711, discriminator: 2)
!9347 = !DILocation(line: 166, column: 44, scope: !9346)
!9348 = !DILocation(line: 166, column: 26, scope: !9346)
!9349 = !DILocation(line: 166, column: 26, scope: !9350)
!9350 = !DILexicalBlockFile(scope: !9324, file: !1711, discriminator: 3)
!9351 = !DILocation(line: 166, column: 5, scope: !9350)
!9352 = !DILocation(line: 166, column: 12, scope: !9350)
!9353 = !DILocation(line: 166, column: 22, scope: !9350)
!9354 = !DILocation(line: 167, column: 14, scope: !9324)
!9355 = !DILocation(line: 167, column: 11, scope: !9324)
!9356 = !DILocation(line: 169, column: 9, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9324, file: !1711, line: 169, column: 9)
!9358 = !DILocation(line: 169, column: 15, scope: !9357)
!9359 = !DILocation(line: 169, column: 9, scope: !9324)
!9360 = !DILocation(line: 170, column: 15, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9357, file: !1711, line: 169, column: 23)
!9362 = !DILocation(line: 171, column: 15, scope: !9361)
!9363 = !DILocation(line: 172, column: 9, scope: !9361)
!9364 = !DILocation(line: 172, column: 16, scope: !9361)
!9365 = !DILocation(line: 172, column: 26, scope: !9361)
!9366 = !DILocation(line: 173, column: 5, scope: !9361)
!9367 = !DILocation(line: 174, column: 10, scope: !9324)
!9368 = !DILocation(line: 176, column: 9, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9324, file: !1711, line: 176, column: 9)
!9370 = !DILocation(line: 176, column: 19, scope: !9369)
!9371 = !DILocation(line: 176, column: 18, scope: !9369)
!9372 = !DILocation(line: 176, column: 15, scope: !9369)
!9373 = !DILocation(line: 176, column: 9, scope: !9324)
!9374 = !DILocation(line: 177, column: 25, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9369, file: !1711, line: 176, column: 26)
!9376 = !DILocation(line: 177, column: 32, scope: !9375)
!9377 = !DILocation(line: 177, column: 37, scope: !9375)
!9378 = !DILocation(line: 177, column: 42, scope: !9375)
!9379 = !DILocation(line: 177, column: 24, scope: !9375)
!9380 = !DILocation(line: 177, column: 54, scope: !9381)
!9381 = !DILexicalBlockFile(scope: !9375, file: !1711, discriminator: 1)
!9382 = !DILocation(line: 177, column: 61, scope: !9381)
!9383 = !DILocation(line: 177, column: 66, scope: !9381)
!9384 = !DILocation(line: 177, column: 24, scope: !9381)
!9385 = !DILocation(line: 177, column: 24, scope: !9386)
!9386 = !DILexicalBlockFile(scope: !9375, file: !1711, discriminator: 2)
!9387 = !DILocation(line: 177, column: 24, scope: !9388)
!9388 = !DILexicalBlockFile(scope: !9375, file: !1711, discriminator: 3)
!9389 = !DILocation(line: 177, column: 23, scope: !9388)
!9390 = !DILocation(line: 177, column: 9, scope: !9388)
!9391 = !DILocation(line: 177, column: 16, scope: !9388)
!9392 = !DILocation(line: 177, column: 21, scope: !9388)
!9393 = !DILocation(line: 179, column: 19, scope: !9375)
!9394 = !DILocation(line: 179, column: 27, scope: !9375)
!9395 = !DILocation(line: 179, column: 25, scope: !9375)
!9396 = !DILocation(line: 179, column: 38, scope: !9375)
!9397 = !DILocation(line: 179, column: 37, scope: !9375)
!9398 = !DILocation(line: 179, column: 44, scope: !9375)
!9399 = !DILocation(line: 179, column: 34, scope: !9375)
!9400 = !DILocation(line: 179, column: 18, scope: !9375)
!9401 = !DILocation(line: 179, column: 52, scope: !9381)
!9402 = !DILocation(line: 179, column: 60, scope: !9381)
!9403 = !DILocation(line: 179, column: 58, scope: !9381)
!9404 = !DILocation(line: 179, column: 18, scope: !9381)
!9405 = !DILocation(line: 179, column: 71, scope: !9386)
!9406 = !DILocation(line: 179, column: 70, scope: !9386)
!9407 = !DILocation(line: 179, column: 77, scope: !9386)
!9408 = !DILocation(line: 179, column: 18, scope: !9386)
!9409 = !DILocation(line: 179, column: 18, scope: !9388)
!9410 = !DILocation(line: 179, column: 15, scope: !9388)
!9411 = !DILocation(line: 180, column: 5, scope: !9375)
!9412 = !DILocation(line: 180, column: 16, scope: !9413)
!9413 = !DILexicalBlockFile(scope: !9414, file: !1711, discriminator: 1)
!9414 = distinct !DILexicalBlock(scope: !9369, file: !1711, line: 180, column: 16)
!9415 = !DILocation(line: 180, column: 22, scope: !9413)
!9416 = !DILocation(line: 181, column: 25, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9414, file: !1711, line: 180, column: 27)
!9418 = !DILocation(line: 181, column: 32, scope: !9417)
!9419 = !DILocation(line: 181, column: 37, scope: !9417)
!9420 = !DILocation(line: 181, column: 42, scope: !9417)
!9421 = !DILocation(line: 181, column: 24, scope: !9417)
!9422 = !DILocation(line: 181, column: 24, scope: !9423)
!9423 = !DILexicalBlockFile(scope: !9417, file: !1711, discriminator: 1)
!9424 = !DILocation(line: 181, column: 61, scope: !9425)
!9425 = !DILexicalBlockFile(scope: !9417, file: !1711, discriminator: 2)
!9426 = !DILocation(line: 181, column: 68, scope: !9425)
!9427 = !DILocation(line: 181, column: 73, scope: !9425)
!9428 = !DILocation(line: 181, column: 24, scope: !9425)
!9429 = !DILocation(line: 181, column: 24, scope: !9430)
!9430 = !DILexicalBlockFile(scope: !9417, file: !1711, discriminator: 3)
!9431 = !DILocation(line: 181, column: 23, scope: !9430)
!9432 = !DILocation(line: 181, column: 9, scope: !9430)
!9433 = !DILocation(line: 181, column: 16, scope: !9430)
!9434 = !DILocation(line: 181, column: 21, scope: !9430)
!9435 = !DILocation(line: 183, column: 19, scope: !9417)
!9436 = !DILocation(line: 183, column: 27, scope: !9417)
!9437 = !DILocation(line: 183, column: 25, scope: !9417)
!9438 = !DILocation(line: 183, column: 34, scope: !9417)
!9439 = !DILocation(line: 183, column: 18, scope: !9417)
!9440 = !DILocation(line: 183, column: 18, scope: !9423)
!9441 = !DILocation(line: 183, column: 49, scope: !9425)
!9442 = !DILocation(line: 183, column: 57, scope: !9425)
!9443 = !DILocation(line: 183, column: 55, scope: !9425)
!9444 = !DILocation(line: 183, column: 18, scope: !9425)
!9445 = !DILocation(line: 183, column: 18, scope: !9430)
!9446 = !DILocation(line: 183, column: 15, scope: !9430)
!9447 = !DILocation(line: 184, column: 5, scope: !9417)
!9448 = !DILocation(line: 186, column: 20, scope: !9324)
!9449 = !DILocation(line: 186, column: 5, scope: !9324)
!9450 = !DILocation(line: 186, column: 12, scope: !9324)
!9451 = !DILocation(line: 186, column: 18, scope: !9324)
!9452 = !DILocation(line: 187, column: 20, scope: !9324)
!9453 = !DILocation(line: 187, column: 5, scope: !9324)
!9454 = !DILocation(line: 187, column: 12, scope: !9324)
!9455 = !DILocation(line: 187, column: 18, scope: !9324)
!9456 = !DILocation(line: 188, column: 1, scope: !9324)
!9457 = distinct !DISubprogram(name: "get_ur_golomb", scope: !9299, file: !9299, line: 372, type: !9300, isLocal: true, isDefinition: true, scopeLine: 374, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9458 = !DILocation(line: 66, column: 98, scope: !2154, inlinedAt: !9459)
!9459 = distinct !DILocation(line: 411, column: 20, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9461, file: !9299, line: 409, column: 12)
!9461 = distinct !DILexicalBlock(scope: !9457, file: !9299, line: 402, column: 9)
!9462 = !DILocation(line: 66, column: 98, scope: !2154, inlinedAt: !9463)
!9463 = distinct !DILocation(line: 397, column: 16, scope: !9457)
!9464 = !DILocalVariable(name: "gb", arg: 1, scope: !9457, file: !9299, line: 372, type: !6454)
!9465 = !DILocation(line: 372, column: 48, scope: !9457)
!9466 = !DILocalVariable(name: "k", arg: 2, scope: !9457, file: !9299, line: 372, type: !923)
!9467 = !DILocation(line: 372, column: 56, scope: !9457)
!9468 = !DILocalVariable(name: "limit", arg: 3, scope: !9457, file: !9299, line: 372, type: !923)
!9469 = !DILocation(line: 372, column: 63, scope: !9457)
!9470 = !DILocalVariable(name: "esc_len", arg: 4, scope: !9457, file: !9299, line: 373, type: !923)
!9471 = !DILocation(line: 373, column: 37, scope: !9457)
!9472 = !DILocalVariable(name: "buf", scope: !9457, file: !9299, line: 375, type: !924)
!9473 = !DILocation(line: 375, column: 18, scope: !9457)
!9474 = !DILocalVariable(name: "log", scope: !9457, file: !9299, line: 376, type: !923)
!9475 = !DILocation(line: 376, column: 9, scope: !9457)
!9476 = !DILocalVariable(name: "re_index", scope: !9457, file: !9299, line: 396, type: !924)
!9477 = !DILocation(line: 396, column: 18, scope: !9457)
!9478 = !DILocation(line: 396, column: 30, scope: !9457)
!9479 = !DILocation(line: 396, column: 35, scope: !9457)
!9480 = !DILocalVariable(name: "re_cache", scope: !9457, file: !9299, line: 396, type: !924)
!9481 = !DILocation(line: 396, column: 79, scope: !9457)
!9482 = !DILocalVariable(name: "re_size_plus8", scope: !9457, file: !9299, line: 396, type: !924)
!9483 = !DILocation(line: 396, column: 102, scope: !9457)
!9484 = !DILocation(line: 396, column: 119, scope: !9457)
!9485 = !DILocation(line: 396, column: 124, scope: !9457)
!9486 = !DILocation(line: 397, column: 60, scope: !9457)
!9487 = !DILocation(line: 397, column: 65, scope: !9457)
!9488 = !DILocation(line: 397, column: 75, scope: !9457)
!9489 = !DILocation(line: 397, column: 84, scope: !9457)
!9490 = !DILocation(line: 397, column: 72, scope: !9457)
!9491 = !DILocation(line: 397, column: 93, scope: !9457)
!9492 = !DILocation(line: 397, column: 16, scope: !9457)
!9493 = !DILocation(line: 68, column: 16, scope: !2154, inlinedAt: !9463)
!9494 = !DILocation(line: 68, column: 19, scope: !2154, inlinedAt: !9463)
!9495 = !DILocation(line: 68, column: 24, scope: !2154, inlinedAt: !9463)
!9496 = !DILocation(line: 68, column: 38, scope: !2154, inlinedAt: !9463)
!9497 = !DILocation(line: 68, column: 41, scope: !2154, inlinedAt: !9463)
!9498 = !DILocation(line: 68, column: 46, scope: !2154, inlinedAt: !9463)
!9499 = !DILocation(line: 68, column: 34, scope: !2154, inlinedAt: !9463)
!9500 = !DILocation(line: 68, column: 57, scope: !2154, inlinedAt: !9463)
!9501 = !DILocation(line: 68, column: 69, scope: !2154, inlinedAt: !9463)
!9502 = !DILocation(line: 68, column: 72, scope: !2154, inlinedAt: !9463)
!9503 = !DILocation(line: 68, column: 79, scope: !2154, inlinedAt: !9463)
!9504 = !DILocation(line: 68, column: 84, scope: !2154, inlinedAt: !9463)
!9505 = !DILocation(line: 68, column: 99, scope: !2154, inlinedAt: !9463)
!9506 = !DILocation(line: 68, column: 102, scope: !2154, inlinedAt: !9463)
!9507 = !DILocation(line: 68, column: 109, scope: !2154, inlinedAt: !9463)
!9508 = !DILocation(line: 68, column: 114, scope: !2154, inlinedAt: !9463)
!9509 = !DILocation(line: 68, column: 94, scope: !2154, inlinedAt: !9463)
!9510 = !DILocation(line: 68, column: 63, scope: !2154, inlinedAt: !9463)
!9511 = !DILocation(line: 397, column: 101, scope: !9457)
!9512 = !DILocation(line: 397, column: 110, scope: !9457)
!9513 = !DILocation(line: 397, column: 97, scope: !9457)
!9514 = !DILocation(line: 397, column: 14, scope: !9457)
!9515 = !DILocation(line: 398, column: 23, scope: !9457)
!9516 = !DILocation(line: 398, column: 9, scope: !9457)
!9517 = !DILocation(line: 400, column: 32, scope: !9457)
!9518 = !DILocation(line: 400, column: 36, scope: !9457)
!9519 = !DILocation(line: 400, column: 17, scope: !9457)
!9520 = !DILocation(line: 400, column: 15, scope: !9457)
!9521 = !DILocation(line: 400, column: 9, scope: !9457)
!9522 = !DILocation(line: 402, column: 9, scope: !9461)
!9523 = !DILocation(line: 402, column: 20, scope: !9461)
!9524 = !DILocation(line: 402, column: 18, scope: !9461)
!9525 = !DILocation(line: 402, column: 13, scope: !9461)
!9526 = !DILocation(line: 402, column: 9, scope: !9457)
!9527 = !DILocation(line: 403, column: 17, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9461, file: !9299, line: 402, column: 27)
!9529 = !DILocation(line: 403, column: 23, scope: !9528)
!9530 = !DILocation(line: 403, column: 21, scope: !9528)
!9531 = !DILocation(line: 403, column: 13, scope: !9528)
!9532 = !DILocation(line: 404, column: 23, scope: !9528)
!9533 = !DILocation(line: 404, column: 21, scope: !9528)
!9534 = !DILocation(line: 404, column: 31, scope: !9528)
!9535 = !DILocation(line: 404, column: 28, scope: !9528)
!9536 = !DILocation(line: 404, column: 13, scope: !9528)
!9537 = !DILocation(line: 405, column: 22, scope: !9528)
!9538 = !DILocation(line: 405, column: 40, scope: !9528)
!9539 = !DILocation(line: 405, column: 57, scope: !9528)
!9540 = !DILocation(line: 405, column: 55, scope: !9528)
!9541 = !DILocation(line: 405, column: 61, scope: !9528)
!9542 = !DILocation(line: 405, column: 59, scope: !9528)
!9543 = !DILocation(line: 405, column: 49, scope: !9528)
!9544 = !DILocation(line: 405, column: 37, scope: !9528)
!9545 = !DILocation(line: 405, column: 21, scope: !9528)
!9546 = !DILocation(line: 405, column: 70, scope: !9547)
!9547 = !DILexicalBlockFile(scope: !9528, file: !9299, discriminator: 1)
!9548 = !DILocation(line: 405, column: 87, scope: !9547)
!9549 = !DILocation(line: 405, column: 85, scope: !9547)
!9550 = !DILocation(line: 405, column: 91, scope: !9547)
!9551 = !DILocation(line: 405, column: 89, scope: !9547)
!9552 = !DILocation(line: 405, column: 79, scope: !9547)
!9553 = !DILocation(line: 405, column: 21, scope: !9547)
!9554 = !DILocation(line: 405, column: 100, scope: !9555)
!9555 = !DILexicalBlockFile(scope: !9528, file: !9299, discriminator: 2)
!9556 = !DILocation(line: 405, column: 21, scope: !9555)
!9557 = !DILocation(line: 405, column: 21, scope: !9558)
!9558 = !DILexicalBlockFile(scope: !9528, file: !9299, discriminator: 3)
!9559 = !DILocation(line: 405, column: 18, scope: !9558)
!9560 = !DILocation(line: 406, column: 23, scope: !9528)
!9561 = !DILocation(line: 406, column: 10, scope: !9528)
!9562 = !DILocation(line: 406, column: 15, scope: !9528)
!9563 = !DILocation(line: 406, column: 21, scope: !9528)
!9564 = !DILocation(line: 408, column: 16, scope: !9528)
!9565 = !DILocation(line: 408, column: 9, scope: !9528)
!9566 = !DILocation(line: 410, column: 22, scope: !9460)
!9567 = !DILocation(line: 410, column: 40, scope: !9460)
!9568 = !DILocation(line: 410, column: 52, scope: !9460)
!9569 = !DILocation(line: 410, column: 49, scope: !9460)
!9570 = !DILocation(line: 410, column: 37, scope: !9460)
!9571 = !DILocation(line: 410, column: 21, scope: !9460)
!9572 = !DILocation(line: 410, column: 63, scope: !9573)
!9573 = !DILexicalBlockFile(scope: !9460, file: !9299, discriminator: 1)
!9574 = !DILocation(line: 410, column: 75, scope: !9573)
!9575 = !DILocation(line: 410, column: 72, scope: !9573)
!9576 = !DILocation(line: 410, column: 21, scope: !9573)
!9577 = !DILocation(line: 410, column: 86, scope: !9578)
!9578 = !DILexicalBlockFile(scope: !9460, file: !9299, discriminator: 2)
!9579 = !DILocation(line: 410, column: 21, scope: !9578)
!9580 = !DILocation(line: 410, column: 21, scope: !9581)
!9581 = !DILexicalBlockFile(scope: !9460, file: !9299, discriminator: 3)
!9582 = !DILocation(line: 410, column: 18, scope: !9581)
!9583 = !DILocation(line: 411, column: 64, scope: !9460)
!9584 = !DILocation(line: 411, column: 69, scope: !9460)
!9585 = !DILocation(line: 411, column: 79, scope: !9460)
!9586 = !DILocation(line: 411, column: 88, scope: !9460)
!9587 = !DILocation(line: 411, column: 76, scope: !9460)
!9588 = !DILocation(line: 411, column: 97, scope: !9460)
!9589 = !DILocation(line: 411, column: 20, scope: !9460)
!9590 = !DILocation(line: 68, column: 16, scope: !2154, inlinedAt: !9459)
!9591 = !DILocation(line: 68, column: 19, scope: !2154, inlinedAt: !9459)
!9592 = !DILocation(line: 68, column: 24, scope: !2154, inlinedAt: !9459)
!9593 = !DILocation(line: 68, column: 38, scope: !2154, inlinedAt: !9459)
!9594 = !DILocation(line: 68, column: 41, scope: !2154, inlinedAt: !9459)
!9595 = !DILocation(line: 68, column: 46, scope: !2154, inlinedAt: !9459)
!9596 = !DILocation(line: 68, column: 34, scope: !2154, inlinedAt: !9459)
!9597 = !DILocation(line: 68, column: 57, scope: !2154, inlinedAt: !9459)
!9598 = !DILocation(line: 68, column: 69, scope: !2154, inlinedAt: !9459)
!9599 = !DILocation(line: 68, column: 72, scope: !2154, inlinedAt: !9459)
!9600 = !DILocation(line: 68, column: 79, scope: !2154, inlinedAt: !9459)
!9601 = !DILocation(line: 68, column: 84, scope: !2154, inlinedAt: !9459)
!9602 = !DILocation(line: 68, column: 99, scope: !2154, inlinedAt: !9459)
!9603 = !DILocation(line: 68, column: 102, scope: !2154, inlinedAt: !9459)
!9604 = !DILocation(line: 68, column: 109, scope: !2154, inlinedAt: !9459)
!9605 = !DILocation(line: 68, column: 114, scope: !2154, inlinedAt: !9459)
!9606 = !DILocation(line: 68, column: 94, scope: !2154, inlinedAt: !9459)
!9607 = !DILocation(line: 68, column: 63, scope: !2154, inlinedAt: !9459)
!9608 = !DILocation(line: 411, column: 105, scope: !9460)
!9609 = !DILocation(line: 411, column: 114, scope: !9460)
!9610 = !DILocation(line: 411, column: 101, scope: !9460)
!9611 = !DILocation(line: 411, column: 18, scope: !9460)
!9612 = !DILocation(line: 413, column: 25, scope: !9460)
!9613 = !DILocation(line: 413, column: 35, scope: !9460)
!9614 = !DILocation(line: 413, column: 15, scope: !9460)
!9615 = !DILocation(line: 413, column: 13, scope: !9460)
!9616 = !DILocation(line: 415, column: 22, scope: !9460)
!9617 = !DILocation(line: 415, column: 40, scope: !9460)
!9618 = !DILocation(line: 415, column: 52, scope: !9460)
!9619 = !DILocation(line: 415, column: 49, scope: !9460)
!9620 = !DILocation(line: 415, column: 37, scope: !9460)
!9621 = !DILocation(line: 415, column: 21, scope: !9460)
!9622 = !DILocation(line: 415, column: 65, scope: !9573)
!9623 = !DILocation(line: 415, column: 77, scope: !9573)
!9624 = !DILocation(line: 415, column: 74, scope: !9573)
!9625 = !DILocation(line: 415, column: 21, scope: !9573)
!9626 = !DILocation(line: 415, column: 90, scope: !9578)
!9627 = !DILocation(line: 415, column: 21, scope: !9578)
!9628 = !DILocation(line: 415, column: 21, scope: !9581)
!9629 = !DILocation(line: 415, column: 18, scope: !9581)
!9630 = !DILocation(line: 416, column: 23, scope: !9460)
!9631 = !DILocation(line: 416, column: 10, scope: !9460)
!9632 = !DILocation(line: 416, column: 15, scope: !9460)
!9633 = !DILocation(line: 416, column: 21, scope: !9460)
!9634 = !DILocation(line: 418, column: 16, scope: !9460)
!9635 = !DILocation(line: 418, column: 22, scope: !9460)
!9636 = !DILocation(line: 418, column: 20, scope: !9460)
!9637 = !DILocation(line: 418, column: 28, scope: !9460)
!9638 = !DILocation(line: 418, column: 9, scope: !9460)
!9639 = !DILocation(line: 421, column: 1, scope: !9457)
!9640 = distinct !DISubprogram(name: "sign_extend", scope: !9641, file: !9641, line: 130, type: !9642, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9641 = !DIFile(filename: "libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!9642 = !DISubroutineType(types: !9643)
!9643 = !{!923, !923, !924}
!9644 = !DILocalVariable(name: "val", arg: 1, scope: !9640, file: !9641, line: 130, type: !923)
!9645 = !DILocation(line: 130, column: 58, scope: !9640)
!9646 = !DILocalVariable(name: "bits", arg: 2, scope: !9640, file: !9641, line: 130, type: !924)
!9647 = !DILocation(line: 130, column: 72, scope: !9640)
!9648 = !DILocalVariable(name: "shift", scope: !9640, file: !9641, line: 132, type: !924)
!9649 = !DILocation(line: 132, column: 14, scope: !9640)
!9650 = !DILocation(line: 132, column: 40, scope: !9640)
!9651 = !DILocation(line: 132, column: 38, scope: !9640)
!9652 = !DILocation(line: 132, column: 22, scope: !9640)
!9653 = !DILocalVariable(name: "v", scope: !9640, file: !9641, line: 133, type: !9654)
!9654 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9640, file: !9641, line: 133, size: 32, align: 32, elements: !9655)
!9655 = !{!9656, !9657}
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !9654, file: !9641, line: 133, baseType: !924, size: 32, align: 32)
!9657 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !9654, file: !9641, line: 133, baseType: !923, size: 32, align: 32)
!9658 = !DILocation(line: 133, column: 34, scope: !9640)
!9659 = !DILocation(line: 133, column: 38, scope: !9640)
!9660 = !DILocation(line: 133, column: 51, scope: !9640)
!9661 = !DILocation(line: 133, column: 58, scope: !9640)
!9662 = !DILocation(line: 133, column: 55, scope: !9640)
!9663 = !DILocation(line: 134, column: 14, scope: !9640)
!9664 = !DILocation(line: 134, column: 19, scope: !9640)
!9665 = !DILocation(line: 134, column: 16, scope: !9640)
!9666 = !DILocation(line: 134, column: 5, scope: !9640)
!9667 = distinct !DISubprogram(name: "mid_pred", scope: !9284, file: !9284, line: 76, type: !9668, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9668 = !DISubroutineType(types: !9669)
!9669 = !{!923, !923, !923, !923}
!9670 = !DILocalVariable(name: "a", arg: 1, scope: !9667, file: !9284, line: 76, type: !923)
!9671 = !DILocation(line: 76, column: 55, scope: !9667)
!9672 = !DILocalVariable(name: "b", arg: 2, scope: !9667, file: !9284, line: 76, type: !923)
!9673 = !DILocation(line: 76, column: 62, scope: !9667)
!9674 = !DILocalVariable(name: "c", arg: 3, scope: !9667, file: !9284, line: 76, type: !923)
!9675 = !DILocation(line: 76, column: 69, scope: !9667)
!9676 = !DILocalVariable(name: "i", scope: !9667, file: !9284, line: 78, type: !923)
!9677 = !DILocation(line: 78, column: 9, scope: !9667)
!9678 = !DILocation(line: 78, column: 11, scope: !9667)
!9679 = !DILocation(line: 79, column: 5, scope: !9667)
!9680 = !DILocation(line: 88, column: 14, scope: !9667)
!9681 = !DILocation(line: 88, column: 22, scope: !9667)
!9682 = !{i32 196675, i32 196692, i32 196721, i32 196750, i32 196779, i32 196808, i32 196837, i32 196866}
!9683 = !DILocation(line: 90, column: 12, scope: !9667)
!9684 = !DILocation(line: 90, column: 5, scope: !9667)
!9685 = distinct !DISubprogram(name: "get_context32", scope: !8947, file: !8947, line: 32, type: !9686, isLocal: true, isDefinition: true, scopeLine: 34, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9686 = !DISubroutineType(types: !9687)
!9687 = !{!923, !5289, !1835, !1835, !1835}
!9688 = !DILocalVariable(name: "p", arg: 1, scope: !9685, file: !8947, line: 32, type: !5289)
!9689 = !DILocation(line: 32, column: 47, scope: !9685)
!9690 = !DILocalVariable(name: "src", arg: 2, scope: !9685, file: !8947, line: 32, type: !1835)
!9691 = !DILocation(line: 32, column: 59, scope: !9685)
!9692 = !DILocalVariable(name: "last", arg: 3, scope: !9685, file: !8947, line: 33, type: !1835)
!9693 = !DILocation(line: 33, column: 48, scope: !9685)
!9694 = !DILocalVariable(name: "last2", arg: 4, scope: !9685, file: !8947, line: 33, type: !1835)
!9695 = !DILocation(line: 33, column: 63, scope: !9685)
!9696 = !DILocalVariable(name: "LT", scope: !9685, file: !8947, line: 35, type: !979)
!9697 = !DILocation(line: 35, column: 15, scope: !9685)
!9698 = !DILocation(line: 35, column: 20, scope: !9685)
!9699 = !DILocalVariable(name: "T", scope: !9685, file: !8947, line: 36, type: !979)
!9700 = !DILocation(line: 36, column: 15, scope: !9685)
!9701 = !DILocation(line: 36, column: 19, scope: !9685)
!9702 = !DILocalVariable(name: "RT", scope: !9685, file: !8947, line: 37, type: !979)
!9703 = !DILocation(line: 37, column: 15, scope: !9685)
!9704 = !DILocation(line: 37, column: 20, scope: !9685)
!9705 = !DILocalVariable(name: "L", scope: !9685, file: !8947, line: 38, type: !979)
!9706 = !DILocation(line: 38, column: 15, scope: !9685)
!9707 = !DILocation(line: 38, column: 19, scope: !9685)
!9708 = !DILocation(line: 40, column: 9, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9685, file: !8947, line: 40, column: 9)
!9710 = !DILocation(line: 40, column: 12, scope: !9709)
!9711 = !DILocation(line: 40, column: 9, scope: !9685)
!9712 = !DILocalVariable(name: "TT", scope: !9713, file: !8947, line: 41, type: !979)
!9713 = distinct !DILexicalBlock(scope: !9709, file: !8947, line: 40, column: 33)
!9714 = !DILocation(line: 41, column: 19, scope: !9713)
!9715 = !DILocation(line: 41, column: 24, scope: !9713)
!9716 = !DILocalVariable(name: "LL", scope: !9713, file: !8947, line: 42, type: !979)
!9717 = !DILocation(line: 42, column: 19, scope: !9713)
!9718 = !DILocation(line: 42, column: 24, scope: !9713)
!9719 = !DILocation(line: 43, column: 35, scope: !9713)
!9720 = !DILocation(line: 43, column: 39, scope: !9713)
!9721 = !DILocation(line: 43, column: 37, scope: !9713)
!9722 = !DILocation(line: 43, column: 43, scope: !9713)
!9723 = !DILocation(line: 43, column: 16, scope: !9713)
!9724 = !DILocation(line: 43, column: 19, scope: !9713)
!9725 = !DILocation(line: 44, column: 35, scope: !9713)
!9726 = !DILocation(line: 44, column: 40, scope: !9713)
!9727 = !DILocation(line: 44, column: 38, scope: !9713)
!9728 = !DILocation(line: 44, column: 43, scope: !9713)
!9729 = !DILocation(line: 44, column: 16, scope: !9713)
!9730 = !DILocation(line: 44, column: 19, scope: !9713)
!9731 = !DILocation(line: 43, column: 51, scope: !9713)
!9732 = !DILocation(line: 45, column: 35, scope: !9713)
!9733 = !DILocation(line: 45, column: 39, scope: !9713)
!9734 = !DILocation(line: 45, column: 37, scope: !9713)
!9735 = !DILocation(line: 45, column: 43, scope: !9713)
!9736 = !DILocation(line: 45, column: 16, scope: !9713)
!9737 = !DILocation(line: 45, column: 19, scope: !9713)
!9738 = !DILocation(line: 44, column: 51, scope: !9713)
!9739 = !DILocation(line: 46, column: 35, scope: !9713)
!9740 = !DILocation(line: 46, column: 40, scope: !9713)
!9741 = !DILocation(line: 46, column: 38, scope: !9713)
!9742 = !DILocation(line: 46, column: 43, scope: !9713)
!9743 = !DILocation(line: 46, column: 16, scope: !9713)
!9744 = !DILocation(line: 46, column: 19, scope: !9713)
!9745 = !DILocation(line: 45, column: 51, scope: !9713)
!9746 = !DILocation(line: 47, column: 35, scope: !9713)
!9747 = !DILocation(line: 47, column: 40, scope: !9713)
!9748 = !DILocation(line: 47, column: 38, scope: !9713)
!9749 = !DILocation(line: 47, column: 43, scope: !9713)
!9750 = !DILocation(line: 47, column: 16, scope: !9713)
!9751 = !DILocation(line: 47, column: 19, scope: !9713)
!9752 = !DILocation(line: 46, column: 51, scope: !9713)
!9753 = !DILocation(line: 43, column: 9, scope: !9713)
!9754 = !DILocation(line: 49, column: 35, scope: !9709)
!9755 = !DILocation(line: 49, column: 39, scope: !9709)
!9756 = !DILocation(line: 49, column: 37, scope: !9709)
!9757 = !DILocation(line: 49, column: 43, scope: !9709)
!9758 = !DILocation(line: 49, column: 16, scope: !9709)
!9759 = !DILocation(line: 49, column: 19, scope: !9709)
!9760 = !DILocation(line: 50, column: 35, scope: !9709)
!9761 = !DILocation(line: 50, column: 40, scope: !9709)
!9762 = !DILocation(line: 50, column: 38, scope: !9709)
!9763 = !DILocation(line: 50, column: 43, scope: !9709)
!9764 = !DILocation(line: 50, column: 16, scope: !9709)
!9765 = !DILocation(line: 50, column: 19, scope: !9709)
!9766 = !DILocation(line: 49, column: 51, scope: !9709)
!9767 = !DILocation(line: 51, column: 35, scope: !9709)
!9768 = !DILocation(line: 51, column: 39, scope: !9709)
!9769 = !DILocation(line: 51, column: 37, scope: !9709)
!9770 = !DILocation(line: 51, column: 43, scope: !9709)
!9771 = !DILocation(line: 51, column: 16, scope: !9709)
!9772 = !DILocation(line: 51, column: 19, scope: !9709)
!9773 = !DILocation(line: 50, column: 51, scope: !9709)
!9774 = !DILocation(line: 49, column: 9, scope: !9709)
!9775 = !DILocation(line: 52, column: 1, scope: !9685)
!9776 = distinct !DISubprogram(name: "predict32", scope: !8947, file: !8947, line: 23, type: !9777, isLocal: true, isDefinition: true, scopeLine: 24, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1704)
!9777 = !DISubroutineType(types: !9778)
!9778 = !{!923, !1835, !1835}
!9779 = !DILocalVariable(name: "src", arg: 1, scope: !9776, file: !8947, line: 23, type: !1835)
!9780 = !DILocation(line: 23, column: 38, scope: !9776)
!9781 = !DILocalVariable(name: "last", arg: 2, scope: !9776, file: !8947, line: 23, type: !1835)
!9782 = !DILocation(line: 23, column: 52, scope: !9776)
!9783 = !DILocalVariable(name: "LT", scope: !9776, file: !8947, line: 25, type: !979)
!9784 = !DILocation(line: 25, column: 15, scope: !9776)
!9785 = !DILocation(line: 25, column: 20, scope: !9776)
!9786 = !DILocalVariable(name: "T", scope: !9776, file: !8947, line: 26, type: !979)
!9787 = !DILocation(line: 26, column: 15, scope: !9776)
!9788 = !DILocation(line: 26, column: 19, scope: !9776)
!9789 = !DILocalVariable(name: "L", scope: !9776, file: !8947, line: 27, type: !979)
!9790 = !DILocation(line: 27, column: 15, scope: !9776)
!9791 = !DILocation(line: 27, column: 19, scope: !9776)
!9792 = !DILocation(line: 29, column: 21, scope: !9776)
!9793 = !DILocation(line: 29, column: 24, scope: !9776)
!9794 = !DILocation(line: 29, column: 28, scope: !9776)
!9795 = !DILocation(line: 29, column: 26, scope: !9776)
!9796 = !DILocation(line: 29, column: 32, scope: !9776)
!9797 = !DILocation(line: 29, column: 30, scope: !9776)
!9798 = !DILocation(line: 29, column: 36, scope: !9776)
!9799 = !DILocation(line: 29, column: 12, scope: !9776)
!9800 = !DILocation(line: 29, column: 5, scope: !9776)
