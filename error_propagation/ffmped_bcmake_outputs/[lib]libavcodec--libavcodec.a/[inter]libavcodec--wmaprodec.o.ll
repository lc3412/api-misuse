; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--wmaprodec.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--wmaprodec.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.WMAProDecodeCtx = type { %struct.AVCodecContext*, %struct.AVFloatDSPContext*, [32832 x i8], %struct.PutBitContext, [8 x %struct.FFTContext], [8 x i8], [8192 x float], [8 x float*], i32, i8, i8, i8, i16, i16, i8, i8, i8, i8, i16, [8 x i8], [8 x [29 x i16]], [8 x [8 x [29 x i8]]], [8 x i16], %struct.GetBitContext, i32, i8, i8, i32, i32, i32, i8, i8, i8, i32, %struct.GetBitContext, i32, i8, i8, i8, i8, i16, i8, i8, [8 x i8], i8, i8, i16*, i8, i8, i8, [8 x %struct.WMAProChannelGrp], [24 x i8], [8 x %struct.WMAProChannelCtx] }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.WMAProChannelGrp = type { i8, i8, [29 x i8], [64 x float], [8 x float*] }
%struct.WMAProChannelCtx = type { i16, i8, i8, [32 x i16], [32 x i16], i8, i16, i8, i32, i8, i8, i32, [2 x [29 x i32]], i8, i32*, i8, float*, i16, [30 x i8], [12288 x float] }
%struct.XMADecodeCtx = type { [8 x %struct.WMAProDecodeCtx], [8 x %struct.AVFrame*], i32, i32, [16 x [32768 x float]], [8 x i32], [8 x i32], [24 x i8] }
%union.unaligned_16 = type { i16 }
%union.unaligned_32 = type { i32 }
%union.av_intfloat32 = type { i32 }
%union.av_alias32 = type { i32 }

@.str = private unnamed_addr constant [7 x i8] c"wmapro\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"Windows Media Audio 9 Professional\00", align 1
@.compoundliteral = internal constant [2 x i32] [i32 8, i32 -1], align 4
@ff_wmapro_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86053, i32 258, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 468768, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @wmapro_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @wmapro_decode_packet, i32 (%struct.AVCodecContext*)* @wmapro_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @wmapro_flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"xma1\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"Xbox Media Audio 1\00", align 1
@.compoundliteral.4 = internal constant [2 x i32] [i32 8, i32 -1], align 4
@ff_xma1_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i32 0, i32 0), i32 1, i32 88075, i32 290, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral.4, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 5847456, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @xma_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @xma_decode_packet, i32 (%struct.AVCodecContext*)* @xma_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.5 = private unnamed_addr constant [5 x i8] c"xma2\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"Xbox Media Audio 2\00", align 1
@.compoundliteral.7 = internal constant [2 x i32] [i32 8, i32 -1], align 4
@ff_xma2_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i32 0, i32 0), i32 1, i32 88076, i32 290, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral.7, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 5847456, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @xma_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @xma_decode_packet, i32 (%struct.AVCodecContext*)* @xma_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @xma_flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.8 = private unnamed_addr constant [24 x i8] c"block_align is not set\0A\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"extradata:\0A\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"[%x] \00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"bits per sample is %d\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"Unknown extradata size\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"Large block align\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"14-bit block sizes\00", align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"invalid number of subframes %d\0A\00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"min_samples_per_subframe of %d too small\0A\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"invalid sample rate\0A\00", align 1
@.str.19 = private unnamed_addr constant [31 x i8] c"invalid number of channels %d\0A\00", align 1
@.str.20 = private unnamed_addr constant [46 x i8] c"invalid number of channels per XMA stream %d\0A\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"More than %d channels\00", align 1
@decode_init.table = internal global [616 x [2 x i16]] zeroinitializer, align 16
@sf_vlc = internal global %struct.VLC zeroinitializer, align 8
@scale_huffbits = internal constant [121 x i8] c"\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\12\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\10\0F\0D\0B\08\05\02\01\03\05\06\06\07\07\07\09\0A\0D\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13\13", align 16
@scale_huffcodes = internal constant [121 x i16] [i16 -6599, i16 -6462, i16 -6463, i16 -6464, i16 -6593, i16 -6594, i16 -6595, i16 -6596, i16 -6597, i16 -6598, i16 -6600, i16 -6601, i16 -6602, i16 -6603, i16 -6604, i16 -6606, i16 -6605, i16 -6624, i16 29563, i16 -6640, i16 -6639, i16 -6638, i16 -6637, i16 -6636, i16 -6635, i16 -6634, i16 -6633, i16 -6632, i16 -6631, i16 -6630, i16 -6629, i16 -6628, i16 -6627, i16 -6626, i16 -6625, i16 -6461, i16 -6623, i16 -6622, i16 -6621, i16 -6620, i16 -6619, i16 -6618, i16 -6617, i16 -6616, i16 -6615, i16 -6614, i16 -6613, i16 -6612, i16 -6611, i16 -6610, i16 -6609, i16 -6608, i16 -6607, i16 7391, i16 3680, i16 921, i16 231, i16 29, i16 0, i16 1, i16 1, i16 1, i16 2, i16 6, i16 2, i16 7, i16 6, i16 15, i16 56, i16 114, i16 922, i16 -6460, i16 -6459, i16 -6458, i16 -6457, i16 -6456, i16 -6455, i16 -6454, i16 -6453, i16 -6452, i16 -6451, i16 -6450, i16 -6449, i16 -6448, i16 -6447, i16 -6446, i16 -6445, i16 -6444, i16 -6443, i16 -6442, i16 -6441, i16 -6440, i16 -6439, i16 -6438, i16 -6437, i16 -6436, i16 -6435, i16 -6434, i16 -6433, i16 -6432, i16 -6431, i16 -6430, i16 -6429, i16 -6428, i16 -6427, i16 -6426, i16 -6425, i16 -6424, i16 -6423, i16 -6422, i16 -6421, i16 -6420, i16 -6419, i16 -6418, i16 -6417, i16 -6416, i16 -6415, i16 -6414, i16 -6413, i16 -6412, i16 -6411], align 16
@decode_init.table.22 = internal global [1406 x [2 x i16]] zeroinitializer, align 16
@sf_rl_vlc = internal global %struct.VLC zeroinitializer, align 8
@scale_rl_huffbits = internal constant [120 x i8] c"\09\02\15\02\04\05\05\06\06\07\07\07\07\06\07\08\08\09\0A\0A\0B\0C\0B\0C\0C\0C\0C\0B\04\05\07\08\09\09\09\09\09\09\08\08\09\09\0C\0B\0C\0F\0F\0D\0F\0E\0D\0E\15\05\06\09\0A\0A\0B\0A\0B\09\09\06\08\09\07\0C\0A\0C\10\0F\0C\0F\0E\0F\0A\15\06\07\0B\0C\0E\0E\0F\0F\0E\0C\0B\0F\0C\0B\0E\0D\0E\15\15\0C\10\12\0F\11\14\07\08\0C\0C\0E\0F\0F\10\15\0D\0B\07\09\09\0A\0B\0A", align 16
@scale_rl_huffcodes = internal constant [120 x i32] [i32 268, i32 1, i32 1113642, i32 3, i32 3, i32 1, i32 19, i32 32, i32 41, i32 20, i32 22, i32 69, i32 73, i32 47, i32 66, i32 142, i32 143, i32 297, i32 9, i32 13, i32 1196, i32 44, i32 1377, i32 742, i32 2172, i32 738, i32 2396, i32 24, i32 1, i32 22, i32 68, i32 42, i32 7, i32 345, i32 323, i32 296, i32 346, i32 301, i32 43, i32 160, i32 322, i32 298, i32 751, i32 1199, i32 2173, i32 19177, i32 17401, i32 103, i32 409, i32 11013, i32 5507, i32 8702, i32 1113644, i32 4, i32 46, i32 269, i32 10, i32 580, i32 23, i32 581, i32 17, i32 270, i32 300, i32 42, i32 47, i32 289, i32 70, i32 2174, i32 186, i32 50, i32 34800, i32 22236, i32 748, i32 17402, i32 11119, i32 19176, i32 695, i32 1113643, i32 1, i32 81, i32 16, i32 750, i32 2972, i32 9590, i32 408, i32 22237, i32 205, i32 2752, i32 368, i32 19183, i32 45, i32 1197, i32 8703, i32 1487, i32 11012, i32 1113641, i32 1113640, i32 749, i32 11892, i32 139204, i32 19182, i32 69603, i32 556823, i32 0, i32 151, i32 739, i32 2778, i32 9589, i32 5947, i32 17403, i32 11893, i32 1113645, i32 5558, i32 1388, i32 87, i32 291, i32 288, i32 542, i32 370, i32 689], align 16
@decode_init.table.23 = internal global [2108 x [2 x i16]] zeroinitializer, align 16
@coef_vlc = internal global [2 x %struct.VLC] zeroinitializer, align 16
@coef0_huffbits = internal constant [272 x i8] calign 16
@coef0_huffcodes = internal constant [272 x i32] [i32 74, i32 43, i32 0, i32 3, i32 6, i32 9, i32 15, i32 16, i32 22, i32 17, i32 22, i32 40, i32 47, i32 38, i32 41, i32 69, i32 85, i32 93, i32 66, i32 78, i32 81, i32 94, i32 141, i32 168, i32 173, i32 128, i32 150, i32 159, i32 170, i32 190, i32 284, i32 339, i32 344, i32 368, i32 260, i32 269, i32 261, i32 259, i32 303, i32 375, i32 373, i32 343, i32 372, i32 549, i32 571, i32 525, i32 543, i32 641, i32 635, i32 642, i32 684, i32 765, i32 1103, i32 1144, i32 1101, i32 748, i32 1102, i32 1380, i32 1033, i32 1035, i32 1281, i32 1349, i32 1267, i32 1345, i32 1083, i32 1265, i32 1268, i32 2301, i32 2708, i32 2065, i32 2952, i32 2961, i32 2963, i32 2282, i32 2201, i32 2954, i32 2418, i32 2533, i32 2703, i32 2692, i32 2702, i32 2560, i32 2096, i32 2280, i32 2965, i32 2161, i32 2106, i32 2068, i32 2163, i32 3070, i32 5928, i32 5525, i32 5906, i32 4138, i32 4129, i32 5929, i32 5422, i32 5059, i32 5921, i32 5527, i32 5403, i32 4338, i32 5123, i32 5891, i32 5379, i32 5896, i32 5057, i32 5902, i32 5900, i32 4321, i32 4586, i32 4128, i32 5376, i32 6138, i32 5892, i32 5893, i32 6128, i32 6139, i32 8678, i32 11053, i32 8390, i32 11049, i32 11850, i32 9132, i32 5401, i32 9203, i32 11052, i32 8640, i32 6142, i32 9175, i32 6137, i32 4839, i32 5056, i32 8801, i32 9171, i32 8279, i32 8278, i32 8658, i32 8391, i32 9170, i32 8428, i32 17600, i32 12258, i32 18267, i32 10755, i32 12259, i32 8674, i32 8656, i32 10801, i32 11795, i32 11781, i32 18405, i32 14, i32 36, i32 136, i32 185, i32 268, i32 548, i32 691, i32 643, i32 749, i32 1147, i32 1054, i32 1085, i32 1269, i32 1533, i32 2706, i32 2966, i32 2104, i32 2417, i32 2947, i32 2944, i32 3065, i32 4563, i32 4584, i32 4567, i32 5415, i32 4600, i32 4211, i32 4336, i32 4324, i32 6136, i32 4194, i32 5122, i32 6115, i32 5402, i32 4215, i32 5419, i32 5901, i32 8659, i32 11841, i32 5058, i32 41, i32 169, i32 605, i32 1049, i32 1348, i32 2955, i32 2532, i32 4562, i32 5414, i32 5924, i32 4838, i32 5387, i32 6143, i32 11814, i32 11851, i32 11048, i32 8675, i32 10772, i32 18266, i32 11794, i32 87, i32 574, i32 2704, i32 3056, i32 4210, i32 5378, i32 9174, i32 8429, i32 10800, i32 17607, i32 140, i32 1151, i32 5418, i32 8802, i32 11780, i32 161, i32 1529, i32 371, i32 2165, i32 369, i32 5421, i32 739, i32 6114, i32 685, i32 8641, i32 1145, i32 8679, i32 1055, i32 23630, i32 1347, i32 23631, i32 2705, i32 35213, i32 2967, i32 34630, i32 2416, i32 34629, i32 2949, i32 43094, i32 5423, i32 69262, i32 4325, i32 43095, i32 5903, i32 138513, i32 10840, i32 69263, i32 11840, i32 138515, i32 10841, i32 277029, i32 10754, i32 277025, i32 17601, i32 554056, i32 18404, i32 277024, i32 21546, i32 554057, i32 35212], align 16
@decode_init.table.24 = internal global [3912 x [2 x i16]] zeroinitializer, align 16
@coef1_huffbits = internal constant [244 x i8] c"\09\07\02\03\04\04\05\06\06\07\07\08\08\08\09\09\09\09\0A\0A\0A\0A\0A\0B\0B\0B\0B\0B\0B\0C\0C\0C\0C\0C\0C\0C\0C\0C\0D\0D\0D\0D\0D\0D\0D\0D\0D\0D\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0E\0F\0F\0E\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\0F\10\10\10\10\10\10\10\10\11\10\10\10\10\10\10\10\03\05\06\08\09\0A\0B\0C\0C\0D\0D\0E\0E\0F\0F\0F\0F\0F\10\10\10\10\10\11\11\11\11\12\11\11\04\06\09\0A\0C\0D\0E\0E\0F\0F\05\08\0A\0C\0E\0F\06\09\0B\06\0A\0D\07\0A\0E\07\0B\08\0C\08\0C\08\0D\09\0D\09\0E\09\0E\0A\0E\0A\0F\0A\0F\0A\0F\0A\0F\0B\10\0B\10\0B\10\0B\10\0B\11\0C\11\0C\11\0C\12\0C\12\0C\12\0C\12\0D\13\0D\12\0D\13\0D\13\0D\14\0D\12\0D\14\0D\14\0E\13\0E\15\0E\13\0E\14\0E\15\0E\13\0E\14\0E\15\0F\15\0E\15\0F\16\0F\16\0F", align 16
@coef1_huffcodes = internal constant [244 x i32] [i32 482, i32 127, i32 0, i32 2, i32 8, i32 14, i32 25, i32 47, i32 55, i32 96, i32 108, i32 149, i32 198, i32 240, i32 302, i32 393, i32 421, i32 504, i32 595, i32 778, i32 836, i32 845, i32 1010, i32 1213, i32 1495, i32 1578, i32 1675, i32 1683, i32 1943, i32 2429, i32 2987, i32 3154, i32 3166, i32 3361, i32 3360, i32 3866, i32 4046, i32 4049, i32 4849, i32 5977, i32 6316, i32 6311, i32 6335, i32 6699, i32 7762, i32 7760, i32 7729, i32 8120, i32 9702, i32 9703, i32 11956, i32 11959, i32 12649, i32 12635, i32 12668, i32 12652, i32 13514, i32 13453, i32 16192, i32 15522, i32 16246, i32 19395, i32 19429, i32 16243, i32 19448, i32 19449, i32 24881, i32 25227, i32 25225, i32 25306, i32 25226, i32 25300, i32 27031, i32 25268, i32 26904, i32 31053, i32 32379, i32 32391, i32 32490, i32 31054, i32 27037, i32 31079, i32 27039, i32 25307, i32 32378, i32 32491, i32 47808, i32 38857, i32 50487, i32 50603, i32 53811, i32 54072, i32 47809, i32 53821, i32 77713, i32 54073, i32 64968, i32 53820, i32 64988, i32 64969, i32 64989, i32 54076, i32 3, i32 22, i32 62, i32 195, i32 417, i32 839, i32 1582, i32 2986, i32 3885, i32 6698, i32 7768, i32 12443, i32 15523, i32 23914, i32 25242, i32 27030, i32 31055, i32 32485, i32 47831, i32 50602, i32 50676, i32 64991, i32 64990, i32 100896, i32 100973, i32 108155, i32 107620, i32 155425, i32 129506, i32 129507, i32 10, i32 61, i32 296, i32 967, i32 3108, i32 6307, i32 11953, i32 15538, i32 26911, i32 32377, i32 19, i32 187, i32 846, i32 3348, i32 9725, i32 19431, i32 36, i32 392, i32 2031, i32 53, i32 776, i32 4850, i32 92, i32 1014, i32 9696, i32 109, i32 1688, i32 150, i32 3109, i32 199, i32 3867, i32 243, i32 4863, i32 372, i32 6758, i32 416, i32 12441, i32 484, i32 12651, i32 594, i32 16177, i32 779, i32 19430, i32 838, i32 25339, i32 847, i32 31078, i32 1013, i32 32390, i32 1492, i32 50449, i32 1580, i32 50677, i32 1682, i32 62105, i32 1941, i32 62104, i32 2025, i32 100897, i32 2430, i32 95661, i32 3111, i32 108154, i32 3159, i32 191321, i32 3362, i32 201945, i32 3865, i32 259010, i32 4045, i32 215243, i32 4856, i32 310849, i32 6304, i32 259009, i32 6305, i32 310848, i32 6327, i32 403888, i32 6756, i32 860969, i32 7728, i32 259011, i32 8095, i32 765282, i32 8089, i32 1036032, i32 12442, i32 403889, i32 11958, i32 1530563, i32 12620, i32 430485, i32 12648, i32 765283, i32 13454, i32 1530561, i32 16176, i32 518017, i32 16193, i32 860968, i32 16194, i32 2072067, i32 19394, i32 1530562, i32 16244, i32 1530560, i32 23905, i32 4144133, i32 24880, i32 4144132, i32 25269], align 16
@decode_init.table.25 = internal global [604 x [2 x i16]] zeroinitializer, align 16
@vec4_vlc = internal global %struct.VLC zeroinitializer, align 8
@vec4_huffbits = internal constant [127 x i8] c"\05\06\08\0A\0C\0D\06\06\08\0A\0B\09\08\09\0A\0B\0A\0B\0C\0C\0E\06\06\08\0A\0B\06\06\08\09\08\08\08\0A\09\0C\09\08\0A\0B\08\08\09\09\09\0B\0B\0A\0B\0A\09\0B\0C\0C\0C\0E\06\06\08\0A\0B\06\06\07\09\08\08\09\0A\0A\0C\06\06\08\09\06\06\07\08\07\09\08\08\09\08\07\09\0A\09\09\0C\08\08\0A\0B\08\08\09\0A\09\0B\08\07\09\07\07\09\09\09\08\0B\0A\0A\0B\0A\09\0B\0A\09\09\0A\0C\0B\0B\0B\0C\01", align 16
@vec4_huffcodes = internal constant [127 x i16] [i16 25, i16 39, i16 242, i16 954, i16 2352, i16 4711, i16 49, i16 48, i16 151, i16 545, i16 1419, i16 292, i16 235, i16 468, i16 984, i16 1412, i16 868, i16 1119, i16 3942, i16 2353, i16 9421, i16 47, i16 57, i16 232, i16 707, i16 1930, i16 55, i16 41, i16 132, i16 433, i16 237, i16 134, i16 249, i16 939, i16 491, i16 2236, i16 286, i16 243, i16 544, i16 1418, i16 236, i16 142, i16 299, i16 490, i16 281, i16 1200, i16 1201, i16 952, i16 1681, i16 869, i16 493, i16 1178, i16 3753, i16 3752, i16 2237, i16 9420, i16 38, i16 53, i16 219, i16 708, i16 1970, i16 56, i16 43, i16 127, i16 435, i16 244, i16 145, i16 278, i16 955, i16 533, i16 2354, i16 45, i16 42, i16 138, i16 478, i16 40, i16 32, i16 92, i16 144, i16 104, i16 494, i16 233, i16 141, i16 298, i16 135, i16 93, i16 280, i16 841, i16 495, i16 483, i16 2233, i16 240, i16 211, i16 532, i16 1179, i16 218, i16 137, i16 293, i16 535, i16 301, i16 1680, i16 148, i16 125, i16 287, i16 126, i16 89, i16 295, i16 421, i16 273, i16 248, i16 1117, i16 953, i16 601, i16 1408, i16 705, i16 479, i16 1413, i16 534, i16 355, i16 432, i16 964, i16 2232, i16 1931, i16 1877, i16 1409, i16 3943, i16 0], align 16
@decode_init.table.26 = internal global [562 x [2 x i16]] zeroinitializer, align 16
@vec2_vlc = internal global %struct.VLC zeroinitializer, align 8
@vec2_huffbits = internal constant [137 x i8] c"\07\06\06\06\07\07\08\09\09\0A\0A\0B\0B\0B\0C\0C\06\04\05\05\06\06\07\08\08\09\09\0A\0A\0A\0B\06\04\05\05\06\07\07\08\08\09\09\0A\0A\0B\06\05\05\06\06\07\07\08\08\09\09\0A\0A\07\06\06\06\07\07\08\08\09\09\0A\0A\07\06\07\07\07\08\08\08\09\09\0A\08\07\07\07\08\08\08\09\09\09\09\08\08\08\08\08\09\09\09\09\08\08\08\09\09\09\09\0A\09\09\09\09\09\09\0A\09\09\09\0A\0A\0B\0A\0A\0A\0A\0B\0A\0A\0A\0B\0A\0B\0C\0B\0C\03", align 16
@vec2_huffcodes = internal constant [137 x i16] [i16 85, i16 28, i16 26, i16 43, i16 40, i16 103, i16 139, i16 57, i16 368, i16 269, i16 677, i16 71, i16 1124, i16 1687, i16 1315, i16 2251, i16 27, i16 14, i16 0, i16 16, i16 18, i16 54, i16 72, i16 76, i16 194, i16 155, i16 369, i16 59, i16 548, i16 842, i16 726, i16 25, i16 15, i16 2, i16 20, i16 23, i16 6, i16 93, i16 84, i16 199, i16 180, i16 402, i16 270, i16 563, i16 67, i16 44, i16 15, i16 19, i16 6, i16 47, i16 44, i16 104, i16 119, i16 223, i16 273, i16 420, i16 362, i16 676, i16 39, i16 17, i16 24, i16 45, i16 15, i16 74, i16 64, i16 151, i16 31, i16 283, i16 34, i16 365, i16 102, i16 53, i16 5, i16 43, i16 73, i16 9, i16 117, i16 203, i16 170, i16 391, i16 262, i16 138, i16 71, i16 96, i16 110, i16 29, i16 116, i16 196, i16 30, i16 280, i16 423, i16 56, i16 66, i16 83, i16 118, i16 168, i16 202, i16 130, i16 272, i16 397, i16 301, i16 185, i16 200, i16 222, i16 28, i16 171, i16 275, i16 396, i16 271, i16 154, i16 165, i16 183, i16 282, i16 390, i16 422, i16 601, i16 339, i16 394, i16 403, i16 32, i16 268, i16 70, i16 58, i16 263, i16 329, i16 364, i16 727, i16 549, i16 600, i16 790, i16 1686, i16 791, i16 66, i16 1314, i16 656, i16 2250, i16 1], align 16
@decode_init.table.27 = internal global [562 x [2 x i16]] zeroinitializer, align 16
@vec1_vlc = internal global %struct.VLC zeroinitializer, align 8
@vec1_huffbits = internal constant [101 x i8] c"\07\06\05\05\05\05\05\05\04\04\04\04\04\05\05\05\05\05\05\06\06\06\06\06\06\07\07\07\07\07\07\07\08\08\08\08\08\08\08\08\08\08\08\08\08\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\0B\05", align 16
@vec1_huffcodes = internal constant [101 x i16] [i16 26, i16 3, i16 23, i16 16, i16 12, i16 9, i16 5, i16 0, i16 13, i16 10, i16 9, i16 12, i16 15, i16 2, i16 4, i16 7, i16 11, i16 15, i16 28, i16 6, i16 16, i16 21, i16 28, i16 34, i16 59, i16 14, i16 25, i16 35, i16 52, i16 54, i16 58, i16 71, i16 8, i16 10, i16 30, i16 49, i16 55, i16 80, i16 83, i16 107, i16 111, i16 140, i16 232, i16 234, i16 235, i16 22, i16 62, i16 63, i16 108, i16 137, i16 138, i16 163, i16 164, i16 212, i16 221, i16 236, i16 238, i16 282, i16 466, i16 36, i16 37, i16 46, i16 39, i16 194, i16 192, i16 218, i16 219, i16 273, i16 324, i16 278, i16 330, i16 325, i16 440, i16 427, i16 474, i16 478, i16 475, i16 479, i16 566, i16 567, i16 934, i16 935, i16 77, i16 76, i16 94, i16 95, i16 387, i16 386, i16 390, i16 545, i16 391, i16 544, i16 558, i16 559, i16 662, i16 852, i16 663, i16 853, i16 882, i16 883, i16 22], align 16
@critical_freq = internal constant [28 x i16] [i16 100, i16 200, i16 300, i16 400, i16 510, i16 630, i16 770, i16 920, i16 1080, i16 1270, i16 1480, i16 1720, i16 2000, i16 2320, i16 2700, i16 3150, i16 3700, i16 4400, i16 5300, i16 6400, i16 7700, i16 9500, i16 12000, i16 15500, i16 20675, i16 28575, i16 -24161, i16 -1661], align 16
@.str.28 = private unnamed_addr constant [17 x i8] c"num_sfb invalid\0A\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"v < 29\00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c"libavcodec/wmaprodec.c\00", align 1
@ff_sine_windows = external constant [16 x float*], align 16
@sin64 = internal global [33 x float] zeroinitializer, align 16
@.str.32 = private unnamed_addr constant [10 x i8] c" %s = %d\0A\00", align 1
@.str.33 = private unnamed_addr constant [20 x i8] c"ed sample bit depth\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c" %s = %x\0A\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"ed decode flags\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"samples per frame\00", align 1
@.str.37 = private unnamed_addr constant [16 x i8] c"log2 frame size\00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"max num subframes\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"len prefix\00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"num channels\00", align 1
@.str.41 = private unnamed_addr constant [34 x i8] c"Input packet too small (%d < %d)\0A\00", align 1
@.str.42 = private unnamed_addr constant [36 x i8] c"Packet loss detected! seq %x vs %x\0A\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"Overread %d\0A\00", align 1
@.str.44 = private unnamed_addr constant [23 x i8] c"Too small input buffer\00", align 1
@.str.45 = private unnamed_addr constant [29 x i8] c"len <= put_bits_left(&s->pb)\00", align 1
@.str.46 = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@.str.47 = private unnamed_addr constant [24 x i8] c"s->buf_ptr < s->buf_end\00", align 1
@.str.48 = private unnamed_addr constant [22 x i8] c"libavcodec/put_bits.h\00", align 1
@.str.49 = private unnamed_addr constant [38 x i8] c"frame[%u] would have to skip %i bits\0A\00", align 1
@.str.50 = private unnamed_addr constant [34 x i8] c"broken frame: num subframes > 31\0A\00", align 1
@.str.51 = private unnamed_addr constant [47 x i8] c"broken frame: channel len > samples_per_frame\0A\00", align 1
@.str.52 = private unnamed_addr constant [31 x i8] c"broken frame: subframe_len %i\0A\00", align 1
@.str.53 = private unnamed_addr constant [29 x i8] c"invalid number of fill bits\0A\00", align 1
@.str.54 = private unnamed_addr constant [13 x i8] c"Reserved bit\00", align 1
@.str.55 = private unnamed_addr constant [29 x i8] c"s->subframe_len <= (1 << 13)\00", align 1
@.str.56 = private unnamed_addr constant [32 x i8] c"num_vec_coeffs %d is too large\0A\00", align 1
@.str.57 = private unnamed_addr constant [88 x i8] c"num_vec_coeffs + offset <= (sizeof(s->channel[c].out) / sizeof((s->channel[c].out)[0]))\00", align 1
@.str.58 = private unnamed_addr constant [21 x i8] c"negative quant step\0A\00", align 1
@.str.59 = private unnamed_addr constant [17 x i8] c"broken subframe\0A\00", align 1
@.str.60 = private unnamed_addr constant [22 x i8] c"Channel transform bit\00", align 1
@.str.61 = private unnamed_addr constant [31 x i8] c"Unknown channel transform type\00", align 1
@.str.62 = private unnamed_addr constant [21 x i8] c"Coupled channels > 6\00", align 1
@default_decorrelation = internal constant [7 x float*] [float* null, float* getelementptr inbounds ([91 x float], [91 x float]* @default_decorrelation_matrices, i32 0, i32 0), float* bitcast (i8* getelementptr (i8, i8* bitcast ([91 x float]* @default_decorrelation_matrices to i8*), i64 4) to float*), float* bitcast (i8* getelementptr (i8, i8* bitcast ([91 x float]* @default_decorrelation_matrices to i8*), i64 20) to float*), float* bitcast (i8* getelementptr (i8, i8* bitcast ([91 x float]* @default_decorrelation_matrices to i8*), i64 56) to float*), float* bitcast (i8* getelementptr (i8, i8* bitcast ([91 x float]* @default_decorrelation_matrices to i8*), i64 120) to float*), float* bitcast (i8* getelementptr (i8, i8* bitcast ([91 x float]* @default_decorrelation_matrices to i8*), i64 220) to float*)], align 16
@default_decorrelation_matrices = internal constant [91 x float] [float 1.000000e+00, float 0x3FE69FFF80000000, float 0xBFE69FFF80000000, float 0x3FE69FFF80000000, float 0x3FE69FFF80000000, float 5.781250e-01, float 0x3FE69FFF80000000, float 0x3FDA3FFF00000000, float 5.781250e-01, float 0xBFE69FFF80000000, float 0x3FDA3FFF00000000, float 5.781250e-01, float 0.000000e+00, float 0xBFEA1FFF80000000, float 5.000000e-01, float 0x3FE4E00080000000, float 5.000000e-01, float 0x3FD13FFF00000000, float 5.000000e-01, float 0x3FD13FFF00000000, float -5.000000e-01, float 0xBFE4E00080000000, float 5.000000e-01, float 0xBFD13FFF00000000, float -5.000000e-01, float 0x3FE4E00080000000, float 5.000000e-01, float 0xBFE4E00080000000, float 5.000000e-01, float 0xBFD13FFF00000000, float 0x3FDC7FFDE0000000, float 0x3FE33FFF00000000, float 0x3FE0600080000000, float 0x3FD7C00100000000, float 0x3FC8FFFBC0000000, float 0x3FDC7FFDE0000000, float 0x3FD7C00100000000, float 0xBFC8FFFBC0000000, float 0xBFE33FFF00000000, float 0xBFE0600080000000, float 0x3FDC7FFDE0000000, float 0.000000e+00, float 0xBFE43FFF00000000, float 0.000000e+00, float 0x3FE43FFF00000000, float 0x3FDC7FFDE0000000, float 0xBFD7C00100000000, float 0xBFC8FFFBC0000000, float 0x3FE33FFF00000000, float 0xBFE0600080000000, float 0x3FDC7FFDE0000000, float 0xBFE33FFF00000000, float 0x3FE0600080000000, float 0xBFD7C00100000000, float 0x3FC8FFFBC0000000, float 0x3FDA3FFF00000000, float 0x3FE1E00080000000, float 5.000000e-01, float 0x3FDA3FFF00000000, float 0x3FD27FFDE0000000, float 0x3FC3000440000000, float 0x3FDA3FFF00000000, float 0x3FDA3FFF00000000, float 0.000000e+00, float 0xBFDA3FFF00000000, float -5.781250e-01, float 0xBFDA3FFF00000000, float 0x3FDA3FFF00000000, float 0x3FC3000440000000, float -5.000000e-01, float 0xBFDA3FFF00000000, float 0x3FD27FFDE0000000, float 0x3FE1E00080000000, float 0x3FDA3FFF00000000, float 0xBFC3000440000000, float -5.000000e-01, float 0x3FDA3FFF00000000, float 0x3FD27FFDE0000000, float 0xBFE1E00080000000, float 0x3FDA3FFF00000000, float 0xBFDA3FFF00000000, float 0.000000e+00, float 0x3FDA3FFF00000000, float -5.781250e-01, float 0x3FDA3FFF00000000, float 0x3FDA3FFF00000000, float 0xBFE1E00080000000, float 5.000000e-01, float 0xBFDA3FFF00000000, float 0x3FD27FFDE0000000, float 0xBFC3000440000000], align 16
@scale_rl_run = internal constant [120 x i8] c"\00\00\00\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\00\01\02\03\04\05\06\07\08\09\0A\00\01\00\01\00\01", align 16
@scale_rl_level = internal constant [120 x i8] c"\00\00\01\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\06\06\06\06\06\06\06\06\06\06\06\07\07\08\08\09\09", align 16
@.str.63 = private unnamed_addr constant [29 x i8] c"invalid scale factor coding\0A\00", align 1
@decode_coeffs.fval_tab = internal constant [16 x i32] [i32 0, i32 1065353216, i32 1073741824, i32 1077936128, i32 1082130432, i32 1084227584, i32 1086324736, i32 1088421888, i32 1090519040, i32 1091567616, i32 1092616192, i32 1093664768, i32 1094713344, i32 1095761920, i32 1096810496, i32 1097859072], align 16
@coef1_run = internal constant [244 x i16] [i16 0, i16 0, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 0, i16 1, i16 2, i16 0, i16 1, i16 2, i16 0, i16 1, i16 2, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 0, i16 0], align 16
@coef1_level = internal constant [244 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 5.000000e+00, float 5.000000e+00, float 5.000000e+00, float 6.000000e+00, float 6.000000e+00, float 6.000000e+00, float 7.000000e+00, float 7.000000e+00, float 7.000000e+00, float 8.000000e+00, float 8.000000e+00, float 9.000000e+00, float 9.000000e+00, float 1.000000e+01, float 1.000000e+01, float 1.100000e+01, float 1.100000e+01, float 1.200000e+01, float 1.200000e+01, float 1.300000e+01, float 1.300000e+01, float 1.400000e+01, float 1.400000e+01, float 1.500000e+01, float 1.500000e+01, float 1.600000e+01, float 1.600000e+01, float 1.700000e+01, float 1.700000e+01, float 1.800000e+01, float 1.800000e+01, float 1.900000e+01, float 1.900000e+01, float 2.000000e+01, float 2.000000e+01, float 2.100000e+01, float 2.100000e+01, float 2.200000e+01, float 2.200000e+01, float 2.300000e+01, float 2.300000e+01, float 2.400000e+01, float 2.400000e+01, float 2.500000e+01, float 2.500000e+01, float 2.600000e+01, float 2.600000e+01, float 2.700000e+01, float 2.700000e+01, float 2.800000e+01, float 2.800000e+01, float 2.900000e+01, float 2.900000e+01, float 3.000000e+01, float 3.000000e+01, float 3.100000e+01, float 3.100000e+01, float 3.200000e+01, float 3.200000e+01, float 3.300000e+01, float 3.300000e+01, float 3.400000e+01, float 3.400000e+01, float 3.500000e+01, float 3.500000e+01, float 3.600000e+01, float 3.600000e+01, float 3.700000e+01, float 3.700000e+01, float 3.800000e+01, float 3.800000e+01, float 3.900000e+01, float 3.900000e+01, float 4.000000e+01, float 4.000000e+01, float 4.100000e+01, float 4.100000e+01, float 4.200000e+01, float 4.200000e+01, float 4.300000e+01, float 4.300000e+01, float 4.400000e+01, float 4.400000e+01, float 4.500000e+01, float 4.500000e+01, float 4.600000e+01, float 4.600000e+01, float 4.700000e+01, float 4.700000e+01, float 4.800000e+01, float 4.800000e+01, float 4.900000e+01, float 4.900000e+01, float 5.000000e+01, float 5.100000e+01, float 5.200000e+01], align 16
@coef0_run = internal constant [272 x i16] [i16 0, i16 0, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 130, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 141, i16 142, i16 143, i16 144, i16 145, i16 146, i16 147, i16 148, i16 149, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 0, i16 1, i16 2, i16 3, i16 4, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0, i16 1, i16 0], align 16
@coef0_level = internal constant [272 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 5.000000e+00, float 5.000000e+00, float 5.000000e+00, float 5.000000e+00, float 5.000000e+00, float 6.000000e+00, float 6.000000e+00, float 7.000000e+00, float 7.000000e+00, float 8.000000e+00, float 8.000000e+00, float 9.000000e+00, float 9.000000e+00, float 1.000000e+01, float 1.000000e+01, float 1.100000e+01, float 1.100000e+01, float 1.200000e+01, float 1.200000e+01, float 1.300000e+01, float 1.300000e+01, float 1.400000e+01, float 1.400000e+01, float 1.500000e+01, float 1.500000e+01, float 1.600000e+01, float 1.600000e+01, float 1.700000e+01, float 1.700000e+01, float 1.800000e+01, float 1.800000e+01, float 1.900000e+01, float 1.900000e+01, float 2.000000e+01, float 2.000000e+01, float 2.100000e+01, float 2.100000e+01, float 2.200000e+01, float 2.200000e+01, float 2.300000e+01, float 2.300000e+01, float 2.400000e+01, float 2.400000e+01, float 2.500000e+01, float 2.500000e+01, float 2.600000e+01, float 2.600000e+01, float 2.700000e+01, float 2.700000e+01, float 2.800000e+01], align 16
@symbol_to_vec2 = internal constant [137 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E !\22#$%&'()*+,-0123456789:;<@ABCDEFGHIJKPQRSTUVWXYZ`abcdefghipqrstuvwx\80\81\82\83\84\85\86\87\90\91\92\93\94\95\96\A0\A1\A2\A3\A4\A5\B0\B1\B2\B3\B4\C0\C1\C2\C3\D0\D1\D2\E0\E1\F0\00", align 16
@symbol_to_vec4 = internal constant [127 x i16] [i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 16, i16 17, i16 18, i16 19, i16 20, i16 32, i16 33, i16 34, i16 35, i16 48, i16 49, i16 50, i16 64, i16 65, i16 80, i16 256, i16 257, i16 258, i16 259, i16 260, i16 272, i16 273, i16 274, i16 275, i16 288, i16 289, i16 290, i16 304, i16 305, i16 320, i16 512, i16 513, i16 514, i16 515, i16 528, i16 529, i16 530, i16 544, i16 545, i16 560, i16 768, i16 769, i16 770, i16 784, i16 785, i16 800, i16 1024, i16 1025, i16 1040, i16 1280, i16 4096, i16 4097, i16 4098, i16 4099, i16 4100, i16 4112, i16 4113, i16 4114, i16 4115, i16 4128, i16 4129, i16 4130, i16 4144, i16 4145, i16 4160, i16 4352, i16 4353, i16 4354, i16 4355, i16 4368, i16 4369, i16 4370, i16 4384, i16 4385, i16 4400, i16 4608, i16 4609, i16 4610, i16 4624, i16 4625, i16 4640, i16 4864, i16 4865, i16 4880, i16 5120, i16 8192, i16 8193, i16 8194, i16 8195, i16 8208, i16 8209, i16 8210, i16 8224, i16 8225, i16 8240, i16 8448, i16 8449, i16 8450, i16 8464, i16 8465, i16 8480, i16 8704, i16 8705, i16 8720, i16 8960, i16 12288, i16 12289, i16 12290, i16 12304, i16 12305, i16 12320, i16 12544, i16 12545, i16 12560, i16 12800, i16 16384, i16 16385, i16 16400, i16 16640, i16 20480, i16 0], align 16
@.str.64 = private unnamed_addr constant [31 x i8] c"Incorrect XMA2 extradata size\0A\00", align 1
@.str.65 = private unnamed_addr constant [31 x i8] c"Incorrect XMA1 extradata size\0A\00", align 1
@.str.66 = private unnamed_addr constant [22 x i8] c"Incorrect XMA config\0A\00", align 1
@.str.67 = private unnamed_addr constant [36 x i8] c"More than %d channels in %d streams\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @wmapro_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !2017 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.WMAProDecodeCtx*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2018, metadata !2019), !dbg !2020
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s, metadata !2021, metadata !2019), !dbg !2022
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2023
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2024
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2024
  %2 = bitcast i8* %1 to %struct.WMAProDecodeCtx*, !dbg !2023
  store %struct.WMAProDecodeCtx* %2, %struct.WMAProDecodeCtx** %s, align 8, !dbg !2022
  %3 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s, align 8, !dbg !2025
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2026
  %call = call i32 @decode_init(%struct.WMAProDecodeCtx* %3, %struct.AVCodecContext* %4, i32 0), !dbg !2027
  ret i32 %call, !dbg !2028
}

; Function Attrs: nounwind uwtable
define internal i32 @wmapro_decode_packet(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2029 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %s = alloca %struct.WMAProDecodeCtx*, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2030, metadata !2019), !dbg !2031
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2032, metadata !2019), !dbg !2033
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2034, metadata !2019), !dbg !2035
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2036, metadata !2019), !dbg !2037
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s, metadata !2038, metadata !2019), !dbg !2039
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2040
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2041
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2041
  %2 = bitcast i8* %1 to %struct.WMAProDecodeCtx*, !dbg !2040
  store %struct.WMAProDecodeCtx* %2, %struct.WMAProDecodeCtx** %s, align 8, !dbg !2039
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !2042, metadata !2019), !dbg !2043
  %3 = load i8*, i8** %data.addr, align 8, !dbg !2044
  %4 = bitcast i8* %3 to %struct.AVFrame*, !dbg !2044
  store %struct.AVFrame* %4, %struct.AVFrame** %frame, align 8, !dbg !2043
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2045, metadata !2019), !dbg !2046
  %5 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s, align 8, !dbg !2047
  %samples_per_frame = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %5, i32 0, i32 12, !dbg !2048
  %6 = load i16, i16* %samples_per_frame, align 8, !dbg !2048
  %conv = zext i16 %6 to i32, !dbg !2047
  %7 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2049
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %7, i32 0, i32 5, !dbg !2050
  store i32 %conv, i32* %nb_samples, align 8, !dbg !2051
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2052
  %9 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2054
  %call = call i32 @ff_get_buffer(%struct.AVCodecContext* %8, %struct.AVFrame* %9, i32 0), !dbg !2055
  store i32 %call, i32* %ret, align 4, !dbg !2056
  %cmp = icmp slt i32 %call, 0, !dbg !2057
  br i1 %cmp, label %if.then, label %if.end, !dbg !2058

if.then:                                          ; preds = %entry
  %10 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s, align 8, !dbg !2059
  %packet_loss = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %10, i32 0, i32 30, !dbg !2061
  store i8 1, i8* %packet_loss, align 4, !dbg !2062
  store i32 0, i32* %retval, align 4, !dbg !2063
  br label %return, !dbg !2063

if.end:                                           ; preds = %entry
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2064
  %12 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s, align 8, !dbg !2065
  %13 = load i8*, i8** %data.addr, align 8, !dbg !2066
  %14 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2067
  %15 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2068
  %call2 = call i32 @decode_packet(%struct.AVCodecContext* %11, %struct.WMAProDecodeCtx* %12, i8* %13, i32* %14, %struct.AVPacket* %15), !dbg !2069
  store i32 %call2, i32* %retval, align 4, !dbg !2070
  br label %return, !dbg !2070

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !2071
  ret i32 %16, !dbg !2071
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @wmapro_decode_end(%struct.AVCodecContext* %avctx) #0 !dbg !2072 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.WMAProDecodeCtx*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2073, metadata !2019), !dbg !2074
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s, metadata !2075, metadata !2019), !dbg !2076
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2077
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2078
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2078
  %2 = bitcast i8* %1 to %struct.WMAProDecodeCtx*, !dbg !2077
  store %struct.WMAProDecodeCtx* %2, %struct.WMAProDecodeCtx** %s, align 8, !dbg !2076
  %3 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s, align 8, !dbg !2079
  %call = call i32 @decode_end(%struct.WMAProDecodeCtx* %3), !dbg !2080
  ret i32 0, !dbg !2081
}

; Function Attrs: nounwind uwtable
define internal void @wmapro_flush(%struct.AVCodecContext* %avctx) #1 !dbg !2082 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.WMAProDecodeCtx*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2083, metadata !2019), !dbg !2084
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s, metadata !2085, metadata !2019), !dbg !2086
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2087
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2088
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2088
  %2 = bitcast i8* %1 to %struct.WMAProDecodeCtx*, !dbg !2087
  store %struct.WMAProDecodeCtx* %2, %struct.WMAProDecodeCtx** %s, align 8, !dbg !2086
  %3 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s, align 8, !dbg !2089
  call void @flush(%struct.WMAProDecodeCtx* %3), !dbg !2090
  ret void, !dbg !2091
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @xma_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !2092 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.XMADecodeCtx*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %start_channels = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2093, metadata !2019), !dbg !2094
  call void @llvm.dbg.declare(metadata %struct.XMADecodeCtx** %s, metadata !2095, metadata !2019), !dbg !2112
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2113
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2114
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2114
  %2 = bitcast i8* %1 to %struct.XMADecodeCtx*, !dbg !2113
  store %struct.XMADecodeCtx* %2, %struct.XMADecodeCtx** %s, align 8, !dbg !2112
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2115, metadata !2019), !dbg !2116
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2117, metadata !2019), !dbg !2118
  call void @llvm.dbg.declare(metadata i32* %start_channels, metadata !2119, metadata !2019), !dbg !2120
  store i32 0, i32* %start_channels, align 4, !dbg !2120
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2121
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 83, !dbg !2123
  %4 = load i32, i32* %channels, align 4, !dbg !2123
  %cmp = icmp sle i32 %4, 0, !dbg !2124
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2125

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2126
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %5, i32 0, i32 16, !dbg !2128
  %6 = load i32, i32* %extradata_size, align 8, !dbg !2128
  %cmp1 = icmp eq i32 %6, 0, !dbg !2129
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2130

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1094995529, i32* %retval, align 4, !dbg !2131
  br label %return, !dbg !2131

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2132
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 4, !dbg !2134
  %8 = load i32, i32* %codec_id, align 8, !dbg !2134
  %cmp2 = icmp eq i32 %8, 88076, !dbg !2135
  br i1 %cmp2, label %land.lhs.true, label %if.else, !dbg !2136

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2137
  %extradata_size3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 16, !dbg !2139
  %10 = load i32, i32* %extradata_size3, align 8, !dbg !2139
  %cmp4 = icmp eq i32 %10, 34, !dbg !2140
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !2141

if.then5:                                         ; preds = %land.lhs.true
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2142
  %channels6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %11, i32 0, i32 83, !dbg !2144
  %12 = load i32, i32* %channels6, align 4, !dbg !2144
  %add = add nsw i32 %12, 1, !dbg !2145
  %div = sdiv i32 %add, 2, !dbg !2146
  %13 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2147
  %num_streams = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %13, i32 0, i32 3, !dbg !2148
  store i32 %div, i32* %num_streams, align 4, !dbg !2149
  br label %if.end51, !dbg !2150

if.else:                                          ; preds = %land.lhs.true, %if.end
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2151
  %codec_id7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %14, i32 0, i32 4, !dbg !2154
  %15 = load i32, i32* %codec_id7, align 8, !dbg !2154
  %cmp8 = icmp eq i32 %15, 88076, !dbg !2155
  br i1 %cmp8, label %land.lhs.true9, label %if.else27, !dbg !2156

land.lhs.true9:                                   ; preds = %if.else
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2157
  %extradata_size10 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 16, !dbg !2159
  %17 = load i32, i32* %extradata_size10, align 8, !dbg !2159
  %cmp11 = icmp sge i32 %17, 2, !dbg !2160
  br i1 %cmp11, label %if.then12, label %if.else27, !dbg !2161

if.then12:                                        ; preds = %land.lhs.true9
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2162
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 15, !dbg !2164
  %19 = load i8*, i8** %extradata, align 8, !dbg !2164
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 1, !dbg !2162
  %20 = load i8, i8* %arrayidx, align 1, !dbg !2162
  %conv = zext i8 %20 to i32, !dbg !2162
  %21 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2165
  %num_streams13 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %21, i32 0, i32 3, !dbg !2166
  store i32 %conv, i32* %num_streams13, align 4, !dbg !2167
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2168
  %extradata_size14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 16, !dbg !2170
  %23 = load i32, i32* %extradata_size14, align 8, !dbg !2170
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2171
  %extradata15 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 15, !dbg !2172
  %25 = load i8*, i8** %extradata15, align 8, !dbg !2172
  %arrayidx16 = getelementptr inbounds i8, i8* %25, i64 0, !dbg !2171
  %26 = load i8, i8* %arrayidx16, align 1, !dbg !2171
  %conv17 = zext i8 %26 to i32, !dbg !2171
  %cmp18 = icmp eq i32 %conv17, 3, !dbg !2173
  %cond = select i1 %cmp18, i32 0, i32 8, !dbg !2174
  %add20 = add nsw i32 32, %cond, !dbg !2175
  %27 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2176
  %num_streams21 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %27, i32 0, i32 3, !dbg !2177
  %28 = load i32, i32* %num_streams21, align 4, !dbg !2177
  %mul = mul nsw i32 4, %28, !dbg !2178
  %add22 = add nsw i32 %add20, %mul, !dbg !2179
  %cmp23 = icmp ne i32 %23, %add22, !dbg !2180
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !2181

if.then25:                                        ; preds = %if.then12
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2182
  %30 = bitcast %struct.AVCodecContext* %29 to i8*, !dbg !2182
  call void (i8*, i32, i8*, ...) @av_log(i8* %30, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.64, i32 0, i32 0)), !dbg !2184
  store i32 -22, i32* %retval, align 4, !dbg !2185
  br label %return, !dbg !2185

if.end26:                                         ; preds = %if.then12
  br label %if.end50, !dbg !2186

if.else27:                                        ; preds = %land.lhs.true9, %if.else
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2187
  %codec_id28 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %31, i32 0, i32 4, !dbg !2190
  %32 = load i32, i32* %codec_id28, align 8, !dbg !2190
  %cmp29 = icmp eq i32 %32, 88075, !dbg !2191
  br i1 %cmp29, label %land.lhs.true31, label %if.else48, !dbg !2192

land.lhs.true31:                                  ; preds = %if.else27
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2193
  %extradata_size32 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i32 0, i32 16, !dbg !2195
  %34 = load i32, i32* %extradata_size32, align 8, !dbg !2195
  %cmp33 = icmp sge i32 %34, 4, !dbg !2196
  br i1 %cmp33, label %if.then35, label %if.else48, !dbg !2197

if.then35:                                        ; preds = %land.lhs.true31
  %35 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2198
  %extradata36 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %35, i32 0, i32 15, !dbg !2200
  %36 = load i8*, i8** %extradata36, align 8, !dbg !2200
  %arrayidx37 = getelementptr inbounds i8, i8* %36, i64 4, !dbg !2198
  %37 = load i8, i8* %arrayidx37, align 1, !dbg !2198
  %conv38 = zext i8 %37 to i32, !dbg !2198
  %38 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2201
  %num_streams39 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %38, i32 0, i32 3, !dbg !2202
  store i32 %conv38, i32* %num_streams39, align 4, !dbg !2203
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2204
  %extradata_size40 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %39, i32 0, i32 16, !dbg !2206
  %40 = load i32, i32* %extradata_size40, align 8, !dbg !2206
  %41 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2207
  %num_streams41 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %41, i32 0, i32 3, !dbg !2208
  %42 = load i32, i32* %num_streams41, align 4, !dbg !2208
  %mul42 = mul nsw i32 20, %42, !dbg !2209
  %add43 = add nsw i32 8, %mul42, !dbg !2210
  %cmp44 = icmp ne i32 %40, %add43, !dbg !2211
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !2212

if.then46:                                        ; preds = %if.then35
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2213
  %44 = bitcast %struct.AVCodecContext* %43 to i8*, !dbg !2213
  call void (i8*, i32, i8*, ...) @av_log(i8* %44, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.65, i32 0, i32 0)), !dbg !2215
  store i32 -22, i32* %retval, align 4, !dbg !2216
  br label %return, !dbg !2216

if.end47:                                         ; preds = %if.then35
  br label %if.end49, !dbg !2217

if.else48:                                        ; preds = %land.lhs.true31, %if.else27
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2218
  %46 = bitcast %struct.AVCodecContext* %45 to i8*, !dbg !2218
  call void (i8*, i32, i8*, ...) @av_log(i8* %46, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i32 0, i32 0)), !dbg !2220
  store i32 -22, i32* %retval, align 4, !dbg !2221
  br label %return, !dbg !2221

if.end49:                                         ; preds = %if.end47
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end26
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then5
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2222
  %channels52 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %47, i32 0, i32 83, !dbg !2224
  %48 = load i32, i32* %channels52, align 4, !dbg !2224
  %cmp53 = icmp sgt i32 %48, 16, !dbg !2225
  br i1 %cmp53, label %if.then59, label %lor.lhs.false55, !dbg !2226

lor.lhs.false55:                                  ; preds = %if.end51
  %49 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2227
  %num_streams56 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %49, i32 0, i32 3, !dbg !2229
  %50 = load i32, i32* %num_streams56, align 4, !dbg !2229
  %cmp57 = icmp sgt i32 %50, 8, !dbg !2230
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !2231

if.then59:                                        ; preds = %lor.lhs.false55, %if.end51
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2232
  %52 = bitcast %struct.AVCodecContext* %51 to i8*, !dbg !2232
  %53 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2234
  %num_streams60 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %53, i32 0, i32 3, !dbg !2235
  %54 = load i32, i32* %num_streams60, align 4, !dbg !2235
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %52, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.67, i32 0, i32 0), i32 16, i32 %54), !dbg !2236
  store i32 -1163346256, i32* %retval, align 4, !dbg !2237
  br label %return, !dbg !2237

if.end61:                                         ; preds = %lor.lhs.false55
  store i32 0, i32* %i, align 4, !dbg !2238
  br label %for.cond, !dbg !2240

for.cond:                                         ; preds = %for.inc, %if.end61
  %55 = load i32, i32* %i, align 4, !dbg !2241
  %56 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2244
  %num_streams62 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %56, i32 0, i32 3, !dbg !2245
  %57 = load i32, i32* %num_streams62, align 4, !dbg !2245
  %cmp63 = icmp slt i32 %55, %57, !dbg !2246
  br i1 %cmp63, label %for.body, label %for.end, !dbg !2247

for.body:                                         ; preds = %for.cond
  %58 = load i32, i32* %i, align 4, !dbg !2248
  %idxprom = sext i32 %58 to i64, !dbg !2250
  %59 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2250
  %xma = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %59, i32 0, i32 0, !dbg !2251
  %arrayidx65 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma, i64 0, i64 %idxprom, !dbg !2250
  %60 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2252
  %61 = load i32, i32* %i, align 4, !dbg !2253
  %call = call i32 @decode_init(%struct.WMAProDecodeCtx* %arrayidx65, %struct.AVCodecContext* %60, i32 %61), !dbg !2254
  store i32 %call, i32* %ret, align 4, !dbg !2255
  %62 = load i32, i32* %ret, align 4, !dbg !2256
  %cmp66 = icmp slt i32 %62, 0, !dbg !2258
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !2259

if.then68:                                        ; preds = %for.body
  %63 = load i32, i32* %ret, align 4, !dbg !2260
  store i32 %63, i32* %retval, align 4, !dbg !2261
  br label %return, !dbg !2261

if.end69:                                         ; preds = %for.body
  %call70 = call %struct.AVFrame* @av_frame_alloc(), !dbg !2262
  %64 = load i32, i32* %i, align 4, !dbg !2263
  %idxprom71 = sext i32 %64 to i64, !dbg !2264
  %65 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2264
  %frames = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %65, i32 0, i32 1, !dbg !2265
  %arrayidx72 = getelementptr inbounds [8 x %struct.AVFrame*], [8 x %struct.AVFrame*]* %frames, i64 0, i64 %idxprom71, !dbg !2264
  store %struct.AVFrame* %call70, %struct.AVFrame** %arrayidx72, align 8, !dbg !2266
  %66 = load i32, i32* %i, align 4, !dbg !2267
  %idxprom73 = sext i32 %66 to i64, !dbg !2269
  %67 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2269
  %frames74 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %67, i32 0, i32 1, !dbg !2270
  %arrayidx75 = getelementptr inbounds [8 x %struct.AVFrame*], [8 x %struct.AVFrame*]* %frames74, i64 0, i64 %idxprom73, !dbg !2269
  %68 = load %struct.AVFrame*, %struct.AVFrame** %arrayidx75, align 8, !dbg !2269
  %tobool = icmp ne %struct.AVFrame* %68, null, !dbg !2269
  br i1 %tobool, label %if.end77, label %if.then76, !dbg !2271

if.then76:                                        ; preds = %if.end69
  store i32 -12, i32* %retval, align 4, !dbg !2272
  br label %return, !dbg !2272

if.end77:                                         ; preds = %if.end69
  %69 = load i32, i32* %i, align 4, !dbg !2273
  %idxprom78 = sext i32 %69 to i64, !dbg !2274
  %70 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2274
  %frames79 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %70, i32 0, i32 1, !dbg !2275
  %arrayidx80 = getelementptr inbounds [8 x %struct.AVFrame*], [8 x %struct.AVFrame*]* %frames79, i64 0, i64 %idxprom78, !dbg !2274
  %71 = load %struct.AVFrame*, %struct.AVFrame** %arrayidx80, align 8, !dbg !2274
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %71, i32 0, i32 5, !dbg !2276
  store i32 512, i32* %nb_samples, align 8, !dbg !2277
  %72 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2278
  %73 = load i32, i32* %i, align 4, !dbg !2280
  %idxprom81 = sext i32 %73 to i64, !dbg !2281
  %74 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2281
  %frames82 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %74, i32 0, i32 1, !dbg !2282
  %arrayidx83 = getelementptr inbounds [8 x %struct.AVFrame*], [8 x %struct.AVFrame*]* %frames82, i64 0, i64 %idxprom81, !dbg !2281
  %75 = load %struct.AVFrame*, %struct.AVFrame** %arrayidx83, align 8, !dbg !2281
  %call84 = call i32 @ff_get_buffer(%struct.AVCodecContext* %72, %struct.AVFrame* %75, i32 0), !dbg !2283
  store i32 %call84, i32* %ret, align 4, !dbg !2284
  %cmp85 = icmp slt i32 %call84, 0, !dbg !2285
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !2286

if.then87:                                        ; preds = %if.end77
  store i32 -12, i32* %retval, align 4, !dbg !2287
  br label %return, !dbg !2287

if.end88:                                         ; preds = %if.end77
  %76 = load i32, i32* %start_channels, align 4, !dbg !2289
  %77 = load i32, i32* %i, align 4, !dbg !2290
  %idxprom89 = sext i32 %77 to i64, !dbg !2291
  %78 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2291
  %start_channel = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %78, i32 0, i32 6, !dbg !2292
  %arrayidx90 = getelementptr inbounds [8 x i32], [8 x i32]* %start_channel, i64 0, i64 %idxprom89, !dbg !2291
  store i32 %76, i32* %arrayidx90, align 4, !dbg !2293
  %79 = load i32, i32* %i, align 4, !dbg !2294
  %idxprom91 = sext i32 %79 to i64, !dbg !2295
  %80 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2295
  %xma92 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %80, i32 0, i32 0, !dbg !2296
  %arrayidx93 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma92, i64 0, i64 %idxprom91, !dbg !2295
  %nb_channels = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %arrayidx93, i32 0, i32 41, !dbg !2297
  %81 = load i8, i8* %nb_channels, align 2, !dbg !2297
  %conv94 = sext i8 %81 to i32, !dbg !2295
  %82 = load i32, i32* %start_channels, align 4, !dbg !2298
  %add95 = add nsw i32 %82, %conv94, !dbg !2298
  store i32 %add95, i32* %start_channels, align 4, !dbg !2298
  br label %for.inc, !dbg !2299

for.inc:                                          ; preds = %if.end88
  %83 = load i32, i32* %i, align 4, !dbg !2300
  %inc = add nsw i32 %83, 1, !dbg !2300
  store i32 %inc, i32* %i, align 4, !dbg !2300
  br label %for.cond, !dbg !2302, !llvm.loop !2303

for.end:                                          ; preds = %for.cond
  %84 = load i32, i32* %ret, align 4, !dbg !2305
  store i32 %84, i32* %retval, align 4, !dbg !2306
  br label %return, !dbg !2306

return:                                           ; preds = %for.end, %if.then87, %if.then76, %if.then68, %if.then59, %if.else48, %if.then46, %if.then25, %if.then
  %85 = load i32, i32* %retval, align 4, !dbg !2307
  ret i32 %85, !dbg !2307
}

; Function Attrs: nounwind uwtable
define internal i32 @xma_decode_packet(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2308 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %s = alloca %struct.XMADecodeCtx*, align 8
  %got_stream_frame_ptr = alloca i32, align 4
  %frame = alloca %struct.AVFrame*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %offset = alloca i32, align 4
  %start_ch = alloca i32, align 4
  %min = alloca [2 x i32], align 4
  %bret = alloca i32, align 4
  %start_ch164 = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2309, metadata !2019), !dbg !2310
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2311, metadata !2019), !dbg !2312
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2313, metadata !2019), !dbg !2314
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2315, metadata !2019), !dbg !2316
  call void @llvm.dbg.declare(metadata %struct.XMADecodeCtx** %s, metadata !2317, metadata !2019), !dbg !2318
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2319
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2320
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2320
  %2 = bitcast i8* %1 to %struct.XMADecodeCtx*, !dbg !2319
  store %struct.XMADecodeCtx* %2, %struct.XMADecodeCtx** %s, align 8, !dbg !2318
  call void @llvm.dbg.declare(metadata i32* %got_stream_frame_ptr, metadata !2321, metadata !2019), !dbg !2322
  store i32 0, i32* %got_stream_frame_ptr, align 4, !dbg !2322
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !2323, metadata !2019), !dbg !2324
  %3 = load i8*, i8** %data.addr, align 8, !dbg !2325
  %4 = bitcast i8* %3 to %struct.AVFrame*, !dbg !2325
  store %struct.AVFrame* %4, %struct.AVFrame** %frame, align 8, !dbg !2324
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2326, metadata !2019), !dbg !2327
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2328, metadata !2019), !dbg !2329
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !2330, metadata !2019), !dbg !2331
  store i32 2147483647, i32* %offset, align 4, !dbg !2331
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2332
  %6 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2333
  %current_stream = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %6, i32 0, i32 2, !dbg !2334
  %7 = load i32, i32* %current_stream, align 32, !dbg !2334
  %idxprom = sext i32 %7 to i64, !dbg !2335
  %8 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2335
  %xma = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %8, i32 0, i32 0, !dbg !2336
  %arrayidx = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma, i64 0, i64 %idxprom, !dbg !2335
  %9 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2337
  %current_stream1 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %9, i32 0, i32 2, !dbg !2338
  %10 = load i32, i32* %current_stream1, align 32, !dbg !2338
  %idxprom2 = sext i32 %10 to i64, !dbg !2339
  %11 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2339
  %frames = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %11, i32 0, i32 1, !dbg !2340
  %arrayidx3 = getelementptr inbounds [8 x %struct.AVFrame*], [8 x %struct.AVFrame*]* %frames, i64 0, i64 %idxprom2, !dbg !2339
  %12 = load %struct.AVFrame*, %struct.AVFrame** %arrayidx3, align 8, !dbg !2339
  %13 = bitcast %struct.AVFrame* %12 to i8*, !dbg !2339
  %14 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2341
  %call = call i32 @decode_packet(%struct.AVCodecContext* %5, %struct.WMAProDecodeCtx* %arrayidx, i8* %13, i32* %got_stream_frame_ptr, %struct.AVPacket* %14), !dbg !2342
  store i32 %call, i32* %ret, align 4, !dbg !2343
  %15 = load i32, i32* %got_stream_frame_ptr, align 4, !dbg !2344
  %tobool = icmp ne i32 %15, 0, !dbg !2344
  br i1 %tobool, label %if.then, label %if.else, !dbg !2346

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %start_ch, metadata !2347, metadata !2019), !dbg !2349
  %16 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2350
  %current_stream4 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %16, i32 0, i32 2, !dbg !2351
  %17 = load i32, i32* %current_stream4, align 32, !dbg !2351
  %idxprom5 = sext i32 %17 to i64, !dbg !2352
  %18 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2352
  %start_channel = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %18, i32 0, i32 6, !dbg !2353
  %arrayidx6 = getelementptr inbounds [8 x i32], [8 x i32]* %start_channel, i64 0, i64 %idxprom5, !dbg !2352
  %19 = load i32, i32* %arrayidx6, align 4, !dbg !2352
  store i32 %19, i32* %start_ch, align 4, !dbg !2349
  %20 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2354
  %current_stream7 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %20, i32 0, i32 2, !dbg !2355
  %21 = load i32, i32* %current_stream7, align 32, !dbg !2355
  %idxprom8 = sext i32 %21 to i64, !dbg !2356
  %22 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2356
  %offset9 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %22, i32 0, i32 5, !dbg !2357
  %arrayidx10 = getelementptr inbounds [8 x i32], [8 x i32]* %offset9, i64 0, i64 %idxprom8, !dbg !2356
  %23 = load i32, i32* %arrayidx10, align 4, !dbg !2356
  %mul = mul nsw i32 %23, 512, !dbg !2358
  %idxprom11 = sext i32 %mul to i64, !dbg !2359
  %24 = load i32, i32* %start_ch, align 4, !dbg !2360
  %add = add nsw i32 %24, 0, !dbg !2361
  %idxprom12 = sext i32 %add to i64, !dbg !2359
  %25 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2359
  %samples = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %25, i32 0, i32 4, !dbg !2362
  %arrayidx13 = getelementptr inbounds [16 x [32768 x float]], [16 x [32768 x float]]* %samples, i64 0, i64 %idxprom12, !dbg !2359
  %arrayidx14 = getelementptr inbounds [32768 x float], [32768 x float]* %arrayidx13, i64 0, i64 %idxprom11, !dbg !2359
  %26 = bitcast float* %arrayidx14 to i8*, !dbg !2363
  %27 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2364
  %current_stream15 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %27, i32 0, i32 2, !dbg !2365
  %28 = load i32, i32* %current_stream15, align 32, !dbg !2365
  %idxprom16 = sext i32 %28 to i64, !dbg !2366
  %29 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2366
  %frames17 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %29, i32 0, i32 1, !dbg !2367
  %arrayidx18 = getelementptr inbounds [8 x %struct.AVFrame*], [8 x %struct.AVFrame*]* %frames17, i64 0, i64 %idxprom16, !dbg !2366
  %30 = load %struct.AVFrame*, %struct.AVFrame** %arrayidx18, align 8, !dbg !2366
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %30, i32 0, i32 2, !dbg !2368
  %31 = load i8**, i8*** %extended_data, align 8, !dbg !2368
  %arrayidx19 = getelementptr inbounds i8*, i8** %31, i64 0, !dbg !2366
  %32 = load i8*, i8** %arrayidx19, align 8, !dbg !2366
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %32, i64 2048, i32 1, i1 false), !dbg !2363
  %33 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2369
  %current_stream20 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %33, i32 0, i32 2, !dbg !2371
  %34 = load i32, i32* %current_stream20, align 32, !dbg !2371
  %idxprom21 = sext i32 %34 to i64, !dbg !2372
  %35 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2372
  %xma22 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %35, i32 0, i32 0, !dbg !2373
  %arrayidx23 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma22, i64 0, i64 %idxprom21, !dbg !2372
  %nb_channels = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %arrayidx23, i32 0, i32 41, !dbg !2374
  %36 = load i8, i8* %nb_channels, align 2, !dbg !2374
  %conv = sext i8 %36 to i32, !dbg !2372
  %cmp = icmp sgt i32 %conv, 1, !dbg !2375
  br i1 %cmp, label %if.then25, label %if.end, !dbg !2376

if.then25:                                        ; preds = %if.then
  %37 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2377
  %current_stream26 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %37, i32 0, i32 2, !dbg !2378
  %38 = load i32, i32* %current_stream26, align 32, !dbg !2378
  %idxprom27 = sext i32 %38 to i64, !dbg !2379
  %39 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2379
  %offset28 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %39, i32 0, i32 5, !dbg !2380
  %arrayidx29 = getelementptr inbounds [8 x i32], [8 x i32]* %offset28, i64 0, i64 %idxprom27, !dbg !2379
  %40 = load i32, i32* %arrayidx29, align 4, !dbg !2379
  %mul30 = mul nsw i32 %40, 512, !dbg !2381
  %idxprom31 = sext i32 %mul30 to i64, !dbg !2382
  %41 = load i32, i32* %start_ch, align 4, !dbg !2383
  %add32 = add nsw i32 %41, 1, !dbg !2384
  %idxprom33 = sext i32 %add32 to i64, !dbg !2382
  %42 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2382
  %samples34 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %42, i32 0, i32 4, !dbg !2385
  %arrayidx35 = getelementptr inbounds [16 x [32768 x float]], [16 x [32768 x float]]* %samples34, i64 0, i64 %idxprom33, !dbg !2382
  %arrayidx36 = getelementptr inbounds [32768 x float], [32768 x float]* %arrayidx35, i64 0, i64 %idxprom31, !dbg !2382
  %43 = bitcast float* %arrayidx36 to i8*, !dbg !2386
  %44 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2387
  %current_stream37 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %44, i32 0, i32 2, !dbg !2388
  %45 = load i32, i32* %current_stream37, align 32, !dbg !2388
  %idxprom38 = sext i32 %45 to i64, !dbg !2389
  %46 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2389
  %frames39 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %46, i32 0, i32 1, !dbg !2390
  %arrayidx40 = getelementptr inbounds [8 x %struct.AVFrame*], [8 x %struct.AVFrame*]* %frames39, i64 0, i64 %idxprom38, !dbg !2389
  %47 = load %struct.AVFrame*, %struct.AVFrame** %arrayidx40, align 8, !dbg !2389
  %extended_data41 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %47, i32 0, i32 2, !dbg !2391
  %48 = load i8**, i8*** %extended_data41, align 8, !dbg !2391
  %arrayidx42 = getelementptr inbounds i8*, i8** %48, i64 1, !dbg !2389
  %49 = load i8*, i8** %arrayidx42, align 8, !dbg !2389
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %49, i64 2048, i32 1, i1 false), !dbg !2386
  br label %if.end, !dbg !2386

if.end:                                           ; preds = %if.then25, %if.then
  %50 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2392
  %current_stream43 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %50, i32 0, i32 2, !dbg !2393
  %51 = load i32, i32* %current_stream43, align 32, !dbg !2393
  %idxprom44 = sext i32 %51 to i64, !dbg !2394
  %52 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2394
  %offset45 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %52, i32 0, i32 5, !dbg !2395
  %arrayidx46 = getelementptr inbounds [8 x i32], [8 x i32]* %offset45, i64 0, i64 %idxprom44, !dbg !2394
  %53 = load i32, i32* %arrayidx46, align 4, !dbg !2396
  %inc = add nsw i32 %53, 1, !dbg !2396
  store i32 %inc, i32* %arrayidx46, align 4, !dbg !2396
  br label %if.end53, !dbg !2397

if.else:                                          ; preds = %entry
  %54 = load i32, i32* %ret, align 4, !dbg !2398
  %cmp47 = icmp slt i32 %54, 0, !dbg !2401
  br i1 %cmp47, label %if.then49, label %if.end52, !dbg !2398

if.then49:                                        ; preds = %if.else
  %55 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2402
  %offset50 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %55, i32 0, i32 5, !dbg !2404
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %offset50, i32 0, i32 0, !dbg !2405
  %56 = bitcast i32* %arraydecay to i8*, !dbg !2405
  call void @llvm.memset.p0i8.i64(i8* %56, i8 0, i64 32, i32 8, i1 false), !dbg !2405
  %57 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2406
  %current_stream51 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %57, i32 0, i32 2, !dbg !2407
  store i32 0, i32* %current_stream51, align 32, !dbg !2408
  %58 = load i32, i32* %ret, align 4, !dbg !2409
  store i32 %58, i32* %retval, align 4, !dbg !2410
  br label %return, !dbg !2410

if.end52:                                         ; preds = %if.else
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end
  %59 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2411
  %current_stream54 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %59, i32 0, i32 2, !dbg !2413
  %60 = load i32, i32* %current_stream54, align 32, !dbg !2413
  %idxprom55 = sext i32 %60 to i64, !dbg !2414
  %61 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2414
  %xma56 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %61, i32 0, i32 0, !dbg !2415
  %arrayidx57 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma56, i64 0, i64 %idxprom55, !dbg !2414
  %packet_done = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %arrayidx57, i32 0, i32 31, !dbg !2416
  %62 = load i8, i8* %packet_done, align 1, !dbg !2416
  %conv58 = zext i8 %62 to i32, !dbg !2414
  %tobool59 = icmp ne i32 %conv58, 0, !dbg !2414
  br i1 %tobool59, label %if.then66, label %lor.lhs.false, !dbg !2417

lor.lhs.false:                                    ; preds = %if.end53
  %63 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2418
  %current_stream60 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %63, i32 0, i32 2, !dbg !2419
  %64 = load i32, i32* %current_stream60, align 32, !dbg !2419
  %idxprom61 = sext i32 %64 to i64, !dbg !2420
  %65 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2420
  %xma62 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %65, i32 0, i32 0, !dbg !2421
  %arrayidx63 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma62, i64 0, i64 %idxprom61, !dbg !2420
  %packet_loss = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %arrayidx63, i32 0, i32 30, !dbg !2422
  %66 = load i8, i8* %packet_loss, align 4, !dbg !2422
  %conv64 = zext i8 %66 to i32, !dbg !2420
  %tobool65 = icmp ne i32 %conv64, 0, !dbg !2420
  br i1 %tobool65, label %if.then66, label %if.end260, !dbg !2423

if.then66:                                        ; preds = %lor.lhs.false, %if.end53
  %67 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2425
  %current_stream67 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %67, i32 0, i32 2, !dbg !2428
  %68 = load i32, i32* %current_stream67, align 32, !dbg !2428
  %idxprom68 = sext i32 %68 to i64, !dbg !2429
  %69 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2429
  %xma69 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %69, i32 0, i32 0, !dbg !2430
  %arrayidx70 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma69, i64 0, i64 %idxprom68, !dbg !2429
  %skip_packets = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %arrayidx70, i32 0, i32 39, !dbg !2431
  %70 = load i8, i8* %skip_packets, align 1, !dbg !2431
  %conv71 = zext i8 %70 to i32, !dbg !2429
  %cmp72 = icmp ne i32 %conv71, 0, !dbg !2432
  br i1 %cmp72, label %if.then74, label %if.end103, !dbg !2433

if.then74:                                        ; preds = %if.then66
  call void @llvm.dbg.declare(metadata [2 x i32]* %min, metadata !2434, metadata !2019), !dbg !2437
  %71 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2438
  %xma75 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %71, i32 0, i32 0, !dbg !2439
  %arrayidx76 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma75, i64 0, i64 0, !dbg !2438
  %skip_packets77 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %arrayidx76, i32 0, i32 39, !dbg !2440
  %72 = load i8, i8* %skip_packets77, align 1, !dbg !2440
  %conv78 = zext i8 %72 to i32, !dbg !2438
  %arrayidx79 = getelementptr inbounds [2 x i32], [2 x i32]* %min, i64 0, i64 0, !dbg !2441
  store i32 %conv78, i32* %arrayidx79, align 4, !dbg !2442
  store i32 0, i32* %i, align 4, !dbg !2443
  %arrayidx80 = getelementptr inbounds [2 x i32], [2 x i32]* %min, i64 0, i64 1, !dbg !2444
  store i32 0, i32* %arrayidx80, align 4, !dbg !2445
  store i32 1, i32* %i, align 4, !dbg !2446
  br label %for.cond, !dbg !2448

for.cond:                                         ; preds = %for.inc, %if.then74
  %73 = load i32, i32* %i, align 4, !dbg !2449
  %74 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2452
  %num_streams = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %74, i32 0, i32 3, !dbg !2453
  %75 = load i32, i32* %num_streams, align 4, !dbg !2453
  %cmp81 = icmp slt i32 %73, %75, !dbg !2454
  br i1 %cmp81, label %for.body, label %for.end, !dbg !2455

for.body:                                         ; preds = %for.cond
  %76 = load i32, i32* %i, align 4, !dbg !2456
  %idxprom83 = sext i32 %76 to i64, !dbg !2459
  %77 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2459
  %xma84 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %77, i32 0, i32 0, !dbg !2460
  %arrayidx85 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma84, i64 0, i64 %idxprom83, !dbg !2459
  %skip_packets86 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %arrayidx85, i32 0, i32 39, !dbg !2461
  %78 = load i8, i8* %skip_packets86, align 1, !dbg !2461
  %conv87 = zext i8 %78 to i32, !dbg !2459
  %arrayidx88 = getelementptr inbounds [2 x i32], [2 x i32]* %min, i64 0, i64 0, !dbg !2462
  %79 = load i32, i32* %arrayidx88, align 4, !dbg !2462
  %cmp89 = icmp slt i32 %conv87, %79, !dbg !2463
  br i1 %cmp89, label %if.then91, label %if.end99, !dbg !2464

if.then91:                                        ; preds = %for.body
  %80 = load i32, i32* %i, align 4, !dbg !2465
  %idxprom92 = sext i32 %80 to i64, !dbg !2467
  %81 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2467
  %xma93 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %81, i32 0, i32 0, !dbg !2468
  %arrayidx94 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma93, i64 0, i64 %idxprom92, !dbg !2467
  %skip_packets95 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %arrayidx94, i32 0, i32 39, !dbg !2469
  %82 = load i8, i8* %skip_packets95, align 1, !dbg !2469
  %conv96 = zext i8 %82 to i32, !dbg !2467
  %arrayidx97 = getelementptr inbounds [2 x i32], [2 x i32]* %min, i64 0, i64 0, !dbg !2470
  store i32 %conv96, i32* %arrayidx97, align 4, !dbg !2471
  %83 = load i32, i32* %i, align 4, !dbg !2472
  %arrayidx98 = getelementptr inbounds [2 x i32], [2 x i32]* %min, i64 0, i64 1, !dbg !2473
  store i32 %83, i32* %arrayidx98, align 4, !dbg !2474
  br label %if.end99, !dbg !2475

if.end99:                                         ; preds = %if.then91, %for.body
  br label %for.inc, !dbg !2476

for.inc:                                          ; preds = %if.end99
  %84 = load i32, i32* %i, align 4, !dbg !2477
  %inc100 = add nsw i32 %84, 1, !dbg !2477
  store i32 %inc100, i32* %i, align 4, !dbg !2477
  br label %for.cond, !dbg !2479, !llvm.loop !2480

for.end:                                          ; preds = %for.cond
  %arrayidx101 = getelementptr inbounds [2 x i32], [2 x i32]* %min, i64 0, i64 1, !dbg !2482
  %85 = load i32, i32* %arrayidx101, align 4, !dbg !2482
  %86 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2483
  %current_stream102 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %86, i32 0, i32 2, !dbg !2484
  store i32 %85, i32* %current_stream102, align 32, !dbg !2485
  br label %if.end103, !dbg !2486

if.end103:                                        ; preds = %for.end, %if.then66
  store i32 0, i32* %i, align 4, !dbg !2487
  br label %for.cond104, !dbg !2489

for.cond104:                                      ; preds = %for.inc127, %if.end103
  %87 = load i32, i32* %i, align 4, !dbg !2490
  %88 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2493
  %num_streams105 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %88, i32 0, i32 3, !dbg !2494
  %89 = load i32, i32* %num_streams105, align 4, !dbg !2494
  %cmp106 = icmp slt i32 %87, %89, !dbg !2495
  br i1 %cmp106, label %for.body108, label %for.end129, !dbg !2496

for.body108:                                      ; preds = %for.cond104
  %90 = load i32, i32* %i, align 4, !dbg !2497
  %idxprom109 = sext i32 %90 to i64, !dbg !2499
  %91 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2499
  %xma110 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %91, i32 0, i32 0, !dbg !2500
  %arrayidx111 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma110, i64 0, i64 %idxprom109, !dbg !2499
  %skip_packets112 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %arrayidx111, i32 0, i32 39, !dbg !2501
  %92 = load i8, i8* %skip_packets112, align 1, !dbg !2501
  %conv113 = zext i8 %92 to i32, !dbg !2499
  %sub = sub nsw i32 %conv113, 1, !dbg !2502
  %cmp114 = icmp sgt i32 0, %sub, !dbg !2503
  br i1 %cmp114, label %cond.true, label %cond.false, !dbg !2504

cond.true:                                        ; preds = %for.body108
  br label %cond.end, !dbg !2505

cond.false:                                       ; preds = %for.body108
  %93 = load i32, i32* %i, align 4, !dbg !2507
  %idxprom116 = sext i32 %93 to i64, !dbg !2509
  %94 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2509
  %xma117 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %94, i32 0, i32 0, !dbg !2510
  %arrayidx118 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma117, i64 0, i64 %idxprom116, !dbg !2509
  %skip_packets119 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %arrayidx118, i32 0, i32 39, !dbg !2511
  %95 = load i8, i8* %skip_packets119, align 1, !dbg !2511
  %conv120 = zext i8 %95 to i32, !dbg !2509
  %sub121 = sub nsw i32 %conv120, 1, !dbg !2512
  br label %cond.end, !dbg !2513

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub121, %cond.false ], !dbg !2514
  %conv122 = trunc i32 %cond to i8, !dbg !2516
  %96 = load i32, i32* %i, align 4, !dbg !2517
  %idxprom123 = sext i32 %96 to i64, !dbg !2518
  %97 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2518
  %xma124 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %97, i32 0, i32 0, !dbg !2519
  %arrayidx125 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma124, i64 0, i64 %idxprom123, !dbg !2518
  %skip_packets126 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %arrayidx125, i32 0, i32 39, !dbg !2520
  store i8 %conv122, i8* %skip_packets126, align 1, !dbg !2521
  br label %for.inc127, !dbg !2522

for.inc127:                                       ; preds = %cond.end
  %98 = load i32, i32* %i, align 4, !dbg !2523
  %inc128 = add nsw i32 %98, 1, !dbg !2523
  store i32 %inc128, i32* %i, align 4, !dbg !2523
  br label %for.cond104, !dbg !2525, !llvm.loop !2526

for.end129:                                       ; preds = %for.cond104
  store i32 0, i32* %i, align 4, !dbg !2528
  br label %for.cond130, !dbg !2530

for.cond130:                                      ; preds = %for.inc147, %for.end129
  %99 = load i32, i32* %i, align 4, !dbg !2531
  %100 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2534
  %num_streams131 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %100, i32 0, i32 3, !dbg !2535
  %101 = load i32, i32* %num_streams131, align 4, !dbg !2535
  %cmp132 = icmp slt i32 %99, %101, !dbg !2536
  br i1 %cmp132, label %for.body134, label %for.end149, !dbg !2537

for.body134:                                      ; preds = %for.cond130
  %102 = load i32, i32* %offset, align 4, !dbg !2538
  %103 = load i32, i32* %i, align 4, !dbg !2540
  %idxprom135 = sext i32 %103 to i64, !dbg !2541
  %104 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2541
  %offset136 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %104, i32 0, i32 5, !dbg !2542
  %arrayidx137 = getelementptr inbounds [8 x i32], [8 x i32]* %offset136, i64 0, i64 %idxprom135, !dbg !2541
  %105 = load i32, i32* %arrayidx137, align 4, !dbg !2541
  %cmp138 = icmp sgt i32 %102, %105, !dbg !2543
  br i1 %cmp138, label %cond.true140, label %cond.false144, !dbg !2544

cond.true140:                                     ; preds = %for.body134
  %106 = load i32, i32* %i, align 4, !dbg !2545
  %idxprom141 = sext i32 %106 to i64, !dbg !2547
  %107 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2547
  %offset142 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %107, i32 0, i32 5, !dbg !2548
  %arrayidx143 = getelementptr inbounds [8 x i32], [8 x i32]* %offset142, i64 0, i64 %idxprom141, !dbg !2547
  %108 = load i32, i32* %arrayidx143, align 4, !dbg !2547
  br label %cond.end145, !dbg !2549

cond.false144:                                    ; preds = %for.body134
  %109 = load i32, i32* %offset, align 4, !dbg !2550
  br label %cond.end145, !dbg !2552

cond.end145:                                      ; preds = %cond.false144, %cond.true140
  %cond146 = phi i32 [ %108, %cond.true140 ], [ %109, %cond.false144 ], !dbg !2553
  store i32 %cond146, i32* %offset, align 4, !dbg !2555
  br label %for.inc147, !dbg !2556

for.inc147:                                       ; preds = %cond.end145
  %110 = load i32, i32* %i, align 4, !dbg !2557
  %inc148 = add nsw i32 %110, 1, !dbg !2557
  store i32 %inc148, i32* %i, align 4, !dbg !2557
  br label %for.cond130, !dbg !2559, !llvm.loop !2560

for.end149:                                       ; preds = %for.cond130
  %111 = load i32, i32* %offset, align 4, !dbg !2562
  %cmp150 = icmp sgt i32 %111, 0, !dbg !2564
  br i1 %cmp150, label %if.then152, label %if.end259, !dbg !2565

if.then152:                                       ; preds = %for.end149
  call void @llvm.dbg.declare(metadata i32* %bret, metadata !2566, metadata !2019), !dbg !2568
  %112 = load i32, i32* %offset, align 4, !dbg !2569
  %mul153 = mul nsw i32 512, %112, !dbg !2570
  %113 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2571
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %113, i32 0, i32 5, !dbg !2572
  store i32 %mul153, i32* %nb_samples, align 8, !dbg !2573
  %114 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2574
  %115 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2576
  %call154 = call i32 @ff_get_buffer(%struct.AVCodecContext* %114, %struct.AVFrame* %115, i32 0), !dbg !2577
  store i32 %call154, i32* %bret, align 4, !dbg !2578
  %cmp155 = icmp slt i32 %call154, 0, !dbg !2579
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !2580

if.then157:                                       ; preds = %if.then152
  %116 = load i32, i32* %bret, align 4, !dbg !2581
  store i32 %116, i32* %retval, align 4, !dbg !2582
  br label %return, !dbg !2582

if.end158:                                        ; preds = %if.then152
  store i32 0, i32* %i, align 4, !dbg !2583
  br label %for.cond159, !dbg !2585

for.cond159:                                      ; preds = %for.inc256, %if.end158
  %117 = load i32, i32* %i, align 4, !dbg !2586
  %118 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2589
  %num_streams160 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %118, i32 0, i32 3, !dbg !2590
  %119 = load i32, i32* %num_streams160, align 4, !dbg !2590
  %cmp161 = icmp slt i32 %117, %119, !dbg !2591
  br i1 %cmp161, label %for.body163, label %for.end258, !dbg !2592

for.body163:                                      ; preds = %for.cond159
  call void @llvm.dbg.declare(metadata i32* %start_ch164, metadata !2593, metadata !2019), !dbg !2595
  %120 = load i32, i32* %i, align 4, !dbg !2596
  %idxprom165 = sext i32 %120 to i64, !dbg !2597
  %121 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2597
  %start_channel166 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %121, i32 0, i32 6, !dbg !2598
  %arrayidx167 = getelementptr inbounds [8 x i32], [8 x i32]* %start_channel166, i64 0, i64 %idxprom165, !dbg !2597
  %122 = load i32, i32* %arrayidx167, align 4, !dbg !2597
  store i32 %122, i32* %start_ch164, align 4, !dbg !2595
  %123 = load i32, i32* %start_ch164, align 4, !dbg !2599
  %add168 = add nsw i32 %123, 0, !dbg !2600
  %idxprom169 = sext i32 %add168 to i64, !dbg !2601
  %124 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2601
  %extended_data170 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %124, i32 0, i32 2, !dbg !2602
  %125 = load i8**, i8*** %extended_data170, align 8, !dbg !2602
  %arrayidx171 = getelementptr inbounds i8*, i8** %125, i64 %idxprom169, !dbg !2601
  %126 = load i8*, i8** %arrayidx171, align 8, !dbg !2601
  %127 = load i32, i32* %start_ch164, align 4, !dbg !2603
  %add172 = add nsw i32 %127, 0, !dbg !2604
  %idxprom173 = sext i32 %add172 to i64, !dbg !2605
  %128 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2605
  %samples174 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %128, i32 0, i32 4, !dbg !2606
  %arrayidx175 = getelementptr inbounds [16 x [32768 x float]], [16 x [32768 x float]]* %samples174, i64 0, i64 %idxprom173, !dbg !2605
  %arraydecay176 = getelementptr inbounds [32768 x float], [32768 x float]* %arrayidx175, i32 0, i32 0, !dbg !2607
  %129 = bitcast float* %arraydecay176 to i8*, !dbg !2607
  %130 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2608
  %nb_samples177 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %130, i32 0, i32 5, !dbg !2609
  %131 = load i32, i32* %nb_samples177, align 8, !dbg !2609
  %mul178 = mul nsw i32 %131, 4, !dbg !2610
  %conv179 = sext i32 %mul178 to i64, !dbg !2608
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %126, i8* %129, i64 %conv179, i32 1, i1 false), !dbg !2607
  %132 = load i32, i32* %i, align 4, !dbg !2611
  %idxprom180 = sext i32 %132 to i64, !dbg !2613
  %133 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2613
  %xma181 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %133, i32 0, i32 0, !dbg !2614
  %arrayidx182 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma181, i64 0, i64 %idxprom180, !dbg !2613
  %nb_channels183 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %arrayidx182, i32 0, i32 41, !dbg !2615
  %134 = load i8, i8* %nb_channels183, align 2, !dbg !2615
  %conv184 = sext i8 %134 to i32, !dbg !2613
  %cmp185 = icmp sgt i32 %conv184, 1, !dbg !2616
  br i1 %cmp185, label %if.then187, label %if.end200, !dbg !2617

if.then187:                                       ; preds = %for.body163
  %135 = load i32, i32* %start_ch164, align 4, !dbg !2618
  %add188 = add nsw i32 %135, 1, !dbg !2619
  %idxprom189 = sext i32 %add188 to i64, !dbg !2620
  %136 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2620
  %extended_data190 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %136, i32 0, i32 2, !dbg !2621
  %137 = load i8**, i8*** %extended_data190, align 8, !dbg !2621
  %arrayidx191 = getelementptr inbounds i8*, i8** %137, i64 %idxprom189, !dbg !2620
  %138 = load i8*, i8** %arrayidx191, align 8, !dbg !2620
  %139 = load i32, i32* %start_ch164, align 4, !dbg !2622
  %add192 = add nsw i32 %139, 1, !dbg !2623
  %idxprom193 = sext i32 %add192 to i64, !dbg !2624
  %140 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2624
  %samples194 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %140, i32 0, i32 4, !dbg !2625
  %arrayidx195 = getelementptr inbounds [16 x [32768 x float]], [16 x [32768 x float]]* %samples194, i64 0, i64 %idxprom193, !dbg !2624
  %arraydecay196 = getelementptr inbounds [32768 x float], [32768 x float]* %arrayidx195, i32 0, i32 0, !dbg !2626
  %141 = bitcast float* %arraydecay196 to i8*, !dbg !2626
  %142 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2627
  %nb_samples197 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %142, i32 0, i32 5, !dbg !2628
  %143 = load i32, i32* %nb_samples197, align 8, !dbg !2628
  %mul198 = mul nsw i32 %143, 4, !dbg !2629
  %conv199 = sext i32 %mul198 to i64, !dbg !2627
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %141, i64 %conv199, i32 1, i1 false), !dbg !2626
  br label %if.end200, !dbg !2626

if.end200:                                        ; preds = %if.then187, %for.body163
  %144 = load i32, i32* %offset, align 4, !dbg !2630
  %145 = load i32, i32* %i, align 4, !dbg !2631
  %idxprom201 = sext i32 %145 to i64, !dbg !2632
  %146 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2632
  %offset202 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %146, i32 0, i32 5, !dbg !2633
  %arrayidx203 = getelementptr inbounds [8 x i32], [8 x i32]* %offset202, i64 0, i64 %idxprom201, !dbg !2632
  %147 = load i32, i32* %arrayidx203, align 4, !dbg !2634
  %sub204 = sub nsw i32 %147, %144, !dbg !2634
  store i32 %sub204, i32* %arrayidx203, align 4, !dbg !2634
  %148 = load i32, i32* %i, align 4, !dbg !2635
  %idxprom205 = sext i32 %148 to i64, !dbg !2637
  %149 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2637
  %offset206 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %149, i32 0, i32 5, !dbg !2638
  %arrayidx207 = getelementptr inbounds [8 x i32], [8 x i32]* %offset206, i64 0, i64 %idxprom205, !dbg !2637
  %150 = load i32, i32* %arrayidx207, align 4, !dbg !2637
  %tobool208 = icmp ne i32 %150, 0, !dbg !2637
  br i1 %tobool208, label %if.then209, label %if.end255, !dbg !2639

if.then209:                                       ; preds = %if.end200
  %151 = load i32, i32* %start_ch164, align 4, !dbg !2640
  %add210 = add nsw i32 %151, 0, !dbg !2642
  %idxprom211 = sext i32 %add210 to i64, !dbg !2643
  %152 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2643
  %samples212 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %152, i32 0, i32 4, !dbg !2644
  %arrayidx213 = getelementptr inbounds [16 x [32768 x float]], [16 x [32768 x float]]* %samples212, i64 0, i64 %idxprom211, !dbg !2643
  %arraydecay214 = getelementptr inbounds [32768 x float], [32768 x float]* %arrayidx213, i32 0, i32 0, !dbg !2645
  %153 = bitcast float* %arraydecay214 to i8*, !dbg !2645
  %154 = load i32, i32* %start_ch164, align 4, !dbg !2646
  %add215 = add nsw i32 %154, 0, !dbg !2647
  %idxprom216 = sext i32 %add215 to i64, !dbg !2648
  %155 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2648
  %samples217 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %155, i32 0, i32 4, !dbg !2649
  %arrayidx218 = getelementptr inbounds [16 x [32768 x float]], [16 x [32768 x float]]* %samples217, i64 0, i64 %idxprom216, !dbg !2648
  %arraydecay219 = getelementptr inbounds [32768 x float], [32768 x float]* %arrayidx218, i32 0, i32 0, !dbg !2648
  %156 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2650
  %nb_samples220 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %156, i32 0, i32 5, !dbg !2651
  %157 = load i32, i32* %nb_samples220, align 8, !dbg !2651
  %idx.ext = sext i32 %157 to i64, !dbg !2652
  %add.ptr = getelementptr inbounds float, float* %arraydecay219, i64 %idx.ext, !dbg !2652
  %158 = bitcast float* %add.ptr to i8*, !dbg !2645
  %159 = load i32, i32* %i, align 4, !dbg !2653
  %idxprom221 = sext i32 %159 to i64, !dbg !2654
  %160 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2654
  %offset222 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %160, i32 0, i32 5, !dbg !2655
  %arrayidx223 = getelementptr inbounds [8 x i32], [8 x i32]* %offset222, i64 0, i64 %idxprom221, !dbg !2654
  %161 = load i32, i32* %arrayidx223, align 4, !dbg !2654
  %mul224 = mul nsw i32 %161, 4, !dbg !2656
  %mul225 = mul nsw i32 %mul224, 512, !dbg !2657
  %conv226 = sext i32 %mul225 to i64, !dbg !2654
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %153, i8* %158, i64 %conv226, i32 4, i1 false), !dbg !2645
  %162 = load i32, i32* %i, align 4, !dbg !2658
  %idxprom227 = sext i32 %162 to i64, !dbg !2660
  %163 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2660
  %xma228 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %163, i32 0, i32 0, !dbg !2661
  %arrayidx229 = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma228, i64 0, i64 %idxprom227, !dbg !2660
  %nb_channels230 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %arrayidx229, i32 0, i32 41, !dbg !2662
  %164 = load i8, i8* %nb_channels230, align 2, !dbg !2662
  %conv231 = sext i8 %164 to i32, !dbg !2660
  %cmp232 = icmp sgt i32 %conv231, 1, !dbg !2663
  br i1 %cmp232, label %if.then234, label %if.end254, !dbg !2664

if.then234:                                       ; preds = %if.then209
  %165 = load i32, i32* %start_ch164, align 4, !dbg !2665
  %add235 = add nsw i32 %165, 1, !dbg !2666
  %idxprom236 = sext i32 %add235 to i64, !dbg !2667
  %166 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2667
  %samples237 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %166, i32 0, i32 4, !dbg !2668
  %arrayidx238 = getelementptr inbounds [16 x [32768 x float]], [16 x [32768 x float]]* %samples237, i64 0, i64 %idxprom236, !dbg !2667
  %arraydecay239 = getelementptr inbounds [32768 x float], [32768 x float]* %arrayidx238, i32 0, i32 0, !dbg !2669
  %167 = bitcast float* %arraydecay239 to i8*, !dbg !2669
  %168 = load i32, i32* %start_ch164, align 4, !dbg !2670
  %add240 = add nsw i32 %168, 1, !dbg !2671
  %idxprom241 = sext i32 %add240 to i64, !dbg !2672
  %169 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2672
  %samples242 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %169, i32 0, i32 4, !dbg !2673
  %arrayidx243 = getelementptr inbounds [16 x [32768 x float]], [16 x [32768 x float]]* %samples242, i64 0, i64 %idxprom241, !dbg !2672
  %arraydecay244 = getelementptr inbounds [32768 x float], [32768 x float]* %arrayidx243, i32 0, i32 0, !dbg !2672
  %170 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2674
  %nb_samples245 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %170, i32 0, i32 5, !dbg !2675
  %171 = load i32, i32* %nb_samples245, align 8, !dbg !2675
  %idx.ext246 = sext i32 %171 to i64, !dbg !2676
  %add.ptr247 = getelementptr inbounds float, float* %arraydecay244, i64 %idx.ext246, !dbg !2676
  %172 = bitcast float* %add.ptr247 to i8*, !dbg !2669
  %173 = load i32, i32* %i, align 4, !dbg !2677
  %idxprom248 = sext i32 %173 to i64, !dbg !2678
  %174 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2678
  %offset249 = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %174, i32 0, i32 5, !dbg !2679
  %arrayidx250 = getelementptr inbounds [8 x i32], [8 x i32]* %offset249, i64 0, i64 %idxprom248, !dbg !2678
  %175 = load i32, i32* %arrayidx250, align 4, !dbg !2678
  %mul251 = mul nsw i32 %175, 4, !dbg !2680
  %mul252 = mul nsw i32 %mul251, 512, !dbg !2681
  %conv253 = sext i32 %mul252 to i64, !dbg !2678
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %167, i8* %172, i64 %conv253, i32 4, i1 false), !dbg !2669
  br label %if.end254, !dbg !2669

if.end254:                                        ; preds = %if.then234, %if.then209
  br label %if.end255, !dbg !2682

if.end255:                                        ; preds = %if.end254, %if.end200
  br label %for.inc256, !dbg !2683

for.inc256:                                       ; preds = %if.end255
  %176 = load i32, i32* %i, align 4, !dbg !2684
  %inc257 = add nsw i32 %176, 1, !dbg !2684
  store i32 %inc257, i32* %i, align 4, !dbg !2684
  br label %for.cond159, !dbg !2686, !llvm.loop !2687

for.end258:                                       ; preds = %for.cond159
  %177 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2689
  store i32 1, i32* %177, align 4, !dbg !2690
  br label %if.end259, !dbg !2691

if.end259:                                        ; preds = %for.end258, %for.end149
  br label %if.end260, !dbg !2692

if.end260:                                        ; preds = %if.end259, %lor.lhs.false
  %178 = load i32, i32* %ret, align 4, !dbg !2693
  store i32 %178, i32* %retval, align 4, !dbg !2694
  br label %return, !dbg !2694

return:                                           ; preds = %if.end260, %if.then157, %if.then49
  %179 = load i32, i32* %retval, align 4, !dbg !2695
  ret i32 %179, !dbg !2695
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @xma_decode_end(%struct.AVCodecContext* %avctx) #0 !dbg !2696 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.XMADecodeCtx*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2697, metadata !2019), !dbg !2698
  call void @llvm.dbg.declare(metadata %struct.XMADecodeCtx** %s, metadata !2699, metadata !2019), !dbg !2700
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2701
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2702
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2702
  %2 = bitcast i8* %1 to %struct.XMADecodeCtx*, !dbg !2701
  store %struct.XMADecodeCtx* %2, %struct.XMADecodeCtx** %s, align 8, !dbg !2700
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2703, metadata !2019), !dbg !2704
  store i32 0, i32* %i, align 4, !dbg !2705
  br label %for.cond, !dbg !2707

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !2708
  %4 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2711
  %num_streams = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %4, i32 0, i32 3, !dbg !2712
  %5 = load i32, i32* %num_streams, align 4, !dbg !2712
  %cmp = icmp slt i32 %3, %5, !dbg !2713
  br i1 %cmp, label %for.body, label %for.end, !dbg !2714

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !2715
  %idxprom = sext i32 %6 to i64, !dbg !2717
  %7 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2717
  %xma = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %7, i32 0, i32 0, !dbg !2718
  %arrayidx = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma, i64 0, i64 %idxprom, !dbg !2717
  %call = call i32 @decode_end(%struct.WMAProDecodeCtx* %arrayidx), !dbg !2719
  %8 = load i32, i32* %i, align 4, !dbg !2720
  %idxprom1 = sext i32 %8 to i64, !dbg !2721
  %9 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2721
  %frames = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %9, i32 0, i32 1, !dbg !2722
  %arrayidx2 = getelementptr inbounds [8 x %struct.AVFrame*], [8 x %struct.AVFrame*]* %frames, i64 0, i64 %idxprom1, !dbg !2721
  call void @av_frame_free(%struct.AVFrame** %arrayidx2), !dbg !2723
  br label %for.inc, !dbg !2724

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !2725
  %inc = add nsw i32 %10, 1, !dbg !2725
  store i32 %inc, i32* %i, align 4, !dbg !2725
  br label %for.cond, !dbg !2727, !llvm.loop !2728

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !2730
}

; Function Attrs: nounwind uwtable
define internal void @xma_flush(%struct.AVCodecContext* %avctx) #1 !dbg !2731 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s = alloca %struct.XMADecodeCtx*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2732, metadata !2019), !dbg !2733
  call void @llvm.dbg.declare(metadata %struct.XMADecodeCtx** %s, metadata !2734, metadata !2019), !dbg !2735
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2736
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2737
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2737
  %2 = bitcast i8* %1 to %struct.XMADecodeCtx*, !dbg !2736
  store %struct.XMADecodeCtx* %2, %struct.XMADecodeCtx** %s, align 8, !dbg !2735
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2738, metadata !2019), !dbg !2739
  store i32 0, i32* %i, align 4, !dbg !2740
  br label %for.cond, !dbg !2742

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !2743
  %4 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2746
  %num_streams = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %4, i32 0, i32 3, !dbg !2747
  %5 = load i32, i32* %num_streams, align 4, !dbg !2747
  %cmp = icmp slt i32 %3, %5, !dbg !2748
  br i1 %cmp, label %for.body, label %for.end, !dbg !2749

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !2750
  %idxprom = sext i32 %6 to i64, !dbg !2751
  %7 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2751
  %xma = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %7, i32 0, i32 0, !dbg !2752
  %arrayidx = getelementptr inbounds [8 x %struct.WMAProDecodeCtx], [8 x %struct.WMAProDecodeCtx]* %xma, i64 0, i64 %idxprom, !dbg !2751
  call void @flush(%struct.WMAProDecodeCtx* %arrayidx), !dbg !2753
  br label %for.inc, !dbg !2753

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !2754
  %inc = add nsw i32 %8, 1, !dbg !2754
  store i32 %inc, i32* %i, align 4, !dbg !2754
  br label %for.cond, !dbg !2756, !llvm.loop !2757

for.end:                                          ; preds = %for.cond
  %9 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2759
  %offset = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %9, i32 0, i32 5, !dbg !2760
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %offset, i32 0, i32 0, !dbg !2761
  %10 = bitcast i32* %arraydecay to i8*, !dbg !2761
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 32, i32 8, i1 false), !dbg !2761
  %11 = load %struct.XMADecodeCtx*, %struct.XMADecodeCtx** %s, align 8, !dbg !2762
  %current_stream = getelementptr inbounds %struct.XMADecodeCtx, %struct.XMADecodeCtx* %11, i32 0, i32 2, !dbg !2763
  store i32 0, i32* %current_stream, align 32, !dbg !2764
  ret void, !dbg !2765
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_init(%struct.WMAProDecodeCtx* %s, %struct.AVCodecContext* %avctx, i32 %num_stream) #0 !dbg !1661 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2766, metadata !2019), !dbg !2771
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !2776, metadata !2019), !dbg !2777
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !2778, metadata !2019), !dbg !2779
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %num_stream.addr = alloca i32, align 4
  %edata_ptr = alloca i8*, align 8
  %channel_mask = alloca i32, align 4
  %i = alloca i32, align 4
  %bits = alloca i32, align 4
  %log2_max_num_subframes = alloca i32, align 4
  %num_possible_block_sizes = alloca i32, align 4
  %mask = alloca i32, align 4
  %subframe_len = alloca i32, align 4
  %x = alloca i32, align 4
  %band = alloca i32, align 4
  %rate = alloca i32, align 4
  %offset = alloca i32, align 4
  %b = alloca i32, align 4
  %x337 = alloca i32, align 4
  %offset338 = alloca i32, align 4
  %v = alloca i32, align 4
  %win_idx = alloca i32, align 4
  %block_size = alloca i32, align 4
  %cutoff = alloca i32, align 4
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !2780, metadata !2019), !dbg !2781
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2782, metadata !2019), !dbg !2783
  store i32 %num_stream, i32* %num_stream.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_stream.addr, metadata !2784, metadata !2019), !dbg !2785
  call void @llvm.dbg.declare(metadata i8** %edata_ptr, metadata !2786, metadata !2019), !dbg !2787
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2788
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 15, !dbg !2789
  %1 = load i8*, i8** %extradata, align 8, !dbg !2789
  store i8* %1, i8** %edata_ptr, align 8, !dbg !2787
  call void @llvm.dbg.declare(metadata i32* %channel_mask, metadata !2790, metadata !2019), !dbg !2791
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2792, metadata !2019), !dbg !2793
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !2794, metadata !2019), !dbg !2795
  call void @llvm.dbg.declare(metadata i32* %log2_max_num_subframes, metadata !2796, metadata !2019), !dbg !2797
  call void @llvm.dbg.declare(metadata i32* %num_possible_block_sizes, metadata !2798, metadata !2019), !dbg !2799
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2800
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 4, !dbg !2802
  %3 = load i32, i32* %codec_id, align 8, !dbg !2802
  %cmp = icmp eq i32 %3, 88075, !dbg !2803
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2804

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2805
  %codec_id1 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 4, !dbg !2807
  %5 = load i32, i32* %codec_id1, align 8, !dbg !2807
  %cmp2 = icmp eq i32 %5, 88076, !dbg !2808
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2809

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2810
  %block_align = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 87, !dbg !2811
  store i32 2048, i32* %block_align, align 4, !dbg !2812
  br label %if.end, !dbg !2810

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2813
  %block_align3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 87, !dbg !2815
  %8 = load i32, i32* %block_align3, align 4, !dbg !2815
  %tobool = icmp ne i32 %8, 0, !dbg !2813
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !2816

if.then4:                                         ; preds = %if.end
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2817
  %10 = bitcast %struct.AVCodecContext* %9 to i8*, !dbg !2817
  call void (i8*, i32, i8*, ...) @av_log(i8* %10, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i32 0, i32 0)), !dbg !2819
  store i32 -22, i32* %retval, align 4, !dbg !2820
  br label %return, !dbg !2820

if.end5:                                          ; preds = %if.end
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2821
  %12 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2822
  %avctx6 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %12, i32 0, i32 0, !dbg !2823
  store %struct.AVCodecContext* %11, %struct.AVCodecContext** %avctx6, align 32, !dbg !2824
  %13 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2825
  %pb = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %13, i32 0, i32 3, !dbg !2826
  %14 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2827
  %frame_data = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %14, i32 0, i32 2, !dbg !2828
  %arraydecay = getelementptr inbounds [32832 x i8], [32832 x i8]* %frame_data, i32 0, i32 0, !dbg !2827
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %arraydecay, i32 32768), !dbg !2829
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2830
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %15, i32 0, i32 84, !dbg !2831
  store i32 8, i32* %sample_fmt, align 8, !dbg !2832
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2833
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !2833
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 48, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0)), !dbg !2834
  store i32 0, i32* %i, align 4, !dbg !2835
  br label %for.cond, !dbg !2837

for.cond:                                         ; preds = %for.inc, %if.end5
  %18 = load i32, i32* %i, align 4, !dbg !2838
  %19 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2841
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %19, i32 0, i32 16, !dbg !2842
  %20 = load i32, i32* %extradata_size, align 8, !dbg !2842
  %cmp7 = icmp slt i32 %18, %20, !dbg !2843
  br i1 %cmp7, label %for.body, label %for.end, !dbg !2844

for.body:                                         ; preds = %for.cond
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2845
  %22 = bitcast %struct.AVCodecContext* %21 to i8*, !dbg !2845
  %23 = load i32, i32* %i, align 4, !dbg !2846
  %idxprom = sext i32 %23 to i64, !dbg !2847
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2847
  %extradata8 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 15, !dbg !2848
  %25 = load i8*, i8** %extradata8, align 8, !dbg !2848
  %arrayidx = getelementptr inbounds i8, i8* %25, i64 %idxprom, !dbg !2847
  %26 = load i8, i8* %arrayidx, align 1, !dbg !2847
  %conv = zext i8 %26 to i32, !dbg !2847
  call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 48, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i32 %conv), !dbg !2849
  br label %for.inc, !dbg !2849

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !2850
  %inc = add nsw i32 %27, 1, !dbg !2850
  store i32 %inc, i32* %i, align 4, !dbg !2850
  br label %for.cond, !dbg !2852, !llvm.loop !2853

for.end:                                          ; preds = %for.cond
  %28 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2855
  %29 = bitcast %struct.AVCodecContext* %28 to i8*, !dbg !2855
  call void (i8*, i32, i8*, ...) @av_log(i8* %29, i32 48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0)), !dbg !2856
  %30 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2857
  %codec_id9 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %30, i32 0, i32 4, !dbg !2859
  %31 = load i32, i32* %codec_id9, align 8, !dbg !2859
  %cmp10 = icmp eq i32 %31, 88076, !dbg !2860
  br i1 %cmp10, label %land.lhs.true, label %if.else21, !dbg !2861

land.lhs.true:                                    ; preds = %for.end
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2862
  %extradata_size12 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %32, i32 0, i32 16, !dbg !2864
  %33 = load i32, i32* %extradata_size12, align 8, !dbg !2864
  %cmp13 = icmp eq i32 %33, 34, !dbg !2865
  br i1 %cmp13, label %if.then15, label %if.else21, !dbg !2866

if.then15:                                        ; preds = %land.lhs.true
  %34 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2867
  %decode_flags = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %34, i32 0, i32 8, !dbg !2869
  store i32 4310, i32* %decode_flags, align 32, !dbg !2870
  %35 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2871
  %bits_per_sample = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %35, i32 0, i32 11, !dbg !2872
  store i8 16, i8* %bits_per_sample, align 2, !dbg !2873
  store i32 0, i32* %channel_mask, align 4, !dbg !2874
  %36 = load i32, i32* %num_stream.addr, align 4, !dbg !2875
  %add = add nsw i32 %36, 1, !dbg !2877
  %mul = mul nsw i32 %add, 2, !dbg !2878
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2879
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i32 0, i32 83, !dbg !2880
  %38 = load i32, i32* %channels, align 4, !dbg !2880
  %cmp16 = icmp sgt i32 %mul, %38, !dbg !2881
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !2882

if.then18:                                        ; preds = %if.then15
  %39 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2883
  %nb_channels = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %39, i32 0, i32 41, !dbg !2884
  store i8 1, i8* %nb_channels, align 2, !dbg !2885
  br label %if.end20, !dbg !2883

if.else:                                          ; preds = %if.then15
  %40 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2886
  %nb_channels19 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %40, i32 0, i32 41, !dbg !2887
  store i8 2, i8* %nb_channels19, align 2, !dbg !2888
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then18
  br label %if.end88, !dbg !2889

if.else21:                                        ; preds = %land.lhs.true, %for.end
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2890
  %codec_id22 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 4, !dbg !2893
  %42 = load i32, i32* %codec_id22, align 8, !dbg !2893
  %cmp23 = icmp eq i32 %42, 88076, !dbg !2894
  br i1 %cmp23, label %if.then25, label %if.else39, !dbg !2890

if.then25:                                        ; preds = %if.else21
  %43 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2895
  %decode_flags26 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %43, i32 0, i32 8, !dbg !2897
  store i32 4310, i32* %decode_flags26, align 32, !dbg !2898
  %44 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2899
  %bits_per_sample27 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %44, i32 0, i32 11, !dbg !2900
  store i8 16, i8* %bits_per_sample27, align 2, !dbg !2901
  store i32 0, i32* %channel_mask, align 4, !dbg !2902
  %45 = load i8*, i8** %edata_ptr, align 8, !dbg !2903
  %arrayidx28 = getelementptr inbounds i8, i8* %45, i64 0, !dbg !2903
  %46 = load i8, i8* %arrayidx28, align 1, !dbg !2903
  %conv29 = zext i8 %46 to i32, !dbg !2903
  %cmp30 = icmp eq i32 %conv29, 3, !dbg !2904
  %cond = select i1 %cmp30, i32 0, i32 8, !dbg !2905
  %add32 = add nsw i32 32, %cond, !dbg !2906
  %47 = load i32, i32* %num_stream.addr, align 4, !dbg !2907
  %mul33 = mul nsw i32 4, %47, !dbg !2908
  %add34 = add nsw i32 %add32, %mul33, !dbg !2909
  %add35 = add nsw i32 %add34, 0, !dbg !2910
  %idxprom36 = sext i32 %add35 to i64, !dbg !2911
  %48 = load i8*, i8** %edata_ptr, align 8, !dbg !2911
  %arrayidx37 = getelementptr inbounds i8, i8* %48, i64 %idxprom36, !dbg !2911
  %49 = load i8, i8* %arrayidx37, align 1, !dbg !2911
  %50 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2912
  %nb_channels38 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %50, i32 0, i32 41, !dbg !2913
  store i8 %49, i8* %nb_channels38, align 2, !dbg !2914
  br label %if.end87, !dbg !2915

if.else39:                                        ; preds = %if.else21
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2916
  %codec_id40 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %51, i32 0, i32 4, !dbg !2919
  %52 = load i32, i32* %codec_id40, align 8, !dbg !2919
  %cmp41 = icmp eq i32 %52, 88075, !dbg !2920
  br i1 %cmp41, label %if.then43, label %if.else52, !dbg !2916

if.then43:                                        ; preds = %if.else39
  %53 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2921
  %decode_flags44 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %53, i32 0, i32 8, !dbg !2923
  store i32 4310, i32* %decode_flags44, align 32, !dbg !2924
  %54 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2925
  %bits_per_sample45 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %54, i32 0, i32 11, !dbg !2926
  store i8 16, i8* %bits_per_sample45, align 2, !dbg !2927
  store i32 0, i32* %channel_mask, align 4, !dbg !2928
  %55 = load i32, i32* %num_stream.addr, align 4, !dbg !2929
  %mul46 = mul nsw i32 20, %55, !dbg !2930
  %add47 = add nsw i32 8, %mul46, !dbg !2931
  %add48 = add nsw i32 %add47, 17, !dbg !2932
  %idxprom49 = sext i32 %add48 to i64, !dbg !2933
  %56 = load i8*, i8** %edata_ptr, align 8, !dbg !2933
  %arrayidx50 = getelementptr inbounds i8, i8* %56, i64 %idxprom49, !dbg !2933
  %57 = load i8, i8* %arrayidx50, align 1, !dbg !2933
  %58 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2934
  %nb_channels51 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %58, i32 0, i32 41, !dbg !2935
  store i8 %57, i8* %nb_channels51, align 2, !dbg !2936
  br label %if.end86, !dbg !2937

if.else52:                                        ; preds = %if.else39
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2938
  %codec_id53 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %59, i32 0, i32 4, !dbg !2941
  %60 = load i32, i32* %codec_id53, align 8, !dbg !2941
  %cmp54 = icmp eq i32 %60, 86053, !dbg !2942
  br i1 %cmp54, label %land.lhs.true56, label %if.else84, !dbg !2943

land.lhs.true56:                                  ; preds = %if.else52
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2944
  %extradata_size57 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %61, i32 0, i32 16, !dbg !2946
  %62 = load i32, i32* %extradata_size57, align 8, !dbg !2946
  %cmp58 = icmp sge i32 %62, 18, !dbg !2947
  br i1 %cmp58, label %if.then60, label %if.else84, !dbg !2948

if.then60:                                        ; preds = %land.lhs.true56
  %63 = load i8*, i8** %edata_ptr, align 8, !dbg !2949
  %add.ptr = getelementptr inbounds i8, i8* %63, i64 14, !dbg !2951
  %64 = bitcast i8* %add.ptr to %union.unaligned_16*, !dbg !2952
  %l = bitcast %union.unaligned_16* %64 to i16*, !dbg !2952
  %65 = load i16, i16* %l, align 1, !dbg !2952
  %conv61 = zext i16 %65 to i32, !dbg !2953
  %66 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2954
  %decode_flags62 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %66, i32 0, i32 8, !dbg !2955
  store i32 %conv61, i32* %decode_flags62, align 32, !dbg !2956
  %67 = load i8*, i8** %edata_ptr, align 8, !dbg !2957
  %add.ptr63 = getelementptr inbounds i8, i8* %67, i64 2, !dbg !2958
  %68 = bitcast i8* %add.ptr63 to %union.unaligned_32*, !dbg !2959
  %l64 = bitcast %union.unaligned_32* %68 to i32*, !dbg !2959
  %69 = load i32, i32* %l64, align 1, !dbg !2959
  store i32 %69, i32* %channel_mask, align 4, !dbg !2960
  %70 = load i8*, i8** %edata_ptr, align 8, !dbg !2961
  %71 = bitcast i8* %70 to %union.unaligned_16*, !dbg !2962
  %l65 = bitcast %union.unaligned_16* %71 to i16*, !dbg !2962
  %72 = load i16, i16* %l65, align 1, !dbg !2962
  %conv66 = trunc i16 %72 to i8, !dbg !2963
  %73 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2964
  %bits_per_sample67 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %73, i32 0, i32 11, !dbg !2965
  store i8 %conv66, i8* %bits_per_sample67, align 2, !dbg !2966
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2967
  %channels68 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %74, i32 0, i32 83, !dbg !2968
  %75 = load i32, i32* %channels68, align 4, !dbg !2968
  %conv69 = trunc i32 %75 to i8, !dbg !2967
  %76 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2969
  %nb_channels70 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %76, i32 0, i32 41, !dbg !2970
  store i8 %conv69, i8* %nb_channels70, align 2, !dbg !2971
  %77 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2972
  %bits_per_sample71 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %77, i32 0, i32 11, !dbg !2974
  %78 = load i8, i8* %bits_per_sample71, align 2, !dbg !2974
  %conv72 = zext i8 %78 to i32, !dbg !2972
  %cmp73 = icmp sgt i32 %conv72, 32, !dbg !2975
  br i1 %cmp73, label %if.then80, label %lor.lhs.false75, !dbg !2976

lor.lhs.false75:                                  ; preds = %if.then60
  %79 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2977
  %bits_per_sample76 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %79, i32 0, i32 11, !dbg !2979
  %80 = load i8, i8* %bits_per_sample76, align 2, !dbg !2979
  %conv77 = zext i8 %80 to i32, !dbg !2977
  %cmp78 = icmp slt i32 %conv77, 1, !dbg !2980
  br i1 %cmp78, label %if.then80, label %if.end83, !dbg !2981

if.then80:                                        ; preds = %lor.lhs.false75, %if.then60
  %81 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2982
  %82 = bitcast %struct.AVCodecContext* %81 to i8*, !dbg !2982
  %83 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !2984
  %bits_per_sample81 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %83, i32 0, i32 11, !dbg !2985
  %84 = load i8, i8* %bits_per_sample81, align 2, !dbg !2985
  %conv82 = zext i8 %84 to i32, !dbg !2984
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %82, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i32 0, i32 0), i32 %conv82), !dbg !2986
  store i32 -1163346256, i32* %retval, align 4, !dbg !2987
  br label %return, !dbg !2987

if.end83:                                         ; preds = %lor.lhs.false75
  br label %if.end85, !dbg !2988

if.else84:                                        ; preds = %land.lhs.true56, %if.else52
  %85 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2989
  %86 = bitcast %struct.AVCodecContext* %85 to i8*, !dbg !2989
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %86, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i32 0, i32 0)), !dbg !2991
  store i32 -1163346256, i32* %retval, align 4, !dbg !2992
  br label %return, !dbg !2992

if.end85:                                         ; preds = %if.end83
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then43
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then25
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end20
  %87 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2993
  %block_align89 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %87, i32 0, i32 87, !dbg !2994
  %88 = load i32, i32* %block_align89, align 4, !dbg !2994
  %or = or i32 %88, 1, !dbg !2995
  %89 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !2996
  %sub = sub nsw i32 31, %89, !dbg !2997
  %add90 = add nsw i32 %sub, 4, !dbg !2998
  %conv91 = trunc i32 %add90 to i16, !dbg !2999
  %90 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3000
  %log2_frame_size = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %90, i32 0, i32 13, !dbg !3001
  store i16 %conv91, i16* %log2_frame_size, align 2, !dbg !3002
  %91 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3003
  %log2_frame_size92 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %91, i32 0, i32 13, !dbg !3005
  %92 = load i16, i16* %log2_frame_size92, align 2, !dbg !3005
  %conv93 = zext i16 %92 to i32, !dbg !3003
  %cmp94 = icmp sgt i32 %conv93, 25, !dbg !3006
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !3007

if.then96:                                        ; preds = %if.end88
  %93 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3008
  %94 = bitcast %struct.AVCodecContext* %93 to i8*, !dbg !3008
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %94, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i32 0, i32 0)), !dbg !3010
  store i32 -1163346256, i32* %retval, align 4, !dbg !3011
  br label %return, !dbg !3011

if.end97:                                         ; preds = %if.end88
  %95 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3012
  %codec_id98 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %95, i32 0, i32 4, !dbg !3014
  %96 = load i32, i32* %codec_id98, align 8, !dbg !3014
  %cmp99 = icmp ne i32 %96, 86053, !dbg !3015
  br i1 %cmp99, label %if.then101, label %if.else102, !dbg !3016

if.then101:                                       ; preds = %if.end97
  %97 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3017
  %skip_frame = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %97, i32 0, i32 37, !dbg !3018
  store i8 0, i8* %skip_frame, align 1, !dbg !3019
  br label %if.end104, !dbg !3017

if.else102:                                       ; preds = %if.end97
  %98 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3020
  %skip_frame103 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %98, i32 0, i32 37, !dbg !3021
  store i8 1, i8* %skip_frame103, align 1, !dbg !3022
  br label %if.end104

if.end104:                                        ; preds = %if.else102, %if.then101
  %99 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3023
  %packet_loss = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %99, i32 0, i32 30, !dbg !3024
  store i8 1, i8* %packet_loss, align 4, !dbg !3025
  %100 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3026
  %decode_flags105 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %100, i32 0, i32 8, !dbg !3027
  %101 = load i32, i32* %decode_flags105, align 32, !dbg !3027
  %and = and i32 %101, 64, !dbg !3028
  %conv106 = trunc i32 %and to i8, !dbg !3029
  %102 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3030
  %len_prefix = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %102, i32 0, i32 9, !dbg !3031
  store i8 %conv106, i8* %len_prefix, align 4, !dbg !3032
  %103 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3033
  %codec_id107 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %103, i32 0, i32 4, !dbg !3035
  %104 = load i32, i32* %codec_id107, align 8, !dbg !3035
  %cmp108 = icmp eq i32 %104, 86053, !dbg !3036
  br i1 %cmp108, label %if.then110, label %if.else117, !dbg !3037

if.then110:                                       ; preds = %if.end104
  %105 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3038
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %105, i32 0, i32 82, !dbg !3040
  %106 = load i32, i32* %sample_rate, align 8, !dbg !3040
  %107 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3041
  %decode_flags111 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %107, i32 0, i32 8, !dbg !3042
  %108 = load i32, i32* %decode_flags111, align 32, !dbg !3042
  %call = call i32 @ff_wma_get_frame_len_bits(i32 %106, i32 3, i32 %108), !dbg !3043
  store i32 %call, i32* %bits, align 4, !dbg !3044
  %109 = load i32, i32* %bits, align 4, !dbg !3045
  %cmp112 = icmp sgt i32 %109, 13, !dbg !3047
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !3048

if.then114:                                       ; preds = %if.then110
  %110 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3049
  %111 = bitcast %struct.AVCodecContext* %110 to i8*, !dbg !3049
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %111, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i32 0, i32 0)), !dbg !3051
  store i32 -1163346256, i32* %retval, align 4, !dbg !3052
  br label %return, !dbg !3052

if.end115:                                        ; preds = %if.then110
  %112 = load i32, i32* %bits, align 4, !dbg !3053
  %shl = shl i32 1, %112, !dbg !3054
  %conv116 = trunc i32 %shl to i16, !dbg !3055
  %113 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3056
  %samples_per_frame = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %113, i32 0, i32 12, !dbg !3057
  store i16 %conv116, i16* %samples_per_frame, align 8, !dbg !3058
  br label %if.end119, !dbg !3059

if.else117:                                       ; preds = %if.end104
  %114 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3060
  %samples_per_frame118 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %114, i32 0, i32 12, !dbg !3062
  store i16 512, i16* %samples_per_frame118, align 8, !dbg !3063
  br label %if.end119

if.end119:                                        ; preds = %if.else117, %if.end115
  %115 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3064
  %decode_flags120 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %115, i32 0, i32 8, !dbg !3065
  %116 = load i32, i32* %decode_flags120, align 32, !dbg !3065
  %and121 = and i32 %116, 56, !dbg !3066
  %shr = lshr i32 %and121, 3, !dbg !3067
  store i32 %shr, i32* %log2_max_num_subframes, align 4, !dbg !3068
  %117 = load i32, i32* %log2_max_num_subframes, align 4, !dbg !3069
  %shl122 = shl i32 1, %117, !dbg !3070
  %conv123 = trunc i32 %shl122 to i8, !dbg !3071
  %118 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3072
  %max_num_subframes = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %118, i32 0, i32 15, !dbg !3073
  store i8 %conv123, i8* %max_num_subframes, align 1, !dbg !3074
  %119 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3075
  %max_num_subframes124 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %119, i32 0, i32 15, !dbg !3077
  %120 = load i8, i8* %max_num_subframes124, align 1, !dbg !3077
  %conv125 = zext i8 %120 to i32, !dbg !3075
  %cmp126 = icmp eq i32 %conv125, 16, !dbg !3078
  br i1 %cmp126, label %if.then133, label %lor.lhs.false128, !dbg !3079

lor.lhs.false128:                                 ; preds = %if.end119
  %121 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3080
  %max_num_subframes129 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %121, i32 0, i32 15, !dbg !3082
  %122 = load i8, i8* %max_num_subframes129, align 1, !dbg !3082
  %conv130 = zext i8 %122 to i32, !dbg !3080
  %cmp131 = icmp eq i32 %conv130, 4, !dbg !3083
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !3084

if.then133:                                       ; preds = %lor.lhs.false128, %if.end119
  %123 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3085
  %max_subframe_len_bit = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %123, i32 0, i32 17, !dbg !3086
  store i8 1, i8* %max_subframe_len_bit, align 1, !dbg !3087
  br label %if.end134, !dbg !3085

if.end134:                                        ; preds = %if.then133, %lor.lhs.false128
  %124 = load i32, i32* %log2_max_num_subframes, align 4, !dbg !3088
  %or135 = or i32 %124, 1, !dbg !3089
  %125 = call i32 @llvm.ctlz.i32(i32 %or135, i1 true), !dbg !3090
  %sub136 = sub nsw i32 31, %125, !dbg !3091
  %add137 = add nsw i32 %sub136, 1, !dbg !3092
  %conv138 = trunc i32 %add137 to i8, !dbg !3093
  %126 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3094
  %subframe_len_bits = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %126, i32 0, i32 16, !dbg !3095
  store i8 %conv138, i8* %subframe_len_bits, align 2, !dbg !3096
  %127 = load i32, i32* %log2_max_num_subframes, align 4, !dbg !3097
  %add139 = add nsw i32 %127, 1, !dbg !3098
  store i32 %add139, i32* %num_possible_block_sizes, align 4, !dbg !3099
  %128 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3100
  %samples_per_frame140 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %128, i32 0, i32 12, !dbg !3101
  %129 = load i16, i16* %samples_per_frame140, align 8, !dbg !3101
  %conv141 = zext i16 %129 to i32, !dbg !3100
  %130 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3102
  %max_num_subframes142 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %130, i32 0, i32 15, !dbg !3103
  %131 = load i8, i8* %max_num_subframes142, align 1, !dbg !3103
  %conv143 = zext i8 %131 to i32, !dbg !3102
  %div = sdiv i32 %conv141, %conv143, !dbg !3104
  %conv144 = trunc i32 %div to i16, !dbg !3100
  %132 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3105
  %min_samples_per_subframe = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %132, i32 0, i32 18, !dbg !3106
  store i16 %conv144, i16* %min_samples_per_subframe, align 16, !dbg !3107
  %133 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3108
  %decode_flags145 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %133, i32 0, i32 8, !dbg !3109
  %134 = load i32, i32* %decode_flags145, align 32, !dbg !3109
  %and146 = and i32 %134, 128, !dbg !3110
  %conv147 = trunc i32 %and146 to i8, !dbg !3111
  %135 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3112
  %dynamic_range_compression = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %135, i32 0, i32 10, !dbg !3113
  store i8 %conv147, i8* %dynamic_range_compression, align 1, !dbg !3114
  %136 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3115
  %max_num_subframes148 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %136, i32 0, i32 15, !dbg !3117
  %137 = load i8, i8* %max_num_subframes148, align 1, !dbg !3117
  %conv149 = zext i8 %137 to i32, !dbg !3115
  %cmp150 = icmp sgt i32 %conv149, 32, !dbg !3118
  br i1 %cmp150, label %if.then152, label %if.end155, !dbg !3119

if.then152:                                       ; preds = %if.end134
  %138 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3120
  %139 = bitcast %struct.AVCodecContext* %138 to i8*, !dbg !3120
  %140 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3122
  %max_num_subframes153 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %140, i32 0, i32 15, !dbg !3123
  %141 = load i8, i8* %max_num_subframes153, align 1, !dbg !3123
  %conv154 = zext i8 %141 to i32, !dbg !3122
  call void (i8*, i32, i8*, ...) @av_log(i8* %139, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i32 0, i32 0), i32 %conv154), !dbg !3124
  store i32 -1094995529, i32* %retval, align 4, !dbg !3125
  br label %return, !dbg !3125

if.end155:                                        ; preds = %if.end134
  %142 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3126
  %min_samples_per_subframe156 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %142, i32 0, i32 18, !dbg !3128
  %143 = load i16, i16* %min_samples_per_subframe156, align 16, !dbg !3128
  %conv157 = zext i16 %143 to i32, !dbg !3126
  %cmp158 = icmp slt i32 %conv157, 64, !dbg !3129
  br i1 %cmp158, label %if.then160, label %if.end163, !dbg !3130

if.then160:                                       ; preds = %if.end155
  %144 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3131
  %145 = bitcast %struct.AVCodecContext* %144 to i8*, !dbg !3131
  %146 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3133
  %min_samples_per_subframe161 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %146, i32 0, i32 18, !dbg !3134
  %147 = load i16, i16* %min_samples_per_subframe161, align 16, !dbg !3134
  %conv162 = zext i16 %147 to i32, !dbg !3133
  call void (i8*, i32, i8*, ...) @av_log(i8* %145, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i32 0, i32 0), i32 %conv162), !dbg !3135
  store i32 -1094995529, i32* %retval, align 4, !dbg !3136
  br label %return, !dbg !3136

if.end163:                                        ; preds = %if.end155
  %148 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3137
  %avctx164 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %148, i32 0, i32 0, !dbg !3139
  %149 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx164, align 32, !dbg !3139
  %sample_rate165 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %149, i32 0, i32 82, !dbg !3140
  %150 = load i32, i32* %sample_rate165, align 8, !dbg !3140
  %cmp166 = icmp sle i32 %150, 0, !dbg !3141
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !3142

if.then168:                                       ; preds = %if.end163
  %151 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3143
  %152 = bitcast %struct.AVCodecContext* %151 to i8*, !dbg !3143
  call void (i8*, i32, i8*, ...) @av_log(i8* %152, i32 16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i32 0, i32 0)), !dbg !3145
  store i32 -1094995529, i32* %retval, align 4, !dbg !3146
  br label %return, !dbg !3146

if.end169:                                        ; preds = %if.end163
  %153 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3147
  %nb_channels170 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %153, i32 0, i32 41, !dbg !3149
  %154 = load i8, i8* %nb_channels170, align 2, !dbg !3149
  %conv171 = sext i8 %154 to i32, !dbg !3147
  %cmp172 = icmp sle i32 %conv171, 0, !dbg !3150
  br i1 %cmp172, label %if.then174, label %if.else177, !dbg !3151

if.then174:                                       ; preds = %if.end169
  %155 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3152
  %156 = bitcast %struct.AVCodecContext* %155 to i8*, !dbg !3152
  %157 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3154
  %nb_channels175 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %157, i32 0, i32 41, !dbg !3155
  %158 = load i8, i8* %nb_channels175, align 2, !dbg !3155
  %conv176 = sext i8 %158 to i32, !dbg !3154
  call void (i8*, i32, i8*, ...) @av_log(i8* %156, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i32 0, i32 0), i32 %conv176), !dbg !3156
  store i32 -1094995529, i32* %retval, align 4, !dbg !3157
  br label %return, !dbg !3157

if.else177:                                       ; preds = %if.end169
  %159 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3158
  %codec_id178 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %159, i32 0, i32 4, !dbg !3160
  %160 = load i32, i32* %codec_id178, align 8, !dbg !3160
  %cmp179 = icmp ne i32 %160, 86053, !dbg !3161
  br i1 %cmp179, label %land.lhs.true181, label %if.else189, !dbg !3162

land.lhs.true181:                                 ; preds = %if.else177
  %161 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3163
  %nb_channels182 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %161, i32 0, i32 41, !dbg !3165
  %162 = load i8, i8* %nb_channels182, align 2, !dbg !3165
  %conv183 = sext i8 %162 to i32, !dbg !3163
  %cmp184 = icmp sgt i32 %conv183, 2, !dbg !3166
  br i1 %cmp184, label %if.then186, label %if.else189, !dbg !3167

if.then186:                                       ; preds = %land.lhs.true181
  %163 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3168
  %164 = bitcast %struct.AVCodecContext* %163 to i8*, !dbg !3168
  %165 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3170
  %nb_channels187 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %165, i32 0, i32 41, !dbg !3171
  %166 = load i8, i8* %nb_channels187, align 2, !dbg !3171
  %conv188 = sext i8 %166 to i32, !dbg !3170
  call void (i8*, i32, i8*, ...) @av_log(i8* %164, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.20, i32 0, i32 0), i32 %conv188), !dbg !3172
  store i32 -1094995529, i32* %retval, align 4, !dbg !3173
  br label %return, !dbg !3173

if.else189:                                       ; preds = %land.lhs.true181, %if.else177
  %167 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3174
  %nb_channels190 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %167, i32 0, i32 41, !dbg !3176
  %168 = load i8, i8* %nb_channels190, align 2, !dbg !3176
  %conv191 = sext i8 %168 to i32, !dbg !3174
  %cmp192 = icmp sgt i32 %conv191, 8, !dbg !3177
  br i1 %cmp192, label %if.then194, label %if.end195, !dbg !3178

if.then194:                                       ; preds = %if.else189
  %169 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3179
  %170 = bitcast %struct.AVCodecContext* %169 to i8*, !dbg !3179
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %170, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i32 0, i32 0), i32 8), !dbg !3181
  store i32 -1163346256, i32* %retval, align 4, !dbg !3182
  br label %return, !dbg !3182

if.end195:                                        ; preds = %if.else189
  br label %if.end196

if.end196:                                        ; preds = %if.end195
  br label %if.end197

if.end197:                                        ; preds = %if.end196
  store i32 0, i32* %i, align 4, !dbg !3183
  br label %for.cond198, !dbg !3185

for.cond198:                                      ; preds = %for.inc207, %if.end197
  %171 = load i32, i32* %i, align 4, !dbg !3186
  %172 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3189
  %nb_channels199 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %172, i32 0, i32 41, !dbg !3190
  %173 = load i8, i8* %nb_channels199, align 2, !dbg !3190
  %conv200 = sext i8 %173 to i32, !dbg !3189
  %cmp201 = icmp slt i32 %171, %conv200, !dbg !3191
  br i1 %cmp201, label %for.body203, label %for.end209, !dbg !3192

for.body203:                                      ; preds = %for.cond198
  %174 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3193
  %samples_per_frame204 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %174, i32 0, i32 12, !dbg !3194
  %175 = load i16, i16* %samples_per_frame204, align 8, !dbg !3194
  %176 = load i32, i32* %i, align 4, !dbg !3195
  %idxprom205 = sext i32 %176 to i64, !dbg !3196
  %177 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3196
  %channel = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %177, i32 0, i32 52, !dbg !3197
  %arrayidx206 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel, i64 0, i64 %idxprom205, !dbg !3196
  %prev_block_len = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx206, i32 0, i32 0, !dbg !3198
  store i16 %175, i16* %prev_block_len, align 32, !dbg !3199
  br label %for.inc207, !dbg !3196

for.inc207:                                       ; preds = %for.body203
  %178 = load i32, i32* %i, align 4, !dbg !3200
  %inc208 = add nsw i32 %178, 1, !dbg !3200
  store i32 %inc208, i32* %i, align 4, !dbg !3200
  br label %for.cond198, !dbg !3202, !llvm.loop !3203

for.end209:                                       ; preds = %for.cond198
  %179 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3205
  %lfe_channel = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %179, i32 0, i32 14, !dbg !3206
  store i8 -1, i8* %lfe_channel, align 4, !dbg !3207
  %180 = load i32, i32* %channel_mask, align 4, !dbg !3208
  %and210 = and i32 %180, 8, !dbg !3210
  %tobool211 = icmp ne i32 %and210, 0, !dbg !3210
  br i1 %tobool211, label %if.then212, label %if.end226, !dbg !3211

if.then212:                                       ; preds = %for.end209
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !3212, metadata !2019), !dbg !3214
  store i32 1, i32* %mask, align 4, !dbg !3215
  br label %for.cond213, !dbg !3217

for.cond213:                                      ; preds = %for.inc223, %if.then212
  %181 = load i32, i32* %mask, align 4, !dbg !3218
  %cmp214 = icmp ult i32 %181, 16, !dbg !3221
  br i1 %cmp214, label %for.body216, label %for.end225, !dbg !3222

for.body216:                                      ; preds = %for.cond213
  %182 = load i32, i32* %channel_mask, align 4, !dbg !3223
  %183 = load i32, i32* %mask, align 4, !dbg !3226
  %and217 = and i32 %182, %183, !dbg !3227
  %tobool218 = icmp ne i32 %and217, 0, !dbg !3227
  br i1 %tobool218, label %if.then219, label %if.end222, !dbg !3228

if.then219:                                       ; preds = %for.body216
  %184 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3229
  %lfe_channel220 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %184, i32 0, i32 14, !dbg !3230
  %185 = load i8, i8* %lfe_channel220, align 4, !dbg !3231
  %inc221 = add i8 %185, 1, !dbg !3231
  store i8 %inc221, i8* %lfe_channel220, align 4, !dbg !3231
  br label %if.end222, !dbg !3231

if.end222:                                        ; preds = %if.then219, %for.body216
  br label %for.inc223, !dbg !3232

for.inc223:                                       ; preds = %if.end222
  %186 = load i32, i32* %mask, align 4, !dbg !3233
  %shl224 = shl i32 %186, 1, !dbg !3233
  store i32 %shl224, i32* %mask, align 4, !dbg !3233
  br label %for.cond213, !dbg !3235, !llvm.loop !3236

for.end225:                                       ; preds = %for.cond213
  br label %if.end226, !dbg !3238

if.end226:                                        ; preds = %for.end225, %for.end209
  br label %do.body, !dbg !3239, !llvm.loop !3240

do.body:                                          ; preds = %if.end226
  store [2 x i16]* getelementptr inbounds ([616 x [2 x i16]], [616 x [2 x i16]]* @decode_init.table, i32 0, i32 0), [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @sf_vlc, i32 0, i32 1), align 8, !dbg !3241
  store i32 616, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @sf_vlc, i32 0, i32 3), align 4, !dbg !3244
  %call227 = call i32 @ff_init_vlc_sparse(%struct.VLC* @sf_vlc, i32 8, i32 121, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @scale_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([121 x i16]* @scale_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3245
  br label %do.end, !dbg !3246

do.end:                                           ; preds = %do.body
  br label %do.body228, !dbg !3247, !llvm.loop !3248

do.body228:                                       ; preds = %do.end
  store [2 x i16]* getelementptr inbounds ([1406 x [2 x i16]], [1406 x [2 x i16]]* @decode_init.table.22, i32 0, i32 0), [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @sf_rl_vlc, i32 0, i32 1), align 8, !dbg !3249
  store i32 1406, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @sf_rl_vlc, i32 0, i32 3), align 4, !dbg !3252
  %call229 = call i32 @ff_init_vlc_sparse(%struct.VLC* @sf_rl_vlc, i32 9, i32 120, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @scale_rl_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([120 x i32]* @scale_rl_huffcodes to i8*), i32 4, i32 4, i8* null, i32 0, i32 0, i32 4), !dbg !3253
  br label %do.end230, !dbg !3254

do.end230:                                        ; preds = %do.body228
  br label %do.body231, !dbg !3255, !llvm.loop !3256

do.body231:                                       ; preds = %do.end230
  store [2 x i16]* getelementptr inbounds ([2108 x [2 x i16]], [2108 x [2 x i16]]* @decode_init.table.23, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([2 x %struct.VLC], [2 x %struct.VLC]* @coef_vlc, i64 0, i64 0, i32 1), align 8, !dbg !3257
  store i32 2108, i32* getelementptr inbounds ([2 x %struct.VLC], [2 x %struct.VLC]* @coef_vlc, i64 0, i64 0, i32 3), align 4, !dbg !3260
  %call232 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([2 x %struct.VLC], [2 x %struct.VLC]* @coef_vlc, i64 0, i64 0), i32 9, i32 272, i8* getelementptr inbounds ([272 x i8], [272 x i8]* @coef0_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([272 x i32]* @coef0_huffcodes to i8*), i32 4, i32 4, i8* null, i32 0, i32 0, i32 4), !dbg !3261
  br label %do.end233, !dbg !3262

do.end233:                                        ; preds = %do.body231
  br label %do.body234, !dbg !3263, !llvm.loop !3264

do.body234:                                       ; preds = %do.end233
  store [2 x i16]* getelementptr inbounds ([3912 x [2 x i16]], [3912 x [2 x i16]]* @decode_init.table.24, i32 0, i32 0), [2 x i16]** getelementptr inbounds ([2 x %struct.VLC], [2 x %struct.VLC]* @coef_vlc, i64 0, i64 1, i32 1), align 8, !dbg !3265
  store i32 3912, i32* getelementptr inbounds ([2 x %struct.VLC], [2 x %struct.VLC]* @coef_vlc, i64 0, i64 1, i32 3), align 4, !dbg !3268
  %call235 = call i32 @ff_init_vlc_sparse(%struct.VLC* getelementptr inbounds ([2 x %struct.VLC], [2 x %struct.VLC]* @coef_vlc, i64 0, i64 1), i32 9, i32 244, i8* getelementptr inbounds ([244 x i8], [244 x i8]* @coef1_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([244 x i32]* @coef1_huffcodes to i8*), i32 4, i32 4, i8* null, i32 0, i32 0, i32 4), !dbg !3269
  br label %do.end236, !dbg !3270

do.end236:                                        ; preds = %do.body234
  br label %do.body237, !dbg !3271, !llvm.loop !3272

do.body237:                                       ; preds = %do.end236
  store [2 x i16]* getelementptr inbounds ([604 x [2 x i16]], [604 x [2 x i16]]* @decode_init.table.25, i32 0, i32 0), [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vec4_vlc, i32 0, i32 1), align 8, !dbg !3273
  store i32 604, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @vec4_vlc, i32 0, i32 3), align 4, !dbg !3276
  %call238 = call i32 @ff_init_vlc_sparse(%struct.VLC* @vec4_vlc, i32 9, i32 127, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @vec4_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([127 x i16]* @vec4_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3277
  br label %do.end239, !dbg !3278

do.end239:                                        ; preds = %do.body237
  br label %do.body240, !dbg !3279, !llvm.loop !3280

do.body240:                                       ; preds = %do.end239
  store [2 x i16]* getelementptr inbounds ([562 x [2 x i16]], [562 x [2 x i16]]* @decode_init.table.26, i32 0, i32 0), [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vec2_vlc, i32 0, i32 1), align 8, !dbg !3281
  store i32 562, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @vec2_vlc, i32 0, i32 3), align 4, !dbg !3284
  %call241 = call i32 @ff_init_vlc_sparse(%struct.VLC* @vec2_vlc, i32 9, i32 137, i8* getelementptr inbounds ([137 x i8], [137 x i8]* @vec2_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([137 x i16]* @vec2_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3285
  br label %do.end242, !dbg !3286

do.end242:                                        ; preds = %do.body240
  br label %do.body243, !dbg !3287, !llvm.loop !3288

do.body243:                                       ; preds = %do.end242
  store [2 x i16]* getelementptr inbounds ([562 x [2 x i16]], [562 x [2 x i16]]* @decode_init.table.27, i32 0, i32 0), [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vec1_vlc, i32 0, i32 1), align 8, !dbg !3289
  store i32 562, i32* getelementptr inbounds (%struct.VLC, %struct.VLC* @vec1_vlc, i32 0, i32 3), align 4, !dbg !3292
  %call244 = call i32 @ff_init_vlc_sparse(%struct.VLC* @vec1_vlc, i32 9, i32 101, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @vec1_huffbits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([101 x i16]* @vec1_huffcodes to i8*), i32 2, i32 2, i8* null, i32 0, i32 0, i32 4), !dbg !3293
  br label %do.end245, !dbg !3294

do.end245:                                        ; preds = %do.body243
  store i32 0, i32* %i, align 4, !dbg !3295
  br label %for.cond246, !dbg !3297

for.cond246:                                      ; preds = %for.inc322, %do.end245
  %187 = load i32, i32* %i, align 4, !dbg !3298
  %188 = load i32, i32* %num_possible_block_sizes, align 4, !dbg !3301
  %cmp247 = icmp slt i32 %187, %188, !dbg !3302
  br i1 %cmp247, label %for.body249, label %for.end324, !dbg !3303

for.body249:                                      ; preds = %for.cond246
  call void @llvm.dbg.declare(metadata i32* %subframe_len, metadata !3304, metadata !2019), !dbg !3306
  %189 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3307
  %samples_per_frame250 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %189, i32 0, i32 12, !dbg !3308
  %190 = load i16, i16* %samples_per_frame250, align 8, !dbg !3308
  %conv251 = zext i16 %190 to i32, !dbg !3307
  %191 = load i32, i32* %i, align 4, !dbg !3309
  %shr252 = ashr i32 %conv251, %191, !dbg !3310
  store i32 %shr252, i32* %subframe_len, align 4, !dbg !3306
  call void @llvm.dbg.declare(metadata i32* %x, metadata !3311, metadata !2019), !dbg !3312
  call void @llvm.dbg.declare(metadata i32* %band, metadata !3313, metadata !2019), !dbg !3314
  store i32 1, i32* %band, align 4, !dbg !3314
  call void @llvm.dbg.declare(metadata i32* %rate, metadata !3315, metadata !2019), !dbg !3316
  %192 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3317
  %call253 = call i32 @get_rate(%struct.AVCodecContext* %192), !dbg !3318
  store i32 %call253, i32* %rate, align 4, !dbg !3316
  %193 = load i32, i32* %i, align 4, !dbg !3319
  %idxprom254 = sext i32 %193 to i64, !dbg !3320
  %194 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3320
  %sfb_offsets = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %194, i32 0, i32 20, !dbg !3321
  %arrayidx255 = getelementptr inbounds [8 x [29 x i16]], [8 x [29 x i16]]* %sfb_offsets, i64 0, i64 %idxprom254, !dbg !3320
  %arrayidx256 = getelementptr inbounds [29 x i16], [29 x i16]* %arrayidx255, i64 0, i64 0, !dbg !3320
  store i16 0, i16* %arrayidx256, align 2, !dbg !3322
  store i32 0, i32* %x, align 4, !dbg !3323
  br label %for.cond257, !dbg !3325

for.cond257:                                      ; preds = %for.inc300, %for.body249
  %195 = load i32, i32* %x, align 4, !dbg !3326
  %cmp258 = icmp slt i32 %195, 28, !dbg !3329
  br i1 %cmp258, label %land.rhs, label %land.end, !dbg !3330

land.rhs:                                         ; preds = %for.cond257
  %196 = load i32, i32* %band, align 4, !dbg !3331
  %sub260 = sub nsw i32 %196, 1, !dbg !3333
  %idxprom261 = sext i32 %sub260 to i64, !dbg !3334
  %197 = load i32, i32* %i, align 4, !dbg !3335
  %idxprom262 = sext i32 %197 to i64, !dbg !3334
  %198 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3334
  %sfb_offsets263 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %198, i32 0, i32 20, !dbg !3336
  %arrayidx264 = getelementptr inbounds [8 x [29 x i16]], [8 x [29 x i16]]* %sfb_offsets263, i64 0, i64 %idxprom262, !dbg !3334
  %arrayidx265 = getelementptr inbounds [29 x i16], [29 x i16]* %arrayidx264, i64 0, i64 %idxprom261, !dbg !3334
  %199 = load i16, i16* %arrayidx265, align 2, !dbg !3334
  %conv266 = sext i16 %199 to i32, !dbg !3334
  %200 = load i32, i32* %subframe_len, align 4, !dbg !3337
  %cmp267 = icmp slt i32 %conv266, %200, !dbg !3338
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond257
  %201 = phi i1 [ false, %for.cond257 ], [ %cmp267, %land.rhs ]
  br i1 %201, label %for.body269, label %for.end302, !dbg !3339

for.body269:                                      ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !3341, metadata !2019), !dbg !3343
  %202 = load i32, i32* %subframe_len, align 4, !dbg !3344
  %mul270 = mul nsw i32 %202, 2, !dbg !3345
  %203 = load i32, i32* %x, align 4, !dbg !3346
  %idxprom271 = sext i32 %203 to i64, !dbg !3347
  %arrayidx272 = getelementptr inbounds [28 x i16], [28 x i16]* @critical_freq, i64 0, i64 %idxprom271, !dbg !3347
  %204 = load i16, i16* %arrayidx272, align 2, !dbg !3347
  %conv273 = zext i16 %204 to i32, !dbg !3347
  %mul274 = mul nsw i32 %mul270, %conv273, !dbg !3348
  %205 = load i32, i32* %rate, align 4, !dbg !3349
  %div275 = sdiv i32 %mul274, %205, !dbg !3350
  %add276 = add nsw i32 %div275, 2, !dbg !3351
  store i32 %add276, i32* %offset, align 4, !dbg !3343
  %206 = load i32, i32* %offset, align 4, !dbg !3352
  %and277 = and i32 %206, -4, !dbg !3352
  store i32 %and277, i32* %offset, align 4, !dbg !3352
  %207 = load i32, i32* %offset, align 4, !dbg !3353
  %208 = load i32, i32* %band, align 4, !dbg !3355
  %sub278 = sub nsw i32 %208, 1, !dbg !3356
  %idxprom279 = sext i32 %sub278 to i64, !dbg !3357
  %209 = load i32, i32* %i, align 4, !dbg !3358
  %idxprom280 = sext i32 %209 to i64, !dbg !3357
  %210 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3357
  %sfb_offsets281 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %210, i32 0, i32 20, !dbg !3359
  %arrayidx282 = getelementptr inbounds [8 x [29 x i16]], [8 x [29 x i16]]* %sfb_offsets281, i64 0, i64 %idxprom280, !dbg !3357
  %arrayidx283 = getelementptr inbounds [29 x i16], [29 x i16]* %arrayidx282, i64 0, i64 %idxprom279, !dbg !3357
  %211 = load i16, i16* %arrayidx283, align 2, !dbg !3357
  %conv284 = sext i16 %211 to i32, !dbg !3357
  %cmp285 = icmp sgt i32 %207, %conv284, !dbg !3360
  br i1 %cmp285, label %if.then287, label %if.end295, !dbg !3361

if.then287:                                       ; preds = %for.body269
  %212 = load i32, i32* %offset, align 4, !dbg !3362
  %conv288 = trunc i32 %212 to i16, !dbg !3362
  %213 = load i32, i32* %band, align 4, !dbg !3363
  %inc289 = add nsw i32 %213, 1, !dbg !3363
  store i32 %inc289, i32* %band, align 4, !dbg !3363
  %idxprom290 = sext i32 %213 to i64, !dbg !3364
  %214 = load i32, i32* %i, align 4, !dbg !3365
  %idxprom291 = sext i32 %214 to i64, !dbg !3364
  %215 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3364
  %sfb_offsets292 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %215, i32 0, i32 20, !dbg !3366
  %arrayidx293 = getelementptr inbounds [8 x [29 x i16]], [8 x [29 x i16]]* %sfb_offsets292, i64 0, i64 %idxprom291, !dbg !3364
  %arrayidx294 = getelementptr inbounds [29 x i16], [29 x i16]* %arrayidx293, i64 0, i64 %idxprom290, !dbg !3364
  store i16 %conv288, i16* %arrayidx294, align 2, !dbg !3367
  br label %if.end295, !dbg !3364

if.end295:                                        ; preds = %if.then287, %for.body269
  %216 = load i32, i32* %offset, align 4, !dbg !3368
  %217 = load i32, i32* %subframe_len, align 4, !dbg !3370
  %cmp296 = icmp sge i32 %216, %217, !dbg !3371
  br i1 %cmp296, label %if.then298, label %if.end299, !dbg !3372

if.then298:                                       ; preds = %if.end295
  br label %for.end302, !dbg !3373

if.end299:                                        ; preds = %if.end295
  br label %for.inc300, !dbg !3374

for.inc300:                                       ; preds = %if.end299
  %218 = load i32, i32* %x, align 4, !dbg !3375
  %inc301 = add nsw i32 %218, 1, !dbg !3375
  store i32 %inc301, i32* %x, align 4, !dbg !3375
  br label %for.cond257, !dbg !3377, !llvm.loop !3378

for.end302:                                       ; preds = %if.then298, %land.end
  %219 = load i32, i32* %subframe_len, align 4, !dbg !3380
  %conv303 = trunc i32 %219 to i16, !dbg !3380
  %220 = load i32, i32* %band, align 4, !dbg !3381
  %sub304 = sub nsw i32 %220, 1, !dbg !3382
  %idxprom305 = sext i32 %sub304 to i64, !dbg !3383
  %221 = load i32, i32* %i, align 4, !dbg !3384
  %idxprom306 = sext i32 %221 to i64, !dbg !3383
  %222 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3383
  %sfb_offsets307 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %222, i32 0, i32 20, !dbg !3385
  %arrayidx308 = getelementptr inbounds [8 x [29 x i16]], [8 x [29 x i16]]* %sfb_offsets307, i64 0, i64 %idxprom306, !dbg !3383
  %arrayidx309 = getelementptr inbounds [29 x i16], [29 x i16]* %arrayidx308, i64 0, i64 %idxprom305, !dbg !3383
  store i16 %conv303, i16* %arrayidx309, align 2, !dbg !3386
  %223 = load i32, i32* %band, align 4, !dbg !3387
  %sub310 = sub nsw i32 %223, 1, !dbg !3388
  %conv311 = trunc i32 %sub310 to i8, !dbg !3387
  %224 = load i32, i32* %i, align 4, !dbg !3389
  %idxprom312 = sext i32 %224 to i64, !dbg !3390
  %225 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3390
  %num_sfb = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %225, i32 0, i32 19, !dbg !3391
  %arrayidx313 = getelementptr inbounds [8 x i8], [8 x i8]* %num_sfb, i64 0, i64 %idxprom312, !dbg !3390
  store i8 %conv311, i8* %arrayidx313, align 1, !dbg !3392
  %226 = load i32, i32* %i, align 4, !dbg !3393
  %idxprom314 = sext i32 %226 to i64, !dbg !3395
  %227 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3395
  %num_sfb315 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %227, i32 0, i32 19, !dbg !3396
  %arrayidx316 = getelementptr inbounds [8 x i8], [8 x i8]* %num_sfb315, i64 0, i64 %idxprom314, !dbg !3395
  %228 = load i8, i8* %arrayidx316, align 1, !dbg !3395
  %conv317 = sext i8 %228 to i32, !dbg !3395
  %cmp318 = icmp sle i32 %conv317, 0, !dbg !3397
  br i1 %cmp318, label %if.then320, label %if.end321, !dbg !3398

if.then320:                                       ; preds = %for.end302
  %229 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3399
  %230 = bitcast %struct.AVCodecContext* %229 to i8*, !dbg !3399
  call void (i8*, i32, i8*, ...) @av_log(i8* %230, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i32 0, i32 0)), !dbg !3401
  store i32 -1094995529, i32* %retval, align 4, !dbg !3402
  br label %return, !dbg !3402

if.end321:                                        ; preds = %for.end302
  br label %for.inc322, !dbg !3403

for.inc322:                                       ; preds = %if.end321
  %231 = load i32, i32* %i, align 4, !dbg !3404
  %inc323 = add nsw i32 %231, 1, !dbg !3404
  store i32 %inc323, i32* %i, align 4, !dbg !3404
  br label %for.cond246, !dbg !3406, !llvm.loop !3407

for.end324:                                       ; preds = %for.cond246
  store i32 0, i32* %i, align 4, !dbg !3409
  br label %for.cond325, !dbg !3411

for.cond325:                                      ; preds = %for.inc390, %for.end324
  %232 = load i32, i32* %i, align 4, !dbg !3412
  %233 = load i32, i32* %num_possible_block_sizes, align 4, !dbg !3415
  %cmp326 = icmp slt i32 %232, %233, !dbg !3416
  br i1 %cmp326, label %for.body328, label %for.end392, !dbg !3417

for.body328:                                      ; preds = %for.cond325
  call void @llvm.dbg.declare(metadata i32* %b, metadata !3418, metadata !2019), !dbg !3420
  store i32 0, i32* %b, align 4, !dbg !3421
  br label %for.cond329, !dbg !3423

for.cond329:                                      ; preds = %for.inc387, %for.body328
  %234 = load i32, i32* %b, align 4, !dbg !3424
  %235 = load i32, i32* %i, align 4, !dbg !3427
  %idxprom330 = sext i32 %235 to i64, !dbg !3428
  %236 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3428
  %num_sfb331 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %236, i32 0, i32 19, !dbg !3429
  %arrayidx332 = getelementptr inbounds [8 x i8], [8 x i8]* %num_sfb331, i64 0, i64 %idxprom330, !dbg !3428
  %237 = load i8, i8* %arrayidx332, align 1, !dbg !3428
  %conv333 = sext i8 %237 to i32, !dbg !3428
  %cmp334 = icmp slt i32 %234, %conv333, !dbg !3430
  br i1 %cmp334, label %for.body336, label %for.end389, !dbg !3431

for.body336:                                      ; preds = %for.cond329
  call void @llvm.dbg.declare(metadata i32* %x337, metadata !3432, metadata !2019), !dbg !3434
  call void @llvm.dbg.declare(metadata i32* %offset338, metadata !3435, metadata !2019), !dbg !3436
  %238 = load i32, i32* %b, align 4, !dbg !3437
  %idxprom339 = sext i32 %238 to i64, !dbg !3438
  %239 = load i32, i32* %i, align 4, !dbg !3439
  %idxprom340 = sext i32 %239 to i64, !dbg !3438
  %240 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3438
  %sfb_offsets341 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %240, i32 0, i32 20, !dbg !3440
  %arrayidx342 = getelementptr inbounds [8 x [29 x i16]], [8 x [29 x i16]]* %sfb_offsets341, i64 0, i64 %idxprom340, !dbg !3438
  %arrayidx343 = getelementptr inbounds [29 x i16], [29 x i16]* %arrayidx342, i64 0, i64 %idxprom339, !dbg !3438
  %241 = load i16, i16* %arrayidx343, align 2, !dbg !3438
  %conv344 = sext i16 %241 to i32, !dbg !3438
  %242 = load i32, i32* %b, align 4, !dbg !3441
  %add345 = add nsw i32 %242, 1, !dbg !3442
  %idxprom346 = sext i32 %add345 to i64, !dbg !3443
  %243 = load i32, i32* %i, align 4, !dbg !3444
  %idxprom347 = sext i32 %243 to i64, !dbg !3443
  %244 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3443
  %sfb_offsets348 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %244, i32 0, i32 20, !dbg !3445
  %arrayidx349 = getelementptr inbounds [8 x [29 x i16]], [8 x [29 x i16]]* %sfb_offsets348, i64 0, i64 %idxprom347, !dbg !3443
  %arrayidx350 = getelementptr inbounds [29 x i16], [29 x i16]* %arrayidx349, i64 0, i64 %idxprom346, !dbg !3443
  %245 = load i16, i16* %arrayidx350, align 2, !dbg !3443
  %conv351 = sext i16 %245 to i32, !dbg !3443
  %add352 = add nsw i32 %conv344, %conv351, !dbg !3446
  %sub353 = sub nsw i32 %add352, 1, !dbg !3447
  %246 = load i32, i32* %i, align 4, !dbg !3448
  %shl354 = shl i32 %sub353, %246, !dbg !3449
  %shr355 = ashr i32 %shl354, 1, !dbg !3450
  store i32 %shr355, i32* %offset338, align 4, !dbg !3436
  store i32 0, i32* %x337, align 4, !dbg !3451
  br label %for.cond356, !dbg !3453

for.cond356:                                      ; preds = %for.inc384, %for.body336
  %247 = load i32, i32* %x337, align 4, !dbg !3454
  %248 = load i32, i32* %num_possible_block_sizes, align 4, !dbg !3457
  %cmp357 = icmp slt i32 %247, %248, !dbg !3458
  br i1 %cmp357, label %for.body359, label %for.end386, !dbg !3459

for.body359:                                      ; preds = %for.cond356
  call void @llvm.dbg.declare(metadata i32* %v, metadata !3460, metadata !2019), !dbg !3462
  store i32 0, i32* %v, align 4, !dbg !3462
  br label %while.cond, !dbg !3463

while.cond:                                       ; preds = %do.end376, %for.body359
  %249 = load i32, i32* %v, align 4, !dbg !3464
  %add360 = add nsw i32 %249, 1, !dbg !3466
  %idxprom361 = sext i32 %add360 to i64, !dbg !3467
  %250 = load i32, i32* %x337, align 4, !dbg !3468
  %idxprom362 = sext i32 %250 to i64, !dbg !3467
  %251 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3467
  %sfb_offsets363 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %251, i32 0, i32 20, !dbg !3469
  %arrayidx364 = getelementptr inbounds [8 x [29 x i16]], [8 x [29 x i16]]* %sfb_offsets363, i64 0, i64 %idxprom362, !dbg !3467
  %arrayidx365 = getelementptr inbounds [29 x i16], [29 x i16]* %arrayidx364, i64 0, i64 %idxprom361, !dbg !3467
  %252 = load i16, i16* %arrayidx365, align 2, !dbg !3467
  %conv366 = sext i16 %252 to i32, !dbg !3467
  %253 = load i32, i32* %x337, align 4, !dbg !3470
  %shl367 = shl i32 %conv366, %253, !dbg !3471
  %254 = load i32, i32* %offset338, align 4, !dbg !3472
  %cmp368 = icmp slt i32 %shl367, %254, !dbg !3473
  br i1 %cmp368, label %while.body, label %while.end, !dbg !3474

while.body:                                       ; preds = %while.cond
  %255 = load i32, i32* %v, align 4, !dbg !3475
  %inc370 = add nsw i32 %255, 1, !dbg !3475
  store i32 %inc370, i32* %v, align 4, !dbg !3475
  br label %do.body371, !dbg !3477, !llvm.loop !3478

do.body371:                                       ; preds = %while.body
  %256 = load i32, i32* %v, align 4, !dbg !3479
  %cmp372 = icmp slt i32 %256, 29, !dbg !3483
  br i1 %cmp372, label %if.end375, label %if.then374, !dbg !3484

if.then374:                                       ; preds = %do.body371
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i32 0, i32 0), i32 532), !dbg !3485
  call void @abort() #8, !dbg !3488
  unreachable, !dbg !3490

if.end375:                                        ; preds = %do.body371
  br label %do.end376, !dbg !3491

do.end376:                                        ; preds = %if.end375
  br label %while.cond, !dbg !3493, !llvm.loop !3495

while.end:                                        ; preds = %while.cond
  %257 = load i32, i32* %v, align 4, !dbg !3496
  %conv377 = trunc i32 %257 to i8, !dbg !3496
  %258 = load i32, i32* %b, align 4, !dbg !3497
  %idxprom378 = sext i32 %258 to i64, !dbg !3498
  %259 = load i32, i32* %x337, align 4, !dbg !3499
  %idxprom379 = sext i32 %259 to i64, !dbg !3498
  %260 = load i32, i32* %i, align 4, !dbg !3500
  %idxprom380 = sext i32 %260 to i64, !dbg !3498
  %261 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3498
  %sf_offsets = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %261, i32 0, i32 21, !dbg !3501
  %arrayidx381 = getelementptr inbounds [8 x [8 x [29 x i8]]], [8 x [8 x [29 x i8]]]* %sf_offsets, i64 0, i64 %idxprom380, !dbg !3498
  %arrayidx382 = getelementptr inbounds [8 x [29 x i8]], [8 x [29 x i8]]* %arrayidx381, i64 0, i64 %idxprom379, !dbg !3498
  %arrayidx383 = getelementptr inbounds [29 x i8], [29 x i8]* %arrayidx382, i64 0, i64 %idxprom378, !dbg !3498
  store i8 %conv377, i8* %arrayidx383, align 1, !dbg !3502
  br label %for.inc384, !dbg !3503

for.inc384:                                       ; preds = %while.end
  %262 = load i32, i32* %x337, align 4, !dbg !3504
  %inc385 = add nsw i32 %262, 1, !dbg !3504
  store i32 %inc385, i32* %x337, align 4, !dbg !3504
  br label %for.cond356, !dbg !3506, !llvm.loop !3507

for.end386:                                       ; preds = %for.cond356
  br label %for.inc387, !dbg !3509

for.inc387:                                       ; preds = %for.end386
  %263 = load i32, i32* %b, align 4, !dbg !3510
  %inc388 = add nsw i32 %263, 1, !dbg !3510
  store i32 %inc388, i32* %b, align 4, !dbg !3510
  br label %for.cond329, !dbg !3512, !llvm.loop !3513

for.end389:                                       ; preds = %for.cond329
  br label %for.inc390, !dbg !3515

for.inc390:                                       ; preds = %for.end389
  %264 = load i32, i32* %i, align 4, !dbg !3516
  %inc391 = add nsw i32 %264, 1, !dbg !3516
  store i32 %inc391, i32* %i, align 4, !dbg !3516
  br label %for.cond325, !dbg !3518, !llvm.loop !3519

for.end392:                                       ; preds = %for.cond325
  %265 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3521
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %265, i32 0, i32 13, !dbg !3522
  %266 = load i32, i32* %flags, align 4, !dbg !3522
  %and393 = and i32 %266, 8388608, !dbg !3523
  %call394 = call %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32 %and393), !dbg !3524
  %267 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3525
  %fdsp = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %267, i32 0, i32 1, !dbg !3526
  store %struct.AVFloatDSPContext* %call394, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !3527
  %268 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3528
  %fdsp395 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %268, i32 0, i32 1, !dbg !3530
  %269 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp395, align 8, !dbg !3530
  %tobool396 = icmp ne %struct.AVFloatDSPContext* %269, null, !dbg !3528
  br i1 %tobool396, label %if.end398, label %if.then397, !dbg !3531

if.then397:                                       ; preds = %for.end392
  store i32 -12, i32* %retval, align 4, !dbg !3532
  br label %return, !dbg !3532

if.end398:                                        ; preds = %for.end392
  store i32 0, i32* %i, align 4, !dbg !3533
  br label %for.cond399, !dbg !3535

for.cond399:                                      ; preds = %for.inc418, %if.end398
  %270 = load i32, i32* %i, align 4, !dbg !3536
  %cmp400 = icmp slt i32 %270, 8, !dbg !3539
  br i1 %cmp400, label %for.body402, label %for.end420, !dbg !3540

for.body402:                                      ; preds = %for.cond399
  %271 = load i32, i32* %i, align 4, !dbg !3541
  %idxprom403 = sext i32 %271 to i64, !dbg !3542
  %272 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3542
  %mdct_ctx = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %272, i32 0, i32 4, !dbg !3543
  %arrayidx404 = getelementptr inbounds [8 x %struct.FFTContext], [8 x %struct.FFTContext]* %mdct_ctx, i64 0, i64 %idxprom403, !dbg !3542
  %273 = load i32, i32* %i, align 4, !dbg !3544
  %add405 = add nsw i32 7, %273, !dbg !3545
  %274 = load i32, i32* %i, align 4, !dbg !3546
  %add406 = add nsw i32 6, %274, !dbg !3547
  %sub407 = sub nsw i32 %add406, 1, !dbg !3548
  %shl408 = shl i32 1, %sub407, !dbg !3549
  %conv409 = sitofp i32 %shl408 to double, !dbg !3550
  %div410 = fdiv double 1.000000e+00, %conv409, !dbg !3551
  %275 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3552
  %bits_per_sample411 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %275, i32 0, i32 11, !dbg !3553
  %276 = load i8, i8* %bits_per_sample411, align 2, !dbg !3553
  %conv412 = zext i8 %276 to i32, !dbg !3552
  %sub413 = sub nsw i32 %conv412, 1, !dbg !3554
  %shl414 = shl i32 1, %sub413, !dbg !3555
  %conv415 = sitofp i32 %shl414 to double, !dbg !3556
  %div416 = fdiv double %div410, %conv415, !dbg !3557
  %call417 = call i32 @ff_mdct_init(%struct.FFTContext* %arrayidx404, i32 %add405, i32 1, double %div416), !dbg !3558
  br label %for.inc418, !dbg !3558

for.inc418:                                       ; preds = %for.body402
  %277 = load i32, i32* %i, align 4, !dbg !3559
  %inc419 = add nsw i32 %277, 1, !dbg !3559
  store i32 %inc419, i32* %i, align 4, !dbg !3559
  br label %for.cond399, !dbg !3561, !llvm.loop !3562

for.end420:                                       ; preds = %for.cond399
  store i32 0, i32* %i, align 4, !dbg !3564
  br label %for.cond421, !dbg !3566

for.cond421:                                      ; preds = %for.inc432, %for.end420
  %278 = load i32, i32* %i, align 4, !dbg !3567
  %cmp422 = icmp slt i32 %278, 8, !dbg !3570
  br i1 %cmp422, label %for.body424, label %for.end434, !dbg !3571

for.body424:                                      ; preds = %for.cond421
  call void @llvm.dbg.declare(metadata i32* %win_idx, metadata !3572, metadata !2019), !dbg !3574
  %279 = load i32, i32* %i, align 4, !dbg !3575
  %sub425 = sub nsw i32 13, %279, !dbg !3576
  store i32 %sub425, i32* %win_idx, align 4, !dbg !3574
  %280 = load i32, i32* %win_idx, align 4, !dbg !3577
  call void @ff_init_ff_sine_windows(i32 %280), !dbg !3578
  %281 = load i32, i32* %win_idx, align 4, !dbg !3579
  %idxprom426 = sext i32 %281 to i64, !dbg !3580
  %arrayidx427 = getelementptr inbounds [16 x float*], [16 x float*]* @ff_sine_windows, i64 0, i64 %idxprom426, !dbg !3580
  %282 = load float*, float** %arrayidx427, align 8, !dbg !3580
  %283 = load i32, i32* %i, align 4, !dbg !3581
  %sub428 = sub nsw i32 8, %283, !dbg !3582
  %sub429 = sub nsw i32 %sub428, 1, !dbg !3583
  %idxprom430 = sext i32 %sub429 to i64, !dbg !3584
  %284 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3584
  %windows = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %284, i32 0, i32 7, !dbg !3585
  %arrayidx431 = getelementptr inbounds [8 x float*], [8 x float*]* %windows, i64 0, i64 %idxprom430, !dbg !3584
  store float* %282, float** %arrayidx431, align 8, !dbg !3586
  br label %for.inc432, !dbg !3587

for.inc432:                                       ; preds = %for.body424
  %285 = load i32, i32* %i, align 4, !dbg !3588
  %inc433 = add nsw i32 %285, 1, !dbg !3588
  store i32 %inc433, i32* %i, align 4, !dbg !3588
  br label %for.cond421, !dbg !3590, !llvm.loop !3591

for.end434:                                       ; preds = %for.cond421
  store i32 0, i32* %i, align 4, !dbg !3593
  br label %for.cond435, !dbg !3594

for.cond435:                                      ; preds = %for.inc460, %for.end434
  %286 = load i32, i32* %i, align 4, !dbg !3595
  %287 = load i32, i32* %num_possible_block_sizes, align 4, !dbg !3597
  %cmp436 = icmp slt i32 %286, %287, !dbg !3598
  br i1 %cmp436, label %for.body438, label %for.end462, !dbg !3599

for.body438:                                      ; preds = %for.cond435
  call void @llvm.dbg.declare(metadata i32* %block_size, metadata !3600, metadata !2019), !dbg !3601
  %288 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3602
  %samples_per_frame439 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %288, i32 0, i32 12, !dbg !3603
  %289 = load i16, i16* %samples_per_frame439, align 8, !dbg !3603
  %conv440 = zext i16 %289 to i32, !dbg !3602
  %290 = load i32, i32* %i, align 4, !dbg !3604
  %shr441 = ashr i32 %conv440, %290, !dbg !3605
  store i32 %shr441, i32* %block_size, align 4, !dbg !3601
  call void @llvm.dbg.declare(metadata i32* %cutoff, metadata !3606, metadata !2019), !dbg !3607
  %291 = load i32, i32* %block_size, align 4, !dbg !3608
  %mul442 = mul nsw i32 440, %291, !dbg !3609
  %conv443 = sext i32 %mul442 to i64, !dbg !3610
  %292 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3611
  %avctx444 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %292, i32 0, i32 0, !dbg !3612
  %293 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx444, align 32, !dbg !3612
  %sample_rate445 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %293, i32 0, i32 82, !dbg !3613
  %294 = load i32, i32* %sample_rate445, align 8, !dbg !3613
  %shr446 = ashr i32 %294, 1, !dbg !3614
  %conv447 = sext i32 %shr446 to i64, !dbg !3615
  %mul448 = mul nsw i64 3, %conv447, !dbg !3616
  %add449 = add nsw i64 %conv443, %mul448, !dbg !3617
  %sub450 = sub nsw i64 %add449, 1, !dbg !3618
  %295 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3619
  %avctx451 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %295, i32 0, i32 0, !dbg !3620
  %296 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx451, align 32, !dbg !3620
  %sample_rate452 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %296, i32 0, i32 82, !dbg !3621
  %297 = load i32, i32* %sample_rate452, align 8, !dbg !3621
  %conv453 = sext i32 %297 to i64, !dbg !3619
  %div454 = sdiv i64 %sub450, %conv453, !dbg !3622
  %conv455 = trunc i64 %div454 to i32, !dbg !3623
  store i32 %conv455, i32* %cutoff, align 4, !dbg !3607
  %298 = load i32, i32* %cutoff, align 4, !dbg !3624
  %299 = load i32, i32* %block_size, align 4, !dbg !3625
  store i32 %298, i32* %a.addr.i, align 4, !dbg !3626
  store i32 4, i32* %amin.addr.i, align 4, !dbg !3626
  store i32 %299, i32* %amax.addr.i, align 4, !dbg !3626
  %300 = load i32, i32* %a.addr.i, align 4, !dbg !3627
  %301 = load i32, i32* %amin.addr.i, align 4, !dbg !3629
  %cmp.i = icmp slt i32 %300, %301, !dbg !3630
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !3631

if.then.i:                                        ; preds = %for.body438
  %302 = load i32, i32* %amin.addr.i, align 4, !dbg !3632
  store i32 %302, i32* %retval.i, align 4, !dbg !3634
  br label %av_clip_c.exit, !dbg !3634

if.else.i:                                        ; preds = %for.body438
  %303 = load i32, i32* %a.addr.i, align 4, !dbg !3635
  %304 = load i32, i32* %amax.addr.i, align 4, !dbg !3637
  %cmp1.i = icmp sgt i32 %303, %304, !dbg !3638
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !3639

if.then2.i:                                       ; preds = %if.else.i
  %305 = load i32, i32* %amax.addr.i, align 4, !dbg !3640
  store i32 %305, i32* %retval.i, align 4, !dbg !3642
  br label %av_clip_c.exit, !dbg !3642

if.else3.i:                                       ; preds = %if.else.i
  %306 = load i32, i32* %a.addr.i, align 4, !dbg !3643
  store i32 %306, i32* %retval.i, align 4, !dbg !3644
  br label %av_clip_c.exit, !dbg !3644

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %307 = load i32, i32* %retval.i, align 4, !dbg !3645
  %conv457 = trunc i32 %307 to i16, !dbg !3626
  %308 = load i32, i32* %i, align 4, !dbg !3646
  %idxprom458 = sext i32 %308 to i64, !dbg !3647
  %309 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3647
  %subwoofer_cutoffs = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %309, i32 0, i32 22, !dbg !3648
  %arrayidx459 = getelementptr inbounds [8 x i16], [8 x i16]* %subwoofer_cutoffs, i64 0, i64 %idxprom458, !dbg !3647
  store i16 %conv457, i16* %arrayidx459, align 2, !dbg !3649
  br label %for.inc460, !dbg !3650

for.inc460:                                       ; preds = %av_clip_c.exit
  %310 = load i32, i32* %i, align 4, !dbg !3651
  %inc461 = add nsw i32 %310, 1, !dbg !3651
  store i32 %inc461, i32* %i, align 4, !dbg !3651
  br label %for.cond435, !dbg !3653, !llvm.loop !3654

for.end462:                                       ; preds = %for.cond435
  store i32 0, i32* %i, align 4, !dbg !3656
  br label %for.cond463, !dbg !3658

for.cond463:                                      ; preds = %for.inc474, %for.end462
  %311 = load i32, i32* %i, align 4, !dbg !3659
  %cmp464 = icmp slt i32 %311, 33, !dbg !3662
  br i1 %cmp464, label %for.body466, label %for.end476, !dbg !3663

for.body466:                                      ; preds = %for.cond463
  %312 = load i32, i32* %i, align 4, !dbg !3664
  %conv467 = sitofp i32 %312 to double, !dbg !3664
  %mul468 = fmul double %conv467, 0x400921FB54442D18, !dbg !3665
  %div469 = fdiv double %mul468, 6.400000e+01, !dbg !3666
  %call470 = call double @sin(double %div469) #9, !dbg !3667
  %conv471 = fptrunc double %call470 to float, !dbg !3667
  %313 = load i32, i32* %i, align 4, !dbg !3668
  %idxprom472 = sext i32 %313 to i64, !dbg !3669
  %arrayidx473 = getelementptr inbounds [33 x float], [33 x float]* @sin64, i64 0, i64 %idxprom472, !dbg !3669
  store float %conv471, float* %arrayidx473, align 4, !dbg !3670
  br label %for.inc474, !dbg !3669

for.inc474:                                       ; preds = %for.body466
  %314 = load i32, i32* %i, align 4, !dbg !3671
  %inc475 = add nsw i32 %314, 1, !dbg !3671
  store i32 %inc475, i32* %i, align 4, !dbg !3671
  br label %for.cond463, !dbg !3673, !llvm.loop !3674

for.end476:                                       ; preds = %for.cond463
  %315 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3676
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %315, i32 0, i32 134, !dbg !3678
  %316 = load i32, i32* %debug, align 4, !dbg !3678
  %and477 = and i32 %316, 4, !dbg !3679
  %tobool478 = icmp ne i32 %and477, 0, !dbg !3679
  br i1 %tobool478, label %if.then479, label %if.end480, !dbg !3680

if.then479:                                       ; preds = %for.end476
  %317 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3681
  call void @dump_context(%struct.WMAProDecodeCtx* %317), !dbg !3682
  br label %if.end480, !dbg !3682

if.end480:                                        ; preds = %if.then479, %for.end476
  %318 = load i32, i32* %channel_mask, align 4, !dbg !3683
  %conv481 = zext i32 %318 to i64, !dbg !3683
  %319 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3684
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %319, i32 0, i32 89, !dbg !3685
  store i64 %conv481, i64* %channel_layout, align 8, !dbg !3686
  store i32 0, i32* %retval, align 4, !dbg !3687
  br label %return, !dbg !3687

return:                                           ; preds = %if.end480, %if.then397, %if.then320, %if.then194, %if.then186, %if.then174, %if.then168, %if.then160, %if.then152, %if.then114, %if.then96, %if.else84, %if.then80, %if.then4
  %320 = load i32, i32* %retval, align 4, !dbg !3688
  ret i32 %320, !dbg !3688
}

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_put_bits(%struct.PutBitContext* %s, i8* %buffer, i32 %buffer_size) #4 !dbg !3689 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %buffer_size.addr = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !3693, metadata !2019), !dbg !3694
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !3695, metadata !2019), !dbg !3696
  store i32 %buffer_size, i32* %buffer_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffer_size.addr, metadata !3697, metadata !2019), !dbg !3698
  %0 = load i32, i32* %buffer_size.addr, align 4, !dbg !3699
  %cmp = icmp slt i32 %0, 0, !dbg !3701
  br i1 %cmp, label %if.then, label %if.end, !dbg !3702

if.then:                                          ; preds = %entry
  store i32 0, i32* %buffer_size.addr, align 4, !dbg !3703
  store i8* null, i8** %buffer.addr, align 8, !dbg !3705
  br label %if.end, !dbg !3706

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %buffer_size.addr, align 4, !dbg !3707
  %mul = mul nsw i32 8, %1, !dbg !3708
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3709
  %size_in_bits = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 5, !dbg !3710
  store i32 %mul, i32* %size_in_bits, align 8, !dbg !3711
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !3712
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3713
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 2, !dbg !3714
  store i8* %3, i8** %buf, align 8, !dbg !3715
  %5 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3716
  %buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %5, i32 0, i32 2, !dbg !3717
  %6 = load i8*, i8** %buf1, align 8, !dbg !3717
  %7 = load i32, i32* %buffer_size.addr, align 4, !dbg !3718
  %idx.ext = sext i32 %7 to i64, !dbg !3719
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !3719
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3720
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 4, !dbg !3721
  store i8* %add.ptr, i8** %buf_end, align 8, !dbg !3722
  %9 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3723
  %buf2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %9, i32 0, i32 2, !dbg !3724
  %10 = load i8*, i8** %buf2, align 8, !dbg !3724
  %11 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3725
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %11, i32 0, i32 3, !dbg !3726
  store i8* %10, i8** %buf_ptr, align 8, !dbg !3727
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3728
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 1, !dbg !3729
  store i32 32, i32* %bit_left, align 4, !dbg !3730
  %13 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !3731
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %13, i32 0, i32 0, !dbg !3732
  store i32 0, i32* %bit_buf, align 8, !dbg !3733
  ret void, !dbg !3734
}

declare void @avpriv_request_sample(i8*, i8*, ...) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #2

declare i32 @ff_wma_get_frame_len_bits(i32, i32, i32) #3

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #3

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @get_rate(%struct.AVCodecContext* %avctx) #0 !dbg !3735 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3736, metadata !2019), !dbg !3737
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3738
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 4, !dbg !3740
  %1 = load i32, i32* %codec_id, align 8, !dbg !3740
  %cmp = icmp ne i32 %1, 86053, !dbg !3741
  br i1 %cmp, label %if.then, label %if.end12, !dbg !3742

if.then:                                          ; preds = %entry
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3743
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 82, !dbg !3746
  %3 = load i32, i32* %sample_rate, align 8, !dbg !3746
  %cmp1 = icmp sgt i32 %3, 44100, !dbg !3747
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !3748

if.then2:                                         ; preds = %if.then
  store i32 48000, i32* %retval, align 4, !dbg !3749
  br label %return, !dbg !3749

if.else:                                          ; preds = %if.then
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3750
  %sample_rate3 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 82, !dbg !3752
  %5 = load i32, i32* %sample_rate3, align 8, !dbg !3752
  %cmp4 = icmp sgt i32 %5, 32000, !dbg !3753
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !3754

if.then5:                                         ; preds = %if.else
  store i32 44100, i32* %retval, align 4, !dbg !3755
  br label %return, !dbg !3755

if.else6:                                         ; preds = %if.else
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3756
  %sample_rate7 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 82, !dbg !3758
  %7 = load i32, i32* %sample_rate7, align 8, !dbg !3758
  %cmp8 = icmp sgt i32 %7, 24000, !dbg !3759
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !3760

if.then9:                                         ; preds = %if.else6
  store i32 32000, i32* %retval, align 4, !dbg !3761
  br label %return, !dbg !3761

if.end:                                           ; preds = %if.else6
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  store i32 24000, i32* %retval, align 4, !dbg !3762
  br label %return, !dbg !3762

if.end12:                                         ; preds = %entry
  %8 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3763
  %sample_rate13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %8, i32 0, i32 82, !dbg !3764
  %9 = load i32, i32* %sample_rate13, align 8, !dbg !3764
  store i32 %9, i32* %retval, align 4, !dbg !3765
  br label %return, !dbg !3765

return:                                           ; preds = %if.end12, %if.end11, %if.then9, %if.then5, %if.then2
  %10 = load i32, i32* %retval, align 4, !dbg !3766
  ret i32 %10, !dbg !3766
}

; Function Attrs: noreturn nounwind
declare void @abort() #5

declare %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32) #3

declare i32 @ff_mdct_init(%struct.FFTContext*, i32, i32, double) #3

declare void @ff_init_ff_sine_windows(i32) #3

; Function Attrs: nounwind
declare double @sin(double) #6

; Function Attrs: cold nounwind optsize uwtable
define internal void @dump_context(%struct.WMAProDecodeCtx* %s) #0 !dbg !3767 {
entry:
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !3770, metadata !2019), !dbg !3771
  %0 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3772
  %avctx = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %0, i32 0, i32 0, !dbg !3773
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !3773
  %2 = bitcast %struct.AVCodecContext* %1 to i8*, !dbg !3772
  %3 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3774
  %bits_per_sample = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %3, i32 0, i32 11, !dbg !3775
  %4 = load i8, i8* %bits_per_sample, align 2, !dbg !3775
  %conv = zext i8 %4 to i32, !dbg !3774
  call void (i8*, i32, i8*, ...) @av_log(i8* %2, i32 48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.33, i32 0, i32 0), i32 %conv), !dbg !3776
  %5 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3777
  %avctx1 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %5, i32 0, i32 0, !dbg !3778
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 32, !dbg !3778
  %7 = bitcast %struct.AVCodecContext* %6 to i8*, !dbg !3777
  %8 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3779
  %decode_flags = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %8, i32 0, i32 8, !dbg !3780
  %9 = load i32, i32* %decode_flags, align 32, !dbg !3780
  call void (i8*, i32, i8*, ...) @av_log(i8* %7, i32 48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i32 0, i32 0), i32 %9), !dbg !3781
  %10 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3782
  %avctx2 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %10, i32 0, i32 0, !dbg !3783
  %11 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx2, align 32, !dbg !3783
  %12 = bitcast %struct.AVCodecContext* %11 to i8*, !dbg !3782
  %13 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3784
  %samples_per_frame = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %13, i32 0, i32 12, !dbg !3785
  %14 = load i16, i16* %samples_per_frame, align 8, !dbg !3785
  %conv3 = zext i16 %14 to i32, !dbg !3784
  call void (i8*, i32, i8*, ...) @av_log(i8* %12, i32 48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0), i32 %conv3), !dbg !3786
  %15 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3787
  %avctx4 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %15, i32 0, i32 0, !dbg !3788
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx4, align 32, !dbg !3788
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !3787
  %18 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3789
  %log2_frame_size = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %18, i32 0, i32 13, !dbg !3790
  %19 = load i16, i16* %log2_frame_size, align 2, !dbg !3790
  %conv5 = zext i16 %19 to i32, !dbg !3789
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i32 0, i32 0), i32 %conv5), !dbg !3791
  %20 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3792
  %avctx6 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %20, i32 0, i32 0, !dbg !3793
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx6, align 32, !dbg !3793
  %22 = bitcast %struct.AVCodecContext* %21 to i8*, !dbg !3792
  %23 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3794
  %max_num_subframes = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %23, i32 0, i32 15, !dbg !3795
  %24 = load i8, i8* %max_num_subframes, align 1, !dbg !3795
  %conv7 = zext i8 %24 to i32, !dbg !3794
  call void (i8*, i32, i8*, ...) @av_log(i8* %22, i32 48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), i32 %conv7), !dbg !3796
  %25 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3797
  %avctx8 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %25, i32 0, i32 0, !dbg !3798
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx8, align 32, !dbg !3798
  %27 = bitcast %struct.AVCodecContext* %26 to i8*, !dbg !3797
  %28 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3799
  %len_prefix = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %28, i32 0, i32 9, !dbg !3800
  %29 = load i8, i8* %len_prefix, align 4, !dbg !3800
  %conv9 = zext i8 %29 to i32, !dbg !3799
  call void (i8*, i32, i8*, ...) @av_log(i8* %27, i32 48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i32 0, i32 0), i32 %conv9), !dbg !3801
  %30 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3802
  %avctx10 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %30, i32 0, i32 0, !dbg !3803
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx10, align 32, !dbg !3803
  %32 = bitcast %struct.AVCodecContext* %31 to i8*, !dbg !3802
  %33 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3804
  %nb_channels = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %33, i32 0, i32 41, !dbg !3805
  %34 = load i8, i8* %nb_channels, align 2, !dbg !3805
  %conv11 = sext i8 %34 to i32, !dbg !3804
  call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i32 0, i32 0), i32 %conv11), !dbg !3806
  ret void, !dbg !3807
}

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @decode_packet(%struct.AVCodecContext* %avctx, %struct.WMAProDecodeCtx* %s, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !3808 {
entry:
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %num_bits_prev_frame = alloca i32, align 4
  %packet_sequence_number = alloca i32, align 4
  %frame = alloca %struct.AVFrame*, align 8
  %i = alloca i32, align 4
  %num_frames = alloca i32, align 4
  %remaining_packet_bits = alloca i32, align 4
  %frame_size = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3811, metadata !2019), !dbg !3812
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !3813, metadata !2019), !dbg !3814
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3815, metadata !2019), !dbg !3816
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !3817, metadata !2019), !dbg !3818
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !3819, metadata !2019), !dbg !3820
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !3821, metadata !2019), !dbg !3823
  %0 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3824
  %pgb = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %0, i32 0, i32 23, !dbg !3825
  store %struct.GetBitContext* %pgb, %struct.GetBitContext** %gb, align 8, !dbg !3823
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3826, metadata !2019), !dbg !3827
  %1 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3828
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i32 0, i32 3, !dbg !3829
  %2 = load i8*, i8** %data1, align 8, !dbg !3829
  store i8* %2, i8** %buf, align 8, !dbg !3827
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !3830, metadata !2019), !dbg !3831
  %3 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !3832
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %3, i32 0, i32 4, !dbg !3833
  %4 = load i32, i32* %size, align 8, !dbg !3833
  store i32 %4, i32* %buf_size, align 4, !dbg !3831
  call void @llvm.dbg.declare(metadata i32* %num_bits_prev_frame, metadata !3834, metadata !2019), !dbg !3835
  call void @llvm.dbg.declare(metadata i32* %packet_sequence_number, metadata !3836, metadata !2019), !dbg !3837
  %5 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !3838
  store i32 0, i32* %5, align 4, !dbg !3839
  %6 = load i32, i32* %buf_size, align 4, !dbg !3840
  %tobool = icmp ne i32 %6, 0, !dbg !3840
  br i1 %tobool, label %if.else, label %if.then, !dbg !3842

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !3843, metadata !2019), !dbg !3845
  %7 = load i8*, i8** %data.addr, align 8, !dbg !3846
  %8 = bitcast i8* %7 to %struct.AVFrame*, !dbg !3846
  store %struct.AVFrame* %8, %struct.AVFrame** %frame, align 8, !dbg !3845
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3847, metadata !2019), !dbg !3848
  %9 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3849
  %packet_done = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %9, i32 0, i32 31, !dbg !3850
  store i8 0, i8* %packet_done, align 1, !dbg !3851
  %10 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3852
  %eof_done = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %10, i32 0, i32 32, !dbg !3854
  %11 = load i8, i8* %eof_done, align 2, !dbg !3854
  %tobool2 = icmp ne i8 %11, 0, !dbg !3852
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !3855

if.then3:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !3856
  br label %return, !dbg !3856

if.end:                                           ; preds = %if.then
  store i32 0, i32* %i, align 4, !dbg !3857
  br label %for.cond, !dbg !3859

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !3860
  %13 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3863
  %nb_channels = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %13, i32 0, i32 41, !dbg !3864
  %14 = load i8, i8* %nb_channels, align 2, !dbg !3864
  %conv = sext i8 %14 to i32, !dbg !3863
  %cmp = icmp slt i32 %12, %conv, !dbg !3865
  br i1 %cmp, label %for.body, label %for.end, !dbg !3866

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !3867
  %idxprom = sext i32 %15 to i64, !dbg !3869
  %16 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3869
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %16, i32 0, i32 2, !dbg !3870
  %17 = load i8**, i8*** %extended_data, align 8, !dbg !3870
  %arrayidx = getelementptr inbounds i8*, i8** %17, i64 %idxprom, !dbg !3869
  %18 = load i8*, i8** %arrayidx, align 8, !dbg !3869
  %19 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3871
  %samples_per_frame = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %19, i32 0, i32 12, !dbg !3872
  %20 = load i16, i16* %samples_per_frame, align 8, !dbg !3872
  %conv5 = zext i16 %20 to i64, !dbg !3871
  %mul = mul i64 %conv5, 4, !dbg !3873
  call void @llvm.memset.p0i8.i64(i8* %18, i8 0, i64 %mul, i32 1, i1 false), !dbg !3874
  %21 = load i32, i32* %i, align 4, !dbg !3875
  %idxprom6 = sext i32 %21 to i64, !dbg !3876
  %22 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !3876
  %extended_data7 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %22, i32 0, i32 2, !dbg !3877
  %23 = load i8**, i8*** %extended_data7, align 8, !dbg !3877
  %arrayidx8 = getelementptr inbounds i8*, i8** %23, i64 %idxprom6, !dbg !3876
  %24 = load i8*, i8** %arrayidx8, align 8, !dbg !3876
  %25 = load i32, i32* %i, align 4, !dbg !3878
  %idxprom9 = sext i32 %25 to i64, !dbg !3879
  %26 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3879
  %channel = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %26, i32 0, i32 52, !dbg !3880
  %arrayidx10 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel, i64 0, i64 %idxprom9, !dbg !3879
  %out = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx10, i32 0, i32 19, !dbg !3881
  %arraydecay = getelementptr inbounds [12288 x float], [12288 x float]* %out, i32 0, i32 0, !dbg !3882
  %27 = bitcast float* %arraydecay to i8*, !dbg !3882
  %28 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3883
  %samples_per_frame11 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %28, i32 0, i32 12, !dbg !3884
  %29 = load i16, i16* %samples_per_frame11, align 8, !dbg !3884
  %conv12 = zext i16 %29 to i64, !dbg !3883
  %mul13 = mul i64 %conv12, 4, !dbg !3885
  %shr = lshr i64 %mul13, 1, !dbg !3886
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %27, i64 %shr, i32 1, i1 false), !dbg !3882
  br label %for.inc, !dbg !3887

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !3888
  %inc = add nsw i32 %30, 1, !dbg !3888
  store i32 %inc, i32* %i, align 4, !dbg !3888
  br label %for.cond, !dbg !3890, !llvm.loop !3891

for.end:                                          ; preds = %for.cond
  %31 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3893
  %eof_done14 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %31, i32 0, i32 32, !dbg !3894
  store i8 1, i8* %eof_done14, align 2, !dbg !3895
  %32 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3896
  %packet_done15 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %32, i32 0, i32 31, !dbg !3897
  store i8 1, i8* %packet_done15, align 1, !dbg !3898
  %33 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !3899
  store i32 1, i32* %33, align 4, !dbg !3900
  store i32 0, i32* %retval, align 4, !dbg !3901
  br label %return, !dbg !3901

if.else:                                          ; preds = %entry
  %34 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3902
  %packet_done16 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %34, i32 0, i32 31, !dbg !3904
  %35 = load i8, i8* %packet_done16, align 1, !dbg !3904
  %conv17 = zext i8 %35 to i32, !dbg !3902
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !3902
  br i1 %tobool18, label %if.then21, label %lor.lhs.false, !dbg !3905

lor.lhs.false:                                    ; preds = %if.else
  %36 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3906
  %packet_loss = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %36, i32 0, i32 30, !dbg !3908
  %37 = load i8, i8* %packet_loss, align 4, !dbg !3908
  %conv19 = zext i8 %37 to i32, !dbg !3906
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !3906
  br i1 %tobool20, label %if.then21, label %if.else124, !dbg !3909

if.then21:                                        ; preds = %lor.lhs.false, %if.else
  %38 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3910
  %packet_done22 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %38, i32 0, i32 31, !dbg !3912
  store i8 0, i8* %packet_done22, align 1, !dbg !3913
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3914
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %39, i32 0, i32 4, !dbg !3916
  %40 = load i32, i32* %codec_id, align 8, !dbg !3916
  %cmp23 = icmp eq i32 %40, 86053, !dbg !3917
  br i1 %cmp23, label %land.lhs.true, label %if.end29, !dbg !3918

land.lhs.true:                                    ; preds = %if.then21
  %41 = load i32, i32* %buf_size, align 4, !dbg !3919
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3921
  %block_align = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %42, i32 0, i32 87, !dbg !3922
  %43 = load i32, i32* %block_align, align 4, !dbg !3922
  %cmp25 = icmp slt i32 %41, %43, !dbg !3923
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !3924

if.then27:                                        ; preds = %land.lhs.true
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3925
  %45 = bitcast %struct.AVCodecContext* %44 to i8*, !dbg !3925
  %46 = load i32, i32* %buf_size, align 4, !dbg !3927
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3928
  %block_align28 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %47, i32 0, i32 87, !dbg !3929
  %48 = load i32, i32* %block_align28, align 4, !dbg !3929
  call void (i8*, i32, i8*, ...) @av_log(i8* %45, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i32 0, i32 0), i32 %46, i32 %48), !dbg !3930
  store i32 -1094995529, i32* %retval, align 4, !dbg !3931
  br label %return, !dbg !3931

if.end29:                                         ; preds = %land.lhs.true, %if.then21
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3932
  %codec_id30 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %49, i32 0, i32 4, !dbg !3934
  %50 = load i32, i32* %codec_id30, align 8, !dbg !3934
  %cmp31 = icmp eq i32 %50, 86053, !dbg !3935
  br i1 %cmp31, label %if.then33, label %if.else36, !dbg !3936

if.then33:                                        ; preds = %if.end29
  %51 = load i32, i32* %buf_size, align 4, !dbg !3937
  %52 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3939
  %block_align34 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %52, i32 0, i32 87, !dbg !3940
  %53 = load i32, i32* %block_align34, align 4, !dbg !3940
  %sub = sub nsw i32 %51, %53, !dbg !3941
  %54 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3942
  %next_packet_start = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %54, i32 0, i32 24, !dbg !3943
  store i32 %sub, i32* %next_packet_start, align 32, !dbg !3944
  %55 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3945
  %block_align35 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %55, i32 0, i32 87, !dbg !3946
  %56 = load i32, i32* %block_align35, align 4, !dbg !3946
  store i32 %56, i32* %buf_size, align 4, !dbg !3947
  br label %if.end51, !dbg !3948

if.else36:                                        ; preds = %if.end29
  %57 = load i32, i32* %buf_size, align 4, !dbg !3949
  %58 = load i32, i32* %buf_size, align 4, !dbg !3951
  %59 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3952
  %block_align37 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %59, i32 0, i32 87, !dbg !3953
  %60 = load i32, i32* %block_align37, align 4, !dbg !3953
  %cmp38 = icmp sgt i32 %58, %60, !dbg !3954
  br i1 %cmp38, label %cond.true, label %cond.false, !dbg !3955

cond.true:                                        ; preds = %if.else36
  %61 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3956
  %block_align40 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %61, i32 0, i32 87, !dbg !3958
  %62 = load i32, i32* %block_align40, align 4, !dbg !3958
  br label %cond.end, !dbg !3959

cond.false:                                       ; preds = %if.else36
  %63 = load i32, i32* %buf_size, align 4, !dbg !3960
  br label %cond.end, !dbg !3962

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %62, %cond.true ], [ %63, %cond.false ], !dbg !3963
  %sub41 = sub nsw i32 %57, %cond, !dbg !3965
  %64 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3966
  %next_packet_start42 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %64, i32 0, i32 24, !dbg !3967
  store i32 %sub41, i32* %next_packet_start42, align 32, !dbg !3968
  %65 = load i32, i32* %buf_size, align 4, !dbg !3969
  %66 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3970
  %block_align43 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %66, i32 0, i32 87, !dbg !3971
  %67 = load i32, i32* %block_align43, align 4, !dbg !3971
  %cmp44 = icmp sgt i32 %65, %67, !dbg !3972
  br i1 %cmp44, label %cond.true46, label %cond.false48, !dbg !3973

cond.true46:                                      ; preds = %cond.end
  %68 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3974
  %block_align47 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %68, i32 0, i32 87, !dbg !3975
  %69 = load i32, i32* %block_align47, align 4, !dbg !3975
  br label %cond.end49, !dbg !3976

cond.false48:                                     ; preds = %cond.end
  %70 = load i32, i32* %buf_size, align 4, !dbg !3977
  br label %cond.end49, !dbg !3978

cond.end49:                                       ; preds = %cond.false48, %cond.true46
  %cond50 = phi i32 [ %69, %cond.true46 ], [ %70, %cond.false48 ], !dbg !3979
  store i32 %cond50, i32* %buf_size, align 4, !dbg !3980
  br label %if.end51

if.end51:                                         ; preds = %cond.end49, %if.then33
  %71 = load i32, i32* %buf_size, align 4, !dbg !3981
  %shl = shl i32 %71, 3, !dbg !3982
  %72 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3983
  %buf_bit_size = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %72, i32 0, i32 35, !dbg !3984
  store i32 %shl, i32* %buf_bit_size, align 32, !dbg !3985
  %73 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !3986
  %74 = load i8*, i8** %buf, align 8, !dbg !3987
  %75 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !3988
  %buf_bit_size52 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %75, i32 0, i32 35, !dbg !3989
  %76 = load i32, i32* %buf_bit_size52, align 32, !dbg !3989
  %call = call i32 @init_get_bits(%struct.GetBitContext* %73, i8* %74, i32 %76), !dbg !3990
  %77 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3991
  %codec_id53 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %77, i32 0, i32 4, !dbg !3993
  %78 = load i32, i32* %codec_id53, align 8, !dbg !3993
  %cmp54 = icmp ne i32 %78, 88076, !dbg !3994
  br i1 %cmp54, label %if.then56, label %if.else58, !dbg !3995

if.then56:                                        ; preds = %if.end51
  %79 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !3996
  %call57 = call i32 @get_bits(%struct.GetBitContext* %79, i32 4), !dbg !3998
  store i32 %call57, i32* %packet_sequence_number, align 4, !dbg !3999
  %80 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4000
  call void @skip_bits(%struct.GetBitContext* %80, i32 2), !dbg !4001
  br label %if.end60, !dbg !4002

if.else58:                                        ; preds = %if.end51
  call void @llvm.dbg.declare(metadata i32* %num_frames, metadata !4003, metadata !2019), !dbg !4005
  %81 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4006
  %call59 = call i32 @get_bits(%struct.GetBitContext* %81, i32 6), !dbg !4007
  store i32 %call59, i32* %num_frames, align 4, !dbg !4005
  br label %do.body, !dbg !4008, !llvm.loop !4009

do.body:                                          ; preds = %if.else58
  br label %do.end, !dbg !4010

do.end:                                           ; preds = %do.body
  store i32 0, i32* %packet_sequence_number, align 4, !dbg !4013
  br label %if.end60

if.end60:                                         ; preds = %do.end, %if.then56
  %82 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4014
  %83 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4015
  %log2_frame_size = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %83, i32 0, i32 13, !dbg !4016
  %84 = load i16, i16* %log2_frame_size, align 2, !dbg !4016
  %conv61 = zext i16 %84 to i32, !dbg !4015
  %call62 = call i32 @get_bits(%struct.GetBitContext* %82, i32 %conv61), !dbg !4017
  store i32 %call62, i32* %num_bits_prev_frame, align 4, !dbg !4018
  %85 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4019
  %codec_id63 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %85, i32 0, i32 4, !dbg !4021
  %86 = load i32, i32* %codec_id63, align 8, !dbg !4021
  %cmp64 = icmp ne i32 %86, 86053, !dbg !4022
  br i1 %cmp64, label %if.then66, label %if.end71, !dbg !4023

if.then66:                                        ; preds = %if.end60
  %87 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4024
  call void @skip_bits(%struct.GetBitContext* %87, i32 3), !dbg !4026
  %88 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4027
  %call67 = call i32 @get_bits(%struct.GetBitContext* %88, i32 8), !dbg !4028
  %conv68 = trunc i32 %call67 to i8, !dbg !4028
  %89 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4029
  %skip_packets = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %89, i32 0, i32 39, !dbg !4030
  store i8 %conv68, i8* %skip_packets, align 1, !dbg !4031
  br label %do.body69, !dbg !4032, !llvm.loop !4033

do.body69:                                        ; preds = %if.then66
  br label %do.end70, !dbg !4034

do.end70:                                         ; preds = %do.body69
  br label %if.end71, !dbg !4037

if.end71:                                         ; preds = %do.end70, %if.end60
  br label %do.body72, !dbg !4038, !llvm.loop !4039

do.body72:                                        ; preds = %if.end71
  br label %do.end73, !dbg !4040

do.end73:                                         ; preds = %do.body72
  %90 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4043
  %codec_id74 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %90, i32 0, i32 4, !dbg !4045
  %91 = load i32, i32* %codec_id74, align 8, !dbg !4045
  %cmp75 = icmp eq i32 %91, 86053, !dbg !4046
  br i1 %cmp75, label %land.lhs.true77, label %if.end89, !dbg !4047

land.lhs.true77:                                  ; preds = %do.end73
  %92 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4048
  %packet_loss78 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %92, i32 0, i32 30, !dbg !4050
  %93 = load i8, i8* %packet_loss78, align 4, !dbg !4050
  %tobool79 = icmp ne i8 %93, 0, !dbg !4048
  br i1 %tobool79, label %if.end89, label %land.lhs.true80, !dbg !4051

land.lhs.true80:                                  ; preds = %land.lhs.true77
  %94 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4052
  %packet_sequence_number81 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %94, i32 0, i32 26, !dbg !4053
  %95 = load i8, i8* %packet_sequence_number81, align 1, !dbg !4053
  %conv82 = zext i8 %95 to i32, !dbg !4052
  %add = add nsw i32 %conv82, 1, !dbg !4054
  %and = and i32 %add, 15, !dbg !4055
  %96 = load i32, i32* %packet_sequence_number, align 4, !dbg !4056
  %cmp83 = icmp ne i32 %and, %96, !dbg !4057
  br i1 %cmp83, label %if.then85, label %if.end89, !dbg !4058

if.then85:                                        ; preds = %land.lhs.true80
  %97 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4060
  %packet_loss86 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %97, i32 0, i32 30, !dbg !4062
  store i8 1, i8* %packet_loss86, align 4, !dbg !4063
  %98 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4064
  %99 = bitcast %struct.AVCodecContext* %98 to i8*, !dbg !4064
  %100 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4065
  %packet_sequence_number87 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %100, i32 0, i32 26, !dbg !4066
  %101 = load i8, i8* %packet_sequence_number87, align 1, !dbg !4066
  %conv88 = zext i8 %101 to i32, !dbg !4065
  %102 = load i32, i32* %packet_sequence_number, align 4, !dbg !4067
  call void (i8*, i32, i8*, ...) @av_log(i8* %99, i32 16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.42, i32 0, i32 0), i32 %conv88, i32 %102), !dbg !4068
  br label %if.end89, !dbg !4069

if.end89:                                         ; preds = %if.then85, %land.lhs.true80, %land.lhs.true77, %do.end73
  %103 = load i32, i32* %packet_sequence_number, align 4, !dbg !4070
  %conv90 = trunc i32 %103 to i8, !dbg !4070
  %104 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4071
  %packet_sequence_number91 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %104, i32 0, i32 26, !dbg !4072
  store i8 %conv90, i8* %packet_sequence_number91, align 1, !dbg !4073
  %105 = load i32, i32* %num_bits_prev_frame, align 4, !dbg !4074
  %cmp92 = icmp sgt i32 %105, 0, !dbg !4076
  br i1 %cmp92, label %if.then94, label %if.else110, !dbg !4077

if.then94:                                        ; preds = %if.end89
  call void @llvm.dbg.declare(metadata i32* %remaining_packet_bits, metadata !4078, metadata !2019), !dbg !4080
  %106 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4081
  %buf_bit_size95 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %106, i32 0, i32 35, !dbg !4082
  %107 = load i32, i32* %buf_bit_size95, align 32, !dbg !4082
  %108 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4083
  %call96 = call i32 @get_bits_count(%struct.GetBitContext* %108), !dbg !4084
  %sub97 = sub nsw i32 %107, %call96, !dbg !4085
  store i32 %sub97, i32* %remaining_packet_bits, align 4, !dbg !4080
  %109 = load i32, i32* %num_bits_prev_frame, align 4, !dbg !4086
  %110 = load i32, i32* %remaining_packet_bits, align 4, !dbg !4088
  %cmp98 = icmp sge i32 %109, %110, !dbg !4089
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !4090

if.then100:                                       ; preds = %if.then94
  %111 = load i32, i32* %remaining_packet_bits, align 4, !dbg !4091
  store i32 %111, i32* %num_bits_prev_frame, align 4, !dbg !4093
  %112 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4094
  %packet_done101 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %112, i32 0, i32 31, !dbg !4095
  store i8 1, i8* %packet_done101, align 1, !dbg !4096
  br label %if.end102, !dbg !4097

if.end102:                                        ; preds = %if.then100, %if.then94
  %113 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4098
  %114 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4099
  %115 = load i32, i32* %num_bits_prev_frame, align 4, !dbg !4100
  call void @save_bits(%struct.WMAProDecodeCtx* %113, %struct.GetBitContext* %114, i32 %115, i32 1), !dbg !4101
  br label %do.body103, !dbg !4102, !llvm.loop !4103

do.body103:                                       ; preds = %if.end102
  br label %do.end104, !dbg !4104

do.end104:                                        ; preds = %do.body103
  %116 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4107
  %packet_loss105 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %116, i32 0, i32 30, !dbg !4109
  %117 = load i8, i8* %packet_loss105, align 4, !dbg !4109
  %tobool106 = icmp ne i8 %117, 0, !dbg !4107
  br i1 %tobool106, label %if.end109, label %if.then107, !dbg !4110

if.then107:                                       ; preds = %do.end104
  %118 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4111
  %119 = load i8*, i8** %data.addr, align 8, !dbg !4112
  %120 = bitcast i8* %119 to %struct.AVFrame*, !dbg !4112
  %121 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !4113
  %call108 = call i32 @decode_frame(%struct.WMAProDecodeCtx* %118, %struct.AVFrame* %120, i32* %121), !dbg !4114
  br label %if.end109, !dbg !4114

if.end109:                                        ; preds = %if.then107, %do.end104
  br label %if.end117, !dbg !4115

if.else110:                                       ; preds = %if.end89
  %122 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4116
  %num_saved_bits = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %122, i32 0, i32 27, !dbg !4119
  %123 = load i32, i32* %num_saved_bits, align 8, !dbg !4119
  %124 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4120
  %frame_offset = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %124, i32 0, i32 28, !dbg !4121
  %125 = load i32, i32* %frame_offset, align 4, !dbg !4121
  %sub111 = sub nsw i32 %123, %125, !dbg !4122
  %tobool112 = icmp ne i32 %sub111, 0, !dbg !4122
  br i1 %tobool112, label %if.then113, label %if.end116, !dbg !4116

if.then113:                                       ; preds = %if.else110
  br label %do.body114, !dbg !4123, !llvm.loop !4125

do.body114:                                       ; preds = %if.then113
  br label %do.end115, !dbg !4126

do.end115:                                        ; preds = %do.body114
  br label %if.end116, !dbg !4129

if.end116:                                        ; preds = %do.end115, %if.else110
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.end109
  %126 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4130
  %packet_loss118 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %126, i32 0, i32 30, !dbg !4132
  %127 = load i8, i8* %packet_loss118, align 4, !dbg !4132
  %tobool119 = icmp ne i8 %127, 0, !dbg !4130
  br i1 %tobool119, label %if.then120, label %if.end123, !dbg !4133

if.then120:                                       ; preds = %if.end117
  %128 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4134
  %num_saved_bits121 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %128, i32 0, i32 27, !dbg !4136
  store i32 0, i32* %num_saved_bits121, align 8, !dbg !4137
  %129 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4138
  %packet_loss122 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %129, i32 0, i32 30, !dbg !4139
  store i8 0, i8* %packet_loss122, align 4, !dbg !4140
  br label %if.end123, !dbg !4141

if.end123:                                        ; preds = %if.then120, %if.end117
  br label %if.end180, !dbg !4142

if.else124:                                       ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %frame_size, metadata !4143, metadata !2019), !dbg !4145
  %130 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !4146
  %size125 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %130, i32 0, i32 4, !dbg !4147
  %131 = load i32, i32* %size125, align 8, !dbg !4147
  %132 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4148
  %next_packet_start126 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %132, i32 0, i32 24, !dbg !4149
  %133 = load i32, i32* %next_packet_start126, align 32, !dbg !4149
  %sub127 = sub nsw i32 %131, %133, !dbg !4150
  %shl128 = shl i32 %sub127, 3, !dbg !4151
  %134 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4152
  %buf_bit_size129 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %134, i32 0, i32 35, !dbg !4153
  store i32 %shl128, i32* %buf_bit_size129, align 32, !dbg !4154
  %135 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4155
  %136 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !4156
  %data130 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %136, i32 0, i32 3, !dbg !4157
  %137 = load i8*, i8** %data130, align 8, !dbg !4157
  %138 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4158
  %buf_bit_size131 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %138, i32 0, i32 35, !dbg !4159
  %139 = load i32, i32* %buf_bit_size131, align 32, !dbg !4159
  %call132 = call i32 @init_get_bits(%struct.GetBitContext* %135, i8* %137, i32 %139), !dbg !4160
  %140 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4161
  %141 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4162
  %packet_offset = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %141, i32 0, i32 25, !dbg !4163
  %142 = load i8, i8* %packet_offset, align 4, !dbg !4163
  %conv133 = zext i8 %142 to i32, !dbg !4162
  call void @skip_bits(%struct.GetBitContext* %140, i32 %conv133), !dbg !4164
  %143 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4165
  %len_prefix = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %143, i32 0, i32 9, !dbg !4167
  %144 = load i8, i8* %len_prefix, align 4, !dbg !4167
  %conv134 = zext i8 %144 to i32, !dbg !4165
  %tobool135 = icmp ne i32 %conv134, 0, !dbg !4165
  br i1 %tobool135, label %land.lhs.true136, label %if.else160, !dbg !4168

land.lhs.true136:                                 ; preds = %if.else124
  %145 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4169
  %146 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4171
  %call137 = call i32 @remaining_bits(%struct.WMAProDecodeCtx* %145, %struct.GetBitContext* %146), !dbg !4172
  %147 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4173
  %log2_frame_size138 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %147, i32 0, i32 13, !dbg !4174
  %148 = load i16, i16* %log2_frame_size138, align 2, !dbg !4174
  %conv139 = zext i16 %148 to i32, !dbg !4173
  %cmp140 = icmp sgt i32 %call137, %conv139, !dbg !4175
  br i1 %cmp140, label %land.lhs.true142, label %if.else160, !dbg !4176

land.lhs.true142:                                 ; preds = %land.lhs.true136
  %149 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4177
  %150 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4178
  %log2_frame_size143 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %150, i32 0, i32 13, !dbg !4179
  %151 = load i16, i16* %log2_frame_size143, align 2, !dbg !4179
  %conv144 = zext i16 %151 to i32, !dbg !4178
  %call145 = call i32 @show_bits(%struct.GetBitContext* %149, i32 %conv144), !dbg !4180
  store i32 %call145, i32* %frame_size, align 4, !dbg !4181
  %tobool146 = icmp ne i32 %call145, 0, !dbg !4181
  br i1 %tobool146, label %land.lhs.true147, label %if.else160, !dbg !4182

land.lhs.true147:                                 ; preds = %land.lhs.true142
  %152 = load i32, i32* %frame_size, align 4, !dbg !4183
  %153 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4184
  %154 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4185
  %call148 = call i32 @remaining_bits(%struct.WMAProDecodeCtx* %153, %struct.GetBitContext* %154), !dbg !4186
  %cmp149 = icmp sle i32 %152, %call148, !dbg !4187
  br i1 %cmp149, label %if.then151, label %if.else160, !dbg !4188

if.then151:                                       ; preds = %land.lhs.true147
  %155 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4190
  %156 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4192
  %157 = load i32, i32* %frame_size, align 4, !dbg !4193
  call void @save_bits(%struct.WMAProDecodeCtx* %155, %struct.GetBitContext* %156, i32 %157, i32 0), !dbg !4194
  %158 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4195
  %packet_loss152 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %158, i32 0, i32 30, !dbg !4197
  %159 = load i8, i8* %packet_loss152, align 4, !dbg !4197
  %tobool153 = icmp ne i8 %159, 0, !dbg !4195
  br i1 %tobool153, label %if.end159, label %if.then154, !dbg !4198

if.then154:                                       ; preds = %if.then151
  %160 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4199
  %161 = load i8*, i8** %data.addr, align 8, !dbg !4200
  %162 = bitcast i8* %161 to %struct.AVFrame*, !dbg !4200
  %163 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !4201
  %call155 = call i32 @decode_frame(%struct.WMAProDecodeCtx* %160, %struct.AVFrame* %162, i32* %163), !dbg !4202
  %tobool156 = icmp ne i32 %call155, 0, !dbg !4203
  %lnot = xor i1 %tobool156, true, !dbg !4203
  %lnot.ext = zext i1 %lnot to i32, !dbg !4203
  %conv157 = trunc i32 %lnot.ext to i8, !dbg !4203
  %164 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4204
  %packet_done158 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %164, i32 0, i32 31, !dbg !4205
  store i8 %conv157, i8* %packet_done158, align 1, !dbg !4206
  br label %if.end159, !dbg !4204

if.end159:                                        ; preds = %if.then154, %if.then151
  br label %if.end179, !dbg !4207

if.else160:                                       ; preds = %land.lhs.true147, %land.lhs.true142, %land.lhs.true136, %if.else124
  %165 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4208
  %len_prefix161 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %165, i32 0, i32 9, !dbg !4211
  %166 = load i8, i8* %len_prefix161, align 4, !dbg !4211
  %tobool162 = icmp ne i8 %166, 0, !dbg !4208
  br i1 %tobool162, label %if.else176, label %land.lhs.true163, !dbg !4212

land.lhs.true163:                                 ; preds = %if.else160
  %167 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4213
  %num_saved_bits164 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %167, i32 0, i32 27, !dbg !4214
  %168 = load i32, i32* %num_saved_bits164, align 8, !dbg !4214
  %169 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4215
  %gb165 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %169, i32 0, i32 34, !dbg !4216
  %call166 = call i32 @get_bits_count(%struct.GetBitContext* %gb165), !dbg !4217
  %cmp167 = icmp sgt i32 %168, %call166, !dbg !4218
  br i1 %cmp167, label %if.then169, label %if.else176, !dbg !4219

if.then169:                                       ; preds = %land.lhs.true163
  %170 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4221
  %171 = load i8*, i8** %data.addr, align 8, !dbg !4223
  %172 = bitcast i8* %171 to %struct.AVFrame*, !dbg !4223
  %173 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !4224
  %call170 = call i32 @decode_frame(%struct.WMAProDecodeCtx* %170, %struct.AVFrame* %172, i32* %173), !dbg !4225
  %tobool171 = icmp ne i32 %call170, 0, !dbg !4226
  %lnot172 = xor i1 %tobool171, true, !dbg !4226
  %lnot.ext173 = zext i1 %lnot172 to i32, !dbg !4226
  %conv174 = trunc i32 %lnot.ext173 to i8, !dbg !4226
  %174 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4227
  %packet_done175 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %174, i32 0, i32 31, !dbg !4228
  store i8 %conv174, i8* %packet_done175, align 1, !dbg !4229
  br label %if.end178, !dbg !4230

if.else176:                                       ; preds = %land.lhs.true163, %if.else160
  %175 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4231
  %packet_done177 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %175, i32 0, i32 31, !dbg !4233
  store i8 1, i8* %packet_done177, align 1, !dbg !4234
  br label %if.end178

if.end178:                                        ; preds = %if.else176, %if.then169
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.end159
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.end123
  br label %if.end181

if.end181:                                        ; preds = %if.end180
  %176 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4235
  %177 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4237
  %call182 = call i32 @remaining_bits(%struct.WMAProDecodeCtx* %176, %struct.GetBitContext* %177), !dbg !4238
  %cmp183 = icmp slt i32 %call182, 0, !dbg !4239
  br i1 %cmp183, label %if.then185, label %if.end189, !dbg !4240

if.then185:                                       ; preds = %if.end181
  %178 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4241
  %179 = bitcast %struct.AVCodecContext* %178 to i8*, !dbg !4241
  %180 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4243
  %181 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4244
  %call186 = call i32 @remaining_bits(%struct.WMAProDecodeCtx* %180, %struct.GetBitContext* %181), !dbg !4245
  %sub187 = sub nsw i32 0, %call186, !dbg !4246
  call void (i8*, i32, i8*, ...) @av_log(i8* %179, i32 16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i32 0, i32 0), i32 %sub187), !dbg !4247
  %182 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4249
  %packet_loss188 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %182, i32 0, i32 30, !dbg !4250
  store i8 1, i8* %packet_loss188, align 4, !dbg !4251
  br label %if.end189, !dbg !4252

if.end189:                                        ; preds = %if.then185, %if.end181
  %183 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4253
  %packet_done190 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %183, i32 0, i32 31, !dbg !4255
  %184 = load i8, i8* %packet_done190, align 1, !dbg !4255
  %conv191 = zext i8 %184 to i32, !dbg !4253
  %tobool192 = icmp ne i32 %conv191, 0, !dbg !4253
  br i1 %tobool192, label %land.lhs.true193, label %if.end202, !dbg !4256

land.lhs.true193:                                 ; preds = %if.end189
  %185 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4257
  %packet_loss194 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %185, i32 0, i32 30, !dbg !4259
  %186 = load i8, i8* %packet_loss194, align 4, !dbg !4259
  %tobool195 = icmp ne i8 %186, 0, !dbg !4257
  br i1 %tobool195, label %if.end202, label %land.lhs.true196, !dbg !4260

land.lhs.true196:                                 ; preds = %land.lhs.true193
  %187 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4261
  %188 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4262
  %call197 = call i32 @remaining_bits(%struct.WMAProDecodeCtx* %187, %struct.GetBitContext* %188), !dbg !4263
  %cmp198 = icmp sgt i32 %call197, 0, !dbg !4264
  br i1 %cmp198, label %if.then200, label %if.end202, !dbg !4265

if.then200:                                       ; preds = %land.lhs.true196
  %189 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4267
  %190 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4269
  %191 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4270
  %192 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4271
  %call201 = call i32 @remaining_bits(%struct.WMAProDecodeCtx* %191, %struct.GetBitContext* %192), !dbg !4272
  call void @save_bits(%struct.WMAProDecodeCtx* %189, %struct.GetBitContext* %190, i32 %call201, i32 0), !dbg !4273
  br label %if.end202, !dbg !4275

if.end202:                                        ; preds = %if.then200, %land.lhs.true196, %land.lhs.true193, %if.end189
  %193 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4276
  %call203 = call i32 @get_bits_count(%struct.GetBitContext* %193), !dbg !4277
  %and204 = and i32 %call203, 7, !dbg !4278
  %conv205 = trunc i32 %and204 to i8, !dbg !4277
  %194 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4279
  %packet_offset206 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %194, i32 0, i32 25, !dbg !4280
  store i8 %conv205, i8* %packet_offset206, align 4, !dbg !4281
  %195 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4282
  %packet_loss207 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %195, i32 0, i32 30, !dbg !4284
  %196 = load i8, i8* %packet_loss207, align 4, !dbg !4284
  %tobool208 = icmp ne i8 %196, 0, !dbg !4282
  br i1 %tobool208, label %if.then209, label %if.end210, !dbg !4285

if.then209:                                       ; preds = %if.end202
  store i32 -1094995529, i32* %retval, align 4, !dbg !4286
  br label %return, !dbg !4286

if.end210:                                        ; preds = %if.end202
  %197 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4287
  %call211 = call i32 @get_bits_count(%struct.GetBitContext* %197), !dbg !4288
  %shr212 = ashr i32 %call211, 3, !dbg !4289
  store i32 %shr212, i32* %retval, align 4, !dbg !4290
  br label %return, !dbg !4290

return:                                           ; preds = %if.end210, %if.then209, %if.then27, %for.end, %if.then3
  %198 = load i32, i32* %retval, align 4, !dbg !4291
  ret i32 %198, !dbg !4291
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #4 !dbg !4292 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4295, metadata !2019), !dbg !4296
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4297, metadata !2019), !dbg !4298
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !4299, metadata !2019), !dbg !4300
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !4301, metadata !2019), !dbg !4302
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4303, metadata !2019), !dbg !4304
  store i32 0, i32* %ret, align 4, !dbg !4304
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !4305
  %cmp = icmp sge i32 %0, 2147483135, !dbg !4307
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4308

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !4309
  %cmp1 = icmp slt i32 %1, 0, !dbg !4311
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !4312

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !4313
  %tobool = icmp ne i8* %2, null, !dbg !4313
  br i1 %tobool, label %if.end, label %if.then, !dbg !4315

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !4316
  store i8* null, i8** %buffer.addr, align 8, !dbg !4318
  store i32 -1094995529, i32* %ret, align 4, !dbg !4319
  br label %if.end, !dbg !4320

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !4321
  %add = add nsw i32 %3, 7, !dbg !4322
  %shr = ashr i32 %add, 3, !dbg !4323
  store i32 %shr, i32* %buffer_size, align 4, !dbg !4324
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !4325
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4326
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !4327
  store i8* %4, i8** %buffer3, align 8, !dbg !4328
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !4329
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4330
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !4331
  store i32 %6, i32* %size_in_bits, align 4, !dbg !4332
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !4333
  %add4 = add nsw i32 %8, 8, !dbg !4334
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4335
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !4336
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !4337
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !4338
  %11 = load i32, i32* %buffer_size, align 4, !dbg !4339
  %idx.ext = sext i32 %11 to i64, !dbg !4340
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !4340
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4341
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !4342
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !4343
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4344
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !4345
  store i32 0, i32* %index, align 8, !dbg !4346
  %14 = load i32, i32* %ret, align 4, !dbg !4347
  ret i32 %14, !dbg !4348
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !4349 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !4352, metadata !2019), !dbg !4357
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4359, metadata !2019), !dbg !4360
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4361, metadata !2019), !dbg !4362
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !4363, metadata !2019), !dbg !4364
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !4365, metadata !2019), !dbg !4366
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4367
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4368
  %1 = load i32, i32* %index, align 8, !dbg !4368
  store i32 %1, i32* %re_index, align 4, !dbg !4366
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !4369, metadata !2019), !dbg !4370
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !4371, metadata !2019), !dbg !4372
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4373
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !4374
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4374
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !4372
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4375
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !4376
  %5 = load i8*, i8** %buffer, align 8, !dbg !4376
  %6 = load i32, i32* %re_index, align 4, !dbg !4377
  %shr = lshr i32 %6, 3, !dbg !4378
  %idx.ext = zext i32 %shr to i64, !dbg !4379
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !4379
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !4380
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !4380
  %8 = load i32, i32* %l, align 1, !dbg !4380
  store i32 %8, i32* %x.addr.i, align 4, !dbg !4381
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !4382
  %shl.i = shl i32 %9, 8, !dbg !4383
  %and.i = and i32 %shl.i, 65280, !dbg !4384
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !4385
  %shr.i = lshr i32 %10, 8, !dbg !4386
  %and1.i = and i32 %shr.i, 255, !dbg !4387
  %or.i = or i32 %and.i, %and1.i, !dbg !4388
  %shl2.i = shl i32 %or.i, 16, !dbg !4389
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !4390
  %shr3.i = lshr i32 %11, 16, !dbg !4391
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4392
  %and5.i = and i32 %shl4.i, 65280, !dbg !4393
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !4394
  %shr6.i = lshr i32 %12, 16, !dbg !4395
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4396
  %and8.i = and i32 %shr7.i, 255, !dbg !4397
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4398
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4399
  %13 = load i32, i32* %re_index, align 4, !dbg !4400
  %and = and i32 %13, 7, !dbg !4401
  %shl = shl i32 %or10.i, %and, !dbg !4402
  store i32 %shl, i32* %re_cache, align 4, !dbg !4403
  %14 = load i32, i32* %re_cache, align 4, !dbg !4404
  %15 = load i32, i32* %n.addr, align 4, !dbg !4405
  %conv = trunc i32 %15 to i8, !dbg !4405
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !4406
  store i32 %call4, i32* %tmp, align 4, !dbg !4407
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !4408
  %17 = load i32, i32* %re_index, align 4, !dbg !4409
  %18 = load i32, i32* %n.addr, align 4, !dbg !4410
  %add = add i32 %17, %18, !dbg !4411
  %cmp = icmp ugt i32 %16, %add, !dbg !4412
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4413

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !4414
  %20 = load i32, i32* %n.addr, align 4, !dbg !4416
  %add6 = add i32 %19, %20, !dbg !4417
  br label %cond.end, !dbg !4418

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !4419
  br label %cond.end, !dbg !4421

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !4422
  store i32 %cond, i32* %re_index, align 4, !dbg !4424
  %22 = load i32, i32* %re_index, align 4, !dbg !4425
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4426
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !4427
  store i32 %22, i32* %index7, align 8, !dbg !4428
  %24 = load i32, i32* %tmp, align 4, !dbg !4429
  ret i32 %24, !dbg !4430
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !4431 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4434, metadata !2019), !dbg !4435
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4436, metadata !2019), !dbg !4437
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !4438, metadata !2019), !dbg !4439
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4440
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4441
  %1 = load i32, i32* %index, align 8, !dbg !4441
  store i32 %1, i32* %re_index, align 4, !dbg !4439
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !4442, metadata !2019), !dbg !4443
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !4444, metadata !2019), !dbg !4445
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4446
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !4447
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4447
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !4445
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !4448
  %5 = load i32, i32* %re_index, align 4, !dbg !4449
  %6 = load i32, i32* %n.addr, align 4, !dbg !4450
  %add = add i32 %5, %6, !dbg !4451
  %cmp = icmp ugt i32 %4, %add, !dbg !4452
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4453

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !4454
  %8 = load i32, i32* %n.addr, align 4, !dbg !4456
  %add1 = add i32 %7, %8, !dbg !4457
  br label %cond.end, !dbg !4458

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !4459
  br label %cond.end, !dbg !4461

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !4462
  store i32 %cond, i32* %re_index, align 4, !dbg !4464
  %10 = load i32, i32* %re_index, align 4, !dbg !4465
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4466
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !4467
  store i32 %10, i32* %index2, align 8, !dbg !4468
  ret void, !dbg !4469
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #4 !dbg !4470 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4475, metadata !2019), !dbg !4476
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4477
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4478
  %1 = load i32, i32* %index, align 8, !dbg !4478
  ret i32 %1, !dbg !4479
}

; Function Attrs: nounwind uwtable
define internal void @save_bits(%struct.WMAProDecodeCtx* %s, %struct.GetBitContext* %gb, i32 %len, i32 %append) #1 !dbg !4480 {
entry:
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %len.addr = alloca i32, align 4
  %append.addr = alloca i32, align 4
  %buflen = alloca i32, align 4
  %align = alloca i32, align 4
  %tmp = alloca %struct.PutBitContext, align 8
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !4483, metadata !2019), !dbg !4484
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4485, metadata !2019), !dbg !4486
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !4487, metadata !2019), !dbg !4488
  store i32 %append, i32* %append.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %append.addr, metadata !4489, metadata !2019), !dbg !4490
  call void @llvm.dbg.declare(metadata i32* %buflen, metadata !4491, metadata !2019), !dbg !4492
  %0 = load i32, i32* %append.addr, align 4, !dbg !4493
  %tobool = icmp ne i32 %0, 0, !dbg !4493
  br i1 %tobool, label %if.end, label %if.then, !dbg !4495

if.then:                                          ; preds = %entry
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4496
  %call = call i32 @get_bits_count(%struct.GetBitContext* %1), !dbg !4498
  %and = and i32 %call, 7, !dbg !4499
  %2 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4500
  %frame_offset = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %2, i32 0, i32 28, !dbg !4501
  store i32 %and, i32* %frame_offset, align 4, !dbg !4502
  %3 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4503
  %frame_offset1 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %3, i32 0, i32 28, !dbg !4504
  %4 = load i32, i32* %frame_offset1, align 4, !dbg !4504
  %5 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4505
  %num_saved_bits = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %5, i32 0, i32 27, !dbg !4506
  store i32 %4, i32* %num_saved_bits, align 8, !dbg !4507
  %6 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4508
  %pb = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %6, i32 0, i32 3, !dbg !4509
  %7 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4510
  %frame_data = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %7, i32 0, i32 2, !dbg !4511
  %arraydecay = getelementptr inbounds [32832 x i8], [32832 x i8]* %frame_data, i32 0, i32 0, !dbg !4510
  call void @init_put_bits(%struct.PutBitContext* %pb, i8* %arraydecay, i32 32768), !dbg !4512
  br label %if.end, !dbg !4513

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4514
  %pb2 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %8, i32 0, i32 3, !dbg !4515
  %call3 = call i32 @put_bits_count(%struct.PutBitContext* %pb2), !dbg !4516
  %9 = load i32, i32* %len.addr, align 4, !dbg !4517
  %add = add nsw i32 %call3, %9, !dbg !4518
  %add4 = add nsw i32 %add, 8, !dbg !4519
  %shr = ashr i32 %add4, 3, !dbg !4520
  store i32 %shr, i32* %buflen, align 4, !dbg !4521
  %10 = load i32, i32* %len.addr, align 4, !dbg !4522
  %cmp = icmp sle i32 %10, 0, !dbg !4524
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !4525

lor.lhs.false:                                    ; preds = %if.end
  %11 = load i32, i32* %buflen, align 4, !dbg !4526
  %cmp5 = icmp sgt i32 %11, 32768, !dbg !4528
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4529

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4530
  %avctx = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %12, i32 0, i32 0, !dbg !4532
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4532
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !4530
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %14, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.44, i32 0, i32 0)), !dbg !4533
  %15 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4534
  %packet_loss = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %15, i32 0, i32 30, !dbg !4535
  store i8 1, i8* %packet_loss, align 4, !dbg !4536
  br label %return, !dbg !4537

if.end7:                                          ; preds = %lor.lhs.false
  br label %do.body, !dbg !4538, !llvm.loop !4539

do.body:                                          ; preds = %if.end7
  %16 = load i32, i32* %len.addr, align 4, !dbg !4540
  %17 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4544
  %pb8 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %17, i32 0, i32 3, !dbg !4545
  %call9 = call i32 @put_bits_left(%struct.PutBitContext* %pb8), !dbg !4546
  %cmp10 = icmp sle i32 %16, %call9, !dbg !4547
  br i1 %cmp10, label %if.end12, label %if.then11, !dbg !4548

if.then11:                                        ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i32 0, i32 0), i32 1578), !dbg !4549
  call void @abort() #8, !dbg !4552
  unreachable, !dbg !4554

if.end12:                                         ; preds = %do.body
  br label %do.end, !dbg !4555

do.end:                                           ; preds = %if.end12
  %18 = load i32, i32* %len.addr, align 4, !dbg !4557
  %19 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4558
  %num_saved_bits13 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %19, i32 0, i32 27, !dbg !4559
  %20 = load i32, i32* %num_saved_bits13, align 8, !dbg !4560
  %add14 = add nsw i32 %20, %18, !dbg !4560
  store i32 %add14, i32* %num_saved_bits13, align 8, !dbg !4560
  %21 = load i32, i32* %append.addr, align 4, !dbg !4561
  %tobool15 = icmp ne i32 %21, 0, !dbg !4561
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !4563

if.then16:                                        ; preds = %do.end
  %22 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4564
  %pb17 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %22, i32 0, i32 3, !dbg !4566
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4567
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 0, !dbg !4568
  %24 = load i8*, i8** %buffer, align 8, !dbg !4568
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4569
  %call18 = call i32 @get_bits_count(%struct.GetBitContext* %25), !dbg !4570
  %shr19 = ashr i32 %call18, 3, !dbg !4571
  %idx.ext = sext i32 %shr19 to i64, !dbg !4572
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !4572
  %26 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4573
  %num_saved_bits20 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %26, i32 0, i32 27, !dbg !4574
  %27 = load i32, i32* %num_saved_bits20, align 8, !dbg !4574
  call void @avpriv_copy_bits(%struct.PutBitContext* %pb17, i8* %add.ptr, i32 %27), !dbg !4575
  br label %if.end33, !dbg !4577

if.else:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %align, metadata !4578, metadata !2019), !dbg !4580
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4581
  %call21 = call i32 @get_bits_count(%struct.GetBitContext* %28), !dbg !4582
  %and22 = and i32 %call21, 7, !dbg !4583
  %sub = sub nsw i32 8, %and22, !dbg !4584
  store i32 %sub, i32* %align, align 4, !dbg !4580
  %29 = load i32, i32* %align, align 4, !dbg !4585
  %30 = load i32, i32* %len.addr, align 4, !dbg !4586
  %cmp23 = icmp sgt i32 %29, %30, !dbg !4587
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !4588

cond.true:                                        ; preds = %if.else
  %31 = load i32, i32* %len.addr, align 4, !dbg !4589
  br label %cond.end, !dbg !4591

cond.false:                                       ; preds = %if.else
  %32 = load i32, i32* %align, align 4, !dbg !4592
  br label %cond.end, !dbg !4594

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %31, %cond.true ], [ %32, %cond.false ], !dbg !4595
  store i32 %cond, i32* %align, align 4, !dbg !4597
  %33 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4598
  %pb24 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %33, i32 0, i32 3, !dbg !4599
  %34 = load i32, i32* %align, align 4, !dbg !4600
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4601
  %36 = load i32, i32* %align, align 4, !dbg !4602
  %call25 = call i32 @get_bits(%struct.GetBitContext* %35, i32 %36), !dbg !4603
  call void @put_bits(%struct.PutBitContext* %pb24, i32 %34, i32 %call25), !dbg !4604
  %37 = load i32, i32* %align, align 4, !dbg !4605
  %38 = load i32, i32* %len.addr, align 4, !dbg !4606
  %sub26 = sub nsw i32 %38, %37, !dbg !4606
  store i32 %sub26, i32* %len.addr, align 4, !dbg !4606
  %39 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4607
  %pb27 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %39, i32 0, i32 3, !dbg !4608
  %40 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4609
  %buffer28 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %40, i32 0, i32 0, !dbg !4610
  %41 = load i8*, i8** %buffer28, align 8, !dbg !4610
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4611
  %call29 = call i32 @get_bits_count(%struct.GetBitContext* %42), !dbg !4612
  %shr30 = ashr i32 %call29, 3, !dbg !4613
  %idx.ext31 = sext i32 %shr30 to i64, !dbg !4614
  %add.ptr32 = getelementptr inbounds i8, i8* %41, i64 %idx.ext31, !dbg !4614
  %43 = load i32, i32* %len.addr, align 4, !dbg !4615
  call void @avpriv_copy_bits(%struct.PutBitContext* %pb27, i8* %add.ptr32, i32 %43), !dbg !4616
  br label %if.end33

if.end33:                                         ; preds = %cond.end, %if.then16
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4617
  %45 = load i32, i32* %len.addr, align 4, !dbg !4618
  call void @skip_bits_long(%struct.GetBitContext* %44, i32 %45), !dbg !4619
  call void @llvm.dbg.declare(metadata %struct.PutBitContext* %tmp, metadata !4620, metadata !2019), !dbg !4622
  %46 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4623
  %pb34 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %46, i32 0, i32 3, !dbg !4624
  %47 = bitcast %struct.PutBitContext* %tmp to i8*, !dbg !4624
  %48 = bitcast %struct.PutBitContext* %pb34 to i8*, !dbg !4624
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 40, i32 8, i1 false), !dbg !4624
  call void @flush_put_bits(%struct.PutBitContext* %tmp), !dbg !4625
  %49 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4626
  %gb35 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %49, i32 0, i32 34, !dbg !4627
  %50 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4628
  %frame_data36 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %50, i32 0, i32 2, !dbg !4629
  %arraydecay37 = getelementptr inbounds [32832 x i8], [32832 x i8]* %frame_data36, i32 0, i32 0, !dbg !4628
  %51 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4630
  %num_saved_bits38 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %51, i32 0, i32 27, !dbg !4631
  %52 = load i32, i32* %num_saved_bits38, align 8, !dbg !4631
  %call39 = call i32 @init_get_bits(%struct.GetBitContext* %gb35, i8* %arraydecay37, i32 %52), !dbg !4632
  %53 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4633
  %gb40 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %53, i32 0, i32 34, !dbg !4634
  %54 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4635
  %frame_offset41 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %54, i32 0, i32 28, !dbg !4636
  %55 = load i32, i32* %frame_offset41, align 4, !dbg !4636
  call void @skip_bits(%struct.GetBitContext* %gb40, i32 %55), !dbg !4637
  br label %return, !dbg !4638

return:                                           ; preds = %if.end33, %if.then6
  ret void, !dbg !4639
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_frame(%struct.WMAProDecodeCtx* %s, %struct.AVFrame* %frame, i32* %got_frame_ptr) #1 !dbg !4641 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %frame.addr = alloca %struct.AVFrame*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %gb = alloca %struct.GetBitContext*, align 8
  %more_frames = alloca i32, align 4
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %skip = alloca i32, align 4
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !4644, metadata !2019), !dbg !4645
  store %struct.AVFrame* %frame, %struct.AVFrame** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame.addr, metadata !4646, metadata !2019), !dbg !4647
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !4648, metadata !2019), !dbg !4649
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb, metadata !4650, metadata !2019), !dbg !4651
  %0 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4652
  %gb1 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %0, i32 0, i32 34, !dbg !4653
  store %struct.GetBitContext* %gb1, %struct.GetBitContext** %gb, align 8, !dbg !4651
  call void @llvm.dbg.declare(metadata i32* %more_frames, metadata !4654, metadata !2019), !dbg !4655
  store i32 0, i32* %more_frames, align 4, !dbg !4655
  call void @llvm.dbg.declare(metadata i32* %len, metadata !4656, metadata !2019), !dbg !4657
  store i32 0, i32* %len, align 4, !dbg !4657
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4658, metadata !2019), !dbg !4659
  %1 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4660
  %len_prefix = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %1, i32 0, i32 9, !dbg !4662
  %2 = load i8, i8* %len_prefix, align 4, !dbg !4662
  %tobool = icmp ne i8 %2, 0, !dbg !4660
  br i1 %tobool, label %if.then, label %if.end, !dbg !4663

if.then:                                          ; preds = %entry
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4664
  %4 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4665
  %log2_frame_size = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %4, i32 0, i32 13, !dbg !4666
  %5 = load i16, i16* %log2_frame_size, align 2, !dbg !4666
  %conv = zext i16 %5 to i32, !dbg !4665
  %call = call i32 @get_bits(%struct.GetBitContext* %3, i32 %conv), !dbg !4667
  store i32 %call, i32* %len, align 4, !dbg !4668
  br label %if.end, !dbg !4669

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !4670, !llvm.loop !4671

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !4672

do.end:                                           ; preds = %do.body
  %6 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4675
  %call2 = call i32 @decode_tilehdr(%struct.WMAProDecodeCtx* %6), !dbg !4677
  %tobool3 = icmp ne i32 %call2, 0, !dbg !4677
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !4678

if.then4:                                         ; preds = %do.end
  %7 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4679
  %packet_loss = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %7, i32 0, i32 30, !dbg !4681
  store i8 1, i8* %packet_loss, align 4, !dbg !4682
  store i32 0, i32* %retval, align 4, !dbg !4683
  br label %return, !dbg !4683

if.end5:                                          ; preds = %do.end
  %8 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4684
  %nb_channels = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %8, i32 0, i32 41, !dbg !4686
  %9 = load i8, i8* %nb_channels, align 2, !dbg !4686
  %conv6 = sext i8 %9 to i32, !dbg !4684
  %cmp = icmp sgt i32 %conv6, 1, !dbg !4687
  br i1 %cmp, label %land.lhs.true, label %if.end21, !dbg !4688

land.lhs.true:                                    ; preds = %if.end5
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4689
  %call8 = call i32 @get_bits1(%struct.GetBitContext* %10), !dbg !4691
  %tobool9 = icmp ne i32 %call8, 0, !dbg !4691
  br i1 %tobool9, label %if.then10, label %if.end21, !dbg !4692

if.then10:                                        ; preds = %land.lhs.true
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4693
  %call11 = call i32 @get_bits1(%struct.GetBitContext* %11), !dbg !4696
  %tobool12 = icmp ne i32 %call11, 0, !dbg !4696
  br i1 %tobool12, label %if.then13, label %if.end20, !dbg !4697

if.then13:                                        ; preds = %if.then10
  store i32 0, i32* %i, align 4, !dbg !4698
  br label %for.cond, !dbg !4701

for.cond:                                         ; preds = %for.inc, %if.then13
  %12 = load i32, i32* %i, align 4, !dbg !4702
  %13 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4705
  %nb_channels14 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %13, i32 0, i32 41, !dbg !4706
  %14 = load i8, i8* %nb_channels14, align 2, !dbg !4706
  %conv15 = sext i8 %14 to i32, !dbg !4705
  %15 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4707
  %nb_channels16 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %15, i32 0, i32 41, !dbg !4708
  %16 = load i8, i8* %nb_channels16, align 2, !dbg !4708
  %conv17 = sext i8 %16 to i32, !dbg !4707
  %mul = mul nsw i32 %conv15, %conv17, !dbg !4709
  %cmp18 = icmp slt i32 %12, %mul, !dbg !4710
  br i1 %cmp18, label %for.body, label %for.end, !dbg !4711

for.body:                                         ; preds = %for.cond
  %17 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4712
  call void @skip_bits(%struct.GetBitContext* %17, i32 4), !dbg !4713
  br label %for.inc, !dbg !4713

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !4714
  %inc = add nsw i32 %18, 1, !dbg !4714
  store i32 %inc, i32* %i, align 4, !dbg !4714
  br label %for.cond, !dbg !4716, !llvm.loop !4717

for.end:                                          ; preds = %for.cond
  br label %if.end20, !dbg !4719

if.end20:                                         ; preds = %for.end, %if.then10
  br label %if.end21, !dbg !4720

if.end21:                                         ; preds = %if.end20, %land.lhs.true, %if.end5
  %19 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4721
  %dynamic_range_compression = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %19, i32 0, i32 10, !dbg !4723
  %20 = load i8, i8* %dynamic_range_compression, align 1, !dbg !4723
  %tobool22 = icmp ne i8 %20, 0, !dbg !4721
  br i1 %tobool22, label %if.then23, label %if.end28, !dbg !4724

if.then23:                                        ; preds = %if.end21
  %21 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4725
  %call24 = call i32 @get_bits(%struct.GetBitContext* %21, i32 8), !dbg !4727
  %conv25 = trunc i32 %call24 to i8, !dbg !4727
  %22 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4728
  %drc_gain = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %22, i32 0, i32 36, !dbg !4729
  store i8 %conv25, i8* %drc_gain, align 4, !dbg !4730
  br label %do.body26, !dbg !4731, !llvm.loop !4732

do.body26:                                        ; preds = %if.then23
  br label %do.end27, !dbg !4733

do.end27:                                         ; preds = %do.body26
  br label %if.end28, !dbg !4736

if.end28:                                         ; preds = %do.end27, %if.end21
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4737
  %call29 = call i32 @get_bits1(%struct.GetBitContext* %23), !dbg !4739
  %tobool30 = icmp ne i32 %call29, 0, !dbg !4739
  br i1 %tobool30, label %if.then31, label %if.end53, !dbg !4740

if.then31:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !4741, metadata !2019), !dbg !4743
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4744
  %call32 = call i32 @get_bits1(%struct.GetBitContext* %24), !dbg !4746
  %tobool33 = icmp ne i32 %call32, 0, !dbg !4746
  br i1 %tobool33, label %if.then34, label %if.end40, !dbg !4747

if.then34:                                        ; preds = %if.then31
  %25 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4748
  %26 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4750
  %samples_per_frame = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %26, i32 0, i32 12, !dbg !4751
  %27 = load i16, i16* %samples_per_frame, align 8, !dbg !4751
  %conv35 = zext i16 %27 to i32, !dbg !4750
  %mul36 = mul nsw i32 %conv35, 2, !dbg !4752
  %or = or i32 %mul36, 1, !dbg !4753
  %28 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !4754
  %sub = sub nsw i32 31, %28, !dbg !4755
  %call37 = call i32 @get_bits(%struct.GetBitContext* %25, i32 %sub), !dbg !4756
  store i32 %call37, i32* %skip, align 4, !dbg !4758
  br label %do.body38, !dbg !4759, !llvm.loop !4760

do.body38:                                        ; preds = %if.then34
  br label %do.end39, !dbg !4761

do.end39:                                         ; preds = %do.body38
  br label %if.end40, !dbg !4764

if.end40:                                         ; preds = %do.end39, %if.then31
  %29 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4765
  %call41 = call i32 @get_bits1(%struct.GetBitContext* %29), !dbg !4767
  %tobool42 = icmp ne i32 %call41, 0, !dbg !4767
  br i1 %tobool42, label %if.then43, label %if.end52, !dbg !4768

if.then43:                                        ; preds = %if.end40
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4769
  %31 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4771
  %samples_per_frame44 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %31, i32 0, i32 12, !dbg !4772
  %32 = load i16, i16* %samples_per_frame44, align 8, !dbg !4772
  %conv45 = zext i16 %32 to i32, !dbg !4771
  %mul46 = mul nsw i32 %conv45, 2, !dbg !4773
  %or47 = or i32 %mul46, 1, !dbg !4774
  %33 = call i32 @llvm.ctlz.i32(i32 %or47, i1 true), !dbg !4775
  %sub48 = sub nsw i32 31, %33, !dbg !4776
  %call49 = call i32 @get_bits(%struct.GetBitContext* %30, i32 %sub48), !dbg !4777
  store i32 %call49, i32* %skip, align 4, !dbg !4779
  br label %do.body50, !dbg !4780, !llvm.loop !4781

do.body50:                                        ; preds = %if.then43
  br label %do.end51, !dbg !4782

do.end51:                                         ; preds = %do.body50
  br label %if.end52, !dbg !4785

if.end52:                                         ; preds = %do.end51, %if.end40
  br label %if.end53, !dbg !4786

if.end53:                                         ; preds = %if.end52, %if.end28
  br label %do.body54, !dbg !4787, !llvm.loop !4788

do.body54:                                        ; preds = %if.end53
  br label %do.end55, !dbg !4789

do.end55:                                         ; preds = %do.body54
  %34 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4792
  %parsed_all_subframes = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %34, i32 0, i32 38, !dbg !4793
  store i8 0, i8* %parsed_all_subframes, align 2, !dbg !4794
  store i32 0, i32* %i, align 4, !dbg !4795
  br label %for.cond56, !dbg !4797

for.cond56:                                       ; preds = %for.inc68, %do.end55
  %35 = load i32, i32* %i, align 4, !dbg !4798
  %36 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4801
  %nb_channels57 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %36, i32 0, i32 41, !dbg !4802
  %37 = load i8, i8* %nb_channels57, align 2, !dbg !4802
  %conv58 = sext i8 %37 to i32, !dbg !4801
  %cmp59 = icmp slt i32 %35, %conv58, !dbg !4803
  br i1 %cmp59, label %for.body61, label %for.end70, !dbg !4804

for.body61:                                       ; preds = %for.cond56
  %38 = load i32, i32* %i, align 4, !dbg !4805
  %idxprom = sext i32 %38 to i64, !dbg !4807
  %39 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4807
  %channel = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %39, i32 0, i32 52, !dbg !4808
  %arrayidx = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel, i64 0, i64 %idxprom, !dbg !4807
  %decoded_samples = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx, i32 0, i32 6, !dbg !4809
  store i16 0, i16* %decoded_samples, align 2, !dbg !4810
  %40 = load i32, i32* %i, align 4, !dbg !4811
  %idxprom62 = sext i32 %40 to i64, !dbg !4812
  %41 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4812
  %channel63 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %41, i32 0, i32 52, !dbg !4813
  %arrayidx64 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel63, i64 0, i64 %idxprom62, !dbg !4812
  %cur_subframe = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx64, i32 0, i32 5, !dbg !4814
  store i8 0, i8* %cur_subframe, align 4, !dbg !4815
  %42 = load i32, i32* %i, align 4, !dbg !4816
  %idxprom65 = sext i32 %42 to i64, !dbg !4817
  %43 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4817
  %channel66 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %43, i32 0, i32 52, !dbg !4818
  %arrayidx67 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel66, i64 0, i64 %idxprom65, !dbg !4817
  %reuse_sf = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx67, i32 0, i32 9, !dbg !4819
  store i8 0, i8* %reuse_sf, align 16, !dbg !4820
  br label %for.inc68, !dbg !4821

for.inc68:                                        ; preds = %for.body61
  %44 = load i32, i32* %i, align 4, !dbg !4822
  %inc69 = add nsw i32 %44, 1, !dbg !4822
  store i32 %inc69, i32* %i, align 4, !dbg !4822
  br label %for.cond56, !dbg !4824, !llvm.loop !4825

for.end70:                                        ; preds = %for.cond56
  br label %while.cond, !dbg !4827

while.cond:                                       ; preds = %if.end78, %for.end70
  %45 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4828
  %parsed_all_subframes71 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %45, i32 0, i32 38, !dbg !4830
  %46 = load i8, i8* %parsed_all_subframes71, align 2, !dbg !4830
  %tobool72 = icmp ne i8 %46, 0, !dbg !4831
  %lnot = xor i1 %tobool72, true, !dbg !4831
  br i1 %lnot, label %while.body, label %while.end, !dbg !4832

while.body:                                       ; preds = %while.cond
  %47 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4833
  %call73 = call i32 @decode_subframe(%struct.WMAProDecodeCtx* %47), !dbg !4836
  %cmp74 = icmp slt i32 %call73, 0, !dbg !4837
  br i1 %cmp74, label %if.then76, label %if.end78, !dbg !4838

if.then76:                                        ; preds = %while.body
  %48 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4839
  %packet_loss77 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %48, i32 0, i32 30, !dbg !4841
  store i8 1, i8* %packet_loss77, align 4, !dbg !4842
  store i32 0, i32* %retval, align 4, !dbg !4843
  br label %return, !dbg !4843

if.end78:                                         ; preds = %while.body
  br label %while.cond, !dbg !4844, !llvm.loop !4846

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %i, align 4, !dbg !4847
  br label %for.cond79, !dbg !4849

for.cond79:                                       ; preds = %for.inc93, %while.end
  %49 = load i32, i32* %i, align 4, !dbg !4850
  %50 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4853
  %nb_channels80 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %50, i32 0, i32 41, !dbg !4854
  %51 = load i8, i8* %nb_channels80, align 2, !dbg !4854
  %conv81 = sext i8 %51 to i32, !dbg !4853
  %cmp82 = icmp slt i32 %49, %conv81, !dbg !4855
  br i1 %cmp82, label %for.body84, label %for.end95, !dbg !4856

for.body84:                                       ; preds = %for.cond79
  %52 = load i32, i32* %i, align 4, !dbg !4857
  %idxprom85 = sext i32 %52 to i64, !dbg !4858
  %53 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !4858
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %53, i32 0, i32 2, !dbg !4859
  %54 = load i8**, i8*** %extended_data, align 8, !dbg !4859
  %arrayidx86 = getelementptr inbounds i8*, i8** %54, i64 %idxprom85, !dbg !4858
  %55 = load i8*, i8** %arrayidx86, align 8, !dbg !4858
  %56 = load i32, i32* %i, align 4, !dbg !4860
  %idxprom87 = sext i32 %56 to i64, !dbg !4861
  %57 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4861
  %channel88 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %57, i32 0, i32 52, !dbg !4862
  %arrayidx89 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel88, i64 0, i64 %idxprom87, !dbg !4861
  %out = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx89, i32 0, i32 19, !dbg !4863
  %arraydecay = getelementptr inbounds [12288 x float], [12288 x float]* %out, i32 0, i32 0, !dbg !4864
  %58 = bitcast float* %arraydecay to i8*, !dbg !4864
  %59 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4865
  %samples_per_frame90 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %59, i32 0, i32 12, !dbg !4866
  %60 = load i16, i16* %samples_per_frame90, align 8, !dbg !4866
  %conv91 = zext i16 %60 to i64, !dbg !4865
  %mul92 = mul i64 %conv91, 4, !dbg !4867
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %58, i64 %mul92, i32 1, i1 false), !dbg !4864
  br label %for.inc93, !dbg !4864

for.inc93:                                        ; preds = %for.body84
  %61 = load i32, i32* %i, align 4, !dbg !4868
  %inc94 = add nsw i32 %61, 1, !dbg !4868
  store i32 %inc94, i32* %i, align 4, !dbg !4868
  br label %for.cond79, !dbg !4870, !llvm.loop !4871

for.end95:                                        ; preds = %for.cond79
  store i32 0, i32* %i, align 4, !dbg !4873
  br label %for.cond96, !dbg !4875

for.cond96:                                       ; preds = %for.inc117, %for.end95
  %62 = load i32, i32* %i, align 4, !dbg !4876
  %63 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4879
  %nb_channels97 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %63, i32 0, i32 41, !dbg !4880
  %64 = load i8, i8* %nb_channels97, align 2, !dbg !4880
  %conv98 = sext i8 %64 to i32, !dbg !4879
  %cmp99 = icmp slt i32 %62, %conv98, !dbg !4881
  br i1 %cmp99, label %for.body101, label %for.end119, !dbg !4882

for.body101:                                      ; preds = %for.cond96
  %65 = load i32, i32* %i, align 4, !dbg !4883
  %idxprom102 = sext i32 %65 to i64, !dbg !4885
  %66 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4885
  %channel103 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %66, i32 0, i32 52, !dbg !4886
  %arrayidx104 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel103, i64 0, i64 %idxprom102, !dbg !4885
  %out105 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx104, i32 0, i32 19, !dbg !4887
  %arrayidx106 = getelementptr inbounds [12288 x float], [12288 x float]* %out105, i64 0, i64 0, !dbg !4885
  %67 = bitcast float* %arrayidx106 to i8*, !dbg !4888
  %68 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4889
  %samples_per_frame107 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %68, i32 0, i32 12, !dbg !4890
  %69 = load i16, i16* %samples_per_frame107, align 8, !dbg !4890
  %idxprom108 = zext i16 %69 to i64, !dbg !4891
  %70 = load i32, i32* %i, align 4, !dbg !4892
  %idxprom109 = sext i32 %70 to i64, !dbg !4891
  %71 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4891
  %channel110 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %71, i32 0, i32 52, !dbg !4893
  %arrayidx111 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel110, i64 0, i64 %idxprom109, !dbg !4891
  %out112 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx111, i32 0, i32 19, !dbg !4894
  %arrayidx113 = getelementptr inbounds [12288 x float], [12288 x float]* %out112, i64 0, i64 %idxprom108, !dbg !4891
  %72 = bitcast float* %arrayidx113 to i8*, !dbg !4888
  %73 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4895
  %samples_per_frame114 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %73, i32 0, i32 12, !dbg !4896
  %74 = load i16, i16* %samples_per_frame114, align 8, !dbg !4896
  %conv115 = zext i16 %74 to i64, !dbg !4895
  %mul116 = mul i64 %conv115, 4, !dbg !4897
  %shr = lshr i64 %mul116, 1, !dbg !4898
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %72, i64 %shr, i32 4, i1 false), !dbg !4888
  br label %for.inc117, !dbg !4899

for.inc117:                                       ; preds = %for.body101
  %75 = load i32, i32* %i, align 4, !dbg !4900
  %inc118 = add nsw i32 %75, 1, !dbg !4900
  store i32 %inc118, i32* %i, align 4, !dbg !4900
  br label %for.cond96, !dbg !4902, !llvm.loop !4903

for.end119:                                       ; preds = %for.cond96
  %76 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4905
  %skip_frame = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %76, i32 0, i32 37, !dbg !4907
  %77 = load i8, i8* %skip_frame, align 1, !dbg !4907
  %tobool120 = icmp ne i8 %77, 0, !dbg !4905
  br i1 %tobool120, label %if.then121, label %if.else, !dbg !4908

if.then121:                                       ; preds = %for.end119
  %78 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4909
  %skip_frame122 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %78, i32 0, i32 37, !dbg !4911
  store i8 0, i8* %skip_frame122, align 1, !dbg !4912
  %79 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !4913
  store i32 0, i32* %79, align 4, !dbg !4914
  %80 = load %struct.AVFrame*, %struct.AVFrame** %frame.addr, align 8, !dbg !4915
  call void @av_frame_unref(%struct.AVFrame* %80), !dbg !4916
  br label %if.end123, !dbg !4917

if.else:                                          ; preds = %for.end119
  %81 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !4918
  store i32 1, i32* %81, align 4, !dbg !4920
  br label %if.end123

if.end123:                                        ; preds = %if.else, %if.then121
  %82 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4921
  %len_prefix124 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %82, i32 0, i32 9, !dbg !4923
  %83 = load i8, i8* %len_prefix124, align 4, !dbg !4923
  %tobool125 = icmp ne i8 %83, 0, !dbg !4921
  br i1 %tobool125, label %if.then126, label %if.else144, !dbg !4924

if.then126:                                       ; preds = %if.end123
  %84 = load i32, i32* %len, align 4, !dbg !4925
  %85 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4928
  %call127 = call i32 @get_bits_count(%struct.GetBitContext* %85), !dbg !4929
  %86 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4930
  %frame_offset = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %86, i32 0, i32 28, !dbg !4931
  %87 = load i32, i32* %frame_offset, align 4, !dbg !4931
  %sub128 = sub nsw i32 %call127, %87, !dbg !4932
  %add = add nsw i32 %sub128, 2, !dbg !4933
  %cmp129 = icmp ne i32 %84, %add, !dbg !4934
  br i1 %cmp129, label %if.then131, label %if.end138, !dbg !4935

if.then131:                                       ; preds = %if.then126
  %88 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4936
  %avctx = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %88, i32 0, i32 0, !dbg !4938
  %89 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4938
  %90 = bitcast %struct.AVCodecContext* %89 to i8*, !dbg !4936
  %91 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4939
  %frame_num = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %91, i32 0, i32 33, !dbg !4940
  %92 = load i32, i32* %frame_num, align 8, !dbg !4940
  %93 = load i32, i32* %len, align 4, !dbg !4941
  %94 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4942
  %call132 = call i32 @get_bits_count(%struct.GetBitContext* %94), !dbg !4943
  %95 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4944
  %frame_offset133 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %95, i32 0, i32 28, !dbg !4945
  %96 = load i32, i32* %frame_offset133, align 4, !dbg !4945
  %sub134 = sub nsw i32 %call132, %96, !dbg !4946
  %sub135 = sub nsw i32 %93, %sub134, !dbg !4947
  %sub136 = sub nsw i32 %sub135, 1, !dbg !4948
  call void (i8*, i32, i8*, ...) @av_log(i8* %90, i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.49, i32 0, i32 0), i32 %92, i32 %sub136), !dbg !4949
  %97 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4950
  %packet_loss137 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %97, i32 0, i32 30, !dbg !4951
  store i8 1, i8* %packet_loss137, align 4, !dbg !4952
  store i32 0, i32* %retval, align 4, !dbg !4953
  br label %return, !dbg !4953

if.end138:                                        ; preds = %if.then126
  %98 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4954
  %99 = load i32, i32* %len, align 4, !dbg !4955
  %100 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4956
  %call139 = call i32 @get_bits_count(%struct.GetBitContext* %100), !dbg !4957
  %101 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4958
  %frame_offset140 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %101, i32 0, i32 28, !dbg !4959
  %102 = load i32, i32* %frame_offset140, align 4, !dbg !4959
  %sub141 = sub nsw i32 %call139, %102, !dbg !4960
  %sub142 = sub nsw i32 %99, %sub141, !dbg !4961
  %sub143 = sub nsw i32 %sub142, 1, !dbg !4962
  call void @skip_bits_long(%struct.GetBitContext* %98, i32 %sub143), !dbg !4963
  br label %if.end154, !dbg !4965

if.else144:                                       ; preds = %if.end123
  br label %while.cond145, !dbg !4966

while.cond145:                                    ; preds = %while.body152, %if.else144
  %103 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4968
  %call146 = call i32 @get_bits_count(%struct.GetBitContext* %103), !dbg !4970
  %104 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4971
  %num_saved_bits = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %104, i32 0, i32 27, !dbg !4972
  %105 = load i32, i32* %num_saved_bits, align 8, !dbg !4972
  %cmp147 = icmp slt i32 %call146, %105, !dbg !4973
  br i1 %cmp147, label %land.rhs, label %land.end, !dbg !4974

land.rhs:                                         ; preds = %while.cond145
  %106 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4975
  %call149 = call i32 @get_bits1(%struct.GetBitContext* %106), !dbg !4977
  %cmp150 = icmp eq i32 %call149, 0, !dbg !4978
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond145
  %107 = phi i1 [ false, %while.cond145 ], [ %cmp150, %land.rhs ]
  br i1 %107, label %while.body152, label %while.end153, !dbg !4979

while.body152:                                    ; preds = %land.end
  br label %while.cond145, !dbg !4981, !llvm.loop !4983

while.end153:                                     ; preds = %land.end
  br label %if.end154

if.end154:                                        ; preds = %while.end153, %if.end138
  %108 = load %struct.GetBitContext*, %struct.GetBitContext** %gb, align 8, !dbg !4984
  %call155 = call i32 @get_bits1(%struct.GetBitContext* %108), !dbg !4985
  store i32 %call155, i32* %more_frames, align 4, !dbg !4986
  %109 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !4987
  %frame_num156 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %109, i32 0, i32 33, !dbg !4988
  %110 = load i32, i32* %frame_num156, align 8, !dbg !4989
  %inc157 = add i32 %110, 1, !dbg !4989
  store i32 %inc157, i32* %frame_num156, align 8, !dbg !4989
  %111 = load i32, i32* %more_frames, align 4, !dbg !4990
  store i32 %111, i32* %retval, align 4, !dbg !4991
  br label %return, !dbg !4991

return:                                           ; preds = %if.end154, %if.then131, %if.then76, %if.then4
  %112 = load i32, i32* %retval, align 4, !dbg !4992
  ret i32 %112, !dbg !4992
}

; Function Attrs: nounwind uwtable
define internal i32 @remaining_bits(%struct.WMAProDecodeCtx* %s, %struct.GetBitContext* %gb) #1 !dbg !4993 {
entry:
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !4996, metadata !2019), !dbg !4997
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4998, metadata !2019), !dbg !4999
  %0 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5000
  %buf_bit_size = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %0, i32 0, i32 35, !dbg !5001
  %1 = load i32, i32* %buf_bit_size, align 32, !dbg !5001
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5002
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !5003
  %sub = sub nsw i32 %1, %call, !dbg !5004
  ret i32 %sub, !dbg !5005
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @show_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !5006 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !4352, metadata !2019), !dbg !5007
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5009, metadata !2019), !dbg !5010
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5011, metadata !2019), !dbg !5012
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5013, metadata !2019), !dbg !5014
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !5015, metadata !2019), !dbg !5016
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5017
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5018
  %1 = load i32, i32* %index, align 8, !dbg !5018
  store i32 %1, i32* %re_index, align 4, !dbg !5016
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !5019, metadata !2019), !dbg !5020
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5021
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 0, !dbg !5022
  %3 = load i8*, i8** %buffer, align 8, !dbg !5022
  %4 = load i32, i32* %re_index, align 4, !dbg !5023
  %shr = lshr i32 %4, 3, !dbg !5024
  %idx.ext = zext i32 %shr to i64, !dbg !5025
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %idx.ext, !dbg !5025
  %5 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !5026
  %l = bitcast %union.unaligned_32* %5 to i32*, !dbg !5026
  %6 = load i32, i32* %l, align 1, !dbg !5026
  store i32 %6, i32* %x.addr.i, align 4, !dbg !5027
  %7 = load i32, i32* %x.addr.i, align 4, !dbg !5028
  %shl.i = shl i32 %7, 8, !dbg !5029
  %and.i = and i32 %shl.i, 65280, !dbg !5030
  %8 = load i32, i32* %x.addr.i, align 4, !dbg !5031
  %shr.i = lshr i32 %8, 8, !dbg !5032
  %and1.i = and i32 %shr.i, 255, !dbg !5033
  %or.i = or i32 %and.i, %and1.i, !dbg !5034
  %shl2.i = shl i32 %or.i, 16, !dbg !5035
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !5036
  %shr3.i = lshr i32 %9, 16, !dbg !5037
  %shl4.i = shl i32 %shr3.i, 8, !dbg !5038
  %and5.i = and i32 %shl4.i, 65280, !dbg !5039
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !5040
  %shr6.i = lshr i32 %10, 16, !dbg !5041
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !5042
  %and8.i = and i32 %shr7.i, 255, !dbg !5043
  %or9.i = or i32 %and5.i, %and8.i, !dbg !5044
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !5045
  %11 = load i32, i32* %re_index, align 4, !dbg !5046
  %and = and i32 %11, 7, !dbg !5047
  %shl = shl i32 %or10.i, %and, !dbg !5048
  store i32 %shl, i32* %re_cache, align 4, !dbg !5049
  %12 = load i32, i32* %re_cache, align 4, !dbg !5050
  %13 = load i32, i32* %n.addr, align 4, !dbg !5051
  %conv = trunc i32 %13 to i8, !dbg !5051
  %call3 = call i32 @NEG_USR32(i32 %12, i8 signext %conv), !dbg !5052
  store i32 %call3, i32* %tmp, align 4, !dbg !5053
  %14 = load i32, i32* %tmp, align 4, !dbg !5054
  ret i32 %14, !dbg !5055
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #4 !dbg !5056 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !5060, metadata !2019), !dbg !5061
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !5062, metadata !2019), !dbg !5063
  %0 = load i32, i32* %a.addr, align 4, !dbg !5064
  %1 = load i8, i8* %s.addr, align 1, !dbg !5065
  %conv = sext i8 %1 to i32, !dbg !5065
  %sub = sub nsw i32 0, %conv, !dbg !5066
  %conv1 = trunc i32 %sub to i8, !dbg !5067
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !5064, !srcloc !5068
  store i32 %2, i32* %a.addr, align 4, !dbg !5064
  %3 = load i32, i32* %a.addr, align 4, !dbg !5069
  ret i32 %3, !dbg !5070
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @put_bits_count(%struct.PutBitContext* %s) #4 !dbg !5071 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5074, metadata !2019), !dbg !5075
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5076
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 3, !dbg !5077
  %1 = load i8*, i8** %buf_ptr, align 8, !dbg !5077
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5078
  %buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 2, !dbg !5079
  %3 = load i8*, i8** %buf, align 8, !dbg !5079
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !5080
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !5080
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5080
  %mul = mul nsw i64 %sub.ptr.sub, 8, !dbg !5081
  %add = add nsw i64 %mul, 32, !dbg !5082
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5083
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 1, !dbg !5084
  %5 = load i32, i32* %bit_left, align 4, !dbg !5084
  %conv = sext i32 %5 to i64, !dbg !5083
  %sub = sub nsw i64 %add, %conv, !dbg !5085
  %conv1 = trunc i64 %sub to i32, !dbg !5086
  ret i32 %conv1, !dbg !5087
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @put_bits_left(%struct.PutBitContext* %s) #4 !dbg !5088 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5089, metadata !2019), !dbg !5090
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5091
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 4, !dbg !5092
  %1 = load i8*, i8** %buf_end, align 8, !dbg !5092
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5093
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 3, !dbg !5094
  %3 = load i8*, i8** %buf_ptr, align 8, !dbg !5094
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !5095
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !5095
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5095
  %mul = mul nsw i64 %sub.ptr.sub, 8, !dbg !5096
  %sub = sub nsw i64 %mul, 32, !dbg !5097
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5098
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 1, !dbg !5099
  %5 = load i32, i32* %bit_left, align 4, !dbg !5099
  %conv = sext i32 %5 to i64, !dbg !5098
  %add = add nsw i64 %sub, %conv, !dbg !5100
  %conv1 = trunc i64 %add to i32, !dbg !5101
  ret i32 %conv1, !dbg !5102
}

declare void @avpriv_copy_bits(%struct.PutBitContext*, i8*, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_bits(%struct.PutBitContext* %s, i32 %n, i32 %value) #4 !dbg !5103 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !4352, metadata !2019), !dbg !5106
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5112, metadata !2019), !dbg !5113
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5114, metadata !2019), !dbg !5115
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5116, metadata !2019), !dbg !5117
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !5118, metadata !2019), !dbg !5119
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !5120, metadata !2019), !dbg !5121
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5122
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !5123
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !5123
  store i32 %1, i32* %bit_buf, align 4, !dbg !5124
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5125
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !5126
  %3 = load i32, i32* %bit_left2, align 4, !dbg !5126
  store i32 %3, i32* %bit_left, align 4, !dbg !5127
  %4 = load i32, i32* %n.addr, align 4, !dbg !5128
  %5 = load i32, i32* %bit_left, align 4, !dbg !5129
  %cmp = icmp slt i32 %4, %5, !dbg !5130
  br i1 %cmp, label %if.then, label %if.else, !dbg !5131

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %bit_buf, align 4, !dbg !5132
  %7 = load i32, i32* %n.addr, align 4, !dbg !5134
  %shl = shl i32 %6, %7, !dbg !5135
  %8 = load i32, i32* %value.addr, align 4, !dbg !5136
  %or = or i32 %shl, %8, !dbg !5137
  store i32 %or, i32* %bit_buf, align 4, !dbg !5138
  %9 = load i32, i32* %n.addr, align 4, !dbg !5139
  %10 = load i32, i32* %bit_left, align 4, !dbg !5140
  %sub = sub nsw i32 %10, %9, !dbg !5140
  store i32 %sub, i32* %bit_left, align 4, !dbg !5140
  br label %if.end12, !dbg !5141

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %bit_left, align 4, !dbg !5142
  %12 = load i32, i32* %bit_buf, align 4, !dbg !5143
  %shl3 = shl i32 %12, %11, !dbg !5143
  store i32 %shl3, i32* %bit_buf, align 4, !dbg !5143
  %13 = load i32, i32* %value.addr, align 4, !dbg !5144
  %14 = load i32, i32* %n.addr, align 4, !dbg !5145
  %15 = load i32, i32* %bit_left, align 4, !dbg !5146
  %sub4 = sub nsw i32 %14, %15, !dbg !5147
  %shr = lshr i32 %13, %sub4, !dbg !5148
  %16 = load i32, i32* %bit_buf, align 4, !dbg !5149
  %or5 = or i32 %16, %shr, !dbg !5149
  store i32 %or5, i32* %bit_buf, align 4, !dbg !5149
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5150
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %17, i32 0, i32 4, !dbg !5151
  %18 = load i8*, i8** %buf_end, align 8, !dbg !5151
  %19 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5152
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %19, i32 0, i32 3, !dbg !5153
  %20 = load i8*, i8** %buf_ptr, align 8, !dbg !5153
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !5154
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !5154
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5154
  %cmp6 = icmp slt i64 3, %sub.ptr.sub, !dbg !5155
  br i1 %cmp6, label %if.then7, label %if.else10, !dbg !5156

if.then7:                                         ; preds = %if.else
  %21 = load i32, i32* %bit_buf, align 4, !dbg !5157
  store i32 %21, i32* %x.addr.i, align 4, !dbg !5158
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !5159
  %shl.i = shl i32 %22, 8, !dbg !5160
  %and.i = and i32 %shl.i, 65280, !dbg !5161
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !5162
  %shr.i = lshr i32 %23, 8, !dbg !5163
  %and1.i = and i32 %shr.i, 255, !dbg !5164
  %or.i = or i32 %and.i, %and1.i, !dbg !5165
  %shl2.i = shl i32 %or.i, 16, !dbg !5166
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !5167
  %shr3.i = lshr i32 %24, 16, !dbg !5168
  %shl4.i = shl i32 %shr3.i, 8, !dbg !5169
  %and5.i = and i32 %shl4.i, 65280, !dbg !5170
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !5171
  %shr6.i = lshr i32 %25, 16, !dbg !5172
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !5173
  %and8.i = and i32 %shr7.i, 255, !dbg !5174
  %or9.i = or i32 %and5.i, %and8.i, !dbg !5175
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !5176
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5177
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %26, i32 0, i32 3, !dbg !5178
  %27 = load i8*, i8** %buf_ptr8, align 8, !dbg !5178
  %28 = bitcast i8* %27 to %union.unaligned_32*, !dbg !5179
  %l = bitcast %union.unaligned_32* %28 to i32*, !dbg !5179
  store i32 %or10.i, i32* %l, align 1, !dbg !5180
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5181
  %buf_ptr9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %29, i32 0, i32 3, !dbg !5182
  %30 = load i8*, i8** %buf_ptr9, align 8, !dbg !5183
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 4, !dbg !5183
  store i8* %add.ptr, i8** %buf_ptr9, align 8, !dbg !5183
  br label %if.end, !dbg !5184

if.else10:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.46, i32 0, i32 0)), !dbg !5185
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  %31 = load i32, i32* %n.addr, align 4, !dbg !5187
  %sub11 = sub nsw i32 32, %31, !dbg !5188
  %32 = load i32, i32* %bit_left, align 4, !dbg !5189
  %add = add nsw i32 %32, %sub11, !dbg !5189
  store i32 %add, i32* %bit_left, align 4, !dbg !5189
  %33 = load i32, i32* %value.addr, align 4, !dbg !5190
  store i32 %33, i32* %bit_buf, align 4, !dbg !5191
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %34 = load i32, i32* %bit_buf, align 4, !dbg !5192
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5193
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %35, i32 0, i32 0, !dbg !5194
  store i32 %34, i32* %bit_buf13, align 8, !dbg !5195
  %36 = load i32, i32* %bit_left, align 4, !dbg !5196
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5197
  %bit_left14 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %37, i32 0, i32 1, !dbg !5198
  store i32 %36, i32* %bit_left14, align 4, !dbg !5199
  ret void, !dbg !5200
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !5201 {
entry:
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !2766, metadata !2019), !dbg !5202
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !2776, metadata !2019), !dbg !5204
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !2778, metadata !2019), !dbg !5205
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5206, metadata !2019), !dbg !5207
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5208, metadata !2019), !dbg !5209
  %0 = load i32, i32* %n.addr, align 4, !dbg !5210
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5211
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %1, i32 0, i32 2, !dbg !5212
  %2 = load i32, i32* %index, align 8, !dbg !5212
  %sub = sub nsw i32 0, %2, !dbg !5213
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5214
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 4, !dbg !5215
  %4 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5215
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5216
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 2, !dbg !5217
  %6 = load i32, i32* %index1, align 8, !dbg !5217
  %sub2 = sub nsw i32 %4, %6, !dbg !5218
  store i32 %0, i32* %a.addr.i, align 4, !dbg !5219
  store i32 %sub, i32* %amin.addr.i, align 4, !dbg !5219
  store i32 %sub2, i32* %amax.addr.i, align 4, !dbg !5219
  %7 = load i32, i32* %a.addr.i, align 4, !dbg !5220
  %8 = load i32, i32* %amin.addr.i, align 4, !dbg !5221
  %cmp.i = icmp slt i32 %7, %8, !dbg !5222
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5223

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %amin.addr.i, align 4, !dbg !5224
  store i32 %9, i32* %retval.i, align 4, !dbg !5225
  br label %av_clip_c.exit, !dbg !5225

if.else.i:                                        ; preds = %entry
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !5226
  %11 = load i32, i32* %amax.addr.i, align 4, !dbg !5227
  %cmp1.i = icmp sgt i32 %10, %11, !dbg !5228
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !5229

if.then2.i:                                       ; preds = %if.else.i
  %12 = load i32, i32* %amax.addr.i, align 4, !dbg !5230
  store i32 %12, i32* %retval.i, align 4, !dbg !5231
  br label %av_clip_c.exit, !dbg !5231

if.else3.i:                                       ; preds = %if.else.i
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !5232
  store i32 %13, i32* %retval.i, align 4, !dbg !5233
  br label %av_clip_c.exit, !dbg !5233

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %14 = load i32, i32* %retval.i, align 4, !dbg !5234
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5235
  %index3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !5236
  %16 = load i32, i32* %index3, align 8, !dbg !5237
  %add = add nsw i32 %16, %14, !dbg !5237
  store i32 %add, i32* %index3, align 8, !dbg !5237
  ret void, !dbg !5238
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @flush_put_bits(%struct.PutBitContext* %s) #4 !dbg !5239 {
entry:
  %s.addr = alloca %struct.PutBitContext*, align 8
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !5242, metadata !2019), !dbg !5243
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5244
  %bit_left = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 1, !dbg !5246
  %1 = load i32, i32* %bit_left, align 4, !dbg !5246
  %cmp = icmp slt i32 %1, 32, !dbg !5247
  br i1 %cmp, label %if.then, label %if.end, !dbg !5248

if.then:                                          ; preds = %entry
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5249
  %bit_left1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !5250
  %3 = load i32, i32* %bit_left1, align 4, !dbg !5250
  %4 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5251
  %bit_buf = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %4, i32 0, i32 0, !dbg !5252
  %5 = load i32, i32* %bit_buf, align 8, !dbg !5253
  %shl = shl i32 %5, %3, !dbg !5253
  store i32 %shl, i32* %bit_buf, align 8, !dbg !5253
  br label %if.end, !dbg !5251

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !5254

while.cond:                                       ; preds = %do.end, %if.end
  %6 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5255
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %6, i32 0, i32 1, !dbg !5257
  %7 = load i32, i32* %bit_left2, align 4, !dbg !5257
  %cmp3 = icmp slt i32 %7, 32, !dbg !5258
  br i1 %cmp3, label %while.body, label %while.end, !dbg !5259

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !5260, !llvm.loop !5262

do.body:                                          ; preds = %while.body
  %8 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5263
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %8, i32 0, i32 3, !dbg !5267
  %9 = load i8*, i8** %buf_ptr, align 8, !dbg !5267
  %10 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5268
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %10, i32 0, i32 4, !dbg !5269
  %11 = load i8*, i8** %buf_end, align 8, !dbg !5269
  %cmp4 = icmp ult i8* %9, %11, !dbg !5270
  br i1 %cmp4, label %if.end6, label %if.then5, !dbg !5271

if.then5:                                         ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.48, i32 0, i32 0), i32 108), !dbg !5272
  call void @abort() #8, !dbg !5275
  unreachable, !dbg !5277

if.end6:                                          ; preds = %do.body
  br label %do.end, !dbg !5278

do.end:                                           ; preds = %if.end6
  %12 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5280
  %bit_buf7 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %12, i32 0, i32 0, !dbg !5281
  %13 = load i32, i32* %bit_buf7, align 8, !dbg !5281
  %shr = lshr i32 %13, 24, !dbg !5282
  %conv = trunc i32 %shr to i8, !dbg !5280
  %14 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5283
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %14, i32 0, i32 3, !dbg !5284
  %15 = load i8*, i8** %buf_ptr8, align 8, !dbg !5285
  %incdec.ptr = getelementptr inbounds i8, i8* %15, i32 1, !dbg !5285
  store i8* %incdec.ptr, i8** %buf_ptr8, align 8, !dbg !5285
  store i8 %conv, i8* %15, align 1, !dbg !5286
  %16 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5287
  %bit_buf9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %16, i32 0, i32 0, !dbg !5288
  %17 = load i32, i32* %bit_buf9, align 8, !dbg !5289
  %shl10 = shl i32 %17, 8, !dbg !5289
  store i32 %shl10, i32* %bit_buf9, align 8, !dbg !5289
  %18 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5290
  %bit_left11 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %18, i32 0, i32 1, !dbg !5291
  %19 = load i32, i32* %bit_left11, align 4, !dbg !5292
  %add = add nsw i32 %19, 8, !dbg !5292
  store i32 %add, i32* %bit_left11, align 4, !dbg !5292
  br label %while.cond, !dbg !5293, !llvm.loop !5295

while.end:                                        ; preds = %while.cond
  %20 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5296
  %bit_left12 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %20, i32 0, i32 1, !dbg !5297
  store i32 32, i32* %bit_left12, align 4, !dbg !5298
  %21 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !5299
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %21, i32 0, i32 0, !dbg !5300
  store i32 0, i32* %bit_buf13, align 8, !dbg !5301
  ret void, !dbg !5302
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_tilehdr(%struct.WMAProDecodeCtx* %s) #1 !dbg !5303 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %num_samples = alloca [8 x i16], align 16
  %contains_subframe = alloca [8 x i8], align 1
  %channels_for_cur_subframe = alloca i32, align 4
  %fixed_channel_layout = alloca i32, align 4
  %min_channel_len = alloca i32, align 4
  %c = alloca i32, align 4
  %subframe_len = alloca i32, align 4
  %chan = alloca %struct.WMAProChannelCtx*, align 8
  %i = alloca i32, align 4
  %offset = alloca i32, align 4
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !5306, metadata !2019), !dbg !5307
  call void @llvm.dbg.declare(metadata [8 x i16]* %num_samples, metadata !5308, metadata !2019), !dbg !5310
  %0 = bitcast [8 x i16]* %num_samples to i8*, !dbg !5310
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 16, i32 16, i1 false), !dbg !5310
  call void @llvm.dbg.declare(metadata [8 x i8]* %contains_subframe, metadata !5311, metadata !2019), !dbg !5313
  call void @llvm.dbg.declare(metadata i32* %channels_for_cur_subframe, metadata !5314, metadata !2019), !dbg !5315
  %1 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5316
  %nb_channels = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %1, i32 0, i32 41, !dbg !5317
  %2 = load i8, i8* %nb_channels, align 2, !dbg !5317
  %conv = sext i8 %2 to i32, !dbg !5316
  store i32 %conv, i32* %channels_for_cur_subframe, align 4, !dbg !5315
  call void @llvm.dbg.declare(metadata i32* %fixed_channel_layout, metadata !5318, metadata !2019), !dbg !5319
  store i32 0, i32* %fixed_channel_layout, align 4, !dbg !5319
  call void @llvm.dbg.declare(metadata i32* %min_channel_len, metadata !5320, metadata !2019), !dbg !5321
  store i32 0, i32* %min_channel_len, align 4, !dbg !5321
  call void @llvm.dbg.declare(metadata i32* %c, metadata !5322, metadata !2019), !dbg !5323
  store i32 0, i32* %c, align 4, !dbg !5324
  br label %for.cond, !dbg !5326

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %c, align 4, !dbg !5327
  %4 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5330
  %nb_channels1 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %4, i32 0, i32 41, !dbg !5331
  %5 = load i8, i8* %nb_channels1, align 2, !dbg !5331
  %conv2 = sext i8 %5 to i32, !dbg !5330
  %cmp = icmp slt i32 %3, %conv2, !dbg !5332
  br i1 %cmp, label %for.body, label %for.end, !dbg !5333

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %c, align 4, !dbg !5334
  %idxprom = sext i32 %6 to i64, !dbg !5335
  %7 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5335
  %channel = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %7, i32 0, i32 52, !dbg !5336
  %arrayidx = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel, i64 0, i64 %idxprom, !dbg !5335
  %num_subframes = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx, i32 0, i32 2, !dbg !5337
  store i8 0, i8* %num_subframes, align 1, !dbg !5338
  br label %for.inc, !dbg !5335

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %c, align 4, !dbg !5339
  %inc = add nsw i32 %8, 1, !dbg !5339
  store i32 %inc, i32* %c, align 4, !dbg !5339
  br label %for.cond, !dbg !5341, !llvm.loop !5342

for.end:                                          ; preds = %for.cond
  %9 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5344
  %max_num_subframes = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %9, i32 0, i32 15, !dbg !5346
  %10 = load i8, i8* %max_num_subframes, align 1, !dbg !5346
  %conv4 = zext i8 %10 to i32, !dbg !5344
  %cmp5 = icmp eq i32 %conv4, 1, !dbg !5347
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !5348

lor.lhs.false:                                    ; preds = %for.end
  %11 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5349
  %gb = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %11, i32 0, i32 34, !dbg !5351
  %call = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !5352
  %tobool = icmp ne i32 %call, 0, !dbg !5352
  br i1 %tobool, label %if.then, label %if.end, !dbg !5353

if.then:                                          ; preds = %lor.lhs.false, %for.end
  store i32 1, i32* %fixed_channel_layout, align 4, !dbg !5354
  br label %if.end, !dbg !5355

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %do.body, !dbg !5356, !llvm.loop !5357

do.body:                                          ; preds = %do.cond, %if.end
  call void @llvm.dbg.declare(metadata i32* %subframe_len, metadata !5358, metadata !2019), !dbg !5360
  store i32 0, i32* %c, align 4, !dbg !5361
  br label %for.cond7, !dbg !5363

for.cond7:                                        ; preds = %for.inc41, %do.body
  %12 = load i32, i32* %c, align 4, !dbg !5364
  %13 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5367
  %nb_channels8 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %13, i32 0, i32 41, !dbg !5368
  %14 = load i8, i8* %nb_channels8, align 2, !dbg !5368
  %conv9 = sext i8 %14 to i32, !dbg !5367
  %cmp10 = icmp slt i32 %12, %conv9, !dbg !5369
  br i1 %cmp10, label %for.body12, label %for.end43, !dbg !5370

for.body12:                                       ; preds = %for.cond7
  %15 = load i32, i32* %c, align 4, !dbg !5371
  %idxprom13 = sext i32 %15 to i64, !dbg !5374
  %arrayidx14 = getelementptr inbounds [8 x i16], [8 x i16]* %num_samples, i64 0, i64 %idxprom13, !dbg !5374
  %16 = load i16, i16* %arrayidx14, align 2, !dbg !5374
  %conv15 = zext i16 %16 to i32, !dbg !5374
  %17 = load i32, i32* %min_channel_len, align 4, !dbg !5375
  %cmp16 = icmp eq i32 %conv15, %17, !dbg !5376
  br i1 %cmp16, label %if.then18, label %if.else37, !dbg !5377

if.then18:                                        ; preds = %for.body12
  %18 = load i32, i32* %fixed_channel_layout, align 4, !dbg !5378
  %tobool19 = icmp ne i32 %18, 0, !dbg !5378
  br i1 %tobool19, label %if.then28, label %lor.lhs.false20, !dbg !5381

lor.lhs.false20:                                  ; preds = %if.then18
  %19 = load i32, i32* %channels_for_cur_subframe, align 4, !dbg !5382
  %cmp21 = icmp eq i32 %19, 1, !dbg !5384
  br i1 %cmp21, label %if.then28, label %lor.lhs.false23, !dbg !5385

lor.lhs.false23:                                  ; preds = %lor.lhs.false20
  %20 = load i32, i32* %min_channel_len, align 4, !dbg !5386
  %21 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5387
  %samples_per_frame = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %21, i32 0, i32 12, !dbg !5388
  %22 = load i16, i16* %samples_per_frame, align 8, !dbg !5388
  %conv24 = zext i16 %22 to i32, !dbg !5387
  %23 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5389
  %min_samples_per_subframe = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %23, i32 0, i32 18, !dbg !5390
  %24 = load i16, i16* %min_samples_per_subframe, align 16, !dbg !5390
  %conv25 = zext i16 %24 to i32, !dbg !5389
  %sub = sub nsw i32 %conv24, %conv25, !dbg !5391
  %cmp26 = icmp eq i32 %20, %sub, !dbg !5392
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !5393

if.then28:                                        ; preds = %lor.lhs.false23, %lor.lhs.false20, %if.then18
  %25 = load i32, i32* %c, align 4, !dbg !5395
  %idxprom29 = sext i32 %25 to i64, !dbg !5396
  %arrayidx30 = getelementptr inbounds [8 x i8], [8 x i8]* %contains_subframe, i64 0, i64 %idxprom29, !dbg !5396
  store i8 1, i8* %arrayidx30, align 1, !dbg !5397
  br label %if.end36, !dbg !5396

if.else:                                          ; preds = %lor.lhs.false23
  %26 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5398
  %gb31 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %26, i32 0, i32 34, !dbg !5399
  %call32 = call i32 @get_bits1(%struct.GetBitContext* %gb31), !dbg !5400
  %conv33 = trunc i32 %call32 to i8, !dbg !5400
  %27 = load i32, i32* %c, align 4, !dbg !5401
  %idxprom34 = sext i32 %27 to i64, !dbg !5402
  %arrayidx35 = getelementptr inbounds [8 x i8], [8 x i8]* %contains_subframe, i64 0, i64 %idxprom34, !dbg !5402
  store i8 %conv33, i8* %arrayidx35, align 1, !dbg !5403
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then28
  br label %if.end40, !dbg !5404

if.else37:                                        ; preds = %for.body12
  %28 = load i32, i32* %c, align 4, !dbg !5405
  %idxprom38 = sext i32 %28 to i64, !dbg !5406
  %arrayidx39 = getelementptr inbounds [8 x i8], [8 x i8]* %contains_subframe, i64 0, i64 %idxprom38, !dbg !5406
  store i8 0, i8* %arrayidx39, align 1, !dbg !5407
  br label %if.end40

if.end40:                                         ; preds = %if.else37, %if.end36
  br label %for.inc41, !dbg !5408

for.inc41:                                        ; preds = %if.end40
  %29 = load i32, i32* %c, align 4, !dbg !5409
  %inc42 = add nsw i32 %29, 1, !dbg !5409
  store i32 %inc42, i32* %c, align 4, !dbg !5409
  br label %for.cond7, !dbg !5411, !llvm.loop !5412

for.end43:                                        ; preds = %for.cond7
  %30 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5414
  %31 = load i32, i32* %min_channel_len, align 4, !dbg !5416
  %call44 = call i32 @decode_subframe_length(%struct.WMAProDecodeCtx* %30, i32 %31), !dbg !5417
  store i32 %call44, i32* %subframe_len, align 4, !dbg !5418
  %cmp45 = icmp sle i32 %call44, 0, !dbg !5419
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !5420

if.then47:                                        ; preds = %for.end43
  store i32 -1094995529, i32* %retval, align 4, !dbg !5421
  br label %return, !dbg !5421

if.end48:                                         ; preds = %for.end43
  %32 = load i32, i32* %subframe_len, align 4, !dbg !5422
  %33 = load i32, i32* %min_channel_len, align 4, !dbg !5423
  %add = add nsw i32 %33, %32, !dbg !5423
  store i32 %add, i32* %min_channel_len, align 4, !dbg !5423
  store i32 0, i32* %c, align 4, !dbg !5424
  br label %for.cond49, !dbg !5426

for.cond49:                                       ; preds = %for.inc110, %if.end48
  %34 = load i32, i32* %c, align 4, !dbg !5427
  %35 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5430
  %nb_channels50 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %35, i32 0, i32 41, !dbg !5431
  %36 = load i8, i8* %nb_channels50, align 2, !dbg !5431
  %conv51 = sext i8 %36 to i32, !dbg !5430
  %cmp52 = icmp slt i32 %34, %conv51, !dbg !5432
  br i1 %cmp52, label %for.body54, label %for.end112, !dbg !5433

for.body54:                                       ; preds = %for.cond49
  call void @llvm.dbg.declare(metadata %struct.WMAProChannelCtx** %chan, metadata !5434, metadata !2019), !dbg !5437
  %37 = load i32, i32* %c, align 4, !dbg !5438
  %idxprom55 = sext i32 %37 to i64, !dbg !5439
  %38 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5439
  %channel56 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %38, i32 0, i32 52, !dbg !5440
  %arrayidx57 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel56, i64 0, i64 %idxprom55, !dbg !5439
  store %struct.WMAProChannelCtx* %arrayidx57, %struct.WMAProChannelCtx** %chan, align 8, !dbg !5437
  %39 = load i32, i32* %c, align 4, !dbg !5441
  %idxprom58 = sext i32 %39 to i64, !dbg !5443
  %arrayidx59 = getelementptr inbounds [8 x i8], [8 x i8]* %contains_subframe, i64 0, i64 %idxprom58, !dbg !5443
  %40 = load i8, i8* %arrayidx59, align 1, !dbg !5443
  %tobool60 = icmp ne i8 %40, 0, !dbg !5443
  br i1 %tobool60, label %if.then61, label %if.else90, !dbg !5444

if.then61:                                        ; preds = %for.body54
  %41 = load %struct.WMAProChannelCtx*, %struct.WMAProChannelCtx** %chan, align 8, !dbg !5445
  %num_subframes62 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %41, i32 0, i32 2, !dbg !5448
  %42 = load i8, i8* %num_subframes62, align 1, !dbg !5448
  %conv63 = zext i8 %42 to i32, !dbg !5445
  %cmp64 = icmp sge i32 %conv63, 32, !dbg !5449
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !5450

if.then66:                                        ; preds = %if.then61
  %43 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5451
  %avctx = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %43, i32 0, i32 0, !dbg !5453
  %44 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !5453
  %45 = bitcast %struct.AVCodecContext* %44 to i8*, !dbg !5451
  call void (i8*, i32, i8*, ...) @av_log(i8* %45, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.50, i32 0, i32 0)), !dbg !5454
  store i32 -1094995529, i32* %retval, align 4, !dbg !5455
  br label %return, !dbg !5455

if.end67:                                         ; preds = %if.then61
  %46 = load i32, i32* %subframe_len, align 4, !dbg !5456
  %conv68 = trunc i32 %46 to i16, !dbg !5456
  %47 = load %struct.WMAProChannelCtx*, %struct.WMAProChannelCtx** %chan, align 8, !dbg !5457
  %num_subframes69 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %47, i32 0, i32 2, !dbg !5458
  %48 = load i8, i8* %num_subframes69, align 1, !dbg !5458
  %idxprom70 = zext i8 %48 to i64, !dbg !5459
  %49 = load %struct.WMAProChannelCtx*, %struct.WMAProChannelCtx** %chan, align 8, !dbg !5459
  %subframe_len71 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %49, i32 0, i32 3, !dbg !5460
  %arrayidx72 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_len71, i64 0, i64 %idxprom70, !dbg !5459
  store i16 %conv68, i16* %arrayidx72, align 2, !dbg !5461
  %50 = load i32, i32* %subframe_len, align 4, !dbg !5462
  %51 = load i32, i32* %c, align 4, !dbg !5463
  %idxprom73 = sext i32 %51 to i64, !dbg !5464
  %arrayidx74 = getelementptr inbounds [8 x i16], [8 x i16]* %num_samples, i64 0, i64 %idxprom73, !dbg !5464
  %52 = load i16, i16* %arrayidx74, align 2, !dbg !5465
  %conv75 = zext i16 %52 to i32, !dbg !5465
  %add76 = add nsw i32 %conv75, %50, !dbg !5465
  %conv77 = trunc i32 %add76 to i16, !dbg !5465
  store i16 %conv77, i16* %arrayidx74, align 2, !dbg !5465
  %53 = load %struct.WMAProChannelCtx*, %struct.WMAProChannelCtx** %chan, align 8, !dbg !5466
  %num_subframes78 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %53, i32 0, i32 2, !dbg !5467
  %54 = load i8, i8* %num_subframes78, align 1, !dbg !5468
  %inc79 = add i8 %54, 1, !dbg !5468
  store i8 %inc79, i8* %num_subframes78, align 1, !dbg !5468
  %55 = load i32, i32* %c, align 4, !dbg !5469
  %idxprom80 = sext i32 %55 to i64, !dbg !5471
  %arrayidx81 = getelementptr inbounds [8 x i16], [8 x i16]* %num_samples, i64 0, i64 %idxprom80, !dbg !5471
  %56 = load i16, i16* %arrayidx81, align 2, !dbg !5471
  %conv82 = zext i16 %56 to i32, !dbg !5471
  %57 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5472
  %samples_per_frame83 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %57, i32 0, i32 12, !dbg !5473
  %58 = load i16, i16* %samples_per_frame83, align 8, !dbg !5473
  %conv84 = zext i16 %58 to i32, !dbg !5472
  %cmp85 = icmp sgt i32 %conv82, %conv84, !dbg !5474
  br i1 %cmp85, label %if.then87, label %if.end89, !dbg !5475

if.then87:                                        ; preds = %if.end67
  %59 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5476
  %avctx88 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %59, i32 0, i32 0, !dbg !5478
  %60 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx88, align 32, !dbg !5478
  %61 = bitcast %struct.AVCodecContext* %60 to i8*, !dbg !5476
  call void (i8*, i32, i8*, ...) @av_log(i8* %61, i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.51, i32 0, i32 0)), !dbg !5479
  store i32 -1094995529, i32* %retval, align 4, !dbg !5480
  br label %return, !dbg !5480

if.end89:                                         ; preds = %if.end67
  br label %if.end109, !dbg !5481

if.else90:                                        ; preds = %for.body54
  %62 = load i32, i32* %c, align 4, !dbg !5482
  %idxprom91 = sext i32 %62 to i64, !dbg !5485
  %arrayidx92 = getelementptr inbounds [8 x i16], [8 x i16]* %num_samples, i64 0, i64 %idxprom91, !dbg !5485
  %63 = load i16, i16* %arrayidx92, align 2, !dbg !5485
  %conv93 = zext i16 %63 to i32, !dbg !5485
  %64 = load i32, i32* %min_channel_len, align 4, !dbg !5486
  %cmp94 = icmp sle i32 %conv93, %64, !dbg !5487
  br i1 %cmp94, label %if.then96, label %if.end108, !dbg !5485

if.then96:                                        ; preds = %if.else90
  %65 = load i32, i32* %c, align 4, !dbg !5488
  %idxprom97 = sext i32 %65 to i64, !dbg !5491
  %arrayidx98 = getelementptr inbounds [8 x i16], [8 x i16]* %num_samples, i64 0, i64 %idxprom97, !dbg !5491
  %66 = load i16, i16* %arrayidx98, align 2, !dbg !5491
  %conv99 = zext i16 %66 to i32, !dbg !5491
  %67 = load i32, i32* %min_channel_len, align 4, !dbg !5492
  %cmp100 = icmp slt i32 %conv99, %67, !dbg !5493
  br i1 %cmp100, label %if.then102, label %if.end106, !dbg !5494

if.then102:                                       ; preds = %if.then96
  store i32 0, i32* %channels_for_cur_subframe, align 4, !dbg !5495
  %68 = load i32, i32* %c, align 4, !dbg !5497
  %idxprom103 = sext i32 %68 to i64, !dbg !5498
  %arrayidx104 = getelementptr inbounds [8 x i16], [8 x i16]* %num_samples, i64 0, i64 %idxprom103, !dbg !5498
  %69 = load i16, i16* %arrayidx104, align 2, !dbg !5498
  %conv105 = zext i16 %69 to i32, !dbg !5498
  store i32 %conv105, i32* %min_channel_len, align 4, !dbg !5499
  br label %if.end106, !dbg !5500

if.end106:                                        ; preds = %if.then102, %if.then96
  %70 = load i32, i32* %channels_for_cur_subframe, align 4, !dbg !5501
  %inc107 = add nsw i32 %70, 1, !dbg !5501
  store i32 %inc107, i32* %channels_for_cur_subframe, align 4, !dbg !5501
  br label %if.end108, !dbg !5502

if.end108:                                        ; preds = %if.end106, %if.else90
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.end89
  br label %for.inc110, !dbg !5503

for.inc110:                                       ; preds = %if.end109
  %71 = load i32, i32* %c, align 4, !dbg !5504
  %inc111 = add nsw i32 %71, 1, !dbg !5504
  store i32 %inc111, i32* %c, align 4, !dbg !5504
  br label %for.cond49, !dbg !5506, !llvm.loop !5507

for.end112:                                       ; preds = %for.cond49
  br label %do.cond, !dbg !5509

do.cond:                                          ; preds = %for.end112
  %72 = load i32, i32* %min_channel_len, align 4, !dbg !5510
  %73 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5512
  %samples_per_frame113 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %73, i32 0, i32 12, !dbg !5513
  %74 = load i16, i16* %samples_per_frame113, align 8, !dbg !5513
  %conv114 = zext i16 %74 to i32, !dbg !5512
  %cmp115 = icmp slt i32 %72, %conv114, !dbg !5514
  br i1 %cmp115, label %do.body, label %do.end, !dbg !5515, !llvm.loop !5357

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %c, align 4, !dbg !5516
  br label %for.cond117, !dbg !5518

for.cond117:                                      ; preds = %for.inc152, %do.end
  %75 = load i32, i32* %c, align 4, !dbg !5519
  %76 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5522
  %nb_channels118 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %76, i32 0, i32 41, !dbg !5523
  %77 = load i8, i8* %nb_channels118, align 2, !dbg !5523
  %conv119 = sext i8 %77 to i32, !dbg !5522
  %cmp120 = icmp slt i32 %75, %conv119, !dbg !5524
  br i1 %cmp120, label %for.body122, label %for.end154, !dbg !5525

for.body122:                                      ; preds = %for.cond117
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5526, metadata !2019), !dbg !5528
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5529, metadata !2019), !dbg !5530
  store i32 0, i32* %offset, align 4, !dbg !5530
  store i32 0, i32* %i, align 4, !dbg !5531
  br label %for.cond123, !dbg !5533

for.cond123:                                      ; preds = %for.inc149, %for.body122
  %78 = load i32, i32* %i, align 4, !dbg !5534
  %79 = load i32, i32* %c, align 4, !dbg !5537
  %idxprom124 = sext i32 %79 to i64, !dbg !5538
  %80 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5538
  %channel125 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %80, i32 0, i32 52, !dbg !5539
  %arrayidx126 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel125, i64 0, i64 %idxprom124, !dbg !5538
  %num_subframes127 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx126, i32 0, i32 2, !dbg !5540
  %81 = load i8, i8* %num_subframes127, align 1, !dbg !5540
  %conv128 = zext i8 %81 to i32, !dbg !5538
  %cmp129 = icmp slt i32 %78, %conv128, !dbg !5541
  br i1 %cmp129, label %for.body131, label %for.end151, !dbg !5542

for.body131:                                      ; preds = %for.cond123
  br label %do.body132, !dbg !5543, !llvm.loop !5545

do.body132:                                       ; preds = %for.body131
  br label %do.end134, !dbg !5546

do.end134:                                        ; preds = %do.body132
  %82 = load i32, i32* %offset, align 4, !dbg !5549
  %conv135 = trunc i32 %82 to i16, !dbg !5549
  %83 = load i32, i32* %i, align 4, !dbg !5550
  %idxprom136 = sext i32 %83 to i64, !dbg !5551
  %84 = load i32, i32* %c, align 4, !dbg !5552
  %idxprom137 = sext i32 %84 to i64, !dbg !5551
  %85 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5551
  %channel138 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %85, i32 0, i32 52, !dbg !5553
  %arrayidx139 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel138, i64 0, i64 %idxprom137, !dbg !5551
  %subframe_offset = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx139, i32 0, i32 4, !dbg !5554
  %arrayidx140 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_offset, i64 0, i64 %idxprom136, !dbg !5551
  store i16 %conv135, i16* %arrayidx140, align 2, !dbg !5555
  %86 = load i32, i32* %i, align 4, !dbg !5556
  %idxprom141 = sext i32 %86 to i64, !dbg !5557
  %87 = load i32, i32* %c, align 4, !dbg !5558
  %idxprom142 = sext i32 %87 to i64, !dbg !5557
  %88 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5557
  %channel143 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %88, i32 0, i32 52, !dbg !5559
  %arrayidx144 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel143, i64 0, i64 %idxprom142, !dbg !5557
  %subframe_len145 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx144, i32 0, i32 3, !dbg !5560
  %arrayidx146 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_len145, i64 0, i64 %idxprom141, !dbg !5557
  %89 = load i16, i16* %arrayidx146, align 2, !dbg !5557
  %conv147 = zext i16 %89 to i32, !dbg !5557
  %90 = load i32, i32* %offset, align 4, !dbg !5561
  %add148 = add nsw i32 %90, %conv147, !dbg !5561
  store i32 %add148, i32* %offset, align 4, !dbg !5561
  br label %for.inc149, !dbg !5562

for.inc149:                                       ; preds = %do.end134
  %91 = load i32, i32* %i, align 4, !dbg !5563
  %inc150 = add nsw i32 %91, 1, !dbg !5563
  store i32 %inc150, i32* %i, align 4, !dbg !5563
  br label %for.cond123, !dbg !5565, !llvm.loop !5566

for.end151:                                       ; preds = %for.cond123
  br label %for.inc152, !dbg !5568

for.inc152:                                       ; preds = %for.end151
  %92 = load i32, i32* %c, align 4, !dbg !5569
  %inc153 = add nsw i32 %92, 1, !dbg !5569
  store i32 %inc153, i32* %c, align 4, !dbg !5569
  br label %for.cond117, !dbg !5571, !llvm.loop !5572

for.end154:                                       ; preds = %for.cond117
  store i32 0, i32* %retval, align 4, !dbg !5574
  br label %return, !dbg !5574

return:                                           ; preds = %for.end154, %if.then87, %if.then66, %if.then47
  %93 = load i32, i32* %retval, align 4, !dbg !5575
  ret i32 %93, !dbg !5575
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #4 !dbg !5576 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5579, metadata !2019), !dbg !5580
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5581, metadata !2019), !dbg !5582
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5583
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !5584
  %1 = load i32, i32* %index1, align 8, !dbg !5584
  store i32 %1, i32* %index, align 4, !dbg !5582
  call void @llvm.dbg.declare(metadata i8* %result, metadata !5585, metadata !2019), !dbg !5586
  %2 = load i32, i32* %index, align 4, !dbg !5587
  %shr = lshr i32 %2, 3, !dbg !5588
  %idxprom = zext i32 %shr to i64, !dbg !5589
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5589
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !5590
  %4 = load i8*, i8** %buffer, align 8, !dbg !5590
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !5589
  %5 = load i8, i8* %arrayidx, align 1, !dbg !5589
  store i8 %5, i8* %result, align 1, !dbg !5586
  %6 = load i32, i32* %index, align 4, !dbg !5591
  %and = and i32 %6, 7, !dbg !5592
  %7 = load i8, i8* %result, align 1, !dbg !5593
  %conv = zext i8 %7 to i32, !dbg !5593
  %shl = shl i32 %conv, %and, !dbg !5593
  %conv2 = trunc i32 %shl to i8, !dbg !5593
  store i8 %conv2, i8* %result, align 1, !dbg !5593
  %8 = load i8, i8* %result, align 1, !dbg !5594
  %conv3 = zext i8 %8 to i32, !dbg !5594
  %shr4 = ashr i32 %conv3, 7, !dbg !5594
  %conv5 = trunc i32 %shr4 to i8, !dbg !5594
  store i8 %conv5, i8* %result, align 1, !dbg !5594
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5595
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !5597
  %10 = load i32, i32* %index6, align 8, !dbg !5597
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5598
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !5599
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !5599
  %cmp = icmp slt i32 %10, %12, !dbg !5600
  br i1 %cmp, label %if.then, label %if.end, !dbg !5601

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !5602
  %inc = add i32 %13, 1, !dbg !5602
  store i32 %inc, i32* %index, align 4, !dbg !5602
  br label %if.end, !dbg !5603

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !5604
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5605
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !5606
  store i32 %14, i32* %index8, align 8, !dbg !5607
  %16 = load i8, i8* %result, align 1, !dbg !5608
  %conv9 = zext i8 %16 to i32, !dbg !5608
  ret i32 %conv9, !dbg !5609
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_subframe(%struct.WMAProDecodeCtx* %s) #1 !dbg !5610 {
entry:
  %x.addr.i = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr.i, metadata !5611, metadata !2019), !dbg !5616
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !5626, metadata !2019), !dbg !5630
  %n.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr.i, metadata !5636, metadata !2019), !dbg !5637
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %offset = alloca i32, align 4
  %subframe_len = alloca i32, align 4
  %i = alloca i32, align 4
  %total_samples = alloca i32, align 4
  %transmit_coeffs = alloca i32, align 4
  %cur_subwoofer_cutoff = alloca i32, align 4
  %cur_subframe36 = alloca i32, align 4
  %c = alloca i32, align 4
  %num_fill_bits = alloca i32, align 4
  %len = alloca i32, align 4
  %c190 = alloca i32, align 4
  %step = alloca i32, align 4
  %quant_step = alloca i32, align 4
  %num_bits = alloca i32, align 4
  %c238 = alloca i32, align 4
  %num_vec_coeffs = alloca i32, align 4
  %c274 = alloca i32, align 4
  %sign = alloca i32, align 4
  %quant = alloca i32, align 4
  %modifier_len = alloca i32, align 4
  %c339 = alloca i32, align 4
  %c388 = alloca i32, align 4
  %mdct = alloca %struct.FFTContext*, align 8
  %c433 = alloca i32, align 4
  %sf = alloca i32*, align 8
  %b = alloca i32, align 4
  %end = alloca i32, align 4
  %exp = alloca i32, align 4
  %quant490 = alloca float, align 4
  %start = alloca i32, align 4
  %c529 = alloca i32, align 4
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !5638, metadata !2019), !dbg !5639
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5640, metadata !2019), !dbg !5641
  %0 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5642
  %samples_per_frame = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %0, i32 0, i32 12, !dbg !5643
  %1 = load i16, i16* %samples_per_frame, align 8, !dbg !5643
  %conv = zext i16 %1 to i32, !dbg !5642
  store i32 %conv, i32* %offset, align 4, !dbg !5641
  call void @llvm.dbg.declare(metadata i32* %subframe_len, metadata !5644, metadata !2019), !dbg !5645
  %2 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5646
  %samples_per_frame1 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %2, i32 0, i32 12, !dbg !5647
  %3 = load i16, i16* %samples_per_frame1, align 8, !dbg !5647
  %conv2 = zext i16 %3 to i32, !dbg !5646
  store i32 %conv2, i32* %subframe_len, align 4, !dbg !5645
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5648, metadata !2019), !dbg !5649
  call void @llvm.dbg.declare(metadata i32* %total_samples, metadata !5650, metadata !2019), !dbg !5651
  %4 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5652
  %samples_per_frame3 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %4, i32 0, i32 12, !dbg !5653
  %5 = load i16, i16* %samples_per_frame3, align 8, !dbg !5653
  %conv4 = zext i16 %5 to i32, !dbg !5652
  %6 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5654
  %nb_channels = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %6, i32 0, i32 41, !dbg !5655
  %7 = load i8, i8* %nb_channels, align 2, !dbg !5655
  %conv5 = sext i8 %7 to i32, !dbg !5654
  %mul = mul nsw i32 %conv4, %conv5, !dbg !5656
  store i32 %mul, i32* %total_samples, align 4, !dbg !5651
  call void @llvm.dbg.declare(metadata i32* %transmit_coeffs, metadata !5657, metadata !2019), !dbg !5658
  store i32 0, i32* %transmit_coeffs, align 4, !dbg !5658
  call void @llvm.dbg.declare(metadata i32* %cur_subwoofer_cutoff, metadata !5659, metadata !2019), !dbg !5660
  %8 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5661
  %gb = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %8, i32 0, i32 34, !dbg !5662
  %call = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !5663
  %9 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5664
  %subframe_offset = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %9, i32 0, i32 29, !dbg !5665
  store i32 %call, i32* %subframe_offset, align 16, !dbg !5666
  store i32 0, i32* %i, align 4, !dbg !5667
  br label %for.cond, !dbg !5669

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !5670
  %11 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5673
  %nb_channels6 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %11, i32 0, i32 41, !dbg !5674
  %12 = load i8, i8* %nb_channels6, align 2, !dbg !5674
  %conv7 = sext i8 %12 to i32, !dbg !5673
  %cmp = icmp slt i32 %10, %conv7, !dbg !5675
  br i1 %cmp, label %for.body, label %for.end, !dbg !5676

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !5677
  %idxprom = sext i32 %13 to i64, !dbg !5679
  %14 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5679
  %channel = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %14, i32 0, i32 52, !dbg !5680
  %arrayidx = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel, i64 0, i64 %idxprom, !dbg !5679
  %grouped = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx, i32 0, i32 7, !dbg !5681
  store i8 0, i8* %grouped, align 8, !dbg !5682
  %15 = load i32, i32* %offset, align 4, !dbg !5683
  %16 = load i32, i32* %i, align 4, !dbg !5685
  %idxprom9 = sext i32 %16 to i64, !dbg !5686
  %17 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5686
  %channel10 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %17, i32 0, i32 52, !dbg !5687
  %arrayidx11 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel10, i64 0, i64 %idxprom9, !dbg !5686
  %decoded_samples = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx11, i32 0, i32 6, !dbg !5688
  %18 = load i16, i16* %decoded_samples, align 2, !dbg !5688
  %conv12 = zext i16 %18 to i32, !dbg !5686
  %cmp13 = icmp sgt i32 %15, %conv12, !dbg !5689
  br i1 %cmp13, label %if.then, label %if.end, !dbg !5690

if.then:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !5691
  %idxprom15 = sext i32 %19 to i64, !dbg !5693
  %20 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5693
  %channel16 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %20, i32 0, i32 52, !dbg !5694
  %arrayidx17 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel16, i64 0, i64 %idxprom15, !dbg !5693
  %decoded_samples18 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx17, i32 0, i32 6, !dbg !5695
  %21 = load i16, i16* %decoded_samples18, align 2, !dbg !5695
  %conv19 = zext i16 %21 to i32, !dbg !5693
  store i32 %conv19, i32* %offset, align 4, !dbg !5696
  %22 = load i32, i32* %i, align 4, !dbg !5697
  %idxprom20 = sext i32 %22 to i64, !dbg !5698
  %23 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5698
  %channel21 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %23, i32 0, i32 52, !dbg !5699
  %arrayidx22 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel21, i64 0, i64 %idxprom20, !dbg !5698
  %cur_subframe = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx22, i32 0, i32 5, !dbg !5700
  %24 = load i8, i8* %cur_subframe, align 4, !dbg !5700
  %idxprom23 = zext i8 %24 to i64, !dbg !5701
  %25 = load i32, i32* %i, align 4, !dbg !5702
  %idxprom24 = sext i32 %25 to i64, !dbg !5701
  %26 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5701
  %channel25 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %26, i32 0, i32 52, !dbg !5703
  %arrayidx26 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel25, i64 0, i64 %idxprom24, !dbg !5701
  %subframe_len27 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx26, i32 0, i32 3, !dbg !5704
  %arrayidx28 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_len27, i64 0, i64 %idxprom23, !dbg !5701
  %27 = load i16, i16* %arrayidx28, align 2, !dbg !5701
  %conv29 = zext i16 %27 to i32, !dbg !5701
  store i32 %conv29, i32* %subframe_len, align 4, !dbg !5705
  br label %if.end, !dbg !5706

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5707

for.inc:                                          ; preds = %if.end
  %28 = load i32, i32* %i, align 4, !dbg !5708
  %inc = add nsw i32 %28, 1, !dbg !5708
  store i32 %inc, i32* %i, align 4, !dbg !5708
  br label %for.cond, !dbg !5710, !llvm.loop !5711

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !5713, !llvm.loop !5714

do.body:                                          ; preds = %for.end
  br label %do.end, !dbg !5715

do.end:                                           ; preds = %do.body
  %29 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5718
  %channels_for_cur_subframe = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %29, i32 0, i32 42, !dbg !5719
  store i8 0, i8* %channels_for_cur_subframe, align 1, !dbg !5720
  store i32 0, i32* %i, align 4, !dbg !5721
  br label %for.cond30, !dbg !5723

for.cond30:                                       ; preds = %for.inc92, %do.end
  %30 = load i32, i32* %i, align 4, !dbg !5724
  %31 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5727
  %nb_channels31 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %31, i32 0, i32 41, !dbg !5728
  %32 = load i8, i8* %nb_channels31, align 2, !dbg !5728
  %conv32 = sext i8 %32 to i32, !dbg !5727
  %cmp33 = icmp slt i32 %30, %conv32, !dbg !5729
  br i1 %cmp33, label %for.body35, label %for.end94, !dbg !5730

for.body35:                                       ; preds = %for.cond30
  call void @llvm.dbg.declare(metadata i32* %cur_subframe36, metadata !5731, metadata !2019), !dbg !5733
  %33 = load i32, i32* %i, align 4, !dbg !5734
  %idxprom37 = sext i32 %33 to i64, !dbg !5735
  %34 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5735
  %channel38 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %34, i32 0, i32 52, !dbg !5736
  %arrayidx39 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel38, i64 0, i64 %idxprom37, !dbg !5735
  %cur_subframe40 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx39, i32 0, i32 5, !dbg !5737
  %35 = load i8, i8* %cur_subframe40, align 4, !dbg !5737
  %conv41 = zext i8 %35 to i32, !dbg !5735
  store i32 %conv41, i32* %cur_subframe36, align 4, !dbg !5733
  %36 = load i32, i32* %i, align 4, !dbg !5738
  %idxprom42 = sext i32 %36 to i64, !dbg !5739
  %37 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5739
  %channel43 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %37, i32 0, i32 52, !dbg !5740
  %arrayidx44 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel43, i64 0, i64 %idxprom42, !dbg !5739
  %decoded_samples45 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx44, i32 0, i32 6, !dbg !5741
  %38 = load i16, i16* %decoded_samples45, align 2, !dbg !5741
  %conv46 = zext i16 %38 to i32, !dbg !5739
  %39 = load i32, i32* %total_samples, align 4, !dbg !5742
  %sub = sub nsw i32 %39, %conv46, !dbg !5742
  store i32 %sub, i32* %total_samples, align 4, !dbg !5742
  %40 = load i32, i32* %offset, align 4, !dbg !5743
  %41 = load i32, i32* %i, align 4, !dbg !5745
  %idxprom47 = sext i32 %41 to i64, !dbg !5746
  %42 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5746
  %channel48 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %42, i32 0, i32 52, !dbg !5747
  %arrayidx49 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel48, i64 0, i64 %idxprom47, !dbg !5746
  %decoded_samples50 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx49, i32 0, i32 6, !dbg !5748
  %43 = load i16, i16* %decoded_samples50, align 2, !dbg !5748
  %conv51 = zext i16 %43 to i32, !dbg !5746
  %cmp52 = icmp eq i32 %40, %conv51, !dbg !5749
  br i1 %cmp52, label %land.lhs.true, label %if.end91, !dbg !5750

land.lhs.true:                                    ; preds = %for.body35
  %44 = load i32, i32* %subframe_len, align 4, !dbg !5751
  %45 = load i32, i32* %cur_subframe36, align 4, !dbg !5752
  %idxprom54 = sext i32 %45 to i64, !dbg !5753
  %46 = load i32, i32* %i, align 4, !dbg !5754
  %idxprom55 = sext i32 %46 to i64, !dbg !5753
  %47 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5753
  %channel56 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %47, i32 0, i32 52, !dbg !5755
  %arrayidx57 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel56, i64 0, i64 %idxprom55, !dbg !5753
  %subframe_len58 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx57, i32 0, i32 3, !dbg !5756
  %arrayidx59 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_len58, i64 0, i64 %idxprom54, !dbg !5753
  %48 = load i16, i16* %arrayidx59, align 2, !dbg !5753
  %conv60 = zext i16 %48 to i32, !dbg !5753
  %cmp61 = icmp eq i32 %44, %conv60, !dbg !5757
  br i1 %cmp61, label %if.then63, label %if.end91, !dbg !5758

if.then63:                                        ; preds = %land.lhs.true
  %49 = load i32, i32* %cur_subframe36, align 4, !dbg !5760
  %idxprom64 = sext i32 %49 to i64, !dbg !5762
  %50 = load i32, i32* %i, align 4, !dbg !5763
  %idxprom65 = sext i32 %50 to i64, !dbg !5762
  %51 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5762
  %channel66 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %51, i32 0, i32 52, !dbg !5764
  %arrayidx67 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel66, i64 0, i64 %idxprom65, !dbg !5762
  %subframe_len68 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx67, i32 0, i32 3, !dbg !5765
  %arrayidx69 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_len68, i64 0, i64 %idxprom64, !dbg !5762
  %52 = load i16, i16* %arrayidx69, align 2, !dbg !5762
  %conv70 = zext i16 %52 to i32, !dbg !5762
  %53 = load i32, i32* %total_samples, align 4, !dbg !5766
  %sub71 = sub nsw i32 %53, %conv70, !dbg !5766
  store i32 %sub71, i32* %total_samples, align 4, !dbg !5766
  %54 = load i32, i32* %cur_subframe36, align 4, !dbg !5767
  %idxprom72 = sext i32 %54 to i64, !dbg !5768
  %55 = load i32, i32* %i, align 4, !dbg !5769
  %idxprom73 = sext i32 %55 to i64, !dbg !5768
  %56 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5768
  %channel74 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %56, i32 0, i32 52, !dbg !5770
  %arrayidx75 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel74, i64 0, i64 %idxprom73, !dbg !5768
  %subframe_len76 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx75, i32 0, i32 3, !dbg !5771
  %arrayidx77 = getelementptr inbounds [32 x i16], [32 x i16]* %subframe_len76, i64 0, i64 %idxprom72, !dbg !5768
  %57 = load i16, i16* %arrayidx77, align 2, !dbg !5768
  %conv78 = zext i16 %57 to i32, !dbg !5768
  %58 = load i32, i32* %i, align 4, !dbg !5772
  %idxprom79 = sext i32 %58 to i64, !dbg !5773
  %59 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5773
  %channel80 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %59, i32 0, i32 52, !dbg !5774
  %arrayidx81 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel80, i64 0, i64 %idxprom79, !dbg !5773
  %decoded_samples82 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx81, i32 0, i32 6, !dbg !5775
  %60 = load i16, i16* %decoded_samples82, align 2, !dbg !5776
  %conv83 = zext i16 %60 to i32, !dbg !5776
  %add = add nsw i32 %conv83, %conv78, !dbg !5776
  %conv84 = trunc i32 %add to i16, !dbg !5776
  store i16 %conv84, i16* %decoded_samples82, align 2, !dbg !5776
  %61 = load i32, i32* %i, align 4, !dbg !5777
  %conv85 = trunc i32 %61 to i8, !dbg !5777
  %62 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5778
  %channels_for_cur_subframe86 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %62, i32 0, i32 42, !dbg !5779
  %63 = load i8, i8* %channels_for_cur_subframe86, align 1, !dbg !5779
  %idxprom87 = sext i8 %63 to i64, !dbg !5780
  %64 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5780
  %channel_indexes_for_cur_subframe = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %64, i32 0, i32 43, !dbg !5781
  %arrayidx88 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe, i64 0, i64 %idxprom87, !dbg !5780
  store i8 %conv85, i8* %arrayidx88, align 1, !dbg !5782
  %65 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5783
  %channels_for_cur_subframe89 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %65, i32 0, i32 42, !dbg !5784
  %66 = load i8, i8* %channels_for_cur_subframe89, align 1, !dbg !5785
  %inc90 = add i8 %66, 1, !dbg !5785
  store i8 %inc90, i8* %channels_for_cur_subframe89, align 1, !dbg !5785
  br label %if.end91, !dbg !5786

if.end91:                                         ; preds = %if.then63, %land.lhs.true, %for.body35
  br label %for.inc92, !dbg !5787

for.inc92:                                        ; preds = %if.end91
  %67 = load i32, i32* %i, align 4, !dbg !5788
  %inc93 = add nsw i32 %67, 1, !dbg !5788
  store i32 %inc93, i32* %i, align 4, !dbg !5788
  br label %for.cond30, !dbg !5790, !llvm.loop !5791

for.end94:                                        ; preds = %for.cond30
  %68 = load i32, i32* %total_samples, align 4, !dbg !5793
  %tobool = icmp ne i32 %68, 0, !dbg !5793
  br i1 %tobool, label %if.end96, label %if.then95, !dbg !5795

if.then95:                                        ; preds = %for.end94
  %69 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5796
  %parsed_all_subframes = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %69, i32 0, i32 38, !dbg !5797
  store i8 1, i8* %parsed_all_subframes, align 2, !dbg !5798
  br label %if.end96, !dbg !5796

if.end96:                                         ; preds = %if.then95, %for.end94
  br label %do.body97, !dbg !5799, !llvm.loop !5800

do.body97:                                        ; preds = %if.end96
  br label %do.end98, !dbg !5801

do.end98:                                         ; preds = %do.body97
  %70 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5804
  %samples_per_frame99 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %70, i32 0, i32 12, !dbg !5805
  %71 = load i16, i16* %samples_per_frame99, align 8, !dbg !5805
  %conv100 = zext i16 %71 to i32, !dbg !5804
  %72 = load i32, i32* %subframe_len, align 4, !dbg !5806
  %div = sdiv i32 %conv100, %72, !dbg !5807
  %or = or i32 %div, 1, !dbg !5808
  %73 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !5809
  %sub101 = sub nsw i32 31, %73, !dbg !5810
  %conv102 = trunc i32 %sub101 to i8, !dbg !5811
  %74 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5812
  %table_idx = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %74, i32 0, i32 47, !dbg !5813
  store i8 %conv102, i8* %table_idx, align 32, !dbg !5814
  %75 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5815
  %table_idx103 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %75, i32 0, i32 47, !dbg !5816
  %76 = load i8, i8* %table_idx103, align 32, !dbg !5816
  %idxprom104 = zext i8 %76 to i64, !dbg !5817
  %77 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5817
  %num_sfb = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %77, i32 0, i32 19, !dbg !5818
  %arrayidx105 = getelementptr inbounds [8 x i8], [8 x i8]* %num_sfb, i64 0, i64 %idxprom104, !dbg !5817
  %78 = load i8, i8* %arrayidx105, align 1, !dbg !5817
  %79 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5819
  %num_bands = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %79, i32 0, i32 44, !dbg !5820
  store i8 %78, i8* %num_bands, align 4, !dbg !5821
  %80 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5822
  %table_idx106 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %80, i32 0, i32 47, !dbg !5823
  %81 = load i8, i8* %table_idx106, align 32, !dbg !5823
  %idxprom107 = zext i8 %81 to i64, !dbg !5824
  %82 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5824
  %sfb_offsets = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %82, i32 0, i32 20, !dbg !5825
  %arrayidx108 = getelementptr inbounds [8 x [29 x i16]], [8 x [29 x i16]]* %sfb_offsets, i64 0, i64 %idxprom107, !dbg !5824
  %arraydecay = getelementptr inbounds [29 x i16], [29 x i16]* %arrayidx108, i32 0, i32 0, !dbg !5824
  %83 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5826
  %cur_sfb_offsets = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %83, i32 0, i32 46, !dbg !5827
  store i16* %arraydecay, i16** %cur_sfb_offsets, align 8, !dbg !5828
  %84 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5829
  %table_idx109 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %84, i32 0, i32 47, !dbg !5830
  %85 = load i8, i8* %table_idx109, align 32, !dbg !5830
  %idxprom110 = zext i8 %85 to i64, !dbg !5831
  %86 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5831
  %subwoofer_cutoffs = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %86, i32 0, i32 22, !dbg !5832
  %arrayidx111 = getelementptr inbounds [8 x i16], [8 x i16]* %subwoofer_cutoffs, i64 0, i64 %idxprom110, !dbg !5831
  %87 = load i16, i16* %arrayidx111, align 2, !dbg !5831
  %conv112 = sext i16 %87 to i32, !dbg !5831
  store i32 %conv112, i32* %cur_subwoofer_cutoff, align 4, !dbg !5833
  %88 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5834
  %samples_per_frame113 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %88, i32 0, i32 12, !dbg !5835
  %89 = load i16, i16* %samples_per_frame113, align 8, !dbg !5835
  %conv114 = zext i16 %89 to i32, !dbg !5834
  %shr = ashr i32 %conv114, 1, !dbg !5836
  %90 = load i32, i32* %offset, align 4, !dbg !5837
  %add115 = add nsw i32 %90, %shr, !dbg !5837
  store i32 %add115, i32* %offset, align 4, !dbg !5837
  store i32 0, i32* %i, align 4, !dbg !5838
  br label %for.cond116, !dbg !5840

for.cond116:                                      ; preds = %for.inc134, %do.end98
  %91 = load i32, i32* %i, align 4, !dbg !5841
  %92 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5844
  %channels_for_cur_subframe117 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %92, i32 0, i32 42, !dbg !5845
  %93 = load i8, i8* %channels_for_cur_subframe117, align 1, !dbg !5845
  %conv118 = sext i8 %93 to i32, !dbg !5844
  %cmp119 = icmp slt i32 %91, %conv118, !dbg !5846
  br i1 %cmp119, label %for.body121, label %for.end136, !dbg !5847

for.body121:                                      ; preds = %for.cond116
  call void @llvm.dbg.declare(metadata i32* %c, metadata !5848, metadata !2019), !dbg !5850
  %94 = load i32, i32* %i, align 4, !dbg !5851
  %idxprom122 = sext i32 %94 to i64, !dbg !5852
  %95 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5852
  %channel_indexes_for_cur_subframe123 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %95, i32 0, i32 43, !dbg !5853
  %arrayidx124 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe123, i64 0, i64 %idxprom122, !dbg !5852
  %96 = load i8, i8* %arrayidx124, align 1, !dbg !5852
  %conv125 = sext i8 %96 to i32, !dbg !5852
  store i32 %conv125, i32* %c, align 4, !dbg !5850
  %97 = load i32, i32* %offset, align 4, !dbg !5854
  %idxprom126 = sext i32 %97 to i64, !dbg !5855
  %98 = load i32, i32* %c, align 4, !dbg !5856
  %idxprom127 = sext i32 %98 to i64, !dbg !5855
  %99 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5855
  %channel128 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %99, i32 0, i32 52, !dbg !5857
  %arrayidx129 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel128, i64 0, i64 %idxprom127, !dbg !5855
  %out = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx129, i32 0, i32 19, !dbg !5858
  %arrayidx130 = getelementptr inbounds [12288 x float], [12288 x float]* %out, i64 0, i64 %idxprom126, !dbg !5855
  %100 = load i32, i32* %c, align 4, !dbg !5859
  %idxprom131 = sext i32 %100 to i64, !dbg !5860
  %101 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5860
  %channel132 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %101, i32 0, i32 52, !dbg !5861
  %arrayidx133 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel132, i64 0, i64 %idxprom131, !dbg !5860
  %coeffs = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx133, i32 0, i32 16, !dbg !5862
  store float* %arrayidx130, float** %coeffs, align 8, !dbg !5863
  br label %for.inc134, !dbg !5864

for.inc134:                                       ; preds = %for.body121
  %102 = load i32, i32* %i, align 4, !dbg !5865
  %inc135 = add nsw i32 %102, 1, !dbg !5865
  store i32 %inc135, i32* %i, align 4, !dbg !5865
  br label %for.cond116, !dbg !5867, !llvm.loop !5868

for.end136:                                       ; preds = %for.cond116
  %103 = load i32, i32* %subframe_len, align 4, !dbg !5870
  %conv137 = trunc i32 %103 to i16, !dbg !5870
  %104 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5871
  %subframe_len138 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %104, i32 0, i32 40, !dbg !5872
  store i16 %conv137, i16* %subframe_len138, align 8, !dbg !5873
  %105 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5874
  %subframe_len139 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %105, i32 0, i32 40, !dbg !5875
  %106 = load i16, i16* %subframe_len139, align 8, !dbg !5875
  %conv140 = sext i16 %106 to i32, !dbg !5874
  %sub141 = sub nsw i32 %conv140, 1, !dbg !5876
  %or142 = or i32 %sub141, 1, !dbg !5877
  %107 = call i32 @llvm.ctlz.i32(i32 %or142, i1 true), !dbg !5878
  %sub143 = sub nsw i32 31, %107, !dbg !5879
  %add144 = add nsw i32 %sub143, 1, !dbg !5880
  %conv145 = trunc i32 %add144 to i8, !dbg !5881
  %108 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5882
  %esc_len = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %108, i32 0, i32 48, !dbg !5883
  store i8 %conv145, i8* %esc_len, align 1, !dbg !5884
  %109 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5885
  %gb146 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %109, i32 0, i32 34, !dbg !5886
  %call147 = call i32 @get_bits1(%struct.GetBitContext* %gb146), !dbg !5887
  %tobool148 = icmp ne i32 %call147, 0, !dbg !5887
  br i1 %tobool148, label %if.then149, label %if.end172, !dbg !5888

if.then149:                                       ; preds = %for.end136
  call void @llvm.dbg.declare(metadata i32* %num_fill_bits, metadata !5889, metadata !2019), !dbg !5890
  %110 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5891
  %gb150 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %110, i32 0, i32 34, !dbg !5892
  %call151 = call i32 @get_bits(%struct.GetBitContext* %gb150, i32 2), !dbg !5893
  store i32 %call151, i32* %num_fill_bits, align 4, !dbg !5894
  %tobool152 = icmp ne i32 %call151, 0, !dbg !5894
  br i1 %tobool152, label %if.end159, label %if.then153, !dbg !5895

if.then153:                                       ; preds = %if.then149
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5896, metadata !2019), !dbg !5897
  %111 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5898
  %gb154 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %111, i32 0, i32 34, !dbg !5899
  %call155 = call i32 @get_bits(%struct.GetBitContext* %gb154, i32 4), !dbg !5900
  store i32 %call155, i32* %len, align 4, !dbg !5897
  %112 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5901
  %gb156 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %112, i32 0, i32 34, !dbg !5902
  %113 = load i32, i32* %len, align 4, !dbg !5903
  store %struct.GetBitContext* %gb156, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5904
  store i32 %113, i32* %n.addr.i, align 4, !dbg !5904
  %114 = load i32, i32* %n.addr.i, align 4, !dbg !5905
  %tobool.i = icmp ne i32 %114, 0, !dbg !5905
  br i1 %tobool.i, label %cond.true.i, label %cond.false.i, !dbg !5905

cond.true.i:                                      ; preds = %if.then153
  %115 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !5906
  %116 = load i32, i32* %n.addr.i, align 4, !dbg !5908
  %call.i = call i32 @get_bits(%struct.GetBitContext* %115, i32 %116) #9, !dbg !5909
  br label %get_bitsz.exit, !dbg !5910

cond.false.i:                                     ; preds = %if.then153
  br label %get_bitsz.exit, !dbg !5911

get_bitsz.exit:                                   ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i32 [ %call.i, %cond.true.i ], [ 0, %cond.false.i ], !dbg !5913
  %add158 = add nsw i32 %cond.i, 1, !dbg !5915
  store i32 %add158, i32* %num_fill_bits, align 4, !dbg !5916
  br label %if.end159, !dbg !5917

if.end159:                                        ; preds = %get_bitsz.exit, %if.then149
  %117 = load i32, i32* %num_fill_bits, align 4, !dbg !5918
  %cmp160 = icmp sge i32 %117, 0, !dbg !5920
  br i1 %cmp160, label %if.then162, label %if.end171, !dbg !5921

if.then162:                                       ; preds = %if.end159
  %118 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5922
  %gb163 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %118, i32 0, i32 34, !dbg !5925
  %call164 = call i32 @get_bits_count(%struct.GetBitContext* %gb163), !dbg !5926
  %119 = load i32, i32* %num_fill_bits, align 4, !dbg !5927
  %add165 = add nsw i32 %call164, %119, !dbg !5928
  %120 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5929
  %num_saved_bits = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %120, i32 0, i32 27, !dbg !5930
  %121 = load i32, i32* %num_saved_bits, align 8, !dbg !5930
  %cmp166 = icmp sgt i32 %add165, %121, !dbg !5931
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !5932

if.then168:                                       ; preds = %if.then162
  %122 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5933
  %avctx = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %122, i32 0, i32 0, !dbg !5935
  %123 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !5935
  %124 = bitcast %struct.AVCodecContext* %123 to i8*, !dbg !5933
  call void (i8*, i32, i8*, ...) @av_log(i8* %124, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.53, i32 0, i32 0)), !dbg !5936
  store i32 -1094995529, i32* %retval, align 4, !dbg !5937
  br label %return, !dbg !5937

if.end169:                                        ; preds = %if.then162
  %125 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5938
  %gb170 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %125, i32 0, i32 34, !dbg !5939
  %126 = load i32, i32* %num_fill_bits, align 4, !dbg !5940
  call void @skip_bits_long(%struct.GetBitContext* %gb170, i32 %126), !dbg !5941
  br label %if.end171, !dbg !5942

if.end171:                                        ; preds = %if.end169, %if.end159
  br label %if.end172, !dbg !5943

if.end172:                                        ; preds = %if.end171, %for.end136
  %127 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5944
  %gb173 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %127, i32 0, i32 34, !dbg !5946
  %call174 = call i32 @get_bits1(%struct.GetBitContext* %gb173), !dbg !5947
  %tobool175 = icmp ne i32 %call174, 0, !dbg !5947
  br i1 %tobool175, label %if.then176, label %if.end178, !dbg !5948

if.then176:                                       ; preds = %if.end172
  %128 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5949
  %avctx177 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %128, i32 0, i32 0, !dbg !5951
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx177, align 32, !dbg !5951
  %130 = bitcast %struct.AVCodecContext* %129 to i8*, !dbg !5949
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %130, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i32 0, i32 0)), !dbg !5952
  store i32 -1163346256, i32* %retval, align 4, !dbg !5953
  br label %return, !dbg !5953

if.end178:                                        ; preds = %if.end172
  %131 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5954
  %call179 = call i32 @decode_channel_transform(%struct.WMAProDecodeCtx* %131), !dbg !5956
  %cmp180 = icmp slt i32 %call179, 0, !dbg !5957
  br i1 %cmp180, label %if.then182, label %if.end183, !dbg !5958

if.then182:                                       ; preds = %if.end178
  store i32 -1094995529, i32* %retval, align 4, !dbg !5959
  br label %return, !dbg !5959

if.end183:                                        ; preds = %if.end178
  store i32 0, i32* %i, align 4, !dbg !5960
  br label %for.cond184, !dbg !5962

for.cond184:                                      ; preds = %for.inc204, %if.end183
  %132 = load i32, i32* %i, align 4, !dbg !5963
  %133 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5966
  %channels_for_cur_subframe185 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %133, i32 0, i32 42, !dbg !5967
  %134 = load i8, i8* %channels_for_cur_subframe185, align 1, !dbg !5967
  %conv186 = sext i8 %134 to i32, !dbg !5966
  %cmp187 = icmp slt i32 %132, %conv186, !dbg !5968
  br i1 %cmp187, label %for.body189, label %for.end206, !dbg !5969

for.body189:                                      ; preds = %for.cond184
  call void @llvm.dbg.declare(metadata i32* %c190, metadata !5970, metadata !2019), !dbg !5972
  %135 = load i32, i32* %i, align 4, !dbg !5973
  %idxprom191 = sext i32 %135 to i64, !dbg !5974
  %136 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5974
  %channel_indexes_for_cur_subframe192 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %136, i32 0, i32 43, !dbg !5975
  %arrayidx193 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe192, i64 0, i64 %idxprom191, !dbg !5974
  %137 = load i8, i8* %arrayidx193, align 1, !dbg !5974
  %conv194 = sext i8 %137 to i32, !dbg !5974
  store i32 %conv194, i32* %c190, align 4, !dbg !5972
  %138 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5976
  %gb195 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %138, i32 0, i32 34, !dbg !5978
  %call196 = call i32 @get_bits1(%struct.GetBitContext* %gb195), !dbg !5979
  %conv197 = trunc i32 %call196 to i8, !dbg !5979
  %139 = load i32, i32* %c190, align 4, !dbg !5980
  %idxprom198 = sext i32 %139 to i64, !dbg !5981
  %140 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5981
  %channel199 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %140, i32 0, i32 52, !dbg !5982
  %arrayidx200 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel199, i64 0, i64 %idxprom198, !dbg !5981
  %transmit_coefs = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx200, i32 0, i32 1, !dbg !5983
  store i8 %conv197, i8* %transmit_coefs, align 2, !dbg !5984
  %tobool201 = icmp ne i8 %conv197, 0, !dbg !5984
  br i1 %tobool201, label %if.then202, label %if.end203, !dbg !5985

if.then202:                                       ; preds = %for.body189
  store i32 1, i32* %transmit_coeffs, align 4, !dbg !5986
  br label %if.end203, !dbg !5987

if.end203:                                        ; preds = %if.then202, %for.body189
  br label %for.inc204, !dbg !5988

for.inc204:                                       ; preds = %if.end203
  %141 = load i32, i32* %i, align 4, !dbg !5989
  %inc205 = add nsw i32 %141, 1, !dbg !5989
  store i32 %inc205, i32* %i, align 4, !dbg !5989
  br label %for.cond184, !dbg !5991, !llvm.loop !5992

for.end206:                                       ; preds = %for.cond184
  br label %do.body207, !dbg !5994, !llvm.loop !5995

do.body207:                                       ; preds = %for.end206
  %142 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !5996
  %subframe_len208 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %142, i32 0, i32 40, !dbg !6000
  %143 = load i16, i16* %subframe_len208, align 8, !dbg !6000
  %conv209 = sext i16 %143 to i32, !dbg !5996
  %cmp210 = icmp sle i32 %conv209, 8192, !dbg !6001
  br i1 %cmp210, label %if.end213, label %if.then212, !dbg !6002

if.then212:                                       ; preds = %do.body207
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i32 0, i32 0), i32 1288), !dbg !6003
  call void @abort() #8, !dbg !6006
  unreachable, !dbg !6008

if.end213:                                        ; preds = %do.body207
  br label %do.end214, !dbg !6009

do.end214:                                        ; preds = %if.end213
  %144 = load i32, i32* %transmit_coeffs, align 4, !dbg !6011
  %tobool215 = icmp ne i32 %144, 0, !dbg !6011
  br i1 %tobool215, label %if.then216, label %if.end379, !dbg !6013

if.then216:                                       ; preds = %do.end214
  call void @llvm.dbg.declare(metadata i32* %step, metadata !6014, metadata !2019), !dbg !6016
  call void @llvm.dbg.declare(metadata i32* %quant_step, metadata !6017, metadata !2019), !dbg !6018
  %145 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6019
  %bits_per_sample = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %145, i32 0, i32 11, !dbg !6020
  %146 = load i8, i8* %bits_per_sample, align 2, !dbg !6020
  %conv217 = zext i8 %146 to i32, !dbg !6019
  %mul218 = mul nsw i32 90, %conv217, !dbg !6021
  %shr219 = ashr i32 %mul218, 4, !dbg !6022
  store i32 %shr219, i32* %quant_step, align 4, !dbg !6018
  %147 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6023
  %gb220 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %147, i32 0, i32 34, !dbg !6025
  %call221 = call i32 @get_bits1(%struct.GetBitContext* %gb220), !dbg !6026
  %conv222 = trunc i32 %call221 to i8, !dbg !6026
  %148 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6027
  %transmit_num_vec_coeffs = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %148, i32 0, i32 45, !dbg !6028
  store i8 %conv222, i8* %transmit_num_vec_coeffs, align 1, !dbg !6029
  %tobool223 = icmp ne i8 %conv222, 0, !dbg !6029
  br i1 %tobool223, label %if.then224, label %if.else, !dbg !6030

if.then224:                                       ; preds = %if.then216
  call void @llvm.dbg.declare(metadata i32* %num_bits, metadata !6031, metadata !2019), !dbg !6033
  %149 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6034
  %subframe_len225 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %149, i32 0, i32 40, !dbg !6035
  %150 = load i16, i16* %subframe_len225, align 8, !dbg !6035
  %conv226 = sext i16 %150 to i32, !dbg !6034
  %add227 = add nsw i32 %conv226, 3, !dbg !6036
  %div228 = sdiv i32 %add227, 4, !dbg !6037
  %or229 = or i32 %div228, 1, !dbg !6038
  %151 = call i32 @llvm.ctlz.i32(i32 %or229, i1 true), !dbg !6039
  %sub230 = sub nsw i32 31, %151, !dbg !6040
  %add231 = add nsw i32 %sub230, 1, !dbg !6041
  store i32 %add231, i32* %num_bits, align 4, !dbg !6033
  store i32 0, i32* %i, align 4, !dbg !6042
  br label %for.cond232, !dbg !6044

for.cond232:                                      ; preds = %for.inc265, %if.then224
  %152 = load i32, i32* %i, align 4, !dbg !6045
  %153 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6048
  %channels_for_cur_subframe233 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %153, i32 0, i32 42, !dbg !6049
  %154 = load i8, i8* %channels_for_cur_subframe233, align 1, !dbg !6049
  %conv234 = sext i8 %154 to i32, !dbg !6048
  %cmp235 = icmp slt i32 %152, %conv234, !dbg !6050
  br i1 %cmp235, label %for.body237, label %for.end267, !dbg !6051

for.body237:                                      ; preds = %for.cond232
  call void @llvm.dbg.declare(metadata i32* %c238, metadata !6052, metadata !2019), !dbg !6054
  %155 = load i32, i32* %i, align 4, !dbg !6055
  %idxprom239 = sext i32 %155 to i64, !dbg !6056
  %156 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6056
  %channel_indexes_for_cur_subframe240 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %156, i32 0, i32 43, !dbg !6057
  %arrayidx241 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe240, i64 0, i64 %idxprom239, !dbg !6056
  %157 = load i8, i8* %arrayidx241, align 1, !dbg !6056
  %conv242 = sext i8 %157 to i32, !dbg !6056
  store i32 %conv242, i32* %c238, align 4, !dbg !6054
  call void @llvm.dbg.declare(metadata i32* %num_vec_coeffs, metadata !6058, metadata !2019), !dbg !6059
  %158 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6060
  %gb243 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %158, i32 0, i32 34, !dbg !6061
  %159 = load i32, i32* %num_bits, align 4, !dbg !6062
  %call244 = call i32 @get_bits(%struct.GetBitContext* %gb243, i32 %159), !dbg !6063
  %shl = shl i32 %call244, 2, !dbg !6064
  store i32 %shl, i32* %num_vec_coeffs, align 4, !dbg !6059
  %160 = load i32, i32* %num_vec_coeffs, align 4, !dbg !6065
  %161 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6067
  %subframe_len245 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %161, i32 0, i32 40, !dbg !6068
  %162 = load i16, i16* %subframe_len245, align 8, !dbg !6068
  %conv246 = sext i16 %162 to i32, !dbg !6067
  %cmp247 = icmp sgt i32 %160, %conv246, !dbg !6069
  br i1 %cmp247, label %if.then249, label %if.end251, !dbg !6070

if.then249:                                       ; preds = %for.body237
  %163 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6071
  %avctx250 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %163, i32 0, i32 0, !dbg !6073
  %164 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx250, align 32, !dbg !6073
  %165 = bitcast %struct.AVCodecContext* %164 to i8*, !dbg !6071
  %166 = load i32, i32* %num_vec_coeffs, align 4, !dbg !6074
  call void (i8*, i32, i8*, ...) @av_log(i8* %165, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.56, i32 0, i32 0), i32 %166), !dbg !6075
  store i32 -1094995529, i32* %retval, align 4, !dbg !6076
  br label %return, !dbg !6076

if.end251:                                        ; preds = %for.body237
  br label %do.body252, !dbg !6077, !llvm.loop !6078

do.body252:                                       ; preds = %if.end251
  %167 = load i32, i32* %num_vec_coeffs, align 4, !dbg !6079
  %168 = load i32, i32* %offset, align 4, !dbg !6083
  %add253 = add nsw i32 %167, %168, !dbg !6084
  %conv254 = sext i32 %add253 to i64, !dbg !6079
  %cmp255 = icmp ule i64 %conv254, 12288, !dbg !6085
  br i1 %cmp255, label %if.end258, label %if.then257, !dbg !6086

if.then257:                                       ; preds = %do.body252
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i32 0, i32 0), i32 1303), !dbg !6087
  call void @abort() #8, !dbg !6090
  unreachable, !dbg !6092

if.end258:                                        ; preds = %do.body252
  br label %do.end259, !dbg !6093

do.end259:                                        ; preds = %if.end258
  %169 = load i32, i32* %num_vec_coeffs, align 4, !dbg !6095
  %conv260 = trunc i32 %169 to i16, !dbg !6095
  %170 = load i32, i32* %c238, align 4, !dbg !6096
  %idxprom261 = sext i32 %170 to i64, !dbg !6097
  %171 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6097
  %channel262 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %171, i32 0, i32 52, !dbg !6098
  %arrayidx263 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel262, i64 0, i64 %idxprom261, !dbg !6097
  %num_vec_coeffs264 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx263, i32 0, i32 17, !dbg !6099
  store i16 %conv260, i16* %num_vec_coeffs264, align 32, !dbg !6100
  br label %for.inc265, !dbg !6101

for.inc265:                                       ; preds = %do.end259
  %172 = load i32, i32* %i, align 4, !dbg !6102
  %inc266 = add nsw i32 %172, 1, !dbg !6102
  store i32 %inc266, i32* %i, align 4, !dbg !6102
  br label %for.cond232, !dbg !6104, !llvm.loop !6105

for.end267:                                       ; preds = %for.cond232
  br label %if.end287, !dbg !6107

if.else:                                          ; preds = %if.then216
  store i32 0, i32* %i, align 4, !dbg !6108
  br label %for.cond268, !dbg !6111

for.cond268:                                      ; preds = %for.inc284, %if.else
  %173 = load i32, i32* %i, align 4, !dbg !6112
  %174 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6115
  %channels_for_cur_subframe269 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %174, i32 0, i32 42, !dbg !6116
  %175 = load i8, i8* %channels_for_cur_subframe269, align 1, !dbg !6116
  %conv270 = sext i8 %175 to i32, !dbg !6115
  %cmp271 = icmp slt i32 %173, %conv270, !dbg !6117
  br i1 %cmp271, label %for.body273, label %for.end286, !dbg !6118

for.body273:                                      ; preds = %for.cond268
  call void @llvm.dbg.declare(metadata i32* %c274, metadata !6119, metadata !2019), !dbg !6121
  %176 = load i32, i32* %i, align 4, !dbg !6122
  %idxprom275 = sext i32 %176 to i64, !dbg !6123
  %177 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6123
  %channel_indexes_for_cur_subframe276 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %177, i32 0, i32 43, !dbg !6124
  %arrayidx277 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe276, i64 0, i64 %idxprom275, !dbg !6123
  %178 = load i8, i8* %arrayidx277, align 1, !dbg !6123
  %conv278 = sext i8 %178 to i32, !dbg !6123
  store i32 %conv278, i32* %c274, align 4, !dbg !6121
  %179 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6125
  %subframe_len279 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %179, i32 0, i32 40, !dbg !6126
  %180 = load i16, i16* %subframe_len279, align 8, !dbg !6126
  %181 = load i32, i32* %c274, align 4, !dbg !6127
  %idxprom280 = sext i32 %181 to i64, !dbg !6128
  %182 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6128
  %channel281 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %182, i32 0, i32 52, !dbg !6129
  %arrayidx282 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel281, i64 0, i64 %idxprom280, !dbg !6128
  %num_vec_coeffs283 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx282, i32 0, i32 17, !dbg !6130
  store i16 %180, i16* %num_vec_coeffs283, align 32, !dbg !6131
  br label %for.inc284, !dbg !6132

for.inc284:                                       ; preds = %for.body273
  %183 = load i32, i32* %i, align 4, !dbg !6133
  %inc285 = add nsw i32 %183, 1, !dbg !6133
  store i32 %inc285, i32* %i, align 4, !dbg !6133
  br label %for.cond268, !dbg !6135, !llvm.loop !6136

for.end286:                                       ; preds = %for.cond268
  br label %if.end287

if.end287:                                        ; preds = %for.end286, %for.end267
  %184 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6138
  %gb288 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %184, i32 0, i32 34, !dbg !6139
  %call289 = call i32 @get_sbits(%struct.GetBitContext* %gb288, i32 6), !dbg !6140
  store i32 %call289, i32* %step, align 4, !dbg !6141
  %185 = load i32, i32* %step, align 4, !dbg !6142
  %186 = load i32, i32* %quant_step, align 4, !dbg !6143
  %add290 = add nsw i32 %186, %185, !dbg !6143
  store i32 %add290, i32* %quant_step, align 4, !dbg !6143
  %187 = load i32, i32* %step, align 4, !dbg !6144
  %cmp291 = icmp eq i32 %187, -32, !dbg !6146
  br i1 %cmp291, label %if.then295, label %lor.lhs.false, !dbg !6147

lor.lhs.false:                                    ; preds = %if.end287
  %188 = load i32, i32* %step, align 4, !dbg !6148
  %cmp293 = icmp eq i32 %188, 31, !dbg !6150
  br i1 %cmp293, label %if.then295, label %if.end313, !dbg !6151

if.then295:                                       ; preds = %lor.lhs.false, %if.end287
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !6152, metadata !2019), !dbg !6154
  %189 = load i32, i32* %step, align 4, !dbg !6155
  %cmp296 = icmp eq i32 %189, 31, !dbg !6156
  %conv297 = zext i1 %cmp296 to i32, !dbg !6156
  %sub298 = sub nsw i32 %conv297, 1, !dbg !6157
  store i32 %sub298, i32* %sign, align 4, !dbg !6154
  call void @llvm.dbg.declare(metadata i32* %quant, metadata !6158, metadata !2019), !dbg !6159
  store i32 0, i32* %quant, align 4, !dbg !6159
  br label %while.cond, !dbg !6160

while.cond:                                       ; preds = %while.body, %if.then295
  %190 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6161
  %gb299 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %190, i32 0, i32 34, !dbg !6163
  %call300 = call i32 @get_bits_count(%struct.GetBitContext* %gb299), !dbg !6164
  %add301 = add nsw i32 %call300, 5, !dbg !6165
  %191 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6166
  %num_saved_bits302 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %191, i32 0, i32 27, !dbg !6167
  %192 = load i32, i32* %num_saved_bits302, align 8, !dbg !6167
  %cmp303 = icmp slt i32 %add301, %192, !dbg !6168
  br i1 %cmp303, label %land.rhs, label %land.end, !dbg !6169

land.rhs:                                         ; preds = %while.cond
  %193 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6170
  %gb305 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %193, i32 0, i32 34, !dbg !6171
  %call306 = call i32 @get_bits(%struct.GetBitContext* %gb305, i32 5), !dbg !6172
  store i32 %call306, i32* %step, align 4, !dbg !6173
  %cmp307 = icmp eq i32 %call306, 31, !dbg !6174
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %194 = phi i1 [ false, %while.cond ], [ %cmp307, %land.rhs ]
  br i1 %194, label %while.body, label %while.end, !dbg !6175

while.body:                                       ; preds = %land.end
  %195 = load i32, i32* %quant, align 4, !dbg !6177
  %add309 = add nsw i32 %195, 31, !dbg !6177
  store i32 %add309, i32* %quant, align 4, !dbg !6177
  br label %while.cond, !dbg !6179, !llvm.loop !6181

while.end:                                        ; preds = %land.end
  %196 = load i32, i32* %quant, align 4, !dbg !6182
  %197 = load i32, i32* %step, align 4, !dbg !6183
  %add310 = add nsw i32 %196, %197, !dbg !6184
  %198 = load i32, i32* %sign, align 4, !dbg !6185
  %xor = xor i32 %add310, %198, !dbg !6186
  %199 = load i32, i32* %sign, align 4, !dbg !6187
  %sub311 = sub nsw i32 %xor, %199, !dbg !6188
  %200 = load i32, i32* %quant_step, align 4, !dbg !6189
  %add312 = add nsw i32 %200, %sub311, !dbg !6189
  store i32 %add312, i32* %quant_step, align 4, !dbg !6189
  br label %if.end313, !dbg !6190

if.end313:                                        ; preds = %while.end, %lor.lhs.false
  %201 = load i32, i32* %quant_step, align 4, !dbg !6191
  %cmp314 = icmp slt i32 %201, 0, !dbg !6193
  br i1 %cmp314, label %if.then316, label %if.end318, !dbg !6194

if.then316:                                       ; preds = %if.end313
  %202 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6195
  %avctx317 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %202, i32 0, i32 0, !dbg !6197
  %203 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx317, align 32, !dbg !6197
  %204 = bitcast %struct.AVCodecContext* %203 to i8*, !dbg !6195
  call void (i8*, i32, i8*, ...) @av_log(i8* %204, i32 48, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.58, i32 0, i32 0)), !dbg !6198
  br label %if.end318, !dbg !6199

if.end318:                                        ; preds = %if.then316, %if.end313
  %205 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6200
  %channels_for_cur_subframe319 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %205, i32 0, i32 42, !dbg !6202
  %206 = load i8, i8* %channels_for_cur_subframe319, align 1, !dbg !6202
  %conv320 = sext i8 %206 to i32, !dbg !6200
  %cmp321 = icmp eq i32 %conv320, 1, !dbg !6203
  br i1 %cmp321, label %if.then323, label %if.else330, !dbg !6204

if.then323:                                       ; preds = %if.end318
  %207 = load i32, i32* %quant_step, align 4, !dbg !6205
  %208 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6207
  %channel_indexes_for_cur_subframe324 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %208, i32 0, i32 43, !dbg !6208
  %arrayidx325 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe324, i64 0, i64 0, !dbg !6207
  %209 = load i8, i8* %arrayidx325, align 4, !dbg !6207
  %idxprom326 = sext i8 %209 to i64, !dbg !6209
  %210 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6209
  %channel327 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %210, i32 0, i32 52, !dbg !6210
  %arrayidx328 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel327, i64 0, i64 %idxprom326, !dbg !6209
  %quant_step329 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx328, i32 0, i32 8, !dbg !6211
  store i32 %207, i32* %quant_step329, align 4, !dbg !6212
  br label %if.end373, !dbg !6213

if.else330:                                       ; preds = %if.end318
  call void @llvm.dbg.declare(metadata i32* %modifier_len, metadata !6214, metadata !2019), !dbg !6216
  %211 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6217
  %gb331 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %211, i32 0, i32 34, !dbg !6218
  %call332 = call i32 @get_bits(%struct.GetBitContext* %gb331, i32 3), !dbg !6219
  store i32 %call332, i32* %modifier_len, align 4, !dbg !6216
  store i32 0, i32* %i, align 4, !dbg !6220
  br label %for.cond333, !dbg !6222

for.cond333:                                      ; preds = %for.inc370, %if.else330
  %212 = load i32, i32* %i, align 4, !dbg !6223
  %213 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6226
  %channels_for_cur_subframe334 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %213, i32 0, i32 42, !dbg !6227
  %214 = load i8, i8* %channels_for_cur_subframe334, align 1, !dbg !6227
  %conv335 = sext i8 %214 to i32, !dbg !6226
  %cmp336 = icmp slt i32 %212, %conv335, !dbg !6228
  br i1 %cmp336, label %for.body338, label %for.end372, !dbg !6229

for.body338:                                      ; preds = %for.cond333
  call void @llvm.dbg.declare(metadata i32* %c339, metadata !6230, metadata !2019), !dbg !6232
  %215 = load i32, i32* %i, align 4, !dbg !6233
  %idxprom340 = sext i32 %215 to i64, !dbg !6234
  %216 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6234
  %channel_indexes_for_cur_subframe341 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %216, i32 0, i32 43, !dbg !6235
  %arrayidx342 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe341, i64 0, i64 %idxprom340, !dbg !6234
  %217 = load i8, i8* %arrayidx342, align 1, !dbg !6234
  %conv343 = sext i8 %217 to i32, !dbg !6234
  store i32 %conv343, i32* %c339, align 4, !dbg !6232
  %218 = load i32, i32* %quant_step, align 4, !dbg !6236
  %219 = load i32, i32* %c339, align 4, !dbg !6237
  %idxprom344 = sext i32 %219 to i64, !dbg !6238
  %220 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6238
  %channel345 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %220, i32 0, i32 52, !dbg !6239
  %arrayidx346 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel345, i64 0, i64 %idxprom344, !dbg !6238
  %quant_step347 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx346, i32 0, i32 8, !dbg !6240
  store i32 %218, i32* %quant_step347, align 4, !dbg !6241
  %221 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6242
  %gb348 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %221, i32 0, i32 34, !dbg !6244
  %call349 = call i32 @get_bits1(%struct.GetBitContext* %gb348), !dbg !6245
  %tobool350 = icmp ne i32 %call349, 0, !dbg !6245
  br i1 %tobool350, label %if.then351, label %if.end369, !dbg !6246

if.then351:                                       ; preds = %for.body338
  %222 = load i32, i32* %modifier_len, align 4, !dbg !6247
  %tobool352 = icmp ne i32 %222, 0, !dbg !6247
  br i1 %tobool352, label %if.then353, label %if.else362, !dbg !6250

if.then353:                                       ; preds = %if.then351
  %223 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6251
  %gb354 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %223, i32 0, i32 34, !dbg !6253
  %224 = load i32, i32* %modifier_len, align 4, !dbg !6254
  %call355 = call i32 @get_bits(%struct.GetBitContext* %gb354, i32 %224), !dbg !6255
  %add356 = add i32 %call355, 1, !dbg !6256
  %225 = load i32, i32* %c339, align 4, !dbg !6257
  %idxprom357 = sext i32 %225 to i64, !dbg !6258
  %226 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6258
  %channel358 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %226, i32 0, i32 52, !dbg !6259
  %arrayidx359 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel358, i64 0, i64 %idxprom357, !dbg !6258
  %quant_step360 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx359, i32 0, i32 8, !dbg !6260
  %227 = load i32, i32* %quant_step360, align 4, !dbg !6261
  %add361 = add i32 %227, %add356, !dbg !6261
  store i32 %add361, i32* %quant_step360, align 4, !dbg !6261
  br label %if.end368, !dbg !6262

if.else362:                                       ; preds = %if.then351
  %228 = load i32, i32* %c339, align 4, !dbg !6263
  %idxprom363 = sext i32 %228 to i64, !dbg !6264
  %229 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6264
  %channel364 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %229, i32 0, i32 52, !dbg !6265
  %arrayidx365 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel364, i64 0, i64 %idxprom363, !dbg !6264
  %quant_step366 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx365, i32 0, i32 8, !dbg !6266
  %230 = load i32, i32* %quant_step366, align 4, !dbg !6267
  %inc367 = add nsw i32 %230, 1, !dbg !6267
  store i32 %inc367, i32* %quant_step366, align 4, !dbg !6267
  br label %if.end368

if.end368:                                        ; preds = %if.else362, %if.then353
  br label %if.end369, !dbg !6268

if.end369:                                        ; preds = %if.end368, %for.body338
  br label %for.inc370, !dbg !6269

for.inc370:                                       ; preds = %if.end369
  %231 = load i32, i32* %i, align 4, !dbg !6270
  %inc371 = add nsw i32 %231, 1, !dbg !6270
  store i32 %inc371, i32* %i, align 4, !dbg !6270
  br label %for.cond333, !dbg !6272, !llvm.loop !6273

for.end372:                                       ; preds = %for.cond333
  br label %if.end373

if.end373:                                        ; preds = %for.end372, %if.then323
  %232 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6275
  %call374 = call i32 @decode_scale_factors(%struct.WMAProDecodeCtx* %232), !dbg !6277
  %cmp375 = icmp slt i32 %call374, 0, !dbg !6278
  br i1 %cmp375, label %if.then377, label %if.end378, !dbg !6279

if.then377:                                       ; preds = %if.end373
  store i32 -1094995529, i32* %retval, align 4, !dbg !6280
  br label %return, !dbg !6280

if.end378:                                        ; preds = %if.end373
  br label %if.end379, !dbg !6281

if.end379:                                        ; preds = %if.end378, %do.end214
  br label %do.body380, !dbg !6282, !llvm.loop !6283

do.body380:                                       ; preds = %if.end379
  br label %do.end381, !dbg !6284

do.end381:                                        ; preds = %do.body380
  store i32 0, i32* %i, align 4, !dbg !6287
  br label %for.cond382, !dbg !6289

for.cond382:                                      ; preds = %for.inc415, %do.end381
  %233 = load i32, i32* %i, align 4, !dbg !6290
  %234 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6293
  %channels_for_cur_subframe383 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %234, i32 0, i32 42, !dbg !6294
  %235 = load i8, i8* %channels_for_cur_subframe383, align 1, !dbg !6294
  %conv384 = sext i8 %235 to i32, !dbg !6293
  %cmp385 = icmp slt i32 %233, %conv384, !dbg !6295
  br i1 %cmp385, label %for.body387, label %for.end417, !dbg !6296

for.body387:                                      ; preds = %for.cond382
  call void @llvm.dbg.declare(metadata i32* %c388, metadata !6297, metadata !2019), !dbg !6299
  %236 = load i32, i32* %i, align 4, !dbg !6300
  %idxprom389 = sext i32 %236 to i64, !dbg !6301
  %237 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6301
  %channel_indexes_for_cur_subframe390 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %237, i32 0, i32 43, !dbg !6302
  %arrayidx391 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe390, i64 0, i64 %idxprom389, !dbg !6301
  %238 = load i8, i8* %arrayidx391, align 1, !dbg !6301
  %conv392 = sext i8 %238 to i32, !dbg !6301
  store i32 %conv392, i32* %c388, align 4, !dbg !6299
  %239 = load i32, i32* %c388, align 4, !dbg !6303
  %idxprom393 = sext i32 %239 to i64, !dbg !6305
  %240 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6305
  %channel394 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %240, i32 0, i32 52, !dbg !6306
  %arrayidx395 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel394, i64 0, i64 %idxprom393, !dbg !6305
  %transmit_coefs396 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx395, i32 0, i32 1, !dbg !6307
  %241 = load i8, i8* %transmit_coefs396, align 2, !dbg !6307
  %conv397 = zext i8 %241 to i32, !dbg !6305
  %tobool398 = icmp ne i32 %conv397, 0, !dbg !6305
  br i1 %tobool398, label %land.lhs.true399, label %if.else407, !dbg !6308

land.lhs.true399:                                 ; preds = %for.body387
  %242 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6309
  %gb400 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %242, i32 0, i32 34, !dbg !6310
  %call401 = call i32 @get_bits_count(%struct.GetBitContext* %gb400), !dbg !6311
  %243 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6312
  %num_saved_bits402 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %243, i32 0, i32 27, !dbg !6313
  %244 = load i32, i32* %num_saved_bits402, align 8, !dbg !6313
  %cmp403 = icmp slt i32 %call401, %244, !dbg !6314
  br i1 %cmp403, label %if.then405, label %if.else407, !dbg !6315

if.then405:                                       ; preds = %land.lhs.true399
  %245 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6317
  %246 = load i32, i32* %c388, align 4, !dbg !6319
  %call406 = call i32 @decode_coeffs(%struct.WMAProDecodeCtx* %245, i32 %246), !dbg !6320
  br label %if.end414, !dbg !6321

if.else407:                                       ; preds = %land.lhs.true399, %for.body387
  %247 = load i32, i32* %c388, align 4, !dbg !6322
  %idxprom408 = sext i32 %247 to i64, !dbg !6323
  %248 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6323
  %channel409 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %248, i32 0, i32 52, !dbg !6324
  %arrayidx410 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel409, i64 0, i64 %idxprom408, !dbg !6323
  %coeffs411 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx410, i32 0, i32 16, !dbg !6325
  %249 = load float*, float** %coeffs411, align 8, !dbg !6325
  %250 = bitcast float* %249 to i8*, !dbg !6326
  %251 = load i32, i32* %subframe_len, align 4, !dbg !6327
  %conv412 = sext i32 %251 to i64, !dbg !6327
  %mul413 = mul i64 4, %conv412, !dbg !6328
  call void @llvm.memset.p0i8.i64(i8* %250, i8 0, i64 %mul413, i32 4, i1 false), !dbg !6326
  br label %if.end414

if.end414:                                        ; preds = %if.else407, %if.then405
  br label %for.inc415, !dbg !6329

for.inc415:                                       ; preds = %if.end414
  %252 = load i32, i32* %i, align 4, !dbg !6330
  %inc416 = add nsw i32 %252, 1, !dbg !6330
  store i32 %inc416, i32* %i, align 4, !dbg !6330
  br label %for.cond382, !dbg !6332, !llvm.loop !6333

for.end417:                                       ; preds = %for.cond382
  br label %do.body418, !dbg !6335, !llvm.loop !6336

do.body418:                                       ; preds = %for.end417
  br label %do.end419, !dbg !6337

do.end419:                                        ; preds = %do.body418
  %253 = load i32, i32* %transmit_coeffs, align 4, !dbg !6340
  %tobool420 = icmp ne i32 %253, 0, !dbg !6340
  br i1 %tobool420, label %if.then421, label %if.end521, !dbg !6341

if.then421:                                       ; preds = %do.end419
  call void @llvm.dbg.declare(metadata %struct.FFTContext** %mdct, metadata !6342, metadata !2019), !dbg !6344
  %254 = load i32, i32* %subframe_len, align 4, !dbg !6345
  %or422 = or i32 %254, 1, !dbg !6346
  %255 = call i32 @llvm.ctlz.i32(i32 %or422, i1 true), !dbg !6347
  %sub423 = sub nsw i32 31, %255, !dbg !6348
  %sub424 = sub nsw i32 %sub423, 6, !dbg !6349
  %idxprom425 = sext i32 %sub424 to i64, !dbg !6350
  %256 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6350
  %mdct_ctx = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %256, i32 0, i32 4, !dbg !6351
  %arrayidx426 = getelementptr inbounds [8 x %struct.FFTContext], [8 x %struct.FFTContext]* %mdct_ctx, i64 0, i64 %idxprom425, !dbg !6350
  store %struct.FFTContext* %arrayidx426, %struct.FFTContext** %mdct, align 8, !dbg !6344
  %257 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6352
  call void @inverse_channel_transform(%struct.WMAProDecodeCtx* %257), !dbg !6353
  store i32 0, i32* %i, align 4, !dbg !6354
  br label %for.cond427, !dbg !6355

for.cond427:                                      ; preds = %for.inc518, %if.then421
  %258 = load i32, i32* %i, align 4, !dbg !6356
  %259 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6358
  %channels_for_cur_subframe428 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %259, i32 0, i32 42, !dbg !6359
  %260 = load i8, i8* %channels_for_cur_subframe428, align 1, !dbg !6359
  %conv429 = sext i8 %260 to i32, !dbg !6358
  %cmp430 = icmp slt i32 %258, %conv429, !dbg !6360
  br i1 %cmp430, label %for.body432, label %for.end520, !dbg !6361

for.body432:                                      ; preds = %for.cond427
  call void @llvm.dbg.declare(metadata i32* %c433, metadata !6362, metadata !2019), !dbg !6363
  %261 = load i32, i32* %i, align 4, !dbg !6364
  %idxprom434 = sext i32 %261 to i64, !dbg !6365
  %262 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6365
  %channel_indexes_for_cur_subframe435 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %262, i32 0, i32 43, !dbg !6366
  %arrayidx436 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe435, i64 0, i64 %idxprom434, !dbg !6365
  %263 = load i8, i8* %arrayidx436, align 1, !dbg !6365
  %conv437 = sext i8 %263 to i32, !dbg !6365
  store i32 %conv437, i32* %c433, align 4, !dbg !6363
  call void @llvm.dbg.declare(metadata i32** %sf, metadata !6367, metadata !2019), !dbg !6368
  %264 = load i32, i32* %c433, align 4, !dbg !6369
  %idxprom438 = sext i32 %264 to i64, !dbg !6370
  %265 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6370
  %channel439 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %265, i32 0, i32 52, !dbg !6371
  %arrayidx440 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel439, i64 0, i64 %idxprom438, !dbg !6370
  %scale_factors = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx440, i32 0, i32 14, !dbg !6372
  %266 = load i32*, i32** %scale_factors, align 8, !dbg !6372
  store i32* %266, i32** %sf, align 8, !dbg !6368
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6373, metadata !2019), !dbg !6374
  %267 = load i32, i32* %c433, align 4, !dbg !6375
  %268 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6377
  %lfe_channel = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %268, i32 0, i32 14, !dbg !6378
  %269 = load i8, i8* %lfe_channel, align 4, !dbg !6378
  %conv441 = sext i8 %269 to i32, !dbg !6377
  %cmp442 = icmp eq i32 %267, %conv441, !dbg !6379
  br i1 %cmp442, label %if.then444, label %if.end450, !dbg !6380

if.then444:                                       ; preds = %for.body432
  %270 = load i32, i32* %cur_subwoofer_cutoff, align 4, !dbg !6381
  %idxprom445 = sext i32 %270 to i64, !dbg !6382
  %271 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6382
  %tmp = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %271, i32 0, i32 6, !dbg !6383
  %arrayidx446 = getelementptr inbounds [8192 x float], [8192 x float]* %tmp, i64 0, i64 %idxprom445, !dbg !6382
  %272 = bitcast float* %arrayidx446 to i8*, !dbg !6384
  %273 = load i32, i32* %subframe_len, align 4, !dbg !6385
  %274 = load i32, i32* %cur_subwoofer_cutoff, align 4, !dbg !6386
  %sub447 = sub nsw i32 %273, %274, !dbg !6387
  %conv448 = sext i32 %sub447 to i64, !dbg !6388
  %mul449 = mul i64 4, %conv448, !dbg !6389
  call void @llvm.memset.p0i8.i64(i8* %272, i8 0, i64 %mul449, i32 4, i1 false), !dbg !6384
  br label %if.end450, !dbg !6384

if.end450:                                        ; preds = %if.then444, %for.body432
  store i32 0, i32* %b, align 4, !dbg !6390
  br label %for.cond451, !dbg !6391

for.cond451:                                      ; preds = %for.inc509, %if.end450
  %275 = load i32, i32* %b, align 4, !dbg !6392
  %276 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6394
  %num_bands452 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %276, i32 0, i32 44, !dbg !6395
  %277 = load i8, i8* %num_bands452, align 4, !dbg !6395
  %conv453 = sext i8 %277 to i32, !dbg !6394
  %cmp454 = icmp slt i32 %275, %conv453, !dbg !6396
  br i1 %cmp454, label %for.body456, label %for.end511, !dbg !6397

for.body456:                                      ; preds = %for.cond451
  call void @llvm.dbg.declare(metadata i32* %end, metadata !6398, metadata !2019), !dbg !6399
  %278 = load i32, i32* %b, align 4, !dbg !6400
  %add458 = add nsw i32 %278, 1, !dbg !6401
  %idxprom459 = sext i32 %add458 to i64, !dbg !6402
  %279 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6402
  %cur_sfb_offsets460 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %279, i32 0, i32 46, !dbg !6403
  %280 = load i16*, i16** %cur_sfb_offsets460, align 8, !dbg !6403
  %arrayidx461 = getelementptr inbounds i16, i16* %280, i64 %idxprom459, !dbg !6402
  %281 = load i16, i16* %arrayidx461, align 2, !dbg !6402
  %conv462 = sext i16 %281 to i32, !dbg !6404
  %282 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6405
  %subframe_len463 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %282, i32 0, i32 40, !dbg !6406
  %283 = load i16, i16* %subframe_len463, align 8, !dbg !6406
  %conv464 = sext i16 %283 to i32, !dbg !6407
  %cmp465 = icmp sgt i32 %conv462, %conv464, !dbg !6408
  br i1 %cmp465, label %cond.true, label %cond.false, !dbg !6404

cond.true:                                        ; preds = %for.body456
  %284 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6409
  %subframe_len467 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %284, i32 0, i32 40, !dbg !6411
  %285 = load i16, i16* %subframe_len467, align 8, !dbg !6411
  %conv468 = sext i16 %285 to i32, !dbg !6412
  br label %cond.end, !dbg !6413

cond.false:                                       ; preds = %for.body456
  %286 = load i32, i32* %b, align 4, !dbg !6414
  %add469 = add nsw i32 %286, 1, !dbg !6416
  %idxprom470 = sext i32 %add469 to i64, !dbg !6417
  %287 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6417
  %cur_sfb_offsets471 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %287, i32 0, i32 46, !dbg !6418
  %288 = load i16*, i16** %cur_sfb_offsets471, align 8, !dbg !6418
  %arrayidx472 = getelementptr inbounds i16, i16* %288, i64 %idxprom470, !dbg !6417
  %289 = load i16, i16* %arrayidx472, align 2, !dbg !6417
  %conv473 = sext i16 %289 to i32, !dbg !6419
  br label %cond.end, !dbg !6420

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv468, %cond.true ], [ %conv473, %cond.false ], !dbg !6421
  store i32 %cond, i32* %end, align 4, !dbg !6423
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !6424, metadata !2019), !dbg !6425
  %290 = load i32, i32* %c433, align 4, !dbg !6426
  %idxprom475 = sext i32 %290 to i64, !dbg !6427
  %291 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6427
  %channel476 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %291, i32 0, i32 52, !dbg !6428
  %arrayidx477 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel476, i64 0, i64 %idxprom475, !dbg !6427
  %quant_step478 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx477, i32 0, i32 8, !dbg !6429
  %292 = load i32, i32* %quant_step478, align 4, !dbg !6429
  %293 = load i32, i32* %c433, align 4, !dbg !6430
  %idxprom479 = sext i32 %293 to i64, !dbg !6431
  %294 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6431
  %channel480 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %294, i32 0, i32 52, !dbg !6432
  %arrayidx481 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel480, i64 0, i64 %idxprom479, !dbg !6431
  %max_scale_factor = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx481, i32 0, i32 11, !dbg !6433
  %295 = load i32, i32* %max_scale_factor, align 4, !dbg !6433
  %296 = load i32*, i32** %sf, align 8, !dbg !6434
  %incdec.ptr = getelementptr inbounds i32, i32* %296, i32 1, !dbg !6434
  store i32* %incdec.ptr, i32** %sf, align 8, !dbg !6434
  %297 = load i32, i32* %296, align 4, !dbg !6435
  %sub482 = sub nsw i32 %295, %297, !dbg !6436
  %298 = load i32, i32* %c433, align 4, !dbg !6437
  %idxprom483 = sext i32 %298 to i64, !dbg !6438
  %299 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6438
  %channel484 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %299, i32 0, i32 52, !dbg !6439
  %arrayidx485 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel484, i64 0, i64 %idxprom483, !dbg !6438
  %scale_factor_step = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx485, i32 0, i32 10, !dbg !6440
  %300 = load i8, i8* %scale_factor_step, align 1, !dbg !6440
  %conv486 = sext i8 %300 to i32, !dbg !6438
  %mul487 = mul nsw i32 %sub482, %conv486, !dbg !6441
  %sub488 = sub nsw i32 %292, %mul487, !dbg !6442
  store i32 %sub488, i32* %exp, align 4, !dbg !6425
  call void @llvm.dbg.declare(metadata float* %quant490, metadata !6443, metadata !2019), !dbg !6444
  %301 = load i32, i32* %exp, align 4, !dbg !6445
  %conv491 = sitofp i32 %301 to double, !dbg !6445
  %div492 = fdiv double %conv491, 2.000000e+01, !dbg !6446
  store double %div492, double* %x.addr.i, align 8, !dbg !6447
  %302 = load double, double* %x.addr.i, align 8, !dbg !6448
  %mul.i = fmul double 0x400A934F0979A371, %302, !dbg !6449
  %call.i556 = call double @exp2(double %mul.i) #9, !dbg !6450
  %conv494 = fptrunc double %call.i556 to float, !dbg !6447
  store float %conv494, float* %quant490, align 4, !dbg !6444
  call void @llvm.dbg.declare(metadata i32* %start, metadata !6451, metadata !2019), !dbg !6452
  %303 = load i32, i32* %b, align 4, !dbg !6453
  %idxprom496 = sext i32 %303 to i64, !dbg !6454
  %304 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6454
  %cur_sfb_offsets497 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %304, i32 0, i32 46, !dbg !6455
  %305 = load i16*, i16** %cur_sfb_offsets497, align 8, !dbg !6455
  %arrayidx498 = getelementptr inbounds i16, i16* %305, i64 %idxprom496, !dbg !6454
  %306 = load i16, i16* %arrayidx498, align 2, !dbg !6454
  %conv499 = sext i16 %306 to i32, !dbg !6454
  store i32 %conv499, i32* %start, align 4, !dbg !6452
  %307 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6456
  %fdsp = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %307, i32 0, i32 1, !dbg !6457
  %308 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !6457
  %vector_fmul_scalar = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %308, i32 0, i32 3, !dbg !6458
  %309 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmul_scalar, align 8, !dbg !6458
  %310 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6459
  %tmp500 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %310, i32 0, i32 6, !dbg !6460
  %arraydecay501 = getelementptr inbounds [8192 x float], [8192 x float]* %tmp500, i32 0, i32 0, !dbg !6459
  %311 = load i32, i32* %start, align 4, !dbg !6461
  %idx.ext = sext i32 %311 to i64, !dbg !6462
  %add.ptr = getelementptr inbounds float, float* %arraydecay501, i64 %idx.ext, !dbg !6462
  %312 = load i32, i32* %c433, align 4, !dbg !6463
  %idxprom502 = sext i32 %312 to i64, !dbg !6464
  %313 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6464
  %channel503 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %313, i32 0, i32 52, !dbg !6465
  %arrayidx504 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel503, i64 0, i64 %idxprom502, !dbg !6464
  %coeffs505 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx504, i32 0, i32 16, !dbg !6466
  %314 = load float*, float** %coeffs505, align 8, !dbg !6466
  %315 = load i32, i32* %start, align 4, !dbg !6467
  %idx.ext506 = sext i32 %315 to i64, !dbg !6468
  %add.ptr507 = getelementptr inbounds float, float* %314, i64 %idx.ext506, !dbg !6468
  %316 = load float, float* %quant490, align 4, !dbg !6469
  %317 = load i32, i32* %end, align 4, !dbg !6470
  %318 = load i32, i32* %start, align 4, !dbg !6471
  %sub508 = sub nsw i32 %317, %318, !dbg !6472
  call void %309(float* %add.ptr, float* %add.ptr507, float %316, i32 %sub508), !dbg !6456
  br label %for.inc509, !dbg !6473

for.inc509:                                       ; preds = %cond.end
  %319 = load i32, i32* %b, align 4, !dbg !6474
  %inc510 = add nsw i32 %319, 1, !dbg !6474
  store i32 %inc510, i32* %b, align 4, !dbg !6474
  br label %for.cond451, !dbg !6476, !llvm.loop !6477

for.end511:                                       ; preds = %for.cond451
  %320 = load %struct.FFTContext*, %struct.FFTContext** %mdct, align 8, !dbg !6479
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %320, i32 0, i32 11, !dbg !6480
  %321 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half, align 8, !dbg !6480
  %322 = load %struct.FFTContext*, %struct.FFTContext** %mdct, align 8, !dbg !6481
  %323 = load i32, i32* %c433, align 4, !dbg !6482
  %idxprom512 = sext i32 %323 to i64, !dbg !6483
  %324 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6483
  %channel513 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %324, i32 0, i32 52, !dbg !6484
  %arrayidx514 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel513, i64 0, i64 %idxprom512, !dbg !6483
  %coeffs515 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx514, i32 0, i32 16, !dbg !6485
  %325 = load float*, float** %coeffs515, align 8, !dbg !6485
  %326 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6486
  %tmp516 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %326, i32 0, i32 6, !dbg !6487
  %arraydecay517 = getelementptr inbounds [8192 x float], [8192 x float]* %tmp516, i32 0, i32 0, !dbg !6486
  call void %321(%struct.FFTContext* %322, float* %325, float* %arraydecay517), !dbg !6479
  br label %for.inc518, !dbg !6488

for.inc518:                                       ; preds = %for.end511
  %327 = load i32, i32* %i, align 4, !dbg !6489
  %inc519 = add nsw i32 %327, 1, !dbg !6489
  store i32 %inc519, i32* %i, align 4, !dbg !6489
  br label %for.cond427, !dbg !6491, !llvm.loop !6492

for.end520:                                       ; preds = %for.cond427
  br label %if.end521, !dbg !6494

if.end521:                                        ; preds = %for.end520, %do.end419
  %328 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6495
  call void @wmapro_window(%struct.WMAProDecodeCtx* %328), !dbg !6496
  store i32 0, i32* %i, align 4, !dbg !6497
  br label %for.cond522, !dbg !6499

for.cond522:                                      ; preds = %for.inc553, %if.end521
  %329 = load i32, i32* %i, align 4, !dbg !6500
  %330 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6503
  %channels_for_cur_subframe523 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %330, i32 0, i32 42, !dbg !6504
  %331 = load i8, i8* %channels_for_cur_subframe523, align 1, !dbg !6504
  %conv524 = sext i8 %331 to i32, !dbg !6503
  %cmp525 = icmp slt i32 %329, %conv524, !dbg !6505
  br i1 %cmp525, label %for.body527, label %for.end555, !dbg !6506

for.body527:                                      ; preds = %for.cond522
  call void @llvm.dbg.declare(metadata i32* %c529, metadata !6507, metadata !2019), !dbg !6509
  %332 = load i32, i32* %i, align 4, !dbg !6510
  %idxprom530 = sext i32 %332 to i64, !dbg !6511
  %333 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6511
  %channel_indexes_for_cur_subframe531 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %333, i32 0, i32 43, !dbg !6512
  %arrayidx532 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe531, i64 0, i64 %idxprom530, !dbg !6511
  %334 = load i8, i8* %arrayidx532, align 1, !dbg !6511
  %conv533 = sext i8 %334 to i32, !dbg !6511
  store i32 %conv533, i32* %c529, align 4, !dbg !6509
  %335 = load i32, i32* %c529, align 4, !dbg !6513
  %idxprom534 = sext i32 %335 to i64, !dbg !6515
  %336 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6515
  %channel535 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %336, i32 0, i32 52, !dbg !6516
  %arrayidx536 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel535, i64 0, i64 %idxprom534, !dbg !6515
  %cur_subframe537 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx536, i32 0, i32 5, !dbg !6517
  %337 = load i8, i8* %cur_subframe537, align 4, !dbg !6517
  %conv538 = zext i8 %337 to i32, !dbg !6515
  %338 = load i32, i32* %c529, align 4, !dbg !6518
  %idxprom539 = sext i32 %338 to i64, !dbg !6519
  %339 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6519
  %channel540 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %339, i32 0, i32 52, !dbg !6520
  %arrayidx541 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel540, i64 0, i64 %idxprom539, !dbg !6519
  %num_subframes = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx541, i32 0, i32 2, !dbg !6521
  %340 = load i8, i8* %num_subframes, align 1, !dbg !6521
  %conv542 = zext i8 %340 to i32, !dbg !6519
  %cmp543 = icmp sge i32 %conv538, %conv542, !dbg !6522
  br i1 %cmp543, label %if.then545, label %if.end547, !dbg !6523

if.then545:                                       ; preds = %for.body527
  %341 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6524
  %avctx546 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %341, i32 0, i32 0, !dbg !6526
  %342 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx546, align 32, !dbg !6526
  %343 = bitcast %struct.AVCodecContext* %342 to i8*, !dbg !6524
  call void (i8*, i32, i8*, ...) @av_log(i8* %343, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i32 0, i32 0)), !dbg !6527
  store i32 -1094995529, i32* %retval, align 4, !dbg !6528
  br label %return, !dbg !6528

if.end547:                                        ; preds = %for.body527
  %344 = load i32, i32* %c529, align 4, !dbg !6529
  %idxprom548 = sext i32 %344 to i64, !dbg !6530
  %345 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6530
  %channel549 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %345, i32 0, i32 52, !dbg !6531
  %arrayidx550 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel549, i64 0, i64 %idxprom548, !dbg !6530
  %cur_subframe551 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx550, i32 0, i32 5, !dbg !6532
  %346 = load i8, i8* %cur_subframe551, align 4, !dbg !6533
  %inc552 = add i8 %346, 1, !dbg !6533
  store i8 %inc552, i8* %cur_subframe551, align 4, !dbg !6533
  br label %for.inc553, !dbg !6534

for.inc553:                                       ; preds = %if.end547
  %347 = load i32, i32* %i, align 4, !dbg !6535
  %inc554 = add nsw i32 %347, 1, !dbg !6535
  store i32 %inc554, i32* %i, align 4, !dbg !6535
  br label %for.cond522, !dbg !6537, !llvm.loop !6538

for.end555:                                       ; preds = %for.cond522
  store i32 0, i32* %retval, align 4, !dbg !6540
  br label %return, !dbg !6540

return:                                           ; preds = %for.end555, %if.then545, %if.then377, %if.then249, %if.then182, %if.then176, %if.then168
  %348 = load i32, i32* %retval, align 4, !dbg !6541
  ret i32 %348, !dbg !6541
}

declare void @av_frame_unref(%struct.AVFrame*) #3

; Function Attrs: nounwind uwtable
define internal i32 @decode_subframe_length(%struct.WMAProDecodeCtx* %s, i32 %offset) #1 !dbg !6542 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %offset.addr = alloca i32, align 4
  %frame_len_shift = alloca i32, align 4
  %subframe_len = alloca i32, align 4
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !6543, metadata !2019), !dbg !6544
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6545, metadata !2019), !dbg !6546
  call void @llvm.dbg.declare(metadata i32* %frame_len_shift, metadata !6547, metadata !2019), !dbg !6548
  store i32 0, i32* %frame_len_shift, align 4, !dbg !6548
  call void @llvm.dbg.declare(metadata i32* %subframe_len, metadata !6549, metadata !2019), !dbg !6550
  %0 = load i32, i32* %offset.addr, align 4, !dbg !6551
  %1 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6553
  %samples_per_frame = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %1, i32 0, i32 12, !dbg !6554
  %2 = load i16, i16* %samples_per_frame, align 8, !dbg !6554
  %conv = zext i16 %2 to i32, !dbg !6553
  %3 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6555
  %min_samples_per_subframe = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %3, i32 0, i32 18, !dbg !6556
  %4 = load i16, i16* %min_samples_per_subframe, align 16, !dbg !6556
  %conv1 = zext i16 %4 to i32, !dbg !6555
  %sub = sub nsw i32 %conv, %conv1, !dbg !6557
  %cmp = icmp eq i32 %0, %sub, !dbg !6558
  br i1 %cmp, label %if.then, label %if.end, !dbg !6559

if.then:                                          ; preds = %entry
  %5 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6560
  %min_samples_per_subframe3 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %5, i32 0, i32 18, !dbg !6561
  %6 = load i16, i16* %min_samples_per_subframe3, align 16, !dbg !6561
  %conv4 = zext i16 %6 to i32, !dbg !6560
  store i32 %conv4, i32* %retval, align 4, !dbg !6562
  br label %return, !dbg !6562

if.end:                                           ; preds = %entry
  %7 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6563
  %gb = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %7, i32 0, i32 34, !dbg !6565
  %call = call i32 @get_bits_left(%struct.GetBitContext* %gb), !dbg !6566
  %cmp5 = icmp slt i32 %call, 1, !dbg !6567
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !6568

if.then7:                                         ; preds = %if.end
  store i32 -1094995529, i32* %retval, align 4, !dbg !6569
  br label %return, !dbg !6569

if.end8:                                          ; preds = %if.end
  %8 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6570
  %max_subframe_len_bit = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %8, i32 0, i32 17, !dbg !6572
  %9 = load i8, i8* %max_subframe_len_bit, align 1, !dbg !6572
  %tobool = icmp ne i8 %9, 0, !dbg !6570
  br i1 %tobool, label %if.then9, label %if.else, !dbg !6573

if.then9:                                         ; preds = %if.end8
  %10 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6574
  %gb10 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %10, i32 0, i32 34, !dbg !6577
  %call11 = call i32 @get_bits1(%struct.GetBitContext* %gb10), !dbg !6578
  %tobool12 = icmp ne i32 %call11, 0, !dbg !6578
  br i1 %tobool12, label %if.then13, label %if.end18, !dbg !6579

if.then13:                                        ; preds = %if.then9
  %11 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6580
  %gb14 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %11, i32 0, i32 34, !dbg !6581
  %12 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6582
  %subframe_len_bits = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %12, i32 0, i32 16, !dbg !6583
  %13 = load i8, i8* %subframe_len_bits, align 2, !dbg !6583
  %conv15 = zext i8 %13 to i32, !dbg !6582
  %sub16 = sub nsw i32 %conv15, 1, !dbg !6584
  %call17 = call i32 @get_bits(%struct.GetBitContext* %gb14, i32 %sub16), !dbg !6585
  %add = add i32 1, %call17, !dbg !6586
  store i32 %add, i32* %frame_len_shift, align 4, !dbg !6587
  br label %if.end18, !dbg !6588

if.end18:                                         ; preds = %if.then13, %if.then9
  br label %if.end23, !dbg !6589

if.else:                                          ; preds = %if.end8
  %14 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6590
  %gb19 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %14, i32 0, i32 34, !dbg !6591
  %15 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6592
  %subframe_len_bits20 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %15, i32 0, i32 16, !dbg !6593
  %16 = load i8, i8* %subframe_len_bits20, align 2, !dbg !6593
  %conv21 = zext i8 %16 to i32, !dbg !6592
  %call22 = call i32 @get_bits(%struct.GetBitContext* %gb19, i32 %conv21), !dbg !6594
  store i32 %call22, i32* %frame_len_shift, align 4, !dbg !6595
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.end18
  %17 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6596
  %samples_per_frame24 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %17, i32 0, i32 12, !dbg !6597
  %18 = load i16, i16* %samples_per_frame24, align 8, !dbg !6597
  %conv25 = zext i16 %18 to i32, !dbg !6596
  %19 = load i32, i32* %frame_len_shift, align 4, !dbg !6598
  %shr = ashr i32 %conv25, %19, !dbg !6599
  store i32 %shr, i32* %subframe_len, align 4, !dbg !6600
  %20 = load i32, i32* %subframe_len, align 4, !dbg !6601
  %21 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6603
  %min_samples_per_subframe26 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %21, i32 0, i32 18, !dbg !6604
  %22 = load i16, i16* %min_samples_per_subframe26, align 16, !dbg !6604
  %conv27 = zext i16 %22 to i32, !dbg !6603
  %cmp28 = icmp slt i32 %20, %conv27, !dbg !6605
  br i1 %cmp28, label %if.then34, label %lor.lhs.false, !dbg !6606

lor.lhs.false:                                    ; preds = %if.end23
  %23 = load i32, i32* %subframe_len, align 4, !dbg !6607
  %24 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6608
  %samples_per_frame30 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %24, i32 0, i32 12, !dbg !6609
  %25 = load i16, i16* %samples_per_frame30, align 8, !dbg !6609
  %conv31 = zext i16 %25 to i32, !dbg !6608
  %cmp32 = icmp sgt i32 %23, %conv31, !dbg !6610
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !6611

if.then34:                                        ; preds = %lor.lhs.false, %if.end23
  %26 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6613
  %avctx = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %26, i32 0, i32 0, !dbg !6615
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !6615
  %28 = bitcast %struct.AVCodecContext* %27 to i8*, !dbg !6613
  %29 = load i32, i32* %subframe_len, align 4, !dbg !6616
  call void (i8*, i32, i8*, ...) @av_log(i8* %28, i32 16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.52, i32 0, i32 0), i32 %29), !dbg !6617
  store i32 -1094995529, i32* %retval, align 4, !dbg !6618
  br label %return, !dbg !6618

if.end35:                                         ; preds = %lor.lhs.false
  %30 = load i32, i32* %subframe_len, align 4, !dbg !6619
  store i32 %30, i32* %retval, align 4, !dbg !6620
  br label %return, !dbg !6620

return:                                           ; preds = %if.end35, %if.then34, %if.then7, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !6621
  ret i32 %31, !dbg !6621
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_left(%struct.GetBitContext* %gb) #4 !dbg !6622 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6625, metadata !2019), !dbg !6626
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6627
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 3, !dbg !6628
  %1 = load i32, i32* %size_in_bits, align 4, !dbg !6628
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6629
  %call = call i32 @get_bits_count(%struct.GetBitContext* %2), !dbg !6630
  %sub = sub nsw i32 %1, %call, !dbg !6631
  ret i32 %sub, !dbg !6632
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_channel_transform(%struct.WMAProDecodeCtx* %s) #1 !dbg !6633 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %i = alloca i32, align 4
  %remaining_channels = alloca i32, align 4
  %chgroup = alloca %struct.WMAProChannelGrp*, align 8
  %channel_data = alloca float**, align 8
  %channel_idx = alloca i32, align 4
  %channel_idx52 = alloca i32, align 4
  %i163 = alloca i32, align 4
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !6634, metadata !2019), !dbg !6635
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6636, metadata !2019), !dbg !6637
  %0 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6638
  %num_chgroups = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %0, i32 0, i32 49, !dbg !6639
  store i8 0, i8* %num_chgroups, align 2, !dbg !6640
  %1 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6641
  %nb_channels = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %1, i32 0, i32 41, !dbg !6643
  %2 = load i8, i8* %nb_channels, align 2, !dbg !6643
  %conv = sext i8 %2 to i32, !dbg !6641
  %cmp = icmp sgt i32 %conv, 1, !dbg !6644
  br i1 %cmp, label %if.then, label %if.end190, !dbg !6645

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %remaining_channels, metadata !6646, metadata !2019), !dbg !6648
  %3 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6649
  %channels_for_cur_subframe = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %3, i32 0, i32 42, !dbg !6650
  %4 = load i8, i8* %channels_for_cur_subframe, align 1, !dbg !6650
  %conv2 = sext i8 %4 to i32, !dbg !6649
  store i32 %conv2, i32* %remaining_channels, align 4, !dbg !6648
  %5 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6651
  %gb = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %5, i32 0, i32 34, !dbg !6653
  %call = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !6654
  %tobool = icmp ne i32 %call, 0, !dbg !6654
  br i1 %tobool, label %if.then3, label %if.end, !dbg !6655

if.then3:                                         ; preds = %if.then
  %6 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6656
  %avctx = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %6, i32 0, i32 0, !dbg !6658
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !6658
  %8 = bitcast %struct.AVCodecContext* %7 to i8*, !dbg !6656
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.60, i32 0, i32 0)), !dbg !6659
  store i32 -1163346256, i32* %retval, align 4, !dbg !6660
  br label %return, !dbg !6660

if.end:                                           ; preds = %if.then
  %9 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6661
  %num_chgroups4 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %9, i32 0, i32 49, !dbg !6663
  store i8 0, i8* %num_chgroups4, align 2, !dbg !6664
  br label %for.cond, !dbg !6661

for.cond:                                         ; preds = %for.inc186, %if.end
  %10 = load i32, i32* %remaining_channels, align 4, !dbg !6665
  %tobool5 = icmp ne i32 %10, 0, !dbg !6665
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !6668

land.rhs:                                         ; preds = %for.cond
  %11 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6669
  %num_chgroups6 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %11, i32 0, i32 49, !dbg !6670
  %12 = load i8, i8* %num_chgroups6, align 2, !dbg !6670
  %conv7 = zext i8 %12 to i32, !dbg !6669
  %13 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6671
  %channels_for_cur_subframe8 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %13, i32 0, i32 42, !dbg !6672
  %14 = load i8, i8* %channels_for_cur_subframe8, align 1, !dbg !6672
  %conv9 = sext i8 %14 to i32, !dbg !6671
  %cmp10 = icmp slt i32 %conv7, %conv9, !dbg !6673
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %15 = phi i1 [ false, %for.cond ], [ %cmp10, %land.rhs ]
  br i1 %15, label %for.body, label %for.end189, !dbg !6674

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.WMAProChannelGrp** %chgroup, metadata !6676, metadata !2019), !dbg !6679
  %16 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6680
  %num_chgroups12 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %16, i32 0, i32 49, !dbg !6681
  %17 = load i8, i8* %num_chgroups12, align 2, !dbg !6681
  %idxprom = zext i8 %17 to i64, !dbg !6682
  %18 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6682
  %chgroup13 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %18, i32 0, i32 50, !dbg !6683
  %arrayidx = getelementptr inbounds [8 x %struct.WMAProChannelGrp], [8 x %struct.WMAProChannelGrp]* %chgroup13, i64 0, i64 %idxprom, !dbg !6682
  store %struct.WMAProChannelGrp* %arrayidx, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6679
  call void @llvm.dbg.declare(metadata float*** %channel_data, metadata !6684, metadata !2019), !dbg !6686
  %19 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6687
  %channel_data14 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %19, i32 0, i32 4, !dbg !6688
  %arraydecay = getelementptr inbounds [8 x float*], [8 x float*]* %channel_data14, i32 0, i32 0, !dbg !6687
  store float** %arraydecay, float*** %channel_data, align 8, !dbg !6686
  %20 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6689
  %num_channels = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %20, i32 0, i32 0, !dbg !6690
  store i8 0, i8* %num_channels, align 8, !dbg !6691
  %21 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6692
  %transform = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %21, i32 0, i32 1, !dbg !6693
  store i8 0, i8* %transform, align 1, !dbg !6694
  %22 = load i32, i32* %remaining_channels, align 4, !dbg !6695
  %cmp15 = icmp sgt i32 %22, 2, !dbg !6697
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !6698

if.then17:                                        ; preds = %for.body
  store i32 0, i32* %i, align 4, !dbg !6699
  br label %for.cond18, !dbg !6702

for.cond18:                                       ; preds = %for.inc, %if.then17
  %23 = load i32, i32* %i, align 4, !dbg !6703
  %24 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6706
  %channels_for_cur_subframe19 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %24, i32 0, i32 42, !dbg !6707
  %25 = load i8, i8* %channels_for_cur_subframe19, align 1, !dbg !6707
  %conv20 = sext i8 %25 to i32, !dbg !6706
  %cmp21 = icmp slt i32 %23, %conv20, !dbg !6708
  br i1 %cmp21, label %for.body23, label %for.end, !dbg !6709

for.body23:                                       ; preds = %for.cond18
  call void @llvm.dbg.declare(metadata i32* %channel_idx, metadata !6710, metadata !2019), !dbg !6712
  %26 = load i32, i32* %i, align 4, !dbg !6713
  %idxprom24 = sext i32 %26 to i64, !dbg !6714
  %27 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6714
  %channel_indexes_for_cur_subframe = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %27, i32 0, i32 43, !dbg !6715
  %arrayidx25 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe, i64 0, i64 %idxprom24, !dbg !6714
  %28 = load i8, i8* %arrayidx25, align 1, !dbg !6714
  %conv26 = sext i8 %28 to i32, !dbg !6714
  store i32 %conv26, i32* %channel_idx, align 4, !dbg !6712
  %29 = load i32, i32* %channel_idx, align 4, !dbg !6716
  %idxprom27 = sext i32 %29 to i64, !dbg !6718
  %30 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6718
  %channel = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %30, i32 0, i32 52, !dbg !6719
  %arrayidx28 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel, i64 0, i64 %idxprom27, !dbg !6718
  %grouped = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx28, i32 0, i32 7, !dbg !6720
  %31 = load i8, i8* %grouped, align 8, !dbg !6720
  %tobool29 = icmp ne i8 %31, 0, !dbg !6718
  br i1 %tobool29, label %if.end42, label %land.lhs.true, !dbg !6721

land.lhs.true:                                    ; preds = %for.body23
  %32 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6722
  %gb30 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %32, i32 0, i32 34, !dbg !6724
  %call31 = call i32 @get_bits1(%struct.GetBitContext* %gb30), !dbg !6725
  %tobool32 = icmp ne i32 %call31, 0, !dbg !6725
  br i1 %tobool32, label %if.then33, label %if.end42, !dbg !6726

if.then33:                                        ; preds = %land.lhs.true
  %33 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6728
  %num_channels34 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %33, i32 0, i32 0, !dbg !6730
  %34 = load i8, i8* %num_channels34, align 8, !dbg !6731
  %inc = add i8 %34, 1, !dbg !6731
  store i8 %inc, i8* %num_channels34, align 8, !dbg !6731
  %35 = load i32, i32* %channel_idx, align 4, !dbg !6732
  %idxprom35 = sext i32 %35 to i64, !dbg !6733
  %36 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6733
  %channel36 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %36, i32 0, i32 52, !dbg !6734
  %arrayidx37 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel36, i64 0, i64 %idxprom35, !dbg !6733
  %grouped38 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx37, i32 0, i32 7, !dbg !6735
  store i8 1, i8* %grouped38, align 8, !dbg !6736
  %37 = load i32, i32* %channel_idx, align 4, !dbg !6737
  %idxprom39 = sext i32 %37 to i64, !dbg !6738
  %38 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6738
  %channel40 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %38, i32 0, i32 52, !dbg !6739
  %arrayidx41 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel40, i64 0, i64 %idxprom39, !dbg !6738
  %coeffs = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx41, i32 0, i32 16, !dbg !6740
  %39 = load float*, float** %coeffs, align 8, !dbg !6740
  %40 = load float**, float*** %channel_data, align 8, !dbg !6741
  %incdec.ptr = getelementptr inbounds float*, float** %40, i32 1, !dbg !6741
  store float** %incdec.ptr, float*** %channel_data, align 8, !dbg !6741
  store float* %39, float** %40, align 8, !dbg !6742
  br label %if.end42, !dbg !6743

if.end42:                                         ; preds = %if.then33, %land.lhs.true, %for.body23
  br label %for.inc, !dbg !6744

for.inc:                                          ; preds = %if.end42
  %41 = load i32, i32* %i, align 4, !dbg !6745
  %inc43 = add nsw i32 %41, 1, !dbg !6745
  store i32 %inc43, i32* %i, align 4, !dbg !6745
  br label %for.cond18, !dbg !6747, !llvm.loop !6748

for.end:                                          ; preds = %for.cond18
  br label %if.end76, !dbg !6750

if.else:                                          ; preds = %for.body
  %42 = load i32, i32* %remaining_channels, align 4, !dbg !6751
  %conv44 = trunc i32 %42 to i8, !dbg !6751
  %43 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6753
  %num_channels45 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %43, i32 0, i32 0, !dbg !6754
  store i8 %conv44, i8* %num_channels45, align 8, !dbg !6755
  store i32 0, i32* %i, align 4, !dbg !6756
  br label %for.cond46, !dbg !6758

for.cond46:                                       ; preds = %for.inc73, %if.else
  %44 = load i32, i32* %i, align 4, !dbg !6759
  %45 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6762
  %channels_for_cur_subframe47 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %45, i32 0, i32 42, !dbg !6763
  %46 = load i8, i8* %channels_for_cur_subframe47, align 1, !dbg !6763
  %conv48 = sext i8 %46 to i32, !dbg !6762
  %cmp49 = icmp slt i32 %44, %conv48, !dbg !6764
  br i1 %cmp49, label %for.body51, label %for.end75, !dbg !6765

for.body51:                                       ; preds = %for.cond46
  call void @llvm.dbg.declare(metadata i32* %channel_idx52, metadata !6766, metadata !2019), !dbg !6768
  %47 = load i32, i32* %i, align 4, !dbg !6769
  %idxprom53 = sext i32 %47 to i64, !dbg !6770
  %48 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6770
  %channel_indexes_for_cur_subframe54 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %48, i32 0, i32 43, !dbg !6771
  %arrayidx55 = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe54, i64 0, i64 %idxprom53, !dbg !6770
  %49 = load i8, i8* %arrayidx55, align 1, !dbg !6770
  %conv56 = sext i8 %49 to i32, !dbg !6770
  store i32 %conv56, i32* %channel_idx52, align 4, !dbg !6768
  %50 = load i32, i32* %channel_idx52, align 4, !dbg !6772
  %idxprom57 = sext i32 %50 to i64, !dbg !6774
  %51 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6774
  %channel58 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %51, i32 0, i32 52, !dbg !6775
  %arrayidx59 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel58, i64 0, i64 %idxprom57, !dbg !6774
  %grouped60 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx59, i32 0, i32 7, !dbg !6776
  %52 = load i8, i8* %grouped60, align 8, !dbg !6776
  %tobool61 = icmp ne i8 %52, 0, !dbg !6774
  br i1 %tobool61, label %if.end68, label %if.then62, !dbg !6777

if.then62:                                        ; preds = %for.body51
  %53 = load i32, i32* %channel_idx52, align 4, !dbg !6778
  %idxprom63 = sext i32 %53 to i64, !dbg !6779
  %54 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6779
  %channel64 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %54, i32 0, i32 52, !dbg !6780
  %arrayidx65 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel64, i64 0, i64 %idxprom63, !dbg !6779
  %coeffs66 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx65, i32 0, i32 16, !dbg !6781
  %55 = load float*, float** %coeffs66, align 8, !dbg !6781
  %56 = load float**, float*** %channel_data, align 8, !dbg !6782
  %incdec.ptr67 = getelementptr inbounds float*, float** %56, i32 1, !dbg !6782
  store float** %incdec.ptr67, float*** %channel_data, align 8, !dbg !6782
  store float* %55, float** %56, align 8, !dbg !6783
  br label %if.end68, !dbg !6784

if.end68:                                         ; preds = %if.then62, %for.body51
  %57 = load i32, i32* %channel_idx52, align 4, !dbg !6785
  %idxprom69 = sext i32 %57 to i64, !dbg !6786
  %58 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6786
  %channel70 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %58, i32 0, i32 52, !dbg !6787
  %arrayidx71 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel70, i64 0, i64 %idxprom69, !dbg !6786
  %grouped72 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx71, i32 0, i32 7, !dbg !6788
  store i8 1, i8* %grouped72, align 8, !dbg !6789
  br label %for.inc73, !dbg !6790

for.inc73:                                        ; preds = %if.end68
  %59 = load i32, i32* %i, align 4, !dbg !6791
  %inc74 = add nsw i32 %59, 1, !dbg !6791
  store i32 %inc74, i32* %i, align 4, !dbg !6791
  br label %for.cond46, !dbg !6793, !llvm.loop !6794

for.end75:                                        ; preds = %for.cond46
  br label %if.end76

if.end76:                                         ; preds = %for.end75, %for.end
  %60 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6796
  %num_channels77 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %60, i32 0, i32 0, !dbg !6798
  %61 = load i8, i8* %num_channels77, align 8, !dbg !6798
  %conv78 = zext i8 %61 to i32, !dbg !6796
  %cmp79 = icmp eq i32 %conv78, 2, !dbg !6799
  br i1 %cmp79, label %if.then81, label %if.else117, !dbg !6800

if.then81:                                        ; preds = %if.end76
  %62 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6801
  %gb82 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %62, i32 0, i32 34, !dbg !6804
  %call83 = call i32 @get_bits1(%struct.GetBitContext* %gb82), !dbg !6805
  %tobool84 = icmp ne i32 %call83, 0, !dbg !6805
  br i1 %tobool84, label %if.then85, label %if.else92, !dbg !6806

if.then85:                                        ; preds = %if.then81
  %63 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6807
  %gb86 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %63, i32 0, i32 34, !dbg !6810
  %call87 = call i32 @get_bits1(%struct.GetBitContext* %gb86), !dbg !6811
  %tobool88 = icmp ne i32 %call87, 0, !dbg !6811
  br i1 %tobool88, label %if.then89, label %if.end91, !dbg !6812

if.then89:                                        ; preds = %if.then85
  %64 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6813
  %avctx90 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %64, i32 0, i32 0, !dbg !6815
  %65 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx90, align 32, !dbg !6815
  %66 = bitcast %struct.AVCodecContext* %65 to i8*, !dbg !6813
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %66, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.61, i32 0, i32 0)), !dbg !6816
  store i32 -1163346256, i32* %retval, align 4, !dbg !6817
  br label %return, !dbg !6817

if.end91:                                         ; preds = %if.then85
  br label %if.end116, !dbg !6818

if.else92:                                        ; preds = %if.then81
  %67 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6819
  %transform93 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %67, i32 0, i32 1, !dbg !6821
  store i8 1, i8* %transform93, align 1, !dbg !6822
  %68 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6823
  %nb_channels94 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %68, i32 0, i32 41, !dbg !6825
  %69 = load i8, i8* %nb_channels94, align 2, !dbg !6825
  %conv95 = sext i8 %69 to i32, !dbg !6823
  %cmp96 = icmp eq i32 %conv95, 2, !dbg !6826
  br i1 %cmp96, label %if.then98, label %if.else106, !dbg !6827

if.then98:                                        ; preds = %if.else92
  %70 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6828
  %decorrelation_matrix = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %70, i32 0, i32 3, !dbg !6830
  %arrayidx99 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix, i64 0, i64 0, !dbg !6828
  store float 1.000000e+00, float* %arrayidx99, align 8, !dbg !6831
  %71 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6832
  %decorrelation_matrix100 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %71, i32 0, i32 3, !dbg !6833
  %arrayidx101 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix100, i64 0, i64 1, !dbg !6832
  store float -1.000000e+00, float* %arrayidx101, align 4, !dbg !6834
  %72 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6835
  %decorrelation_matrix102 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %72, i32 0, i32 3, !dbg !6836
  %arrayidx103 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix102, i64 0, i64 2, !dbg !6835
  store float 1.000000e+00, float* %arrayidx103, align 8, !dbg !6837
  %73 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6838
  %decorrelation_matrix104 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %73, i32 0, i32 3, !dbg !6839
  %arrayidx105 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix104, i64 0, i64 3, !dbg !6838
  store float 1.000000e+00, float* %arrayidx105, align 4, !dbg !6840
  br label %if.end115, !dbg !6841

if.else106:                                       ; preds = %if.else92
  %74 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6842
  %decorrelation_matrix107 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %74, i32 0, i32 3, !dbg !6844
  %arrayidx108 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix107, i64 0, i64 0, !dbg !6842
  store float 0x3FE6A00000000000, float* %arrayidx108, align 8, !dbg !6845
  %75 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6846
  %decorrelation_matrix109 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %75, i32 0, i32 3, !dbg !6847
  %arrayidx110 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix109, i64 0, i64 1, !dbg !6846
  store float 0xBFE6A00000000000, float* %arrayidx110, align 4, !dbg !6848
  %76 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6849
  %decorrelation_matrix111 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %76, i32 0, i32 3, !dbg !6850
  %arrayidx112 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix111, i64 0, i64 2, !dbg !6849
  store float 0x3FE6A00000000000, float* %arrayidx112, align 8, !dbg !6851
  %77 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6852
  %decorrelation_matrix113 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %77, i32 0, i32 3, !dbg !6853
  %arrayidx114 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix113, i64 0, i64 3, !dbg !6852
  store float 0x3FE6A00000000000, float* %arrayidx114, align 4, !dbg !6854
  br label %if.end115

if.end115:                                        ; preds = %if.else106, %if.then98
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.end91
  br label %if.end155, !dbg !6855

if.else117:                                       ; preds = %if.end76
  %78 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6856
  %num_channels118 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %78, i32 0, i32 0, !dbg !6859
  %79 = load i8, i8* %num_channels118, align 8, !dbg !6859
  %conv119 = zext i8 %79 to i32, !dbg !6856
  %cmp120 = icmp sgt i32 %conv119, 2, !dbg !6860
  br i1 %cmp120, label %if.then122, label %if.end154, !dbg !6856

if.then122:                                       ; preds = %if.else117
  %80 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6861
  %gb123 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %80, i32 0, i32 34, !dbg !6864
  %call124 = call i32 @get_bits1(%struct.GetBitContext* %gb123), !dbg !6865
  %tobool125 = icmp ne i32 %call124, 0, !dbg !6865
  br i1 %tobool125, label %if.then126, label %if.end153, !dbg !6866

if.then126:                                       ; preds = %if.then122
  %81 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6867
  %transform127 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %81, i32 0, i32 1, !dbg !6869
  store i8 1, i8* %transform127, align 1, !dbg !6870
  %82 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6871
  %gb128 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %82, i32 0, i32 34, !dbg !6873
  %call129 = call i32 @get_bits1(%struct.GetBitContext* %gb128), !dbg !6874
  %tobool130 = icmp ne i32 %call129, 0, !dbg !6874
  br i1 %tobool130, label %if.then131, label %if.else132, !dbg !6875

if.then131:                                       ; preds = %if.then126
  %83 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6876
  %84 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6878
  call void @decode_decorrelation_matrix(%struct.WMAProDecodeCtx* %83, %struct.WMAProChannelGrp* %84), !dbg !6879
  br label %if.end152, !dbg !6880

if.else132:                                       ; preds = %if.then126
  %85 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6881
  %num_channels133 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %85, i32 0, i32 0, !dbg !6884
  %86 = load i8, i8* %num_channels133, align 8, !dbg !6884
  %conv134 = zext i8 %86 to i32, !dbg !6881
  %cmp135 = icmp sgt i32 %conv134, 6, !dbg !6885
  br i1 %cmp135, label %if.then137, label %if.else139, !dbg !6886

if.then137:                                       ; preds = %if.else132
  %87 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6887
  %avctx138 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %87, i32 0, i32 0, !dbg !6889
  %88 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx138, align 32, !dbg !6889
  %89 = bitcast %struct.AVCodecContext* %88 to i8*, !dbg !6887
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %89, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.62, i32 0, i32 0)), !dbg !6890
  br label %if.end151, !dbg !6891

if.else139:                                       ; preds = %if.else132
  %90 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6892
  %decorrelation_matrix140 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %90, i32 0, i32 3, !dbg !6894
  %arraydecay141 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix140, i32 0, i32 0, !dbg !6895
  %91 = bitcast float* %arraydecay141 to i8*, !dbg !6895
  %92 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6896
  %num_channels142 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %92, i32 0, i32 0, !dbg !6897
  %93 = load i8, i8* %num_channels142, align 8, !dbg !6897
  %idxprom143 = zext i8 %93 to i64, !dbg !6898
  %arrayidx144 = getelementptr inbounds [7 x float*], [7 x float*]* @default_decorrelation, i64 0, i64 %idxprom143, !dbg !6898
  %94 = load float*, float** %arrayidx144, align 8, !dbg !6898
  %95 = bitcast float* %94 to i8*, !dbg !6895
  %96 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6899
  %num_channels145 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %96, i32 0, i32 0, !dbg !6900
  %97 = load i8, i8* %num_channels145, align 8, !dbg !6900
  %conv146 = zext i8 %97 to i32, !dbg !6899
  %98 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6901
  %num_channels147 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %98, i32 0, i32 0, !dbg !6902
  %99 = load i8, i8* %num_channels147, align 8, !dbg !6902
  %conv148 = zext i8 %99 to i32, !dbg !6901
  %mul = mul nsw i32 %conv146, %conv148, !dbg !6903
  %conv149 = sext i32 %mul to i64, !dbg !6899
  %mul150 = mul i64 %conv149, 4, !dbg !6904
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %95, i64 %mul150, i32 4, i1 false), !dbg !6895
  br label %if.end151

if.end151:                                        ; preds = %if.else139, %if.then137
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then131
  br label %if.end153, !dbg !6905

if.end153:                                        ; preds = %if.end152, %if.then122
  br label %if.end154, !dbg !6906

if.end154:                                        ; preds = %if.end153, %if.else117
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.end116
  %100 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6907
  %transform156 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %100, i32 0, i32 1, !dbg !6909
  %101 = load i8, i8* %transform156, align 1, !dbg !6909
  %tobool157 = icmp ne i8 %101, 0, !dbg !6907
  br i1 %tobool157, label %if.then158, label %if.end183, !dbg !6910

if.then158:                                       ; preds = %if.end155
  %102 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6911
  %gb159 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %102, i32 0, i32 34, !dbg !6914
  %call160 = call i32 @get_bits1(%struct.GetBitContext* %gb159), !dbg !6915
  %tobool161 = icmp ne i32 %call160, 0, !dbg !6915
  br i1 %tobool161, label %if.else177, label %if.then162, !dbg !6916

if.then162:                                       ; preds = %if.then158
  call void @llvm.dbg.declare(metadata i32* %i163, metadata !6917, metadata !2019), !dbg !6919
  store i32 0, i32* %i163, align 4, !dbg !6920
  br label %for.cond164, !dbg !6922

for.cond164:                                      ; preds = %for.inc174, %if.then162
  %103 = load i32, i32* %i163, align 4, !dbg !6923
  %104 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6926
  %num_bands = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %104, i32 0, i32 44, !dbg !6927
  %105 = load i8, i8* %num_bands, align 4, !dbg !6927
  %conv165 = sext i8 %105 to i32, !dbg !6926
  %cmp166 = icmp slt i32 %103, %conv165, !dbg !6928
  br i1 %cmp166, label %for.body168, label %for.end176, !dbg !6929

for.body168:                                      ; preds = %for.cond164
  %106 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6930
  %gb169 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %106, i32 0, i32 34, !dbg !6932
  %call170 = call i32 @get_bits1(%struct.GetBitContext* %gb169), !dbg !6933
  %conv171 = trunc i32 %call170 to i8, !dbg !6933
  %107 = load i32, i32* %i163, align 4, !dbg !6934
  %idxprom172 = sext i32 %107 to i64, !dbg !6935
  %108 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6935
  %transform_band = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %108, i32 0, i32 2, !dbg !6936
  %arrayidx173 = getelementptr inbounds [29 x i8], [29 x i8]* %transform_band, i64 0, i64 %idxprom172, !dbg !6935
  store i8 %conv171, i8* %arrayidx173, align 1, !dbg !6937
  br label %for.inc174, !dbg !6938

for.inc174:                                       ; preds = %for.body168
  %109 = load i32, i32* %i163, align 4, !dbg !6939
  %inc175 = add nsw i32 %109, 1, !dbg !6939
  store i32 %inc175, i32* %i163, align 4, !dbg !6939
  br label %for.cond164, !dbg !6941, !llvm.loop !6942

for.end176:                                       ; preds = %for.cond164
  br label %if.end182, !dbg !6944

if.else177:                                       ; preds = %if.then158
  %110 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6945
  %transform_band178 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %110, i32 0, i32 2, !dbg !6947
  %arraydecay179 = getelementptr inbounds [29 x i8], [29 x i8]* %transform_band178, i32 0, i32 0, !dbg !6948
  %111 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6949
  %num_bands180 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %111, i32 0, i32 44, !dbg !6950
  %112 = load i8, i8* %num_bands180, align 4, !dbg !6950
  %conv181 = sext i8 %112 to i64, !dbg !6949
  call void @llvm.memset.p0i8.i64(i8* %arraydecay179, i8 1, i64 %conv181, i32 2, i1 false), !dbg !6948
  br label %if.end182

if.end182:                                        ; preds = %if.else177, %for.end176
  br label %if.end183, !dbg !6951

if.end183:                                        ; preds = %if.end182, %if.end155
  %113 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup, align 8, !dbg !6952
  %num_channels184 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %113, i32 0, i32 0, !dbg !6953
  %114 = load i8, i8* %num_channels184, align 8, !dbg !6953
  %conv185 = zext i8 %114 to i32, !dbg !6952
  %115 = load i32, i32* %remaining_channels, align 4, !dbg !6954
  %sub = sub nsw i32 %115, %conv185, !dbg !6954
  store i32 %sub, i32* %remaining_channels, align 4, !dbg !6954
  br label %for.inc186, !dbg !6955

for.inc186:                                       ; preds = %if.end183
  %116 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !6956
  %num_chgroups187 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %116, i32 0, i32 49, !dbg !6957
  %117 = load i8, i8* %num_chgroups187, align 2, !dbg !6958
  %inc188 = add i8 %117, 1, !dbg !6958
  store i8 %inc188, i8* %num_chgroups187, align 2, !dbg !6958
  br label %for.cond, !dbg !6959, !llvm.loop !6961

for.end189:                                       ; preds = %land.end
  br label %if.end190, !dbg !6963

if.end190:                                        ; preds = %for.end189, %entry
  store i32 0, i32* %retval, align 4, !dbg !6964
  br label %return, !dbg !6964

return:                                           ; preds = %if.end190, %if.then89, %if.then3
  %118 = load i32, i32* %retval, align 4, !dbg !6965
  ret i32 %118, !dbg !6965
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_sbits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !6966 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !4352, metadata !2019), !dbg !6967
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6969, metadata !2019), !dbg !6970
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6971, metadata !2019), !dbg !6972
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !6973, metadata !2019), !dbg !6974
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !6975, metadata !2019), !dbg !6976
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6977
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !6978
  %1 = load i32, i32* %index, align 8, !dbg !6978
  store i32 %1, i32* %re_index, align 4, !dbg !6976
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !6979, metadata !2019), !dbg !6980
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !6981, metadata !2019), !dbg !6982
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6983
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !6984
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !6984
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !6982
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6985
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !6986
  %5 = load i8*, i8** %buffer, align 8, !dbg !6986
  %6 = load i32, i32* %re_index, align 4, !dbg !6987
  %shr = lshr i32 %6, 3, !dbg !6988
  %idx.ext = zext i32 %shr to i64, !dbg !6989
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !6989
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !6990
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !6990
  %8 = load i32, i32* %l, align 1, !dbg !6990
  store i32 %8, i32* %x.addr.i, align 4, !dbg !6991
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !6992
  %shl.i = shl i32 %9, 8, !dbg !6993
  %and.i = and i32 %shl.i, 65280, !dbg !6994
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !6995
  %shr.i = lshr i32 %10, 8, !dbg !6996
  %and1.i = and i32 %shr.i, 255, !dbg !6997
  %or.i = or i32 %and.i, %and1.i, !dbg !6998
  %shl2.i = shl i32 %or.i, 16, !dbg !6999
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !7000
  %shr3.i = lshr i32 %11, 16, !dbg !7001
  %shl4.i = shl i32 %shr3.i, 8, !dbg !7002
  %and5.i = and i32 %shl4.i, 65280, !dbg !7003
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !7004
  %shr6.i = lshr i32 %12, 16, !dbg !7005
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !7006
  %and8.i = and i32 %shr7.i, 255, !dbg !7007
  %or9.i = or i32 %and5.i, %and8.i, !dbg !7008
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !7009
  %13 = load i32, i32* %re_index, align 4, !dbg !7010
  %and = and i32 %13, 7, !dbg !7011
  %shl = shl i32 %or10.i, %and, !dbg !7012
  store i32 %shl, i32* %re_cache, align 4, !dbg !7013
  %14 = load i32, i32* %re_cache, align 4, !dbg !7014
  %15 = load i32, i32* %n.addr, align 4, !dbg !7015
  %conv = trunc i32 %15 to i8, !dbg !7015
  %call4 = call i32 @NEG_SSR32(i32 %14, i8 signext %conv), !dbg !7016
  store i32 %call4, i32* %tmp, align 4, !dbg !7017
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !7018
  %17 = load i32, i32* %re_index, align 4, !dbg !7019
  %18 = load i32, i32* %n.addr, align 4, !dbg !7020
  %add = add i32 %17, %18, !dbg !7021
  %cmp = icmp ugt i32 %16, %add, !dbg !7022
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7023

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !7024
  %20 = load i32, i32* %n.addr, align 4, !dbg !7026
  %add6 = add i32 %19, %20, !dbg !7027
  br label %cond.end, !dbg !7028

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !7029
  br label %cond.end, !dbg !7031

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !7032
  store i32 %cond, i32* %re_index, align 4, !dbg !7034
  %22 = load i32, i32* %re_index, align 4, !dbg !7035
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7036
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !7037
  store i32 %22, i32* %index7, align 8, !dbg !7038
  %24 = load i32, i32* %tmp, align 4, !dbg !7039
  ret i32 %24, !dbg !7040
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_scale_factors(%struct.WMAProDecodeCtx* %s) #1 !dbg !7041 {
entry:
  %x.addr.i96.i204 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i204, metadata !4352, metadata !2019), !dbg !7042
  %x.addr.i81.i205 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i205, metadata !4352, metadata !2019), !dbg !7064
  %x.addr.i.i206 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i206, metadata !4352, metadata !2019), !dbg !7067
  %s.addr.i207 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i207, metadata !7069, metadata !2019), !dbg !7070
  %table.addr.i208 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i208, metadata !7071, metadata !2019), !dbg !7072
  %bits.addr.i209 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i209, metadata !7073, metadata !2019), !dbg !7074
  %max_depth.addr.i210 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i210, metadata !7075, metadata !2019), !dbg !7076
  %code.i211 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i211, metadata !7077, metadata !2019), !dbg !7078
  %re_index.i212 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i212, metadata !7079, metadata !2019), !dbg !7080
  %re_cache.i213 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i213, metadata !7081, metadata !2019), !dbg !7082
  %re_size_plus8.i214 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i214, metadata !7083, metadata !2019), !dbg !7084
  %n.i215 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i215, metadata !7085, metadata !2019), !dbg !7086
  %nb_bits.i216 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i216, metadata !7087, metadata !2019), !dbg !7088
  %index1.i217 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i217, metadata !7089, metadata !2019), !dbg !7090
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !4352, metadata !2019), !dbg !7091
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !4352, metadata !2019), !dbg !7098
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !4352, metadata !2019), !dbg !7100
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !7069, metadata !2019), !dbg !7102
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !7071, metadata !2019), !dbg !7103
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !7073, metadata !2019), !dbg !7104
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !7075, metadata !2019), !dbg !7105
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !7077, metadata !2019), !dbg !7106
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !7079, metadata !2019), !dbg !7107
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !7081, metadata !2019), !dbg !7108
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !7083, metadata !2019), !dbg !7109
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !7085, metadata !2019), !dbg !7110
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !7087, metadata !2019), !dbg !7111
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !7089, metadata !2019), !dbg !7112
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %sf = alloca i32*, align 8
  %sf_end = alloca i32*, align 8
  %sf_offsets = alloca i8*, align 8
  %b = alloca i32, align 4
  %val = alloca i32, align 4
  %i93 = alloca i32, align 4
  %idx = alloca i32, align 4
  %skip = alloca i32, align 4
  %val100 = alloca i32, align 4
  %sign = alloca i32, align 4
  %code = alloca i32, align 4
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !7113, metadata !2019), !dbg !7114
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7115, metadata !2019), !dbg !7116
  store i32 0, i32* %i, align 4, !dbg !7117
  br label %for.cond, !dbg !7118

for.cond:                                         ; preds = %for.inc201, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7119
  %1 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7121
  %channels_for_cur_subframe = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %1, i32 0, i32 42, !dbg !7122
  %2 = load i8, i8* %channels_for_cur_subframe, align 1, !dbg !7122
  %conv = sext i8 %2 to i32, !dbg !7121
  %cmp = icmp slt i32 %0, %conv, !dbg !7123
  br i1 %cmp, label %for.body, label %for.end203, !dbg !7124

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %c, metadata !7125, metadata !2019), !dbg !7126
  %3 = load i32, i32* %i, align 4, !dbg !7127
  %idxprom = sext i32 %3 to i64, !dbg !7128
  %4 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7128
  %channel_indexes_for_cur_subframe = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %4, i32 0, i32 43, !dbg !7129
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe, i64 0, i64 %idxprom, !dbg !7128
  %5 = load i8, i8* %arrayidx, align 1, !dbg !7128
  %conv2 = sext i8 %5 to i32, !dbg !7128
  store i32 %conv2, i32* %c, align 4, !dbg !7126
  call void @llvm.dbg.declare(metadata i32** %sf, metadata !7130, metadata !2019), !dbg !7131
  call void @llvm.dbg.declare(metadata i32** %sf_end, metadata !7132, metadata !2019), !dbg !7133
  %6 = load i32, i32* %c, align 4, !dbg !7134
  %idxprom3 = sext i32 %6 to i64, !dbg !7135
  %7 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7135
  %channel = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %7, i32 0, i32 52, !dbg !7136
  %arrayidx4 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel, i64 0, i64 %idxprom3, !dbg !7135
  %scale_factor_idx = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx4, i32 0, i32 13, !dbg !7137
  %8 = load i8, i8* %scale_factor_idx, align 32, !dbg !7137
  %tobool = icmp ne i8 %8, 0, !dbg !7138
  %lnot = xor i1 %tobool, true, !dbg !7138
  %lnot.ext = zext i1 %lnot to i32, !dbg !7138
  %idxprom5 = sext i32 %lnot.ext to i64, !dbg !7139
  %9 = load i32, i32* %c, align 4, !dbg !7140
  %idxprom6 = sext i32 %9 to i64, !dbg !7139
  %10 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7139
  %channel7 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %10, i32 0, i32 52, !dbg !7141
  %arrayidx8 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel7, i64 0, i64 %idxprom6, !dbg !7139
  %saved_scale_factors = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx8, i32 0, i32 12, !dbg !7142
  %arrayidx9 = getelementptr inbounds [2 x [29 x i32]], [2 x [29 x i32]]* %saved_scale_factors, i64 0, i64 %idxprom5, !dbg !7139
  %arraydecay = getelementptr inbounds [29 x i32], [29 x i32]* %arrayidx9, i32 0, i32 0, !dbg !7139
  %11 = load i32, i32* %c, align 4, !dbg !7143
  %idxprom10 = sext i32 %11 to i64, !dbg !7144
  %12 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7144
  %channel11 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %12, i32 0, i32 52, !dbg !7145
  %arrayidx12 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel11, i64 0, i64 %idxprom10, !dbg !7144
  %scale_factors = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx12, i32 0, i32 14, !dbg !7146
  store i32* %arraydecay, i32** %scale_factors, align 8, !dbg !7147
  %13 = load i32, i32* %c, align 4, !dbg !7148
  %idxprom13 = sext i32 %13 to i64, !dbg !7149
  %14 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7149
  %channel14 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %14, i32 0, i32 52, !dbg !7150
  %arrayidx15 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel14, i64 0, i64 %idxprom13, !dbg !7149
  %scale_factors16 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx15, i32 0, i32 14, !dbg !7151
  %15 = load i32*, i32** %scale_factors16, align 8, !dbg !7151
  %16 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7152
  %num_bands = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %16, i32 0, i32 44, !dbg !7153
  %17 = load i8, i8* %num_bands, align 4, !dbg !7153
  %conv17 = sext i8 %17 to i32, !dbg !7152
  %idx.ext = sext i32 %conv17 to i64, !dbg !7154
  %add.ptr = getelementptr inbounds i32, i32* %15, i64 %idx.ext, !dbg !7154
  store i32* %add.ptr, i32** %sf_end, align 8, !dbg !7155
  %18 = load i32, i32* %c, align 4, !dbg !7156
  %idxprom18 = sext i32 %18 to i64, !dbg !7158
  %19 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7158
  %channel19 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %19, i32 0, i32 52, !dbg !7159
  %arrayidx20 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel19, i64 0, i64 %idxprom18, !dbg !7158
  %reuse_sf = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx20, i32 0, i32 9, !dbg !7160
  %20 = load i8, i8* %reuse_sf, align 16, !dbg !7160
  %tobool21 = icmp ne i8 %20, 0, !dbg !7158
  br i1 %tobool21, label %if.then, label %if.end, !dbg !7161

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %sf_offsets, metadata !7162, metadata !2019), !dbg !7166
  %21 = load i32, i32* %c, align 4, !dbg !7167
  %idxprom22 = sext i32 %21 to i64, !dbg !7168
  %22 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7168
  %channel23 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %22, i32 0, i32 52, !dbg !7169
  %arrayidx24 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel23, i64 0, i64 %idxprom22, !dbg !7168
  %table_idx = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx24, i32 0, i32 15, !dbg !7170
  %23 = load i8, i8* %table_idx, align 16, !dbg !7170
  %idxprom25 = zext i8 %23 to i64, !dbg !7171
  %24 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7172
  %table_idx26 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %24, i32 0, i32 47, !dbg !7173
  %25 = load i8, i8* %table_idx26, align 32, !dbg !7173
  %idxprom27 = zext i8 %25 to i64, !dbg !7171
  %26 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7171
  %sf_offsets28 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %26, i32 0, i32 21, !dbg !7174
  %arrayidx29 = getelementptr inbounds [8 x [8 x [29 x i8]]], [8 x [8 x [29 x i8]]]* %sf_offsets28, i64 0, i64 %idxprom27, !dbg !7171
  %arrayidx30 = getelementptr inbounds [8 x [29 x i8]], [8 x [29 x i8]]* %arrayidx29, i64 0, i64 %idxprom25, !dbg !7171
  %arraydecay31 = getelementptr inbounds [29 x i8], [29 x i8]* %arrayidx30, i32 0, i32 0, !dbg !7171
  store i8* %arraydecay31, i8** %sf_offsets, align 8, !dbg !7166
  call void @llvm.dbg.declare(metadata i32* %b, metadata !7175, metadata !2019), !dbg !7176
  store i32 0, i32* %b, align 4, !dbg !7177
  br label %for.cond32, !dbg !7179

for.cond32:                                       ; preds = %for.inc, %if.then
  %27 = load i32, i32* %b, align 4, !dbg !7180
  %28 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7183
  %num_bands33 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %28, i32 0, i32 44, !dbg !7184
  %29 = load i8, i8* %num_bands33, align 4, !dbg !7184
  %conv34 = sext i8 %29 to i32, !dbg !7183
  %cmp35 = icmp slt i32 %27, %conv34, !dbg !7185
  br i1 %cmp35, label %for.body37, label %for.end, !dbg !7186

for.body37:                                       ; preds = %for.cond32
  %30 = load i8*, i8** %sf_offsets, align 8, !dbg !7187
  %incdec.ptr = getelementptr inbounds i8, i8* %30, i32 1, !dbg !7187
  store i8* %incdec.ptr, i8** %sf_offsets, align 8, !dbg !7187
  %31 = load i8, i8* %30, align 1, !dbg !7188
  %idxprom38 = sext i8 %31 to i64, !dbg !7189
  %32 = load i32, i32* %c, align 4, !dbg !7190
  %idxprom39 = sext i32 %32 to i64, !dbg !7191
  %33 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7191
  %channel40 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %33, i32 0, i32 52, !dbg !7192
  %arrayidx41 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel40, i64 0, i64 %idxprom39, !dbg !7191
  %scale_factor_idx42 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx41, i32 0, i32 13, !dbg !7193
  %34 = load i8, i8* %scale_factor_idx42, align 32, !dbg !7193
  %idxprom43 = sext i8 %34 to i64, !dbg !7189
  %35 = load i32, i32* %c, align 4, !dbg !7194
  %idxprom44 = sext i32 %35 to i64, !dbg !7189
  %36 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7189
  %channel45 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %36, i32 0, i32 52, !dbg !7195
  %arrayidx46 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel45, i64 0, i64 %idxprom44, !dbg !7189
  %saved_scale_factors47 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx46, i32 0, i32 12, !dbg !7196
  %arrayidx48 = getelementptr inbounds [2 x [29 x i32]], [2 x [29 x i32]]* %saved_scale_factors47, i64 0, i64 %idxprom43, !dbg !7189
  %arrayidx49 = getelementptr inbounds [29 x i32], [29 x i32]* %arrayidx48, i64 0, i64 %idxprom38, !dbg !7189
  %37 = load i32, i32* %arrayidx49, align 4, !dbg !7189
  %38 = load i32, i32* %b, align 4, !dbg !7197
  %idxprom50 = sext i32 %38 to i64, !dbg !7198
  %39 = load i32, i32* %c, align 4, !dbg !7199
  %idxprom51 = sext i32 %39 to i64, !dbg !7198
  %40 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7198
  %channel52 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %40, i32 0, i32 52, !dbg !7200
  %arrayidx53 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel52, i64 0, i64 %idxprom51, !dbg !7198
  %scale_factors54 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx53, i32 0, i32 14, !dbg !7201
  %41 = load i32*, i32** %scale_factors54, align 8, !dbg !7201
  %arrayidx55 = getelementptr inbounds i32, i32* %41, i64 %idxprom50, !dbg !7198
  store i32 %37, i32* %arrayidx55, align 4, !dbg !7202
  br label %for.inc, !dbg !7198

for.inc:                                          ; preds = %for.body37
  %42 = load i32, i32* %b, align 4, !dbg !7203
  %inc = add nsw i32 %42, 1, !dbg !7203
  store i32 %inc, i32* %b, align 4, !dbg !7203
  br label %for.cond32, !dbg !7205, !llvm.loop !7206

for.end:                                          ; preds = %for.cond32
  br label %if.end, !dbg !7208

if.end:                                           ; preds = %for.end, %for.body
  %43 = load i32, i32* %c, align 4, !dbg !7209
  %idxprom56 = sext i32 %43 to i64, !dbg !7210
  %44 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7210
  %channel57 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %44, i32 0, i32 52, !dbg !7211
  %arrayidx58 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel57, i64 0, i64 %idxprom56, !dbg !7210
  %cur_subframe = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx58, i32 0, i32 5, !dbg !7212
  %45 = load i8, i8* %cur_subframe, align 4, !dbg !7212
  %tobool59 = icmp ne i8 %45, 0, !dbg !7210
  br i1 %tobool59, label %lor.lhs.false, label %if.then61, !dbg !7213

lor.lhs.false:                                    ; preds = %if.end
  %46 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7214
  %gb = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %46, i32 0, i32 34, !dbg !7216
  %call = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !7217
  %tobool60 = icmp ne i32 %call, 0, !dbg !7217
  br i1 %tobool60, label %if.then61, label %if.end166, !dbg !7218

if.then61:                                        ; preds = %lor.lhs.false, %if.end
  %47 = load i32, i32* %c, align 4, !dbg !7219
  %idxprom62 = sext i32 %47 to i64, !dbg !7220
  %48 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7220
  %channel63 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %48, i32 0, i32 52, !dbg !7221
  %arrayidx64 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel63, i64 0, i64 %idxprom62, !dbg !7220
  %reuse_sf65 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx64, i32 0, i32 9, !dbg !7222
  %49 = load i8, i8* %reuse_sf65, align 16, !dbg !7222
  %tobool66 = icmp ne i8 %49, 0, !dbg !7220
  br i1 %tobool66, label %if.else, label %if.then67, !dbg !7223

if.then67:                                        ; preds = %if.then61
  call void @llvm.dbg.declare(metadata i32* %val, metadata !7224, metadata !2019), !dbg !7225
  %50 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7226
  %gb68 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %50, i32 0, i32 34, !dbg !7227
  %call69 = call i32 @get_bits(%struct.GetBitContext* %gb68, i32 2), !dbg !7228
  %add = add i32 %call69, 1, !dbg !7229
  %conv70 = trunc i32 %add to i8, !dbg !7228
  %51 = load i32, i32* %c, align 4, !dbg !7230
  %idxprom71 = sext i32 %51 to i64, !dbg !7231
  %52 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7231
  %channel72 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %52, i32 0, i32 52, !dbg !7232
  %arrayidx73 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel72, i64 0, i64 %idxprom71, !dbg !7231
  %scale_factor_step = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx73, i32 0, i32 10, !dbg !7233
  store i8 %conv70, i8* %scale_factor_step, align 1, !dbg !7234
  %53 = load i32, i32* %c, align 4, !dbg !7235
  %idxprom74 = sext i32 %53 to i64, !dbg !7236
  %54 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7236
  %channel75 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %54, i32 0, i32 52, !dbg !7237
  %arrayidx76 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel75, i64 0, i64 %idxprom74, !dbg !7236
  %scale_factor_step77 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx76, i32 0, i32 10, !dbg !7238
  %55 = load i8, i8* %scale_factor_step77, align 1, !dbg !7238
  %conv78 = sext i8 %55 to i32, !dbg !7236
  %div = sdiv i32 45, %conv78, !dbg !7239
  store i32 %div, i32* %val, align 4, !dbg !7240
  %56 = load i32, i32* %c, align 4, !dbg !7241
  %idxprom79 = sext i32 %56 to i64, !dbg !7242
  %57 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7242
  %channel80 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %57, i32 0, i32 52, !dbg !7243
  %arrayidx81 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel80, i64 0, i64 %idxprom79, !dbg !7242
  %scale_factors82 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx81, i32 0, i32 14, !dbg !7244
  %58 = load i32*, i32** %scale_factors82, align 8, !dbg !7244
  store i32* %58, i32** %sf, align 8, !dbg !7245
  br label %for.cond83, !dbg !7246

for.cond83:                                       ; preds = %for.inc90, %if.then67
  %59 = load i32*, i32** %sf, align 8, !dbg !7247
  %60 = load i32*, i32** %sf_end, align 8, !dbg !7249
  %cmp84 = icmp ult i32* %59, %60, !dbg !7250
  br i1 %cmp84, label %for.body86, label %for.end92, !dbg !7251

for.body86:                                       ; preds = %for.cond83
  %61 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7252
  %gb87 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %61, i32 0, i32 34, !dbg !7253
  %62 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @sf_vlc, i32 0, i32 1), align 8, !dbg !7254
  store %struct.GetBitContext* %gb87, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7255
  store [2 x i16]* %62, [2 x i16]** %table.addr.i, align 8, !dbg !7255
  store i32 8, i32* %bits.addr.i, align 4, !dbg !7255
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !7255
  %63 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7256
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %63, i32 0, i32 2, !dbg !7257
  %64 = load i32, i32* %index.i, align 8, !dbg !7257
  store i32 %64, i32* %re_index.i, align 4, !dbg !7107
  %65 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7258
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %65, i32 0, i32 4, !dbg !7259
  %66 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !7259
  store i32 %66, i32* %re_size_plus8.i, align 4, !dbg !7109
  %67 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7260
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %67, i32 0, i32 0, !dbg !7261
  %68 = load i8*, i8** %buffer.i, align 8, !dbg !7261
  %69 = load i32, i32* %re_index.i, align 4, !dbg !7262
  %shr.i = lshr i32 %69, 3, !dbg !7263
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !7264
  %add.ptr.i = getelementptr inbounds i8, i8* %68, i64 %idx.ext.i, !dbg !7264
  %70 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !7265
  %l.i = bitcast %union.unaligned_32* %70 to i32*, !dbg !7265
  %71 = load i32, i32* %l.i, align 1, !dbg !7265
  store i32 %71, i32* %x.addr.i.i, align 4, !dbg !7266
  %72 = load i32, i32* %x.addr.i.i, align 4, !dbg !7267
  %shl.i.i = shl i32 %72, 8, !dbg !7268
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !7269
  %73 = load i32, i32* %x.addr.i.i, align 4, !dbg !7270
  %shr.i.i = lshr i32 %73, 8, !dbg !7271
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !7272
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !7273
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !7274
  %74 = load i32, i32* %x.addr.i.i, align 4, !dbg !7275
  %shr3.i.i = lshr i32 %74, 16, !dbg !7276
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !7277
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !7278
  %75 = load i32, i32* %x.addr.i.i, align 4, !dbg !7279
  %shr6.i.i = lshr i32 %75, 16, !dbg !7280
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !7281
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !7282
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !7283
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !7284
  %76 = load i32, i32* %re_index.i, align 4, !dbg !7285
  %and.i = and i32 %76, 7, !dbg !7286
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !7287
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !7288
  %77 = load i32, i32* %re_cache.i, align 4, !dbg !7289
  %78 = load i32, i32* %bits.addr.i, align 4, !dbg !7291
  %conv.i = trunc i32 %78 to i8, !dbg !7291
  %call2.i = call i32 @NEG_USR32(i32 %77, i8 signext %conv.i) #9, !dbg !7292
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !7293
  %79 = load i32, i32* %index1.i, align 4, !dbg !7294
  %idxprom.i = zext i32 %79 to i64, !dbg !7295
  %80 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7295
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %80, i64 %idxprom.i, !dbg !7295
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !7295
  %81 = load i16, i16* %arrayidx3.i, align 2, !dbg !7295
  %conv4.i = sext i16 %81 to i32, !dbg !7295
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !7296
  %82 = load i32, i32* %index1.i, align 4, !dbg !7297
  %idxprom5.i = zext i32 %82 to i64, !dbg !7298
  %83 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7298
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %83, i64 %idxprom5.i, !dbg !7298
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !7298
  %84 = load i16, i16* %arrayidx7.i, align 2, !dbg !7298
  %conv8.i = sext i16 %84 to i32, !dbg !7298
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !7299
  %85 = load i32, i32* %max_depth.addr.i, align 4, !dbg !7300
  %cmp.i = icmp sgt i32 %85, 1, !dbg !7301
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !7302

land.lhs.true.i:                                  ; preds = %for.body86
  %86 = load i32, i32* %n.i, align 4, !dbg !7303
  %cmp10.i = icmp slt i32 %86, 0, !dbg !7305
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !7306

if.then.i:                                        ; preds = %land.lhs.true.i
  %87 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7307
  %88 = load i32, i32* %re_index.i, align 4, !dbg !7309
  %89 = load i32, i32* %bits.addr.i, align 4, !dbg !7310
  %add.i = add i32 %88, %89, !dbg !7311
  %cmp12.i = icmp ugt i32 %87, %add.i, !dbg !7312
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !7313

cond.true.i:                                      ; preds = %if.then.i
  %90 = load i32, i32* %re_index.i, align 4, !dbg !7314
  %91 = load i32, i32* %bits.addr.i, align 4, !dbg !7316
  %add14.i = add i32 %90, %91, !dbg !7317
  br label %cond.end.i, !dbg !7318

cond.false.i:                                     ; preds = %if.then.i
  %92 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7319
  br label %cond.end.i, !dbg !7321

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %92, %cond.false.i ], !dbg !7322
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !7323
  %93 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7324
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %93, i32 0, i32 0, !dbg !7325
  %94 = load i8*, i8** %buffer15.i, align 8, !dbg !7325
  %95 = load i32, i32* %re_index.i, align 4, !dbg !7326
  %shr16.i = lshr i32 %95, 3, !dbg !7327
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !7328
  %add.ptr18.i = getelementptr inbounds i8, i8* %94, i64 %idx.ext17.i, !dbg !7328
  %96 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !7329
  %l19.i = bitcast %union.unaligned_32* %96 to i32*, !dbg !7329
  %97 = load i32, i32* %l19.i, align 1, !dbg !7329
  store i32 %97, i32* %x.addr.i81.i, align 4, !dbg !7330
  %98 = load i32, i32* %x.addr.i81.i, align 4, !dbg !7331
  %shl.i82.i = shl i32 %98, 8, !dbg !7332
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !7333
  %99 = load i32, i32* %x.addr.i81.i, align 4, !dbg !7334
  %shr.i84.i = lshr i32 %99, 8, !dbg !7335
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !7336
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !7337
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !7338
  %100 = load i32, i32* %x.addr.i81.i, align 4, !dbg !7339
  %shr3.i88.i = lshr i32 %100, 16, !dbg !7340
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !7341
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !7342
  %101 = load i32, i32* %x.addr.i81.i, align 4, !dbg !7343
  %shr6.i91.i = lshr i32 %101, 16, !dbg !7344
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !7345
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !7346
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !7347
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !7348
  %102 = load i32, i32* %re_index.i, align 4, !dbg !7349
  %and21.i = and i32 %102, 7, !dbg !7350
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !7351
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !7352
  %103 = load i32, i32* %n.i, align 4, !dbg !7353
  %sub.i = sub nsw i32 0, %103, !dbg !7354
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !7355
  %104 = load i32, i32* %re_cache.i, align 4, !dbg !7356
  %105 = load i32, i32* %nb_bits.i, align 4, !dbg !7357
  %conv23.i = trunc i32 %105 to i8, !dbg !7357
  %call24.i = call i32 @NEG_USR32(i32 %104, i8 signext %conv23.i) #9, !dbg !7358
  %106 = load i32, i32* %code.i, align 4, !dbg !7360
  %add25.i = add i32 %call24.i, %106, !dbg !7361
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !7362
  %107 = load i32, i32* %index1.i, align 4, !dbg !7363
  %idxprom26.i = zext i32 %107 to i64, !dbg !7364
  %108 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7364
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %108, i64 %idxprom26.i, !dbg !7364
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !7364
  %109 = load i16, i16* %arrayidx28.i, align 2, !dbg !7364
  %conv29.i = sext i16 %109 to i32, !dbg !7364
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !7365
  %110 = load i32, i32* %index1.i, align 4, !dbg !7366
  %idxprom30.i = zext i32 %110 to i64, !dbg !7367
  %111 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7367
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %111, i64 %idxprom30.i, !dbg !7367
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !7367
  %112 = load i16, i16* %arrayidx32.i, align 2, !dbg !7367
  %conv33.i = sext i16 %112 to i32, !dbg !7367
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !7368
  %113 = load i32, i32* %max_depth.addr.i, align 4, !dbg !7369
  %cmp34.i = icmp sgt i32 %113, 2, !dbg !7370
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !7371

land.lhs.true36.i:                                ; preds = %cond.end.i
  %114 = load i32, i32* %n.i, align 4, !dbg !7372
  %cmp37.i = icmp slt i32 %114, 0, !dbg !7374
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !7375

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %115 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7376
  %116 = load i32, i32* %re_index.i, align 4, !dbg !7378
  %117 = load i32, i32* %nb_bits.i, align 4, !dbg !7379
  %add40.i = add i32 %116, %117, !dbg !7380
  %cmp41.i = icmp ugt i32 %115, %add40.i, !dbg !7381
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !7382

cond.true43.i:                                    ; preds = %if.then39.i
  %118 = load i32, i32* %re_index.i, align 4, !dbg !7383
  %119 = load i32, i32* %nb_bits.i, align 4, !dbg !7385
  %add44.i = add i32 %118, %119, !dbg !7386
  br label %cond.end46.i, !dbg !7387

cond.false45.i:                                   ; preds = %if.then39.i
  %120 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7388
  br label %cond.end46.i, !dbg !7390

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %120, %cond.false45.i ], !dbg !7391
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !7392
  %121 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7393
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %121, i32 0, i32 0, !dbg !7394
  %122 = load i8*, i8** %buffer48.i, align 8, !dbg !7394
  %123 = load i32, i32* %re_index.i, align 4, !dbg !7395
  %shr49.i = lshr i32 %123, 3, !dbg !7396
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !7397
  %add.ptr51.i = getelementptr inbounds i8, i8* %122, i64 %idx.ext50.i, !dbg !7397
  %124 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !7398
  %l52.i = bitcast %union.unaligned_32* %124 to i32*, !dbg !7398
  %125 = load i32, i32* %l52.i, align 1, !dbg !7398
  store i32 %125, i32* %x.addr.i96.i, align 4, !dbg !7399
  %126 = load i32, i32* %x.addr.i96.i, align 4, !dbg !7400
  %shl.i97.i = shl i32 %126, 8, !dbg !7401
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !7402
  %127 = load i32, i32* %x.addr.i96.i, align 4, !dbg !7403
  %shr.i99.i = lshr i32 %127, 8, !dbg !7404
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !7405
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !7406
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !7407
  %128 = load i32, i32* %x.addr.i96.i, align 4, !dbg !7408
  %shr3.i103.i = lshr i32 %128, 16, !dbg !7409
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !7410
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !7411
  %129 = load i32, i32* %x.addr.i96.i, align 4, !dbg !7412
  %shr6.i106.i = lshr i32 %129, 16, !dbg !7413
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !7414
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !7415
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !7416
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !7417
  %130 = load i32, i32* %re_index.i, align 4, !dbg !7418
  %and54.i = and i32 %130, 7, !dbg !7419
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !7420
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !7421
  %131 = load i32, i32* %n.i, align 4, !dbg !7422
  %sub56.i = sub nsw i32 0, %131, !dbg !7423
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !7424
  %132 = load i32, i32* %re_cache.i, align 4, !dbg !7425
  %133 = load i32, i32* %nb_bits.i, align 4, !dbg !7426
  %conv57.i = trunc i32 %133 to i8, !dbg !7426
  %call58.i = call i32 @NEG_USR32(i32 %132, i8 signext %conv57.i) #9, !dbg !7427
  %134 = load i32, i32* %code.i, align 4, !dbg !7429
  %add59.i = add i32 %call58.i, %134, !dbg !7430
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !7431
  %135 = load i32, i32* %index1.i, align 4, !dbg !7432
  %idxprom60.i = zext i32 %135 to i64, !dbg !7433
  %136 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7433
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %136, i64 %idxprom60.i, !dbg !7433
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !7433
  %137 = load i16, i16* %arrayidx62.i, align 2, !dbg !7433
  %conv63.i = sext i16 %137 to i32, !dbg !7433
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !7434
  %138 = load i32, i32* %index1.i, align 4, !dbg !7435
  %idxprom64.i = zext i32 %138 to i64, !dbg !7436
  %139 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !7436
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %139, i64 %idxprom64.i, !dbg !7436
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !7436
  %140 = load i16, i16* %arrayidx66.i, align 2, !dbg !7436
  %conv67.i = sext i16 %140 to i32, !dbg !7436
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !7437
  br label %if.end.i, !dbg !7438

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !7439

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body86
  %141 = load i32, i32* %n.i, align 4, !dbg !7441
  %142 = load i32, i32* %re_cache.i, align 4, !dbg !7444
  %shl70.i = shl i32 %142, %141, !dbg !7444
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !7444
  %143 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7445
  %144 = load i32, i32* %re_index.i, align 4, !dbg !7446
  %145 = load i32, i32* %n.i, align 4, !dbg !7447
  %add71.i = add i32 %144, %145, !dbg !7448
  %cmp72.i = icmp ugt i32 %143, %add71.i, !dbg !7449
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !7450

cond.true74.i:                                    ; preds = %if.end68.i
  %146 = load i32, i32* %re_index.i, align 4, !dbg !7451
  %147 = load i32, i32* %n.i, align 4, !dbg !7453
  %add75.i = add i32 %146, %147, !dbg !7454
  br label %get_vlc2.exit, !dbg !7455

cond.false76.i:                                   ; preds = %if.end68.i
  %148 = load i32, i32* %re_size_plus8.i, align 4, !dbg !7456
  br label %get_vlc2.exit, !dbg !7458

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %148, %cond.false76.i ], !dbg !7459
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !7461
  %149 = load i32, i32* %re_index.i, align 4, !dbg !7462
  %150 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !7463
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %150, i32 0, i32 2, !dbg !7464
  store i32 %149, i32* %index80.i, align 8, !dbg !7465
  %151 = load i32, i32* %code.i, align 4, !dbg !7466
  %sub = sub nsw i32 %151, 60, !dbg !7467
  %152 = load i32, i32* %val, align 4, !dbg !7468
  %add89 = add nsw i32 %152, %sub, !dbg !7468
  store i32 %add89, i32* %val, align 4, !dbg !7468
  %153 = load i32, i32* %val, align 4, !dbg !7469
  %154 = load i32*, i32** %sf, align 8, !dbg !7470
  store i32 %153, i32* %154, align 4, !dbg !7471
  br label %for.inc90, !dbg !7472

for.inc90:                                        ; preds = %get_vlc2.exit
  %155 = load i32*, i32** %sf, align 8, !dbg !7473
  %incdec.ptr91 = getelementptr inbounds i32, i32* %155, i32 1, !dbg !7473
  store i32* %incdec.ptr91, i32** %sf, align 8, !dbg !7473
  br label %for.cond83, !dbg !7475, !llvm.loop !7476

for.end92:                                        ; preds = %for.cond83
  br label %if.end144, !dbg !7478

if.else:                                          ; preds = %if.then61
  call void @llvm.dbg.declare(metadata i32* %i93, metadata !7479, metadata !2019), !dbg !7480
  store i32 0, i32* %i93, align 4, !dbg !7481
  br label %for.cond94, !dbg !7482

for.cond94:                                       ; preds = %for.inc141, %if.else
  %156 = load i32, i32* %i93, align 4, !dbg !7483
  %157 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7485
  %num_bands95 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %157, i32 0, i32 44, !dbg !7486
  %158 = load i8, i8* %num_bands95, align 4, !dbg !7486
  %conv96 = sext i8 %158 to i32, !dbg !7485
  %cmp97 = icmp slt i32 %156, %conv96, !dbg !7487
  br i1 %cmp97, label %for.body99, label %for.end143, !dbg !7488

for.body99:                                       ; preds = %for.cond94
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !7489, metadata !2019), !dbg !7490
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !7491, metadata !2019), !dbg !7492
  call void @llvm.dbg.declare(metadata i32* %val100, metadata !7493, metadata !2019), !dbg !7494
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !7495, metadata !2019), !dbg !7496
  %159 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7497
  %gb101 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %159, i32 0, i32 34, !dbg !7498
  %160 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @sf_rl_vlc, i32 0, i32 1), align 8, !dbg !7499
  store %struct.GetBitContext* %gb101, %struct.GetBitContext** %s.addr.i207, align 8, !dbg !7500
  store [2 x i16]* %160, [2 x i16]** %table.addr.i208, align 8, !dbg !7500
  store i32 9, i32* %bits.addr.i209, align 4, !dbg !7500
  store i32 3, i32* %max_depth.addr.i210, align 4, !dbg !7500
  %161 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i207, align 8, !dbg !7501
  %index.i218 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %161, i32 0, i32 2, !dbg !7502
  %162 = load i32, i32* %index.i218, align 8, !dbg !7502
  store i32 %162, i32* %re_index.i212, align 4, !dbg !7080
  %163 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i207, align 8, !dbg !7503
  %size_in_bits_plus8.i219 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %163, i32 0, i32 4, !dbg !7504
  %164 = load i32, i32* %size_in_bits_plus8.i219, align 8, !dbg !7504
  store i32 %164, i32* %re_size_plus8.i214, align 4, !dbg !7084
  %165 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i207, align 8, !dbg !7505
  %buffer.i220 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %165, i32 0, i32 0, !dbg !7506
  %166 = load i8*, i8** %buffer.i220, align 8, !dbg !7506
  %167 = load i32, i32* %re_index.i212, align 4, !dbg !7507
  %shr.i221 = lshr i32 %167, 3, !dbg !7508
  %idx.ext.i222 = zext i32 %shr.i221 to i64, !dbg !7509
  %add.ptr.i223 = getelementptr inbounds i8, i8* %166, i64 %idx.ext.i222, !dbg !7509
  %168 = bitcast i8* %add.ptr.i223 to %union.unaligned_32*, !dbg !7510
  %l.i224 = bitcast %union.unaligned_32* %168 to i32*, !dbg !7510
  %169 = load i32, i32* %l.i224, align 1, !dbg !7510
  store i32 %169, i32* %x.addr.i.i206, align 4, !dbg !7511
  %170 = load i32, i32* %x.addr.i.i206, align 4, !dbg !7512
  %shl.i.i225 = shl i32 %170, 8, !dbg !7513
  %and.i.i226 = and i32 %shl.i.i225, 65280, !dbg !7514
  %171 = load i32, i32* %x.addr.i.i206, align 4, !dbg !7515
  %shr.i.i227 = lshr i32 %171, 8, !dbg !7516
  %and1.i.i228 = and i32 %shr.i.i227, 255, !dbg !7517
  %or.i.i229 = or i32 %and.i.i226, %and1.i.i228, !dbg !7518
  %shl2.i.i230 = shl i32 %or.i.i229, 16, !dbg !7519
  %172 = load i32, i32* %x.addr.i.i206, align 4, !dbg !7520
  %shr3.i.i231 = lshr i32 %172, 16, !dbg !7521
  %shl4.i.i232 = shl i32 %shr3.i.i231, 8, !dbg !7522
  %and5.i.i233 = and i32 %shl4.i.i232, 65280, !dbg !7523
  %173 = load i32, i32* %x.addr.i.i206, align 4, !dbg !7524
  %shr6.i.i234 = lshr i32 %173, 16, !dbg !7525
  %shr7.i.i235 = lshr i32 %shr6.i.i234, 8, !dbg !7526
  %and8.i.i236 = and i32 %shr7.i.i235, 255, !dbg !7527
  %or9.i.i237 = or i32 %and5.i.i233, %and8.i.i236, !dbg !7528
  %or10.i.i238 = or i32 %shl2.i.i230, %or9.i.i237, !dbg !7529
  %174 = load i32, i32* %re_index.i212, align 4, !dbg !7530
  %and.i239 = and i32 %174, 7, !dbg !7531
  %shl.i240 = shl i32 %or10.i.i238, %and.i239, !dbg !7532
  store i32 %shl.i240, i32* %re_cache.i213, align 4, !dbg !7533
  %175 = load i32, i32* %re_cache.i213, align 4, !dbg !7534
  %176 = load i32, i32* %bits.addr.i209, align 4, !dbg !7535
  %conv.i241 = trunc i32 %176 to i8, !dbg !7535
  %call2.i242 = call i32 @NEG_USR32(i32 %175, i8 signext %conv.i241) #9, !dbg !7536
  store i32 %call2.i242, i32* %index1.i217, align 4, !dbg !7537
  %177 = load i32, i32* %index1.i217, align 4, !dbg !7538
  %idxprom.i243 = zext i32 %177 to i64, !dbg !7539
  %178 = load [2 x i16]*, [2 x i16]** %table.addr.i208, align 8, !dbg !7539
  %arrayidx.i244 = getelementptr inbounds [2 x i16], [2 x i16]* %178, i64 %idxprom.i243, !dbg !7539
  %arrayidx3.i245 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i244, i64 0, i64 0, !dbg !7539
  %179 = load i16, i16* %arrayidx3.i245, align 2, !dbg !7539
  %conv4.i246 = sext i16 %179 to i32, !dbg !7539
  store i32 %conv4.i246, i32* %code.i211, align 4, !dbg !7540
  %180 = load i32, i32* %index1.i217, align 4, !dbg !7541
  %idxprom5.i247 = zext i32 %180 to i64, !dbg !7542
  %181 = load [2 x i16]*, [2 x i16]** %table.addr.i208, align 8, !dbg !7542
  %arrayidx6.i248 = getelementptr inbounds [2 x i16], [2 x i16]* %181, i64 %idxprom5.i247, !dbg !7542
  %arrayidx7.i249 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i248, i64 0, i64 1, !dbg !7542
  %182 = load i16, i16* %arrayidx7.i249, align 2, !dbg !7542
  %conv8.i250 = sext i16 %182 to i32, !dbg !7542
  store i32 %conv8.i250, i32* %n.i215, align 4, !dbg !7543
  %183 = load i32, i32* %max_depth.addr.i210, align 4, !dbg !7544
  %cmp.i251 = icmp sgt i32 %183, 1, !dbg !7545
  br i1 %cmp.i251, label %land.lhs.true.i253, label %if.end68.i340, !dbg !7546

land.lhs.true.i253:                               ; preds = %for.body99
  %184 = load i32, i32* %n.i215, align 4, !dbg !7547
  %cmp10.i252 = icmp slt i32 %184, 0, !dbg !7548
  br i1 %cmp10.i252, label %if.then.i256, label %if.end68.i340, !dbg !7549

if.then.i256:                                     ; preds = %land.lhs.true.i253
  %185 = load i32, i32* %re_size_plus8.i214, align 4, !dbg !7550
  %186 = load i32, i32* %re_index.i212, align 4, !dbg !7551
  %187 = load i32, i32* %bits.addr.i209, align 4, !dbg !7552
  %add.i254 = add i32 %186, %187, !dbg !7553
  %cmp12.i255 = icmp ugt i32 %185, %add.i254, !dbg !7554
  br i1 %cmp12.i255, label %cond.true.i258, label %cond.false.i259, !dbg !7555

cond.true.i258:                                   ; preds = %if.then.i256
  %188 = load i32, i32* %re_index.i212, align 4, !dbg !7556
  %189 = load i32, i32* %bits.addr.i209, align 4, !dbg !7557
  %add14.i257 = add i32 %188, %189, !dbg !7558
  br label %cond.end.i295, !dbg !7559

cond.false.i259:                                  ; preds = %if.then.i256
  %190 = load i32, i32* %re_size_plus8.i214, align 4, !dbg !7560
  br label %cond.end.i295, !dbg !7561

cond.end.i295:                                    ; preds = %cond.false.i259, %cond.true.i258
  %cond.i260 = phi i32 [ %add14.i257, %cond.true.i258 ], [ %190, %cond.false.i259 ], !dbg !7562
  store i32 %cond.i260, i32* %re_index.i212, align 4, !dbg !7563
  %191 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i207, align 8, !dbg !7564
  %buffer15.i261 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %191, i32 0, i32 0, !dbg !7565
  %192 = load i8*, i8** %buffer15.i261, align 8, !dbg !7565
  %193 = load i32, i32* %re_index.i212, align 4, !dbg !7566
  %shr16.i262 = lshr i32 %193, 3, !dbg !7567
  %idx.ext17.i263 = zext i32 %shr16.i262 to i64, !dbg !7568
  %add.ptr18.i264 = getelementptr inbounds i8, i8* %192, i64 %idx.ext17.i263, !dbg !7568
  %194 = bitcast i8* %add.ptr18.i264 to %union.unaligned_32*, !dbg !7569
  %l19.i265 = bitcast %union.unaligned_32* %194 to i32*, !dbg !7569
  %195 = load i32, i32* %l19.i265, align 1, !dbg !7569
  store i32 %195, i32* %x.addr.i81.i205, align 4, !dbg !7570
  %196 = load i32, i32* %x.addr.i81.i205, align 4, !dbg !7571
  %shl.i82.i266 = shl i32 %196, 8, !dbg !7572
  %and.i83.i267 = and i32 %shl.i82.i266, 65280, !dbg !7573
  %197 = load i32, i32* %x.addr.i81.i205, align 4, !dbg !7574
  %shr.i84.i268 = lshr i32 %197, 8, !dbg !7575
  %and1.i85.i269 = and i32 %shr.i84.i268, 255, !dbg !7576
  %or.i86.i270 = or i32 %and.i83.i267, %and1.i85.i269, !dbg !7577
  %shl2.i87.i271 = shl i32 %or.i86.i270, 16, !dbg !7578
  %198 = load i32, i32* %x.addr.i81.i205, align 4, !dbg !7579
  %shr3.i88.i272 = lshr i32 %198, 16, !dbg !7580
  %shl4.i89.i273 = shl i32 %shr3.i88.i272, 8, !dbg !7581
  %and5.i90.i274 = and i32 %shl4.i89.i273, 65280, !dbg !7582
  %199 = load i32, i32* %x.addr.i81.i205, align 4, !dbg !7583
  %shr6.i91.i275 = lshr i32 %199, 16, !dbg !7584
  %shr7.i92.i276 = lshr i32 %shr6.i91.i275, 8, !dbg !7585
  %and8.i93.i277 = and i32 %shr7.i92.i276, 255, !dbg !7586
  %or9.i94.i278 = or i32 %and5.i90.i274, %and8.i93.i277, !dbg !7587
  %or10.i95.i279 = or i32 %shl2.i87.i271, %or9.i94.i278, !dbg !7588
  %200 = load i32, i32* %re_index.i212, align 4, !dbg !7589
  %and21.i280 = and i32 %200, 7, !dbg !7590
  %shl22.i281 = shl i32 %or10.i95.i279, %and21.i280, !dbg !7591
  store i32 %shl22.i281, i32* %re_cache.i213, align 4, !dbg !7592
  %201 = load i32, i32* %n.i215, align 4, !dbg !7593
  %sub.i282 = sub nsw i32 0, %201, !dbg !7594
  store i32 %sub.i282, i32* %nb_bits.i216, align 4, !dbg !7595
  %202 = load i32, i32* %re_cache.i213, align 4, !dbg !7596
  %203 = load i32, i32* %nb_bits.i216, align 4, !dbg !7597
  %conv23.i283 = trunc i32 %203 to i8, !dbg !7597
  %call24.i284 = call i32 @NEG_USR32(i32 %202, i8 signext %conv23.i283) #9, !dbg !7598
  %204 = load i32, i32* %code.i211, align 4, !dbg !7599
  %add25.i285 = add i32 %call24.i284, %204, !dbg !7600
  store i32 %add25.i285, i32* %index1.i217, align 4, !dbg !7601
  %205 = load i32, i32* %index1.i217, align 4, !dbg !7602
  %idxprom26.i286 = zext i32 %205 to i64, !dbg !7603
  %206 = load [2 x i16]*, [2 x i16]** %table.addr.i208, align 8, !dbg !7603
  %arrayidx27.i287 = getelementptr inbounds [2 x i16], [2 x i16]* %206, i64 %idxprom26.i286, !dbg !7603
  %arrayidx28.i288 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i287, i64 0, i64 0, !dbg !7603
  %207 = load i16, i16* %arrayidx28.i288, align 2, !dbg !7603
  %conv29.i289 = sext i16 %207 to i32, !dbg !7603
  store i32 %conv29.i289, i32* %code.i211, align 4, !dbg !7604
  %208 = load i32, i32* %index1.i217, align 4, !dbg !7605
  %idxprom30.i290 = zext i32 %208 to i64, !dbg !7606
  %209 = load [2 x i16]*, [2 x i16]** %table.addr.i208, align 8, !dbg !7606
  %arrayidx31.i291 = getelementptr inbounds [2 x i16], [2 x i16]* %209, i64 %idxprom30.i290, !dbg !7606
  %arrayidx32.i292 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i291, i64 0, i64 1, !dbg !7606
  %210 = load i16, i16* %arrayidx32.i292, align 2, !dbg !7606
  %conv33.i293 = sext i16 %210 to i32, !dbg !7606
  store i32 %conv33.i293, i32* %n.i215, align 4, !dbg !7607
  %211 = load i32, i32* %max_depth.addr.i210, align 4, !dbg !7608
  %cmp34.i294 = icmp sgt i32 %211, 2, !dbg !7609
  br i1 %cmp34.i294, label %land.lhs.true36.i297, label %if.end.i339, !dbg !7610

land.lhs.true36.i297:                             ; preds = %cond.end.i295
  %212 = load i32, i32* %n.i215, align 4, !dbg !7611
  %cmp37.i296 = icmp slt i32 %212, 0, !dbg !7612
  br i1 %cmp37.i296, label %if.then39.i300, label %if.end.i339, !dbg !7613

if.then39.i300:                                   ; preds = %land.lhs.true36.i297
  %213 = load i32, i32* %re_size_plus8.i214, align 4, !dbg !7614
  %214 = load i32, i32* %re_index.i212, align 4, !dbg !7615
  %215 = load i32, i32* %nb_bits.i216, align 4, !dbg !7616
  %add40.i298 = add i32 %214, %215, !dbg !7617
  %cmp41.i299 = icmp ugt i32 %213, %add40.i298, !dbg !7618
  br i1 %cmp41.i299, label %cond.true43.i302, label %cond.false45.i303, !dbg !7619

cond.true43.i302:                                 ; preds = %if.then39.i300
  %216 = load i32, i32* %re_index.i212, align 4, !dbg !7620
  %217 = load i32, i32* %nb_bits.i216, align 4, !dbg !7621
  %add44.i301 = add i32 %216, %217, !dbg !7622
  br label %cond.end46.i338, !dbg !7623

cond.false45.i303:                                ; preds = %if.then39.i300
  %218 = load i32, i32* %re_size_plus8.i214, align 4, !dbg !7624
  br label %cond.end46.i338, !dbg !7625

cond.end46.i338:                                  ; preds = %cond.false45.i303, %cond.true43.i302
  %cond47.i304 = phi i32 [ %add44.i301, %cond.true43.i302 ], [ %218, %cond.false45.i303 ], !dbg !7626
  store i32 %cond47.i304, i32* %re_index.i212, align 4, !dbg !7627
  %219 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i207, align 8, !dbg !7628
  %buffer48.i305 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %219, i32 0, i32 0, !dbg !7629
  %220 = load i8*, i8** %buffer48.i305, align 8, !dbg !7629
  %221 = load i32, i32* %re_index.i212, align 4, !dbg !7630
  %shr49.i306 = lshr i32 %221, 3, !dbg !7631
  %idx.ext50.i307 = zext i32 %shr49.i306 to i64, !dbg !7632
  %add.ptr51.i308 = getelementptr inbounds i8, i8* %220, i64 %idx.ext50.i307, !dbg !7632
  %222 = bitcast i8* %add.ptr51.i308 to %union.unaligned_32*, !dbg !7633
  %l52.i309 = bitcast %union.unaligned_32* %222 to i32*, !dbg !7633
  %223 = load i32, i32* %l52.i309, align 1, !dbg !7633
  store i32 %223, i32* %x.addr.i96.i204, align 4, !dbg !7634
  %224 = load i32, i32* %x.addr.i96.i204, align 4, !dbg !7635
  %shl.i97.i310 = shl i32 %224, 8, !dbg !7636
  %and.i98.i311 = and i32 %shl.i97.i310, 65280, !dbg !7637
  %225 = load i32, i32* %x.addr.i96.i204, align 4, !dbg !7638
  %shr.i99.i312 = lshr i32 %225, 8, !dbg !7639
  %and1.i100.i313 = and i32 %shr.i99.i312, 255, !dbg !7640
  %or.i101.i314 = or i32 %and.i98.i311, %and1.i100.i313, !dbg !7641
  %shl2.i102.i315 = shl i32 %or.i101.i314, 16, !dbg !7642
  %226 = load i32, i32* %x.addr.i96.i204, align 4, !dbg !7643
  %shr3.i103.i316 = lshr i32 %226, 16, !dbg !7644
  %shl4.i104.i317 = shl i32 %shr3.i103.i316, 8, !dbg !7645
  %and5.i105.i318 = and i32 %shl4.i104.i317, 65280, !dbg !7646
  %227 = load i32, i32* %x.addr.i96.i204, align 4, !dbg !7647
  %shr6.i106.i319 = lshr i32 %227, 16, !dbg !7648
  %shr7.i107.i320 = lshr i32 %shr6.i106.i319, 8, !dbg !7649
  %and8.i108.i321 = and i32 %shr7.i107.i320, 255, !dbg !7650
  %or9.i109.i322 = or i32 %and5.i105.i318, %and8.i108.i321, !dbg !7651
  %or10.i110.i323 = or i32 %shl2.i102.i315, %or9.i109.i322, !dbg !7652
  %228 = load i32, i32* %re_index.i212, align 4, !dbg !7653
  %and54.i324 = and i32 %228, 7, !dbg !7654
  %shl55.i325 = shl i32 %or10.i110.i323, %and54.i324, !dbg !7655
  store i32 %shl55.i325, i32* %re_cache.i213, align 4, !dbg !7656
  %229 = load i32, i32* %n.i215, align 4, !dbg !7657
  %sub56.i326 = sub nsw i32 0, %229, !dbg !7658
  store i32 %sub56.i326, i32* %nb_bits.i216, align 4, !dbg !7659
  %230 = load i32, i32* %re_cache.i213, align 4, !dbg !7660
  %231 = load i32, i32* %nb_bits.i216, align 4, !dbg !7661
  %conv57.i327 = trunc i32 %231 to i8, !dbg !7661
  %call58.i328 = call i32 @NEG_USR32(i32 %230, i8 signext %conv57.i327) #9, !dbg !7662
  %232 = load i32, i32* %code.i211, align 4, !dbg !7663
  %add59.i329 = add i32 %call58.i328, %232, !dbg !7664
  store i32 %add59.i329, i32* %index1.i217, align 4, !dbg !7665
  %233 = load i32, i32* %index1.i217, align 4, !dbg !7666
  %idxprom60.i330 = zext i32 %233 to i64, !dbg !7667
  %234 = load [2 x i16]*, [2 x i16]** %table.addr.i208, align 8, !dbg !7667
  %arrayidx61.i331 = getelementptr inbounds [2 x i16], [2 x i16]* %234, i64 %idxprom60.i330, !dbg !7667
  %arrayidx62.i332 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i331, i64 0, i64 0, !dbg !7667
  %235 = load i16, i16* %arrayidx62.i332, align 2, !dbg !7667
  %conv63.i333 = sext i16 %235 to i32, !dbg !7667
  store i32 %conv63.i333, i32* %code.i211, align 4, !dbg !7668
  %236 = load i32, i32* %index1.i217, align 4, !dbg !7669
  %idxprom64.i334 = zext i32 %236 to i64, !dbg !7670
  %237 = load [2 x i16]*, [2 x i16]** %table.addr.i208, align 8, !dbg !7670
  %arrayidx65.i335 = getelementptr inbounds [2 x i16], [2 x i16]* %237, i64 %idxprom64.i334, !dbg !7670
  %arrayidx66.i336 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i335, i64 0, i64 1, !dbg !7670
  %238 = load i16, i16* %arrayidx66.i336, align 2, !dbg !7670
  %conv67.i337 = sext i16 %238 to i32, !dbg !7670
  store i32 %conv67.i337, i32* %n.i215, align 4, !dbg !7671
  br label %if.end.i339, !dbg !7672

if.end.i339:                                      ; preds = %cond.end46.i338, %land.lhs.true36.i297, %cond.end.i295
  br label %if.end68.i340, !dbg !7673

if.end68.i340:                                    ; preds = %if.end.i339, %land.lhs.true.i253, %for.body99
  %239 = load i32, i32* %n.i215, align 4, !dbg !7674
  %240 = load i32, i32* %re_cache.i213, align 4, !dbg !7675
  %shl70.i341 = shl i32 %240, %239, !dbg !7675
  store i32 %shl70.i341, i32* %re_cache.i213, align 4, !dbg !7675
  %241 = load i32, i32* %re_size_plus8.i214, align 4, !dbg !7676
  %242 = load i32, i32* %re_index.i212, align 4, !dbg !7677
  %243 = load i32, i32* %n.i215, align 4, !dbg !7678
  %add71.i342 = add i32 %242, %243, !dbg !7679
  %cmp72.i343 = icmp ugt i32 %241, %add71.i342, !dbg !7680
  br i1 %cmp72.i343, label %cond.true74.i345, label %cond.false76.i346, !dbg !7681

cond.true74.i345:                                 ; preds = %if.end68.i340
  %244 = load i32, i32* %re_index.i212, align 4, !dbg !7682
  %245 = load i32, i32* %n.i215, align 4, !dbg !7683
  %add75.i344 = add i32 %244, %245, !dbg !7684
  br label %get_vlc2.exit349, !dbg !7685

cond.false76.i346:                                ; preds = %if.end68.i340
  %246 = load i32, i32* %re_size_plus8.i214, align 4, !dbg !7686
  br label %get_vlc2.exit349, !dbg !7687

get_vlc2.exit349:                                 ; preds = %cond.true74.i345, %cond.false76.i346
  %cond78.i347 = phi i32 [ %add75.i344, %cond.true74.i345 ], [ %246, %cond.false76.i346 ], !dbg !7688
  store i32 %cond78.i347, i32* %re_index.i212, align 4, !dbg !7689
  %247 = load i32, i32* %re_index.i212, align 4, !dbg !7690
  %248 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i207, align 8, !dbg !7691
  %index80.i348 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %248, i32 0, i32 2, !dbg !7692
  store i32 %247, i32* %index80.i348, align 8, !dbg !7693
  %249 = load i32, i32* %code.i211, align 4, !dbg !7694
  store i32 %249, i32* %idx, align 4, !dbg !7695
  %250 = load i32, i32* %idx, align 4, !dbg !7696
  %tobool103 = icmp ne i32 %250, 0, !dbg !7696
  br i1 %tobool103, label %if.else110, label %if.then104, !dbg !7698

if.then104:                                       ; preds = %get_vlc2.exit349
  call void @llvm.dbg.declare(metadata i32* %code, metadata !7699, metadata !2019), !dbg !7701
  %251 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7702
  %gb105 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %251, i32 0, i32 34, !dbg !7703
  %call106 = call i32 @get_bits(%struct.GetBitContext* %gb105, i32 14), !dbg !7704
  store i32 %call106, i32* %code, align 4, !dbg !7701
  %252 = load i32, i32* %code, align 4, !dbg !7705
  %shr = lshr i32 %252, 6, !dbg !7706
  store i32 %shr, i32* %val100, align 4, !dbg !7707
  %253 = load i32, i32* %code, align 4, !dbg !7708
  %and = and i32 %253, 1, !dbg !7709
  %sub107 = sub i32 %and, 1, !dbg !7710
  store i32 %sub107, i32* %sign, align 4, !dbg !7711
  %254 = load i32, i32* %code, align 4, !dbg !7712
  %and108 = and i32 %254, 63, !dbg !7713
  %shr109 = lshr i32 %and108, 1, !dbg !7714
  store i32 %shr109, i32* %skip, align 4, !dbg !7715
  br label %if.end125, !dbg !7716

if.else110:                                       ; preds = %get_vlc2.exit349
  %255 = load i32, i32* %idx, align 4, !dbg !7717
  %cmp111 = icmp eq i32 %255, 1, !dbg !7720
  br i1 %cmp111, label %if.then113, label %if.else114, !dbg !7717

if.then113:                                       ; preds = %if.else110
  br label %for.end143, !dbg !7721

if.else114:                                       ; preds = %if.else110
  %256 = load i32, i32* %idx, align 4, !dbg !7723
  %idxprom115 = sext i32 %256 to i64, !dbg !7725
  %arrayidx116 = getelementptr inbounds [120 x i8], [120 x i8]* @scale_rl_run, i64 0, i64 %idxprom115, !dbg !7725
  %257 = load i8, i8* %arrayidx116, align 1, !dbg !7725
  %conv117 = zext i8 %257 to i32, !dbg !7725
  store i32 %conv117, i32* %skip, align 4, !dbg !7726
  %258 = load i32, i32* %idx, align 4, !dbg !7727
  %idxprom118 = sext i32 %258 to i64, !dbg !7728
  %arrayidx119 = getelementptr inbounds [120 x i8], [120 x i8]* @scale_rl_level, i64 0, i64 %idxprom118, !dbg !7728
  %259 = load i8, i8* %arrayidx119, align 1, !dbg !7728
  %conv120 = zext i8 %259 to i32, !dbg !7728
  store i32 %conv120, i32* %val100, align 4, !dbg !7729
  %260 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7730
  %gb121 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %260, i32 0, i32 34, !dbg !7731
  %call122 = call i32 @get_bits1(%struct.GetBitContext* %gb121), !dbg !7732
  %sub123 = sub i32 %call122, 1, !dbg !7733
  store i32 %sub123, i32* %sign, align 4, !dbg !7734
  br label %if.end124

if.end124:                                        ; preds = %if.else114
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then104
  %261 = load i32, i32* %skip, align 4, !dbg !7735
  %262 = load i32, i32* %i93, align 4, !dbg !7736
  %add126 = add nsw i32 %262, %261, !dbg !7736
  store i32 %add126, i32* %i93, align 4, !dbg !7736
  %263 = load i32, i32* %i93, align 4, !dbg !7737
  %264 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7739
  %num_bands127 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %264, i32 0, i32 44, !dbg !7740
  %265 = load i8, i8* %num_bands127, align 4, !dbg !7740
  %conv128 = sext i8 %265 to i32, !dbg !7739
  %cmp129 = icmp sge i32 %263, %conv128, !dbg !7741
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !7742

if.then131:                                       ; preds = %if.end125
  %266 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7743
  %avctx = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %266, i32 0, i32 0, !dbg !7745
  %267 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !7745
  %268 = bitcast %struct.AVCodecContext* %267 to i8*, !dbg !7743
  call void (i8*, i32, i8*, ...) @av_log(i8* %268, i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.63, i32 0, i32 0)), !dbg !7746
  store i32 -1094995529, i32* %retval, align 4, !dbg !7747
  br label %return, !dbg !7747

if.end132:                                        ; preds = %if.end125
  %269 = load i32, i32* %val100, align 4, !dbg !7748
  %270 = load i32, i32* %sign, align 4, !dbg !7749
  %xor = xor i32 %269, %270, !dbg !7750
  %271 = load i32, i32* %sign, align 4, !dbg !7751
  %sub133 = sub nsw i32 %xor, %271, !dbg !7752
  %272 = load i32, i32* %i93, align 4, !dbg !7753
  %idxprom134 = sext i32 %272 to i64, !dbg !7754
  %273 = load i32, i32* %c, align 4, !dbg !7755
  %idxprom135 = sext i32 %273 to i64, !dbg !7754
  %274 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7754
  %channel136 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %274, i32 0, i32 52, !dbg !7756
  %arrayidx137 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel136, i64 0, i64 %idxprom135, !dbg !7754
  %scale_factors138 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx137, i32 0, i32 14, !dbg !7757
  %275 = load i32*, i32** %scale_factors138, align 8, !dbg !7757
  %arrayidx139 = getelementptr inbounds i32, i32* %275, i64 %idxprom134, !dbg !7754
  %276 = load i32, i32* %arrayidx139, align 4, !dbg !7758
  %add140 = add nsw i32 %276, %sub133, !dbg !7758
  store i32 %add140, i32* %arrayidx139, align 4, !dbg !7758
  br label %for.inc141, !dbg !7759

for.inc141:                                       ; preds = %if.end132
  %277 = load i32, i32* %i93, align 4, !dbg !7760
  %inc142 = add nsw i32 %277, 1, !dbg !7760
  store i32 %inc142, i32* %i93, align 4, !dbg !7760
  br label %for.cond94, !dbg !7762, !llvm.loop !7763

for.end143:                                       ; preds = %if.then113, %for.cond94
  br label %if.end144

if.end144:                                        ; preds = %for.end143, %for.end92
  %278 = load i32, i32* %c, align 4, !dbg !7765
  %idxprom145 = sext i32 %278 to i64, !dbg !7766
  %279 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7766
  %channel146 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %279, i32 0, i32 52, !dbg !7767
  %arrayidx147 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel146, i64 0, i64 %idxprom145, !dbg !7766
  %scale_factor_idx148 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx147, i32 0, i32 13, !dbg !7768
  %280 = load i8, i8* %scale_factor_idx148, align 32, !dbg !7768
  %tobool149 = icmp ne i8 %280, 0, !dbg !7769
  %lnot150 = xor i1 %tobool149, true, !dbg !7769
  %lnot.ext151 = zext i1 %lnot150 to i32, !dbg !7769
  %conv152 = trunc i32 %lnot.ext151 to i8, !dbg !7769
  %281 = load i32, i32* %c, align 4, !dbg !7770
  %idxprom153 = sext i32 %281 to i64, !dbg !7771
  %282 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7771
  %channel154 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %282, i32 0, i32 52, !dbg !7772
  %arrayidx155 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel154, i64 0, i64 %idxprom153, !dbg !7771
  %scale_factor_idx156 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx155, i32 0, i32 13, !dbg !7773
  store i8 %conv152, i8* %scale_factor_idx156, align 32, !dbg !7774
  %283 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7775
  %table_idx157 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %283, i32 0, i32 47, !dbg !7776
  %284 = load i8, i8* %table_idx157, align 32, !dbg !7776
  %285 = load i32, i32* %c, align 4, !dbg !7777
  %idxprom158 = sext i32 %285 to i64, !dbg !7778
  %286 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7778
  %channel159 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %286, i32 0, i32 52, !dbg !7779
  %arrayidx160 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel159, i64 0, i64 %idxprom158, !dbg !7778
  %table_idx161 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx160, i32 0, i32 15, !dbg !7780
  store i8 %284, i8* %table_idx161, align 16, !dbg !7781
  %287 = load i32, i32* %c, align 4, !dbg !7782
  %idxprom162 = sext i32 %287 to i64, !dbg !7783
  %288 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7783
  %channel163 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %288, i32 0, i32 52, !dbg !7784
  %arrayidx164 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel163, i64 0, i64 %idxprom162, !dbg !7783
  %reuse_sf165 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx164, i32 0, i32 9, !dbg !7785
  store i8 1, i8* %reuse_sf165, align 16, !dbg !7786
  br label %if.end166, !dbg !7787

if.end166:                                        ; preds = %if.end144, %lor.lhs.false
  %289 = load i32, i32* %c, align 4, !dbg !7788
  %idxprom167 = sext i32 %289 to i64, !dbg !7789
  %290 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7789
  %channel168 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %290, i32 0, i32 52, !dbg !7790
  %arrayidx169 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel168, i64 0, i64 %idxprom167, !dbg !7789
  %scale_factors170 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx169, i32 0, i32 14, !dbg !7791
  %291 = load i32*, i32** %scale_factors170, align 8, !dbg !7791
  %arrayidx171 = getelementptr inbounds i32, i32* %291, i64 0, !dbg !7789
  %292 = load i32, i32* %arrayidx171, align 4, !dbg !7789
  %293 = load i32, i32* %c, align 4, !dbg !7792
  %idxprom172 = sext i32 %293 to i64, !dbg !7793
  %294 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7793
  %channel173 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %294, i32 0, i32 52, !dbg !7794
  %arrayidx174 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel173, i64 0, i64 %idxprom172, !dbg !7793
  %max_scale_factor = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx174, i32 0, i32 11, !dbg !7795
  store i32 %292, i32* %max_scale_factor, align 4, !dbg !7796
  %295 = load i32, i32* %c, align 4, !dbg !7797
  %idxprom175 = sext i32 %295 to i64, !dbg !7799
  %296 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7799
  %channel176 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %296, i32 0, i32 52, !dbg !7800
  %arrayidx177 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel176, i64 0, i64 %idxprom175, !dbg !7799
  %scale_factors178 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx177, i32 0, i32 14, !dbg !7801
  %297 = load i32*, i32** %scale_factors178, align 8, !dbg !7801
  %add.ptr179 = getelementptr inbounds i32, i32* %297, i64 1, !dbg !7802
  store i32* %add.ptr179, i32** %sf, align 8, !dbg !7803
  br label %for.cond180, !dbg !7804

for.cond180:                                      ; preds = %for.inc198, %if.end166
  %298 = load i32*, i32** %sf, align 8, !dbg !7805
  %299 = load i32*, i32** %sf_end, align 8, !dbg !7808
  %cmp181 = icmp ult i32* %298, %299, !dbg !7809
  br i1 %cmp181, label %for.body183, label %for.end200, !dbg !7810

for.body183:                                      ; preds = %for.cond180
  %300 = load i32, i32* %c, align 4, !dbg !7811
  %idxprom184 = sext i32 %300 to i64, !dbg !7813
  %301 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7813
  %channel185 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %301, i32 0, i32 52, !dbg !7814
  %arrayidx186 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel185, i64 0, i64 %idxprom184, !dbg !7813
  %max_scale_factor187 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx186, i32 0, i32 11, !dbg !7815
  %302 = load i32, i32* %max_scale_factor187, align 4, !dbg !7815
  %303 = load i32*, i32** %sf, align 8, !dbg !7816
  %304 = load i32, i32* %303, align 4, !dbg !7817
  %cmp188 = icmp sgt i32 %302, %304, !dbg !7818
  br i1 %cmp188, label %cond.true, label %cond.false, !dbg !7819

cond.true:                                        ; preds = %for.body183
  %305 = load i32, i32* %c, align 4, !dbg !7820
  %idxprom190 = sext i32 %305 to i64, !dbg !7822
  %306 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7822
  %channel191 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %306, i32 0, i32 52, !dbg !7823
  %arrayidx192 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel191, i64 0, i64 %idxprom190, !dbg !7822
  %max_scale_factor193 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx192, i32 0, i32 11, !dbg !7824
  %307 = load i32, i32* %max_scale_factor193, align 4, !dbg !7824
  br label %cond.end, !dbg !7825

cond.false:                                       ; preds = %for.body183
  %308 = load i32*, i32** %sf, align 8, !dbg !7826
  %309 = load i32, i32* %308, align 4, !dbg !7828
  br label %cond.end, !dbg !7829

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %307, %cond.true ], [ %309, %cond.false ], !dbg !7830
  %310 = load i32, i32* %c, align 4, !dbg !7832
  %idxprom194 = sext i32 %310 to i64, !dbg !7833
  %311 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7833
  %channel195 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %311, i32 0, i32 52, !dbg !7834
  %arrayidx196 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel195, i64 0, i64 %idxprom194, !dbg !7833
  %max_scale_factor197 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx196, i32 0, i32 11, !dbg !7835
  store i32 %cond, i32* %max_scale_factor197, align 4, !dbg !7836
  br label %for.inc198, !dbg !7837

for.inc198:                                       ; preds = %cond.end
  %312 = load i32*, i32** %sf, align 8, !dbg !7838
  %incdec.ptr199 = getelementptr inbounds i32, i32* %312, i32 1, !dbg !7838
  store i32* %incdec.ptr199, i32** %sf, align 8, !dbg !7838
  br label %for.cond180, !dbg !7840, !llvm.loop !7841

for.end200:                                       ; preds = %for.cond180
  br label %for.inc201, !dbg !7843

for.inc201:                                       ; preds = %for.end200
  %313 = load i32, i32* %i, align 4, !dbg !7844
  %inc202 = add nsw i32 %313, 1, !dbg !7844
  store i32 %inc202, i32* %i, align 4, !dbg !7844
  br label %for.cond, !dbg !7846, !llvm.loop !7847

for.end203:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7849
  br label %return, !dbg !7849

return:                                           ; preds = %for.end203, %if.then131
  %314 = load i32, i32* %retval, align 4, !dbg !7850
  ret i32 %314, !dbg !7850
}

; Function Attrs: nounwind uwtable
define internal i32 @decode_coeffs(%struct.WMAProDecodeCtx* %s, i32 %c) #1 !dbg !1998 {
entry:
  %f.addr.i585 = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr.i585, metadata !7851, metadata !2019), !dbg !7856
  %v.i586 = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i586, metadata !7866, metadata !2019), !dbg !7871
  %f.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr.i, metadata !7851, metadata !2019), !dbg !7872
  %v.i = alloca %union.av_intfloat32, align 4
  call void @llvm.dbg.declare(metadata %union.av_intfloat32* %v.i, metadata !7866, metadata !2019), !dbg !7874
  %x.addr.i96.i439 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i439, metadata !4352, metadata !2019), !dbg !7875
  %x.addr.i81.i440 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i440, metadata !4352, metadata !2019), !dbg !7878
  %x.addr.i.i441 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i441, metadata !4352, metadata !2019), !dbg !7880
  %s.addr.i442 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i442, metadata !7069, metadata !2019), !dbg !7882
  %table.addr.i443 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i443, metadata !7071, metadata !2019), !dbg !7883
  %bits.addr.i444 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i444, metadata !7073, metadata !2019), !dbg !7884
  %max_depth.addr.i445 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i445, metadata !7075, metadata !2019), !dbg !7885
  %code.i446 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i446, metadata !7077, metadata !2019), !dbg !7886
  %re_index.i447 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i447, metadata !7079, metadata !2019), !dbg !7887
  %re_cache.i448 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i448, metadata !7081, metadata !2019), !dbg !7888
  %re_size_plus8.i449 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i449, metadata !7083, metadata !2019), !dbg !7889
  %n.i450 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i450, metadata !7085, metadata !2019), !dbg !7890
  %nb_bits.i451 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i451, metadata !7087, metadata !2019), !dbg !7891
  %index1.i452 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i452, metadata !7089, metadata !2019), !dbg !7892
  %x.addr.i96.i293 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i293, metadata !4352, metadata !2019), !dbg !7893
  %x.addr.i81.i294 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i294, metadata !4352, metadata !2019), !dbg !7896
  %x.addr.i.i295 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i295, metadata !4352, metadata !2019), !dbg !7898
  %s.addr.i296 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i296, metadata !7069, metadata !2019), !dbg !7900
  %table.addr.i297 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i297, metadata !7071, metadata !2019), !dbg !7901
  %bits.addr.i298 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i298, metadata !7073, metadata !2019), !dbg !7902
  %max_depth.addr.i299 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i299, metadata !7075, metadata !2019), !dbg !7903
  %code.i300 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i300, metadata !7077, metadata !2019), !dbg !7904
  %re_index.i301 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i301, metadata !7079, metadata !2019), !dbg !7905
  %re_cache.i302 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i302, metadata !7081, metadata !2019), !dbg !7906
  %re_size_plus8.i303 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i303, metadata !7083, metadata !2019), !dbg !7907
  %n.i304 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i304, metadata !7085, metadata !2019), !dbg !7908
  %nb_bits.i305 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i305, metadata !7087, metadata !2019), !dbg !7909
  %index1.i306 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i306, metadata !7089, metadata !2019), !dbg !7910
  %x.addr.i96.i147 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i147, metadata !4352, metadata !2019), !dbg !7911
  %x.addr.i81.i148 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i148, metadata !4352, metadata !2019), !dbg !7914
  %x.addr.i.i149 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i149, metadata !4352, metadata !2019), !dbg !7916
  %s.addr.i150 = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i150, metadata !7069, metadata !2019), !dbg !7918
  %table.addr.i151 = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i151, metadata !7071, metadata !2019), !dbg !7919
  %bits.addr.i152 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i152, metadata !7073, metadata !2019), !dbg !7920
  %max_depth.addr.i153 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i153, metadata !7075, metadata !2019), !dbg !7921
  %code.i154 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i154, metadata !7077, metadata !2019), !dbg !7922
  %re_index.i155 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i155, metadata !7079, metadata !2019), !dbg !7923
  %re_cache.i156 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i156, metadata !7081, metadata !2019), !dbg !7924
  %re_size_plus8.i157 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i157, metadata !7083, metadata !2019), !dbg !7925
  %n.i158 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i158, metadata !7085, metadata !2019), !dbg !7926
  %nb_bits.i159 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i159, metadata !7087, metadata !2019), !dbg !7927
  %index1.i160 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i160, metadata !7089, metadata !2019), !dbg !7928
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !4352, metadata !2019), !dbg !7929
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !4352, metadata !2019), !dbg !7932
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !4352, metadata !2019), !dbg !7934
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !7069, metadata !2019), !dbg !7936
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !7071, metadata !2019), !dbg !7937
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !7073, metadata !2019), !dbg !7938
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !7075, metadata !2019), !dbg !7939
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !7077, metadata !2019), !dbg !7940
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !7079, metadata !2019), !dbg !7941
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !7081, metadata !2019), !dbg !7942
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !7083, metadata !2019), !dbg !7943
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !7085, metadata !2019), !dbg !7944
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !7087, metadata !2019), !dbg !7945
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !7089, metadata !2019), !dbg !7946
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %c.addr = alloca i32, align 4
  %vlctable = alloca i32, align 4
  %vlc = alloca %struct.VLC*, align 8
  %ci = alloca %struct.WMAProChannelCtx*, align 8
  %rl_mode = alloca i32, align 4
  %cur_coeff = alloca i32, align 4
  %num_zeros = alloca i32, align 4
  %run = alloca i16*, align 8
  %level = alloca float*, align 8
  %vals = alloca [4 x i32], align 16
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  %v0 = alloca i32, align 4
  %v1 = alloca i32, align 4
  %sign = alloca i32, align 4
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !7947, metadata !2019), !dbg !7948
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !7949, metadata !2019), !dbg !7950
  call void @llvm.dbg.declare(metadata i32* %vlctable, metadata !7951, metadata !2019), !dbg !7952
  call void @llvm.dbg.declare(metadata %struct.VLC** %vlc, metadata !7953, metadata !2019), !dbg !7955
  call void @llvm.dbg.declare(metadata %struct.WMAProChannelCtx** %ci, metadata !7956, metadata !2019), !dbg !7957
  %0 = load i32, i32* %c.addr, align 4, !dbg !7958
  %idxprom = sext i32 %0 to i64, !dbg !7959
  %1 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7959
  %channel = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %1, i32 0, i32 52, !dbg !7960
  %arrayidx = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel, i64 0, i64 %idxprom, !dbg !7959
  store %struct.WMAProChannelCtx* %arrayidx, %struct.WMAProChannelCtx** %ci, align 8, !dbg !7957
  call void @llvm.dbg.declare(metadata i32* %rl_mode, metadata !7961, metadata !2019), !dbg !7962
  store i32 0, i32* %rl_mode, align 4, !dbg !7962
  call void @llvm.dbg.declare(metadata i32* %cur_coeff, metadata !7963, metadata !2019), !dbg !7964
  store i32 0, i32* %cur_coeff, align 4, !dbg !7964
  call void @llvm.dbg.declare(metadata i32* %num_zeros, metadata !7965, metadata !2019), !dbg !7966
  store i32 0, i32* %num_zeros, align 4, !dbg !7966
  call void @llvm.dbg.declare(metadata i16** %run, metadata !7967, metadata !2019), !dbg !7969
  call void @llvm.dbg.declare(metadata float** %level, metadata !7970, metadata !2019), !dbg !7971
  br label %do.body, !dbg !7972, !llvm.loop !7973

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7974

do.end:                                           ; preds = %do.body
  %2 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7977
  %gb = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %2, i32 0, i32 34, !dbg !7978
  %call = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !7979
  store i32 %call, i32* %vlctable, align 4, !dbg !7980
  %3 = load i32, i32* %vlctable, align 4, !dbg !7981
  %idxprom1 = sext i32 %3 to i64, !dbg !7982
  %arrayidx2 = getelementptr inbounds [2 x %struct.VLC], [2 x %struct.VLC]* @coef_vlc, i64 0, i64 %idxprom1, !dbg !7982
  store %struct.VLC* %arrayidx2, %struct.VLC** %vlc, align 8, !dbg !7983
  %4 = load i32, i32* %vlctable, align 4, !dbg !7984
  %tobool = icmp ne i32 %4, 0, !dbg !7984
  br i1 %tobool, label %if.then, label %if.else, !dbg !7986

if.then:                                          ; preds = %do.end
  store i16* getelementptr inbounds ([244 x i16], [244 x i16]* @coef1_run, i32 0, i32 0), i16** %run, align 8, !dbg !7987
  store float* getelementptr inbounds ([244 x float], [244 x float]* @coef1_level, i32 0, i32 0), float** %level, align 8, !dbg !7989
  br label %if.end, !dbg !7990

if.else:                                          ; preds = %do.end
  store i16* getelementptr inbounds ([272 x i16], [272 x i16]* @coef0_run, i32 0, i32 0), i16** %run, align 8, !dbg !7991
  store float* getelementptr inbounds ([272 x float], [272 x float]* @coef0_level, i32 0, i32 0), float** %level, align 8, !dbg !7993
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !7994

while.cond:                                       ; preds = %for.end122, %if.end
  %5 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !7995
  %transmit_num_vec_coeffs = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %5, i32 0, i32 45, !dbg !7997
  %6 = load i8, i8* %transmit_num_vec_coeffs, align 1, !dbg !7997
  %conv = sext i8 %6 to i32, !dbg !7995
  %tobool3 = icmp ne i32 %conv, 0, !dbg !7995
  br i1 %tobool3, label %land.rhs, label %lor.lhs.false, !dbg !7998

lor.lhs.false:                                    ; preds = %while.cond
  %7 = load i32, i32* %rl_mode, align 4, !dbg !7999
  %tobool4 = icmp ne i32 %7, 0, !dbg !7999
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !8001

land.rhs:                                         ; preds = %lor.lhs.false, %while.cond
  %8 = load i32, i32* %cur_coeff, align 4, !dbg !8002
  %add = add nsw i32 %8, 3, !dbg !8003
  %9 = load %struct.WMAProChannelCtx*, %struct.WMAProChannelCtx** %ci, align 8, !dbg !8004
  %num_vec_coeffs = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %9, i32 0, i32 17, !dbg !8005
  %10 = load i16, i16* %num_vec_coeffs, align 32, !dbg !8005
  %conv5 = zext i16 %10 to i32, !dbg !8004
  %cmp = icmp slt i32 %add, %conv5, !dbg !8006
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %11 = phi i1 [ false, %lor.lhs.false ], [ %cmp, %land.rhs ]
  br i1 %11, label %while.body, label %while.end, !dbg !8007

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata [4 x i32]* %vals, metadata !8009, metadata !2019), !dbg !8011
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8012, metadata !2019), !dbg !8013
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !8014, metadata !2019), !dbg !8015
  %12 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8016
  %gb7 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %12, i32 0, i32 34, !dbg !8017
  %13 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vec4_vlc, i32 0, i32 1), align 8, !dbg !8018
  store %struct.GetBitContext* %gb7, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8019
  store [2 x i16]* %13, [2 x i16]** %table.addr.i, align 8, !dbg !8019
  store i32 9, i32* %bits.addr.i, align 4, !dbg !8019
  store i32 2, i32* %max_depth.addr.i, align 4, !dbg !8019
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8020
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %14, i32 0, i32 2, !dbg !8021
  %15 = load i32, i32* %index.i, align 8, !dbg !8021
  store i32 %15, i32* %re_index.i, align 4, !dbg !7941
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8022
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %16, i32 0, i32 4, !dbg !8023
  %17 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !8023
  store i32 %17, i32* %re_size_plus8.i, align 4, !dbg !7943
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8024
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %18, i32 0, i32 0, !dbg !8025
  %19 = load i8*, i8** %buffer.i, align 8, !dbg !8025
  %20 = load i32, i32* %re_index.i, align 4, !dbg !8026
  %shr.i = lshr i32 %20, 3, !dbg !8027
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !8028
  %add.ptr.i = getelementptr inbounds i8, i8* %19, i64 %idx.ext.i, !dbg !8028
  %21 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !8029
  %l.i = bitcast %union.unaligned_32* %21 to i32*, !dbg !8029
  %22 = load i32, i32* %l.i, align 1, !dbg !8029
  store i32 %22, i32* %x.addr.i.i, align 4, !dbg !8030
  %23 = load i32, i32* %x.addr.i.i, align 4, !dbg !8031
  %shl.i.i = shl i32 %23, 8, !dbg !8032
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !8033
  %24 = load i32, i32* %x.addr.i.i, align 4, !dbg !8034
  %shr.i.i = lshr i32 %24, 8, !dbg !8035
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !8036
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !8037
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !8038
  %25 = load i32, i32* %x.addr.i.i, align 4, !dbg !8039
  %shr3.i.i = lshr i32 %25, 16, !dbg !8040
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !8041
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !8042
  %26 = load i32, i32* %x.addr.i.i, align 4, !dbg !8043
  %shr6.i.i = lshr i32 %26, 16, !dbg !8044
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !8045
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !8046
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !8047
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !8048
  %27 = load i32, i32* %re_index.i, align 4, !dbg !8049
  %and.i = and i32 %27, 7, !dbg !8050
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !8051
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !8052
  %28 = load i32, i32* %re_cache.i, align 4, !dbg !8053
  %29 = load i32, i32* %bits.addr.i, align 4, !dbg !8054
  %conv.i = trunc i32 %29 to i8, !dbg !8054
  %call2.i = call i32 @NEG_USR32(i32 %28, i8 signext %conv.i) #9, !dbg !8055
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !8056
  %30 = load i32, i32* %index1.i, align 4, !dbg !8057
  %idxprom.i = zext i32 %30 to i64, !dbg !8058
  %31 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8058
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %31, i64 %idxprom.i, !dbg !8058
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !8058
  %32 = load i16, i16* %arrayidx3.i, align 2, !dbg !8058
  %conv4.i = sext i16 %32 to i32, !dbg !8058
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !8059
  %33 = load i32, i32* %index1.i, align 4, !dbg !8060
  %idxprom5.i = zext i32 %33 to i64, !dbg !8061
  %34 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8061
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %34, i64 %idxprom5.i, !dbg !8061
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !8061
  %35 = load i16, i16* %arrayidx7.i, align 2, !dbg !8061
  %conv8.i = sext i16 %35 to i32, !dbg !8061
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !8062
  %36 = load i32, i32* %max_depth.addr.i, align 4, !dbg !8063
  %cmp.i = icmp sgt i32 %36, 1, !dbg !8064
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !8065

land.lhs.true.i:                                  ; preds = %while.body
  %37 = load i32, i32* %n.i, align 4, !dbg !8066
  %cmp10.i = icmp slt i32 %37, 0, !dbg !8067
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !8068

if.then.i:                                        ; preds = %land.lhs.true.i
  %38 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8069
  %39 = load i32, i32* %re_index.i, align 4, !dbg !8070
  %40 = load i32, i32* %bits.addr.i, align 4, !dbg !8071
  %add.i = add i32 %39, %40, !dbg !8072
  %cmp12.i = icmp ugt i32 %38, %add.i, !dbg !8073
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !8074

cond.true.i:                                      ; preds = %if.then.i
  %41 = load i32, i32* %re_index.i, align 4, !dbg !8075
  %42 = load i32, i32* %bits.addr.i, align 4, !dbg !8076
  %add14.i = add i32 %41, %42, !dbg !8077
  br label %cond.end.i, !dbg !8078

cond.false.i:                                     ; preds = %if.then.i
  %43 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8079
  br label %cond.end.i, !dbg !8080

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %43, %cond.false.i ], !dbg !8081
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !8082
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8083
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %44, i32 0, i32 0, !dbg !8084
  %45 = load i8*, i8** %buffer15.i, align 8, !dbg !8084
  %46 = load i32, i32* %re_index.i, align 4, !dbg !8085
  %shr16.i = lshr i32 %46, 3, !dbg !8086
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !8087
  %add.ptr18.i = getelementptr inbounds i8, i8* %45, i64 %idx.ext17.i, !dbg !8087
  %47 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !8088
  %l19.i = bitcast %union.unaligned_32* %47 to i32*, !dbg !8088
  %48 = load i32, i32* %l19.i, align 1, !dbg !8088
  store i32 %48, i32* %x.addr.i81.i, align 4, !dbg !8089
  %49 = load i32, i32* %x.addr.i81.i, align 4, !dbg !8090
  %shl.i82.i = shl i32 %49, 8, !dbg !8091
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !8092
  %50 = load i32, i32* %x.addr.i81.i, align 4, !dbg !8093
  %shr.i84.i = lshr i32 %50, 8, !dbg !8094
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !8095
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !8096
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !8097
  %51 = load i32, i32* %x.addr.i81.i, align 4, !dbg !8098
  %shr3.i88.i = lshr i32 %51, 16, !dbg !8099
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !8100
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !8101
  %52 = load i32, i32* %x.addr.i81.i, align 4, !dbg !8102
  %shr6.i91.i = lshr i32 %52, 16, !dbg !8103
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !8104
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !8105
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !8106
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !8107
  %53 = load i32, i32* %re_index.i, align 4, !dbg !8108
  %and21.i = and i32 %53, 7, !dbg !8109
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !8110
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !8111
  %54 = load i32, i32* %n.i, align 4, !dbg !8112
  %sub.i = sub nsw i32 0, %54, !dbg !8113
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !8114
  %55 = load i32, i32* %re_cache.i, align 4, !dbg !8115
  %56 = load i32, i32* %nb_bits.i, align 4, !dbg !8116
  %conv23.i = trunc i32 %56 to i8, !dbg !8116
  %call24.i = call i32 @NEG_USR32(i32 %55, i8 signext %conv23.i) #9, !dbg !8117
  %57 = load i32, i32* %code.i, align 4, !dbg !8118
  %add25.i = add i32 %call24.i, %57, !dbg !8119
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !8120
  %58 = load i32, i32* %index1.i, align 4, !dbg !8121
  %idxprom26.i = zext i32 %58 to i64, !dbg !8122
  %59 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8122
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %59, i64 %idxprom26.i, !dbg !8122
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !8122
  %60 = load i16, i16* %arrayidx28.i, align 2, !dbg !8122
  %conv29.i = sext i16 %60 to i32, !dbg !8122
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !8123
  %61 = load i32, i32* %index1.i, align 4, !dbg !8124
  %idxprom30.i = zext i32 %61 to i64, !dbg !8125
  %62 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8125
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %62, i64 %idxprom30.i, !dbg !8125
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !8125
  %63 = load i16, i16* %arrayidx32.i, align 2, !dbg !8125
  %conv33.i = sext i16 %63 to i32, !dbg !8125
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !8126
  %64 = load i32, i32* %max_depth.addr.i, align 4, !dbg !8127
  %cmp34.i = icmp sgt i32 %64, 2, !dbg !8128
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !8129

land.lhs.true36.i:                                ; preds = %cond.end.i
  %65 = load i32, i32* %n.i, align 4, !dbg !8130
  %cmp37.i = icmp slt i32 %65, 0, !dbg !8131
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !8132

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %66 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8133
  %67 = load i32, i32* %re_index.i, align 4, !dbg !8134
  %68 = load i32, i32* %nb_bits.i, align 4, !dbg !8135
  %add40.i = add i32 %67, %68, !dbg !8136
  %cmp41.i = icmp ugt i32 %66, %add40.i, !dbg !8137
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !8138

cond.true43.i:                                    ; preds = %if.then39.i
  %69 = load i32, i32* %re_index.i, align 4, !dbg !8139
  %70 = load i32, i32* %nb_bits.i, align 4, !dbg !8140
  %add44.i = add i32 %69, %70, !dbg !8141
  br label %cond.end46.i, !dbg !8142

cond.false45.i:                                   ; preds = %if.then39.i
  %71 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8143
  br label %cond.end46.i, !dbg !8144

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %71, %cond.false45.i ], !dbg !8145
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !8146
  %72 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8147
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %72, i32 0, i32 0, !dbg !8148
  %73 = load i8*, i8** %buffer48.i, align 8, !dbg !8148
  %74 = load i32, i32* %re_index.i, align 4, !dbg !8149
  %shr49.i = lshr i32 %74, 3, !dbg !8150
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !8151
  %add.ptr51.i = getelementptr inbounds i8, i8* %73, i64 %idx.ext50.i, !dbg !8151
  %75 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !8152
  %l52.i = bitcast %union.unaligned_32* %75 to i32*, !dbg !8152
  %76 = load i32, i32* %l52.i, align 1, !dbg !8152
  store i32 %76, i32* %x.addr.i96.i, align 4, !dbg !8153
  %77 = load i32, i32* %x.addr.i96.i, align 4, !dbg !8154
  %shl.i97.i = shl i32 %77, 8, !dbg !8155
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !8156
  %78 = load i32, i32* %x.addr.i96.i, align 4, !dbg !8157
  %shr.i99.i = lshr i32 %78, 8, !dbg !8158
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !8159
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !8160
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !8161
  %79 = load i32, i32* %x.addr.i96.i, align 4, !dbg !8162
  %shr3.i103.i = lshr i32 %79, 16, !dbg !8163
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !8164
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !8165
  %80 = load i32, i32* %x.addr.i96.i, align 4, !dbg !8166
  %shr6.i106.i = lshr i32 %80, 16, !dbg !8167
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !8168
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !8169
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !8170
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !8171
  %81 = load i32, i32* %re_index.i, align 4, !dbg !8172
  %and54.i = and i32 %81, 7, !dbg !8173
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !8174
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !8175
  %82 = load i32, i32* %n.i, align 4, !dbg !8176
  %sub56.i = sub nsw i32 0, %82, !dbg !8177
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !8178
  %83 = load i32, i32* %re_cache.i, align 4, !dbg !8179
  %84 = load i32, i32* %nb_bits.i, align 4, !dbg !8180
  %conv57.i = trunc i32 %84 to i8, !dbg !8180
  %call58.i = call i32 @NEG_USR32(i32 %83, i8 signext %conv57.i) #9, !dbg !8181
  %85 = load i32, i32* %code.i, align 4, !dbg !8182
  %add59.i = add i32 %call58.i, %85, !dbg !8183
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !8184
  %86 = load i32, i32* %index1.i, align 4, !dbg !8185
  %idxprom60.i = zext i32 %86 to i64, !dbg !8186
  %87 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8186
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %87, i64 %idxprom60.i, !dbg !8186
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !8186
  %88 = load i16, i16* %arrayidx62.i, align 2, !dbg !8186
  %conv63.i = sext i16 %88 to i32, !dbg !8186
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !8187
  %89 = load i32, i32* %index1.i, align 4, !dbg !8188
  %idxprom64.i = zext i32 %89 to i64, !dbg !8189
  %90 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !8189
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %90, i64 %idxprom64.i, !dbg !8189
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !8189
  %91 = load i16, i16* %arrayidx66.i, align 2, !dbg !8189
  %conv67.i = sext i16 %91 to i32, !dbg !8189
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !8190
  br label %if.end.i, !dbg !8191

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !8192

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %while.body
  %92 = load i32, i32* %n.i, align 4, !dbg !8193
  %93 = load i32, i32* %re_cache.i, align 4, !dbg !8194
  %shl70.i = shl i32 %93, %92, !dbg !8194
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !8194
  %94 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8195
  %95 = load i32, i32* %re_index.i, align 4, !dbg !8196
  %96 = load i32, i32* %n.i, align 4, !dbg !8197
  %add71.i = add i32 %95, %96, !dbg !8198
  %cmp72.i = icmp ugt i32 %94, %add71.i, !dbg !8199
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !8200

cond.true74.i:                                    ; preds = %if.end68.i
  %97 = load i32, i32* %re_index.i, align 4, !dbg !8201
  %98 = load i32, i32* %n.i, align 4, !dbg !8202
  %add75.i = add i32 %97, %98, !dbg !8203
  br label %get_vlc2.exit, !dbg !8204

cond.false76.i:                                   ; preds = %if.end68.i
  %99 = load i32, i32* %re_size_plus8.i, align 4, !dbg !8205
  br label %get_vlc2.exit, !dbg !8206

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %99, %cond.false76.i ], !dbg !8207
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !8208
  %100 = load i32, i32* %re_index.i, align 4, !dbg !8209
  %101 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !8210
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %101, i32 0, i32 2, !dbg !8211
  store i32 %100, i32* %index80.i, align 8, !dbg !8212
  %102 = load i32, i32* %code.i, align 4, !dbg !8213
  store i32 %102, i32* %idx, align 4, !dbg !8214
  %103 = load i32, i32* %idx, align 4, !dbg !8215
  %cmp9 = icmp eq i32 %103, 126, !dbg !8216
  br i1 %cmp9, label %if.then11, label %if.else64, !dbg !8217

if.then11:                                        ; preds = %get_vlc2.exit
  store i32 0, i32* %i, align 4, !dbg !8218
  br label %for.cond, !dbg !8219

for.cond:                                         ; preds = %for.inc, %if.then11
  %104 = load i32, i32* %i, align 4, !dbg !8220
  %cmp12 = icmp slt i32 %104, 4, !dbg !8222
  br i1 %cmp12, label %for.body, label %for.end, !dbg !8223

for.body:                                         ; preds = %for.cond
  %105 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8224
  %gb14 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %105, i32 0, i32 34, !dbg !8225
  %106 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vec2_vlc, i32 0, i32 1), align 8, !dbg !8226
  store %struct.GetBitContext* %gb14, %struct.GetBitContext** %s.addr.i150, align 8, !dbg !8227
  store [2 x i16]* %106, [2 x i16]** %table.addr.i151, align 8, !dbg !8227
  store i32 9, i32* %bits.addr.i152, align 4, !dbg !8227
  store i32 2, i32* %max_depth.addr.i153, align 4, !dbg !8227
  %107 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i150, align 8, !dbg !8228
  %index.i161 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %107, i32 0, i32 2, !dbg !8229
  %108 = load i32, i32* %index.i161, align 8, !dbg !8229
  store i32 %108, i32* %re_index.i155, align 4, !dbg !7923
  %109 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i150, align 8, !dbg !8230
  %size_in_bits_plus8.i162 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %109, i32 0, i32 4, !dbg !8231
  %110 = load i32, i32* %size_in_bits_plus8.i162, align 8, !dbg !8231
  store i32 %110, i32* %re_size_plus8.i157, align 4, !dbg !7925
  %111 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i150, align 8, !dbg !8232
  %buffer.i163 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %111, i32 0, i32 0, !dbg !8233
  %112 = load i8*, i8** %buffer.i163, align 8, !dbg !8233
  %113 = load i32, i32* %re_index.i155, align 4, !dbg !8234
  %shr.i164 = lshr i32 %113, 3, !dbg !8235
  %idx.ext.i165 = zext i32 %shr.i164 to i64, !dbg !8236
  %add.ptr.i166 = getelementptr inbounds i8, i8* %112, i64 %idx.ext.i165, !dbg !8236
  %114 = bitcast i8* %add.ptr.i166 to %union.unaligned_32*, !dbg !8237
  %l.i167 = bitcast %union.unaligned_32* %114 to i32*, !dbg !8237
  %115 = load i32, i32* %l.i167, align 1, !dbg !8237
  store i32 %115, i32* %x.addr.i.i149, align 4, !dbg !8238
  %116 = load i32, i32* %x.addr.i.i149, align 4, !dbg !8239
  %shl.i.i168 = shl i32 %116, 8, !dbg !8240
  %and.i.i169 = and i32 %shl.i.i168, 65280, !dbg !8241
  %117 = load i32, i32* %x.addr.i.i149, align 4, !dbg !8242
  %shr.i.i170 = lshr i32 %117, 8, !dbg !8243
  %and1.i.i171 = and i32 %shr.i.i170, 255, !dbg !8244
  %or.i.i172 = or i32 %and.i.i169, %and1.i.i171, !dbg !8245
  %shl2.i.i173 = shl i32 %or.i.i172, 16, !dbg !8246
  %118 = load i32, i32* %x.addr.i.i149, align 4, !dbg !8247
  %shr3.i.i174 = lshr i32 %118, 16, !dbg !8248
  %shl4.i.i175 = shl i32 %shr3.i.i174, 8, !dbg !8249
  %and5.i.i176 = and i32 %shl4.i.i175, 65280, !dbg !8250
  %119 = load i32, i32* %x.addr.i.i149, align 4, !dbg !8251
  %shr6.i.i177 = lshr i32 %119, 16, !dbg !8252
  %shr7.i.i178 = lshr i32 %shr6.i.i177, 8, !dbg !8253
  %and8.i.i179 = and i32 %shr7.i.i178, 255, !dbg !8254
  %or9.i.i180 = or i32 %and5.i.i176, %and8.i.i179, !dbg !8255
  %or10.i.i181 = or i32 %shl2.i.i173, %or9.i.i180, !dbg !8256
  %120 = load i32, i32* %re_index.i155, align 4, !dbg !8257
  %and.i182 = and i32 %120, 7, !dbg !8258
  %shl.i183 = shl i32 %or10.i.i181, %and.i182, !dbg !8259
  store i32 %shl.i183, i32* %re_cache.i156, align 4, !dbg !8260
  %121 = load i32, i32* %re_cache.i156, align 4, !dbg !8261
  %122 = load i32, i32* %bits.addr.i152, align 4, !dbg !8262
  %conv.i184 = trunc i32 %122 to i8, !dbg !8262
  %call2.i185 = call i32 @NEG_USR32(i32 %121, i8 signext %conv.i184) #9, !dbg !8263
  store i32 %call2.i185, i32* %index1.i160, align 4, !dbg !8264
  %123 = load i32, i32* %index1.i160, align 4, !dbg !8265
  %idxprom.i186 = zext i32 %123 to i64, !dbg !8266
  %124 = load [2 x i16]*, [2 x i16]** %table.addr.i151, align 8, !dbg !8266
  %arrayidx.i187 = getelementptr inbounds [2 x i16], [2 x i16]* %124, i64 %idxprom.i186, !dbg !8266
  %arrayidx3.i188 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i187, i64 0, i64 0, !dbg !8266
  %125 = load i16, i16* %arrayidx3.i188, align 2, !dbg !8266
  %conv4.i189 = sext i16 %125 to i32, !dbg !8266
  store i32 %conv4.i189, i32* %code.i154, align 4, !dbg !8267
  %126 = load i32, i32* %index1.i160, align 4, !dbg !8268
  %idxprom5.i190 = zext i32 %126 to i64, !dbg !8269
  %127 = load [2 x i16]*, [2 x i16]** %table.addr.i151, align 8, !dbg !8269
  %arrayidx6.i191 = getelementptr inbounds [2 x i16], [2 x i16]* %127, i64 %idxprom5.i190, !dbg !8269
  %arrayidx7.i192 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i191, i64 0, i64 1, !dbg !8269
  %128 = load i16, i16* %arrayidx7.i192, align 2, !dbg !8269
  %conv8.i193 = sext i16 %128 to i32, !dbg !8269
  store i32 %conv8.i193, i32* %n.i158, align 4, !dbg !8270
  %129 = load i32, i32* %max_depth.addr.i153, align 4, !dbg !8271
  %cmp.i194 = icmp sgt i32 %129, 1, !dbg !8272
  br i1 %cmp.i194, label %land.lhs.true.i196, label %if.end68.i283, !dbg !8273

land.lhs.true.i196:                               ; preds = %for.body
  %130 = load i32, i32* %n.i158, align 4, !dbg !8274
  %cmp10.i195 = icmp slt i32 %130, 0, !dbg !8275
  br i1 %cmp10.i195, label %if.then.i199, label %if.end68.i283, !dbg !8276

if.then.i199:                                     ; preds = %land.lhs.true.i196
  %131 = load i32, i32* %re_size_plus8.i157, align 4, !dbg !8277
  %132 = load i32, i32* %re_index.i155, align 4, !dbg !8278
  %133 = load i32, i32* %bits.addr.i152, align 4, !dbg !8279
  %add.i197 = add i32 %132, %133, !dbg !8280
  %cmp12.i198 = icmp ugt i32 %131, %add.i197, !dbg !8281
  br i1 %cmp12.i198, label %cond.true.i201, label %cond.false.i202, !dbg !8282

cond.true.i201:                                   ; preds = %if.then.i199
  %134 = load i32, i32* %re_index.i155, align 4, !dbg !8283
  %135 = load i32, i32* %bits.addr.i152, align 4, !dbg !8284
  %add14.i200 = add i32 %134, %135, !dbg !8285
  br label %cond.end.i238, !dbg !8286

cond.false.i202:                                  ; preds = %if.then.i199
  %136 = load i32, i32* %re_size_plus8.i157, align 4, !dbg !8287
  br label %cond.end.i238, !dbg !8288

cond.end.i238:                                    ; preds = %cond.false.i202, %cond.true.i201
  %cond.i203 = phi i32 [ %add14.i200, %cond.true.i201 ], [ %136, %cond.false.i202 ], !dbg !8289
  store i32 %cond.i203, i32* %re_index.i155, align 4, !dbg !8290
  %137 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i150, align 8, !dbg !8291
  %buffer15.i204 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %137, i32 0, i32 0, !dbg !8292
  %138 = load i8*, i8** %buffer15.i204, align 8, !dbg !8292
  %139 = load i32, i32* %re_index.i155, align 4, !dbg !8293
  %shr16.i205 = lshr i32 %139, 3, !dbg !8294
  %idx.ext17.i206 = zext i32 %shr16.i205 to i64, !dbg !8295
  %add.ptr18.i207 = getelementptr inbounds i8, i8* %138, i64 %idx.ext17.i206, !dbg !8295
  %140 = bitcast i8* %add.ptr18.i207 to %union.unaligned_32*, !dbg !8296
  %l19.i208 = bitcast %union.unaligned_32* %140 to i32*, !dbg !8296
  %141 = load i32, i32* %l19.i208, align 1, !dbg !8296
  store i32 %141, i32* %x.addr.i81.i148, align 4, !dbg !8297
  %142 = load i32, i32* %x.addr.i81.i148, align 4, !dbg !8298
  %shl.i82.i209 = shl i32 %142, 8, !dbg !8299
  %and.i83.i210 = and i32 %shl.i82.i209, 65280, !dbg !8300
  %143 = load i32, i32* %x.addr.i81.i148, align 4, !dbg !8301
  %shr.i84.i211 = lshr i32 %143, 8, !dbg !8302
  %and1.i85.i212 = and i32 %shr.i84.i211, 255, !dbg !8303
  %or.i86.i213 = or i32 %and.i83.i210, %and1.i85.i212, !dbg !8304
  %shl2.i87.i214 = shl i32 %or.i86.i213, 16, !dbg !8305
  %144 = load i32, i32* %x.addr.i81.i148, align 4, !dbg !8306
  %shr3.i88.i215 = lshr i32 %144, 16, !dbg !8307
  %shl4.i89.i216 = shl i32 %shr3.i88.i215, 8, !dbg !8308
  %and5.i90.i217 = and i32 %shl4.i89.i216, 65280, !dbg !8309
  %145 = load i32, i32* %x.addr.i81.i148, align 4, !dbg !8310
  %shr6.i91.i218 = lshr i32 %145, 16, !dbg !8311
  %shr7.i92.i219 = lshr i32 %shr6.i91.i218, 8, !dbg !8312
  %and8.i93.i220 = and i32 %shr7.i92.i219, 255, !dbg !8313
  %or9.i94.i221 = or i32 %and5.i90.i217, %and8.i93.i220, !dbg !8314
  %or10.i95.i222 = or i32 %shl2.i87.i214, %or9.i94.i221, !dbg !8315
  %146 = load i32, i32* %re_index.i155, align 4, !dbg !8316
  %and21.i223 = and i32 %146, 7, !dbg !8317
  %shl22.i224 = shl i32 %or10.i95.i222, %and21.i223, !dbg !8318
  store i32 %shl22.i224, i32* %re_cache.i156, align 4, !dbg !8319
  %147 = load i32, i32* %n.i158, align 4, !dbg !8320
  %sub.i225 = sub nsw i32 0, %147, !dbg !8321
  store i32 %sub.i225, i32* %nb_bits.i159, align 4, !dbg !8322
  %148 = load i32, i32* %re_cache.i156, align 4, !dbg !8323
  %149 = load i32, i32* %nb_bits.i159, align 4, !dbg !8324
  %conv23.i226 = trunc i32 %149 to i8, !dbg !8324
  %call24.i227 = call i32 @NEG_USR32(i32 %148, i8 signext %conv23.i226) #9, !dbg !8325
  %150 = load i32, i32* %code.i154, align 4, !dbg !8326
  %add25.i228 = add i32 %call24.i227, %150, !dbg !8327
  store i32 %add25.i228, i32* %index1.i160, align 4, !dbg !8328
  %151 = load i32, i32* %index1.i160, align 4, !dbg !8329
  %idxprom26.i229 = zext i32 %151 to i64, !dbg !8330
  %152 = load [2 x i16]*, [2 x i16]** %table.addr.i151, align 8, !dbg !8330
  %arrayidx27.i230 = getelementptr inbounds [2 x i16], [2 x i16]* %152, i64 %idxprom26.i229, !dbg !8330
  %arrayidx28.i231 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i230, i64 0, i64 0, !dbg !8330
  %153 = load i16, i16* %arrayidx28.i231, align 2, !dbg !8330
  %conv29.i232 = sext i16 %153 to i32, !dbg !8330
  store i32 %conv29.i232, i32* %code.i154, align 4, !dbg !8331
  %154 = load i32, i32* %index1.i160, align 4, !dbg !8332
  %idxprom30.i233 = zext i32 %154 to i64, !dbg !8333
  %155 = load [2 x i16]*, [2 x i16]** %table.addr.i151, align 8, !dbg !8333
  %arrayidx31.i234 = getelementptr inbounds [2 x i16], [2 x i16]* %155, i64 %idxprom30.i233, !dbg !8333
  %arrayidx32.i235 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i234, i64 0, i64 1, !dbg !8333
  %156 = load i16, i16* %arrayidx32.i235, align 2, !dbg !8333
  %conv33.i236 = sext i16 %156 to i32, !dbg !8333
  store i32 %conv33.i236, i32* %n.i158, align 4, !dbg !8334
  %157 = load i32, i32* %max_depth.addr.i153, align 4, !dbg !8335
  %cmp34.i237 = icmp sgt i32 %157, 2, !dbg !8336
  br i1 %cmp34.i237, label %land.lhs.true36.i240, label %if.end.i282, !dbg !8337

land.lhs.true36.i240:                             ; preds = %cond.end.i238
  %158 = load i32, i32* %n.i158, align 4, !dbg !8338
  %cmp37.i239 = icmp slt i32 %158, 0, !dbg !8339
  br i1 %cmp37.i239, label %if.then39.i243, label %if.end.i282, !dbg !8340

if.then39.i243:                                   ; preds = %land.lhs.true36.i240
  %159 = load i32, i32* %re_size_plus8.i157, align 4, !dbg !8341
  %160 = load i32, i32* %re_index.i155, align 4, !dbg !8342
  %161 = load i32, i32* %nb_bits.i159, align 4, !dbg !8343
  %add40.i241 = add i32 %160, %161, !dbg !8344
  %cmp41.i242 = icmp ugt i32 %159, %add40.i241, !dbg !8345
  br i1 %cmp41.i242, label %cond.true43.i245, label %cond.false45.i246, !dbg !8346

cond.true43.i245:                                 ; preds = %if.then39.i243
  %162 = load i32, i32* %re_index.i155, align 4, !dbg !8347
  %163 = load i32, i32* %nb_bits.i159, align 4, !dbg !8348
  %add44.i244 = add i32 %162, %163, !dbg !8349
  br label %cond.end46.i281, !dbg !8350

cond.false45.i246:                                ; preds = %if.then39.i243
  %164 = load i32, i32* %re_size_plus8.i157, align 4, !dbg !8351
  br label %cond.end46.i281, !dbg !8352

cond.end46.i281:                                  ; preds = %cond.false45.i246, %cond.true43.i245
  %cond47.i247 = phi i32 [ %add44.i244, %cond.true43.i245 ], [ %164, %cond.false45.i246 ], !dbg !8353
  store i32 %cond47.i247, i32* %re_index.i155, align 4, !dbg !8354
  %165 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i150, align 8, !dbg !8355
  %buffer48.i248 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %165, i32 0, i32 0, !dbg !8356
  %166 = load i8*, i8** %buffer48.i248, align 8, !dbg !8356
  %167 = load i32, i32* %re_index.i155, align 4, !dbg !8357
  %shr49.i249 = lshr i32 %167, 3, !dbg !8358
  %idx.ext50.i250 = zext i32 %shr49.i249 to i64, !dbg !8359
  %add.ptr51.i251 = getelementptr inbounds i8, i8* %166, i64 %idx.ext50.i250, !dbg !8359
  %168 = bitcast i8* %add.ptr51.i251 to %union.unaligned_32*, !dbg !8360
  %l52.i252 = bitcast %union.unaligned_32* %168 to i32*, !dbg !8360
  %169 = load i32, i32* %l52.i252, align 1, !dbg !8360
  store i32 %169, i32* %x.addr.i96.i147, align 4, !dbg !8361
  %170 = load i32, i32* %x.addr.i96.i147, align 4, !dbg !8362
  %shl.i97.i253 = shl i32 %170, 8, !dbg !8363
  %and.i98.i254 = and i32 %shl.i97.i253, 65280, !dbg !8364
  %171 = load i32, i32* %x.addr.i96.i147, align 4, !dbg !8365
  %shr.i99.i255 = lshr i32 %171, 8, !dbg !8366
  %and1.i100.i256 = and i32 %shr.i99.i255, 255, !dbg !8367
  %or.i101.i257 = or i32 %and.i98.i254, %and1.i100.i256, !dbg !8368
  %shl2.i102.i258 = shl i32 %or.i101.i257, 16, !dbg !8369
  %172 = load i32, i32* %x.addr.i96.i147, align 4, !dbg !8370
  %shr3.i103.i259 = lshr i32 %172, 16, !dbg !8371
  %shl4.i104.i260 = shl i32 %shr3.i103.i259, 8, !dbg !8372
  %and5.i105.i261 = and i32 %shl4.i104.i260, 65280, !dbg !8373
  %173 = load i32, i32* %x.addr.i96.i147, align 4, !dbg !8374
  %shr6.i106.i262 = lshr i32 %173, 16, !dbg !8375
  %shr7.i107.i263 = lshr i32 %shr6.i106.i262, 8, !dbg !8376
  %and8.i108.i264 = and i32 %shr7.i107.i263, 255, !dbg !8377
  %or9.i109.i265 = or i32 %and5.i105.i261, %and8.i108.i264, !dbg !8378
  %or10.i110.i266 = or i32 %shl2.i102.i258, %or9.i109.i265, !dbg !8379
  %174 = load i32, i32* %re_index.i155, align 4, !dbg !8380
  %and54.i267 = and i32 %174, 7, !dbg !8381
  %shl55.i268 = shl i32 %or10.i110.i266, %and54.i267, !dbg !8382
  store i32 %shl55.i268, i32* %re_cache.i156, align 4, !dbg !8383
  %175 = load i32, i32* %n.i158, align 4, !dbg !8384
  %sub56.i269 = sub nsw i32 0, %175, !dbg !8385
  store i32 %sub56.i269, i32* %nb_bits.i159, align 4, !dbg !8386
  %176 = load i32, i32* %re_cache.i156, align 4, !dbg !8387
  %177 = load i32, i32* %nb_bits.i159, align 4, !dbg !8388
  %conv57.i270 = trunc i32 %177 to i8, !dbg !8388
  %call58.i271 = call i32 @NEG_USR32(i32 %176, i8 signext %conv57.i270) #9, !dbg !8389
  %178 = load i32, i32* %code.i154, align 4, !dbg !8390
  %add59.i272 = add i32 %call58.i271, %178, !dbg !8391
  store i32 %add59.i272, i32* %index1.i160, align 4, !dbg !8392
  %179 = load i32, i32* %index1.i160, align 4, !dbg !8393
  %idxprom60.i273 = zext i32 %179 to i64, !dbg !8394
  %180 = load [2 x i16]*, [2 x i16]** %table.addr.i151, align 8, !dbg !8394
  %arrayidx61.i274 = getelementptr inbounds [2 x i16], [2 x i16]* %180, i64 %idxprom60.i273, !dbg !8394
  %arrayidx62.i275 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i274, i64 0, i64 0, !dbg !8394
  %181 = load i16, i16* %arrayidx62.i275, align 2, !dbg !8394
  %conv63.i276 = sext i16 %181 to i32, !dbg !8394
  store i32 %conv63.i276, i32* %code.i154, align 4, !dbg !8395
  %182 = load i32, i32* %index1.i160, align 4, !dbg !8396
  %idxprom64.i277 = zext i32 %182 to i64, !dbg !8397
  %183 = load [2 x i16]*, [2 x i16]** %table.addr.i151, align 8, !dbg !8397
  %arrayidx65.i278 = getelementptr inbounds [2 x i16], [2 x i16]* %183, i64 %idxprom64.i277, !dbg !8397
  %arrayidx66.i279 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i278, i64 0, i64 1, !dbg !8397
  %184 = load i16, i16* %arrayidx66.i279, align 2, !dbg !8397
  %conv67.i280 = sext i16 %184 to i32, !dbg !8397
  store i32 %conv67.i280, i32* %n.i158, align 4, !dbg !8398
  br label %if.end.i282, !dbg !8399

if.end.i282:                                      ; preds = %cond.end46.i281, %land.lhs.true36.i240, %cond.end.i238
  br label %if.end68.i283, !dbg !8400

if.end68.i283:                                    ; preds = %if.end.i282, %land.lhs.true.i196, %for.body
  %185 = load i32, i32* %n.i158, align 4, !dbg !8401
  %186 = load i32, i32* %re_cache.i156, align 4, !dbg !8402
  %shl70.i284 = shl i32 %186, %185, !dbg !8402
  store i32 %shl70.i284, i32* %re_cache.i156, align 4, !dbg !8402
  %187 = load i32, i32* %re_size_plus8.i157, align 4, !dbg !8403
  %188 = load i32, i32* %re_index.i155, align 4, !dbg !8404
  %189 = load i32, i32* %n.i158, align 4, !dbg !8405
  %add71.i285 = add i32 %188, %189, !dbg !8406
  %cmp72.i286 = icmp ugt i32 %187, %add71.i285, !dbg !8407
  br i1 %cmp72.i286, label %cond.true74.i288, label %cond.false76.i289, !dbg !8408

cond.true74.i288:                                 ; preds = %if.end68.i283
  %190 = load i32, i32* %re_index.i155, align 4, !dbg !8409
  %191 = load i32, i32* %n.i158, align 4, !dbg !8410
  %add75.i287 = add i32 %190, %191, !dbg !8411
  br label %get_vlc2.exit292, !dbg !8412

cond.false76.i289:                                ; preds = %if.end68.i283
  %192 = load i32, i32* %re_size_plus8.i157, align 4, !dbg !8413
  br label %get_vlc2.exit292, !dbg !8414

get_vlc2.exit292:                                 ; preds = %cond.true74.i288, %cond.false76.i289
  %cond78.i290 = phi i32 [ %add75.i287, %cond.true74.i288 ], [ %192, %cond.false76.i289 ], !dbg !8415
  store i32 %cond78.i290, i32* %re_index.i155, align 4, !dbg !8416
  %193 = load i32, i32* %re_index.i155, align 4, !dbg !8417
  %194 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i150, align 8, !dbg !8418
  %index80.i291 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %194, i32 0, i32 2, !dbg !8419
  store i32 %193, i32* %index80.i291, align 8, !dbg !8420
  %195 = load i32, i32* %code.i154, align 4, !dbg !8421
  store i32 %195, i32* %idx, align 4, !dbg !8422
  %196 = load i32, i32* %idx, align 4, !dbg !8423
  %cmp16 = icmp eq i32 %196, 136, !dbg !8424
  br i1 %cmp16, label %if.then18, label %if.else46, !dbg !8425

if.then18:                                        ; preds = %get_vlc2.exit292
  call void @llvm.dbg.declare(metadata i32* %v0, metadata !8426, metadata !2019), !dbg !8427
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !8428, metadata !2019), !dbg !8429
  %197 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8430
  %gb19 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %197, i32 0, i32 34, !dbg !8431
  %198 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vec1_vlc, i32 0, i32 1), align 8, !dbg !8432
  store %struct.GetBitContext* %gb19, %struct.GetBitContext** %s.addr.i296, align 8, !dbg !8433
  store [2 x i16]* %198, [2 x i16]** %table.addr.i297, align 8, !dbg !8433
  store i32 9, i32* %bits.addr.i298, align 4, !dbg !8433
  store i32 2, i32* %max_depth.addr.i299, align 4, !dbg !8433
  %199 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i296, align 8, !dbg !8434
  %index.i307 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %199, i32 0, i32 2, !dbg !8435
  %200 = load i32, i32* %index.i307, align 8, !dbg !8435
  store i32 %200, i32* %re_index.i301, align 4, !dbg !7905
  %201 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i296, align 8, !dbg !8436
  %size_in_bits_plus8.i308 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %201, i32 0, i32 4, !dbg !8437
  %202 = load i32, i32* %size_in_bits_plus8.i308, align 8, !dbg !8437
  store i32 %202, i32* %re_size_plus8.i303, align 4, !dbg !7907
  %203 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i296, align 8, !dbg !8438
  %buffer.i309 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %203, i32 0, i32 0, !dbg !8439
  %204 = load i8*, i8** %buffer.i309, align 8, !dbg !8439
  %205 = load i32, i32* %re_index.i301, align 4, !dbg !8440
  %shr.i310 = lshr i32 %205, 3, !dbg !8441
  %idx.ext.i311 = zext i32 %shr.i310 to i64, !dbg !8442
  %add.ptr.i312 = getelementptr inbounds i8, i8* %204, i64 %idx.ext.i311, !dbg !8442
  %206 = bitcast i8* %add.ptr.i312 to %union.unaligned_32*, !dbg !8443
  %l.i313 = bitcast %union.unaligned_32* %206 to i32*, !dbg !8443
  %207 = load i32, i32* %l.i313, align 1, !dbg !8443
  store i32 %207, i32* %x.addr.i.i295, align 4, !dbg !8444
  %208 = load i32, i32* %x.addr.i.i295, align 4, !dbg !8445
  %shl.i.i314 = shl i32 %208, 8, !dbg !8446
  %and.i.i315 = and i32 %shl.i.i314, 65280, !dbg !8447
  %209 = load i32, i32* %x.addr.i.i295, align 4, !dbg !8448
  %shr.i.i316 = lshr i32 %209, 8, !dbg !8449
  %and1.i.i317 = and i32 %shr.i.i316, 255, !dbg !8450
  %or.i.i318 = or i32 %and.i.i315, %and1.i.i317, !dbg !8451
  %shl2.i.i319 = shl i32 %or.i.i318, 16, !dbg !8452
  %210 = load i32, i32* %x.addr.i.i295, align 4, !dbg !8453
  %shr3.i.i320 = lshr i32 %210, 16, !dbg !8454
  %shl4.i.i321 = shl i32 %shr3.i.i320, 8, !dbg !8455
  %and5.i.i322 = and i32 %shl4.i.i321, 65280, !dbg !8456
  %211 = load i32, i32* %x.addr.i.i295, align 4, !dbg !8457
  %shr6.i.i323 = lshr i32 %211, 16, !dbg !8458
  %shr7.i.i324 = lshr i32 %shr6.i.i323, 8, !dbg !8459
  %and8.i.i325 = and i32 %shr7.i.i324, 255, !dbg !8460
  %or9.i.i326 = or i32 %and5.i.i322, %and8.i.i325, !dbg !8461
  %or10.i.i327 = or i32 %shl2.i.i319, %or9.i.i326, !dbg !8462
  %212 = load i32, i32* %re_index.i301, align 4, !dbg !8463
  %and.i328 = and i32 %212, 7, !dbg !8464
  %shl.i329 = shl i32 %or10.i.i327, %and.i328, !dbg !8465
  store i32 %shl.i329, i32* %re_cache.i302, align 4, !dbg !8466
  %213 = load i32, i32* %re_cache.i302, align 4, !dbg !8467
  %214 = load i32, i32* %bits.addr.i298, align 4, !dbg !8468
  %conv.i330 = trunc i32 %214 to i8, !dbg !8468
  %call2.i331 = call i32 @NEG_USR32(i32 %213, i8 signext %conv.i330) #9, !dbg !8469
  store i32 %call2.i331, i32* %index1.i306, align 4, !dbg !8470
  %215 = load i32, i32* %index1.i306, align 4, !dbg !8471
  %idxprom.i332 = zext i32 %215 to i64, !dbg !8472
  %216 = load [2 x i16]*, [2 x i16]** %table.addr.i297, align 8, !dbg !8472
  %arrayidx.i333 = getelementptr inbounds [2 x i16], [2 x i16]* %216, i64 %idxprom.i332, !dbg !8472
  %arrayidx3.i334 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i333, i64 0, i64 0, !dbg !8472
  %217 = load i16, i16* %arrayidx3.i334, align 2, !dbg !8472
  %conv4.i335 = sext i16 %217 to i32, !dbg !8472
  store i32 %conv4.i335, i32* %code.i300, align 4, !dbg !8473
  %218 = load i32, i32* %index1.i306, align 4, !dbg !8474
  %idxprom5.i336 = zext i32 %218 to i64, !dbg !8475
  %219 = load [2 x i16]*, [2 x i16]** %table.addr.i297, align 8, !dbg !8475
  %arrayidx6.i337 = getelementptr inbounds [2 x i16], [2 x i16]* %219, i64 %idxprom5.i336, !dbg !8475
  %arrayidx7.i338 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i337, i64 0, i64 1, !dbg !8475
  %220 = load i16, i16* %arrayidx7.i338, align 2, !dbg !8475
  %conv8.i339 = sext i16 %220 to i32, !dbg !8475
  store i32 %conv8.i339, i32* %n.i304, align 4, !dbg !8476
  %221 = load i32, i32* %max_depth.addr.i299, align 4, !dbg !8477
  %cmp.i340 = icmp sgt i32 %221, 1, !dbg !8478
  br i1 %cmp.i340, label %land.lhs.true.i342, label %if.end68.i429, !dbg !8479

land.lhs.true.i342:                               ; preds = %if.then18
  %222 = load i32, i32* %n.i304, align 4, !dbg !8480
  %cmp10.i341 = icmp slt i32 %222, 0, !dbg !8481
  br i1 %cmp10.i341, label %if.then.i345, label %if.end68.i429, !dbg !8482

if.then.i345:                                     ; preds = %land.lhs.true.i342
  %223 = load i32, i32* %re_size_plus8.i303, align 4, !dbg !8483
  %224 = load i32, i32* %re_index.i301, align 4, !dbg !8484
  %225 = load i32, i32* %bits.addr.i298, align 4, !dbg !8485
  %add.i343 = add i32 %224, %225, !dbg !8486
  %cmp12.i344 = icmp ugt i32 %223, %add.i343, !dbg !8487
  br i1 %cmp12.i344, label %cond.true.i347, label %cond.false.i348, !dbg !8488

cond.true.i347:                                   ; preds = %if.then.i345
  %226 = load i32, i32* %re_index.i301, align 4, !dbg !8489
  %227 = load i32, i32* %bits.addr.i298, align 4, !dbg !8490
  %add14.i346 = add i32 %226, %227, !dbg !8491
  br label %cond.end.i384, !dbg !8492

cond.false.i348:                                  ; preds = %if.then.i345
  %228 = load i32, i32* %re_size_plus8.i303, align 4, !dbg !8493
  br label %cond.end.i384, !dbg !8494

cond.end.i384:                                    ; preds = %cond.false.i348, %cond.true.i347
  %cond.i349 = phi i32 [ %add14.i346, %cond.true.i347 ], [ %228, %cond.false.i348 ], !dbg !8495
  store i32 %cond.i349, i32* %re_index.i301, align 4, !dbg !8496
  %229 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i296, align 8, !dbg !8497
  %buffer15.i350 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %229, i32 0, i32 0, !dbg !8498
  %230 = load i8*, i8** %buffer15.i350, align 8, !dbg !8498
  %231 = load i32, i32* %re_index.i301, align 4, !dbg !8499
  %shr16.i351 = lshr i32 %231, 3, !dbg !8500
  %idx.ext17.i352 = zext i32 %shr16.i351 to i64, !dbg !8501
  %add.ptr18.i353 = getelementptr inbounds i8, i8* %230, i64 %idx.ext17.i352, !dbg !8501
  %232 = bitcast i8* %add.ptr18.i353 to %union.unaligned_32*, !dbg !8502
  %l19.i354 = bitcast %union.unaligned_32* %232 to i32*, !dbg !8502
  %233 = load i32, i32* %l19.i354, align 1, !dbg !8502
  store i32 %233, i32* %x.addr.i81.i294, align 4, !dbg !8503
  %234 = load i32, i32* %x.addr.i81.i294, align 4, !dbg !8504
  %shl.i82.i355 = shl i32 %234, 8, !dbg !8505
  %and.i83.i356 = and i32 %shl.i82.i355, 65280, !dbg !8506
  %235 = load i32, i32* %x.addr.i81.i294, align 4, !dbg !8507
  %shr.i84.i357 = lshr i32 %235, 8, !dbg !8508
  %and1.i85.i358 = and i32 %shr.i84.i357, 255, !dbg !8509
  %or.i86.i359 = or i32 %and.i83.i356, %and1.i85.i358, !dbg !8510
  %shl2.i87.i360 = shl i32 %or.i86.i359, 16, !dbg !8511
  %236 = load i32, i32* %x.addr.i81.i294, align 4, !dbg !8512
  %shr3.i88.i361 = lshr i32 %236, 16, !dbg !8513
  %shl4.i89.i362 = shl i32 %shr3.i88.i361, 8, !dbg !8514
  %and5.i90.i363 = and i32 %shl4.i89.i362, 65280, !dbg !8515
  %237 = load i32, i32* %x.addr.i81.i294, align 4, !dbg !8516
  %shr6.i91.i364 = lshr i32 %237, 16, !dbg !8517
  %shr7.i92.i365 = lshr i32 %shr6.i91.i364, 8, !dbg !8518
  %and8.i93.i366 = and i32 %shr7.i92.i365, 255, !dbg !8519
  %or9.i94.i367 = or i32 %and5.i90.i363, %and8.i93.i366, !dbg !8520
  %or10.i95.i368 = or i32 %shl2.i87.i360, %or9.i94.i367, !dbg !8521
  %238 = load i32, i32* %re_index.i301, align 4, !dbg !8522
  %and21.i369 = and i32 %238, 7, !dbg !8523
  %shl22.i370 = shl i32 %or10.i95.i368, %and21.i369, !dbg !8524
  store i32 %shl22.i370, i32* %re_cache.i302, align 4, !dbg !8525
  %239 = load i32, i32* %n.i304, align 4, !dbg !8526
  %sub.i371 = sub nsw i32 0, %239, !dbg !8527
  store i32 %sub.i371, i32* %nb_bits.i305, align 4, !dbg !8528
  %240 = load i32, i32* %re_cache.i302, align 4, !dbg !8529
  %241 = load i32, i32* %nb_bits.i305, align 4, !dbg !8530
  %conv23.i372 = trunc i32 %241 to i8, !dbg !8530
  %call24.i373 = call i32 @NEG_USR32(i32 %240, i8 signext %conv23.i372) #9, !dbg !8531
  %242 = load i32, i32* %code.i300, align 4, !dbg !8532
  %add25.i374 = add i32 %call24.i373, %242, !dbg !8533
  store i32 %add25.i374, i32* %index1.i306, align 4, !dbg !8534
  %243 = load i32, i32* %index1.i306, align 4, !dbg !8535
  %idxprom26.i375 = zext i32 %243 to i64, !dbg !8536
  %244 = load [2 x i16]*, [2 x i16]** %table.addr.i297, align 8, !dbg !8536
  %arrayidx27.i376 = getelementptr inbounds [2 x i16], [2 x i16]* %244, i64 %idxprom26.i375, !dbg !8536
  %arrayidx28.i377 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i376, i64 0, i64 0, !dbg !8536
  %245 = load i16, i16* %arrayidx28.i377, align 2, !dbg !8536
  %conv29.i378 = sext i16 %245 to i32, !dbg !8536
  store i32 %conv29.i378, i32* %code.i300, align 4, !dbg !8537
  %246 = load i32, i32* %index1.i306, align 4, !dbg !8538
  %idxprom30.i379 = zext i32 %246 to i64, !dbg !8539
  %247 = load [2 x i16]*, [2 x i16]** %table.addr.i297, align 8, !dbg !8539
  %arrayidx31.i380 = getelementptr inbounds [2 x i16], [2 x i16]* %247, i64 %idxprom30.i379, !dbg !8539
  %arrayidx32.i381 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i380, i64 0, i64 1, !dbg !8539
  %248 = load i16, i16* %arrayidx32.i381, align 2, !dbg !8539
  %conv33.i382 = sext i16 %248 to i32, !dbg !8539
  store i32 %conv33.i382, i32* %n.i304, align 4, !dbg !8540
  %249 = load i32, i32* %max_depth.addr.i299, align 4, !dbg !8541
  %cmp34.i383 = icmp sgt i32 %249, 2, !dbg !8542
  br i1 %cmp34.i383, label %land.lhs.true36.i386, label %if.end.i428, !dbg !8543

land.lhs.true36.i386:                             ; preds = %cond.end.i384
  %250 = load i32, i32* %n.i304, align 4, !dbg !8544
  %cmp37.i385 = icmp slt i32 %250, 0, !dbg !8545
  br i1 %cmp37.i385, label %if.then39.i389, label %if.end.i428, !dbg !8546

if.then39.i389:                                   ; preds = %land.lhs.true36.i386
  %251 = load i32, i32* %re_size_plus8.i303, align 4, !dbg !8547
  %252 = load i32, i32* %re_index.i301, align 4, !dbg !8548
  %253 = load i32, i32* %nb_bits.i305, align 4, !dbg !8549
  %add40.i387 = add i32 %252, %253, !dbg !8550
  %cmp41.i388 = icmp ugt i32 %251, %add40.i387, !dbg !8551
  br i1 %cmp41.i388, label %cond.true43.i391, label %cond.false45.i392, !dbg !8552

cond.true43.i391:                                 ; preds = %if.then39.i389
  %254 = load i32, i32* %re_index.i301, align 4, !dbg !8553
  %255 = load i32, i32* %nb_bits.i305, align 4, !dbg !8554
  %add44.i390 = add i32 %254, %255, !dbg !8555
  br label %cond.end46.i427, !dbg !8556

cond.false45.i392:                                ; preds = %if.then39.i389
  %256 = load i32, i32* %re_size_plus8.i303, align 4, !dbg !8557
  br label %cond.end46.i427, !dbg !8558

cond.end46.i427:                                  ; preds = %cond.false45.i392, %cond.true43.i391
  %cond47.i393 = phi i32 [ %add44.i390, %cond.true43.i391 ], [ %256, %cond.false45.i392 ], !dbg !8559
  store i32 %cond47.i393, i32* %re_index.i301, align 4, !dbg !8560
  %257 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i296, align 8, !dbg !8561
  %buffer48.i394 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %257, i32 0, i32 0, !dbg !8562
  %258 = load i8*, i8** %buffer48.i394, align 8, !dbg !8562
  %259 = load i32, i32* %re_index.i301, align 4, !dbg !8563
  %shr49.i395 = lshr i32 %259, 3, !dbg !8564
  %idx.ext50.i396 = zext i32 %shr49.i395 to i64, !dbg !8565
  %add.ptr51.i397 = getelementptr inbounds i8, i8* %258, i64 %idx.ext50.i396, !dbg !8565
  %260 = bitcast i8* %add.ptr51.i397 to %union.unaligned_32*, !dbg !8566
  %l52.i398 = bitcast %union.unaligned_32* %260 to i32*, !dbg !8566
  %261 = load i32, i32* %l52.i398, align 1, !dbg !8566
  store i32 %261, i32* %x.addr.i96.i293, align 4, !dbg !8567
  %262 = load i32, i32* %x.addr.i96.i293, align 4, !dbg !8568
  %shl.i97.i399 = shl i32 %262, 8, !dbg !8569
  %and.i98.i400 = and i32 %shl.i97.i399, 65280, !dbg !8570
  %263 = load i32, i32* %x.addr.i96.i293, align 4, !dbg !8571
  %shr.i99.i401 = lshr i32 %263, 8, !dbg !8572
  %and1.i100.i402 = and i32 %shr.i99.i401, 255, !dbg !8573
  %or.i101.i403 = or i32 %and.i98.i400, %and1.i100.i402, !dbg !8574
  %shl2.i102.i404 = shl i32 %or.i101.i403, 16, !dbg !8575
  %264 = load i32, i32* %x.addr.i96.i293, align 4, !dbg !8576
  %shr3.i103.i405 = lshr i32 %264, 16, !dbg !8577
  %shl4.i104.i406 = shl i32 %shr3.i103.i405, 8, !dbg !8578
  %and5.i105.i407 = and i32 %shl4.i104.i406, 65280, !dbg !8579
  %265 = load i32, i32* %x.addr.i96.i293, align 4, !dbg !8580
  %shr6.i106.i408 = lshr i32 %265, 16, !dbg !8581
  %shr7.i107.i409 = lshr i32 %shr6.i106.i408, 8, !dbg !8582
  %and8.i108.i410 = and i32 %shr7.i107.i409, 255, !dbg !8583
  %or9.i109.i411 = or i32 %and5.i105.i407, %and8.i108.i410, !dbg !8584
  %or10.i110.i412 = or i32 %shl2.i102.i404, %or9.i109.i411, !dbg !8585
  %266 = load i32, i32* %re_index.i301, align 4, !dbg !8586
  %and54.i413 = and i32 %266, 7, !dbg !8587
  %shl55.i414 = shl i32 %or10.i110.i412, %and54.i413, !dbg !8588
  store i32 %shl55.i414, i32* %re_cache.i302, align 4, !dbg !8589
  %267 = load i32, i32* %n.i304, align 4, !dbg !8590
  %sub56.i415 = sub nsw i32 0, %267, !dbg !8591
  store i32 %sub56.i415, i32* %nb_bits.i305, align 4, !dbg !8592
  %268 = load i32, i32* %re_cache.i302, align 4, !dbg !8593
  %269 = load i32, i32* %nb_bits.i305, align 4, !dbg !8594
  %conv57.i416 = trunc i32 %269 to i8, !dbg !8594
  %call58.i417 = call i32 @NEG_USR32(i32 %268, i8 signext %conv57.i416) #9, !dbg !8595
  %270 = load i32, i32* %code.i300, align 4, !dbg !8596
  %add59.i418 = add i32 %call58.i417, %270, !dbg !8597
  store i32 %add59.i418, i32* %index1.i306, align 4, !dbg !8598
  %271 = load i32, i32* %index1.i306, align 4, !dbg !8599
  %idxprom60.i419 = zext i32 %271 to i64, !dbg !8600
  %272 = load [2 x i16]*, [2 x i16]** %table.addr.i297, align 8, !dbg !8600
  %arrayidx61.i420 = getelementptr inbounds [2 x i16], [2 x i16]* %272, i64 %idxprom60.i419, !dbg !8600
  %arrayidx62.i421 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i420, i64 0, i64 0, !dbg !8600
  %273 = load i16, i16* %arrayidx62.i421, align 2, !dbg !8600
  %conv63.i422 = sext i16 %273 to i32, !dbg !8600
  store i32 %conv63.i422, i32* %code.i300, align 4, !dbg !8601
  %274 = load i32, i32* %index1.i306, align 4, !dbg !8602
  %idxprom64.i423 = zext i32 %274 to i64, !dbg !8603
  %275 = load [2 x i16]*, [2 x i16]** %table.addr.i297, align 8, !dbg !8603
  %arrayidx65.i424 = getelementptr inbounds [2 x i16], [2 x i16]* %275, i64 %idxprom64.i423, !dbg !8603
  %arrayidx66.i425 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i424, i64 0, i64 1, !dbg !8603
  %276 = load i16, i16* %arrayidx66.i425, align 2, !dbg !8603
  %conv67.i426 = sext i16 %276 to i32, !dbg !8603
  store i32 %conv67.i426, i32* %n.i304, align 4, !dbg !8604
  br label %if.end.i428, !dbg !8605

if.end.i428:                                      ; preds = %cond.end46.i427, %land.lhs.true36.i386, %cond.end.i384
  br label %if.end68.i429, !dbg !8606

if.end68.i429:                                    ; preds = %if.end.i428, %land.lhs.true.i342, %if.then18
  %277 = load i32, i32* %n.i304, align 4, !dbg !8607
  %278 = load i32, i32* %re_cache.i302, align 4, !dbg !8608
  %shl70.i430 = shl i32 %278, %277, !dbg !8608
  store i32 %shl70.i430, i32* %re_cache.i302, align 4, !dbg !8608
  %279 = load i32, i32* %re_size_plus8.i303, align 4, !dbg !8609
  %280 = load i32, i32* %re_index.i301, align 4, !dbg !8610
  %281 = load i32, i32* %n.i304, align 4, !dbg !8611
  %add71.i431 = add i32 %280, %281, !dbg !8612
  %cmp72.i432 = icmp ugt i32 %279, %add71.i431, !dbg !8613
  br i1 %cmp72.i432, label %cond.true74.i434, label %cond.false76.i435, !dbg !8614

cond.true74.i434:                                 ; preds = %if.end68.i429
  %282 = load i32, i32* %re_index.i301, align 4, !dbg !8615
  %283 = load i32, i32* %n.i304, align 4, !dbg !8616
  %add75.i433 = add i32 %282, %283, !dbg !8617
  br label %get_vlc2.exit438, !dbg !8618

cond.false76.i435:                                ; preds = %if.end68.i429
  %284 = load i32, i32* %re_size_plus8.i303, align 4, !dbg !8619
  br label %get_vlc2.exit438, !dbg !8620

get_vlc2.exit438:                                 ; preds = %cond.true74.i434, %cond.false76.i435
  %cond78.i436 = phi i32 [ %add75.i433, %cond.true74.i434 ], [ %284, %cond.false76.i435 ], !dbg !8621
  store i32 %cond78.i436, i32* %re_index.i301, align 4, !dbg !8622
  %285 = load i32, i32* %re_index.i301, align 4, !dbg !8623
  %286 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i296, align 8, !dbg !8624
  %index80.i437 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %286, i32 0, i32 2, !dbg !8625
  store i32 %285, i32* %index80.i437, align 8, !dbg !8626
  %287 = load i32, i32* %code.i300, align 4, !dbg !8627
  store i32 %287, i32* %v0, align 4, !dbg !8628
  %288 = load i32, i32* %v0, align 4, !dbg !8629
  %cmp21 = icmp eq i32 %288, 100, !dbg !8631
  br i1 %cmp21, label %if.then23, label %if.end27, !dbg !8632

if.then23:                                        ; preds = %get_vlc2.exit438
  %289 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8633
  %gb24 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %289, i32 0, i32 34, !dbg !8634
  %call25 = call i32 @ff_wma_get_large_val(%struct.GetBitContext* %gb24), !dbg !8635
  %290 = load i32, i32* %v0, align 4, !dbg !8636
  %add26 = add i32 %290, %call25, !dbg !8636
  store i32 %add26, i32* %v0, align 4, !dbg !8636
  br label %if.end27, !dbg !8637

if.end27:                                         ; preds = %if.then23, %get_vlc2.exit438
  %291 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8638
  %gb28 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %291, i32 0, i32 34, !dbg !8639
  %292 = load [2 x i16]*, [2 x i16]** getelementptr inbounds (%struct.VLC, %struct.VLC* @vec1_vlc, i32 0, i32 1), align 8, !dbg !8640
  store %struct.GetBitContext* %gb28, %struct.GetBitContext** %s.addr.i442, align 8, !dbg !8641
  store [2 x i16]* %292, [2 x i16]** %table.addr.i443, align 8, !dbg !8641
  store i32 9, i32* %bits.addr.i444, align 4, !dbg !8641
  store i32 2, i32* %max_depth.addr.i445, align 4, !dbg !8641
  %293 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i442, align 8, !dbg !8642
  %index.i453 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %293, i32 0, i32 2, !dbg !8643
  %294 = load i32, i32* %index.i453, align 8, !dbg !8643
  store i32 %294, i32* %re_index.i447, align 4, !dbg !7887
  %295 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i442, align 8, !dbg !8644
  %size_in_bits_plus8.i454 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %295, i32 0, i32 4, !dbg !8645
  %296 = load i32, i32* %size_in_bits_plus8.i454, align 8, !dbg !8645
  store i32 %296, i32* %re_size_plus8.i449, align 4, !dbg !7889
  %297 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i442, align 8, !dbg !8646
  %buffer.i455 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %297, i32 0, i32 0, !dbg !8647
  %298 = load i8*, i8** %buffer.i455, align 8, !dbg !8647
  %299 = load i32, i32* %re_index.i447, align 4, !dbg !8648
  %shr.i456 = lshr i32 %299, 3, !dbg !8649
  %idx.ext.i457 = zext i32 %shr.i456 to i64, !dbg !8650
  %add.ptr.i458 = getelementptr inbounds i8, i8* %298, i64 %idx.ext.i457, !dbg !8650
  %300 = bitcast i8* %add.ptr.i458 to %union.unaligned_32*, !dbg !8651
  %l.i459 = bitcast %union.unaligned_32* %300 to i32*, !dbg !8651
  %301 = load i32, i32* %l.i459, align 1, !dbg !8651
  store i32 %301, i32* %x.addr.i.i441, align 4, !dbg !8652
  %302 = load i32, i32* %x.addr.i.i441, align 4, !dbg !8653
  %shl.i.i460 = shl i32 %302, 8, !dbg !8654
  %and.i.i461 = and i32 %shl.i.i460, 65280, !dbg !8655
  %303 = load i32, i32* %x.addr.i.i441, align 4, !dbg !8656
  %shr.i.i462 = lshr i32 %303, 8, !dbg !8657
  %and1.i.i463 = and i32 %shr.i.i462, 255, !dbg !8658
  %or.i.i464 = or i32 %and.i.i461, %and1.i.i463, !dbg !8659
  %shl2.i.i465 = shl i32 %or.i.i464, 16, !dbg !8660
  %304 = load i32, i32* %x.addr.i.i441, align 4, !dbg !8661
  %shr3.i.i466 = lshr i32 %304, 16, !dbg !8662
  %shl4.i.i467 = shl i32 %shr3.i.i466, 8, !dbg !8663
  %and5.i.i468 = and i32 %shl4.i.i467, 65280, !dbg !8664
  %305 = load i32, i32* %x.addr.i.i441, align 4, !dbg !8665
  %shr6.i.i469 = lshr i32 %305, 16, !dbg !8666
  %shr7.i.i470 = lshr i32 %shr6.i.i469, 8, !dbg !8667
  %and8.i.i471 = and i32 %shr7.i.i470, 255, !dbg !8668
  %or9.i.i472 = or i32 %and5.i.i468, %and8.i.i471, !dbg !8669
  %or10.i.i473 = or i32 %shl2.i.i465, %or9.i.i472, !dbg !8670
  %306 = load i32, i32* %re_index.i447, align 4, !dbg !8671
  %and.i474 = and i32 %306, 7, !dbg !8672
  %shl.i475 = shl i32 %or10.i.i473, %and.i474, !dbg !8673
  store i32 %shl.i475, i32* %re_cache.i448, align 4, !dbg !8674
  %307 = load i32, i32* %re_cache.i448, align 4, !dbg !8675
  %308 = load i32, i32* %bits.addr.i444, align 4, !dbg !8676
  %conv.i476 = trunc i32 %308 to i8, !dbg !8676
  %call2.i477 = call i32 @NEG_USR32(i32 %307, i8 signext %conv.i476) #9, !dbg !8677
  store i32 %call2.i477, i32* %index1.i452, align 4, !dbg !8678
  %309 = load i32, i32* %index1.i452, align 4, !dbg !8679
  %idxprom.i478 = zext i32 %309 to i64, !dbg !8680
  %310 = load [2 x i16]*, [2 x i16]** %table.addr.i443, align 8, !dbg !8680
  %arrayidx.i479 = getelementptr inbounds [2 x i16], [2 x i16]* %310, i64 %idxprom.i478, !dbg !8680
  %arrayidx3.i480 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i479, i64 0, i64 0, !dbg !8680
  %311 = load i16, i16* %arrayidx3.i480, align 2, !dbg !8680
  %conv4.i481 = sext i16 %311 to i32, !dbg !8680
  store i32 %conv4.i481, i32* %code.i446, align 4, !dbg !8681
  %312 = load i32, i32* %index1.i452, align 4, !dbg !8682
  %idxprom5.i482 = zext i32 %312 to i64, !dbg !8683
  %313 = load [2 x i16]*, [2 x i16]** %table.addr.i443, align 8, !dbg !8683
  %arrayidx6.i483 = getelementptr inbounds [2 x i16], [2 x i16]* %313, i64 %idxprom5.i482, !dbg !8683
  %arrayidx7.i484 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i483, i64 0, i64 1, !dbg !8683
  %314 = load i16, i16* %arrayidx7.i484, align 2, !dbg !8683
  %conv8.i485 = sext i16 %314 to i32, !dbg !8683
  store i32 %conv8.i485, i32* %n.i450, align 4, !dbg !8684
  %315 = load i32, i32* %max_depth.addr.i445, align 4, !dbg !8685
  %cmp.i486 = icmp sgt i32 %315, 1, !dbg !8686
  br i1 %cmp.i486, label %land.lhs.true.i488, label %if.end68.i575, !dbg !8687

land.lhs.true.i488:                               ; preds = %if.end27
  %316 = load i32, i32* %n.i450, align 4, !dbg !8688
  %cmp10.i487 = icmp slt i32 %316, 0, !dbg !8689
  br i1 %cmp10.i487, label %if.then.i491, label %if.end68.i575, !dbg !8690

if.then.i491:                                     ; preds = %land.lhs.true.i488
  %317 = load i32, i32* %re_size_plus8.i449, align 4, !dbg !8691
  %318 = load i32, i32* %re_index.i447, align 4, !dbg !8692
  %319 = load i32, i32* %bits.addr.i444, align 4, !dbg !8693
  %add.i489 = add i32 %318, %319, !dbg !8694
  %cmp12.i490 = icmp ugt i32 %317, %add.i489, !dbg !8695
  br i1 %cmp12.i490, label %cond.true.i493, label %cond.false.i494, !dbg !8696

cond.true.i493:                                   ; preds = %if.then.i491
  %320 = load i32, i32* %re_index.i447, align 4, !dbg !8697
  %321 = load i32, i32* %bits.addr.i444, align 4, !dbg !8698
  %add14.i492 = add i32 %320, %321, !dbg !8699
  br label %cond.end.i530, !dbg !8700

cond.false.i494:                                  ; preds = %if.then.i491
  %322 = load i32, i32* %re_size_plus8.i449, align 4, !dbg !8701
  br label %cond.end.i530, !dbg !8702

cond.end.i530:                                    ; preds = %cond.false.i494, %cond.true.i493
  %cond.i495 = phi i32 [ %add14.i492, %cond.true.i493 ], [ %322, %cond.false.i494 ], !dbg !8703
  store i32 %cond.i495, i32* %re_index.i447, align 4, !dbg !8704
  %323 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i442, align 8, !dbg !8705
  %buffer15.i496 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %323, i32 0, i32 0, !dbg !8706
  %324 = load i8*, i8** %buffer15.i496, align 8, !dbg !8706
  %325 = load i32, i32* %re_index.i447, align 4, !dbg !8707
  %shr16.i497 = lshr i32 %325, 3, !dbg !8708
  %idx.ext17.i498 = zext i32 %shr16.i497 to i64, !dbg !8709
  %add.ptr18.i499 = getelementptr inbounds i8, i8* %324, i64 %idx.ext17.i498, !dbg !8709
  %326 = bitcast i8* %add.ptr18.i499 to %union.unaligned_32*, !dbg !8710
  %l19.i500 = bitcast %union.unaligned_32* %326 to i32*, !dbg !8710
  %327 = load i32, i32* %l19.i500, align 1, !dbg !8710
  store i32 %327, i32* %x.addr.i81.i440, align 4, !dbg !8711
  %328 = load i32, i32* %x.addr.i81.i440, align 4, !dbg !8712
  %shl.i82.i501 = shl i32 %328, 8, !dbg !8713
  %and.i83.i502 = and i32 %shl.i82.i501, 65280, !dbg !8714
  %329 = load i32, i32* %x.addr.i81.i440, align 4, !dbg !8715
  %shr.i84.i503 = lshr i32 %329, 8, !dbg !8716
  %and1.i85.i504 = and i32 %shr.i84.i503, 255, !dbg !8717
  %or.i86.i505 = or i32 %and.i83.i502, %and1.i85.i504, !dbg !8718
  %shl2.i87.i506 = shl i32 %or.i86.i505, 16, !dbg !8719
  %330 = load i32, i32* %x.addr.i81.i440, align 4, !dbg !8720
  %shr3.i88.i507 = lshr i32 %330, 16, !dbg !8721
  %shl4.i89.i508 = shl i32 %shr3.i88.i507, 8, !dbg !8722
  %and5.i90.i509 = and i32 %shl4.i89.i508, 65280, !dbg !8723
  %331 = load i32, i32* %x.addr.i81.i440, align 4, !dbg !8724
  %shr6.i91.i510 = lshr i32 %331, 16, !dbg !8725
  %shr7.i92.i511 = lshr i32 %shr6.i91.i510, 8, !dbg !8726
  %and8.i93.i512 = and i32 %shr7.i92.i511, 255, !dbg !8727
  %or9.i94.i513 = or i32 %and5.i90.i509, %and8.i93.i512, !dbg !8728
  %or10.i95.i514 = or i32 %shl2.i87.i506, %or9.i94.i513, !dbg !8729
  %332 = load i32, i32* %re_index.i447, align 4, !dbg !8730
  %and21.i515 = and i32 %332, 7, !dbg !8731
  %shl22.i516 = shl i32 %or10.i95.i514, %and21.i515, !dbg !8732
  store i32 %shl22.i516, i32* %re_cache.i448, align 4, !dbg !8733
  %333 = load i32, i32* %n.i450, align 4, !dbg !8734
  %sub.i517 = sub nsw i32 0, %333, !dbg !8735
  store i32 %sub.i517, i32* %nb_bits.i451, align 4, !dbg !8736
  %334 = load i32, i32* %re_cache.i448, align 4, !dbg !8737
  %335 = load i32, i32* %nb_bits.i451, align 4, !dbg !8738
  %conv23.i518 = trunc i32 %335 to i8, !dbg !8738
  %call24.i519 = call i32 @NEG_USR32(i32 %334, i8 signext %conv23.i518) #9, !dbg !8739
  %336 = load i32, i32* %code.i446, align 4, !dbg !8740
  %add25.i520 = add i32 %call24.i519, %336, !dbg !8741
  store i32 %add25.i520, i32* %index1.i452, align 4, !dbg !8742
  %337 = load i32, i32* %index1.i452, align 4, !dbg !8743
  %idxprom26.i521 = zext i32 %337 to i64, !dbg !8744
  %338 = load [2 x i16]*, [2 x i16]** %table.addr.i443, align 8, !dbg !8744
  %arrayidx27.i522 = getelementptr inbounds [2 x i16], [2 x i16]* %338, i64 %idxprom26.i521, !dbg !8744
  %arrayidx28.i523 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i522, i64 0, i64 0, !dbg !8744
  %339 = load i16, i16* %arrayidx28.i523, align 2, !dbg !8744
  %conv29.i524 = sext i16 %339 to i32, !dbg !8744
  store i32 %conv29.i524, i32* %code.i446, align 4, !dbg !8745
  %340 = load i32, i32* %index1.i452, align 4, !dbg !8746
  %idxprom30.i525 = zext i32 %340 to i64, !dbg !8747
  %341 = load [2 x i16]*, [2 x i16]** %table.addr.i443, align 8, !dbg !8747
  %arrayidx31.i526 = getelementptr inbounds [2 x i16], [2 x i16]* %341, i64 %idxprom30.i525, !dbg !8747
  %arrayidx32.i527 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i526, i64 0, i64 1, !dbg !8747
  %342 = load i16, i16* %arrayidx32.i527, align 2, !dbg !8747
  %conv33.i528 = sext i16 %342 to i32, !dbg !8747
  store i32 %conv33.i528, i32* %n.i450, align 4, !dbg !8748
  %343 = load i32, i32* %max_depth.addr.i445, align 4, !dbg !8749
  %cmp34.i529 = icmp sgt i32 %343, 2, !dbg !8750
  br i1 %cmp34.i529, label %land.lhs.true36.i532, label %if.end.i574, !dbg !8751

land.lhs.true36.i532:                             ; preds = %cond.end.i530
  %344 = load i32, i32* %n.i450, align 4, !dbg !8752
  %cmp37.i531 = icmp slt i32 %344, 0, !dbg !8753
  br i1 %cmp37.i531, label %if.then39.i535, label %if.end.i574, !dbg !8754

if.then39.i535:                                   ; preds = %land.lhs.true36.i532
  %345 = load i32, i32* %re_size_plus8.i449, align 4, !dbg !8755
  %346 = load i32, i32* %re_index.i447, align 4, !dbg !8756
  %347 = load i32, i32* %nb_bits.i451, align 4, !dbg !8757
  %add40.i533 = add i32 %346, %347, !dbg !8758
  %cmp41.i534 = icmp ugt i32 %345, %add40.i533, !dbg !8759
  br i1 %cmp41.i534, label %cond.true43.i537, label %cond.false45.i538, !dbg !8760

cond.true43.i537:                                 ; preds = %if.then39.i535
  %348 = load i32, i32* %re_index.i447, align 4, !dbg !8761
  %349 = load i32, i32* %nb_bits.i451, align 4, !dbg !8762
  %add44.i536 = add i32 %348, %349, !dbg !8763
  br label %cond.end46.i573, !dbg !8764

cond.false45.i538:                                ; preds = %if.then39.i535
  %350 = load i32, i32* %re_size_plus8.i449, align 4, !dbg !8765
  br label %cond.end46.i573, !dbg !8766

cond.end46.i573:                                  ; preds = %cond.false45.i538, %cond.true43.i537
  %cond47.i539 = phi i32 [ %add44.i536, %cond.true43.i537 ], [ %350, %cond.false45.i538 ], !dbg !8767
  store i32 %cond47.i539, i32* %re_index.i447, align 4, !dbg !8768
  %351 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i442, align 8, !dbg !8769
  %buffer48.i540 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %351, i32 0, i32 0, !dbg !8770
  %352 = load i8*, i8** %buffer48.i540, align 8, !dbg !8770
  %353 = load i32, i32* %re_index.i447, align 4, !dbg !8771
  %shr49.i541 = lshr i32 %353, 3, !dbg !8772
  %idx.ext50.i542 = zext i32 %shr49.i541 to i64, !dbg !8773
  %add.ptr51.i543 = getelementptr inbounds i8, i8* %352, i64 %idx.ext50.i542, !dbg !8773
  %354 = bitcast i8* %add.ptr51.i543 to %union.unaligned_32*, !dbg !8774
  %l52.i544 = bitcast %union.unaligned_32* %354 to i32*, !dbg !8774
  %355 = load i32, i32* %l52.i544, align 1, !dbg !8774
  store i32 %355, i32* %x.addr.i96.i439, align 4, !dbg !8775
  %356 = load i32, i32* %x.addr.i96.i439, align 4, !dbg !8776
  %shl.i97.i545 = shl i32 %356, 8, !dbg !8777
  %and.i98.i546 = and i32 %shl.i97.i545, 65280, !dbg !8778
  %357 = load i32, i32* %x.addr.i96.i439, align 4, !dbg !8779
  %shr.i99.i547 = lshr i32 %357, 8, !dbg !8780
  %and1.i100.i548 = and i32 %shr.i99.i547, 255, !dbg !8781
  %or.i101.i549 = or i32 %and.i98.i546, %and1.i100.i548, !dbg !8782
  %shl2.i102.i550 = shl i32 %or.i101.i549, 16, !dbg !8783
  %358 = load i32, i32* %x.addr.i96.i439, align 4, !dbg !8784
  %shr3.i103.i551 = lshr i32 %358, 16, !dbg !8785
  %shl4.i104.i552 = shl i32 %shr3.i103.i551, 8, !dbg !8786
  %and5.i105.i553 = and i32 %shl4.i104.i552, 65280, !dbg !8787
  %359 = load i32, i32* %x.addr.i96.i439, align 4, !dbg !8788
  %shr6.i106.i554 = lshr i32 %359, 16, !dbg !8789
  %shr7.i107.i555 = lshr i32 %shr6.i106.i554, 8, !dbg !8790
  %and8.i108.i556 = and i32 %shr7.i107.i555, 255, !dbg !8791
  %or9.i109.i557 = or i32 %and5.i105.i553, %and8.i108.i556, !dbg !8792
  %or10.i110.i558 = or i32 %shl2.i102.i550, %or9.i109.i557, !dbg !8793
  %360 = load i32, i32* %re_index.i447, align 4, !dbg !8794
  %and54.i559 = and i32 %360, 7, !dbg !8795
  %shl55.i560 = shl i32 %or10.i110.i558, %and54.i559, !dbg !8796
  store i32 %shl55.i560, i32* %re_cache.i448, align 4, !dbg !8797
  %361 = load i32, i32* %n.i450, align 4, !dbg !8798
  %sub56.i561 = sub nsw i32 0, %361, !dbg !8799
  store i32 %sub56.i561, i32* %nb_bits.i451, align 4, !dbg !8800
  %362 = load i32, i32* %re_cache.i448, align 4, !dbg !8801
  %363 = load i32, i32* %nb_bits.i451, align 4, !dbg !8802
  %conv57.i562 = trunc i32 %363 to i8, !dbg !8802
  %call58.i563 = call i32 @NEG_USR32(i32 %362, i8 signext %conv57.i562) #9, !dbg !8803
  %364 = load i32, i32* %code.i446, align 4, !dbg !8804
  %add59.i564 = add i32 %call58.i563, %364, !dbg !8805
  store i32 %add59.i564, i32* %index1.i452, align 4, !dbg !8806
  %365 = load i32, i32* %index1.i452, align 4, !dbg !8807
  %idxprom60.i565 = zext i32 %365 to i64, !dbg !8808
  %366 = load [2 x i16]*, [2 x i16]** %table.addr.i443, align 8, !dbg !8808
  %arrayidx61.i566 = getelementptr inbounds [2 x i16], [2 x i16]* %366, i64 %idxprom60.i565, !dbg !8808
  %arrayidx62.i567 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i566, i64 0, i64 0, !dbg !8808
  %367 = load i16, i16* %arrayidx62.i567, align 2, !dbg !8808
  %conv63.i568 = sext i16 %367 to i32, !dbg !8808
  store i32 %conv63.i568, i32* %code.i446, align 4, !dbg !8809
  %368 = load i32, i32* %index1.i452, align 4, !dbg !8810
  %idxprom64.i569 = zext i32 %368 to i64, !dbg !8811
  %369 = load [2 x i16]*, [2 x i16]** %table.addr.i443, align 8, !dbg !8811
  %arrayidx65.i570 = getelementptr inbounds [2 x i16], [2 x i16]* %369, i64 %idxprom64.i569, !dbg !8811
  %arrayidx66.i571 = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i570, i64 0, i64 1, !dbg !8811
  %370 = load i16, i16* %arrayidx66.i571, align 2, !dbg !8811
  %conv67.i572 = sext i16 %370 to i32, !dbg !8811
  store i32 %conv67.i572, i32* %n.i450, align 4, !dbg !8812
  br label %if.end.i574, !dbg !8813

if.end.i574:                                      ; preds = %cond.end46.i573, %land.lhs.true36.i532, %cond.end.i530
  br label %if.end68.i575, !dbg !8814

if.end68.i575:                                    ; preds = %if.end.i574, %land.lhs.true.i488, %if.end27
  %371 = load i32, i32* %n.i450, align 4, !dbg !8815
  %372 = load i32, i32* %re_cache.i448, align 4, !dbg !8816
  %shl70.i576 = shl i32 %372, %371, !dbg !8816
  store i32 %shl70.i576, i32* %re_cache.i448, align 4, !dbg !8816
  %373 = load i32, i32* %re_size_plus8.i449, align 4, !dbg !8817
  %374 = load i32, i32* %re_index.i447, align 4, !dbg !8818
  %375 = load i32, i32* %n.i450, align 4, !dbg !8819
  %add71.i577 = add i32 %374, %375, !dbg !8820
  %cmp72.i578 = icmp ugt i32 %373, %add71.i577, !dbg !8821
  br i1 %cmp72.i578, label %cond.true74.i580, label %cond.false76.i581, !dbg !8822

cond.true74.i580:                                 ; preds = %if.end68.i575
  %376 = load i32, i32* %re_index.i447, align 4, !dbg !8823
  %377 = load i32, i32* %n.i450, align 4, !dbg !8824
  %add75.i579 = add i32 %376, %377, !dbg !8825
  br label %get_vlc2.exit584, !dbg !8826

cond.false76.i581:                                ; preds = %if.end68.i575
  %378 = load i32, i32* %re_size_plus8.i449, align 4, !dbg !8827
  br label %get_vlc2.exit584, !dbg !8828

get_vlc2.exit584:                                 ; preds = %cond.true74.i580, %cond.false76.i581
  %cond78.i582 = phi i32 [ %add75.i579, %cond.true74.i580 ], [ %378, %cond.false76.i581 ], !dbg !8829
  store i32 %cond78.i582, i32* %re_index.i447, align 4, !dbg !8830
  %379 = load i32, i32* %re_index.i447, align 4, !dbg !8831
  %380 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i442, align 8, !dbg !8832
  %index80.i583 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %380, i32 0, i32 2, !dbg !8833
  store i32 %379, i32* %index80.i583, align 8, !dbg !8834
  %381 = load i32, i32* %code.i446, align 4, !dbg !8835
  store i32 %381, i32* %v1, align 4, !dbg !8836
  %382 = load i32, i32* %v1, align 4, !dbg !8837
  %cmp30 = icmp eq i32 %382, 100, !dbg !8839
  br i1 %cmp30, label %if.then32, label %if.end36, !dbg !8840

if.then32:                                        ; preds = %get_vlc2.exit584
  %383 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8841
  %gb33 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %383, i32 0, i32 34, !dbg !8842
  %call34 = call i32 @ff_wma_get_large_val(%struct.GetBitContext* %gb33), !dbg !8843
  %384 = load i32, i32* %v1, align 4, !dbg !8844
  %add35 = add i32 %384, %call34, !dbg !8844
  store i32 %add35, i32* %v1, align 4, !dbg !8844
  br label %if.end36, !dbg !8845

if.end36:                                         ; preds = %if.then32, %get_vlc2.exit584
  %385 = load i32, i32* %v0, align 4, !dbg !8846
  %conv37 = uitofp i32 %385 to float, !dbg !8846
  store float %conv37, float* %f.addr.i, align 4, !dbg !8847
  %386 = load float, float* %f.addr.i, align 4, !dbg !8848
  %f1.i = bitcast %union.av_intfloat32* %v.i to float*, !dbg !8849
  store float %386, float* %f1.i, align 4, !dbg !8850
  %i.i = bitcast %union.av_intfloat32* %v.i to i32*, !dbg !8851
  %387 = load i32, i32* %i.i, align 4, !dbg !8851
  %388 = load i32, i32* %i, align 4, !dbg !8852
  %idxprom39 = sext i32 %388 to i64, !dbg !8853
  %arrayidx40 = getelementptr inbounds [4 x i32], [4 x i32]* %vals, i64 0, i64 %idxprom39, !dbg !8853
  store i32 %387, i32* %arrayidx40, align 4, !dbg !8854
  %389 = load i32, i32* %v1, align 4, !dbg !8855
  %conv41 = uitofp i32 %389 to float, !dbg !8855
  store float %conv41, float* %f.addr.i585, align 4, !dbg !8856
  %390 = load float, float* %f.addr.i585, align 4, !dbg !8857
  %f1.i587 = bitcast %union.av_intfloat32* %v.i586 to float*, !dbg !8858
  store float %390, float* %f1.i587, align 4, !dbg !8859
  %i.i588 = bitcast %union.av_intfloat32* %v.i586 to i32*, !dbg !8860
  %391 = load i32, i32* %i.i588, align 4, !dbg !8860
  %392 = load i32, i32* %i, align 4, !dbg !8861
  %add43 = add nsw i32 %392, 1, !dbg !8862
  %idxprom44 = sext i32 %add43 to i64, !dbg !8863
  %arrayidx45 = getelementptr inbounds [4 x i32], [4 x i32]* %vals, i64 0, i64 %idxprom44, !dbg !8863
  store i32 %391, i32* %arrayidx45, align 4, !dbg !8864
  br label %if.end62, !dbg !8865

if.else46:                                        ; preds = %get_vlc2.exit292
  %393 = load i32, i32* %idx, align 4, !dbg !8866
  %idxprom47 = zext i32 %393 to i64, !dbg !8868
  %arrayidx48 = getelementptr inbounds [137 x i8], [137 x i8]* @symbol_to_vec2, i64 0, i64 %idxprom47, !dbg !8868
  %394 = load i8, i8* %arrayidx48, align 1, !dbg !8868
  %conv49 = zext i8 %394 to i32, !dbg !8868
  %shr = ashr i32 %conv49, 4, !dbg !8869
  %idxprom50 = sext i32 %shr to i64, !dbg !8870
  %arrayidx51 = getelementptr inbounds [16 x i32], [16 x i32]* @decode_coeffs.fval_tab, i64 0, i64 %idxprom50, !dbg !8870
  %395 = load i32, i32* %arrayidx51, align 4, !dbg !8870
  %396 = load i32, i32* %i, align 4, !dbg !8871
  %idxprom52 = sext i32 %396 to i64, !dbg !8872
  %arrayidx53 = getelementptr inbounds [4 x i32], [4 x i32]* %vals, i64 0, i64 %idxprom52, !dbg !8872
  store i32 %395, i32* %arrayidx53, align 4, !dbg !8873
  %397 = load i32, i32* %idx, align 4, !dbg !8874
  %idxprom54 = zext i32 %397 to i64, !dbg !8875
  %arrayidx55 = getelementptr inbounds [137 x i8], [137 x i8]* @symbol_to_vec2, i64 0, i64 %idxprom54, !dbg !8875
  %398 = load i8, i8* %arrayidx55, align 1, !dbg !8875
  %conv56 = zext i8 %398 to i32, !dbg !8875
  %and = and i32 %conv56, 15, !dbg !8876
  %idxprom57 = sext i32 %and to i64, !dbg !8877
  %arrayidx58 = getelementptr inbounds [16 x i32], [16 x i32]* @decode_coeffs.fval_tab, i64 0, i64 %idxprom57, !dbg !8877
  %399 = load i32, i32* %arrayidx58, align 4, !dbg !8877
  %400 = load i32, i32* %i, align 4, !dbg !8878
  %add59 = add nsw i32 %400, 1, !dbg !8879
  %idxprom60 = sext i32 %add59 to i64, !dbg !8880
  %arrayidx61 = getelementptr inbounds [4 x i32], [4 x i32]* %vals, i64 0, i64 %idxprom60, !dbg !8880
  store i32 %399, i32* %arrayidx61, align 4, !dbg !8881
  br label %if.end62

if.end62:                                         ; preds = %if.else46, %if.end36
  br label %for.inc, !dbg !8882

for.inc:                                          ; preds = %if.end62
  %401 = load i32, i32* %i, align 4, !dbg !8883
  %add63 = add nsw i32 %401, 2, !dbg !8883
  store i32 %add63, i32* %i, align 4, !dbg !8883
  br label %for.cond, !dbg !8885, !llvm.loop !8886

for.end:                                          ; preds = %for.cond
  br label %if.end95, !dbg !8888

if.else64:                                        ; preds = %get_vlc2.exit
  %402 = load i32, i32* %idx, align 4, !dbg !8889
  %idxprom65 = zext i32 %402 to i64, !dbg !8891
  %arrayidx66 = getelementptr inbounds [127 x i16], [127 x i16]* @symbol_to_vec4, i64 0, i64 %idxprom65, !dbg !8891
  %403 = load i16, i16* %arrayidx66, align 2, !dbg !8891
  %conv67 = zext i16 %403 to i32, !dbg !8891
  %shr68 = ashr i32 %conv67, 12, !dbg !8892
  %idxprom69 = sext i32 %shr68 to i64, !dbg !8893
  %arrayidx70 = getelementptr inbounds [16 x i32], [16 x i32]* @decode_coeffs.fval_tab, i64 0, i64 %idxprom69, !dbg !8893
  %404 = load i32, i32* %arrayidx70, align 4, !dbg !8893
  %arrayidx71 = getelementptr inbounds [4 x i32], [4 x i32]* %vals, i64 0, i64 0, !dbg !8894
  store i32 %404, i32* %arrayidx71, align 16, !dbg !8895
  %405 = load i32, i32* %idx, align 4, !dbg !8896
  %idxprom72 = zext i32 %405 to i64, !dbg !8897
  %arrayidx73 = getelementptr inbounds [127 x i16], [127 x i16]* @symbol_to_vec4, i64 0, i64 %idxprom72, !dbg !8897
  %406 = load i16, i16* %arrayidx73, align 2, !dbg !8897
  %conv74 = zext i16 %406 to i32, !dbg !8897
  %shr75 = ashr i32 %conv74, 8, !dbg !8898
  %and76 = and i32 %shr75, 15, !dbg !8899
  %idxprom77 = sext i32 %and76 to i64, !dbg !8900
  %arrayidx78 = getelementptr inbounds [16 x i32], [16 x i32]* @decode_coeffs.fval_tab, i64 0, i64 %idxprom77, !dbg !8900
  %407 = load i32, i32* %arrayidx78, align 4, !dbg !8900
  %arrayidx79 = getelementptr inbounds [4 x i32], [4 x i32]* %vals, i64 0, i64 1, !dbg !8901
  store i32 %407, i32* %arrayidx79, align 4, !dbg !8902
  %408 = load i32, i32* %idx, align 4, !dbg !8903
  %idxprom80 = zext i32 %408 to i64, !dbg !8904
  %arrayidx81 = getelementptr inbounds [127 x i16], [127 x i16]* @symbol_to_vec4, i64 0, i64 %idxprom80, !dbg !8904
  %409 = load i16, i16* %arrayidx81, align 2, !dbg !8904
  %conv82 = zext i16 %409 to i32, !dbg !8904
  %shr83 = ashr i32 %conv82, 4, !dbg !8905
  %and84 = and i32 %shr83, 15, !dbg !8906
  %idxprom85 = sext i32 %and84 to i64, !dbg !8907
  %arrayidx86 = getelementptr inbounds [16 x i32], [16 x i32]* @decode_coeffs.fval_tab, i64 0, i64 %idxprom85, !dbg !8907
  %410 = load i32, i32* %arrayidx86, align 4, !dbg !8907
  %arrayidx87 = getelementptr inbounds [4 x i32], [4 x i32]* %vals, i64 0, i64 2, !dbg !8908
  store i32 %410, i32* %arrayidx87, align 8, !dbg !8909
  %411 = load i32, i32* %idx, align 4, !dbg !8910
  %idxprom88 = zext i32 %411 to i64, !dbg !8911
  %arrayidx89 = getelementptr inbounds [127 x i16], [127 x i16]* @symbol_to_vec4, i64 0, i64 %idxprom88, !dbg !8911
  %412 = load i16, i16* %arrayidx89, align 2, !dbg !8911
  %conv90 = zext i16 %412 to i32, !dbg !8911
  %and91 = and i32 %conv90, 15, !dbg !8912
  %idxprom92 = sext i32 %and91 to i64, !dbg !8913
  %arrayidx93 = getelementptr inbounds [16 x i32], [16 x i32]* @decode_coeffs.fval_tab, i64 0, i64 %idxprom92, !dbg !8913
  %413 = load i32, i32* %arrayidx93, align 4, !dbg !8913
  %arrayidx94 = getelementptr inbounds [4 x i32], [4 x i32]* %vals, i64 0, i64 3, !dbg !8914
  store i32 %413, i32* %arrayidx94, align 4, !dbg !8915
  br label %if.end95

if.end95:                                         ; preds = %if.else64, %for.end
  store i32 0, i32* %i, align 4, !dbg !8916
  br label %for.cond96, !dbg !8918

for.cond96:                                       ; preds = %for.inc120, %if.end95
  %414 = load i32, i32* %i, align 4, !dbg !8919
  %cmp97 = icmp slt i32 %414, 4, !dbg !8922
  br i1 %cmp97, label %for.body99, label %for.end122, !dbg !8923

for.body99:                                       ; preds = %for.cond96
  %415 = load i32, i32* %i, align 4, !dbg !8924
  %idxprom100 = sext i32 %415 to i64, !dbg !8927
  %arrayidx101 = getelementptr inbounds [4 x i32], [4 x i32]* %vals, i64 0, i64 %idxprom100, !dbg !8927
  %416 = load i32, i32* %arrayidx101, align 4, !dbg !8927
  %tobool102 = icmp ne i32 %416, 0, !dbg !8927
  br i1 %tobool102, label %if.then103, label %if.else110, !dbg !8928

if.then103:                                       ; preds = %for.body99
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !8929, metadata !2019), !dbg !8931
  %417 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8932
  %gb104 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %417, i32 0, i32 34, !dbg !8933
  %call105 = call i32 @get_bits1(%struct.GetBitContext* %gb104), !dbg !8934
  %sub = sub i32 %call105, 1, !dbg !8935
  store i32 %sub, i32* %sign, align 4, !dbg !8931
  %418 = load i32, i32* %i, align 4, !dbg !8936
  %idxprom106 = sext i32 %418 to i64, !dbg !8937
  %arrayidx107 = getelementptr inbounds [4 x i32], [4 x i32]* %vals, i64 0, i64 %idxprom106, !dbg !8937
  %419 = load i32, i32* %arrayidx107, align 4, !dbg !8937
  %420 = load i32, i32* %sign, align 4, !dbg !8938
  %shl = shl i32 %420, 31, !dbg !8939
  %xor = xor i32 %419, %shl, !dbg !8940
  %421 = load i32, i32* %cur_coeff, align 4, !dbg !8941
  %idxprom108 = sext i32 %421 to i64, !dbg !8942
  %422 = load %struct.WMAProChannelCtx*, %struct.WMAProChannelCtx** %ci, align 8, !dbg !8942
  %coeffs = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %422, i32 0, i32 16, !dbg !8943
  %423 = load float*, float** %coeffs, align 8, !dbg !8943
  %arrayidx109 = getelementptr inbounds float, float* %423, i64 %idxprom108, !dbg !8942
  %424 = bitcast float* %arrayidx109 to %union.av_alias32*, !dbg !8944
  %u32 = bitcast %union.av_alias32* %424 to i32*, !dbg !8944
  store i32 %xor, i32* %u32, align 4, !dbg !8945
  store i32 0, i32* %num_zeros, align 4, !dbg !8946
  br label %if.end118, !dbg !8947

if.else110:                                       ; preds = %for.body99
  %425 = load i32, i32* %cur_coeff, align 4, !dbg !8948
  %idxprom111 = sext i32 %425 to i64, !dbg !8950
  %426 = load %struct.WMAProChannelCtx*, %struct.WMAProChannelCtx** %ci, align 8, !dbg !8950
  %coeffs112 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %426, i32 0, i32 16, !dbg !8951
  %427 = load float*, float** %coeffs112, align 8, !dbg !8951
  %arrayidx113 = getelementptr inbounds float, float* %427, i64 %idxprom111, !dbg !8950
  store float 0.000000e+00, float* %arrayidx113, align 4, !dbg !8952
  %428 = load i32, i32* %num_zeros, align 4, !dbg !8953
  %inc = add nsw i32 %428, 1, !dbg !8953
  store i32 %inc, i32* %num_zeros, align 4, !dbg !8953
  %429 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8954
  %subframe_len = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %429, i32 0, i32 40, !dbg !8955
  %430 = load i16, i16* %subframe_len, align 8, !dbg !8955
  %conv114 = sext i16 %430 to i32, !dbg !8954
  %shr115 = ashr i32 %conv114, 8, !dbg !8956
  %cmp116 = icmp sgt i32 %inc, %shr115, !dbg !8957
  %conv117 = zext i1 %cmp116 to i32, !dbg !8957
  %431 = load i32, i32* %rl_mode, align 4, !dbg !8958
  %or = or i32 %431, %conv117, !dbg !8958
  store i32 %or, i32* %rl_mode, align 4, !dbg !8958
  br label %if.end118

if.end118:                                        ; preds = %if.else110, %if.then103
  %432 = load i32, i32* %cur_coeff, align 4, !dbg !8959
  %inc119 = add nsw i32 %432, 1, !dbg !8959
  store i32 %inc119, i32* %cur_coeff, align 4, !dbg !8959
  br label %for.inc120, !dbg !8960

for.inc120:                                       ; preds = %if.end118
  %433 = load i32, i32* %i, align 4, !dbg !8961
  %inc121 = add nsw i32 %433, 1, !dbg !8961
  store i32 %inc121, i32* %i, align 4, !dbg !8961
  br label %for.cond96, !dbg !8963, !llvm.loop !8964

for.end122:                                       ; preds = %for.cond96
  br label %while.cond, !dbg !8966, !llvm.loop !8968

while.end:                                        ; preds = %land.end
  %434 = load i32, i32* %cur_coeff, align 4, !dbg !8969
  %435 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8971
  %subframe_len123 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %435, i32 0, i32 40, !dbg !8972
  %436 = load i16, i16* %subframe_len123, align 8, !dbg !8972
  %conv124 = sext i16 %436 to i32, !dbg !8971
  %cmp125 = icmp slt i32 %434, %conv124, !dbg !8973
  br i1 %cmp125, label %if.then127, label %if.end146, !dbg !8974

if.then127:                                       ; preds = %while.end
  %437 = load i32, i32* %cur_coeff, align 4, !dbg !8975
  %idxprom128 = sext i32 %437 to i64, !dbg !8977
  %438 = load %struct.WMAProChannelCtx*, %struct.WMAProChannelCtx** %ci, align 8, !dbg !8977
  %coeffs129 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %438, i32 0, i32 16, !dbg !8978
  %439 = load float*, float** %coeffs129, align 8, !dbg !8978
  %arrayidx130 = getelementptr inbounds float, float* %439, i64 %idxprom128, !dbg !8977
  %440 = bitcast float* %arrayidx130 to i8*, !dbg !8979
  %441 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8980
  %subframe_len131 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %441, i32 0, i32 40, !dbg !8981
  %442 = load i16, i16* %subframe_len131, align 8, !dbg !8981
  %conv132 = sext i16 %442 to i32, !dbg !8980
  %443 = load i32, i32* %cur_coeff, align 4, !dbg !8982
  %sub133 = sub nsw i32 %conv132, %443, !dbg !8983
  %conv134 = sext i32 %sub133 to i64, !dbg !8984
  %mul = mul i64 4, %conv134, !dbg !8985
  call void @llvm.memset.p0i8.i64(i8* %440, i8 0, i64 %mul, i32 4, i1 false), !dbg !8979
  %444 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8986
  %avctx = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %444, i32 0, i32 0, !dbg !8988
  %445 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !8988
  %446 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8989
  %gb135 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %446, i32 0, i32 34, !dbg !8990
  %447 = load %struct.VLC*, %struct.VLC** %vlc, align 8, !dbg !8991
  %448 = load float*, float** %level, align 8, !dbg !8992
  %449 = load i16*, i16** %run, align 8, !dbg !8993
  %450 = load %struct.WMAProChannelCtx*, %struct.WMAProChannelCtx** %ci, align 8, !dbg !8994
  %coeffs136 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %450, i32 0, i32 16, !dbg !8995
  %451 = load float*, float** %coeffs136, align 8, !dbg !8995
  %452 = load i32, i32* %cur_coeff, align 4, !dbg !8996
  %453 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8997
  %subframe_len137 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %453, i32 0, i32 40, !dbg !8998
  %454 = load i16, i16* %subframe_len137, align 8, !dbg !8998
  %conv138 = sext i16 %454 to i32, !dbg !8997
  %455 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !8999
  %subframe_len139 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %455, i32 0, i32 40, !dbg !9000
  %456 = load i16, i16* %subframe_len139, align 8, !dbg !9000
  %conv140 = sext i16 %456 to i32, !dbg !8999
  %457 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9001
  %esc_len = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %457, i32 0, i32 48, !dbg !9002
  %458 = load i8, i8* %esc_len, align 1, !dbg !9002
  %conv141 = sext i8 %458 to i32, !dbg !9001
  %call142 = call i32 @ff_wma_run_level_decode(%struct.AVCodecContext* %445, %struct.GetBitContext* %gb135, %struct.VLC* %447, float* %448, i16* %449, i32 1, float* %451, i32 %452, i32 %conv138, i32 %conv140, i32 %conv141, i32 0), !dbg !9003
  %tobool143 = icmp ne i32 %call142, 0, !dbg !9003
  br i1 %tobool143, label %if.then144, label %if.end145, !dbg !9004

if.then144:                                       ; preds = %if.then127
  store i32 -1094995529, i32* %retval, align 4, !dbg !9005
  br label %return, !dbg !9005

if.end145:                                        ; preds = %if.then127
  br label %if.end146, !dbg !9006

if.end146:                                        ; preds = %if.end145, %while.end
  store i32 0, i32* %retval, align 4, !dbg !9007
  br label %return, !dbg !9007

return:                                           ; preds = %if.end146, %if.then144
  %459 = load i32, i32* %retval, align 4, !dbg !9008
  ret i32 %459, !dbg !9008
}

; Function Attrs: nounwind uwtable
define internal void @inverse_channel_transform(%struct.WMAProDecodeCtx* %s) #1 !dbg !9009 {
entry:
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %i = alloca i32, align 4
  %data = alloca [8 x float], align 16
  %num_channels = alloca i32, align 4
  %ch_data = alloca float**, align 8
  %ch_end = alloca float**, align 8
  %tb = alloca i8*, align 8
  %sfb = alloca i16*, align 8
  %y = alloca i32, align 4
  %mat = alloca float*, align 8
  %data_end = alloca float*, align 8
  %data_ptr = alloca float*, align 8
  %ch = alloca float**, align 8
  %sum = alloca float, align 4
  %len = alloca i32, align 4
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !9010, metadata !2019), !dbg !9011
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9012, metadata !2019), !dbg !9013
  store i32 0, i32* %i, align 4, !dbg !9014
  br label %for.cond, !dbg !9016

for.cond:                                         ; preds = %for.inc120, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9017
  %1 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9020
  %num_chgroups = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %1, i32 0, i32 49, !dbg !9021
  %2 = load i8, i8* %num_chgroups, align 2, !dbg !9021
  %conv = zext i8 %2 to i32, !dbg !9020
  %cmp = icmp slt i32 %0, %conv, !dbg !9022
  br i1 %cmp, label %for.body, label %for.end122, !dbg !9023

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !9024
  %idxprom = sext i32 %3 to i64, !dbg !9027
  %4 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9027
  %chgroup = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %4, i32 0, i32 50, !dbg !9028
  %arrayidx = getelementptr inbounds [8 x %struct.WMAProChannelGrp], [8 x %struct.WMAProChannelGrp]* %chgroup, i64 0, i64 %idxprom, !dbg !9027
  %transform = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %arrayidx, i32 0, i32 1, !dbg !9029
  %5 = load i8, i8* %transform, align 1, !dbg !9029
  %tobool = icmp ne i8 %5, 0, !dbg !9027
  br i1 %tobool, label %if.then, label %if.end119, !dbg !9030

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata [8 x float]* %data, metadata !9031, metadata !2019), !dbg !9034
  call void @llvm.dbg.declare(metadata i32* %num_channels, metadata !9035, metadata !2019), !dbg !9036
  %6 = load i32, i32* %i, align 4, !dbg !9037
  %idxprom2 = sext i32 %6 to i64, !dbg !9038
  %7 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9038
  %chgroup3 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %7, i32 0, i32 50, !dbg !9039
  %arrayidx4 = getelementptr inbounds [8 x %struct.WMAProChannelGrp], [8 x %struct.WMAProChannelGrp]* %chgroup3, i64 0, i64 %idxprom2, !dbg !9038
  %num_channels5 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %arrayidx4, i32 0, i32 0, !dbg !9040
  %8 = load i8, i8* %num_channels5, align 8, !dbg !9040
  %conv6 = zext i8 %8 to i32, !dbg !9038
  store i32 %conv6, i32* %num_channels, align 4, !dbg !9036
  call void @llvm.dbg.declare(metadata float*** %ch_data, metadata !9041, metadata !2019), !dbg !9042
  %9 = load i32, i32* %i, align 4, !dbg !9043
  %idxprom7 = sext i32 %9 to i64, !dbg !9044
  %10 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9044
  %chgroup8 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %10, i32 0, i32 50, !dbg !9045
  %arrayidx9 = getelementptr inbounds [8 x %struct.WMAProChannelGrp], [8 x %struct.WMAProChannelGrp]* %chgroup8, i64 0, i64 %idxprom7, !dbg !9044
  %channel_data = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %arrayidx9, i32 0, i32 4, !dbg !9046
  %arraydecay = getelementptr inbounds [8 x float*], [8 x float*]* %channel_data, i32 0, i32 0, !dbg !9044
  store float** %arraydecay, float*** %ch_data, align 8, !dbg !9042
  call void @llvm.dbg.declare(metadata float*** %ch_end, metadata !9047, metadata !2019), !dbg !9048
  %11 = load float**, float*** %ch_data, align 8, !dbg !9049
  %12 = load i32, i32* %num_channels, align 4, !dbg !9050
  %idx.ext = sext i32 %12 to i64, !dbg !9051
  %add.ptr = getelementptr inbounds float*, float** %11, i64 %idx.ext, !dbg !9051
  store float** %add.ptr, float*** %ch_end, align 8, !dbg !9048
  call void @llvm.dbg.declare(metadata i8** %tb, metadata !9052, metadata !2019), !dbg !9053
  %13 = load i32, i32* %i, align 4, !dbg !9054
  %idxprom10 = sext i32 %13 to i64, !dbg !9055
  %14 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9055
  %chgroup11 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %14, i32 0, i32 50, !dbg !9056
  %arrayidx12 = getelementptr inbounds [8 x %struct.WMAProChannelGrp], [8 x %struct.WMAProChannelGrp]* %chgroup11, i64 0, i64 %idxprom10, !dbg !9055
  %transform_band = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %arrayidx12, i32 0, i32 2, !dbg !9057
  %arraydecay13 = getelementptr inbounds [29 x i8], [29 x i8]* %transform_band, i32 0, i32 0, !dbg !9055
  store i8* %arraydecay13, i8** %tb, align 8, !dbg !9053
  call void @llvm.dbg.declare(metadata i16** %sfb, metadata !9058, metadata !2019), !dbg !9059
  %15 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9060
  %cur_sfb_offsets = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %15, i32 0, i32 46, !dbg !9062
  %16 = load i16*, i16** %cur_sfb_offsets, align 8, !dbg !9062
  store i16* %16, i16** %sfb, align 8, !dbg !9063
  br label %for.cond14, !dbg !9064

for.cond14:                                       ; preds = %for.inc116, %if.then
  %17 = load i16*, i16** %sfb, align 8, !dbg !9065
  %18 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9067
  %cur_sfb_offsets15 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %18, i32 0, i32 46, !dbg !9068
  %19 = load i16*, i16** %cur_sfb_offsets15, align 8, !dbg !9068
  %20 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9069
  %num_bands = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %20, i32 0, i32 44, !dbg !9070
  %21 = load i8, i8* %num_bands, align 4, !dbg !9070
  %conv16 = sext i8 %21 to i32, !dbg !9069
  %idx.ext17 = sext i32 %conv16 to i64, !dbg !9071
  %add.ptr18 = getelementptr inbounds i16, i16* %19, i64 %idx.ext17, !dbg !9071
  %cmp19 = icmp ult i16* %17, %add.ptr18, !dbg !9072
  br i1 %cmp19, label %for.body21, label %for.end118, !dbg !9073

for.body21:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9075, metadata !2019), !dbg !9077
  %22 = load i8*, i8** %tb, align 8, !dbg !9078
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !9078
  store i8* %incdec.ptr, i8** %tb, align 8, !dbg !9078
  %23 = load i8, i8* %22, align 1, !dbg !9080
  %conv22 = sext i8 %23 to i32, !dbg !9080
  %cmp23 = icmp eq i32 %conv22, 1, !dbg !9081
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !9082

if.then25:                                        ; preds = %for.body21
  %24 = load i16*, i16** %sfb, align 8, !dbg !9083
  %arrayidx26 = getelementptr inbounds i16, i16* %24, i64 0, !dbg !9083
  %25 = load i16, i16* %arrayidx26, align 2, !dbg !9083
  %conv27 = sext i16 %25 to i32, !dbg !9083
  store i32 %conv27, i32* %y, align 4, !dbg !9086
  br label %for.cond28, !dbg !9087

for.cond28:                                       ; preds = %for.inc71, %if.then25
  %26 = load i32, i32* %y, align 4, !dbg !9088
  %27 = load i16*, i16** %sfb, align 8, !dbg !9091
  %arrayidx29 = getelementptr inbounds i16, i16* %27, i64 1, !dbg !9091
  %28 = load i16, i16* %arrayidx29, align 2, !dbg !9091
  %conv30 = sext i16 %28 to i32, !dbg !9092
  %29 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9093
  %subframe_len = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %29, i32 0, i32 40, !dbg !9094
  %30 = load i16, i16* %subframe_len, align 8, !dbg !9094
  %conv31 = sext i16 %30 to i32, !dbg !9095
  %cmp32 = icmp sgt i32 %conv30, %conv31, !dbg !9096
  br i1 %cmp32, label %cond.true, label %cond.false, !dbg !9092

cond.true:                                        ; preds = %for.cond28
  %31 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9097
  %subframe_len34 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %31, i32 0, i32 40, !dbg !9099
  %32 = load i16, i16* %subframe_len34, align 8, !dbg !9099
  %conv35 = sext i16 %32 to i32, !dbg !9100
  br label %cond.end, !dbg !9101

cond.false:                                       ; preds = %for.cond28
  %33 = load i16*, i16** %sfb, align 8, !dbg !9102
  %arrayidx36 = getelementptr inbounds i16, i16* %33, i64 1, !dbg !9102
  %34 = load i16, i16* %arrayidx36, align 2, !dbg !9102
  %conv37 = sext i16 %34 to i32, !dbg !9104
  br label %cond.end, !dbg !9105

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv35, %cond.true ], [ %conv37, %cond.false ], !dbg !9106
  %cmp38 = icmp slt i32 %26, %cond, !dbg !9108
  br i1 %cmp38, label %for.body40, label %for.end72, !dbg !9109

for.body40:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata float** %mat, metadata !9110, metadata !2019), !dbg !9112
  %35 = load i32, i32* %i, align 4, !dbg !9113
  %idxprom41 = sext i32 %35 to i64, !dbg !9114
  %36 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9114
  %chgroup42 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %36, i32 0, i32 50, !dbg !9115
  %arrayidx43 = getelementptr inbounds [8 x %struct.WMAProChannelGrp], [8 x %struct.WMAProChannelGrp]* %chgroup42, i64 0, i64 %idxprom41, !dbg !9114
  %decorrelation_matrix = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %arrayidx43, i32 0, i32 3, !dbg !9116
  %arraydecay44 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix, i32 0, i32 0, !dbg !9114
  store float* %arraydecay44, float** %mat, align 8, !dbg !9112
  call void @llvm.dbg.declare(metadata float** %data_end, metadata !9117, metadata !2019), !dbg !9118
  %arraydecay45 = getelementptr inbounds [8 x float], [8 x float]* %data, i32 0, i32 0, !dbg !9119
  %37 = load i32, i32* %num_channels, align 4, !dbg !9120
  %idx.ext46 = sext i32 %37 to i64, !dbg !9121
  %add.ptr47 = getelementptr inbounds float, float* %arraydecay45, i64 %idx.ext46, !dbg !9121
  store float* %add.ptr47, float** %data_end, align 8, !dbg !9118
  call void @llvm.dbg.declare(metadata float** %data_ptr, metadata !9122, metadata !2019), !dbg !9123
  %arraydecay48 = getelementptr inbounds [8 x float], [8 x float]* %data, i32 0, i32 0, !dbg !9124
  store float* %arraydecay48, float** %data_ptr, align 8, !dbg !9123
  call void @llvm.dbg.declare(metadata float*** %ch, metadata !9125, metadata !2019), !dbg !9126
  %38 = load float**, float*** %ch_data, align 8, !dbg !9127
  store float** %38, float*** %ch, align 8, !dbg !9129
  br label %for.cond49, !dbg !9130

for.cond49:                                       ; preds = %for.inc, %for.body40
  %39 = load float**, float*** %ch, align 8, !dbg !9131
  %40 = load float**, float*** %ch_end, align 8, !dbg !9134
  %cmp50 = icmp ult float** %39, %40, !dbg !9135
  br i1 %cmp50, label %for.body52, label %for.end, !dbg !9136

for.body52:                                       ; preds = %for.cond49
  %41 = load i32, i32* %y, align 4, !dbg !9137
  %idxprom53 = sext i32 %41 to i64, !dbg !9138
  %42 = load float**, float*** %ch, align 8, !dbg !9139
  %43 = load float*, float** %42, align 8, !dbg !9140
  %arrayidx54 = getelementptr inbounds float, float* %43, i64 %idxprom53, !dbg !9138
  %44 = load float, float* %arrayidx54, align 4, !dbg !9138
  %45 = load float*, float** %data_ptr, align 8, !dbg !9141
  %incdec.ptr55 = getelementptr inbounds float, float* %45, i32 1, !dbg !9141
  store float* %incdec.ptr55, float** %data_ptr, align 8, !dbg !9141
  store float %44, float* %45, align 4, !dbg !9142
  br label %for.inc, !dbg !9143

for.inc:                                          ; preds = %for.body52
  %46 = load float**, float*** %ch, align 8, !dbg !9144
  %incdec.ptr56 = getelementptr inbounds float*, float** %46, i32 1, !dbg !9144
  store float** %incdec.ptr56, float*** %ch, align 8, !dbg !9144
  br label %for.cond49, !dbg !9146, !llvm.loop !9147

for.end:                                          ; preds = %for.cond49
  %47 = load float**, float*** %ch_data, align 8, !dbg !9149
  store float** %47, float*** %ch, align 8, !dbg !9151
  br label %for.cond57, !dbg !9152

for.cond57:                                       ; preds = %for.inc68, %for.end
  %48 = load float**, float*** %ch, align 8, !dbg !9153
  %49 = load float**, float*** %ch_end, align 8, !dbg !9156
  %cmp58 = icmp ult float** %48, %49, !dbg !9157
  br i1 %cmp58, label %for.body60, label %for.end70, !dbg !9158

for.body60:                                       ; preds = %for.cond57
  call void @llvm.dbg.declare(metadata float* %sum, metadata !9159, metadata !2019), !dbg !9161
  store float 0.000000e+00, float* %sum, align 4, !dbg !9161
  %arraydecay61 = getelementptr inbounds [8 x float], [8 x float]* %data, i32 0, i32 0, !dbg !9162
  store float* %arraydecay61, float** %data_ptr, align 8, !dbg !9163
  br label %while.cond, !dbg !9164

while.cond:                                       ; preds = %while.body, %for.body60
  %50 = load float*, float** %data_ptr, align 8, !dbg !9165
  %51 = load float*, float** %data_end, align 8, !dbg !9167
  %cmp62 = icmp ult float* %50, %51, !dbg !9168
  br i1 %cmp62, label %while.body, label %while.end, !dbg !9169

while.body:                                       ; preds = %while.cond
  %52 = load float*, float** %data_ptr, align 8, !dbg !9170
  %incdec.ptr64 = getelementptr inbounds float, float* %52, i32 1, !dbg !9170
  store float* %incdec.ptr64, float** %data_ptr, align 8, !dbg !9170
  %53 = load float, float* %52, align 4, !dbg !9171
  %54 = load float*, float** %mat, align 8, !dbg !9172
  %incdec.ptr65 = getelementptr inbounds float, float* %54, i32 1, !dbg !9172
  store float* %incdec.ptr65, float** %mat, align 8, !dbg !9172
  %55 = load float, float* %54, align 4, !dbg !9173
  %mul = fmul float %53, %55, !dbg !9174
  %56 = load float, float* %sum, align 4, !dbg !9175
  %add = fadd float %56, %mul, !dbg !9175
  store float %add, float* %sum, align 4, !dbg !9175
  br label %while.cond, !dbg !9176, !llvm.loop !9178

while.end:                                        ; preds = %while.cond
  %57 = load float, float* %sum, align 4, !dbg !9179
  %58 = load i32, i32* %y, align 4, !dbg !9180
  %idxprom66 = sext i32 %58 to i64, !dbg !9181
  %59 = load float**, float*** %ch, align 8, !dbg !9182
  %60 = load float*, float** %59, align 8, !dbg !9183
  %arrayidx67 = getelementptr inbounds float, float* %60, i64 %idxprom66, !dbg !9181
  store float %57, float* %arrayidx67, align 4, !dbg !9184
  br label %for.inc68, !dbg !9185

for.inc68:                                        ; preds = %while.end
  %61 = load float**, float*** %ch, align 8, !dbg !9186
  %incdec.ptr69 = getelementptr inbounds float*, float** %61, i32 1, !dbg !9186
  store float** %incdec.ptr69, float*** %ch, align 8, !dbg !9186
  br label %for.cond57, !dbg !9188, !llvm.loop !9189

for.end70:                                        ; preds = %for.cond57
  br label %for.inc71, !dbg !9191

for.inc71:                                        ; preds = %for.end70
  %62 = load i32, i32* %y, align 4, !dbg !9192
  %inc = add nsw i32 %62, 1, !dbg !9192
  store i32 %inc, i32* %y, align 4, !dbg !9192
  br label %for.cond28, !dbg !9194, !llvm.loop !9195

for.end72:                                        ; preds = %cond.end
  br label %if.end115, !dbg !9197

if.else:                                          ; preds = %for.body21
  %63 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9198
  %nb_channels = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %63, i32 0, i32 41, !dbg !9201
  %64 = load i8, i8* %nb_channels, align 2, !dbg !9201
  %conv73 = sext i8 %64 to i32, !dbg !9198
  %cmp74 = icmp eq i32 %conv73, 2, !dbg !9202
  br i1 %cmp74, label %if.then76, label %if.end, !dbg !9198

if.then76:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9203, metadata !2019), !dbg !9205
  %65 = load i16*, i16** %sfb, align 8, !dbg !9206
  %arrayidx77 = getelementptr inbounds i16, i16* %65, i64 1, !dbg !9206
  %66 = load i16, i16* %arrayidx77, align 2, !dbg !9206
  %conv78 = sext i16 %66 to i32, !dbg !9207
  %67 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9208
  %subframe_len79 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %67, i32 0, i32 40, !dbg !9209
  %68 = load i16, i16* %subframe_len79, align 8, !dbg !9209
  %conv80 = sext i16 %68 to i32, !dbg !9210
  %cmp81 = icmp sgt i32 %conv78, %conv80, !dbg !9211
  br i1 %cmp81, label %cond.true83, label %cond.false86, !dbg !9207

cond.true83:                                      ; preds = %if.then76
  %69 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9212
  %subframe_len84 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %69, i32 0, i32 40, !dbg !9214
  %70 = load i16, i16* %subframe_len84, align 8, !dbg !9214
  %conv85 = sext i16 %70 to i32, !dbg !9215
  br label %cond.end89, !dbg !9216

cond.false86:                                     ; preds = %if.then76
  %71 = load i16*, i16** %sfb, align 8, !dbg !9217
  %arrayidx87 = getelementptr inbounds i16, i16* %71, i64 1, !dbg !9217
  %72 = load i16, i16* %arrayidx87, align 2, !dbg !9217
  %conv88 = sext i16 %72 to i32, !dbg !9219
  br label %cond.end89, !dbg !9220

cond.end89:                                       ; preds = %cond.false86, %cond.true83
  %cond90 = phi i32 [ %conv85, %cond.true83 ], [ %conv88, %cond.false86 ], !dbg !9221
  %73 = load i16*, i16** %sfb, align 8, !dbg !9223
  %arrayidx91 = getelementptr inbounds i16, i16* %73, i64 0, !dbg !9223
  %74 = load i16, i16* %arrayidx91, align 2, !dbg !9223
  %conv92 = sext i16 %74 to i32, !dbg !9223
  %sub = sub nsw i32 %cond90, %conv92, !dbg !9224
  store i32 %sub, i32* %len, align 4, !dbg !9225
  %75 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9226
  %fdsp = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %75, i32 0, i32 1, !dbg !9227
  %76 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !9227
  %vector_fmul_scalar = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %76, i32 0, i32 3, !dbg !9228
  %77 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmul_scalar, align 8, !dbg !9228
  %78 = load float**, float*** %ch_data, align 8, !dbg !9229
  %arrayidx93 = getelementptr inbounds float*, float** %78, i64 0, !dbg !9229
  %79 = load float*, float** %arrayidx93, align 8, !dbg !9229
  %80 = load i16*, i16** %sfb, align 8, !dbg !9230
  %arrayidx94 = getelementptr inbounds i16, i16* %80, i64 0, !dbg !9230
  %81 = load i16, i16* %arrayidx94, align 2, !dbg !9230
  %conv95 = sext i16 %81 to i32, !dbg !9230
  %idx.ext96 = sext i32 %conv95 to i64, !dbg !9231
  %add.ptr97 = getelementptr inbounds float, float* %79, i64 %idx.ext96, !dbg !9231
  %82 = load float**, float*** %ch_data, align 8, !dbg !9232
  %arrayidx98 = getelementptr inbounds float*, float** %82, i64 0, !dbg !9232
  %83 = load float*, float** %arrayidx98, align 8, !dbg !9232
  %84 = load i16*, i16** %sfb, align 8, !dbg !9233
  %arrayidx99 = getelementptr inbounds i16, i16* %84, i64 0, !dbg !9233
  %85 = load i16, i16* %arrayidx99, align 2, !dbg !9233
  %conv100 = sext i16 %85 to i32, !dbg !9233
  %idx.ext101 = sext i32 %conv100 to i64, !dbg !9234
  %add.ptr102 = getelementptr inbounds float, float* %83, i64 %idx.ext101, !dbg !9234
  %86 = load i32, i32* %len, align 4, !dbg !9235
  call void %77(float* %add.ptr97, float* %add.ptr102, float 0x3FF6A00000000000, i32 %86), !dbg !9226
  %87 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9236
  %fdsp103 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %87, i32 0, i32 1, !dbg !9237
  %88 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp103, align 8, !dbg !9237
  %vector_fmul_scalar104 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %88, i32 0, i32 3, !dbg !9238
  %89 = load void (float*, float*, float, i32)*, void (float*, float*, float, i32)** %vector_fmul_scalar104, align 8, !dbg !9238
  %90 = load float**, float*** %ch_data, align 8, !dbg !9239
  %arrayidx105 = getelementptr inbounds float*, float** %90, i64 1, !dbg !9239
  %91 = load float*, float** %arrayidx105, align 8, !dbg !9239
  %92 = load i16*, i16** %sfb, align 8, !dbg !9240
  %arrayidx106 = getelementptr inbounds i16, i16* %92, i64 0, !dbg !9240
  %93 = load i16, i16* %arrayidx106, align 2, !dbg !9240
  %conv107 = sext i16 %93 to i32, !dbg !9240
  %idx.ext108 = sext i32 %conv107 to i64, !dbg !9241
  %add.ptr109 = getelementptr inbounds float, float* %91, i64 %idx.ext108, !dbg !9241
  %94 = load float**, float*** %ch_data, align 8, !dbg !9242
  %arrayidx110 = getelementptr inbounds float*, float** %94, i64 1, !dbg !9242
  %95 = load float*, float** %arrayidx110, align 8, !dbg !9242
  %96 = load i16*, i16** %sfb, align 8, !dbg !9243
  %arrayidx111 = getelementptr inbounds i16, i16* %96, i64 0, !dbg !9243
  %97 = load i16, i16* %arrayidx111, align 2, !dbg !9243
  %conv112 = sext i16 %97 to i32, !dbg !9243
  %idx.ext113 = sext i32 %conv112 to i64, !dbg !9244
  %add.ptr114 = getelementptr inbounds float, float* %95, i64 %idx.ext113, !dbg !9244
  %98 = load i32, i32* %len, align 4, !dbg !9245
  call void %89(float* %add.ptr109, float* %add.ptr114, float 0x3FF6A00000000000, i32 %98), !dbg !9236
  br label %if.end, !dbg !9246

if.end:                                           ; preds = %cond.end89, %if.else
  br label %if.end115

if.end115:                                        ; preds = %if.end, %for.end72
  br label %for.inc116, !dbg !9247

for.inc116:                                       ; preds = %if.end115
  %99 = load i16*, i16** %sfb, align 8, !dbg !9248
  %incdec.ptr117 = getelementptr inbounds i16, i16* %99, i32 1, !dbg !9248
  store i16* %incdec.ptr117, i16** %sfb, align 8, !dbg !9248
  br label %for.cond14, !dbg !9250, !llvm.loop !9252

for.end118:                                       ; preds = %for.cond14
  br label %if.end119, !dbg !9254

if.end119:                                        ; preds = %for.end118, %for.body
  br label %for.inc120, !dbg !9255

for.inc120:                                       ; preds = %if.end119
  %100 = load i32, i32* %i, align 4, !dbg !9256
  %inc121 = add nsw i32 %100, 1, !dbg !9256
  store i32 %inc121, i32* %i, align 4, !dbg !9256
  br label %for.cond, !dbg !9258, !llvm.loop !9259

for.end122:                                       ; preds = %for.cond
  ret void, !dbg !9261
}

; Function Attrs: nounwind uwtable
define internal void @wmapro_window(%struct.WMAProDecodeCtx* %s) #1 !dbg !9262 {
entry:
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  %window = alloca float*, align 8
  %winlen = alloca i32, align 4
  %start = alloca float*, align 8
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !9263, metadata !2019), !dbg !9264
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9265, metadata !2019), !dbg !9266
  store i32 0, i32* %i, align 4, !dbg !9267
  br label %for.cond, !dbg !9269

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9270
  %1 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9273
  %channels_for_cur_subframe = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %1, i32 0, i32 42, !dbg !9274
  %2 = load i8, i8* %channels_for_cur_subframe, align 1, !dbg !9274
  %conv = sext i8 %2 to i32, !dbg !9273
  %cmp = icmp slt i32 %0, %conv, !dbg !9275
  br i1 %cmp, label %for.body, label %for.end, !dbg !9276

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %c, metadata !9277, metadata !2019), !dbg !9279
  %3 = load i32, i32* %i, align 4, !dbg !9280
  %idxprom = sext i32 %3 to i64, !dbg !9281
  %4 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9281
  %channel_indexes_for_cur_subframe = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %4, i32 0, i32 43, !dbg !9282
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %channel_indexes_for_cur_subframe, i64 0, i64 %idxprom, !dbg !9281
  %5 = load i8, i8* %arrayidx, align 1, !dbg !9281
  %conv2 = sext i8 %5 to i32, !dbg !9281
  store i32 %conv2, i32* %c, align 4, !dbg !9279
  call void @llvm.dbg.declare(metadata float** %window, metadata !9283, metadata !2019), !dbg !9284
  call void @llvm.dbg.declare(metadata i32* %winlen, metadata !9285, metadata !2019), !dbg !9286
  %6 = load i32, i32* %c, align 4, !dbg !9287
  %idxprom3 = sext i32 %6 to i64, !dbg !9288
  %7 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9288
  %channel = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %7, i32 0, i32 52, !dbg !9289
  %arrayidx4 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel, i64 0, i64 %idxprom3, !dbg !9288
  %prev_block_len = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx4, i32 0, i32 0, !dbg !9290
  %8 = load i16, i16* %prev_block_len, align 32, !dbg !9290
  %conv5 = sext i16 %8 to i32, !dbg !9288
  store i32 %conv5, i32* %winlen, align 4, !dbg !9286
  call void @llvm.dbg.declare(metadata float** %start, metadata !9291, metadata !2019), !dbg !9292
  %9 = load i32, i32* %c, align 4, !dbg !9293
  %idxprom6 = sext i32 %9 to i64, !dbg !9294
  %10 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9294
  %channel7 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %10, i32 0, i32 52, !dbg !9295
  %arrayidx8 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel7, i64 0, i64 %idxprom6, !dbg !9294
  %coeffs = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx8, i32 0, i32 16, !dbg !9296
  %11 = load float*, float** %coeffs, align 8, !dbg !9296
  %12 = load i32, i32* %winlen, align 4, !dbg !9297
  %shr = ashr i32 %12, 1, !dbg !9298
  %idx.ext = sext i32 %shr to i64, !dbg !9299
  %idx.neg = sub i64 0, %idx.ext, !dbg !9299
  %add.ptr = getelementptr inbounds float, float* %11, i64 %idx.neg, !dbg !9299
  store float* %add.ptr, float** %start, align 8, !dbg !9292
  %13 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9300
  %subframe_len = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %13, i32 0, i32 40, !dbg !9302
  %14 = load i16, i16* %subframe_len, align 8, !dbg !9302
  %conv9 = sext i16 %14 to i32, !dbg !9300
  %15 = load i32, i32* %winlen, align 4, !dbg !9303
  %cmp10 = icmp slt i32 %conv9, %15, !dbg !9304
  br i1 %cmp10, label %if.then, label %if.end, !dbg !9305

if.then:                                          ; preds = %for.body
  %16 = load i32, i32* %winlen, align 4, !dbg !9306
  %17 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9308
  %subframe_len12 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %17, i32 0, i32 40, !dbg !9309
  %18 = load i16, i16* %subframe_len12, align 8, !dbg !9309
  %conv13 = sext i16 %18 to i32, !dbg !9308
  %sub = sub nsw i32 %16, %conv13, !dbg !9310
  %shr14 = ashr i32 %sub, 1, !dbg !9311
  %19 = load float*, float** %start, align 8, !dbg !9312
  %idx.ext15 = sext i32 %shr14 to i64, !dbg !9312
  %add.ptr16 = getelementptr inbounds float, float* %19, i64 %idx.ext15, !dbg !9312
  store float* %add.ptr16, float** %start, align 8, !dbg !9312
  %20 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9313
  %subframe_len17 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %20, i32 0, i32 40, !dbg !9314
  %21 = load i16, i16* %subframe_len17, align 8, !dbg !9314
  %conv18 = sext i16 %21 to i32, !dbg !9313
  store i32 %conv18, i32* %winlen, align 4, !dbg !9315
  br label %if.end, !dbg !9316

if.end:                                           ; preds = %if.then, %for.body
  %22 = load i32, i32* %winlen, align 4, !dbg !9317
  %or = or i32 %22, 1, !dbg !9318
  %23 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !9319
  %sub19 = sub nsw i32 31, %23, !dbg !9320
  %sub20 = sub nsw i32 %sub19, 6, !dbg !9321
  %idxprom21 = sext i32 %sub20 to i64, !dbg !9322
  %24 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9322
  %windows = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %24, i32 0, i32 7, !dbg !9323
  %arrayidx22 = getelementptr inbounds [8 x float*], [8 x float*]* %windows, i64 0, i64 %idxprom21, !dbg !9322
  %25 = load float*, float** %arrayidx22, align 8, !dbg !9322
  store float* %25, float** %window, align 8, !dbg !9324
  %26 = load i32, i32* %winlen, align 4, !dbg !9325
  %shr23 = ashr i32 %26, 1, !dbg !9325
  store i32 %shr23, i32* %winlen, align 4, !dbg !9325
  %27 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9326
  %fdsp = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %27, i32 0, i32 1, !dbg !9327
  %28 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !9327
  %vector_fmul_window = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %28, i32 0, i32 5, !dbg !9328
  %29 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window, align 8, !dbg !9328
  %30 = load float*, float** %start, align 8, !dbg !9329
  %31 = load float*, float** %start, align 8, !dbg !9330
  %32 = load float*, float** %start, align 8, !dbg !9331
  %33 = load i32, i32* %winlen, align 4, !dbg !9332
  %idx.ext24 = sext i32 %33 to i64, !dbg !9333
  %add.ptr25 = getelementptr inbounds float, float* %32, i64 %idx.ext24, !dbg !9333
  %34 = load float*, float** %window, align 8, !dbg !9334
  %35 = load i32, i32* %winlen, align 4, !dbg !9335
  call void %29(float* %30, float* %31, float* %add.ptr25, float* %34, i32 %35), !dbg !9326
  %36 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9336
  %subframe_len26 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %36, i32 0, i32 40, !dbg !9337
  %37 = load i16, i16* %subframe_len26, align 8, !dbg !9337
  %38 = load i32, i32* %c, align 4, !dbg !9338
  %idxprom27 = sext i32 %38 to i64, !dbg !9339
  %39 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9339
  %channel28 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %39, i32 0, i32 52, !dbg !9340
  %arrayidx29 = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel28, i64 0, i64 %idxprom27, !dbg !9339
  %prev_block_len30 = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx29, i32 0, i32 0, !dbg !9341
  store i16 %37, i16* %prev_block_len30, align 32, !dbg !9342
  br label %for.inc, !dbg !9343

for.inc:                                          ; preds = %if.end
  %40 = load i32, i32* %i, align 4, !dbg !9344
  %inc = add nsw i32 %40, 1, !dbg !9344
  store i32 %inc, i32* %i, align 4, !dbg !9344
  br label %for.cond, !dbg !9346, !llvm.loop !9347

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9349
}

; Function Attrs: nounwind uwtable
define internal void @decode_decorrelation_matrix(%struct.WMAProDecodeCtx* %s, %struct.WMAProChannelGrp* %chgroup) #1 !dbg !9350 {
entry:
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %chgroup.addr = alloca %struct.WMAProChannelGrp*, align 8
  %i = alloca i32, align 4
  %offset = alloca i32, align 4
  %rotation_offset = alloca [64 x i8], align 16
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %v1 = alloca float, align 4
  %v2 = alloca float, align 4
  %n = alloca i32, align 4
  %sinv = alloca float, align 4
  %cosv = alloca float, align 4
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !9353, metadata !2019), !dbg !9354
  store %struct.WMAProChannelGrp* %chgroup, %struct.WMAProChannelGrp** %chgroup.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProChannelGrp** %chgroup.addr, metadata !9355, metadata !2019), !dbg !9356
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9357, metadata !2019), !dbg !9358
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !9359, metadata !2019), !dbg !9360
  store i32 0, i32* %offset, align 4, !dbg !9360
  call void @llvm.dbg.declare(metadata [64 x i8]* %rotation_offset, metadata !9361, metadata !2019), !dbg !9363
  %0 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9364
  %decorrelation_matrix = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %0, i32 0, i32 3, !dbg !9365
  %arraydecay = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix, i32 0, i32 0, !dbg !9366
  %1 = bitcast float* %arraydecay to i8*, !dbg !9366
  %2 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9367
  %nb_channels = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %2, i32 0, i32 41, !dbg !9368
  %3 = load i8, i8* %nb_channels, align 2, !dbg !9368
  %conv = sext i8 %3 to i32, !dbg !9367
  %4 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9369
  %nb_channels1 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %4, i32 0, i32 41, !dbg !9370
  %5 = load i8, i8* %nb_channels1, align 2, !dbg !9370
  %conv2 = sext i8 %5 to i32, !dbg !9369
  %mul = mul nsw i32 %conv, %conv2, !dbg !9371
  %conv3 = sext i32 %mul to i64, !dbg !9367
  %mul4 = mul i64 %conv3, 4, !dbg !9372
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 %mul4, i32 8, i1 false), !dbg !9366
  store i32 0, i32* %i, align 4, !dbg !9373
  br label %for.cond, !dbg !9375

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !9376
  %7 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9379
  %num_channels = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %7, i32 0, i32 0, !dbg !9380
  %8 = load i8, i8* %num_channels, align 8, !dbg !9380
  %conv5 = zext i8 %8 to i32, !dbg !9379
  %9 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9381
  %num_channels6 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %9, i32 0, i32 0, !dbg !9382
  %10 = load i8, i8* %num_channels6, align 8, !dbg !9382
  %conv7 = zext i8 %10 to i32, !dbg !9381
  %sub = sub nsw i32 %conv7, 1, !dbg !9383
  %mul8 = mul nsw i32 %conv5, %sub, !dbg !9384
  %shr = ashr i32 %mul8, 1, !dbg !9385
  %cmp = icmp slt i32 %6, %shr, !dbg !9386
  br i1 %cmp, label %for.body, label %for.end, !dbg !9387

for.body:                                         ; preds = %for.cond
  %11 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9388
  %gb = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %11, i32 0, i32 34, !dbg !9389
  %call = call i32 @get_bits(%struct.GetBitContext* %gb, i32 6), !dbg !9390
  %conv10 = trunc i32 %call to i8, !dbg !9390
  %12 = load i32, i32* %i, align 4, !dbg !9391
  %idxprom = sext i32 %12 to i64, !dbg !9392
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %rotation_offset, i64 0, i64 %idxprom, !dbg !9392
  store i8 %conv10, i8* %arrayidx, align 1, !dbg !9393
  br label %for.inc, !dbg !9392

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !9394
  %inc = add nsw i32 %13, 1, !dbg !9394
  store i32 %inc, i32* %i, align 4, !dbg !9394
  br label %for.cond, !dbg !9396, !llvm.loop !9397

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9399
  br label %for.cond11, !dbg !9401

for.cond11:                                       ; preds = %for.inc26, %for.end
  %14 = load i32, i32* %i, align 4, !dbg !9402
  %15 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9405
  %num_channels12 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %15, i32 0, i32 0, !dbg !9406
  %16 = load i8, i8* %num_channels12, align 8, !dbg !9406
  %conv13 = zext i8 %16 to i32, !dbg !9405
  %cmp14 = icmp slt i32 %14, %conv13, !dbg !9407
  br i1 %cmp14, label %for.body16, label %for.end28, !dbg !9408

for.body16:                                       ; preds = %for.cond11
  %17 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9409
  %gb17 = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %17, i32 0, i32 34, !dbg !9410
  %call18 = call i32 @get_bits1(%struct.GetBitContext* %gb17), !dbg !9411
  %tobool = icmp ne i32 %call18, 0, !dbg !9411
  %cond = select i1 %tobool, double 1.000000e+00, double -1.000000e+00, !dbg !9411
  %conv19 = fptrunc double %cond to float, !dbg !9411
  %18 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9412
  %num_channels20 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %18, i32 0, i32 0, !dbg !9413
  %19 = load i8, i8* %num_channels20, align 8, !dbg !9413
  %conv21 = zext i8 %19 to i32, !dbg !9412
  %20 = load i32, i32* %i, align 4, !dbg !9414
  %mul22 = mul nsw i32 %conv21, %20, !dbg !9415
  %21 = load i32, i32* %i, align 4, !dbg !9416
  %add = add nsw i32 %mul22, %21, !dbg !9417
  %idxprom23 = sext i32 %add to i64, !dbg !9418
  %22 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9418
  %decorrelation_matrix24 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %22, i32 0, i32 3, !dbg !9419
  %arrayidx25 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix24, i64 0, i64 %idxprom23, !dbg !9418
  store float %conv19, float* %arrayidx25, align 4, !dbg !9420
  br label %for.inc26, !dbg !9418

for.inc26:                                        ; preds = %for.body16
  %23 = load i32, i32* %i, align 4, !dbg !9421
  %inc27 = add nsw i32 %23, 1, !dbg !9421
  store i32 %inc27, i32* %i, align 4, !dbg !9421
  br label %for.cond11, !dbg !9423, !llvm.loop !9424

for.end28:                                        ; preds = %for.cond11
  store i32 1, i32* %i, align 4, !dbg !9426
  br label %for.cond29, !dbg !9428

for.cond29:                                       ; preds = %for.inc103, %for.end28
  %24 = load i32, i32* %i, align 4, !dbg !9429
  %25 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9432
  %num_channels30 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %25, i32 0, i32 0, !dbg !9433
  %26 = load i8, i8* %num_channels30, align 8, !dbg !9433
  %conv31 = zext i8 %26 to i32, !dbg !9432
  %cmp32 = icmp slt i32 %24, %conv31, !dbg !9434
  br i1 %cmp32, label %for.body34, label %for.end105, !dbg !9435

for.body34:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9436, metadata !2019), !dbg !9438
  store i32 0, i32* %x, align 4, !dbg !9439
  br label %for.cond35, !dbg !9441

for.cond35:                                       ; preds = %for.inc99, %for.body34
  %27 = load i32, i32* %x, align 4, !dbg !9442
  %28 = load i32, i32* %i, align 4, !dbg !9445
  %cmp36 = icmp slt i32 %27, %28, !dbg !9446
  br i1 %cmp36, label %for.body38, label %for.end101, !dbg !9447

for.body38:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9448, metadata !2019), !dbg !9450
  store i32 0, i32* %y, align 4, !dbg !9451
  br label %for.cond39, !dbg !9453

for.cond39:                                       ; preds = %for.inc96, %for.body38
  %29 = load i32, i32* %y, align 4, !dbg !9454
  %30 = load i32, i32* %i, align 4, !dbg !9457
  %add40 = add nsw i32 %30, 1, !dbg !9458
  %cmp41 = icmp slt i32 %29, %add40, !dbg !9459
  br i1 %cmp41, label %for.body43, label %for.end98, !dbg !9460

for.body43:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata float* %v1, metadata !9461, metadata !2019), !dbg !9463
  %31 = load i32, i32* %x, align 4, !dbg !9464
  %32 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9465
  %num_channels44 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %32, i32 0, i32 0, !dbg !9466
  %33 = load i8, i8* %num_channels44, align 8, !dbg !9466
  %conv45 = zext i8 %33 to i32, !dbg !9465
  %mul46 = mul nsw i32 %31, %conv45, !dbg !9467
  %34 = load i32, i32* %y, align 4, !dbg !9468
  %add47 = add nsw i32 %mul46, %34, !dbg !9469
  %idxprom48 = sext i32 %add47 to i64, !dbg !9470
  %35 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9470
  %decorrelation_matrix49 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %35, i32 0, i32 3, !dbg !9471
  %arrayidx50 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix49, i64 0, i64 %idxprom48, !dbg !9470
  %36 = load float, float* %arrayidx50, align 4, !dbg !9470
  store float %36, float* %v1, align 4, !dbg !9463
  call void @llvm.dbg.declare(metadata float* %v2, metadata !9472, metadata !2019), !dbg !9473
  %37 = load i32, i32* %i, align 4, !dbg !9474
  %38 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9475
  %num_channels51 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %38, i32 0, i32 0, !dbg !9476
  %39 = load i8, i8* %num_channels51, align 8, !dbg !9476
  %conv52 = zext i8 %39 to i32, !dbg !9475
  %mul53 = mul nsw i32 %37, %conv52, !dbg !9477
  %40 = load i32, i32* %y, align 4, !dbg !9478
  %add54 = add nsw i32 %mul53, %40, !dbg !9479
  %idxprom55 = sext i32 %add54 to i64, !dbg !9480
  %41 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9480
  %decorrelation_matrix56 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %41, i32 0, i32 3, !dbg !9481
  %arrayidx57 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix56, i64 0, i64 %idxprom55, !dbg !9480
  %42 = load float, float* %arrayidx57, align 4, !dbg !9480
  store float %42, float* %v2, align 4, !dbg !9473
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9482, metadata !2019), !dbg !9483
  %43 = load i32, i32* %offset, align 4, !dbg !9484
  %44 = load i32, i32* %x, align 4, !dbg !9485
  %add58 = add nsw i32 %43, %44, !dbg !9486
  %idxprom59 = sext i32 %add58 to i64, !dbg !9487
  %arrayidx60 = getelementptr inbounds [64 x i8], [64 x i8]* %rotation_offset, i64 0, i64 %idxprom59, !dbg !9487
  %45 = load i8, i8* %arrayidx60, align 1, !dbg !9487
  %conv61 = sext i8 %45 to i32, !dbg !9487
  store i32 %conv61, i32* %n, align 4, !dbg !9483
  call void @llvm.dbg.declare(metadata float* %sinv, metadata !9488, metadata !2019), !dbg !9489
  call void @llvm.dbg.declare(metadata float* %cosv, metadata !9490, metadata !2019), !dbg !9491
  %46 = load i32, i32* %n, align 4, !dbg !9492
  %cmp62 = icmp slt i32 %46, 32, !dbg !9494
  br i1 %cmp62, label %if.then, label %if.else, !dbg !9495

if.then:                                          ; preds = %for.body43
  %47 = load i32, i32* %n, align 4, !dbg !9496
  %idxprom64 = sext i32 %47 to i64, !dbg !9498
  %arrayidx65 = getelementptr inbounds [33 x float], [33 x float]* @sin64, i64 0, i64 %idxprom64, !dbg !9498
  %48 = load float, float* %arrayidx65, align 4, !dbg !9498
  store float %48, float* %sinv, align 4, !dbg !9499
  %49 = load i32, i32* %n, align 4, !dbg !9500
  %sub66 = sub nsw i32 32, %49, !dbg !9501
  %idxprom67 = sext i32 %sub66 to i64, !dbg !9502
  %arrayidx68 = getelementptr inbounds [33 x float], [33 x float]* @sin64, i64 0, i64 %idxprom67, !dbg !9502
  %50 = load float, float* %arrayidx68, align 4, !dbg !9502
  store float %50, float* %cosv, align 4, !dbg !9503
  br label %if.end, !dbg !9504

if.else:                                          ; preds = %for.body43
  %51 = load i32, i32* %n, align 4, !dbg !9505
  %sub69 = sub nsw i32 64, %51, !dbg !9507
  %idxprom70 = sext i32 %sub69 to i64, !dbg !9508
  %arrayidx71 = getelementptr inbounds [33 x float], [33 x float]* @sin64, i64 0, i64 %idxprom70, !dbg !9508
  %52 = load float, float* %arrayidx71, align 4, !dbg !9508
  store float %52, float* %sinv, align 4, !dbg !9509
  %53 = load i32, i32* %n, align 4, !dbg !9510
  %sub72 = sub nsw i32 %53, 32, !dbg !9511
  %idxprom73 = sext i32 %sub72 to i64, !dbg !9512
  %arrayidx74 = getelementptr inbounds [33 x float], [33 x float]* @sin64, i64 0, i64 %idxprom73, !dbg !9512
  %54 = load float, float* %arrayidx74, align 4, !dbg !9512
  %sub75 = fsub float -0.000000e+00, %54, !dbg !9513
  store float %sub75, float* %cosv, align 4, !dbg !9514
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %55 = load float, float* %v1, align 4, !dbg !9515
  %56 = load float, float* %sinv, align 4, !dbg !9516
  %mul76 = fmul float %55, %56, !dbg !9517
  %57 = load float, float* %v2, align 4, !dbg !9518
  %58 = load float, float* %cosv, align 4, !dbg !9519
  %mul77 = fmul float %57, %58, !dbg !9520
  %sub78 = fsub float %mul76, %mul77, !dbg !9521
  %59 = load i32, i32* %y, align 4, !dbg !9522
  %60 = load i32, i32* %x, align 4, !dbg !9523
  %61 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9524
  %num_channels79 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %61, i32 0, i32 0, !dbg !9525
  %62 = load i8, i8* %num_channels79, align 8, !dbg !9525
  %conv80 = zext i8 %62 to i32, !dbg !9524
  %mul81 = mul nsw i32 %60, %conv80, !dbg !9526
  %add82 = add nsw i32 %59, %mul81, !dbg !9527
  %idxprom83 = sext i32 %add82 to i64, !dbg !9528
  %63 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9528
  %decorrelation_matrix84 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %63, i32 0, i32 3, !dbg !9529
  %arrayidx85 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix84, i64 0, i64 %idxprom83, !dbg !9528
  store float %sub78, float* %arrayidx85, align 4, !dbg !9530
  %64 = load float, float* %v1, align 4, !dbg !9531
  %65 = load float, float* %cosv, align 4, !dbg !9532
  %mul86 = fmul float %64, %65, !dbg !9533
  %66 = load float, float* %v2, align 4, !dbg !9534
  %67 = load float, float* %sinv, align 4, !dbg !9535
  %mul87 = fmul float %66, %67, !dbg !9536
  %add88 = fadd float %mul86, %mul87, !dbg !9537
  %68 = load i32, i32* %y, align 4, !dbg !9538
  %69 = load i32, i32* %i, align 4, !dbg !9539
  %70 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9540
  %num_channels89 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %70, i32 0, i32 0, !dbg !9541
  %71 = load i8, i8* %num_channels89, align 8, !dbg !9541
  %conv90 = zext i8 %71 to i32, !dbg !9540
  %mul91 = mul nsw i32 %69, %conv90, !dbg !9542
  %add92 = add nsw i32 %68, %mul91, !dbg !9543
  %idxprom93 = sext i32 %add92 to i64, !dbg !9544
  %72 = load %struct.WMAProChannelGrp*, %struct.WMAProChannelGrp** %chgroup.addr, align 8, !dbg !9544
  %decorrelation_matrix94 = getelementptr inbounds %struct.WMAProChannelGrp, %struct.WMAProChannelGrp* %72, i32 0, i32 3, !dbg !9545
  %arrayidx95 = getelementptr inbounds [64 x float], [64 x float]* %decorrelation_matrix94, i64 0, i64 %idxprom93, !dbg !9544
  store float %add88, float* %arrayidx95, align 4, !dbg !9546
  br label %for.inc96, !dbg !9547

for.inc96:                                        ; preds = %if.end
  %73 = load i32, i32* %y, align 4, !dbg !9548
  %inc97 = add nsw i32 %73, 1, !dbg !9548
  store i32 %inc97, i32* %y, align 4, !dbg !9548
  br label %for.cond39, !dbg !9550, !llvm.loop !9551

for.end98:                                        ; preds = %for.cond39
  br label %for.inc99, !dbg !9553

for.inc99:                                        ; preds = %for.end98
  %74 = load i32, i32* %x, align 4, !dbg !9554
  %inc100 = add nsw i32 %74, 1, !dbg !9554
  store i32 %inc100, i32* %x, align 4, !dbg !9554
  br label %for.cond35, !dbg !9556, !llvm.loop !9557

for.end101:                                       ; preds = %for.cond35
  %75 = load i32, i32* %i, align 4, !dbg !9559
  %76 = load i32, i32* %offset, align 4, !dbg !9560
  %add102 = add nsw i32 %76, %75, !dbg !9560
  store i32 %add102, i32* %offset, align 4, !dbg !9560
  br label %for.inc103, !dbg !9561

for.inc103:                                       ; preds = %for.end101
  %77 = load i32, i32* %i, align 4, !dbg !9562
  %inc104 = add nsw i32 %77, 1, !dbg !9562
  store i32 %inc104, i32* %i, align 4, !dbg !9562
  br label %for.cond29, !dbg !9564, !llvm.loop !9565

for.end105:                                       ; preds = %for.cond29
  ret void, !dbg !9567
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_SSR32(i32 %a, i8 signext %s) #4 !dbg !9568 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !9572, metadata !2019), !dbg !9573
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !9574, metadata !2019), !dbg !9575
  %0 = load i32, i32* %a.addr, align 4, !dbg !9576
  %1 = load i8, i8* %s.addr, align 1, !dbg !9577
  %conv = sext i8 %1 to i32, !dbg !9577
  %sub = sub nsw i32 0, %conv, !dbg !9578
  %conv1 = trunc i32 %sub to i8, !dbg !9579
  %2 = call i32 asm "sarl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !9576, !srcloc !9580
  store i32 %2, i32* %a.addr, align 4, !dbg !9576
  %3 = load i32, i32* %a.addr, align 4, !dbg !9581
  ret i32 %3, !dbg !9582
}

declare i32 @ff_wma_get_large_val(%struct.GetBitContext*) #3

declare i32 @ff_wma_run_level_decode(%struct.AVCodecContext*, %struct.GetBitContext*, %struct.VLC*, float*, i16*, i32, float*, i32, i32, i32, i32, i32) #3

; Function Attrs: nounwind
declare double @exp2(double) #6

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @decode_end(%struct.WMAProDecodeCtx* %s) #0 !dbg !9583 {
entry:
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %i = alloca i32, align 4
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !9584, metadata !2019), !dbg !9585
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9586, metadata !2019), !dbg !9587
  %0 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9588
  %fdsp = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %0, i32 0, i32 1, !dbg !9589
  %1 = bitcast %struct.AVFloatDSPContext** %fdsp to i8*, !dbg !9590
  call void @av_freep(i8* %1), !dbg !9591
  store i32 0, i32* %i, align 4, !dbg !9592
  br label %for.cond, !dbg !9594

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !9595
  %cmp = icmp slt i32 %2, 8, !dbg !9598
  br i1 %cmp, label %for.body, label %for.end, !dbg !9599

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !9600
  %idxprom = sext i32 %3 to i64, !dbg !9601
  %4 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9601
  %mdct_ctx = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %4, i32 0, i32 4, !dbg !9602
  %arrayidx = getelementptr inbounds [8 x %struct.FFTContext], [8 x %struct.FFTContext]* %mdct_ctx, i64 0, i64 %idxprom, !dbg !9601
  call void @ff_mdct_end(%struct.FFTContext* %arrayidx), !dbg !9603
  br label %for.inc, !dbg !9603

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !9604
  %inc = add nsw i32 %5, 1, !dbg !9604
  store i32 %inc, i32* %i, align 4, !dbg !9604
  br label %for.cond, !dbg !9606, !llvm.loop !9607

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !9609
}

declare void @av_freep(i8*) #3

declare void @ff_mdct_end(%struct.FFTContext*) #3

; Function Attrs: nounwind uwtable
define internal void @flush(%struct.WMAProDecodeCtx* %s) #1 !dbg !9610 {
entry:
  %s.addr = alloca %struct.WMAProDecodeCtx*, align 8
  %i = alloca i32, align 4
  store %struct.WMAProDecodeCtx* %s, %struct.WMAProDecodeCtx** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WMAProDecodeCtx** %s.addr, metadata !9611, metadata !2019), !dbg !9612
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9613, metadata !2019), !dbg !9614
  store i32 0, i32* %i, align 4, !dbg !9615
  br label %for.cond, !dbg !9617

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9618
  %1 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9621
  %nb_channels = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %1, i32 0, i32 41, !dbg !9622
  %2 = load i8, i8* %nb_channels, align 2, !dbg !9622
  %conv = sext i8 %2 to i32, !dbg !9621
  %cmp = icmp slt i32 %0, %conv, !dbg !9623
  br i1 %cmp, label %for.body, label %for.end, !dbg !9624

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !9625
  %idxprom = sext i32 %3 to i64, !dbg !9626
  %4 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9626
  %channel = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %4, i32 0, i32 52, !dbg !9627
  %arrayidx = getelementptr inbounds [8 x %struct.WMAProChannelCtx], [8 x %struct.WMAProChannelCtx]* %channel, i64 0, i64 %idxprom, !dbg !9626
  %out = getelementptr inbounds %struct.WMAProChannelCtx, %struct.WMAProChannelCtx* %arrayidx, i32 0, i32 19, !dbg !9628
  %arraydecay = getelementptr inbounds [12288 x float], [12288 x float]* %out, i32 0, i32 0, !dbg !9629
  %5 = bitcast float* %arraydecay to i8*, !dbg !9629
  %6 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9630
  %samples_per_frame = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %6, i32 0, i32 12, !dbg !9631
  %7 = load i16, i16* %samples_per_frame, align 8, !dbg !9631
  %conv2 = zext i16 %7 to i64, !dbg !9630
  %mul = mul i64 %conv2, 4, !dbg !9632
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 %mul, i32 32, i1 false), !dbg !9629
  br label %for.inc, !dbg !9629

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !9633
  %inc = add nsw i32 %8, 1, !dbg !9633
  store i32 %inc, i32* %i, align 4, !dbg !9633
  br label %for.cond, !dbg !9635, !llvm.loop !9636

for.end:                                          ; preds = %for.cond
  %9 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9638
  %packet_loss = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %9, i32 0, i32 30, !dbg !9639
  store i8 1, i8* %packet_loss, align 4, !dbg !9640
  %10 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9641
  %skip_packets = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %10, i32 0, i32 39, !dbg !9642
  store i8 0, i8* %skip_packets, align 1, !dbg !9643
  %11 = load %struct.WMAProDecodeCtx*, %struct.WMAProDecodeCtx** %s.addr, align 8, !dbg !9644
  %eof_done = getelementptr inbounds %struct.WMAProDecodeCtx, %struct.WMAProDecodeCtx* %11, i32 0, i32 32, !dbg !9645
  store i8 0, i8* %eof_done, align 2, !dbg !9646
  ret void, !dbg !9647
}

declare %struct.AVFrame* @av_frame_alloc() #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #7

declare void @av_frame_free(%struct.AVFrame**) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2014, !2015}
!llvm.ident = !{!2016}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !897, globals: !934)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--wmaprodec.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881, !887, !893}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !888, line: 77, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!891 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!892 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !888, line: 83, size: 32, align: 32, elements: !894)
!894 = !{!895, !896}
!895 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!896 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!897 = !{!898, !907, !914, !913, !915, !916, !918, !919}
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64, align: 64)
!899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !900)
!900 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !901, line: 222, size: 16, align: 8, elements: !902)
!901 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!902 = !{!903}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !900, file: !901, line: 222, baseType: !904, size: 16, align: 16)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !905, line: 49, baseType: !906)
!905 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!906 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64, align: 64)
!908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !909)
!909 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !901, line: 221, size: 32, align: 8, elements: !910)
!910 = !{!911}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !909, file: !901, line: 221, baseType: !912, size: 32, align: 32)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !905, line: 51, baseType: !913)
!913 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!914 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !905, line: 48, baseType: !917)
!917 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64, align: 64)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64, align: 64)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "av_alias32", file: !901, line: 41, baseType: !921)
!921 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !901, line: 36, size: 32, align: 32, elements: !922)
!922 = !{!923, !924, !928, !932}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !921, file: !901, line: 37, baseType: !912, size: 32, align: 32)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !921, file: !901, line: 38, baseType: !925, size: 32, align: 16)
!925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 32, align: 16, elements: !926)
!926 = !{!927}
!927 = !DISubrange(count: 2)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !921, file: !901, line: 39, baseType: !929, size: 32, align: 8)
!929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 32, align: 8, elements: !930)
!930 = !{!931}
!931 = !DISubrange(count: 4)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "f32", scope: !921, file: !901, line: 40, baseType: !933, size: 32, align: 32)
!933 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!934 = !{!935, !1658, !1659, !1660, !1895, !1899, !1903, !1907, !1911, !1915, !1916, !1927, !1932, !1935, !1936, !1940, !1943, !1945, !1949, !1951, !1955, !1957, !1958, !1962, !1964, !1965, !1969, !1971, !1972, !1976, !1978, !1982, !1986, !1991, !1995, !1996, !1997, !2004, !2006, !2008, !2010, !2012, !2013}
!935 = distinct !DIGlobalVariable(name: "ff_wmapro_decoder", scope: !0, file: !936, line: 1984, type: !937, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_wmapro_decoder)
!936 = !DIFile(filename: "libavcodec/wmaprodec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !938)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !939)
!939 = !{!940, !944, !945, !946, !947, !948, !957, !960, !963, !966, !971, !972, !1013, !1021, !1022, !1023, !1025, !1573, !1579, !1587, !1591, !1592, !1629, !1633, !1637, !1638, !1642, !1646, !1647, !1651, !1652, !1653}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !938, file: !14, line: 3475, baseType: !941, size: 64, align: 64)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64, align: 64)
!942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !943)
!943 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !938, file: !14, line: 3480, baseType: !941, size: 64, align: 64, offset: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !938, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !938, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !938, file: !14, line: 3487, baseType: !914, size: 32, align: 32, offset: 192)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !938, file: !14, line: 3488, baseType: !949, size: 64, align: 64, offset: 256)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64, align: 64)
!950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !951)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !952, line: 61, baseType: !953)
!952 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !952, line: 58, size: 64, align: 32, elements: !954)
!954 = !{!955, !956}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !953, file: !952, line: 59, baseType: !914, size: 32, align: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !953, file: !952, line: 60, baseType: !914, size: 32, align: 32, offset: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !938, file: !14, line: 3489, baseType: !958, size: 64, align: 64, offset: 320)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64, align: 64)
!959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !938, file: !14, line: 3490, baseType: !961, size: 64, align: 64, offset: 384)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64, align: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !914)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !938, file: !14, line: 3491, baseType: !964, size: 64, align: 64, offset: 448)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !938, file: !14, line: 3492, baseType: !967, size: 64, align: 64, offset: 512)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64, align: 64)
!968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !905, line: 55, baseType: !970)
!970 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !938, file: !14, line: 3493, baseType: !916, size: 8, align: 8, offset: 576)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !938, file: !14, line: 3494, baseType: !973, size: 64, align: 64, offset: 640)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64, align: 64)
!974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !977)
!977 = !{!978, !979, !983, !987, !988, !989, !990, !994, !1000, !1002, !1006}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !976, file: !691, line: 72, baseType: !941, size: 64, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !976, file: !691, line: 78, baseType: !980, size: 64, align: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64, align: 64)
!981 = !DISubroutineType(types: !982)
!982 = !{!941, !915}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !976, file: !691, line: 85, baseType: !984, size: 64, align: 64, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64, align: 64)
!985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!986 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !976, file: !691, line: 93, baseType: !914, size: 32, align: 32, offset: 192)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !976, file: !691, line: 99, baseType: !914, size: 32, align: 32, offset: 224)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !976, file: !691, line: 108, baseType: !914, size: 32, align: 32, offset: 256)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !976, file: !691, line: 113, baseType: !991, size: 64, align: 64, offset: 320)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!992 = !DISubroutineType(types: !993)
!993 = !{!915, !915, !915}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !976, file: !691, line: 123, baseType: !995, size: 64, align: 64, offset: 384)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64, align: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{!998, !998}
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64, align: 64)
!999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !976, file: !691, line: 130, baseType: !1001, size: 32, align: 32, offset: 448)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !976, file: !691, line: 136, baseType: !1003, size: 64, align: 64, offset: 512)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64, align: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!1001, !915}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !976, file: !691, line: 142, baseType: !1007, size: 64, align: 64, offset: 576)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64, align: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!914, !1010, !915, !941, !914}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64, align: 64)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64, align: 64)
!1012 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !938, file: !14, line: 3495, baseType: !1014, size: 64, align: 64, offset: 704)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64, align: 64)
!1015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1016)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1017)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1018)
!1018 = !{!1019, !1020}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1017, file: !14, line: 3402, baseType: !914, size: 32, align: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1017, file: !14, line: 3403, baseType: !941, size: 64, align: 64, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !938, file: !14, line: 3507, baseType: !941, size: 64, align: 64, offset: 768)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !938, file: !14, line: 3516, baseType: !914, size: 32, align: 32, offset: 832)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !938, file: !14, line: 3517, baseType: !1024, size: 64, align: 64, offset: 896)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64, align: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !938, file: !14, line: 3527, baseType: !1026, size: 64, align: 64, offset: 960)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64, align: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!914, !1029}
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64, align: 64)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1032)
!1032 = !{!1033, !1034, !1035, !1036, !1039, !1040, !1041, !1042, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1322, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1511, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1031, file: !14, line: 1561, baseType: !973, size: 64, align: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1031, file: !14, line: 1562, baseType: !914, size: 32, align: 32, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1031, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1031, file: !14, line: 1565, baseType: !1037, size: 64, align: 64, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64, align: 64)
!1038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !938)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1031, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1031, file: !14, line: 1581, baseType: !913, size: 32, align: 32, offset: 224)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1031, file: !14, line: 1583, baseType: !915, size: 64, align: 64, offset: 256)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1031, file: !14, line: 1591, baseType: !1043, size: 64, align: 64, offset: 320)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64, align: 64)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1045, line: 129, size: 1664, align: 64, elements: !1046)
!1045 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1046 = !{!1047, !1048, !1049, !1050, !1150, !1169, !1170, !1199, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1044, file: !1045, line: 136, baseType: !914, size: 32, align: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1044, file: !1045, line: 151, baseType: !914, size: 32, align: 32, offset: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1044, file: !1045, line: 157, baseType: !914, size: 32, align: 32, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1044, file: !1045, line: 159, baseType: !1051, size: 64, align: 64, offset: 128)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64, align: 64)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1054)
!1054 = !{!1055, !1060, !1062, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1102, !1104, !1105, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1138, !1139, !1140, !1141, !1142, !1143, !1146, !1147, !1148, !1149}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1053, file: !722, line: 282, baseType: !1056, size: 512, align: 64)
!1056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, size: 512, align: 64, elements: !1058)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64, align: 64)
!1058 = !{!1059}
!1059 = !DISubrange(count: 8)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1053, file: !722, line: 299, baseType: !1061, size: 256, align: 32, offset: 512)
!1061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !914, size: 256, align: 32, elements: !1058)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1053, file: !722, line: 315, baseType: !1063, size: 64, align: 64, offset: 768)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64, align: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1053, file: !722, line: 326, baseType: !914, size: 32, align: 32, offset: 832)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1053, file: !722, line: 326, baseType: !914, size: 32, align: 32, offset: 864)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1053, file: !722, line: 334, baseType: !914, size: 32, align: 32, offset: 896)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1053, file: !722, line: 341, baseType: !914, size: 32, align: 32, offset: 928)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1053, file: !722, line: 346, baseType: !914, size: 32, align: 32, offset: 960)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1053, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1053, file: !722, line: 356, baseType: !951, size: 64, align: 32, offset: 1024)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1053, file: !722, line: 361, baseType: !1072, size: 64, align: 64, offset: 1088)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !905, line: 40, baseType: !1073)
!1073 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1053, file: !722, line: 369, baseType: !1072, size: 64, align: 64, offset: 1152)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1053, file: !722, line: 377, baseType: !1072, size: 64, align: 64, offset: 1216)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1053, file: !722, line: 382, baseType: !914, size: 32, align: 32, offset: 1280)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1053, file: !722, line: 386, baseType: !914, size: 32, align: 32, offset: 1312)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1053, file: !722, line: 391, baseType: !914, size: 32, align: 32, offset: 1344)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1053, file: !722, line: 396, baseType: !915, size: 64, align: 64, offset: 1408)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1053, file: !722, line: 403, baseType: !1081, size: 512, align: 64, offset: 1472)
!1081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 512, align: 64, elements: !1058)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1053, file: !722, line: 410, baseType: !914, size: 32, align: 32, offset: 1984)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1053, file: !722, line: 415, baseType: !914, size: 32, align: 32, offset: 2016)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1053, file: !722, line: 420, baseType: !914, size: 32, align: 32, offset: 2048)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1053, file: !722, line: 425, baseType: !914, size: 32, align: 32, offset: 2080)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1053, file: !722, line: 435, baseType: !1072, size: 64, align: 64, offset: 2112)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1053, file: !722, line: 440, baseType: !914, size: 32, align: 32, offset: 2176)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1053, file: !722, line: 445, baseType: !969, size: 64, align: 64, offset: 2240)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1053, file: !722, line: 459, baseType: !1090, size: 512, align: 64, offset: 2304)
!1090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1091, size: 512, align: 64, elements: !1058)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64, align: 64)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1093, line: 94, baseType: !1094)
!1093 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1093, line: 81, size: 192, align: 64, elements: !1095)
!1095 = !{!1096, !1100, !1101}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1094, file: !1093, line: 82, baseType: !1097, size: 64, align: 64)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64, align: 64)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1093, line: 73, baseType: !1099)
!1099 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1093, line: 73, flags: DIFlagFwdDecl)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1094, file: !1093, line: 89, baseType: !1057, size: 64, align: 64, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1094, file: !1093, line: 93, baseType: !914, size: 32, align: 32, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1053, file: !722, line: 473, baseType: !1103, size: 64, align: 64, offset: 2816)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64, align: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1053, file: !722, line: 477, baseType: !914, size: 32, align: 32, offset: 2880)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1053, file: !722, line: 479, baseType: !1106, size: 64, align: 64, offset: 2944)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64, align: 64)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64, align: 64)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1109)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1110)
!1110 = !{!1111, !1112, !1113, !1114, !1119}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1109, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1109, file: !722, line: 203, baseType: !1057, size: 64, align: 64, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1109, file: !722, line: 204, baseType: !914, size: 32, align: 32, offset: 128)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1109, file: !722, line: 205, baseType: !1115, size: 64, align: 64, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1117, line: 86, baseType: !1118)
!1117 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1118 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1117, line: 86, flags: DIFlagFwdDecl)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1109, file: !722, line: 206, baseType: !1091, size: 64, align: 64, offset: 256)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1053, file: !722, line: 480, baseType: !914, size: 32, align: 32, offset: 3008)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1053, file: !722, line: 505, baseType: !914, size: 32, align: 32, offset: 3040)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1053, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1053, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1053, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1053, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1053, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1053, file: !722, line: 532, baseType: !1072, size: 64, align: 64, offset: 3264)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1053, file: !722, line: 539, baseType: !1072, size: 64, align: 64, offset: 3328)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1053, file: !722, line: 547, baseType: !1072, size: 64, align: 64, offset: 3392)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1053, file: !722, line: 554, baseType: !1115, size: 64, align: 64, offset: 3456)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1053, file: !722, line: 563, baseType: !914, size: 32, align: 32, offset: 3520)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1053, file: !722, line: 572, baseType: !914, size: 32, align: 32, offset: 3552)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1053, file: !722, line: 581, baseType: !914, size: 32, align: 32, offset: 3584)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1053, file: !722, line: 588, baseType: !1135, size: 64, align: 64, offset: 3648)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64, align: 64)
!1136 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !905, line: 36, baseType: !1137)
!1137 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1053, file: !722, line: 593, baseType: !914, size: 32, align: 32, offset: 3712)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1053, file: !722, line: 596, baseType: !914, size: 32, align: 32, offset: 3744)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1053, file: !722, line: 599, baseType: !1091, size: 64, align: 64, offset: 3776)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1053, file: !722, line: 605, baseType: !1091, size: 64, align: 64, offset: 3840)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1053, file: !722, line: 616, baseType: !1091, size: 64, align: 64, offset: 3904)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1053, file: !722, line: 626, baseType: !1144, size: 64, align: 64, offset: 3968)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1145, line: 216, baseType: !970)
!1145 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1053, file: !722, line: 627, baseType: !1144, size: 64, align: 64, offset: 4032)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1053, file: !722, line: 628, baseType: !1144, size: 64, align: 64, offset: 4096)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1053, file: !722, line: 629, baseType: !1144, size: 64, align: 64, offset: 4160)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1053, file: !722, line: 645, baseType: !1091, size: 64, align: 64, offset: 4224)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1044, file: !1045, line: 161, baseType: !1151, size: 64, align: 64, offset: 192)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64, align: 64)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1045, line: 117, baseType: !1153)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1045, line: 100, size: 832, align: 64, elements: !1154)
!1154 = !{!1155, !1160, !1161, !1162, !1163, !1164, !1166, !1167, !1168}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1153, file: !1045, line: 105, baseType: !1156, size: 256, align: 64)
!1156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1157, size: 256, align: 64, elements: !930)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64, align: 64)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1093, line: 238, baseType: !1159)
!1159 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1093, line: 238, flags: DIFlagFwdDecl)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1153, file: !1045, line: 110, baseType: !914, size: 32, align: 32, offset: 256)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1153, file: !1045, line: 111, baseType: !914, size: 32, align: 32, offset: 288)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1153, file: !1045, line: 111, baseType: !914, size: 32, align: 32, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1153, file: !1045, line: 112, baseType: !1061, size: 256, align: 32, offset: 352)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1153, file: !1045, line: 113, baseType: !1165, size: 128, align: 32, offset: 608)
!1165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !914, size: 128, align: 32, elements: !930)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1153, file: !1045, line: 114, baseType: !914, size: 32, align: 32, offset: 736)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1153, file: !1045, line: 115, baseType: !914, size: 32, align: 32, offset: 768)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1153, file: !1045, line: 116, baseType: !914, size: 32, align: 32, offset: 800)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1044, file: !1045, line: 163, baseType: !915, size: 64, align: 64, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1044, file: !1045, line: 165, baseType: !1171, size: 128, align: 64, offset: 320)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1045, line: 122, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1045, line: 119, size: 128, align: 64, elements: !1173)
!1173 = !{!1174, !1198}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1172, file: !1045, line: 120, baseType: !1175, size: 64, align: 64)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64, align: 64)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1194, !1195, !1196, !1197}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1177, file: !14, line: 1451, baseType: !1091, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1177, file: !14, line: 1461, baseType: !1072, size: 64, align: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1177, file: !14, line: 1467, baseType: !1072, size: 64, align: 64, offset: 128)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1177, file: !14, line: 1468, baseType: !1057, size: 64, align: 64, offset: 192)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1177, file: !14, line: 1469, baseType: !914, size: 32, align: 32, offset: 256)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1177, file: !14, line: 1470, baseType: !914, size: 32, align: 32, offset: 288)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1177, file: !14, line: 1474, baseType: !914, size: 32, align: 32, offset: 320)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1177, file: !14, line: 1479, baseType: !1187, size: 64, align: 64, offset: 384)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64, align: 64)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1190)
!1190 = !{!1191, !1192, !1193}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1189, file: !14, line: 1412, baseType: !1057, size: 64, align: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1189, file: !14, line: 1413, baseType: !914, size: 32, align: 32, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1189, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1177, file: !14, line: 1480, baseType: !914, size: 32, align: 32, offset: 448)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1177, file: !14, line: 1486, baseType: !1072, size: 64, align: 64, offset: 512)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1177, file: !14, line: 1488, baseType: !1072, size: 64, align: 64, offset: 576)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1177, file: !14, line: 1497, baseType: !1072, size: 64, align: 64, offset: 640)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1172, file: !1045, line: 121, baseType: !1051, size: 64, align: 64, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1044, file: !1045, line: 166, baseType: !1200, size: 128, align: 64, offset: 448)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1045, line: 127, baseType: !1201)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1045, line: 124, size: 128, align: 64, elements: !1202)
!1202 = !{!1203, !1276}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1201, file: !1045, line: 125, baseType: !1204, size: 64, align: 64)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64, align: 64)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64, align: 64)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1208)
!1208 = !{!1209, !1210, !1234, !1238, !1239, !1273, !1274, !1275}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1207, file: !14, line: 5751, baseType: !973, size: 64, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1207, file: !14, line: 5756, baseType: !1211, size: 64, align: 64, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64, align: 64)
!1212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1214)
!1214 = !{!1215, !1216, !1219, !1220, !1221, !1225, !1229, !1233}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1213, file: !14, line: 5797, baseType: !941, size: 64, align: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1213, file: !14, line: 5804, baseType: !1217, size: 64, align: 64, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1213, file: !14, line: 5815, baseType: !973, size: 64, align: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1213, file: !14, line: 5825, baseType: !914, size: 32, align: 32, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1213, file: !14, line: 5826, baseType: !1222, size: 64, align: 64, offset: 256)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!914, !1205}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1213, file: !14, line: 5827, baseType: !1226, size: 64, align: 64, offset: 320)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64, align: 64)
!1227 = !DISubroutineType(types: !1228)
!1228 = !{!914, !1205, !1175}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1213, file: !14, line: 5828, baseType: !1230, size: 64, align: 64, offset: 384)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64, align: 64)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{null, !1205}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1213, file: !14, line: 5829, baseType: !1230, size: 64, align: 64, offset: 448)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1207, file: !14, line: 5762, baseType: !1235, size: 64, align: 64, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64, align: 64)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1237)
!1237 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1207, file: !14, line: 5768, baseType: !915, size: 64, align: 64, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1207, file: !14, line: 5775, baseType: !1240, size: 64, align: 64, offset: 256)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64, align: 64)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1242)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1243)
!1243 = !{!1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1242, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1242, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1242, file: !14, line: 3948, baseType: !912, size: 32, align: 32, offset: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1242, file: !14, line: 3958, baseType: !1057, size: 64, align: 64, offset: 128)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1242, file: !14, line: 3962, baseType: !914, size: 32, align: 32, offset: 192)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1242, file: !14, line: 3968, baseType: !914, size: 32, align: 32, offset: 224)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1242, file: !14, line: 3973, baseType: !1072, size: 64, align: 64, offset: 256)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1242, file: !14, line: 3986, baseType: !914, size: 32, align: 32, offset: 320)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1242, file: !14, line: 3999, baseType: !914, size: 32, align: 32, offset: 352)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1242, file: !14, line: 4004, baseType: !914, size: 32, align: 32, offset: 384)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1242, file: !14, line: 4005, baseType: !914, size: 32, align: 32, offset: 416)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1242, file: !14, line: 4010, baseType: !914, size: 32, align: 32, offset: 448)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1242, file: !14, line: 4011, baseType: !914, size: 32, align: 32, offset: 480)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1242, file: !14, line: 4020, baseType: !951, size: 64, align: 32, offset: 512)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1242, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1242, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1242, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1242, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1242, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1242, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1242, file: !14, line: 4039, baseType: !914, size: 32, align: 32, offset: 768)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1242, file: !14, line: 4046, baseType: !969, size: 64, align: 64, offset: 832)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1242, file: !14, line: 4050, baseType: !914, size: 32, align: 32, offset: 896)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1242, file: !14, line: 4054, baseType: !914, size: 32, align: 32, offset: 928)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1242, file: !14, line: 4061, baseType: !914, size: 32, align: 32, offset: 960)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1242, file: !14, line: 4065, baseType: !914, size: 32, align: 32, offset: 992)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1242, file: !14, line: 4073, baseType: !914, size: 32, align: 32, offset: 1024)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1242, file: !14, line: 4080, baseType: !914, size: 32, align: 32, offset: 1056)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1242, file: !14, line: 4084, baseType: !914, size: 32, align: 32, offset: 1088)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1207, file: !14, line: 5781, baseType: !1240, size: 64, align: 64, offset: 320)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1207, file: !14, line: 5787, baseType: !951, size: 64, align: 32, offset: 384)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1207, file: !14, line: 5793, baseType: !951, size: 64, align: 32, offset: 448)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1201, file: !1045, line: 126, baseType: !914, size: 32, align: 32, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1044, file: !1045, line: 172, baseType: !1175, size: 64, align: 64, offset: 576)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1044, file: !1045, line: 177, baseType: !1057, size: 64, align: 64, offset: 640)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1044, file: !1045, line: 178, baseType: !913, size: 32, align: 32, offset: 704)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1044, file: !1045, line: 180, baseType: !915, size: 64, align: 64, offset: 768)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1044, file: !1045, line: 185, baseType: !914, size: 32, align: 32, offset: 832)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1044, file: !1045, line: 190, baseType: !915, size: 64, align: 64, offset: 896)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1044, file: !1045, line: 195, baseType: !914, size: 32, align: 32, offset: 960)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1044, file: !1045, line: 200, baseType: !1175, size: 64, align: 64, offset: 1024)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1044, file: !1045, line: 201, baseType: !914, size: 32, align: 32, offset: 1088)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1044, file: !1045, line: 202, baseType: !1051, size: 64, align: 64, offset: 1152)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1044, file: !1045, line: 203, baseType: !914, size: 32, align: 32, offset: 1216)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1044, file: !1045, line: 205, baseType: !914, size: 32, align: 32, offset: 1248)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1044, file: !1045, line: 206, baseType: !914, size: 32, align: 32, offset: 1280)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1044, file: !1045, line: 209, baseType: !1144, size: 64, align: 64, offset: 1344)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1044, file: !1045, line: 212, baseType: !1144, size: 64, align: 64, offset: 1408)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1044, file: !1045, line: 213, baseType: !1051, size: 64, align: 64, offset: 1472)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1044, file: !1045, line: 215, baseType: !914, size: 32, align: 32, offset: 1536)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1044, file: !1045, line: 217, baseType: !914, size: 32, align: 32, offset: 1568)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1044, file: !1045, line: 220, baseType: !914, size: 32, align: 32, offset: 1600)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1031, file: !14, line: 1598, baseType: !915, size: 64, align: 64, offset: 384)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1031, file: !14, line: 1606, baseType: !1072, size: 64, align: 64, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1031, file: !14, line: 1614, baseType: !914, size: 32, align: 32, offset: 512)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1031, file: !14, line: 1622, baseType: !914, size: 32, align: 32, offset: 544)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1031, file: !14, line: 1628, baseType: !914, size: 32, align: 32, offset: 576)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1031, file: !14, line: 1636, baseType: !914, size: 32, align: 32, offset: 608)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1031, file: !14, line: 1643, baseType: !914, size: 32, align: 32, offset: 640)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1031, file: !14, line: 1657, baseType: !1057, size: 64, align: 64, offset: 704)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1031, file: !14, line: 1658, baseType: !914, size: 32, align: 32, offset: 768)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1031, file: !14, line: 1679, baseType: !951, size: 64, align: 32, offset: 800)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1031, file: !14, line: 1688, baseType: !914, size: 32, align: 32, offset: 864)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1031, file: !14, line: 1712, baseType: !914, size: 32, align: 32, offset: 896)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1031, file: !14, line: 1729, baseType: !914, size: 32, align: 32, offset: 928)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1031, file: !14, line: 1729, baseType: !914, size: 32, align: 32, offset: 960)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1031, file: !14, line: 1744, baseType: !914, size: 32, align: 32, offset: 992)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1031, file: !14, line: 1744, baseType: !914, size: 32, align: 32, offset: 1024)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1031, file: !14, line: 1751, baseType: !914, size: 32, align: 32, offset: 1056)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1031, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1031, file: !14, line: 1791, baseType: !1315, size: 64, align: 64, offset: 1152)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{null, !1318, !1319, !1321, !914, !914, !914}
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64, align: 64)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64, align: 64)
!1320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64, align: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1031, file: !14, line: 1808, baseType: !1323, size: 64, align: 64, offset: 1216)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64, align: 64)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!473, !1318, !958}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1031, file: !14, line: 1816, baseType: !914, size: 32, align: 32, offset: 1280)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1031, file: !14, line: 1825, baseType: !933, size: 32, align: 32, offset: 1312)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1031, file: !14, line: 1830, baseType: !914, size: 32, align: 32, offset: 1344)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1031, file: !14, line: 1838, baseType: !933, size: 32, align: 32, offset: 1376)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1031, file: !14, line: 1846, baseType: !914, size: 32, align: 32, offset: 1408)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1031, file: !14, line: 1851, baseType: !914, size: 32, align: 32, offset: 1440)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1031, file: !14, line: 1861, baseType: !933, size: 32, align: 32, offset: 1472)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1031, file: !14, line: 1868, baseType: !933, size: 32, align: 32, offset: 1504)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1031, file: !14, line: 1875, baseType: !933, size: 32, align: 32, offset: 1536)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1031, file: !14, line: 1882, baseType: !933, size: 32, align: 32, offset: 1568)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1031, file: !14, line: 1889, baseType: !933, size: 32, align: 32, offset: 1600)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1031, file: !14, line: 1896, baseType: !933, size: 32, align: 32, offset: 1632)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1031, file: !14, line: 1903, baseType: !933, size: 32, align: 32, offset: 1664)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1031, file: !14, line: 1910, baseType: !914, size: 32, align: 32, offset: 1696)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1031, file: !14, line: 1915, baseType: !914, size: 32, align: 32, offset: 1728)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1031, file: !14, line: 1926, baseType: !1321, size: 64, align: 64, offset: 1792)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1031, file: !14, line: 1935, baseType: !951, size: 64, align: 32, offset: 1856)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1031, file: !14, line: 1942, baseType: !914, size: 32, align: 32, offset: 1920)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1031, file: !14, line: 1948, baseType: !914, size: 32, align: 32, offset: 1952)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1031, file: !14, line: 1954, baseType: !914, size: 32, align: 32, offset: 1984)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1031, file: !14, line: 1960, baseType: !914, size: 32, align: 32, offset: 2016)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1031, file: !14, line: 1984, baseType: !914, size: 32, align: 32, offset: 2048)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1031, file: !14, line: 1991, baseType: !914, size: 32, align: 32, offset: 2080)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1031, file: !14, line: 1996, baseType: !914, size: 32, align: 32, offset: 2112)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1031, file: !14, line: 2004, baseType: !914, size: 32, align: 32, offset: 2144)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1031, file: !14, line: 2011, baseType: !914, size: 32, align: 32, offset: 2176)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1031, file: !14, line: 2018, baseType: !914, size: 32, align: 32, offset: 2208)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1031, file: !14, line: 2027, baseType: !914, size: 32, align: 32, offset: 2240)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1031, file: !14, line: 2034, baseType: !914, size: 32, align: 32, offset: 2272)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1031, file: !14, line: 2044, baseType: !914, size: 32, align: 32, offset: 2304)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1031, file: !14, line: 2054, baseType: !1357, size: 64, align: 64, offset: 2368)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64, align: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1031, file: !14, line: 2061, baseType: !1357, size: 64, align: 64, offset: 2432)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1031, file: !14, line: 2066, baseType: !914, size: 32, align: 32, offset: 2496)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1031, file: !14, line: 2070, baseType: !914, size: 32, align: 32, offset: 2528)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1031, file: !14, line: 2078, baseType: !914, size: 32, align: 32, offset: 2560)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1031, file: !14, line: 2085, baseType: !914, size: 32, align: 32, offset: 2592)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1031, file: !14, line: 2092, baseType: !914, size: 32, align: 32, offset: 2624)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1031, file: !14, line: 2099, baseType: !914, size: 32, align: 32, offset: 2656)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1031, file: !14, line: 2106, baseType: !914, size: 32, align: 32, offset: 2688)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1031, file: !14, line: 2113, baseType: !914, size: 32, align: 32, offset: 2720)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1031, file: !14, line: 2120, baseType: !914, size: 32, align: 32, offset: 2752)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1031, file: !14, line: 2125, baseType: !914, size: 32, align: 32, offset: 2784)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1031, file: !14, line: 2133, baseType: !914, size: 32, align: 32, offset: 2816)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1031, file: !14, line: 2140, baseType: !914, size: 32, align: 32, offset: 2848)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1031, file: !14, line: 2145, baseType: !914, size: 32, align: 32, offset: 2880)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1031, file: !14, line: 2153, baseType: !914, size: 32, align: 32, offset: 2912)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1031, file: !14, line: 2158, baseType: !914, size: 32, align: 32, offset: 2944)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1031, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1031, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1031, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1031, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1031, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1031, file: !14, line: 2203, baseType: !914, size: 32, align: 32, offset: 3136)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1031, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1031, file: !14, line: 2212, baseType: !914, size: 32, align: 32, offset: 3200)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1031, file: !14, line: 2213, baseType: !914, size: 32, align: 32, offset: 3232)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1031, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1031, file: !14, line: 2232, baseType: !914, size: 32, align: 32, offset: 3296)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1031, file: !14, line: 2243, baseType: !914, size: 32, align: 32, offset: 3328)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1031, file: !14, line: 2249, baseType: !914, size: 32, align: 32, offset: 3360)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1031, file: !14, line: 2256, baseType: !914, size: 32, align: 32, offset: 3392)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1031, file: !14, line: 2263, baseType: !969, size: 64, align: 64, offset: 3456)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1031, file: !14, line: 2270, baseType: !969, size: 64, align: 64, offset: 3520)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1031, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1031, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1031, file: !14, line: 2367, baseType: !1393, size: 64, align: 64, offset: 3648)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64, align: 64)
!1394 = !DISubroutineType(types: !1395)
!1395 = !{!914, !1318, !1051, !914}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1031, file: !14, line: 2383, baseType: !914, size: 32, align: 32, offset: 3712)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1031, file: !14, line: 2386, baseType: !933, size: 32, align: 32, offset: 3744)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1031, file: !14, line: 2387, baseType: !933, size: 32, align: 32, offset: 3776)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1031, file: !14, line: 2394, baseType: !914, size: 32, align: 32, offset: 3808)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1031, file: !14, line: 2401, baseType: !914, size: 32, align: 32, offset: 3840)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1031, file: !14, line: 2408, baseType: !914, size: 32, align: 32, offset: 3872)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1031, file: !14, line: 2415, baseType: !914, size: 32, align: 32, offset: 3904)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1031, file: !14, line: 2422, baseType: !914, size: 32, align: 32, offset: 3936)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1031, file: !14, line: 2423, baseType: !1405, size: 64, align: 64, offset: 3968)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64, align: 64)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1407)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1408)
!1408 = !{!1409, !1410, !1411, !1412}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1407, file: !14, line: 827, baseType: !914, size: 32, align: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1407, file: !14, line: 828, baseType: !914, size: 32, align: 32, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1407, file: !14, line: 829, baseType: !914, size: 32, align: 32, offset: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1407, file: !14, line: 830, baseType: !933, size: 32, align: 32, offset: 96)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1031, file: !14, line: 2430, baseType: !1072, size: 64, align: 64, offset: 4032)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1031, file: !14, line: 2437, baseType: !1072, size: 64, align: 64, offset: 4096)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1031, file: !14, line: 2444, baseType: !933, size: 32, align: 32, offset: 4160)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1031, file: !14, line: 2451, baseType: !933, size: 32, align: 32, offset: 4192)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1031, file: !14, line: 2458, baseType: !914, size: 32, align: 32, offset: 4224)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1031, file: !14, line: 2469, baseType: !914, size: 32, align: 32, offset: 4256)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1031, file: !14, line: 2475, baseType: !914, size: 32, align: 32, offset: 4288)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1031, file: !14, line: 2481, baseType: !914, size: 32, align: 32, offset: 4320)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1031, file: !14, line: 2485, baseType: !914, size: 32, align: 32, offset: 4352)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1031, file: !14, line: 2489, baseType: !914, size: 32, align: 32, offset: 4384)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1031, file: !14, line: 2493, baseType: !914, size: 32, align: 32, offset: 4416)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1031, file: !14, line: 2501, baseType: !914, size: 32, align: 32, offset: 4448)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1031, file: !14, line: 2506, baseType: !914, size: 32, align: 32, offset: 4480)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1031, file: !14, line: 2510, baseType: !914, size: 32, align: 32, offset: 4512)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1031, file: !14, line: 2514, baseType: !1072, size: 64, align: 64, offset: 4544)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1031, file: !14, line: 2528, baseType: !1429, size: 64, align: 64, offset: 4608)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64, align: 64)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{null, !1318, !915, !914, !914}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1031, file: !14, line: 2534, baseType: !914, size: 32, align: 32, offset: 4672)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1031, file: !14, line: 2545, baseType: !914, size: 32, align: 32, offset: 4704)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1031, file: !14, line: 2547, baseType: !914, size: 32, align: 32, offset: 4736)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1031, file: !14, line: 2549, baseType: !914, size: 32, align: 32, offset: 4768)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1031, file: !14, line: 2551, baseType: !914, size: 32, align: 32, offset: 4800)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1031, file: !14, line: 2553, baseType: !914, size: 32, align: 32, offset: 4832)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1031, file: !14, line: 2555, baseType: !914, size: 32, align: 32, offset: 4864)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1031, file: !14, line: 2557, baseType: !914, size: 32, align: 32, offset: 4896)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1031, file: !14, line: 2559, baseType: !914, size: 32, align: 32, offset: 4928)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1031, file: !14, line: 2563, baseType: !914, size: 32, align: 32, offset: 4960)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1031, file: !14, line: 2571, baseType: !1443, size: 64, align: 64, offset: 4992)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64, align: 64)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1031, file: !14, line: 2579, baseType: !1443, size: 64, align: 64, offset: 5056)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1031, file: !14, line: 2586, baseType: !914, size: 32, align: 32, offset: 5120)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1031, file: !14, line: 2615, baseType: !914, size: 32, align: 32, offset: 5152)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1031, file: !14, line: 2627, baseType: !914, size: 32, align: 32, offset: 5184)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1031, file: !14, line: 2637, baseType: !914, size: 32, align: 32, offset: 5216)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1031, file: !14, line: 2681, baseType: !914, size: 32, align: 32, offset: 5248)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1031, file: !14, line: 2709, baseType: !1072, size: 64, align: 64, offset: 5312)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1031, file: !14, line: 2716, baseType: !1452, size: 64, align: 64, offset: 5376)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64, align: 64)
!1453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1454)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459, !1460, !1461, !1465, !1471, !1475, !1476, !1477, !1478, !1484, !1485, !1486, !1487, !1488}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1454, file: !14, line: 3642, baseType: !941, size: 64, align: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1454, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1454, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1454, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1454, file: !14, line: 3669, baseType: !914, size: 32, align: 32, offset: 160)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1454, file: !14, line: 3682, baseType: !1462, size: 64, align: 64, offset: 192)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64, align: 64)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{!914, !1029, !1051}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1454, file: !14, line: 3698, baseType: !1466, size: 64, align: 64, offset: 256)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64, align: 64)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!914, !1029, !1469, !912}
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64, align: 64)
!1470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !916)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1454, file: !14, line: 3712, baseType: !1472, size: 64, align: 64, offset: 320)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64, align: 64)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!914, !1029, !914, !1469, !912}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1454, file: !14, line: 3726, baseType: !1466, size: 64, align: 64, offset: 384)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1454, file: !14, line: 3737, baseType: !1026, size: 64, align: 64, offset: 448)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1454, file: !14, line: 3746, baseType: !914, size: 32, align: 32, offset: 512)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1454, file: !14, line: 3757, baseType: !1479, size: 64, align: 64, offset: 576)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64, align: 64)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{null, !1482}
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64, align: 64)
!1483 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1454, file: !14, line: 3766, baseType: !1026, size: 64, align: 64, offset: 640)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1454, file: !14, line: 3774, baseType: !1026, size: 64, align: 64, offset: 704)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1454, file: !14, line: 3780, baseType: !914, size: 32, align: 32, offset: 768)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1454, file: !14, line: 3785, baseType: !914, size: 32, align: 32, offset: 800)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1454, file: !14, line: 3795, baseType: !1489, size: 64, align: 64, offset: 832)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64, align: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!914, !1029, !1091}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1031, file: !14, line: 2728, baseType: !915, size: 64, align: 64, offset: 5440)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1031, file: !14, line: 2735, baseType: !1081, size: 512, align: 64, offset: 5504)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1031, file: !14, line: 2742, baseType: !914, size: 32, align: 32, offset: 6016)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1031, file: !14, line: 2755, baseType: !914, size: 32, align: 32, offset: 6048)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1031, file: !14, line: 2776, baseType: !914, size: 32, align: 32, offset: 6080)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1031, file: !14, line: 2783, baseType: !914, size: 32, align: 32, offset: 6112)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1031, file: !14, line: 2791, baseType: !914, size: 32, align: 32, offset: 6144)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1031, file: !14, line: 2802, baseType: !1051, size: 64, align: 64, offset: 6208)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1031, file: !14, line: 2811, baseType: !914, size: 32, align: 32, offset: 6272)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1031, file: !14, line: 2821, baseType: !914, size: 32, align: 32, offset: 6304)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1031, file: !14, line: 2830, baseType: !914, size: 32, align: 32, offset: 6336)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1031, file: !14, line: 2840, baseType: !914, size: 32, align: 32, offset: 6368)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1031, file: !14, line: 2851, baseType: !1505, size: 64, align: 64, offset: 6400)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64, align: 64)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{!914, !1318, !1508, !915, !1321, !914, !914}
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64, align: 64)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!914, !1318, !915}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1031, file: !14, line: 2871, baseType: !1512, size: 64, align: 64, offset: 6464)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64, align: 64)
!1513 = !DISubroutineType(types: !1514)
!1514 = !{!914, !1318, !1515, !915, !1321, !914}
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64, align: 64)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{!914, !1318, !915, !914, !914}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1031, file: !14, line: 2878, baseType: !914, size: 32, align: 32, offset: 6528)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1031, file: !14, line: 2885, baseType: !914, size: 32, align: 32, offset: 6560)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1031, file: !14, line: 3005, baseType: !914, size: 32, align: 32, offset: 6592)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1031, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1031, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1031, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1031, file: !14, line: 3037, baseType: !1057, size: 64, align: 64, offset: 6720)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1031, file: !14, line: 3038, baseType: !914, size: 32, align: 32, offset: 6784)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1031, file: !14, line: 3050, baseType: !969, size: 64, align: 64, offset: 6848)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1031, file: !14, line: 3065, baseType: !914, size: 32, align: 32, offset: 6912)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1031, file: !14, line: 3083, baseType: !914, size: 32, align: 32, offset: 6944)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1031, file: !14, line: 3092, baseType: !951, size: 64, align: 32, offset: 6976)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1031, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1031, file: !14, line: 3106, baseType: !951, size: 64, align: 32, offset: 7072)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1031, file: !14, line: 3113, baseType: !1533, size: 64, align: 64, offset: 7168)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64, align: 64)
!1534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1535)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1536)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1537)
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1546}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1536, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1536, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1536, file: !14, line: 720, baseType: !941, size: 64, align: 64, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1536, file: !14, line: 724, baseType: !941, size: 64, align: 64, offset: 128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1536, file: !14, line: 728, baseType: !914, size: 32, align: 32, offset: 192)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1536, file: !14, line: 734, baseType: !1544, size: 64, align: 64, offset: 256)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64, align: 64)
!1545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !941)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1536, file: !14, line: 739, baseType: !1547, size: 64, align: 64, offset: 320)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64, align: 64)
!1548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1031, file: !14, line: 3129, baseType: !1072, size: 64, align: 64, offset: 7232)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1031, file: !14, line: 3130, baseType: !1072, size: 64, align: 64, offset: 7296)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1031, file: !14, line: 3131, baseType: !1072, size: 64, align: 64, offset: 7360)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1031, file: !14, line: 3132, baseType: !1072, size: 64, align: 64, offset: 7424)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1031, file: !14, line: 3139, baseType: !1443, size: 64, align: 64, offset: 7488)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1031, file: !14, line: 3147, baseType: !914, size: 32, align: 32, offset: 7552)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1031, file: !14, line: 3165, baseType: !914, size: 32, align: 32, offset: 7584)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1031, file: !14, line: 3172, baseType: !914, size: 32, align: 32, offset: 7616)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1031, file: !14, line: 3180, baseType: !914, size: 32, align: 32, offset: 7648)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1031, file: !14, line: 3191, baseType: !1357, size: 64, align: 64, offset: 7680)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1031, file: !14, line: 3199, baseType: !1057, size: 64, align: 64, offset: 7744)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1031, file: !14, line: 3207, baseType: !1443, size: 64, align: 64, offset: 7808)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1031, file: !14, line: 3214, baseType: !913, size: 32, align: 32, offset: 7872)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1031, file: !14, line: 3224, baseType: !1187, size: 64, align: 64, offset: 7936)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1031, file: !14, line: 3225, baseType: !914, size: 32, align: 32, offset: 8000)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1031, file: !14, line: 3249, baseType: !1091, size: 64, align: 64, offset: 8064)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1031, file: !14, line: 3256, baseType: !914, size: 32, align: 32, offset: 8128)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1031, file: !14, line: 3271, baseType: !914, size: 32, align: 32, offset: 8160)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1031, file: !14, line: 3279, baseType: !1072, size: 64, align: 64, offset: 8192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1031, file: !14, line: 3301, baseType: !1091, size: 64, align: 64, offset: 8256)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1031, file: !14, line: 3310, baseType: !914, size: 32, align: 32, offset: 8320)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1031, file: !14, line: 3337, baseType: !914, size: 32, align: 32, offset: 8352)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1031, file: !14, line: 3351, baseType: !914, size: 32, align: 32, offset: 8384)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1031, file: !14, line: 3359, baseType: !914, size: 32, align: 32, offset: 8416)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !938, file: !14, line: 3535, baseType: !1574, size: 64, align: 64, offset: 1024)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64, align: 64)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!914, !1029, !1577}
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64, align: 64)
!1578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !938, file: !14, line: 3541, baseType: !1580, size: 64, align: 64, offset: 1088)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64, align: 64)
!1581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1582)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1583)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1045, line: 223, size: 128, align: 64, elements: !1584)
!1584 = !{!1585, !1586}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1583, file: !1045, line: 224, baseType: !1469, size: 64, align: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1583, file: !1045, line: 225, baseType: !1469, size: 64, align: 64, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !938, file: !14, line: 3549, baseType: !1588, size: 64, align: 64, offset: 1152)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64, align: 64)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{null, !1024}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !938, file: !14, line: 3551, baseType: !1026, size: 64, align: 64, offset: 1216)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !938, file: !14, line: 3552, baseType: !1593, size: 64, align: 64, offset: 1280)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64, align: 64)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!914, !1029, !1057, !914, !1596}
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64, align: 64)
!1597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1598)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1599)
!1599 = !{!1600, !1601, !1602, !1603, !1604, !1628}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1598, file: !14, line: 3921, baseType: !904, size: 16, align: 16)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1598, file: !14, line: 3922, baseType: !912, size: 32, align: 32, offset: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1598, file: !14, line: 3923, baseType: !912, size: 32, align: 32, offset: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1598, file: !14, line: 3924, baseType: !913, size: 32, align: 32, offset: 96)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1598, file: !14, line: 3925, baseType: !1605, size: 64, align: 64, offset: 128)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64, align: 64)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64, align: 64)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1608)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1609)
!1609 = !{!1610, !1611, !1612, !1613, !1614, !1615, !1621, !1623, !1624, !1625, !1626, !1627}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1608, file: !14, line: 3886, baseType: !914, size: 32, align: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1608, file: !14, line: 3887, baseType: !914, size: 32, align: 32, offset: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1608, file: !14, line: 3888, baseType: !914, size: 32, align: 32, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1608, file: !14, line: 3889, baseType: !914, size: 32, align: 32, offset: 96)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1608, file: !14, line: 3890, baseType: !914, size: 32, align: 32, offset: 128)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1608, file: !14, line: 3897, baseType: !1616, size: 768, align: 64, offset: 192)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1617)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1618)
!1618 = !{!1619, !1620}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1617, file: !14, line: 3855, baseType: !1056, size: 512, align: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1617, file: !14, line: 3857, baseType: !1061, size: 256, align: 32, offset: 512)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1608, file: !14, line: 3903, baseType: !1622, size: 256, align: 64, offset: 960)
!1622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1057, size: 256, align: 64, elements: !930)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1608, file: !14, line: 3904, baseType: !1165, size: 128, align: 32, offset: 1216)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1608, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1608, file: !14, line: 3908, baseType: !1443, size: 64, align: 64, offset: 1408)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1608, file: !14, line: 3915, baseType: !1443, size: 64, align: 64, offset: 1472)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1608, file: !14, line: 3917, baseType: !914, size: 32, align: 32, offset: 1536)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1598, file: !14, line: 3926, baseType: !1072, size: 64, align: 64, offset: 192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !938, file: !14, line: 3564, baseType: !1630, size: 64, align: 64, offset: 1344)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64, align: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{!914, !1029, !1175, !1319, !1321}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !938, file: !14, line: 3566, baseType: !1634, size: 64, align: 64, offset: 1408)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64, align: 64)
!1635 = !DISubroutineType(types: !1636)
!1636 = !{!914, !1029, !915, !1321, !1175}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !938, file: !14, line: 3567, baseType: !1026, size: 64, align: 64, offset: 1472)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !938, file: !14, line: 3576, baseType: !1639, size: 64, align: 64, offset: 1536)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64, align: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!914, !1029, !1319}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !938, file: !14, line: 3577, baseType: !1643, size: 64, align: 64, offset: 1600)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64, align: 64)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!914, !1029, !1175}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !938, file: !14, line: 3584, baseType: !1462, size: 64, align: 64, offset: 1664)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !938, file: !14, line: 3589, baseType: !1648, size: 64, align: 64, offset: 1728)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64, align: 64)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{null, !1029}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !938, file: !14, line: 3594, baseType: !914, size: 32, align: 32, offset: 1792)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !938, file: !14, line: 3600, baseType: !941, size: 64, align: 64, offset: 1856)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !938, file: !14, line: 3609, baseType: !1654, size: 64, align: 64, offset: 1920)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64, align: 64)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64, align: 64)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1658 = distinct !DIGlobalVariable(name: "ff_xma1_decoder", scope: !0, file: !936, line: 1999, type: !937, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_xma1_decoder)
!1659 = distinct !DIGlobalVariable(name: "ff_xma2_decoder", scope: !0, file: !936, line: 2013, type: !937, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_xma2_decoder)
!1660 = distinct !DIGlobalVariable(name: "table", scope: !1661, file: !936, line: 461, type: !1892, isLocal: true, isDefinition: true, variable: [616 x [2 x i16]]* @decode_init.table)
!1661 = distinct !DISubprogram(name: "decode_init", scope: !936, file: !936, line: 315, type: !1662, isLocal: true, isDefinition: true, scopeLine: 316, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{!914, !1664, !1029, !914}
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64, align: 64)
!1665 = !DIDerivedType(tag: DW_TAG_typedef, name: "WMAProDecodeCtx", file: !936, line: 239, baseType: !1666)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WMAProDecodeCtx", file: !936, line: 175, size: 3750144, align: 256, elements: !1667)
!1667 = !{!1668, !1669, !1715, !1719, !1730, !1776, !1780, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1795, !1801, !1804, !1806, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1840, !1841, !1842, !1843, !1859}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1666, file: !936, line: 177, baseType: !1029, size: 64, align: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1666, file: !936, line: 178, baseType: !1670, size: 64, align: 64, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64, align: 64)
!1671 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1672, line: 192, baseType: !1673)
!1672 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1672, line: 24, size: 704, align: 64, elements: !1674)
!1674 = !{!1675, !1682, !1686, !1694, !1695, !1696, !1700, !1701, !1702, !1707, !1711}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1673, file: !1672, line: 38, baseType: !1676, size: 64, align: 64)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64, align: 64)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{null, !1679, !1680, !1680, !914}
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64, align: 64)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64, align: 64)
!1681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !933)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1673, file: !1672, line: 54, baseType: !1683, size: 64, align: 64, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64, align: 64)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{null, !1679, !1680, !933, !914}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1673, file: !1672, line: 70, baseType: !1687, size: 64, align: 64, offset: 128)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64, align: 64)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{null, !1690, !1692, !1691, !914}
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64, align: 64)
!1691 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64, align: 64)
!1693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1691)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1673, file: !1672, line: 85, baseType: !1683, size: 64, align: 64, offset: 192)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1673, file: !1672, line: 100, baseType: !1687, size: 64, align: 64, offset: 256)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1673, file: !1672, line: 119, baseType: !1697, size: 64, align: 64, offset: 320)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64, align: 64)
!1698 = !DISubroutineType(types: !1699)
!1699 = !{null, !1679, !1680, !1680, !1680, !914}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1673, file: !1672, line: 137, baseType: !1697, size: 64, align: 64, offset: 384)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1673, file: !1672, line: 154, baseType: !1676, size: 64, align: 64, offset: 448)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1673, file: !1672, line: 164, baseType: !1703, size: 64, align: 64, offset: 512)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64, align: 64)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{null, !1706, !1706, !914}
!1706 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1679)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1673, file: !1672, line: 175, baseType: !1708, size: 64, align: 64, offset: 576)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64, align: 64)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{!933, !1680, !1680, !914}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1673, file: !1672, line: 190, baseType: !1712, size: 64, align: 64, offset: 640)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64, align: 64)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{null, !1690, !1692, !1692, !914}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "frame_data", scope: !1666, file: !936, line: 179, baseType: !1716, size: 262656, align: 8, offset: 128)
!1716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 262656, align: 8, elements: !1717)
!1717 = !{!1718}
!1718 = !DISubrange(count: 32832)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1666, file: !936, line: 181, baseType: !1720, size: 320, align: 64, offset: 262784)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1721, line: 40, baseType: !1722)
!1721 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1721, line: 35, size: 320, align: 64, elements: !1723)
!1723 = !{!1724, !1725, !1726, !1727, !1728, !1729}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1722, file: !1721, line: 36, baseType: !912, size: 32, align: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1722, file: !1721, line: 37, baseType: !914, size: 32, align: 32, offset: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1722, file: !1721, line: 38, baseType: !1057, size: 64, align: 64, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1722, file: !1721, line: 38, baseType: !1057, size: 64, align: 64, offset: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1722, file: !1721, line: 38, baseType: !1057, size: 64, align: 64, offset: 192)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1722, file: !1721, line: 39, baseType: !914, size: 32, align: 32, offset: 256)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ctx", scope: !1666, file: !936, line: 182, baseType: !1731, size: 7168, align: 64, offset: 263104)
!1731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1732, size: 7168, align: 64, elements: !1058)
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !1733, line: 41, baseType: !1734)
!1733 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !888, line: 88, size: 896, align: 64, elements: !1735)
!1735 = !{!1736, !1737, !1738, !1739, !1747, !1748, !1749, !1751, !1752, !1757, !1758, !1764, !1765, !1766, !1772, !1773, !1774}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1734, file: !888, line: 89, baseType: !914, size: 32, align: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1734, file: !888, line: 90, baseType: !914, size: 32, align: 32, offset: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1734, file: !888, line: 91, baseType: !1357, size: 64, align: 64, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1734, file: !888, line: 92, baseType: !1740, size: 64, align: 64, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64, align: 64)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !1733, line: 39, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !1733, line: 37, size: 64, align: 32, elements: !1743)
!1743 = !{!1744, !1746}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !1742, file: !1733, line: 38, baseType: !1745, size: 32, align: 32)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !1733, line: 35, baseType: !933)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1742, file: !1733, line: 38, baseType: !1745, size: 32, align: 32, offset: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1734, file: !888, line: 93, baseType: !914, size: 32, align: 32, offset: 192)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1734, file: !888, line: 94, baseType: !914, size: 32, align: 32, offset: 224)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1734, file: !888, line: 96, baseType: !1750, size: 64, align: 64, offset: 256)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64, align: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1734, file: !888, line: 97, baseType: !1750, size: 64, align: 64, offset: 320)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1734, file: !888, line: 101, baseType: !1753, size: 64, align: 64, offset: 384)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64, align: 64)
!1754 = !DISubroutineType(types: !1755)
!1755 = !{null, !1756, !1740}
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64, align: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1734, file: !888, line: 106, baseType: !1753, size: 64, align: 64, offset: 448)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1734, file: !888, line: 107, baseType: !1759, size: 64, align: 64, offset: 512)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64, align: 64)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{null, !1756, !1750, !1762}
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64, align: 64)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1745)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1734, file: !888, line: 108, baseType: !1759, size: 64, align: 64, offset: 576)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1734, file: !888, line: 109, baseType: !1759, size: 64, align: 64, offset: 640)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1734, file: !888, line: 110, baseType: !1767, size: 64, align: 64, offset: 704)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64, align: 64)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{null, !1756, !1770, !1762}
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64, align: 64)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !888, line: 43, baseType: !933)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1734, file: !888, line: 111, baseType: !887, size: 32, align: 32, offset: 768)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1734, file: !888, line: 112, baseType: !893, size: 32, align: 32, offset: 800)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1734, file: !888, line: 113, baseType: !1775, size: 64, align: 64, offset: 832)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64, align: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1666, file: !936, line: 183, baseType: !1777, size: 262144, align: 32, offset: 270336)
!1777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 262144, align: 32, elements: !1778)
!1778 = !{!1779}
!1779 = !DISubrange(count: 8192)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !1666, file: !936, line: 184, baseType: !1781, size: 512, align: 64, offset: 532480)
!1781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1680, size: 512, align: 64, elements: !1058)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "decode_flags", scope: !1666, file: !936, line: 187, baseType: !912, size: 32, align: 32, offset: 532992)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "len_prefix", scope: !1666, file: !936, line: 188, baseType: !916, size: 8, align: 8, offset: 533024)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_range_compression", scope: !1666, file: !936, line: 189, baseType: !916, size: 8, align: 8, offset: 533032)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_sample", scope: !1666, file: !936, line: 190, baseType: !916, size: 8, align: 8, offset: 533040)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "samples_per_frame", scope: !1666, file: !936, line: 191, baseType: !904, size: 16, align: 16, offset: 533056)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "log2_frame_size", scope: !1666, file: !936, line: 192, baseType: !904, size: 16, align: 16, offset: 533072)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "lfe_channel", scope: !1666, file: !936, line: 193, baseType: !1136, size: 8, align: 8, offset: 533088)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_subframes", scope: !1666, file: !936, line: 194, baseType: !916, size: 8, align: 8, offset: 533096)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "subframe_len_bits", scope: !1666, file: !936, line: 195, baseType: !916, size: 8, align: 8, offset: 533104)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "max_subframe_len_bit", scope: !1666, file: !936, line: 196, baseType: !916, size: 8, align: 8, offset: 533112)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "min_samples_per_subframe", scope: !1666, file: !936, line: 197, baseType: !904, size: 16, align: 16, offset: 533120)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "num_sfb", scope: !1666, file: !936, line: 198, baseType: !1794, size: 64, align: 8, offset: 533136)
!1794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1136, size: 64, align: 8, elements: !1058)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "sfb_offsets", scope: !1666, file: !936, line: 199, baseType: !1796, size: 3712, align: 16, offset: 533200)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 3712, align: 16, elements: !1799)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !905, line: 37, baseType: !1798)
!1798 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1799 = !{!1059, !1800}
!1800 = !DISubrange(count: 29)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "sf_offsets", scope: !1666, file: !936, line: 200, baseType: !1802, size: 14848, align: 8, offset: 536912)
!1802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1136, size: 14848, align: 8, elements: !1803)
!1803 = !{!1059, !1059, !1800}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "subwoofer_cutoffs", scope: !1666, file: !936, line: 201, baseType: !1805, size: 128, align: 16, offset: 551760)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 128, align: 16, elements: !1058)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "pgb", scope: !1666, file: !936, line: 204, baseType: !1807, size: 256, align: 64, offset: 551936)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1808, line: 70, baseType: !1809)
!1808 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1808, line: 61, size: 256, align: 64, elements: !1810)
!1810 = !{!1811, !1812, !1813, !1814, !1815}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1809, file: !1808, line: 62, baseType: !1469, size: 64, align: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1809, file: !1808, line: 62, baseType: !1469, size: 64, align: 64, offset: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1809, file: !1808, line: 67, baseType: !914, size: 32, align: 32, offset: 128)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1809, file: !1808, line: 68, baseType: !914, size: 32, align: 32, offset: 160)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1809, file: !1808, line: 69, baseType: !914, size: 32, align: 32, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "next_packet_start", scope: !1666, file: !936, line: 205, baseType: !914, size: 32, align: 32, offset: 552192)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "packet_offset", scope: !1666, file: !936, line: 206, baseType: !916, size: 8, align: 8, offset: 552224)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "packet_sequence_number", scope: !1666, file: !936, line: 207, baseType: !916, size: 8, align: 8, offset: 552232)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "num_saved_bits", scope: !1666, file: !936, line: 208, baseType: !914, size: 32, align: 32, offset: 552256)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1666, file: !936, line: 209, baseType: !914, size: 32, align: 32, offset: 552288)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "subframe_offset", scope: !1666, file: !936, line: 210, baseType: !914, size: 32, align: 32, offset: 552320)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "packet_loss", scope: !1666, file: !936, line: 211, baseType: !916, size: 8, align: 8, offset: 552352)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "packet_done", scope: !1666, file: !936, line: 212, baseType: !916, size: 8, align: 8, offset: 552360)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "eof_done", scope: !1666, file: !936, line: 213, baseType: !916, size: 8, align: 8, offset: 552368)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "frame_num", scope: !1666, file: !936, line: 216, baseType: !912, size: 32, align: 32, offset: 552384)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1666, file: !936, line: 217, baseType: !1807, size: 256, align: 64, offset: 552448)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "buf_bit_size", scope: !1666, file: !936, line: 218, baseType: !914, size: 32, align: 32, offset: 552704)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "drc_gain", scope: !1666, file: !936, line: 219, baseType: !916, size: 8, align: 8, offset: 552736)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1666, file: !936, line: 220, baseType: !1136, size: 8, align: 8, offset: 552744)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "parsed_all_subframes", scope: !1666, file: !936, line: 221, baseType: !1136, size: 8, align: 8, offset: 552752)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "skip_packets", scope: !1666, file: !936, line: 222, baseType: !916, size: 8, align: 8, offset: 552760)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "subframe_len", scope: !1666, file: !936, line: 225, baseType: !1797, size: 16, align: 16, offset: 552768)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "nb_channels", scope: !1666, file: !936, line: 226, baseType: !1136, size: 8, align: 8, offset: 552784)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "channels_for_cur_subframe", scope: !1666, file: !936, line: 227, baseType: !1136, size: 8, align: 8, offset: 552792)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "channel_indexes_for_cur_subframe", scope: !1666, file: !936, line: 228, baseType: !1794, size: 64, align: 8, offset: 552800)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "num_bands", scope: !1666, file: !936, line: 229, baseType: !1136, size: 8, align: 8, offset: 552864)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "transmit_num_vec_coeffs", scope: !1666, file: !936, line: 230, baseType: !1136, size: 8, align: 8, offset: 552872)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "cur_sfb_offsets", scope: !1666, file: !936, line: 231, baseType: !1839, size: 64, align: 64, offset: 552896)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64, align: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "table_idx", scope: !1666, file: !936, line: 232, baseType: !916, size: 8, align: 8, offset: 552960)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "esc_len", scope: !1666, file: !936, line: 233, baseType: !1136, size: 8, align: 8, offset: 552968)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "num_chgroups", scope: !1666, file: !936, line: 235, baseType: !916, size: 8, align: 8, offset: 552976)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "chgroup", scope: !1666, file: !936, line: 236, baseType: !1844, size: 22528, align: 64, offset: 553024)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1845, size: 22528, align: 64, elements: !1058)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "WMAProChannelGrp", file: !936, line: 170, baseType: !1846)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WMAProChannelGrp", file: !936, line: 164, size: 2816, align: 64, elements: !1847)
!1847 = !{!1848, !1849, !1850, !1853, !1857}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "num_channels", scope: !1846, file: !936, line: 165, baseType: !916, size: 8, align: 8)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1846, file: !936, line: 166, baseType: !1136, size: 8, align: 8, offset: 8)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "transform_band", scope: !1846, file: !936, line: 167, baseType: !1851, size: 232, align: 8, offset: 16)
!1851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1136, size: 232, align: 8, elements: !1852)
!1852 = !{!1800}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "decorrelation_matrix", scope: !1846, file: !936, line: 168, baseType: !1854, size: 2048, align: 32, offset: 256)
!1854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 2048, align: 32, elements: !1855)
!1855 = !{!1856}
!1856 = !DISubrange(count: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "channel_data", scope: !1846, file: !936, line: 169, baseType: !1858, size: 512, align: 64, offset: 2304)
!1858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1679, size: 512, align: 64, elements: !1058)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !1666, file: !936, line: 238, baseType: !1860, size: 3174400, align: 256, offset: 575744)
!1860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1861, size: 3174400, align: 256, elements: !1058)
!1861 = !DIDerivedType(tag: DW_TAG_typedef, name: "WMAProChannelCtx", file: !936, line: 159, baseType: !1862)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WMAProChannelCtx", file: !936, line: 139, size: 396800, align: 256, elements: !1863)
!1863 = !{!1864, !1865, !1866, !1867, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1882, !1883, !1884, !1885, !1886, !1887}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "prev_block_len", scope: !1862, file: !936, line: 140, baseType: !1797, size: 16, align: 16)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "transmit_coefs", scope: !1862, file: !936, line: 141, baseType: !916, size: 8, align: 8, offset: 16)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "num_subframes", scope: !1862, file: !936, line: 142, baseType: !916, size: 8, align: 8, offset: 24)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "subframe_len", scope: !1862, file: !936, line: 143, baseType: !1868, size: 512, align: 16, offset: 32)
!1868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 512, align: 16, elements: !1869)
!1869 = !{!1870}
!1870 = !DISubrange(count: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "subframe_offset", scope: !1862, file: !936, line: 144, baseType: !1868, size: 512, align: 16, offset: 544)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "cur_subframe", scope: !1862, file: !936, line: 145, baseType: !916, size: 8, align: 8, offset: 1056)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "decoded_samples", scope: !1862, file: !936, line: 146, baseType: !904, size: 16, align: 16, offset: 1072)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "grouped", scope: !1862, file: !936, line: 147, baseType: !916, size: 8, align: 8, offset: 1088)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "quant_step", scope: !1862, file: !936, line: 148, baseType: !914, size: 32, align: 32, offset: 1120)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "reuse_sf", scope: !1862, file: !936, line: 149, baseType: !1136, size: 8, align: 8, offset: 1152)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "scale_factor_step", scope: !1862, file: !936, line: 150, baseType: !1136, size: 8, align: 8, offset: 1160)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "max_scale_factor", scope: !1862, file: !936, line: 151, baseType: !914, size: 32, align: 32, offset: 1184)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "saved_scale_factors", scope: !1862, file: !936, line: 152, baseType: !1880, size: 1856, align: 32, offset: 1216)
!1880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !914, size: 1856, align: 32, elements: !1881)
!1881 = !{!927, !1800}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "scale_factor_idx", scope: !1862, file: !936, line: 153, baseType: !1136, size: 8, align: 8, offset: 3072)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "scale_factors", scope: !1862, file: !936, line: 154, baseType: !1321, size: 64, align: 64, offset: 3136)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "table_idx", scope: !1862, file: !936, line: 155, baseType: !916, size: 8, align: 8, offset: 3200)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !1862, file: !936, line: 156, baseType: !1679, size: 64, align: 64, offset: 3264)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "num_vec_coeffs", scope: !1862, file: !936, line: 157, baseType: !904, size: 16, align: 16, offset: 3328)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !1862, file: !936, line: 158, baseType: !1888, size: 393216, align: 32, offset: 3584)
!1888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 393216, align: 32, elements: !1889)
!1889 = !{!1890}
!1890 = !DISubrange(count: 12288)
!1891 = !{}
!1892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 19712, align: 16, elements: !1893)
!1893 = !{!1894, !927}
!1894 = !DISubrange(count: 616)
!1895 = distinct !DIGlobalVariable(name: "table", scope: !1661, file: !936, line: 465, type: !1896, isLocal: true, isDefinition: true, variable: [1406 x [2 x i16]]* @decode_init.table.22)
!1896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 44992, align: 16, elements: !1897)
!1897 = !{!1898, !927}
!1898 = !DISubrange(count: 1406)
!1899 = distinct !DIGlobalVariable(name: "table", scope: !1661, file: !936, line: 469, type: !1900, isLocal: true, isDefinition: true, variable: [2108 x [2 x i16]]* @decode_init.table.23)
!1900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 67456, align: 16, elements: !1901)
!1901 = !{!1902, !927}
!1902 = !DISubrange(count: 2108)
!1903 = distinct !DIGlobalVariable(name: "table", scope: !1661, file: !936, line: 473, type: !1904, isLocal: true, isDefinition: true, variable: [3912 x [2 x i16]]* @decode_init.table.24)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 125184, align: 16, elements: !1905)
!1905 = !{!1906, !927}
!1906 = !DISubrange(count: 3912)
!1907 = distinct !DIGlobalVariable(name: "table", scope: !1661, file: !936, line: 477, type: !1908, isLocal: true, isDefinition: true, variable: [604 x [2 x i16]]* @decode_init.table.25)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 19328, align: 16, elements: !1909)
!1909 = !{!1910, !927}
!1910 = !DISubrange(count: 604)
!1911 = distinct !DIGlobalVariable(name: "table", scope: !1661, file: !936, line: 481, type: !1912, isLocal: true, isDefinition: true, variable: [562 x [2 x i16]]* @decode_init.table.26)
!1912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 17984, align: 16, elements: !1913)
!1913 = !{!1914, !927}
!1914 = !DISubrange(count: 562)
!1915 = distinct !DIGlobalVariable(name: "table", scope: !1661, file: !936, line: 485, type: !1912, isLocal: true, isDefinition: true, variable: [562 x [2 x i16]]* @decode_init.table.27)
!1916 = distinct !DIGlobalVariable(name: "sf_vlc", scope: !0, file: !936, line: 128, type: !1917, isLocal: true, isDefinition: true, variable: %struct.VLC* @sf_vlc)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1918, line: 30, baseType: !1919)
!1918 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1918, line: 26, size: 192, align: 64, elements: !1920)
!1920 = !{!1921, !1922, !1925, !1926}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1919, file: !1918, line: 27, baseType: !914, size: 32, align: 32)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1919, file: !1918, line: 28, baseType: !1923, size: 64, align: 64, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64, align: 64)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 32, align: 16, elements: !926)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1919, file: !1918, line: 29, baseType: !914, size: 32, align: 32, offset: 128)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1919, file: !1918, line: 29, baseType: !914, size: 32, align: 32, offset: 160)
!1927 = distinct !DIGlobalVariable(name: "scale_huffbits", scope: !0, file: !1928, line: 70, type: !1929, isLocal: true, isDefinition: true, variable: [121 x i8]* @scale_huffbits)
!1928 = !DIFile(filename: "libavcodec/wmaprodata.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 968, align: 8, elements: !1930)
!1930 = !{!1931}
!1931 = !DISubrange(count: 121)
!1932 = distinct !DIGlobalVariable(name: "scale_huffcodes", scope: !0, file: !1928, line: 51, type: !1933, isLocal: true, isDefinition: true, variable: [121 x i16]* @scale_huffcodes)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1934, size: 1936, align: 16, elements: !1930)
!1934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !904)
!1935 = distinct !DIGlobalVariable(name: "sf_rl_vlc", scope: !0, file: !936, line: 129, type: !1917, isLocal: true, isDefinition: true, variable: %struct.VLC* @sf_rl_vlc)
!1936 = distinct !DIGlobalVariable(name: "scale_rl_huffbits", scope: !0, file: !1928, line: 118, type: !1937, isLocal: true, isDefinition: true, variable: [120 x i8]* @scale_rl_huffbits)
!1937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 960, align: 8, elements: !1938)
!1938 = !{!1939}
!1939 = !DISubrange(count: 120)
!1940 = distinct !DIGlobalVariable(name: "scale_rl_huffcodes", scope: !0, file: !1928, line: 97, type: !1941, isLocal: true, isDefinition: true, variable: [120 x i32]* @scale_rl_huffcodes)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1942, size: 3840, align: 32, elements: !1938)
!1942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !912)
!1943 = distinct !DIGlobalVariable(name: "coef_vlc", scope: !0, file: !936, line: 133, type: !1944, isLocal: true, isDefinition: true, variable: [2 x %struct.VLC]* @coef_vlc)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1917, size: 384, align: 64, elements: !926)
!1945 = distinct !DIGlobalVariable(name: "coef0_huffbits", scope: !0, file: !1928, line: 210, type: !1946, isLocal: true, isDefinition: true, variable: [272 x i8]* @coef0_huffbits)
!1946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 2176, align: 8, elements: !1947)
!1947 = !{!1948}
!1948 = !DISubrange(count: 272)
!1949 = distinct !DIGlobalVariable(name: "coef0_huffcodes", scope: !0, file: !1928, line: 168, type: !1950, isLocal: true, isDefinition: true, variable: [272 x i32]* @coef0_huffcodes)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1942, size: 8704, align: 32, elements: !1947)
!1951 = distinct !DIGlobalVariable(name: "coef1_huffbits", scope: !0, file: !1928, line: 293, type: !1952, isLocal: true, isDefinition: true, variable: [244 x i8]* @coef1_huffbits)
!1952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 1952, align: 8, elements: !1953)
!1953 = !{!1954}
!1954 = !DISubrange(count: 244)
!1955 = distinct !DIGlobalVariable(name: "coef1_huffcodes", scope: !0, file: !1928, line: 255, type: !1956, isLocal: true, isDefinition: true, variable: [244 x i32]* @coef1_huffcodes)
!1956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1942, size: 7808, align: 32, elements: !1953)
!1957 = distinct !DIGlobalVariable(name: "vec4_vlc", scope: !0, file: !936, line: 130, type: !1917, isLocal: true, isDefinition: true, variable: %struct.VLC* @vec4_vlc)
!1958 = distinct !DIGlobalVariable(name: "vec4_huffbits", scope: !0, file: !1928, line: 440, type: !1959, isLocal: true, isDefinition: true, variable: [127 x i8]* @vec4_huffbits)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 1016, align: 8, elements: !1960)
!1960 = !{!1961}
!1961 = !DISubrange(count: 127)
!1962 = distinct !DIGlobalVariable(name: "vec4_huffcodes", scope: !0, file: !1928, line: 421, type: !1963, isLocal: true, isDefinition: true, variable: [127 x i16]* @vec4_huffcodes)
!1963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1934, size: 2032, align: 16, elements: !1960)
!1964 = distinct !DIGlobalVariable(name: "vec2_vlc", scope: !0, file: !936, line: 131, type: !1917, isLocal: true, isDefinition: true, variable: %struct.VLC* @vec2_vlc)
!1965 = distinct !DIGlobalVariable(name: "vec2_huffbits", scope: !0, file: !1928, line: 483, type: !1966, isLocal: true, isDefinition: true, variable: [137 x i8]* @vec2_huffbits)
!1966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 1096, align: 8, elements: !1967)
!1967 = !{!1968}
!1968 = !DISubrange(count: 137)
!1969 = distinct !DIGlobalVariable(name: "vec2_huffcodes", scope: !0, file: !1928, line: 462, type: !1970, isLocal: true, isDefinition: true, variable: [137 x i16]* @vec2_huffcodes)
!1970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1934, size: 2192, align: 16, elements: !1967)
!1971 = distinct !DIGlobalVariable(name: "vec1_vlc", scope: !0, file: !936, line: 132, type: !1917, isLocal: true, isDefinition: true, variable: %struct.VLC* @vec1_vlc)
!1972 = distinct !DIGlobalVariable(name: "vec1_huffbits", scope: !0, file: !1928, line: 523, type: !1973, isLocal: true, isDefinition: true, variable: [101 x i8]* @vec1_huffbits)
!1973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 808, align: 8, elements: !1974)
!1974 = !{!1975}
!1975 = !DISubrange(count: 101)
!1976 = distinct !DIGlobalVariable(name: "vec1_huffcodes", scope: !0, file: !1928, line: 507, type: !1977, isLocal: true, isDefinition: true, variable: [101 x i16]* @vec1_huffcodes)
!1977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1934, size: 1616, align: 16, elements: !1974)
!1978 = distinct !DIGlobalVariable(name: "critical_freq", scope: !0, file: !1928, line: 37, type: !1979, isLocal: true, isDefinition: true, variable: [28 x i16]* @critical_freq)
!1979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1934, size: 448, align: 16, elements: !1980)
!1980 = !{!1981}
!1981 = !DISubrange(count: 28)
!1982 = distinct !DIGlobalVariable(name: "sin64", scope: !0, file: !936, line: 134, type: !1983, isLocal: true, isDefinition: true, variable: [33 x float]* @sin64)
!1983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 1056, align: 32, elements: !1984)
!1984 = !{!1985}
!1985 = !DISubrange(count: 33)
!1986 = distinct !DIGlobalVariable(name: "default_decorrelation", scope: !0, file: !1928, line: 594, type: !1987, isLocal: true, isDefinition: true, variable: [7 x float*]* @default_decorrelation)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1988, size: 448, align: 64, elements: !1989)
!1988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1680)
!1989 = !{!1990}
!1990 = !DISubrange(count: 7)
!1991 = distinct !DIGlobalVariable(name: "default_decorrelation_matrices", scope: !0, file: !1928, line: 575, type: !1992, isLocal: true, isDefinition: true, variable: [91 x float]* @default_decorrelation_matrices)
!1992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1681, size: 2912, align: 32, elements: !1993)
!1993 = !{!1994}
!1994 = !DISubrange(count: 91)
!1995 = distinct !DIGlobalVariable(name: "scale_rl_run", scope: !0, file: !1928, line: 140, type: !1937, isLocal: true, isDefinition: true, variable: [120 x i8]* @scale_rl_run)
!1996 = distinct !DIGlobalVariable(name: "scale_rl_level", scope: !0, file: !1928, line: 150, type: !1937, isLocal: true, isDefinition: true, variable: [120 x i8]* @scale_rl_level)
!1997 = distinct !DIGlobalVariable(name: "fval_tab", scope: !1998, file: !936, line: 905, type: !2001, isLocal: true, isDefinition: true, variable: [16 x i32]* @decode_coeffs.fval_tab)
!1998 = distinct !DISubprogram(name: "decode_coeffs", scope: !936, file: !936, line: 900, type: !1999, isLocal: true, isDefinition: true, scopeLine: 901, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!1999 = !DISubroutineType(types: !2000)
!2000 = !{!914, !1664, !914}
!2001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1942, size: 512, align: 32, elements: !2002)
!2002 = !{!2003}
!2003 = !DISubrange(count: 16)
!2004 = distinct !DIGlobalVariable(name: "coef1_run", scope: !0, file: !1928, line: 379, type: !2005, isLocal: true, isDefinition: true, variable: [244 x i16]* @coef1_run)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1934, size: 3904, align: 16, elements: !1953)
!2006 = distinct !DIGlobalVariable(name: "coef1_level", scope: !0, file: !1928, line: 396, type: !2007, isLocal: true, isDefinition: true, variable: [244 x float]* @coef1_level)
!2007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1681, size: 7808, align: 32, elements: !1953)
!2008 = distinct !DIGlobalVariable(name: "coef0_run", scope: !0, file: !1928, line: 332, type: !2009, isLocal: true, isDefinition: true, variable: [272 x i16]* @coef0_run)
!2009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1934, size: 4352, align: 16, elements: !1947)
!2010 = distinct !DIGlobalVariable(name: "coef0_level", scope: !0, file: !1928, line: 355, type: !2011, isLocal: true, isDefinition: true, variable: [272 x float]* @coef0_level)
!2011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1681, size: 8704, align: 32, elements: !1947)
!2012 = distinct !DIGlobalVariable(name: "symbol_to_vec2", scope: !0, file: !1928, line: 557, type: !1966, isLocal: true, isDefinition: true, variable: [137 x i8]* @symbol_to_vec2)
!2013 = distinct !DIGlobalVariable(name: "symbol_to_vec4", scope: !0, file: !1928, line: 540, type: !1963, isLocal: true, isDefinition: true, variable: [127 x i16]* @symbol_to_vec4)
!2014 = !{i32 2, !"Dwarf Version", i32 4}
!2015 = !{i32 2, !"Debug Info Version", i32 3}
!2016 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2017 = distinct !DISubprogram(name: "wmapro_decode_init", scope: !936, file: !936, line: 581, type: !1027, isLocal: true, isDefinition: true, scopeLine: 582, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!2018 = !DILocalVariable(name: "avctx", arg: 1, scope: !2017, file: !936, line: 581, type: !1029)
!2019 = !DIExpression()
!2020 = !DILocation(line: 581, column: 69, scope: !2017)
!2021 = !DILocalVariable(name: "s", scope: !2017, file: !936, line: 583, type: !1664)
!2022 = !DILocation(line: 583, column: 22, scope: !2017)
!2023 = !DILocation(line: 583, column: 26, scope: !2017)
!2024 = !DILocation(line: 583, column: 33, scope: !2017)
!2025 = !DILocation(line: 585, column: 24, scope: !2017)
!2026 = !DILocation(line: 585, column: 27, scope: !2017)
!2027 = !DILocation(line: 585, column: 12, scope: !2017)
!2028 = !DILocation(line: 585, column: 5, scope: !2017)
!2029 = distinct !DISubprogram(name: "wmapro_decode_packet", scope: !936, file: !936, line: 1771, type: !1635, isLocal: true, isDefinition: true, scopeLine: 1773, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!2030 = !DILocalVariable(name: "avctx", arg: 1, scope: !2029, file: !936, line: 1771, type: !1029)
!2031 = !DILocation(line: 1771, column: 49, scope: !2029)
!2032 = !DILocalVariable(name: "data", arg: 2, scope: !2029, file: !936, line: 1771, type: !915)
!2033 = !DILocation(line: 1771, column: 62, scope: !2029)
!2034 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2029, file: !936, line: 1772, type: !1321)
!2035 = !DILocation(line: 1772, column: 38, scope: !2029)
!2036 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2029, file: !936, line: 1772, type: !1175)
!2037 = !DILocation(line: 1772, column: 63, scope: !2029)
!2038 = !DILocalVariable(name: "s", scope: !2029, file: !936, line: 1774, type: !1664)
!2039 = !DILocation(line: 1774, column: 22, scope: !2029)
!2040 = !DILocation(line: 1774, column: 26, scope: !2029)
!2041 = !DILocation(line: 1774, column: 33, scope: !2029)
!2042 = !DILocalVariable(name: "frame", scope: !2029, file: !936, line: 1775, type: !1051)
!2043 = !DILocation(line: 1775, column: 14, scope: !2029)
!2044 = !DILocation(line: 1775, column: 22, scope: !2029)
!2045 = !DILocalVariable(name: "ret", scope: !2029, file: !936, line: 1776, type: !914)
!2046 = !DILocation(line: 1776, column: 9, scope: !2029)
!2047 = !DILocation(line: 1779, column: 25, scope: !2029)
!2048 = !DILocation(line: 1779, column: 28, scope: !2029)
!2049 = !DILocation(line: 1779, column: 5, scope: !2029)
!2050 = !DILocation(line: 1779, column: 12, scope: !2029)
!2051 = !DILocation(line: 1779, column: 23, scope: !2029)
!2052 = !DILocation(line: 1780, column: 30, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2029, file: !936, line: 1780, column: 9)
!2054 = !DILocation(line: 1780, column: 37, scope: !2053)
!2055 = !DILocation(line: 1780, column: 16, scope: !2053)
!2056 = !DILocation(line: 1780, column: 14, scope: !2053)
!2057 = !DILocation(line: 1780, column: 48, scope: !2053)
!2058 = !DILocation(line: 1780, column: 9, scope: !2029)
!2059 = !DILocation(line: 1781, column: 9, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !2053, file: !936, line: 1780, column: 53)
!2061 = !DILocation(line: 1781, column: 12, scope: !2060)
!2062 = !DILocation(line: 1781, column: 24, scope: !2060)
!2063 = !DILocation(line: 1782, column: 9, scope: !2060)
!2064 = !DILocation(line: 1785, column: 26, scope: !2029)
!2065 = !DILocation(line: 1785, column: 33, scope: !2029)
!2066 = !DILocation(line: 1785, column: 36, scope: !2029)
!2067 = !DILocation(line: 1785, column: 42, scope: !2029)
!2068 = !DILocation(line: 1785, column: 57, scope: !2029)
!2069 = !DILocation(line: 1785, column: 12, scope: !2029)
!2070 = !DILocation(line: 1785, column: 5, scope: !2029)
!2071 = !DILocation(line: 1786, column: 1, scope: !2029)
!2072 = distinct !DISubprogram(name: "wmapro_decode_end", scope: !936, file: !936, line: 286, type: !1027, isLocal: true, isDefinition: true, scopeLine: 287, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!2073 = !DILocalVariable(name: "avctx", arg: 1, scope: !2072, file: !936, line: 286, type: !1029)
!2074 = !DILocation(line: 286, column: 68, scope: !2072)
!2075 = !DILocalVariable(name: "s", scope: !2072, file: !936, line: 288, type: !1664)
!2076 = !DILocation(line: 288, column: 22, scope: !2072)
!2077 = !DILocation(line: 288, column: 26, scope: !2072)
!2078 = !DILocation(line: 288, column: 33, scope: !2072)
!2079 = !DILocation(line: 290, column: 16, scope: !2072)
!2080 = !DILocation(line: 290, column: 5, scope: !2072)
!2081 = !DILocation(line: 292, column: 5, scope: !2072)
!2082 = distinct !DISubprogram(name: "wmapro_flush", scope: !936, file: !936, line: 1961, type: !1649, isLocal: true, isDefinition: true, scopeLine: 1962, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!2083 = !DILocalVariable(name: "avctx", arg: 1, scope: !2082, file: !936, line: 1961, type: !1029)
!2084 = !DILocation(line: 1961, column: 42, scope: !2082)
!2085 = !DILocalVariable(name: "s", scope: !2082, file: !936, line: 1963, type: !1664)
!2086 = !DILocation(line: 1963, column: 22, scope: !2082)
!2087 = !DILocation(line: 1963, column: 26, scope: !2082)
!2088 = !DILocation(line: 1963, column: 33, scope: !2082)
!2089 = !DILocation(line: 1965, column: 11, scope: !2082)
!2090 = !DILocation(line: 1965, column: 5, scope: !2082)
!2091 = !DILocation(line: 1966, column: 1, scope: !2082)
!2092 = distinct !DISubprogram(name: "xma_decode_init", scope: !936, file: !936, line: 1876, type: !1027, isLocal: true, isDefinition: true, scopeLine: 1877, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!2093 = !DILocalVariable(name: "avctx", arg: 1, scope: !2092, file: !936, line: 1876, type: !1029)
!2094 = !DILocation(line: 1876, column: 66, scope: !2092)
!2095 = !DILocalVariable(name: "s", scope: !2092, file: !936, line: 1878, type: !2096)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64, align: 64)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "XMADecodeCtx", file: !936, line: 249, baseType: !2098)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "XMADecodeCtx", file: !936, line: 241, size: 46779648, align: 256, elements: !2099)
!2099 = !{!2100, !2102, !2104, !2105, !2106, !2110, !2111}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "xma", scope: !2098, file: !936, line: 242, baseType: !2101, size: 30001152, align: 256)
!2101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1665, size: 30001152, align: 256, elements: !1058)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2098, file: !936, line: 243, baseType: !2103, size: 512, align: 64, offset: 30001152)
!2103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1051, size: 512, align: 64, elements: !1058)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "current_stream", scope: !2098, file: !936, line: 244, baseType: !914, size: 32, align: 32, offset: 30001664)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "num_streams", scope: !2098, file: !936, line: 245, baseType: !914, size: 32, align: 32, offset: 30001696)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !2098, file: !936, line: 246, baseType: !2107, size: 16777216, align: 32, offset: 30001728)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 16777216, align: 32, elements: !2108)
!2108 = !{!2003, !2109}
!2109 = !DISubrange(count: 32768)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2098, file: !936, line: 247, baseType: !1061, size: 256, align: 32, offset: 46778944)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "start_channel", scope: !2098, file: !936, line: 248, baseType: !1061, size: 256, align: 32, offset: 46779200)
!2112 = !DILocation(line: 1878, column: 19, scope: !2092)
!2113 = !DILocation(line: 1878, column: 23, scope: !2092)
!2114 = !DILocation(line: 1878, column: 30, scope: !2092)
!2115 = !DILocalVariable(name: "i", scope: !2092, file: !936, line: 1879, type: !914)
!2116 = !DILocation(line: 1879, column: 9, scope: !2092)
!2117 = !DILocalVariable(name: "ret", scope: !2092, file: !936, line: 1879, type: !914)
!2118 = !DILocation(line: 1879, column: 12, scope: !2092)
!2119 = !DILocalVariable(name: "start_channels", scope: !2092, file: !936, line: 1879, type: !914)
!2120 = !DILocation(line: 1879, column: 17, scope: !2092)
!2121 = !DILocation(line: 1881, column: 9, scope: !2122)
!2122 = distinct !DILexicalBlock(scope: !2092, file: !936, line: 1881, column: 9)
!2123 = !DILocation(line: 1881, column: 16, scope: !2122)
!2124 = !DILocation(line: 1881, column: 25, scope: !2122)
!2125 = !DILocation(line: 1881, column: 30, scope: !2122)
!2126 = !DILocation(line: 1881, column: 33, scope: !2127)
!2127 = !DILexicalBlockFile(scope: !2122, file: !936, discriminator: 1)
!2128 = !DILocation(line: 1881, column: 40, scope: !2127)
!2129 = !DILocation(line: 1881, column: 55, scope: !2127)
!2130 = !DILocation(line: 1881, column: 9, scope: !2127)
!2131 = !DILocation(line: 1882, column: 9, scope: !2122)
!2132 = !DILocation(line: 1885, column: 9, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2092, file: !936, line: 1885, column: 9)
!2134 = !DILocation(line: 1885, column: 16, scope: !2133)
!2135 = !DILocation(line: 1885, column: 25, scope: !2133)
!2136 = !DILocation(line: 1885, column: 45, scope: !2133)
!2137 = !DILocation(line: 1885, column: 48, scope: !2138)
!2138 = !DILexicalBlockFile(scope: !2133, file: !936, discriminator: 1)
!2139 = !DILocation(line: 1885, column: 55, scope: !2138)
!2140 = !DILocation(line: 1885, column: 70, scope: !2138)
!2141 = !DILocation(line: 1885, column: 9, scope: !2138)
!2142 = !DILocation(line: 1886, column: 27, scope: !2143)
!2143 = distinct !DILexicalBlock(scope: !2133, file: !936, line: 1885, column: 77)
!2144 = !DILocation(line: 1886, column: 34, scope: !2143)
!2145 = !DILocation(line: 1886, column: 43, scope: !2143)
!2146 = !DILocation(line: 1886, column: 48, scope: !2143)
!2147 = !DILocation(line: 1886, column: 9, scope: !2143)
!2148 = !DILocation(line: 1886, column: 12, scope: !2143)
!2149 = !DILocation(line: 1886, column: 24, scope: !2143)
!2150 = !DILocation(line: 1887, column: 5, scope: !2143)
!2151 = !DILocation(line: 1887, column: 16, scope: !2152)
!2152 = !DILexicalBlockFile(scope: !2153, file: !936, discriminator: 1)
!2153 = distinct !DILexicalBlock(scope: !2133, file: !936, line: 1887, column: 16)
!2154 = !DILocation(line: 1887, column: 23, scope: !2152)
!2155 = !DILocation(line: 1887, column: 32, scope: !2152)
!2156 = !DILocation(line: 1887, column: 52, scope: !2152)
!2157 = !DILocation(line: 1887, column: 55, scope: !2158)
!2158 = !DILexicalBlockFile(scope: !2153, file: !936, discriminator: 2)
!2159 = !DILocation(line: 1887, column: 62, scope: !2158)
!2160 = !DILocation(line: 1887, column: 77, scope: !2158)
!2161 = !DILocation(line: 1887, column: 16, scope: !2158)
!2162 = !DILocation(line: 1888, column: 26, scope: !2163)
!2163 = distinct !DILexicalBlock(scope: !2153, file: !936, line: 1887, column: 83)
!2164 = !DILocation(line: 1888, column: 33, scope: !2163)
!2165 = !DILocation(line: 1888, column: 9, scope: !2163)
!2166 = !DILocation(line: 1888, column: 12, scope: !2163)
!2167 = !DILocation(line: 1888, column: 24, scope: !2163)
!2168 = !DILocation(line: 1889, column: 13, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !2163, file: !936, line: 1889, column: 13)
!2170 = !DILocation(line: 1889, column: 20, scope: !2169)
!2171 = !DILocation(line: 1889, column: 46, scope: !2169)
!2172 = !DILocation(line: 1889, column: 53, scope: !2169)
!2173 = !DILocation(line: 1889, column: 65, scope: !2169)
!2174 = !DILocation(line: 1889, column: 45, scope: !2169)
!2175 = !DILocation(line: 1889, column: 42, scope: !2169)
!2176 = !DILocation(line: 1889, column: 79, scope: !2169)
!2177 = !DILocation(line: 1889, column: 82, scope: !2169)
!2178 = !DILocation(line: 1889, column: 78, scope: !2169)
!2179 = !DILocation(line: 1889, column: 75, scope: !2169)
!2180 = !DILocation(line: 1889, column: 35, scope: !2169)
!2181 = !DILocation(line: 1889, column: 13, scope: !2163)
!2182 = !DILocation(line: 1890, column: 20, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2169, file: !936, line: 1889, column: 96)
!2184 = !DILocation(line: 1890, column: 13, scope: !2183)
!2185 = !DILocation(line: 1891, column: 13, scope: !2183)
!2186 = !DILocation(line: 1893, column: 5, scope: !2163)
!2187 = !DILocation(line: 1893, column: 16, scope: !2188)
!2188 = !DILexicalBlockFile(scope: !2189, file: !936, discriminator: 1)
!2189 = distinct !DILexicalBlock(scope: !2153, file: !936, line: 1893, column: 16)
!2190 = !DILocation(line: 1893, column: 23, scope: !2188)
!2191 = !DILocation(line: 1893, column: 32, scope: !2188)
!2192 = !DILocation(line: 1893, column: 52, scope: !2188)
!2193 = !DILocation(line: 1893, column: 55, scope: !2194)
!2194 = !DILexicalBlockFile(scope: !2189, file: !936, discriminator: 2)
!2195 = !DILocation(line: 1893, column: 62, scope: !2194)
!2196 = !DILocation(line: 1893, column: 77, scope: !2194)
!2197 = !DILocation(line: 1893, column: 16, scope: !2194)
!2198 = !DILocation(line: 1894, column: 26, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !2189, file: !936, line: 1893, column: 83)
!2200 = !DILocation(line: 1894, column: 33, scope: !2199)
!2201 = !DILocation(line: 1894, column: 9, scope: !2199)
!2202 = !DILocation(line: 1894, column: 12, scope: !2199)
!2203 = !DILocation(line: 1894, column: 24, scope: !2199)
!2204 = !DILocation(line: 1895, column: 13, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !2199, file: !936, line: 1895, column: 13)
!2206 = !DILocation(line: 1895, column: 20, scope: !2205)
!2207 = !DILocation(line: 1895, column: 46, scope: !2205)
!2208 = !DILocation(line: 1895, column: 49, scope: !2205)
!2209 = !DILocation(line: 1895, column: 45, scope: !2205)
!2210 = !DILocation(line: 1895, column: 41, scope: !2205)
!2211 = !DILocation(line: 1895, column: 35, scope: !2205)
!2212 = !DILocation(line: 1895, column: 13, scope: !2199)
!2213 = !DILocation(line: 1896, column: 20, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2205, file: !936, line: 1895, column: 63)
!2215 = !DILocation(line: 1896, column: 13, scope: !2214)
!2216 = !DILocation(line: 1897, column: 13, scope: !2214)
!2217 = !DILocation(line: 1899, column: 5, scope: !2199)
!2218 = !DILocation(line: 1900, column: 16, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2189, file: !936, line: 1899, column: 12)
!2220 = !DILocation(line: 1900, column: 9, scope: !2219)
!2221 = !DILocation(line: 1901, column: 9, scope: !2219)
!2222 = !DILocation(line: 1905, column: 9, scope: !2223)
!2223 = distinct !DILexicalBlock(scope: !2092, file: !936, line: 1905, column: 9)
!2224 = !DILocation(line: 1905, column: 16, scope: !2223)
!2225 = !DILocation(line: 1905, column: 25, scope: !2223)
!2226 = !DILocation(line: 1905, column: 35, scope: !2223)
!2227 = !DILocation(line: 1905, column: 38, scope: !2228)
!2228 = !DILexicalBlockFile(scope: !2223, file: !936, discriminator: 1)
!2229 = !DILocation(line: 1905, column: 41, scope: !2228)
!2230 = !DILocation(line: 1905, column: 53, scope: !2228)
!2231 = !DILocation(line: 1905, column: 9, scope: !2228)
!2232 = !DILocation(line: 1906, column: 31, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !2223, file: !936, line: 1905, column: 58)
!2234 = !DILocation(line: 1906, column: 86, scope: !2233)
!2235 = !DILocation(line: 1906, column: 89, scope: !2233)
!2236 = !DILocation(line: 1906, column: 9, scope: !2233)
!2237 = !DILocation(line: 1907, column: 9, scope: !2233)
!2238 = !DILocation(line: 1911, column: 12, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2092, file: !936, line: 1911, column: 5)
!2240 = !DILocation(line: 1911, column: 10, scope: !2239)
!2241 = !DILocation(line: 1911, column: 17, scope: !2242)
!2242 = !DILexicalBlockFile(scope: !2243, file: !936, discriminator: 1)
!2243 = distinct !DILexicalBlock(scope: !2239, file: !936, line: 1911, column: 5)
!2244 = !DILocation(line: 1911, column: 21, scope: !2242)
!2245 = !DILocation(line: 1911, column: 24, scope: !2242)
!2246 = !DILocation(line: 1911, column: 19, scope: !2242)
!2247 = !DILocation(line: 1911, column: 5, scope: !2242)
!2248 = !DILocation(line: 1912, column: 35, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2243, file: !936, line: 1911, column: 42)
!2250 = !DILocation(line: 1912, column: 28, scope: !2249)
!2251 = !DILocation(line: 1912, column: 31, scope: !2249)
!2252 = !DILocation(line: 1912, column: 39, scope: !2249)
!2253 = !DILocation(line: 1912, column: 46, scope: !2249)
!2254 = !DILocation(line: 1912, column: 15, scope: !2249)
!2255 = !DILocation(line: 1912, column: 13, scope: !2249)
!2256 = !DILocation(line: 1913, column: 13, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2249, file: !936, line: 1913, column: 13)
!2258 = !DILocation(line: 1913, column: 17, scope: !2257)
!2259 = !DILocation(line: 1913, column: 13, scope: !2249)
!2260 = !DILocation(line: 1914, column: 20, scope: !2257)
!2261 = !DILocation(line: 1914, column: 13, scope: !2257)
!2262 = !DILocation(line: 1915, column: 24, scope: !2249)
!2263 = !DILocation(line: 1915, column: 19, scope: !2249)
!2264 = !DILocation(line: 1915, column: 9, scope: !2249)
!2265 = !DILocation(line: 1915, column: 12, scope: !2249)
!2266 = !DILocation(line: 1915, column: 22, scope: !2249)
!2267 = !DILocation(line: 1916, column: 24, scope: !2268)
!2268 = distinct !DILexicalBlock(scope: !2249, file: !936, line: 1916, column: 13)
!2269 = !DILocation(line: 1916, column: 14, scope: !2268)
!2270 = !DILocation(line: 1916, column: 17, scope: !2268)
!2271 = !DILocation(line: 1916, column: 13, scope: !2249)
!2272 = !DILocation(line: 1917, column: 13, scope: !2268)
!2273 = !DILocation(line: 1918, column: 19, scope: !2249)
!2274 = !DILocation(line: 1918, column: 9, scope: !2249)
!2275 = !DILocation(line: 1918, column: 12, scope: !2249)
!2276 = !DILocation(line: 1918, column: 23, scope: !2249)
!2277 = !DILocation(line: 1918, column: 34, scope: !2249)
!2278 = !DILocation(line: 1919, column: 34, scope: !2279)
!2279 = distinct !DILexicalBlock(scope: !2249, file: !936, line: 1919, column: 13)
!2280 = !DILocation(line: 1919, column: 51, scope: !2279)
!2281 = !DILocation(line: 1919, column: 41, scope: !2279)
!2282 = !DILocation(line: 1919, column: 44, scope: !2279)
!2283 = !DILocation(line: 1919, column: 20, scope: !2279)
!2284 = !DILocation(line: 1919, column: 18, scope: !2279)
!2285 = !DILocation(line: 1919, column: 59, scope: !2279)
!2286 = !DILocation(line: 1919, column: 13, scope: !2249)
!2287 = !DILocation(line: 1920, column: 13, scope: !2288)
!2288 = distinct !DILexicalBlock(scope: !2279, file: !936, line: 1919, column: 64)
!2289 = !DILocation(line: 1923, column: 31, scope: !2249)
!2290 = !DILocation(line: 1923, column: 26, scope: !2249)
!2291 = !DILocation(line: 1923, column: 9, scope: !2249)
!2292 = !DILocation(line: 1923, column: 12, scope: !2249)
!2293 = !DILocation(line: 1923, column: 29, scope: !2249)
!2294 = !DILocation(line: 1924, column: 34, scope: !2249)
!2295 = !DILocation(line: 1924, column: 27, scope: !2249)
!2296 = !DILocation(line: 1924, column: 30, scope: !2249)
!2297 = !DILocation(line: 1924, column: 37, scope: !2249)
!2298 = !DILocation(line: 1924, column: 24, scope: !2249)
!2299 = !DILocation(line: 1925, column: 5, scope: !2249)
!2300 = !DILocation(line: 1911, column: 38, scope: !2301)
!2301 = !DILexicalBlockFile(scope: !2243, file: !936, discriminator: 2)
!2302 = !DILocation(line: 1911, column: 5, scope: !2301)
!2303 = distinct !{!2303, !2304}
!2304 = !DILocation(line: 1911, column: 5, scope: !2092)
!2305 = !DILocation(line: 1927, column: 12, scope: !2092)
!2306 = !DILocation(line: 1927, column: 5, scope: !2092)
!2307 = !DILocation(line: 1928, column: 1, scope: !2092)
!2308 = distinct !DISubprogram(name: "xma_decode_packet", scope: !936, file: !936, line: 1788, type: !1635, isLocal: true, isDefinition: true, scopeLine: 1790, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!2309 = !DILocalVariable(name: "avctx", arg: 1, scope: !2308, file: !936, line: 1788, type: !1029)
!2310 = !DILocation(line: 1788, column: 46, scope: !2308)
!2311 = !DILocalVariable(name: "data", arg: 2, scope: !2308, file: !936, line: 1788, type: !915)
!2312 = !DILocation(line: 1788, column: 59, scope: !2308)
!2313 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2308, file: !936, line: 1789, type: !1321)
!2314 = !DILocation(line: 1789, column: 35, scope: !2308)
!2315 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2308, file: !936, line: 1789, type: !1175)
!2316 = !DILocation(line: 1789, column: 60, scope: !2308)
!2317 = !DILocalVariable(name: "s", scope: !2308, file: !936, line: 1791, type: !2096)
!2318 = !DILocation(line: 1791, column: 19, scope: !2308)
!2319 = !DILocation(line: 1791, column: 23, scope: !2308)
!2320 = !DILocation(line: 1791, column: 30, scope: !2308)
!2321 = !DILocalVariable(name: "got_stream_frame_ptr", scope: !2308, file: !936, line: 1792, type: !914)
!2322 = !DILocation(line: 1792, column: 9, scope: !2308)
!2323 = !DILocalVariable(name: "frame", scope: !2308, file: !936, line: 1793, type: !1051)
!2324 = !DILocation(line: 1793, column: 14, scope: !2308)
!2325 = !DILocation(line: 1793, column: 22, scope: !2308)
!2326 = !DILocalVariable(name: "i", scope: !2308, file: !936, line: 1794, type: !914)
!2327 = !DILocation(line: 1794, column: 9, scope: !2308)
!2328 = !DILocalVariable(name: "ret", scope: !2308, file: !936, line: 1794, type: !914)
!2329 = !DILocation(line: 1794, column: 12, scope: !2308)
!2330 = !DILocalVariable(name: "offset", scope: !2308, file: !936, line: 1794, type: !914)
!2331 = !DILocation(line: 1794, column: 17, scope: !2308)
!2332 = !DILocation(line: 1797, column: 25, scope: !2308)
!2333 = !DILocation(line: 1797, column: 40, scope: !2308)
!2334 = !DILocation(line: 1797, column: 43, scope: !2308)
!2335 = !DILocation(line: 1797, column: 33, scope: !2308)
!2336 = !DILocation(line: 1797, column: 36, scope: !2308)
!2337 = !DILocation(line: 1797, column: 70, scope: !2308)
!2338 = !DILocation(line: 1797, column: 73, scope: !2308)
!2339 = !DILocation(line: 1797, column: 60, scope: !2308)
!2340 = !DILocation(line: 1797, column: 63, scope: !2308)
!2341 = !DILocation(line: 1798, column: 48, scope: !2308)
!2342 = !DILocation(line: 1797, column: 11, scope: !2308)
!2343 = !DILocation(line: 1797, column: 9, scope: !2308)
!2344 = !DILocation(line: 1801, column: 9, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2308, file: !936, line: 1801, column: 9)
!2346 = !DILocation(line: 1801, column: 9, scope: !2308)
!2347 = !DILocalVariable(name: "start_ch", scope: !2348, file: !936, line: 1802, type: !914)
!2348 = distinct !DILexicalBlock(scope: !2345, file: !936, line: 1801, column: 31)
!2349 = !DILocation(line: 1802, column: 13, scope: !2348)
!2350 = !DILocation(line: 1802, column: 41, scope: !2348)
!2351 = !DILocation(line: 1802, column: 44, scope: !2348)
!2352 = !DILocation(line: 1802, column: 24, scope: !2348)
!2353 = !DILocation(line: 1802, column: 27, scope: !2348)
!2354 = !DILocation(line: 1803, column: 52, scope: !2348)
!2355 = !DILocation(line: 1803, column: 55, scope: !2348)
!2356 = !DILocation(line: 1803, column: 42, scope: !2348)
!2357 = !DILocation(line: 1803, column: 45, scope: !2348)
!2358 = !DILocation(line: 1803, column: 71, scope: !2348)
!2359 = !DILocation(line: 1803, column: 17, scope: !2348)
!2360 = !DILocation(line: 1803, column: 28, scope: !2348)
!2361 = !DILocation(line: 1803, column: 37, scope: !2348)
!2362 = !DILocation(line: 1803, column: 20, scope: !2348)
!2363 = !DILocation(line: 1803, column: 9, scope: !2348)
!2364 = !DILocation(line: 1804, column: 26, scope: !2348)
!2365 = !DILocation(line: 1804, column: 29, scope: !2348)
!2366 = !DILocation(line: 1804, column: 16, scope: !2348)
!2367 = !DILocation(line: 1804, column: 19, scope: !2348)
!2368 = !DILocation(line: 1804, column: 46, scope: !2348)
!2369 = !DILocation(line: 1805, column: 20, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2348, file: !936, line: 1805, column: 13)
!2371 = !DILocation(line: 1805, column: 23, scope: !2370)
!2372 = !DILocation(line: 1805, column: 13, scope: !2370)
!2373 = !DILocation(line: 1805, column: 16, scope: !2370)
!2374 = !DILocation(line: 1805, column: 39, scope: !2370)
!2375 = !DILocation(line: 1805, column: 51, scope: !2370)
!2376 = !DILocation(line: 1805, column: 13, scope: !2348)
!2377 = !DILocation(line: 1806, column: 56, scope: !2370)
!2378 = !DILocation(line: 1806, column: 59, scope: !2370)
!2379 = !DILocation(line: 1806, column: 46, scope: !2370)
!2380 = !DILocation(line: 1806, column: 49, scope: !2370)
!2381 = !DILocation(line: 1806, column: 75, scope: !2370)
!2382 = !DILocation(line: 1806, column: 21, scope: !2370)
!2383 = !DILocation(line: 1806, column: 32, scope: !2370)
!2384 = !DILocation(line: 1806, column: 41, scope: !2370)
!2385 = !DILocation(line: 1806, column: 24, scope: !2370)
!2386 = !DILocation(line: 1806, column: 13, scope: !2370)
!2387 = !DILocation(line: 1807, column: 30, scope: !2370)
!2388 = !DILocation(line: 1807, column: 33, scope: !2370)
!2389 = !DILocation(line: 1807, column: 20, scope: !2370)
!2390 = !DILocation(line: 1807, column: 23, scope: !2370)
!2391 = !DILocation(line: 1807, column: 50, scope: !2370)
!2392 = !DILocation(line: 1808, column: 19, scope: !2348)
!2393 = !DILocation(line: 1808, column: 22, scope: !2348)
!2394 = !DILocation(line: 1808, column: 9, scope: !2348)
!2395 = !DILocation(line: 1808, column: 12, scope: !2348)
!2396 = !DILocation(line: 1808, column: 37, scope: !2348)
!2397 = !DILocation(line: 1809, column: 5, scope: !2348)
!2398 = !DILocation(line: 1809, column: 16, scope: !2399)
!2399 = !DILexicalBlockFile(scope: !2400, file: !936, discriminator: 1)
!2400 = distinct !DILexicalBlock(scope: !2345, file: !936, line: 1809, column: 16)
!2401 = !DILocation(line: 1809, column: 20, scope: !2399)
!2402 = !DILocation(line: 1810, column: 16, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2400, file: !936, line: 1809, column: 25)
!2404 = !DILocation(line: 1810, column: 19, scope: !2403)
!2405 = !DILocation(line: 1810, column: 9, scope: !2403)
!2406 = !DILocation(line: 1811, column: 9, scope: !2403)
!2407 = !DILocation(line: 1811, column: 12, scope: !2403)
!2408 = !DILocation(line: 1811, column: 27, scope: !2403)
!2409 = !DILocation(line: 1812, column: 16, scope: !2403)
!2410 = !DILocation(line: 1812, column: 9, scope: !2403)
!2411 = !DILocation(line: 1818, column: 16, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2308, file: !936, line: 1818, column: 9)
!2413 = !DILocation(line: 1818, column: 19, scope: !2412)
!2414 = !DILocation(line: 1818, column: 9, scope: !2412)
!2415 = !DILocation(line: 1818, column: 12, scope: !2412)
!2416 = !DILocation(line: 1818, column: 35, scope: !2412)
!2417 = !DILocation(line: 1818, column: 47, scope: !2412)
!2418 = !DILocation(line: 1819, column: 16, scope: !2412)
!2419 = !DILocation(line: 1819, column: 19, scope: !2412)
!2420 = !DILocation(line: 1819, column: 9, scope: !2412)
!2421 = !DILocation(line: 1819, column: 12, scope: !2412)
!2422 = !DILocation(line: 1819, column: 35, scope: !2412)
!2423 = !DILocation(line: 1818, column: 9, scope: !2424)
!2424 = !DILexicalBlockFile(scope: !2308, file: !936, discriminator: 1)
!2425 = !DILocation(line: 1822, column: 20, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2427, file: !936, line: 1822, column: 13)
!2427 = distinct !DILexicalBlock(scope: !2412, file: !936, line: 1819, column: 48)
!2428 = !DILocation(line: 1822, column: 23, scope: !2426)
!2429 = !DILocation(line: 1822, column: 13, scope: !2426)
!2430 = !DILocation(line: 1822, column: 16, scope: !2426)
!2431 = !DILocation(line: 1822, column: 39, scope: !2426)
!2432 = !DILocation(line: 1822, column: 52, scope: !2426)
!2433 = !DILocation(line: 1822, column: 13, scope: !2427)
!2434 = !DILocalVariable(name: "min", scope: !2435, file: !936, line: 1823, type: !2436)
!2435 = distinct !DILexicalBlock(scope: !2426, file: !936, line: 1822, column: 58)
!2436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !914, size: 64, align: 32, elements: !926)
!2437 = !DILocation(line: 1823, column: 17, scope: !2435)
!2438 = !DILocation(line: 1825, column: 22, scope: !2435)
!2439 = !DILocation(line: 1825, column: 25, scope: !2435)
!2440 = !DILocation(line: 1825, column: 32, scope: !2435)
!2441 = !DILocation(line: 1825, column: 13, scope: !2435)
!2442 = !DILocation(line: 1825, column: 20, scope: !2435)
!2443 = !DILocation(line: 1826, column: 24, scope: !2435)
!2444 = !DILocation(line: 1826, column: 13, scope: !2435)
!2445 = !DILocation(line: 1826, column: 20, scope: !2435)
!2446 = !DILocation(line: 1828, column: 20, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2435, file: !936, line: 1828, column: 13)
!2448 = !DILocation(line: 1828, column: 18, scope: !2447)
!2449 = !DILocation(line: 1828, column: 25, scope: !2450)
!2450 = !DILexicalBlockFile(scope: !2451, file: !936, discriminator: 1)
!2451 = distinct !DILexicalBlock(scope: !2447, file: !936, line: 1828, column: 13)
!2452 = !DILocation(line: 1828, column: 29, scope: !2450)
!2453 = !DILocation(line: 1828, column: 32, scope: !2450)
!2454 = !DILocation(line: 1828, column: 27, scope: !2450)
!2455 = !DILocation(line: 1828, column: 13, scope: !2450)
!2456 = !DILocation(line: 1829, column: 28, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2458, file: !936, line: 1829, column: 21)
!2458 = distinct !DILexicalBlock(scope: !2451, file: !936, line: 1828, column: 50)
!2459 = !DILocation(line: 1829, column: 21, scope: !2457)
!2460 = !DILocation(line: 1829, column: 24, scope: !2457)
!2461 = !DILocation(line: 1829, column: 31, scope: !2457)
!2462 = !DILocation(line: 1829, column: 46, scope: !2457)
!2463 = !DILocation(line: 1829, column: 44, scope: !2457)
!2464 = !DILocation(line: 1829, column: 21, scope: !2458)
!2465 = !DILocation(line: 1830, column: 37, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2457, file: !936, line: 1829, column: 54)
!2467 = !DILocation(line: 1830, column: 30, scope: !2466)
!2468 = !DILocation(line: 1830, column: 33, scope: !2466)
!2469 = !DILocation(line: 1830, column: 40, scope: !2466)
!2470 = !DILocation(line: 1830, column: 21, scope: !2466)
!2471 = !DILocation(line: 1830, column: 28, scope: !2466)
!2472 = !DILocation(line: 1831, column: 30, scope: !2466)
!2473 = !DILocation(line: 1831, column: 21, scope: !2466)
!2474 = !DILocation(line: 1831, column: 28, scope: !2466)
!2475 = !DILocation(line: 1832, column: 17, scope: !2466)
!2476 = !DILocation(line: 1833, column: 13, scope: !2458)
!2477 = !DILocation(line: 1828, column: 46, scope: !2478)
!2478 = !DILexicalBlockFile(scope: !2451, file: !936, discriminator: 2)
!2479 = !DILocation(line: 1828, column: 13, scope: !2478)
!2480 = distinct !{!2480, !2481}
!2481 = !DILocation(line: 1828, column: 13, scope: !2435)
!2482 = !DILocation(line: 1835, column: 33, scope: !2435)
!2483 = !DILocation(line: 1835, column: 13, scope: !2435)
!2484 = !DILocation(line: 1835, column: 16, scope: !2435)
!2485 = !DILocation(line: 1835, column: 31, scope: !2435)
!2486 = !DILocation(line: 1836, column: 9, scope: !2435)
!2487 = !DILocation(line: 1839, column: 16, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2427, file: !936, line: 1839, column: 9)
!2489 = !DILocation(line: 1839, column: 14, scope: !2488)
!2490 = !DILocation(line: 1839, column: 21, scope: !2491)
!2491 = !DILexicalBlockFile(scope: !2492, file: !936, discriminator: 1)
!2492 = distinct !DILexicalBlock(scope: !2488, file: !936, line: 1839, column: 9)
!2493 = !DILocation(line: 1839, column: 25, scope: !2491)
!2494 = !DILocation(line: 1839, column: 28, scope: !2491)
!2495 = !DILocation(line: 1839, column: 23, scope: !2491)
!2496 = !DILocation(line: 1839, column: 9, scope: !2491)
!2497 = !DILocation(line: 1840, column: 53, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2492, file: !936, line: 1839, column: 46)
!2499 = !DILocation(line: 1840, column: 46, scope: !2498)
!2500 = !DILocation(line: 1840, column: 49, scope: !2498)
!2501 = !DILocation(line: 1840, column: 56, scope: !2498)
!2502 = !DILocation(line: 1840, column: 69, scope: !2498)
!2503 = !DILocation(line: 1840, column: 43, scope: !2498)
!2504 = !DILocation(line: 1840, column: 39, scope: !2498)
!2505 = !DILocation(line: 1840, column: 39, scope: !2506)
!2506 = !DILexicalBlockFile(scope: !2498, file: !936, discriminator: 1)
!2507 = !DILocation(line: 1840, column: 90, scope: !2508)
!2508 = !DILexicalBlockFile(scope: !2498, file: !936, discriminator: 2)
!2509 = !DILocation(line: 1840, column: 83, scope: !2508)
!2510 = !DILocation(line: 1840, column: 86, scope: !2508)
!2511 = !DILocation(line: 1840, column: 93, scope: !2508)
!2512 = !DILocation(line: 1840, column: 106, scope: !2508)
!2513 = !DILocation(line: 1840, column: 39, scope: !2508)
!2514 = !DILocation(line: 1840, column: 39, scope: !2515)
!2515 = !DILexicalBlockFile(scope: !2498, file: !936, discriminator: 3)
!2516 = !DILocation(line: 1840, column: 38, scope: !2515)
!2517 = !DILocation(line: 1840, column: 20, scope: !2515)
!2518 = !DILocation(line: 1840, column: 13, scope: !2515)
!2519 = !DILocation(line: 1840, column: 16, scope: !2515)
!2520 = !DILocation(line: 1840, column: 23, scope: !2515)
!2521 = !DILocation(line: 1840, column: 36, scope: !2515)
!2522 = !DILocation(line: 1841, column: 9, scope: !2498)
!2523 = !DILocation(line: 1839, column: 42, scope: !2524)
!2524 = !DILexicalBlockFile(scope: !2492, file: !936, discriminator: 2)
!2525 = !DILocation(line: 1839, column: 9, scope: !2524)
!2526 = distinct !{!2526, !2527}
!2527 = !DILocation(line: 1839, column: 9, scope: !2427)
!2528 = !DILocation(line: 1844, column: 16, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2427, file: !936, line: 1844, column: 9)
!2530 = !DILocation(line: 1844, column: 14, scope: !2529)
!2531 = !DILocation(line: 1844, column: 21, scope: !2532)
!2532 = !DILexicalBlockFile(scope: !2533, file: !936, discriminator: 1)
!2533 = distinct !DILexicalBlock(scope: !2529, file: !936, line: 1844, column: 9)
!2534 = !DILocation(line: 1844, column: 25, scope: !2532)
!2535 = !DILocation(line: 1844, column: 28, scope: !2532)
!2536 = !DILocation(line: 1844, column: 23, scope: !2532)
!2537 = !DILocation(line: 1844, column: 9, scope: !2532)
!2538 = !DILocation(line: 1845, column: 24, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2533, file: !936, line: 1844, column: 46)
!2540 = !DILocation(line: 1845, column: 45, scope: !2539)
!2541 = !DILocation(line: 1845, column: 35, scope: !2539)
!2542 = !DILocation(line: 1845, column: 38, scope: !2539)
!2543 = !DILocation(line: 1845, column: 32, scope: !2539)
!2544 = !DILocation(line: 1845, column: 23, scope: !2539)
!2545 = !DILocation(line: 1845, column: 62, scope: !2546)
!2546 = !DILexicalBlockFile(scope: !2539, file: !936, discriminator: 1)
!2547 = !DILocation(line: 1845, column: 52, scope: !2546)
!2548 = !DILocation(line: 1845, column: 55, scope: !2546)
!2549 = !DILocation(line: 1845, column: 23, scope: !2546)
!2550 = !DILocation(line: 1845, column: 69, scope: !2551)
!2551 = !DILexicalBlockFile(scope: !2539, file: !936, discriminator: 2)
!2552 = !DILocation(line: 1845, column: 23, scope: !2551)
!2553 = !DILocation(line: 1845, column: 23, scope: !2554)
!2554 = !DILexicalBlockFile(scope: !2539, file: !936, discriminator: 3)
!2555 = !DILocation(line: 1845, column: 20, scope: !2554)
!2556 = !DILocation(line: 1846, column: 9, scope: !2539)
!2557 = !DILocation(line: 1844, column: 42, scope: !2558)
!2558 = !DILexicalBlockFile(scope: !2533, file: !936, discriminator: 2)
!2559 = !DILocation(line: 1844, column: 9, scope: !2558)
!2560 = distinct !{!2560, !2561}
!2561 = !DILocation(line: 1844, column: 9, scope: !2427)
!2562 = !DILocation(line: 1847, column: 13, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2427, file: !936, line: 1847, column: 13)
!2564 = !DILocation(line: 1847, column: 20, scope: !2563)
!2565 = !DILocation(line: 1847, column: 13, scope: !2427)
!2566 = !DILocalVariable(name: "bret", scope: !2567, file: !936, line: 1848, type: !914)
!2567 = distinct !DILexicalBlock(scope: !2563, file: !936, line: 1847, column: 25)
!2568 = !DILocation(line: 1848, column: 17, scope: !2567)
!2569 = !DILocation(line: 1850, column: 39, scope: !2567)
!2570 = !DILocation(line: 1850, column: 37, scope: !2567)
!2571 = !DILocation(line: 1850, column: 13, scope: !2567)
!2572 = !DILocation(line: 1850, column: 20, scope: !2567)
!2573 = !DILocation(line: 1850, column: 31, scope: !2567)
!2574 = !DILocation(line: 1851, column: 39, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2567, file: !936, line: 1851, column: 17)
!2576 = !DILocation(line: 1851, column: 46, scope: !2575)
!2577 = !DILocation(line: 1851, column: 25, scope: !2575)
!2578 = !DILocation(line: 1851, column: 23, scope: !2575)
!2579 = !DILocation(line: 1851, column: 57, scope: !2575)
!2580 = !DILocation(line: 1851, column: 17, scope: !2567)
!2581 = !DILocation(line: 1852, column: 24, scope: !2575)
!2582 = !DILocation(line: 1852, column: 17, scope: !2575)
!2583 = !DILocation(line: 1855, column: 20, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2567, file: !936, line: 1855, column: 13)
!2585 = !DILocation(line: 1855, column: 18, scope: !2584)
!2586 = !DILocation(line: 1855, column: 25, scope: !2587)
!2587 = !DILexicalBlockFile(scope: !2588, file: !936, discriminator: 1)
!2588 = distinct !DILexicalBlock(scope: !2584, file: !936, line: 1855, column: 13)
!2589 = !DILocation(line: 1855, column: 29, scope: !2587)
!2590 = !DILocation(line: 1855, column: 32, scope: !2587)
!2591 = !DILocation(line: 1855, column: 27, scope: !2587)
!2592 = !DILocation(line: 1855, column: 13, scope: !2587)
!2593 = !DILocalVariable(name: "start_ch", scope: !2594, file: !936, line: 1856, type: !914)
!2594 = distinct !DILexicalBlock(scope: !2588, file: !936, line: 1855, column: 50)
!2595 = !DILocation(line: 1856, column: 21, scope: !2594)
!2596 = !DILocation(line: 1856, column: 49, scope: !2594)
!2597 = !DILocation(line: 1856, column: 32, scope: !2594)
!2598 = !DILocation(line: 1856, column: 35, scope: !2594)
!2599 = !DILocation(line: 1857, column: 45, scope: !2594)
!2600 = !DILocation(line: 1857, column: 54, scope: !2594)
!2601 = !DILocation(line: 1857, column: 24, scope: !2594)
!2602 = !DILocation(line: 1857, column: 31, scope: !2594)
!2603 = !DILocation(line: 1857, column: 71, scope: !2594)
!2604 = !DILocation(line: 1857, column: 80, scope: !2594)
!2605 = !DILocation(line: 1857, column: 60, scope: !2594)
!2606 = !DILocation(line: 1857, column: 63, scope: !2594)
!2607 = !DILocation(line: 1857, column: 17, scope: !2594)
!2608 = !DILocation(line: 1857, column: 86, scope: !2594)
!2609 = !DILocation(line: 1857, column: 93, scope: !2594)
!2610 = !DILocation(line: 1857, column: 104, scope: !2594)
!2611 = !DILocation(line: 1858, column: 28, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2594, file: !936, line: 1858, column: 21)
!2613 = !DILocation(line: 1858, column: 21, scope: !2612)
!2614 = !DILocation(line: 1858, column: 24, scope: !2612)
!2615 = !DILocation(line: 1858, column: 31, scope: !2612)
!2616 = !DILocation(line: 1858, column: 43, scope: !2612)
!2617 = !DILocation(line: 1858, column: 21, scope: !2594)
!2618 = !DILocation(line: 1859, column: 49, scope: !2612)
!2619 = !DILocation(line: 1859, column: 58, scope: !2612)
!2620 = !DILocation(line: 1859, column: 28, scope: !2612)
!2621 = !DILocation(line: 1859, column: 35, scope: !2612)
!2622 = !DILocation(line: 1859, column: 75, scope: !2612)
!2623 = !DILocation(line: 1859, column: 84, scope: !2612)
!2624 = !DILocation(line: 1859, column: 64, scope: !2612)
!2625 = !DILocation(line: 1859, column: 67, scope: !2612)
!2626 = !DILocation(line: 1859, column: 21, scope: !2612)
!2627 = !DILocation(line: 1859, column: 90, scope: !2612)
!2628 = !DILocation(line: 1859, column: 97, scope: !2612)
!2629 = !DILocation(line: 1859, column: 108, scope: !2612)
!2630 = !DILocation(line: 1861, column: 33, scope: !2594)
!2631 = !DILocation(line: 1861, column: 27, scope: !2594)
!2632 = !DILocation(line: 1861, column: 17, scope: !2594)
!2633 = !DILocation(line: 1861, column: 20, scope: !2594)
!2634 = !DILocation(line: 1861, column: 30, scope: !2594)
!2635 = !DILocation(line: 1862, column: 31, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2594, file: !936, line: 1862, column: 21)
!2637 = !DILocation(line: 1862, column: 21, scope: !2636)
!2638 = !DILocation(line: 1862, column: 24, scope: !2636)
!2639 = !DILocation(line: 1862, column: 21, scope: !2594)
!2640 = !DILocation(line: 1863, column: 40, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2636, file: !936, line: 1862, column: 35)
!2642 = !DILocation(line: 1863, column: 49, scope: !2641)
!2643 = !DILocation(line: 1863, column: 29, scope: !2641)
!2644 = !DILocation(line: 1863, column: 32, scope: !2641)
!2645 = !DILocation(line: 1863, column: 21, scope: !2641)
!2646 = !DILocation(line: 1863, column: 66, scope: !2641)
!2647 = !DILocation(line: 1863, column: 75, scope: !2641)
!2648 = !DILocation(line: 1863, column: 55, scope: !2641)
!2649 = !DILocation(line: 1863, column: 58, scope: !2641)
!2650 = !DILocation(line: 1863, column: 82, scope: !2641)
!2651 = !DILocation(line: 1863, column: 89, scope: !2641)
!2652 = !DILocation(line: 1863, column: 80, scope: !2641)
!2653 = !DILocation(line: 1863, column: 111, scope: !2641)
!2654 = !DILocation(line: 1863, column: 101, scope: !2641)
!2655 = !DILocation(line: 1863, column: 104, scope: !2641)
!2656 = !DILocation(line: 1863, column: 114, scope: !2641)
!2657 = !DILocation(line: 1863, column: 118, scope: !2641)
!2658 = !DILocation(line: 1864, column: 32, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2641, file: !936, line: 1864, column: 25)
!2660 = !DILocation(line: 1864, column: 25, scope: !2659)
!2661 = !DILocation(line: 1864, column: 28, scope: !2659)
!2662 = !DILocation(line: 1864, column: 35, scope: !2659)
!2663 = !DILocation(line: 1864, column: 47, scope: !2659)
!2664 = !DILocation(line: 1864, column: 25, scope: !2641)
!2665 = !DILocation(line: 1865, column: 44, scope: !2659)
!2666 = !DILocation(line: 1865, column: 53, scope: !2659)
!2667 = !DILocation(line: 1865, column: 33, scope: !2659)
!2668 = !DILocation(line: 1865, column: 36, scope: !2659)
!2669 = !DILocation(line: 1865, column: 25, scope: !2659)
!2670 = !DILocation(line: 1865, column: 70, scope: !2659)
!2671 = !DILocation(line: 1865, column: 79, scope: !2659)
!2672 = !DILocation(line: 1865, column: 59, scope: !2659)
!2673 = !DILocation(line: 1865, column: 62, scope: !2659)
!2674 = !DILocation(line: 1865, column: 86, scope: !2659)
!2675 = !DILocation(line: 1865, column: 93, scope: !2659)
!2676 = !DILocation(line: 1865, column: 84, scope: !2659)
!2677 = !DILocation(line: 1865, column: 115, scope: !2659)
!2678 = !DILocation(line: 1865, column: 105, scope: !2659)
!2679 = !DILocation(line: 1865, column: 108, scope: !2659)
!2680 = !DILocation(line: 1865, column: 118, scope: !2659)
!2681 = !DILocation(line: 1865, column: 122, scope: !2659)
!2682 = !DILocation(line: 1866, column: 17, scope: !2641)
!2683 = !DILocation(line: 1867, column: 13, scope: !2594)
!2684 = !DILocation(line: 1855, column: 46, scope: !2685)
!2685 = !DILexicalBlockFile(scope: !2588, file: !936, discriminator: 2)
!2686 = !DILocation(line: 1855, column: 13, scope: !2685)
!2687 = distinct !{!2687, !2688}
!2688 = !DILocation(line: 1855, column: 13, scope: !2567)
!2689 = !DILocation(line: 1869, column: 14, scope: !2567)
!2690 = !DILocation(line: 1869, column: 28, scope: !2567)
!2691 = !DILocation(line: 1870, column: 9, scope: !2567)
!2692 = !DILocation(line: 1871, column: 5, scope: !2427)
!2693 = !DILocation(line: 1873, column: 12, scope: !2308)
!2694 = !DILocation(line: 1873, column: 5, scope: !2308)
!2695 = !DILocation(line: 1874, column: 1, scope: !2308)
!2696 = distinct !DISubprogram(name: "xma_decode_end", scope: !936, file: !936, line: 1930, type: !1027, isLocal: true, isDefinition: true, scopeLine: 1931, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!2697 = !DILocalVariable(name: "avctx", arg: 1, scope: !2696, file: !936, line: 1930, type: !1029)
!2698 = !DILocation(line: 1930, column: 65, scope: !2696)
!2699 = !DILocalVariable(name: "s", scope: !2696, file: !936, line: 1932, type: !2096)
!2700 = !DILocation(line: 1932, column: 19, scope: !2696)
!2701 = !DILocation(line: 1932, column: 23, scope: !2696)
!2702 = !DILocation(line: 1932, column: 30, scope: !2696)
!2703 = !DILocalVariable(name: "i", scope: !2696, file: !936, line: 1933, type: !914)
!2704 = !DILocation(line: 1933, column: 9, scope: !2696)
!2705 = !DILocation(line: 1935, column: 12, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2696, file: !936, line: 1935, column: 5)
!2707 = !DILocation(line: 1935, column: 10, scope: !2706)
!2708 = !DILocation(line: 1935, column: 17, scope: !2709)
!2709 = !DILexicalBlockFile(scope: !2710, file: !936, discriminator: 1)
!2710 = distinct !DILexicalBlock(scope: !2706, file: !936, line: 1935, column: 5)
!2711 = !DILocation(line: 1935, column: 21, scope: !2709)
!2712 = !DILocation(line: 1935, column: 24, scope: !2709)
!2713 = !DILocation(line: 1935, column: 19, scope: !2709)
!2714 = !DILocation(line: 1935, column: 5, scope: !2709)
!2715 = !DILocation(line: 1936, column: 28, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2710, file: !936, line: 1935, column: 42)
!2717 = !DILocation(line: 1936, column: 21, scope: !2716)
!2718 = !DILocation(line: 1936, column: 24, scope: !2716)
!2719 = !DILocation(line: 1936, column: 9, scope: !2716)
!2720 = !DILocation(line: 1937, column: 34, scope: !2716)
!2721 = !DILocation(line: 1937, column: 24, scope: !2716)
!2722 = !DILocation(line: 1937, column: 27, scope: !2716)
!2723 = !DILocation(line: 1937, column: 9, scope: !2716)
!2724 = !DILocation(line: 1938, column: 5, scope: !2716)
!2725 = !DILocation(line: 1935, column: 38, scope: !2726)
!2726 = !DILexicalBlockFile(scope: !2710, file: !936, discriminator: 2)
!2727 = !DILocation(line: 1935, column: 5, scope: !2726)
!2728 = distinct !{!2728, !2729}
!2729 = !DILocation(line: 1935, column: 5, scope: !2696)
!2730 = !DILocation(line: 1940, column: 5, scope: !2696)
!2731 = distinct !DISubprogram(name: "xma_flush", scope: !936, file: !936, line: 1968, type: !1649, isLocal: true, isDefinition: true, scopeLine: 1969, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!2732 = !DILocalVariable(name: "avctx", arg: 1, scope: !2731, file: !936, line: 1968, type: !1029)
!2733 = !DILocation(line: 1968, column: 39, scope: !2731)
!2734 = !DILocalVariable(name: "s", scope: !2731, file: !936, line: 1970, type: !2096)
!2735 = !DILocation(line: 1970, column: 19, scope: !2731)
!2736 = !DILocation(line: 1970, column: 23, scope: !2731)
!2737 = !DILocation(line: 1970, column: 30, scope: !2731)
!2738 = !DILocalVariable(name: "i", scope: !2731, file: !936, line: 1971, type: !914)
!2739 = !DILocation(line: 1971, column: 9, scope: !2731)
!2740 = !DILocation(line: 1973, column: 12, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2731, file: !936, line: 1973, column: 5)
!2742 = !DILocation(line: 1973, column: 10, scope: !2741)
!2743 = !DILocation(line: 1973, column: 17, scope: !2744)
!2744 = !DILexicalBlockFile(scope: !2745, file: !936, discriminator: 1)
!2745 = distinct !DILexicalBlock(scope: !2741, file: !936, line: 1973, column: 5)
!2746 = !DILocation(line: 1973, column: 21, scope: !2744)
!2747 = !DILocation(line: 1973, column: 24, scope: !2744)
!2748 = !DILocation(line: 1973, column: 19, scope: !2744)
!2749 = !DILocation(line: 1973, column: 5, scope: !2744)
!2750 = !DILocation(line: 1974, column: 23, scope: !2745)
!2751 = !DILocation(line: 1974, column: 16, scope: !2745)
!2752 = !DILocation(line: 1974, column: 19, scope: !2745)
!2753 = !DILocation(line: 1974, column: 9, scope: !2745)
!2754 = !DILocation(line: 1973, column: 38, scope: !2755)
!2755 = !DILexicalBlockFile(scope: !2745, file: !936, discriminator: 2)
!2756 = !DILocation(line: 1973, column: 5, scope: !2755)
!2757 = distinct !{!2757, !2758}
!2758 = !DILocation(line: 1973, column: 5, scope: !2731)
!2759 = !DILocation(line: 1976, column: 12, scope: !2731)
!2760 = !DILocation(line: 1976, column: 15, scope: !2731)
!2761 = !DILocation(line: 1976, column: 5, scope: !2731)
!2762 = !DILocation(line: 1977, column: 5, scope: !2731)
!2763 = !DILocation(line: 1977, column: 8, scope: !2731)
!2764 = !DILocation(line: 1977, column: 23, scope: !2731)
!2765 = !DILocation(line: 1978, column: 1, scope: !2731)
!2766 = !DILocalVariable(name: "a", arg: 1, scope: !2767, file: !2768, line: 127, type: !914)
!2767 = distinct !DISubprogram(name: "av_clip_c", scope: !2768, file: !2768, line: 127, type: !2769, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!2768 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2769 = !DISubroutineType(types: !2770)
!2770 = !{!914, !914, !914, !914}
!2771 = !DILocation(line: 127, column: 87, scope: !2767, inlinedAt: !2772)
!2772 = distinct !DILocation(line: 561, column: 35, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2774, file: !936, line: 557, column: 52)
!2774 = distinct !DILexicalBlock(scope: !2775, file: !936, line: 557, column: 5)
!2775 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 557, column: 5)
!2776 = !DILocalVariable(name: "amin", arg: 2, scope: !2767, file: !2768, line: 127, type: !914)
!2777 = !DILocation(line: 127, column: 94, scope: !2767, inlinedAt: !2772)
!2778 = !DILocalVariable(name: "amax", arg: 3, scope: !2767, file: !2768, line: 127, type: !914)
!2779 = !DILocation(line: 127, column: 104, scope: !2767, inlinedAt: !2772)
!2780 = !DILocalVariable(name: "s", arg: 1, scope: !1661, file: !936, line: 315, type: !1664)
!2781 = !DILocation(line: 315, column: 63, scope: !1661)
!2782 = !DILocalVariable(name: "avctx", arg: 2, scope: !1661, file: !936, line: 315, type: !1029)
!2783 = !DILocation(line: 315, column: 82, scope: !1661)
!2784 = !DILocalVariable(name: "num_stream", arg: 3, scope: !1661, file: !936, line: 315, type: !914)
!2785 = !DILocation(line: 315, column: 93, scope: !1661)
!2786 = !DILocalVariable(name: "edata_ptr", scope: !1661, file: !936, line: 317, type: !1057)
!2787 = !DILocation(line: 317, column: 14, scope: !1661)
!2788 = !DILocation(line: 317, column: 26, scope: !1661)
!2789 = !DILocation(line: 317, column: 33, scope: !1661)
!2790 = !DILocalVariable(name: "channel_mask", scope: !1661, file: !936, line: 318, type: !913)
!2791 = !DILocation(line: 318, column: 18, scope: !1661)
!2792 = !DILocalVariable(name: "i", scope: !1661, file: !936, line: 319, type: !914)
!2793 = !DILocation(line: 319, column: 9, scope: !1661)
!2794 = !DILocalVariable(name: "bits", scope: !1661, file: !936, line: 319, type: !914)
!2795 = !DILocation(line: 319, column: 12, scope: !1661)
!2796 = !DILocalVariable(name: "log2_max_num_subframes", scope: !1661, file: !936, line: 320, type: !914)
!2797 = !DILocation(line: 320, column: 9, scope: !1661)
!2798 = !DILocalVariable(name: "num_possible_block_sizes", scope: !1661, file: !936, line: 321, type: !914)
!2799 = !DILocation(line: 321, column: 9, scope: !1661)
!2800 = !DILocation(line: 323, column: 9, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 323, column: 9)
!2802 = !DILocation(line: 323, column: 16, scope: !2801)
!2803 = !DILocation(line: 323, column: 25, scope: !2801)
!2804 = !DILocation(line: 323, column: 45, scope: !2801)
!2805 = !DILocation(line: 323, column: 48, scope: !2806)
!2806 = !DILexicalBlockFile(scope: !2801, file: !936, discriminator: 1)
!2807 = !DILocation(line: 323, column: 55, scope: !2806)
!2808 = !DILocation(line: 323, column: 64, scope: !2806)
!2809 = !DILocation(line: 323, column: 9, scope: !2806)
!2810 = !DILocation(line: 324, column: 9, scope: !2801)
!2811 = !DILocation(line: 324, column: 16, scope: !2801)
!2812 = !DILocation(line: 324, column: 28, scope: !2801)
!2813 = !DILocation(line: 326, column: 10, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 326, column: 9)
!2815 = !DILocation(line: 326, column: 17, scope: !2814)
!2816 = !DILocation(line: 326, column: 9, scope: !1661)
!2817 = !DILocation(line: 327, column: 16, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2814, file: !936, line: 326, column: 30)
!2819 = !DILocation(line: 327, column: 9, scope: !2818)
!2820 = !DILocation(line: 328, column: 9, scope: !2818)
!2821 = !DILocation(line: 331, column: 16, scope: !1661)
!2822 = !DILocation(line: 331, column: 5, scope: !1661)
!2823 = !DILocation(line: 331, column: 8, scope: !1661)
!2824 = !DILocation(line: 331, column: 14, scope: !1661)
!2825 = !DILocation(line: 333, column: 20, scope: !1661)
!2826 = !DILocation(line: 333, column: 23, scope: !1661)
!2827 = !DILocation(line: 333, column: 27, scope: !1661)
!2828 = !DILocation(line: 333, column: 30, scope: !1661)
!2829 = !DILocation(line: 333, column: 5, scope: !1661)
!2830 = !DILocation(line: 335, column: 5, scope: !1661)
!2831 = !DILocation(line: 335, column: 12, scope: !1661)
!2832 = !DILocation(line: 335, column: 23, scope: !1661)
!2833 = !DILocation(line: 338, column: 12, scope: !1661)
!2834 = !DILocation(line: 338, column: 5, scope: !1661)
!2835 = !DILocation(line: 339, column: 12, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 339, column: 5)
!2837 = !DILocation(line: 339, column: 10, scope: !2836)
!2838 = !DILocation(line: 339, column: 17, scope: !2839)
!2839 = !DILexicalBlockFile(scope: !2840, file: !936, discriminator: 1)
!2840 = distinct !DILexicalBlock(scope: !2836, file: !936, line: 339, column: 5)
!2841 = !DILocation(line: 339, column: 21, scope: !2839)
!2842 = !DILocation(line: 339, column: 28, scope: !2839)
!2843 = !DILocation(line: 339, column: 19, scope: !2839)
!2844 = !DILocation(line: 339, column: 5, scope: !2839)
!2845 = !DILocation(line: 340, column: 16, scope: !2840)
!2846 = !DILocation(line: 340, column: 53, scope: !2840)
!2847 = !DILocation(line: 340, column: 36, scope: !2840)
!2848 = !DILocation(line: 340, column: 43, scope: !2840)
!2849 = !DILocation(line: 340, column: 9, scope: !2840)
!2850 = !DILocation(line: 339, column: 45, scope: !2851)
!2851 = !DILexicalBlockFile(scope: !2840, file: !936, discriminator: 2)
!2852 = !DILocation(line: 339, column: 5, scope: !2851)
!2853 = distinct !{!2853, !2854}
!2854 = !DILocation(line: 339, column: 5, scope: !1661)
!2855 = !DILocation(line: 341, column: 12, scope: !1661)
!2856 = !DILocation(line: 341, column: 5, scope: !1661)
!2857 = !DILocation(line: 343, column: 9, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 343, column: 9)
!2859 = !DILocation(line: 343, column: 16, scope: !2858)
!2860 = !DILocation(line: 343, column: 25, scope: !2858)
!2861 = !DILocation(line: 343, column: 45, scope: !2858)
!2862 = !DILocation(line: 343, column: 48, scope: !2863)
!2863 = !DILexicalBlockFile(scope: !2858, file: !936, discriminator: 1)
!2864 = !DILocation(line: 343, column: 55, scope: !2863)
!2865 = !DILocation(line: 343, column: 70, scope: !2863)
!2866 = !DILocation(line: 343, column: 9, scope: !2863)
!2867 = !DILocation(line: 344, column: 9, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2858, file: !936, line: 343, column: 77)
!2869 = !DILocation(line: 344, column: 12, scope: !2868)
!2870 = !DILocation(line: 344, column: 25, scope: !2868)
!2871 = !DILocation(line: 345, column: 9, scope: !2868)
!2872 = !DILocation(line: 345, column: 12, scope: !2868)
!2873 = !DILocation(line: 345, column: 28, scope: !2868)
!2874 = !DILocation(line: 346, column: 22, scope: !2868)
!2875 = !DILocation(line: 347, column: 14, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2868, file: !936, line: 347, column: 13)
!2877 = !DILocation(line: 347, column: 24, scope: !2876)
!2878 = !DILocation(line: 347, column: 28, scope: !2876)
!2879 = !DILocation(line: 347, column: 34, scope: !2876)
!2880 = !DILocation(line: 347, column: 41, scope: !2876)
!2881 = !DILocation(line: 347, column: 32, scope: !2876)
!2882 = !DILocation(line: 347, column: 13, scope: !2868)
!2883 = !DILocation(line: 348, column: 13, scope: !2876)
!2884 = !DILocation(line: 348, column: 16, scope: !2876)
!2885 = !DILocation(line: 348, column: 28, scope: !2876)
!2886 = !DILocation(line: 350, column: 13, scope: !2876)
!2887 = !DILocation(line: 350, column: 16, scope: !2876)
!2888 = !DILocation(line: 350, column: 28, scope: !2876)
!2889 = !DILocation(line: 351, column: 5, scope: !2868)
!2890 = !DILocation(line: 351, column: 16, scope: !2891)
!2891 = !DILexicalBlockFile(scope: !2892, file: !936, discriminator: 1)
!2892 = distinct !DILexicalBlock(scope: !2858, file: !936, line: 351, column: 16)
!2893 = !DILocation(line: 351, column: 23, scope: !2891)
!2894 = !DILocation(line: 351, column: 32, scope: !2891)
!2895 = !DILocation(line: 352, column: 9, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2892, file: !936, line: 351, column: 53)
!2897 = !DILocation(line: 352, column: 12, scope: !2896)
!2898 = !DILocation(line: 352, column: 25, scope: !2896)
!2899 = !DILocation(line: 353, column: 9, scope: !2896)
!2900 = !DILocation(line: 353, column: 12, scope: !2896)
!2901 = !DILocation(line: 353, column: 28, scope: !2896)
!2902 = !DILocation(line: 354, column: 22, scope: !2896)
!2903 = !DILocation(line: 355, column: 43, scope: !2896)
!2904 = !DILocation(line: 355, column: 55, scope: !2896)
!2905 = !DILocation(line: 355, column: 42, scope: !2896)
!2906 = !DILocation(line: 355, column: 39, scope: !2896)
!2907 = !DILocation(line: 355, column: 69, scope: !2896)
!2908 = !DILocation(line: 355, column: 68, scope: !2896)
!2909 = !DILocation(line: 355, column: 65, scope: !2896)
!2910 = !DILocation(line: 355, column: 80, scope: !2896)
!2911 = !DILocation(line: 355, column: 26, scope: !2896)
!2912 = !DILocation(line: 355, column: 9, scope: !2896)
!2913 = !DILocation(line: 355, column: 12, scope: !2896)
!2914 = !DILocation(line: 355, column: 24, scope: !2896)
!2915 = !DILocation(line: 356, column: 5, scope: !2896)
!2916 = !DILocation(line: 356, column: 16, scope: !2917)
!2917 = !DILexicalBlockFile(scope: !2918, file: !936, discriminator: 1)
!2918 = distinct !DILexicalBlock(scope: !2892, file: !936, line: 356, column: 16)
!2919 = !DILocation(line: 356, column: 23, scope: !2917)
!2920 = !DILocation(line: 356, column: 32, scope: !2917)
!2921 = !DILocation(line: 357, column: 9, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2918, file: !936, line: 356, column: 53)
!2923 = !DILocation(line: 357, column: 12, scope: !2922)
!2924 = !DILocation(line: 357, column: 25, scope: !2922)
!2925 = !DILocation(line: 358, column: 9, scope: !2922)
!2926 = !DILocation(line: 358, column: 12, scope: !2922)
!2927 = !DILocation(line: 358, column: 28, scope: !2922)
!2928 = !DILocation(line: 359, column: 22, scope: !2922)
!2929 = !DILocation(line: 360, column: 43, scope: !2922)
!2930 = !DILocation(line: 360, column: 42, scope: !2922)
!2931 = !DILocation(line: 360, column: 38, scope: !2922)
!2932 = !DILocation(line: 360, column: 54, scope: !2922)
!2933 = !DILocation(line: 360, column: 26, scope: !2922)
!2934 = !DILocation(line: 360, column: 9, scope: !2922)
!2935 = !DILocation(line: 360, column: 12, scope: !2922)
!2936 = !DILocation(line: 360, column: 24, scope: !2922)
!2937 = !DILocation(line: 361, column: 5, scope: !2922)
!2938 = !DILocation(line: 361, column: 16, scope: !2939)
!2939 = !DILexicalBlockFile(scope: !2940, file: !936, discriminator: 1)
!2940 = distinct !DILexicalBlock(scope: !2918, file: !936, line: 361, column: 16)
!2941 = !DILocation(line: 361, column: 23, scope: !2939)
!2942 = !DILocation(line: 361, column: 32, scope: !2939)
!2943 = !DILocation(line: 361, column: 54, scope: !2939)
!2944 = !DILocation(line: 361, column: 57, scope: !2945)
!2945 = !DILexicalBlockFile(scope: !2940, file: !936, discriminator: 2)
!2946 = !DILocation(line: 361, column: 64, scope: !2945)
!2947 = !DILocation(line: 361, column: 79, scope: !2945)
!2948 = !DILocation(line: 361, column: 16, scope: !2945)
!2949 = !DILocation(line: 362, column: 59, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2940, file: !936, line: 361, column: 86)
!2951 = !DILocation(line: 362, column: 68, scope: !2950)
!2952 = !DILocation(line: 362, column: 75, scope: !2950)
!2953 = !DILocation(line: 362, column: 27, scope: !2950)
!2954 = !DILocation(line: 362, column: 9, scope: !2950)
!2955 = !DILocation(line: 362, column: 12, scope: !2950)
!2956 = !DILocation(line: 362, column: 25, scope: !2950)
!2957 = !DILocation(line: 363, column: 56, scope: !2950)
!2958 = !DILocation(line: 363, column: 65, scope: !2950)
!2959 = !DILocation(line: 363, column: 71, scope: !2950)
!2960 = !DILocation(line: 363, column: 22, scope: !2950)
!2961 = !DILocation(line: 364, column: 62, scope: !2950)
!2962 = !DILocation(line: 364, column: 75, scope: !2950)
!2963 = !DILocation(line: 364, column: 30, scope: !2950)
!2964 = !DILocation(line: 364, column: 9, scope: !2950)
!2965 = !DILocation(line: 364, column: 12, scope: !2950)
!2966 = !DILocation(line: 364, column: 28, scope: !2950)
!2967 = !DILocation(line: 365, column: 26, scope: !2950)
!2968 = !DILocation(line: 365, column: 33, scope: !2950)
!2969 = !DILocation(line: 365, column: 9, scope: !2950)
!2970 = !DILocation(line: 365, column: 12, scope: !2950)
!2971 = !DILocation(line: 365, column: 24, scope: !2950)
!2972 = !DILocation(line: 367, column: 13, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2950, file: !936, line: 367, column: 13)
!2974 = !DILocation(line: 367, column: 16, scope: !2973)
!2975 = !DILocation(line: 367, column: 32, scope: !2973)
!2976 = !DILocation(line: 367, column: 37, scope: !2973)
!2977 = !DILocation(line: 367, column: 40, scope: !2978)
!2978 = !DILexicalBlockFile(scope: !2973, file: !936, discriminator: 1)
!2979 = !DILocation(line: 367, column: 43, scope: !2978)
!2980 = !DILocation(line: 367, column: 59, scope: !2978)
!2981 = !DILocation(line: 367, column: 13, scope: !2978)
!2982 = !DILocation(line: 368, column: 35, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2973, file: !936, line: 367, column: 64)
!2984 = !DILocation(line: 368, column: 67, scope: !2983)
!2985 = !DILocation(line: 368, column: 70, scope: !2983)
!2986 = !DILocation(line: 368, column: 13, scope: !2983)
!2987 = !DILocation(line: 369, column: 13, scope: !2983)
!2988 = !DILocation(line: 371, column: 5, scope: !2950)
!2989 = !DILocation(line: 372, column: 31, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2940, file: !936, line: 371, column: 12)
!2991 = !DILocation(line: 372, column: 9, scope: !2990)
!2992 = !DILocation(line: 373, column: 9, scope: !2990)
!2993 = !DILocation(line: 377, column: 47, scope: !1661)
!2994 = !DILocation(line: 377, column: 54, scope: !1661)
!2995 = !DILocation(line: 377, column: 66, scope: !1661)
!2996 = !DILocation(line: 377, column: 32, scope: !1661)
!2997 = !DILocation(line: 377, column: 30, scope: !1661)
!2998 = !DILocation(line: 377, column: 71, scope: !1661)
!2999 = !DILocation(line: 377, column: 26, scope: !1661)
!3000 = !DILocation(line: 377, column: 5, scope: !1661)
!3001 = !DILocation(line: 377, column: 8, scope: !1661)
!3002 = !DILocation(line: 377, column: 24, scope: !1661)
!3003 = !DILocation(line: 378, column: 9, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 378, column: 9)
!3005 = !DILocation(line: 378, column: 12, scope: !3004)
!3006 = !DILocation(line: 378, column: 28, scope: !3004)
!3007 = !DILocation(line: 378, column: 9, scope: !1661)
!3008 = !DILocation(line: 379, column: 31, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !3004, file: !936, line: 378, column: 34)
!3010 = !DILocation(line: 379, column: 9, scope: !3009)
!3011 = !DILocation(line: 380, column: 9, scope: !3009)
!3012 = !DILocation(line: 384, column: 9, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 384, column: 9)
!3014 = !DILocation(line: 384, column: 16, scope: !3013)
!3015 = !DILocation(line: 384, column: 25, scope: !3013)
!3016 = !DILocation(line: 384, column: 9, scope: !1661)
!3017 = !DILocation(line: 385, column: 9, scope: !3013)
!3018 = !DILocation(line: 385, column: 12, scope: !3013)
!3019 = !DILocation(line: 385, column: 23, scope: !3013)
!3020 = !DILocation(line: 387, column: 9, scope: !3013)
!3021 = !DILocation(line: 387, column: 12, scope: !3013)
!3022 = !DILocation(line: 387, column: 23, scope: !3013)
!3023 = !DILocation(line: 389, column: 5, scope: !1661)
!3024 = !DILocation(line: 389, column: 8, scope: !1661)
!3025 = !DILocation(line: 389, column: 20, scope: !1661)
!3026 = !DILocation(line: 390, column: 22, scope: !1661)
!3027 = !DILocation(line: 390, column: 25, scope: !1661)
!3028 = !DILocation(line: 390, column: 38, scope: !1661)
!3029 = !DILocation(line: 390, column: 21, scope: !1661)
!3030 = !DILocation(line: 390, column: 5, scope: !1661)
!3031 = !DILocation(line: 390, column: 8, scope: !1661)
!3032 = !DILocation(line: 390, column: 19, scope: !1661)
!3033 = !DILocation(line: 393, column: 9, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 393, column: 9)
!3035 = !DILocation(line: 393, column: 16, scope: !3034)
!3036 = !DILocation(line: 393, column: 25, scope: !3034)
!3037 = !DILocation(line: 393, column: 9, scope: !1661)
!3038 = !DILocation(line: 394, column: 42, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !3034, file: !936, line: 393, column: 48)
!3040 = !DILocation(line: 394, column: 49, scope: !3039)
!3041 = !DILocation(line: 394, column: 65, scope: !3039)
!3042 = !DILocation(line: 394, column: 68, scope: !3039)
!3043 = !DILocation(line: 394, column: 16, scope: !3039)
!3044 = !DILocation(line: 394, column: 14, scope: !3039)
!3045 = !DILocation(line: 395, column: 13, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3039, file: !936, line: 395, column: 13)
!3047 = !DILocation(line: 395, column: 18, scope: !3046)
!3048 = !DILocation(line: 395, column: 13, scope: !3039)
!3049 = !DILocation(line: 396, column: 35, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3046, file: !936, line: 395, column: 24)
!3051 = !DILocation(line: 396, column: 13, scope: !3050)
!3052 = !DILocation(line: 397, column: 13, scope: !3050)
!3053 = !DILocation(line: 399, column: 37, scope: !3039)
!3054 = !DILocation(line: 399, column: 34, scope: !3039)
!3055 = !DILocation(line: 399, column: 32, scope: !3039)
!3056 = !DILocation(line: 399, column: 9, scope: !3039)
!3057 = !DILocation(line: 399, column: 12, scope: !3039)
!3058 = !DILocation(line: 399, column: 30, scope: !3039)
!3059 = !DILocation(line: 400, column: 5, scope: !3039)
!3060 = !DILocation(line: 401, column: 9, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3034, file: !936, line: 400, column: 12)
!3062 = !DILocation(line: 401, column: 12, scope: !3061)
!3063 = !DILocation(line: 401, column: 30, scope: !3061)
!3064 = !DILocation(line: 405, column: 32, scope: !1661)
!3065 = !DILocation(line: 405, column: 35, scope: !1661)
!3066 = !DILocation(line: 405, column: 48, scope: !1661)
!3067 = !DILocation(line: 405, column: 56, scope: !1661)
!3068 = !DILocation(line: 405, column: 28, scope: !1661)
!3069 = !DILocation(line: 406, column: 33, scope: !1661)
!3070 = !DILocation(line: 406, column: 30, scope: !1661)
!3071 = !DILocation(line: 406, column: 28, scope: !1661)
!3072 = !DILocation(line: 406, column: 5, scope: !1661)
!3073 = !DILocation(line: 406, column: 8, scope: !1661)
!3074 = !DILocation(line: 406, column: 26, scope: !1661)
!3075 = !DILocation(line: 407, column: 9, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 407, column: 9)
!3077 = !DILocation(line: 407, column: 12, scope: !3076)
!3078 = !DILocation(line: 407, column: 30, scope: !3076)
!3079 = !DILocation(line: 407, column: 36, scope: !3076)
!3080 = !DILocation(line: 407, column: 39, scope: !3081)
!3081 = !DILexicalBlockFile(scope: !3076, file: !936, discriminator: 1)
!3082 = !DILocation(line: 407, column: 42, scope: !3081)
!3083 = !DILocation(line: 407, column: 60, scope: !3081)
!3084 = !DILocation(line: 407, column: 9, scope: !3081)
!3085 = !DILocation(line: 408, column: 9, scope: !3076)
!3086 = !DILocation(line: 408, column: 12, scope: !3076)
!3087 = !DILocation(line: 408, column: 33, scope: !3076)
!3088 = !DILocation(line: 409, column: 49, scope: !1661)
!3089 = !DILocation(line: 409, column: 72, scope: !1661)
!3090 = !DILocation(line: 409, column: 34, scope: !1661)
!3091 = !DILocation(line: 409, column: 32, scope: !1661)
!3092 = !DILocation(line: 409, column: 77, scope: !1661)
!3093 = !DILocation(line: 409, column: 28, scope: !1661)
!3094 = !DILocation(line: 409, column: 5, scope: !1661)
!3095 = !DILocation(line: 409, column: 8, scope: !1661)
!3096 = !DILocation(line: 409, column: 26, scope: !1661)
!3097 = !DILocation(line: 411, column: 32, scope: !1661)
!3098 = !DILocation(line: 411, column: 55, scope: !1661)
!3099 = !DILocation(line: 411, column: 30, scope: !1661)
!3100 = !DILocation(line: 412, column: 35, scope: !1661)
!3101 = !DILocation(line: 412, column: 38, scope: !1661)
!3102 = !DILocation(line: 412, column: 58, scope: !1661)
!3103 = !DILocation(line: 412, column: 61, scope: !1661)
!3104 = !DILocation(line: 412, column: 56, scope: !1661)
!3105 = !DILocation(line: 412, column: 5, scope: !1661)
!3106 = !DILocation(line: 412, column: 8, scope: !1661)
!3107 = !DILocation(line: 412, column: 33, scope: !1661)
!3108 = !DILocation(line: 413, column: 37, scope: !1661)
!3109 = !DILocation(line: 413, column: 40, scope: !1661)
!3110 = !DILocation(line: 413, column: 53, scope: !1661)
!3111 = !DILocation(line: 413, column: 36, scope: !1661)
!3112 = !DILocation(line: 413, column: 5, scope: !1661)
!3113 = !DILocation(line: 413, column: 8, scope: !1661)
!3114 = !DILocation(line: 413, column: 34, scope: !1661)
!3115 = !DILocation(line: 415, column: 9, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 415, column: 9)
!3117 = !DILocation(line: 415, column: 12, scope: !3116)
!3118 = !DILocation(line: 415, column: 30, scope: !3116)
!3119 = !DILocation(line: 415, column: 9, scope: !1661)
!3120 = !DILocation(line: 416, column: 16, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3116, file: !936, line: 415, column: 36)
!3122 = !DILocation(line: 417, column: 16, scope: !3121)
!3123 = !DILocation(line: 417, column: 19, scope: !3121)
!3124 = !DILocation(line: 416, column: 9, scope: !3121)
!3125 = !DILocation(line: 418, column: 9, scope: !3121)
!3126 = !DILocation(line: 421, column: 9, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 421, column: 9)
!3128 = !DILocation(line: 421, column: 12, scope: !3127)
!3129 = !DILocation(line: 421, column: 37, scope: !3127)
!3130 = !DILocation(line: 421, column: 9, scope: !1661)
!3131 = !DILocation(line: 422, column: 16, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3127, file: !936, line: 421, column: 49)
!3133 = !DILocation(line: 423, column: 16, scope: !3132)
!3134 = !DILocation(line: 423, column: 19, scope: !3132)
!3135 = !DILocation(line: 422, column: 9, scope: !3132)
!3136 = !DILocation(line: 424, column: 9, scope: !3132)
!3137 = !DILocation(line: 427, column: 9, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 427, column: 9)
!3139 = !DILocation(line: 427, column: 12, scope: !3138)
!3140 = !DILocation(line: 427, column: 19, scope: !3138)
!3141 = !DILocation(line: 427, column: 31, scope: !3138)
!3142 = !DILocation(line: 427, column: 9, scope: !1661)
!3143 = !DILocation(line: 428, column: 16, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3138, file: !936, line: 427, column: 37)
!3145 = !DILocation(line: 428, column: 9, scope: !3144)
!3146 = !DILocation(line: 429, column: 9, scope: !3144)
!3147 = !DILocation(line: 432, column: 9, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 432, column: 9)
!3149 = !DILocation(line: 432, column: 12, scope: !3148)
!3150 = !DILocation(line: 432, column: 24, scope: !3148)
!3151 = !DILocation(line: 432, column: 9, scope: !1661)
!3152 = !DILocation(line: 433, column: 16, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3148, file: !936, line: 432, column: 30)
!3154 = !DILocation(line: 434, column: 16, scope: !3153)
!3155 = !DILocation(line: 434, column: 19, scope: !3153)
!3156 = !DILocation(line: 433, column: 9, scope: !3153)
!3157 = !DILocation(line: 435, column: 9, scope: !3153)
!3158 = !DILocation(line: 436, column: 16, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3148, file: !936, line: 436, column: 16)
!3160 = !DILocation(line: 436, column: 23, scope: !3159)
!3161 = !DILocation(line: 436, column: 32, scope: !3159)
!3162 = !DILocation(line: 436, column: 54, scope: !3159)
!3163 = !DILocation(line: 436, column: 57, scope: !3164)
!3164 = !DILexicalBlockFile(scope: !3159, file: !936, discriminator: 1)
!3165 = !DILocation(line: 436, column: 60, scope: !3164)
!3166 = !DILocation(line: 436, column: 72, scope: !3164)
!3167 = !DILocation(line: 436, column: 16, scope: !3164)
!3168 = !DILocation(line: 437, column: 16, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3159, file: !936, line: 436, column: 77)
!3170 = !DILocation(line: 438, column: 16, scope: !3169)
!3171 = !DILocation(line: 438, column: 19, scope: !3169)
!3172 = !DILocation(line: 437, column: 9, scope: !3169)
!3173 = !DILocation(line: 439, column: 9, scope: !3169)
!3174 = !DILocation(line: 440, column: 16, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3159, file: !936, line: 440, column: 16)
!3176 = !DILocation(line: 440, column: 19, scope: !3175)
!3177 = !DILocation(line: 440, column: 31, scope: !3175)
!3178 = !DILocation(line: 440, column: 16, scope: !3159)
!3179 = !DILocation(line: 441, column: 31, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3175, file: !936, line: 440, column: 36)
!3181 = !DILocation(line: 441, column: 9, scope: !3180)
!3182 = !DILocation(line: 443, column: 9, scope: !3180)
!3183 = !DILocation(line: 447, column: 12, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 447, column: 5)
!3185 = !DILocation(line: 447, column: 10, scope: !3184)
!3186 = !DILocation(line: 447, column: 17, scope: !3187)
!3187 = !DILexicalBlockFile(scope: !3188, file: !936, discriminator: 1)
!3188 = distinct !DILexicalBlock(scope: !3184, file: !936, line: 447, column: 5)
!3189 = !DILocation(line: 447, column: 21, scope: !3187)
!3190 = !DILocation(line: 447, column: 24, scope: !3187)
!3191 = !DILocation(line: 447, column: 19, scope: !3187)
!3192 = !DILocation(line: 447, column: 5, scope: !3187)
!3193 = !DILocation(line: 448, column: 40, scope: !3188)
!3194 = !DILocation(line: 448, column: 43, scope: !3188)
!3195 = !DILocation(line: 448, column: 20, scope: !3188)
!3196 = !DILocation(line: 448, column: 9, scope: !3188)
!3197 = !DILocation(line: 448, column: 12, scope: !3188)
!3198 = !DILocation(line: 448, column: 23, scope: !3188)
!3199 = !DILocation(line: 448, column: 38, scope: !3188)
!3200 = !DILocation(line: 447, column: 38, scope: !3201)
!3201 = !DILexicalBlockFile(scope: !3188, file: !936, discriminator: 2)
!3202 = !DILocation(line: 447, column: 5, scope: !3201)
!3203 = distinct !{!3203, !3204}
!3204 = !DILocation(line: 447, column: 5, scope: !1661)
!3205 = !DILocation(line: 451, column: 5, scope: !1661)
!3206 = !DILocation(line: 451, column: 8, scope: !1661)
!3207 = !DILocation(line: 451, column: 20, scope: !1661)
!3208 = !DILocation(line: 453, column: 9, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 453, column: 9)
!3210 = !DILocation(line: 453, column: 22, scope: !3209)
!3211 = !DILocation(line: 453, column: 9, scope: !1661)
!3212 = !DILocalVariable(name: "mask", scope: !3213, file: !936, line: 454, type: !913)
!3213 = distinct !DILexicalBlock(scope: !3209, file: !936, line: 453, column: 27)
!3214 = !DILocation(line: 454, column: 22, scope: !3213)
!3215 = !DILocation(line: 455, column: 19, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3213, file: !936, line: 455, column: 9)
!3217 = !DILocation(line: 455, column: 14, scope: !3216)
!3218 = !DILocation(line: 455, column: 24, scope: !3219)
!3219 = !DILexicalBlockFile(scope: !3220, file: !936, discriminator: 1)
!3220 = distinct !DILexicalBlock(scope: !3216, file: !936, line: 455, column: 9)
!3221 = !DILocation(line: 455, column: 29, scope: !3219)
!3222 = !DILocation(line: 455, column: 9, scope: !3219)
!3223 = !DILocation(line: 456, column: 17, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3225, file: !936, line: 456, column: 17)
!3225 = distinct !DILexicalBlock(scope: !3220, file: !936, line: 455, column: 47)
!3226 = !DILocation(line: 456, column: 32, scope: !3224)
!3227 = !DILocation(line: 456, column: 30, scope: !3224)
!3228 = !DILocation(line: 456, column: 17, scope: !3225)
!3229 = !DILocation(line: 457, column: 19, scope: !3224)
!3230 = !DILocation(line: 457, column: 22, scope: !3224)
!3231 = !DILocation(line: 457, column: 17, scope: !3224)
!3232 = !DILocation(line: 458, column: 9, scope: !3225)
!3233 = !DILocation(line: 455, column: 40, scope: !3234)
!3234 = !DILexicalBlockFile(scope: !3220, file: !936, discriminator: 2)
!3235 = !DILocation(line: 455, column: 9, scope: !3234)
!3236 = distinct !{!3236, !3237}
!3237 = !DILocation(line: 455, column: 9, scope: !3213)
!3238 = !DILocation(line: 459, column: 5, scope: !3213)
!3239 = !DILocation(line: 461, column: 5, scope: !1661)
!3240 = distinct !{!3240, !3239}
!3241 = !DILocation(line: 461, column: 57, scope: !3242)
!3242 = !DILexicalBlockFile(scope: !3243, file: !936, discriminator: 1)
!3243 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 461, column: 8)
!3244 = !DILocation(line: 461, column: 93, scope: !3242)
!3245 = !DILocation(line: 461, column: 100, scope: !3242)
!3246 = !DILocation(line: 461, column: 16, scope: !3242)
!3247 = !DILocation(line: 465, column: 5, scope: !1661)
!3248 = distinct !{!3248, !3247}
!3249 = !DILocation(line: 465, column: 61, scope: !3250)
!3250 = !DILexicalBlockFile(scope: !3251, file: !936, discriminator: 1)
!3251 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 465, column: 8)
!3252 = !DILocation(line: 465, column: 100, scope: !3250)
!3253 = !DILocation(line: 465, column: 108, scope: !3250)
!3254 = !DILocation(line: 465, column: 16, scope: !3250)
!3255 = !DILocation(line: 469, column: 5, scope: !1661)
!3256 = distinct !{!3256, !3255}
!3257 = !DILocation(line: 469, column: 63, scope: !3258)
!3258 = !DILexicalBlockFile(scope: !3259, file: !936, discriminator: 1)
!3259 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 469, column: 8)
!3260 = !DILocation(line: 469, column: 104, scope: !3258)
!3261 = !DILocation(line: 469, column: 112, scope: !3258)
!3262 = !DILocation(line: 469, column: 16, scope: !3258)
!3263 = !DILocation(line: 473, column: 5, scope: !1661)
!3264 = distinct !{!3264, !3263}
!3265 = !DILocation(line: 473, column: 63, scope: !3266)
!3266 = !DILexicalBlockFile(scope: !3267, file: !936, discriminator: 1)
!3267 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 473, column: 8)
!3268 = !DILocation(line: 473, column: 104, scope: !3266)
!3269 = !DILocation(line: 473, column: 112, scope: !3266)
!3270 = !DILocation(line: 473, column: 16, scope: !3266)
!3271 = !DILocation(line: 477, column: 5, scope: !1661)
!3272 = distinct !{!3272, !3271}
!3273 = !DILocation(line: 477, column: 59, scope: !3274)
!3274 = !DILexicalBlockFile(scope: !3275, file: !936, discriminator: 1)
!3275 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 477, column: 8)
!3276 = !DILocation(line: 477, column: 97, scope: !3274)
!3277 = !DILocation(line: 477, column: 104, scope: !3274)
!3278 = !DILocation(line: 477, column: 16, scope: !3274)
!3279 = !DILocation(line: 481, column: 5, scope: !1661)
!3280 = distinct !{!3280, !3279}
!3281 = !DILocation(line: 481, column: 59, scope: !3282)
!3282 = !DILexicalBlockFile(scope: !3283, file: !936, discriminator: 1)
!3283 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 481, column: 8)
!3284 = !DILocation(line: 481, column: 97, scope: !3282)
!3285 = !DILocation(line: 481, column: 104, scope: !3282)
!3286 = !DILocation(line: 481, column: 16, scope: !3282)
!3287 = !DILocation(line: 485, column: 5, scope: !1661)
!3288 = distinct !{!3288, !3287}
!3289 = !DILocation(line: 485, column: 59, scope: !3290)
!3290 = !DILexicalBlockFile(scope: !3291, file: !936, discriminator: 1)
!3291 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 485, column: 8)
!3292 = !DILocation(line: 485, column: 97, scope: !3290)
!3293 = !DILocation(line: 485, column: 104, scope: !3290)
!3294 = !DILocation(line: 485, column: 16, scope: !3290)
!3295 = !DILocation(line: 491, column: 12, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 491, column: 5)
!3297 = !DILocation(line: 491, column: 10, scope: !3296)
!3298 = !DILocation(line: 491, column: 17, scope: !3299)
!3299 = !DILexicalBlockFile(scope: !3300, file: !936, discriminator: 1)
!3300 = distinct !DILexicalBlock(scope: !3296, file: !936, line: 491, column: 5)
!3301 = !DILocation(line: 491, column: 21, scope: !3299)
!3302 = !DILocation(line: 491, column: 19, scope: !3299)
!3303 = !DILocation(line: 491, column: 5, scope: !3299)
!3304 = !DILocalVariable(name: "subframe_len", scope: !3305, file: !936, line: 492, type: !914)
!3305 = distinct !DILexicalBlock(scope: !3300, file: !936, line: 491, column: 52)
!3306 = !DILocation(line: 492, column: 13, scope: !3305)
!3307 = !DILocation(line: 492, column: 28, scope: !3305)
!3308 = !DILocation(line: 492, column: 31, scope: !3305)
!3309 = !DILocation(line: 492, column: 52, scope: !3305)
!3310 = !DILocation(line: 492, column: 49, scope: !3305)
!3311 = !DILocalVariable(name: "x", scope: !3305, file: !936, line: 493, type: !914)
!3312 = !DILocation(line: 493, column: 13, scope: !3305)
!3313 = !DILocalVariable(name: "band", scope: !3305, file: !936, line: 494, type: !914)
!3314 = !DILocation(line: 494, column: 13, scope: !3305)
!3315 = !DILocalVariable(name: "rate", scope: !3305, file: !936, line: 495, type: !914)
!3316 = !DILocation(line: 495, column: 13, scope: !3305)
!3317 = !DILocation(line: 495, column: 29, scope: !3305)
!3318 = !DILocation(line: 495, column: 20, scope: !3305)
!3319 = !DILocation(line: 497, column: 24, scope: !3305)
!3320 = !DILocation(line: 497, column: 9, scope: !3305)
!3321 = !DILocation(line: 497, column: 12, scope: !3305)
!3322 = !DILocation(line: 497, column: 30, scope: !3305)
!3323 = !DILocation(line: 499, column: 16, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3305, file: !936, line: 499, column: 9)
!3325 = !DILocation(line: 499, column: 14, scope: !3324)
!3326 = !DILocation(line: 499, column: 21, scope: !3327)
!3327 = !DILexicalBlockFile(scope: !3328, file: !936, discriminator: 1)
!3328 = distinct !DILexicalBlock(scope: !3324, file: !936, line: 499, column: 9)
!3329 = !DILocation(line: 499, column: 23, scope: !3327)
!3330 = !DILocation(line: 499, column: 31, scope: !3327)
!3331 = !DILocation(line: 499, column: 52, scope: !3332)
!3332 = !DILexicalBlockFile(scope: !3328, file: !936, discriminator: 2)
!3333 = !DILocation(line: 499, column: 57, scope: !3332)
!3334 = !DILocation(line: 499, column: 34, scope: !3332)
!3335 = !DILocation(line: 499, column: 49, scope: !3332)
!3336 = !DILocation(line: 499, column: 37, scope: !3332)
!3337 = !DILocation(line: 499, column: 64, scope: !3332)
!3338 = !DILocation(line: 499, column: 62, scope: !3332)
!3339 = !DILocation(line: 499, column: 9, scope: !3340)
!3340 = !DILexicalBlockFile(scope: !3324, file: !936, discriminator: 3)
!3341 = !DILocalVariable(name: "offset", scope: !3342, file: !936, line: 500, type: !914)
!3342 = distinct !DILexicalBlock(scope: !3328, file: !936, line: 499, column: 83)
!3343 = !DILocation(line: 500, column: 17, scope: !3342)
!3344 = !DILocation(line: 500, column: 27, scope: !3342)
!3345 = !DILocation(line: 500, column: 40, scope: !3342)
!3346 = !DILocation(line: 500, column: 60, scope: !3342)
!3347 = !DILocation(line: 500, column: 46, scope: !3342)
!3348 = !DILocation(line: 500, column: 44, scope: !3342)
!3349 = !DILocation(line: 500, column: 66, scope: !3342)
!3350 = !DILocation(line: 500, column: 64, scope: !3342)
!3351 = !DILocation(line: 500, column: 71, scope: !3342)
!3352 = !DILocation(line: 501, column: 20, scope: !3342)
!3353 = !DILocation(line: 502, column: 17, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3342, file: !936, line: 502, column: 17)
!3355 = !DILocation(line: 502, column: 44, scope: !3354)
!3356 = !DILocation(line: 502, column: 49, scope: !3354)
!3357 = !DILocation(line: 502, column: 26, scope: !3354)
!3358 = !DILocation(line: 502, column: 41, scope: !3354)
!3359 = !DILocation(line: 502, column: 29, scope: !3354)
!3360 = !DILocation(line: 502, column: 24, scope: !3354)
!3361 = !DILocation(line: 502, column: 17, scope: !3342)
!3362 = !DILocation(line: 503, column: 45, scope: !3354)
!3363 = !DILocation(line: 503, column: 39, scope: !3354)
!3364 = !DILocation(line: 503, column: 17, scope: !3354)
!3365 = !DILocation(line: 503, column: 32, scope: !3354)
!3366 = !DILocation(line: 503, column: 20, scope: !3354)
!3367 = !DILocation(line: 503, column: 43, scope: !3354)
!3368 = !DILocation(line: 505, column: 17, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3342, file: !936, line: 505, column: 17)
!3370 = !DILocation(line: 505, column: 27, scope: !3369)
!3371 = !DILocation(line: 505, column: 24, scope: !3369)
!3372 = !DILocation(line: 505, column: 17, scope: !3342)
!3373 = !DILocation(line: 506, column: 17, scope: !3369)
!3374 = !DILocation(line: 507, column: 9, scope: !3342)
!3375 = !DILocation(line: 499, column: 79, scope: !3376)
!3376 = !DILexicalBlockFile(scope: !3328, file: !936, discriminator: 4)
!3377 = !DILocation(line: 499, column: 9, scope: !3376)
!3378 = distinct !{!3378, !3379}
!3379 = !DILocation(line: 499, column: 9, scope: !3305)
!3380 = !DILocation(line: 508, column: 39, scope: !3305)
!3381 = !DILocation(line: 508, column: 27, scope: !3305)
!3382 = !DILocation(line: 508, column: 32, scope: !3305)
!3383 = !DILocation(line: 508, column: 9, scope: !3305)
!3384 = !DILocation(line: 508, column: 24, scope: !3305)
!3385 = !DILocation(line: 508, column: 12, scope: !3305)
!3386 = !DILocation(line: 508, column: 37, scope: !3305)
!3387 = !DILocation(line: 509, column: 25, scope: !3305)
!3388 = !DILocation(line: 509, column: 30, scope: !3305)
!3389 = !DILocation(line: 509, column: 20, scope: !3305)
!3390 = !DILocation(line: 509, column: 9, scope: !3305)
!3391 = !DILocation(line: 509, column: 12, scope: !3305)
!3392 = !DILocation(line: 509, column: 23, scope: !3305)
!3393 = !DILocation(line: 510, column: 24, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3305, file: !936, line: 510, column: 13)
!3395 = !DILocation(line: 510, column: 13, scope: !3394)
!3396 = !DILocation(line: 510, column: 16, scope: !3394)
!3397 = !DILocation(line: 510, column: 27, scope: !3394)
!3398 = !DILocation(line: 510, column: 13, scope: !3305)
!3399 = !DILocation(line: 511, column: 20, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3394, file: !936, line: 510, column: 33)
!3401 = !DILocation(line: 511, column: 13, scope: !3400)
!3402 = !DILocation(line: 512, column: 13, scope: !3400)
!3403 = !DILocation(line: 514, column: 5, scope: !3305)
!3404 = !DILocation(line: 491, column: 48, scope: !3405)
!3405 = !DILexicalBlockFile(scope: !3300, file: !936, discriminator: 2)
!3406 = !DILocation(line: 491, column: 5, scope: !3405)
!3407 = distinct !{!3407, !3408}
!3408 = !DILocation(line: 491, column: 5, scope: !1661)
!3409 = !DILocation(line: 522, column: 12, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 522, column: 5)
!3411 = !DILocation(line: 522, column: 10, scope: !3410)
!3412 = !DILocation(line: 522, column: 17, scope: !3413)
!3413 = !DILexicalBlockFile(scope: !3414, file: !936, discriminator: 1)
!3414 = distinct !DILexicalBlock(scope: !3410, file: !936, line: 522, column: 5)
!3415 = !DILocation(line: 522, column: 21, scope: !3413)
!3416 = !DILocation(line: 522, column: 19, scope: !3413)
!3417 = !DILocation(line: 522, column: 5, scope: !3413)
!3418 = !DILocalVariable(name: "b", scope: !3419, file: !936, line: 523, type: !914)
!3419 = distinct !DILexicalBlock(scope: !3414, file: !936, line: 522, column: 52)
!3420 = !DILocation(line: 523, column: 13, scope: !3419)
!3421 = !DILocation(line: 524, column: 16, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3419, file: !936, line: 524, column: 9)
!3423 = !DILocation(line: 524, column: 14, scope: !3422)
!3424 = !DILocation(line: 524, column: 21, scope: !3425)
!3425 = !DILexicalBlockFile(scope: !3426, file: !936, discriminator: 1)
!3426 = distinct !DILexicalBlock(scope: !3422, file: !936, line: 524, column: 9)
!3427 = !DILocation(line: 524, column: 36, scope: !3425)
!3428 = !DILocation(line: 524, column: 25, scope: !3425)
!3429 = !DILocation(line: 524, column: 28, scope: !3425)
!3430 = !DILocation(line: 524, column: 23, scope: !3425)
!3431 = !DILocation(line: 524, column: 9, scope: !3425)
!3432 = !DILocalVariable(name: "x", scope: !3433, file: !936, line: 525, type: !914)
!3433 = distinct !DILexicalBlock(scope: !3426, file: !936, line: 524, column: 45)
!3434 = !DILocation(line: 525, column: 17, scope: !3433)
!3435 = !DILocalVariable(name: "offset", scope: !3433, file: !936, line: 526, type: !914)
!3436 = !DILocation(line: 526, column: 17, scope: !3433)
!3437 = !DILocation(line: 526, column: 46, scope: !3433)
!3438 = !DILocation(line: 526, column: 28, scope: !3433)
!3439 = !DILocation(line: 526, column: 43, scope: !3433)
!3440 = !DILocation(line: 526, column: 31, scope: !3433)
!3441 = !DILocation(line: 527, column: 48, scope: !3433)
!3442 = !DILocation(line: 527, column: 50, scope: !3433)
!3443 = !DILocation(line: 527, column: 30, scope: !3433)
!3444 = !DILocation(line: 527, column: 45, scope: !3433)
!3445 = !DILocation(line: 527, column: 33, scope: !3433)
!3446 = !DILocation(line: 527, column: 28, scope: !3433)
!3447 = !DILocation(line: 527, column: 55, scope: !3433)
!3448 = !DILocation(line: 527, column: 63, scope: !3433)
!3449 = !DILocation(line: 527, column: 60, scope: !3433)
!3450 = !DILocation(line: 527, column: 66, scope: !3433)
!3451 = !DILocation(line: 528, column: 20, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3433, file: !936, line: 528, column: 13)
!3453 = !DILocation(line: 528, column: 18, scope: !3452)
!3454 = !DILocation(line: 528, column: 25, scope: !3455)
!3455 = !DILexicalBlockFile(scope: !3456, file: !936, discriminator: 1)
!3456 = distinct !DILexicalBlock(scope: !3452, file: !936, line: 528, column: 13)
!3457 = !DILocation(line: 528, column: 29, scope: !3455)
!3458 = !DILocation(line: 528, column: 27, scope: !3455)
!3459 = !DILocation(line: 528, column: 13, scope: !3455)
!3460 = !DILocalVariable(name: "v", scope: !3461, file: !936, line: 529, type: !914)
!3461 = distinct !DILexicalBlock(scope: !3456, file: !936, line: 528, column: 60)
!3462 = !DILocation(line: 529, column: 21, scope: !3461)
!3463 = !DILocation(line: 530, column: 17, scope: !3461)
!3464 = !DILocation(line: 530, column: 42, scope: !3465)
!3465 = !DILexicalBlockFile(scope: !3461, file: !936, discriminator: 1)
!3466 = !DILocation(line: 530, column: 44, scope: !3465)
!3467 = !DILocation(line: 530, column: 24, scope: !3465)
!3468 = !DILocation(line: 530, column: 39, scope: !3465)
!3469 = !DILocation(line: 530, column: 27, scope: !3465)
!3470 = !DILocation(line: 530, column: 52, scope: !3465)
!3471 = !DILocation(line: 530, column: 49, scope: !3465)
!3472 = !DILocation(line: 530, column: 56, scope: !3465)
!3473 = !DILocation(line: 530, column: 54, scope: !3465)
!3474 = !DILocation(line: 530, column: 17, scope: !3465)
!3475 = !DILocation(line: 531, column: 22, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3461, file: !936, line: 530, column: 64)
!3477 = !DILocation(line: 532, column: 21, scope: !3476)
!3478 = distinct !{!3478, !3477}
!3479 = !DILocation(line: 532, column: 32, scope: !3480)
!3480 = !DILexicalBlockFile(scope: !3481, file: !936, discriminator: 1)
!3481 = distinct !DILexicalBlock(scope: !3482, file: !936, line: 532, column: 30)
!3482 = distinct !DILexicalBlock(scope: !3476, file: !936, line: 532, column: 24)
!3483 = !DILocation(line: 532, column: 34, scope: !3480)
!3484 = !DILocation(line: 532, column: 30, scope: !3480)
!3485 = !DILocation(line: 532, column: 43, scope: !3486)
!3486 = !DILexicalBlockFile(scope: !3487, file: !936, discriminator: 2)
!3487 = distinct !DILexicalBlock(scope: !3481, file: !936, line: 532, column: 41)
!3488 = !DILocation(line: 532, column: 101, scope: !3489)
!3489 = !DILexicalBlockFile(scope: !3486, file: !936, discriminator: 4)
!3490 = !DILocation(line: 532, column: 101, scope: !3486)
!3491 = !DILocation(line: 532, column: 112, scope: !3492)
!3492 = !DILexicalBlockFile(scope: !3482, file: !936, discriminator: 3)
!3493 = !DILocation(line: 530, column: 17, scope: !3494)
!3494 = !DILexicalBlockFile(scope: !3461, file: !936, discriminator: 2)
!3495 = distinct !{!3495, !3463}
!3496 = !DILocation(line: 534, column: 42, scope: !3461)
!3497 = !DILocation(line: 534, column: 37, scope: !3461)
!3498 = !DILocation(line: 534, column: 17, scope: !3461)
!3499 = !DILocation(line: 534, column: 34, scope: !3461)
!3500 = !DILocation(line: 534, column: 31, scope: !3461)
!3501 = !DILocation(line: 534, column: 20, scope: !3461)
!3502 = !DILocation(line: 534, column: 40, scope: !3461)
!3503 = !DILocation(line: 535, column: 13, scope: !3461)
!3504 = !DILocation(line: 528, column: 56, scope: !3505)
!3505 = !DILexicalBlockFile(scope: !3456, file: !936, discriminator: 2)
!3506 = !DILocation(line: 528, column: 13, scope: !3505)
!3507 = distinct !{!3507, !3508}
!3508 = !DILocation(line: 528, column: 13, scope: !3433)
!3509 = !DILocation(line: 536, column: 9, scope: !3433)
!3510 = !DILocation(line: 524, column: 41, scope: !3511)
!3511 = !DILexicalBlockFile(scope: !3426, file: !936, discriminator: 2)
!3512 = !DILocation(line: 524, column: 9, scope: !3511)
!3513 = distinct !{!3513, !3514}
!3514 = !DILocation(line: 524, column: 9, scope: !3419)
!3515 = !DILocation(line: 537, column: 5, scope: !3419)
!3516 = !DILocation(line: 522, column: 48, scope: !3517)
!3517 = !DILexicalBlockFile(scope: !3414, file: !936, discriminator: 2)
!3518 = !DILocation(line: 522, column: 5, scope: !3517)
!3519 = distinct !{!3519, !3520}
!3520 = !DILocation(line: 522, column: 5, scope: !1661)
!3521 = !DILocation(line: 539, column: 38, scope: !1661)
!3522 = !DILocation(line: 539, column: 45, scope: !1661)
!3523 = !DILocation(line: 539, column: 51, scope: !1661)
!3524 = !DILocation(line: 539, column: 15, scope: !1661)
!3525 = !DILocation(line: 539, column: 5, scope: !1661)
!3526 = !DILocation(line: 539, column: 8, scope: !1661)
!3527 = !DILocation(line: 539, column: 13, scope: !1661)
!3528 = !DILocation(line: 540, column: 10, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 540, column: 9)
!3530 = !DILocation(line: 540, column: 13, scope: !3529)
!3531 = !DILocation(line: 540, column: 9, scope: !1661)
!3532 = !DILocation(line: 541, column: 9, scope: !3529)
!3533 = !DILocation(line: 544, column: 12, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 544, column: 5)
!3535 = !DILocation(line: 544, column: 10, scope: !3534)
!3536 = !DILocation(line: 544, column: 17, scope: !3537)
!3537 = !DILexicalBlockFile(scope: !3538, file: !936, discriminator: 1)
!3538 = distinct !DILexicalBlock(scope: !3534, file: !936, line: 544, column: 5)
!3539 = !DILocation(line: 544, column: 19, scope: !3537)
!3540 = !DILocation(line: 544, column: 5, scope: !3537)
!3541 = !DILocation(line: 545, column: 35, scope: !3538)
!3542 = !DILocation(line: 545, column: 23, scope: !3538)
!3543 = !DILocation(line: 545, column: 26, scope: !3538)
!3544 = !DILocation(line: 545, column: 44, scope: !3538)
!3545 = !DILocation(line: 545, column: 43, scope: !3538)
!3546 = !DILocation(line: 546, column: 39, scope: !3538)
!3547 = !DILocation(line: 546, column: 37, scope: !3538)
!3548 = !DILocation(line: 546, column: 41, scope: !3538)
!3549 = !DILocation(line: 546, column: 31, scope: !3538)
!3550 = !DILocation(line: 546, column: 28, scope: !3538)
!3551 = !DILocation(line: 546, column: 26, scope: !3538)
!3552 = !DILocation(line: 547, column: 31, scope: !3538)
!3553 = !DILocation(line: 547, column: 34, scope: !3538)
!3554 = !DILocation(line: 547, column: 50, scope: !3538)
!3555 = !DILocation(line: 547, column: 27, scope: !3538)
!3556 = !DILocation(line: 547, column: 24, scope: !3538)
!3557 = !DILocation(line: 547, column: 22, scope: !3538)
!3558 = !DILocation(line: 545, column: 9, scope: !3538)
!3559 = !DILocation(line: 544, column: 36, scope: !3560)
!3560 = !DILexicalBlockFile(scope: !3538, file: !936, discriminator: 2)
!3561 = !DILocation(line: 544, column: 5, scope: !3560)
!3562 = distinct !{!3562, !3563}
!3563 = !DILocation(line: 544, column: 5, scope: !1661)
!3564 = !DILocation(line: 550, column: 12, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 550, column: 5)
!3566 = !DILocation(line: 550, column: 10, scope: !3565)
!3567 = !DILocation(line: 550, column: 17, scope: !3568)
!3568 = !DILexicalBlockFile(scope: !3569, file: !936, discriminator: 1)
!3569 = distinct !DILexicalBlock(scope: !3565, file: !936, line: 550, column: 5)
!3570 = !DILocation(line: 550, column: 19, scope: !3568)
!3571 = !DILocation(line: 550, column: 5, scope: !3568)
!3572 = !DILocalVariable(name: "win_idx", scope: !3573, file: !936, line: 551, type: !962)
!3573 = distinct !DILexicalBlock(scope: !3569, file: !936, line: 550, column: 40)
!3574 = !DILocation(line: 551, column: 19, scope: !3573)
!3575 = !DILocation(line: 551, column: 34, scope: !3573)
!3576 = !DILocation(line: 551, column: 32, scope: !3573)
!3577 = !DILocation(line: 552, column: 33, scope: !3573)
!3578 = !DILocation(line: 552, column: 9, scope: !3573)
!3579 = !DILocation(line: 553, column: 60, scope: !3573)
!3580 = !DILocation(line: 553, column: 44, scope: !3573)
!3581 = !DILocation(line: 553, column: 35, scope: !3573)
!3582 = !DILocation(line: 553, column: 33, scope: !3573)
!3583 = !DILocation(line: 553, column: 37, scope: !3573)
!3584 = !DILocation(line: 553, column: 9, scope: !3573)
!3585 = !DILocation(line: 553, column: 12, scope: !3573)
!3586 = !DILocation(line: 553, column: 42, scope: !3573)
!3587 = !DILocation(line: 554, column: 5, scope: !3573)
!3588 = !DILocation(line: 550, column: 36, scope: !3589)
!3589 = !DILexicalBlockFile(scope: !3569, file: !936, discriminator: 2)
!3590 = !DILocation(line: 550, column: 5, scope: !3589)
!3591 = distinct !{!3591, !3592}
!3592 = !DILocation(line: 550, column: 5, scope: !1661)
!3593 = !DILocation(line: 557, column: 12, scope: !2775)
!3594 = !DILocation(line: 557, column: 10, scope: !2775)
!3595 = !DILocation(line: 557, column: 17, scope: !3596)
!3596 = !DILexicalBlockFile(scope: !2774, file: !936, discriminator: 1)
!3597 = !DILocation(line: 557, column: 21, scope: !3596)
!3598 = !DILocation(line: 557, column: 19, scope: !3596)
!3599 = !DILocation(line: 557, column: 5, scope: !3596)
!3600 = !DILocalVariable(name: "block_size", scope: !2773, file: !936, line: 558, type: !914)
!3601 = !DILocation(line: 558, column: 13, scope: !2773)
!3602 = !DILocation(line: 558, column: 26, scope: !2773)
!3603 = !DILocation(line: 558, column: 29, scope: !2773)
!3604 = !DILocation(line: 558, column: 50, scope: !2773)
!3605 = !DILocation(line: 558, column: 47, scope: !2773)
!3606 = !DILocalVariable(name: "cutoff", scope: !2773, file: !936, line: 559, type: !914)
!3607 = !DILocation(line: 559, column: 13, scope: !2773)
!3608 = !DILocation(line: 559, column: 27, scope: !2773)
!3609 = !DILocation(line: 559, column: 26, scope: !2773)
!3610 = !DILocation(line: 559, column: 23, scope: !2773)
!3611 = !DILocation(line: 559, column: 47, scope: !2773)
!3612 = !DILocation(line: 559, column: 50, scope: !2773)
!3613 = !DILocation(line: 559, column: 57, scope: !2773)
!3614 = !DILocation(line: 559, column: 69, scope: !2773)
!3615 = !DILocation(line: 559, column: 46, scope: !2773)
!3616 = !DILocation(line: 559, column: 44, scope: !2773)
!3617 = !DILocation(line: 559, column: 38, scope: !2773)
!3618 = !DILocation(line: 559, column: 75, scope: !2773)
!3619 = !DILocation(line: 560, column: 24, scope: !2773)
!3620 = !DILocation(line: 560, column: 27, scope: !2773)
!3621 = !DILocation(line: 560, column: 34, scope: !2773)
!3622 = !DILocation(line: 560, column: 22, scope: !2773)
!3623 = !DILocation(line: 559, column: 22, scope: !2773)
!3624 = !DILocation(line: 561, column: 45, scope: !2773)
!3625 = !DILocation(line: 561, column: 56, scope: !2773)
!3626 = !DILocation(line: 561, column: 35, scope: !2773)
!3627 = !DILocation(line: 132, column: 9, scope: !3628, inlinedAt: !2772)
!3628 = distinct !DILexicalBlock(scope: !2767, file: !2768, line: 132, column: 9)
!3629 = !DILocation(line: 132, column: 13, scope: !3628, inlinedAt: !2772)
!3630 = !DILocation(line: 132, column: 11, scope: !3628, inlinedAt: !2772)
!3631 = !DILocation(line: 132, column: 9, scope: !2767, inlinedAt: !2772)
!3632 = !DILocation(line: 132, column: 26, scope: !3633, inlinedAt: !2772)
!3633 = !DILexicalBlockFile(scope: !3628, file: !2768, discriminator: 1)
!3634 = !DILocation(line: 132, column: 19, scope: !3633, inlinedAt: !2772)
!3635 = !DILocation(line: 133, column: 14, scope: !3636, inlinedAt: !2772)
!3636 = distinct !DILexicalBlock(scope: !3628, file: !2768, line: 133, column: 14)
!3637 = !DILocation(line: 133, column: 18, scope: !3636, inlinedAt: !2772)
!3638 = !DILocation(line: 133, column: 16, scope: !3636, inlinedAt: !2772)
!3639 = !DILocation(line: 133, column: 14, scope: !3628, inlinedAt: !2772)
!3640 = !DILocation(line: 133, column: 31, scope: !3641, inlinedAt: !2772)
!3641 = !DILexicalBlockFile(scope: !3636, file: !2768, discriminator: 1)
!3642 = !DILocation(line: 133, column: 24, scope: !3641, inlinedAt: !2772)
!3643 = !DILocation(line: 134, column: 17, scope: !3636, inlinedAt: !2772)
!3644 = !DILocation(line: 134, column: 10, scope: !3636, inlinedAt: !2772)
!3645 = !DILocation(line: 135, column: 1, scope: !2767, inlinedAt: !2772)
!3646 = !DILocation(line: 561, column: 30, scope: !2773)
!3647 = !DILocation(line: 561, column: 9, scope: !2773)
!3648 = !DILocation(line: 561, column: 12, scope: !2773)
!3649 = !DILocation(line: 561, column: 33, scope: !2773)
!3650 = !DILocation(line: 562, column: 5, scope: !2773)
!3651 = !DILocation(line: 557, column: 48, scope: !3652)
!3652 = !DILexicalBlockFile(scope: !2774, file: !936, discriminator: 2)
!3653 = !DILocation(line: 557, column: 5, scope: !3652)
!3654 = distinct !{!3654, !3655}
!3655 = !DILocation(line: 557, column: 5, scope: !1661)
!3656 = !DILocation(line: 565, column: 12, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 565, column: 5)
!3658 = !DILocation(line: 565, column: 10, scope: !3657)
!3659 = !DILocation(line: 565, column: 17, scope: !3660)
!3660 = !DILexicalBlockFile(scope: !3661, file: !936, discriminator: 1)
!3661 = distinct !DILexicalBlock(scope: !3657, file: !936, line: 565, column: 5)
!3662 = !DILocation(line: 565, column: 19, scope: !3660)
!3663 = !DILocation(line: 565, column: 5, scope: !3660)
!3664 = !DILocation(line: 566, column: 24, scope: !3661)
!3665 = !DILocation(line: 566, column: 25, scope: !3661)
!3666 = !DILocation(line: 566, column: 30, scope: !3661)
!3667 = !DILocation(line: 566, column: 20, scope: !3661)
!3668 = !DILocation(line: 566, column: 15, scope: !3661)
!3669 = !DILocation(line: 566, column: 9, scope: !3661)
!3670 = !DILocation(line: 566, column: 18, scope: !3661)
!3671 = !DILocation(line: 565, column: 26, scope: !3672)
!3672 = !DILexicalBlockFile(scope: !3661, file: !936, discriminator: 2)
!3673 = !DILocation(line: 565, column: 5, scope: !3672)
!3674 = distinct !{!3674, !3675}
!3675 = !DILocation(line: 565, column: 5, scope: !1661)
!3676 = !DILocation(line: 568, column: 9, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !1661, file: !936, line: 568, column: 9)
!3678 = !DILocation(line: 568, column: 16, scope: !3677)
!3679 = !DILocation(line: 568, column: 22, scope: !3677)
!3680 = !DILocation(line: 568, column: 9, scope: !1661)
!3681 = !DILocation(line: 569, column: 22, scope: !3677)
!3682 = !DILocation(line: 569, column: 9, scope: !3677)
!3683 = !DILocation(line: 571, column: 29, scope: !1661)
!3684 = !DILocation(line: 571, column: 5, scope: !1661)
!3685 = !DILocation(line: 571, column: 12, scope: !1661)
!3686 = !DILocation(line: 571, column: 27, scope: !1661)
!3687 = !DILocation(line: 573, column: 5, scope: !1661)
!3688 = !DILocation(line: 574, column: 1, scope: !1661)
!3689 = distinct !DISubprogram(name: "init_put_bits", scope: !1721, file: !1721, line: 48, type: !3690, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!3690 = !DISubroutineType(types: !3691)
!3691 = !{null, !3692, !1057, !914}
!3692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64, align: 64)
!3693 = !DILocalVariable(name: "s", arg: 1, scope: !3689, file: !1721, line: 48, type: !3692)
!3694 = !DILocation(line: 48, column: 49, scope: !3689)
!3695 = !DILocalVariable(name: "buffer", arg: 2, scope: !3689, file: !1721, line: 48, type: !1057)
!3696 = !DILocation(line: 48, column: 61, scope: !3689)
!3697 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !3689, file: !1721, line: 49, type: !914)
!3698 = !DILocation(line: 49, column: 38, scope: !3689)
!3699 = !DILocation(line: 51, column: 9, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3689, file: !1721, line: 51, column: 9)
!3701 = !DILocation(line: 51, column: 21, scope: !3700)
!3702 = !DILocation(line: 51, column: 9, scope: !3689)
!3703 = !DILocation(line: 52, column: 21, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3700, file: !1721, line: 51, column: 26)
!3705 = !DILocation(line: 53, column: 16, scope: !3704)
!3706 = !DILocation(line: 54, column: 5, scope: !3704)
!3707 = !DILocation(line: 56, column: 27, scope: !3689)
!3708 = !DILocation(line: 56, column: 25, scope: !3689)
!3709 = !DILocation(line: 56, column: 5, scope: !3689)
!3710 = !DILocation(line: 56, column: 8, scope: !3689)
!3711 = !DILocation(line: 56, column: 21, scope: !3689)
!3712 = !DILocation(line: 57, column: 14, scope: !3689)
!3713 = !DILocation(line: 57, column: 5, scope: !3689)
!3714 = !DILocation(line: 57, column: 8, scope: !3689)
!3715 = !DILocation(line: 57, column: 12, scope: !3689)
!3716 = !DILocation(line: 58, column: 18, scope: !3689)
!3717 = !DILocation(line: 58, column: 21, scope: !3689)
!3718 = !DILocation(line: 58, column: 27, scope: !3689)
!3719 = !DILocation(line: 58, column: 25, scope: !3689)
!3720 = !DILocation(line: 58, column: 5, scope: !3689)
!3721 = !DILocation(line: 58, column: 8, scope: !3689)
!3722 = !DILocation(line: 58, column: 16, scope: !3689)
!3723 = !DILocation(line: 59, column: 18, scope: !3689)
!3724 = !DILocation(line: 59, column: 21, scope: !3689)
!3725 = !DILocation(line: 59, column: 5, scope: !3689)
!3726 = !DILocation(line: 59, column: 8, scope: !3689)
!3727 = !DILocation(line: 59, column: 16, scope: !3689)
!3728 = !DILocation(line: 60, column: 5, scope: !3689)
!3729 = !DILocation(line: 60, column: 8, scope: !3689)
!3730 = !DILocation(line: 60, column: 17, scope: !3689)
!3731 = !DILocation(line: 61, column: 5, scope: !3689)
!3732 = !DILocation(line: 61, column: 8, scope: !3689)
!3733 = !DILocation(line: 61, column: 16, scope: !3689)
!3734 = !DILocation(line: 62, column: 1, scope: !3689)
!3735 = distinct !DISubprogram(name: "get_rate", scope: !936, file: !936, line: 295, type: !1027, isLocal: true, isDefinition: true, scopeLine: 296, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!3736 = !DILocalVariable(name: "avctx", arg: 1, scope: !3735, file: !936, line: 295, type: !1029)
!3737 = !DILocation(line: 295, column: 59, scope: !3735)
!3738 = !DILocation(line: 297, column: 9, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3735, file: !936, line: 297, column: 9)
!3740 = !DILocation(line: 297, column: 16, scope: !3739)
!3741 = !DILocation(line: 297, column: 25, scope: !3739)
!3742 = !DILocation(line: 297, column: 9, scope: !3735)
!3743 = !DILocation(line: 298, column: 13, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3745, file: !936, line: 298, column: 13)
!3745 = distinct !DILexicalBlock(scope: !3739, file: !936, line: 297, column: 48)
!3746 = !DILocation(line: 298, column: 20, scope: !3744)
!3747 = !DILocation(line: 298, column: 32, scope: !3744)
!3748 = !DILocation(line: 298, column: 13, scope: !3745)
!3749 = !DILocation(line: 299, column: 13, scope: !3744)
!3750 = !DILocation(line: 300, column: 18, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3744, file: !936, line: 300, column: 18)
!3752 = !DILocation(line: 300, column: 25, scope: !3751)
!3753 = !DILocation(line: 300, column: 37, scope: !3751)
!3754 = !DILocation(line: 300, column: 18, scope: !3744)
!3755 = !DILocation(line: 301, column: 13, scope: !3751)
!3756 = !DILocation(line: 302, column: 18, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3751, file: !936, line: 302, column: 18)
!3758 = !DILocation(line: 302, column: 25, scope: !3757)
!3759 = !DILocation(line: 302, column: 37, scope: !3757)
!3760 = !DILocation(line: 302, column: 18, scope: !3751)
!3761 = !DILocation(line: 303, column: 13, scope: !3757)
!3762 = !DILocation(line: 304, column: 9, scope: !3745)
!3763 = !DILocation(line: 307, column: 12, scope: !3735)
!3764 = !DILocation(line: 307, column: 19, scope: !3735)
!3765 = !DILocation(line: 307, column: 5, scope: !3735)
!3766 = !DILocation(line: 308, column: 1, scope: !3735)
!3767 = distinct !DISubprogram(name: "dump_context", scope: !936, file: !936, line: 255, type: !3768, isLocal: true, isDefinition: true, scopeLine: 256, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!3768 = !DISubroutineType(types: !3769)
!3769 = !{null, !1664}
!3770 = !DILocalVariable(name: "s", arg: 1, scope: !3767, file: !936, line: 255, type: !1664)
!3771 = !DILocation(line: 255, column: 65, scope: !3767)
!3772 = !DILocation(line: 260, column: 12, scope: !3767)
!3773 = !DILocation(line: 260, column: 15, scope: !3767)
!3774 = !DILocation(line: 260, column: 63, scope: !3767)
!3775 = !DILocation(line: 260, column: 66, scope: !3767)
!3776 = !DILocation(line: 260, column: 5, scope: !3767)
!3777 = !DILocation(line: 261, column: 12, scope: !3767)
!3778 = !DILocation(line: 261, column: 15, scope: !3767)
!3779 = !DILocation(line: 261, column: 29, scope: !3767)
!3780 = !DILocation(line: 261, column: 32, scope: !3767)
!3781 = !DILocation(line: 261, column: 5, scope: !3767)
!3782 = !DILocation(line: 262, column: 12, scope: !3767)
!3783 = !DILocation(line: 262, column: 15, scope: !3767)
!3784 = !DILocation(line: 262, column: 61, scope: !3767)
!3785 = !DILocation(line: 262, column: 64, scope: !3767)
!3786 = !DILocation(line: 262, column: 5, scope: !3767)
!3787 = !DILocation(line: 263, column: 12, scope: !3767)
!3788 = !DILocation(line: 263, column: 15, scope: !3767)
!3789 = !DILocation(line: 263, column: 59, scope: !3767)
!3790 = !DILocation(line: 263, column: 62, scope: !3767)
!3791 = !DILocation(line: 263, column: 5, scope: !3767)
!3792 = !DILocation(line: 264, column: 12, scope: !3767)
!3793 = !DILocation(line: 264, column: 15, scope: !3767)
!3794 = !DILocation(line: 264, column: 61, scope: !3767)
!3795 = !DILocation(line: 264, column: 64, scope: !3767)
!3796 = !DILocation(line: 264, column: 5, scope: !3767)
!3797 = !DILocation(line: 265, column: 12, scope: !3767)
!3798 = !DILocation(line: 265, column: 15, scope: !3767)
!3799 = !DILocation(line: 265, column: 54, scope: !3767)
!3800 = !DILocation(line: 265, column: 57, scope: !3767)
!3801 = !DILocation(line: 265, column: 5, scope: !3767)
!3802 = !DILocation(line: 266, column: 12, scope: !3767)
!3803 = !DILocation(line: 266, column: 15, scope: !3767)
!3804 = !DILocation(line: 266, column: 56, scope: !3767)
!3805 = !DILocation(line: 266, column: 59, scope: !3767)
!3806 = !DILocation(line: 266, column: 5, scope: !3767)
!3807 = !DILocation(line: 267, column: 1, scope: !3767)
!3808 = distinct !DISubprogram(name: "decode_packet", scope: !936, file: !936, line: 1602, type: !3809, isLocal: true, isDefinition: true, scopeLine: 1604, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{!914, !1029, !1664, !915, !1321, !1175}
!3811 = !DILocalVariable(name: "avctx", arg: 1, scope: !3808, file: !936, line: 1602, type: !1029)
!3812 = !DILocation(line: 1602, column: 42, scope: !3808)
!3813 = !DILocalVariable(name: "s", arg: 2, scope: !3808, file: !936, line: 1602, type: !1664)
!3814 = !DILocation(line: 1602, column: 66, scope: !3808)
!3815 = !DILocalVariable(name: "data", arg: 3, scope: !3808, file: !936, line: 1603, type: !915)
!3816 = !DILocation(line: 1603, column: 32, scope: !3808)
!3817 = !DILocalVariable(name: "got_frame_ptr", arg: 4, scope: !3808, file: !936, line: 1603, type: !1321)
!3818 = !DILocation(line: 1603, column: 43, scope: !3808)
!3819 = !DILocalVariable(name: "avpkt", arg: 5, scope: !3808, file: !936, line: 1603, type: !1175)
!3820 = !DILocation(line: 1603, column: 68, scope: !3808)
!3821 = !DILocalVariable(name: "gb", scope: !3808, file: !936, line: 1605, type: !3822)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64, align: 64)
!3823 = !DILocation(line: 1605, column: 20, scope: !3808)
!3824 = !DILocation(line: 1605, column: 26, scope: !3808)
!3825 = !DILocation(line: 1605, column: 29, scope: !3808)
!3826 = !DILocalVariable(name: "buf", scope: !3808, file: !936, line: 1606, type: !1469)
!3827 = !DILocation(line: 1606, column: 20, scope: !3808)
!3828 = !DILocation(line: 1606, column: 26, scope: !3808)
!3829 = !DILocation(line: 1606, column: 33, scope: !3808)
!3830 = !DILocalVariable(name: "buf_size", scope: !3808, file: !936, line: 1607, type: !914)
!3831 = !DILocation(line: 1607, column: 9, scope: !3808)
!3832 = !DILocation(line: 1607, column: 20, scope: !3808)
!3833 = !DILocation(line: 1607, column: 27, scope: !3808)
!3834 = !DILocalVariable(name: "num_bits_prev_frame", scope: !3808, file: !936, line: 1608, type: !914)
!3835 = !DILocation(line: 1608, column: 9, scope: !3808)
!3836 = !DILocalVariable(name: "packet_sequence_number", scope: !3808, file: !936, line: 1609, type: !914)
!3837 = !DILocation(line: 1609, column: 9, scope: !3808)
!3838 = !DILocation(line: 1611, column: 6, scope: !3808)
!3839 = !DILocation(line: 1611, column: 20, scope: !3808)
!3840 = !DILocation(line: 1613, column: 10, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3808, file: !936, line: 1613, column: 9)
!3842 = !DILocation(line: 1613, column: 9, scope: !3808)
!3843 = !DILocalVariable(name: "frame", scope: !3844, file: !936, line: 1614, type: !1051)
!3844 = distinct !DILexicalBlock(scope: !3841, file: !936, line: 1613, column: 20)
!3845 = !DILocation(line: 1614, column: 18, scope: !3844)
!3846 = !DILocation(line: 1614, column: 26, scope: !3844)
!3847 = !DILocalVariable(name: "i", scope: !3844, file: !936, line: 1615, type: !914)
!3848 = !DILocation(line: 1615, column: 13, scope: !3844)
!3849 = !DILocation(line: 1619, column: 9, scope: !3844)
!3850 = !DILocation(line: 1619, column: 12, scope: !3844)
!3851 = !DILocation(line: 1619, column: 24, scope: !3844)
!3852 = !DILocation(line: 1620, column: 13, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3844, file: !936, line: 1620, column: 13)
!3854 = !DILocation(line: 1620, column: 16, scope: !3853)
!3855 = !DILocation(line: 1620, column: 13, scope: !3844)
!3856 = !DILocation(line: 1621, column: 13, scope: !3853)
!3857 = !DILocation(line: 1624, column: 16, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3844, file: !936, line: 1624, column: 9)
!3859 = !DILocation(line: 1624, column: 14, scope: !3858)
!3860 = !DILocation(line: 1624, column: 21, scope: !3861)
!3861 = !DILexicalBlockFile(scope: !3862, file: !936, discriminator: 1)
!3862 = distinct !DILexicalBlock(scope: !3858, file: !936, line: 1624, column: 9)
!3863 = !DILocation(line: 1624, column: 25, scope: !3861)
!3864 = !DILocation(line: 1624, column: 28, scope: !3861)
!3865 = !DILocation(line: 1624, column: 23, scope: !3861)
!3866 = !DILocation(line: 1624, column: 9, scope: !3861)
!3867 = !DILocation(line: 1625, column: 41, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3862, file: !936, line: 1624, column: 46)
!3869 = !DILocation(line: 1625, column: 20, scope: !3868)
!3870 = !DILocation(line: 1625, column: 27, scope: !3868)
!3871 = !DILocation(line: 1626, column: 13, scope: !3868)
!3872 = !DILocation(line: 1626, column: 16, scope: !3868)
!3873 = !DILocation(line: 1626, column: 34, scope: !3868)
!3874 = !DILocation(line: 1625, column: 13, scope: !3868)
!3875 = !DILocation(line: 1628, column: 41, scope: !3868)
!3876 = !DILocation(line: 1628, column: 20, scope: !3868)
!3877 = !DILocation(line: 1628, column: 27, scope: !3868)
!3878 = !DILocation(line: 1628, column: 56, scope: !3868)
!3879 = !DILocation(line: 1628, column: 45, scope: !3868)
!3880 = !DILocation(line: 1628, column: 48, scope: !3868)
!3881 = !DILocation(line: 1628, column: 59, scope: !3868)
!3882 = !DILocation(line: 1628, column: 13, scope: !3868)
!3883 = !DILocation(line: 1629, column: 20, scope: !3868)
!3884 = !DILocation(line: 1629, column: 23, scope: !3868)
!3885 = !DILocation(line: 1629, column: 41, scope: !3868)
!3886 = !DILocation(line: 1629, column: 70, scope: !3868)
!3887 = !DILocation(line: 1630, column: 9, scope: !3868)
!3888 = !DILocation(line: 1624, column: 42, scope: !3889)
!3889 = !DILexicalBlockFile(scope: !3862, file: !936, discriminator: 2)
!3890 = !DILocation(line: 1624, column: 9, scope: !3889)
!3891 = distinct !{!3891, !3892}
!3892 = !DILocation(line: 1624, column: 9, scope: !3844)
!3893 = !DILocation(line: 1635, column: 9, scope: !3844)
!3894 = !DILocation(line: 1635, column: 12, scope: !3844)
!3895 = !DILocation(line: 1635, column: 21, scope: !3844)
!3896 = !DILocation(line: 1636, column: 9, scope: !3844)
!3897 = !DILocation(line: 1636, column: 12, scope: !3844)
!3898 = !DILocation(line: 1636, column: 24, scope: !3844)
!3899 = !DILocation(line: 1637, column: 10, scope: !3844)
!3900 = !DILocation(line: 1637, column: 24, scope: !3844)
!3901 = !DILocation(line: 1638, column: 9, scope: !3844)
!3902 = !DILocation(line: 1640, column: 14, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3841, file: !936, line: 1640, column: 14)
!3904 = !DILocation(line: 1640, column: 17, scope: !3903)
!3905 = !DILocation(line: 1640, column: 29, scope: !3903)
!3906 = !DILocation(line: 1640, column: 32, scope: !3907)
!3907 = !DILexicalBlockFile(scope: !3903, file: !936, discriminator: 1)
!3908 = !DILocation(line: 1640, column: 35, scope: !3907)
!3909 = !DILocation(line: 1640, column: 14, scope: !3907)
!3910 = !DILocation(line: 1641, column: 9, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3903, file: !936, line: 1640, column: 48)
!3912 = !DILocation(line: 1641, column: 12, scope: !3911)
!3913 = !DILocation(line: 1641, column: 24, scope: !3911)
!3914 = !DILocation(line: 1644, column: 13, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3911, file: !936, line: 1644, column: 13)
!3916 = !DILocation(line: 1644, column: 20, scope: !3915)
!3917 = !DILocation(line: 1644, column: 29, scope: !3915)
!3918 = !DILocation(line: 1644, column: 51, scope: !3915)
!3919 = !DILocation(line: 1644, column: 54, scope: !3920)
!3920 = !DILexicalBlockFile(scope: !3915, file: !936, discriminator: 1)
!3921 = !DILocation(line: 1644, column: 65, scope: !3920)
!3922 = !DILocation(line: 1644, column: 72, scope: !3920)
!3923 = !DILocation(line: 1644, column: 63, scope: !3920)
!3924 = !DILocation(line: 1644, column: 13, scope: !3920)
!3925 = !DILocation(line: 1645, column: 20, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3915, file: !936, line: 1644, column: 85)
!3927 = !DILocation(line: 1646, column: 20, scope: !3926)
!3928 = !DILocation(line: 1646, column: 30, scope: !3926)
!3929 = !DILocation(line: 1646, column: 37, scope: !3926)
!3930 = !DILocation(line: 1645, column: 13, scope: !3926)
!3931 = !DILocation(line: 1647, column: 13, scope: !3926)
!3932 = !DILocation(line: 1650, column: 13, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3911, file: !936, line: 1650, column: 13)
!3934 = !DILocation(line: 1650, column: 20, scope: !3933)
!3935 = !DILocation(line: 1650, column: 29, scope: !3933)
!3936 = !DILocation(line: 1650, column: 13, scope: !3911)
!3937 = !DILocation(line: 1651, column: 36, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3933, file: !936, line: 1650, column: 52)
!3939 = !DILocation(line: 1651, column: 47, scope: !3938)
!3940 = !DILocation(line: 1651, column: 54, scope: !3938)
!3941 = !DILocation(line: 1651, column: 45, scope: !3938)
!3942 = !DILocation(line: 1651, column: 13, scope: !3938)
!3943 = !DILocation(line: 1651, column: 16, scope: !3938)
!3944 = !DILocation(line: 1651, column: 34, scope: !3938)
!3945 = !DILocation(line: 1652, column: 24, scope: !3938)
!3946 = !DILocation(line: 1652, column: 31, scope: !3938)
!3947 = !DILocation(line: 1652, column: 22, scope: !3938)
!3948 = !DILocation(line: 1653, column: 9, scope: !3938)
!3949 = !DILocation(line: 1654, column: 36, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3933, file: !936, line: 1653, column: 16)
!3951 = !DILocation(line: 1654, column: 49, scope: !3950)
!3952 = !DILocation(line: 1654, column: 62, scope: !3950)
!3953 = !DILocation(line: 1654, column: 69, scope: !3950)
!3954 = !DILocation(line: 1654, column: 59, scope: !3950)
!3955 = !DILocation(line: 1654, column: 48, scope: !3950)
!3956 = !DILocation(line: 1654, column: 85, scope: !3957)
!3957 = !DILexicalBlockFile(scope: !3950, file: !936, discriminator: 1)
!3958 = !DILocation(line: 1654, column: 92, scope: !3957)
!3959 = !DILocation(line: 1654, column: 48, scope: !3957)
!3960 = !DILocation(line: 1654, column: 108, scope: !3961)
!3961 = !DILexicalBlockFile(scope: !3950, file: !936, discriminator: 2)
!3962 = !DILocation(line: 1654, column: 48, scope: !3961)
!3963 = !DILocation(line: 1654, column: 48, scope: !3964)
!3964 = !DILexicalBlockFile(scope: !3950, file: !936, discriminator: 3)
!3965 = !DILocation(line: 1654, column: 45, scope: !3964)
!3966 = !DILocation(line: 1654, column: 13, scope: !3964)
!3967 = !DILocation(line: 1654, column: 16, scope: !3964)
!3968 = !DILocation(line: 1654, column: 34, scope: !3964)
!3969 = !DILocation(line: 1655, column: 26, scope: !3950)
!3970 = !DILocation(line: 1655, column: 39, scope: !3950)
!3971 = !DILocation(line: 1655, column: 46, scope: !3950)
!3972 = !DILocation(line: 1655, column: 36, scope: !3950)
!3973 = !DILocation(line: 1655, column: 25, scope: !3950)
!3974 = !DILocation(line: 1655, column: 62, scope: !3957)
!3975 = !DILocation(line: 1655, column: 69, scope: !3957)
!3976 = !DILocation(line: 1655, column: 25, scope: !3957)
!3977 = !DILocation(line: 1655, column: 85, scope: !3961)
!3978 = !DILocation(line: 1655, column: 25, scope: !3961)
!3979 = !DILocation(line: 1655, column: 25, scope: !3964)
!3980 = !DILocation(line: 1655, column: 22, scope: !3964)
!3981 = !DILocation(line: 1657, column: 27, scope: !3911)
!3982 = !DILocation(line: 1657, column: 36, scope: !3911)
!3983 = !DILocation(line: 1657, column: 9, scope: !3911)
!3984 = !DILocation(line: 1657, column: 12, scope: !3911)
!3985 = !DILocation(line: 1657, column: 25, scope: !3911)
!3986 = !DILocation(line: 1660, column: 23, scope: !3911)
!3987 = !DILocation(line: 1660, column: 27, scope: !3911)
!3988 = !DILocation(line: 1660, column: 32, scope: !3911)
!3989 = !DILocation(line: 1660, column: 35, scope: !3911)
!3990 = !DILocation(line: 1660, column: 9, scope: !3911)
!3991 = !DILocation(line: 1661, column: 13, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3911, file: !936, line: 1661, column: 13)
!3993 = !DILocation(line: 1661, column: 20, scope: !3992)
!3994 = !DILocation(line: 1661, column: 29, scope: !3992)
!3995 = !DILocation(line: 1661, column: 13, scope: !3911)
!3996 = !DILocation(line: 1662, column: 47, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3992, file: !936, line: 1661, column: 50)
!3998 = !DILocation(line: 1662, column: 38, scope: !3997)
!3999 = !DILocation(line: 1662, column: 36, scope: !3997)
!4000 = !DILocation(line: 1663, column: 23, scope: !3997)
!4001 = !DILocation(line: 1663, column: 13, scope: !3997)
!4002 = !DILocation(line: 1664, column: 9, scope: !3997)
!4003 = !DILocalVariable(name: "num_frames", scope: !4004, file: !936, line: 1665, type: !914)
!4004 = distinct !DILexicalBlock(scope: !3992, file: !936, line: 1664, column: 16)
!4005 = !DILocation(line: 1665, column: 17, scope: !4004)
!4006 = !DILocation(line: 1665, column: 39, scope: !4004)
!4007 = !DILocation(line: 1665, column: 30, scope: !4004)
!4008 = !DILocation(line: 1666, column: 13, scope: !4004)
!4009 = distinct !{!4009, !4008}
!4010 = !DILocation(line: 1666, column: 114, scope: !4011)
!4011 = !DILexicalBlockFile(scope: !4012, file: !936, discriminator: 1)
!4012 = distinct !DILexicalBlock(scope: !4004, file: !936, line: 1666, column: 16)
!4013 = !DILocation(line: 1667, column: 36, scope: !4004)
!4014 = !DILocation(line: 1671, column: 40, scope: !3911)
!4015 = !DILocation(line: 1671, column: 44, scope: !3911)
!4016 = !DILocation(line: 1671, column: 47, scope: !3911)
!4017 = !DILocation(line: 1671, column: 31, scope: !3911)
!4018 = !DILocation(line: 1671, column: 29, scope: !3911)
!4019 = !DILocation(line: 1672, column: 13, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3911, file: !936, line: 1672, column: 13)
!4021 = !DILocation(line: 1672, column: 20, scope: !4020)
!4022 = !DILocation(line: 1672, column: 29, scope: !4020)
!4023 = !DILocation(line: 1672, column: 13, scope: !3911)
!4024 = !DILocation(line: 1673, column: 23, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4020, file: !936, line: 1672, column: 52)
!4026 = !DILocation(line: 1673, column: 13, scope: !4025)
!4027 = !DILocation(line: 1674, column: 40, scope: !4025)
!4028 = !DILocation(line: 1674, column: 31, scope: !4025)
!4029 = !DILocation(line: 1674, column: 13, scope: !4025)
!4030 = !DILocation(line: 1674, column: 16, scope: !4025)
!4031 = !DILocation(line: 1674, column: 29, scope: !4025)
!4032 = !DILocation(line: 1675, column: 13, scope: !4025)
!4033 = distinct !{!4033, !4032}
!4034 = !DILocation(line: 1675, column: 115, scope: !4035)
!4035 = !DILexicalBlockFile(scope: !4036, file: !936, discriminator: 1)
!4036 = distinct !DILexicalBlock(scope: !4025, file: !936, line: 1675, column: 16)
!4037 = !DILocation(line: 1676, column: 9, scope: !4025)
!4038 = !DILocation(line: 1678, column: 9, scope: !3911)
!4039 = distinct !{!4039, !4038}
!4040 = !DILocation(line: 1678, column: 107, scope: !4041)
!4041 = !DILexicalBlockFile(scope: !4042, file: !936, discriminator: 1)
!4042 = distinct !DILexicalBlock(scope: !3911, file: !936, line: 1678, column: 12)
!4043 = !DILocation(line: 1682, column: 13, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !3911, file: !936, line: 1682, column: 13)
!4045 = !DILocation(line: 1682, column: 20, scope: !4044)
!4046 = !DILocation(line: 1682, column: 29, scope: !4044)
!4047 = !DILocation(line: 1682, column: 51, scope: !4044)
!4048 = !DILocation(line: 1682, column: 55, scope: !4049)
!4049 = !DILexicalBlockFile(scope: !4044, file: !936, discriminator: 1)
!4050 = !DILocation(line: 1682, column: 58, scope: !4049)
!4051 = !DILocation(line: 1682, column: 70, scope: !4049)
!4052 = !DILocation(line: 1683, column: 15, scope: !4044)
!4053 = !DILocation(line: 1683, column: 18, scope: !4044)
!4054 = !DILocation(line: 1683, column: 41, scope: !4044)
!4055 = !DILocation(line: 1683, column: 46, scope: !4044)
!4056 = !DILocation(line: 1683, column: 56, scope: !4044)
!4057 = !DILocation(line: 1683, column: 53, scope: !4044)
!4058 = !DILocation(line: 1682, column: 13, scope: !4059)
!4059 = !DILexicalBlockFile(scope: !3911, file: !936, discriminator: 2)
!4060 = !DILocation(line: 1684, column: 13, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4044, file: !936, line: 1683, column: 80)
!4062 = !DILocation(line: 1684, column: 16, scope: !4061)
!4063 = !DILocation(line: 1684, column: 28, scope: !4061)
!4064 = !DILocation(line: 1685, column: 20, scope: !4061)
!4065 = !DILocation(line: 1687, column: 20, scope: !4061)
!4066 = !DILocation(line: 1687, column: 23, scope: !4061)
!4067 = !DILocation(line: 1687, column: 47, scope: !4061)
!4068 = !DILocation(line: 1685, column: 13, scope: !4061)
!4069 = !DILocation(line: 1688, column: 9, scope: !4061)
!4070 = !DILocation(line: 1689, column: 37, scope: !3911)
!4071 = !DILocation(line: 1689, column: 9, scope: !3911)
!4072 = !DILocation(line: 1689, column: 12, scope: !3911)
!4073 = !DILocation(line: 1689, column: 35, scope: !3911)
!4074 = !DILocation(line: 1691, column: 13, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !3911, file: !936, line: 1691, column: 13)
!4076 = !DILocation(line: 1691, column: 33, scope: !4075)
!4077 = !DILocation(line: 1691, column: 13, scope: !3911)
!4078 = !DILocalVariable(name: "remaining_packet_bits", scope: !4079, file: !936, line: 1692, type: !914)
!4079 = distinct !DILexicalBlock(scope: !4075, file: !936, line: 1691, column: 38)
!4080 = !DILocation(line: 1692, column: 17, scope: !4079)
!4081 = !DILocation(line: 1692, column: 41, scope: !4079)
!4082 = !DILocation(line: 1692, column: 44, scope: !4079)
!4083 = !DILocation(line: 1692, column: 74, scope: !4079)
!4084 = !DILocation(line: 1692, column: 59, scope: !4079)
!4085 = !DILocation(line: 1692, column: 57, scope: !4079)
!4086 = !DILocation(line: 1693, column: 17, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4079, file: !936, line: 1693, column: 17)
!4088 = !DILocation(line: 1693, column: 40, scope: !4087)
!4089 = !DILocation(line: 1693, column: 37, scope: !4087)
!4090 = !DILocation(line: 1693, column: 17, scope: !4079)
!4091 = !DILocation(line: 1694, column: 39, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4087, file: !936, line: 1693, column: 63)
!4093 = !DILocation(line: 1694, column: 37, scope: !4092)
!4094 = !DILocation(line: 1695, column: 17, scope: !4092)
!4095 = !DILocation(line: 1695, column: 20, scope: !4092)
!4096 = !DILocation(line: 1695, column: 32, scope: !4092)
!4097 = !DILocation(line: 1696, column: 13, scope: !4092)
!4098 = !DILocation(line: 1700, column: 23, scope: !4079)
!4099 = !DILocation(line: 1700, column: 26, scope: !4079)
!4100 = !DILocation(line: 1700, column: 30, scope: !4079)
!4101 = !DILocation(line: 1700, column: 13, scope: !4079)
!4102 = !DILocation(line: 1701, column: 13, scope: !4079)
!4103 = distinct !{!4103, !4102}
!4104 = !DILocation(line: 1701, column: 120, scope: !4105)
!4105 = !DILexicalBlockFile(scope: !4106, file: !936, discriminator: 1)
!4106 = distinct !DILexicalBlock(scope: !4079, file: !936, line: 1701, column: 16)
!4107 = !DILocation(line: 1705, column: 18, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4079, file: !936, line: 1705, column: 17)
!4109 = !DILocation(line: 1705, column: 21, scope: !4108)
!4110 = !DILocation(line: 1705, column: 17, scope: !4079)
!4111 = !DILocation(line: 1706, column: 30, scope: !4108)
!4112 = !DILocation(line: 1706, column: 33, scope: !4108)
!4113 = !DILocation(line: 1706, column: 39, scope: !4108)
!4114 = !DILocation(line: 1706, column: 17, scope: !4108)
!4115 = !DILocation(line: 1707, column: 9, scope: !4079)
!4116 = !DILocation(line: 1707, column: 20, scope: !4117)
!4117 = !DILexicalBlockFile(scope: !4118, file: !936, discriminator: 1)
!4118 = distinct !DILexicalBlock(scope: !4075, file: !936, line: 1707, column: 20)
!4119 = !DILocation(line: 1707, column: 23, scope: !4117)
!4120 = !DILocation(line: 1707, column: 40, scope: !4117)
!4121 = !DILocation(line: 1707, column: 43, scope: !4117)
!4122 = !DILocation(line: 1707, column: 38, scope: !4117)
!4123 = !DILocation(line: 1708, column: 13, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4118, file: !936, line: 1707, column: 57)
!4125 = distinct !{!4125, !4123}
!4126 = !DILocation(line: 1708, column: 120, scope: !4127)
!4127 = !DILexicalBlockFile(scope: !4128, file: !936, discriminator: 1)
!4128 = distinct !DILexicalBlock(scope: !4124, file: !936, line: 1708, column: 16)
!4129 = !DILocation(line: 1710, column: 9, scope: !4124)
!4130 = !DILocation(line: 1712, column: 13, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !3911, file: !936, line: 1712, column: 13)
!4132 = !DILocation(line: 1712, column: 16, scope: !4131)
!4133 = !DILocation(line: 1712, column: 13, scope: !3911)
!4134 = !DILocation(line: 1716, column: 13, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4131, file: !936, line: 1712, column: 29)
!4136 = !DILocation(line: 1716, column: 16, scope: !4135)
!4137 = !DILocation(line: 1716, column: 31, scope: !4135)
!4138 = !DILocation(line: 1717, column: 13, scope: !4135)
!4139 = !DILocation(line: 1717, column: 16, scope: !4135)
!4140 = !DILocation(line: 1717, column: 28, scope: !4135)
!4141 = !DILocation(line: 1718, column: 9, scope: !4135)
!4142 = !DILocation(line: 1719, column: 5, scope: !3911)
!4143 = !DILocalVariable(name: "frame_size", scope: !4144, file: !936, line: 1720, type: !914)
!4144 = distinct !DILexicalBlock(scope: !3903, file: !936, line: 1719, column: 12)
!4145 = !DILocation(line: 1720, column: 13, scope: !4144)
!4146 = !DILocation(line: 1721, column: 28, scope: !4144)
!4147 = !DILocation(line: 1721, column: 35, scope: !4144)
!4148 = !DILocation(line: 1721, column: 42, scope: !4144)
!4149 = !DILocation(line: 1721, column: 45, scope: !4144)
!4150 = !DILocation(line: 1721, column: 40, scope: !4144)
!4151 = !DILocation(line: 1721, column: 64, scope: !4144)
!4152 = !DILocation(line: 1721, column: 9, scope: !4144)
!4153 = !DILocation(line: 1721, column: 12, scope: !4144)
!4154 = !DILocation(line: 1721, column: 25, scope: !4144)
!4155 = !DILocation(line: 1722, column: 23, scope: !4144)
!4156 = !DILocation(line: 1722, column: 27, scope: !4144)
!4157 = !DILocation(line: 1722, column: 34, scope: !4144)
!4158 = !DILocation(line: 1722, column: 40, scope: !4144)
!4159 = !DILocation(line: 1722, column: 43, scope: !4144)
!4160 = !DILocation(line: 1722, column: 9, scope: !4144)
!4161 = !DILocation(line: 1723, column: 19, scope: !4144)
!4162 = !DILocation(line: 1723, column: 23, scope: !4144)
!4163 = !DILocation(line: 1723, column: 26, scope: !4144)
!4164 = !DILocation(line: 1723, column: 9, scope: !4144)
!4165 = !DILocation(line: 1724, column: 13, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4144, file: !936, line: 1724, column: 13)
!4167 = !DILocation(line: 1724, column: 16, scope: !4166)
!4168 = !DILocation(line: 1724, column: 27, scope: !4166)
!4169 = !DILocation(line: 1724, column: 45, scope: !4170)
!4170 = !DILexicalBlockFile(scope: !4166, file: !936, discriminator: 1)
!4171 = !DILocation(line: 1724, column: 48, scope: !4170)
!4172 = !DILocation(line: 1724, column: 30, scope: !4170)
!4173 = !DILocation(line: 1724, column: 54, scope: !4170)
!4174 = !DILocation(line: 1724, column: 57, scope: !4170)
!4175 = !DILocation(line: 1724, column: 52, scope: !4170)
!4176 = !DILocation(line: 1724, column: 73, scope: !4170)
!4177 = !DILocation(line: 1725, column: 37, scope: !4166)
!4178 = !DILocation(line: 1725, column: 41, scope: !4166)
!4179 = !DILocation(line: 1725, column: 44, scope: !4166)
!4180 = !DILocation(line: 1725, column: 27, scope: !4166)
!4181 = !DILocation(line: 1725, column: 25, scope: !4166)
!4182 = !DILocation(line: 1725, column: 62, scope: !4166)
!4183 = !DILocation(line: 1726, column: 13, scope: !4166)
!4184 = !DILocation(line: 1726, column: 42, scope: !4166)
!4185 = !DILocation(line: 1726, column: 45, scope: !4166)
!4186 = !DILocation(line: 1726, column: 27, scope: !4166)
!4187 = !DILocation(line: 1726, column: 24, scope: !4166)
!4188 = !DILocation(line: 1724, column: 13, scope: !4189)
!4189 = !DILexicalBlockFile(scope: !4144, file: !936, discriminator: 2)
!4190 = !DILocation(line: 1727, column: 23, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4166, file: !936, line: 1726, column: 50)
!4192 = !DILocation(line: 1727, column: 26, scope: !4191)
!4193 = !DILocation(line: 1727, column: 30, scope: !4191)
!4194 = !DILocation(line: 1727, column: 13, scope: !4191)
!4195 = !DILocation(line: 1728, column: 18, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4191, file: !936, line: 1728, column: 17)
!4197 = !DILocation(line: 1728, column: 21, scope: !4196)
!4198 = !DILocation(line: 1728, column: 17, scope: !4191)
!4199 = !DILocation(line: 1729, column: 48, scope: !4196)
!4200 = !DILocation(line: 1729, column: 51, scope: !4196)
!4201 = !DILocation(line: 1729, column: 57, scope: !4196)
!4202 = !DILocation(line: 1729, column: 35, scope: !4196)
!4203 = !DILocation(line: 1729, column: 34, scope: !4196)
!4204 = !DILocation(line: 1729, column: 17, scope: !4196)
!4205 = !DILocation(line: 1729, column: 20, scope: !4196)
!4206 = !DILocation(line: 1729, column: 32, scope: !4196)
!4207 = !DILocation(line: 1730, column: 9, scope: !4191)
!4208 = !DILocation(line: 1730, column: 21, scope: !4209)
!4209 = !DILexicalBlockFile(scope: !4210, file: !936, discriminator: 1)
!4210 = distinct !DILexicalBlock(scope: !4166, file: !936, line: 1730, column: 20)
!4211 = !DILocation(line: 1730, column: 24, scope: !4209)
!4212 = !DILocation(line: 1731, column: 20, scope: !4210)
!4213 = !DILocation(line: 1731, column: 23, scope: !4209)
!4214 = !DILocation(line: 1731, column: 26, scope: !4209)
!4215 = !DILocation(line: 1731, column: 59, scope: !4209)
!4216 = !DILocation(line: 1731, column: 62, scope: !4209)
!4217 = !DILocation(line: 1731, column: 43, scope: !4209)
!4218 = !DILocation(line: 1731, column: 41, scope: !4209)
!4219 = !DILocation(line: 1730, column: 20, scope: !4220)
!4220 = !DILexicalBlockFile(scope: !4166, file: !936, discriminator: 2)
!4221 = !DILocation(line: 1739, column: 44, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4210, file: !936, line: 1731, column: 67)
!4223 = !DILocation(line: 1739, column: 47, scope: !4222)
!4224 = !DILocation(line: 1739, column: 53, scope: !4222)
!4225 = !DILocation(line: 1739, column: 31, scope: !4222)
!4226 = !DILocation(line: 1739, column: 30, scope: !4222)
!4227 = !DILocation(line: 1739, column: 13, scope: !4222)
!4228 = !DILocation(line: 1739, column: 16, scope: !4222)
!4229 = !DILocation(line: 1739, column: 28, scope: !4222)
!4230 = !DILocation(line: 1740, column: 9, scope: !4222)
!4231 = !DILocation(line: 1741, column: 13, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4210, file: !936, line: 1740, column: 16)
!4233 = !DILocation(line: 1741, column: 16, scope: !4232)
!4234 = !DILocation(line: 1741, column: 28, scope: !4232)
!4235 = !DILocation(line: 1745, column: 24, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !3808, file: !936, line: 1745, column: 9)
!4237 = !DILocation(line: 1745, column: 27, scope: !4236)
!4238 = !DILocation(line: 1745, column: 9, scope: !4236)
!4239 = !DILocation(line: 1745, column: 31, scope: !4236)
!4240 = !DILocation(line: 1745, column: 9, scope: !3808)
!4241 = !DILocation(line: 1746, column: 16, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4236, file: !936, line: 1745, column: 36)
!4243 = !DILocation(line: 1746, column: 60, scope: !4242)
!4244 = !DILocation(line: 1746, column: 63, scope: !4242)
!4245 = !DILocation(line: 1746, column: 45, scope: !4242)
!4246 = !DILocation(line: 1746, column: 44, scope: !4242)
!4247 = !DILocation(line: 1746, column: 9, scope: !4248)
!4248 = !DILexicalBlockFile(scope: !4242, file: !936, discriminator: 1)
!4249 = !DILocation(line: 1747, column: 9, scope: !4242)
!4250 = !DILocation(line: 1747, column: 12, scope: !4242)
!4251 = !DILocation(line: 1747, column: 24, scope: !4242)
!4252 = !DILocation(line: 1748, column: 5, scope: !4242)
!4253 = !DILocation(line: 1750, column: 9, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !3808, file: !936, line: 1750, column: 9)
!4255 = !DILocation(line: 1750, column: 12, scope: !4254)
!4256 = !DILocation(line: 1750, column: 24, scope: !4254)
!4257 = !DILocation(line: 1750, column: 28, scope: !4258)
!4258 = !DILexicalBlockFile(scope: !4254, file: !936, discriminator: 1)
!4259 = !DILocation(line: 1750, column: 31, scope: !4258)
!4260 = !DILocation(line: 1750, column: 43, scope: !4258)
!4261 = !DILocation(line: 1751, column: 24, scope: !4254)
!4262 = !DILocation(line: 1751, column: 27, scope: !4254)
!4263 = !DILocation(line: 1751, column: 9, scope: !4254)
!4264 = !DILocation(line: 1751, column: 31, scope: !4254)
!4265 = !DILocation(line: 1750, column: 9, scope: !4266)
!4266 = !DILexicalBlockFile(scope: !3808, file: !936, discriminator: 2)
!4267 = !DILocation(line: 1754, column: 19, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4254, file: !936, line: 1751, column: 36)
!4269 = !DILocation(line: 1754, column: 22, scope: !4268)
!4270 = !DILocation(line: 1754, column: 41, scope: !4268)
!4271 = !DILocation(line: 1754, column: 44, scope: !4268)
!4272 = !DILocation(line: 1754, column: 26, scope: !4268)
!4273 = !DILocation(line: 1754, column: 9, scope: !4274)
!4274 = !DILexicalBlockFile(scope: !4268, file: !936, discriminator: 1)
!4275 = !DILocation(line: 1755, column: 5, scope: !4268)
!4276 = !DILocation(line: 1757, column: 39, scope: !3808)
!4277 = !DILocation(line: 1757, column: 24, scope: !3808)
!4278 = !DILocation(line: 1757, column: 43, scope: !3808)
!4279 = !DILocation(line: 1757, column: 5, scope: !3808)
!4280 = !DILocation(line: 1757, column: 8, scope: !3808)
!4281 = !DILocation(line: 1757, column: 22, scope: !3808)
!4282 = !DILocation(line: 1758, column: 9, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !3808, file: !936, line: 1758, column: 9)
!4284 = !DILocation(line: 1758, column: 12, scope: !4283)
!4285 = !DILocation(line: 1758, column: 9, scope: !3808)
!4286 = !DILocation(line: 1759, column: 9, scope: !4283)
!4287 = !DILocation(line: 1761, column: 27, scope: !3808)
!4288 = !DILocation(line: 1761, column: 12, scope: !3808)
!4289 = !DILocation(line: 1761, column: 31, scope: !3808)
!4290 = !DILocation(line: 1761, column: 5, scope: !3808)
!4291 = !DILocation(line: 1762, column: 1, scope: !3808)
!4292 = distinct !DISubprogram(name: "init_get_bits", scope: !1808, file: !1808, line: 615, type: !4293, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{!914, !3822, !1469, !914}
!4295 = !DILocalVariable(name: "s", arg: 1, scope: !4292, file: !1808, line: 615, type: !3822)
!4296 = !DILocation(line: 615, column: 48, scope: !4292)
!4297 = !DILocalVariable(name: "buffer", arg: 2, scope: !4292, file: !1808, line: 615, type: !1469)
!4298 = !DILocation(line: 615, column: 66, scope: !4292)
!4299 = !DILocalVariable(name: "bit_size", arg: 3, scope: !4292, file: !1808, line: 616, type: !914)
!4300 = !DILocation(line: 616, column: 37, scope: !4292)
!4301 = !DILocalVariable(name: "buffer_size", scope: !4292, file: !1808, line: 618, type: !914)
!4302 = !DILocation(line: 618, column: 9, scope: !4292)
!4303 = !DILocalVariable(name: "ret", scope: !4292, file: !1808, line: 619, type: !914)
!4304 = !DILocation(line: 619, column: 9, scope: !4292)
!4305 = !DILocation(line: 621, column: 9, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4292, file: !1808, line: 621, column: 9)
!4307 = !DILocation(line: 621, column: 18, scope: !4306)
!4308 = !DILocation(line: 621, column: 64, scope: !4306)
!4309 = !DILocation(line: 621, column: 67, scope: !4310)
!4310 = !DILexicalBlockFile(scope: !4306, file: !1808, discriminator: 1)
!4311 = !DILocation(line: 621, column: 76, scope: !4310)
!4312 = !DILocation(line: 621, column: 80, scope: !4310)
!4313 = !DILocation(line: 621, column: 84, scope: !4314)
!4314 = !DILexicalBlockFile(scope: !4306, file: !1808, discriminator: 2)
!4315 = !DILocation(line: 621, column: 9, scope: !4314)
!4316 = !DILocation(line: 622, column: 18, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4306, file: !1808, line: 621, column: 92)
!4318 = !DILocation(line: 623, column: 16, scope: !4317)
!4319 = !DILocation(line: 624, column: 13, scope: !4317)
!4320 = !DILocation(line: 625, column: 5, scope: !4317)
!4321 = !DILocation(line: 627, column: 20, scope: !4292)
!4322 = !DILocation(line: 627, column: 29, scope: !4292)
!4323 = !DILocation(line: 627, column: 34, scope: !4292)
!4324 = !DILocation(line: 627, column: 17, scope: !4292)
!4325 = !DILocation(line: 629, column: 17, scope: !4292)
!4326 = !DILocation(line: 629, column: 5, scope: !4292)
!4327 = !DILocation(line: 629, column: 8, scope: !4292)
!4328 = !DILocation(line: 629, column: 15, scope: !4292)
!4329 = !DILocation(line: 630, column: 23, scope: !4292)
!4330 = !DILocation(line: 630, column: 5, scope: !4292)
!4331 = !DILocation(line: 630, column: 8, scope: !4292)
!4332 = !DILocation(line: 630, column: 21, scope: !4292)
!4333 = !DILocation(line: 631, column: 29, scope: !4292)
!4334 = !DILocation(line: 631, column: 38, scope: !4292)
!4335 = !DILocation(line: 631, column: 5, scope: !4292)
!4336 = !DILocation(line: 631, column: 8, scope: !4292)
!4337 = !DILocation(line: 631, column: 27, scope: !4292)
!4338 = !DILocation(line: 632, column: 21, scope: !4292)
!4339 = !DILocation(line: 632, column: 30, scope: !4292)
!4340 = !DILocation(line: 632, column: 28, scope: !4292)
!4341 = !DILocation(line: 632, column: 5, scope: !4292)
!4342 = !DILocation(line: 632, column: 8, scope: !4292)
!4343 = !DILocation(line: 632, column: 19, scope: !4292)
!4344 = !DILocation(line: 633, column: 5, scope: !4292)
!4345 = !DILocation(line: 633, column: 8, scope: !4292)
!4346 = !DILocation(line: 633, column: 14, scope: !4292)
!4347 = !DILocation(line: 639, column: 12, scope: !4292)
!4348 = !DILocation(line: 639, column: 5, scope: !4292)
!4349 = distinct !DISubprogram(name: "get_bits", scope: !1808, file: !1808, line: 381, type: !4350, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!4350 = !DISubroutineType(types: !4351)
!4351 = !{!913, !3822, !914}
!4352 = !DILocalVariable(name: "x", arg: 1, scope: !4353, file: !4354, line: 66, type: !912)
!4353 = distinct !DISubprogram(name: "av_bswap32", scope: !4354, file: !4354, line: 66, type: !4355, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!4354 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!912, !912}
!4357 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !4358)
!4358 = distinct !DILocation(line: 401, column: 16, scope: !4349)
!4359 = !DILocalVariable(name: "s", arg: 1, scope: !4349, file: !1808, line: 381, type: !3822)
!4360 = !DILocation(line: 381, column: 52, scope: !4349)
!4361 = !DILocalVariable(name: "n", arg: 2, scope: !4349, file: !1808, line: 381, type: !914)
!4362 = !DILocation(line: 381, column: 59, scope: !4349)
!4363 = !DILocalVariable(name: "tmp", scope: !4349, file: !1808, line: 383, type: !914)
!4364 = !DILocation(line: 383, column: 18, scope: !4349)
!4365 = !DILocalVariable(name: "re_index", scope: !4349, file: !1808, line: 399, type: !913)
!4366 = !DILocation(line: 399, column: 18, scope: !4349)
!4367 = !DILocation(line: 399, column: 30, scope: !4349)
!4368 = !DILocation(line: 399, column: 34, scope: !4349)
!4369 = !DILocalVariable(name: "re_cache", scope: !4349, file: !1808, line: 399, type: !913)
!4370 = !DILocation(line: 399, column: 78, scope: !4349)
!4371 = !DILocalVariable(name: "re_size_plus8", scope: !4349, file: !1808, line: 399, type: !913)
!4372 = !DILocation(line: 399, column: 101, scope: !4349)
!4373 = !DILocation(line: 399, column: 118, scope: !4349)
!4374 = !DILocation(line: 399, column: 122, scope: !4349)
!4375 = !DILocation(line: 401, column: 60, scope: !4349)
!4376 = !DILocation(line: 401, column: 64, scope: !4349)
!4377 = !DILocation(line: 401, column: 74, scope: !4349)
!4378 = !DILocation(line: 401, column: 83, scope: !4349)
!4379 = !DILocation(line: 401, column: 71, scope: !4349)
!4380 = !DILocation(line: 401, column: 92, scope: !4349)
!4381 = !DILocation(line: 401, column: 16, scope: !4349)
!4382 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !4358)
!4383 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !4358)
!4384 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !4358)
!4385 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !4358)
!4386 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !4358)
!4387 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !4358)
!4388 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !4358)
!4389 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !4358)
!4390 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !4358)
!4391 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !4358)
!4392 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !4358)
!4393 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !4358)
!4394 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !4358)
!4395 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !4358)
!4396 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !4358)
!4397 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !4358)
!4398 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !4358)
!4399 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !4358)
!4400 = !DILocation(line: 401, column: 100, scope: !4349)
!4401 = !DILocation(line: 401, column: 109, scope: !4349)
!4402 = !DILocation(line: 401, column: 96, scope: !4349)
!4403 = !DILocation(line: 401, column: 14, scope: !4349)
!4404 = !DILocation(line: 402, column: 21, scope: !4349)
!4405 = !DILocation(line: 402, column: 31, scope: !4349)
!4406 = !DILocation(line: 402, column: 11, scope: !4349)
!4407 = !DILocation(line: 402, column: 9, scope: !4349)
!4408 = !DILocation(line: 403, column: 18, scope: !4349)
!4409 = !DILocation(line: 403, column: 36, scope: !4349)
!4410 = !DILocation(line: 403, column: 48, scope: !4349)
!4411 = !DILocation(line: 403, column: 45, scope: !4349)
!4412 = !DILocation(line: 403, column: 33, scope: !4349)
!4413 = !DILocation(line: 403, column: 17, scope: !4349)
!4414 = !DILocation(line: 403, column: 55, scope: !4415)
!4415 = !DILexicalBlockFile(scope: !4349, file: !1808, discriminator: 1)
!4416 = !DILocation(line: 403, column: 67, scope: !4415)
!4417 = !DILocation(line: 403, column: 64, scope: !4415)
!4418 = !DILocation(line: 403, column: 17, scope: !4415)
!4419 = !DILocation(line: 403, column: 74, scope: !4420)
!4420 = !DILexicalBlockFile(scope: !4349, file: !1808, discriminator: 2)
!4421 = !DILocation(line: 403, column: 17, scope: !4420)
!4422 = !DILocation(line: 403, column: 17, scope: !4423)
!4423 = !DILexicalBlockFile(scope: !4349, file: !1808, discriminator: 3)
!4424 = !DILocation(line: 403, column: 14, scope: !4423)
!4425 = !DILocation(line: 404, column: 18, scope: !4349)
!4426 = !DILocation(line: 404, column: 6, scope: !4349)
!4427 = !DILocation(line: 404, column: 10, scope: !4349)
!4428 = !DILocation(line: 404, column: 16, scope: !4349)
!4429 = !DILocation(line: 406, column: 12, scope: !4349)
!4430 = !DILocation(line: 406, column: 5, scope: !4349)
!4431 = distinct !DISubprogram(name: "skip_bits", scope: !1808, file: !1808, line: 460, type: !4432, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{null, !3822, !914}
!4434 = !DILocalVariable(name: "s", arg: 1, scope: !4431, file: !1808, line: 460, type: !3822)
!4435 = !DILocation(line: 460, column: 45, scope: !4431)
!4436 = !DILocalVariable(name: "n", arg: 2, scope: !4431, file: !1808, line: 460, type: !914)
!4437 = !DILocation(line: 460, column: 52, scope: !4431)
!4438 = !DILocalVariable(name: "re_index", scope: !4431, file: !1808, line: 481, type: !913)
!4439 = !DILocation(line: 481, column: 18, scope: !4431)
!4440 = !DILocation(line: 481, column: 30, scope: !4431)
!4441 = !DILocation(line: 481, column: 34, scope: !4431)
!4442 = !DILocalVariable(name: "re_cache", scope: !4431, file: !1808, line: 481, type: !913)
!4443 = !DILocation(line: 481, column: 78, scope: !4431)
!4444 = !DILocalVariable(name: "re_size_plus8", scope: !4431, file: !1808, line: 481, type: !913)
!4445 = !DILocation(line: 481, column: 101, scope: !4431)
!4446 = !DILocation(line: 481, column: 118, scope: !4431)
!4447 = !DILocation(line: 481, column: 122, scope: !4431)
!4448 = !DILocation(line: 482, column: 18, scope: !4431)
!4449 = !DILocation(line: 482, column: 36, scope: !4431)
!4450 = !DILocation(line: 482, column: 48, scope: !4431)
!4451 = !DILocation(line: 482, column: 45, scope: !4431)
!4452 = !DILocation(line: 482, column: 33, scope: !4431)
!4453 = !DILocation(line: 482, column: 17, scope: !4431)
!4454 = !DILocation(line: 482, column: 55, scope: !4455)
!4455 = !DILexicalBlockFile(scope: !4431, file: !1808, discriminator: 1)
!4456 = !DILocation(line: 482, column: 67, scope: !4455)
!4457 = !DILocation(line: 482, column: 64, scope: !4455)
!4458 = !DILocation(line: 482, column: 17, scope: !4455)
!4459 = !DILocation(line: 482, column: 74, scope: !4460)
!4460 = !DILexicalBlockFile(scope: !4431, file: !1808, discriminator: 2)
!4461 = !DILocation(line: 482, column: 17, scope: !4460)
!4462 = !DILocation(line: 482, column: 17, scope: !4463)
!4463 = !DILexicalBlockFile(scope: !4431, file: !1808, discriminator: 3)
!4464 = !DILocation(line: 482, column: 14, scope: !4463)
!4465 = !DILocation(line: 483, column: 18, scope: !4431)
!4466 = !DILocation(line: 483, column: 6, scope: !4431)
!4467 = !DILocation(line: 483, column: 10, scope: !4431)
!4468 = !DILocation(line: 483, column: 16, scope: !4431)
!4469 = !DILocation(line: 485, column: 1, scope: !4431)
!4470 = distinct !DISubprogram(name: "get_bits_count", scope: !1808, file: !1808, line: 219, type: !4471, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!4471 = !DISubroutineType(types: !4472)
!4472 = !{!914, !4473}
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 64, align: 64)
!4474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1807)
!4475 = !DILocalVariable(name: "s", arg: 1, scope: !4470, file: !1808, line: 219, type: !4473)
!4476 = !DILocation(line: 219, column: 55, scope: !4470)
!4477 = !DILocation(line: 224, column: 12, scope: !4470)
!4478 = !DILocation(line: 224, column: 15, scope: !4470)
!4479 = !DILocation(line: 224, column: 5, scope: !4470)
!4480 = distinct !DISubprogram(name: "save_bits", scope: !936, file: !936, line: 1555, type: !4481, isLocal: true, isDefinition: true, scopeLine: 1557, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!4481 = !DISubroutineType(types: !4482)
!4482 = !{null, !1664, !3822, !914, !914}
!4483 = !DILocalVariable(name: "s", arg: 1, scope: !4480, file: !936, line: 1555, type: !1664)
!4484 = !DILocation(line: 1555, column: 40, scope: !4480)
!4485 = !DILocalVariable(name: "gb", arg: 2, scope: !4480, file: !936, line: 1555, type: !3822)
!4486 = !DILocation(line: 1555, column: 58, scope: !4480)
!4487 = !DILocalVariable(name: "len", arg: 3, scope: !4480, file: !936, line: 1555, type: !914)
!4488 = !DILocation(line: 1555, column: 66, scope: !4480)
!4489 = !DILocalVariable(name: "append", arg: 4, scope: !4480, file: !936, line: 1556, type: !914)
!4490 = !DILocation(line: 1556, column: 27, scope: !4480)
!4491 = !DILocalVariable(name: "buflen", scope: !4480, file: !936, line: 1558, type: !914)
!4492 = !DILocation(line: 1558, column: 9, scope: !4480)
!4493 = !DILocation(line: 1564, column: 10, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4480, file: !936, line: 1564, column: 9)
!4495 = !DILocation(line: 1564, column: 9, scope: !4480)
!4496 = !DILocation(line: 1565, column: 42, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4494, file: !936, line: 1564, column: 18)
!4498 = !DILocation(line: 1565, column: 27, scope: !4497)
!4499 = !DILocation(line: 1565, column: 46, scope: !4497)
!4500 = !DILocation(line: 1565, column: 9, scope: !4497)
!4501 = !DILocation(line: 1565, column: 12, scope: !4497)
!4502 = !DILocation(line: 1565, column: 25, scope: !4497)
!4503 = !DILocation(line: 1566, column: 29, scope: !4497)
!4504 = !DILocation(line: 1566, column: 32, scope: !4497)
!4505 = !DILocation(line: 1566, column: 9, scope: !4497)
!4506 = !DILocation(line: 1566, column: 12, scope: !4497)
!4507 = !DILocation(line: 1566, column: 27, scope: !4497)
!4508 = !DILocation(line: 1567, column: 24, scope: !4497)
!4509 = !DILocation(line: 1567, column: 27, scope: !4497)
!4510 = !DILocation(line: 1567, column: 31, scope: !4497)
!4511 = !DILocation(line: 1567, column: 34, scope: !4497)
!4512 = !DILocation(line: 1567, column: 9, scope: !4497)
!4513 = !DILocation(line: 1568, column: 5, scope: !4497)
!4514 = !DILocation(line: 1570, column: 31, scope: !4480)
!4515 = !DILocation(line: 1570, column: 34, scope: !4480)
!4516 = !DILocation(line: 1570, column: 15, scope: !4480)
!4517 = !DILocation(line: 1570, column: 40, scope: !4480)
!4518 = !DILocation(line: 1570, column: 38, scope: !4480)
!4519 = !DILocation(line: 1570, column: 44, scope: !4480)
!4520 = !DILocation(line: 1570, column: 49, scope: !4480)
!4521 = !DILocation(line: 1570, column: 12, scope: !4480)
!4522 = !DILocation(line: 1572, column: 9, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4480, file: !936, line: 1572, column: 9)
!4524 = !DILocation(line: 1572, column: 13, scope: !4523)
!4525 = !DILocation(line: 1572, column: 18, scope: !4523)
!4526 = !DILocation(line: 1572, column: 21, scope: !4527)
!4527 = !DILexicalBlockFile(scope: !4523, file: !936, discriminator: 1)
!4528 = !DILocation(line: 1572, column: 28, scope: !4527)
!4529 = !DILocation(line: 1572, column: 9, scope: !4527)
!4530 = !DILocation(line: 1573, column: 31, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4523, file: !936, line: 1572, column: 37)
!4532 = !DILocation(line: 1573, column: 34, scope: !4531)
!4533 = !DILocation(line: 1573, column: 9, scope: !4531)
!4534 = !DILocation(line: 1574, column: 9, scope: !4531)
!4535 = !DILocation(line: 1574, column: 12, scope: !4531)
!4536 = !DILocation(line: 1574, column: 24, scope: !4531)
!4537 = !DILocation(line: 1575, column: 9, scope: !4531)
!4538 = !DILocation(line: 1578, column: 5, scope: !4480)
!4539 = distinct !{!4539, !4538}
!4540 = !DILocation(line: 1578, column: 16, scope: !4541)
!4541 = !DILexicalBlockFile(scope: !4542, file: !936, discriminator: 1)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !936, line: 1578, column: 14)
!4543 = distinct !DILexicalBlock(scope: !4480, file: !936, line: 1578, column: 8)
!4544 = !DILocation(line: 1578, column: 38, scope: !4541)
!4545 = !DILocation(line: 1578, column: 41, scope: !4541)
!4546 = !DILocation(line: 1578, column: 23, scope: !4541)
!4547 = !DILocation(line: 1578, column: 20, scope: !4541)
!4548 = !DILocation(line: 1578, column: 14, scope: !4541)
!4549 = !DILocation(line: 1578, column: 49, scope: !4550)
!4550 = !DILexicalBlockFile(scope: !4551, file: !936, discriminator: 2)
!4551 = distinct !DILexicalBlock(scope: !4542, file: !936, line: 1578, column: 47)
!4552 = !DILocation(line: 1578, column: 108, scope: !4553)
!4553 = !DILexicalBlockFile(scope: !4550, file: !936, discriminator: 4)
!4554 = !DILocation(line: 1578, column: 108, scope: !4550)
!4555 = !DILocation(line: 1578, column: 119, scope: !4556)
!4556 = !DILexicalBlockFile(scope: !4543, file: !936, discriminator: 3)
!4557 = !DILocation(line: 1580, column: 26, scope: !4480)
!4558 = !DILocation(line: 1580, column: 5, scope: !4480)
!4559 = !DILocation(line: 1580, column: 8, scope: !4480)
!4560 = !DILocation(line: 1580, column: 23, scope: !4480)
!4561 = !DILocation(line: 1581, column: 10, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4480, file: !936, line: 1581, column: 9)
!4563 = !DILocation(line: 1581, column: 9, scope: !4480)
!4564 = !DILocation(line: 1582, column: 27, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4562, file: !936, line: 1581, column: 18)
!4566 = !DILocation(line: 1582, column: 30, scope: !4565)
!4567 = !DILocation(line: 1582, column: 34, scope: !4565)
!4568 = !DILocation(line: 1582, column: 38, scope: !4565)
!4569 = !DILocation(line: 1582, column: 63, scope: !4565)
!4570 = !DILocation(line: 1582, column: 48, scope: !4565)
!4571 = !DILocation(line: 1582, column: 67, scope: !4565)
!4572 = !DILocation(line: 1582, column: 45, scope: !4565)
!4573 = !DILocation(line: 1583, column: 22, scope: !4565)
!4574 = !DILocation(line: 1583, column: 25, scope: !4565)
!4575 = !DILocation(line: 1582, column: 9, scope: !4576)
!4576 = !DILexicalBlockFile(scope: !4565, file: !936, discriminator: 1)
!4577 = !DILocation(line: 1584, column: 5, scope: !4565)
!4578 = !DILocalVariable(name: "align", scope: !4579, file: !936, line: 1585, type: !914)
!4579 = distinct !DILexicalBlock(scope: !4562, file: !936, line: 1584, column: 12)
!4580 = !DILocation(line: 1585, column: 13, scope: !4579)
!4581 = !DILocation(line: 1585, column: 41, scope: !4579)
!4582 = !DILocation(line: 1585, column: 26, scope: !4579)
!4583 = !DILocation(line: 1585, column: 45, scope: !4579)
!4584 = !DILocation(line: 1585, column: 23, scope: !4579)
!4585 = !DILocation(line: 1586, column: 19, scope: !4579)
!4586 = !DILocation(line: 1586, column: 29, scope: !4579)
!4587 = !DILocation(line: 1586, column: 26, scope: !4579)
!4588 = !DILocation(line: 1586, column: 18, scope: !4579)
!4589 = !DILocation(line: 1586, column: 37, scope: !4590)
!4590 = !DILexicalBlockFile(scope: !4579, file: !936, discriminator: 1)
!4591 = !DILocation(line: 1586, column: 18, scope: !4590)
!4592 = !DILocation(line: 1586, column: 45, scope: !4593)
!4593 = !DILexicalBlockFile(scope: !4579, file: !936, discriminator: 2)
!4594 = !DILocation(line: 1586, column: 18, scope: !4593)
!4595 = !DILocation(line: 1586, column: 18, scope: !4596)
!4596 = !DILexicalBlockFile(scope: !4579, file: !936, discriminator: 3)
!4597 = !DILocation(line: 1586, column: 15, scope: !4596)
!4598 = !DILocation(line: 1587, column: 19, scope: !4579)
!4599 = !DILocation(line: 1587, column: 22, scope: !4579)
!4600 = !DILocation(line: 1587, column: 26, scope: !4579)
!4601 = !DILocation(line: 1587, column: 42, scope: !4579)
!4602 = !DILocation(line: 1587, column: 46, scope: !4579)
!4603 = !DILocation(line: 1587, column: 33, scope: !4579)
!4604 = !DILocation(line: 1587, column: 9, scope: !4590)
!4605 = !DILocation(line: 1588, column: 16, scope: !4579)
!4606 = !DILocation(line: 1588, column: 13, scope: !4579)
!4607 = !DILocation(line: 1589, column: 27, scope: !4579)
!4608 = !DILocation(line: 1589, column: 30, scope: !4579)
!4609 = !DILocation(line: 1589, column: 34, scope: !4579)
!4610 = !DILocation(line: 1589, column: 38, scope: !4579)
!4611 = !DILocation(line: 1589, column: 63, scope: !4579)
!4612 = !DILocation(line: 1589, column: 48, scope: !4579)
!4613 = !DILocation(line: 1589, column: 67, scope: !4579)
!4614 = !DILocation(line: 1589, column: 45, scope: !4579)
!4615 = !DILocation(line: 1589, column: 74, scope: !4579)
!4616 = !DILocation(line: 1589, column: 9, scope: !4590)
!4617 = !DILocation(line: 1591, column: 20, scope: !4480)
!4618 = !DILocation(line: 1591, column: 24, scope: !4480)
!4619 = !DILocation(line: 1591, column: 5, scope: !4480)
!4620 = !DILocalVariable(name: "tmp", scope: !4621, file: !936, line: 1594, type: !1720)
!4621 = distinct !DILexicalBlock(scope: !4480, file: !936, line: 1593, column: 5)
!4622 = !DILocation(line: 1594, column: 23, scope: !4621)
!4623 = !DILocation(line: 1594, column: 29, scope: !4621)
!4624 = !DILocation(line: 1594, column: 32, scope: !4621)
!4625 = !DILocation(line: 1595, column: 9, scope: !4621)
!4626 = !DILocation(line: 1598, column: 20, scope: !4480)
!4627 = !DILocation(line: 1598, column: 23, scope: !4480)
!4628 = !DILocation(line: 1598, column: 27, scope: !4480)
!4629 = !DILocation(line: 1598, column: 30, scope: !4480)
!4630 = !DILocation(line: 1598, column: 42, scope: !4480)
!4631 = !DILocation(line: 1598, column: 45, scope: !4480)
!4632 = !DILocation(line: 1598, column: 5, scope: !4480)
!4633 = !DILocation(line: 1599, column: 16, scope: !4480)
!4634 = !DILocation(line: 1599, column: 19, scope: !4480)
!4635 = !DILocation(line: 1599, column: 23, scope: !4480)
!4636 = !DILocation(line: 1599, column: 26, scope: !4480)
!4637 = !DILocation(line: 1599, column: 5, scope: !4480)
!4638 = !DILocation(line: 1600, column: 1, scope: !4480)
!4639 = !DILocation(line: 1600, column: 1, scope: !4640)
!4640 = !DILexicalBlockFile(scope: !4480, file: !936, discriminator: 1)
!4641 = distinct !DISubprogram(name: "decode_frame", scope: !936, file: !936, line: 1421, type: !4642, isLocal: true, isDefinition: true, scopeLine: 1422, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!4642 = !DISubroutineType(types: !4643)
!4643 = !{!914, !1664, !1051, !1321}
!4644 = !DILocalVariable(name: "s", arg: 1, scope: !4641, file: !936, line: 1421, type: !1664)
!4645 = !DILocation(line: 1421, column: 42, scope: !4641)
!4646 = !DILocalVariable(name: "frame", arg: 2, scope: !4641, file: !936, line: 1421, type: !1051)
!4647 = !DILocation(line: 1421, column: 54, scope: !4641)
!4648 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !4641, file: !936, line: 1421, type: !1321)
!4649 = !DILocation(line: 1421, column: 66, scope: !4641)
!4650 = !DILocalVariable(name: "gb", scope: !4641, file: !936, line: 1423, type: !3822)
!4651 = !DILocation(line: 1423, column: 20, scope: !4641)
!4652 = !DILocation(line: 1423, column: 26, scope: !4641)
!4653 = !DILocation(line: 1423, column: 29, scope: !4641)
!4654 = !DILocalVariable(name: "more_frames", scope: !4641, file: !936, line: 1424, type: !914)
!4655 = !DILocation(line: 1424, column: 9, scope: !4641)
!4656 = !DILocalVariable(name: "len", scope: !4641, file: !936, line: 1425, type: !914)
!4657 = !DILocation(line: 1425, column: 9, scope: !4641)
!4658 = !DILocalVariable(name: "i", scope: !4641, file: !936, line: 1426, type: !914)
!4659 = !DILocation(line: 1426, column: 9, scope: !4641)
!4660 = !DILocation(line: 1429, column: 9, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4641, file: !936, line: 1429, column: 9)
!4662 = !DILocation(line: 1429, column: 12, scope: !4661)
!4663 = !DILocation(line: 1429, column: 9, scope: !4641)
!4664 = !DILocation(line: 1430, column: 24, scope: !4661)
!4665 = !DILocation(line: 1430, column: 28, scope: !4661)
!4666 = !DILocation(line: 1430, column: 31, scope: !4661)
!4667 = !DILocation(line: 1430, column: 15, scope: !4661)
!4668 = !DILocation(line: 1430, column: 13, scope: !4661)
!4669 = !DILocation(line: 1430, column: 9, scope: !4661)
!4670 = !DILocation(line: 1432, column: 5, scope: !4641)
!4671 = distinct !{!4671, !4670}
!4672 = !DILocation(line: 1432, column: 79, scope: !4673)
!4673 = !DILexicalBlockFile(scope: !4674, file: !936, discriminator: 1)
!4674 = distinct !DILexicalBlock(scope: !4641, file: !936, line: 1432, column: 8)
!4675 = !DILocation(line: 1435, column: 24, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4641, file: !936, line: 1435, column: 9)
!4677 = !DILocation(line: 1435, column: 9, scope: !4676)
!4678 = !DILocation(line: 1435, column: 9, scope: !4641)
!4679 = !DILocation(line: 1436, column: 9, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4676, file: !936, line: 1435, column: 28)
!4681 = !DILocation(line: 1436, column: 12, scope: !4680)
!4682 = !DILocation(line: 1436, column: 24, scope: !4680)
!4683 = !DILocation(line: 1437, column: 9, scope: !4680)
!4684 = !DILocation(line: 1441, column: 9, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4641, file: !936, line: 1441, column: 9)
!4686 = !DILocation(line: 1441, column: 12, scope: !4685)
!4687 = !DILocation(line: 1441, column: 24, scope: !4685)
!4688 = !DILocation(line: 1441, column: 28, scope: !4685)
!4689 = !DILocation(line: 1441, column: 41, scope: !4690)
!4690 = !DILexicalBlockFile(scope: !4685, file: !936, discriminator: 1)
!4691 = !DILocation(line: 1441, column: 31, scope: !4690)
!4692 = !DILocation(line: 1441, column: 9, scope: !4690)
!4693 = !DILocation(line: 1442, column: 23, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !936, line: 1442, column: 13)
!4695 = distinct !DILexicalBlock(scope: !4685, file: !936, line: 1441, column: 46)
!4696 = !DILocation(line: 1442, column: 13, scope: !4694)
!4697 = !DILocation(line: 1442, column: 13, scope: !4695)
!4698 = !DILocation(line: 1443, column: 20, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !936, line: 1443, column: 13)
!4700 = distinct !DILexicalBlock(scope: !4694, file: !936, line: 1442, column: 28)
!4701 = !DILocation(line: 1443, column: 18, scope: !4699)
!4702 = !DILocation(line: 1443, column: 25, scope: !4703)
!4703 = !DILexicalBlockFile(scope: !4704, file: !936, discriminator: 1)
!4704 = distinct !DILexicalBlock(scope: !4699, file: !936, line: 1443, column: 13)
!4705 = !DILocation(line: 1443, column: 29, scope: !4703)
!4706 = !DILocation(line: 1443, column: 32, scope: !4703)
!4707 = !DILocation(line: 1443, column: 46, scope: !4703)
!4708 = !DILocation(line: 1443, column: 49, scope: !4703)
!4709 = !DILocation(line: 1443, column: 44, scope: !4703)
!4710 = !DILocation(line: 1443, column: 27, scope: !4703)
!4711 = !DILocation(line: 1443, column: 13, scope: !4703)
!4712 = !DILocation(line: 1444, column: 27, scope: !4704)
!4713 = !DILocation(line: 1444, column: 17, scope: !4704)
!4714 = !DILocation(line: 1443, column: 63, scope: !4715)
!4715 = !DILexicalBlockFile(scope: !4704, file: !936, discriminator: 2)
!4716 = !DILocation(line: 1443, column: 13, scope: !4715)
!4717 = distinct !{!4717, !4718}
!4718 = !DILocation(line: 1443, column: 13, scope: !4700)
!4719 = !DILocation(line: 1445, column: 9, scope: !4700)
!4720 = !DILocation(line: 1446, column: 5, scope: !4695)
!4721 = !DILocation(line: 1449, column: 9, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4641, file: !936, line: 1449, column: 9)
!4723 = !DILocation(line: 1449, column: 12, scope: !4722)
!4724 = !DILocation(line: 1449, column: 9, scope: !4641)
!4725 = !DILocation(line: 1450, column: 32, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4722, file: !936, line: 1449, column: 39)
!4727 = !DILocation(line: 1450, column: 23, scope: !4726)
!4728 = !DILocation(line: 1450, column: 9, scope: !4726)
!4729 = !DILocation(line: 1450, column: 12, scope: !4726)
!4730 = !DILocation(line: 1450, column: 21, scope: !4726)
!4731 = !DILocation(line: 1451, column: 9, scope: !4726)
!4732 = distinct !{!4732, !4731}
!4733 = !DILocation(line: 1451, column: 73, scope: !4734)
!4734 = !DILexicalBlockFile(scope: !4735, file: !936, discriminator: 1)
!4735 = distinct !DILexicalBlock(scope: !4726, file: !936, line: 1451, column: 12)
!4736 = !DILocation(line: 1452, column: 5, scope: !4726)
!4737 = !DILocation(line: 1456, column: 19, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4641, file: !936, line: 1456, column: 9)
!4739 = !DILocation(line: 1456, column: 9, scope: !4738)
!4740 = !DILocation(line: 1456, column: 9, scope: !4641)
!4741 = !DILocalVariable(name: "skip", scope: !4742, file: !936, line: 1457, type: !914)
!4742 = distinct !DILexicalBlock(scope: !4738, file: !936, line: 1456, column: 24)
!4743 = !DILocation(line: 1457, column: 37, scope: !4742)
!4744 = !DILocation(line: 1460, column: 23, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4742, file: !936, line: 1460, column: 13)
!4746 = !DILocation(line: 1460, column: 13, scope: !4745)
!4747 = !DILocation(line: 1460, column: 13, scope: !4742)
!4748 = !DILocation(line: 1461, column: 29, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4745, file: !936, line: 1460, column: 28)
!4750 = !DILocation(line: 1461, column: 54, scope: !4749)
!4751 = !DILocation(line: 1461, column: 57, scope: !4749)
!4752 = !DILocation(line: 1461, column: 75, scope: !4749)
!4753 = !DILocation(line: 1461, column: 79, scope: !4749)
!4754 = !DILocation(line: 1461, column: 39, scope: !4749)
!4755 = !DILocation(line: 1461, column: 37, scope: !4749)
!4756 = !DILocation(line: 1461, column: 20, scope: !4757)
!4757 = !DILexicalBlockFile(scope: !4749, file: !936, discriminator: 1)
!4758 = !DILocation(line: 1461, column: 18, scope: !4749)
!4759 = !DILocation(line: 1462, column: 13, scope: !4749)
!4760 = distinct !{!4760, !4759}
!4761 = !DILocation(line: 1462, column: 73, scope: !4762)
!4762 = !DILexicalBlockFile(scope: !4763, file: !936, discriminator: 1)
!4763 = distinct !DILexicalBlock(scope: !4749, file: !936, line: 1462, column: 16)
!4764 = !DILocation(line: 1463, column: 9, scope: !4749)
!4765 = !DILocation(line: 1466, column: 23, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4742, file: !936, line: 1466, column: 13)
!4767 = !DILocation(line: 1466, column: 13, scope: !4766)
!4768 = !DILocation(line: 1466, column: 13, scope: !4742)
!4769 = !DILocation(line: 1467, column: 29, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4766, file: !936, line: 1466, column: 28)
!4771 = !DILocation(line: 1467, column: 54, scope: !4770)
!4772 = !DILocation(line: 1467, column: 57, scope: !4770)
!4773 = !DILocation(line: 1467, column: 75, scope: !4770)
!4774 = !DILocation(line: 1467, column: 79, scope: !4770)
!4775 = !DILocation(line: 1467, column: 39, scope: !4770)
!4776 = !DILocation(line: 1467, column: 37, scope: !4770)
!4777 = !DILocation(line: 1467, column: 20, scope: !4778)
!4778 = !DILexicalBlockFile(scope: !4770, file: !936, discriminator: 1)
!4779 = !DILocation(line: 1467, column: 18, scope: !4770)
!4780 = !DILocation(line: 1468, column: 13, scope: !4770)
!4781 = distinct !{!4781, !4780}
!4782 = !DILocation(line: 1468, column: 71, scope: !4783)
!4783 = !DILexicalBlockFile(scope: !4784, file: !936, discriminator: 1)
!4784 = distinct !DILexicalBlock(scope: !4770, file: !936, line: 1468, column: 16)
!4785 = !DILocation(line: 1469, column: 9, scope: !4770)
!4786 = !DILocation(line: 1471, column: 5, scope: !4742)
!4787 = !DILocation(line: 1473, column: 5, scope: !4641)
!4788 = distinct !{!4788, !4787}
!4789 = !DILocation(line: 1473, column: 120, scope: !4790)
!4790 = !DILexicalBlockFile(scope: !4791, file: !936, discriminator: 1)
!4791 = distinct !DILexicalBlock(scope: !4641, file: !936, line: 1473, column: 8)
!4792 = !DILocation(line: 1477, column: 5, scope: !4641)
!4793 = !DILocation(line: 1477, column: 8, scope: !4641)
!4794 = !DILocation(line: 1477, column: 29, scope: !4641)
!4795 = !DILocation(line: 1478, column: 12, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4641, file: !936, line: 1478, column: 5)
!4797 = !DILocation(line: 1478, column: 10, scope: !4796)
!4798 = !DILocation(line: 1478, column: 17, scope: !4799)
!4799 = !DILexicalBlockFile(scope: !4800, file: !936, discriminator: 1)
!4800 = distinct !DILexicalBlock(scope: !4796, file: !936, line: 1478, column: 5)
!4801 = !DILocation(line: 1478, column: 21, scope: !4799)
!4802 = !DILocation(line: 1478, column: 24, scope: !4799)
!4803 = !DILocation(line: 1478, column: 19, scope: !4799)
!4804 = !DILocation(line: 1478, column: 5, scope: !4799)
!4805 = !DILocation(line: 1479, column: 20, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4800, file: !936, line: 1478, column: 42)
!4807 = !DILocation(line: 1479, column: 9, scope: !4806)
!4808 = !DILocation(line: 1479, column: 12, scope: !4806)
!4809 = !DILocation(line: 1479, column: 23, scope: !4806)
!4810 = !DILocation(line: 1479, column: 39, scope: !4806)
!4811 = !DILocation(line: 1480, column: 20, scope: !4806)
!4812 = !DILocation(line: 1480, column: 9, scope: !4806)
!4813 = !DILocation(line: 1480, column: 12, scope: !4806)
!4814 = !DILocation(line: 1480, column: 23, scope: !4806)
!4815 = !DILocation(line: 1480, column: 36, scope: !4806)
!4816 = !DILocation(line: 1481, column: 20, scope: !4806)
!4817 = !DILocation(line: 1481, column: 9, scope: !4806)
!4818 = !DILocation(line: 1481, column: 12, scope: !4806)
!4819 = !DILocation(line: 1481, column: 23, scope: !4806)
!4820 = !DILocation(line: 1481, column: 32, scope: !4806)
!4821 = !DILocation(line: 1482, column: 5, scope: !4806)
!4822 = !DILocation(line: 1478, column: 38, scope: !4823)
!4823 = !DILexicalBlockFile(scope: !4800, file: !936, discriminator: 2)
!4824 = !DILocation(line: 1478, column: 5, scope: !4823)
!4825 = distinct !{!4825, !4826}
!4826 = !DILocation(line: 1478, column: 5, scope: !4641)
!4827 = !DILocation(line: 1485, column: 5, scope: !4641)
!4828 = !DILocation(line: 1485, column: 13, scope: !4829)
!4829 = !DILexicalBlockFile(scope: !4641, file: !936, discriminator: 1)
!4830 = !DILocation(line: 1485, column: 16, scope: !4829)
!4831 = !DILocation(line: 1485, column: 12, scope: !4829)
!4832 = !DILocation(line: 1485, column: 5, scope: !4829)
!4833 = !DILocation(line: 1486, column: 29, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4835, file: !936, line: 1486, column: 13)
!4835 = distinct !DILexicalBlock(scope: !4641, file: !936, line: 1485, column: 38)
!4836 = !DILocation(line: 1486, column: 13, scope: !4834)
!4837 = !DILocation(line: 1486, column: 32, scope: !4834)
!4838 = !DILocation(line: 1486, column: 13, scope: !4835)
!4839 = !DILocation(line: 1487, column: 13, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4834, file: !936, line: 1486, column: 37)
!4841 = !DILocation(line: 1487, column: 16, scope: !4840)
!4842 = !DILocation(line: 1487, column: 28, scope: !4840)
!4843 = !DILocation(line: 1488, column: 13, scope: !4840)
!4844 = !DILocation(line: 1485, column: 5, scope: !4845)
!4845 = !DILexicalBlockFile(scope: !4641, file: !936, discriminator: 2)
!4846 = distinct !{!4846, !4827}
!4847 = !DILocation(line: 1493, column: 12, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4641, file: !936, line: 1493, column: 5)
!4849 = !DILocation(line: 1493, column: 10, scope: !4848)
!4850 = !DILocation(line: 1493, column: 17, scope: !4851)
!4851 = !DILexicalBlockFile(scope: !4852, file: !936, discriminator: 1)
!4852 = distinct !DILexicalBlock(scope: !4848, file: !936, line: 1493, column: 5)
!4853 = !DILocation(line: 1493, column: 21, scope: !4851)
!4854 = !DILocation(line: 1493, column: 24, scope: !4851)
!4855 = !DILocation(line: 1493, column: 19, scope: !4851)
!4856 = !DILocation(line: 1493, column: 5, scope: !4851)
!4857 = !DILocation(line: 1494, column: 37, scope: !4852)
!4858 = !DILocation(line: 1494, column: 16, scope: !4852)
!4859 = !DILocation(line: 1494, column: 23, scope: !4852)
!4860 = !DILocation(line: 1494, column: 52, scope: !4852)
!4861 = !DILocation(line: 1494, column: 41, scope: !4852)
!4862 = !DILocation(line: 1494, column: 44, scope: !4852)
!4863 = !DILocation(line: 1494, column: 55, scope: !4852)
!4864 = !DILocation(line: 1494, column: 9, scope: !4852)
!4865 = !DILocation(line: 1495, column: 16, scope: !4852)
!4866 = !DILocation(line: 1495, column: 19, scope: !4852)
!4867 = !DILocation(line: 1495, column: 37, scope: !4852)
!4868 = !DILocation(line: 1493, column: 38, scope: !4869)
!4869 = !DILexicalBlockFile(scope: !4852, file: !936, discriminator: 2)
!4870 = !DILocation(line: 1493, column: 5, scope: !4869)
!4871 = distinct !{!4871, !4872}
!4872 = !DILocation(line: 1493, column: 5, scope: !4641)
!4873 = !DILocation(line: 1497, column: 12, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4641, file: !936, line: 1497, column: 5)
!4875 = !DILocation(line: 1497, column: 10, scope: !4874)
!4876 = !DILocation(line: 1497, column: 17, scope: !4877)
!4877 = !DILexicalBlockFile(scope: !4878, file: !936, discriminator: 1)
!4878 = distinct !DILexicalBlock(scope: !4874, file: !936, line: 1497, column: 5)
!4879 = !DILocation(line: 1497, column: 21, scope: !4877)
!4880 = !DILocation(line: 1497, column: 24, scope: !4877)
!4881 = !DILocation(line: 1497, column: 19, scope: !4877)
!4882 = !DILocation(line: 1497, column: 5, scope: !4877)
!4883 = !DILocation(line: 1499, column: 28, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4878, file: !936, line: 1497, column: 42)
!4885 = !DILocation(line: 1499, column: 17, scope: !4884)
!4886 = !DILocation(line: 1499, column: 20, scope: !4884)
!4887 = !DILocation(line: 1499, column: 31, scope: !4884)
!4888 = !DILocation(line: 1499, column: 9, scope: !4884)
!4889 = !DILocation(line: 1500, column: 35, scope: !4884)
!4890 = !DILocation(line: 1500, column: 38, scope: !4884)
!4891 = !DILocation(line: 1500, column: 17, scope: !4884)
!4892 = !DILocation(line: 1500, column: 28, scope: !4884)
!4893 = !DILocation(line: 1500, column: 20, scope: !4884)
!4894 = !DILocation(line: 1500, column: 31, scope: !4884)
!4895 = !DILocation(line: 1501, column: 16, scope: !4884)
!4896 = !DILocation(line: 1501, column: 19, scope: !4884)
!4897 = !DILocation(line: 1501, column: 37, scope: !4884)
!4898 = !DILocation(line: 1501, column: 66, scope: !4884)
!4899 = !DILocation(line: 1502, column: 5, scope: !4884)
!4900 = !DILocation(line: 1497, column: 38, scope: !4901)
!4901 = !DILexicalBlockFile(scope: !4878, file: !936, discriminator: 2)
!4902 = !DILocation(line: 1497, column: 5, scope: !4901)
!4903 = distinct !{!4903, !4904}
!4904 = !DILocation(line: 1497, column: 5, scope: !4641)
!4905 = !DILocation(line: 1504, column: 9, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4641, file: !936, line: 1504, column: 9)
!4907 = !DILocation(line: 1504, column: 12, scope: !4906)
!4908 = !DILocation(line: 1504, column: 9, scope: !4641)
!4909 = !DILocation(line: 1505, column: 9, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4906, file: !936, line: 1504, column: 24)
!4911 = !DILocation(line: 1505, column: 12, scope: !4910)
!4912 = !DILocation(line: 1505, column: 23, scope: !4910)
!4913 = !DILocation(line: 1506, column: 10, scope: !4910)
!4914 = !DILocation(line: 1506, column: 24, scope: !4910)
!4915 = !DILocation(line: 1507, column: 24, scope: !4910)
!4916 = !DILocation(line: 1507, column: 9, scope: !4910)
!4917 = !DILocation(line: 1508, column: 5, scope: !4910)
!4918 = !DILocation(line: 1509, column: 10, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4906, file: !936, line: 1508, column: 12)
!4920 = !DILocation(line: 1509, column: 24, scope: !4919)
!4921 = !DILocation(line: 1512, column: 9, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4641, file: !936, line: 1512, column: 9)
!4923 = !DILocation(line: 1512, column: 12, scope: !4922)
!4924 = !DILocation(line: 1512, column: 9, scope: !4641)
!4925 = !DILocation(line: 1513, column: 13, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4927, file: !936, line: 1513, column: 13)
!4927 = distinct !DILexicalBlock(scope: !4922, file: !936, line: 1512, column: 24)
!4928 = !DILocation(line: 1513, column: 36, scope: !4926)
!4929 = !DILocation(line: 1513, column: 21, scope: !4926)
!4930 = !DILocation(line: 1513, column: 42, scope: !4926)
!4931 = !DILocation(line: 1513, column: 45, scope: !4926)
!4932 = !DILocation(line: 1513, column: 40, scope: !4926)
!4933 = !DILocation(line: 1513, column: 59, scope: !4926)
!4934 = !DILocation(line: 1513, column: 17, scope: !4926)
!4935 = !DILocation(line: 1513, column: 13, scope: !4927)
!4936 = !DILocation(line: 1515, column: 20, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4926, file: !936, line: 1513, column: 64)
!4938 = !DILocation(line: 1515, column: 23, scope: !4937)
!4939 = !DILocation(line: 1517, column: 20, scope: !4937)
!4940 = !DILocation(line: 1517, column: 23, scope: !4937)
!4941 = !DILocation(line: 1518, column: 20, scope: !4937)
!4942 = !DILocation(line: 1518, column: 42, scope: !4937)
!4943 = !DILocation(line: 1518, column: 27, scope: !4937)
!4944 = !DILocation(line: 1518, column: 48, scope: !4937)
!4945 = !DILocation(line: 1518, column: 51, scope: !4937)
!4946 = !DILocation(line: 1518, column: 46, scope: !4937)
!4947 = !DILocation(line: 1518, column: 24, scope: !4937)
!4948 = !DILocation(line: 1518, column: 65, scope: !4937)
!4949 = !DILocation(line: 1515, column: 13, scope: !4937)
!4950 = !DILocation(line: 1519, column: 13, scope: !4937)
!4951 = !DILocation(line: 1519, column: 16, scope: !4937)
!4952 = !DILocation(line: 1519, column: 28, scope: !4937)
!4953 = !DILocation(line: 1520, column: 13, scope: !4937)
!4954 = !DILocation(line: 1524, column: 24, scope: !4927)
!4955 = !DILocation(line: 1524, column: 28, scope: !4927)
!4956 = !DILocation(line: 1524, column: 50, scope: !4927)
!4957 = !DILocation(line: 1524, column: 35, scope: !4927)
!4958 = !DILocation(line: 1524, column: 56, scope: !4927)
!4959 = !DILocation(line: 1524, column: 59, scope: !4927)
!4960 = !DILocation(line: 1524, column: 54, scope: !4927)
!4961 = !DILocation(line: 1524, column: 32, scope: !4927)
!4962 = !DILocation(line: 1524, column: 73, scope: !4927)
!4963 = !DILocation(line: 1524, column: 9, scope: !4964)
!4964 = !DILexicalBlockFile(scope: !4927, file: !936, discriminator: 1)
!4965 = !DILocation(line: 1525, column: 5, scope: !4927)
!4966 = !DILocation(line: 1526, column: 9, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4922, file: !936, line: 1525, column: 12)
!4968 = !DILocation(line: 1526, column: 31, scope: !4969)
!4969 = !DILexicalBlockFile(scope: !4967, file: !936, discriminator: 1)
!4970 = !DILocation(line: 1526, column: 16, scope: !4969)
!4971 = !DILocation(line: 1526, column: 37, scope: !4969)
!4972 = !DILocation(line: 1526, column: 40, scope: !4969)
!4973 = !DILocation(line: 1526, column: 35, scope: !4969)
!4974 = !DILocation(line: 1526, column: 55, scope: !4969)
!4975 = !DILocation(line: 1526, column: 68, scope: !4976)
!4976 = !DILexicalBlockFile(scope: !4967, file: !936, discriminator: 2)
!4977 = !DILocation(line: 1526, column: 58, scope: !4976)
!4978 = !DILocation(line: 1526, column: 72, scope: !4976)
!4979 = !DILocation(line: 1526, column: 9, scope: !4980)
!4980 = !DILexicalBlockFile(scope: !4967, file: !936, discriminator: 3)
!4981 = !DILocation(line: 1526, column: 9, scope: !4982)
!4982 = !DILexicalBlockFile(scope: !4967, file: !936, discriminator: 4)
!4983 = distinct !{!4983, !4966}
!4984 = !DILocation(line: 1531, column: 29, scope: !4641)
!4985 = !DILocation(line: 1531, column: 19, scope: !4641)
!4986 = !DILocation(line: 1531, column: 17, scope: !4641)
!4987 = !DILocation(line: 1533, column: 7, scope: !4641)
!4988 = !DILocation(line: 1533, column: 10, scope: !4641)
!4989 = !DILocation(line: 1533, column: 5, scope: !4641)
!4990 = !DILocation(line: 1534, column: 12, scope: !4641)
!4991 = !DILocation(line: 1534, column: 5, scope: !4641)
!4992 = !DILocation(line: 1535, column: 1, scope: !4641)
!4993 = distinct !DISubprogram(name: "remaining_bits", scope: !936, file: !936, line: 1543, type: !4994, isLocal: true, isDefinition: true, scopeLine: 1544, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!4994 = !DISubroutineType(types: !4995)
!4995 = !{!914, !1664, !3822}
!4996 = !DILocalVariable(name: "s", arg: 1, scope: !4993, file: !936, line: 1543, type: !1664)
!4997 = !DILocation(line: 1543, column: 44, scope: !4993)
!4998 = !DILocalVariable(name: "gb", arg: 2, scope: !4993, file: !936, line: 1543, type: !3822)
!4999 = !DILocation(line: 1543, column: 62, scope: !4993)
!5000 = !DILocation(line: 1545, column: 12, scope: !4993)
!5001 = !DILocation(line: 1545, column: 15, scope: !4993)
!5002 = !DILocation(line: 1545, column: 45, scope: !4993)
!5003 = !DILocation(line: 1545, column: 30, scope: !4993)
!5004 = !DILocation(line: 1545, column: 28, scope: !4993)
!5005 = !DILocation(line: 1545, column: 5, scope: !4993)
!5006 = distinct !DISubprogram(name: "show_bits", scope: !1808, file: !1808, line: 443, type: !4350, isLocal: true, isDefinition: true, scopeLine: 444, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!5007 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !5008)
!5008 = distinct !DILocation(line: 454, column: 16, scope: !5006)
!5009 = !DILocalVariable(name: "s", arg: 1, scope: !5006, file: !1808, line: 443, type: !3822)
!5010 = !DILocation(line: 443, column: 53, scope: !5006)
!5011 = !DILocalVariable(name: "n", arg: 2, scope: !5006, file: !1808, line: 443, type: !914)
!5012 = !DILocation(line: 443, column: 60, scope: !5006)
!5013 = !DILocalVariable(name: "tmp", scope: !5006, file: !1808, line: 445, type: !914)
!5014 = !DILocation(line: 445, column: 18, scope: !5006)
!5015 = !DILocalVariable(name: "re_index", scope: !5006, file: !1808, line: 452, type: !913)
!5016 = !DILocation(line: 452, column: 18, scope: !5006)
!5017 = !DILocation(line: 452, column: 30, scope: !5006)
!5018 = !DILocation(line: 452, column: 34, scope: !5006)
!5019 = !DILocalVariable(name: "re_cache", scope: !5006, file: !1808, line: 452, type: !913)
!5020 = !DILocation(line: 452, column: 78, scope: !5006)
!5021 = !DILocation(line: 454, column: 60, scope: !5006)
!5022 = !DILocation(line: 454, column: 64, scope: !5006)
!5023 = !DILocation(line: 454, column: 74, scope: !5006)
!5024 = !DILocation(line: 454, column: 83, scope: !5006)
!5025 = !DILocation(line: 454, column: 71, scope: !5006)
!5026 = !DILocation(line: 454, column: 92, scope: !5006)
!5027 = !DILocation(line: 454, column: 16, scope: !5006)
!5028 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !5008)
!5029 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !5008)
!5030 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !5008)
!5031 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !5008)
!5032 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !5008)
!5033 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !5008)
!5034 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !5008)
!5035 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !5008)
!5036 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !5008)
!5037 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !5008)
!5038 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !5008)
!5039 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !5008)
!5040 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !5008)
!5041 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !5008)
!5042 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !5008)
!5043 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !5008)
!5044 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !5008)
!5045 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !5008)
!5046 = !DILocation(line: 454, column: 100, scope: !5006)
!5047 = !DILocation(line: 454, column: 109, scope: !5006)
!5048 = !DILocation(line: 454, column: 96, scope: !5006)
!5049 = !DILocation(line: 454, column: 14, scope: !5006)
!5050 = !DILocation(line: 455, column: 21, scope: !5006)
!5051 = !DILocation(line: 455, column: 31, scope: !5006)
!5052 = !DILocation(line: 455, column: 11, scope: !5006)
!5053 = !DILocation(line: 455, column: 9, scope: !5006)
!5054 = !DILocation(line: 457, column: 12, scope: !5006)
!5055 = !DILocation(line: 457, column: 5, scope: !5006)
!5056 = distinct !DISubprogram(name: "NEG_USR32", scope: !5057, file: !5057, line: 124, type: !5058, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!5057 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5058 = !DISubroutineType(types: !5059)
!5059 = !{!912, !912, !1136}
!5060 = !DILocalVariable(name: "a", arg: 1, scope: !5056, file: !5057, line: 124, type: !912)
!5061 = !DILocation(line: 124, column: 43, scope: !5056)
!5062 = !DILocalVariable(name: "s", arg: 2, scope: !5056, file: !5057, line: 124, type: !1136)
!5063 = !DILocation(line: 124, column: 53, scope: !5056)
!5064 = !DILocation(line: 125, column: 5, scope: !5056)
!5065 = !DILocation(line: 127, column: 29, scope: !5056)
!5066 = !DILocation(line: 127, column: 28, scope: !5056)
!5067 = !DILocation(line: 127, column: 18, scope: !5056)
!5068 = !{i32 185993, i32 186007}
!5069 = !DILocation(line: 129, column: 12, scope: !5056)
!5070 = !DILocation(line: 129, column: 5, scope: !5056)
!5071 = distinct !DISubprogram(name: "put_bits_count", scope: !1721, file: !1721, line: 85, type: !5072, isLocal: true, isDefinition: true, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!5072 = !DISubroutineType(types: !5073)
!5073 = !{!914, !3692}
!5074 = !DILocalVariable(name: "s", arg: 1, scope: !5071, file: !1721, line: 85, type: !3692)
!5075 = !DILocation(line: 85, column: 49, scope: !5071)
!5076 = !DILocation(line: 87, column: 13, scope: !5071)
!5077 = !DILocation(line: 87, column: 16, scope: !5071)
!5078 = !DILocation(line: 87, column: 26, scope: !5071)
!5079 = !DILocation(line: 87, column: 29, scope: !5071)
!5080 = !DILocation(line: 87, column: 24, scope: !5071)
!5081 = !DILocation(line: 87, column: 34, scope: !5071)
!5082 = !DILocation(line: 87, column: 38, scope: !5071)
!5083 = !DILocation(line: 87, column: 45, scope: !5071)
!5084 = !DILocation(line: 87, column: 48, scope: !5071)
!5085 = !DILocation(line: 87, column: 43, scope: !5071)
!5086 = !DILocation(line: 87, column: 12, scope: !5071)
!5087 = !DILocation(line: 87, column: 5, scope: !5071)
!5088 = distinct !DISubprogram(name: "put_bits_left", scope: !1721, file: !1721, line: 93, type: !5072, isLocal: true, isDefinition: true, scopeLine: 94, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!5089 = !DILocalVariable(name: "s", arg: 1, scope: !5088, file: !1721, line: 93, type: !3692)
!5090 = !DILocation(line: 93, column: 48, scope: !5088)
!5091 = !DILocation(line: 95, column: 13, scope: !5088)
!5092 = !DILocation(line: 95, column: 16, scope: !5088)
!5093 = !DILocation(line: 95, column: 26, scope: !5088)
!5094 = !DILocation(line: 95, column: 29, scope: !5088)
!5095 = !DILocation(line: 95, column: 24, scope: !5088)
!5096 = !DILocation(line: 95, column: 38, scope: !5088)
!5097 = !DILocation(line: 95, column: 42, scope: !5088)
!5098 = !DILocation(line: 95, column: 49, scope: !5088)
!5099 = !DILocation(line: 95, column: 52, scope: !5088)
!5100 = !DILocation(line: 95, column: 47, scope: !5088)
!5101 = !DILocation(line: 95, column: 12, scope: !5088)
!5102 = !DILocation(line: 95, column: 5, scope: !5088)
!5103 = distinct !DISubprogram(name: "put_bits", scope: !1721, file: !1721, line: 164, type: !5104, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!5104 = !DISubroutineType(types: !5105)
!5105 = !{null, !3692, !914, !913}
!5106 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !5107)
!5107 = distinct !DILocation(line: 197, column: 60, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5109, file: !1721, line: 196, column: 42)
!5109 = distinct !DILexicalBlock(scope: !5110, file: !1721, line: 196, column: 13)
!5110 = distinct !DILexicalBlock(scope: !5111, file: !1721, line: 193, column: 12)
!5111 = distinct !DILexicalBlock(scope: !5103, file: !1721, line: 190, column: 9)
!5112 = !DILocalVariable(name: "s", arg: 1, scope: !5103, file: !1721, line: 164, type: !3692)
!5113 = !DILocation(line: 164, column: 44, scope: !5103)
!5114 = !DILocalVariable(name: "n", arg: 2, scope: !5103, file: !1721, line: 164, type: !914)
!5115 = !DILocation(line: 164, column: 51, scope: !5103)
!5116 = !DILocalVariable(name: "value", arg: 3, scope: !5103, file: !1721, line: 164, type: !913)
!5117 = !DILocation(line: 164, column: 67, scope: !5103)
!5118 = !DILocalVariable(name: "bit_buf", scope: !5103, file: !1721, line: 166, type: !913)
!5119 = !DILocation(line: 166, column: 18, scope: !5103)
!5120 = !DILocalVariable(name: "bit_left", scope: !5103, file: !1721, line: 167, type: !914)
!5121 = !DILocation(line: 167, column: 9, scope: !5103)
!5122 = !DILocation(line: 171, column: 15, scope: !5103)
!5123 = !DILocation(line: 171, column: 18, scope: !5103)
!5124 = !DILocation(line: 171, column: 13, scope: !5103)
!5125 = !DILocation(line: 172, column: 16, scope: !5103)
!5126 = !DILocation(line: 172, column: 19, scope: !5103)
!5127 = !DILocation(line: 172, column: 14, scope: !5103)
!5128 = !DILocation(line: 190, column: 9, scope: !5111)
!5129 = !DILocation(line: 190, column: 13, scope: !5111)
!5130 = !DILocation(line: 190, column: 11, scope: !5111)
!5131 = !DILocation(line: 190, column: 9, scope: !5103)
!5132 = !DILocation(line: 191, column: 20, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5111, file: !1721, line: 190, column: 23)
!5134 = !DILocation(line: 191, column: 31, scope: !5133)
!5135 = !DILocation(line: 191, column: 28, scope: !5133)
!5136 = !DILocation(line: 191, column: 36, scope: !5133)
!5137 = !DILocation(line: 191, column: 34, scope: !5133)
!5138 = !DILocation(line: 191, column: 17, scope: !5133)
!5139 = !DILocation(line: 192, column: 21, scope: !5133)
!5140 = !DILocation(line: 192, column: 18, scope: !5133)
!5141 = !DILocation(line: 193, column: 5, scope: !5133)
!5142 = !DILocation(line: 194, column: 21, scope: !5110)
!5143 = !DILocation(line: 194, column: 17, scope: !5110)
!5144 = !DILocation(line: 195, column: 20, scope: !5110)
!5145 = !DILocation(line: 195, column: 30, scope: !5110)
!5146 = !DILocation(line: 195, column: 34, scope: !5110)
!5147 = !DILocation(line: 195, column: 32, scope: !5110)
!5148 = !DILocation(line: 195, column: 26, scope: !5110)
!5149 = !DILocation(line: 195, column: 17, scope: !5110)
!5150 = !DILocation(line: 196, column: 17, scope: !5109)
!5151 = !DILocation(line: 196, column: 20, scope: !5109)
!5152 = !DILocation(line: 196, column: 30, scope: !5109)
!5153 = !DILocation(line: 196, column: 33, scope: !5109)
!5154 = !DILocation(line: 196, column: 28, scope: !5109)
!5155 = !DILocation(line: 196, column: 15, scope: !5109)
!5156 = !DILocation(line: 196, column: 13, scope: !5110)
!5157 = !DILocation(line: 197, column: 71, scope: !5108)
!5158 = !DILocation(line: 197, column: 60, scope: !5108)
!5159 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !5107)
!5160 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !5107)
!5161 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !5107)
!5162 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !5107)
!5163 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !5107)
!5164 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !5107)
!5165 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !5107)
!5166 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !5107)
!5167 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !5107)
!5168 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !5107)
!5169 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !5107)
!5170 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !5107)
!5171 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !5107)
!5172 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !5107)
!5173 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !5107)
!5174 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !5107)
!5175 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !5107)
!5176 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !5107)
!5177 = !DILocation(line: 197, column: 40, scope: !5108)
!5178 = !DILocation(line: 197, column: 43, scope: !5108)
!5179 = !DILocation(line: 197, column: 54, scope: !5108)
!5180 = !DILocation(line: 197, column: 57, scope: !5108)
!5181 = !DILocation(line: 198, column: 13, scope: !5108)
!5182 = !DILocation(line: 198, column: 16, scope: !5108)
!5183 = !DILocation(line: 198, column: 24, scope: !5108)
!5184 = !DILocation(line: 199, column: 9, scope: !5108)
!5185 = !DILocation(line: 200, column: 13, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5109, file: !1721, line: 199, column: 16)
!5187 = !DILocation(line: 203, column: 26, scope: !5110)
!5188 = !DILocation(line: 203, column: 24, scope: !5110)
!5189 = !DILocation(line: 203, column: 18, scope: !5110)
!5190 = !DILocation(line: 204, column: 19, scope: !5110)
!5191 = !DILocation(line: 204, column: 17, scope: !5110)
!5192 = !DILocation(line: 208, column: 18, scope: !5103)
!5193 = !DILocation(line: 208, column: 5, scope: !5103)
!5194 = !DILocation(line: 208, column: 8, scope: !5103)
!5195 = !DILocation(line: 208, column: 16, scope: !5103)
!5196 = !DILocation(line: 209, column: 19, scope: !5103)
!5197 = !DILocation(line: 209, column: 5, scope: !5103)
!5198 = !DILocation(line: 209, column: 8, scope: !5103)
!5199 = !DILocation(line: 209, column: 17, scope: !5103)
!5200 = !DILocation(line: 210, column: 1, scope: !5103)
!5201 = distinct !DISubprogram(name: "skip_bits_long", scope: !1808, file: !1808, line: 293, type: !4432, isLocal: true, isDefinition: true, scopeLine: 294, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!5202 = !DILocation(line: 127, column: 87, scope: !2767, inlinedAt: !5203)
!5203 = distinct !DILocation(line: 301, column: 17, scope: !5201)
!5204 = !DILocation(line: 127, column: 94, scope: !2767, inlinedAt: !5203)
!5205 = !DILocation(line: 127, column: 104, scope: !2767, inlinedAt: !5203)
!5206 = !DILocalVariable(name: "s", arg: 1, scope: !5201, file: !1808, line: 293, type: !3822)
!5207 = !DILocation(line: 293, column: 50, scope: !5201)
!5208 = !DILocalVariable(name: "n", arg: 2, scope: !5201, file: !1808, line: 293, type: !914)
!5209 = !DILocation(line: 293, column: 57, scope: !5201)
!5210 = !DILocation(line: 301, column: 27, scope: !5201)
!5211 = !DILocation(line: 301, column: 31, scope: !5201)
!5212 = !DILocation(line: 301, column: 34, scope: !5201)
!5213 = !DILocation(line: 301, column: 30, scope: !5201)
!5214 = !DILocation(line: 301, column: 41, scope: !5201)
!5215 = !DILocation(line: 301, column: 44, scope: !5201)
!5216 = !DILocation(line: 301, column: 65, scope: !5201)
!5217 = !DILocation(line: 301, column: 68, scope: !5201)
!5218 = !DILocation(line: 301, column: 63, scope: !5201)
!5219 = !DILocation(line: 301, column: 17, scope: !5201)
!5220 = !DILocation(line: 132, column: 9, scope: !3628, inlinedAt: !5203)
!5221 = !DILocation(line: 132, column: 13, scope: !3628, inlinedAt: !5203)
!5222 = !DILocation(line: 132, column: 11, scope: !3628, inlinedAt: !5203)
!5223 = !DILocation(line: 132, column: 9, scope: !2767, inlinedAt: !5203)
!5224 = !DILocation(line: 132, column: 26, scope: !3633, inlinedAt: !5203)
!5225 = !DILocation(line: 132, column: 19, scope: !3633, inlinedAt: !5203)
!5226 = !DILocation(line: 133, column: 14, scope: !3636, inlinedAt: !5203)
!5227 = !DILocation(line: 133, column: 18, scope: !3636, inlinedAt: !5203)
!5228 = !DILocation(line: 133, column: 16, scope: !3636, inlinedAt: !5203)
!5229 = !DILocation(line: 133, column: 14, scope: !3628, inlinedAt: !5203)
!5230 = !DILocation(line: 133, column: 31, scope: !3641, inlinedAt: !5203)
!5231 = !DILocation(line: 133, column: 24, scope: !3641, inlinedAt: !5203)
!5232 = !DILocation(line: 134, column: 17, scope: !3636, inlinedAt: !5203)
!5233 = !DILocation(line: 134, column: 10, scope: !3636, inlinedAt: !5203)
!5234 = !DILocation(line: 135, column: 1, scope: !2767, inlinedAt: !5203)
!5235 = !DILocation(line: 301, column: 5, scope: !5201)
!5236 = !DILocation(line: 301, column: 8, scope: !5201)
!5237 = !DILocation(line: 301, column: 14, scope: !5201)
!5238 = !DILocation(line: 304, column: 1, scope: !5201)
!5239 = distinct !DISubprogram(name: "flush_put_bits", scope: !1721, file: !1721, line: 101, type: !5240, isLocal: true, isDefinition: true, scopeLine: 102, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!5240 = !DISubroutineType(types: !5241)
!5241 = !{null, !3692}
!5242 = !DILocalVariable(name: "s", arg: 1, scope: !5239, file: !1721, line: 101, type: !3692)
!5243 = !DILocation(line: 101, column: 50, scope: !5239)
!5244 = !DILocation(line: 104, column: 9, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5239, file: !1721, line: 104, column: 9)
!5246 = !DILocation(line: 104, column: 12, scope: !5245)
!5247 = !DILocation(line: 104, column: 21, scope: !5245)
!5248 = !DILocation(line: 104, column: 9, scope: !5239)
!5249 = !DILocation(line: 105, column: 24, scope: !5245)
!5250 = !DILocation(line: 105, column: 27, scope: !5245)
!5251 = !DILocation(line: 105, column: 9, scope: !5245)
!5252 = !DILocation(line: 105, column: 12, scope: !5245)
!5253 = !DILocation(line: 105, column: 20, scope: !5245)
!5254 = !DILocation(line: 107, column: 5, scope: !5239)
!5255 = !DILocation(line: 107, column: 12, scope: !5256)
!5256 = !DILexicalBlockFile(scope: !5239, file: !1721, discriminator: 1)
!5257 = !DILocation(line: 107, column: 15, scope: !5256)
!5258 = !DILocation(line: 107, column: 24, scope: !5256)
!5259 = !DILocation(line: 107, column: 5, scope: !5256)
!5260 = !DILocation(line: 108, column: 9, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5239, file: !1721, line: 107, column: 30)
!5262 = distinct !{!5262, !5260}
!5263 = !DILocation(line: 108, column: 20, scope: !5264)
!5264 = !DILexicalBlockFile(scope: !5265, file: !1721, discriminator: 1)
!5265 = distinct !DILexicalBlock(scope: !5266, file: !1721, line: 108, column: 18)
!5266 = distinct !DILexicalBlock(scope: !5261, file: !1721, line: 108, column: 12)
!5267 = !DILocation(line: 108, column: 23, scope: !5264)
!5268 = !DILocation(line: 108, column: 33, scope: !5264)
!5269 = !DILocation(line: 108, column: 36, scope: !5264)
!5270 = !DILocation(line: 108, column: 31, scope: !5264)
!5271 = !DILocation(line: 108, column: 18, scope: !5264)
!5272 = !DILocation(line: 108, column: 48, scope: !5273)
!5273 = !DILexicalBlockFile(scope: !5274, file: !1721, discriminator: 2)
!5274 = distinct !DILexicalBlock(scope: !5265, file: !1721, line: 108, column: 46)
!5275 = !DILocation(line: 108, column: 105, scope: !5276)
!5276 = !DILexicalBlockFile(scope: !5273, file: !1721, discriminator: 4)
!5277 = !DILocation(line: 108, column: 105, scope: !5273)
!5278 = !DILocation(line: 108, column: 116, scope: !5279)
!5279 = !DILexicalBlockFile(scope: !5266, file: !1721, discriminator: 3)
!5280 = !DILocation(line: 113, column: 25, scope: !5261)
!5281 = !DILocation(line: 113, column: 28, scope: !5261)
!5282 = !DILocation(line: 113, column: 36, scope: !5261)
!5283 = !DILocation(line: 113, column: 10, scope: !5261)
!5284 = !DILocation(line: 113, column: 13, scope: !5261)
!5285 = !DILocation(line: 113, column: 20, scope: !5261)
!5286 = !DILocation(line: 113, column: 23, scope: !5261)
!5287 = !DILocation(line: 114, column: 9, scope: !5261)
!5288 = !DILocation(line: 114, column: 12, scope: !5261)
!5289 = !DILocation(line: 114, column: 20, scope: !5261)
!5290 = !DILocation(line: 116, column: 9, scope: !5261)
!5291 = !DILocation(line: 116, column: 12, scope: !5261)
!5292 = !DILocation(line: 116, column: 21, scope: !5261)
!5293 = !DILocation(line: 107, column: 5, scope: !5294)
!5294 = !DILexicalBlockFile(scope: !5239, file: !1721, discriminator: 2)
!5295 = distinct !{!5295, !5254}
!5296 = !DILocation(line: 118, column: 5, scope: !5239)
!5297 = !DILocation(line: 118, column: 8, scope: !5239)
!5298 = !DILocation(line: 118, column: 17, scope: !5239)
!5299 = !DILocation(line: 119, column: 5, scope: !5239)
!5300 = !DILocation(line: 119, column: 8, scope: !5239)
!5301 = !DILocation(line: 119, column: 16, scope: !5239)
!5302 = !DILocation(line: 120, column: 1, scope: !5239)
!5303 = distinct !DISubprogram(name: "decode_tilehdr", scope: !936, file: !936, line: 645, type: !5304, isLocal: true, isDefinition: true, scopeLine: 646, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!5304 = !DISubroutineType(types: !5305)
!5305 = !{!914, !1664}
!5306 = !DILocalVariable(name: "s", arg: 1, scope: !5303, file: !936, line: 645, type: !1664)
!5307 = !DILocation(line: 645, column: 44, scope: !5303)
!5308 = !DILocalVariable(name: "num_samples", scope: !5303, file: !936, line: 647, type: !5309)
!5309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 128, align: 16, elements: !1058)
!5310 = !DILocation(line: 647, column: 14, scope: !5303)
!5311 = !DILocalVariable(name: "contains_subframe", scope: !5303, file: !936, line: 648, type: !5312)
!5312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 64, align: 8, elements: !1058)
!5313 = !DILocation(line: 648, column: 13, scope: !5303)
!5314 = !DILocalVariable(name: "channels_for_cur_subframe", scope: !5303, file: !936, line: 649, type: !914)
!5315 = !DILocation(line: 649, column: 9, scope: !5303)
!5316 = !DILocation(line: 649, column: 37, scope: !5303)
!5317 = !DILocation(line: 649, column: 40, scope: !5303)
!5318 = !DILocalVariable(name: "fixed_channel_layout", scope: !5303, file: !936, line: 650, type: !914)
!5319 = !DILocation(line: 650, column: 9, scope: !5303)
!5320 = !DILocalVariable(name: "min_channel_len", scope: !5303, file: !936, line: 651, type: !914)
!5321 = !DILocation(line: 651, column: 9, scope: !5303)
!5322 = !DILocalVariable(name: "c", scope: !5303, file: !936, line: 652, type: !914)
!5323 = !DILocation(line: 652, column: 9, scope: !5303)
!5324 = !DILocation(line: 661, column: 12, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5303, file: !936, line: 661, column: 5)
!5326 = !DILocation(line: 661, column: 10, scope: !5325)
!5327 = !DILocation(line: 661, column: 17, scope: !5328)
!5328 = !DILexicalBlockFile(scope: !5329, file: !936, discriminator: 1)
!5329 = distinct !DILexicalBlock(scope: !5325, file: !936, line: 661, column: 5)
!5330 = !DILocation(line: 661, column: 21, scope: !5328)
!5331 = !DILocation(line: 661, column: 24, scope: !5328)
!5332 = !DILocation(line: 661, column: 19, scope: !5328)
!5333 = !DILocation(line: 661, column: 5, scope: !5328)
!5334 = !DILocation(line: 662, column: 20, scope: !5329)
!5335 = !DILocation(line: 662, column: 9, scope: !5329)
!5336 = !DILocation(line: 662, column: 12, scope: !5329)
!5337 = !DILocation(line: 662, column: 23, scope: !5329)
!5338 = !DILocation(line: 662, column: 37, scope: !5329)
!5339 = !DILocation(line: 661, column: 38, scope: !5340)
!5340 = !DILexicalBlockFile(scope: !5329, file: !936, discriminator: 2)
!5341 = !DILocation(line: 661, column: 5, scope: !5340)
!5342 = distinct !{!5342, !5343}
!5343 = !DILocation(line: 661, column: 5, scope: !5303)
!5344 = !DILocation(line: 664, column: 9, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5303, file: !936, line: 664, column: 9)
!5346 = !DILocation(line: 664, column: 12, scope: !5345)
!5347 = !DILocation(line: 664, column: 30, scope: !5345)
!5348 = !DILocation(line: 664, column: 35, scope: !5345)
!5349 = !DILocation(line: 664, column: 49, scope: !5350)
!5350 = !DILexicalBlockFile(scope: !5345, file: !936, discriminator: 1)
!5351 = !DILocation(line: 664, column: 52, scope: !5350)
!5352 = !DILocation(line: 664, column: 38, scope: !5350)
!5353 = !DILocation(line: 664, column: 9, scope: !5350)
!5354 = !DILocation(line: 665, column: 30, scope: !5345)
!5355 = !DILocation(line: 665, column: 9, scope: !5345)
!5356 = !DILocation(line: 668, column: 5, scope: !5303)
!5357 = distinct !{!5357, !5356}
!5358 = !DILocalVariable(name: "subframe_len", scope: !5359, file: !936, line: 669, type: !914)
!5359 = distinct !DILexicalBlock(scope: !5303, file: !936, line: 668, column: 8)
!5360 = !DILocation(line: 669, column: 13, scope: !5359)
!5361 = !DILocation(line: 672, column: 16, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5359, file: !936, line: 672, column: 9)
!5363 = !DILocation(line: 672, column: 14, scope: !5362)
!5364 = !DILocation(line: 672, column: 21, scope: !5365)
!5365 = !DILexicalBlockFile(scope: !5366, file: !936, discriminator: 1)
!5366 = distinct !DILexicalBlock(scope: !5362, file: !936, line: 672, column: 9)
!5367 = !DILocation(line: 672, column: 25, scope: !5365)
!5368 = !DILocation(line: 672, column: 28, scope: !5365)
!5369 = !DILocation(line: 672, column: 23, scope: !5365)
!5370 = !DILocation(line: 672, column: 9, scope: !5365)
!5371 = !DILocation(line: 673, column: 29, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5373, file: !936, line: 673, column: 17)
!5373 = distinct !DILexicalBlock(scope: !5366, file: !936, line: 672, column: 46)
!5374 = !DILocation(line: 673, column: 17, scope: !5372)
!5375 = !DILocation(line: 673, column: 35, scope: !5372)
!5376 = !DILocation(line: 673, column: 32, scope: !5372)
!5377 = !DILocation(line: 673, column: 17, scope: !5373)
!5378 = !DILocation(line: 674, column: 21, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5380, file: !936, line: 674, column: 21)
!5380 = distinct !DILexicalBlock(scope: !5372, file: !936, line: 673, column: 52)
!5381 = !DILocation(line: 674, column: 42, scope: !5379)
!5382 = !DILocation(line: 674, column: 45, scope: !5383)
!5383 = !DILexicalBlockFile(scope: !5379, file: !936, discriminator: 1)
!5384 = !DILocation(line: 674, column: 71, scope: !5383)
!5385 = !DILocation(line: 674, column: 76, scope: !5383)
!5386 = !DILocation(line: 675, column: 21, scope: !5379)
!5387 = !DILocation(line: 675, column: 40, scope: !5379)
!5388 = !DILocation(line: 675, column: 43, scope: !5379)
!5389 = !DILocation(line: 675, column: 63, scope: !5379)
!5390 = !DILocation(line: 675, column: 66, scope: !5379)
!5391 = !DILocation(line: 675, column: 61, scope: !5379)
!5392 = !DILocation(line: 675, column: 37, scope: !5379)
!5393 = !DILocation(line: 674, column: 21, scope: !5394)
!5394 = !DILexicalBlockFile(scope: !5380, file: !936, discriminator: 2)
!5395 = !DILocation(line: 676, column: 39, scope: !5379)
!5396 = !DILocation(line: 676, column: 21, scope: !5379)
!5397 = !DILocation(line: 676, column: 42, scope: !5379)
!5398 = !DILocation(line: 678, column: 55, scope: !5379)
!5399 = !DILocation(line: 678, column: 58, scope: !5379)
!5400 = !DILocation(line: 678, column: 44, scope: !5379)
!5401 = !DILocation(line: 678, column: 39, scope: !5379)
!5402 = !DILocation(line: 678, column: 21, scope: !5379)
!5403 = !DILocation(line: 678, column: 42, scope: !5379)
!5404 = !DILocation(line: 679, column: 13, scope: !5380)
!5405 = !DILocation(line: 680, column: 35, scope: !5372)
!5406 = !DILocation(line: 680, column: 17, scope: !5372)
!5407 = !DILocation(line: 680, column: 38, scope: !5372)
!5408 = !DILocation(line: 681, column: 9, scope: !5373)
!5409 = !DILocation(line: 672, column: 42, scope: !5410)
!5410 = !DILexicalBlockFile(scope: !5366, file: !936, discriminator: 2)
!5411 = !DILocation(line: 672, column: 9, scope: !5410)
!5412 = distinct !{!5412, !5413}
!5413 = !DILocation(line: 672, column: 9, scope: !5359)
!5414 = !DILocation(line: 684, column: 52, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5359, file: !936, line: 684, column: 13)
!5416 = !DILocation(line: 684, column: 55, scope: !5415)
!5417 = !DILocation(line: 684, column: 29, scope: !5415)
!5418 = !DILocation(line: 684, column: 27, scope: !5415)
!5419 = !DILocation(line: 684, column: 73, scope: !5415)
!5420 = !DILocation(line: 684, column: 13, scope: !5359)
!5421 = !DILocation(line: 685, column: 13, scope: !5415)
!5422 = !DILocation(line: 688, column: 28, scope: !5359)
!5423 = !DILocation(line: 688, column: 25, scope: !5359)
!5424 = !DILocation(line: 689, column: 16, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5359, file: !936, line: 689, column: 9)
!5426 = !DILocation(line: 689, column: 14, scope: !5425)
!5427 = !DILocation(line: 689, column: 21, scope: !5428)
!5428 = !DILexicalBlockFile(scope: !5429, file: !936, discriminator: 1)
!5429 = distinct !DILexicalBlock(scope: !5425, file: !936, line: 689, column: 9)
!5430 = !DILocation(line: 689, column: 25, scope: !5428)
!5431 = !DILocation(line: 689, column: 28, scope: !5428)
!5432 = !DILocation(line: 689, column: 23, scope: !5428)
!5433 = !DILocation(line: 689, column: 9, scope: !5428)
!5434 = !DILocalVariable(name: "chan", scope: !5435, file: !936, line: 690, type: !5436)
!5435 = distinct !DILexicalBlock(scope: !5429, file: !936, line: 689, column: 46)
!5436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64, align: 64)
!5437 = !DILocation(line: 690, column: 31, scope: !5435)
!5438 = !DILocation(line: 690, column: 50, scope: !5435)
!5439 = !DILocation(line: 690, column: 39, scope: !5435)
!5440 = !DILocation(line: 690, column: 42, scope: !5435)
!5441 = !DILocation(line: 692, column: 35, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5435, file: !936, line: 692, column: 17)
!5443 = !DILocation(line: 692, column: 17, scope: !5442)
!5444 = !DILocation(line: 692, column: 17, scope: !5435)
!5445 = !DILocation(line: 693, column: 21, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5447, file: !936, line: 693, column: 21)
!5447 = distinct !DILexicalBlock(scope: !5442, file: !936, line: 692, column: 39)
!5448 = !DILocation(line: 693, column: 27, scope: !5446)
!5449 = !DILocation(line: 693, column: 41, scope: !5446)
!5450 = !DILocation(line: 693, column: 21, scope: !5447)
!5451 = !DILocation(line: 694, column: 28, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5446, file: !936, line: 693, column: 48)
!5453 = !DILocation(line: 694, column: 31, scope: !5452)
!5454 = !DILocation(line: 694, column: 21, scope: !5452)
!5455 = !DILocation(line: 696, column: 21, scope: !5452)
!5456 = !DILocation(line: 698, column: 59, scope: !5447)
!5457 = !DILocation(line: 698, column: 36, scope: !5447)
!5458 = !DILocation(line: 698, column: 42, scope: !5447)
!5459 = !DILocation(line: 698, column: 17, scope: !5447)
!5460 = !DILocation(line: 698, column: 23, scope: !5447)
!5461 = !DILocation(line: 698, column: 57, scope: !5447)
!5462 = !DILocation(line: 699, column: 35, scope: !5447)
!5463 = !DILocation(line: 699, column: 29, scope: !5447)
!5464 = !DILocation(line: 699, column: 17, scope: !5447)
!5465 = !DILocation(line: 699, column: 32, scope: !5447)
!5466 = !DILocation(line: 700, column: 19, scope: !5447)
!5467 = !DILocation(line: 700, column: 25, scope: !5447)
!5468 = !DILocation(line: 700, column: 17, scope: !5447)
!5469 = !DILocation(line: 701, column: 33, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5447, file: !936, line: 701, column: 21)
!5471 = !DILocation(line: 701, column: 21, scope: !5470)
!5472 = !DILocation(line: 701, column: 38, scope: !5470)
!5473 = !DILocation(line: 701, column: 41, scope: !5470)
!5474 = !DILocation(line: 701, column: 36, scope: !5470)
!5475 = !DILocation(line: 701, column: 21, scope: !5447)
!5476 = !DILocation(line: 702, column: 28, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5470, file: !936, line: 701, column: 60)
!5478 = !DILocation(line: 702, column: 31, scope: !5477)
!5479 = !DILocation(line: 702, column: 21, scope: !5477)
!5480 = !DILocation(line: 704, column: 21, scope: !5477)
!5481 = !DILocation(line: 706, column: 13, scope: !5447)
!5482 = !DILocation(line: 706, column: 36, scope: !5483)
!5483 = !DILexicalBlockFile(scope: !5484, file: !936, discriminator: 1)
!5484 = distinct !DILexicalBlock(scope: !5442, file: !936, line: 706, column: 24)
!5485 = !DILocation(line: 706, column: 24, scope: !5483)
!5486 = !DILocation(line: 706, column: 42, scope: !5483)
!5487 = !DILocation(line: 706, column: 39, scope: !5483)
!5488 = !DILocation(line: 707, column: 33, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5490, file: !936, line: 707, column: 21)
!5490 = distinct !DILexicalBlock(scope: !5484, file: !936, line: 706, column: 59)
!5491 = !DILocation(line: 707, column: 21, scope: !5489)
!5492 = !DILocation(line: 707, column: 38, scope: !5489)
!5493 = !DILocation(line: 707, column: 36, scope: !5489)
!5494 = !DILocation(line: 707, column: 21, scope: !5490)
!5495 = !DILocation(line: 708, column: 47, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5489, file: !936, line: 707, column: 55)
!5497 = !DILocation(line: 709, column: 51, scope: !5496)
!5498 = !DILocation(line: 709, column: 39, scope: !5496)
!5499 = !DILocation(line: 709, column: 37, scope: !5496)
!5500 = !DILocation(line: 710, column: 17, scope: !5496)
!5501 = !DILocation(line: 711, column: 17, scope: !5490)
!5502 = !DILocation(line: 712, column: 13, scope: !5490)
!5503 = !DILocation(line: 713, column: 9, scope: !5435)
!5504 = !DILocation(line: 689, column: 42, scope: !5505)
!5505 = !DILexicalBlockFile(scope: !5429, file: !936, discriminator: 2)
!5506 = !DILocation(line: 689, column: 9, scope: !5505)
!5507 = distinct !{!5507, !5508}
!5508 = !DILocation(line: 689, column: 9, scope: !5359)
!5509 = !DILocation(line: 714, column: 5, scope: !5359)
!5510 = !DILocation(line: 714, column: 14, scope: !5511)
!5511 = !DILexicalBlockFile(scope: !5303, file: !936, discriminator: 1)
!5512 = !DILocation(line: 714, column: 32, scope: !5511)
!5513 = !DILocation(line: 714, column: 35, scope: !5511)
!5514 = !DILocation(line: 714, column: 30, scope: !5511)
!5515 = !DILocation(line: 714, column: 5, scope: !5511)
!5516 = !DILocation(line: 716, column: 12, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5303, file: !936, line: 716, column: 5)
!5518 = !DILocation(line: 716, column: 10, scope: !5517)
!5519 = !DILocation(line: 716, column: 17, scope: !5520)
!5520 = !DILexicalBlockFile(scope: !5521, file: !936, discriminator: 1)
!5521 = distinct !DILexicalBlock(scope: !5517, file: !936, line: 716, column: 5)
!5522 = !DILocation(line: 716, column: 21, scope: !5520)
!5523 = !DILocation(line: 716, column: 24, scope: !5520)
!5524 = !DILocation(line: 716, column: 19, scope: !5520)
!5525 = !DILocation(line: 716, column: 5, scope: !5520)
!5526 = !DILocalVariable(name: "i", scope: !5527, file: !936, line: 717, type: !914)
!5527 = distinct !DILexicalBlock(scope: !5521, file: !936, line: 716, column: 42)
!5528 = !DILocation(line: 717, column: 13, scope: !5527)
!5529 = !DILocalVariable(name: "offset", scope: !5527, file: !936, line: 718, type: !914)
!5530 = !DILocation(line: 718, column: 13, scope: !5527)
!5531 = !DILocation(line: 719, column: 16, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5527, file: !936, line: 719, column: 9)
!5533 = !DILocation(line: 719, column: 14, scope: !5532)
!5534 = !DILocation(line: 719, column: 21, scope: !5535)
!5535 = !DILexicalBlockFile(scope: !5536, file: !936, discriminator: 1)
!5536 = distinct !DILexicalBlock(scope: !5532, file: !936, line: 719, column: 9)
!5537 = !DILocation(line: 719, column: 36, scope: !5535)
!5538 = !DILocation(line: 719, column: 25, scope: !5535)
!5539 = !DILocation(line: 719, column: 28, scope: !5535)
!5540 = !DILocation(line: 719, column: 39, scope: !5535)
!5541 = !DILocation(line: 719, column: 23, scope: !5535)
!5542 = !DILocation(line: 719, column: 9, scope: !5535)
!5543 = !DILocation(line: 720, column: 13, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5536, file: !936, line: 719, column: 59)
!5545 = distinct !{!5545, !5543}
!5546 = !DILocation(line: 720, column: 106, scope: !5547)
!5547 = !DILexicalBlockFile(scope: !5548, file: !936, discriminator: 1)
!5548 = distinct !DILexicalBlock(scope: !5544, file: !936, line: 720, column: 16)
!5549 = !DILocation(line: 723, column: 48, scope: !5544)
!5550 = !DILocation(line: 723, column: 43, scope: !5544)
!5551 = !DILocation(line: 723, column: 13, scope: !5544)
!5552 = !DILocation(line: 723, column: 24, scope: !5544)
!5553 = !DILocation(line: 723, column: 16, scope: !5544)
!5554 = !DILocation(line: 723, column: 27, scope: !5544)
!5555 = !DILocation(line: 723, column: 46, scope: !5544)
!5556 = !DILocation(line: 724, column: 50, scope: !5544)
!5557 = !DILocation(line: 724, column: 23, scope: !5544)
!5558 = !DILocation(line: 724, column: 34, scope: !5544)
!5559 = !DILocation(line: 724, column: 26, scope: !5544)
!5560 = !DILocation(line: 724, column: 37, scope: !5544)
!5561 = !DILocation(line: 724, column: 20, scope: !5544)
!5562 = !DILocation(line: 725, column: 9, scope: !5544)
!5563 = !DILocation(line: 719, column: 55, scope: !5564)
!5564 = !DILexicalBlockFile(scope: !5536, file: !936, discriminator: 2)
!5565 = !DILocation(line: 719, column: 9, scope: !5564)
!5566 = distinct !{!5566, !5567}
!5567 = !DILocation(line: 719, column: 9, scope: !5527)
!5568 = !DILocation(line: 726, column: 5, scope: !5527)
!5569 = !DILocation(line: 716, column: 38, scope: !5570)
!5570 = !DILexicalBlockFile(scope: !5521, file: !936, discriminator: 2)
!5571 = !DILocation(line: 716, column: 5, scope: !5570)
!5572 = distinct !{!5572, !5573}
!5573 = !DILocation(line: 716, column: 5, scope: !5303)
!5574 = !DILocation(line: 728, column: 5, scope: !5303)
!5575 = !DILocation(line: 729, column: 1, scope: !5303)
!5576 = distinct !DISubprogram(name: "get_bits1", scope: !1808, file: !1808, line: 487, type: !5577, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!5577 = !DISubroutineType(types: !5578)
!5578 = !{!913, !3822}
!5579 = !DILocalVariable(name: "s", arg: 1, scope: !5576, file: !1808, line: 487, type: !3822)
!5580 = !DILocation(line: 487, column: 53, scope: !5576)
!5581 = !DILocalVariable(name: "index", scope: !5576, file: !1808, line: 499, type: !913)
!5582 = !DILocation(line: 499, column: 18, scope: !5576)
!5583 = !DILocation(line: 499, column: 26, scope: !5576)
!5584 = !DILocation(line: 499, column: 29, scope: !5576)
!5585 = !DILocalVariable(name: "result", scope: !5576, file: !1808, line: 500, type: !916)
!5586 = !DILocation(line: 500, column: 13, scope: !5576)
!5587 = !DILocation(line: 500, column: 32, scope: !5576)
!5588 = !DILocation(line: 500, column: 38, scope: !5576)
!5589 = !DILocation(line: 500, column: 22, scope: !5576)
!5590 = !DILocation(line: 500, column: 25, scope: !5576)
!5591 = !DILocation(line: 505, column: 16, scope: !5576)
!5592 = !DILocation(line: 505, column: 22, scope: !5576)
!5593 = !DILocation(line: 505, column: 12, scope: !5576)
!5594 = !DILocation(line: 506, column: 12, scope: !5576)
!5595 = !DILocation(line: 509, column: 9, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5576, file: !1808, line: 509, column: 9)
!5597 = !DILocation(line: 509, column: 12, scope: !5596)
!5598 = !DILocation(line: 509, column: 20, scope: !5596)
!5599 = !DILocation(line: 509, column: 23, scope: !5596)
!5600 = !DILocation(line: 509, column: 18, scope: !5596)
!5601 = !DILocation(line: 509, column: 9, scope: !5576)
!5602 = !DILocation(line: 511, column: 14, scope: !5596)
!5603 = !DILocation(line: 511, column: 9, scope: !5596)
!5604 = !DILocation(line: 512, column: 16, scope: !5576)
!5605 = !DILocation(line: 512, column: 5, scope: !5576)
!5606 = !DILocation(line: 512, column: 8, scope: !5576)
!5607 = !DILocation(line: 512, column: 14, scope: !5576)
!5608 = !DILocation(line: 514, column: 12, scope: !5576)
!5609 = !DILocation(line: 514, column: 5, scope: !5576)
!5610 = distinct !DISubprogram(name: "decode_subframe", scope: !936, file: !936, line: 1181, type: !5304, isLocal: true, isDefinition: true, scopeLine: 1182, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!5611 = !DILocalVariable(name: "x", arg: 1, scope: !5612, file: !5613, line: 42, type: !1691)
!5612 = distinct !DISubprogram(name: "ff_exp10", scope: !5613, file: !5613, line: 42, type: !5614, isLocal: true, isDefinition: true, scopeLine: 43, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!5613 = !DIFile(filename: "./libavutil/ffmath.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5614 = !DISubroutineType(types: !5615)
!5615 = !{!1691, !1691}
!5616 = !DILocation(line: 42, column: 69, scope: !5612, inlinedAt: !5617)
!5617 = distinct !DILocation(line: 1387, column: 37, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5619, file: !936, line: 1382, column: 48)
!5619 = distinct !DILexicalBlock(scope: !5620, file: !936, line: 1382, column: 13)
!5620 = distinct !DILexicalBlock(scope: !5621, file: !936, line: 1382, column: 13)
!5621 = distinct !DILexicalBlock(scope: !5622, file: !936, line: 1372, column: 60)
!5622 = distinct !DILexicalBlock(scope: !5623, file: !936, line: 1372, column: 9)
!5623 = distinct !DILexicalBlock(scope: !5624, file: !936, line: 1372, column: 9)
!5624 = distinct !DILexicalBlock(scope: !5625, file: !936, line: 1368, column: 26)
!5625 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1368, column: 9)
!5626 = !DILocalVariable(name: "s", arg: 1, scope: !5627, file: !1808, line: 412, type: !3822)
!5627 = distinct !DISubprogram(name: "get_bitsz", scope: !1808, file: !1808, line: 412, type: !5628, isLocal: true, isDefinition: true, scopeLine: 413, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!5628 = !DISubroutineType(types: !5629)
!5629 = !{!914, !3822, !914}
!5630 = !DILocation(line: 412, column: 75, scope: !5627, inlinedAt: !5631)
!5631 = distinct !DILocation(line: 1258, column: 29, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5633, file: !936, line: 1256, column: 53)
!5633 = distinct !DILexicalBlock(scope: !5634, file: !936, line: 1256, column: 13)
!5634 = distinct !DILexicalBlock(scope: !5635, file: !936, line: 1254, column: 28)
!5635 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1254, column: 9)
!5636 = !DILocalVariable(name: "n", arg: 2, scope: !5627, file: !1808, line: 412, type: !914)
!5637 = !DILocation(line: 412, column: 82, scope: !5627, inlinedAt: !5631)
!5638 = !DILocalVariable(name: "s", arg: 1, scope: !5610, file: !936, line: 1181, type: !1664)
!5639 = !DILocation(line: 1181, column: 45, scope: !5610)
!5640 = !DILocalVariable(name: "offset", scope: !5610, file: !936, line: 1183, type: !914)
!5641 = !DILocation(line: 1183, column: 9, scope: !5610)
!5642 = !DILocation(line: 1183, column: 18, scope: !5610)
!5643 = !DILocation(line: 1183, column: 21, scope: !5610)
!5644 = !DILocalVariable(name: "subframe_len", scope: !5610, file: !936, line: 1184, type: !914)
!5645 = !DILocation(line: 1184, column: 9, scope: !5610)
!5646 = !DILocation(line: 1184, column: 24, scope: !5610)
!5647 = !DILocation(line: 1184, column: 27, scope: !5610)
!5648 = !DILocalVariable(name: "i", scope: !5610, file: !936, line: 1185, type: !914)
!5649 = !DILocation(line: 1185, column: 9, scope: !5610)
!5650 = !DILocalVariable(name: "total_samples", scope: !5610, file: !936, line: 1186, type: !914)
!5651 = !DILocation(line: 1186, column: 9, scope: !5610)
!5652 = !DILocation(line: 1186, column: 25, scope: !5610)
!5653 = !DILocation(line: 1186, column: 28, scope: !5610)
!5654 = !DILocation(line: 1186, column: 48, scope: !5610)
!5655 = !DILocation(line: 1186, column: 51, scope: !5610)
!5656 = !DILocation(line: 1186, column: 46, scope: !5610)
!5657 = !DILocalVariable(name: "transmit_coeffs", scope: !5610, file: !936, line: 1187, type: !914)
!5658 = !DILocation(line: 1187, column: 9, scope: !5610)
!5659 = !DILocalVariable(name: "cur_subwoofer_cutoff", scope: !5610, file: !936, line: 1188, type: !914)
!5660 = !DILocation(line: 1188, column: 9, scope: !5610)
!5661 = !DILocation(line: 1190, column: 42, scope: !5610)
!5662 = !DILocation(line: 1190, column: 45, scope: !5610)
!5663 = !DILocation(line: 1190, column: 26, scope: !5610)
!5664 = !DILocation(line: 1190, column: 5, scope: !5610)
!5665 = !DILocation(line: 1190, column: 8, scope: !5610)
!5666 = !DILocation(line: 1190, column: 24, scope: !5610)
!5667 = !DILocation(line: 1196, column: 12, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1196, column: 5)
!5669 = !DILocation(line: 1196, column: 10, scope: !5668)
!5670 = !DILocation(line: 1196, column: 17, scope: !5671)
!5671 = !DILexicalBlockFile(scope: !5672, file: !936, discriminator: 1)
!5672 = distinct !DILexicalBlock(scope: !5668, file: !936, line: 1196, column: 5)
!5673 = !DILocation(line: 1196, column: 21, scope: !5671)
!5674 = !DILocation(line: 1196, column: 24, scope: !5671)
!5675 = !DILocation(line: 1196, column: 19, scope: !5671)
!5676 = !DILocation(line: 1196, column: 5, scope: !5671)
!5677 = !DILocation(line: 1197, column: 20, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5672, file: !936, line: 1196, column: 42)
!5679 = !DILocation(line: 1197, column: 9, scope: !5678)
!5680 = !DILocation(line: 1197, column: 12, scope: !5678)
!5681 = !DILocation(line: 1197, column: 23, scope: !5678)
!5682 = !DILocation(line: 1197, column: 31, scope: !5678)
!5683 = !DILocation(line: 1198, column: 13, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5678, file: !936, line: 1198, column: 13)
!5685 = !DILocation(line: 1198, column: 33, scope: !5684)
!5686 = !DILocation(line: 1198, column: 22, scope: !5684)
!5687 = !DILocation(line: 1198, column: 25, scope: !5684)
!5688 = !DILocation(line: 1198, column: 36, scope: !5684)
!5689 = !DILocation(line: 1198, column: 20, scope: !5684)
!5690 = !DILocation(line: 1198, column: 13, scope: !5678)
!5691 = !DILocation(line: 1199, column: 33, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5684, file: !936, line: 1198, column: 53)
!5693 = !DILocation(line: 1199, column: 22, scope: !5692)
!5694 = !DILocation(line: 1199, column: 25, scope: !5692)
!5695 = !DILocation(line: 1199, column: 36, scope: !5692)
!5696 = !DILocation(line: 1199, column: 20, scope: !5692)
!5697 = !DILocation(line: 1201, column: 55, scope: !5692)
!5698 = !DILocation(line: 1201, column: 44, scope: !5692)
!5699 = !DILocation(line: 1201, column: 47, scope: !5692)
!5700 = !DILocation(line: 1201, column: 58, scope: !5692)
!5701 = !DILocation(line: 1201, column: 17, scope: !5692)
!5702 = !DILocation(line: 1201, column: 28, scope: !5692)
!5703 = !DILocation(line: 1201, column: 20, scope: !5692)
!5704 = !DILocation(line: 1201, column: 31, scope: !5692)
!5705 = !DILocation(line: 1200, column: 26, scope: !5692)
!5706 = !DILocation(line: 1202, column: 9, scope: !5692)
!5707 = !DILocation(line: 1203, column: 5, scope: !5678)
!5708 = !DILocation(line: 1196, column: 38, scope: !5709)
!5709 = !DILexicalBlockFile(scope: !5672, file: !936, discriminator: 2)
!5710 = !DILocation(line: 1196, column: 5, scope: !5709)
!5711 = distinct !{!5711, !5712}
!5712 = !DILocation(line: 1196, column: 5, scope: !5610)
!5713 = !DILocation(line: 1205, column: 5, scope: !5610)
!5714 = distinct !{!5714, !5713}
!5715 = !DILocation(line: 1205, column: 108, scope: !5716)
!5716 = !DILexicalBlockFile(scope: !5717, file: !936, discriminator: 1)
!5717 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1205, column: 8)
!5718 = !DILocation(line: 1209, column: 5, scope: !5610)
!5719 = !DILocation(line: 1209, column: 8, scope: !5610)
!5720 = !DILocation(line: 1209, column: 34, scope: !5610)
!5721 = !DILocation(line: 1210, column: 12, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1210, column: 5)
!5723 = !DILocation(line: 1210, column: 10, scope: !5722)
!5724 = !DILocation(line: 1210, column: 17, scope: !5725)
!5725 = !DILexicalBlockFile(scope: !5726, file: !936, discriminator: 1)
!5726 = distinct !DILexicalBlock(scope: !5722, file: !936, line: 1210, column: 5)
!5727 = !DILocation(line: 1210, column: 21, scope: !5725)
!5728 = !DILocation(line: 1210, column: 24, scope: !5725)
!5729 = !DILocation(line: 1210, column: 19, scope: !5725)
!5730 = !DILocation(line: 1210, column: 5, scope: !5725)
!5731 = !DILocalVariable(name: "cur_subframe", scope: !5732, file: !936, line: 1211, type: !962)
!5732 = distinct !DILexicalBlock(scope: !5726, file: !936, line: 1210, column: 42)
!5733 = !DILocation(line: 1211, column: 19, scope: !5732)
!5734 = !DILocation(line: 1211, column: 45, scope: !5732)
!5735 = !DILocation(line: 1211, column: 34, scope: !5732)
!5736 = !DILocation(line: 1211, column: 37, scope: !5732)
!5737 = !DILocation(line: 1211, column: 48, scope: !5732)
!5738 = !DILocation(line: 1213, column: 37, scope: !5732)
!5739 = !DILocation(line: 1213, column: 26, scope: !5732)
!5740 = !DILocation(line: 1213, column: 29, scope: !5732)
!5741 = !DILocation(line: 1213, column: 40, scope: !5732)
!5742 = !DILocation(line: 1213, column: 23, scope: !5732)
!5743 = !DILocation(line: 1216, column: 13, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5732, file: !936, line: 1216, column: 13)
!5745 = !DILocation(line: 1216, column: 34, scope: !5744)
!5746 = !DILocation(line: 1216, column: 23, scope: !5744)
!5747 = !DILocation(line: 1216, column: 26, scope: !5744)
!5748 = !DILocation(line: 1216, column: 37, scope: !5744)
!5749 = !DILocation(line: 1216, column: 20, scope: !5744)
!5750 = !DILocation(line: 1216, column: 53, scope: !5744)
!5751 = !DILocation(line: 1217, column: 13, scope: !5744)
!5752 = !DILocation(line: 1217, column: 56, scope: !5744)
!5753 = !DILocation(line: 1217, column: 29, scope: !5744)
!5754 = !DILocation(line: 1217, column: 40, scope: !5744)
!5755 = !DILocation(line: 1217, column: 32, scope: !5744)
!5756 = !DILocation(line: 1217, column: 43, scope: !5744)
!5757 = !DILocation(line: 1217, column: 26, scope: !5744)
!5758 = !DILocation(line: 1216, column: 13, scope: !5759)
!5759 = !DILexicalBlockFile(scope: !5732, file: !936, discriminator: 1)
!5760 = !DILocation(line: 1218, column: 57, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5744, file: !936, line: 1217, column: 71)
!5762 = !DILocation(line: 1218, column: 30, scope: !5761)
!5763 = !DILocation(line: 1218, column: 41, scope: !5761)
!5764 = !DILocation(line: 1218, column: 33, scope: !5761)
!5765 = !DILocation(line: 1218, column: 44, scope: !5761)
!5766 = !DILocation(line: 1218, column: 27, scope: !5761)
!5767 = !DILocation(line: 1220, column: 44, scope: !5761)
!5768 = !DILocation(line: 1220, column: 17, scope: !5761)
!5769 = !DILocation(line: 1220, column: 28, scope: !5761)
!5770 = !DILocation(line: 1220, column: 20, scope: !5761)
!5771 = !DILocation(line: 1220, column: 31, scope: !5761)
!5772 = !DILocation(line: 1219, column: 24, scope: !5761)
!5773 = !DILocation(line: 1219, column: 13, scope: !5761)
!5774 = !DILocation(line: 1219, column: 16, scope: !5761)
!5775 = !DILocation(line: 1219, column: 27, scope: !5761)
!5776 = !DILocation(line: 1219, column: 43, scope: !5761)
!5777 = !DILocation(line: 1221, column: 81, scope: !5761)
!5778 = !DILocation(line: 1221, column: 49, scope: !5761)
!5779 = !DILocation(line: 1221, column: 52, scope: !5761)
!5780 = !DILocation(line: 1221, column: 13, scope: !5761)
!5781 = !DILocation(line: 1221, column: 16, scope: !5761)
!5782 = !DILocation(line: 1221, column: 79, scope: !5761)
!5783 = !DILocation(line: 1222, column: 15, scope: !5761)
!5784 = !DILocation(line: 1222, column: 18, scope: !5761)
!5785 = !DILocation(line: 1222, column: 13, scope: !5761)
!5786 = !DILocation(line: 1223, column: 9, scope: !5761)
!5787 = !DILocation(line: 1224, column: 5, scope: !5732)
!5788 = !DILocation(line: 1210, column: 38, scope: !5789)
!5789 = !DILexicalBlockFile(scope: !5726, file: !936, discriminator: 2)
!5790 = !DILocation(line: 1210, column: 5, scope: !5789)
!5791 = distinct !{!5791, !5792}
!5792 = !DILocation(line: 1210, column: 5, scope: !5610)
!5793 = !DILocation(line: 1228, column: 10, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1228, column: 9)
!5795 = !DILocation(line: 1228, column: 9, scope: !5610)
!5796 = !DILocation(line: 1229, column: 9, scope: !5794)
!5797 = !DILocation(line: 1229, column: 12, scope: !5794)
!5798 = !DILocation(line: 1229, column: 33, scope: !5794)
!5799 = !DILocation(line: 1232, column: 5, scope: !5610)
!5800 = distinct !{!5800, !5799}
!5801 = !DILocation(line: 1232, column: 106, scope: !5802)
!5802 = !DILexicalBlockFile(scope: !5803, file: !936, discriminator: 1)
!5803 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1232, column: 8)
!5804 = !DILocation(line: 1236, column: 41, scope: !5610)
!5805 = !DILocation(line: 1236, column: 44, scope: !5610)
!5806 = !DILocation(line: 1236, column: 62, scope: !5610)
!5807 = !DILocation(line: 1236, column: 61, scope: !5610)
!5808 = !DILocation(line: 1236, column: 75, scope: !5610)
!5809 = !DILocation(line: 1236, column: 26, scope: !5610)
!5810 = !DILocation(line: 1236, column: 24, scope: !5610)
!5811 = !DILocation(line: 1236, column: 20, scope: !5610)
!5812 = !DILocation(line: 1236, column: 5, scope: !5610)
!5813 = !DILocation(line: 1236, column: 8, scope: !5610)
!5814 = !DILocation(line: 1236, column: 18, scope: !5610)
!5815 = !DILocation(line: 1237, column: 31, scope: !5610)
!5816 = !DILocation(line: 1237, column: 34, scope: !5610)
!5817 = !DILocation(line: 1237, column: 20, scope: !5610)
!5818 = !DILocation(line: 1237, column: 23, scope: !5610)
!5819 = !DILocation(line: 1237, column: 5, scope: !5610)
!5820 = !DILocation(line: 1237, column: 8, scope: !5610)
!5821 = !DILocation(line: 1237, column: 18, scope: !5610)
!5822 = !DILocation(line: 1238, column: 41, scope: !5610)
!5823 = !DILocation(line: 1238, column: 44, scope: !5610)
!5824 = !DILocation(line: 1238, column: 26, scope: !5610)
!5825 = !DILocation(line: 1238, column: 29, scope: !5610)
!5826 = !DILocation(line: 1238, column: 5, scope: !5610)
!5827 = !DILocation(line: 1238, column: 8, scope: !5610)
!5828 = !DILocation(line: 1238, column: 24, scope: !5610)
!5829 = !DILocation(line: 1239, column: 49, scope: !5610)
!5830 = !DILocation(line: 1239, column: 52, scope: !5610)
!5831 = !DILocation(line: 1239, column: 28, scope: !5610)
!5832 = !DILocation(line: 1239, column: 31, scope: !5610)
!5833 = !DILocation(line: 1239, column: 26, scope: !5610)
!5834 = !DILocation(line: 1242, column: 15, scope: !5610)
!5835 = !DILocation(line: 1242, column: 18, scope: !5610)
!5836 = !DILocation(line: 1242, column: 36, scope: !5610)
!5837 = !DILocation(line: 1242, column: 12, scope: !5610)
!5838 = !DILocation(line: 1244, column: 12, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1244, column: 5)
!5840 = !DILocation(line: 1244, column: 10, scope: !5839)
!5841 = !DILocation(line: 1244, column: 17, scope: !5842)
!5842 = !DILexicalBlockFile(scope: !5843, file: !936, discriminator: 1)
!5843 = distinct !DILexicalBlock(scope: !5839, file: !936, line: 1244, column: 5)
!5844 = !DILocation(line: 1244, column: 21, scope: !5842)
!5845 = !DILocation(line: 1244, column: 24, scope: !5842)
!5846 = !DILocation(line: 1244, column: 19, scope: !5842)
!5847 = !DILocation(line: 1244, column: 5, scope: !5842)
!5848 = !DILocalVariable(name: "c", scope: !5849, file: !936, line: 1245, type: !914)
!5849 = distinct !DILexicalBlock(scope: !5843, file: !936, line: 1244, column: 56)
!5850 = !DILocation(line: 1245, column: 13, scope: !5849)
!5851 = !DILocation(line: 1245, column: 53, scope: !5849)
!5852 = !DILocation(line: 1245, column: 17, scope: !5849)
!5853 = !DILocation(line: 1245, column: 20, scope: !5849)
!5854 = !DILocation(line: 1247, column: 51, scope: !5849)
!5855 = !DILocation(line: 1247, column: 33, scope: !5849)
!5856 = !DILocation(line: 1247, column: 44, scope: !5849)
!5857 = !DILocation(line: 1247, column: 36, scope: !5849)
!5858 = !DILocation(line: 1247, column: 47, scope: !5849)
!5859 = !DILocation(line: 1247, column: 20, scope: !5849)
!5860 = !DILocation(line: 1247, column: 9, scope: !5849)
!5861 = !DILocation(line: 1247, column: 12, scope: !5849)
!5862 = !DILocation(line: 1247, column: 23, scope: !5849)
!5863 = !DILocation(line: 1247, column: 30, scope: !5849)
!5864 = !DILocation(line: 1248, column: 5, scope: !5849)
!5865 = !DILocation(line: 1244, column: 52, scope: !5866)
!5866 = !DILexicalBlockFile(scope: !5843, file: !936, discriminator: 2)
!5867 = !DILocation(line: 1244, column: 5, scope: !5866)
!5868 = distinct !{!5868, !5869}
!5869 = !DILocation(line: 1244, column: 5, scope: !5610)
!5870 = !DILocation(line: 1250, column: 23, scope: !5610)
!5871 = !DILocation(line: 1250, column: 5, scope: !5610)
!5872 = !DILocation(line: 1250, column: 8, scope: !5610)
!5873 = !DILocation(line: 1250, column: 21, scope: !5610)
!5874 = !DILocation(line: 1251, column: 39, scope: !5610)
!5875 = !DILocation(line: 1251, column: 42, scope: !5610)
!5876 = !DILocation(line: 1251, column: 55, scope: !5610)
!5877 = !DILocation(line: 1251, column: 59, scope: !5610)
!5878 = !DILocation(line: 1251, column: 24, scope: !5610)
!5879 = !DILocation(line: 1251, column: 22, scope: !5610)
!5880 = !DILocation(line: 1251, column: 64, scope: !5610)
!5881 = !DILocation(line: 1251, column: 18, scope: !5610)
!5882 = !DILocation(line: 1251, column: 5, scope: !5610)
!5883 = !DILocation(line: 1251, column: 8, scope: !5610)
!5884 = !DILocation(line: 1251, column: 16, scope: !5610)
!5885 = !DILocation(line: 1254, column: 20, scope: !5635)
!5886 = !DILocation(line: 1254, column: 23, scope: !5635)
!5887 = !DILocation(line: 1254, column: 9, scope: !5635)
!5888 = !DILocation(line: 1254, column: 9, scope: !5610)
!5889 = !DILocalVariable(name: "num_fill_bits", scope: !5634, file: !936, line: 1255, type: !914)
!5890 = !DILocation(line: 1255, column: 13, scope: !5634)
!5891 = !DILocation(line: 1256, column: 41, scope: !5633)
!5892 = !DILocation(line: 1256, column: 44, scope: !5633)
!5893 = !DILocation(line: 1256, column: 31, scope: !5633)
!5894 = !DILocation(line: 1256, column: 29, scope: !5633)
!5895 = !DILocation(line: 1256, column: 13, scope: !5634)
!5896 = !DILocalVariable(name: "len", scope: !5632, file: !936, line: 1257, type: !914)
!5897 = !DILocation(line: 1257, column: 17, scope: !5632)
!5898 = !DILocation(line: 1257, column: 33, scope: !5632)
!5899 = !DILocation(line: 1257, column: 36, scope: !5632)
!5900 = !DILocation(line: 1257, column: 23, scope: !5632)
!5901 = !DILocation(line: 1258, column: 40, scope: !5632)
!5902 = !DILocation(line: 1258, column: 43, scope: !5632)
!5903 = !DILocation(line: 1258, column: 47, scope: !5632)
!5904 = !DILocation(line: 1258, column: 29, scope: !5632)
!5905 = !DILocation(line: 414, column: 12, scope: !5627, inlinedAt: !5631)
!5906 = !DILocation(line: 414, column: 25, scope: !5907, inlinedAt: !5631)
!5907 = !DILexicalBlockFile(scope: !5627, file: !1808, discriminator: 1)
!5908 = !DILocation(line: 414, column: 28, scope: !5907, inlinedAt: !5631)
!5909 = !DILocation(line: 414, column: 16, scope: !5907, inlinedAt: !5631)
!5910 = !DILocation(line: 414, column: 12, scope: !5907, inlinedAt: !5631)
!5911 = !DILocation(line: 414, column: 12, scope: !5912, inlinedAt: !5631)
!5912 = !DILexicalBlockFile(scope: !5627, file: !1808, discriminator: 2)
!5913 = !DILocation(line: 414, column: 12, scope: !5914, inlinedAt: !5631)
!5914 = !DILexicalBlockFile(scope: !5627, file: !1808, discriminator: 3)
!5915 = !DILocation(line: 1258, column: 52, scope: !5632)
!5916 = !DILocation(line: 1258, column: 27, scope: !5632)
!5917 = !DILocation(line: 1259, column: 9, scope: !5632)
!5918 = !DILocation(line: 1261, column: 13, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5634, file: !936, line: 1261, column: 13)
!5920 = !DILocation(line: 1261, column: 27, scope: !5919)
!5921 = !DILocation(line: 1261, column: 13, scope: !5634)
!5922 = !DILocation(line: 1262, column: 33, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5924, file: !936, line: 1262, column: 17)
!5924 = distinct !DILexicalBlock(scope: !5919, file: !936, line: 1261, column: 33)
!5925 = !DILocation(line: 1262, column: 36, scope: !5923)
!5926 = !DILocation(line: 1262, column: 17, scope: !5923)
!5927 = !DILocation(line: 1262, column: 42, scope: !5923)
!5928 = !DILocation(line: 1262, column: 40, scope: !5923)
!5929 = !DILocation(line: 1262, column: 58, scope: !5923)
!5930 = !DILocation(line: 1262, column: 61, scope: !5923)
!5931 = !DILocation(line: 1262, column: 56, scope: !5923)
!5932 = !DILocation(line: 1262, column: 17, scope: !5924)
!5933 = !DILocation(line: 1263, column: 24, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5923, file: !936, line: 1262, column: 77)
!5935 = !DILocation(line: 1263, column: 27, scope: !5934)
!5936 = !DILocation(line: 1263, column: 17, scope: !5934)
!5937 = !DILocation(line: 1264, column: 17, scope: !5934)
!5938 = !DILocation(line: 1267, column: 29, scope: !5924)
!5939 = !DILocation(line: 1267, column: 32, scope: !5924)
!5940 = !DILocation(line: 1267, column: 36, scope: !5924)
!5941 = !DILocation(line: 1267, column: 13, scope: !5924)
!5942 = !DILocation(line: 1268, column: 9, scope: !5924)
!5943 = !DILocation(line: 1269, column: 5, scope: !5634)
!5944 = !DILocation(line: 1272, column: 20, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1272, column: 9)
!5946 = !DILocation(line: 1272, column: 23, scope: !5945)
!5947 = !DILocation(line: 1272, column: 9, scope: !5945)
!5948 = !DILocation(line: 1272, column: 9, scope: !5610)
!5949 = !DILocation(line: 1273, column: 31, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5945, file: !936, line: 1272, column: 28)
!5951 = !DILocation(line: 1273, column: 34, scope: !5950)
!5952 = !DILocation(line: 1273, column: 9, scope: !5950)
!5953 = !DILocation(line: 1274, column: 9, scope: !5950)
!5954 = !DILocation(line: 1278, column: 34, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1278, column: 9)
!5956 = !DILocation(line: 1278, column: 9, scope: !5955)
!5957 = !DILocation(line: 1278, column: 37, scope: !5955)
!5958 = !DILocation(line: 1278, column: 9, scope: !5610)
!5959 = !DILocation(line: 1279, column: 9, scope: !5955)
!5960 = !DILocation(line: 1282, column: 12, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1282, column: 5)
!5962 = !DILocation(line: 1282, column: 10, scope: !5961)
!5963 = !DILocation(line: 1282, column: 17, scope: !5964)
!5964 = !DILexicalBlockFile(scope: !5965, file: !936, discriminator: 1)
!5965 = distinct !DILexicalBlock(scope: !5961, file: !936, line: 1282, column: 5)
!5966 = !DILocation(line: 1282, column: 21, scope: !5964)
!5967 = !DILocation(line: 1282, column: 24, scope: !5964)
!5968 = !DILocation(line: 1282, column: 19, scope: !5964)
!5969 = !DILocation(line: 1282, column: 5, scope: !5964)
!5970 = !DILocalVariable(name: "c", scope: !5971, file: !936, line: 1283, type: !914)
!5971 = distinct !DILexicalBlock(scope: !5965, file: !936, line: 1282, column: 56)
!5972 = !DILocation(line: 1283, column: 13, scope: !5971)
!5973 = !DILocation(line: 1283, column: 53, scope: !5971)
!5974 = !DILocation(line: 1283, column: 17, scope: !5971)
!5975 = !DILocation(line: 1283, column: 20, scope: !5971)
!5976 = !DILocation(line: 1284, column: 56, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5971, file: !936, line: 1284, column: 13)
!5978 = !DILocation(line: 1284, column: 59, scope: !5977)
!5979 = !DILocation(line: 1284, column: 45, scope: !5977)
!5980 = !DILocation(line: 1284, column: 25, scope: !5977)
!5981 = !DILocation(line: 1284, column: 14, scope: !5977)
!5982 = !DILocation(line: 1284, column: 17, scope: !5977)
!5983 = !DILocation(line: 1284, column: 28, scope: !5977)
!5984 = !DILocation(line: 1284, column: 43, scope: !5977)
!5985 = !DILocation(line: 1284, column: 13, scope: !5971)
!5986 = !DILocation(line: 1285, column: 29, scope: !5977)
!5987 = !DILocation(line: 1285, column: 13, scope: !5977)
!5988 = !DILocation(line: 1286, column: 5, scope: !5971)
!5989 = !DILocation(line: 1282, column: 52, scope: !5990)
!5990 = !DILexicalBlockFile(scope: !5965, file: !936, discriminator: 2)
!5991 = !DILocation(line: 1282, column: 5, scope: !5990)
!5992 = distinct !{!5992, !5993}
!5993 = !DILocation(line: 1282, column: 5, scope: !5610)
!5994 = !DILocation(line: 1288, column: 5, scope: !5610)
!5995 = distinct !{!5995, !5994}
!5996 = !DILocation(line: 1288, column: 16, scope: !5997)
!5997 = !DILexicalBlockFile(scope: !5998, file: !936, discriminator: 1)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !936, line: 1288, column: 14)
!5999 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1288, column: 8)
!6000 = !DILocation(line: 1288, column: 19, scope: !5997)
!6001 = !DILocation(line: 1288, column: 32, scope: !5997)
!6002 = !DILocation(line: 1288, column: 14, scope: !5997)
!6003 = !DILocation(line: 1288, column: 49, scope: !6004)
!6004 = !DILexicalBlockFile(scope: !6005, file: !936, discriminator: 2)
!6005 = distinct !DILexicalBlock(scope: !5998, file: !936, line: 1288, column: 47)
!6006 = !DILocation(line: 1288, column: 108, scope: !6007)
!6007 = !DILexicalBlockFile(scope: !6004, file: !936, discriminator: 4)
!6008 = !DILocation(line: 1288, column: 108, scope: !6004)
!6009 = !DILocation(line: 1288, column: 119, scope: !6010)
!6010 = !DILexicalBlockFile(scope: !5999, file: !936, discriminator: 3)
!6011 = !DILocation(line: 1289, column: 9, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1289, column: 9)
!6013 = !DILocation(line: 1289, column: 9, scope: !5610)
!6014 = !DILocalVariable(name: "step", scope: !6015, file: !936, line: 1290, type: !914)
!6015 = distinct !DILexicalBlock(scope: !6012, file: !936, line: 1289, column: 26)
!6016 = !DILocation(line: 1290, column: 13, scope: !6015)
!6017 = !DILocalVariable(name: "quant_step", scope: !6015, file: !936, line: 1291, type: !914)
!6018 = !DILocation(line: 1291, column: 13, scope: !6015)
!6019 = !DILocation(line: 1291, column: 31, scope: !6015)
!6020 = !DILocation(line: 1291, column: 34, scope: !6015)
!6021 = !DILocation(line: 1291, column: 29, scope: !6015)
!6022 = !DILocation(line: 1291, column: 50, scope: !6015)
!6023 = !DILocation(line: 1294, column: 54, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6015, file: !936, line: 1294, column: 13)
!6025 = !DILocation(line: 1294, column: 57, scope: !6024)
!6026 = !DILocation(line: 1294, column: 43, scope: !6024)
!6027 = !DILocation(line: 1294, column: 14, scope: !6024)
!6028 = !DILocation(line: 1294, column: 17, scope: !6024)
!6029 = !DILocation(line: 1294, column: 41, scope: !6024)
!6030 = !DILocation(line: 1294, column: 13, scope: !6015)
!6031 = !DILocalVariable(name: "num_bits", scope: !6032, file: !936, line: 1295, type: !914)
!6032 = distinct !DILexicalBlock(scope: !6024, file: !936, line: 1294, column: 63)
!6033 = !DILocation(line: 1295, column: 17, scope: !6032)
!6034 = !DILocation(line: 1295, column: 50, scope: !6032)
!6035 = !DILocation(line: 1295, column: 53, scope: !6032)
!6036 = !DILocation(line: 1295, column: 66, scope: !6032)
!6037 = !DILocation(line: 1295, column: 70, scope: !6032)
!6038 = !DILocation(line: 1295, column: 73, scope: !6032)
!6039 = !DILocation(line: 1295, column: 34, scope: !6032)
!6040 = !DILocation(line: 1295, column: 32, scope: !6032)
!6041 = !DILocation(line: 1295, column: 78, scope: !6032)
!6042 = !DILocation(line: 1296, column: 20, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6032, file: !936, line: 1296, column: 13)
!6044 = !DILocation(line: 1296, column: 18, scope: !6043)
!6045 = !DILocation(line: 1296, column: 25, scope: !6046)
!6046 = !DILexicalBlockFile(scope: !6047, file: !936, discriminator: 1)
!6047 = distinct !DILexicalBlock(scope: !6043, file: !936, line: 1296, column: 13)
!6048 = !DILocation(line: 1296, column: 29, scope: !6046)
!6049 = !DILocation(line: 1296, column: 32, scope: !6046)
!6050 = !DILocation(line: 1296, column: 27, scope: !6046)
!6051 = !DILocation(line: 1296, column: 13, scope: !6046)
!6052 = !DILocalVariable(name: "c", scope: !6053, file: !936, line: 1297, type: !914)
!6053 = distinct !DILexicalBlock(scope: !6047, file: !936, line: 1296, column: 64)
!6054 = !DILocation(line: 1297, column: 21, scope: !6053)
!6055 = !DILocation(line: 1297, column: 61, scope: !6053)
!6056 = !DILocation(line: 1297, column: 25, scope: !6053)
!6057 = !DILocation(line: 1297, column: 28, scope: !6053)
!6058 = !DILocalVariable(name: "num_vec_coeffs", scope: !6053, file: !936, line: 1298, type: !914)
!6059 = !DILocation(line: 1298, column: 21, scope: !6053)
!6060 = !DILocation(line: 1298, column: 48, scope: !6053)
!6061 = !DILocation(line: 1298, column: 51, scope: !6053)
!6062 = !DILocation(line: 1298, column: 55, scope: !6053)
!6063 = !DILocation(line: 1298, column: 38, scope: !6053)
!6064 = !DILocation(line: 1298, column: 65, scope: !6053)
!6065 = !DILocation(line: 1299, column: 21, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6053, file: !936, line: 1299, column: 21)
!6067 = !DILocation(line: 1299, column: 38, scope: !6066)
!6068 = !DILocation(line: 1299, column: 41, scope: !6066)
!6069 = !DILocation(line: 1299, column: 36, scope: !6066)
!6070 = !DILocation(line: 1299, column: 21, scope: !6053)
!6071 = !DILocation(line: 1300, column: 28, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6066, file: !936, line: 1299, column: 55)
!6073 = !DILocation(line: 1300, column: 31, scope: !6072)
!6074 = !DILocation(line: 1300, column: 78, scope: !6072)
!6075 = !DILocation(line: 1300, column: 21, scope: !6072)
!6076 = !DILocation(line: 1301, column: 21, scope: !6072)
!6077 = !DILocation(line: 1303, column: 17, scope: !6053)
!6078 = distinct !{!6078, !6077}
!6079 = !DILocation(line: 1303, column: 28, scope: !6080)
!6080 = !DILexicalBlockFile(scope: !6081, file: !936, discriminator: 1)
!6081 = distinct !DILexicalBlock(scope: !6082, file: !936, line: 1303, column: 26)
!6082 = distinct !DILexicalBlock(scope: !6053, file: !936, line: 1303, column: 20)
!6083 = !DILocation(line: 1303, column: 45, scope: !6080)
!6084 = !DILocation(line: 1303, column: 43, scope: !6080)
!6085 = !DILocation(line: 1303, column: 52, scope: !6080)
!6086 = !DILocation(line: 1303, column: 26, scope: !6080)
!6087 = !DILocation(line: 1303, column: 120, scope: !6088)
!6088 = !DILexicalBlockFile(scope: !6089, file: !936, discriminator: 2)
!6089 = distinct !DILexicalBlock(scope: !6081, file: !936, line: 1303, column: 118)
!6090 = !DILocation(line: 1303, column: 179, scope: !6091)
!6091 = !DILexicalBlockFile(scope: !6088, file: !936, discriminator: 4)
!6092 = !DILocation(line: 1303, column: 179, scope: !6088)
!6093 = !DILocation(line: 1303, column: 190, scope: !6094)
!6094 = !DILexicalBlockFile(scope: !6082, file: !936, discriminator: 3)
!6095 = !DILocation(line: 1304, column: 48, scope: !6053)
!6096 = !DILocation(line: 1304, column: 28, scope: !6053)
!6097 = !DILocation(line: 1304, column: 17, scope: !6053)
!6098 = !DILocation(line: 1304, column: 20, scope: !6053)
!6099 = !DILocation(line: 1304, column: 31, scope: !6053)
!6100 = !DILocation(line: 1304, column: 46, scope: !6053)
!6101 = !DILocation(line: 1305, column: 13, scope: !6053)
!6102 = !DILocation(line: 1296, column: 60, scope: !6103)
!6103 = !DILexicalBlockFile(scope: !6047, file: !936, discriminator: 2)
!6104 = !DILocation(line: 1296, column: 13, scope: !6103)
!6105 = distinct !{!6105, !6106}
!6106 = !DILocation(line: 1296, column: 13, scope: !6032)
!6107 = !DILocation(line: 1306, column: 9, scope: !6032)
!6108 = !DILocation(line: 1307, column: 20, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6110, file: !936, line: 1307, column: 13)
!6110 = distinct !DILexicalBlock(scope: !6024, file: !936, line: 1306, column: 16)
!6111 = !DILocation(line: 1307, column: 18, scope: !6109)
!6112 = !DILocation(line: 1307, column: 25, scope: !6113)
!6113 = !DILexicalBlockFile(scope: !6114, file: !936, discriminator: 1)
!6114 = distinct !DILexicalBlock(scope: !6109, file: !936, line: 1307, column: 13)
!6115 = !DILocation(line: 1307, column: 29, scope: !6113)
!6116 = !DILocation(line: 1307, column: 32, scope: !6113)
!6117 = !DILocation(line: 1307, column: 27, scope: !6113)
!6118 = !DILocation(line: 1307, column: 13, scope: !6113)
!6119 = !DILocalVariable(name: "c", scope: !6120, file: !936, line: 1308, type: !914)
!6120 = distinct !DILexicalBlock(scope: !6114, file: !936, line: 1307, column: 64)
!6121 = !DILocation(line: 1308, column: 21, scope: !6120)
!6122 = !DILocation(line: 1308, column: 61, scope: !6120)
!6123 = !DILocation(line: 1308, column: 25, scope: !6120)
!6124 = !DILocation(line: 1308, column: 28, scope: !6120)
!6125 = !DILocation(line: 1309, column: 48, scope: !6120)
!6126 = !DILocation(line: 1309, column: 51, scope: !6120)
!6127 = !DILocation(line: 1309, column: 28, scope: !6120)
!6128 = !DILocation(line: 1309, column: 17, scope: !6120)
!6129 = !DILocation(line: 1309, column: 20, scope: !6120)
!6130 = !DILocation(line: 1309, column: 31, scope: !6120)
!6131 = !DILocation(line: 1309, column: 46, scope: !6120)
!6132 = !DILocation(line: 1310, column: 13, scope: !6120)
!6133 = !DILocation(line: 1307, column: 60, scope: !6134)
!6134 = !DILexicalBlockFile(scope: !6114, file: !936, discriminator: 2)
!6135 = !DILocation(line: 1307, column: 13, scope: !6134)
!6136 = distinct !{!6136, !6137}
!6137 = !DILocation(line: 1307, column: 13, scope: !6110)
!6138 = !DILocation(line: 1313, column: 27, scope: !6015)
!6139 = !DILocation(line: 1313, column: 30, scope: !6015)
!6140 = !DILocation(line: 1313, column: 16, scope: !6015)
!6141 = !DILocation(line: 1313, column: 14, scope: !6015)
!6142 = !DILocation(line: 1314, column: 23, scope: !6015)
!6143 = !DILocation(line: 1314, column: 20, scope: !6015)
!6144 = !DILocation(line: 1315, column: 13, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6015, file: !936, line: 1315, column: 13)
!6146 = !DILocation(line: 1315, column: 18, scope: !6145)
!6147 = !DILocation(line: 1315, column: 25, scope: !6145)
!6148 = !DILocation(line: 1315, column: 28, scope: !6149)
!6149 = !DILexicalBlockFile(scope: !6145, file: !936, discriminator: 1)
!6150 = !DILocation(line: 1315, column: 33, scope: !6149)
!6151 = !DILocation(line: 1315, column: 13, scope: !6149)
!6152 = !DILocalVariable(name: "sign", scope: !6153, file: !936, line: 1316, type: !962)
!6153 = distinct !DILexicalBlock(scope: !6145, file: !936, line: 1315, column: 40)
!6154 = !DILocation(line: 1316, column: 23, scope: !6153)
!6155 = !DILocation(line: 1316, column: 31, scope: !6153)
!6156 = !DILocation(line: 1316, column: 36, scope: !6153)
!6157 = !DILocation(line: 1316, column: 43, scope: !6153)
!6158 = !DILocalVariable(name: "quant", scope: !6153, file: !936, line: 1317, type: !914)
!6159 = !DILocation(line: 1317, column: 17, scope: !6153)
!6160 = !DILocation(line: 1318, column: 13, scope: !6153)
!6161 = !DILocation(line: 1318, column: 36, scope: !6162)
!6162 = !DILexicalBlockFile(scope: !6153, file: !936, discriminator: 1)
!6163 = !DILocation(line: 1318, column: 39, scope: !6162)
!6164 = !DILocation(line: 1318, column: 20, scope: !6162)
!6165 = !DILocation(line: 1318, column: 43, scope: !6162)
!6166 = !DILocation(line: 1318, column: 49, scope: !6162)
!6167 = !DILocation(line: 1318, column: 52, scope: !6162)
!6168 = !DILocation(line: 1318, column: 47, scope: !6162)
!6169 = !DILocation(line: 1318, column: 67, scope: !6162)
!6170 = !DILocation(line: 1319, column: 38, scope: !6153)
!6171 = !DILocation(line: 1319, column: 41, scope: !6153)
!6172 = !DILocation(line: 1319, column: 28, scope: !6153)
!6173 = !DILocation(line: 1319, column: 26, scope: !6153)
!6174 = !DILocation(line: 1319, column: 49, scope: !6153)
!6175 = !DILocation(line: 1318, column: 13, scope: !6176)
!6176 = !DILexicalBlockFile(scope: !6153, file: !936, discriminator: 2)
!6177 = !DILocation(line: 1320, column: 23, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6153, file: !936, line: 1319, column: 56)
!6179 = !DILocation(line: 1318, column: 13, scope: !6180)
!6180 = !DILexicalBlockFile(scope: !6153, file: !936, discriminator: 3)
!6181 = distinct !{!6181, !6160}
!6182 = !DILocation(line: 1322, column: 29, scope: !6153)
!6183 = !DILocation(line: 1322, column: 37, scope: !6153)
!6184 = !DILocation(line: 1322, column: 35, scope: !6153)
!6185 = !DILocation(line: 1322, column: 45, scope: !6153)
!6186 = !DILocation(line: 1322, column: 43, scope: !6153)
!6187 = !DILocation(line: 1322, column: 53, scope: !6153)
!6188 = !DILocation(line: 1322, column: 51, scope: !6153)
!6189 = !DILocation(line: 1322, column: 24, scope: !6153)
!6190 = !DILocation(line: 1323, column: 9, scope: !6153)
!6191 = !DILocation(line: 1324, column: 13, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6015, file: !936, line: 1324, column: 13)
!6193 = !DILocation(line: 1324, column: 24, scope: !6192)
!6194 = !DILocation(line: 1324, column: 13, scope: !6015)
!6195 = !DILocation(line: 1325, column: 20, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6192, file: !936, line: 1324, column: 29)
!6197 = !DILocation(line: 1325, column: 23, scope: !6196)
!6198 = !DILocation(line: 1325, column: 13, scope: !6196)
!6199 = !DILocation(line: 1326, column: 9, scope: !6196)
!6200 = !DILocation(line: 1330, column: 13, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6015, file: !936, line: 1330, column: 13)
!6202 = !DILocation(line: 1330, column: 16, scope: !6201)
!6203 = !DILocation(line: 1330, column: 42, scope: !6201)
!6204 = !DILocation(line: 1330, column: 13, scope: !6015)
!6205 = !DILocation(line: 1331, column: 77, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6201, file: !936, line: 1330, column: 48)
!6207 = !DILocation(line: 1331, column: 24, scope: !6206)
!6208 = !DILocation(line: 1331, column: 27, scope: !6206)
!6209 = !DILocation(line: 1331, column: 13, scope: !6206)
!6210 = !DILocation(line: 1331, column: 16, scope: !6206)
!6211 = !DILocation(line: 1331, column: 64, scope: !6206)
!6212 = !DILocation(line: 1331, column: 75, scope: !6206)
!6213 = !DILocation(line: 1332, column: 9, scope: !6206)
!6214 = !DILocalVariable(name: "modifier_len", scope: !6215, file: !936, line: 1333, type: !914)
!6215 = distinct !DILexicalBlock(scope: !6201, file: !936, line: 1332, column: 16)
!6216 = !DILocation(line: 1333, column: 17, scope: !6215)
!6217 = !DILocation(line: 1333, column: 42, scope: !6215)
!6218 = !DILocation(line: 1333, column: 45, scope: !6215)
!6219 = !DILocation(line: 1333, column: 32, scope: !6215)
!6220 = !DILocation(line: 1334, column: 20, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6215, file: !936, line: 1334, column: 13)
!6222 = !DILocation(line: 1334, column: 18, scope: !6221)
!6223 = !DILocation(line: 1334, column: 25, scope: !6224)
!6224 = !DILexicalBlockFile(scope: !6225, file: !936, discriminator: 1)
!6225 = distinct !DILexicalBlock(scope: !6221, file: !936, line: 1334, column: 13)
!6226 = !DILocation(line: 1334, column: 29, scope: !6224)
!6227 = !DILocation(line: 1334, column: 32, scope: !6224)
!6228 = !DILocation(line: 1334, column: 27, scope: !6224)
!6229 = !DILocation(line: 1334, column: 13, scope: !6224)
!6230 = !DILocalVariable(name: "c", scope: !6231, file: !936, line: 1335, type: !914)
!6231 = distinct !DILexicalBlock(scope: !6225, file: !936, line: 1334, column: 64)
!6232 = !DILocation(line: 1335, column: 21, scope: !6231)
!6233 = !DILocation(line: 1335, column: 61, scope: !6231)
!6234 = !DILocation(line: 1335, column: 25, scope: !6231)
!6235 = !DILocation(line: 1335, column: 28, scope: !6231)
!6236 = !DILocation(line: 1336, column: 44, scope: !6231)
!6237 = !DILocation(line: 1336, column: 28, scope: !6231)
!6238 = !DILocation(line: 1336, column: 17, scope: !6231)
!6239 = !DILocation(line: 1336, column: 20, scope: !6231)
!6240 = !DILocation(line: 1336, column: 31, scope: !6231)
!6241 = !DILocation(line: 1336, column: 42, scope: !6231)
!6242 = !DILocation(line: 1337, column: 32, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6231, file: !936, line: 1337, column: 21)
!6244 = !DILocation(line: 1337, column: 35, scope: !6243)
!6245 = !DILocation(line: 1337, column: 21, scope: !6243)
!6246 = !DILocation(line: 1337, column: 21, scope: !6231)
!6247 = !DILocation(line: 1338, column: 25, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !936, line: 1338, column: 25)
!6249 = distinct !DILexicalBlock(scope: !6243, file: !936, line: 1337, column: 40)
!6250 = !DILocation(line: 1338, column: 25, scope: !6249)
!6251 = !DILocation(line: 1339, column: 63, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6248, file: !936, line: 1338, column: 39)
!6253 = !DILocation(line: 1339, column: 66, scope: !6252)
!6254 = !DILocation(line: 1339, column: 70, scope: !6252)
!6255 = !DILocation(line: 1339, column: 53, scope: !6252)
!6256 = !DILocation(line: 1339, column: 84, scope: !6252)
!6257 = !DILocation(line: 1339, column: 36, scope: !6252)
!6258 = !DILocation(line: 1339, column: 25, scope: !6252)
!6259 = !DILocation(line: 1339, column: 28, scope: !6252)
!6260 = !DILocation(line: 1339, column: 39, scope: !6252)
!6261 = !DILocation(line: 1339, column: 50, scope: !6252)
!6262 = !DILocation(line: 1340, column: 21, scope: !6252)
!6263 = !DILocation(line: 1341, column: 38, scope: !6248)
!6264 = !DILocation(line: 1341, column: 27, scope: !6248)
!6265 = !DILocation(line: 1341, column: 30, scope: !6248)
!6266 = !DILocation(line: 1341, column: 41, scope: !6248)
!6267 = !DILocation(line: 1341, column: 25, scope: !6248)
!6268 = !DILocation(line: 1342, column: 17, scope: !6249)
!6269 = !DILocation(line: 1343, column: 13, scope: !6231)
!6270 = !DILocation(line: 1334, column: 60, scope: !6271)
!6271 = !DILexicalBlockFile(scope: !6225, file: !936, discriminator: 2)
!6272 = !DILocation(line: 1334, column: 13, scope: !6271)
!6273 = distinct !{!6273, !6274}
!6274 = !DILocation(line: 1334, column: 13, scope: !6215)
!6275 = !DILocation(line: 1347, column: 34, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6015, file: !936, line: 1347, column: 13)
!6277 = !DILocation(line: 1347, column: 13, scope: !6276)
!6278 = !DILocation(line: 1347, column: 37, scope: !6276)
!6279 = !DILocation(line: 1347, column: 13, scope: !6015)
!6280 = !DILocation(line: 1348, column: 13, scope: !6276)
!6281 = !DILocation(line: 1349, column: 5, scope: !6015)
!6282 = !DILocation(line: 1351, column: 5, scope: !5610)
!6283 = distinct !{!6283, !6282}
!6284 = !DILocation(line: 1351, column: 130, scope: !6285)
!6285 = !DILexicalBlockFile(scope: !6286, file: !936, discriminator: 1)
!6286 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1351, column: 8)
!6287 = !DILocation(line: 1355, column: 12, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1355, column: 5)
!6289 = !DILocation(line: 1355, column: 10, scope: !6288)
!6290 = !DILocation(line: 1355, column: 17, scope: !6291)
!6291 = !DILexicalBlockFile(scope: !6292, file: !936, discriminator: 1)
!6292 = distinct !DILexicalBlock(scope: !6288, file: !936, line: 1355, column: 5)
!6293 = !DILocation(line: 1355, column: 21, scope: !6291)
!6294 = !DILocation(line: 1355, column: 24, scope: !6291)
!6295 = !DILocation(line: 1355, column: 19, scope: !6291)
!6296 = !DILocation(line: 1355, column: 5, scope: !6291)
!6297 = !DILocalVariable(name: "c", scope: !6298, file: !936, line: 1356, type: !914)
!6298 = distinct !DILexicalBlock(scope: !6292, file: !936, line: 1355, column: 56)
!6299 = !DILocation(line: 1356, column: 13, scope: !6298)
!6300 = !DILocation(line: 1356, column: 53, scope: !6298)
!6301 = !DILocation(line: 1356, column: 17, scope: !6298)
!6302 = !DILocation(line: 1356, column: 20, scope: !6298)
!6303 = !DILocation(line: 1357, column: 24, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6298, file: !936, line: 1357, column: 13)
!6305 = !DILocation(line: 1357, column: 13, scope: !6304)
!6306 = !DILocation(line: 1357, column: 16, scope: !6304)
!6307 = !DILocation(line: 1357, column: 27, scope: !6304)
!6308 = !DILocation(line: 1357, column: 42, scope: !6304)
!6309 = !DILocation(line: 1358, column: 29, scope: !6304)
!6310 = !DILocation(line: 1358, column: 32, scope: !6304)
!6311 = !DILocation(line: 1358, column: 13, scope: !6304)
!6312 = !DILocation(line: 1358, column: 38, scope: !6304)
!6313 = !DILocation(line: 1358, column: 41, scope: !6304)
!6314 = !DILocation(line: 1358, column: 36, scope: !6304)
!6315 = !DILocation(line: 1357, column: 13, scope: !6316)
!6316 = !DILexicalBlockFile(scope: !6298, file: !936, discriminator: 1)
!6317 = !DILocation(line: 1359, column: 27, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6304, file: !936, line: 1358, column: 57)
!6319 = !DILocation(line: 1359, column: 30, scope: !6318)
!6320 = !DILocation(line: 1359, column: 13, scope: !6318)
!6321 = !DILocation(line: 1360, column: 9, scope: !6318)
!6322 = !DILocation(line: 1361, column: 31, scope: !6304)
!6323 = !DILocation(line: 1361, column: 20, scope: !6304)
!6324 = !DILocation(line: 1361, column: 23, scope: !6304)
!6325 = !DILocation(line: 1361, column: 34, scope: !6304)
!6326 = !DILocation(line: 1361, column: 13, scope: !6304)
!6327 = !DILocation(line: 1362, column: 52, scope: !6304)
!6328 = !DILocation(line: 1362, column: 50, scope: !6304)
!6329 = !DILocation(line: 1363, column: 5, scope: !6298)
!6330 = !DILocation(line: 1355, column: 52, scope: !6331)
!6331 = !DILexicalBlockFile(scope: !6292, file: !936, discriminator: 2)
!6332 = !DILocation(line: 1355, column: 5, scope: !6331)
!6333 = distinct !{!6333, !6334}
!6334 = !DILocation(line: 1355, column: 5, scope: !5610)
!6335 = !DILocation(line: 1365, column: 5, scope: !5610)
!6336 = distinct !{!6336, !6335}
!6337 = !DILocation(line: 1365, column: 123, scope: !6338)
!6338 = !DILexicalBlockFile(scope: !6339, file: !936, discriminator: 1)
!6339 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1365, column: 8)
!6340 = !DILocation(line: 1368, column: 9, scope: !5625)
!6341 = !DILocation(line: 1368, column: 9, scope: !5610)
!6342 = !DILocalVariable(name: "mdct", scope: !5624, file: !936, line: 1369, type: !6343)
!6343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64, align: 64)
!6344 = !DILocation(line: 1369, column: 21, scope: !5624)
!6345 = !DILocation(line: 1369, column: 62, scope: !5624)
!6346 = !DILocation(line: 1369, column: 75, scope: !5624)
!6347 = !DILocation(line: 1369, column: 47, scope: !5624)
!6348 = !DILocation(line: 1369, column: 45, scope: !5624)
!6349 = !DILocation(line: 1369, column: 80, scope: !5624)
!6350 = !DILocation(line: 1369, column: 29, scope: !5624)
!6351 = !DILocation(line: 1369, column: 32, scope: !5624)
!6352 = !DILocation(line: 1371, column: 35, scope: !5624)
!6353 = !DILocation(line: 1371, column: 9, scope: !5624)
!6354 = !DILocation(line: 1372, column: 16, scope: !5623)
!6355 = !DILocation(line: 1372, column: 14, scope: !5623)
!6356 = !DILocation(line: 1372, column: 21, scope: !6357)
!6357 = !DILexicalBlockFile(scope: !5622, file: !936, discriminator: 1)
!6358 = !DILocation(line: 1372, column: 25, scope: !6357)
!6359 = !DILocation(line: 1372, column: 28, scope: !6357)
!6360 = !DILocation(line: 1372, column: 23, scope: !6357)
!6361 = !DILocation(line: 1372, column: 9, scope: !6357)
!6362 = !DILocalVariable(name: "c", scope: !5621, file: !936, line: 1373, type: !914)
!6363 = !DILocation(line: 1373, column: 17, scope: !5621)
!6364 = !DILocation(line: 1373, column: 57, scope: !5621)
!6365 = !DILocation(line: 1373, column: 21, scope: !5621)
!6366 = !DILocation(line: 1373, column: 24, scope: !5621)
!6367 = !DILocalVariable(name: "sf", scope: !5621, file: !936, line: 1374, type: !961)
!6368 = !DILocation(line: 1374, column: 24, scope: !5621)
!6369 = !DILocation(line: 1374, column: 40, scope: !5621)
!6370 = !DILocation(line: 1374, column: 29, scope: !5621)
!6371 = !DILocation(line: 1374, column: 32, scope: !5621)
!6372 = !DILocation(line: 1374, column: 43, scope: !5621)
!6373 = !DILocalVariable(name: "b", scope: !5621, file: !936, line: 1375, type: !914)
!6374 = !DILocation(line: 1375, column: 17, scope: !5621)
!6375 = !DILocation(line: 1377, column: 17, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !5621, file: !936, line: 1377, column: 17)
!6377 = !DILocation(line: 1377, column: 22, scope: !6376)
!6378 = !DILocation(line: 1377, column: 25, scope: !6376)
!6379 = !DILocation(line: 1377, column: 19, scope: !6376)
!6380 = !DILocation(line: 1377, column: 17, scope: !5621)
!6381 = !DILocation(line: 1378, column: 32, scope: !6376)
!6382 = !DILocation(line: 1378, column: 25, scope: !6376)
!6383 = !DILocation(line: 1378, column: 28, scope: !6376)
!6384 = !DILocation(line: 1378, column: 17, scope: !6376)
!6385 = !DILocation(line: 1379, column: 25, scope: !6376)
!6386 = !DILocation(line: 1379, column: 40, scope: !6376)
!6387 = !DILocation(line: 1379, column: 38, scope: !6376)
!6388 = !DILocation(line: 1379, column: 24, scope: !6376)
!6389 = !DILocation(line: 1378, column: 74, scope: !6376)
!6390 = !DILocation(line: 1382, column: 20, scope: !5620)
!6391 = !DILocation(line: 1382, column: 18, scope: !5620)
!6392 = !DILocation(line: 1382, column: 25, scope: !6393)
!6393 = !DILexicalBlockFile(scope: !5619, file: !936, discriminator: 1)
!6394 = !DILocation(line: 1382, column: 29, scope: !6393)
!6395 = !DILocation(line: 1382, column: 32, scope: !6393)
!6396 = !DILocation(line: 1382, column: 27, scope: !6393)
!6397 = !DILocation(line: 1382, column: 13, scope: !6393)
!6398 = !DILocalVariable(name: "end", scope: !5618, file: !936, line: 1383, type: !962)
!6399 = !DILocation(line: 1383, column: 27, scope: !5618)
!6400 = !DILocation(line: 1383, column: 54, scope: !5618)
!6401 = !DILocation(line: 1383, column: 55, scope: !5618)
!6402 = !DILocation(line: 1383, column: 35, scope: !5618)
!6403 = !DILocation(line: 1383, column: 38, scope: !5618)
!6404 = !DILocation(line: 1383, column: 34, scope: !5618)
!6405 = !DILocation(line: 1383, column: 63, scope: !5618)
!6406 = !DILocation(line: 1383, column: 66, scope: !5618)
!6407 = !DILocation(line: 1383, column: 62, scope: !5618)
!6408 = !DILocation(line: 1383, column: 60, scope: !5618)
!6409 = !DILocation(line: 1383, column: 83, scope: !6410)
!6410 = !DILexicalBlockFile(scope: !5618, file: !936, discriminator: 1)
!6411 = !DILocation(line: 1383, column: 86, scope: !6410)
!6412 = !DILocation(line: 1383, column: 82, scope: !6410)
!6413 = !DILocation(line: 1383, column: 34, scope: !6410)
!6414 = !DILocation(line: 1383, column: 122, scope: !6415)
!6415 = !DILexicalBlockFile(scope: !5618, file: !936, discriminator: 2)
!6416 = !DILocation(line: 1383, column: 123, scope: !6415)
!6417 = !DILocation(line: 1383, column: 103, scope: !6415)
!6418 = !DILocation(line: 1383, column: 106, scope: !6415)
!6419 = !DILocation(line: 1383, column: 102, scope: !6415)
!6420 = !DILocation(line: 1383, column: 34, scope: !6415)
!6421 = !DILocation(line: 1383, column: 34, scope: !6422)
!6422 = !DILexicalBlockFile(scope: !5618, file: !936, discriminator: 3)
!6423 = !DILocation(line: 1383, column: 27, scope: !6422)
!6424 = !DILocalVariable(name: "exp", scope: !5618, file: !936, line: 1384, type: !962)
!6425 = !DILocation(line: 1384, column: 27, scope: !5618)
!6426 = !DILocation(line: 1384, column: 44, scope: !5618)
!6427 = !DILocation(line: 1384, column: 33, scope: !5618)
!6428 = !DILocation(line: 1384, column: 36, scope: !5618)
!6429 = !DILocation(line: 1384, column: 47, scope: !5618)
!6430 = !DILocation(line: 1385, column: 41, scope: !5618)
!6431 = !DILocation(line: 1385, column: 30, scope: !5618)
!6432 = !DILocation(line: 1385, column: 33, scope: !5618)
!6433 = !DILocation(line: 1385, column: 44, scope: !5618)
!6434 = !DILocation(line: 1385, column: 66, scope: !5618)
!6435 = !DILocation(line: 1385, column: 63, scope: !5618)
!6436 = !DILocation(line: 1385, column: 61, scope: !5618)
!6437 = !DILocation(line: 1386, column: 40, scope: !5618)
!6438 = !DILocation(line: 1386, column: 29, scope: !5618)
!6439 = !DILocation(line: 1386, column: 32, scope: !5618)
!6440 = !DILocation(line: 1386, column: 43, scope: !5618)
!6441 = !DILocation(line: 1385, column: 70, scope: !5618)
!6442 = !DILocation(line: 1384, column: 58, scope: !5618)
!6443 = !DILocalVariable(name: "quant", scope: !5618, file: !936, line: 1387, type: !1681)
!6444 = !DILocation(line: 1387, column: 29, scope: !5618)
!6445 = !DILocation(line: 1387, column: 46, scope: !5618)
!6446 = !DILocation(line: 1387, column: 50, scope: !5618)
!6447 = !DILocation(line: 1387, column: 37, scope: !5618)
!6448 = !DILocation(line: 44, column: 42, scope: !5612, inlinedAt: !5617)
!6449 = !DILocation(line: 44, column: 40, scope: !5612, inlinedAt: !5617)
!6450 = !DILocation(line: 44, column: 12, scope: !5612, inlinedAt: !5617)
!6451 = !DILocalVariable(name: "start", scope: !5618, file: !936, line: 1388, type: !914)
!6452 = !DILocation(line: 1388, column: 21, scope: !5618)
!6453 = !DILocation(line: 1388, column: 48, scope: !5618)
!6454 = !DILocation(line: 1388, column: 29, scope: !5618)
!6455 = !DILocation(line: 1388, column: 32, scope: !5618)
!6456 = !DILocation(line: 1389, column: 17, scope: !5618)
!6457 = !DILocation(line: 1389, column: 20, scope: !5618)
!6458 = !DILocation(line: 1389, column: 26, scope: !5618)
!6459 = !DILocation(line: 1389, column: 45, scope: !5618)
!6460 = !DILocation(line: 1389, column: 48, scope: !5618)
!6461 = !DILocation(line: 1389, column: 54, scope: !5618)
!6462 = !DILocation(line: 1389, column: 52, scope: !5618)
!6463 = !DILocation(line: 1390, column: 55, scope: !5618)
!6464 = !DILocation(line: 1390, column: 44, scope: !5618)
!6465 = !DILocation(line: 1390, column: 47, scope: !5618)
!6466 = !DILocation(line: 1390, column: 58, scope: !5618)
!6467 = !DILocation(line: 1390, column: 67, scope: !5618)
!6468 = !DILocation(line: 1390, column: 65, scope: !5618)
!6469 = !DILocation(line: 1391, column: 44, scope: !5618)
!6470 = !DILocation(line: 1391, column: 51, scope: !5618)
!6471 = !DILocation(line: 1391, column: 57, scope: !5618)
!6472 = !DILocation(line: 1391, column: 55, scope: !5618)
!6473 = !DILocation(line: 1392, column: 13, scope: !5618)
!6474 = !DILocation(line: 1382, column: 44, scope: !6475)
!6475 = !DILexicalBlockFile(scope: !5619, file: !936, discriminator: 2)
!6476 = !DILocation(line: 1382, column: 13, scope: !6475)
!6477 = distinct !{!6477, !6478}
!6478 = !DILocation(line: 1382, column: 13, scope: !5621)
!6479 = !DILocation(line: 1395, column: 13, scope: !5621)
!6480 = !DILocation(line: 1395, column: 19, scope: !5621)
!6481 = !DILocation(line: 1395, column: 30, scope: !5621)
!6482 = !DILocation(line: 1395, column: 47, scope: !5621)
!6483 = !DILocation(line: 1395, column: 36, scope: !5621)
!6484 = !DILocation(line: 1395, column: 39, scope: !5621)
!6485 = !DILocation(line: 1395, column: 50, scope: !5621)
!6486 = !DILocation(line: 1395, column: 58, scope: !5621)
!6487 = !DILocation(line: 1395, column: 61, scope: !5621)
!6488 = !DILocation(line: 1396, column: 9, scope: !5621)
!6489 = !DILocation(line: 1372, column: 56, scope: !6490)
!6490 = !DILexicalBlockFile(scope: !5622, file: !936, discriminator: 2)
!6491 = !DILocation(line: 1372, column: 9, scope: !6490)
!6492 = distinct !{!6492, !6493}
!6493 = !DILocation(line: 1372, column: 9, scope: !5624)
!6494 = !DILocation(line: 1397, column: 5, scope: !5624)
!6495 = !DILocation(line: 1400, column: 19, scope: !5610)
!6496 = !DILocation(line: 1400, column: 5, scope: !5610)
!6497 = !DILocation(line: 1403, column: 12, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !5610, file: !936, line: 1403, column: 5)
!6499 = !DILocation(line: 1403, column: 10, scope: !6498)
!6500 = !DILocation(line: 1403, column: 17, scope: !6501)
!6501 = !DILexicalBlockFile(scope: !6502, file: !936, discriminator: 1)
!6502 = distinct !DILexicalBlock(scope: !6498, file: !936, line: 1403, column: 5)
!6503 = !DILocation(line: 1403, column: 21, scope: !6501)
!6504 = !DILocation(line: 1403, column: 24, scope: !6501)
!6505 = !DILocation(line: 1403, column: 19, scope: !6501)
!6506 = !DILocation(line: 1403, column: 5, scope: !6501)
!6507 = !DILocalVariable(name: "c", scope: !6508, file: !936, line: 1404, type: !914)
!6508 = distinct !DILexicalBlock(scope: !6502, file: !936, line: 1403, column: 56)
!6509 = !DILocation(line: 1404, column: 13, scope: !6508)
!6510 = !DILocation(line: 1404, column: 53, scope: !6508)
!6511 = !DILocation(line: 1404, column: 17, scope: !6508)
!6512 = !DILocation(line: 1404, column: 20, scope: !6508)
!6513 = !DILocation(line: 1405, column: 24, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6508, file: !936, line: 1405, column: 13)
!6515 = !DILocation(line: 1405, column: 13, scope: !6514)
!6516 = !DILocation(line: 1405, column: 16, scope: !6514)
!6517 = !DILocation(line: 1405, column: 27, scope: !6514)
!6518 = !DILocation(line: 1405, column: 54, scope: !6514)
!6519 = !DILocation(line: 1405, column: 43, scope: !6514)
!6520 = !DILocation(line: 1405, column: 46, scope: !6514)
!6521 = !DILocation(line: 1405, column: 57, scope: !6514)
!6522 = !DILocation(line: 1405, column: 40, scope: !6514)
!6523 = !DILocation(line: 1405, column: 13, scope: !6508)
!6524 = !DILocation(line: 1406, column: 20, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6514, file: !936, line: 1405, column: 72)
!6526 = !DILocation(line: 1406, column: 23, scope: !6525)
!6527 = !DILocation(line: 1406, column: 13, scope: !6525)
!6528 = !DILocation(line: 1407, column: 13, scope: !6525)
!6529 = !DILocation(line: 1409, column: 22, scope: !6508)
!6530 = !DILocation(line: 1409, column: 11, scope: !6508)
!6531 = !DILocation(line: 1409, column: 14, scope: !6508)
!6532 = !DILocation(line: 1409, column: 25, scope: !6508)
!6533 = !DILocation(line: 1409, column: 9, scope: !6508)
!6534 = !DILocation(line: 1410, column: 5, scope: !6508)
!6535 = !DILocation(line: 1403, column: 52, scope: !6536)
!6536 = !DILexicalBlockFile(scope: !6502, file: !936, discriminator: 2)
!6537 = !DILocation(line: 1403, column: 5, scope: !6536)
!6538 = distinct !{!6538, !6539}
!6539 = !DILocation(line: 1403, column: 5, scope: !5610)
!6540 = !DILocation(line: 1412, column: 5, scope: !5610)
!6541 = !DILocation(line: 1413, column: 1, scope: !5610)
!6542 = distinct !DISubprogram(name: "decode_subframe_length", scope: !936, file: !936, line: 594, type: !1999, isLocal: true, isDefinition: true, scopeLine: 595, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!6543 = !DILocalVariable(name: "s", arg: 1, scope: !6542, file: !936, line: 594, type: !1664)
!6544 = !DILocation(line: 594, column: 52, scope: !6542)
!6545 = !DILocalVariable(name: "offset", arg: 2, scope: !6542, file: !936, line: 594, type: !914)
!6546 = !DILocation(line: 594, column: 59, scope: !6542)
!6547 = !DILocalVariable(name: "frame_len_shift", scope: !6542, file: !936, line: 596, type: !914)
!6548 = !DILocation(line: 596, column: 9, scope: !6542)
!6549 = !DILocalVariable(name: "subframe_len", scope: !6542, file: !936, line: 597, type: !914)
!6550 = !DILocation(line: 597, column: 9, scope: !6542)
!6551 = !DILocation(line: 600, column: 9, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6542, file: !936, line: 600, column: 9)
!6553 = !DILocation(line: 600, column: 19, scope: !6552)
!6554 = !DILocation(line: 600, column: 22, scope: !6552)
!6555 = !DILocation(line: 600, column: 42, scope: !6552)
!6556 = !DILocation(line: 600, column: 45, scope: !6552)
!6557 = !DILocation(line: 600, column: 40, scope: !6552)
!6558 = !DILocation(line: 600, column: 16, scope: !6552)
!6559 = !DILocation(line: 600, column: 9, scope: !6542)
!6560 = !DILocation(line: 601, column: 16, scope: !6552)
!6561 = !DILocation(line: 601, column: 19, scope: !6552)
!6562 = !DILocation(line: 601, column: 9, scope: !6552)
!6563 = !DILocation(line: 603, column: 24, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6542, file: !936, line: 603, column: 9)
!6565 = !DILocation(line: 603, column: 27, scope: !6564)
!6566 = !DILocation(line: 603, column: 9, scope: !6564)
!6567 = !DILocation(line: 603, column: 31, scope: !6564)
!6568 = !DILocation(line: 603, column: 9, scope: !6542)
!6569 = !DILocation(line: 604, column: 9, scope: !6564)
!6570 = !DILocation(line: 607, column: 9, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6542, file: !936, line: 607, column: 9)
!6572 = !DILocation(line: 607, column: 12, scope: !6571)
!6573 = !DILocation(line: 607, column: 9, scope: !6542)
!6574 = !DILocation(line: 608, column: 24, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6576, file: !936, line: 608, column: 13)
!6576 = distinct !DILexicalBlock(scope: !6571, file: !936, line: 607, column: 34)
!6577 = !DILocation(line: 608, column: 27, scope: !6575)
!6578 = !DILocation(line: 608, column: 13, scope: !6575)
!6579 = !DILocation(line: 608, column: 13, scope: !6576)
!6580 = !DILocation(line: 609, column: 45, scope: !6575)
!6581 = !DILocation(line: 609, column: 48, scope: !6575)
!6582 = !DILocation(line: 609, column: 52, scope: !6575)
!6583 = !DILocation(line: 609, column: 55, scope: !6575)
!6584 = !DILocation(line: 609, column: 72, scope: !6575)
!6585 = !DILocation(line: 609, column: 35, scope: !6575)
!6586 = !DILocation(line: 609, column: 33, scope: !6575)
!6587 = !DILocation(line: 609, column: 29, scope: !6575)
!6588 = !DILocation(line: 609, column: 13, scope: !6575)
!6589 = !DILocation(line: 610, column: 5, scope: !6576)
!6590 = !DILocation(line: 611, column: 37, scope: !6571)
!6591 = !DILocation(line: 611, column: 40, scope: !6571)
!6592 = !DILocation(line: 611, column: 44, scope: !6571)
!6593 = !DILocation(line: 611, column: 47, scope: !6571)
!6594 = !DILocation(line: 611, column: 27, scope: !6571)
!6595 = !DILocation(line: 611, column: 25, scope: !6571)
!6596 = !DILocation(line: 613, column: 20, scope: !6542)
!6597 = !DILocation(line: 613, column: 23, scope: !6542)
!6598 = !DILocation(line: 613, column: 44, scope: !6542)
!6599 = !DILocation(line: 613, column: 41, scope: !6542)
!6600 = !DILocation(line: 613, column: 18, scope: !6542)
!6601 = !DILocation(line: 616, column: 9, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6542, file: !936, line: 616, column: 9)
!6603 = !DILocation(line: 616, column: 24, scope: !6602)
!6604 = !DILocation(line: 616, column: 27, scope: !6602)
!6605 = !DILocation(line: 616, column: 22, scope: !6602)
!6606 = !DILocation(line: 616, column: 52, scope: !6602)
!6607 = !DILocation(line: 617, column: 9, scope: !6602)
!6608 = !DILocation(line: 617, column: 24, scope: !6602)
!6609 = !DILocation(line: 617, column: 27, scope: !6602)
!6610 = !DILocation(line: 617, column: 22, scope: !6602)
!6611 = !DILocation(line: 616, column: 9, scope: !6612)
!6612 = !DILexicalBlockFile(scope: !6542, file: !936, discriminator: 1)
!6613 = !DILocation(line: 618, column: 16, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6602, file: !936, line: 617, column: 46)
!6615 = !DILocation(line: 618, column: 19, scope: !6614)
!6616 = !DILocation(line: 619, column: 16, scope: !6614)
!6617 = !DILocation(line: 618, column: 9, scope: !6614)
!6618 = !DILocation(line: 620, column: 9, scope: !6614)
!6619 = !DILocation(line: 622, column: 12, scope: !6542)
!6620 = !DILocation(line: 622, column: 5, scope: !6542)
!6621 = !DILocation(line: 623, column: 1, scope: !6542)
!6622 = distinct !DISubprogram(name: "get_bits_left", scope: !1808, file: !1808, line: 814, type: !6623, isLocal: true, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!6623 = !DISubroutineType(types: !6624)
!6624 = !{!914, !3822}
!6625 = !DILocalVariable(name: "gb", arg: 1, scope: !6622, file: !1808, line: 814, type: !3822)
!6626 = !DILocation(line: 814, column: 48, scope: !6622)
!6627 = !DILocation(line: 816, column: 12, scope: !6622)
!6628 = !DILocation(line: 816, column: 16, scope: !6622)
!6629 = !DILocation(line: 816, column: 46, scope: !6622)
!6630 = !DILocation(line: 816, column: 31, scope: !6622)
!6631 = !DILocation(line: 816, column: 29, scope: !6622)
!6632 = !DILocation(line: 816, column: 5, scope: !6622)
!6633 = distinct !DISubprogram(name: "decode_channel_transform", scope: !936, file: !936, line: 786, type: !5304, isLocal: true, isDefinition: true, scopeLine: 787, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!6634 = !DILocalVariable(name: "s", arg: 1, scope: !6633, file: !936, line: 786, type: !1664)
!6635 = !DILocation(line: 786, column: 54, scope: !6633)
!6636 = !DILocalVariable(name: "i", scope: !6633, file: !936, line: 788, type: !914)
!6637 = !DILocation(line: 788, column: 9, scope: !6633)
!6638 = !DILocation(line: 795, column: 5, scope: !6633)
!6639 = !DILocation(line: 795, column: 8, scope: !6633)
!6640 = !DILocation(line: 795, column: 21, scope: !6633)
!6641 = !DILocation(line: 796, column: 9, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6633, file: !936, line: 796, column: 9)
!6643 = !DILocation(line: 796, column: 12, scope: !6642)
!6644 = !DILocation(line: 796, column: 24, scope: !6642)
!6645 = !DILocation(line: 796, column: 9, scope: !6633)
!6646 = !DILocalVariable(name: "remaining_channels", scope: !6647, file: !936, line: 797, type: !914)
!6647 = distinct !DILexicalBlock(scope: !6642, file: !936, line: 796, column: 29)
!6648 = !DILocation(line: 797, column: 13, scope: !6647)
!6649 = !DILocation(line: 797, column: 34, scope: !6647)
!6650 = !DILocation(line: 797, column: 37, scope: !6647)
!6651 = !DILocation(line: 799, column: 24, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6647, file: !936, line: 799, column: 13)
!6653 = !DILocation(line: 799, column: 27, scope: !6652)
!6654 = !DILocation(line: 799, column: 13, scope: !6652)
!6655 = !DILocation(line: 799, column: 13, scope: !6647)
!6656 = !DILocation(line: 800, column: 35, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6652, file: !936, line: 799, column: 32)
!6658 = !DILocation(line: 800, column: 38, scope: !6657)
!6659 = !DILocation(line: 800, column: 13, scope: !6657)
!6660 = !DILocation(line: 802, column: 13, scope: !6657)
!6661 = !DILocation(line: 805, column: 14, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6647, file: !936, line: 805, column: 9)
!6663 = !DILocation(line: 805, column: 17, scope: !6662)
!6664 = !DILocation(line: 805, column: 30, scope: !6662)
!6665 = !DILocation(line: 805, column: 35, scope: !6666)
!6666 = !DILexicalBlockFile(scope: !6667, file: !936, discriminator: 1)
!6667 = distinct !DILexicalBlock(scope: !6662, file: !936, line: 805, column: 9)
!6668 = !DILocation(line: 805, column: 54, scope: !6666)
!6669 = !DILocation(line: 806, column: 14, scope: !6667)
!6670 = !DILocation(line: 806, column: 17, scope: !6667)
!6671 = !DILocation(line: 806, column: 32, scope: !6667)
!6672 = !DILocation(line: 806, column: 35, scope: !6667)
!6673 = !DILocation(line: 806, column: 30, scope: !6667)
!6674 = !DILocation(line: 805, column: 9, scope: !6675)
!6675 = !DILexicalBlockFile(scope: !6662, file: !936, discriminator: 2)
!6676 = !DILocalVariable(name: "chgroup", scope: !6677, file: !936, line: 807, type: !6678)
!6677 = distinct !DILexicalBlock(scope: !6667, file: !936, line: 806, column: 81)
!6678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64, align: 64)
!6679 = !DILocation(line: 807, column: 31, scope: !6677)
!6680 = !DILocation(line: 807, column: 53, scope: !6677)
!6681 = !DILocation(line: 807, column: 56, scope: !6677)
!6682 = !DILocation(line: 807, column: 42, scope: !6677)
!6683 = !DILocation(line: 807, column: 45, scope: !6677)
!6684 = !DILocalVariable(name: "channel_data", scope: !6677, file: !936, line: 808, type: !6685)
!6685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64, align: 64)
!6686 = !DILocation(line: 808, column: 21, scope: !6677)
!6687 = !DILocation(line: 808, column: 36, scope: !6677)
!6688 = !DILocation(line: 808, column: 45, scope: !6677)
!6689 = !DILocation(line: 809, column: 13, scope: !6677)
!6690 = !DILocation(line: 809, column: 22, scope: !6677)
!6691 = !DILocation(line: 809, column: 35, scope: !6677)
!6692 = !DILocation(line: 810, column: 13, scope: !6677)
!6693 = !DILocation(line: 810, column: 22, scope: !6677)
!6694 = !DILocation(line: 810, column: 32, scope: !6677)
!6695 = !DILocation(line: 813, column: 17, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6677, file: !936, line: 813, column: 17)
!6697 = !DILocation(line: 813, column: 36, scope: !6696)
!6698 = !DILocation(line: 813, column: 17, scope: !6677)
!6699 = !DILocation(line: 814, column: 24, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6701, file: !936, line: 814, column: 17)
!6701 = distinct !DILexicalBlock(scope: !6696, file: !936, line: 813, column: 41)
!6702 = !DILocation(line: 814, column: 22, scope: !6700)
!6703 = !DILocation(line: 814, column: 29, scope: !6704)
!6704 = !DILexicalBlockFile(scope: !6705, file: !936, discriminator: 1)
!6705 = distinct !DILexicalBlock(scope: !6700, file: !936, line: 814, column: 17)
!6706 = !DILocation(line: 814, column: 33, scope: !6704)
!6707 = !DILocation(line: 814, column: 36, scope: !6704)
!6708 = !DILocation(line: 814, column: 31, scope: !6704)
!6709 = !DILocation(line: 814, column: 17, scope: !6704)
!6710 = !DILocalVariable(name: "channel_idx", scope: !6711, file: !936, line: 815, type: !914)
!6711 = distinct !DILexicalBlock(scope: !6705, file: !936, line: 814, column: 68)
!6712 = !DILocation(line: 815, column: 25, scope: !6711)
!6713 = !DILocation(line: 815, column: 75, scope: !6711)
!6714 = !DILocation(line: 815, column: 39, scope: !6711)
!6715 = !DILocation(line: 815, column: 42, scope: !6711)
!6716 = !DILocation(line: 816, column: 37, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6711, file: !936, line: 816, column: 25)
!6718 = !DILocation(line: 816, column: 26, scope: !6717)
!6719 = !DILocation(line: 816, column: 29, scope: !6717)
!6720 = !DILocation(line: 816, column: 50, scope: !6717)
!6721 = !DILocation(line: 817, column: 25, scope: !6717)
!6722 = !DILocation(line: 817, column: 39, scope: !6723)
!6723 = !DILexicalBlockFile(scope: !6717, file: !936, discriminator: 1)
!6724 = !DILocation(line: 817, column: 42, scope: !6723)
!6725 = !DILocation(line: 817, column: 28, scope: !6723)
!6726 = !DILocation(line: 816, column: 25, scope: !6727)
!6727 = !DILexicalBlockFile(scope: !6711, file: !936, discriminator: 1)
!6728 = !DILocation(line: 818, column: 27, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6717, file: !936, line: 817, column: 47)
!6730 = !DILocation(line: 818, column: 36, scope: !6729)
!6731 = !DILocation(line: 818, column: 25, scope: !6729)
!6732 = !DILocation(line: 819, column: 36, scope: !6729)
!6733 = !DILocation(line: 819, column: 25, scope: !6729)
!6734 = !DILocation(line: 819, column: 28, scope: !6729)
!6735 = !DILocation(line: 819, column: 49, scope: !6729)
!6736 = !DILocation(line: 819, column: 57, scope: !6729)
!6737 = !DILocation(line: 820, column: 54, scope: !6729)
!6738 = !DILocation(line: 820, column: 43, scope: !6729)
!6739 = !DILocation(line: 820, column: 46, scope: !6729)
!6740 = !DILocation(line: 820, column: 67, scope: !6729)
!6741 = !DILocation(line: 820, column: 38, scope: !6729)
!6742 = !DILocation(line: 820, column: 41, scope: !6729)
!6743 = !DILocation(line: 821, column: 21, scope: !6729)
!6744 = !DILocation(line: 822, column: 17, scope: !6711)
!6745 = !DILocation(line: 814, column: 64, scope: !6746)
!6746 = !DILexicalBlockFile(scope: !6705, file: !936, discriminator: 2)
!6747 = !DILocation(line: 814, column: 17, scope: !6746)
!6748 = distinct !{!6748, !6749}
!6749 = !DILocation(line: 814, column: 17, scope: !6701)
!6750 = !DILocation(line: 823, column: 13, scope: !6701)
!6751 = !DILocation(line: 824, column: 41, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6696, file: !936, line: 823, column: 20)
!6753 = !DILocation(line: 824, column: 17, scope: !6752)
!6754 = !DILocation(line: 824, column: 26, scope: !6752)
!6755 = !DILocation(line: 824, column: 39, scope: !6752)
!6756 = !DILocation(line: 825, column: 24, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6752, file: !936, line: 825, column: 17)
!6758 = !DILocation(line: 825, column: 22, scope: !6757)
!6759 = !DILocation(line: 825, column: 29, scope: !6760)
!6760 = !DILexicalBlockFile(scope: !6761, file: !936, discriminator: 1)
!6761 = distinct !DILexicalBlock(scope: !6757, file: !936, line: 825, column: 17)
!6762 = !DILocation(line: 825, column: 33, scope: !6760)
!6763 = !DILocation(line: 825, column: 36, scope: !6760)
!6764 = !DILocation(line: 825, column: 31, scope: !6760)
!6765 = !DILocation(line: 825, column: 17, scope: !6760)
!6766 = !DILocalVariable(name: "channel_idx", scope: !6767, file: !936, line: 826, type: !914)
!6767 = distinct !DILexicalBlock(scope: !6761, file: !936, line: 825, column: 68)
!6768 = !DILocation(line: 826, column: 25, scope: !6767)
!6769 = !DILocation(line: 826, column: 75, scope: !6767)
!6770 = !DILocation(line: 826, column: 39, scope: !6767)
!6771 = !DILocation(line: 826, column: 42, scope: !6767)
!6772 = !DILocation(line: 827, column: 37, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6767, file: !936, line: 827, column: 25)
!6774 = !DILocation(line: 827, column: 26, scope: !6773)
!6775 = !DILocation(line: 827, column: 29, scope: !6773)
!6776 = !DILocation(line: 827, column: 50, scope: !6773)
!6777 = !DILocation(line: 827, column: 25, scope: !6767)
!6778 = !DILocation(line: 828, column: 54, scope: !6773)
!6779 = !DILocation(line: 828, column: 43, scope: !6773)
!6780 = !DILocation(line: 828, column: 46, scope: !6773)
!6781 = !DILocation(line: 828, column: 67, scope: !6773)
!6782 = !DILocation(line: 828, column: 38, scope: !6773)
!6783 = !DILocation(line: 828, column: 41, scope: !6773)
!6784 = !DILocation(line: 828, column: 25, scope: !6773)
!6785 = !DILocation(line: 829, column: 32, scope: !6767)
!6786 = !DILocation(line: 829, column: 21, scope: !6767)
!6787 = !DILocation(line: 829, column: 24, scope: !6767)
!6788 = !DILocation(line: 829, column: 45, scope: !6767)
!6789 = !DILocation(line: 829, column: 53, scope: !6767)
!6790 = !DILocation(line: 830, column: 17, scope: !6767)
!6791 = !DILocation(line: 825, column: 64, scope: !6792)
!6792 = !DILexicalBlockFile(scope: !6761, file: !936, discriminator: 2)
!6793 = !DILocation(line: 825, column: 17, scope: !6792)
!6794 = distinct !{!6794, !6795}
!6795 = !DILocation(line: 825, column: 17, scope: !6752)
!6796 = !DILocation(line: 834, column: 17, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6677, file: !936, line: 834, column: 17)
!6798 = !DILocation(line: 834, column: 26, scope: !6797)
!6799 = !DILocation(line: 834, column: 39, scope: !6797)
!6800 = !DILocation(line: 834, column: 17, scope: !6677)
!6801 = !DILocation(line: 835, column: 32, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !936, line: 835, column: 21)
!6803 = distinct !DILexicalBlock(scope: !6797, file: !936, line: 834, column: 45)
!6804 = !DILocation(line: 835, column: 35, scope: !6802)
!6805 = !DILocation(line: 835, column: 21, scope: !6802)
!6806 = !DILocation(line: 835, column: 21, scope: !6803)
!6807 = !DILocation(line: 836, column: 36, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6809, file: !936, line: 836, column: 25)
!6809 = distinct !DILexicalBlock(scope: !6802, file: !936, line: 835, column: 40)
!6810 = !DILocation(line: 836, column: 39, scope: !6808)
!6811 = !DILocation(line: 836, column: 25, scope: !6808)
!6812 = !DILocation(line: 836, column: 25, scope: !6809)
!6813 = !DILocation(line: 837, column: 47, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6808, file: !936, line: 836, column: 44)
!6815 = !DILocation(line: 837, column: 50, scope: !6814)
!6816 = !DILocation(line: 837, column: 25, scope: !6814)
!6817 = !DILocation(line: 839, column: 25, scope: !6814)
!6818 = !DILocation(line: 841, column: 17, scope: !6809)
!6819 = !DILocation(line: 842, column: 21, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6802, file: !936, line: 841, column: 24)
!6821 = !DILocation(line: 842, column: 30, scope: !6820)
!6822 = !DILocation(line: 842, column: 40, scope: !6820)
!6823 = !DILocation(line: 843, column: 25, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6820, file: !936, line: 843, column: 25)
!6825 = !DILocation(line: 843, column: 28, scope: !6824)
!6826 = !DILocation(line: 843, column: 40, scope: !6824)
!6827 = !DILocation(line: 843, column: 25, scope: !6820)
!6828 = !DILocation(line: 844, column: 25, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6824, file: !936, line: 843, column: 46)
!6830 = !DILocation(line: 844, column: 34, scope: !6829)
!6831 = !DILocation(line: 844, column: 58, scope: !6829)
!6832 = !DILocation(line: 845, column: 25, scope: !6829)
!6833 = !DILocation(line: 845, column: 34, scope: !6829)
!6834 = !DILocation(line: 845, column: 58, scope: !6829)
!6835 = !DILocation(line: 846, column: 25, scope: !6829)
!6836 = !DILocation(line: 846, column: 34, scope: !6829)
!6837 = !DILocation(line: 846, column: 58, scope: !6829)
!6838 = !DILocation(line: 847, column: 25, scope: !6829)
!6839 = !DILocation(line: 847, column: 34, scope: !6829)
!6840 = !DILocation(line: 847, column: 58, scope: !6829)
!6841 = !DILocation(line: 848, column: 21, scope: !6829)
!6842 = !DILocation(line: 850, column: 25, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6824, file: !936, line: 848, column: 28)
!6844 = !DILocation(line: 850, column: 34, scope: !6843)
!6845 = !DILocation(line: 850, column: 58, scope: !6843)
!6846 = !DILocation(line: 851, column: 25, scope: !6843)
!6847 = !DILocation(line: 851, column: 34, scope: !6843)
!6848 = !DILocation(line: 851, column: 58, scope: !6843)
!6849 = !DILocation(line: 852, column: 25, scope: !6843)
!6850 = !DILocation(line: 852, column: 34, scope: !6843)
!6851 = !DILocation(line: 852, column: 58, scope: !6843)
!6852 = !DILocation(line: 853, column: 25, scope: !6843)
!6853 = !DILocation(line: 853, column: 34, scope: !6843)
!6854 = !DILocation(line: 853, column: 58, scope: !6843)
!6855 = !DILocation(line: 856, column: 13, scope: !6803)
!6856 = !DILocation(line: 856, column: 24, scope: !6857)
!6857 = !DILexicalBlockFile(scope: !6858, file: !936, discriminator: 1)
!6858 = distinct !DILexicalBlock(scope: !6797, file: !936, line: 856, column: 24)
!6859 = !DILocation(line: 856, column: 33, scope: !6857)
!6860 = !DILocation(line: 856, column: 46, scope: !6857)
!6861 = !DILocation(line: 857, column: 32, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6863, file: !936, line: 857, column: 21)
!6863 = distinct !DILexicalBlock(scope: !6858, file: !936, line: 856, column: 51)
!6864 = !DILocation(line: 857, column: 35, scope: !6862)
!6865 = !DILocation(line: 857, column: 21, scope: !6862)
!6866 = !DILocation(line: 857, column: 21, scope: !6863)
!6867 = !DILocation(line: 858, column: 21, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6862, file: !936, line: 857, column: 40)
!6869 = !DILocation(line: 858, column: 30, scope: !6868)
!6870 = !DILocation(line: 858, column: 40, scope: !6868)
!6871 = !DILocation(line: 859, column: 36, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6868, file: !936, line: 859, column: 25)
!6873 = !DILocation(line: 859, column: 39, scope: !6872)
!6874 = !DILocation(line: 859, column: 25, scope: !6872)
!6875 = !DILocation(line: 859, column: 25, scope: !6868)
!6876 = !DILocation(line: 860, column: 53, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6872, file: !936, line: 859, column: 44)
!6878 = !DILocation(line: 860, column: 56, scope: !6877)
!6879 = !DILocation(line: 860, column: 25, scope: !6877)
!6880 = !DILocation(line: 861, column: 21, scope: !6877)
!6881 = !DILocation(line: 863, column: 29, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !936, line: 863, column: 29)
!6883 = distinct !DILexicalBlock(scope: !6872, file: !936, line: 861, column: 28)
!6884 = !DILocation(line: 863, column: 38, scope: !6882)
!6885 = !DILocation(line: 863, column: 51, scope: !6882)
!6886 = !DILocation(line: 863, column: 29, scope: !6883)
!6887 = !DILocation(line: 864, column: 51, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6882, file: !936, line: 863, column: 56)
!6889 = !DILocation(line: 864, column: 54, scope: !6888)
!6890 = !DILocation(line: 864, column: 29, scope: !6888)
!6891 = !DILocation(line: 866, column: 25, scope: !6888)
!6892 = !DILocation(line: 867, column: 36, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6882, file: !936, line: 866, column: 32)
!6894 = !DILocation(line: 867, column: 45, scope: !6893)
!6895 = !DILocation(line: 867, column: 29, scope: !6893)
!6896 = !DILocation(line: 868, column: 58, scope: !6893)
!6897 = !DILocation(line: 868, column: 67, scope: !6893)
!6898 = !DILocation(line: 868, column: 36, scope: !6893)
!6899 = !DILocation(line: 869, column: 36, scope: !6893)
!6900 = !DILocation(line: 869, column: 45, scope: !6893)
!6901 = !DILocation(line: 869, column: 60, scope: !6893)
!6902 = !DILocation(line: 869, column: 69, scope: !6893)
!6903 = !DILocation(line: 869, column: 58, scope: !6893)
!6904 = !DILocation(line: 869, column: 82, scope: !6893)
!6905 = !DILocation(line: 873, column: 17, scope: !6868)
!6906 = !DILocation(line: 874, column: 13, scope: !6863)
!6907 = !DILocation(line: 877, column: 17, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6677, file: !936, line: 877, column: 17)
!6909 = !DILocation(line: 877, column: 26, scope: !6908)
!6910 = !DILocation(line: 877, column: 17, scope: !6677)
!6911 = !DILocation(line: 878, column: 33, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !936, line: 878, column: 21)
!6913 = distinct !DILexicalBlock(scope: !6908, file: !936, line: 877, column: 37)
!6914 = !DILocation(line: 878, column: 36, scope: !6912)
!6915 = !DILocation(line: 878, column: 22, scope: !6912)
!6916 = !DILocation(line: 878, column: 21, scope: !6913)
!6917 = !DILocalVariable(name: "i", scope: !6918, file: !936, line: 879, type: !914)
!6918 = distinct !DILexicalBlock(scope: !6912, file: !936, line: 878, column: 41)
!6919 = !DILocation(line: 879, column: 25, scope: !6918)
!6920 = !DILocation(line: 881, column: 28, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6918, file: !936, line: 881, column: 21)
!6922 = !DILocation(line: 881, column: 26, scope: !6921)
!6923 = !DILocation(line: 881, column: 33, scope: !6924)
!6924 = !DILexicalBlockFile(scope: !6925, file: !936, discriminator: 1)
!6925 = distinct !DILexicalBlock(scope: !6921, file: !936, line: 881, column: 21)
!6926 = !DILocation(line: 881, column: 37, scope: !6924)
!6927 = !DILocation(line: 881, column: 40, scope: !6924)
!6928 = !DILocation(line: 881, column: 35, scope: !6924)
!6929 = !DILocation(line: 881, column: 21, scope: !6924)
!6930 = !DILocation(line: 882, column: 65, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6925, file: !936, line: 881, column: 56)
!6932 = !DILocation(line: 882, column: 68, scope: !6931)
!6933 = !DILocation(line: 882, column: 54, scope: !6931)
!6934 = !DILocation(line: 882, column: 49, scope: !6931)
!6935 = !DILocation(line: 882, column: 25, scope: !6931)
!6936 = !DILocation(line: 882, column: 34, scope: !6931)
!6937 = !DILocation(line: 882, column: 52, scope: !6931)
!6938 = !DILocation(line: 883, column: 21, scope: !6931)
!6939 = !DILocation(line: 881, column: 52, scope: !6940)
!6940 = !DILexicalBlockFile(scope: !6925, file: !936, discriminator: 2)
!6941 = !DILocation(line: 881, column: 21, scope: !6940)
!6942 = distinct !{!6942, !6943}
!6943 = !DILocation(line: 881, column: 21, scope: !6918)
!6944 = !DILocation(line: 884, column: 17, scope: !6918)
!6945 = !DILocation(line: 885, column: 28, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6912, file: !936, line: 884, column: 24)
!6947 = !DILocation(line: 885, column: 37, scope: !6946)
!6948 = !DILocation(line: 885, column: 21, scope: !6946)
!6949 = !DILocation(line: 885, column: 56, scope: !6946)
!6950 = !DILocation(line: 885, column: 59, scope: !6946)
!6951 = !DILocation(line: 887, column: 13, scope: !6913)
!6952 = !DILocation(line: 888, column: 35, scope: !6677)
!6953 = !DILocation(line: 888, column: 44, scope: !6677)
!6954 = !DILocation(line: 888, column: 32, scope: !6677)
!6955 = !DILocation(line: 889, column: 9, scope: !6677)
!6956 = !DILocation(line: 806, column: 62, scope: !6666)
!6957 = !DILocation(line: 806, column: 65, scope: !6666)
!6958 = !DILocation(line: 806, column: 77, scope: !6666)
!6959 = !DILocation(line: 805, column: 9, scope: !6960)
!6960 = !DILexicalBlockFile(scope: !6667, file: !936, discriminator: 3)
!6961 = distinct !{!6961, !6962}
!6962 = !DILocation(line: 805, column: 9, scope: !6647)
!6963 = !DILocation(line: 890, column: 5, scope: !6647)
!6964 = !DILocation(line: 891, column: 5, scope: !6633)
!6965 = !DILocation(line: 892, column: 1, scope: !6633)
!6966 = distinct !DISubprogram(name: "get_sbits", scope: !1808, file: !1808, line: 361, type: !5628, isLocal: true, isDefinition: true, scopeLine: 362, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!6967 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !6968)
!6968 = distinct !DILocation(line: 370, column: 16, scope: !6966)
!6969 = !DILocalVariable(name: "s", arg: 1, scope: !6966, file: !1808, line: 361, type: !3822)
!6970 = !DILocation(line: 361, column: 44, scope: !6966)
!6971 = !DILocalVariable(name: "n", arg: 2, scope: !6966, file: !1808, line: 361, type: !914)
!6972 = !DILocation(line: 361, column: 51, scope: !6966)
!6973 = !DILocalVariable(name: "tmp", scope: !6966, file: !1808, line: 363, type: !914)
!6974 = !DILocation(line: 363, column: 18, scope: !6966)
!6975 = !DILocalVariable(name: "re_index", scope: !6966, file: !1808, line: 368, type: !913)
!6976 = !DILocation(line: 368, column: 18, scope: !6966)
!6977 = !DILocation(line: 368, column: 30, scope: !6966)
!6978 = !DILocation(line: 368, column: 34, scope: !6966)
!6979 = !DILocalVariable(name: "re_cache", scope: !6966, file: !1808, line: 368, type: !913)
!6980 = !DILocation(line: 368, column: 78, scope: !6966)
!6981 = !DILocalVariable(name: "re_size_plus8", scope: !6966, file: !1808, line: 368, type: !913)
!6982 = !DILocation(line: 368, column: 101, scope: !6966)
!6983 = !DILocation(line: 368, column: 118, scope: !6966)
!6984 = !DILocation(line: 368, column: 122, scope: !6966)
!6985 = !DILocation(line: 370, column: 60, scope: !6966)
!6986 = !DILocation(line: 370, column: 64, scope: !6966)
!6987 = !DILocation(line: 370, column: 74, scope: !6966)
!6988 = !DILocation(line: 370, column: 83, scope: !6966)
!6989 = !DILocation(line: 370, column: 71, scope: !6966)
!6990 = !DILocation(line: 370, column: 92, scope: !6966)
!6991 = !DILocation(line: 370, column: 16, scope: !6966)
!6992 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !6968)
!6993 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !6968)
!6994 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !6968)
!6995 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !6968)
!6996 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !6968)
!6997 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !6968)
!6998 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !6968)
!6999 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !6968)
!7000 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !6968)
!7001 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !6968)
!7002 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !6968)
!7003 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !6968)
!7004 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !6968)
!7005 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !6968)
!7006 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !6968)
!7007 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !6968)
!7008 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !6968)
!7009 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !6968)
!7010 = !DILocation(line: 370, column: 100, scope: !6966)
!7011 = !DILocation(line: 370, column: 109, scope: !6966)
!7012 = !DILocation(line: 370, column: 96, scope: !6966)
!7013 = !DILocation(line: 370, column: 14, scope: !6966)
!7014 = !DILocation(line: 371, column: 21, scope: !6966)
!7015 = !DILocation(line: 371, column: 31, scope: !6966)
!7016 = !DILocation(line: 371, column: 11, scope: !6966)
!7017 = !DILocation(line: 371, column: 9, scope: !6966)
!7018 = !DILocation(line: 372, column: 18, scope: !6966)
!7019 = !DILocation(line: 372, column: 36, scope: !6966)
!7020 = !DILocation(line: 372, column: 48, scope: !6966)
!7021 = !DILocation(line: 372, column: 45, scope: !6966)
!7022 = !DILocation(line: 372, column: 33, scope: !6966)
!7023 = !DILocation(line: 372, column: 17, scope: !6966)
!7024 = !DILocation(line: 372, column: 55, scope: !7025)
!7025 = !DILexicalBlockFile(scope: !6966, file: !1808, discriminator: 1)
!7026 = !DILocation(line: 372, column: 67, scope: !7025)
!7027 = !DILocation(line: 372, column: 64, scope: !7025)
!7028 = !DILocation(line: 372, column: 17, scope: !7025)
!7029 = !DILocation(line: 372, column: 74, scope: !7030)
!7030 = !DILexicalBlockFile(scope: !6966, file: !1808, discriminator: 2)
!7031 = !DILocation(line: 372, column: 17, scope: !7030)
!7032 = !DILocation(line: 372, column: 17, scope: !7033)
!7033 = !DILexicalBlockFile(scope: !6966, file: !1808, discriminator: 3)
!7034 = !DILocation(line: 372, column: 14, scope: !7033)
!7035 = !DILocation(line: 373, column: 18, scope: !6966)
!7036 = !DILocation(line: 373, column: 6, scope: !6966)
!7037 = !DILocation(line: 373, column: 10, scope: !6966)
!7038 = !DILocation(line: 373, column: 16, scope: !6966)
!7039 = !DILocation(line: 375, column: 12, scope: !6966)
!7040 = !DILocation(line: 375, column: 5, scope: !6966)
!7041 = distinct !DISubprogram(name: "decode_scale_factors", scope: !936, file: !936, line: 1003, type: !5304, isLocal: true, isDefinition: true, scopeLine: 1004, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!7042 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7043)
!7043 = distinct !DILocation(line: 788, column: 601, scope: !7044, inlinedAt: !7053)
!7044 = !DILexicalBlockFile(scope: !7045, file: !1808, discriminator: 11)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !1808, line: 788, column: 490)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !1808, line: 788, column: 466)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !1808, line: 788, column: 154)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !1808, line: 788, column: 130)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !1808, line: 788, column: 8)
!7050 = distinct !DISubprogram(name: "get_vlc2", scope: !1808, file: !1808, line: 762, type: !7051, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!7051 = !DISubroutineType(types: !7052)
!7052 = !{!914, !3822, !1923, !914, !914}
!7053 = distinct !DILocation(line: 1051, column: 27, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7055, file: !936, line: 1045, column: 52)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !936, line: 1045, column: 17)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !936, line: 1045, column: 17)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !936, line: 1042, column: 20)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !936, line: 1033, column: 17)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !936, line: 1031, column: 63)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !936, line: 1031, column: 13)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !936, line: 1011, column: 56)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !936, line: 1011, column: 5)
!7063 = distinct !DILexicalBlock(scope: !7041, file: !936, line: 1011, column: 5)
!7064 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7065)
!7065 = distinct !DILocation(line: 788, column: 259, scope: !7066, inlinedAt: !7053)
!7066 = !DILexicalBlockFile(scope: !7047, file: !1808, discriminator: 6)
!7067 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7068)
!7068 = distinct !DILocation(line: 786, column: 16, scope: !7050, inlinedAt: !7053)
!7069 = !DILocalVariable(name: "s", arg: 1, scope: !7050, file: !1808, line: 762, type: !3822)
!7070 = !DILocation(line: 762, column: 74, scope: !7050, inlinedAt: !7053)
!7071 = !DILocalVariable(name: "table", arg: 2, scope: !7050, file: !1808, line: 762, type: !1923)
!7072 = !DILocation(line: 762, column: 87, scope: !7050, inlinedAt: !7053)
!7073 = !DILocalVariable(name: "bits", arg: 3, scope: !7050, file: !1808, line: 763, type: !914)
!7074 = !DILocation(line: 763, column: 42, scope: !7050, inlinedAt: !7053)
!7075 = !DILocalVariable(name: "max_depth", arg: 4, scope: !7050, file: !1808, line: 763, type: !914)
!7076 = !DILocation(line: 763, column: 52, scope: !7050, inlinedAt: !7053)
!7077 = !DILocalVariable(name: "code", scope: !7050, file: !1808, line: 783, type: !914)
!7078 = !DILocation(line: 783, column: 9, scope: !7050, inlinedAt: !7053)
!7079 = !DILocalVariable(name: "re_index", scope: !7050, file: !1808, line: 785, type: !913)
!7080 = !DILocation(line: 785, column: 18, scope: !7050, inlinedAt: !7053)
!7081 = !DILocalVariable(name: "re_cache", scope: !7050, file: !1808, line: 785, type: !913)
!7082 = !DILocation(line: 785, column: 78, scope: !7050, inlinedAt: !7053)
!7083 = !DILocalVariable(name: "re_size_plus8", scope: !7050, file: !1808, line: 785, type: !913)
!7084 = !DILocation(line: 785, column: 101, scope: !7050, inlinedAt: !7053)
!7085 = !DILocalVariable(name: "n", scope: !7049, file: !1808, line: 788, type: !914)
!7086 = !DILocation(line: 788, column: 14, scope: !7049, inlinedAt: !7053)
!7087 = !DILocalVariable(name: "nb_bits", scope: !7049, file: !1808, line: 788, type: !914)
!7088 = !DILocation(line: 788, column: 17, scope: !7049, inlinedAt: !7053)
!7089 = !DILocalVariable(name: "index", scope: !7049, file: !1808, line: 788, type: !913)
!7090 = !DILocation(line: 788, column: 39, scope: !7049, inlinedAt: !7053)
!7091 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7092)
!7092 = distinct !DILocation(line: 788, column: 601, scope: !7044, inlinedAt: !7093)
!7093 = distinct !DILocation(line: 1039, column: 28, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !936, line: 1038, column: 75)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !936, line: 1038, column: 17)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !936, line: 1038, column: 17)
!7097 = distinct !DILexicalBlock(scope: !7058, file: !936, line: 1033, column: 42)
!7098 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7099)
!7099 = distinct !DILocation(line: 788, column: 259, scope: !7066, inlinedAt: !7093)
!7100 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7101)
!7101 = distinct !DILocation(line: 786, column: 16, scope: !7050, inlinedAt: !7093)
!7102 = !DILocation(line: 762, column: 74, scope: !7050, inlinedAt: !7093)
!7103 = !DILocation(line: 762, column: 87, scope: !7050, inlinedAt: !7093)
!7104 = !DILocation(line: 763, column: 42, scope: !7050, inlinedAt: !7093)
!7105 = !DILocation(line: 763, column: 52, scope: !7050, inlinedAt: !7093)
!7106 = !DILocation(line: 783, column: 9, scope: !7050, inlinedAt: !7093)
!7107 = !DILocation(line: 785, column: 18, scope: !7050, inlinedAt: !7093)
!7108 = !DILocation(line: 785, column: 78, scope: !7050, inlinedAt: !7093)
!7109 = !DILocation(line: 785, column: 101, scope: !7050, inlinedAt: !7093)
!7110 = !DILocation(line: 788, column: 14, scope: !7049, inlinedAt: !7093)
!7111 = !DILocation(line: 788, column: 17, scope: !7049, inlinedAt: !7093)
!7112 = !DILocation(line: 788, column: 39, scope: !7049, inlinedAt: !7093)
!7113 = !DILocalVariable(name: "s", arg: 1, scope: !7041, file: !936, line: 1003, type: !1664)
!7114 = !DILocation(line: 1003, column: 50, scope: !7041)
!7115 = !DILocalVariable(name: "i", scope: !7041, file: !936, line: 1005, type: !914)
!7116 = !DILocation(line: 1005, column: 9, scope: !7041)
!7117 = !DILocation(line: 1011, column: 12, scope: !7063)
!7118 = !DILocation(line: 1011, column: 10, scope: !7063)
!7119 = !DILocation(line: 1011, column: 17, scope: !7120)
!7120 = !DILexicalBlockFile(scope: !7062, file: !936, discriminator: 1)
!7121 = !DILocation(line: 1011, column: 21, scope: !7120)
!7122 = !DILocation(line: 1011, column: 24, scope: !7120)
!7123 = !DILocation(line: 1011, column: 19, scope: !7120)
!7124 = !DILocation(line: 1011, column: 5, scope: !7120)
!7125 = !DILocalVariable(name: "c", scope: !7061, file: !936, line: 1012, type: !914)
!7126 = !DILocation(line: 1012, column: 13, scope: !7061)
!7127 = !DILocation(line: 1012, column: 53, scope: !7061)
!7128 = !DILocation(line: 1012, column: 17, scope: !7061)
!7129 = !DILocation(line: 1012, column: 20, scope: !7061)
!7130 = !DILocalVariable(name: "sf", scope: !7061, file: !936, line: 1013, type: !1321)
!7131 = !DILocation(line: 1013, column: 14, scope: !7061)
!7132 = !DILocalVariable(name: "sf_end", scope: !7061, file: !936, line: 1014, type: !1321)
!7133 = !DILocation(line: 1014, column: 14, scope: !7061)
!7134 = !DILocation(line: 1015, column: 85, scope: !7061)
!7135 = !DILocation(line: 1015, column: 74, scope: !7061)
!7136 = !DILocation(line: 1015, column: 77, scope: !7061)
!7137 = !DILocation(line: 1015, column: 88, scope: !7061)
!7138 = !DILocation(line: 1015, column: 73, scope: !7061)
!7139 = !DILocation(line: 1015, column: 39, scope: !7061)
!7140 = !DILocation(line: 1015, column: 50, scope: !7061)
!7141 = !DILocation(line: 1015, column: 42, scope: !7061)
!7142 = !DILocation(line: 1015, column: 53, scope: !7061)
!7143 = !DILocation(line: 1015, column: 20, scope: !7061)
!7144 = !DILocation(line: 1015, column: 9, scope: !7061)
!7145 = !DILocation(line: 1015, column: 12, scope: !7061)
!7146 = !DILocation(line: 1015, column: 23, scope: !7061)
!7147 = !DILocation(line: 1015, column: 37, scope: !7061)
!7148 = !DILocation(line: 1016, column: 29, scope: !7061)
!7149 = !DILocation(line: 1016, column: 18, scope: !7061)
!7150 = !DILocation(line: 1016, column: 21, scope: !7061)
!7151 = !DILocation(line: 1016, column: 32, scope: !7061)
!7152 = !DILocation(line: 1016, column: 48, scope: !7061)
!7153 = !DILocation(line: 1016, column: 51, scope: !7061)
!7154 = !DILocation(line: 1016, column: 46, scope: !7061)
!7155 = !DILocation(line: 1016, column: 16, scope: !7061)
!7156 = !DILocation(line: 1023, column: 24, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7061, file: !936, line: 1023, column: 13)
!7158 = !DILocation(line: 1023, column: 13, scope: !7157)
!7159 = !DILocation(line: 1023, column: 16, scope: !7157)
!7160 = !DILocation(line: 1023, column: 27, scope: !7157)
!7161 = !DILocation(line: 1023, column: 13, scope: !7061)
!7162 = !DILocalVariable(name: "sf_offsets", scope: !7163, file: !936, line: 1024, type: !7164)
!7163 = distinct !DILexicalBlock(scope: !7157, file: !936, line: 1023, column: 37)
!7164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7165, size: 64, align: 64)
!7165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1136)
!7166 = !DILocation(line: 1024, column: 27, scope: !7163)
!7167 = !DILocation(line: 1024, column: 79, scope: !7163)
!7168 = !DILocation(line: 1024, column: 68, scope: !7163)
!7169 = !DILocation(line: 1024, column: 71, scope: !7163)
!7170 = !DILocation(line: 1024, column: 82, scope: !7163)
!7171 = !DILocation(line: 1024, column: 40, scope: !7163)
!7172 = !DILocation(line: 1024, column: 54, scope: !7163)
!7173 = !DILocation(line: 1024, column: 57, scope: !7163)
!7174 = !DILocation(line: 1024, column: 43, scope: !7163)
!7175 = !DILocalVariable(name: "b", scope: !7163, file: !936, line: 1025, type: !914)
!7176 = !DILocation(line: 1025, column: 17, scope: !7163)
!7177 = !DILocation(line: 1026, column: 20, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7163, file: !936, line: 1026, column: 13)
!7179 = !DILocation(line: 1026, column: 18, scope: !7178)
!7180 = !DILocation(line: 1026, column: 25, scope: !7181)
!7181 = !DILexicalBlockFile(scope: !7182, file: !936, discriminator: 1)
!7182 = distinct !DILexicalBlock(scope: !7178, file: !936, line: 1026, column: 13)
!7183 = !DILocation(line: 1026, column: 29, scope: !7181)
!7184 = !DILocation(line: 1026, column: 32, scope: !7181)
!7185 = !DILocation(line: 1026, column: 27, scope: !7181)
!7186 = !DILocation(line: 1026, column: 13, scope: !7181)
!7187 = !DILocation(line: 1028, column: 98, scope: !7182)
!7188 = !DILocation(line: 1028, column: 87, scope: !7182)
!7189 = !DILocation(line: 1028, column: 21, scope: !7182)
!7190 = !DILocation(line: 1028, column: 66, scope: !7182)
!7191 = !DILocation(line: 1028, column: 55, scope: !7182)
!7192 = !DILocation(line: 1028, column: 58, scope: !7182)
!7193 = !DILocation(line: 1028, column: 69, scope: !7182)
!7194 = !DILocation(line: 1028, column: 32, scope: !7182)
!7195 = !DILocation(line: 1028, column: 24, scope: !7182)
!7196 = !DILocation(line: 1028, column: 35, scope: !7182)
!7197 = !DILocation(line: 1027, column: 45, scope: !7182)
!7198 = !DILocation(line: 1027, column: 17, scope: !7182)
!7199 = !DILocation(line: 1027, column: 28, scope: !7182)
!7200 = !DILocation(line: 1027, column: 20, scope: !7182)
!7201 = !DILocation(line: 1027, column: 31, scope: !7182)
!7202 = !DILocation(line: 1027, column: 48, scope: !7182)
!7203 = !DILocation(line: 1026, column: 44, scope: !7204)
!7204 = !DILexicalBlockFile(scope: !7182, file: !936, discriminator: 2)
!7205 = !DILocation(line: 1026, column: 13, scope: !7204)
!7206 = distinct !{!7206, !7207}
!7207 = !DILocation(line: 1026, column: 13, scope: !7163)
!7208 = !DILocation(line: 1029, column: 9, scope: !7163)
!7209 = !DILocation(line: 1031, column: 25, scope: !7060)
!7210 = !DILocation(line: 1031, column: 14, scope: !7060)
!7211 = !DILocation(line: 1031, column: 17, scope: !7060)
!7212 = !DILocation(line: 1031, column: 28, scope: !7060)
!7213 = !DILocation(line: 1031, column: 41, scope: !7060)
!7214 = !DILocation(line: 1031, column: 55, scope: !7215)
!7215 = !DILexicalBlockFile(scope: !7060, file: !936, discriminator: 1)
!7216 = !DILocation(line: 1031, column: 58, scope: !7215)
!7217 = !DILocation(line: 1031, column: 44, scope: !7215)
!7218 = !DILocation(line: 1031, column: 13, scope: !7215)
!7219 = !DILocation(line: 1033, column: 29, scope: !7058)
!7220 = !DILocation(line: 1033, column: 18, scope: !7058)
!7221 = !DILocation(line: 1033, column: 21, scope: !7058)
!7222 = !DILocation(line: 1033, column: 32, scope: !7058)
!7223 = !DILocation(line: 1033, column: 17, scope: !7059)
!7224 = !DILocalVariable(name: "val", scope: !7097, file: !936, line: 1034, type: !914)
!7225 = !DILocation(line: 1034, column: 21, scope: !7097)
!7226 = !DILocation(line: 1036, column: 61, scope: !7097)
!7227 = !DILocation(line: 1036, column: 64, scope: !7097)
!7228 = !DILocation(line: 1036, column: 51, scope: !7097)
!7229 = !DILocation(line: 1036, column: 71, scope: !7097)
!7230 = !DILocation(line: 1036, column: 28, scope: !7097)
!7231 = !DILocation(line: 1036, column: 17, scope: !7097)
!7232 = !DILocation(line: 1036, column: 20, scope: !7097)
!7233 = !DILocation(line: 1036, column: 31, scope: !7097)
!7234 = !DILocation(line: 1036, column: 49, scope: !7097)
!7235 = !DILocation(line: 1037, column: 39, scope: !7097)
!7236 = !DILocation(line: 1037, column: 28, scope: !7097)
!7237 = !DILocation(line: 1037, column: 31, scope: !7097)
!7238 = !DILocation(line: 1037, column: 42, scope: !7097)
!7239 = !DILocation(line: 1037, column: 26, scope: !7097)
!7240 = !DILocation(line: 1037, column: 21, scope: !7097)
!7241 = !DILocation(line: 1038, column: 38, scope: !7096)
!7242 = !DILocation(line: 1038, column: 27, scope: !7096)
!7243 = !DILocation(line: 1038, column: 30, scope: !7096)
!7244 = !DILocation(line: 1038, column: 41, scope: !7096)
!7245 = !DILocation(line: 1038, column: 25, scope: !7096)
!7246 = !DILocation(line: 1038, column: 22, scope: !7096)
!7247 = !DILocation(line: 1038, column: 56, scope: !7248)
!7248 = !DILexicalBlockFile(scope: !7095, file: !936, discriminator: 1)
!7249 = !DILocation(line: 1038, column: 61, scope: !7248)
!7250 = !DILocation(line: 1038, column: 59, scope: !7248)
!7251 = !DILocation(line: 1038, column: 17, scope: !7248)
!7252 = !DILocation(line: 1039, column: 38, scope: !7094)
!7253 = !DILocation(line: 1039, column: 41, scope: !7094)
!7254 = !DILocation(line: 1039, column: 52, scope: !7094)
!7255 = !DILocation(line: 1039, column: 28, scope: !7094)
!7256 = !DILocation(line: 785, column: 30, scope: !7050, inlinedAt: !7093)
!7257 = !DILocation(line: 785, column: 34, scope: !7050, inlinedAt: !7093)
!7258 = !DILocation(line: 785, column: 118, scope: !7050, inlinedAt: !7093)
!7259 = !DILocation(line: 785, column: 122, scope: !7050, inlinedAt: !7093)
!7260 = !DILocation(line: 786, column: 60, scope: !7050, inlinedAt: !7093)
!7261 = !DILocation(line: 786, column: 64, scope: !7050, inlinedAt: !7093)
!7262 = !DILocation(line: 786, column: 74, scope: !7050, inlinedAt: !7093)
!7263 = !DILocation(line: 786, column: 83, scope: !7050, inlinedAt: !7093)
!7264 = !DILocation(line: 786, column: 71, scope: !7050, inlinedAt: !7093)
!7265 = !DILocation(line: 786, column: 92, scope: !7050, inlinedAt: !7093)
!7266 = !DILocation(line: 786, column: 16, scope: !7050, inlinedAt: !7093)
!7267 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7101)
!7268 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7101)
!7269 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7101)
!7270 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7101)
!7271 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7101)
!7272 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7101)
!7273 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7101)
!7274 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7101)
!7275 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7101)
!7276 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7101)
!7277 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7101)
!7278 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7101)
!7279 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7101)
!7280 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7101)
!7281 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7101)
!7282 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7101)
!7283 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7101)
!7284 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7101)
!7285 = !DILocation(line: 786, column: 100, scope: !7050, inlinedAt: !7093)
!7286 = !DILocation(line: 786, column: 109, scope: !7050, inlinedAt: !7093)
!7287 = !DILocation(line: 786, column: 96, scope: !7050, inlinedAt: !7093)
!7288 = !DILocation(line: 786, column: 14, scope: !7050, inlinedAt: !7093)
!7289 = !DILocation(line: 788, column: 64, scope: !7290, inlinedAt: !7093)
!7290 = !DILexicalBlockFile(scope: !7049, file: !1808, discriminator: 1)
!7291 = !DILocation(line: 788, column: 74, scope: !7290, inlinedAt: !7093)
!7292 = !DILocation(line: 788, column: 54, scope: !7290, inlinedAt: !7093)
!7293 = !DILocation(line: 788, column: 52, scope: !7290, inlinedAt: !7093)
!7294 = !DILocation(line: 788, column: 94, scope: !7290, inlinedAt: !7093)
!7295 = !DILocation(line: 788, column: 88, scope: !7290, inlinedAt: !7093)
!7296 = !DILocation(line: 788, column: 86, scope: !7290, inlinedAt: !7093)
!7297 = !DILocation(line: 788, column: 115, scope: !7290, inlinedAt: !7093)
!7298 = !DILocation(line: 788, column: 109, scope: !7290, inlinedAt: !7093)
!7299 = !DILocation(line: 788, column: 107, scope: !7290, inlinedAt: !7093)
!7300 = !DILocation(line: 788, column: 130, scope: !7290, inlinedAt: !7093)
!7301 = !DILocation(line: 788, column: 140, scope: !7290, inlinedAt: !7093)
!7302 = !DILocation(line: 788, column: 144, scope: !7290, inlinedAt: !7093)
!7303 = !DILocation(line: 788, column: 147, scope: !7304, inlinedAt: !7093)
!7304 = !DILexicalBlockFile(scope: !7048, file: !1808, discriminator: 2)
!7305 = !DILocation(line: 788, column: 149, scope: !7304, inlinedAt: !7093)
!7306 = !DILocation(line: 788, column: 130, scope: !7304, inlinedAt: !7093)
!7307 = !DILocation(line: 788, column: 169, scope: !7308, inlinedAt: !7093)
!7308 = !DILexicalBlockFile(scope: !7047, file: !1808, discriminator: 3)
!7309 = !DILocation(line: 788, column: 187, scope: !7308, inlinedAt: !7093)
!7310 = !DILocation(line: 788, column: 199, scope: !7308, inlinedAt: !7093)
!7311 = !DILocation(line: 788, column: 196, scope: !7308, inlinedAt: !7093)
!7312 = !DILocation(line: 788, column: 184, scope: !7308, inlinedAt: !7093)
!7313 = !DILocation(line: 788, column: 168, scope: !7308, inlinedAt: !7093)
!7314 = !DILocation(line: 788, column: 209, scope: !7315, inlinedAt: !7093)
!7315 = !DILexicalBlockFile(scope: !7047, file: !1808, discriminator: 4)
!7316 = !DILocation(line: 788, column: 221, scope: !7315, inlinedAt: !7093)
!7317 = !DILocation(line: 788, column: 218, scope: !7315, inlinedAt: !7093)
!7318 = !DILocation(line: 788, column: 168, scope: !7315, inlinedAt: !7093)
!7319 = !DILocation(line: 788, column: 231, scope: !7320, inlinedAt: !7093)
!7320 = !DILexicalBlockFile(scope: !7047, file: !1808, discriminator: 5)
!7321 = !DILocation(line: 788, column: 168, scope: !7320, inlinedAt: !7093)
!7322 = !DILocation(line: 788, column: 168, scope: !7066, inlinedAt: !7093)
!7323 = !DILocation(line: 788, column: 165, scope: !7066, inlinedAt: !7093)
!7324 = !DILocation(line: 788, column: 303, scope: !7066, inlinedAt: !7093)
!7325 = !DILocation(line: 788, column: 307, scope: !7066, inlinedAt: !7093)
!7326 = !DILocation(line: 788, column: 317, scope: !7066, inlinedAt: !7093)
!7327 = !DILocation(line: 788, column: 326, scope: !7066, inlinedAt: !7093)
!7328 = !DILocation(line: 788, column: 314, scope: !7066, inlinedAt: !7093)
!7329 = !DILocation(line: 788, column: 335, scope: !7066, inlinedAt: !7093)
!7330 = !DILocation(line: 788, column: 259, scope: !7066, inlinedAt: !7093)
!7331 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7099)
!7332 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7099)
!7333 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7099)
!7334 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7099)
!7335 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7099)
!7336 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7099)
!7337 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7099)
!7338 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7099)
!7339 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7099)
!7340 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7099)
!7341 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7099)
!7342 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7099)
!7343 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7099)
!7344 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7099)
!7345 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7099)
!7346 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7099)
!7347 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7099)
!7348 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7099)
!7349 = !DILocation(line: 788, column: 343, scope: !7066, inlinedAt: !7093)
!7350 = !DILocation(line: 788, column: 352, scope: !7066, inlinedAt: !7093)
!7351 = !DILocation(line: 788, column: 339, scope: !7066, inlinedAt: !7093)
!7352 = !DILocation(line: 788, column: 257, scope: !7066, inlinedAt: !7093)
!7353 = !DILocation(line: 788, column: 369, scope: !7066, inlinedAt: !7093)
!7354 = !DILocation(line: 788, column: 368, scope: !7066, inlinedAt: !7093)
!7355 = !DILocation(line: 788, column: 366, scope: !7066, inlinedAt: !7093)
!7356 = !DILocation(line: 788, column: 390, scope: !7066, inlinedAt: !7093)
!7357 = !DILocation(line: 788, column: 400, scope: !7066, inlinedAt: !7093)
!7358 = !DILocation(line: 788, column: 380, scope: !7359, inlinedAt: !7093)
!7359 = !DILexicalBlockFile(scope: !7066, file: !1808, discriminator: 19)
!7360 = !DILocation(line: 788, column: 411, scope: !7066, inlinedAt: !7093)
!7361 = !DILocation(line: 788, column: 409, scope: !7066, inlinedAt: !7093)
!7362 = !DILocation(line: 788, column: 378, scope: !7066, inlinedAt: !7093)
!7363 = !DILocation(line: 788, column: 430, scope: !7066, inlinedAt: !7093)
!7364 = !DILocation(line: 788, column: 424, scope: !7066, inlinedAt: !7093)
!7365 = !DILocation(line: 788, column: 422, scope: !7066, inlinedAt: !7093)
!7366 = !DILocation(line: 788, column: 451, scope: !7066, inlinedAt: !7093)
!7367 = !DILocation(line: 788, column: 445, scope: !7066, inlinedAt: !7093)
!7368 = !DILocation(line: 788, column: 443, scope: !7066, inlinedAt: !7093)
!7369 = !DILocation(line: 788, column: 466, scope: !7066, inlinedAt: !7093)
!7370 = !DILocation(line: 788, column: 476, scope: !7066, inlinedAt: !7093)
!7371 = !DILocation(line: 788, column: 480, scope: !7066, inlinedAt: !7093)
!7372 = !DILocation(line: 788, column: 483, scope: !7373, inlinedAt: !7093)
!7373 = !DILexicalBlockFile(scope: !7046, file: !1808, discriminator: 7)
!7374 = !DILocation(line: 788, column: 485, scope: !7373, inlinedAt: !7093)
!7375 = !DILocation(line: 788, column: 466, scope: !7373, inlinedAt: !7093)
!7376 = !DILocation(line: 788, column: 505, scope: !7377, inlinedAt: !7093)
!7377 = !DILexicalBlockFile(scope: !7045, file: !1808, discriminator: 8)
!7378 = !DILocation(line: 788, column: 523, scope: !7377, inlinedAt: !7093)
!7379 = !DILocation(line: 788, column: 535, scope: !7377, inlinedAt: !7093)
!7380 = !DILocation(line: 788, column: 532, scope: !7377, inlinedAt: !7093)
!7381 = !DILocation(line: 788, column: 520, scope: !7377, inlinedAt: !7093)
!7382 = !DILocation(line: 788, column: 504, scope: !7377, inlinedAt: !7093)
!7383 = !DILocation(line: 788, column: 548, scope: !7384, inlinedAt: !7093)
!7384 = !DILexicalBlockFile(scope: !7045, file: !1808, discriminator: 9)
!7385 = !DILocation(line: 788, column: 560, scope: !7384, inlinedAt: !7093)
!7386 = !DILocation(line: 788, column: 557, scope: !7384, inlinedAt: !7093)
!7387 = !DILocation(line: 788, column: 504, scope: !7384, inlinedAt: !7093)
!7388 = !DILocation(line: 788, column: 573, scope: !7389, inlinedAt: !7093)
!7389 = !DILexicalBlockFile(scope: !7045, file: !1808, discriminator: 10)
!7390 = !DILocation(line: 788, column: 504, scope: !7389, inlinedAt: !7093)
!7391 = !DILocation(line: 788, column: 504, scope: !7044, inlinedAt: !7093)
!7392 = !DILocation(line: 788, column: 501, scope: !7044, inlinedAt: !7093)
!7393 = !DILocation(line: 788, column: 645, scope: !7044, inlinedAt: !7093)
!7394 = !DILocation(line: 788, column: 649, scope: !7044, inlinedAt: !7093)
!7395 = !DILocation(line: 788, column: 659, scope: !7044, inlinedAt: !7093)
!7396 = !DILocation(line: 788, column: 668, scope: !7044, inlinedAt: !7093)
!7397 = !DILocation(line: 788, column: 656, scope: !7044, inlinedAt: !7093)
!7398 = !DILocation(line: 788, column: 677, scope: !7044, inlinedAt: !7093)
!7399 = !DILocation(line: 788, column: 601, scope: !7044, inlinedAt: !7093)
!7400 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7092)
!7401 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7092)
!7402 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7092)
!7403 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7092)
!7404 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7092)
!7405 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7092)
!7406 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7092)
!7407 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7092)
!7408 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7092)
!7409 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7092)
!7410 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7092)
!7411 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7092)
!7412 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7092)
!7413 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7092)
!7414 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7092)
!7415 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7092)
!7416 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7092)
!7417 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7092)
!7418 = !DILocation(line: 788, column: 685, scope: !7044, inlinedAt: !7093)
!7419 = !DILocation(line: 788, column: 694, scope: !7044, inlinedAt: !7093)
!7420 = !DILocation(line: 788, column: 681, scope: !7044, inlinedAt: !7093)
!7421 = !DILocation(line: 788, column: 599, scope: !7044, inlinedAt: !7093)
!7422 = !DILocation(line: 788, column: 711, scope: !7044, inlinedAt: !7093)
!7423 = !DILocation(line: 788, column: 710, scope: !7044, inlinedAt: !7093)
!7424 = !DILocation(line: 788, column: 708, scope: !7044, inlinedAt: !7093)
!7425 = !DILocation(line: 788, column: 732, scope: !7044, inlinedAt: !7093)
!7426 = !DILocation(line: 788, column: 742, scope: !7044, inlinedAt: !7093)
!7427 = !DILocation(line: 788, column: 722, scope: !7428, inlinedAt: !7093)
!7428 = !DILexicalBlockFile(scope: !7044, file: !1808, discriminator: 20)
!7429 = !DILocation(line: 788, column: 753, scope: !7044, inlinedAt: !7093)
!7430 = !DILocation(line: 788, column: 751, scope: !7044, inlinedAt: !7093)
!7431 = !DILocation(line: 788, column: 720, scope: !7044, inlinedAt: !7093)
!7432 = !DILocation(line: 788, column: 772, scope: !7044, inlinedAt: !7093)
!7433 = !DILocation(line: 788, column: 766, scope: !7044, inlinedAt: !7093)
!7434 = !DILocation(line: 788, column: 764, scope: !7044, inlinedAt: !7093)
!7435 = !DILocation(line: 788, column: 793, scope: !7044, inlinedAt: !7093)
!7436 = !DILocation(line: 788, column: 787, scope: !7044, inlinedAt: !7093)
!7437 = !DILocation(line: 788, column: 785, scope: !7044, inlinedAt: !7093)
!7438 = !DILocation(line: 788, column: 804, scope: !7044, inlinedAt: !7093)
!7439 = !DILocation(line: 788, column: 806, scope: !7440, inlinedAt: !7093)
!7440 = !DILexicalBlockFile(scope: !7047, file: !1808, discriminator: 12)
!7441 = !DILocation(line: 788, column: 827, scope: !7442, inlinedAt: !7093)
!7442 = !DILexicalBlockFile(scope: !7443, file: !1808, discriminator: 14)
!7443 = distinct !DILexicalBlock(scope: !7049, file: !1808, line: 788, column: 811)
!7444 = !DILocation(line: 788, column: 822, scope: !7442, inlinedAt: !7093)
!7445 = !DILocation(line: 788, column: 844, scope: !7442, inlinedAt: !7093)
!7446 = !DILocation(line: 788, column: 862, scope: !7442, inlinedAt: !7093)
!7447 = !DILocation(line: 788, column: 874, scope: !7442, inlinedAt: !7093)
!7448 = !DILocation(line: 788, column: 871, scope: !7442, inlinedAt: !7093)
!7449 = !DILocation(line: 788, column: 859, scope: !7442, inlinedAt: !7093)
!7450 = !DILocation(line: 788, column: 843, scope: !7442, inlinedAt: !7093)
!7451 = !DILocation(line: 788, column: 881, scope: !7452, inlinedAt: !7093)
!7452 = !DILexicalBlockFile(scope: !7443, file: !1808, discriminator: 15)
!7453 = !DILocation(line: 788, column: 893, scope: !7452, inlinedAt: !7093)
!7454 = !DILocation(line: 788, column: 890, scope: !7452, inlinedAt: !7093)
!7455 = !DILocation(line: 788, column: 843, scope: !7452, inlinedAt: !7093)
!7456 = !DILocation(line: 788, column: 900, scope: !7457, inlinedAt: !7093)
!7457 = !DILexicalBlockFile(scope: !7443, file: !1808, discriminator: 16)
!7458 = !DILocation(line: 788, column: 843, scope: !7457, inlinedAt: !7093)
!7459 = !DILocation(line: 788, column: 843, scope: !7460, inlinedAt: !7093)
!7460 = !DILexicalBlockFile(scope: !7443, file: !1808, discriminator: 17)
!7461 = !DILocation(line: 788, column: 840, scope: !7460, inlinedAt: !7093)
!7462 = !DILocation(line: 790, column: 18, scope: !7050, inlinedAt: !7093)
!7463 = !DILocation(line: 790, column: 6, scope: !7050, inlinedAt: !7093)
!7464 = !DILocation(line: 790, column: 10, scope: !7050, inlinedAt: !7093)
!7465 = !DILocation(line: 790, column: 16, scope: !7050, inlinedAt: !7093)
!7466 = !DILocation(line: 792, column: 12, scope: !7050, inlinedAt: !7093)
!7467 = !DILocation(line: 1039, column: 78, scope: !7094)
!7468 = !DILocation(line: 1039, column: 25, scope: !7094)
!7469 = !DILocation(line: 1040, column: 27, scope: !7094)
!7470 = !DILocation(line: 1040, column: 22, scope: !7094)
!7471 = !DILocation(line: 1040, column: 25, scope: !7094)
!7472 = !DILocation(line: 1041, column: 17, scope: !7094)
!7473 = !DILocation(line: 1038, column: 71, scope: !7474)
!7474 = !DILexicalBlockFile(scope: !7095, file: !936, discriminator: 2)
!7475 = !DILocation(line: 1038, column: 17, scope: !7474)
!7476 = distinct !{!7476, !7477}
!7477 = !DILocation(line: 1038, column: 17, scope: !7097)
!7478 = !DILocation(line: 1042, column: 13, scope: !7097)
!7479 = !DILocalVariable(name: "i", scope: !7057, file: !936, line: 1043, type: !914)
!7480 = !DILocation(line: 1043, column: 21, scope: !7057)
!7481 = !DILocation(line: 1045, column: 24, scope: !7056)
!7482 = !DILocation(line: 1045, column: 22, scope: !7056)
!7483 = !DILocation(line: 1045, column: 29, scope: !7484)
!7484 = !DILexicalBlockFile(scope: !7055, file: !936, discriminator: 1)
!7485 = !DILocation(line: 1045, column: 33, scope: !7484)
!7486 = !DILocation(line: 1045, column: 36, scope: !7484)
!7487 = !DILocation(line: 1045, column: 31, scope: !7484)
!7488 = !DILocation(line: 1045, column: 17, scope: !7484)
!7489 = !DILocalVariable(name: "idx", scope: !7054, file: !936, line: 1046, type: !914)
!7490 = !DILocation(line: 1046, column: 25, scope: !7054)
!7491 = !DILocalVariable(name: "skip", scope: !7054, file: !936, line: 1047, type: !914)
!7492 = !DILocation(line: 1047, column: 25, scope: !7054)
!7493 = !DILocalVariable(name: "val", scope: !7054, file: !936, line: 1048, type: !914)
!7494 = !DILocation(line: 1048, column: 25, scope: !7054)
!7495 = !DILocalVariable(name: "sign", scope: !7054, file: !936, line: 1049, type: !914)
!7496 = !DILocation(line: 1049, column: 25, scope: !7054)
!7497 = !DILocation(line: 1051, column: 37, scope: !7054)
!7498 = !DILocation(line: 1051, column: 40, scope: !7054)
!7499 = !DILocation(line: 1051, column: 54, scope: !7054)
!7500 = !DILocation(line: 1051, column: 27, scope: !7054)
!7501 = !DILocation(line: 785, column: 30, scope: !7050, inlinedAt: !7053)
!7502 = !DILocation(line: 785, column: 34, scope: !7050, inlinedAt: !7053)
!7503 = !DILocation(line: 785, column: 118, scope: !7050, inlinedAt: !7053)
!7504 = !DILocation(line: 785, column: 122, scope: !7050, inlinedAt: !7053)
!7505 = !DILocation(line: 786, column: 60, scope: !7050, inlinedAt: !7053)
!7506 = !DILocation(line: 786, column: 64, scope: !7050, inlinedAt: !7053)
!7507 = !DILocation(line: 786, column: 74, scope: !7050, inlinedAt: !7053)
!7508 = !DILocation(line: 786, column: 83, scope: !7050, inlinedAt: !7053)
!7509 = !DILocation(line: 786, column: 71, scope: !7050, inlinedAt: !7053)
!7510 = !DILocation(line: 786, column: 92, scope: !7050, inlinedAt: !7053)
!7511 = !DILocation(line: 786, column: 16, scope: !7050, inlinedAt: !7053)
!7512 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7068)
!7513 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7068)
!7514 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7068)
!7515 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7068)
!7516 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7068)
!7517 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7068)
!7518 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7068)
!7519 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7068)
!7520 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7068)
!7521 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7068)
!7522 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7068)
!7523 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7068)
!7524 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7068)
!7525 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7068)
!7526 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7068)
!7527 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7068)
!7528 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7068)
!7529 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7068)
!7530 = !DILocation(line: 786, column: 100, scope: !7050, inlinedAt: !7053)
!7531 = !DILocation(line: 786, column: 109, scope: !7050, inlinedAt: !7053)
!7532 = !DILocation(line: 786, column: 96, scope: !7050, inlinedAt: !7053)
!7533 = !DILocation(line: 786, column: 14, scope: !7050, inlinedAt: !7053)
!7534 = !DILocation(line: 788, column: 64, scope: !7290, inlinedAt: !7053)
!7535 = !DILocation(line: 788, column: 74, scope: !7290, inlinedAt: !7053)
!7536 = !DILocation(line: 788, column: 54, scope: !7290, inlinedAt: !7053)
!7537 = !DILocation(line: 788, column: 52, scope: !7290, inlinedAt: !7053)
!7538 = !DILocation(line: 788, column: 94, scope: !7290, inlinedAt: !7053)
!7539 = !DILocation(line: 788, column: 88, scope: !7290, inlinedAt: !7053)
!7540 = !DILocation(line: 788, column: 86, scope: !7290, inlinedAt: !7053)
!7541 = !DILocation(line: 788, column: 115, scope: !7290, inlinedAt: !7053)
!7542 = !DILocation(line: 788, column: 109, scope: !7290, inlinedAt: !7053)
!7543 = !DILocation(line: 788, column: 107, scope: !7290, inlinedAt: !7053)
!7544 = !DILocation(line: 788, column: 130, scope: !7290, inlinedAt: !7053)
!7545 = !DILocation(line: 788, column: 140, scope: !7290, inlinedAt: !7053)
!7546 = !DILocation(line: 788, column: 144, scope: !7290, inlinedAt: !7053)
!7547 = !DILocation(line: 788, column: 147, scope: !7304, inlinedAt: !7053)
!7548 = !DILocation(line: 788, column: 149, scope: !7304, inlinedAt: !7053)
!7549 = !DILocation(line: 788, column: 130, scope: !7304, inlinedAt: !7053)
!7550 = !DILocation(line: 788, column: 169, scope: !7308, inlinedAt: !7053)
!7551 = !DILocation(line: 788, column: 187, scope: !7308, inlinedAt: !7053)
!7552 = !DILocation(line: 788, column: 199, scope: !7308, inlinedAt: !7053)
!7553 = !DILocation(line: 788, column: 196, scope: !7308, inlinedAt: !7053)
!7554 = !DILocation(line: 788, column: 184, scope: !7308, inlinedAt: !7053)
!7555 = !DILocation(line: 788, column: 168, scope: !7308, inlinedAt: !7053)
!7556 = !DILocation(line: 788, column: 209, scope: !7315, inlinedAt: !7053)
!7557 = !DILocation(line: 788, column: 221, scope: !7315, inlinedAt: !7053)
!7558 = !DILocation(line: 788, column: 218, scope: !7315, inlinedAt: !7053)
!7559 = !DILocation(line: 788, column: 168, scope: !7315, inlinedAt: !7053)
!7560 = !DILocation(line: 788, column: 231, scope: !7320, inlinedAt: !7053)
!7561 = !DILocation(line: 788, column: 168, scope: !7320, inlinedAt: !7053)
!7562 = !DILocation(line: 788, column: 168, scope: !7066, inlinedAt: !7053)
!7563 = !DILocation(line: 788, column: 165, scope: !7066, inlinedAt: !7053)
!7564 = !DILocation(line: 788, column: 303, scope: !7066, inlinedAt: !7053)
!7565 = !DILocation(line: 788, column: 307, scope: !7066, inlinedAt: !7053)
!7566 = !DILocation(line: 788, column: 317, scope: !7066, inlinedAt: !7053)
!7567 = !DILocation(line: 788, column: 326, scope: !7066, inlinedAt: !7053)
!7568 = !DILocation(line: 788, column: 314, scope: !7066, inlinedAt: !7053)
!7569 = !DILocation(line: 788, column: 335, scope: !7066, inlinedAt: !7053)
!7570 = !DILocation(line: 788, column: 259, scope: !7066, inlinedAt: !7053)
!7571 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7065)
!7572 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7065)
!7573 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7065)
!7574 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7065)
!7575 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7065)
!7576 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7065)
!7577 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7065)
!7578 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7065)
!7579 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7065)
!7580 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7065)
!7581 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7065)
!7582 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7065)
!7583 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7065)
!7584 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7065)
!7585 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7065)
!7586 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7065)
!7587 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7065)
!7588 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7065)
!7589 = !DILocation(line: 788, column: 343, scope: !7066, inlinedAt: !7053)
!7590 = !DILocation(line: 788, column: 352, scope: !7066, inlinedAt: !7053)
!7591 = !DILocation(line: 788, column: 339, scope: !7066, inlinedAt: !7053)
!7592 = !DILocation(line: 788, column: 257, scope: !7066, inlinedAt: !7053)
!7593 = !DILocation(line: 788, column: 369, scope: !7066, inlinedAt: !7053)
!7594 = !DILocation(line: 788, column: 368, scope: !7066, inlinedAt: !7053)
!7595 = !DILocation(line: 788, column: 366, scope: !7066, inlinedAt: !7053)
!7596 = !DILocation(line: 788, column: 390, scope: !7066, inlinedAt: !7053)
!7597 = !DILocation(line: 788, column: 400, scope: !7066, inlinedAt: !7053)
!7598 = !DILocation(line: 788, column: 380, scope: !7359, inlinedAt: !7053)
!7599 = !DILocation(line: 788, column: 411, scope: !7066, inlinedAt: !7053)
!7600 = !DILocation(line: 788, column: 409, scope: !7066, inlinedAt: !7053)
!7601 = !DILocation(line: 788, column: 378, scope: !7066, inlinedAt: !7053)
!7602 = !DILocation(line: 788, column: 430, scope: !7066, inlinedAt: !7053)
!7603 = !DILocation(line: 788, column: 424, scope: !7066, inlinedAt: !7053)
!7604 = !DILocation(line: 788, column: 422, scope: !7066, inlinedAt: !7053)
!7605 = !DILocation(line: 788, column: 451, scope: !7066, inlinedAt: !7053)
!7606 = !DILocation(line: 788, column: 445, scope: !7066, inlinedAt: !7053)
!7607 = !DILocation(line: 788, column: 443, scope: !7066, inlinedAt: !7053)
!7608 = !DILocation(line: 788, column: 466, scope: !7066, inlinedAt: !7053)
!7609 = !DILocation(line: 788, column: 476, scope: !7066, inlinedAt: !7053)
!7610 = !DILocation(line: 788, column: 480, scope: !7066, inlinedAt: !7053)
!7611 = !DILocation(line: 788, column: 483, scope: !7373, inlinedAt: !7053)
!7612 = !DILocation(line: 788, column: 485, scope: !7373, inlinedAt: !7053)
!7613 = !DILocation(line: 788, column: 466, scope: !7373, inlinedAt: !7053)
!7614 = !DILocation(line: 788, column: 505, scope: !7377, inlinedAt: !7053)
!7615 = !DILocation(line: 788, column: 523, scope: !7377, inlinedAt: !7053)
!7616 = !DILocation(line: 788, column: 535, scope: !7377, inlinedAt: !7053)
!7617 = !DILocation(line: 788, column: 532, scope: !7377, inlinedAt: !7053)
!7618 = !DILocation(line: 788, column: 520, scope: !7377, inlinedAt: !7053)
!7619 = !DILocation(line: 788, column: 504, scope: !7377, inlinedAt: !7053)
!7620 = !DILocation(line: 788, column: 548, scope: !7384, inlinedAt: !7053)
!7621 = !DILocation(line: 788, column: 560, scope: !7384, inlinedAt: !7053)
!7622 = !DILocation(line: 788, column: 557, scope: !7384, inlinedAt: !7053)
!7623 = !DILocation(line: 788, column: 504, scope: !7384, inlinedAt: !7053)
!7624 = !DILocation(line: 788, column: 573, scope: !7389, inlinedAt: !7053)
!7625 = !DILocation(line: 788, column: 504, scope: !7389, inlinedAt: !7053)
!7626 = !DILocation(line: 788, column: 504, scope: !7044, inlinedAt: !7053)
!7627 = !DILocation(line: 788, column: 501, scope: !7044, inlinedAt: !7053)
!7628 = !DILocation(line: 788, column: 645, scope: !7044, inlinedAt: !7053)
!7629 = !DILocation(line: 788, column: 649, scope: !7044, inlinedAt: !7053)
!7630 = !DILocation(line: 788, column: 659, scope: !7044, inlinedAt: !7053)
!7631 = !DILocation(line: 788, column: 668, scope: !7044, inlinedAt: !7053)
!7632 = !DILocation(line: 788, column: 656, scope: !7044, inlinedAt: !7053)
!7633 = !DILocation(line: 788, column: 677, scope: !7044, inlinedAt: !7053)
!7634 = !DILocation(line: 788, column: 601, scope: !7044, inlinedAt: !7053)
!7635 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7043)
!7636 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7043)
!7637 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7043)
!7638 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7043)
!7639 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7043)
!7640 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7043)
!7641 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7043)
!7642 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7043)
!7643 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7043)
!7644 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7043)
!7645 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7043)
!7646 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7043)
!7647 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7043)
!7648 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7043)
!7649 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7043)
!7650 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7043)
!7651 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7043)
!7652 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7043)
!7653 = !DILocation(line: 788, column: 685, scope: !7044, inlinedAt: !7053)
!7654 = !DILocation(line: 788, column: 694, scope: !7044, inlinedAt: !7053)
!7655 = !DILocation(line: 788, column: 681, scope: !7044, inlinedAt: !7053)
!7656 = !DILocation(line: 788, column: 599, scope: !7044, inlinedAt: !7053)
!7657 = !DILocation(line: 788, column: 711, scope: !7044, inlinedAt: !7053)
!7658 = !DILocation(line: 788, column: 710, scope: !7044, inlinedAt: !7053)
!7659 = !DILocation(line: 788, column: 708, scope: !7044, inlinedAt: !7053)
!7660 = !DILocation(line: 788, column: 732, scope: !7044, inlinedAt: !7053)
!7661 = !DILocation(line: 788, column: 742, scope: !7044, inlinedAt: !7053)
!7662 = !DILocation(line: 788, column: 722, scope: !7428, inlinedAt: !7053)
!7663 = !DILocation(line: 788, column: 753, scope: !7044, inlinedAt: !7053)
!7664 = !DILocation(line: 788, column: 751, scope: !7044, inlinedAt: !7053)
!7665 = !DILocation(line: 788, column: 720, scope: !7044, inlinedAt: !7053)
!7666 = !DILocation(line: 788, column: 772, scope: !7044, inlinedAt: !7053)
!7667 = !DILocation(line: 788, column: 766, scope: !7044, inlinedAt: !7053)
!7668 = !DILocation(line: 788, column: 764, scope: !7044, inlinedAt: !7053)
!7669 = !DILocation(line: 788, column: 793, scope: !7044, inlinedAt: !7053)
!7670 = !DILocation(line: 788, column: 787, scope: !7044, inlinedAt: !7053)
!7671 = !DILocation(line: 788, column: 785, scope: !7044, inlinedAt: !7053)
!7672 = !DILocation(line: 788, column: 804, scope: !7044, inlinedAt: !7053)
!7673 = !DILocation(line: 788, column: 806, scope: !7440, inlinedAt: !7053)
!7674 = !DILocation(line: 788, column: 827, scope: !7442, inlinedAt: !7053)
!7675 = !DILocation(line: 788, column: 822, scope: !7442, inlinedAt: !7053)
!7676 = !DILocation(line: 788, column: 844, scope: !7442, inlinedAt: !7053)
!7677 = !DILocation(line: 788, column: 862, scope: !7442, inlinedAt: !7053)
!7678 = !DILocation(line: 788, column: 874, scope: !7442, inlinedAt: !7053)
!7679 = !DILocation(line: 788, column: 871, scope: !7442, inlinedAt: !7053)
!7680 = !DILocation(line: 788, column: 859, scope: !7442, inlinedAt: !7053)
!7681 = !DILocation(line: 788, column: 843, scope: !7442, inlinedAt: !7053)
!7682 = !DILocation(line: 788, column: 881, scope: !7452, inlinedAt: !7053)
!7683 = !DILocation(line: 788, column: 893, scope: !7452, inlinedAt: !7053)
!7684 = !DILocation(line: 788, column: 890, scope: !7452, inlinedAt: !7053)
!7685 = !DILocation(line: 788, column: 843, scope: !7452, inlinedAt: !7053)
!7686 = !DILocation(line: 788, column: 900, scope: !7457, inlinedAt: !7053)
!7687 = !DILocation(line: 788, column: 843, scope: !7457, inlinedAt: !7053)
!7688 = !DILocation(line: 788, column: 843, scope: !7460, inlinedAt: !7053)
!7689 = !DILocation(line: 788, column: 840, scope: !7460, inlinedAt: !7053)
!7690 = !DILocation(line: 790, column: 18, scope: !7050, inlinedAt: !7053)
!7691 = !DILocation(line: 790, column: 6, scope: !7050, inlinedAt: !7053)
!7692 = !DILocation(line: 790, column: 10, scope: !7050, inlinedAt: !7053)
!7693 = !DILocation(line: 790, column: 16, scope: !7050, inlinedAt: !7053)
!7694 = !DILocation(line: 792, column: 12, scope: !7050, inlinedAt: !7053)
!7695 = !DILocation(line: 1051, column: 25, scope: !7054)
!7696 = !DILocation(line: 1053, column: 26, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7054, file: !936, line: 1053, column: 25)
!7698 = !DILocation(line: 1053, column: 25, scope: !7054)
!7699 = !DILocalVariable(name: "code", scope: !7700, file: !936, line: 1054, type: !912)
!7700 = distinct !DILexicalBlock(scope: !7697, file: !936, line: 1053, column: 31)
!7701 = !DILocation(line: 1054, column: 34, scope: !7700)
!7702 = !DILocation(line: 1054, column: 51, scope: !7700)
!7703 = !DILocation(line: 1054, column: 54, scope: !7700)
!7704 = !DILocation(line: 1054, column: 41, scope: !7700)
!7705 = !DILocation(line: 1055, column: 31, scope: !7700)
!7706 = !DILocation(line: 1055, column: 36, scope: !7700)
!7707 = !DILocation(line: 1055, column: 29, scope: !7700)
!7708 = !DILocation(line: 1056, column: 33, scope: !7700)
!7709 = !DILocation(line: 1056, column: 38, scope: !7700)
!7710 = !DILocation(line: 1056, column: 43, scope: !7700)
!7711 = !DILocation(line: 1056, column: 30, scope: !7700)
!7712 = !DILocation(line: 1057, column: 33, scope: !7700)
!7713 = !DILocation(line: 1057, column: 38, scope: !7700)
!7714 = !DILocation(line: 1057, column: 46, scope: !7700)
!7715 = !DILocation(line: 1057, column: 30, scope: !7700)
!7716 = !DILocation(line: 1058, column: 21, scope: !7700)
!7717 = !DILocation(line: 1058, column: 32, scope: !7718)
!7718 = !DILexicalBlockFile(scope: !7719, file: !936, discriminator: 1)
!7719 = distinct !DILexicalBlock(scope: !7697, file: !936, line: 1058, column: 32)
!7720 = !DILocation(line: 1058, column: 36, scope: !7718)
!7721 = !DILocation(line: 1059, column: 25, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7719, file: !936, line: 1058, column: 42)
!7723 = !DILocation(line: 1061, column: 45, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7719, file: !936, line: 1060, column: 28)
!7725 = !DILocation(line: 1061, column: 32, scope: !7724)
!7726 = !DILocation(line: 1061, column: 30, scope: !7724)
!7727 = !DILocation(line: 1062, column: 46, scope: !7724)
!7728 = !DILocation(line: 1062, column: 31, scope: !7724)
!7729 = !DILocation(line: 1062, column: 29, scope: !7724)
!7730 = !DILocation(line: 1063, column: 43, scope: !7724)
!7731 = !DILocation(line: 1063, column: 46, scope: !7724)
!7732 = !DILocation(line: 1063, column: 32, scope: !7724)
!7733 = !DILocation(line: 1063, column: 49, scope: !7724)
!7734 = !DILocation(line: 1063, column: 30, scope: !7724)
!7735 = !DILocation(line: 1066, column: 26, scope: !7054)
!7736 = !DILocation(line: 1066, column: 23, scope: !7054)
!7737 = !DILocation(line: 1067, column: 25, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7054, file: !936, line: 1067, column: 25)
!7739 = !DILocation(line: 1067, column: 30, scope: !7738)
!7740 = !DILocation(line: 1067, column: 33, scope: !7738)
!7741 = !DILocation(line: 1067, column: 27, scope: !7738)
!7742 = !DILocation(line: 1067, column: 25, scope: !7054)
!7743 = !DILocation(line: 1068, column: 32, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7738, file: !936, line: 1067, column: 44)
!7745 = !DILocation(line: 1068, column: 35, scope: !7744)
!7746 = !DILocation(line: 1068, column: 25, scope: !7744)
!7747 = !DILocation(line: 1070, column: 25, scope: !7744)
!7748 = !DILocation(line: 1072, column: 56, scope: !7054)
!7749 = !DILocation(line: 1072, column: 62, scope: !7054)
!7750 = !DILocation(line: 1072, column: 60, scope: !7054)
!7751 = !DILocation(line: 1072, column: 70, scope: !7054)
!7752 = !DILocation(line: 1072, column: 68, scope: !7054)
!7753 = !DILocation(line: 1072, column: 49, scope: !7054)
!7754 = !DILocation(line: 1072, column: 21, scope: !7054)
!7755 = !DILocation(line: 1072, column: 32, scope: !7054)
!7756 = !DILocation(line: 1072, column: 24, scope: !7054)
!7757 = !DILocation(line: 1072, column: 35, scope: !7054)
!7758 = !DILocation(line: 1072, column: 52, scope: !7054)
!7759 = !DILocation(line: 1073, column: 17, scope: !7054)
!7760 = !DILocation(line: 1045, column: 48, scope: !7761)
!7761 = !DILexicalBlockFile(scope: !7055, file: !936, discriminator: 2)
!7762 = !DILocation(line: 1045, column: 17, scope: !7761)
!7763 = distinct !{!7763, !7764}
!7764 = !DILocation(line: 1045, column: 17, scope: !7057)
!7765 = !DILocation(line: 1076, column: 58, scope: !7059)
!7766 = !DILocation(line: 1076, column: 47, scope: !7059)
!7767 = !DILocation(line: 1076, column: 50, scope: !7059)
!7768 = !DILocation(line: 1076, column: 61, scope: !7059)
!7769 = !DILocation(line: 1076, column: 46, scope: !7059)
!7770 = !DILocation(line: 1076, column: 24, scope: !7059)
!7771 = !DILocation(line: 1076, column: 13, scope: !7059)
!7772 = !DILocation(line: 1076, column: 16, scope: !7059)
!7773 = !DILocation(line: 1076, column: 27, scope: !7059)
!7774 = !DILocation(line: 1076, column: 44, scope: !7059)
!7775 = !DILocation(line: 1077, column: 39, scope: !7059)
!7776 = !DILocation(line: 1077, column: 42, scope: !7059)
!7777 = !DILocation(line: 1077, column: 24, scope: !7059)
!7778 = !DILocation(line: 1077, column: 13, scope: !7059)
!7779 = !DILocation(line: 1077, column: 16, scope: !7059)
!7780 = !DILocation(line: 1077, column: 27, scope: !7059)
!7781 = !DILocation(line: 1077, column: 37, scope: !7059)
!7782 = !DILocation(line: 1078, column: 24, scope: !7059)
!7783 = !DILocation(line: 1078, column: 13, scope: !7059)
!7784 = !DILocation(line: 1078, column: 16, scope: !7059)
!7785 = !DILocation(line: 1078, column: 27, scope: !7059)
!7786 = !DILocation(line: 1078, column: 36, scope: !7059)
!7787 = !DILocation(line: 1079, column: 9, scope: !7059)
!7788 = !DILocation(line: 1082, column: 53, scope: !7061)
!7789 = !DILocation(line: 1082, column: 42, scope: !7061)
!7790 = !DILocation(line: 1082, column: 45, scope: !7061)
!7791 = !DILocation(line: 1082, column: 56, scope: !7061)
!7792 = !DILocation(line: 1082, column: 20, scope: !7061)
!7793 = !DILocation(line: 1082, column: 9, scope: !7061)
!7794 = !DILocation(line: 1082, column: 12, scope: !7061)
!7795 = !DILocation(line: 1082, column: 23, scope: !7061)
!7796 = !DILocation(line: 1082, column: 40, scope: !7061)
!7797 = !DILocation(line: 1083, column: 30, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7061, file: !936, line: 1083, column: 9)
!7799 = !DILocation(line: 1083, column: 19, scope: !7798)
!7800 = !DILocation(line: 1083, column: 22, scope: !7798)
!7801 = !DILocation(line: 1083, column: 33, scope: !7798)
!7802 = !DILocation(line: 1083, column: 47, scope: !7798)
!7803 = !DILocation(line: 1083, column: 17, scope: !7798)
!7804 = !DILocation(line: 1083, column: 14, scope: !7798)
!7805 = !DILocation(line: 1083, column: 52, scope: !7806)
!7806 = !DILexicalBlockFile(scope: !7807, file: !936, discriminator: 1)
!7807 = distinct !DILexicalBlock(scope: !7798, file: !936, line: 1083, column: 9)
!7808 = !DILocation(line: 1083, column: 57, scope: !7806)
!7809 = !DILocation(line: 1083, column: 55, scope: !7806)
!7810 = !DILocation(line: 1083, column: 9, scope: !7806)
!7811 = !DILocation(line: 1085, column: 30, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7807, file: !936, line: 1083, column: 71)
!7813 = !DILocation(line: 1085, column: 19, scope: !7812)
!7814 = !DILocation(line: 1085, column: 22, scope: !7812)
!7815 = !DILocation(line: 1085, column: 33, scope: !7812)
!7816 = !DILocation(line: 1085, column: 55, scope: !7812)
!7817 = !DILocation(line: 1085, column: 54, scope: !7812)
!7818 = !DILocation(line: 1085, column: 51, scope: !7812)
!7819 = !DILocation(line: 1085, column: 18, scope: !7812)
!7820 = !DILocation(line: 1085, column: 73, scope: !7821)
!7821 = !DILexicalBlockFile(scope: !7812, file: !936, discriminator: 1)
!7822 = !DILocation(line: 1085, column: 62, scope: !7821)
!7823 = !DILocation(line: 1085, column: 65, scope: !7821)
!7824 = !DILocation(line: 1085, column: 76, scope: !7821)
!7825 = !DILocation(line: 1085, column: 18, scope: !7821)
!7826 = !DILocation(line: 1085, column: 98, scope: !7827)
!7827 = !DILexicalBlockFile(scope: !7812, file: !936, discriminator: 2)
!7828 = !DILocation(line: 1085, column: 97, scope: !7827)
!7829 = !DILocation(line: 1085, column: 18, scope: !7827)
!7830 = !DILocation(line: 1085, column: 18, scope: !7831)
!7831 = !DILexicalBlockFile(scope: !7812, file: !936, discriminator: 3)
!7832 = !DILocation(line: 1084, column: 24, scope: !7812)
!7833 = !DILocation(line: 1084, column: 13, scope: !7812)
!7834 = !DILocation(line: 1084, column: 16, scope: !7812)
!7835 = !DILocation(line: 1084, column: 27, scope: !7812)
!7836 = !DILocation(line: 1084, column: 44, scope: !7812)
!7837 = !DILocation(line: 1086, column: 9, scope: !7812)
!7838 = !DILocation(line: 1083, column: 67, scope: !7839)
!7839 = !DILexicalBlockFile(scope: !7807, file: !936, discriminator: 2)
!7840 = !DILocation(line: 1083, column: 9, scope: !7839)
!7841 = distinct !{!7841, !7842}
!7842 = !DILocation(line: 1083, column: 9, scope: !7061)
!7843 = !DILocation(line: 1088, column: 5, scope: !7061)
!7844 = !DILocation(line: 1011, column: 52, scope: !7845)
!7845 = !DILexicalBlockFile(scope: !7062, file: !936, discriminator: 2)
!7846 = !DILocation(line: 1011, column: 5, scope: !7845)
!7847 = distinct !{!7847, !7848}
!7848 = !DILocation(line: 1011, column: 5, scope: !7041)
!7849 = !DILocation(line: 1089, column: 5, scope: !7041)
!7850 = !DILocation(line: 1090, column: 1, scope: !7041)
!7851 = !DILocalVariable(name: "f", arg: 1, scope: !7852, file: !7853, line: 50, type: !933)
!7852 = distinct !DISubprogram(name: "av_float2int", scope: !7853, file: !7853, line: 50, type: !7854, isLocal: true, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!7853 = !DIFile(filename: "./libavutil/intfloat.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7854 = !DISubroutineType(types: !7855)
!7855 = !{!912, !933}
!7856 = !DILocation(line: 50, column: 74, scope: !7852, inlinedAt: !7857)
!7857 = distinct !DILocation(line: 955, column: 33, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7859, file: !936, line: 946, column: 37)
!7859 = distinct !DILexicalBlock(scope: !7860, file: !936, line: 946, column: 21)
!7860 = distinct !DILexicalBlock(scope: !7861, file: !936, line: 944, column: 40)
!7861 = distinct !DILexicalBlock(scope: !7862, file: !936, line: 944, column: 13)
!7862 = distinct !DILexicalBlock(scope: !7863, file: !936, line: 944, column: 13)
!7863 = distinct !DILexicalBlock(scope: !7864, file: !936, line: 943, column: 29)
!7864 = distinct !DILexicalBlock(scope: !7865, file: !936, line: 943, column: 13)
!7865 = distinct !DILexicalBlock(scope: !1998, file: !936, line: 936, column: 50)
!7866 = !DILocalVariable(name: "v", scope: !7852, file: !7853, line: 52, type: !7867)
!7867 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "av_intfloat32", file: !7853, line: 27, size: 32, align: 32, elements: !7868)
!7868 = !{!7869, !7870}
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !7867, file: !7853, line: 28, baseType: !912, size: 32, align: 32)
!7870 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !7867, file: !7853, line: 29, baseType: !933, size: 32, align: 32)
!7871 = !DILocation(line: 52, column: 25, scope: !7852, inlinedAt: !7857)
!7872 = !DILocation(line: 50, column: 74, scope: !7852, inlinedAt: !7873)
!7873 = distinct !DILocation(line: 954, column: 32, scope: !7858)
!7874 = !DILocation(line: 52, column: 25, scope: !7852, inlinedAt: !7873)
!7875 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7876)
!7876 = distinct !DILocation(line: 788, column: 601, scope: !7044, inlinedAt: !7877)
!7877 = distinct !DILocation(line: 951, column: 26, scope: !7858)
!7878 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7879)
!7879 = distinct !DILocation(line: 788, column: 259, scope: !7066, inlinedAt: !7877)
!7880 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7881)
!7881 = distinct !DILocation(line: 786, column: 16, scope: !7050, inlinedAt: !7877)
!7882 = !DILocation(line: 762, column: 74, scope: !7050, inlinedAt: !7877)
!7883 = !DILocation(line: 762, column: 87, scope: !7050, inlinedAt: !7877)
!7884 = !DILocation(line: 763, column: 42, scope: !7050, inlinedAt: !7877)
!7885 = !DILocation(line: 763, column: 52, scope: !7050, inlinedAt: !7877)
!7886 = !DILocation(line: 783, column: 9, scope: !7050, inlinedAt: !7877)
!7887 = !DILocation(line: 785, column: 18, scope: !7050, inlinedAt: !7877)
!7888 = !DILocation(line: 785, column: 78, scope: !7050, inlinedAt: !7877)
!7889 = !DILocation(line: 785, column: 101, scope: !7050, inlinedAt: !7877)
!7890 = !DILocation(line: 788, column: 14, scope: !7049, inlinedAt: !7877)
!7891 = !DILocation(line: 788, column: 17, scope: !7049, inlinedAt: !7877)
!7892 = !DILocation(line: 788, column: 39, scope: !7049, inlinedAt: !7877)
!7893 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7894)
!7894 = distinct !DILocation(line: 788, column: 601, scope: !7044, inlinedAt: !7895)
!7895 = distinct !DILocation(line: 948, column: 26, scope: !7858)
!7896 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7897)
!7897 = distinct !DILocation(line: 788, column: 259, scope: !7066, inlinedAt: !7895)
!7898 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7899)
!7899 = distinct !DILocation(line: 786, column: 16, scope: !7050, inlinedAt: !7895)
!7900 = !DILocation(line: 762, column: 74, scope: !7050, inlinedAt: !7895)
!7901 = !DILocation(line: 762, column: 87, scope: !7050, inlinedAt: !7895)
!7902 = !DILocation(line: 763, column: 42, scope: !7050, inlinedAt: !7895)
!7903 = !DILocation(line: 763, column: 52, scope: !7050, inlinedAt: !7895)
!7904 = !DILocation(line: 783, column: 9, scope: !7050, inlinedAt: !7895)
!7905 = !DILocation(line: 785, column: 18, scope: !7050, inlinedAt: !7895)
!7906 = !DILocation(line: 785, column: 78, scope: !7050, inlinedAt: !7895)
!7907 = !DILocation(line: 785, column: 101, scope: !7050, inlinedAt: !7895)
!7908 = !DILocation(line: 788, column: 14, scope: !7049, inlinedAt: !7895)
!7909 = !DILocation(line: 788, column: 17, scope: !7049, inlinedAt: !7895)
!7910 = !DILocation(line: 788, column: 39, scope: !7049, inlinedAt: !7895)
!7911 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7912)
!7912 = distinct !DILocation(line: 788, column: 601, scope: !7044, inlinedAt: !7913)
!7913 = distinct !DILocation(line: 945, column: 23, scope: !7860)
!7914 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7915)
!7915 = distinct !DILocation(line: 788, column: 259, scope: !7066, inlinedAt: !7913)
!7916 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7917)
!7917 = distinct !DILocation(line: 786, column: 16, scope: !7050, inlinedAt: !7913)
!7918 = !DILocation(line: 762, column: 74, scope: !7050, inlinedAt: !7913)
!7919 = !DILocation(line: 762, column: 87, scope: !7050, inlinedAt: !7913)
!7920 = !DILocation(line: 763, column: 42, scope: !7050, inlinedAt: !7913)
!7921 = !DILocation(line: 763, column: 52, scope: !7050, inlinedAt: !7913)
!7922 = !DILocation(line: 783, column: 9, scope: !7050, inlinedAt: !7913)
!7923 = !DILocation(line: 785, column: 18, scope: !7050, inlinedAt: !7913)
!7924 = !DILocation(line: 785, column: 78, scope: !7050, inlinedAt: !7913)
!7925 = !DILocation(line: 785, column: 101, scope: !7050, inlinedAt: !7913)
!7926 = !DILocation(line: 788, column: 14, scope: !7049, inlinedAt: !7913)
!7927 = !DILocation(line: 788, column: 17, scope: !7049, inlinedAt: !7913)
!7928 = !DILocation(line: 788, column: 39, scope: !7049, inlinedAt: !7913)
!7929 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7930)
!7930 = distinct !DILocation(line: 788, column: 601, scope: !7044, inlinedAt: !7931)
!7931 = distinct !DILocation(line: 941, column: 15, scope: !7865)
!7932 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7933)
!7933 = distinct !DILocation(line: 788, column: 259, scope: !7066, inlinedAt: !7931)
!7934 = !DILocation(line: 66, column: 98, scope: !4353, inlinedAt: !7935)
!7935 = distinct !DILocation(line: 786, column: 16, scope: !7050, inlinedAt: !7931)
!7936 = !DILocation(line: 762, column: 74, scope: !7050, inlinedAt: !7931)
!7937 = !DILocation(line: 762, column: 87, scope: !7050, inlinedAt: !7931)
!7938 = !DILocation(line: 763, column: 42, scope: !7050, inlinedAt: !7931)
!7939 = !DILocation(line: 763, column: 52, scope: !7050, inlinedAt: !7931)
!7940 = !DILocation(line: 783, column: 9, scope: !7050, inlinedAt: !7931)
!7941 = !DILocation(line: 785, column: 18, scope: !7050, inlinedAt: !7931)
!7942 = !DILocation(line: 785, column: 78, scope: !7050, inlinedAt: !7931)
!7943 = !DILocation(line: 785, column: 101, scope: !7050, inlinedAt: !7931)
!7944 = !DILocation(line: 788, column: 14, scope: !7049, inlinedAt: !7931)
!7945 = !DILocation(line: 788, column: 17, scope: !7049, inlinedAt: !7931)
!7946 = !DILocation(line: 788, column: 39, scope: !7049, inlinedAt: !7931)
!7947 = !DILocalVariable(name: "s", arg: 1, scope: !1998, file: !936, line: 900, type: !1664)
!7948 = !DILocation(line: 900, column: 43, scope: !1998)
!7949 = !DILocalVariable(name: "c", arg: 2, scope: !1998, file: !936, line: 900, type: !914)
!7950 = !DILocation(line: 900, column: 50, scope: !1998)
!7951 = !DILocalVariable(name: "vlctable", scope: !1998, file: !936, line: 911, type: !914)
!7952 = !DILocation(line: 911, column: 9, scope: !1998)
!7953 = !DILocalVariable(name: "vlc", scope: !1998, file: !936, line: 912, type: !7954)
!7954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64, align: 64)
!7955 = !DILocation(line: 912, column: 10, scope: !1998)
!7956 = !DILocalVariable(name: "ci", scope: !1998, file: !936, line: 913, type: !5436)
!7957 = !DILocation(line: 913, column: 23, scope: !1998)
!7958 = !DILocation(line: 913, column: 40, scope: !1998)
!7959 = !DILocation(line: 913, column: 29, scope: !1998)
!7960 = !DILocation(line: 913, column: 32, scope: !1998)
!7961 = !DILocalVariable(name: "rl_mode", scope: !1998, file: !936, line: 914, type: !914)
!7962 = !DILocation(line: 914, column: 9, scope: !1998)
!7963 = !DILocalVariable(name: "cur_coeff", scope: !1998, file: !936, line: 915, type: !914)
!7964 = !DILocation(line: 915, column: 9, scope: !1998)
!7965 = !DILocalVariable(name: "num_zeros", scope: !1998, file: !936, line: 916, type: !914)
!7966 = !DILocation(line: 916, column: 9, scope: !1998)
!7967 = !DILocalVariable(name: "run", scope: !1998, file: !936, line: 917, type: !7968)
!7968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64, align: 64)
!7969 = !DILocation(line: 917, column: 21, scope: !1998)
!7970 = !DILocalVariable(name: "level", scope: !1998, file: !936, line: 918, type: !1680)
!7971 = !DILocation(line: 918, column: 18, scope: !1998)
!7972 = !DILocation(line: 920, column: 5, scope: !1998)
!7973 = distinct !{!7973, !7972}
!7974 = !DILocation(line: 920, column: 82, scope: !7975)
!7975 = !DILexicalBlockFile(scope: !7976, file: !936, discriminator: 1)
!7976 = distinct !DILexicalBlock(scope: !1998, file: !936, line: 920, column: 8)
!7977 = !DILocation(line: 922, column: 27, scope: !1998)
!7978 = !DILocation(line: 922, column: 30, scope: !1998)
!7979 = !DILocation(line: 922, column: 16, scope: !1998)
!7980 = !DILocation(line: 922, column: 14, scope: !1998)
!7981 = !DILocation(line: 923, column: 21, scope: !1998)
!7982 = !DILocation(line: 923, column: 12, scope: !1998)
!7983 = !DILocation(line: 923, column: 9, scope: !1998)
!7984 = !DILocation(line: 925, column: 9, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !1998, file: !936, line: 925, column: 9)
!7986 = !DILocation(line: 925, column: 9, scope: !1998)
!7987 = !DILocation(line: 926, column: 13, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7985, file: !936, line: 925, column: 19)
!7989 = !DILocation(line: 927, column: 15, scope: !7988)
!7990 = !DILocation(line: 928, column: 5, scope: !7988)
!7991 = !DILocation(line: 929, column: 13, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7985, file: !936, line: 928, column: 12)
!7993 = !DILocation(line: 930, column: 15, scope: !7992)
!7994 = !DILocation(line: 935, column: 5, scope: !1998)
!7995 = !DILocation(line: 935, column: 13, scope: !7996)
!7996 = !DILexicalBlockFile(scope: !1998, file: !936, discriminator: 1)
!7997 = !DILocation(line: 935, column: 16, scope: !7996)
!7998 = !DILocation(line: 935, column: 40, scope: !7996)
!7999 = !DILocation(line: 935, column: 44, scope: !8000)
!8000 = !DILexicalBlockFile(scope: !1998, file: !936, discriminator: 2)
!8001 = !DILocation(line: 935, column: 53, scope: !8000)
!8002 = !DILocation(line: 936, column: 13, scope: !1998)
!8003 = !DILocation(line: 936, column: 23, scope: !1998)
!8004 = !DILocation(line: 936, column: 29, scope: !1998)
!8005 = !DILocation(line: 936, column: 33, scope: !1998)
!8006 = !DILocation(line: 936, column: 27, scope: !1998)
!8007 = !DILocation(line: 935, column: 5, scope: !8008)
!8008 = !DILexicalBlockFile(scope: !1998, file: !936, discriminator: 3)
!8009 = !DILocalVariable(name: "vals", scope: !7865, file: !936, line: 937, type: !8010)
!8010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 128, align: 32, elements: !930)
!8011 = !DILocation(line: 937, column: 18, scope: !7865)
!8012 = !DILocalVariable(name: "i", scope: !7865, file: !936, line: 938, type: !914)
!8013 = !DILocation(line: 938, column: 13, scope: !7865)
!8014 = !DILocalVariable(name: "idx", scope: !7865, file: !936, line: 939, type: !913)
!8015 = !DILocation(line: 939, column: 22, scope: !7865)
!8016 = !DILocation(line: 941, column: 25, scope: !7865)
!8017 = !DILocation(line: 941, column: 28, scope: !7865)
!8018 = !DILocation(line: 941, column: 41, scope: !7865)
!8019 = !DILocation(line: 941, column: 15, scope: !7865)
!8020 = !DILocation(line: 785, column: 30, scope: !7050, inlinedAt: !7931)
!8021 = !DILocation(line: 785, column: 34, scope: !7050, inlinedAt: !7931)
!8022 = !DILocation(line: 785, column: 118, scope: !7050, inlinedAt: !7931)
!8023 = !DILocation(line: 785, column: 122, scope: !7050, inlinedAt: !7931)
!8024 = !DILocation(line: 786, column: 60, scope: !7050, inlinedAt: !7931)
!8025 = !DILocation(line: 786, column: 64, scope: !7050, inlinedAt: !7931)
!8026 = !DILocation(line: 786, column: 74, scope: !7050, inlinedAt: !7931)
!8027 = !DILocation(line: 786, column: 83, scope: !7050, inlinedAt: !7931)
!8028 = !DILocation(line: 786, column: 71, scope: !7050, inlinedAt: !7931)
!8029 = !DILocation(line: 786, column: 92, scope: !7050, inlinedAt: !7931)
!8030 = !DILocation(line: 786, column: 16, scope: !7050, inlinedAt: !7931)
!8031 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7935)
!8032 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7935)
!8033 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7935)
!8034 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7935)
!8035 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7935)
!8036 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7935)
!8037 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7935)
!8038 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7935)
!8039 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7935)
!8040 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7935)
!8041 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7935)
!8042 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7935)
!8043 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7935)
!8044 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7935)
!8045 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7935)
!8046 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7935)
!8047 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7935)
!8048 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7935)
!8049 = !DILocation(line: 786, column: 100, scope: !7050, inlinedAt: !7931)
!8050 = !DILocation(line: 786, column: 109, scope: !7050, inlinedAt: !7931)
!8051 = !DILocation(line: 786, column: 96, scope: !7050, inlinedAt: !7931)
!8052 = !DILocation(line: 786, column: 14, scope: !7050, inlinedAt: !7931)
!8053 = !DILocation(line: 788, column: 64, scope: !7290, inlinedAt: !7931)
!8054 = !DILocation(line: 788, column: 74, scope: !7290, inlinedAt: !7931)
!8055 = !DILocation(line: 788, column: 54, scope: !7290, inlinedAt: !7931)
!8056 = !DILocation(line: 788, column: 52, scope: !7290, inlinedAt: !7931)
!8057 = !DILocation(line: 788, column: 94, scope: !7290, inlinedAt: !7931)
!8058 = !DILocation(line: 788, column: 88, scope: !7290, inlinedAt: !7931)
!8059 = !DILocation(line: 788, column: 86, scope: !7290, inlinedAt: !7931)
!8060 = !DILocation(line: 788, column: 115, scope: !7290, inlinedAt: !7931)
!8061 = !DILocation(line: 788, column: 109, scope: !7290, inlinedAt: !7931)
!8062 = !DILocation(line: 788, column: 107, scope: !7290, inlinedAt: !7931)
!8063 = !DILocation(line: 788, column: 130, scope: !7290, inlinedAt: !7931)
!8064 = !DILocation(line: 788, column: 140, scope: !7290, inlinedAt: !7931)
!8065 = !DILocation(line: 788, column: 144, scope: !7290, inlinedAt: !7931)
!8066 = !DILocation(line: 788, column: 147, scope: !7304, inlinedAt: !7931)
!8067 = !DILocation(line: 788, column: 149, scope: !7304, inlinedAt: !7931)
!8068 = !DILocation(line: 788, column: 130, scope: !7304, inlinedAt: !7931)
!8069 = !DILocation(line: 788, column: 169, scope: !7308, inlinedAt: !7931)
!8070 = !DILocation(line: 788, column: 187, scope: !7308, inlinedAt: !7931)
!8071 = !DILocation(line: 788, column: 199, scope: !7308, inlinedAt: !7931)
!8072 = !DILocation(line: 788, column: 196, scope: !7308, inlinedAt: !7931)
!8073 = !DILocation(line: 788, column: 184, scope: !7308, inlinedAt: !7931)
!8074 = !DILocation(line: 788, column: 168, scope: !7308, inlinedAt: !7931)
!8075 = !DILocation(line: 788, column: 209, scope: !7315, inlinedAt: !7931)
!8076 = !DILocation(line: 788, column: 221, scope: !7315, inlinedAt: !7931)
!8077 = !DILocation(line: 788, column: 218, scope: !7315, inlinedAt: !7931)
!8078 = !DILocation(line: 788, column: 168, scope: !7315, inlinedAt: !7931)
!8079 = !DILocation(line: 788, column: 231, scope: !7320, inlinedAt: !7931)
!8080 = !DILocation(line: 788, column: 168, scope: !7320, inlinedAt: !7931)
!8081 = !DILocation(line: 788, column: 168, scope: !7066, inlinedAt: !7931)
!8082 = !DILocation(line: 788, column: 165, scope: !7066, inlinedAt: !7931)
!8083 = !DILocation(line: 788, column: 303, scope: !7066, inlinedAt: !7931)
!8084 = !DILocation(line: 788, column: 307, scope: !7066, inlinedAt: !7931)
!8085 = !DILocation(line: 788, column: 317, scope: !7066, inlinedAt: !7931)
!8086 = !DILocation(line: 788, column: 326, scope: !7066, inlinedAt: !7931)
!8087 = !DILocation(line: 788, column: 314, scope: !7066, inlinedAt: !7931)
!8088 = !DILocation(line: 788, column: 335, scope: !7066, inlinedAt: !7931)
!8089 = !DILocation(line: 788, column: 259, scope: !7066, inlinedAt: !7931)
!8090 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7933)
!8091 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7933)
!8092 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7933)
!8093 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7933)
!8094 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7933)
!8095 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7933)
!8096 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7933)
!8097 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7933)
!8098 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7933)
!8099 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7933)
!8100 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7933)
!8101 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7933)
!8102 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7933)
!8103 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7933)
!8104 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7933)
!8105 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7933)
!8106 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7933)
!8107 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7933)
!8108 = !DILocation(line: 788, column: 343, scope: !7066, inlinedAt: !7931)
!8109 = !DILocation(line: 788, column: 352, scope: !7066, inlinedAt: !7931)
!8110 = !DILocation(line: 788, column: 339, scope: !7066, inlinedAt: !7931)
!8111 = !DILocation(line: 788, column: 257, scope: !7066, inlinedAt: !7931)
!8112 = !DILocation(line: 788, column: 369, scope: !7066, inlinedAt: !7931)
!8113 = !DILocation(line: 788, column: 368, scope: !7066, inlinedAt: !7931)
!8114 = !DILocation(line: 788, column: 366, scope: !7066, inlinedAt: !7931)
!8115 = !DILocation(line: 788, column: 390, scope: !7066, inlinedAt: !7931)
!8116 = !DILocation(line: 788, column: 400, scope: !7066, inlinedAt: !7931)
!8117 = !DILocation(line: 788, column: 380, scope: !7359, inlinedAt: !7931)
!8118 = !DILocation(line: 788, column: 411, scope: !7066, inlinedAt: !7931)
!8119 = !DILocation(line: 788, column: 409, scope: !7066, inlinedAt: !7931)
!8120 = !DILocation(line: 788, column: 378, scope: !7066, inlinedAt: !7931)
!8121 = !DILocation(line: 788, column: 430, scope: !7066, inlinedAt: !7931)
!8122 = !DILocation(line: 788, column: 424, scope: !7066, inlinedAt: !7931)
!8123 = !DILocation(line: 788, column: 422, scope: !7066, inlinedAt: !7931)
!8124 = !DILocation(line: 788, column: 451, scope: !7066, inlinedAt: !7931)
!8125 = !DILocation(line: 788, column: 445, scope: !7066, inlinedAt: !7931)
!8126 = !DILocation(line: 788, column: 443, scope: !7066, inlinedAt: !7931)
!8127 = !DILocation(line: 788, column: 466, scope: !7066, inlinedAt: !7931)
!8128 = !DILocation(line: 788, column: 476, scope: !7066, inlinedAt: !7931)
!8129 = !DILocation(line: 788, column: 480, scope: !7066, inlinedAt: !7931)
!8130 = !DILocation(line: 788, column: 483, scope: !7373, inlinedAt: !7931)
!8131 = !DILocation(line: 788, column: 485, scope: !7373, inlinedAt: !7931)
!8132 = !DILocation(line: 788, column: 466, scope: !7373, inlinedAt: !7931)
!8133 = !DILocation(line: 788, column: 505, scope: !7377, inlinedAt: !7931)
!8134 = !DILocation(line: 788, column: 523, scope: !7377, inlinedAt: !7931)
!8135 = !DILocation(line: 788, column: 535, scope: !7377, inlinedAt: !7931)
!8136 = !DILocation(line: 788, column: 532, scope: !7377, inlinedAt: !7931)
!8137 = !DILocation(line: 788, column: 520, scope: !7377, inlinedAt: !7931)
!8138 = !DILocation(line: 788, column: 504, scope: !7377, inlinedAt: !7931)
!8139 = !DILocation(line: 788, column: 548, scope: !7384, inlinedAt: !7931)
!8140 = !DILocation(line: 788, column: 560, scope: !7384, inlinedAt: !7931)
!8141 = !DILocation(line: 788, column: 557, scope: !7384, inlinedAt: !7931)
!8142 = !DILocation(line: 788, column: 504, scope: !7384, inlinedAt: !7931)
!8143 = !DILocation(line: 788, column: 573, scope: !7389, inlinedAt: !7931)
!8144 = !DILocation(line: 788, column: 504, scope: !7389, inlinedAt: !7931)
!8145 = !DILocation(line: 788, column: 504, scope: !7044, inlinedAt: !7931)
!8146 = !DILocation(line: 788, column: 501, scope: !7044, inlinedAt: !7931)
!8147 = !DILocation(line: 788, column: 645, scope: !7044, inlinedAt: !7931)
!8148 = !DILocation(line: 788, column: 649, scope: !7044, inlinedAt: !7931)
!8149 = !DILocation(line: 788, column: 659, scope: !7044, inlinedAt: !7931)
!8150 = !DILocation(line: 788, column: 668, scope: !7044, inlinedAt: !7931)
!8151 = !DILocation(line: 788, column: 656, scope: !7044, inlinedAt: !7931)
!8152 = !DILocation(line: 788, column: 677, scope: !7044, inlinedAt: !7931)
!8153 = !DILocation(line: 788, column: 601, scope: !7044, inlinedAt: !7931)
!8154 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7930)
!8155 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7930)
!8156 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7930)
!8157 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7930)
!8158 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7930)
!8159 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7930)
!8160 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7930)
!8161 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7930)
!8162 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7930)
!8163 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7930)
!8164 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7930)
!8165 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7930)
!8166 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7930)
!8167 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7930)
!8168 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7930)
!8169 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7930)
!8170 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7930)
!8171 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7930)
!8172 = !DILocation(line: 788, column: 685, scope: !7044, inlinedAt: !7931)
!8173 = !DILocation(line: 788, column: 694, scope: !7044, inlinedAt: !7931)
!8174 = !DILocation(line: 788, column: 681, scope: !7044, inlinedAt: !7931)
!8175 = !DILocation(line: 788, column: 599, scope: !7044, inlinedAt: !7931)
!8176 = !DILocation(line: 788, column: 711, scope: !7044, inlinedAt: !7931)
!8177 = !DILocation(line: 788, column: 710, scope: !7044, inlinedAt: !7931)
!8178 = !DILocation(line: 788, column: 708, scope: !7044, inlinedAt: !7931)
!8179 = !DILocation(line: 788, column: 732, scope: !7044, inlinedAt: !7931)
!8180 = !DILocation(line: 788, column: 742, scope: !7044, inlinedAt: !7931)
!8181 = !DILocation(line: 788, column: 722, scope: !7428, inlinedAt: !7931)
!8182 = !DILocation(line: 788, column: 753, scope: !7044, inlinedAt: !7931)
!8183 = !DILocation(line: 788, column: 751, scope: !7044, inlinedAt: !7931)
!8184 = !DILocation(line: 788, column: 720, scope: !7044, inlinedAt: !7931)
!8185 = !DILocation(line: 788, column: 772, scope: !7044, inlinedAt: !7931)
!8186 = !DILocation(line: 788, column: 766, scope: !7044, inlinedAt: !7931)
!8187 = !DILocation(line: 788, column: 764, scope: !7044, inlinedAt: !7931)
!8188 = !DILocation(line: 788, column: 793, scope: !7044, inlinedAt: !7931)
!8189 = !DILocation(line: 788, column: 787, scope: !7044, inlinedAt: !7931)
!8190 = !DILocation(line: 788, column: 785, scope: !7044, inlinedAt: !7931)
!8191 = !DILocation(line: 788, column: 804, scope: !7044, inlinedAt: !7931)
!8192 = !DILocation(line: 788, column: 806, scope: !7440, inlinedAt: !7931)
!8193 = !DILocation(line: 788, column: 827, scope: !7442, inlinedAt: !7931)
!8194 = !DILocation(line: 788, column: 822, scope: !7442, inlinedAt: !7931)
!8195 = !DILocation(line: 788, column: 844, scope: !7442, inlinedAt: !7931)
!8196 = !DILocation(line: 788, column: 862, scope: !7442, inlinedAt: !7931)
!8197 = !DILocation(line: 788, column: 874, scope: !7442, inlinedAt: !7931)
!8198 = !DILocation(line: 788, column: 871, scope: !7442, inlinedAt: !7931)
!8199 = !DILocation(line: 788, column: 859, scope: !7442, inlinedAt: !7931)
!8200 = !DILocation(line: 788, column: 843, scope: !7442, inlinedAt: !7931)
!8201 = !DILocation(line: 788, column: 881, scope: !7452, inlinedAt: !7931)
!8202 = !DILocation(line: 788, column: 893, scope: !7452, inlinedAt: !7931)
!8203 = !DILocation(line: 788, column: 890, scope: !7452, inlinedAt: !7931)
!8204 = !DILocation(line: 788, column: 843, scope: !7452, inlinedAt: !7931)
!8205 = !DILocation(line: 788, column: 900, scope: !7457, inlinedAt: !7931)
!8206 = !DILocation(line: 788, column: 843, scope: !7457, inlinedAt: !7931)
!8207 = !DILocation(line: 788, column: 843, scope: !7460, inlinedAt: !7931)
!8208 = !DILocation(line: 788, column: 840, scope: !7460, inlinedAt: !7931)
!8209 = !DILocation(line: 790, column: 18, scope: !7050, inlinedAt: !7931)
!8210 = !DILocation(line: 790, column: 6, scope: !7050, inlinedAt: !7931)
!8211 = !DILocation(line: 790, column: 10, scope: !7050, inlinedAt: !7931)
!8212 = !DILocation(line: 790, column: 16, scope: !7050, inlinedAt: !7931)
!8213 = !DILocation(line: 792, column: 12, scope: !7050, inlinedAt: !7931)
!8214 = !DILocation(line: 941, column: 13, scope: !7865)
!8215 = !DILocation(line: 943, column: 13, scope: !7864)
!8216 = !DILocation(line: 943, column: 17, scope: !7864)
!8217 = !DILocation(line: 943, column: 13, scope: !7865)
!8218 = !DILocation(line: 944, column: 20, scope: !7862)
!8219 = !DILocation(line: 944, column: 18, scope: !7862)
!8220 = !DILocation(line: 944, column: 25, scope: !8221)
!8221 = !DILexicalBlockFile(scope: !7861, file: !936, discriminator: 1)
!8222 = !DILocation(line: 944, column: 27, scope: !8221)
!8223 = !DILocation(line: 944, column: 13, scope: !8221)
!8224 = !DILocation(line: 945, column: 33, scope: !7860)
!8225 = !DILocation(line: 945, column: 36, scope: !7860)
!8226 = !DILocation(line: 945, column: 49, scope: !7860)
!8227 = !DILocation(line: 945, column: 23, scope: !7860)
!8228 = !DILocation(line: 785, column: 30, scope: !7050, inlinedAt: !7913)
!8229 = !DILocation(line: 785, column: 34, scope: !7050, inlinedAt: !7913)
!8230 = !DILocation(line: 785, column: 118, scope: !7050, inlinedAt: !7913)
!8231 = !DILocation(line: 785, column: 122, scope: !7050, inlinedAt: !7913)
!8232 = !DILocation(line: 786, column: 60, scope: !7050, inlinedAt: !7913)
!8233 = !DILocation(line: 786, column: 64, scope: !7050, inlinedAt: !7913)
!8234 = !DILocation(line: 786, column: 74, scope: !7050, inlinedAt: !7913)
!8235 = !DILocation(line: 786, column: 83, scope: !7050, inlinedAt: !7913)
!8236 = !DILocation(line: 786, column: 71, scope: !7050, inlinedAt: !7913)
!8237 = !DILocation(line: 786, column: 92, scope: !7050, inlinedAt: !7913)
!8238 = !DILocation(line: 786, column: 16, scope: !7050, inlinedAt: !7913)
!8239 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7917)
!8240 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7917)
!8241 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7917)
!8242 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7917)
!8243 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7917)
!8244 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7917)
!8245 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7917)
!8246 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7917)
!8247 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7917)
!8248 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7917)
!8249 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7917)
!8250 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7917)
!8251 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7917)
!8252 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7917)
!8253 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7917)
!8254 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7917)
!8255 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7917)
!8256 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7917)
!8257 = !DILocation(line: 786, column: 100, scope: !7050, inlinedAt: !7913)
!8258 = !DILocation(line: 786, column: 109, scope: !7050, inlinedAt: !7913)
!8259 = !DILocation(line: 786, column: 96, scope: !7050, inlinedAt: !7913)
!8260 = !DILocation(line: 786, column: 14, scope: !7050, inlinedAt: !7913)
!8261 = !DILocation(line: 788, column: 64, scope: !7290, inlinedAt: !7913)
!8262 = !DILocation(line: 788, column: 74, scope: !7290, inlinedAt: !7913)
!8263 = !DILocation(line: 788, column: 54, scope: !7290, inlinedAt: !7913)
!8264 = !DILocation(line: 788, column: 52, scope: !7290, inlinedAt: !7913)
!8265 = !DILocation(line: 788, column: 94, scope: !7290, inlinedAt: !7913)
!8266 = !DILocation(line: 788, column: 88, scope: !7290, inlinedAt: !7913)
!8267 = !DILocation(line: 788, column: 86, scope: !7290, inlinedAt: !7913)
!8268 = !DILocation(line: 788, column: 115, scope: !7290, inlinedAt: !7913)
!8269 = !DILocation(line: 788, column: 109, scope: !7290, inlinedAt: !7913)
!8270 = !DILocation(line: 788, column: 107, scope: !7290, inlinedAt: !7913)
!8271 = !DILocation(line: 788, column: 130, scope: !7290, inlinedAt: !7913)
!8272 = !DILocation(line: 788, column: 140, scope: !7290, inlinedAt: !7913)
!8273 = !DILocation(line: 788, column: 144, scope: !7290, inlinedAt: !7913)
!8274 = !DILocation(line: 788, column: 147, scope: !7304, inlinedAt: !7913)
!8275 = !DILocation(line: 788, column: 149, scope: !7304, inlinedAt: !7913)
!8276 = !DILocation(line: 788, column: 130, scope: !7304, inlinedAt: !7913)
!8277 = !DILocation(line: 788, column: 169, scope: !7308, inlinedAt: !7913)
!8278 = !DILocation(line: 788, column: 187, scope: !7308, inlinedAt: !7913)
!8279 = !DILocation(line: 788, column: 199, scope: !7308, inlinedAt: !7913)
!8280 = !DILocation(line: 788, column: 196, scope: !7308, inlinedAt: !7913)
!8281 = !DILocation(line: 788, column: 184, scope: !7308, inlinedAt: !7913)
!8282 = !DILocation(line: 788, column: 168, scope: !7308, inlinedAt: !7913)
!8283 = !DILocation(line: 788, column: 209, scope: !7315, inlinedAt: !7913)
!8284 = !DILocation(line: 788, column: 221, scope: !7315, inlinedAt: !7913)
!8285 = !DILocation(line: 788, column: 218, scope: !7315, inlinedAt: !7913)
!8286 = !DILocation(line: 788, column: 168, scope: !7315, inlinedAt: !7913)
!8287 = !DILocation(line: 788, column: 231, scope: !7320, inlinedAt: !7913)
!8288 = !DILocation(line: 788, column: 168, scope: !7320, inlinedAt: !7913)
!8289 = !DILocation(line: 788, column: 168, scope: !7066, inlinedAt: !7913)
!8290 = !DILocation(line: 788, column: 165, scope: !7066, inlinedAt: !7913)
!8291 = !DILocation(line: 788, column: 303, scope: !7066, inlinedAt: !7913)
!8292 = !DILocation(line: 788, column: 307, scope: !7066, inlinedAt: !7913)
!8293 = !DILocation(line: 788, column: 317, scope: !7066, inlinedAt: !7913)
!8294 = !DILocation(line: 788, column: 326, scope: !7066, inlinedAt: !7913)
!8295 = !DILocation(line: 788, column: 314, scope: !7066, inlinedAt: !7913)
!8296 = !DILocation(line: 788, column: 335, scope: !7066, inlinedAt: !7913)
!8297 = !DILocation(line: 788, column: 259, scope: !7066, inlinedAt: !7913)
!8298 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7915)
!8299 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7915)
!8300 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7915)
!8301 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7915)
!8302 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7915)
!8303 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7915)
!8304 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7915)
!8305 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7915)
!8306 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7915)
!8307 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7915)
!8308 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7915)
!8309 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7915)
!8310 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7915)
!8311 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7915)
!8312 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7915)
!8313 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7915)
!8314 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7915)
!8315 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7915)
!8316 = !DILocation(line: 788, column: 343, scope: !7066, inlinedAt: !7913)
!8317 = !DILocation(line: 788, column: 352, scope: !7066, inlinedAt: !7913)
!8318 = !DILocation(line: 788, column: 339, scope: !7066, inlinedAt: !7913)
!8319 = !DILocation(line: 788, column: 257, scope: !7066, inlinedAt: !7913)
!8320 = !DILocation(line: 788, column: 369, scope: !7066, inlinedAt: !7913)
!8321 = !DILocation(line: 788, column: 368, scope: !7066, inlinedAt: !7913)
!8322 = !DILocation(line: 788, column: 366, scope: !7066, inlinedAt: !7913)
!8323 = !DILocation(line: 788, column: 390, scope: !7066, inlinedAt: !7913)
!8324 = !DILocation(line: 788, column: 400, scope: !7066, inlinedAt: !7913)
!8325 = !DILocation(line: 788, column: 380, scope: !7359, inlinedAt: !7913)
!8326 = !DILocation(line: 788, column: 411, scope: !7066, inlinedAt: !7913)
!8327 = !DILocation(line: 788, column: 409, scope: !7066, inlinedAt: !7913)
!8328 = !DILocation(line: 788, column: 378, scope: !7066, inlinedAt: !7913)
!8329 = !DILocation(line: 788, column: 430, scope: !7066, inlinedAt: !7913)
!8330 = !DILocation(line: 788, column: 424, scope: !7066, inlinedAt: !7913)
!8331 = !DILocation(line: 788, column: 422, scope: !7066, inlinedAt: !7913)
!8332 = !DILocation(line: 788, column: 451, scope: !7066, inlinedAt: !7913)
!8333 = !DILocation(line: 788, column: 445, scope: !7066, inlinedAt: !7913)
!8334 = !DILocation(line: 788, column: 443, scope: !7066, inlinedAt: !7913)
!8335 = !DILocation(line: 788, column: 466, scope: !7066, inlinedAt: !7913)
!8336 = !DILocation(line: 788, column: 476, scope: !7066, inlinedAt: !7913)
!8337 = !DILocation(line: 788, column: 480, scope: !7066, inlinedAt: !7913)
!8338 = !DILocation(line: 788, column: 483, scope: !7373, inlinedAt: !7913)
!8339 = !DILocation(line: 788, column: 485, scope: !7373, inlinedAt: !7913)
!8340 = !DILocation(line: 788, column: 466, scope: !7373, inlinedAt: !7913)
!8341 = !DILocation(line: 788, column: 505, scope: !7377, inlinedAt: !7913)
!8342 = !DILocation(line: 788, column: 523, scope: !7377, inlinedAt: !7913)
!8343 = !DILocation(line: 788, column: 535, scope: !7377, inlinedAt: !7913)
!8344 = !DILocation(line: 788, column: 532, scope: !7377, inlinedAt: !7913)
!8345 = !DILocation(line: 788, column: 520, scope: !7377, inlinedAt: !7913)
!8346 = !DILocation(line: 788, column: 504, scope: !7377, inlinedAt: !7913)
!8347 = !DILocation(line: 788, column: 548, scope: !7384, inlinedAt: !7913)
!8348 = !DILocation(line: 788, column: 560, scope: !7384, inlinedAt: !7913)
!8349 = !DILocation(line: 788, column: 557, scope: !7384, inlinedAt: !7913)
!8350 = !DILocation(line: 788, column: 504, scope: !7384, inlinedAt: !7913)
!8351 = !DILocation(line: 788, column: 573, scope: !7389, inlinedAt: !7913)
!8352 = !DILocation(line: 788, column: 504, scope: !7389, inlinedAt: !7913)
!8353 = !DILocation(line: 788, column: 504, scope: !7044, inlinedAt: !7913)
!8354 = !DILocation(line: 788, column: 501, scope: !7044, inlinedAt: !7913)
!8355 = !DILocation(line: 788, column: 645, scope: !7044, inlinedAt: !7913)
!8356 = !DILocation(line: 788, column: 649, scope: !7044, inlinedAt: !7913)
!8357 = !DILocation(line: 788, column: 659, scope: !7044, inlinedAt: !7913)
!8358 = !DILocation(line: 788, column: 668, scope: !7044, inlinedAt: !7913)
!8359 = !DILocation(line: 788, column: 656, scope: !7044, inlinedAt: !7913)
!8360 = !DILocation(line: 788, column: 677, scope: !7044, inlinedAt: !7913)
!8361 = !DILocation(line: 788, column: 601, scope: !7044, inlinedAt: !7913)
!8362 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7912)
!8363 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7912)
!8364 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7912)
!8365 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7912)
!8366 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7912)
!8367 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7912)
!8368 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7912)
!8369 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7912)
!8370 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7912)
!8371 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7912)
!8372 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7912)
!8373 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7912)
!8374 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7912)
!8375 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7912)
!8376 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7912)
!8377 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7912)
!8378 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7912)
!8379 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7912)
!8380 = !DILocation(line: 788, column: 685, scope: !7044, inlinedAt: !7913)
!8381 = !DILocation(line: 788, column: 694, scope: !7044, inlinedAt: !7913)
!8382 = !DILocation(line: 788, column: 681, scope: !7044, inlinedAt: !7913)
!8383 = !DILocation(line: 788, column: 599, scope: !7044, inlinedAt: !7913)
!8384 = !DILocation(line: 788, column: 711, scope: !7044, inlinedAt: !7913)
!8385 = !DILocation(line: 788, column: 710, scope: !7044, inlinedAt: !7913)
!8386 = !DILocation(line: 788, column: 708, scope: !7044, inlinedAt: !7913)
!8387 = !DILocation(line: 788, column: 732, scope: !7044, inlinedAt: !7913)
!8388 = !DILocation(line: 788, column: 742, scope: !7044, inlinedAt: !7913)
!8389 = !DILocation(line: 788, column: 722, scope: !7428, inlinedAt: !7913)
!8390 = !DILocation(line: 788, column: 753, scope: !7044, inlinedAt: !7913)
!8391 = !DILocation(line: 788, column: 751, scope: !7044, inlinedAt: !7913)
!8392 = !DILocation(line: 788, column: 720, scope: !7044, inlinedAt: !7913)
!8393 = !DILocation(line: 788, column: 772, scope: !7044, inlinedAt: !7913)
!8394 = !DILocation(line: 788, column: 766, scope: !7044, inlinedAt: !7913)
!8395 = !DILocation(line: 788, column: 764, scope: !7044, inlinedAt: !7913)
!8396 = !DILocation(line: 788, column: 793, scope: !7044, inlinedAt: !7913)
!8397 = !DILocation(line: 788, column: 787, scope: !7044, inlinedAt: !7913)
!8398 = !DILocation(line: 788, column: 785, scope: !7044, inlinedAt: !7913)
!8399 = !DILocation(line: 788, column: 804, scope: !7044, inlinedAt: !7913)
!8400 = !DILocation(line: 788, column: 806, scope: !7440, inlinedAt: !7913)
!8401 = !DILocation(line: 788, column: 827, scope: !7442, inlinedAt: !7913)
!8402 = !DILocation(line: 788, column: 822, scope: !7442, inlinedAt: !7913)
!8403 = !DILocation(line: 788, column: 844, scope: !7442, inlinedAt: !7913)
!8404 = !DILocation(line: 788, column: 862, scope: !7442, inlinedAt: !7913)
!8405 = !DILocation(line: 788, column: 874, scope: !7442, inlinedAt: !7913)
!8406 = !DILocation(line: 788, column: 871, scope: !7442, inlinedAt: !7913)
!8407 = !DILocation(line: 788, column: 859, scope: !7442, inlinedAt: !7913)
!8408 = !DILocation(line: 788, column: 843, scope: !7442, inlinedAt: !7913)
!8409 = !DILocation(line: 788, column: 881, scope: !7452, inlinedAt: !7913)
!8410 = !DILocation(line: 788, column: 893, scope: !7452, inlinedAt: !7913)
!8411 = !DILocation(line: 788, column: 890, scope: !7452, inlinedAt: !7913)
!8412 = !DILocation(line: 788, column: 843, scope: !7452, inlinedAt: !7913)
!8413 = !DILocation(line: 788, column: 900, scope: !7457, inlinedAt: !7913)
!8414 = !DILocation(line: 788, column: 843, scope: !7457, inlinedAt: !7913)
!8415 = !DILocation(line: 788, column: 843, scope: !7460, inlinedAt: !7913)
!8416 = !DILocation(line: 788, column: 840, scope: !7460, inlinedAt: !7913)
!8417 = !DILocation(line: 790, column: 18, scope: !7050, inlinedAt: !7913)
!8418 = !DILocation(line: 790, column: 6, scope: !7050, inlinedAt: !7913)
!8419 = !DILocation(line: 790, column: 10, scope: !7050, inlinedAt: !7913)
!8420 = !DILocation(line: 790, column: 16, scope: !7050, inlinedAt: !7913)
!8421 = !DILocation(line: 792, column: 12, scope: !7050, inlinedAt: !7913)
!8422 = !DILocation(line: 945, column: 21, scope: !7860)
!8423 = !DILocation(line: 946, column: 21, scope: !7859)
!8424 = !DILocation(line: 946, column: 25, scope: !7859)
!8425 = !DILocation(line: 946, column: 21, scope: !7860)
!8426 = !DILocalVariable(name: "v0", scope: !7858, file: !936, line: 947, type: !912)
!8427 = !DILocation(line: 947, column: 30, scope: !7858)
!8428 = !DILocalVariable(name: "v1", scope: !7858, file: !936, line: 947, type: !912)
!8429 = !DILocation(line: 947, column: 34, scope: !7858)
!8430 = !DILocation(line: 948, column: 36, scope: !7858)
!8431 = !DILocation(line: 948, column: 39, scope: !7858)
!8432 = !DILocation(line: 948, column: 52, scope: !7858)
!8433 = !DILocation(line: 948, column: 26, scope: !7858)
!8434 = !DILocation(line: 785, column: 30, scope: !7050, inlinedAt: !7895)
!8435 = !DILocation(line: 785, column: 34, scope: !7050, inlinedAt: !7895)
!8436 = !DILocation(line: 785, column: 118, scope: !7050, inlinedAt: !7895)
!8437 = !DILocation(line: 785, column: 122, scope: !7050, inlinedAt: !7895)
!8438 = !DILocation(line: 786, column: 60, scope: !7050, inlinedAt: !7895)
!8439 = !DILocation(line: 786, column: 64, scope: !7050, inlinedAt: !7895)
!8440 = !DILocation(line: 786, column: 74, scope: !7050, inlinedAt: !7895)
!8441 = !DILocation(line: 786, column: 83, scope: !7050, inlinedAt: !7895)
!8442 = !DILocation(line: 786, column: 71, scope: !7050, inlinedAt: !7895)
!8443 = !DILocation(line: 786, column: 92, scope: !7050, inlinedAt: !7895)
!8444 = !DILocation(line: 786, column: 16, scope: !7050, inlinedAt: !7895)
!8445 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7899)
!8446 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7899)
!8447 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7899)
!8448 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7899)
!8449 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7899)
!8450 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7899)
!8451 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7899)
!8452 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7899)
!8453 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7899)
!8454 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7899)
!8455 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7899)
!8456 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7899)
!8457 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7899)
!8458 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7899)
!8459 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7899)
!8460 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7899)
!8461 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7899)
!8462 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7899)
!8463 = !DILocation(line: 786, column: 100, scope: !7050, inlinedAt: !7895)
!8464 = !DILocation(line: 786, column: 109, scope: !7050, inlinedAt: !7895)
!8465 = !DILocation(line: 786, column: 96, scope: !7050, inlinedAt: !7895)
!8466 = !DILocation(line: 786, column: 14, scope: !7050, inlinedAt: !7895)
!8467 = !DILocation(line: 788, column: 64, scope: !7290, inlinedAt: !7895)
!8468 = !DILocation(line: 788, column: 74, scope: !7290, inlinedAt: !7895)
!8469 = !DILocation(line: 788, column: 54, scope: !7290, inlinedAt: !7895)
!8470 = !DILocation(line: 788, column: 52, scope: !7290, inlinedAt: !7895)
!8471 = !DILocation(line: 788, column: 94, scope: !7290, inlinedAt: !7895)
!8472 = !DILocation(line: 788, column: 88, scope: !7290, inlinedAt: !7895)
!8473 = !DILocation(line: 788, column: 86, scope: !7290, inlinedAt: !7895)
!8474 = !DILocation(line: 788, column: 115, scope: !7290, inlinedAt: !7895)
!8475 = !DILocation(line: 788, column: 109, scope: !7290, inlinedAt: !7895)
!8476 = !DILocation(line: 788, column: 107, scope: !7290, inlinedAt: !7895)
!8477 = !DILocation(line: 788, column: 130, scope: !7290, inlinedAt: !7895)
!8478 = !DILocation(line: 788, column: 140, scope: !7290, inlinedAt: !7895)
!8479 = !DILocation(line: 788, column: 144, scope: !7290, inlinedAt: !7895)
!8480 = !DILocation(line: 788, column: 147, scope: !7304, inlinedAt: !7895)
!8481 = !DILocation(line: 788, column: 149, scope: !7304, inlinedAt: !7895)
!8482 = !DILocation(line: 788, column: 130, scope: !7304, inlinedAt: !7895)
!8483 = !DILocation(line: 788, column: 169, scope: !7308, inlinedAt: !7895)
!8484 = !DILocation(line: 788, column: 187, scope: !7308, inlinedAt: !7895)
!8485 = !DILocation(line: 788, column: 199, scope: !7308, inlinedAt: !7895)
!8486 = !DILocation(line: 788, column: 196, scope: !7308, inlinedAt: !7895)
!8487 = !DILocation(line: 788, column: 184, scope: !7308, inlinedAt: !7895)
!8488 = !DILocation(line: 788, column: 168, scope: !7308, inlinedAt: !7895)
!8489 = !DILocation(line: 788, column: 209, scope: !7315, inlinedAt: !7895)
!8490 = !DILocation(line: 788, column: 221, scope: !7315, inlinedAt: !7895)
!8491 = !DILocation(line: 788, column: 218, scope: !7315, inlinedAt: !7895)
!8492 = !DILocation(line: 788, column: 168, scope: !7315, inlinedAt: !7895)
!8493 = !DILocation(line: 788, column: 231, scope: !7320, inlinedAt: !7895)
!8494 = !DILocation(line: 788, column: 168, scope: !7320, inlinedAt: !7895)
!8495 = !DILocation(line: 788, column: 168, scope: !7066, inlinedAt: !7895)
!8496 = !DILocation(line: 788, column: 165, scope: !7066, inlinedAt: !7895)
!8497 = !DILocation(line: 788, column: 303, scope: !7066, inlinedAt: !7895)
!8498 = !DILocation(line: 788, column: 307, scope: !7066, inlinedAt: !7895)
!8499 = !DILocation(line: 788, column: 317, scope: !7066, inlinedAt: !7895)
!8500 = !DILocation(line: 788, column: 326, scope: !7066, inlinedAt: !7895)
!8501 = !DILocation(line: 788, column: 314, scope: !7066, inlinedAt: !7895)
!8502 = !DILocation(line: 788, column: 335, scope: !7066, inlinedAt: !7895)
!8503 = !DILocation(line: 788, column: 259, scope: !7066, inlinedAt: !7895)
!8504 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7897)
!8505 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7897)
!8506 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7897)
!8507 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7897)
!8508 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7897)
!8509 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7897)
!8510 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7897)
!8511 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7897)
!8512 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7897)
!8513 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7897)
!8514 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7897)
!8515 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7897)
!8516 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7897)
!8517 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7897)
!8518 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7897)
!8519 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7897)
!8520 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7897)
!8521 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7897)
!8522 = !DILocation(line: 788, column: 343, scope: !7066, inlinedAt: !7895)
!8523 = !DILocation(line: 788, column: 352, scope: !7066, inlinedAt: !7895)
!8524 = !DILocation(line: 788, column: 339, scope: !7066, inlinedAt: !7895)
!8525 = !DILocation(line: 788, column: 257, scope: !7066, inlinedAt: !7895)
!8526 = !DILocation(line: 788, column: 369, scope: !7066, inlinedAt: !7895)
!8527 = !DILocation(line: 788, column: 368, scope: !7066, inlinedAt: !7895)
!8528 = !DILocation(line: 788, column: 366, scope: !7066, inlinedAt: !7895)
!8529 = !DILocation(line: 788, column: 390, scope: !7066, inlinedAt: !7895)
!8530 = !DILocation(line: 788, column: 400, scope: !7066, inlinedAt: !7895)
!8531 = !DILocation(line: 788, column: 380, scope: !7359, inlinedAt: !7895)
!8532 = !DILocation(line: 788, column: 411, scope: !7066, inlinedAt: !7895)
!8533 = !DILocation(line: 788, column: 409, scope: !7066, inlinedAt: !7895)
!8534 = !DILocation(line: 788, column: 378, scope: !7066, inlinedAt: !7895)
!8535 = !DILocation(line: 788, column: 430, scope: !7066, inlinedAt: !7895)
!8536 = !DILocation(line: 788, column: 424, scope: !7066, inlinedAt: !7895)
!8537 = !DILocation(line: 788, column: 422, scope: !7066, inlinedAt: !7895)
!8538 = !DILocation(line: 788, column: 451, scope: !7066, inlinedAt: !7895)
!8539 = !DILocation(line: 788, column: 445, scope: !7066, inlinedAt: !7895)
!8540 = !DILocation(line: 788, column: 443, scope: !7066, inlinedAt: !7895)
!8541 = !DILocation(line: 788, column: 466, scope: !7066, inlinedAt: !7895)
!8542 = !DILocation(line: 788, column: 476, scope: !7066, inlinedAt: !7895)
!8543 = !DILocation(line: 788, column: 480, scope: !7066, inlinedAt: !7895)
!8544 = !DILocation(line: 788, column: 483, scope: !7373, inlinedAt: !7895)
!8545 = !DILocation(line: 788, column: 485, scope: !7373, inlinedAt: !7895)
!8546 = !DILocation(line: 788, column: 466, scope: !7373, inlinedAt: !7895)
!8547 = !DILocation(line: 788, column: 505, scope: !7377, inlinedAt: !7895)
!8548 = !DILocation(line: 788, column: 523, scope: !7377, inlinedAt: !7895)
!8549 = !DILocation(line: 788, column: 535, scope: !7377, inlinedAt: !7895)
!8550 = !DILocation(line: 788, column: 532, scope: !7377, inlinedAt: !7895)
!8551 = !DILocation(line: 788, column: 520, scope: !7377, inlinedAt: !7895)
!8552 = !DILocation(line: 788, column: 504, scope: !7377, inlinedAt: !7895)
!8553 = !DILocation(line: 788, column: 548, scope: !7384, inlinedAt: !7895)
!8554 = !DILocation(line: 788, column: 560, scope: !7384, inlinedAt: !7895)
!8555 = !DILocation(line: 788, column: 557, scope: !7384, inlinedAt: !7895)
!8556 = !DILocation(line: 788, column: 504, scope: !7384, inlinedAt: !7895)
!8557 = !DILocation(line: 788, column: 573, scope: !7389, inlinedAt: !7895)
!8558 = !DILocation(line: 788, column: 504, scope: !7389, inlinedAt: !7895)
!8559 = !DILocation(line: 788, column: 504, scope: !7044, inlinedAt: !7895)
!8560 = !DILocation(line: 788, column: 501, scope: !7044, inlinedAt: !7895)
!8561 = !DILocation(line: 788, column: 645, scope: !7044, inlinedAt: !7895)
!8562 = !DILocation(line: 788, column: 649, scope: !7044, inlinedAt: !7895)
!8563 = !DILocation(line: 788, column: 659, scope: !7044, inlinedAt: !7895)
!8564 = !DILocation(line: 788, column: 668, scope: !7044, inlinedAt: !7895)
!8565 = !DILocation(line: 788, column: 656, scope: !7044, inlinedAt: !7895)
!8566 = !DILocation(line: 788, column: 677, scope: !7044, inlinedAt: !7895)
!8567 = !DILocation(line: 788, column: 601, scope: !7044, inlinedAt: !7895)
!8568 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7894)
!8569 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7894)
!8570 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7894)
!8571 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7894)
!8572 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7894)
!8573 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7894)
!8574 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7894)
!8575 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7894)
!8576 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7894)
!8577 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7894)
!8578 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7894)
!8579 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7894)
!8580 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7894)
!8581 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7894)
!8582 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7894)
!8583 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7894)
!8584 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7894)
!8585 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7894)
!8586 = !DILocation(line: 788, column: 685, scope: !7044, inlinedAt: !7895)
!8587 = !DILocation(line: 788, column: 694, scope: !7044, inlinedAt: !7895)
!8588 = !DILocation(line: 788, column: 681, scope: !7044, inlinedAt: !7895)
!8589 = !DILocation(line: 788, column: 599, scope: !7044, inlinedAt: !7895)
!8590 = !DILocation(line: 788, column: 711, scope: !7044, inlinedAt: !7895)
!8591 = !DILocation(line: 788, column: 710, scope: !7044, inlinedAt: !7895)
!8592 = !DILocation(line: 788, column: 708, scope: !7044, inlinedAt: !7895)
!8593 = !DILocation(line: 788, column: 732, scope: !7044, inlinedAt: !7895)
!8594 = !DILocation(line: 788, column: 742, scope: !7044, inlinedAt: !7895)
!8595 = !DILocation(line: 788, column: 722, scope: !7428, inlinedAt: !7895)
!8596 = !DILocation(line: 788, column: 753, scope: !7044, inlinedAt: !7895)
!8597 = !DILocation(line: 788, column: 751, scope: !7044, inlinedAt: !7895)
!8598 = !DILocation(line: 788, column: 720, scope: !7044, inlinedAt: !7895)
!8599 = !DILocation(line: 788, column: 772, scope: !7044, inlinedAt: !7895)
!8600 = !DILocation(line: 788, column: 766, scope: !7044, inlinedAt: !7895)
!8601 = !DILocation(line: 788, column: 764, scope: !7044, inlinedAt: !7895)
!8602 = !DILocation(line: 788, column: 793, scope: !7044, inlinedAt: !7895)
!8603 = !DILocation(line: 788, column: 787, scope: !7044, inlinedAt: !7895)
!8604 = !DILocation(line: 788, column: 785, scope: !7044, inlinedAt: !7895)
!8605 = !DILocation(line: 788, column: 804, scope: !7044, inlinedAt: !7895)
!8606 = !DILocation(line: 788, column: 806, scope: !7440, inlinedAt: !7895)
!8607 = !DILocation(line: 788, column: 827, scope: !7442, inlinedAt: !7895)
!8608 = !DILocation(line: 788, column: 822, scope: !7442, inlinedAt: !7895)
!8609 = !DILocation(line: 788, column: 844, scope: !7442, inlinedAt: !7895)
!8610 = !DILocation(line: 788, column: 862, scope: !7442, inlinedAt: !7895)
!8611 = !DILocation(line: 788, column: 874, scope: !7442, inlinedAt: !7895)
!8612 = !DILocation(line: 788, column: 871, scope: !7442, inlinedAt: !7895)
!8613 = !DILocation(line: 788, column: 859, scope: !7442, inlinedAt: !7895)
!8614 = !DILocation(line: 788, column: 843, scope: !7442, inlinedAt: !7895)
!8615 = !DILocation(line: 788, column: 881, scope: !7452, inlinedAt: !7895)
!8616 = !DILocation(line: 788, column: 893, scope: !7452, inlinedAt: !7895)
!8617 = !DILocation(line: 788, column: 890, scope: !7452, inlinedAt: !7895)
!8618 = !DILocation(line: 788, column: 843, scope: !7452, inlinedAt: !7895)
!8619 = !DILocation(line: 788, column: 900, scope: !7457, inlinedAt: !7895)
!8620 = !DILocation(line: 788, column: 843, scope: !7457, inlinedAt: !7895)
!8621 = !DILocation(line: 788, column: 843, scope: !7460, inlinedAt: !7895)
!8622 = !DILocation(line: 788, column: 840, scope: !7460, inlinedAt: !7895)
!8623 = !DILocation(line: 790, column: 18, scope: !7050, inlinedAt: !7895)
!8624 = !DILocation(line: 790, column: 6, scope: !7050, inlinedAt: !7895)
!8625 = !DILocation(line: 790, column: 10, scope: !7050, inlinedAt: !7895)
!8626 = !DILocation(line: 790, column: 16, scope: !7050, inlinedAt: !7895)
!8627 = !DILocation(line: 792, column: 12, scope: !7050, inlinedAt: !7895)
!8628 = !DILocation(line: 948, column: 24, scope: !7858)
!8629 = !DILocation(line: 949, column: 25, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !7858, file: !936, line: 949, column: 25)
!8631 = !DILocation(line: 949, column: 28, scope: !8630)
!8632 = !DILocation(line: 949, column: 25, scope: !7858)
!8633 = !DILocation(line: 950, column: 53, scope: !8630)
!8634 = !DILocation(line: 950, column: 56, scope: !8630)
!8635 = !DILocation(line: 950, column: 31, scope: !8630)
!8636 = !DILocation(line: 950, column: 28, scope: !8630)
!8637 = !DILocation(line: 950, column: 25, scope: !8630)
!8638 = !DILocation(line: 951, column: 36, scope: !7858)
!8639 = !DILocation(line: 951, column: 39, scope: !7858)
!8640 = !DILocation(line: 951, column: 52, scope: !7858)
!8641 = !DILocation(line: 951, column: 26, scope: !7858)
!8642 = !DILocation(line: 785, column: 30, scope: !7050, inlinedAt: !7877)
!8643 = !DILocation(line: 785, column: 34, scope: !7050, inlinedAt: !7877)
!8644 = !DILocation(line: 785, column: 118, scope: !7050, inlinedAt: !7877)
!8645 = !DILocation(line: 785, column: 122, scope: !7050, inlinedAt: !7877)
!8646 = !DILocation(line: 786, column: 60, scope: !7050, inlinedAt: !7877)
!8647 = !DILocation(line: 786, column: 64, scope: !7050, inlinedAt: !7877)
!8648 = !DILocation(line: 786, column: 74, scope: !7050, inlinedAt: !7877)
!8649 = !DILocation(line: 786, column: 83, scope: !7050, inlinedAt: !7877)
!8650 = !DILocation(line: 786, column: 71, scope: !7050, inlinedAt: !7877)
!8651 = !DILocation(line: 786, column: 92, scope: !7050, inlinedAt: !7877)
!8652 = !DILocation(line: 786, column: 16, scope: !7050, inlinedAt: !7877)
!8653 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7881)
!8654 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7881)
!8655 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7881)
!8656 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7881)
!8657 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7881)
!8658 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7881)
!8659 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7881)
!8660 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7881)
!8661 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7881)
!8662 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7881)
!8663 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7881)
!8664 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7881)
!8665 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7881)
!8666 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7881)
!8667 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7881)
!8668 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7881)
!8669 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7881)
!8670 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7881)
!8671 = !DILocation(line: 786, column: 100, scope: !7050, inlinedAt: !7877)
!8672 = !DILocation(line: 786, column: 109, scope: !7050, inlinedAt: !7877)
!8673 = !DILocation(line: 786, column: 96, scope: !7050, inlinedAt: !7877)
!8674 = !DILocation(line: 786, column: 14, scope: !7050, inlinedAt: !7877)
!8675 = !DILocation(line: 788, column: 64, scope: !7290, inlinedAt: !7877)
!8676 = !DILocation(line: 788, column: 74, scope: !7290, inlinedAt: !7877)
!8677 = !DILocation(line: 788, column: 54, scope: !7290, inlinedAt: !7877)
!8678 = !DILocation(line: 788, column: 52, scope: !7290, inlinedAt: !7877)
!8679 = !DILocation(line: 788, column: 94, scope: !7290, inlinedAt: !7877)
!8680 = !DILocation(line: 788, column: 88, scope: !7290, inlinedAt: !7877)
!8681 = !DILocation(line: 788, column: 86, scope: !7290, inlinedAt: !7877)
!8682 = !DILocation(line: 788, column: 115, scope: !7290, inlinedAt: !7877)
!8683 = !DILocation(line: 788, column: 109, scope: !7290, inlinedAt: !7877)
!8684 = !DILocation(line: 788, column: 107, scope: !7290, inlinedAt: !7877)
!8685 = !DILocation(line: 788, column: 130, scope: !7290, inlinedAt: !7877)
!8686 = !DILocation(line: 788, column: 140, scope: !7290, inlinedAt: !7877)
!8687 = !DILocation(line: 788, column: 144, scope: !7290, inlinedAt: !7877)
!8688 = !DILocation(line: 788, column: 147, scope: !7304, inlinedAt: !7877)
!8689 = !DILocation(line: 788, column: 149, scope: !7304, inlinedAt: !7877)
!8690 = !DILocation(line: 788, column: 130, scope: !7304, inlinedAt: !7877)
!8691 = !DILocation(line: 788, column: 169, scope: !7308, inlinedAt: !7877)
!8692 = !DILocation(line: 788, column: 187, scope: !7308, inlinedAt: !7877)
!8693 = !DILocation(line: 788, column: 199, scope: !7308, inlinedAt: !7877)
!8694 = !DILocation(line: 788, column: 196, scope: !7308, inlinedAt: !7877)
!8695 = !DILocation(line: 788, column: 184, scope: !7308, inlinedAt: !7877)
!8696 = !DILocation(line: 788, column: 168, scope: !7308, inlinedAt: !7877)
!8697 = !DILocation(line: 788, column: 209, scope: !7315, inlinedAt: !7877)
!8698 = !DILocation(line: 788, column: 221, scope: !7315, inlinedAt: !7877)
!8699 = !DILocation(line: 788, column: 218, scope: !7315, inlinedAt: !7877)
!8700 = !DILocation(line: 788, column: 168, scope: !7315, inlinedAt: !7877)
!8701 = !DILocation(line: 788, column: 231, scope: !7320, inlinedAt: !7877)
!8702 = !DILocation(line: 788, column: 168, scope: !7320, inlinedAt: !7877)
!8703 = !DILocation(line: 788, column: 168, scope: !7066, inlinedAt: !7877)
!8704 = !DILocation(line: 788, column: 165, scope: !7066, inlinedAt: !7877)
!8705 = !DILocation(line: 788, column: 303, scope: !7066, inlinedAt: !7877)
!8706 = !DILocation(line: 788, column: 307, scope: !7066, inlinedAt: !7877)
!8707 = !DILocation(line: 788, column: 317, scope: !7066, inlinedAt: !7877)
!8708 = !DILocation(line: 788, column: 326, scope: !7066, inlinedAt: !7877)
!8709 = !DILocation(line: 788, column: 314, scope: !7066, inlinedAt: !7877)
!8710 = !DILocation(line: 788, column: 335, scope: !7066, inlinedAt: !7877)
!8711 = !DILocation(line: 788, column: 259, scope: !7066, inlinedAt: !7877)
!8712 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7879)
!8713 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7879)
!8714 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7879)
!8715 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7879)
!8716 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7879)
!8717 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7879)
!8718 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7879)
!8719 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7879)
!8720 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7879)
!8721 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7879)
!8722 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7879)
!8723 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7879)
!8724 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7879)
!8725 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7879)
!8726 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7879)
!8727 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7879)
!8728 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7879)
!8729 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7879)
!8730 = !DILocation(line: 788, column: 343, scope: !7066, inlinedAt: !7877)
!8731 = !DILocation(line: 788, column: 352, scope: !7066, inlinedAt: !7877)
!8732 = !DILocation(line: 788, column: 339, scope: !7066, inlinedAt: !7877)
!8733 = !DILocation(line: 788, column: 257, scope: !7066, inlinedAt: !7877)
!8734 = !DILocation(line: 788, column: 369, scope: !7066, inlinedAt: !7877)
!8735 = !DILocation(line: 788, column: 368, scope: !7066, inlinedAt: !7877)
!8736 = !DILocation(line: 788, column: 366, scope: !7066, inlinedAt: !7877)
!8737 = !DILocation(line: 788, column: 390, scope: !7066, inlinedAt: !7877)
!8738 = !DILocation(line: 788, column: 400, scope: !7066, inlinedAt: !7877)
!8739 = !DILocation(line: 788, column: 380, scope: !7359, inlinedAt: !7877)
!8740 = !DILocation(line: 788, column: 411, scope: !7066, inlinedAt: !7877)
!8741 = !DILocation(line: 788, column: 409, scope: !7066, inlinedAt: !7877)
!8742 = !DILocation(line: 788, column: 378, scope: !7066, inlinedAt: !7877)
!8743 = !DILocation(line: 788, column: 430, scope: !7066, inlinedAt: !7877)
!8744 = !DILocation(line: 788, column: 424, scope: !7066, inlinedAt: !7877)
!8745 = !DILocation(line: 788, column: 422, scope: !7066, inlinedAt: !7877)
!8746 = !DILocation(line: 788, column: 451, scope: !7066, inlinedAt: !7877)
!8747 = !DILocation(line: 788, column: 445, scope: !7066, inlinedAt: !7877)
!8748 = !DILocation(line: 788, column: 443, scope: !7066, inlinedAt: !7877)
!8749 = !DILocation(line: 788, column: 466, scope: !7066, inlinedAt: !7877)
!8750 = !DILocation(line: 788, column: 476, scope: !7066, inlinedAt: !7877)
!8751 = !DILocation(line: 788, column: 480, scope: !7066, inlinedAt: !7877)
!8752 = !DILocation(line: 788, column: 483, scope: !7373, inlinedAt: !7877)
!8753 = !DILocation(line: 788, column: 485, scope: !7373, inlinedAt: !7877)
!8754 = !DILocation(line: 788, column: 466, scope: !7373, inlinedAt: !7877)
!8755 = !DILocation(line: 788, column: 505, scope: !7377, inlinedAt: !7877)
!8756 = !DILocation(line: 788, column: 523, scope: !7377, inlinedAt: !7877)
!8757 = !DILocation(line: 788, column: 535, scope: !7377, inlinedAt: !7877)
!8758 = !DILocation(line: 788, column: 532, scope: !7377, inlinedAt: !7877)
!8759 = !DILocation(line: 788, column: 520, scope: !7377, inlinedAt: !7877)
!8760 = !DILocation(line: 788, column: 504, scope: !7377, inlinedAt: !7877)
!8761 = !DILocation(line: 788, column: 548, scope: !7384, inlinedAt: !7877)
!8762 = !DILocation(line: 788, column: 560, scope: !7384, inlinedAt: !7877)
!8763 = !DILocation(line: 788, column: 557, scope: !7384, inlinedAt: !7877)
!8764 = !DILocation(line: 788, column: 504, scope: !7384, inlinedAt: !7877)
!8765 = !DILocation(line: 788, column: 573, scope: !7389, inlinedAt: !7877)
!8766 = !DILocation(line: 788, column: 504, scope: !7389, inlinedAt: !7877)
!8767 = !DILocation(line: 788, column: 504, scope: !7044, inlinedAt: !7877)
!8768 = !DILocation(line: 788, column: 501, scope: !7044, inlinedAt: !7877)
!8769 = !DILocation(line: 788, column: 645, scope: !7044, inlinedAt: !7877)
!8770 = !DILocation(line: 788, column: 649, scope: !7044, inlinedAt: !7877)
!8771 = !DILocation(line: 788, column: 659, scope: !7044, inlinedAt: !7877)
!8772 = !DILocation(line: 788, column: 668, scope: !7044, inlinedAt: !7877)
!8773 = !DILocation(line: 788, column: 656, scope: !7044, inlinedAt: !7877)
!8774 = !DILocation(line: 788, column: 677, scope: !7044, inlinedAt: !7877)
!8775 = !DILocation(line: 788, column: 601, scope: !7044, inlinedAt: !7877)
!8776 = !DILocation(line: 68, column: 16, scope: !4353, inlinedAt: !7876)
!8777 = !DILocation(line: 68, column: 19, scope: !4353, inlinedAt: !7876)
!8778 = !DILocation(line: 68, column: 24, scope: !4353, inlinedAt: !7876)
!8779 = !DILocation(line: 68, column: 38, scope: !4353, inlinedAt: !7876)
!8780 = !DILocation(line: 68, column: 41, scope: !4353, inlinedAt: !7876)
!8781 = !DILocation(line: 68, column: 46, scope: !4353, inlinedAt: !7876)
!8782 = !DILocation(line: 68, column: 34, scope: !4353, inlinedAt: !7876)
!8783 = !DILocation(line: 68, column: 57, scope: !4353, inlinedAt: !7876)
!8784 = !DILocation(line: 68, column: 69, scope: !4353, inlinedAt: !7876)
!8785 = !DILocation(line: 68, column: 72, scope: !4353, inlinedAt: !7876)
!8786 = !DILocation(line: 68, column: 79, scope: !4353, inlinedAt: !7876)
!8787 = !DILocation(line: 68, column: 84, scope: !4353, inlinedAt: !7876)
!8788 = !DILocation(line: 68, column: 99, scope: !4353, inlinedAt: !7876)
!8789 = !DILocation(line: 68, column: 102, scope: !4353, inlinedAt: !7876)
!8790 = !DILocation(line: 68, column: 109, scope: !4353, inlinedAt: !7876)
!8791 = !DILocation(line: 68, column: 114, scope: !4353, inlinedAt: !7876)
!8792 = !DILocation(line: 68, column: 94, scope: !4353, inlinedAt: !7876)
!8793 = !DILocation(line: 68, column: 63, scope: !4353, inlinedAt: !7876)
!8794 = !DILocation(line: 788, column: 685, scope: !7044, inlinedAt: !7877)
!8795 = !DILocation(line: 788, column: 694, scope: !7044, inlinedAt: !7877)
!8796 = !DILocation(line: 788, column: 681, scope: !7044, inlinedAt: !7877)
!8797 = !DILocation(line: 788, column: 599, scope: !7044, inlinedAt: !7877)
!8798 = !DILocation(line: 788, column: 711, scope: !7044, inlinedAt: !7877)
!8799 = !DILocation(line: 788, column: 710, scope: !7044, inlinedAt: !7877)
!8800 = !DILocation(line: 788, column: 708, scope: !7044, inlinedAt: !7877)
!8801 = !DILocation(line: 788, column: 732, scope: !7044, inlinedAt: !7877)
!8802 = !DILocation(line: 788, column: 742, scope: !7044, inlinedAt: !7877)
!8803 = !DILocation(line: 788, column: 722, scope: !7428, inlinedAt: !7877)
!8804 = !DILocation(line: 788, column: 753, scope: !7044, inlinedAt: !7877)
!8805 = !DILocation(line: 788, column: 751, scope: !7044, inlinedAt: !7877)
!8806 = !DILocation(line: 788, column: 720, scope: !7044, inlinedAt: !7877)
!8807 = !DILocation(line: 788, column: 772, scope: !7044, inlinedAt: !7877)
!8808 = !DILocation(line: 788, column: 766, scope: !7044, inlinedAt: !7877)
!8809 = !DILocation(line: 788, column: 764, scope: !7044, inlinedAt: !7877)
!8810 = !DILocation(line: 788, column: 793, scope: !7044, inlinedAt: !7877)
!8811 = !DILocation(line: 788, column: 787, scope: !7044, inlinedAt: !7877)
!8812 = !DILocation(line: 788, column: 785, scope: !7044, inlinedAt: !7877)
!8813 = !DILocation(line: 788, column: 804, scope: !7044, inlinedAt: !7877)
!8814 = !DILocation(line: 788, column: 806, scope: !7440, inlinedAt: !7877)
!8815 = !DILocation(line: 788, column: 827, scope: !7442, inlinedAt: !7877)
!8816 = !DILocation(line: 788, column: 822, scope: !7442, inlinedAt: !7877)
!8817 = !DILocation(line: 788, column: 844, scope: !7442, inlinedAt: !7877)
!8818 = !DILocation(line: 788, column: 862, scope: !7442, inlinedAt: !7877)
!8819 = !DILocation(line: 788, column: 874, scope: !7442, inlinedAt: !7877)
!8820 = !DILocation(line: 788, column: 871, scope: !7442, inlinedAt: !7877)
!8821 = !DILocation(line: 788, column: 859, scope: !7442, inlinedAt: !7877)
!8822 = !DILocation(line: 788, column: 843, scope: !7442, inlinedAt: !7877)
!8823 = !DILocation(line: 788, column: 881, scope: !7452, inlinedAt: !7877)
!8824 = !DILocation(line: 788, column: 893, scope: !7452, inlinedAt: !7877)
!8825 = !DILocation(line: 788, column: 890, scope: !7452, inlinedAt: !7877)
!8826 = !DILocation(line: 788, column: 843, scope: !7452, inlinedAt: !7877)
!8827 = !DILocation(line: 788, column: 900, scope: !7457, inlinedAt: !7877)
!8828 = !DILocation(line: 788, column: 843, scope: !7457, inlinedAt: !7877)
!8829 = !DILocation(line: 788, column: 843, scope: !7460, inlinedAt: !7877)
!8830 = !DILocation(line: 788, column: 840, scope: !7460, inlinedAt: !7877)
!8831 = !DILocation(line: 790, column: 18, scope: !7050, inlinedAt: !7877)
!8832 = !DILocation(line: 790, column: 6, scope: !7050, inlinedAt: !7877)
!8833 = !DILocation(line: 790, column: 10, scope: !7050, inlinedAt: !7877)
!8834 = !DILocation(line: 790, column: 16, scope: !7050, inlinedAt: !7877)
!8835 = !DILocation(line: 792, column: 12, scope: !7050, inlinedAt: !7877)
!8836 = !DILocation(line: 951, column: 24, scope: !7858)
!8837 = !DILocation(line: 952, column: 25, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !7858, file: !936, line: 952, column: 25)
!8839 = !DILocation(line: 952, column: 28, scope: !8838)
!8840 = !DILocation(line: 952, column: 25, scope: !7858)
!8841 = !DILocation(line: 953, column: 53, scope: !8838)
!8842 = !DILocation(line: 953, column: 56, scope: !8838)
!8843 = !DILocation(line: 953, column: 31, scope: !8838)
!8844 = !DILocation(line: 953, column: 28, scope: !8838)
!8845 = !DILocation(line: 953, column: 25, scope: !8838)
!8846 = !DILocation(line: 954, column: 45, scope: !7858)
!8847 = !DILocation(line: 954, column: 32, scope: !7858)
!8848 = !DILocation(line: 53, column: 11, scope: !7852, inlinedAt: !7873)
!8849 = !DILocation(line: 53, column: 7, scope: !7852, inlinedAt: !7873)
!8850 = !DILocation(line: 53, column: 9, scope: !7852, inlinedAt: !7873)
!8851 = !DILocation(line: 54, column: 14, scope: !7852, inlinedAt: !7873)
!8852 = !DILocation(line: 954, column: 26, scope: !7858)
!8853 = !DILocation(line: 954, column: 21, scope: !7858)
!8854 = !DILocation(line: 954, column: 30, scope: !7858)
!8855 = !DILocation(line: 955, column: 46, scope: !7858)
!8856 = !DILocation(line: 955, column: 33, scope: !7858)
!8857 = !DILocation(line: 53, column: 11, scope: !7852, inlinedAt: !7857)
!8858 = !DILocation(line: 53, column: 7, scope: !7852, inlinedAt: !7857)
!8859 = !DILocation(line: 53, column: 9, scope: !7852, inlinedAt: !7857)
!8860 = !DILocation(line: 54, column: 14, scope: !7852, inlinedAt: !7857)
!8861 = !DILocation(line: 955, column: 26, scope: !7858)
!8862 = !DILocation(line: 955, column: 27, scope: !7858)
!8863 = !DILocation(line: 955, column: 21, scope: !7858)
!8864 = !DILocation(line: 955, column: 31, scope: !7858)
!8865 = !DILocation(line: 956, column: 17, scope: !7858)
!8866 = !DILocation(line: 957, column: 55, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !7859, file: !936, line: 956, column: 24)
!8868 = !DILocation(line: 957, column: 40, scope: !8867)
!8869 = !DILocation(line: 957, column: 60, scope: !8867)
!8870 = !DILocation(line: 957, column: 31, scope: !8867)
!8871 = !DILocation(line: 957, column: 26, scope: !8867)
!8872 = !DILocation(line: 957, column: 21, scope: !8867)
!8873 = !DILocation(line: 957, column: 29, scope: !8867)
!8874 = !DILocation(line: 958, column: 57, scope: !8867)
!8875 = !DILocation(line: 958, column: 42, scope: !8867)
!8876 = !DILocation(line: 958, column: 62, scope: !8867)
!8877 = !DILocation(line: 958, column: 33, scope: !8867)
!8878 = !DILocation(line: 958, column: 26, scope: !8867)
!8879 = !DILocation(line: 958, column: 27, scope: !8867)
!8880 = !DILocation(line: 958, column: 21, scope: !8867)
!8881 = !DILocation(line: 958, column: 31, scope: !8867)
!8882 = !DILocation(line: 960, column: 13, scope: !7860)
!8883 = !DILocation(line: 944, column: 34, scope: !8884)
!8884 = !DILexicalBlockFile(scope: !7861, file: !936, discriminator: 2)
!8885 = !DILocation(line: 944, column: 13, scope: !8884)
!8886 = distinct !{!8886, !8887}
!8887 = !DILocation(line: 944, column: 13, scope: !7863)
!8888 = !DILocation(line: 961, column: 9, scope: !7863)
!8889 = !DILocation(line: 962, column: 48, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !7864, file: !936, line: 961, column: 16)
!8891 = !DILocation(line: 962, column: 33, scope: !8890)
!8892 = !DILocation(line: 962, column: 53, scope: !8890)
!8893 = !DILocation(line: 962, column: 23, scope: !8890)
!8894 = !DILocation(line: 962, column: 13, scope: !8890)
!8895 = !DILocation(line: 962, column: 21, scope: !8890)
!8896 = !DILocation(line: 963, column: 48, scope: !8890)
!8897 = !DILocation(line: 963, column: 33, scope: !8890)
!8898 = !DILocation(line: 963, column: 53, scope: !8890)
!8899 = !DILocation(line: 963, column: 59, scope: !8890)
!8900 = !DILocation(line: 963, column: 23, scope: !8890)
!8901 = !DILocation(line: 963, column: 13, scope: !8890)
!8902 = !DILocation(line: 963, column: 21, scope: !8890)
!8903 = !DILocation(line: 964, column: 48, scope: !8890)
!8904 = !DILocation(line: 964, column: 33, scope: !8890)
!8905 = !DILocation(line: 964, column: 53, scope: !8890)
!8906 = !DILocation(line: 964, column: 59, scope: !8890)
!8907 = !DILocation(line: 964, column: 23, scope: !8890)
!8908 = !DILocation(line: 964, column: 13, scope: !8890)
!8909 = !DILocation(line: 964, column: 21, scope: !8890)
!8910 = !DILocation(line: 965, column: 48, scope: !8890)
!8911 = !DILocation(line: 965, column: 33, scope: !8890)
!8912 = !DILocation(line: 965, column: 53, scope: !8890)
!8913 = !DILocation(line: 965, column: 23, scope: !8890)
!8914 = !DILocation(line: 965, column: 13, scope: !8890)
!8915 = !DILocation(line: 965, column: 21, scope: !8890)
!8916 = !DILocation(line: 969, column: 16, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !7865, file: !936, line: 969, column: 9)
!8918 = !DILocation(line: 969, column: 14, scope: !8917)
!8919 = !DILocation(line: 969, column: 21, scope: !8920)
!8920 = !DILexicalBlockFile(scope: !8921, file: !936, discriminator: 1)
!8921 = distinct !DILexicalBlock(scope: !8917, file: !936, line: 969, column: 9)
!8922 = !DILocation(line: 969, column: 23, scope: !8920)
!8923 = !DILocation(line: 969, column: 9, scope: !8920)
!8924 = !DILocation(line: 970, column: 22, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8926, file: !936, line: 970, column: 17)
!8926 = distinct !DILexicalBlock(scope: !8921, file: !936, line: 969, column: 33)
!8927 = !DILocation(line: 970, column: 17, scope: !8925)
!8928 = !DILocation(line: 970, column: 17, scope: !8926)
!8929 = !DILocalVariable(name: "sign", scope: !8930, file: !936, line: 971, type: !912)
!8930 = distinct !DILexicalBlock(scope: !8925, file: !936, line: 970, column: 26)
!8931 = !DILocation(line: 971, column: 26, scope: !8930)
!8932 = !DILocation(line: 971, column: 44, scope: !8930)
!8933 = !DILocation(line: 971, column: 47, scope: !8930)
!8934 = !DILocation(line: 971, column: 33, scope: !8930)
!8935 = !DILocation(line: 971, column: 51, scope: !8930)
!8936 = !DILocation(line: 972, column: 71, scope: !8930)
!8937 = !DILocation(line: 972, column: 66, scope: !8930)
!8938 = !DILocation(line: 972, column: 76, scope: !8930)
!8939 = !DILocation(line: 972, column: 81, scope: !8930)
!8940 = !DILocation(line: 972, column: 74, scope: !8930)
!8941 = !DILocation(line: 972, column: 45, scope: !8930)
!8942 = !DILocation(line: 972, column: 34, scope: !8930)
!8943 = !DILocation(line: 972, column: 38, scope: !8930)
!8944 = !DILocation(line: 972, column: 59, scope: !8930)
!8945 = !DILocation(line: 972, column: 63, scope: !8930)
!8946 = !DILocation(line: 973, column: 27, scope: !8930)
!8947 = !DILocation(line: 974, column: 13, scope: !8930)
!8948 = !DILocation(line: 975, column: 28, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8925, file: !936, line: 974, column: 20)
!8950 = !DILocation(line: 975, column: 17, scope: !8949)
!8951 = !DILocation(line: 975, column: 21, scope: !8949)
!8952 = !DILocation(line: 975, column: 39, scope: !8949)
!8953 = !DILocation(line: 978, column: 29, scope: !8949)
!8954 = !DILocation(line: 978, column: 43, scope: !8949)
!8955 = !DILocation(line: 978, column: 46, scope: !8949)
!8956 = !DILocation(line: 978, column: 59, scope: !8949)
!8957 = !DILocation(line: 978, column: 41, scope: !8949)
!8958 = !DILocation(line: 978, column: 25, scope: !8949)
!8959 = !DILocation(line: 980, column: 13, scope: !8926)
!8960 = !DILocation(line: 981, column: 9, scope: !8926)
!8961 = !DILocation(line: 969, column: 29, scope: !8962)
!8962 = !DILexicalBlockFile(scope: !8921, file: !936, discriminator: 2)
!8963 = !DILocation(line: 969, column: 9, scope: !8962)
!8964 = distinct !{!8964, !8965}
!8965 = !DILocation(line: 969, column: 9, scope: !7865)
!8966 = !DILocation(line: 935, column: 5, scope: !8967)
!8967 = !DILexicalBlockFile(scope: !1998, file: !936, discriminator: 4)
!8968 = distinct !{!8968, !7994}
!8969 = !DILocation(line: 985, column: 9, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !1998, file: !936, line: 985, column: 9)
!8971 = !DILocation(line: 985, column: 21, scope: !8970)
!8972 = !DILocation(line: 985, column: 24, scope: !8970)
!8973 = !DILocation(line: 985, column: 19, scope: !8970)
!8974 = !DILocation(line: 985, column: 9, scope: !1998)
!8975 = !DILocation(line: 986, column: 28, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8970, file: !936, line: 985, column: 38)
!8977 = !DILocation(line: 986, column: 17, scope: !8976)
!8978 = !DILocation(line: 986, column: 21, scope: !8976)
!8979 = !DILocation(line: 986, column: 9, scope: !8976)
!8980 = !DILocation(line: 987, column: 39, scope: !8976)
!8981 = !DILocation(line: 987, column: 42, scope: !8976)
!8982 = !DILocation(line: 987, column: 57, scope: !8976)
!8983 = !DILocation(line: 987, column: 55, scope: !8976)
!8984 = !DILocation(line: 987, column: 38, scope: !8976)
!8985 = !DILocation(line: 987, column: 36, scope: !8976)
!8986 = !DILocation(line: 988, column: 37, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8976, file: !936, line: 988, column: 13)
!8988 = !DILocation(line: 988, column: 40, scope: !8987)
!8989 = !DILocation(line: 988, column: 48, scope: !8987)
!8990 = !DILocation(line: 988, column: 51, scope: !8987)
!8991 = !DILocation(line: 988, column: 55, scope: !8987)
!8992 = !DILocation(line: 989, column: 37, scope: !8987)
!8993 = !DILocation(line: 989, column: 44, scope: !8987)
!8994 = !DILocation(line: 989, column: 52, scope: !8987)
!8995 = !DILocation(line: 989, column: 56, scope: !8987)
!8996 = !DILocation(line: 990, column: 37, scope: !8987)
!8997 = !DILocation(line: 990, column: 48, scope: !8987)
!8998 = !DILocation(line: 990, column: 51, scope: !8987)
!8999 = !DILocation(line: 991, column: 37, scope: !8987)
!9000 = !DILocation(line: 991, column: 40, scope: !8987)
!9001 = !DILocation(line: 991, column: 54, scope: !8987)
!9002 = !DILocation(line: 991, column: 57, scope: !8987)
!9003 = !DILocation(line: 988, column: 13, scope: !8987)
!9004 = !DILocation(line: 988, column: 13, scope: !8976)
!9005 = !DILocation(line: 992, column: 13, scope: !8987)
!9006 = !DILocation(line: 993, column: 5, scope: !8976)
!9007 = !DILocation(line: 995, column: 5, scope: !1998)
!9008 = !DILocation(line: 996, column: 1, scope: !1998)
!9009 = distinct !DISubprogram(name: "inverse_channel_transform", scope: !936, file: !936, line: 1096, type: !3768, isLocal: true, isDefinition: true, scopeLine: 1097, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!9010 = !DILocalVariable(name: "s", arg: 1, scope: !9009, file: !936, line: 1096, type: !1664)
!9011 = !DILocation(line: 1096, column: 56, scope: !9009)
!9012 = !DILocalVariable(name: "i", scope: !9009, file: !936, line: 1098, type: !914)
!9013 = !DILocation(line: 1098, column: 9, scope: !9009)
!9014 = !DILocation(line: 1100, column: 12, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9009, file: !936, line: 1100, column: 5)
!9016 = !DILocation(line: 1100, column: 10, scope: !9015)
!9017 = !DILocation(line: 1100, column: 17, scope: !9018)
!9018 = !DILexicalBlockFile(scope: !9019, file: !936, discriminator: 1)
!9019 = distinct !DILexicalBlock(scope: !9015, file: !936, line: 1100, column: 5)
!9020 = !DILocation(line: 1100, column: 21, scope: !9018)
!9021 = !DILocation(line: 1100, column: 24, scope: !9018)
!9022 = !DILocation(line: 1100, column: 19, scope: !9018)
!9023 = !DILocation(line: 1100, column: 5, scope: !9018)
!9024 = !DILocation(line: 1101, column: 24, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9026, file: !936, line: 1101, column: 13)
!9026 = distinct !DILexicalBlock(scope: !9019, file: !936, line: 1100, column: 43)
!9027 = !DILocation(line: 1101, column: 13, scope: !9025)
!9028 = !DILocation(line: 1101, column: 16, scope: !9025)
!9029 = !DILocation(line: 1101, column: 27, scope: !9025)
!9030 = !DILocation(line: 1101, column: 13, scope: !9026)
!9031 = !DILocalVariable(name: "data", scope: !9032, file: !936, line: 1102, type: !9033)
!9032 = distinct !DILexicalBlock(scope: !9025, file: !936, line: 1101, column: 38)
!9033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 256, align: 32, elements: !1058)
!9034 = !DILocation(line: 1102, column: 19, scope: !9032)
!9035 = !DILocalVariable(name: "num_channels", scope: !9032, file: !936, line: 1103, type: !962)
!9036 = !DILocation(line: 1103, column: 23, scope: !9032)
!9037 = !DILocation(line: 1103, column: 49, scope: !9032)
!9038 = !DILocation(line: 1103, column: 38, scope: !9032)
!9039 = !DILocation(line: 1103, column: 41, scope: !9032)
!9040 = !DILocation(line: 1103, column: 52, scope: !9032)
!9041 = !DILocalVariable(name: "ch_data", scope: !9032, file: !936, line: 1104, type: !6685)
!9042 = !DILocation(line: 1104, column: 21, scope: !9032)
!9043 = !DILocation(line: 1104, column: 42, scope: !9032)
!9044 = !DILocation(line: 1104, column: 31, scope: !9032)
!9045 = !DILocation(line: 1104, column: 34, scope: !9032)
!9046 = !DILocation(line: 1104, column: 45, scope: !9032)
!9047 = !DILocalVariable(name: "ch_end", scope: !9032, file: !936, line: 1105, type: !6685)
!9048 = !DILocation(line: 1105, column: 21, scope: !9032)
!9049 = !DILocation(line: 1105, column: 30, scope: !9032)
!9050 = !DILocation(line: 1105, column: 40, scope: !9032)
!9051 = !DILocation(line: 1105, column: 38, scope: !9032)
!9052 = !DILocalVariable(name: "tb", scope: !9032, file: !936, line: 1106, type: !7164)
!9053 = !DILocation(line: 1106, column: 27, scope: !9032)
!9054 = !DILocation(line: 1106, column: 43, scope: !9032)
!9055 = !DILocation(line: 1106, column: 32, scope: !9032)
!9056 = !DILocation(line: 1106, column: 35, scope: !9032)
!9057 = !DILocation(line: 1106, column: 46, scope: !9032)
!9058 = !DILocalVariable(name: "sfb", scope: !9032, file: !936, line: 1107, type: !1839)
!9059 = !DILocation(line: 1107, column: 22, scope: !9032)
!9060 = !DILocation(line: 1110, column: 24, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9032, file: !936, line: 1110, column: 13)
!9062 = !DILocation(line: 1110, column: 27, scope: !9061)
!9063 = !DILocation(line: 1110, column: 22, scope: !9061)
!9064 = !DILocation(line: 1110, column: 18, scope: !9061)
!9065 = !DILocation(line: 1111, column: 18, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9061, file: !936, line: 1110, column: 13)
!9067 = !DILocation(line: 1111, column: 24, scope: !9066)
!9068 = !DILocation(line: 1111, column: 27, scope: !9066)
!9069 = !DILocation(line: 1111, column: 45, scope: !9066)
!9070 = !DILocation(line: 1111, column: 48, scope: !9066)
!9071 = !DILocation(line: 1111, column: 43, scope: !9066)
!9072 = !DILocation(line: 1111, column: 22, scope: !9066)
!9073 = !DILocation(line: 1110, column: 13, scope: !9074)
!9074 = !DILexicalBlockFile(scope: !9061, file: !936, discriminator: 1)
!9075 = !DILocalVariable(name: "y", scope: !9076, file: !936, line: 1112, type: !914)
!9076 = distinct !DILexicalBlock(scope: !9066, file: !936, line: 1111, column: 66)
!9077 = !DILocation(line: 1112, column: 21, scope: !9076)
!9078 = !DILocation(line: 1113, column: 24, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9076, file: !936, line: 1113, column: 21)
!9080 = !DILocation(line: 1113, column: 21, scope: !9079)
!9081 = !DILocation(line: 1113, column: 27, scope: !9079)
!9082 = !DILocation(line: 1113, column: 21, scope: !9076)
!9083 = !DILocation(line: 1115, column: 30, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !936, line: 1115, column: 21)
!9085 = distinct !DILexicalBlock(scope: !9079, file: !936, line: 1113, column: 33)
!9086 = !DILocation(line: 1115, column: 28, scope: !9084)
!9087 = !DILocation(line: 1115, column: 26, scope: !9084)
!9088 = !DILocation(line: 1115, column: 38, scope: !9089)
!9089 = !DILexicalBlockFile(scope: !9090, file: !936, discriminator: 1)
!9090 = distinct !DILexicalBlock(scope: !9084, file: !936, line: 1115, column: 21)
!9091 = !DILocation(line: 1115, column: 44, scope: !9089)
!9092 = !DILocation(line: 1115, column: 43, scope: !9089)
!9093 = !DILocation(line: 1115, column: 55, scope: !9089)
!9094 = !DILocation(line: 1115, column: 58, scope: !9089)
!9095 = !DILocation(line: 1115, column: 54, scope: !9089)
!9096 = !DILocation(line: 1115, column: 52, scope: !9089)
!9097 = !DILocation(line: 1115, column: 75, scope: !9098)
!9098 = !DILexicalBlockFile(scope: !9090, file: !936, discriminator: 2)
!9099 = !DILocation(line: 1115, column: 78, scope: !9098)
!9100 = !DILocation(line: 1115, column: 74, scope: !9098)
!9101 = !DILocation(line: 1115, column: 43, scope: !9098)
!9102 = !DILocation(line: 1115, column: 95, scope: !9103)
!9103 = !DILexicalBlockFile(scope: !9090, file: !936, discriminator: 3)
!9104 = !DILocation(line: 1115, column: 94, scope: !9103)
!9105 = !DILocation(line: 1115, column: 43, scope: !9103)
!9106 = !DILocation(line: 1115, column: 43, scope: !9107)
!9107 = !DILexicalBlockFile(scope: !9090, file: !936, discriminator: 4)
!9108 = !DILocation(line: 1115, column: 40, scope: !9107)
!9109 = !DILocation(line: 1115, column: 21, scope: !9107)
!9110 = !DILocalVariable(name: "mat", scope: !9111, file: !936, line: 1116, type: !1680)
!9111 = distinct !DILexicalBlock(scope: !9090, file: !936, line: 1115, column: 110)
!9112 = !DILocation(line: 1116, column: 38, scope: !9111)
!9113 = !DILocation(line: 1116, column: 55, scope: !9111)
!9114 = !DILocation(line: 1116, column: 44, scope: !9111)
!9115 = !DILocation(line: 1116, column: 47, scope: !9111)
!9116 = !DILocation(line: 1116, column: 58, scope: !9111)
!9117 = !DILocalVariable(name: "data_end", scope: !9111, file: !936, line: 1117, type: !1680)
!9118 = !DILocation(line: 1117, column: 38, scope: !9111)
!9119 = !DILocation(line: 1117, column: 49, scope: !9111)
!9120 = !DILocation(line: 1117, column: 56, scope: !9111)
!9121 = !DILocation(line: 1117, column: 54, scope: !9111)
!9122 = !DILocalVariable(name: "data_ptr", scope: !9111, file: !936, line: 1118, type: !1679)
!9123 = !DILocation(line: 1118, column: 32, scope: !9111)
!9124 = !DILocation(line: 1118, column: 43, scope: !9111)
!9125 = !DILocalVariable(name: "ch", scope: !9111, file: !936, line: 1119, type: !6685)
!9126 = !DILocation(line: 1119, column: 33, scope: !9111)
!9127 = !DILocation(line: 1121, column: 35, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9111, file: !936, line: 1121, column: 25)
!9129 = !DILocation(line: 1121, column: 33, scope: !9128)
!9130 = !DILocation(line: 1121, column: 30, scope: !9128)
!9131 = !DILocation(line: 1121, column: 44, scope: !9132)
!9132 = !DILexicalBlockFile(scope: !9133, file: !936, discriminator: 1)
!9133 = distinct !DILexicalBlock(scope: !9128, file: !936, line: 1121, column: 25)
!9134 = !DILocation(line: 1121, column: 49, scope: !9132)
!9135 = !DILocation(line: 1121, column: 47, scope: !9132)
!9136 = !DILocation(line: 1121, column: 25, scope: !9132)
!9137 = !DILocation(line: 1122, column: 49, scope: !9133)
!9138 = !DILocation(line: 1122, column: 43, scope: !9133)
!9139 = !DILocation(line: 1122, column: 45, scope: !9133)
!9140 = !DILocation(line: 1122, column: 44, scope: !9133)
!9141 = !DILocation(line: 1122, column: 38, scope: !9133)
!9142 = !DILocation(line: 1122, column: 41, scope: !9133)
!9143 = !DILocation(line: 1122, column: 29, scope: !9133)
!9144 = !DILocation(line: 1121, column: 59, scope: !9145)
!9145 = !DILexicalBlockFile(scope: !9133, file: !936, discriminator: 2)
!9146 = !DILocation(line: 1121, column: 25, scope: !9145)
!9147 = distinct !{!9147, !9148}
!9148 = !DILocation(line: 1121, column: 25, scope: !9111)
!9149 = !DILocation(line: 1124, column: 35, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9111, file: !936, line: 1124, column: 25)
!9151 = !DILocation(line: 1124, column: 33, scope: !9150)
!9152 = !DILocation(line: 1124, column: 30, scope: !9150)
!9153 = !DILocation(line: 1124, column: 44, scope: !9154)
!9154 = !DILexicalBlockFile(scope: !9155, file: !936, discriminator: 1)
!9155 = distinct !DILexicalBlock(scope: !9150, file: !936, line: 1124, column: 25)
!9156 = !DILocation(line: 1124, column: 49, scope: !9154)
!9157 = !DILocation(line: 1124, column: 47, scope: !9154)
!9158 = !DILocation(line: 1124, column: 25, scope: !9154)
!9159 = !DILocalVariable(name: "sum", scope: !9160, file: !936, line: 1125, type: !933)
!9160 = distinct !DILexicalBlock(scope: !9155, file: !936, line: 1124, column: 63)
!9161 = !DILocation(line: 1125, column: 35, scope: !9160)
!9162 = !DILocation(line: 1126, column: 40, scope: !9160)
!9163 = !DILocation(line: 1126, column: 38, scope: !9160)
!9164 = !DILocation(line: 1127, column: 29, scope: !9160)
!9165 = !DILocation(line: 1127, column: 36, scope: !9166)
!9166 = !DILexicalBlockFile(scope: !9160, file: !936, discriminator: 1)
!9167 = !DILocation(line: 1127, column: 47, scope: !9166)
!9168 = !DILocation(line: 1127, column: 45, scope: !9166)
!9169 = !DILocation(line: 1127, column: 29, scope: !9166)
!9170 = !DILocation(line: 1128, column: 49, scope: !9160)
!9171 = !DILocation(line: 1128, column: 40, scope: !9160)
!9172 = !DILocation(line: 1128, column: 58, scope: !9160)
!9173 = !DILocation(line: 1128, column: 54, scope: !9160)
!9174 = !DILocation(line: 1128, column: 52, scope: !9160)
!9175 = !DILocation(line: 1128, column: 37, scope: !9160)
!9176 = !DILocation(line: 1127, column: 29, scope: !9177)
!9177 = !DILexicalBlockFile(scope: !9160, file: !936, discriminator: 2)
!9178 = distinct !{!9178, !9164}
!9179 = !DILocation(line: 1130, column: 40, scope: !9160)
!9180 = !DILocation(line: 1130, column: 35, scope: !9160)
!9181 = !DILocation(line: 1130, column: 29, scope: !9160)
!9182 = !DILocation(line: 1130, column: 31, scope: !9160)
!9183 = !DILocation(line: 1130, column: 30, scope: !9160)
!9184 = !DILocation(line: 1130, column: 38, scope: !9160)
!9185 = !DILocation(line: 1131, column: 25, scope: !9160)
!9186 = !DILocation(line: 1124, column: 59, scope: !9187)
!9187 = !DILexicalBlockFile(scope: !9155, file: !936, discriminator: 2)
!9188 = !DILocation(line: 1124, column: 25, scope: !9187)
!9189 = distinct !{!9189, !9190}
!9190 = !DILocation(line: 1124, column: 25, scope: !9111)
!9191 = !DILocation(line: 1132, column: 21, scope: !9111)
!9192 = !DILocation(line: 1115, column: 106, scope: !9193)
!9193 = !DILexicalBlockFile(scope: !9090, file: !936, discriminator: 5)
!9194 = !DILocation(line: 1115, column: 21, scope: !9193)
!9195 = distinct !{!9195, !9196}
!9196 = !DILocation(line: 1115, column: 21, scope: !9085)
!9197 = !DILocation(line: 1133, column: 17, scope: !9085)
!9198 = !DILocation(line: 1133, column: 28, scope: !9199)
!9199 = !DILexicalBlockFile(scope: !9200, file: !936, discriminator: 1)
!9200 = distinct !DILexicalBlock(scope: !9079, file: !936, line: 1133, column: 28)
!9201 = !DILocation(line: 1133, column: 31, scope: !9199)
!9202 = !DILocation(line: 1133, column: 43, scope: !9199)
!9203 = !DILocalVariable(name: "len", scope: !9204, file: !936, line: 1134, type: !914)
!9204 = distinct !DILexicalBlock(scope: !9200, file: !936, line: 1133, column: 49)
!9205 = !DILocation(line: 1134, column: 25, scope: !9204)
!9206 = !DILocation(line: 1134, column: 33, scope: !9204)
!9207 = !DILocation(line: 1134, column: 32, scope: !9204)
!9208 = !DILocation(line: 1134, column: 44, scope: !9204)
!9209 = !DILocation(line: 1134, column: 47, scope: !9204)
!9210 = !DILocation(line: 1134, column: 43, scope: !9204)
!9211 = !DILocation(line: 1134, column: 41, scope: !9204)
!9212 = !DILocation(line: 1134, column: 64, scope: !9213)
!9213 = !DILexicalBlockFile(scope: !9204, file: !936, discriminator: 1)
!9214 = !DILocation(line: 1134, column: 67, scope: !9213)
!9215 = !DILocation(line: 1134, column: 63, scope: !9213)
!9216 = !DILocation(line: 1134, column: 32, scope: !9213)
!9217 = !DILocation(line: 1134, column: 84, scope: !9218)
!9218 = !DILexicalBlockFile(scope: !9204, file: !936, discriminator: 2)
!9219 = !DILocation(line: 1134, column: 83, scope: !9218)
!9220 = !DILocation(line: 1134, column: 32, scope: !9218)
!9221 = !DILocation(line: 1134, column: 32, scope: !9222)
!9222 = !DILexicalBlockFile(scope: !9204, file: !936, discriminator: 3)
!9223 = !DILocation(line: 1134, column: 95, scope: !9222)
!9224 = !DILocation(line: 1134, column: 93, scope: !9222)
!9225 = !DILocation(line: 1134, column: 25, scope: !9222)
!9226 = !DILocation(line: 1135, column: 21, scope: !9204)
!9227 = !DILocation(line: 1135, column: 24, scope: !9204)
!9228 = !DILocation(line: 1135, column: 30, scope: !9204)
!9229 = !DILocation(line: 1135, column: 49, scope: !9204)
!9230 = !DILocation(line: 1135, column: 62, scope: !9204)
!9231 = !DILocation(line: 1135, column: 60, scope: !9204)
!9232 = !DILocation(line: 1136, column: 48, scope: !9204)
!9233 = !DILocation(line: 1136, column: 61, scope: !9204)
!9234 = !DILocation(line: 1136, column: 59, scope: !9204)
!9235 = !DILocation(line: 1137, column: 61, scope: !9204)
!9236 = !DILocation(line: 1138, column: 21, scope: !9204)
!9237 = !DILocation(line: 1138, column: 24, scope: !9204)
!9238 = !DILocation(line: 1138, column: 30, scope: !9204)
!9239 = !DILocation(line: 1138, column: 49, scope: !9204)
!9240 = !DILocation(line: 1138, column: 62, scope: !9204)
!9241 = !DILocation(line: 1138, column: 60, scope: !9204)
!9242 = !DILocation(line: 1139, column: 48, scope: !9204)
!9243 = !DILocation(line: 1139, column: 61, scope: !9204)
!9244 = !DILocation(line: 1139, column: 59, scope: !9204)
!9245 = !DILocation(line: 1140, column: 61, scope: !9204)
!9246 = !DILocation(line: 1141, column: 17, scope: !9204)
!9247 = !DILocation(line: 1142, column: 13, scope: !9076)
!9248 = !DILocation(line: 1111, column: 62, scope: !9249)
!9249 = !DILexicalBlockFile(scope: !9066, file: !936, discriminator: 1)
!9250 = !DILocation(line: 1110, column: 13, scope: !9251)
!9251 = !DILexicalBlockFile(scope: !9066, file: !936, discriminator: 2)
!9252 = distinct !{!9252, !9253}
!9253 = !DILocation(line: 1110, column: 13, scope: !9032)
!9254 = !DILocation(line: 1143, column: 9, scope: !9032)
!9255 = !DILocation(line: 1144, column: 5, scope: !9026)
!9256 = !DILocation(line: 1100, column: 39, scope: !9257)
!9257 = !DILexicalBlockFile(scope: !9019, file: !936, discriminator: 2)
!9258 = !DILocation(line: 1100, column: 5, scope: !9257)
!9259 = distinct !{!9259, !9260}
!9260 = !DILocation(line: 1100, column: 5, scope: !9009)
!9261 = !DILocation(line: 1145, column: 1, scope: !9009)
!9262 = distinct !DISubprogram(name: "wmapro_window", scope: !936, file: !936, line: 1151, type: !3768, isLocal: true, isDefinition: true, scopeLine: 1152, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!9263 = !DILocalVariable(name: "s", arg: 1, scope: !9262, file: !936, line: 1151, type: !1664)
!9264 = !DILocation(line: 1151, column: 44, scope: !9262)
!9265 = !DILocalVariable(name: "i", scope: !9262, file: !936, line: 1153, type: !914)
!9266 = !DILocation(line: 1153, column: 9, scope: !9262)
!9267 = !DILocation(line: 1154, column: 12, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9262, file: !936, line: 1154, column: 5)
!9269 = !DILocation(line: 1154, column: 10, scope: !9268)
!9270 = !DILocation(line: 1154, column: 17, scope: !9271)
!9271 = !DILexicalBlockFile(scope: !9272, file: !936, discriminator: 1)
!9272 = distinct !DILexicalBlock(scope: !9268, file: !936, line: 1154, column: 5)
!9273 = !DILocation(line: 1154, column: 21, scope: !9271)
!9274 = !DILocation(line: 1154, column: 24, scope: !9271)
!9275 = !DILocation(line: 1154, column: 19, scope: !9271)
!9276 = !DILocation(line: 1154, column: 5, scope: !9271)
!9277 = !DILocalVariable(name: "c", scope: !9278, file: !936, line: 1155, type: !914)
!9278 = distinct !DILexicalBlock(scope: !9272, file: !936, line: 1154, column: 56)
!9279 = !DILocation(line: 1155, column: 13, scope: !9278)
!9280 = !DILocation(line: 1155, column: 53, scope: !9278)
!9281 = !DILocation(line: 1155, column: 17, scope: !9278)
!9282 = !DILocation(line: 1155, column: 20, scope: !9278)
!9283 = !DILocalVariable(name: "window", scope: !9278, file: !936, line: 1156, type: !1680)
!9284 = !DILocation(line: 1156, column: 22, scope: !9278)
!9285 = !DILocalVariable(name: "winlen", scope: !9278, file: !936, line: 1157, type: !914)
!9286 = !DILocation(line: 1157, column: 13, scope: !9278)
!9287 = !DILocation(line: 1157, column: 33, scope: !9278)
!9288 = !DILocation(line: 1157, column: 22, scope: !9278)
!9289 = !DILocation(line: 1157, column: 25, scope: !9278)
!9290 = !DILocation(line: 1157, column: 36, scope: !9278)
!9291 = !DILocalVariable(name: "start", scope: !9278, file: !936, line: 1158, type: !1679)
!9292 = !DILocation(line: 1158, column: 16, scope: !9278)
!9293 = !DILocation(line: 1158, column: 35, scope: !9278)
!9294 = !DILocation(line: 1158, column: 24, scope: !9278)
!9295 = !DILocation(line: 1158, column: 27, scope: !9278)
!9296 = !DILocation(line: 1158, column: 38, scope: !9278)
!9297 = !DILocation(line: 1158, column: 48, scope: !9278)
!9298 = !DILocation(line: 1158, column: 55, scope: !9278)
!9299 = !DILocation(line: 1158, column: 45, scope: !9278)
!9300 = !DILocation(line: 1160, column: 13, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9278, file: !936, line: 1160, column: 13)
!9302 = !DILocation(line: 1160, column: 16, scope: !9301)
!9303 = !DILocation(line: 1160, column: 31, scope: !9301)
!9304 = !DILocation(line: 1160, column: 29, scope: !9301)
!9305 = !DILocation(line: 1160, column: 13, scope: !9278)
!9306 = !DILocation(line: 1161, column: 23, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9301, file: !936, line: 1160, column: 39)
!9308 = !DILocation(line: 1161, column: 32, scope: !9307)
!9309 = !DILocation(line: 1161, column: 35, scope: !9307)
!9310 = !DILocation(line: 1161, column: 30, scope: !9307)
!9311 = !DILocation(line: 1161, column: 49, scope: !9307)
!9312 = !DILocation(line: 1161, column: 19, scope: !9307)
!9313 = !DILocation(line: 1162, column: 22, scope: !9307)
!9314 = !DILocation(line: 1162, column: 25, scope: !9307)
!9315 = !DILocation(line: 1162, column: 20, scope: !9307)
!9316 = !DILocation(line: 1163, column: 9, scope: !9307)
!9317 = !DILocation(line: 1165, column: 50, scope: !9278)
!9318 = !DILocation(line: 1165, column: 57, scope: !9278)
!9319 = !DILocation(line: 1165, column: 35, scope: !9278)
!9320 = !DILocation(line: 1165, column: 33, scope: !9278)
!9321 = !DILocation(line: 1165, column: 62, scope: !9278)
!9322 = !DILocation(line: 1165, column: 18, scope: !9278)
!9323 = !DILocation(line: 1165, column: 21, scope: !9278)
!9324 = !DILocation(line: 1165, column: 16, scope: !9278)
!9325 = !DILocation(line: 1167, column: 16, scope: !9278)
!9326 = !DILocation(line: 1169, column: 9, scope: !9278)
!9327 = !DILocation(line: 1169, column: 12, scope: !9278)
!9328 = !DILocation(line: 1169, column: 18, scope: !9278)
!9329 = !DILocation(line: 1169, column: 37, scope: !9278)
!9330 = !DILocation(line: 1169, column: 44, scope: !9278)
!9331 = !DILocation(line: 1169, column: 51, scope: !9278)
!9332 = !DILocation(line: 1169, column: 59, scope: !9278)
!9333 = !DILocation(line: 1169, column: 57, scope: !9278)
!9334 = !DILocation(line: 1170, column: 36, scope: !9278)
!9335 = !DILocation(line: 1170, column: 44, scope: !9278)
!9336 = !DILocation(line: 1172, column: 40, scope: !9278)
!9337 = !DILocation(line: 1172, column: 43, scope: !9278)
!9338 = !DILocation(line: 1172, column: 20, scope: !9278)
!9339 = !DILocation(line: 1172, column: 9, scope: !9278)
!9340 = !DILocation(line: 1172, column: 12, scope: !9278)
!9341 = !DILocation(line: 1172, column: 23, scope: !9278)
!9342 = !DILocation(line: 1172, column: 38, scope: !9278)
!9343 = !DILocation(line: 1173, column: 5, scope: !9278)
!9344 = !DILocation(line: 1154, column: 52, scope: !9345)
!9345 = !DILexicalBlockFile(scope: !9272, file: !936, discriminator: 2)
!9346 = !DILocation(line: 1154, column: 5, scope: !9345)
!9347 = distinct !{!9347, !9348}
!9348 = !DILocation(line: 1154, column: 5, scope: !9262)
!9349 = !DILocation(line: 1174, column: 1, scope: !9262)
!9350 = distinct !DISubprogram(name: "decode_decorrelation_matrix", scope: !936, file: !936, line: 736, type: !9351, isLocal: true, isDefinition: true, scopeLine: 738, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!9351 = !DISubroutineType(types: !9352)
!9352 = !{null, !1664, !6678}
!9353 = !DILocalVariable(name: "s", arg: 1, scope: !9350, file: !936, line: 736, type: !1664)
!9354 = !DILocation(line: 736, column: 58, scope: !9350)
!9355 = !DILocalVariable(name: "chgroup", arg: 2, scope: !9350, file: !936, line: 737, type: !6678)
!9356 = !DILocation(line: 737, column: 59, scope: !9350)
!9357 = !DILocalVariable(name: "i", scope: !9350, file: !936, line: 739, type: !914)
!9358 = !DILocation(line: 739, column: 9, scope: !9350)
!9359 = !DILocalVariable(name: "offset", scope: !9350, file: !936, line: 740, type: !914)
!9360 = !DILocation(line: 740, column: 9, scope: !9350)
!9361 = !DILocalVariable(name: "rotation_offset", scope: !9350, file: !936, line: 741, type: !9362)
!9362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1136, size: 512, align: 8, elements: !1855)
!9363 = !DILocation(line: 741, column: 12, scope: !9350)
!9364 = !DILocation(line: 742, column: 12, scope: !9350)
!9365 = !DILocation(line: 742, column: 21, scope: !9350)
!9366 = !DILocation(line: 742, column: 5, scope: !9350)
!9367 = !DILocation(line: 742, column: 46, scope: !9350)
!9368 = !DILocation(line: 742, column: 49, scope: !9350)
!9369 = !DILocation(line: 743, column: 12, scope: !9350)
!9370 = !DILocation(line: 743, column: 15, scope: !9350)
!9371 = !DILocation(line: 742, column: 61, scope: !9350)
!9372 = !DILocation(line: 743, column: 27, scope: !9350)
!9373 = !DILocation(line: 745, column: 12, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9350, file: !936, line: 745, column: 5)
!9375 = !DILocation(line: 745, column: 10, scope: !9374)
!9376 = !DILocation(line: 745, column: 17, scope: !9377)
!9377 = !DILexicalBlockFile(scope: !9378, file: !936, discriminator: 1)
!9378 = distinct !DILexicalBlock(scope: !9374, file: !936, line: 745, column: 5)
!9379 = !DILocation(line: 745, column: 21, scope: !9377)
!9380 = !DILocation(line: 745, column: 30, scope: !9377)
!9381 = !DILocation(line: 745, column: 46, scope: !9377)
!9382 = !DILocation(line: 745, column: 55, scope: !9377)
!9383 = !DILocation(line: 745, column: 68, scope: !9377)
!9384 = !DILocation(line: 745, column: 43, scope: !9377)
!9385 = !DILocation(line: 745, column: 73, scope: !9377)
!9386 = !DILocation(line: 745, column: 19, scope: !9377)
!9387 = !DILocation(line: 745, column: 5, scope: !9377)
!9388 = !DILocation(line: 746, column: 40, scope: !9378)
!9389 = !DILocation(line: 746, column: 43, scope: !9378)
!9390 = !DILocation(line: 746, column: 30, scope: !9378)
!9391 = !DILocation(line: 746, column: 25, scope: !9378)
!9392 = !DILocation(line: 746, column: 9, scope: !9378)
!9393 = !DILocation(line: 746, column: 28, scope: !9378)
!9394 = !DILocation(line: 745, column: 80, scope: !9395)
!9395 = !DILexicalBlockFile(scope: !9378, file: !936, discriminator: 2)
!9396 = !DILocation(line: 745, column: 5, scope: !9395)
!9397 = distinct !{!9397, !9398}
!9398 = !DILocation(line: 745, column: 5, scope: !9350)
!9399 = !DILocation(line: 748, column: 12, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9350, file: !936, line: 748, column: 5)
!9401 = !DILocation(line: 748, column: 10, scope: !9400)
!9402 = !DILocation(line: 748, column: 17, scope: !9403)
!9403 = !DILexicalBlockFile(scope: !9404, file: !936, discriminator: 1)
!9404 = distinct !DILexicalBlock(scope: !9400, file: !936, line: 748, column: 5)
!9405 = !DILocation(line: 748, column: 21, scope: !9403)
!9406 = !DILocation(line: 748, column: 30, scope: !9403)
!9407 = !DILocation(line: 748, column: 19, scope: !9403)
!9408 = !DILocation(line: 748, column: 5, scope: !9403)
!9409 = !DILocation(line: 750, column: 24, scope: !9404)
!9410 = !DILocation(line: 750, column: 27, scope: !9404)
!9411 = !DILocation(line: 750, column: 13, scope: !9404)
!9412 = !DILocation(line: 749, column: 39, scope: !9404)
!9413 = !DILocation(line: 749, column: 48, scope: !9404)
!9414 = !DILocation(line: 749, column: 63, scope: !9404)
!9415 = !DILocation(line: 749, column: 61, scope: !9404)
!9416 = !DILocation(line: 749, column: 67, scope: !9404)
!9417 = !DILocation(line: 749, column: 65, scope: !9404)
!9418 = !DILocation(line: 749, column: 9, scope: !9404)
!9419 = !DILocation(line: 749, column: 18, scope: !9404)
!9420 = !DILocation(line: 749, column: 70, scope: !9404)
!9421 = !DILocation(line: 748, column: 45, scope: !9422)
!9422 = !DILexicalBlockFile(scope: !9404, file: !936, discriminator: 2)
!9423 = !DILocation(line: 748, column: 5, scope: !9422)
!9424 = distinct !{!9424, !9425}
!9425 = !DILocation(line: 748, column: 5, scope: !9350)
!9426 = !DILocation(line: 752, column: 12, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9350, file: !936, line: 752, column: 5)
!9428 = !DILocation(line: 752, column: 10, scope: !9427)
!9429 = !DILocation(line: 752, column: 17, scope: !9430)
!9430 = !DILexicalBlockFile(scope: !9431, file: !936, discriminator: 1)
!9431 = distinct !DILexicalBlock(scope: !9427, file: !936, line: 752, column: 5)
!9432 = !DILocation(line: 752, column: 21, scope: !9430)
!9433 = !DILocation(line: 752, column: 30, scope: !9430)
!9434 = !DILocation(line: 752, column: 19, scope: !9430)
!9435 = !DILocation(line: 752, column: 5, scope: !9430)
!9436 = !DILocalVariable(name: "x", scope: !9437, file: !936, line: 753, type: !914)
!9437 = distinct !DILexicalBlock(scope: !9431, file: !936, line: 752, column: 49)
!9438 = !DILocation(line: 753, column: 13, scope: !9437)
!9439 = !DILocation(line: 754, column: 16, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9437, file: !936, line: 754, column: 9)
!9441 = !DILocation(line: 754, column: 14, scope: !9440)
!9442 = !DILocation(line: 754, column: 21, scope: !9443)
!9443 = !DILexicalBlockFile(scope: !9444, file: !936, discriminator: 1)
!9444 = distinct !DILexicalBlock(scope: !9440, file: !936, line: 754, column: 9)
!9445 = !DILocation(line: 754, column: 25, scope: !9443)
!9446 = !DILocation(line: 754, column: 23, scope: !9443)
!9447 = !DILocation(line: 754, column: 9, scope: !9443)
!9448 = !DILocalVariable(name: "y", scope: !9449, file: !936, line: 755, type: !914)
!9449 = distinct !DILexicalBlock(scope: !9444, file: !936, line: 754, column: 33)
!9450 = !DILocation(line: 755, column: 17, scope: !9449)
!9451 = !DILocation(line: 756, column: 20, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9449, file: !936, line: 756, column: 13)
!9453 = !DILocation(line: 756, column: 18, scope: !9452)
!9454 = !DILocation(line: 756, column: 25, scope: !9455)
!9455 = !DILexicalBlockFile(scope: !9456, file: !936, discriminator: 1)
!9456 = distinct !DILexicalBlock(scope: !9452, file: !936, line: 756, column: 13)
!9457 = !DILocation(line: 756, column: 29, scope: !9455)
!9458 = !DILocation(line: 756, column: 31, scope: !9455)
!9459 = !DILocation(line: 756, column: 27, scope: !9455)
!9460 = !DILocation(line: 756, column: 13, scope: !9455)
!9461 = !DILocalVariable(name: "v1", scope: !9462, file: !936, line: 757, type: !933)
!9462 = distinct !DILexicalBlock(scope: !9456, file: !936, line: 756, column: 41)
!9463 = !DILocation(line: 757, column: 23, scope: !9462)
!9464 = !DILocation(line: 757, column: 58, scope: !9462)
!9465 = !DILocation(line: 757, column: 62, scope: !9462)
!9466 = !DILocation(line: 757, column: 71, scope: !9462)
!9467 = !DILocation(line: 757, column: 60, scope: !9462)
!9468 = !DILocation(line: 757, column: 86, scope: !9462)
!9469 = !DILocation(line: 757, column: 84, scope: !9462)
!9470 = !DILocation(line: 757, column: 28, scope: !9462)
!9471 = !DILocation(line: 757, column: 37, scope: !9462)
!9472 = !DILocalVariable(name: "v2", scope: !9462, file: !936, line: 758, type: !933)
!9473 = !DILocation(line: 758, column: 23, scope: !9462)
!9474 = !DILocation(line: 758, column: 58, scope: !9462)
!9475 = !DILocation(line: 758, column: 62, scope: !9462)
!9476 = !DILocation(line: 758, column: 71, scope: !9462)
!9477 = !DILocation(line: 758, column: 60, scope: !9462)
!9478 = !DILocation(line: 758, column: 86, scope: !9462)
!9479 = !DILocation(line: 758, column: 84, scope: !9462)
!9480 = !DILocation(line: 758, column: 28, scope: !9462)
!9481 = !DILocation(line: 758, column: 37, scope: !9462)
!9482 = !DILocalVariable(name: "n", scope: !9462, file: !936, line: 759, type: !914)
!9483 = !DILocation(line: 759, column: 21, scope: !9462)
!9484 = !DILocation(line: 759, column: 41, scope: !9462)
!9485 = !DILocation(line: 759, column: 50, scope: !9462)
!9486 = !DILocation(line: 759, column: 48, scope: !9462)
!9487 = !DILocation(line: 759, column: 25, scope: !9462)
!9488 = !DILocalVariable(name: "sinv", scope: !9462, file: !936, line: 760, type: !933)
!9489 = !DILocation(line: 760, column: 23, scope: !9462)
!9490 = !DILocalVariable(name: "cosv", scope: !9462, file: !936, line: 761, type: !933)
!9491 = !DILocation(line: 761, column: 23, scope: !9462)
!9492 = !DILocation(line: 763, column: 21, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9462, file: !936, line: 763, column: 21)
!9494 = !DILocation(line: 763, column: 23, scope: !9493)
!9495 = !DILocation(line: 763, column: 21, scope: !9462)
!9496 = !DILocation(line: 764, column: 34, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9493, file: !936, line: 763, column: 29)
!9498 = !DILocation(line: 764, column: 28, scope: !9497)
!9499 = !DILocation(line: 764, column: 26, scope: !9497)
!9500 = !DILocation(line: 765, column: 39, scope: !9497)
!9501 = !DILocation(line: 765, column: 37, scope: !9497)
!9502 = !DILocation(line: 765, column: 28, scope: !9497)
!9503 = !DILocation(line: 765, column: 26, scope: !9497)
!9504 = !DILocation(line: 766, column: 17, scope: !9497)
!9505 = !DILocation(line: 767, column: 39, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9493, file: !936, line: 766, column: 24)
!9507 = !DILocation(line: 767, column: 37, scope: !9506)
!9508 = !DILocation(line: 767, column: 28, scope: !9506)
!9509 = !DILocation(line: 767, column: 26, scope: !9506)
!9510 = !DILocation(line: 768, column: 35, scope: !9506)
!9511 = !DILocation(line: 768, column: 37, scope: !9506)
!9512 = !DILocation(line: 768, column: 29, scope: !9506)
!9513 = !DILocation(line: 768, column: 28, scope: !9506)
!9514 = !DILocation(line: 768, column: 26, scope: !9506)
!9515 = !DILocation(line: 772, column: 49, scope: !9462)
!9516 = !DILocation(line: 772, column: 54, scope: !9462)
!9517 = !DILocation(line: 772, column: 52, scope: !9462)
!9518 = !DILocation(line: 772, column: 63, scope: !9462)
!9519 = !DILocation(line: 772, column: 68, scope: !9462)
!9520 = !DILocation(line: 772, column: 66, scope: !9462)
!9521 = !DILocation(line: 772, column: 60, scope: !9462)
!9522 = !DILocation(line: 771, column: 47, scope: !9462)
!9523 = !DILocation(line: 771, column: 51, scope: !9462)
!9524 = !DILocation(line: 771, column: 55, scope: !9462)
!9525 = !DILocation(line: 771, column: 64, scope: !9462)
!9526 = !DILocation(line: 771, column: 53, scope: !9462)
!9527 = !DILocation(line: 771, column: 49, scope: !9462)
!9528 = !DILocation(line: 771, column: 17, scope: !9462)
!9529 = !DILocation(line: 771, column: 26, scope: !9462)
!9530 = !DILocation(line: 771, column: 78, scope: !9462)
!9531 = !DILocation(line: 774, column: 49, scope: !9462)
!9532 = !DILocation(line: 774, column: 54, scope: !9462)
!9533 = !DILocation(line: 774, column: 52, scope: !9462)
!9534 = !DILocation(line: 774, column: 63, scope: !9462)
!9535 = !DILocation(line: 774, column: 68, scope: !9462)
!9536 = !DILocation(line: 774, column: 66, scope: !9462)
!9537 = !DILocation(line: 774, column: 60, scope: !9462)
!9538 = !DILocation(line: 773, column: 47, scope: !9462)
!9539 = !DILocation(line: 773, column: 51, scope: !9462)
!9540 = !DILocation(line: 773, column: 55, scope: !9462)
!9541 = !DILocation(line: 773, column: 64, scope: !9462)
!9542 = !DILocation(line: 773, column: 53, scope: !9462)
!9543 = !DILocation(line: 773, column: 49, scope: !9462)
!9544 = !DILocation(line: 773, column: 17, scope: !9462)
!9545 = !DILocation(line: 773, column: 26, scope: !9462)
!9546 = !DILocation(line: 773, column: 78, scope: !9462)
!9547 = !DILocation(line: 775, column: 13, scope: !9462)
!9548 = !DILocation(line: 756, column: 37, scope: !9549)
!9549 = !DILexicalBlockFile(scope: !9456, file: !936, discriminator: 2)
!9550 = !DILocation(line: 756, column: 13, scope: !9549)
!9551 = distinct !{!9551, !9552}
!9552 = !DILocation(line: 756, column: 13, scope: !9449)
!9553 = !DILocation(line: 776, column: 9, scope: !9449)
!9554 = !DILocation(line: 754, column: 29, scope: !9555)
!9555 = !DILexicalBlockFile(scope: !9444, file: !936, discriminator: 2)
!9556 = !DILocation(line: 754, column: 9, scope: !9555)
!9557 = distinct !{!9557, !9558}
!9558 = !DILocation(line: 754, column: 9, scope: !9437)
!9559 = !DILocation(line: 777, column: 19, scope: !9437)
!9560 = !DILocation(line: 777, column: 16, scope: !9437)
!9561 = !DILocation(line: 778, column: 5, scope: !9437)
!9562 = !DILocation(line: 752, column: 45, scope: !9563)
!9563 = !DILexicalBlockFile(scope: !9431, file: !936, discriminator: 2)
!9564 = !DILocation(line: 752, column: 5, scope: !9563)
!9565 = distinct !{!9565, !9566}
!9566 = !DILocation(line: 752, column: 5, scope: !9350)
!9567 = !DILocation(line: 779, column: 1, scope: !9350)
!9568 = distinct !DISubprogram(name: "NEG_SSR32", scope: !5057, file: !5057, line: 115, type: !9569, isLocal: true, isDefinition: true, scopeLine: 115, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!9569 = !DISubroutineType(types: !9570)
!9570 = !{!9571, !9571, !1136}
!9571 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !905, line: 38, baseType: !914)
!9572 = !DILocalVariable(name: "a", arg: 1, scope: !9568, file: !5057, line: 115, type: !9571)
!9573 = !DILocation(line: 115, column: 42, scope: !9568)
!9574 = !DILocalVariable(name: "s", arg: 2, scope: !9568, file: !5057, line: 115, type: !1136)
!9575 = !DILocation(line: 115, column: 52, scope: !9568)
!9576 = !DILocation(line: 116, column: 5, scope: !9568)
!9577 = !DILocation(line: 118, column: 29, scope: !9568)
!9578 = !DILocation(line: 118, column: 28, scope: !9568)
!9579 = !DILocation(line: 118, column: 18, scope: !9568)
!9580 = !{i32 185829, i32 185843}
!9581 = !DILocation(line: 120, column: 12, scope: !9568)
!9582 = !DILocation(line: 120, column: 5, scope: !9568)
!9583 = distinct !DISubprogram(name: "decode_end", scope: !936, file: !936, line: 274, type: !5304, isLocal: true, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!9584 = !DILocalVariable(name: "s", arg: 1, scope: !9583, file: !936, line: 274, type: !1664)
!9585 = !DILocation(line: 274, column: 62, scope: !9583)
!9586 = !DILocalVariable(name: "i", scope: !9583, file: !936, line: 276, type: !914)
!9587 = !DILocation(line: 276, column: 9, scope: !9583)
!9588 = !DILocation(line: 278, column: 15, scope: !9583)
!9589 = !DILocation(line: 278, column: 18, scope: !9583)
!9590 = !DILocation(line: 278, column: 14, scope: !9583)
!9591 = !DILocation(line: 278, column: 5, scope: !9583)
!9592 = !DILocation(line: 280, column: 12, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9583, file: !936, line: 280, column: 5)
!9594 = !DILocation(line: 280, column: 10, scope: !9593)
!9595 = !DILocation(line: 280, column: 17, scope: !9596)
!9596 = !DILexicalBlockFile(scope: !9597, file: !936, discriminator: 1)
!9597 = distinct !DILexicalBlock(scope: !9593, file: !936, line: 280, column: 5)
!9598 = !DILocation(line: 280, column: 19, scope: !9596)
!9599 = !DILocation(line: 280, column: 5, scope: !9596)
!9600 = !DILocation(line: 281, column: 34, scope: !9597)
!9601 = !DILocation(line: 281, column: 22, scope: !9597)
!9602 = !DILocation(line: 281, column: 25, scope: !9597)
!9603 = !DILocation(line: 281, column: 9, scope: !9597)
!9604 = !DILocation(line: 280, column: 36, scope: !9605)
!9605 = !DILexicalBlockFile(scope: !9597, file: !936, discriminator: 2)
!9606 = !DILocation(line: 280, column: 5, scope: !9605)
!9607 = distinct !{!9607, !9608}
!9608 = !DILocation(line: 280, column: 5, scope: !9583)
!9609 = !DILocation(line: 283, column: 5, scope: !9583)
!9610 = distinct !DISubprogram(name: "flush", scope: !936, file: !936, line: 1943, type: !3768, isLocal: true, isDefinition: true, scopeLine: 1944, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1891)
!9611 = !DILocalVariable(name: "s", arg: 1, scope: !9610, file: !936, line: 1943, type: !1664)
!9612 = !DILocation(line: 1943, column: 36, scope: !9610)
!9613 = !DILocalVariable(name: "i", scope: !9610, file: !936, line: 1945, type: !914)
!9614 = !DILocation(line: 1945, column: 9, scope: !9610)
!9615 = !DILocation(line: 1948, column: 12, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9610, file: !936, line: 1948, column: 5)
!9617 = !DILocation(line: 1948, column: 10, scope: !9616)
!9618 = !DILocation(line: 1948, column: 17, scope: !9619)
!9619 = !DILexicalBlockFile(scope: !9620, file: !936, discriminator: 1)
!9620 = distinct !DILexicalBlock(scope: !9616, file: !936, line: 1948, column: 5)
!9621 = !DILocation(line: 1948, column: 21, scope: !9619)
!9622 = !DILocation(line: 1948, column: 24, scope: !9619)
!9623 = !DILocation(line: 1948, column: 19, scope: !9619)
!9624 = !DILocation(line: 1948, column: 5, scope: !9619)
!9625 = !DILocation(line: 1949, column: 27, scope: !9620)
!9626 = !DILocation(line: 1949, column: 16, scope: !9620)
!9627 = !DILocation(line: 1949, column: 19, scope: !9620)
!9628 = !DILocation(line: 1949, column: 30, scope: !9620)
!9629 = !DILocation(line: 1949, column: 9, scope: !9620)
!9630 = !DILocation(line: 1949, column: 38, scope: !9620)
!9631 = !DILocation(line: 1949, column: 41, scope: !9620)
!9632 = !DILocation(line: 1949, column: 59, scope: !9620)
!9633 = !DILocation(line: 1948, column: 38, scope: !9634)
!9634 = !DILexicalBlockFile(scope: !9620, file: !936, discriminator: 2)
!9635 = !DILocation(line: 1948, column: 5, scope: !9634)
!9636 = distinct !{!9636, !9637}
!9637 = !DILocation(line: 1948, column: 5, scope: !9610)
!9638 = !DILocation(line: 1951, column: 5, scope: !9610)
!9639 = !DILocation(line: 1951, column: 8, scope: !9610)
!9640 = !DILocation(line: 1951, column: 20, scope: !9610)
!9641 = !DILocation(line: 1952, column: 5, scope: !9610)
!9642 = !DILocation(line: 1952, column: 8, scope: !9610)
!9643 = !DILocation(line: 1952, column: 21, scope: !9610)
!9644 = !DILocation(line: 1953, column: 5, scope: !9610)
!9645 = !DILocation(line: 1953, column: 8, scope: !9610)
!9646 = !DILocation(line: 1953, column: 17, scope: !9610)
!9647 = !DILocation(line: 1954, column: 1, scope: !9610)
