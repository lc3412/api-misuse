; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--on2avc.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--on2avc.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVRational = type { i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, {}*, i32, void (%struct.MpegEncContext*)*, {}*, {}*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%struct.On2AVCMode = type { i32, i32, i32* }
%struct.On2AVCContext = type { %struct.AVCodecContext*, %struct.AVFloatDSPContext*, %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, void (%struct.On2AVCContext*, float*, float*, i32)*, i32, %struct.On2AVCMode*, i32, i32, i32, i32, i32, i32*, [8 x i32], i32, [112 x i32], i32, [112 x i8], [112 x i8], i32, [112 x float], %struct.VLC, [16 x %struct.VLC], [128 x float], [2 x [1024 x float]], [2 x [1024 x float]], [2048 x float], [1024 x float], [1024 x float], [128 x float] }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%struct.GetByteContext = type { i8*, i8*, i8* }
%union.unaligned_16 = type { i16 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%union.unaligned_32 = type { i32 }
%union.anon = type { i32 }

@.str = private unnamed_addr constant [7 x i8] c"on2avc\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"On2 Audio for Video Codec\00", align 1
@.compoundliteral = internal constant [2 x i32] [i32 8, i32 -1], align 4
@ff_on2avc_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 86081, i32 2, %struct.AVRational* null, i32* null, i32* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral, i32 0, i32 0), i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 36224, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @on2avc_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @on2avc_decode_frame, i32 (%struct.AVCodecContext*)* @on2avc_decode_close, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* null, i32 2, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.2 = private unnamed_addr constant [30 x i8] c"Decoding more than 2 channels\00", align 1
@.str.3 = private unnamed_addr constant [51 x i8] c"Stereo mode support is not good, patch is welcome\0A\00", align 1
@ff_on2avc_window_long_24000 = external constant [1024 x float], align 16
@ff_on2avc_window_long_32000 = external constant [1024 x float], align 16
@ff_on2avc_window_short = external constant [128 x float], align 16
@ff_on2avc_modes_40 = external constant [8 x %struct.On2AVCMode], align 16
@ff_on2avc_modes_44 = external constant [8 x %struct.On2AVCMode], align 16
@ff_on2avc_scale_diff_bits = external constant [0 x i8], align 1
@ff_on2avc_scale_diff_codes = external constant [0 x i32], align 4
@ff_on2avc_quad_cb_elems = external constant [0 x i32], align 4
@ff_on2avc_quad_cb_bits = external constant [0 x i8*], align 8
@ff_on2avc_quad_cb_codes = external constant [0 x i32*], align 8
@ff_on2avc_quad_cb_syms = external constant [0 x i16*], align 8
@ff_on2avc_pair_cb_elems = external constant [0 x i32], align 4
@ff_on2avc_pair_cb_bits = external constant [0 x i8*], align 8
@ff_on2avc_pair_cb_codes = external constant [0 x i16*], align 8
@ff_on2avc_pair_cb_syms = external constant [0 x i16*], align 8
@.str.4 = private unnamed_addr constant [17 x i8] c"Cannot init VLC\0A\00", align 1
@ff_on2avc_tab_10_1 = external constant [0 x double], align 8
@ff_on2avc_tabs_4_10_1 = external constant [4 x double*], align 16
@ff_on2avc_tab_10_2 = external constant [0 x double], align 8
@ff_on2avc_tabs_4_10_2 = external constant [4 x double*], align 16
@ff_on2avc_tab_20_1 = external constant [0 x double], align 8
@ff_on2avc_tabs_9_20_1 = external constant [9 x double*], align 16
@ff_on2avc_tab_20_2 = external constant [0 x double], align 8
@ff_on2avc_tabs_9_20_2 = external constant [9 x double*], align 16
@ff_on2avc_tab_84_1 = external constant [0 x double], align 8
@ff_on2avc_tabs_20_84_1 = external constant [20 x double*], align 16
@ff_on2avc_tab_84_2 = external constant [0 x double], align 8
@ff_on2avc_tabs_20_84_2 = external constant [20 x double*], align 16
@ff_on2avc_tab_84_3 = external constant [0 x double], align 8
@ff_on2avc_tabs_20_84_3 = external constant [20 x double*], align 16
@ff_on2avc_tab_84_4 = external constant [0 x double], align 8
@ff_on2avc_tabs_20_84_4 = external constant [20 x double*], align 16
@ff_on2avc_tab_40_1 = external constant [0 x double], align 8
@ff_on2avc_tabs_19_40_1 = external constant [19 x double*], align 16
@ff_on2avc_tab_40_2 = external constant [0 x double], align 8
@ff_on2avc_tabs_19_40_2 = external constant [19 x double*], align 16
@ff_on2avc_ctab_1 = external constant [2048 x float], align 16
@ff_on2avc_ctab_2 = external constant [2048 x float], align 16
@ff_on2avc_ctab_3 = external constant [2048 x float], align 16
@ff_on2avc_ctab_4 = external constant [2048 x float], align 16
@.str.5 = private unnamed_addr constant [26 x i8] c"Invalid subframe size %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"No subframes present\0A\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"enh bit set\0A\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"Invalid band type run\0A\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"Invalid scale value %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [39 x i8] c"Too large golomb code in get_egolomb.\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"buf_size >= 0\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"libavcodec/bytestream.h\00", align 1

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @on2avc_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !1667 {
entry:
  %x.addr.i114 = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr.i114, metadata !1669, metadata !1675), !dbg !1676
  %x.addr.i = alloca double, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr.i, metadata !1669, metadata !1675), !dbg !1680
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %c = alloca %struct.On2AVCContext*, align 8
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  %idx93 = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !1684, metadata !1675), !dbg !1685
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c, metadata !1686, metadata !1675), !dbg !1851
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1852
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !1853
  %1 = load i8*, i8** %priv_data, align 8, !dbg !1853
  %2 = bitcast i8* %1 to %struct.On2AVCContext*, !dbg !1852
  store %struct.On2AVCContext* %2, %struct.On2AVCContext** %c, align 8, !dbg !1851
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1854, metadata !1675), !dbg !1855
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1856
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i32 0, i32 83, !dbg !1858
  %4 = load i32, i32* %channels, align 4, !dbg !1858
  %cmp = icmp ugt i32 %4, 2, !dbg !1859
  br i1 %cmp, label %if.then, label %if.end, !dbg !1860

if.then:                                          ; preds = %entry
  %5 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1861
  %6 = bitcast %struct.AVCodecContext* %5 to i8*, !dbg !1861
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0)), !dbg !1863
  store i32 -1163346256, i32* %retval, align 4, !dbg !1864
  br label %return, !dbg !1864

if.end:                                           ; preds = %entry
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1865
  %8 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1866
  %avctx1 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %8, i32 0, i32 0, !dbg !1867
  store %struct.AVCodecContext* %7, %struct.AVCodecContext** %avctx1, align 32, !dbg !1868
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1869
  %sample_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i32 0, i32 84, !dbg !1870
  store i32 8, i32* %sample_fmt, align 8, !dbg !1871
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1872
  %channels2 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 83, !dbg !1873
  %11 = load i32, i32* %channels2, align 4, !dbg !1873
  %cmp3 = icmp eq i32 %11, 2, !dbg !1874
  %cond = select i1 %cmp3, i32 3, i32 4, !dbg !1875
  %conv = sext i32 %cond to i64, !dbg !1875
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1876
  %channel_layout = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 89, !dbg !1877
  store i64 %conv, i64* %channel_layout, align 8, !dbg !1878
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1879
  %codec_tag = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 5, !dbg !1880
  %14 = load i32, i32* %codec_tag, align 4, !dbg !1880
  %cmp4 = icmp eq i32 %14, 1280, !dbg !1881
  %conv5 = zext i1 %cmp4 to i32, !dbg !1881
  %15 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1882
  %is_av500 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %15, i32 0, i32 10, !dbg !1883
  store i32 %conv5, i32* %is_av500, align 8, !dbg !1884
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1885
  %channels6 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %16, i32 0, i32 83, !dbg !1887
  %17 = load i32, i32* %channels6, align 4, !dbg !1887
  %cmp7 = icmp eq i32 %17, 2, !dbg !1888
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !1889

if.then9:                                         ; preds = %if.end
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1890
  %19 = bitcast %struct.AVCodecContext* %18 to i8*, !dbg !1890
  call void (i8*, i32, i8*, ...) @av_log(i8* %19, i32 24, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i32 0, i32 0)), !dbg !1891
  br label %if.end10, !dbg !1891

if.end10:                                         ; preds = %if.then9, %if.end
  store i32 0, i32* %i, align 4, !dbg !1892
  br label %for.cond, !dbg !1893

for.cond:                                         ; preds = %for.inc, %if.end10
  %20 = load i32, i32* %i, align 4, !dbg !1894
  %cmp11 = icmp slt i32 %20, 20, !dbg !1896
  br i1 %cmp11, label %for.body, label %for.end, !dbg !1897

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %i, align 4, !dbg !1898
  %conv13 = sitofp i32 %21 to double, !dbg !1898
  %mul = fmul double %conv13, 1.000000e-01, !dbg !1899
  store double %mul, double* %x.addr.i, align 8, !dbg !1900
  %22 = load double, double* %x.addr.i, align 8, !dbg !1901
  %mul.i = fmul double 0x400A934F0979A371, %22, !dbg !1902
  %call.i = call double @exp2(double %mul.i) #10, !dbg !1903
  %mul14 = fmul double %call.i, 1.600000e+01, !dbg !1904
  %sub = fsub double %mul14, 1.000000e-02, !dbg !1905
  %call15 = call double @ceil(double %sub) #2, !dbg !1906
  %div = fdiv double %call15, 3.200000e+01, !dbg !1907
  %conv16 = fptrunc double %div to float, !dbg !1908
  %23 = load i32, i32* %i, align 4, !dbg !1909
  %idxprom = sext i32 %23 to i64, !dbg !1910
  %24 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1910
  %scale_tab = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %24, i32 0, i32 28, !dbg !1911
  %arrayidx = getelementptr inbounds [128 x float], [128 x float]* %scale_tab, i64 0, i64 %idxprom, !dbg !1910
  store float %conv16, float* %arrayidx, align 4, !dbg !1912
  br label %for.inc, !dbg !1910

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !1913
  %inc = add nsw i32 %25, 1, !dbg !1913
  store i32 %inc, i32* %i, align 4, !dbg !1913
  br label %for.cond, !dbg !1915, !llvm.loop !1916

for.end:                                          ; preds = %for.cond
  br label %for.cond17, !dbg !1918

for.cond17:                                       ; preds = %for.inc31, %for.end
  %26 = load i32, i32* %i, align 4, !dbg !1919
  %cmp18 = icmp slt i32 %26, 128, !dbg !1921
  br i1 %cmp18, label %for.body20, label %for.end33, !dbg !1922

for.body20:                                       ; preds = %for.cond17
  %27 = load i32, i32* %i, align 4, !dbg !1923
  %conv21 = sitofp i32 %27 to double, !dbg !1923
  %mul22 = fmul double %conv21, 1.000000e-01, !dbg !1924
  store double %mul22, double* %x.addr.i114, align 8, !dbg !1925
  %28 = load double, double* %x.addr.i114, align 8, !dbg !1926
  %mul.i115 = fmul double 0x400A934F0979A371, %28, !dbg !1927
  %call.i116 = call double @exp2(double %mul.i115) #10, !dbg !1928
  %mul24 = fmul double %call.i116, 5.000000e-01, !dbg !1929
  %sub25 = fsub double %mul24, 1.000000e-02, !dbg !1930
  %call26 = call double @ceil(double %sub25) #2, !dbg !1931
  %conv27 = fptrunc double %call26 to float, !dbg !1932
  %29 = load i32, i32* %i, align 4, !dbg !1933
  %idxprom28 = sext i32 %29 to i64, !dbg !1934
  %30 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1934
  %scale_tab29 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %30, i32 0, i32 28, !dbg !1935
  %arrayidx30 = getelementptr inbounds [128 x float], [128 x float]* %scale_tab29, i64 0, i64 %idxprom28, !dbg !1934
  store float %conv27, float* %arrayidx30, align 4, !dbg !1936
  br label %for.inc31, !dbg !1934

for.inc31:                                        ; preds = %for.body20
  %31 = load i32, i32* %i, align 4, !dbg !1937
  %inc32 = add nsw i32 %31, 1, !dbg !1937
  store i32 %inc32, i32* %i, align 4, !dbg !1937
  br label %for.cond17, !dbg !1939, !llvm.loop !1940

for.end33:                                        ; preds = %for.cond17
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1941
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %32, i32 0, i32 82, !dbg !1943
  %33 = load i32, i32* %sample_rate, align 8, !dbg !1943
  %cmp34 = icmp slt i32 %33, 32000, !dbg !1944
  br i1 %cmp34, label %if.then39, label %lor.lhs.false, !dbg !1945

lor.lhs.false:                                    ; preds = %for.end33
  %34 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1946
  %channels36 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %34, i32 0, i32 83, !dbg !1948
  %35 = load i32, i32* %channels36, align 4, !dbg !1948
  %cmp37 = icmp eq i32 %35, 1, !dbg !1949
  br i1 %cmp37, label %if.then39, label %if.else, !dbg !1950

if.then39:                                        ; preds = %lor.lhs.false, %for.end33
  %36 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1951
  %long_win = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %36, i32 0, i32 33, !dbg !1952
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %long_win, i32 0, i32 0, !dbg !1953
  %37 = bitcast float* %arraydecay to i8*, !dbg !1953
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* bitcast ([1024 x float]* @ff_on2avc_window_long_24000 to i8*), i64 4096, i32 16, i1 false), !dbg !1953
  br label %if.end42, !dbg !1953

if.else:                                          ; preds = %lor.lhs.false
  %38 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1954
  %long_win40 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %38, i32 0, i32 33, !dbg !1955
  %arraydecay41 = getelementptr inbounds [1024 x float], [1024 x float]* %long_win40, i32 0, i32 0, !dbg !1956
  %39 = bitcast float* %arraydecay41 to i8*, !dbg !1956
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* bitcast ([1024 x float]* @ff_on2avc_window_long_32000 to i8*), i64 4096, i32 16, i1 false), !dbg !1956
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then39
  %40 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1957
  %short_win = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %40, i32 0, i32 34, !dbg !1958
  %arraydecay43 = getelementptr inbounds [128 x float], [128 x float]* %short_win, i32 0, i32 0, !dbg !1959
  %41 = bitcast float* %arraydecay43 to i8*, !dbg !1959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* bitcast ([128 x float]* @ff_on2avc_window_short to i8*), i64 512, i32 16, i1 false), !dbg !1959
  %42 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1960
  %sample_rate44 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %42, i32 0, i32 82, !dbg !1961
  %43 = load i32, i32* %sample_rate44, align 8, !dbg !1961
  %cmp45 = icmp sle i32 %43, 40000, !dbg !1962
  %cond47 = select i1 %cmp45, %struct.On2AVCMode* getelementptr inbounds ([8 x %struct.On2AVCMode], [8 x %struct.On2AVCMode]* @ff_on2avc_modes_40, i32 0, i32 0), %struct.On2AVCMode* getelementptr inbounds ([8 x %struct.On2AVCMode], [8 x %struct.On2AVCMode]* @ff_on2avc_modes_44, i32 0, i32 0), !dbg !1963
  %44 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1964
  %modes = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %44, i32 0, i32 11, !dbg !1965
  store %struct.On2AVCMode* %cond47, %struct.On2AVCMode** %modes, align 16, !dbg !1966
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1967
  %sample_rate48 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 82, !dbg !1968
  %46 = load i32, i32* %sample_rate48, align 8, !dbg !1968
  %cmp49 = icmp sle i32 %46, 40000, !dbg !1969
  %cond51 = select i1 %cmp49, void (%struct.On2AVCContext*, float*, float*, i32)* @wtf_40, void (%struct.On2AVCContext*, float*, float*, i32)* @wtf_44, !dbg !1970
  %47 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1971
  %wtf = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %47, i32 0, i32 9, !dbg !1972
  store void (%struct.On2AVCContext*, float*, float*, i32)* %cond51, void (%struct.On2AVCContext*, float*, float*, i32)** %wtf, align 32, !dbg !1973
  %48 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1974
  %mdct = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %48, i32 0, i32 2, !dbg !1975
  %call52 = call i32 @ff_mdct_init(%struct.FFTContext* %mdct, i32 11, i32 1, double 0x3E60000000000000), !dbg !1976
  %49 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1977
  %mdct_half = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %49, i32 0, i32 3, !dbg !1978
  %call53 = call i32 @ff_mdct_init(%struct.FFTContext* %mdct_half, i32 10, i32 1, double 0x3E70000000000000), !dbg !1979
  %50 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1980
  %mdct_small = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %50, i32 0, i32 4, !dbg !1981
  %call54 = call i32 @ff_mdct_init(%struct.FFTContext* %mdct_small, i32 8, i32 1, double 0x3E90000000000000), !dbg !1982
  %51 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1983
  %fft128 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %51, i32 0, i32 5, !dbg !1984
  %call55 = call i32 @ff_fft_init(%struct.FFTContext* %fft128, i32 6, i32 0), !dbg !1985
  %52 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1986
  %fft256 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %52, i32 0, i32 6, !dbg !1987
  %call56 = call i32 @ff_fft_init(%struct.FFTContext* %fft256, i32 7, i32 0), !dbg !1988
  %53 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1989
  %fft512 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %53, i32 0, i32 7, !dbg !1990
  %call57 = call i32 @ff_fft_init(%struct.FFTContext* %fft512, i32 8, i32 1), !dbg !1991
  %54 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1992
  %fft1024 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %54, i32 0, i32 8, !dbg !1993
  %call58 = call i32 @ff_fft_init(%struct.FFTContext* %fft1024, i32 9, i32 1), !dbg !1994
  %55 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !1995
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %55, i32 0, i32 13, !dbg !1996
  %56 = load i32, i32* %flags, align 4, !dbg !1996
  %and = and i32 %56, 8388608, !dbg !1997
  %call59 = call %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32 %and), !dbg !1998
  %57 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !1999
  %fdsp = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %57, i32 0, i32 1, !dbg !2000
  store %struct.AVFloatDSPContext* %call59, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !2001
  %58 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2002
  %fdsp60 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %58, i32 0, i32 1, !dbg !2004
  %59 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp60, align 8, !dbg !2004
  %tobool = icmp ne %struct.AVFloatDSPContext* %59, null, !dbg !2002
  br i1 %tobool, label %if.end62, label %if.then61, !dbg !2005

if.then61:                                        ; preds = %if.end42
  store i32 -12, i32* %retval, align 4, !dbg !2006
  br label %return, !dbg !2006

if.end62:                                         ; preds = %if.end42
  %60 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2007
  %scale_diff = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %60, i32 0, i32 26, !dbg !2009
  %call63 = call i32 @ff_init_vlc_sparse(%struct.VLC* %scale_diff, i32 9, i32 121, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @ff_on2avc_scale_diff_bits, i32 0, i32 0), i32 1, i32 1, i8* bitcast ([0 x i32]* @ff_on2avc_scale_diff_codes to i8*), i32 4, i32 4, i8* null, i32 0, i32 0, i32 0), !dbg !2010
  %tobool64 = icmp ne i32 %call63, 0, !dbg !2010
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !2011

if.then65:                                        ; preds = %if.end62
  br label %vlc_fail, !dbg !2012

if.end66:                                         ; preds = %if.end62
  store i32 1, i32* %i, align 4, !dbg !2014
  br label %for.cond67, !dbg !2016

for.cond67:                                       ; preds = %for.inc86, %if.end66
  %61 = load i32, i32* %i, align 4, !dbg !2017
  %cmp68 = icmp slt i32 %61, 9, !dbg !2020
  br i1 %cmp68, label %for.body70, label %for.end88, !dbg !2021

for.body70:                                       ; preds = %for.cond67
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !2022, metadata !1675), !dbg !2024
  %62 = load i32, i32* %i, align 4, !dbg !2025
  %sub71 = sub nsw i32 %62, 1, !dbg !2026
  store i32 %sub71, i32* %idx, align 4, !dbg !2024
  %63 = load i32, i32* %i, align 4, !dbg !2027
  %idxprom72 = sext i32 %63 to i64, !dbg !2029
  %64 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2029
  %cb_vlc = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %64, i32 0, i32 27, !dbg !2030
  %arrayidx73 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %cb_vlc, i64 0, i64 %idxprom72, !dbg !2029
  %65 = load i32, i32* %idx, align 4, !dbg !2031
  %idxprom74 = sext i32 %65 to i64, !dbg !2032
  %arrayidx75 = getelementptr inbounds [0 x i32], [0 x i32]* @ff_on2avc_quad_cb_elems, i64 0, i64 %idxprom74, !dbg !2032
  %66 = load i32, i32* %arrayidx75, align 4, !dbg !2032
  %67 = load i32, i32* %idx, align 4, !dbg !2033
  %idxprom76 = sext i32 %67 to i64, !dbg !2034
  %arrayidx77 = getelementptr inbounds [0 x i8*], [0 x i8*]* @ff_on2avc_quad_cb_bits, i64 0, i64 %idxprom76, !dbg !2034
  %68 = load i8*, i8** %arrayidx77, align 8, !dbg !2034
  %69 = load i32, i32* %idx, align 4, !dbg !2035
  %idxprom78 = sext i32 %69 to i64, !dbg !2036
  %arrayidx79 = getelementptr inbounds [0 x i32*], [0 x i32*]* @ff_on2avc_quad_cb_codes, i64 0, i64 %idxprom78, !dbg !2036
  %70 = load i32*, i32** %arrayidx79, align 8, !dbg !2036
  %71 = bitcast i32* %70 to i8*, !dbg !2036
  %72 = load i32, i32* %idx, align 4, !dbg !2037
  %idxprom80 = sext i32 %72 to i64, !dbg !2038
  %arrayidx81 = getelementptr inbounds [0 x i16*], [0 x i16*]* @ff_on2avc_quad_cb_syms, i64 0, i64 %idxprom80, !dbg !2038
  %73 = load i16*, i16** %arrayidx81, align 8, !dbg !2038
  %74 = bitcast i16* %73 to i8*, !dbg !2038
  %call82 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx73, i32 9, i32 %66, i8* %68, i32 1, i32 1, i8* %71, i32 4, i32 4, i8* %74, i32 2, i32 2, i32 0), !dbg !2039
  %tobool83 = icmp ne i32 %call82, 0, !dbg !2039
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !2040

if.then84:                                        ; preds = %for.body70
  br label %vlc_fail, !dbg !2041

if.end85:                                         ; preds = %for.body70
  br label %for.inc86, !dbg !2043

for.inc86:                                        ; preds = %if.end85
  %75 = load i32, i32* %i, align 4, !dbg !2044
  %inc87 = add nsw i32 %75, 1, !dbg !2044
  store i32 %inc87, i32* %i, align 4, !dbg !2044
  br label %for.cond67, !dbg !2046, !llvm.loop !2047

for.end88:                                        ; preds = %for.cond67
  store i32 9, i32* %i, align 4, !dbg !2049
  br label %for.cond89, !dbg !2051

for.cond89:                                       ; preds = %for.inc110, %for.end88
  %76 = load i32, i32* %i, align 4, !dbg !2052
  %cmp90 = icmp slt i32 %76, 16, !dbg !2055
  br i1 %cmp90, label %for.body92, label %for.end112, !dbg !2056

for.body92:                                       ; preds = %for.cond89
  call void @llvm.dbg.declare(metadata i32* %idx93, metadata !2057, metadata !1675), !dbg !2059
  %77 = load i32, i32* %i, align 4, !dbg !2060
  %sub94 = sub nsw i32 %77, 9, !dbg !2061
  store i32 %sub94, i32* %idx93, align 4, !dbg !2059
  %78 = load i32, i32* %i, align 4, !dbg !2062
  %idxprom95 = sext i32 %78 to i64, !dbg !2064
  %79 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2064
  %cb_vlc96 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %79, i32 0, i32 27, !dbg !2065
  %arrayidx97 = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %cb_vlc96, i64 0, i64 %idxprom95, !dbg !2064
  %80 = load i32, i32* %idx93, align 4, !dbg !2066
  %idxprom98 = sext i32 %80 to i64, !dbg !2067
  %arrayidx99 = getelementptr inbounds [0 x i32], [0 x i32]* @ff_on2avc_pair_cb_elems, i64 0, i64 %idxprom98, !dbg !2067
  %81 = load i32, i32* %arrayidx99, align 4, !dbg !2067
  %82 = load i32, i32* %idx93, align 4, !dbg !2068
  %idxprom100 = sext i32 %82 to i64, !dbg !2069
  %arrayidx101 = getelementptr inbounds [0 x i8*], [0 x i8*]* @ff_on2avc_pair_cb_bits, i64 0, i64 %idxprom100, !dbg !2069
  %83 = load i8*, i8** %arrayidx101, align 8, !dbg !2069
  %84 = load i32, i32* %idx93, align 4, !dbg !2070
  %idxprom102 = sext i32 %84 to i64, !dbg !2071
  %arrayidx103 = getelementptr inbounds [0 x i16*], [0 x i16*]* @ff_on2avc_pair_cb_codes, i64 0, i64 %idxprom102, !dbg !2071
  %85 = load i16*, i16** %arrayidx103, align 8, !dbg !2071
  %86 = bitcast i16* %85 to i8*, !dbg !2071
  %87 = load i32, i32* %idx93, align 4, !dbg !2072
  %idxprom104 = sext i32 %87 to i64, !dbg !2073
  %arrayidx105 = getelementptr inbounds [0 x i16*], [0 x i16*]* @ff_on2avc_pair_cb_syms, i64 0, i64 %idxprom104, !dbg !2073
  %88 = load i16*, i16** %arrayidx105, align 8, !dbg !2073
  %89 = bitcast i16* %88 to i8*, !dbg !2073
  %call106 = call i32 @ff_init_vlc_sparse(%struct.VLC* %arrayidx97, i32 9, i32 %81, i8* %83, i32 1, i32 1, i8* %86, i32 2, i32 2, i8* %89, i32 2, i32 2, i32 0), !dbg !2074
  %tobool107 = icmp ne i32 %call106, 0, !dbg !2074
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !2075

if.then108:                                       ; preds = %for.body92
  br label %vlc_fail, !dbg !2076

if.end109:                                        ; preds = %for.body92
  br label %for.inc110, !dbg !2078

for.inc110:                                       ; preds = %if.end109
  %90 = load i32, i32* %i, align 4, !dbg !2079
  %inc111 = add nsw i32 %90, 1, !dbg !2079
  store i32 %inc111, i32* %i, align 4, !dbg !2079
  br label %for.cond89, !dbg !2081, !llvm.loop !2082

for.end112:                                       ; preds = %for.cond89
  store i32 0, i32* %retval, align 4, !dbg !2084
  br label %return, !dbg !2084

vlc_fail:                                         ; preds = %if.then108, %if.then84, %if.then65
  %91 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2085
  %92 = bitcast %struct.AVCodecContext* %91 to i8*, !dbg !2085
  call void (i8*, i32, i8*, ...) @av_log(i8* %92, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0)), !dbg !2086
  %93 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2087
  call void @on2avc_free_vlcs(%struct.On2AVCContext* %93), !dbg !2088
  %94 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2089
  %fdsp113 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %94, i32 0, i32 1, !dbg !2090
  %95 = bitcast %struct.AVFloatDSPContext** %fdsp113 to i8*, !dbg !2091
  call void @av_freep(i8* %95), !dbg !2092
  store i32 -12, i32* %retval, align 4, !dbg !2093
  br label %return, !dbg !2093

return:                                           ; preds = %vlc_fail, %for.end112, %if.then61, %if.then
  %96 = load i32, i32* %retval, align 4, !dbg !2094
  ret i32 %96, !dbg !2094
}

; Function Attrs: nounwind uwtable
define internal i32 @on2avc_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame_ptr, %struct.AVPacket* %avpkt) #1 !dbg !2095 {
entry:
  %g.addr.i100 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i100, metadata !2096, metadata !1675), !dbg !2108
  %size.addr.i101 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i101, metadata !2113, metadata !1675), !dbg !2114
  %g.addr.i88 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i88, metadata !2115, metadata !1675), !dbg !2119
  %buf.addr.i89 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i89, metadata !2121, metadata !1675), !dbg !2122
  %buf_size.addr.i90 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i90, metadata !2123, metadata !1675), !dbg !2124
  %g.addr.i81 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i81, metadata !2125, metadata !1675), !dbg !2129
  %b.addr.i.i.i61 = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i61, metadata !2132, metadata !1675), !dbg !2137
  %g.addr.i.i62 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i62, metadata !2145, metadata !1675), !dbg !2146
  %retval.i63 = alloca i32, align 4
  %g.addr.i64 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i64, metadata !2147, metadata !1675), !dbg !2148
  %g.addr.i54 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i54, metadata !2125, metadata !1675), !dbg !2149
  %g.addr.i45 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i45, metadata !2096, metadata !1675), !dbg !2153
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !2113, metadata !1675), !dbg !2155
  %b.addr.i.i.i = alloca i8**, align 8
  call void @llvm.dbg.declare(metadata i8*** %b.addr.i.i.i, metadata !2132, metadata !1675), !dbg !2156
  %g.addr.i.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i.i, metadata !2145, metadata !1675), !dbg !2160
  %retval.i = alloca i32, align 4
  %g.addr.i37 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i37, metadata !2147, metadata !1675), !dbg !2161
  %g.addr.i34 = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i34, metadata !2125, metadata !1675), !dbg !2162
  %g.addr.i = alloca %struct.GetByteContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetByteContext** %g.addr.i, metadata !2115, metadata !1675), !dbg !2164
  %buf.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr.i, metadata !2121, metadata !1675), !dbg !2166
  %buf_size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr.i, metadata !2123, metadata !1675), !dbg !2167
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame_ptr.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %frame = alloca %struct.AVFrame*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %c = alloca %struct.On2AVCContext*, align 8
  %gb = alloca %struct.GetByteContext, align 8
  %num_frames = alloca i32, align 4
  %frame_size = alloca i32, align 4
  %audio_off = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2168, metadata !1675), !dbg !2169
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !2170, metadata !1675), !dbg !2171
  store i32* %got_frame_ptr, i32** %got_frame_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame_ptr.addr, metadata !2172, metadata !1675), !dbg !2173
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !2174, metadata !1675), !dbg !2175
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %frame, metadata !2176, metadata !1675), !dbg !2177
  %0 = load i8*, i8** %data.addr, align 8, !dbg !2178
  %1 = bitcast i8* %0 to %struct.AVFrame*, !dbg !2178
  store %struct.AVFrame* %1, %struct.AVFrame** %frame, align 8, !dbg !2177
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !2179, metadata !1675), !dbg !2180
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2181
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 3, !dbg !2182
  %3 = load i8*, i8** %data1, align 8, !dbg !2182
  store i8* %3, i8** %buf, align 8, !dbg !2180
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !2183, metadata !1675), !dbg !2184
  %4 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !2185
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %4, i32 0, i32 4, !dbg !2186
  %5 = load i32, i32* %size, align 8, !dbg !2186
  store i32 %5, i32* %buf_size, align 4, !dbg !2184
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c, metadata !2187, metadata !1675), !dbg !2188
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2189
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %6, i32 0, i32 6, !dbg !2190
  %7 = load i8*, i8** %priv_data, align 8, !dbg !2190
  %8 = bitcast i8* %7 to %struct.On2AVCContext*, !dbg !2189
  store %struct.On2AVCContext* %8, %struct.On2AVCContext** %c, align 8, !dbg !2188
  call void @llvm.dbg.declare(metadata %struct.GetByteContext* %gb, metadata !2191, metadata !1675), !dbg !2192
  call void @llvm.dbg.declare(metadata i32* %num_frames, metadata !2193, metadata !1675), !dbg !2194
  store i32 0, i32* %num_frames, align 4, !dbg !2194
  call void @llvm.dbg.declare(metadata i32* %frame_size, metadata !2195, metadata !1675), !dbg !2196
  call void @llvm.dbg.declare(metadata i32* %audio_off, metadata !2197, metadata !1675), !dbg !2198
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2199, metadata !1675), !dbg !2200
  %9 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2201
  %is_av500 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %9, i32 0, i32 10, !dbg !2202
  %10 = load i32, i32* %is_av500, align 8, !dbg !2202
  %tobool = icmp ne i32 %10, 0, !dbg !2201
  br i1 %tobool, label %if.then, label %if.else, !dbg !2203

if.then:                                          ; preds = %entry
  %11 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2204
  %nb_samples = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %11, i32 0, i32 5, !dbg !2206
  store i32 1024, i32* %nb_samples, align 8, !dbg !2207
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2208
  %13 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2210
  %call = call i32 @ff_get_buffer(%struct.AVCodecContext* %12, %struct.AVFrame* %13, i32 0), !dbg !2211
  store i32 %call, i32* %ret, align 4, !dbg !2212
  %cmp = icmp slt i32 %call, 0, !dbg !2213
  br i1 %cmp, label %if.then2, label %if.end, !dbg !2214

if.then2:                                         ; preds = %if.then
  %14 = load i32, i32* %ret, align 4, !dbg !2215
  store i32 %14, i32* %retval, align 4, !dbg !2216
  br label %return, !dbg !2216

if.end:                                           ; preds = %if.then
  %15 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2217
  %16 = load i8*, i8** %buf, align 8, !dbg !2219
  %17 = load i32, i32* %buf_size, align 4, !dbg !2220
  %18 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2221
  %call3 = call i32 @on2avc_decode_subframe(%struct.On2AVCContext* %15, i8* %16, i32 %17, %struct.AVFrame* %18, i32 0), !dbg !2222
  store i32 %call3, i32* %ret, align 4, !dbg !2223
  %cmp4 = icmp slt i32 %call3, 0, !dbg !2224
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !2225

if.then5:                                         ; preds = %if.end
  %19 = load i32, i32* %ret, align 4, !dbg !2226
  store i32 %19, i32* %retval, align 4, !dbg !2227
  br label %return, !dbg !2227

if.end6:                                          ; preds = %if.end
  br label %if.end33, !dbg !2228

if.else:                                          ; preds = %entry
  %20 = load i8*, i8** %buf, align 8, !dbg !2229
  %21 = load i32, i32* %buf_size, align 4, !dbg !2230
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2231
  store i8* %20, i8** %buf.addr.i, align 8, !dbg !2231
  store i32 %21, i32* %buf_size.addr.i, align 4, !dbg !2231
  %22 = load i32, i32* %buf_size.addr.i, align 4, !dbg !2232
  %cmp.i = icmp sge i32 %22, 0, !dbg !2236
  br i1 %cmp.i, label %bytestream2_init.exit, label %if.then.i, !dbg !2237

if.then.i:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i32 0, i32 0), i32 137) #10, !dbg !2238
  call void @abort() #11, !dbg !2241
  unreachable, !dbg !2243

bytestream2_init.exit:                            ; preds = %if.else
  %23 = load i8*, i8** %buf.addr.i, align 8, !dbg !2244
  %24 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2245
  %buffer.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %24, i32 0, i32 0, !dbg !2246
  store i8* %23, i8** %buffer.i, align 8, !dbg !2247
  %25 = load i8*, i8** %buf.addr.i, align 8, !dbg !2248
  %26 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2249
  %buffer_start.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %26, i32 0, i32 2, !dbg !2250
  store i8* %25, i8** %buffer_start.i, align 8, !dbg !2251
  %27 = load i8*, i8** %buf.addr.i, align 8, !dbg !2252
  %28 = load i32, i32* %buf_size.addr.i, align 4, !dbg !2253
  %idx.ext.i = sext i32 %28 to i64, !dbg !2254
  %add.ptr.i = getelementptr inbounds i8, i8* %27, i64 %idx.ext.i, !dbg !2254
  %29 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i, align 8, !dbg !2255
  %buffer_end.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %29, i32 0, i32 1, !dbg !2256
  store i8* %add.ptr.i, i8** %buffer_end.i, align 8, !dbg !2257
  br label %while.cond, !dbg !2258

while.cond:                                       ; preds = %bytestream2_skip.exit120, %bytestream2_init.exit
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i34, align 8, !dbg !2259
  %30 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i34, align 8, !dbg !2260
  %buffer_end.i35 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %30, i32 0, i32 1, !dbg !2261
  %31 = load i8*, i8** %buffer_end.i35, align 8, !dbg !2261
  %32 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i34, align 8, !dbg !2262
  %buffer.i36 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %32, i32 0, i32 0, !dbg !2263
  %33 = load i8*, i8** %buffer.i36, align 8, !dbg !2263
  %sub.ptr.lhs.cast.i = ptrtoint i8* %31 to i64, !dbg !2264
  %sub.ptr.rhs.cast.i = ptrtoint i8* %33 to i64, !dbg !2264
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !2264
  %conv.i = trunc i64 %sub.ptr.sub.i to i32, !dbg !2260
  %cmp8 = icmp ugt i32 %conv.i, 2, !dbg !2265
  br i1 %cmp8, label %while.body, label %while.end, !dbg !2266

while.body:                                       ; preds = %while.cond
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i37, align 8, !dbg !2267
  %34 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i37, align 8, !dbg !2268
  %buffer_end.i38 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %34, i32 0, i32 1, !dbg !2270
  %35 = load i8*, i8** %buffer_end.i38, align 8, !dbg !2270
  %36 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i37, align 8, !dbg !2271
  %buffer.i39 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %36, i32 0, i32 0, !dbg !2272
  %37 = load i8*, i8** %buffer.i39, align 8, !dbg !2272
  %sub.ptr.lhs.cast.i40 = ptrtoint i8* %35 to i64, !dbg !2273
  %sub.ptr.rhs.cast.i41 = ptrtoint i8* %37 to i64, !dbg !2273
  %sub.ptr.sub.i42 = sub i64 %sub.ptr.lhs.cast.i40, %sub.ptr.rhs.cast.i41, !dbg !2273
  %cmp.i43 = icmp slt i64 %sub.ptr.sub.i42, 2, !dbg !2274
  br i1 %cmp.i43, label %if.then.i44, label %if.end.i, !dbg !2275

if.then.i44:                                      ; preds = %while.body
  %38 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i37, align 8, !dbg !2276
  %buffer_end1.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %38, i32 0, i32 1, !dbg !2279
  %39 = load i8*, i8** %buffer_end1.i, align 8, !dbg !2279
  %40 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i37, align 8, !dbg !2280
  %buffer2.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %40, i32 0, i32 0, !dbg !2281
  store i8* %39, i8** %buffer2.i, align 8, !dbg !2282
  store i32 0, i32* %retval.i, align 4, !dbg !2283
  br label %bytestream2_get_le16.exit, !dbg !2283

if.end.i:                                         ; preds = %while.body
  %41 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i37, align 8, !dbg !2284
  store %struct.GetByteContext* %41, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !2285
  %42 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i, align 8, !dbg !2286
  %buffer.i.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %42, i32 0, i32 0, !dbg !2287
  store i8** %buffer.i.i, i8*** %b.addr.i.i.i, align 8, !dbg !2288
  %43 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !2289
  %44 = load i8*, i8** %43, align 8, !dbg !2290
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %44, i64 2, !dbg !2290
  store i8* %add.ptr.i.i.i, i8** %43, align 8, !dbg !2290
  %45 = load i8**, i8*** %b.addr.i.i.i, align 8, !dbg !2291
  %46 = load i8*, i8** %45, align 8, !dbg !2292
  %add.ptr1.i.i.i = getelementptr inbounds i8, i8* %46, i64 -2, !dbg !2293
  %47 = bitcast i8* %add.ptr1.i.i.i to %union.unaligned_16*, !dbg !2294
  %l.i.i.i = bitcast %union.unaligned_16* %47 to i16*, !dbg !2294
  %48 = load i16, i16* %l.i.i.i, align 1, !dbg !2294
  %conv.i.i.i = zext i16 %48 to i32, !dbg !2295
  store i32 %conv.i.i.i, i32* %retval.i, align 4, !dbg !2296
  br label %bytestream2_get_le16.exit, !dbg !2296

bytestream2_get_le16.exit:                        ; preds = %if.then.i44, %if.end.i
  %49 = load i32, i32* %retval.i, align 4, !dbg !2297
  store i32 %49, i32* %frame_size, align 4, !dbg !2299
  %50 = load i32, i32* %frame_size, align 4, !dbg !2300
  %tobool10 = icmp ne i32 %50, 0, !dbg !2300
  br i1 %tobool10, label %lor.lhs.false, label %if.then13, !dbg !2301

lor.lhs.false:                                    ; preds = %bytestream2_get_le16.exit
  %51 = load i32, i32* %frame_size, align 4, !dbg !2302
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i54, align 8, !dbg !2303
  %52 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i54, align 8, !dbg !2304
  %buffer_end.i55 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %52, i32 0, i32 1, !dbg !2305
  %53 = load i8*, i8** %buffer_end.i55, align 8, !dbg !2305
  %54 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i54, align 8, !dbg !2306
  %buffer.i56 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %54, i32 0, i32 0, !dbg !2307
  %55 = load i8*, i8** %buffer.i56, align 8, !dbg !2307
  %sub.ptr.lhs.cast.i57 = ptrtoint i8* %53 to i64, !dbg !2308
  %sub.ptr.rhs.cast.i58 = ptrtoint i8* %55 to i64, !dbg !2308
  %sub.ptr.sub.i59 = sub i64 %sub.ptr.lhs.cast.i57, %sub.ptr.rhs.cast.i58, !dbg !2308
  %conv.i60 = trunc i64 %sub.ptr.sub.i59 to i32, !dbg !2304
  %cmp12 = icmp ugt i32 %51, %conv.i60, !dbg !2309
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !2310

if.then13:                                        ; preds = %lor.lhs.false, %bytestream2_get_le16.exit
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2311
  %57 = bitcast %struct.AVCodecContext* %56 to i8*, !dbg !2311
  %58 = load i32, i32* %frame_size, align 4, !dbg !2313
  call void (i8*, i32, i8*, ...) @av_log(i8* %57, i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0), i32 %58), !dbg !2314
  store i32 -1094995529, i32* %retval, align 4, !dbg !2315
  br label %return, !dbg !2315

if.end14:                                         ; preds = %lor.lhs.false
  %59 = load i32, i32* %num_frames, align 4, !dbg !2316
  %inc = add nsw i32 %59, 1, !dbg !2316
  store i32 %inc, i32* %num_frames, align 4, !dbg !2316
  %60 = load i32, i32* %frame_size, align 4, !dbg !2317
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i100, align 8, !dbg !2318
  store i32 %60, i32* %size.addr.i101, align 4, !dbg !2318
  %61 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i100, align 8, !dbg !2319
  %buffer_end.i102 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %61, i32 0, i32 1, !dbg !2320
  %62 = load i8*, i8** %buffer_end.i102, align 8, !dbg !2320
  %63 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i100, align 8, !dbg !2321
  %buffer.i103 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %63, i32 0, i32 0, !dbg !2322
  %64 = load i8*, i8** %buffer.i103, align 8, !dbg !2322
  %sub.ptr.lhs.cast.i104 = ptrtoint i8* %62 to i64, !dbg !2323
  %sub.ptr.rhs.cast.i105 = ptrtoint i8* %64 to i64, !dbg !2323
  %sub.ptr.sub.i106 = sub i64 %sub.ptr.lhs.cast.i104, %sub.ptr.rhs.cast.i105, !dbg !2323
  %65 = load i32, i32* %size.addr.i101, align 4, !dbg !2324
  %conv.i107 = zext i32 %65 to i64, !dbg !2325
  %cmp.i108 = icmp sgt i64 %sub.ptr.sub.i106, %conv.i107, !dbg !2326
  br i1 %cmp.i108, label %cond.true.i110, label %cond.false.i116, !dbg !2327

cond.true.i110:                                   ; preds = %if.end14
  %66 = load i32, i32* %size.addr.i101, align 4, !dbg !2328
  %conv2.i109 = zext i32 %66 to i64, !dbg !2330
  br label %bytestream2_skip.exit120, !dbg !2331

cond.false.i116:                                  ; preds = %if.end14
  %67 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i100, align 8, !dbg !2332
  %buffer_end3.i111 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %67, i32 0, i32 1, !dbg !2334
  %68 = load i8*, i8** %buffer_end3.i111, align 8, !dbg !2334
  %69 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i100, align 8, !dbg !2335
  %buffer4.i112 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %69, i32 0, i32 0, !dbg !2336
  %70 = load i8*, i8** %buffer4.i112, align 8, !dbg !2336
  %sub.ptr.lhs.cast5.i113 = ptrtoint i8* %68 to i64, !dbg !2337
  %sub.ptr.rhs.cast6.i114 = ptrtoint i8* %70 to i64, !dbg !2337
  %sub.ptr.sub7.i115 = sub i64 %sub.ptr.lhs.cast5.i113, %sub.ptr.rhs.cast6.i114, !dbg !2337
  br label %bytestream2_skip.exit120, !dbg !2338

bytestream2_skip.exit120:                         ; preds = %cond.true.i110, %cond.false.i116
  %cond.i117 = phi i64 [ %conv2.i109, %cond.true.i110 ], [ %sub.ptr.sub7.i115, %cond.false.i116 ], !dbg !2339
  %71 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i100, align 8, !dbg !2341
  %buffer8.i118 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %71, i32 0, i32 0, !dbg !2342
  %72 = load i8*, i8** %buffer8.i118, align 8, !dbg !2343
  %add.ptr.i119 = getelementptr inbounds i8, i8* %72, i64 %cond.i117, !dbg !2343
  store i8* %add.ptr.i119, i8** %buffer8.i118, align 8, !dbg !2343
  br label %while.cond, !dbg !2344, !llvm.loop !2346

while.end:                                        ; preds = %while.cond
  %73 = load i32, i32* %num_frames, align 4, !dbg !2347
  %tobool15 = icmp ne i32 %73, 0, !dbg !2347
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !2349

if.then16:                                        ; preds = %while.end
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2350
  %75 = bitcast %struct.AVCodecContext* %74 to i8*, !dbg !2350
  call void (i8*, i32, i8*, ...) @av_log(i8* %75, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0)), !dbg !2352
  store i32 -1094995529, i32* %retval, align 4, !dbg !2353
  br label %return, !dbg !2353

if.end17:                                         ; preds = %while.end
  %76 = load i32, i32* %num_frames, align 4, !dbg !2354
  %mul = mul nsw i32 1024, %76, !dbg !2355
  %77 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2356
  %nb_samples18 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %77, i32 0, i32 5, !dbg !2357
  store i32 %mul, i32* %nb_samples18, align 8, !dbg !2358
  %78 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2359
  %79 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2361
  %call19 = call i32 @ff_get_buffer(%struct.AVCodecContext* %78, %struct.AVFrame* %79, i32 0), !dbg !2362
  store i32 %call19, i32* %ret, align 4, !dbg !2363
  %cmp20 = icmp slt i32 %call19, 0, !dbg !2364
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !2365

if.then21:                                        ; preds = %if.end17
  %80 = load i32, i32* %ret, align 4, !dbg !2366
  store i32 %80, i32* %retval, align 4, !dbg !2367
  br label %return, !dbg !2367

if.end22:                                         ; preds = %if.end17
  store i32 0, i32* %audio_off, align 4, !dbg !2368
  %81 = load i8*, i8** %buf, align 8, !dbg !2369
  %82 = load i32, i32* %buf_size, align 4, !dbg !2370
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i88, align 8, !dbg !2371
  store i8* %81, i8** %buf.addr.i89, align 8, !dbg !2371
  store i32 %82, i32* %buf_size.addr.i90, align 4, !dbg !2371
  %83 = load i32, i32* %buf_size.addr.i90, align 4, !dbg !2372
  %cmp.i91 = icmp sge i32 %83, 0, !dbg !2373
  br i1 %cmp.i91, label %bytestream2_init.exit99, label %if.then.i92, !dbg !2374

if.then.i92:                                      ; preds = %if.end22
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i32 0, i32 0), i32 137) #10, !dbg !2375
  call void @abort() #11, !dbg !2376
  unreachable, !dbg !2377

bytestream2_init.exit99:                          ; preds = %if.end22
  %84 = load i8*, i8** %buf.addr.i89, align 8, !dbg !2378
  %85 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i88, align 8, !dbg !2379
  %buffer.i94 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %85, i32 0, i32 0, !dbg !2380
  store i8* %84, i8** %buffer.i94, align 8, !dbg !2381
  %86 = load i8*, i8** %buf.addr.i89, align 8, !dbg !2382
  %87 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i88, align 8, !dbg !2383
  %buffer_start.i95 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %87, i32 0, i32 2, !dbg !2384
  store i8* %86, i8** %buffer_start.i95, align 8, !dbg !2385
  %88 = load i8*, i8** %buf.addr.i89, align 8, !dbg !2386
  %89 = load i32, i32* %buf_size.addr.i90, align 4, !dbg !2387
  %idx.ext.i96 = sext i32 %89 to i64, !dbg !2388
  %add.ptr.i97 = getelementptr inbounds i8, i8* %88, i64 %idx.ext.i96, !dbg !2388
  %90 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i88, align 8, !dbg !2389
  %buffer_end.i98 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %90, i32 0, i32 1, !dbg !2390
  store i8* %add.ptr.i97, i8** %buffer_end.i98, align 8, !dbg !2391
  br label %while.cond23, !dbg !2392

while.cond23:                                     ; preds = %bytestream2_skip.exit, %bytestream2_init.exit99
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i81, align 8, !dbg !2393
  %91 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i81, align 8, !dbg !2394
  %buffer_end.i82 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %91, i32 0, i32 1, !dbg !2395
  %92 = load i8*, i8** %buffer_end.i82, align 8, !dbg !2395
  %93 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i81, align 8, !dbg !2396
  %buffer.i83 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %93, i32 0, i32 0, !dbg !2397
  %94 = load i8*, i8** %buffer.i83, align 8, !dbg !2397
  %sub.ptr.lhs.cast.i84 = ptrtoint i8* %92 to i64, !dbg !2398
  %sub.ptr.rhs.cast.i85 = ptrtoint i8* %94 to i64, !dbg !2398
  %sub.ptr.sub.i86 = sub i64 %sub.ptr.lhs.cast.i84, %sub.ptr.rhs.cast.i85, !dbg !2398
  %conv.i87 = trunc i64 %sub.ptr.sub.i86 to i32, !dbg !2394
  %cmp25 = icmp ugt i32 %conv.i87, 2, !dbg !2399
  br i1 %cmp25, label %while.body26, label %while.end32, !dbg !2400

while.body26:                                     ; preds = %while.cond23
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i64, align 8, !dbg !2401
  %95 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i64, align 8, !dbg !2402
  %buffer_end.i65 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %95, i32 0, i32 1, !dbg !2403
  %96 = load i8*, i8** %buffer_end.i65, align 8, !dbg !2403
  %97 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i64, align 8, !dbg !2404
  %buffer.i66 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %97, i32 0, i32 0, !dbg !2405
  %98 = load i8*, i8** %buffer.i66, align 8, !dbg !2405
  %sub.ptr.lhs.cast.i67 = ptrtoint i8* %96 to i64, !dbg !2406
  %sub.ptr.rhs.cast.i68 = ptrtoint i8* %98 to i64, !dbg !2406
  %sub.ptr.sub.i69 = sub i64 %sub.ptr.lhs.cast.i67, %sub.ptr.rhs.cast.i68, !dbg !2406
  %cmp.i70 = icmp slt i64 %sub.ptr.sub.i69, 2, !dbg !2407
  br i1 %cmp.i70, label %if.then.i73, label %if.end.i79, !dbg !2408

if.then.i73:                                      ; preds = %while.body26
  %99 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i64, align 8, !dbg !2409
  %buffer_end1.i71 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %99, i32 0, i32 1, !dbg !2410
  %100 = load i8*, i8** %buffer_end1.i71, align 8, !dbg !2410
  %101 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i64, align 8, !dbg !2411
  %buffer2.i72 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %101, i32 0, i32 0, !dbg !2412
  store i8* %100, i8** %buffer2.i72, align 8, !dbg !2413
  store i32 0, i32* %retval.i63, align 4, !dbg !2414
  br label %bytestream2_get_le16.exit80, !dbg !2414

if.end.i79:                                       ; preds = %while.body26
  %102 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i64, align 8, !dbg !2415
  store %struct.GetByteContext* %102, %struct.GetByteContext** %g.addr.i.i62, align 8, !dbg !2416
  %103 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i.i62, align 8, !dbg !2417
  %buffer.i.i74 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %103, i32 0, i32 0, !dbg !2418
  store i8** %buffer.i.i74, i8*** %b.addr.i.i.i61, align 8, !dbg !2419
  %104 = load i8**, i8*** %b.addr.i.i.i61, align 8, !dbg !2420
  %105 = load i8*, i8** %104, align 8, !dbg !2421
  %add.ptr.i.i.i75 = getelementptr inbounds i8, i8* %105, i64 2, !dbg !2421
  store i8* %add.ptr.i.i.i75, i8** %104, align 8, !dbg !2421
  %106 = load i8**, i8*** %b.addr.i.i.i61, align 8, !dbg !2422
  %107 = load i8*, i8** %106, align 8, !dbg !2423
  %add.ptr1.i.i.i76 = getelementptr inbounds i8, i8* %107, i64 -2, !dbg !2424
  %108 = bitcast i8* %add.ptr1.i.i.i76 to %union.unaligned_16*, !dbg !2425
  %l.i.i.i77 = bitcast %union.unaligned_16* %108 to i16*, !dbg !2425
  %109 = load i16, i16* %l.i.i.i77, align 1, !dbg !2425
  %conv.i.i.i78 = zext i16 %109 to i32, !dbg !2426
  store i32 %conv.i.i.i78, i32* %retval.i63, align 4, !dbg !2427
  br label %bytestream2_get_le16.exit80, !dbg !2427

bytestream2_get_le16.exit80:                      ; preds = %if.then.i73, %if.end.i79
  %110 = load i32, i32* %retval.i63, align 4, !dbg !2428
  store i32 %110, i32* %frame_size, align 4, !dbg !2429
  %111 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2430
  %buffer = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %gb, i32 0, i32 0, !dbg !2432
  %112 = load i8*, i8** %buffer, align 8, !dbg !2432
  %113 = load i32, i32* %frame_size, align 4, !dbg !2433
  %114 = load %struct.AVFrame*, %struct.AVFrame** %frame, align 8, !dbg !2434
  %115 = load i32, i32* %audio_off, align 4, !dbg !2435
  %call28 = call i32 @on2avc_decode_subframe(%struct.On2AVCContext* %111, i8* %112, i32 %113, %struct.AVFrame* %114, i32 %115), !dbg !2436
  store i32 %call28, i32* %ret, align 4, !dbg !2437
  %cmp29 = icmp slt i32 %call28, 0, !dbg !2438
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !2439

if.then30:                                        ; preds = %bytestream2_get_le16.exit80
  %116 = load i32, i32* %ret, align 4, !dbg !2440
  store i32 %116, i32* %retval, align 4, !dbg !2441
  br label %return, !dbg !2441

if.end31:                                         ; preds = %bytestream2_get_le16.exit80
  %117 = load i32, i32* %audio_off, align 4, !dbg !2442
  %add = add nsw i32 %117, 1024, !dbg !2442
  store i32 %add, i32* %audio_off, align 4, !dbg !2442
  %118 = load i32, i32* %frame_size, align 4, !dbg !2443
  store %struct.GetByteContext* %gb, %struct.GetByteContext** %g.addr.i45, align 8, !dbg !2444
  store i32 %118, i32* %size.addr.i, align 4, !dbg !2444
  %119 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i45, align 8, !dbg !2445
  %buffer_end.i46 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %119, i32 0, i32 1, !dbg !2446
  %120 = load i8*, i8** %buffer_end.i46, align 8, !dbg !2446
  %121 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i45, align 8, !dbg !2447
  %buffer.i47 = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %121, i32 0, i32 0, !dbg !2448
  %122 = load i8*, i8** %buffer.i47, align 8, !dbg !2448
  %sub.ptr.lhs.cast.i48 = ptrtoint i8* %120 to i64, !dbg !2449
  %sub.ptr.rhs.cast.i49 = ptrtoint i8* %122 to i64, !dbg !2449
  %sub.ptr.sub.i50 = sub i64 %sub.ptr.lhs.cast.i48, %sub.ptr.rhs.cast.i49, !dbg !2449
  %123 = load i32, i32* %size.addr.i, align 4, !dbg !2450
  %conv.i51 = zext i32 %123 to i64, !dbg !2451
  %cmp.i52 = icmp sgt i64 %sub.ptr.sub.i50, %conv.i51, !dbg !2452
  br i1 %cmp.i52, label %cond.true.i, label %cond.false.i, !dbg !2453

cond.true.i:                                      ; preds = %if.end31
  %124 = load i32, i32* %size.addr.i, align 4, !dbg !2454
  %conv2.i = zext i32 %124 to i64, !dbg !2455
  br label %bytestream2_skip.exit, !dbg !2456

cond.false.i:                                     ; preds = %if.end31
  %125 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i45, align 8, !dbg !2457
  %buffer_end3.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %125, i32 0, i32 1, !dbg !2458
  %126 = load i8*, i8** %buffer_end3.i, align 8, !dbg !2458
  %127 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i45, align 8, !dbg !2459
  %buffer4.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %127, i32 0, i32 0, !dbg !2460
  %128 = load i8*, i8** %buffer4.i, align 8, !dbg !2460
  %sub.ptr.lhs.cast5.i = ptrtoint i8* %126 to i64, !dbg !2461
  %sub.ptr.rhs.cast6.i = ptrtoint i8* %128 to i64, !dbg !2461
  %sub.ptr.sub7.i = sub i64 %sub.ptr.lhs.cast5.i, %sub.ptr.rhs.cast6.i, !dbg !2461
  br label %bytestream2_skip.exit, !dbg !2462

bytestream2_skip.exit:                            ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i64 [ %conv2.i, %cond.true.i ], [ %sub.ptr.sub7.i, %cond.false.i ], !dbg !2463
  %129 = load %struct.GetByteContext*, %struct.GetByteContext** %g.addr.i45, align 8, !dbg !2464
  %buffer8.i = getelementptr inbounds %struct.GetByteContext, %struct.GetByteContext* %129, i32 0, i32 0, !dbg !2465
  %130 = load i8*, i8** %buffer8.i, align 8, !dbg !2466
  %add.ptr.i53 = getelementptr inbounds i8, i8* %130, i64 %cond.i, !dbg !2466
  store i8* %add.ptr.i53, i8** %buffer8.i, align 8, !dbg !2466
  br label %while.cond23, !dbg !2467, !llvm.loop !2468

while.end32:                                      ; preds = %while.cond23
  br label %if.end33

if.end33:                                         ; preds = %while.end32, %if.end6
  %131 = load i32*, i32** %got_frame_ptr.addr, align 8, !dbg !2469
  store i32 1, i32* %131, align 4, !dbg !2470
  %132 = load i32, i32* %buf_size, align 4, !dbg !2471
  store i32 %132, i32* %retval, align 4, !dbg !2472
  br label %return, !dbg !2472

return:                                           ; preds = %if.end33, %if.then30, %if.then21, %if.then16, %if.then13, %if.then5, %if.then2
  %133 = load i32, i32* %retval, align 4, !dbg !2473
  ret i32 %133, !dbg !2473
}

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @on2avc_decode_close(%struct.AVCodecContext* %avctx) #0 !dbg !2474 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %c = alloca %struct.On2AVCContext*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !2475, metadata !1675), !dbg !2476
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c, metadata !2477, metadata !1675), !dbg !2478
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !2479
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !2480
  %1 = load i8*, i8** %priv_data, align 8, !dbg !2480
  %2 = bitcast i8* %1 to %struct.On2AVCContext*, !dbg !2479
  store %struct.On2AVCContext* %2, %struct.On2AVCContext** %c, align 8, !dbg !2478
  %3 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2481
  %mdct = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %3, i32 0, i32 2, !dbg !2482
  call void @ff_mdct_end(%struct.FFTContext* %mdct), !dbg !2483
  %4 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2484
  %mdct_half = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %4, i32 0, i32 3, !dbg !2485
  call void @ff_mdct_end(%struct.FFTContext* %mdct_half), !dbg !2486
  %5 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2487
  %mdct_small = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %5, i32 0, i32 4, !dbg !2488
  call void @ff_mdct_end(%struct.FFTContext* %mdct_small), !dbg !2489
  %6 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2490
  %fft128 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %6, i32 0, i32 5, !dbg !2491
  call void @ff_fft_end(%struct.FFTContext* %fft128), !dbg !2492
  %7 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2493
  %fft256 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %7, i32 0, i32 6, !dbg !2494
  call void @ff_fft_end(%struct.FFTContext* %fft256), !dbg !2495
  %8 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2496
  %fft512 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %8, i32 0, i32 7, !dbg !2497
  call void @ff_fft_end(%struct.FFTContext* %fft512), !dbg !2498
  %9 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2499
  %fft1024 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %9, i32 0, i32 8, !dbg !2500
  call void @ff_fft_end(%struct.FFTContext* %fft1024), !dbg !2501
  %10 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2502
  %fdsp = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %10, i32 0, i32 1, !dbg !2503
  %11 = bitcast %struct.AVFloatDSPContext** %fdsp to i8*, !dbg !2504
  call void @av_freep(i8* %11), !dbg !2505
  %12 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c, align 8, !dbg !2506
  call void @on2avc_free_vlcs(%struct.On2AVCContext* %12), !dbg !2507
  ret i32 0, !dbg !2508
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare void @avpriv_request_sample(i8*, i8*, ...) #3

declare void @av_log(i8*, i32, i8*, ...) #3

; Function Attrs: nounwind readnone
declare double @ceil(double) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define internal void @wtf_40(%struct.On2AVCContext* %c, float* %out, float* %src, i32 %size) #1 !dbg !2509 {
entry:
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %out.addr = alloca float*, align 8
  %src.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %tmp0 = alloca float*, align 8
  %tmp1 = alloca float*, align 8
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !2512, metadata !1675), !dbg !2513
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !2514, metadata !1675), !dbg !2515
  store float* %src, float** %src.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src.addr, metadata !2516, metadata !1675), !dbg !2517
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !2518, metadata !1675), !dbg !2519
  call void @llvm.dbg.declare(metadata float** %tmp0, metadata !2520, metadata !1675), !dbg !2521
  %0 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !2522
  %temp = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %0, i32 0, i32 31, !dbg !2523
  %arraydecay = getelementptr inbounds [2048 x float], [2048 x float]* %temp, i32 0, i32 0, !dbg !2522
  store float* %arraydecay, float** %tmp0, align 8, !dbg !2521
  call void @llvm.dbg.declare(metadata float** %tmp1, metadata !2524, metadata !1675), !dbg !2525
  %1 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !2526
  %temp1 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %1, i32 0, i32 31, !dbg !2527
  %arraydecay2 = getelementptr inbounds [2048 x float], [2048 x float]* %temp1, i32 0, i32 0, !dbg !2526
  %add.ptr = getelementptr inbounds float, float* %arraydecay2, i64 1024, !dbg !2528
  store float* %add.ptr, float** %tmp1, align 8, !dbg !2525
  %2 = load float*, float** %tmp0, align 8, !dbg !2529
  %3 = bitcast float* %2 to i8*, !dbg !2530
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 4096, i32 4, i1 false), !dbg !2530
  %4 = load float*, float** %tmp1, align 8, !dbg !2531
  %5 = bitcast float* %4 to i8*, !dbg !2532
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 4096, i32 4, i1 false), !dbg !2532
  %6 = load i32, i32* %size.addr, align 4, !dbg !2533
  %cmp = icmp eq i32 %6, 512, !dbg !2535
  br i1 %cmp, label %if.then, label %if.else, !dbg !2536

if.then:                                          ; preds = %entry
  %7 = load float*, float** %src.addr, align 8, !dbg !2537
  %8 = load float*, float** %tmp0, align 8, !dbg !2539
  %arrayidx = getelementptr inbounds float, float* %8, i64 0, !dbg !2539
  call void @twiddle(float* %7, float* %arrayidx, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_1, i32 0, i32 0), i32 10, i32 2, i32 1, i32 3, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_1, i32 0, i32 0)), !dbg !2540
  %9 = load float*, float** %src.addr, align 8, !dbg !2541
  %add.ptr3 = getelementptr inbounds float, float* %9, i64 8, !dbg !2542
  %10 = load float*, float** %tmp0, align 8, !dbg !2543
  %arrayidx4 = getelementptr inbounds float, float* %10, i64 0, !dbg !2543
  call void @twiddle(float* %add.ptr3, float* %arrayidx4, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_2, i32 0, i32 0), i32 10, i32 2, i32 3, i32 1, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_2, i32 0, i32 0)), !dbg !2544
  %11 = load float*, float** %src.addr, align 8, !dbg !2545
  %add.ptr5 = getelementptr inbounds float, float* %11, i64 16, !dbg !2546
  %12 = load float*, float** %tmp0, align 8, !dbg !2547
  %arrayidx6 = getelementptr inbounds float, float* %12, i64 16, !dbg !2547
  call void @twiddle(float* %add.ptr5, float* %arrayidx6, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_2, i32 0, i32 0), i32 10, i32 2, i32 3, i32 1, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_2, i32 0, i32 0)), !dbg !2548
  %13 = load float*, float** %src.addr, align 8, !dbg !2549
  %add.ptr7 = getelementptr inbounds float, float* %13, i64 24, !dbg !2550
  %14 = load float*, float** %tmp0, align 8, !dbg !2551
  %arrayidx8 = getelementptr inbounds float, float* %14, i64 16, !dbg !2551
  call void @twiddle(float* %add.ptr7, float* %arrayidx8, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_1, i32 0, i32 0), i32 10, i32 2, i32 1, i32 3, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_1, i32 0, i32 0)), !dbg !2552
  %15 = load float*, float** %src.addr, align 8, !dbg !2553
  %add.ptr9 = getelementptr inbounds float, float* %15, i64 32, !dbg !2554
  %16 = load float*, float** %tmp0, align 8, !dbg !2555
  %arrayidx10 = getelementptr inbounds float, float* %16, i64 32, !dbg !2555
  call void @twiddle(float* %add.ptr9, float* %arrayidx10, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_1, i32 0, i32 0), i32 10, i32 2, i32 1, i32 3, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_1, i32 0, i32 0)), !dbg !2556
  %17 = load float*, float** %src.addr, align 8, !dbg !2557
  %add.ptr11 = getelementptr inbounds float, float* %17, i64 40, !dbg !2558
  %18 = load float*, float** %tmp0, align 8, !dbg !2559
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 32, !dbg !2559
  call void @twiddle(float* %add.ptr11, float* %arrayidx12, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_2, i32 0, i32 0), i32 10, i32 2, i32 3, i32 1, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_2, i32 0, i32 0)), !dbg !2560
  %19 = load float*, float** %src.addr, align 8, !dbg !2561
  %add.ptr13 = getelementptr inbounds float, float* %19, i64 48, !dbg !2562
  %20 = load float*, float** %tmp0, align 8, !dbg !2563
  %arrayidx14 = getelementptr inbounds float, float* %20, i64 48, !dbg !2563
  call void @twiddle(float* %add.ptr13, float* %arrayidx14, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_2, i32 0, i32 0), i32 10, i32 2, i32 3, i32 1, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_2, i32 0, i32 0)), !dbg !2564
  %21 = load float*, float** %src.addr, align 8, !dbg !2565
  %add.ptr15 = getelementptr inbounds float, float* %21, i64 56, !dbg !2566
  %22 = load float*, float** %tmp0, align 8, !dbg !2567
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 48, !dbg !2567
  call void @twiddle(float* %add.ptr15, float* %arrayidx16, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_1, i32 0, i32 0), i32 10, i32 2, i32 1, i32 3, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_1, i32 0, i32 0)), !dbg !2568
  %23 = load float*, float** %tmp0, align 8, !dbg !2569
  %arrayidx17 = getelementptr inbounds float, float* %23, i64 0, !dbg !2569
  %24 = load float*, float** %tmp1, align 8, !dbg !2570
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !2570
  call void @twiddle(float* %arrayidx17, float* %arrayidx18, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2571
  %25 = load float*, float** %tmp0, align 8, !dbg !2572
  %arrayidx19 = getelementptr inbounds float, float* %25, i64 16, !dbg !2572
  %26 = load float*, float** %tmp1, align 8, !dbg !2573
  %arrayidx20 = getelementptr inbounds float, float* %26, i64 0, !dbg !2573
  call void @twiddle(float* %arrayidx19, float* %arrayidx20, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2574
  %27 = load float*, float** %tmp0, align 8, !dbg !2575
  %arrayidx21 = getelementptr inbounds float, float* %27, i64 32, !dbg !2575
  %28 = load float*, float** %tmp1, align 8, !dbg !2576
  %arrayidx22 = getelementptr inbounds float, float* %28, i64 32, !dbg !2576
  call void @twiddle(float* %arrayidx21, float* %arrayidx22, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2577
  %29 = load float*, float** %tmp0, align 8, !dbg !2578
  %arrayidx23 = getelementptr inbounds float, float* %29, i64 48, !dbg !2578
  %30 = load float*, float** %tmp1, align 8, !dbg !2579
  %arrayidx24 = getelementptr inbounds float, float* %30, i64 32, !dbg !2579
  call void @twiddle(float* %arrayidx23, float* %arrayidx24, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2580
  %31 = load float*, float** %src.addr, align 8, !dbg !2581
  %add.ptr25 = getelementptr inbounds float, float* %31, i64 64, !dbg !2582
  %32 = load float*, float** %tmp1, align 8, !dbg !2583
  %arrayidx26 = getelementptr inbounds float, float* %32, i64 64, !dbg !2583
  call void @twiddle(float* %add.ptr25, float* %arrayidx26, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2584
  %33 = load float*, float** %src.addr, align 8, !dbg !2585
  %add.ptr27 = getelementptr inbounds float, float* %33, i64 80, !dbg !2586
  %34 = load float*, float** %tmp1, align 8, !dbg !2587
  %arrayidx28 = getelementptr inbounds float, float* %34, i64 64, !dbg !2587
  call void @twiddle(float* %add.ptr27, float* %arrayidx28, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2588
  %35 = load float*, float** %src.addr, align 8, !dbg !2589
  %add.ptr29 = getelementptr inbounds float, float* %35, i64 96, !dbg !2590
  %36 = load float*, float** %tmp1, align 8, !dbg !2591
  %arrayidx30 = getelementptr inbounds float, float* %36, i64 96, !dbg !2591
  call void @twiddle(float* %add.ptr29, float* %arrayidx30, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2592
  %37 = load float*, float** %src.addr, align 8, !dbg !2593
  %add.ptr31 = getelementptr inbounds float, float* %37, i64 112, !dbg !2594
  %38 = load float*, float** %tmp1, align 8, !dbg !2595
  %arrayidx32 = getelementptr inbounds float, float* %38, i64 96, !dbg !2595
  call void @twiddle(float* %add.ptr31, float* %arrayidx32, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2596
  %39 = load float*, float** %src.addr, align 8, !dbg !2597
  %add.ptr33 = getelementptr inbounds float, float* %39, i64 128, !dbg !2598
  %40 = load float*, float** %tmp1, align 8, !dbg !2599
  %arrayidx34 = getelementptr inbounds float, float* %40, i64 128, !dbg !2599
  call void @twiddle(float* %add.ptr33, float* %arrayidx34, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2600
  %41 = load float*, float** %src.addr, align 8, !dbg !2601
  %add.ptr35 = getelementptr inbounds float, float* %41, i64 144, !dbg !2602
  %42 = load float*, float** %tmp1, align 8, !dbg !2603
  %arrayidx36 = getelementptr inbounds float, float* %42, i64 128, !dbg !2603
  call void @twiddle(float* %add.ptr35, float* %arrayidx36, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2604
  %43 = load float*, float** %src.addr, align 8, !dbg !2605
  %add.ptr37 = getelementptr inbounds float, float* %43, i64 160, !dbg !2606
  %44 = load float*, float** %tmp1, align 8, !dbg !2607
  %arrayidx38 = getelementptr inbounds float, float* %44, i64 160, !dbg !2607
  call void @twiddle(float* %add.ptr37, float* %arrayidx38, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2608
  %45 = load float*, float** %src.addr, align 8, !dbg !2609
  %add.ptr39 = getelementptr inbounds float, float* %45, i64 176, !dbg !2610
  %46 = load float*, float** %tmp1, align 8, !dbg !2611
  %arrayidx40 = getelementptr inbounds float, float* %46, i64 160, !dbg !2611
  call void @twiddle(float* %add.ptr39, float* %arrayidx40, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2612
  %47 = load float*, float** %tmp0, align 8, !dbg !2613
  %48 = bitcast float* %47 to i8*, !dbg !2614
  call void @llvm.memset.p0i8.i64(i8* %48, i8 0, i64 256, i32 4, i1 false), !dbg !2614
  %49 = load float*, float** %tmp1, align 8, !dbg !2615
  %arrayidx41 = getelementptr inbounds float, float* %49, i64 0, !dbg !2615
  %50 = load float*, float** %tmp0, align 8, !dbg !2616
  %arrayidx42 = getelementptr inbounds float, float* %50, i64 0, !dbg !2616
  call void @twiddle(float* %arrayidx41, float* %arrayidx42, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_1, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_1, i32 0, i32 0)), !dbg !2617
  %51 = load float*, float** %tmp1, align 8, !dbg !2618
  %arrayidx43 = getelementptr inbounds float, float* %51, i64 32, !dbg !2618
  %52 = load float*, float** %tmp0, align 8, !dbg !2619
  %arrayidx44 = getelementptr inbounds float, float* %52, i64 0, !dbg !2619
  call void @twiddle(float* %arrayidx43, float* %arrayidx44, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_2, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_2, i32 0, i32 0)), !dbg !2620
  %53 = load float*, float** %tmp1, align 8, !dbg !2621
  %arrayidx45 = getelementptr inbounds float, float* %53, i64 64, !dbg !2621
  %54 = load float*, float** %tmp0, align 8, !dbg !2622
  %arrayidx46 = getelementptr inbounds float, float* %54, i64 0, !dbg !2622
  call void @twiddle(float* %arrayidx45, float* %arrayidx46, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_3, i32 0, i32 0), i32 84, i32 4, i32 13, i32 7, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_3, i32 0, i32 0)), !dbg !2623
  %55 = load float*, float** %tmp1, align 8, !dbg !2624
  %arrayidx47 = getelementptr inbounds float, float* %55, i64 96, !dbg !2624
  %56 = load float*, float** %tmp0, align 8, !dbg !2625
  %arrayidx48 = getelementptr inbounds float, float* %56, i64 0, !dbg !2625
  call void @twiddle(float* %arrayidx47, float* %arrayidx48, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_4, i32 0, i32 0), i32 84, i32 4, i32 15, i32 5, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_4, i32 0, i32 0)), !dbg !2626
  %57 = load float*, float** %tmp1, align 8, !dbg !2627
  %arrayidx49 = getelementptr inbounds float, float* %57, i64 128, !dbg !2627
  %58 = load float*, float** %tmp0, align 8, !dbg !2628
  %arrayidx50 = getelementptr inbounds float, float* %58, i64 128, !dbg !2628
  call void @twiddle(float* %arrayidx49, float* %arrayidx50, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_4, i32 0, i32 0), i32 84, i32 4, i32 15, i32 5, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_4, i32 0, i32 0)), !dbg !2629
  %59 = load float*, float** %tmp1, align 8, !dbg !2630
  %arrayidx51 = getelementptr inbounds float, float* %59, i64 160, !dbg !2630
  %60 = load float*, float** %tmp0, align 8, !dbg !2631
  %arrayidx52 = getelementptr inbounds float, float* %60, i64 128, !dbg !2631
  call void @twiddle(float* %arrayidx51, float* %arrayidx52, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_3, i32 0, i32 0), i32 84, i32 4, i32 13, i32 7, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_3, i32 0, i32 0)), !dbg !2632
  %61 = load float*, float** %src.addr, align 8, !dbg !2633
  %add.ptr53 = getelementptr inbounds float, float* %61, i64 192, !dbg !2634
  %62 = load float*, float** %tmp0, align 8, !dbg !2635
  %arrayidx54 = getelementptr inbounds float, float* %62, i64 128, !dbg !2635
  call void @twiddle(float* %add.ptr53, float* %arrayidx54, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_2, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_2, i32 0, i32 0)), !dbg !2636
  %63 = load float*, float** %src.addr, align 8, !dbg !2637
  %add.ptr55 = getelementptr inbounds float, float* %63, i64 224, !dbg !2638
  %64 = load float*, float** %tmp0, align 8, !dbg !2639
  %arrayidx56 = getelementptr inbounds float, float* %64, i64 128, !dbg !2639
  call void @twiddle(float* %add.ptr55, float* %arrayidx56, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_1, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_1, i32 0, i32 0)), !dbg !2640
  %65 = load float*, float** %src.addr, align 8, !dbg !2641
  %add.ptr57 = getelementptr inbounds float, float* %65, i64 256, !dbg !2642
  %66 = load float*, float** %tmp0, align 8, !dbg !2643
  %arrayidx58 = getelementptr inbounds float, float* %66, i64 256, !dbg !2643
  call void @twiddle(float* %add.ptr57, float* %arrayidx58, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_1, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_1, i32 0, i32 0)), !dbg !2644
  %67 = load float*, float** %src.addr, align 8, !dbg !2645
  %add.ptr59 = getelementptr inbounds float, float* %67, i64 288, !dbg !2646
  %68 = load float*, float** %tmp0, align 8, !dbg !2647
  %arrayidx60 = getelementptr inbounds float, float* %68, i64 256, !dbg !2647
  call void @twiddle(float* %add.ptr59, float* %arrayidx60, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_2, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_2, i32 0, i32 0)), !dbg !2648
  %69 = load float*, float** %src.addr, align 8, !dbg !2649
  %add.ptr61 = getelementptr inbounds float, float* %69, i64 320, !dbg !2650
  %70 = load float*, float** %tmp0, align 8, !dbg !2651
  %arrayidx62 = getelementptr inbounds float, float* %70, i64 256, !dbg !2651
  call void @twiddle(float* %add.ptr61, float* %arrayidx62, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_3, i32 0, i32 0), i32 84, i32 4, i32 13, i32 7, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_3, i32 0, i32 0)), !dbg !2652
  %71 = load float*, float** %src.addr, align 8, !dbg !2653
  %add.ptr63 = getelementptr inbounds float, float* %71, i64 352, !dbg !2654
  %72 = load float*, float** %tmp0, align 8, !dbg !2655
  %arrayidx64 = getelementptr inbounds float, float* %72, i64 256, !dbg !2655
  call void @twiddle(float* %add.ptr63, float* %arrayidx64, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_4, i32 0, i32 0), i32 84, i32 4, i32 15, i32 5, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_4, i32 0, i32 0)), !dbg !2656
  %73 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !2657
  %74 = load float*, float** %out.addr, align 8, !dbg !2658
  %75 = load float*, float** %src.addr, align 8, !dbg !2659
  %76 = load float*, float** %tmp0, align 8, !dbg !2660
  %77 = load float*, float** %tmp1, align 8, !dbg !2661
  call void @wtf_end_512(%struct.On2AVCContext* %73, float* %74, float* %75, float* %76, float* %77), !dbg !2662
  br label %if.end, !dbg !2663

if.else:                                          ; preds = %entry
  %78 = load float*, float** %src.addr, align 8, !dbg !2664
  %79 = load float*, float** %tmp0, align 8, !dbg !2666
  %arrayidx65 = getelementptr inbounds float, float* %79, i64 0, !dbg !2666
  call void @twiddle(float* %78, float* %arrayidx65, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2667
  %80 = load float*, float** %src.addr, align 8, !dbg !2668
  %add.ptr66 = getelementptr inbounds float, float* %80, i64 16, !dbg !2669
  %81 = load float*, float** %tmp0, align 8, !dbg !2670
  %arrayidx67 = getelementptr inbounds float, float* %81, i64 0, !dbg !2670
  call void @twiddle(float* %add.ptr66, float* %arrayidx67, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2671
  %82 = load float*, float** %src.addr, align 8, !dbg !2672
  %add.ptr68 = getelementptr inbounds float, float* %82, i64 32, !dbg !2673
  %83 = load float*, float** %tmp0, align 8, !dbg !2674
  %arrayidx69 = getelementptr inbounds float, float* %83, i64 32, !dbg !2674
  call void @twiddle(float* %add.ptr68, float* %arrayidx69, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2675
  %84 = load float*, float** %src.addr, align 8, !dbg !2676
  %add.ptr70 = getelementptr inbounds float, float* %84, i64 48, !dbg !2677
  %85 = load float*, float** %tmp0, align 8, !dbg !2678
  %arrayidx71 = getelementptr inbounds float, float* %85, i64 32, !dbg !2678
  call void @twiddle(float* %add.ptr70, float* %arrayidx71, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2679
  %86 = load float*, float** %src.addr, align 8, !dbg !2680
  %add.ptr72 = getelementptr inbounds float, float* %86, i64 64, !dbg !2681
  %87 = load float*, float** %tmp0, align 8, !dbg !2682
  %arrayidx73 = getelementptr inbounds float, float* %87, i64 64, !dbg !2682
  call void @twiddle(float* %add.ptr72, float* %arrayidx73, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2683
  %88 = load float*, float** %src.addr, align 8, !dbg !2684
  %add.ptr74 = getelementptr inbounds float, float* %88, i64 80, !dbg !2685
  %89 = load float*, float** %tmp0, align 8, !dbg !2686
  %arrayidx75 = getelementptr inbounds float, float* %89, i64 64, !dbg !2686
  call void @twiddle(float* %add.ptr74, float* %arrayidx75, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2687
  %90 = load float*, float** %src.addr, align 8, !dbg !2688
  %add.ptr76 = getelementptr inbounds float, float* %90, i64 96, !dbg !2689
  %91 = load float*, float** %tmp0, align 8, !dbg !2690
  %arrayidx77 = getelementptr inbounds float, float* %91, i64 96, !dbg !2690
  call void @twiddle(float* %add.ptr76, float* %arrayidx77, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2691
  %92 = load float*, float** %src.addr, align 8, !dbg !2692
  %add.ptr78 = getelementptr inbounds float, float* %92, i64 112, !dbg !2693
  %93 = load float*, float** %tmp0, align 8, !dbg !2694
  %arrayidx79 = getelementptr inbounds float, float* %93, i64 96, !dbg !2694
  call void @twiddle(float* %add.ptr78, float* %arrayidx79, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2695
  %94 = load float*, float** %tmp0, align 8, !dbg !2696
  %arrayidx80 = getelementptr inbounds float, float* %94, i64 0, !dbg !2696
  %95 = load float*, float** %tmp1, align 8, !dbg !2697
  %arrayidx81 = getelementptr inbounds float, float* %95, i64 0, !dbg !2697
  call void @twiddle(float* %arrayidx80, float* %arrayidx81, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_1, i32 0, i32 0), i32 40, i32 2, i32 11, i32 8, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_1, i32 0, i32 0)), !dbg !2698
  %96 = load float*, float** %tmp0, align 8, !dbg !2699
  %arrayidx82 = getelementptr inbounds float, float* %96, i64 32, !dbg !2699
  %97 = load float*, float** %tmp1, align 8, !dbg !2700
  %arrayidx83 = getelementptr inbounds float, float* %97, i64 0, !dbg !2700
  call void @twiddle(float* %arrayidx82, float* %arrayidx83, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_2, i32 0, i32 0), i32 40, i32 2, i32 8, i32 11, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_2, i32 0, i32 0)), !dbg !2701
  %98 = load float*, float** %tmp0, align 8, !dbg !2702
  %arrayidx84 = getelementptr inbounds float, float* %98, i64 64, !dbg !2702
  %99 = load float*, float** %tmp1, align 8, !dbg !2703
  %arrayidx85 = getelementptr inbounds float, float* %99, i64 64, !dbg !2703
  call void @twiddle(float* %arrayidx84, float* %arrayidx85, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_2, i32 0, i32 0), i32 40, i32 2, i32 8, i32 11, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_2, i32 0, i32 0)), !dbg !2704
  %100 = load float*, float** %tmp0, align 8, !dbg !2705
  %arrayidx86 = getelementptr inbounds float, float* %100, i64 96, !dbg !2705
  %101 = load float*, float** %tmp1, align 8, !dbg !2706
  %arrayidx87 = getelementptr inbounds float, float* %101, i64 64, !dbg !2706
  call void @twiddle(float* %arrayidx86, float* %arrayidx87, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_1, i32 0, i32 0), i32 40, i32 2, i32 11, i32 8, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_1, i32 0, i32 0)), !dbg !2707
  %102 = load float*, float** %src.addr, align 8, !dbg !2708
  %add.ptr88 = getelementptr inbounds float, float* %102, i64 128, !dbg !2709
  %103 = load float*, float** %tmp1, align 8, !dbg !2710
  %arrayidx89 = getelementptr inbounds float, float* %103, i64 128, !dbg !2710
  call void @twiddle(float* %add.ptr88, float* %arrayidx89, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_1, i32 0, i32 0), i32 40, i32 2, i32 11, i32 8, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_1, i32 0, i32 0)), !dbg !2711
  %104 = load float*, float** %src.addr, align 8, !dbg !2712
  %add.ptr90 = getelementptr inbounds float, float* %104, i64 160, !dbg !2713
  %105 = load float*, float** %tmp1, align 8, !dbg !2714
  %arrayidx91 = getelementptr inbounds float, float* %105, i64 128, !dbg !2714
  call void @twiddle(float* %add.ptr90, float* %arrayidx91, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_2, i32 0, i32 0), i32 40, i32 2, i32 8, i32 11, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_2, i32 0, i32 0)), !dbg !2715
  %106 = load float*, float** %src.addr, align 8, !dbg !2716
  %add.ptr92 = getelementptr inbounds float, float* %106, i64 192, !dbg !2717
  %107 = load float*, float** %tmp1, align 8, !dbg !2718
  %arrayidx93 = getelementptr inbounds float, float* %107, i64 192, !dbg !2718
  call void @twiddle(float* %add.ptr92, float* %arrayidx93, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_2, i32 0, i32 0), i32 40, i32 2, i32 8, i32 11, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_2, i32 0, i32 0)), !dbg !2719
  %108 = load float*, float** %src.addr, align 8, !dbg !2720
  %add.ptr94 = getelementptr inbounds float, float* %108, i64 224, !dbg !2721
  %109 = load float*, float** %tmp1, align 8, !dbg !2722
  %arrayidx95 = getelementptr inbounds float, float* %109, i64 192, !dbg !2722
  call void @twiddle(float* %add.ptr94, float* %arrayidx95, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_1, i32 0, i32 0), i32 40, i32 2, i32 11, i32 8, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_1, i32 0, i32 0)), !dbg !2723
  %110 = load float*, float** %src.addr, align 8, !dbg !2724
  %add.ptr96 = getelementptr inbounds float, float* %110, i64 256, !dbg !2725
  %111 = load float*, float** %tmp1, align 8, !dbg !2726
  %arrayidx97 = getelementptr inbounds float, float* %111, i64 256, !dbg !2726
  call void @twiddle(float* %add.ptr96, float* %arrayidx97, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_1, i32 0, i32 0), i32 40, i32 2, i32 11, i32 8, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_1, i32 0, i32 0)), !dbg !2727
  %112 = load float*, float** %src.addr, align 8, !dbg !2728
  %add.ptr98 = getelementptr inbounds float, float* %112, i64 288, !dbg !2729
  %113 = load float*, float** %tmp1, align 8, !dbg !2730
  %arrayidx99 = getelementptr inbounds float, float* %113, i64 256, !dbg !2730
  call void @twiddle(float* %add.ptr98, float* %arrayidx99, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_2, i32 0, i32 0), i32 40, i32 2, i32 8, i32 11, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_2, i32 0, i32 0)), !dbg !2731
  %114 = load float*, float** %src.addr, align 8, !dbg !2732
  %add.ptr100 = getelementptr inbounds float, float* %114, i64 320, !dbg !2733
  %115 = load float*, float** %tmp1, align 8, !dbg !2734
  %arrayidx101 = getelementptr inbounds float, float* %115, i64 320, !dbg !2734
  call void @twiddle(float* %add.ptr100, float* %arrayidx101, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_2, i32 0, i32 0), i32 40, i32 2, i32 8, i32 11, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_2, i32 0, i32 0)), !dbg !2735
  %116 = load float*, float** %src.addr, align 8, !dbg !2736
  %add.ptr102 = getelementptr inbounds float, float* %116, i64 352, !dbg !2737
  %117 = load float*, float** %tmp1, align 8, !dbg !2738
  %arrayidx103 = getelementptr inbounds float, float* %117, i64 320, !dbg !2738
  call void @twiddle(float* %add.ptr102, float* %arrayidx103, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_1, i32 0, i32 0), i32 40, i32 2, i32 11, i32 8, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_1, i32 0, i32 0)), !dbg !2739
  %118 = load float*, float** %tmp0, align 8, !dbg !2740
  %119 = bitcast float* %118 to i8*, !dbg !2741
  call void @llvm.memset.p0i8.i64(i8* %119, i8 0, i64 512, i32 4, i1 false), !dbg !2741
  %120 = load float*, float** %tmp1, align 8, !dbg !2742
  %arrayidx104 = getelementptr inbounds float, float* %120, i64 0, !dbg !2742
  %121 = load float*, float** %tmp0, align 8, !dbg !2743
  %arrayidx105 = getelementptr inbounds float, float* %121, i64 0, !dbg !2743
  call void @twiddle(float* %arrayidx104, float* %arrayidx105, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_1, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_1, i32 0, i32 0)), !dbg !2744
  %122 = load float*, float** %tmp1, align 8, !dbg !2745
  %arrayidx106 = getelementptr inbounds float, float* %122, i64 64, !dbg !2745
  %123 = load float*, float** %tmp0, align 8, !dbg !2746
  %arrayidx107 = getelementptr inbounds float, float* %123, i64 0, !dbg !2746
  call void @twiddle(float* %arrayidx106, float* %arrayidx107, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_2, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_2, i32 0, i32 0)), !dbg !2747
  %124 = load float*, float** %tmp1, align 8, !dbg !2748
  %arrayidx108 = getelementptr inbounds float, float* %124, i64 128, !dbg !2748
  %125 = load float*, float** %tmp0, align 8, !dbg !2749
  %arrayidx109 = getelementptr inbounds float, float* %125, i64 0, !dbg !2749
  call void @twiddle(float* %arrayidx108, float* %arrayidx109, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_3, i32 0, i32 0), i32 84, i32 4, i32 13, i32 7, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_3, i32 0, i32 0)), !dbg !2750
  %126 = load float*, float** %tmp1, align 8, !dbg !2751
  %arrayidx110 = getelementptr inbounds float, float* %126, i64 192, !dbg !2751
  %127 = load float*, float** %tmp0, align 8, !dbg !2752
  %arrayidx111 = getelementptr inbounds float, float* %127, i64 0, !dbg !2752
  call void @twiddle(float* %arrayidx110, float* %arrayidx111, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_4, i32 0, i32 0), i32 84, i32 4, i32 15, i32 5, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_4, i32 0, i32 0)), !dbg !2753
  %128 = load float*, float** %tmp1, align 8, !dbg !2754
  %arrayidx112 = getelementptr inbounds float, float* %128, i64 256, !dbg !2754
  %129 = load float*, float** %tmp0, align 8, !dbg !2755
  %arrayidx113 = getelementptr inbounds float, float* %129, i64 256, !dbg !2755
  call void @twiddle(float* %arrayidx112, float* %arrayidx113, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_4, i32 0, i32 0), i32 84, i32 4, i32 15, i32 5, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_4, i32 0, i32 0)), !dbg !2756
  %130 = load float*, float** %tmp1, align 8, !dbg !2757
  %arrayidx114 = getelementptr inbounds float, float* %130, i64 320, !dbg !2757
  %131 = load float*, float** %tmp0, align 8, !dbg !2758
  %arrayidx115 = getelementptr inbounds float, float* %131, i64 256, !dbg !2758
  call void @twiddle(float* %arrayidx114, float* %arrayidx115, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_3, i32 0, i32 0), i32 84, i32 4, i32 13, i32 7, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_3, i32 0, i32 0)), !dbg !2759
  %132 = load float*, float** %src.addr, align 8, !dbg !2760
  %add.ptr116 = getelementptr inbounds float, float* %132, i64 384, !dbg !2761
  %133 = load float*, float** %tmp0, align 8, !dbg !2762
  %arrayidx117 = getelementptr inbounds float, float* %133, i64 256, !dbg !2762
  call void @twiddle(float* %add.ptr116, float* %arrayidx117, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_2, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_2, i32 0, i32 0)), !dbg !2763
  %134 = load float*, float** %src.addr, align 8, !dbg !2764
  %add.ptr118 = getelementptr inbounds float, float* %134, i64 448, !dbg !2765
  %135 = load float*, float** %tmp0, align 8, !dbg !2766
  %arrayidx119 = getelementptr inbounds float, float* %135, i64 256, !dbg !2766
  call void @twiddle(float* %add.ptr118, float* %arrayidx119, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_1, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_1, i32 0, i32 0)), !dbg !2767
  %136 = load float*, float** %src.addr, align 8, !dbg !2768
  %add.ptr120 = getelementptr inbounds float, float* %136, i64 512, !dbg !2769
  %137 = load float*, float** %tmp0, align 8, !dbg !2770
  %arrayidx121 = getelementptr inbounds float, float* %137, i64 512, !dbg !2770
  call void @twiddle(float* %add.ptr120, float* %arrayidx121, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_1, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_1, i32 0, i32 0)), !dbg !2771
  %138 = load float*, float** %src.addr, align 8, !dbg !2772
  %add.ptr122 = getelementptr inbounds float, float* %138, i64 576, !dbg !2773
  %139 = load float*, float** %tmp0, align 8, !dbg !2774
  %arrayidx123 = getelementptr inbounds float, float* %139, i64 512, !dbg !2774
  call void @twiddle(float* %add.ptr122, float* %arrayidx123, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_2, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_2, i32 0, i32 0)), !dbg !2775
  %140 = load float*, float** %src.addr, align 8, !dbg !2776
  %add.ptr124 = getelementptr inbounds float, float* %140, i64 640, !dbg !2777
  %141 = load float*, float** %tmp0, align 8, !dbg !2778
  %arrayidx125 = getelementptr inbounds float, float* %141, i64 512, !dbg !2778
  call void @twiddle(float* %add.ptr124, float* %arrayidx125, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_3, i32 0, i32 0), i32 84, i32 4, i32 13, i32 7, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_3, i32 0, i32 0)), !dbg !2779
  %142 = load float*, float** %src.addr, align 8, !dbg !2780
  %add.ptr126 = getelementptr inbounds float, float* %142, i64 704, !dbg !2781
  %143 = load float*, float** %tmp0, align 8, !dbg !2782
  %arrayidx127 = getelementptr inbounds float, float* %143, i64 512, !dbg !2782
  call void @twiddle(float* %add.ptr126, float* %arrayidx127, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_4, i32 0, i32 0), i32 84, i32 4, i32 15, i32 5, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_4, i32 0, i32 0)), !dbg !2783
  %144 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !2784
  %145 = load float*, float** %out.addr, align 8, !dbg !2785
  %146 = load float*, float** %src.addr, align 8, !dbg !2786
  %147 = load float*, float** %tmp0, align 8, !dbg !2787
  %148 = load float*, float** %tmp1, align 8, !dbg !2788
  call void @wtf_end_1024(%struct.On2AVCContext* %144, float* %145, float* %146, float* %147, float* %148), !dbg !2789
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2790
}

; Function Attrs: nounwind uwtable
define internal void @wtf_44(%struct.On2AVCContext* %c, float* %out, float* %src, i32 %size) #1 !dbg !2791 {
entry:
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %out.addr = alloca float*, align 8
  %src.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %tmp0 = alloca float*, align 8
  %tmp1 = alloca float*, align 8
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !2792, metadata !1675), !dbg !2793
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !2794, metadata !1675), !dbg !2795
  store float* %src, float** %src.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src.addr, metadata !2796, metadata !1675), !dbg !2797
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !2798, metadata !1675), !dbg !2799
  call void @llvm.dbg.declare(metadata float** %tmp0, metadata !2800, metadata !1675), !dbg !2801
  %0 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !2802
  %temp = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %0, i32 0, i32 31, !dbg !2803
  %arraydecay = getelementptr inbounds [2048 x float], [2048 x float]* %temp, i32 0, i32 0, !dbg !2802
  store float* %arraydecay, float** %tmp0, align 8, !dbg !2801
  call void @llvm.dbg.declare(metadata float** %tmp1, metadata !2804, metadata !1675), !dbg !2805
  %1 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !2806
  %temp1 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %1, i32 0, i32 31, !dbg !2807
  %arraydecay2 = getelementptr inbounds [2048 x float], [2048 x float]* %temp1, i32 0, i32 0, !dbg !2806
  %add.ptr = getelementptr inbounds float, float* %arraydecay2, i64 1024, !dbg !2808
  store float* %add.ptr, float** %tmp1, align 8, !dbg !2805
  %2 = load float*, float** %tmp0, align 8, !dbg !2809
  %3 = bitcast float* %2 to i8*, !dbg !2810
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 4096, i32 4, i1 false), !dbg !2810
  %4 = load float*, float** %tmp1, align 8, !dbg !2811
  %5 = bitcast float* %4 to i8*, !dbg !2812
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 4096, i32 4, i1 false), !dbg !2812
  %6 = load i32, i32* %size.addr, align 4, !dbg !2813
  %cmp = icmp eq i32 %6, 512, !dbg !2815
  br i1 %cmp, label %if.then, label %if.else, !dbg !2816

if.then:                                          ; preds = %entry
  %7 = load float*, float** %src.addr, align 8, !dbg !2817
  %8 = load float*, float** %tmp0, align 8, !dbg !2819
  %arrayidx = getelementptr inbounds float, float* %8, i64 0, !dbg !2819
  call void @twiddle(float* %7, float* %arrayidx, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_1, i32 0, i32 0), i32 10, i32 2, i32 1, i32 3, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_1, i32 0, i32 0)), !dbg !2820
  %9 = load float*, float** %src.addr, align 8, !dbg !2821
  %add.ptr3 = getelementptr inbounds float, float* %9, i64 8, !dbg !2822
  %10 = load float*, float** %tmp0, align 8, !dbg !2823
  %arrayidx4 = getelementptr inbounds float, float* %10, i64 0, !dbg !2823
  call void @twiddle(float* %add.ptr3, float* %arrayidx4, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_2, i32 0, i32 0), i32 10, i32 2, i32 3, i32 1, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_2, i32 0, i32 0)), !dbg !2824
  %11 = load float*, float** %src.addr, align 8, !dbg !2825
  %add.ptr5 = getelementptr inbounds float, float* %11, i64 16, !dbg !2826
  %12 = load float*, float** %tmp0, align 8, !dbg !2827
  %arrayidx6 = getelementptr inbounds float, float* %12, i64 16, !dbg !2827
  call void @twiddle(float* %add.ptr5, float* %arrayidx6, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_2, i32 0, i32 0), i32 10, i32 2, i32 3, i32 1, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_2, i32 0, i32 0)), !dbg !2828
  %13 = load float*, float** %src.addr, align 8, !dbg !2829
  %add.ptr7 = getelementptr inbounds float, float* %13, i64 24, !dbg !2830
  %14 = load float*, float** %tmp0, align 8, !dbg !2831
  %arrayidx8 = getelementptr inbounds float, float* %14, i64 16, !dbg !2831
  call void @twiddle(float* %add.ptr7, float* %arrayidx8, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_1, i32 0, i32 0), i32 10, i32 2, i32 1, i32 3, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_1, i32 0, i32 0)), !dbg !2832
  %15 = load float*, float** %src.addr, align 8, !dbg !2833
  %add.ptr9 = getelementptr inbounds float, float* %15, i64 32, !dbg !2834
  %16 = load float*, float** %tmp0, align 8, !dbg !2835
  %arrayidx10 = getelementptr inbounds float, float* %16, i64 32, !dbg !2835
  call void @twiddle(float* %add.ptr9, float* %arrayidx10, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_1, i32 0, i32 0), i32 10, i32 2, i32 1, i32 3, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_1, i32 0, i32 0)), !dbg !2836
  %17 = load float*, float** %src.addr, align 8, !dbg !2837
  %add.ptr11 = getelementptr inbounds float, float* %17, i64 40, !dbg !2838
  %18 = load float*, float** %tmp0, align 8, !dbg !2839
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 32, !dbg !2839
  call void @twiddle(float* %add.ptr11, float* %arrayidx12, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_2, i32 0, i32 0), i32 10, i32 2, i32 3, i32 1, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_2, i32 0, i32 0)), !dbg !2840
  %19 = load float*, float** %src.addr, align 8, !dbg !2841
  %add.ptr13 = getelementptr inbounds float, float* %19, i64 48, !dbg !2842
  %20 = load float*, float** %tmp0, align 8, !dbg !2843
  %arrayidx14 = getelementptr inbounds float, float* %20, i64 48, !dbg !2843
  call void @twiddle(float* %add.ptr13, float* %arrayidx14, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_2, i32 0, i32 0), i32 10, i32 2, i32 3, i32 1, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_2, i32 0, i32 0)), !dbg !2844
  %21 = load float*, float** %src.addr, align 8, !dbg !2845
  %add.ptr15 = getelementptr inbounds float, float* %21, i64 56, !dbg !2846
  %22 = load float*, float** %tmp0, align 8, !dbg !2847
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 48, !dbg !2847
  call void @twiddle(float* %add.ptr15, float* %arrayidx16, i32 16, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_10_1, i32 0, i32 0), i32 10, i32 2, i32 1, i32 3, double** getelementptr inbounds ([4 x double*], [4 x double*]* @ff_on2avc_tabs_4_10_1, i32 0, i32 0)), !dbg !2848
  %23 = load float*, float** %tmp0, align 8, !dbg !2849
  %arrayidx17 = getelementptr inbounds float, float* %23, i64 0, !dbg !2849
  %24 = load float*, float** %tmp1, align 8, !dbg !2850
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !2850
  call void @twiddle(float* %arrayidx17, float* %arrayidx18, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2851
  %25 = load float*, float** %tmp0, align 8, !dbg !2852
  %arrayidx19 = getelementptr inbounds float, float* %25, i64 16, !dbg !2852
  %26 = load float*, float** %tmp1, align 8, !dbg !2853
  %arrayidx20 = getelementptr inbounds float, float* %26, i64 0, !dbg !2853
  call void @twiddle(float* %arrayidx19, float* %arrayidx20, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2854
  %27 = load float*, float** %tmp0, align 8, !dbg !2855
  %arrayidx21 = getelementptr inbounds float, float* %27, i64 32, !dbg !2855
  %28 = load float*, float** %tmp1, align 8, !dbg !2856
  %arrayidx22 = getelementptr inbounds float, float* %28, i64 32, !dbg !2856
  call void @twiddle(float* %arrayidx21, float* %arrayidx22, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2857
  %29 = load float*, float** %tmp0, align 8, !dbg !2858
  %arrayidx23 = getelementptr inbounds float, float* %29, i64 48, !dbg !2858
  %30 = load float*, float** %tmp1, align 8, !dbg !2859
  %arrayidx24 = getelementptr inbounds float, float* %30, i64 32, !dbg !2859
  call void @twiddle(float* %arrayidx23, float* %arrayidx24, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2860
  %31 = load float*, float** %src.addr, align 8, !dbg !2861
  %add.ptr25 = getelementptr inbounds float, float* %31, i64 64, !dbg !2862
  %32 = load float*, float** %tmp1, align 8, !dbg !2863
  %arrayidx26 = getelementptr inbounds float, float* %32, i64 64, !dbg !2863
  call void @twiddle(float* %add.ptr25, float* %arrayidx26, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2864
  %33 = load float*, float** %src.addr, align 8, !dbg !2865
  %add.ptr27 = getelementptr inbounds float, float* %33, i64 80, !dbg !2866
  %34 = load float*, float** %tmp1, align 8, !dbg !2867
  %arrayidx28 = getelementptr inbounds float, float* %34, i64 64, !dbg !2867
  call void @twiddle(float* %add.ptr27, float* %arrayidx28, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2868
  %35 = load float*, float** %src.addr, align 8, !dbg !2869
  %add.ptr29 = getelementptr inbounds float, float* %35, i64 96, !dbg !2870
  %36 = load float*, float** %tmp1, align 8, !dbg !2871
  %arrayidx30 = getelementptr inbounds float, float* %36, i64 96, !dbg !2871
  call void @twiddle(float* %add.ptr29, float* %arrayidx30, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2872
  %37 = load float*, float** %src.addr, align 8, !dbg !2873
  %add.ptr31 = getelementptr inbounds float, float* %37, i64 112, !dbg !2874
  %38 = load float*, float** %tmp1, align 8, !dbg !2875
  %arrayidx32 = getelementptr inbounds float, float* %38, i64 96, !dbg !2875
  call void @twiddle(float* %add.ptr31, float* %arrayidx32, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2876
  %39 = load float*, float** %tmp0, align 8, !dbg !2877
  %40 = bitcast float* %39 to i8*, !dbg !2878
  call void @llvm.memset.p0i8.i64(i8* %40, i8 0, i64 256, i32 4, i1 false), !dbg !2878
  %41 = load float*, float** %tmp1, align 8, !dbg !2879
  %arrayidx33 = getelementptr inbounds float, float* %41, i64 0, !dbg !2879
  %42 = load float*, float** %tmp0, align 8, !dbg !2880
  %arrayidx34 = getelementptr inbounds float, float* %42, i64 0, !dbg !2880
  call void @twiddle(float* %arrayidx33, float* %arrayidx34, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_1, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_1, i32 0, i32 0)), !dbg !2881
  %43 = load float*, float** %tmp1, align 8, !dbg !2882
  %arrayidx35 = getelementptr inbounds float, float* %43, i64 32, !dbg !2882
  %44 = load float*, float** %tmp0, align 8, !dbg !2883
  %arrayidx36 = getelementptr inbounds float, float* %44, i64 0, !dbg !2883
  call void @twiddle(float* %arrayidx35, float* %arrayidx36, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_2, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_2, i32 0, i32 0)), !dbg !2884
  %45 = load float*, float** %tmp1, align 8, !dbg !2885
  %arrayidx37 = getelementptr inbounds float, float* %45, i64 64, !dbg !2885
  %46 = load float*, float** %tmp0, align 8, !dbg !2886
  %arrayidx38 = getelementptr inbounds float, float* %46, i64 0, !dbg !2886
  call void @twiddle(float* %arrayidx37, float* %arrayidx38, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_3, i32 0, i32 0), i32 84, i32 4, i32 13, i32 7, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_3, i32 0, i32 0)), !dbg !2887
  %47 = load float*, float** %tmp1, align 8, !dbg !2888
  %arrayidx39 = getelementptr inbounds float, float* %47, i64 96, !dbg !2888
  %48 = load float*, float** %tmp0, align 8, !dbg !2889
  %arrayidx40 = getelementptr inbounds float, float* %48, i64 0, !dbg !2889
  call void @twiddle(float* %arrayidx39, float* %arrayidx40, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_4, i32 0, i32 0), i32 84, i32 4, i32 15, i32 5, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_4, i32 0, i32 0)), !dbg !2890
  %49 = load float*, float** %src.addr, align 8, !dbg !2891
  %add.ptr41 = getelementptr inbounds float, float* %49, i64 128, !dbg !2892
  %50 = load float*, float** %tmp0, align 8, !dbg !2893
  %arrayidx42 = getelementptr inbounds float, float* %50, i64 128, !dbg !2893
  call void @twiddle(float* %add.ptr41, float* %arrayidx42, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_4, i32 0, i32 0), i32 84, i32 4, i32 15, i32 5, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_4, i32 0, i32 0)), !dbg !2894
  %51 = load float*, float** %src.addr, align 8, !dbg !2895
  %add.ptr43 = getelementptr inbounds float, float* %51, i64 160, !dbg !2896
  %52 = load float*, float** %tmp0, align 8, !dbg !2897
  %arrayidx44 = getelementptr inbounds float, float* %52, i64 128, !dbg !2897
  call void @twiddle(float* %add.ptr43, float* %arrayidx44, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_3, i32 0, i32 0), i32 84, i32 4, i32 13, i32 7, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_3, i32 0, i32 0)), !dbg !2898
  %53 = load float*, float** %src.addr, align 8, !dbg !2899
  %add.ptr45 = getelementptr inbounds float, float* %53, i64 192, !dbg !2900
  %54 = load float*, float** %tmp0, align 8, !dbg !2901
  %arrayidx46 = getelementptr inbounds float, float* %54, i64 128, !dbg !2901
  call void @twiddle(float* %add.ptr45, float* %arrayidx46, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_2, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_2, i32 0, i32 0)), !dbg !2902
  %55 = load float*, float** %src.addr, align 8, !dbg !2903
  %add.ptr47 = getelementptr inbounds float, float* %55, i64 224, !dbg !2904
  %56 = load float*, float** %tmp0, align 8, !dbg !2905
  %arrayidx48 = getelementptr inbounds float, float* %56, i64 128, !dbg !2905
  call void @twiddle(float* %add.ptr47, float* %arrayidx48, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_1, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_1, i32 0, i32 0)), !dbg !2906
  %57 = load float*, float** %src.addr, align 8, !dbg !2907
  %add.ptr49 = getelementptr inbounds float, float* %57, i64 256, !dbg !2908
  %58 = load float*, float** %tmp0, align 8, !dbg !2909
  %arrayidx50 = getelementptr inbounds float, float* %58, i64 256, !dbg !2909
  call void @twiddle(float* %add.ptr49, float* %arrayidx50, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_1, i32 0, i32 0), i32 40, i32 2, i32 11, i32 8, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_1, i32 0, i32 0)), !dbg !2910
  %59 = load float*, float** %src.addr, align 8, !dbg !2911
  %add.ptr51 = getelementptr inbounds float, float* %59, i64 320, !dbg !2912
  %60 = load float*, float** %tmp0, align 8, !dbg !2913
  %arrayidx52 = getelementptr inbounds float, float* %60, i64 256, !dbg !2913
  call void @twiddle(float* %add.ptr51, float* %arrayidx52, i32 128, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_2, i32 0, i32 0), i32 40, i32 2, i32 8, i32 11, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_2, i32 0, i32 0)), !dbg !2914
  %61 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !2915
  %62 = load float*, float** %out.addr, align 8, !dbg !2916
  %63 = load float*, float** %src.addr, align 8, !dbg !2917
  %64 = load float*, float** %tmp0, align 8, !dbg !2918
  %65 = load float*, float** %tmp1, align 8, !dbg !2919
  call void @wtf_end_512(%struct.On2AVCContext* %61, float* %62, float* %63, float* %64, float* %65), !dbg !2920
  br label %if.end, !dbg !2921

if.else:                                          ; preds = %entry
  %66 = load float*, float** %src.addr, align 8, !dbg !2922
  %67 = load float*, float** %tmp0, align 8, !dbg !2924
  %arrayidx53 = getelementptr inbounds float, float* %67, i64 0, !dbg !2924
  call void @twiddle(float* %66, float* %arrayidx53, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2925
  %68 = load float*, float** %src.addr, align 8, !dbg !2926
  %add.ptr54 = getelementptr inbounds float, float* %68, i64 16, !dbg !2927
  %69 = load float*, float** %tmp0, align 8, !dbg !2928
  %arrayidx55 = getelementptr inbounds float, float* %69, i64 0, !dbg !2928
  call void @twiddle(float* %add.ptr54, float* %arrayidx55, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2929
  %70 = load float*, float** %src.addr, align 8, !dbg !2930
  %add.ptr56 = getelementptr inbounds float, float* %70, i64 32, !dbg !2931
  %71 = load float*, float** %tmp0, align 8, !dbg !2932
  %arrayidx57 = getelementptr inbounds float, float* %71, i64 32, !dbg !2932
  call void @twiddle(float* %add.ptr56, float* %arrayidx57, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2933
  %72 = load float*, float** %src.addr, align 8, !dbg !2934
  %add.ptr58 = getelementptr inbounds float, float* %72, i64 48, !dbg !2935
  %73 = load float*, float** %tmp0, align 8, !dbg !2936
  %arrayidx59 = getelementptr inbounds float, float* %73, i64 32, !dbg !2936
  call void @twiddle(float* %add.ptr58, float* %arrayidx59, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2937
  %74 = load float*, float** %src.addr, align 8, !dbg !2938
  %add.ptr60 = getelementptr inbounds float, float* %74, i64 64, !dbg !2939
  %75 = load float*, float** %tmp0, align 8, !dbg !2940
  %arrayidx61 = getelementptr inbounds float, float* %75, i64 64, !dbg !2940
  call void @twiddle(float* %add.ptr60, float* %arrayidx61, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2941
  %76 = load float*, float** %src.addr, align 8, !dbg !2942
  %add.ptr62 = getelementptr inbounds float, float* %76, i64 80, !dbg !2943
  %77 = load float*, float** %tmp0, align 8, !dbg !2944
  %arrayidx63 = getelementptr inbounds float, float* %77, i64 64, !dbg !2944
  call void @twiddle(float* %add.ptr62, float* %arrayidx63, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2945
  %78 = load float*, float** %src.addr, align 8, !dbg !2946
  %add.ptr64 = getelementptr inbounds float, float* %78, i64 96, !dbg !2947
  %79 = load float*, float** %tmp0, align 8, !dbg !2948
  %arrayidx65 = getelementptr inbounds float, float* %79, i64 96, !dbg !2948
  call void @twiddle(float* %add.ptr64, float* %arrayidx65, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_2, i32 0, i32 0), i32 20, i32 2, i32 4, i32 5, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_2, i32 0, i32 0)), !dbg !2949
  %80 = load float*, float** %src.addr, align 8, !dbg !2950
  %add.ptr66 = getelementptr inbounds float, float* %80, i64 112, !dbg !2951
  %81 = load float*, float** %tmp0, align 8, !dbg !2952
  %arrayidx67 = getelementptr inbounds float, float* %81, i64 96, !dbg !2952
  call void @twiddle(float* %add.ptr66, float* %arrayidx67, i32 32, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_20_1, i32 0, i32 0), i32 20, i32 2, i32 5, i32 4, double** getelementptr inbounds ([9 x double*], [9 x double*]* @ff_on2avc_tabs_9_20_1, i32 0, i32 0)), !dbg !2953
  %82 = load float*, float** %tmp0, align 8, !dbg !2954
  %arrayidx68 = getelementptr inbounds float, float* %82, i64 0, !dbg !2954
  %83 = load float*, float** %tmp1, align 8, !dbg !2955
  %arrayidx69 = getelementptr inbounds float, float* %83, i64 0, !dbg !2955
  call void @twiddle(float* %arrayidx68, float* %arrayidx69, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_1, i32 0, i32 0), i32 40, i32 2, i32 11, i32 8, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_1, i32 0, i32 0)), !dbg !2956
  %84 = load float*, float** %tmp0, align 8, !dbg !2957
  %arrayidx70 = getelementptr inbounds float, float* %84, i64 32, !dbg !2957
  %85 = load float*, float** %tmp1, align 8, !dbg !2958
  %arrayidx71 = getelementptr inbounds float, float* %85, i64 0, !dbg !2958
  call void @twiddle(float* %arrayidx70, float* %arrayidx71, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_2, i32 0, i32 0), i32 40, i32 2, i32 8, i32 11, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_2, i32 0, i32 0)), !dbg !2959
  %86 = load float*, float** %tmp0, align 8, !dbg !2960
  %arrayidx72 = getelementptr inbounds float, float* %86, i64 64, !dbg !2960
  %87 = load float*, float** %tmp1, align 8, !dbg !2961
  %arrayidx73 = getelementptr inbounds float, float* %87, i64 64, !dbg !2961
  call void @twiddle(float* %arrayidx72, float* %arrayidx73, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_2, i32 0, i32 0), i32 40, i32 2, i32 8, i32 11, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_2, i32 0, i32 0)), !dbg !2962
  %88 = load float*, float** %tmp0, align 8, !dbg !2963
  %arrayidx74 = getelementptr inbounds float, float* %88, i64 96, !dbg !2963
  %89 = load float*, float** %tmp1, align 8, !dbg !2964
  %arrayidx75 = getelementptr inbounds float, float* %89, i64 64, !dbg !2964
  call void @twiddle(float* %arrayidx74, float* %arrayidx75, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_1, i32 0, i32 0), i32 40, i32 2, i32 11, i32 8, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_1, i32 0, i32 0)), !dbg !2965
  %90 = load float*, float** %src.addr, align 8, !dbg !2966
  %add.ptr76 = getelementptr inbounds float, float* %90, i64 128, !dbg !2967
  %91 = load float*, float** %tmp1, align 8, !dbg !2968
  %arrayidx77 = getelementptr inbounds float, float* %91, i64 128, !dbg !2968
  call void @twiddle(float* %add.ptr76, float* %arrayidx77, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_1, i32 0, i32 0), i32 40, i32 2, i32 11, i32 8, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_1, i32 0, i32 0)), !dbg !2969
  %92 = load float*, float** %src.addr, align 8, !dbg !2970
  %add.ptr78 = getelementptr inbounds float, float* %92, i64 160, !dbg !2971
  %93 = load float*, float** %tmp1, align 8, !dbg !2972
  %arrayidx79 = getelementptr inbounds float, float* %93, i64 128, !dbg !2972
  call void @twiddle(float* %add.ptr78, float* %arrayidx79, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_2, i32 0, i32 0), i32 40, i32 2, i32 8, i32 11, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_2, i32 0, i32 0)), !dbg !2973
  %94 = load float*, float** %src.addr, align 8, !dbg !2974
  %add.ptr80 = getelementptr inbounds float, float* %94, i64 192, !dbg !2975
  %95 = load float*, float** %tmp1, align 8, !dbg !2976
  %arrayidx81 = getelementptr inbounds float, float* %95, i64 192, !dbg !2976
  call void @twiddle(float* %add.ptr80, float* %arrayidx81, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_2, i32 0, i32 0), i32 40, i32 2, i32 8, i32 11, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_2, i32 0, i32 0)), !dbg !2977
  %96 = load float*, float** %src.addr, align 8, !dbg !2978
  %add.ptr82 = getelementptr inbounds float, float* %96, i64 224, !dbg !2979
  %97 = load float*, float** %tmp1, align 8, !dbg !2980
  %arrayidx83 = getelementptr inbounds float, float* %97, i64 192, !dbg !2980
  call void @twiddle(float* %add.ptr82, float* %arrayidx83, i32 64, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_1, i32 0, i32 0), i32 40, i32 2, i32 11, i32 8, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_1, i32 0, i32 0)), !dbg !2981
  %98 = load float*, float** %tmp0, align 8, !dbg !2982
  %99 = bitcast float* %98 to i8*, !dbg !2983
  call void @llvm.memset.p0i8.i64(i8* %99, i8 0, i64 512, i32 4, i1 false), !dbg !2983
  %100 = load float*, float** %tmp1, align 8, !dbg !2984
  %arrayidx84 = getelementptr inbounds float, float* %100, i64 0, !dbg !2984
  %101 = load float*, float** %tmp0, align 8, !dbg !2985
  %arrayidx85 = getelementptr inbounds float, float* %101, i64 0, !dbg !2985
  call void @twiddle(float* %arrayidx84, float* %arrayidx85, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_1, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_1, i32 0, i32 0)), !dbg !2986
  %102 = load float*, float** %tmp1, align 8, !dbg !2987
  %arrayidx86 = getelementptr inbounds float, float* %102, i64 64, !dbg !2987
  %103 = load float*, float** %tmp0, align 8, !dbg !2988
  %arrayidx87 = getelementptr inbounds float, float* %103, i64 0, !dbg !2988
  call void @twiddle(float* %arrayidx86, float* %arrayidx87, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_2, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_2, i32 0, i32 0)), !dbg !2989
  %104 = load float*, float** %tmp1, align 8, !dbg !2990
  %arrayidx88 = getelementptr inbounds float, float* %104, i64 128, !dbg !2990
  %105 = load float*, float** %tmp0, align 8, !dbg !2991
  %arrayidx89 = getelementptr inbounds float, float* %105, i64 0, !dbg !2991
  call void @twiddle(float* %arrayidx88, float* %arrayidx89, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_3, i32 0, i32 0), i32 84, i32 4, i32 13, i32 7, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_3, i32 0, i32 0)), !dbg !2992
  %106 = load float*, float** %tmp1, align 8, !dbg !2993
  %arrayidx90 = getelementptr inbounds float, float* %106, i64 192, !dbg !2993
  %107 = load float*, float** %tmp0, align 8, !dbg !2994
  %arrayidx91 = getelementptr inbounds float, float* %107, i64 0, !dbg !2994
  call void @twiddle(float* %arrayidx90, float* %arrayidx91, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_4, i32 0, i32 0), i32 84, i32 4, i32 15, i32 5, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_4, i32 0, i32 0)), !dbg !2995
  %108 = load float*, float** %src.addr, align 8, !dbg !2996
  %add.ptr92 = getelementptr inbounds float, float* %108, i64 256, !dbg !2997
  %109 = load float*, float** %tmp0, align 8, !dbg !2998
  %arrayidx93 = getelementptr inbounds float, float* %109, i64 256, !dbg !2998
  call void @twiddle(float* %add.ptr92, float* %arrayidx93, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_4, i32 0, i32 0), i32 84, i32 4, i32 15, i32 5, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_4, i32 0, i32 0)), !dbg !2999
  %110 = load float*, float** %src.addr, align 8, !dbg !3000
  %add.ptr94 = getelementptr inbounds float, float* %110, i64 320, !dbg !3001
  %111 = load float*, float** %tmp0, align 8, !dbg !3002
  %arrayidx95 = getelementptr inbounds float, float* %111, i64 256, !dbg !3002
  call void @twiddle(float* %add.ptr94, float* %arrayidx95, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_3, i32 0, i32 0), i32 84, i32 4, i32 13, i32 7, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_3, i32 0, i32 0)), !dbg !3003
  %112 = load float*, float** %src.addr, align 8, !dbg !3004
  %add.ptr96 = getelementptr inbounds float, float* %112, i64 384, !dbg !3005
  %113 = load float*, float** %tmp0, align 8, !dbg !3006
  %arrayidx97 = getelementptr inbounds float, float* %113, i64 256, !dbg !3006
  call void @twiddle(float* %add.ptr96, float* %arrayidx97, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_2, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_2, i32 0, i32 0)), !dbg !3007
  %114 = load float*, float** %src.addr, align 8, !dbg !3008
  %add.ptr98 = getelementptr inbounds float, float* %114, i64 448, !dbg !3009
  %115 = load float*, float** %tmp0, align 8, !dbg !3010
  %arrayidx99 = getelementptr inbounds float, float* %115, i64 256, !dbg !3010
  call void @twiddle(float* %add.ptr98, float* %arrayidx99, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_84_1, i32 0, i32 0), i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_1, i32 0, i32 0)), !dbg !3011
  %116 = load float*, float** %src.addr, align 8, !dbg !3012
  %add.ptr100 = getelementptr inbounds float, float* %116, i64 512, !dbg !3013
  %117 = load float*, float** %tmp0, align 8, !dbg !3014
  %arrayidx101 = getelementptr inbounds float, float* %117, i64 512, !dbg !3014
  call void @twiddle(float* %add.ptr100, float* %arrayidx101, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_1, i32 0, i32 0), i32 40, i32 2, i32 11, i32 8, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_1, i32 0, i32 0)), !dbg !3015
  %118 = load float*, float** %src.addr, align 8, !dbg !3016
  %add.ptr102 = getelementptr inbounds float, float* %118, i64 640, !dbg !3017
  %119 = load float*, float** %tmp0, align 8, !dbg !3018
  %arrayidx103 = getelementptr inbounds float, float* %119, i64 512, !dbg !3018
  call void @twiddle(float* %add.ptr102, float* %arrayidx103, i32 256, double* getelementptr inbounds ([0 x double], [0 x double]* @ff_on2avc_tab_40_2, i32 0, i32 0), i32 40, i32 2, i32 8, i32 11, double** getelementptr inbounds ([19 x double*], [19 x double*]* @ff_on2avc_tabs_19_40_2, i32 0, i32 0)), !dbg !3019
  %120 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3020
  %121 = load float*, float** %out.addr, align 8, !dbg !3021
  %122 = load float*, float** %src.addr, align 8, !dbg !3022
  %123 = load float*, float** %tmp0, align 8, !dbg !3023
  %124 = load float*, float** %tmp1, align 8, !dbg !3024
  call void @wtf_end_1024(%struct.On2AVCContext* %120, float* %121, float* %122, float* %123, float* %124), !dbg !3025
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3026
}

declare i32 @ff_mdct_init(%struct.FFTContext*, i32, i32, double) #3

declare i32 @ff_fft_init(%struct.FFTContext*, i32, i32) #3

declare %struct.AVFloatDSPContext* @avpriv_float_dsp_alloc(i32) #3

declare i32 @ff_init_vlc_sparse(%struct.VLC*, i32, i32, i8*, i32, i32, i8*, i32, i32, i8*, i32, i32, i32) #3

; Function Attrs: cold nounwind optsize uwtable
define internal void @on2avc_free_vlcs(%struct.On2AVCContext* %c) #0 !dbg !3027 {
entry:
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %i = alloca i32, align 4
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !3030, metadata !1675), !dbg !3031
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3032, metadata !1675), !dbg !3033
  %0 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3034
  %scale_diff = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %0, i32 0, i32 26, !dbg !3035
  call void @ff_free_vlc(%struct.VLC* %scale_diff), !dbg !3036
  store i32 1, i32* %i, align 4, !dbg !3037
  br label %for.cond, !dbg !3039

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !3040
  %cmp = icmp slt i32 %1, 16, !dbg !3043
  br i1 %cmp, label %for.body, label %for.end, !dbg !3044

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !3045
  %idxprom = sext i32 %2 to i64, !dbg !3046
  %3 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3046
  %cb_vlc = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %3, i32 0, i32 27, !dbg !3047
  %arrayidx = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %cb_vlc, i64 0, i64 %idxprom, !dbg !3046
  call void @ff_free_vlc(%struct.VLC* %arrayidx), !dbg !3048
  br label %for.inc, !dbg !3048

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !3049
  %inc = add nsw i32 %4, 1, !dbg !3049
  store i32 %inc, i32* %i, align 4, !dbg !3049
  br label %for.cond, !dbg !3051, !llvm.loop !3052

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3054
}

declare void @av_freep(i8*) #3

; Function Attrs: nounwind
declare double @exp2(double) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define internal void @twiddle(float* %src1, float* %src2, i32 %src2_len, double* %tab, i32 %tab_len, i32 %step, i32 %order0, i32 %order1, double** %tabs) #1 !dbg !3055 {
entry:
  %src1.addr = alloca float*, align 8
  %src2.addr = alloca float*, align 8
  %src2_len.addr = alloca i32, align 4
  %tab.addr = alloca double*, align 8
  %tab_len.addr = alloca i32, align 4
  %step.addr = alloca i32, align 4
  %order0.addr = alloca i32, align 4
  %order1.addr = alloca i32, align 4
  %tabs.addr = alloca double**, align 8
  %steps = alloca i32, align 4
  %mask = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %in0 = alloca float, align 4
  %pos = alloca i32, align 4
  %t = alloca double*, align 8
  store float* %src1, float** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src1.addr, metadata !3060, metadata !1675), !dbg !3061
  store float* %src2, float** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src2.addr, metadata !3062, metadata !1675), !dbg !3063
  store i32 %src2_len, i32* %src2_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src2_len.addr, metadata !3064, metadata !1675), !dbg !3065
  store double* %tab, double** %tab.addr, align 8
  call void @llvm.dbg.declare(metadata double** %tab.addr, metadata !3066, metadata !1675), !dbg !3067
  store i32 %tab_len, i32* %tab_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tab_len.addr, metadata !3068, metadata !1675), !dbg !3069
  store i32 %step, i32* %step.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %step.addr, metadata !3070, metadata !1675), !dbg !3071
  store i32 %order0, i32* %order0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order0.addr, metadata !3072, metadata !1675), !dbg !3073
  store i32 %order1, i32* %order1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order1.addr, metadata !3074, metadata !1675), !dbg !3075
  store double** %tabs, double*** %tabs.addr, align 8
  call void @llvm.dbg.declare(metadata double*** %tabs.addr, metadata !3076, metadata !1675), !dbg !3077
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !3078, metadata !1675), !dbg !3079
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !3080, metadata !1675), !dbg !3081
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3082, metadata !1675), !dbg !3083
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3084, metadata !1675), !dbg !3085
  %0 = load i32, i32* %src2_len.addr, align 4, !dbg !3086
  %1 = load i32, i32* %tab_len.addr, align 4, !dbg !3087
  %sub = sub nsw i32 %0, %1, !dbg !3088
  %2 = load i32, i32* %step.addr, align 4, !dbg !3089
  %div = sdiv i32 %sub, %2, !dbg !3090
  %add = add nsw i32 %div, 1, !dbg !3091
  store i32 %add, i32* %steps, align 4, !dbg !3092
  %3 = load float*, float** %src1.addr, align 8, !dbg !3093
  %4 = load float*, float** %src2.addr, align 8, !dbg !3094
  %5 = load i32, i32* %src2_len.addr, align 4, !dbg !3095
  %6 = load i32, i32* %tab_len.addr, align 4, !dbg !3096
  %7 = load i32, i32* %step.addr, align 4, !dbg !3097
  %8 = load i32, i32* %order0.addr, align 4, !dbg !3098
  %9 = load i32, i32* %order1.addr, align 4, !dbg !3099
  %10 = load double**, double*** %tabs.addr, align 8, !dbg !3100
  call void @pretwiddle(float* %3, float* %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, double** %10), !dbg !3101
  %11 = load i32, i32* %tab_len.addr, align 4, !dbg !3102
  %sub1 = sub nsw i32 %11, 1, !dbg !3103
  store i32 %sub1, i32* %mask, align 4, !dbg !3104
  store i32 0, i32* %i, align 4, !dbg !3105
  br label %for.cond, !dbg !3107

for.cond:                                         ; preds = %for.inc52, %entry
  %12 = load i32, i32* %i, align 4, !dbg !3108
  %13 = load i32, i32* %steps, align 4, !dbg !3111
  %cmp = icmp slt i32 %12, %13, !dbg !3112
  br i1 %cmp, label %for.body, label %for.end54, !dbg !3113

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %in0, metadata !3114, metadata !1675), !dbg !3116
  %14 = load i32, i32* %order0.addr, align 4, !dbg !3117
  %15 = load i32, i32* %i, align 4, !dbg !3118
  %add2 = add nsw i32 %14, %15, !dbg !3119
  %idxprom = sext i32 %add2 to i64, !dbg !3120
  %16 = load float*, float** %src1.addr, align 8, !dbg !3120
  %arrayidx = getelementptr inbounds float, float* %16, i64 %idxprom, !dbg !3120
  %17 = load float, float* %arrayidx, align 4, !dbg !3120
  store float %17, float* %in0, align 4, !dbg !3116
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !3121, metadata !1675), !dbg !3122
  %18 = load i32, i32* %src2_len.addr, align 4, !dbg !3123
  %sub3 = sub nsw i32 %18, 1, !dbg !3124
  %19 = load i32, i32* %mask, align 4, !dbg !3125
  %and = and i32 %sub3, %19, !dbg !3126
  store i32 %and, i32* %pos, align 4, !dbg !3122
  %20 = load i32, i32* %pos, align 4, !dbg !3127
  %21 = load i32, i32* %tab_len.addr, align 4, !dbg !3129
  %cmp4 = icmp slt i32 %20, %21, !dbg !3130
  br i1 %cmp4, label %if.then, label %if.else, !dbg !3131

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata double** %t, metadata !3132, metadata !1675), !dbg !3134
  %22 = load double*, double** %tab.addr, align 8, !dbg !3135
  store double* %22, double** %t, align 8, !dbg !3134
  %23 = load i32, i32* %pos, align 4, !dbg !3136
  store i32 %23, i32* %j, align 4, !dbg !3138
  br label %for.cond5, !dbg !3139

for.cond5:                                        ; preds = %for.inc, %if.then
  %24 = load i32, i32* %j, align 4, !dbg !3140
  %cmp6 = icmp sge i32 %24, 0, !dbg !3143
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !3144

for.body7:                                        ; preds = %for.cond5
  %25 = load float, float* %in0, align 4, !dbg !3145
  %conv = fpext float %25 to double, !dbg !3145
  %26 = load double*, double** %t, align 8, !dbg !3146
  %incdec.ptr = getelementptr inbounds double, double* %26, i32 1, !dbg !3146
  store double* %incdec.ptr, double** %t, align 8, !dbg !3146
  %27 = load double, double* %26, align 8, !dbg !3147
  %mul = fmul double %conv, %27, !dbg !3148
  %28 = load i32, i32* %j, align 4, !dbg !3149
  %idxprom8 = sext i32 %28 to i64, !dbg !3150
  %29 = load float*, float** %src2.addr, align 8, !dbg !3150
  %arrayidx9 = getelementptr inbounds float, float* %29, i64 %idxprom8, !dbg !3150
  %30 = load float, float* %arrayidx9, align 4, !dbg !3151
  %conv10 = fpext float %30 to double, !dbg !3151
  %add11 = fadd double %conv10, %mul, !dbg !3151
  %conv12 = fptrunc double %add11 to float, !dbg !3151
  store float %conv12, float* %arrayidx9, align 4, !dbg !3151
  br label %for.inc, !dbg !3150

for.inc:                                          ; preds = %for.body7
  %31 = load i32, i32* %j, align 4, !dbg !3152
  %dec = add nsw i32 %31, -1, !dbg !3152
  store i32 %dec, i32* %j, align 4, !dbg !3152
  br label %for.cond5, !dbg !3154, !llvm.loop !3155

for.end:                                          ; preds = %for.cond5
  store i32 0, i32* %j, align 4, !dbg !3157
  br label %for.cond13, !dbg !3159

for.cond13:                                       ; preds = %for.inc32, %for.end
  %32 = load i32, i32* %j, align 4, !dbg !3160
  %33 = load i32, i32* %tab_len.addr, align 4, !dbg !3163
  %34 = load i32, i32* %pos, align 4, !dbg !3164
  %sub14 = sub nsw i32 %33, %34, !dbg !3165
  %sub15 = sub nsw i32 %sub14, 1, !dbg !3166
  %cmp16 = icmp slt i32 %32, %sub15, !dbg !3167
  br i1 %cmp16, label %for.body18, label %for.end33, !dbg !3168

for.body18:                                       ; preds = %for.cond13
  %35 = load float, float* %in0, align 4, !dbg !3169
  %conv19 = fpext float %35 to double, !dbg !3169
  %36 = load i32, i32* %pos, align 4, !dbg !3170
  %add20 = add nsw i32 %36, 1, !dbg !3171
  %37 = load i32, i32* %j, align 4, !dbg !3172
  %add21 = add nsw i32 %add20, %37, !dbg !3173
  %idxprom22 = sext i32 %add21 to i64, !dbg !3174
  %38 = load double*, double** %tab.addr, align 8, !dbg !3174
  %arrayidx23 = getelementptr inbounds double, double* %38, i64 %idxprom22, !dbg !3174
  %39 = load double, double* %arrayidx23, align 8, !dbg !3174
  %mul24 = fmul double %conv19, %39, !dbg !3175
  %40 = load i32, i32* %src2_len.addr, align 4, !dbg !3176
  %41 = load i32, i32* %j, align 4, !dbg !3177
  %sub25 = sub nsw i32 %40, %41, !dbg !3178
  %sub26 = sub nsw i32 %sub25, 1, !dbg !3179
  %idxprom27 = sext i32 %sub26 to i64, !dbg !3180
  %42 = load float*, float** %src2.addr, align 8, !dbg !3180
  %arrayidx28 = getelementptr inbounds float, float* %42, i64 %idxprom27, !dbg !3180
  %43 = load float, float* %arrayidx28, align 4, !dbg !3181
  %conv29 = fpext float %43 to double, !dbg !3181
  %add30 = fadd double %conv29, %mul24, !dbg !3181
  %conv31 = fptrunc double %add30 to float, !dbg !3181
  store float %conv31, float* %arrayidx28, align 4, !dbg !3181
  br label %for.inc32, !dbg !3180

for.inc32:                                        ; preds = %for.body18
  %44 = load i32, i32* %j, align 4, !dbg !3182
  %inc = add nsw i32 %44, 1, !dbg !3182
  store i32 %inc, i32* %j, align 4, !dbg !3182
  br label %for.cond13, !dbg !3184, !llvm.loop !3185

for.end33:                                        ; preds = %for.cond13
  br label %if.end, !dbg !3187

if.else:                                          ; preds = %for.body
  store i32 0, i32* %j, align 4, !dbg !3188
  br label %for.cond34, !dbg !3191

for.cond34:                                       ; preds = %for.inc48, %if.else
  %45 = load i32, i32* %j, align 4, !dbg !3192
  %46 = load i32, i32* %tab_len.addr, align 4, !dbg !3195
  %cmp35 = icmp slt i32 %45, %46, !dbg !3196
  br i1 %cmp35, label %for.body37, label %for.end50, !dbg !3197

for.body37:                                       ; preds = %for.cond34
  %47 = load float, float* %in0, align 4, !dbg !3198
  %conv38 = fpext float %47 to double, !dbg !3198
  %48 = load i32, i32* %j, align 4, !dbg !3199
  %idxprom39 = sext i32 %48 to i64, !dbg !3200
  %49 = load double*, double** %tab.addr, align 8, !dbg !3200
  %arrayidx40 = getelementptr inbounds double, double* %49, i64 %idxprom39, !dbg !3200
  %50 = load double, double* %arrayidx40, align 8, !dbg !3200
  %mul41 = fmul double %conv38, %50, !dbg !3201
  %51 = load i32, i32* %pos, align 4, !dbg !3202
  %52 = load i32, i32* %j, align 4, !dbg !3203
  %sub42 = sub nsw i32 %51, %52, !dbg !3204
  %idxprom43 = sext i32 %sub42 to i64, !dbg !3205
  %53 = load float*, float** %src2.addr, align 8, !dbg !3205
  %arrayidx44 = getelementptr inbounds float, float* %53, i64 %idxprom43, !dbg !3205
  %54 = load float, float* %arrayidx44, align 4, !dbg !3206
  %conv45 = fpext float %54 to double, !dbg !3206
  %add46 = fadd double %conv45, %mul41, !dbg !3206
  %conv47 = fptrunc double %add46 to float, !dbg !3206
  store float %conv47, float* %arrayidx44, align 4, !dbg !3206
  br label %for.inc48, !dbg !3205

for.inc48:                                        ; preds = %for.body37
  %55 = load i32, i32* %j, align 4, !dbg !3207
  %inc49 = add nsw i32 %55, 1, !dbg !3207
  store i32 %inc49, i32* %j, align 4, !dbg !3207
  br label %for.cond34, !dbg !3209, !llvm.loop !3210

for.end50:                                        ; preds = %for.cond34
  br label %if.end

if.end:                                           ; preds = %for.end50, %for.end33
  %56 = load i32, i32* %pos, align 4, !dbg !3212
  %57 = load i32, i32* %step.addr, align 4, !dbg !3213
  %add51 = add nsw i32 %56, %57, !dbg !3214
  store i32 %add51, i32* %mask, align 4, !dbg !3215
  br label %for.inc52, !dbg !3216

for.inc52:                                        ; preds = %if.end
  %58 = load i32, i32* %i, align 4, !dbg !3217
  %inc53 = add nsw i32 %58, 1, !dbg !3217
  store i32 %inc53, i32* %i, align 4, !dbg !3217
  br label %for.cond, !dbg !3219, !llvm.loop !3220

for.end54:                                        ; preds = %for.cond
  ret void, !dbg !3222
}

; Function Attrs: nounwind uwtable
define internal void @wtf_end_512(%struct.On2AVCContext* %c, float* %out, float* %src, float* %tmp0, float* %tmp1) #1 !dbg !3223 {
entry:
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %out.addr = alloca float*, align 8
  %src.addr = alloca float*, align 8
  %tmp0.addr = alloca float*, align 8
  %tmp1.addr = alloca float*, align 8
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !3226, metadata !1675), !dbg !3227
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !3228, metadata !1675), !dbg !3229
  store float* %src, float** %src.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src.addr, metadata !3230, metadata !1675), !dbg !3231
  store float* %tmp0, float** %tmp0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tmp0.addr, metadata !3232, metadata !1675), !dbg !3233
  store float* %tmp1, float** %tmp1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tmp1.addr, metadata !3234, metadata !1675), !dbg !3235
  %0 = load float*, float** %src.addr, align 8, !dbg !3236
  %1 = bitcast float* %0 to i8*, !dbg !3237
  %2 = load float*, float** %tmp0.addr, align 8, !dbg !3238
  %3 = bitcast float* %2 to i8*, !dbg !3237
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %3, i64 1536, i32 4, i1 false), !dbg !3237
  %4 = load float*, float** %tmp0.addr, align 8, !dbg !3239
  %add.ptr = getelementptr inbounds float, float* %4, i64 384, !dbg !3240
  %5 = bitcast float* %add.ptr to i8*, !dbg !3241
  %6 = load float*, float** %src.addr, align 8, !dbg !3242
  %add.ptr1 = getelementptr inbounds float, float* %6, i64 384, !dbg !3243
  %7 = bitcast float* %add.ptr1 to i8*, !dbg !3241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %7, i64 512, i32 4, i1 false), !dbg !3241
  %8 = load float*, float** %src.addr, align 8, !dbg !3244
  call void @zero_head_and_tail(float* %8, i32 128, i32 16, i32 4), !dbg !3245
  %9 = load float*, float** %src.addr, align 8, !dbg !3246
  %add.ptr2 = getelementptr inbounds float, float* %9, i64 128, !dbg !3247
  call void @zero_head_and_tail(float* %add.ptr2, i32 128, i32 16, i32 4), !dbg !3248
  %10 = load float*, float** %src.addr, align 8, !dbg !3249
  %add.ptr3 = getelementptr inbounds float, float* %10, i64 256, !dbg !3250
  call void @zero_head_and_tail(float* %add.ptr3, i32 128, i32 13, i32 7), !dbg !3251
  %11 = load float*, float** %src.addr, align 8, !dbg !3252
  %add.ptr4 = getelementptr inbounds float, float* %11, i64 384, !dbg !3253
  call void @zero_head_and_tail(float* %add.ptr4, i32 128, i32 15, i32 5), !dbg !3254
  %12 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3255
  %fft128 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %12, i32 0, i32 5, !dbg !3256
  %fft_permute = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft128, i32 0, i32 8, !dbg !3257
  %13 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_permute, align 16, !dbg !3257
  %14 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3258
  %fft1285 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %14, i32 0, i32 5, !dbg !3259
  %15 = load float*, float** %src.addr, align 8, !dbg !3260
  %16 = bitcast float* %15 to %struct.FFTComplex*, !dbg !3261
  call void %13(%struct.FFTContext* %fft1285, %struct.FFTComplex* %16), !dbg !3255
  %17 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3262
  %fft1286 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %17, i32 0, i32 5, !dbg !3263
  %fft_permute7 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft1286, i32 0, i32 8, !dbg !3264
  %18 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_permute7, align 16, !dbg !3264
  %19 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3265
  %fft1288 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %19, i32 0, i32 5, !dbg !3266
  %20 = load float*, float** %src.addr, align 8, !dbg !3267
  %add.ptr9 = getelementptr inbounds float, float* %20, i64 128, !dbg !3268
  %21 = bitcast float* %add.ptr9 to %struct.FFTComplex*, !dbg !3269
  call void %18(%struct.FFTContext* %fft1288, %struct.FFTComplex* %21), !dbg !3262
  %22 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3270
  %fft12810 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %22, i32 0, i32 5, !dbg !3271
  %fft_permute11 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft12810, i32 0, i32 8, !dbg !3272
  %23 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_permute11, align 16, !dbg !3272
  %24 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3273
  %fft12812 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %24, i32 0, i32 5, !dbg !3274
  %25 = load float*, float** %src.addr, align 8, !dbg !3275
  %add.ptr13 = getelementptr inbounds float, float* %25, i64 256, !dbg !3276
  %26 = bitcast float* %add.ptr13 to %struct.FFTComplex*, !dbg !3277
  call void %23(%struct.FFTContext* %fft12812, %struct.FFTComplex* %26), !dbg !3270
  %27 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3278
  %fft12814 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %27, i32 0, i32 5, !dbg !3279
  %fft_permute15 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft12814, i32 0, i32 8, !dbg !3280
  %28 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_permute15, align 16, !dbg !3280
  %29 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3281
  %fft12816 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %29, i32 0, i32 5, !dbg !3282
  %30 = load float*, float** %src.addr, align 8, !dbg !3283
  %add.ptr17 = getelementptr inbounds float, float* %30, i64 384, !dbg !3284
  %31 = bitcast float* %add.ptr17 to %struct.FFTComplex*, !dbg !3285
  call void %28(%struct.FFTContext* %fft12816, %struct.FFTComplex* %31), !dbg !3278
  %32 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3286
  %fft12818 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %32, i32 0, i32 5, !dbg !3287
  %fft_calc = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft12818, i32 0, i32 9, !dbg !3288
  %33 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_calc, align 8, !dbg !3288
  %34 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3289
  %fft12819 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %34, i32 0, i32 5, !dbg !3290
  %35 = load float*, float** %src.addr, align 8, !dbg !3291
  %36 = bitcast float* %35 to %struct.FFTComplex*, !dbg !3292
  call void %33(%struct.FFTContext* %fft12819, %struct.FFTComplex* %36), !dbg !3286
  %37 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3293
  %fft12820 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %37, i32 0, i32 5, !dbg !3294
  %fft_calc21 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft12820, i32 0, i32 9, !dbg !3295
  %38 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_calc21, align 8, !dbg !3295
  %39 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3296
  %fft12822 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %39, i32 0, i32 5, !dbg !3297
  %40 = load float*, float** %src.addr, align 8, !dbg !3298
  %add.ptr23 = getelementptr inbounds float, float* %40, i64 128, !dbg !3299
  %41 = bitcast float* %add.ptr23 to %struct.FFTComplex*, !dbg !3300
  call void %38(%struct.FFTContext* %fft12822, %struct.FFTComplex* %41), !dbg !3293
  %42 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3301
  %fft12824 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %42, i32 0, i32 5, !dbg !3302
  %fft_calc25 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft12824, i32 0, i32 9, !dbg !3303
  %43 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_calc25, align 8, !dbg !3303
  %44 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3304
  %fft12826 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %44, i32 0, i32 5, !dbg !3305
  %45 = load float*, float** %src.addr, align 8, !dbg !3306
  %add.ptr27 = getelementptr inbounds float, float* %45, i64 256, !dbg !3307
  %46 = bitcast float* %add.ptr27 to %struct.FFTComplex*, !dbg !3308
  call void %43(%struct.FFTContext* %fft12826, %struct.FFTComplex* %46), !dbg !3301
  %47 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3309
  %fft12828 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %47, i32 0, i32 5, !dbg !3310
  %fft_calc29 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft12828, i32 0, i32 9, !dbg !3311
  %48 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_calc29, align 8, !dbg !3311
  %49 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3312
  %fft12830 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %49, i32 0, i32 5, !dbg !3313
  %50 = load float*, float** %src.addr, align 8, !dbg !3314
  %add.ptr31 = getelementptr inbounds float, float* %50, i64 384, !dbg !3315
  %51 = bitcast float* %add.ptr31 to %struct.FFTComplex*, !dbg !3316
  call void %48(%struct.FFTContext* %fft12830, %struct.FFTComplex* %51), !dbg !3309
  %52 = load float*, float** %src.addr, align 8, !dbg !3317
  %53 = load float*, float** %src.addr, align 8, !dbg !3318
  %add.ptr32 = getelementptr inbounds float, float* %53, i64 128, !dbg !3319
  %54 = load float*, float** %src.addr, align 8, !dbg !3320
  %add.ptr33 = getelementptr inbounds float, float* %54, i64 256, !dbg !3321
  %55 = load float*, float** %src.addr, align 8, !dbg !3322
  %add.ptr34 = getelementptr inbounds float, float* %55, i64 384, !dbg !3323
  %56 = load float*, float** %tmp1.addr, align 8, !dbg !3324
  call void @combine_fft(float* %52, float* %add.ptr32, float* %add.ptr33, float* %add.ptr34, float* %56, float* getelementptr inbounds ([2048 x float], [2048 x float]* @ff_on2avc_ctab_1, i32 0, i32 0), float* getelementptr inbounds ([2048 x float], [2048 x float]* @ff_on2avc_ctab_2, i32 0, i32 0), float* getelementptr inbounds ([2048 x float], [2048 x float]* @ff_on2avc_ctab_3, i32 0, i32 0), float* getelementptr inbounds ([2048 x float], [2048 x float]* @ff_on2avc_ctab_4, i32 0, i32 0), i32 512, i32 2), !dbg !3325
  %57 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3326
  %fft512 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %57, i32 0, i32 7, !dbg !3327
  %fft_permute35 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft512, i32 0, i32 8, !dbg !3328
  %58 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_permute35, align 16, !dbg !3328
  %59 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3329
  %fft51236 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %59, i32 0, i32 7, !dbg !3330
  %60 = load float*, float** %tmp1.addr, align 8, !dbg !3331
  %61 = bitcast float* %60 to %struct.FFTComplex*, !dbg !3332
  call void %58(%struct.FFTContext* %fft51236, %struct.FFTComplex* %61), !dbg !3326
  %62 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3333
  %fft51237 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %62, i32 0, i32 7, !dbg !3334
  %fft_calc38 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft51237, i32 0, i32 9, !dbg !3335
  %63 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_calc38, align 8, !dbg !3335
  %64 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3336
  %fft51239 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %64, i32 0, i32 7, !dbg !3337
  %65 = load float*, float** %tmp1.addr, align 8, !dbg !3338
  %66 = bitcast float* %65 to %struct.FFTComplex*, !dbg !3339
  call void %63(%struct.FFTContext* %fft51239, %struct.FFTComplex* %66), !dbg !3333
  %67 = load float*, float** %tmp0.addr, align 8, !dbg !3340
  %arrayidx = getelementptr inbounds float, float* %67, i64 0, !dbg !3340
  %68 = load float*, float** %tmp1.addr, align 8, !dbg !3341
  call void @pretwiddle(float* %arrayidx, float* %68, i32 512, i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_1, i32 0, i32 0)), !dbg !3342
  %69 = load float*, float** %tmp0.addr, align 8, !dbg !3343
  %arrayidx40 = getelementptr inbounds float, float* %69, i64 128, !dbg !3343
  %70 = load float*, float** %tmp1.addr, align 8, !dbg !3344
  call void @pretwiddle(float* %arrayidx40, float* %70, i32 512, i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_2, i32 0, i32 0)), !dbg !3345
  %71 = load float*, float** %tmp0.addr, align 8, !dbg !3346
  %arrayidx41 = getelementptr inbounds float, float* %71, i64 256, !dbg !3346
  %72 = load float*, float** %tmp1.addr, align 8, !dbg !3347
  call void @pretwiddle(float* %arrayidx41, float* %72, i32 512, i32 84, i32 4, i32 13, i32 7, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_3, i32 0, i32 0)), !dbg !3348
  %73 = load float*, float** %tmp0.addr, align 8, !dbg !3349
  %arrayidx42 = getelementptr inbounds float, float* %73, i64 384, !dbg !3349
  %74 = load float*, float** %tmp1.addr, align 8, !dbg !3350
  call void @pretwiddle(float* %arrayidx42, float* %74, i32 512, i32 84, i32 4, i32 15, i32 5, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_4, i32 0, i32 0)), !dbg !3351
  %75 = load float*, float** %src.addr, align 8, !dbg !3352
  %76 = bitcast float* %75 to i8*, !dbg !3353
  %77 = load float*, float** %tmp1.addr, align 8, !dbg !3354
  %78 = bitcast float* %77 to i8*, !dbg !3353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %78, i64 2048, i32 4, i1 false), !dbg !3353
  ret void, !dbg !3355
}

; Function Attrs: nounwind uwtable
define internal void @wtf_end_1024(%struct.On2AVCContext* %c, float* %out, float* %src, float* %tmp0, float* %tmp1) #1 !dbg !3356 {
entry:
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %out.addr = alloca float*, align 8
  %src.addr = alloca float*, align 8
  %tmp0.addr = alloca float*, align 8
  %tmp1.addr = alloca float*, align 8
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !3357, metadata !1675), !dbg !3358
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !3359, metadata !1675), !dbg !3360
  store float* %src, float** %src.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src.addr, metadata !3361, metadata !1675), !dbg !3362
  store float* %tmp0, float** %tmp0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tmp0.addr, metadata !3363, metadata !1675), !dbg !3364
  store float* %tmp1, float** %tmp1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tmp1.addr, metadata !3365, metadata !1675), !dbg !3366
  %0 = load float*, float** %src.addr, align 8, !dbg !3367
  %1 = bitcast float* %0 to i8*, !dbg !3368
  %2 = load float*, float** %tmp0.addr, align 8, !dbg !3369
  %3 = bitcast float* %2 to i8*, !dbg !3368
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %3, i64 3072, i32 4, i1 false), !dbg !3368
  %4 = load float*, float** %tmp0.addr, align 8, !dbg !3370
  %add.ptr = getelementptr inbounds float, float* %4, i64 768, !dbg !3371
  %5 = bitcast float* %add.ptr to i8*, !dbg !3372
  %6 = load float*, float** %src.addr, align 8, !dbg !3373
  %add.ptr1 = getelementptr inbounds float, float* %6, i64 768, !dbg !3374
  %7 = bitcast float* %add.ptr1 to i8*, !dbg !3372
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %7, i64 1024, i32 4, i1 false), !dbg !3372
  %8 = load float*, float** %src.addr, align 8, !dbg !3375
  call void @zero_head_and_tail(float* %8, i32 256, i32 16, i32 4), !dbg !3376
  %9 = load float*, float** %src.addr, align 8, !dbg !3377
  %add.ptr2 = getelementptr inbounds float, float* %9, i64 256, !dbg !3378
  call void @zero_head_and_tail(float* %add.ptr2, i32 256, i32 16, i32 4), !dbg !3379
  %10 = load float*, float** %src.addr, align 8, !dbg !3380
  %add.ptr3 = getelementptr inbounds float, float* %10, i64 512, !dbg !3381
  call void @zero_head_and_tail(float* %add.ptr3, i32 256, i32 13, i32 7), !dbg !3382
  %11 = load float*, float** %src.addr, align 8, !dbg !3383
  %add.ptr4 = getelementptr inbounds float, float* %11, i64 768, !dbg !3384
  call void @zero_head_and_tail(float* %add.ptr4, i32 256, i32 15, i32 5), !dbg !3385
  %12 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3386
  %fft256 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %12, i32 0, i32 6, !dbg !3387
  %fft_permute = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft256, i32 0, i32 8, !dbg !3388
  %13 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_permute, align 16, !dbg !3388
  %14 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3389
  %fft2565 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %14, i32 0, i32 6, !dbg !3390
  %15 = load float*, float** %src.addr, align 8, !dbg !3391
  %16 = bitcast float* %15 to %struct.FFTComplex*, !dbg !3392
  call void %13(%struct.FFTContext* %fft2565, %struct.FFTComplex* %16), !dbg !3386
  %17 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3393
  %fft2566 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %17, i32 0, i32 6, !dbg !3394
  %fft_permute7 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft2566, i32 0, i32 8, !dbg !3395
  %18 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_permute7, align 16, !dbg !3395
  %19 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3396
  %fft2568 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %19, i32 0, i32 6, !dbg !3397
  %20 = load float*, float** %src.addr, align 8, !dbg !3398
  %add.ptr9 = getelementptr inbounds float, float* %20, i64 256, !dbg !3399
  %21 = bitcast float* %add.ptr9 to %struct.FFTComplex*, !dbg !3400
  call void %18(%struct.FFTContext* %fft2568, %struct.FFTComplex* %21), !dbg !3393
  %22 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3401
  %fft25610 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %22, i32 0, i32 6, !dbg !3402
  %fft_permute11 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft25610, i32 0, i32 8, !dbg !3403
  %23 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_permute11, align 16, !dbg !3403
  %24 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3404
  %fft25612 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %24, i32 0, i32 6, !dbg !3405
  %25 = load float*, float** %src.addr, align 8, !dbg !3406
  %add.ptr13 = getelementptr inbounds float, float* %25, i64 512, !dbg !3407
  %26 = bitcast float* %add.ptr13 to %struct.FFTComplex*, !dbg !3408
  call void %23(%struct.FFTContext* %fft25612, %struct.FFTComplex* %26), !dbg !3401
  %27 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3409
  %fft25614 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %27, i32 0, i32 6, !dbg !3410
  %fft_permute15 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft25614, i32 0, i32 8, !dbg !3411
  %28 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_permute15, align 16, !dbg !3411
  %29 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3412
  %fft25616 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %29, i32 0, i32 6, !dbg !3413
  %30 = load float*, float** %src.addr, align 8, !dbg !3414
  %add.ptr17 = getelementptr inbounds float, float* %30, i64 768, !dbg !3415
  %31 = bitcast float* %add.ptr17 to %struct.FFTComplex*, !dbg !3416
  call void %28(%struct.FFTContext* %fft25616, %struct.FFTComplex* %31), !dbg !3409
  %32 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3417
  %fft25618 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %32, i32 0, i32 6, !dbg !3418
  %fft_calc = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft25618, i32 0, i32 9, !dbg !3419
  %33 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_calc, align 8, !dbg !3419
  %34 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3420
  %fft25619 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %34, i32 0, i32 6, !dbg !3421
  %35 = load float*, float** %src.addr, align 8, !dbg !3422
  %36 = bitcast float* %35 to %struct.FFTComplex*, !dbg !3423
  call void %33(%struct.FFTContext* %fft25619, %struct.FFTComplex* %36), !dbg !3417
  %37 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3424
  %fft25620 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %37, i32 0, i32 6, !dbg !3425
  %fft_calc21 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft25620, i32 0, i32 9, !dbg !3426
  %38 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_calc21, align 8, !dbg !3426
  %39 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3427
  %fft25622 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %39, i32 0, i32 6, !dbg !3428
  %40 = load float*, float** %src.addr, align 8, !dbg !3429
  %add.ptr23 = getelementptr inbounds float, float* %40, i64 256, !dbg !3430
  %41 = bitcast float* %add.ptr23 to %struct.FFTComplex*, !dbg !3431
  call void %38(%struct.FFTContext* %fft25622, %struct.FFTComplex* %41), !dbg !3424
  %42 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3432
  %fft25624 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %42, i32 0, i32 6, !dbg !3433
  %fft_calc25 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft25624, i32 0, i32 9, !dbg !3434
  %43 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_calc25, align 8, !dbg !3434
  %44 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3435
  %fft25626 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %44, i32 0, i32 6, !dbg !3436
  %45 = load float*, float** %src.addr, align 8, !dbg !3437
  %add.ptr27 = getelementptr inbounds float, float* %45, i64 512, !dbg !3438
  %46 = bitcast float* %add.ptr27 to %struct.FFTComplex*, !dbg !3439
  call void %43(%struct.FFTContext* %fft25626, %struct.FFTComplex* %46), !dbg !3432
  %47 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3440
  %fft25628 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %47, i32 0, i32 6, !dbg !3441
  %fft_calc29 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft25628, i32 0, i32 9, !dbg !3442
  %48 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_calc29, align 8, !dbg !3442
  %49 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3443
  %fft25630 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %49, i32 0, i32 6, !dbg !3444
  %50 = load float*, float** %src.addr, align 8, !dbg !3445
  %add.ptr31 = getelementptr inbounds float, float* %50, i64 768, !dbg !3446
  %51 = bitcast float* %add.ptr31 to %struct.FFTComplex*, !dbg !3447
  call void %48(%struct.FFTContext* %fft25630, %struct.FFTComplex* %51), !dbg !3440
  %52 = load float*, float** %src.addr, align 8, !dbg !3448
  %53 = load float*, float** %src.addr, align 8, !dbg !3449
  %add.ptr32 = getelementptr inbounds float, float* %53, i64 256, !dbg !3450
  %54 = load float*, float** %src.addr, align 8, !dbg !3451
  %add.ptr33 = getelementptr inbounds float, float* %54, i64 512, !dbg !3452
  %55 = load float*, float** %src.addr, align 8, !dbg !3453
  %add.ptr34 = getelementptr inbounds float, float* %55, i64 768, !dbg !3454
  %56 = load float*, float** %tmp1.addr, align 8, !dbg !3455
  call void @combine_fft(float* %52, float* %add.ptr32, float* %add.ptr33, float* %add.ptr34, float* %56, float* getelementptr inbounds ([2048 x float], [2048 x float]* @ff_on2avc_ctab_1, i32 0, i32 0), float* getelementptr inbounds ([2048 x float], [2048 x float]* @ff_on2avc_ctab_2, i32 0, i32 0), float* getelementptr inbounds ([2048 x float], [2048 x float]* @ff_on2avc_ctab_3, i32 0, i32 0), float* getelementptr inbounds ([2048 x float], [2048 x float]* @ff_on2avc_ctab_4, i32 0, i32 0), i32 1024, i32 1), !dbg !3456
  %57 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3457
  %fft1024 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %57, i32 0, i32 8, !dbg !3458
  %fft_permute35 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft1024, i32 0, i32 8, !dbg !3459
  %58 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_permute35, align 16, !dbg !3459
  %59 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3460
  %fft102436 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %59, i32 0, i32 8, !dbg !3461
  %60 = load float*, float** %tmp1.addr, align 8, !dbg !3462
  %61 = bitcast float* %60 to %struct.FFTComplex*, !dbg !3463
  call void %58(%struct.FFTContext* %fft102436, %struct.FFTComplex* %61), !dbg !3457
  %62 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3464
  %fft102437 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %62, i32 0, i32 8, !dbg !3465
  %fft_calc38 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %fft102437, i32 0, i32 9, !dbg !3466
  %63 = load void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)** %fft_calc38, align 8, !dbg !3466
  %64 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !3467
  %fft102439 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %64, i32 0, i32 8, !dbg !3468
  %65 = load float*, float** %tmp1.addr, align 8, !dbg !3469
  %66 = bitcast float* %65 to %struct.FFTComplex*, !dbg !3470
  call void %63(%struct.FFTContext* %fft102439, %struct.FFTComplex* %66), !dbg !3464
  %67 = load float*, float** %tmp0.addr, align 8, !dbg !3471
  %arrayidx = getelementptr inbounds float, float* %67, i64 0, !dbg !3471
  %68 = load float*, float** %tmp1.addr, align 8, !dbg !3472
  call void @pretwiddle(float* %arrayidx, float* %68, i32 1024, i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_1, i32 0, i32 0)), !dbg !3473
  %69 = load float*, float** %tmp0.addr, align 8, !dbg !3474
  %arrayidx40 = getelementptr inbounds float, float* %69, i64 256, !dbg !3474
  %70 = load float*, float** %tmp1.addr, align 8, !dbg !3475
  call void @pretwiddle(float* %arrayidx40, float* %70, i32 1024, i32 84, i32 4, i32 16, i32 4, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_2, i32 0, i32 0)), !dbg !3476
  %71 = load float*, float** %tmp0.addr, align 8, !dbg !3477
  %arrayidx41 = getelementptr inbounds float, float* %71, i64 512, !dbg !3477
  %72 = load float*, float** %tmp1.addr, align 8, !dbg !3478
  call void @pretwiddle(float* %arrayidx41, float* %72, i32 1024, i32 84, i32 4, i32 13, i32 7, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_3, i32 0, i32 0)), !dbg !3479
  %73 = load float*, float** %tmp0.addr, align 8, !dbg !3480
  %arrayidx42 = getelementptr inbounds float, float* %73, i64 768, !dbg !3480
  %74 = load float*, float** %tmp1.addr, align 8, !dbg !3481
  call void @pretwiddle(float* %arrayidx42, float* %74, i32 1024, i32 84, i32 4, i32 15, i32 5, double** getelementptr inbounds ([20 x double*], [20 x double*]* @ff_on2avc_tabs_20_84_4, i32 0, i32 0)), !dbg !3482
  %75 = load float*, float** %src.addr, align 8, !dbg !3483
  %76 = bitcast float* %75 to i8*, !dbg !3484
  %77 = load float*, float** %tmp1.addr, align 8, !dbg !3485
  %78 = bitcast float* %77 to i8*, !dbg !3484
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %78, i64 4096, i32 4, i1 false), !dbg !3484
  ret void, !dbg !3486
}

; Function Attrs: nounwind uwtable
define internal void @pretwiddle(float* %src, float* %dst, i32 %dst_len, i32 %tab_step, i32 %step, i32 %order0, i32 %order1, double** %tabs) #1 !dbg !3487 {
entry:
  %src.addr = alloca float*, align 8
  %dst.addr = alloca float*, align 8
  %dst_len.addr = alloca i32, align 4
  %tab_step.addr = alloca i32, align 4
  %step.addr = alloca i32, align 4
  %order0.addr = alloca i32, align 4
  %order1.addr = alloca i32, align 4
  %tabs.addr = alloca double**, align 8
  %src2 = alloca float*, align 8
  %out = alloca float*, align 8
  %tab = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %sum = alloca double, align 8
  %sum30 = alloca double, align 8
  store float* %src, float** %src.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src.addr, metadata !3490, metadata !1675), !dbg !3491
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !3492, metadata !1675), !dbg !3493
  store i32 %dst_len, i32* %dst_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_len.addr, metadata !3494, metadata !1675), !dbg !3495
  store i32 %tab_step, i32* %tab_step.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tab_step.addr, metadata !3496, metadata !1675), !dbg !3497
  store i32 %step, i32* %step.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %step.addr, metadata !3498, metadata !1675), !dbg !3499
  store i32 %order0, i32* %order0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order0.addr, metadata !3500, metadata !1675), !dbg !3501
  store i32 %order1, i32* %order1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order1.addr, metadata !3502, metadata !1675), !dbg !3503
  store double** %tabs, double*** %tabs.addr, align 8
  call void @llvm.dbg.declare(metadata double*** %tabs.addr, metadata !3504, metadata !1675), !dbg !3505
  call void @llvm.dbg.declare(metadata float** %src2, metadata !3506, metadata !1675), !dbg !3507
  call void @llvm.dbg.declare(metadata float** %out, metadata !3508, metadata !1675), !dbg !3509
  call void @llvm.dbg.declare(metadata double** %tab, metadata !3510, metadata !1675), !dbg !3511
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3512, metadata !1675), !dbg !3513
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3514, metadata !1675), !dbg !3515
  %0 = load float*, float** %dst.addr, align 8, !dbg !3516
  store float* %0, float** %out, align 8, !dbg !3517
  %1 = load double**, double*** %tabs.addr, align 8, !dbg !3518
  %arrayidx = getelementptr inbounds double*, double** %1, i64 0, !dbg !3518
  %2 = load double*, double** %arrayidx, align 8, !dbg !3518
  store double* %2, double** %tab, align 8, !dbg !3519
  store i32 0, i32* %i, align 4, !dbg !3520
  br label %for.cond, !dbg !3522

for.cond:                                         ; preds = %for.inc14, %entry
  %3 = load i32, i32* %i, align 4, !dbg !3523
  %4 = load i32, i32* %tab_step.addr, align 4, !dbg !3526
  %cmp = icmp slt i32 %3, %4, !dbg !3527
  br i1 %cmp, label %for.body, label %for.end16, !dbg !3528

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata double* %sum, metadata !3529, metadata !1675), !dbg !3531
  store double 0.000000e+00, double* %sum, align 8, !dbg !3531
  store i32 0, i32* %j, align 4, !dbg !3532
  br label %for.cond1, !dbg !3534

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4, !dbg !3535
  %6 = load i32, i32* %order0.addr, align 4, !dbg !3538
  %cmp2 = icmp slt i32 %5, %6, !dbg !3539
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !3540

for.body3:                                        ; preds = %for.cond1
  %7 = load i32, i32* %j, align 4, !dbg !3541
  %idxprom = sext i32 %7 to i64, !dbg !3542
  %8 = load float*, float** %src.addr, align 8, !dbg !3542
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 %idxprom, !dbg !3542
  %9 = load float, float* %arrayidx4, align 4, !dbg !3542
  %conv = fpext float %9 to double, !dbg !3542
  %10 = load i32, i32* %j, align 4, !dbg !3543
  %11 = load i32, i32* %tab_step.addr, align 4, !dbg !3544
  %mul = mul nsw i32 %10, %11, !dbg !3545
  %12 = load i32, i32* %i, align 4, !dbg !3546
  %add = add nsw i32 %mul, %12, !dbg !3547
  %idxprom5 = sext i32 %add to i64, !dbg !3548
  %13 = load double*, double** %tab, align 8, !dbg !3548
  %arrayidx6 = getelementptr inbounds double, double* %13, i64 %idxprom5, !dbg !3548
  %14 = load double, double* %arrayidx6, align 8, !dbg !3548
  %mul7 = fmul double %conv, %14, !dbg !3549
  %15 = load double, double* %sum, align 8, !dbg !3550
  %add8 = fadd double %15, %mul7, !dbg !3550
  store double %add8, double* %sum, align 8, !dbg !3550
  br label %for.inc, !dbg !3551

for.inc:                                          ; preds = %for.body3
  %16 = load i32, i32* %j, align 4, !dbg !3552
  %inc = add nsw i32 %16, 1, !dbg !3552
  store i32 %inc, i32* %j, align 4, !dbg !3552
  br label %for.cond1, !dbg !3554, !llvm.loop !3555

for.end:                                          ; preds = %for.cond1
  %17 = load double, double* %sum, align 8, !dbg !3557
  %18 = load i32, i32* %i, align 4, !dbg !3558
  %idxprom9 = sext i32 %18 to i64, !dbg !3559
  %19 = load float*, float** %out, align 8, !dbg !3559
  %arrayidx10 = getelementptr inbounds float, float* %19, i64 %idxprom9, !dbg !3559
  %20 = load float, float* %arrayidx10, align 4, !dbg !3560
  %conv11 = fpext float %20 to double, !dbg !3560
  %add12 = fadd double %conv11, %17, !dbg !3560
  %conv13 = fptrunc double %add12 to float, !dbg !3560
  store float %conv13, float* %arrayidx10, align 4, !dbg !3560
  br label %for.inc14, !dbg !3561

for.inc14:                                        ; preds = %for.end
  %21 = load i32, i32* %i, align 4, !dbg !3562
  %inc15 = add nsw i32 %21, 1, !dbg !3562
  store i32 %inc15, i32* %i, align 4, !dbg !3562
  br label %for.cond, !dbg !3564, !llvm.loop !3565

for.end16:                                        ; preds = %for.cond
  %22 = load float*, float** %dst.addr, align 8, !dbg !3567
  %23 = load i32, i32* %dst_len.addr, align 4, !dbg !3568
  %idx.ext = sext i32 %23 to i64, !dbg !3569
  %add.ptr = getelementptr inbounds float, float* %22, i64 %idx.ext, !dbg !3569
  %24 = load i32, i32* %tab_step.addr, align 4, !dbg !3570
  %idx.ext17 = sext i32 %24 to i64, !dbg !3571
  %idx.neg = sub i64 0, %idx.ext17, !dbg !3571
  %add.ptr18 = getelementptr inbounds float, float* %add.ptr, i64 %idx.neg, !dbg !3571
  store float* %add.ptr18, float** %out, align 8, !dbg !3572
  %25 = load i32, i32* %order0.addr, align 4, !dbg !3573
  %idxprom19 = sext i32 %25 to i64, !dbg !3574
  %26 = load double**, double*** %tabs.addr, align 8, !dbg !3574
  %arrayidx20 = getelementptr inbounds double*, double** %26, i64 %idxprom19, !dbg !3574
  %27 = load double*, double** %arrayidx20, align 8, !dbg !3574
  store double* %27, double** %tab, align 8, !dbg !3575
  %28 = load float*, float** %src.addr, align 8, !dbg !3576
  %29 = load i32, i32* %dst_len.addr, align 4, !dbg !3577
  %30 = load i32, i32* %tab_step.addr, align 4, !dbg !3578
  %sub = sub nsw i32 %29, %30, !dbg !3579
  %31 = load i32, i32* %step.addr, align 4, !dbg !3580
  %div = sdiv i32 %sub, %31, !dbg !3581
  %idx.ext21 = sext i32 %div to i64, !dbg !3582
  %add.ptr22 = getelementptr inbounds float, float* %28, i64 %idx.ext21, !dbg !3582
  %add.ptr23 = getelementptr inbounds float, float* %add.ptr22, i64 1, !dbg !3583
  %32 = load i32, i32* %order0.addr, align 4, !dbg !3584
  %idx.ext24 = sext i32 %32 to i64, !dbg !3585
  %add.ptr25 = getelementptr inbounds float, float* %add.ptr23, i64 %idx.ext24, !dbg !3585
  store float* %add.ptr25, float** %src2, align 8, !dbg !3586
  store i32 0, i32* %i, align 4, !dbg !3587
  br label %for.cond26, !dbg !3589

for.cond26:                                       ; preds = %for.inc52, %for.end16
  %33 = load i32, i32* %i, align 4, !dbg !3590
  %34 = load i32, i32* %tab_step.addr, align 4, !dbg !3593
  %cmp27 = icmp slt i32 %33, %34, !dbg !3594
  br i1 %cmp27, label %for.body29, label %for.end54, !dbg !3595

for.body29:                                       ; preds = %for.cond26
  call void @llvm.dbg.declare(metadata double* %sum30, metadata !3596, metadata !1675), !dbg !3598
  store double 0.000000e+00, double* %sum30, align 8, !dbg !3598
  store i32 0, i32* %j, align 4, !dbg !3599
  br label %for.cond31, !dbg !3601

for.cond31:                                       ; preds = %for.inc44, %for.body29
  %35 = load i32, i32* %j, align 4, !dbg !3602
  %36 = load i32, i32* %order1.addr, align 4, !dbg !3605
  %cmp32 = icmp slt i32 %35, %36, !dbg !3606
  br i1 %cmp32, label %for.body34, label %for.end46, !dbg !3607

for.body34:                                       ; preds = %for.cond31
  %37 = load i32, i32* %j, align 4, !dbg !3608
  %idxprom35 = sext i32 %37 to i64, !dbg !3609
  %38 = load float*, float** %src2, align 8, !dbg !3609
  %arrayidx36 = getelementptr inbounds float, float* %38, i64 %idxprom35, !dbg !3609
  %39 = load float, float* %arrayidx36, align 4, !dbg !3609
  %conv37 = fpext float %39 to double, !dbg !3609
  %40 = load i32, i32* %j, align 4, !dbg !3610
  %41 = load i32, i32* %tab_step.addr, align 4, !dbg !3611
  %mul38 = mul nsw i32 %40, %41, !dbg !3612
  %42 = load i32, i32* %i, align 4, !dbg !3613
  %add39 = add nsw i32 %mul38, %42, !dbg !3614
  %idxprom40 = sext i32 %add39 to i64, !dbg !3615
  %43 = load double*, double** %tab, align 8, !dbg !3615
  %arrayidx41 = getelementptr inbounds double, double* %43, i64 %idxprom40, !dbg !3615
  %44 = load double, double* %arrayidx41, align 8, !dbg !3615
  %mul42 = fmul double %conv37, %44, !dbg !3616
  %45 = load double, double* %sum30, align 8, !dbg !3617
  %add43 = fadd double %45, %mul42, !dbg !3617
  store double %add43, double* %sum30, align 8, !dbg !3617
  br label %for.inc44, !dbg !3618

for.inc44:                                        ; preds = %for.body34
  %46 = load i32, i32* %j, align 4, !dbg !3619
  %inc45 = add nsw i32 %46, 1, !dbg !3619
  store i32 %inc45, i32* %j, align 4, !dbg !3619
  br label %for.cond31, !dbg !3621, !llvm.loop !3622

for.end46:                                        ; preds = %for.cond31
  %47 = load double, double* %sum30, align 8, !dbg !3624
  %48 = load i32, i32* %i, align 4, !dbg !3625
  %idxprom47 = sext i32 %48 to i64, !dbg !3626
  %49 = load float*, float** %out, align 8, !dbg !3626
  %arrayidx48 = getelementptr inbounds float, float* %49, i64 %idxprom47, !dbg !3626
  %50 = load float, float* %arrayidx48, align 4, !dbg !3627
  %conv49 = fpext float %50 to double, !dbg !3627
  %add50 = fadd double %conv49, %47, !dbg !3627
  %conv51 = fptrunc double %add50 to float, !dbg !3627
  store float %conv51, float* %arrayidx48, align 4, !dbg !3627
  br label %for.inc52, !dbg !3628

for.inc52:                                        ; preds = %for.end46
  %51 = load i32, i32* %i, align 4, !dbg !3629
  %inc53 = add nsw i32 %51, 1, !dbg !3629
  store i32 %inc53, i32* %i, align 4, !dbg !3629
  br label %for.cond26, !dbg !3631, !llvm.loop !3632

for.end54:                                        ; preds = %for.cond26
  ret void, !dbg !3634
}

; Function Attrs: nounwind uwtable
define internal void @zero_head_and_tail(float* %src, i32 %len, i32 %order0, i32 %order1) #1 !dbg !3635 {
entry:
  %src.addr = alloca float*, align 8
  %len.addr = alloca i32, align 4
  %order0.addr = alloca i32, align 4
  %order1.addr = alloca i32, align 4
  store float* %src, float** %src.addr, align 8
  call void @llvm.dbg.declare(metadata float** %src.addr, metadata !3638, metadata !1675), !dbg !3639
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !3640, metadata !1675), !dbg !3641
  store i32 %order0, i32* %order0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order0.addr, metadata !3642, metadata !1675), !dbg !3643
  store i32 %order1, i32* %order1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order1.addr, metadata !3644, metadata !1675), !dbg !3645
  %0 = load float*, float** %src.addr, align 8, !dbg !3646
  %1 = bitcast float* %0 to i8*, !dbg !3647
  %2 = load i32, i32* %order0.addr, align 4, !dbg !3648
  %conv = sext i32 %2 to i64, !dbg !3648
  %mul = mul i64 4, %conv, !dbg !3649
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 %mul, i32 4, i1 false), !dbg !3647
  %3 = load float*, float** %src.addr, align 8, !dbg !3650
  %4 = load i32, i32* %len.addr, align 4, !dbg !3651
  %idx.ext = sext i32 %4 to i64, !dbg !3652
  %add.ptr = getelementptr inbounds float, float* %3, i64 %idx.ext, !dbg !3652
  %5 = load i32, i32* %order1.addr, align 4, !dbg !3653
  %idx.ext1 = sext i32 %5 to i64, !dbg !3654
  %idx.neg = sub i64 0, %idx.ext1, !dbg !3654
  %add.ptr2 = getelementptr inbounds float, float* %add.ptr, i64 %idx.neg, !dbg !3654
  %6 = bitcast float* %add.ptr2 to i8*, !dbg !3655
  %7 = load i32, i32* %order1.addr, align 4, !dbg !3656
  %conv3 = sext i32 %7 to i64, !dbg !3656
  %mul4 = mul i64 4, %conv3, !dbg !3657
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 %mul4, i32 4, i1 false), !dbg !3655
  ret void, !dbg !3658
}

; Function Attrs: nounwind uwtable
define internal void @combine_fft(float* %s0, float* %s1, float* %s2, float* %s3, float* %dst, float* %t0, float* %t1, float* %t2, float* %t3, i32 %len, i32 %step) #1 !dbg !3659 {
entry:
  %s0.addr = alloca float*, align 8
  %s1.addr = alloca float*, align 8
  %s2.addr = alloca float*, align 8
  %s3.addr = alloca float*, align 8
  %dst.addr = alloca float*, align 8
  %t0.addr = alloca float*, align 8
  %t1.addr = alloca float*, align 8
  %t2.addr = alloca float*, align 8
  %t3.addr = alloca float*, align 8
  %len.addr = alloca i32, align 4
  %step.addr = alloca i32, align 4
  %h0 = alloca float*, align 8
  %h1 = alloca float*, align 8
  %h2 = alloca float*, align 8
  %h3 = alloca float*, align 8
  %d1 = alloca float*, align 8
  %d2 = alloca float*, align 8
  %tmp = alloca i32, align 4
  %half = alloca i32, align 4
  %len2 = alloca i32, align 4
  %len4 = alloca i32, align 4
  %hoff = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store float* %s0, float** %s0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %s0.addr, metadata !3662, metadata !1675), !dbg !3663
  store float* %s1, float** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %s1.addr, metadata !3664, metadata !1675), !dbg !3665
  store float* %s2, float** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %s2.addr, metadata !3666, metadata !1675), !dbg !3667
  store float* %s3, float** %s3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %s3.addr, metadata !3668, metadata !1675), !dbg !3669
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !3670, metadata !1675), !dbg !3671
  store float* %t0, float** %t0.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t0.addr, metadata !3672, metadata !1675), !dbg !3673
  store float* %t1, float** %t1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t1.addr, metadata !3674, metadata !1675), !dbg !3675
  store float* %t2, float** %t2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t2.addr, metadata !3676, metadata !1675), !dbg !3677
  store float* %t3, float** %t3.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t3.addr, metadata !3678, metadata !1675), !dbg !3679
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !3680, metadata !1675), !dbg !3681
  store i32 %step, i32* %step.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %step.addr, metadata !3682, metadata !1675), !dbg !3683
  call void @llvm.dbg.declare(metadata float** %h0, metadata !3684, metadata !1675), !dbg !3685
  call void @llvm.dbg.declare(metadata float** %h1, metadata !3686, metadata !1675), !dbg !3687
  call void @llvm.dbg.declare(metadata float** %h2, metadata !3688, metadata !1675), !dbg !3689
  call void @llvm.dbg.declare(metadata float** %h3, metadata !3690, metadata !1675), !dbg !3691
  call void @llvm.dbg.declare(metadata float** %d1, metadata !3692, metadata !1675), !dbg !3693
  call void @llvm.dbg.declare(metadata float** %d2, metadata !3694, metadata !1675), !dbg !3695
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !3696, metadata !1675), !dbg !3697
  call void @llvm.dbg.declare(metadata i32* %half, metadata !3698, metadata !1675), !dbg !3699
  call void @llvm.dbg.declare(metadata i32* %len2, metadata !3700, metadata !1675), !dbg !3701
  %0 = load i32, i32* %len.addr, align 4, !dbg !3702
  %shr = ashr i32 %0, 1, !dbg !3703
  store i32 %shr, i32* %len2, align 4, !dbg !3701
  call void @llvm.dbg.declare(metadata i32* %len4, metadata !3704, metadata !1675), !dbg !3705
  %1 = load i32, i32* %len.addr, align 4, !dbg !3706
  %shr4 = ashr i32 %1, 2, !dbg !3707
  store i32 %shr4, i32* %len4, align 4, !dbg !3705
  call void @llvm.dbg.declare(metadata i32* %hoff, metadata !3708, metadata !1675), !dbg !3709
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3710, metadata !1675), !dbg !3711
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3712, metadata !1675), !dbg !3713
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3714, metadata !1675), !dbg !3715
  %2 = load i32, i32* %step.addr, align 4, !dbg !3716
  store i32 %2, i32* %tmp, align 4, !dbg !3717
  %3 = load i32, i32* %len2, align 4, !dbg !3718
  store i32 %3, i32* %half, align 4, !dbg !3720
  br label %for.cond, !dbg !3721

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %tmp, align 4, !dbg !3722
  %cmp = icmp sgt i32 %4, 1, !dbg !3725
  br i1 %cmp, label %for.body, label %for.end, !dbg !3726

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !3727

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %half, align 4, !dbg !3729
  %shl = shl i32 %5, 1, !dbg !3729
  store i32 %shl, i32* %half, align 4, !dbg !3729
  %6 = load i32, i32* %tmp, align 4, !dbg !3731
  %shr9 = ashr i32 %6, 1, !dbg !3731
  store i32 %shr9, i32* %tmp, align 4, !dbg !3731
  br label %for.cond, !dbg !3732, !llvm.loop !3733

for.end:                                          ; preds = %for.cond
  %7 = load float*, float** %t0.addr, align 8, !dbg !3735
  %8 = load i32, i32* %half, align 4, !dbg !3736
  %idx.ext = sext i32 %8 to i64, !dbg !3737
  %add.ptr = getelementptr inbounds float, float* %7, i64 %idx.ext, !dbg !3737
  store float* %add.ptr, float** %h0, align 8, !dbg !3738
  %9 = load float*, float** %t1.addr, align 8, !dbg !3739
  %10 = load i32, i32* %half, align 4, !dbg !3740
  %idx.ext10 = sext i32 %10 to i64, !dbg !3741
  %add.ptr11 = getelementptr inbounds float, float* %9, i64 %idx.ext10, !dbg !3741
  store float* %add.ptr11, float** %h1, align 8, !dbg !3742
  %11 = load float*, float** %t2.addr, align 8, !dbg !3743
  %12 = load i32, i32* %half, align 4, !dbg !3744
  %idx.ext12 = sext i32 %12 to i64, !dbg !3745
  %add.ptr13 = getelementptr inbounds float, float* %11, i64 %idx.ext12, !dbg !3745
  store float* %add.ptr13, float** %h2, align 8, !dbg !3746
  %13 = load float*, float** %t3.addr, align 8, !dbg !3747
  %14 = load i32, i32* %half, align 4, !dbg !3748
  %idx.ext14 = sext i32 %14 to i64, !dbg !3749
  %add.ptr15 = getelementptr inbounds float, float* %13, i64 %idx.ext14, !dbg !3749
  store float* %add.ptr15, float** %h3, align 8, !dbg !3750
  %15 = load float*, float** %s0.addr, align 8, !dbg !3751
  %arrayidx = getelementptr inbounds float, float* %15, i64 0, !dbg !3751
  %16 = load float, float* %arrayidx, align 4, !dbg !3751
  %17 = load float*, float** %t0.addr, align 8, !dbg !3752
  %arrayidx16 = getelementptr inbounds float, float* %17, i64 0, !dbg !3752
  %18 = load float, float* %arrayidx16, align 4, !dbg !3752
  %mul = fmul float %16, %18, !dbg !3753
  %19 = load float*, float** %s1.addr, align 8, !dbg !3754
  %arrayidx17 = getelementptr inbounds float, float* %19, i64 0, !dbg !3754
  %20 = load float, float* %arrayidx17, align 4, !dbg !3754
  %21 = load float*, float** %t1.addr, align 8, !dbg !3755
  %arrayidx18 = getelementptr inbounds float, float* %21, i64 0, !dbg !3755
  %22 = load float, float* %arrayidx18, align 4, !dbg !3755
  %mul19 = fmul float %20, %22, !dbg !3756
  %add = fadd float %mul, %mul19, !dbg !3757
  %23 = load float*, float** %s2.addr, align 8, !dbg !3758
  %arrayidx20 = getelementptr inbounds float, float* %23, i64 0, !dbg !3758
  %24 = load float, float* %arrayidx20, align 4, !dbg !3758
  %25 = load float*, float** %t2.addr, align 8, !dbg !3759
  %arrayidx21 = getelementptr inbounds float, float* %25, i64 0, !dbg !3759
  %26 = load float, float* %arrayidx21, align 4, !dbg !3759
  %mul22 = fmul float %24, %26, !dbg !3760
  %add23 = fadd float %add, %mul22, !dbg !3761
  %27 = load float*, float** %s3.addr, align 8, !dbg !3762
  %arrayidx24 = getelementptr inbounds float, float* %27, i64 0, !dbg !3762
  %28 = load float, float* %arrayidx24, align 4, !dbg !3762
  %29 = load float*, float** %t3.addr, align 8, !dbg !3763
  %arrayidx25 = getelementptr inbounds float, float* %29, i64 0, !dbg !3763
  %30 = load float, float* %arrayidx25, align 4, !dbg !3763
  %mul26 = fmul float %28, %30, !dbg !3764
  %add27 = fadd float %add23, %mul26, !dbg !3765
  %31 = load float*, float** %dst.addr, align 8, !dbg !3766
  %arrayidx28 = getelementptr inbounds float, float* %31, i64 0, !dbg !3766
  store float %add27, float* %arrayidx28, align 4, !dbg !3767
  %32 = load float*, float** %s0.addr, align 8, !dbg !3768
  %arrayidx29 = getelementptr inbounds float, float* %32, i64 0, !dbg !3768
  %33 = load float, float* %arrayidx29, align 4, !dbg !3768
  %34 = load float*, float** %t0.addr, align 8, !dbg !3769
  %arrayidx30 = getelementptr inbounds float, float* %34, i64 1, !dbg !3769
  %35 = load float, float* %arrayidx30, align 4, !dbg !3769
  %mul31 = fmul float %33, %35, !dbg !3770
  %36 = load float*, float** %s1.addr, align 8, !dbg !3771
  %arrayidx32 = getelementptr inbounds float, float* %36, i64 0, !dbg !3771
  %37 = load float, float* %arrayidx32, align 4, !dbg !3771
  %38 = load float*, float** %t1.addr, align 8, !dbg !3772
  %arrayidx33 = getelementptr inbounds float, float* %38, i64 1, !dbg !3772
  %39 = load float, float* %arrayidx33, align 4, !dbg !3772
  %mul34 = fmul float %37, %39, !dbg !3773
  %add35 = fadd float %mul31, %mul34, !dbg !3774
  %40 = load float*, float** %s2.addr, align 8, !dbg !3775
  %arrayidx36 = getelementptr inbounds float, float* %40, i64 0, !dbg !3775
  %41 = load float, float* %arrayidx36, align 4, !dbg !3775
  %42 = load float*, float** %t2.addr, align 8, !dbg !3776
  %arrayidx37 = getelementptr inbounds float, float* %42, i64 1, !dbg !3776
  %43 = load float, float* %arrayidx37, align 4, !dbg !3776
  %mul38 = fmul float %41, %43, !dbg !3777
  %add39 = fadd float %add35, %mul38, !dbg !3778
  %44 = load float*, float** %s3.addr, align 8, !dbg !3779
  %arrayidx40 = getelementptr inbounds float, float* %44, i64 0, !dbg !3779
  %45 = load float, float* %arrayidx40, align 4, !dbg !3779
  %46 = load float*, float** %t3.addr, align 8, !dbg !3780
  %arrayidx41 = getelementptr inbounds float, float* %46, i64 1, !dbg !3780
  %47 = load float, float* %arrayidx41, align 4, !dbg !3780
  %mul42 = fmul float %45, %47, !dbg !3781
  %add43 = fadd float %add39, %mul42, !dbg !3782
  %48 = load float*, float** %dst.addr, align 8, !dbg !3783
  %arrayidx44 = getelementptr inbounds float, float* %48, i64 1, !dbg !3783
  store float %add43, float* %arrayidx44, align 4, !dbg !3784
  %49 = load i32, i32* %step.addr, align 4, !dbg !3785
  %mul45 = mul nsw i32 2, %49, !dbg !3786
  %50 = load i32, i32* %len4, align 4, !dbg !3787
  %shr46 = ashr i32 %50, 1, !dbg !3788
  %mul47 = mul nsw i32 %mul45, %shr46, !dbg !3789
  store i32 %mul47, i32* %hoff, align 4, !dbg !3790
  store i32 2, i32* %j, align 4, !dbg !3791
  %51 = load i32, i32* %step.addr, align 4, !dbg !3792
  %mul48 = mul nsw i32 2, %51, !dbg !3793
  store i32 %mul48, i32* %k, align 4, !dbg !3794
  %52 = load float*, float** %dst.addr, align 8, !dbg !3795
  %add.ptr49 = getelementptr inbounds float, float* %52, i64 2, !dbg !3796
  store float* %add.ptr49, float** %d1, align 8, !dbg !3797
  %53 = load float*, float** %dst.addr, align 8, !dbg !3798
  %add.ptr50 = getelementptr inbounds float, float* %53, i64 2, !dbg !3799
  %54 = load i32, i32* %len.addr, align 4, !dbg !3800
  %shr51 = ashr i32 %54, 1, !dbg !3801
  %idx.ext52 = sext i32 %shr51 to i64, !dbg !3802
  %add.ptr53 = getelementptr inbounds float, float* %add.ptr50, i64 %idx.ext52, !dbg !3802
  store float* %add.ptr53, float** %d2, align 8, !dbg !3803
  store i32 0, i32* %i, align 4, !dbg !3804
  br label %for.cond54, !dbg !3806

for.cond54:                                       ; preds = %for.inc315, %for.end
  %55 = load i32, i32* %i, align 4, !dbg !3807
  %56 = load i32, i32* %len4, align 4, !dbg !3810
  %sub = sub nsw i32 %56, 1, !dbg !3811
  %shr55 = ashr i32 %sub, 1, !dbg !3812
  %cmp56 = icmp slt i32 %55, %shr55, !dbg !3813
  br i1 %cmp56, label %for.body57, label %for.end316, !dbg !3814

for.body57:                                       ; preds = %for.cond54
  %57 = load i32, i32* %j, align 4, !dbg !3815
  %add58 = add nsw i32 %57, 0, !dbg !3817
  %idxprom = sext i32 %add58 to i64, !dbg !3818
  %58 = load float*, float** %s0.addr, align 8, !dbg !3818
  %arrayidx59 = getelementptr inbounds float, float* %58, i64 %idxprom, !dbg !3818
  %59 = load float, float* %arrayidx59, align 4, !dbg !3818
  %60 = load i32, i32* %k, align 4, !dbg !3819
  %add60 = add nsw i32 %60, 0, !dbg !3820
  %idxprom61 = sext i32 %add60 to i64, !dbg !3821
  %61 = load float*, float** %t0.addr, align 8, !dbg !3821
  %arrayidx62 = getelementptr inbounds float, float* %61, i64 %idxprom61, !dbg !3821
  %62 = load float, float* %arrayidx62, align 4, !dbg !3821
  %mul63 = fmul float %59, %62, !dbg !3822
  %63 = load i32, i32* %j, align 4, !dbg !3823
  %add64 = add nsw i32 %63, 1, !dbg !3824
  %idxprom65 = sext i32 %add64 to i64, !dbg !3825
  %64 = load float*, float** %s0.addr, align 8, !dbg !3825
  %arrayidx66 = getelementptr inbounds float, float* %64, i64 %idxprom65, !dbg !3825
  %65 = load float, float* %arrayidx66, align 4, !dbg !3825
  %66 = load i32, i32* %k, align 4, !dbg !3826
  %add67 = add nsw i32 %66, 1, !dbg !3827
  %idxprom68 = sext i32 %add67 to i64, !dbg !3828
  %67 = load float*, float** %t0.addr, align 8, !dbg !3828
  %arrayidx69 = getelementptr inbounds float, float* %67, i64 %idxprom68, !dbg !3828
  %68 = load float, float* %arrayidx69, align 4, !dbg !3828
  %mul70 = fmul float %65, %68, !dbg !3829
  %sub71 = fsub float %mul63, %mul70, !dbg !3830
  %69 = load i32, i32* %j, align 4, !dbg !3831
  %add72 = add nsw i32 %69, 0, !dbg !3832
  %idxprom73 = sext i32 %add72 to i64, !dbg !3833
  %70 = load float*, float** %s1.addr, align 8, !dbg !3833
  %arrayidx74 = getelementptr inbounds float, float* %70, i64 %idxprom73, !dbg !3833
  %71 = load float, float* %arrayidx74, align 4, !dbg !3833
  %72 = load i32, i32* %k, align 4, !dbg !3834
  %add75 = add nsw i32 %72, 0, !dbg !3835
  %idxprom76 = sext i32 %add75 to i64, !dbg !3836
  %73 = load float*, float** %t1.addr, align 8, !dbg !3836
  %arrayidx77 = getelementptr inbounds float, float* %73, i64 %idxprom76, !dbg !3836
  %74 = load float, float* %arrayidx77, align 4, !dbg !3836
  %mul78 = fmul float %71, %74, !dbg !3837
  %add79 = fadd float %sub71, %mul78, !dbg !3838
  %75 = load i32, i32* %j, align 4, !dbg !3839
  %add80 = add nsw i32 %75, 1, !dbg !3840
  %idxprom81 = sext i32 %add80 to i64, !dbg !3841
  %76 = load float*, float** %s1.addr, align 8, !dbg !3841
  %arrayidx82 = getelementptr inbounds float, float* %76, i64 %idxprom81, !dbg !3841
  %77 = load float, float* %arrayidx82, align 4, !dbg !3841
  %78 = load i32, i32* %k, align 4, !dbg !3842
  %add83 = add nsw i32 %78, 1, !dbg !3843
  %idxprom84 = sext i32 %add83 to i64, !dbg !3844
  %79 = load float*, float** %t1.addr, align 8, !dbg !3844
  %arrayidx85 = getelementptr inbounds float, float* %79, i64 %idxprom84, !dbg !3844
  %80 = load float, float* %arrayidx85, align 4, !dbg !3844
  %mul86 = fmul float %77, %80, !dbg !3845
  %sub87 = fsub float %add79, %mul86, !dbg !3846
  %81 = load i32, i32* %j, align 4, !dbg !3847
  %add88 = add nsw i32 %81, 0, !dbg !3848
  %idxprom89 = sext i32 %add88 to i64, !dbg !3849
  %82 = load float*, float** %s2.addr, align 8, !dbg !3849
  %arrayidx90 = getelementptr inbounds float, float* %82, i64 %idxprom89, !dbg !3849
  %83 = load float, float* %arrayidx90, align 4, !dbg !3849
  %84 = load i32, i32* %k, align 4, !dbg !3850
  %add91 = add nsw i32 %84, 0, !dbg !3851
  %idxprom92 = sext i32 %add91 to i64, !dbg !3852
  %85 = load float*, float** %t2.addr, align 8, !dbg !3852
  %arrayidx93 = getelementptr inbounds float, float* %85, i64 %idxprom92, !dbg !3852
  %86 = load float, float* %arrayidx93, align 4, !dbg !3852
  %mul94 = fmul float %83, %86, !dbg !3853
  %add95 = fadd float %sub87, %mul94, !dbg !3854
  %87 = load i32, i32* %j, align 4, !dbg !3855
  %add96 = add nsw i32 %87, 1, !dbg !3856
  %idxprom97 = sext i32 %add96 to i64, !dbg !3857
  %88 = load float*, float** %s2.addr, align 8, !dbg !3857
  %arrayidx98 = getelementptr inbounds float, float* %88, i64 %idxprom97, !dbg !3857
  %89 = load float, float* %arrayidx98, align 4, !dbg !3857
  %90 = load i32, i32* %k, align 4, !dbg !3858
  %add99 = add nsw i32 %90, 1, !dbg !3859
  %idxprom100 = sext i32 %add99 to i64, !dbg !3860
  %91 = load float*, float** %t2.addr, align 8, !dbg !3860
  %arrayidx101 = getelementptr inbounds float, float* %91, i64 %idxprom100, !dbg !3860
  %92 = load float, float* %arrayidx101, align 4, !dbg !3860
  %mul102 = fmul float %89, %92, !dbg !3861
  %sub103 = fsub float %add95, %mul102, !dbg !3862
  %93 = load i32, i32* %j, align 4, !dbg !3863
  %add104 = add nsw i32 %93, 0, !dbg !3864
  %idxprom105 = sext i32 %add104 to i64, !dbg !3865
  %94 = load float*, float** %s3.addr, align 8, !dbg !3865
  %arrayidx106 = getelementptr inbounds float, float* %94, i64 %idxprom105, !dbg !3865
  %95 = load float, float* %arrayidx106, align 4, !dbg !3865
  %96 = load i32, i32* %k, align 4, !dbg !3866
  %add107 = add nsw i32 %96, 0, !dbg !3867
  %idxprom108 = sext i32 %add107 to i64, !dbg !3868
  %97 = load float*, float** %t3.addr, align 8, !dbg !3868
  %arrayidx109 = getelementptr inbounds float, float* %97, i64 %idxprom108, !dbg !3868
  %98 = load float, float* %arrayidx109, align 4, !dbg !3868
  %mul110 = fmul float %95, %98, !dbg !3869
  %add111 = fadd float %sub103, %mul110, !dbg !3870
  %99 = load i32, i32* %j, align 4, !dbg !3871
  %add112 = add nsw i32 %99, 1, !dbg !3872
  %idxprom113 = sext i32 %add112 to i64, !dbg !3873
  %100 = load float*, float** %s3.addr, align 8, !dbg !3873
  %arrayidx114 = getelementptr inbounds float, float* %100, i64 %idxprom113, !dbg !3873
  %101 = load float, float* %arrayidx114, align 4, !dbg !3873
  %102 = load i32, i32* %k, align 4, !dbg !3874
  %add115 = add nsw i32 %102, 1, !dbg !3875
  %idxprom116 = sext i32 %add115 to i64, !dbg !3876
  %103 = load float*, float** %t3.addr, align 8, !dbg !3876
  %arrayidx117 = getelementptr inbounds float, float* %103, i64 %idxprom116, !dbg !3876
  %104 = load float, float* %arrayidx117, align 4, !dbg !3876
  %mul118 = fmul float %101, %104, !dbg !3877
  %sub119 = fsub float %add111, %mul118, !dbg !3878
  %105 = load float*, float** %d1, align 8, !dbg !3879
  %incdec.ptr = getelementptr inbounds float, float* %105, i32 1, !dbg !3879
  store float* %incdec.ptr, float** %d1, align 8, !dbg !3879
  store float %sub119, float* %105, align 4, !dbg !3880
  %106 = load i32, i32* %j, align 4, !dbg !3881
  %add120 = add nsw i32 %106, 0, !dbg !3882
  %idxprom121 = sext i32 %add120 to i64, !dbg !3883
  %107 = load float*, float** %s0.addr, align 8, !dbg !3883
  %arrayidx122 = getelementptr inbounds float, float* %107, i64 %idxprom121, !dbg !3883
  %108 = load float, float* %arrayidx122, align 4, !dbg !3883
  %109 = load i32, i32* %k, align 4, !dbg !3884
  %add123 = add nsw i32 %109, 1, !dbg !3885
  %idxprom124 = sext i32 %add123 to i64, !dbg !3886
  %110 = load float*, float** %t0.addr, align 8, !dbg !3886
  %arrayidx125 = getelementptr inbounds float, float* %110, i64 %idxprom124, !dbg !3886
  %111 = load float, float* %arrayidx125, align 4, !dbg !3886
  %mul126 = fmul float %108, %111, !dbg !3887
  %112 = load i32, i32* %j, align 4, !dbg !3888
  %add127 = add nsw i32 %112, 1, !dbg !3889
  %idxprom128 = sext i32 %add127 to i64, !dbg !3890
  %113 = load float*, float** %s0.addr, align 8, !dbg !3890
  %arrayidx129 = getelementptr inbounds float, float* %113, i64 %idxprom128, !dbg !3890
  %114 = load float, float* %arrayidx129, align 4, !dbg !3890
  %115 = load i32, i32* %k, align 4, !dbg !3891
  %add130 = add nsw i32 %115, 0, !dbg !3892
  %idxprom131 = sext i32 %add130 to i64, !dbg !3893
  %116 = load float*, float** %t0.addr, align 8, !dbg !3893
  %arrayidx132 = getelementptr inbounds float, float* %116, i64 %idxprom131, !dbg !3893
  %117 = load float, float* %arrayidx132, align 4, !dbg !3893
  %mul133 = fmul float %114, %117, !dbg !3894
  %add134 = fadd float %mul126, %mul133, !dbg !3895
  %118 = load i32, i32* %j, align 4, !dbg !3896
  %add135 = add nsw i32 %118, 0, !dbg !3897
  %idxprom136 = sext i32 %add135 to i64, !dbg !3898
  %119 = load float*, float** %s1.addr, align 8, !dbg !3898
  %arrayidx137 = getelementptr inbounds float, float* %119, i64 %idxprom136, !dbg !3898
  %120 = load float, float* %arrayidx137, align 4, !dbg !3898
  %121 = load i32, i32* %k, align 4, !dbg !3899
  %add138 = add nsw i32 %121, 1, !dbg !3900
  %idxprom139 = sext i32 %add138 to i64, !dbg !3901
  %122 = load float*, float** %t1.addr, align 8, !dbg !3901
  %arrayidx140 = getelementptr inbounds float, float* %122, i64 %idxprom139, !dbg !3901
  %123 = load float, float* %arrayidx140, align 4, !dbg !3901
  %mul141 = fmul float %120, %123, !dbg !3902
  %add142 = fadd float %add134, %mul141, !dbg !3903
  %124 = load i32, i32* %j, align 4, !dbg !3904
  %add143 = add nsw i32 %124, 1, !dbg !3905
  %idxprom144 = sext i32 %add143 to i64, !dbg !3906
  %125 = load float*, float** %s1.addr, align 8, !dbg !3906
  %arrayidx145 = getelementptr inbounds float, float* %125, i64 %idxprom144, !dbg !3906
  %126 = load float, float* %arrayidx145, align 4, !dbg !3906
  %127 = load i32, i32* %k, align 4, !dbg !3907
  %add146 = add nsw i32 %127, 0, !dbg !3908
  %idxprom147 = sext i32 %add146 to i64, !dbg !3909
  %128 = load float*, float** %t1.addr, align 8, !dbg !3909
  %arrayidx148 = getelementptr inbounds float, float* %128, i64 %idxprom147, !dbg !3909
  %129 = load float, float* %arrayidx148, align 4, !dbg !3909
  %mul149 = fmul float %126, %129, !dbg !3910
  %add150 = fadd float %add142, %mul149, !dbg !3911
  %130 = load i32, i32* %j, align 4, !dbg !3912
  %add151 = add nsw i32 %130, 0, !dbg !3913
  %idxprom152 = sext i32 %add151 to i64, !dbg !3914
  %131 = load float*, float** %s2.addr, align 8, !dbg !3914
  %arrayidx153 = getelementptr inbounds float, float* %131, i64 %idxprom152, !dbg !3914
  %132 = load float, float* %arrayidx153, align 4, !dbg !3914
  %133 = load i32, i32* %k, align 4, !dbg !3915
  %add154 = add nsw i32 %133, 1, !dbg !3916
  %idxprom155 = sext i32 %add154 to i64, !dbg !3917
  %134 = load float*, float** %t2.addr, align 8, !dbg !3917
  %arrayidx156 = getelementptr inbounds float, float* %134, i64 %idxprom155, !dbg !3917
  %135 = load float, float* %arrayidx156, align 4, !dbg !3917
  %mul157 = fmul float %132, %135, !dbg !3918
  %add158 = fadd float %add150, %mul157, !dbg !3919
  %136 = load i32, i32* %j, align 4, !dbg !3920
  %add159 = add nsw i32 %136, 1, !dbg !3921
  %idxprom160 = sext i32 %add159 to i64, !dbg !3922
  %137 = load float*, float** %s2.addr, align 8, !dbg !3922
  %arrayidx161 = getelementptr inbounds float, float* %137, i64 %idxprom160, !dbg !3922
  %138 = load float, float* %arrayidx161, align 4, !dbg !3922
  %139 = load i32, i32* %k, align 4, !dbg !3923
  %add162 = add nsw i32 %139, 0, !dbg !3924
  %idxprom163 = sext i32 %add162 to i64, !dbg !3925
  %140 = load float*, float** %t2.addr, align 8, !dbg !3925
  %arrayidx164 = getelementptr inbounds float, float* %140, i64 %idxprom163, !dbg !3925
  %141 = load float, float* %arrayidx164, align 4, !dbg !3925
  %mul165 = fmul float %138, %141, !dbg !3926
  %add166 = fadd float %add158, %mul165, !dbg !3927
  %142 = load i32, i32* %j, align 4, !dbg !3928
  %add167 = add nsw i32 %142, 0, !dbg !3929
  %idxprom168 = sext i32 %add167 to i64, !dbg !3930
  %143 = load float*, float** %s3.addr, align 8, !dbg !3930
  %arrayidx169 = getelementptr inbounds float, float* %143, i64 %idxprom168, !dbg !3930
  %144 = load float, float* %arrayidx169, align 4, !dbg !3930
  %145 = load i32, i32* %k, align 4, !dbg !3931
  %add170 = add nsw i32 %145, 1, !dbg !3932
  %idxprom171 = sext i32 %add170 to i64, !dbg !3933
  %146 = load float*, float** %t3.addr, align 8, !dbg !3933
  %arrayidx172 = getelementptr inbounds float, float* %146, i64 %idxprom171, !dbg !3933
  %147 = load float, float* %arrayidx172, align 4, !dbg !3933
  %mul173 = fmul float %144, %147, !dbg !3934
  %add174 = fadd float %add166, %mul173, !dbg !3935
  %148 = load i32, i32* %j, align 4, !dbg !3936
  %add175 = add nsw i32 %148, 1, !dbg !3937
  %idxprom176 = sext i32 %add175 to i64, !dbg !3938
  %149 = load float*, float** %s3.addr, align 8, !dbg !3938
  %arrayidx177 = getelementptr inbounds float, float* %149, i64 %idxprom176, !dbg !3938
  %150 = load float, float* %arrayidx177, align 4, !dbg !3938
  %151 = load i32, i32* %k, align 4, !dbg !3939
  %add178 = add nsw i32 %151, 0, !dbg !3940
  %idxprom179 = sext i32 %add178 to i64, !dbg !3941
  %152 = load float*, float** %t3.addr, align 8, !dbg !3941
  %arrayidx180 = getelementptr inbounds float, float* %152, i64 %idxprom179, !dbg !3941
  %153 = load float, float* %arrayidx180, align 4, !dbg !3941
  %mul181 = fmul float %150, %153, !dbg !3942
  %add182 = fadd float %add174, %mul181, !dbg !3943
  %154 = load float*, float** %d1, align 8, !dbg !3944
  %incdec.ptr183 = getelementptr inbounds float, float* %154, i32 1, !dbg !3944
  store float* %incdec.ptr183, float** %d1, align 8, !dbg !3944
  store float %add182, float* %154, align 4, !dbg !3945
  %155 = load i32, i32* %j, align 4, !dbg !3946
  %add184 = add nsw i32 %155, 0, !dbg !3947
  %idxprom185 = sext i32 %add184 to i64, !dbg !3948
  %156 = load float*, float** %s0.addr, align 8, !dbg !3948
  %arrayidx186 = getelementptr inbounds float, float* %156, i64 %idxprom185, !dbg !3948
  %157 = load float, float* %arrayidx186, align 4, !dbg !3948
  %158 = load i32, i32* %k, align 4, !dbg !3949
  %add187 = add nsw i32 %158, 0, !dbg !3950
  %idxprom188 = sext i32 %add187 to i64, !dbg !3951
  %159 = load float*, float** %h0, align 8, !dbg !3951
  %arrayidx189 = getelementptr inbounds float, float* %159, i64 %idxprom188, !dbg !3951
  %160 = load float, float* %arrayidx189, align 4, !dbg !3951
  %mul190 = fmul float %157, %160, !dbg !3952
  %161 = load i32, i32* %j, align 4, !dbg !3953
  %add191 = add nsw i32 %161, 1, !dbg !3954
  %idxprom192 = sext i32 %add191 to i64, !dbg !3955
  %162 = load float*, float** %s0.addr, align 8, !dbg !3955
  %arrayidx193 = getelementptr inbounds float, float* %162, i64 %idxprom192, !dbg !3955
  %163 = load float, float* %arrayidx193, align 4, !dbg !3955
  %164 = load i32, i32* %k, align 4, !dbg !3956
  %add194 = add nsw i32 %164, 1, !dbg !3957
  %idxprom195 = sext i32 %add194 to i64, !dbg !3958
  %165 = load float*, float** %h0, align 8, !dbg !3958
  %arrayidx196 = getelementptr inbounds float, float* %165, i64 %idxprom195, !dbg !3958
  %166 = load float, float* %arrayidx196, align 4, !dbg !3958
  %mul197 = fmul float %163, %166, !dbg !3959
  %sub198 = fsub float %mul190, %mul197, !dbg !3960
  %167 = load i32, i32* %j, align 4, !dbg !3961
  %add199 = add nsw i32 %167, 0, !dbg !3962
  %idxprom200 = sext i32 %add199 to i64, !dbg !3963
  %168 = load float*, float** %s1.addr, align 8, !dbg !3963
  %arrayidx201 = getelementptr inbounds float, float* %168, i64 %idxprom200, !dbg !3963
  %169 = load float, float* %arrayidx201, align 4, !dbg !3963
  %170 = load i32, i32* %k, align 4, !dbg !3964
  %add202 = add nsw i32 %170, 0, !dbg !3965
  %idxprom203 = sext i32 %add202 to i64, !dbg !3966
  %171 = load float*, float** %h1, align 8, !dbg !3966
  %arrayidx204 = getelementptr inbounds float, float* %171, i64 %idxprom203, !dbg !3966
  %172 = load float, float* %arrayidx204, align 4, !dbg !3966
  %mul205 = fmul float %169, %172, !dbg !3967
  %add206 = fadd float %sub198, %mul205, !dbg !3968
  %173 = load i32, i32* %j, align 4, !dbg !3969
  %add207 = add nsw i32 %173, 1, !dbg !3970
  %idxprom208 = sext i32 %add207 to i64, !dbg !3971
  %174 = load float*, float** %s1.addr, align 8, !dbg !3971
  %arrayidx209 = getelementptr inbounds float, float* %174, i64 %idxprom208, !dbg !3971
  %175 = load float, float* %arrayidx209, align 4, !dbg !3971
  %176 = load i32, i32* %k, align 4, !dbg !3972
  %add210 = add nsw i32 %176, 1, !dbg !3973
  %idxprom211 = sext i32 %add210 to i64, !dbg !3974
  %177 = load float*, float** %h1, align 8, !dbg !3974
  %arrayidx212 = getelementptr inbounds float, float* %177, i64 %idxprom211, !dbg !3974
  %178 = load float, float* %arrayidx212, align 4, !dbg !3974
  %mul213 = fmul float %175, %178, !dbg !3975
  %sub214 = fsub float %add206, %mul213, !dbg !3976
  %179 = load i32, i32* %j, align 4, !dbg !3977
  %add215 = add nsw i32 %179, 0, !dbg !3978
  %idxprom216 = sext i32 %add215 to i64, !dbg !3979
  %180 = load float*, float** %s2.addr, align 8, !dbg !3979
  %arrayidx217 = getelementptr inbounds float, float* %180, i64 %idxprom216, !dbg !3979
  %181 = load float, float* %arrayidx217, align 4, !dbg !3979
  %182 = load i32, i32* %k, align 4, !dbg !3980
  %add218 = add nsw i32 %182, 0, !dbg !3981
  %idxprom219 = sext i32 %add218 to i64, !dbg !3982
  %183 = load float*, float** %h2, align 8, !dbg !3982
  %arrayidx220 = getelementptr inbounds float, float* %183, i64 %idxprom219, !dbg !3982
  %184 = load float, float* %arrayidx220, align 4, !dbg !3982
  %mul221 = fmul float %181, %184, !dbg !3983
  %add222 = fadd float %sub214, %mul221, !dbg !3984
  %185 = load i32, i32* %j, align 4, !dbg !3985
  %add223 = add nsw i32 %185, 1, !dbg !3986
  %idxprom224 = sext i32 %add223 to i64, !dbg !3987
  %186 = load float*, float** %s2.addr, align 8, !dbg !3987
  %arrayidx225 = getelementptr inbounds float, float* %186, i64 %idxprom224, !dbg !3987
  %187 = load float, float* %arrayidx225, align 4, !dbg !3987
  %188 = load i32, i32* %k, align 4, !dbg !3988
  %add226 = add nsw i32 %188, 1, !dbg !3989
  %idxprom227 = sext i32 %add226 to i64, !dbg !3990
  %189 = load float*, float** %h2, align 8, !dbg !3990
  %arrayidx228 = getelementptr inbounds float, float* %189, i64 %idxprom227, !dbg !3990
  %190 = load float, float* %arrayidx228, align 4, !dbg !3990
  %mul229 = fmul float %187, %190, !dbg !3991
  %sub230 = fsub float %add222, %mul229, !dbg !3992
  %191 = load i32, i32* %j, align 4, !dbg !3993
  %add231 = add nsw i32 %191, 0, !dbg !3994
  %idxprom232 = sext i32 %add231 to i64, !dbg !3995
  %192 = load float*, float** %s3.addr, align 8, !dbg !3995
  %arrayidx233 = getelementptr inbounds float, float* %192, i64 %idxprom232, !dbg !3995
  %193 = load float, float* %arrayidx233, align 4, !dbg !3995
  %194 = load i32, i32* %k, align 4, !dbg !3996
  %add234 = add nsw i32 %194, 0, !dbg !3997
  %idxprom235 = sext i32 %add234 to i64, !dbg !3998
  %195 = load float*, float** %h3, align 8, !dbg !3998
  %arrayidx236 = getelementptr inbounds float, float* %195, i64 %idxprom235, !dbg !3998
  %196 = load float, float* %arrayidx236, align 4, !dbg !3998
  %mul237 = fmul float %193, %196, !dbg !3999
  %add238 = fadd float %sub230, %mul237, !dbg !4000
  %197 = load i32, i32* %j, align 4, !dbg !4001
  %add239 = add nsw i32 %197, 1, !dbg !4002
  %idxprom240 = sext i32 %add239 to i64, !dbg !4003
  %198 = load float*, float** %s3.addr, align 8, !dbg !4003
  %arrayidx241 = getelementptr inbounds float, float* %198, i64 %idxprom240, !dbg !4003
  %199 = load float, float* %arrayidx241, align 4, !dbg !4003
  %200 = load i32, i32* %k, align 4, !dbg !4004
  %add242 = add nsw i32 %200, 1, !dbg !4005
  %idxprom243 = sext i32 %add242 to i64, !dbg !4006
  %201 = load float*, float** %h3, align 8, !dbg !4006
  %arrayidx244 = getelementptr inbounds float, float* %201, i64 %idxprom243, !dbg !4006
  %202 = load float, float* %arrayidx244, align 4, !dbg !4006
  %mul245 = fmul float %199, %202, !dbg !4007
  %sub246 = fsub float %add238, %mul245, !dbg !4008
  %203 = load float*, float** %d2, align 8, !dbg !4009
  %incdec.ptr247 = getelementptr inbounds float, float* %203, i32 1, !dbg !4009
  store float* %incdec.ptr247, float** %d2, align 8, !dbg !4009
  store float %sub246, float* %203, align 4, !dbg !4010
  %204 = load i32, i32* %j, align 4, !dbg !4011
  %add248 = add nsw i32 %204, 0, !dbg !4012
  %idxprom249 = sext i32 %add248 to i64, !dbg !4013
  %205 = load float*, float** %s0.addr, align 8, !dbg !4013
  %arrayidx250 = getelementptr inbounds float, float* %205, i64 %idxprom249, !dbg !4013
  %206 = load float, float* %arrayidx250, align 4, !dbg !4013
  %207 = load i32, i32* %k, align 4, !dbg !4014
  %add251 = add nsw i32 %207, 1, !dbg !4015
  %idxprom252 = sext i32 %add251 to i64, !dbg !4016
  %208 = load float*, float** %h0, align 8, !dbg !4016
  %arrayidx253 = getelementptr inbounds float, float* %208, i64 %idxprom252, !dbg !4016
  %209 = load float, float* %arrayidx253, align 4, !dbg !4016
  %mul254 = fmul float %206, %209, !dbg !4017
  %210 = load i32, i32* %j, align 4, !dbg !4018
  %add255 = add nsw i32 %210, 1, !dbg !4019
  %idxprom256 = sext i32 %add255 to i64, !dbg !4020
  %211 = load float*, float** %s0.addr, align 8, !dbg !4020
  %arrayidx257 = getelementptr inbounds float, float* %211, i64 %idxprom256, !dbg !4020
  %212 = load float, float* %arrayidx257, align 4, !dbg !4020
  %213 = load i32, i32* %k, align 4, !dbg !4021
  %add258 = add nsw i32 %213, 0, !dbg !4022
  %idxprom259 = sext i32 %add258 to i64, !dbg !4023
  %214 = load float*, float** %h0, align 8, !dbg !4023
  %arrayidx260 = getelementptr inbounds float, float* %214, i64 %idxprom259, !dbg !4023
  %215 = load float, float* %arrayidx260, align 4, !dbg !4023
  %mul261 = fmul float %212, %215, !dbg !4024
  %add262 = fadd float %mul254, %mul261, !dbg !4025
  %216 = load i32, i32* %j, align 4, !dbg !4026
  %add263 = add nsw i32 %216, 0, !dbg !4027
  %idxprom264 = sext i32 %add263 to i64, !dbg !4028
  %217 = load float*, float** %s1.addr, align 8, !dbg !4028
  %arrayidx265 = getelementptr inbounds float, float* %217, i64 %idxprom264, !dbg !4028
  %218 = load float, float* %arrayidx265, align 4, !dbg !4028
  %219 = load i32, i32* %k, align 4, !dbg !4029
  %add266 = add nsw i32 %219, 1, !dbg !4030
  %idxprom267 = sext i32 %add266 to i64, !dbg !4031
  %220 = load float*, float** %h1, align 8, !dbg !4031
  %arrayidx268 = getelementptr inbounds float, float* %220, i64 %idxprom267, !dbg !4031
  %221 = load float, float* %arrayidx268, align 4, !dbg !4031
  %mul269 = fmul float %218, %221, !dbg !4032
  %add270 = fadd float %add262, %mul269, !dbg !4033
  %222 = load i32, i32* %j, align 4, !dbg !4034
  %add271 = add nsw i32 %222, 1, !dbg !4035
  %idxprom272 = sext i32 %add271 to i64, !dbg !4036
  %223 = load float*, float** %s1.addr, align 8, !dbg !4036
  %arrayidx273 = getelementptr inbounds float, float* %223, i64 %idxprom272, !dbg !4036
  %224 = load float, float* %arrayidx273, align 4, !dbg !4036
  %225 = load i32, i32* %k, align 4, !dbg !4037
  %add274 = add nsw i32 %225, 0, !dbg !4038
  %idxprom275 = sext i32 %add274 to i64, !dbg !4039
  %226 = load float*, float** %h1, align 8, !dbg !4039
  %arrayidx276 = getelementptr inbounds float, float* %226, i64 %idxprom275, !dbg !4039
  %227 = load float, float* %arrayidx276, align 4, !dbg !4039
  %mul277 = fmul float %224, %227, !dbg !4040
  %add278 = fadd float %add270, %mul277, !dbg !4041
  %228 = load i32, i32* %j, align 4, !dbg !4042
  %add279 = add nsw i32 %228, 0, !dbg !4043
  %idxprom280 = sext i32 %add279 to i64, !dbg !4044
  %229 = load float*, float** %s2.addr, align 8, !dbg !4044
  %arrayidx281 = getelementptr inbounds float, float* %229, i64 %idxprom280, !dbg !4044
  %230 = load float, float* %arrayidx281, align 4, !dbg !4044
  %231 = load i32, i32* %k, align 4, !dbg !4045
  %add282 = add nsw i32 %231, 1, !dbg !4046
  %idxprom283 = sext i32 %add282 to i64, !dbg !4047
  %232 = load float*, float** %h2, align 8, !dbg !4047
  %arrayidx284 = getelementptr inbounds float, float* %232, i64 %idxprom283, !dbg !4047
  %233 = load float, float* %arrayidx284, align 4, !dbg !4047
  %mul285 = fmul float %230, %233, !dbg !4048
  %add286 = fadd float %add278, %mul285, !dbg !4049
  %234 = load i32, i32* %j, align 4, !dbg !4050
  %add287 = add nsw i32 %234, 1, !dbg !4051
  %idxprom288 = sext i32 %add287 to i64, !dbg !4052
  %235 = load float*, float** %s2.addr, align 8, !dbg !4052
  %arrayidx289 = getelementptr inbounds float, float* %235, i64 %idxprom288, !dbg !4052
  %236 = load float, float* %arrayidx289, align 4, !dbg !4052
  %237 = load i32, i32* %k, align 4, !dbg !4053
  %add290 = add nsw i32 %237, 0, !dbg !4054
  %idxprom291 = sext i32 %add290 to i64, !dbg !4055
  %238 = load float*, float** %h2, align 8, !dbg !4055
  %arrayidx292 = getelementptr inbounds float, float* %238, i64 %idxprom291, !dbg !4055
  %239 = load float, float* %arrayidx292, align 4, !dbg !4055
  %mul293 = fmul float %236, %239, !dbg !4056
  %add294 = fadd float %add286, %mul293, !dbg !4057
  %240 = load i32, i32* %j, align 4, !dbg !4058
  %add295 = add nsw i32 %240, 0, !dbg !4059
  %idxprom296 = sext i32 %add295 to i64, !dbg !4060
  %241 = load float*, float** %s3.addr, align 8, !dbg !4060
  %arrayidx297 = getelementptr inbounds float, float* %241, i64 %idxprom296, !dbg !4060
  %242 = load float, float* %arrayidx297, align 4, !dbg !4060
  %243 = load i32, i32* %k, align 4, !dbg !4061
  %add298 = add nsw i32 %243, 1, !dbg !4062
  %idxprom299 = sext i32 %add298 to i64, !dbg !4063
  %244 = load float*, float** %h3, align 8, !dbg !4063
  %arrayidx300 = getelementptr inbounds float, float* %244, i64 %idxprom299, !dbg !4063
  %245 = load float, float* %arrayidx300, align 4, !dbg !4063
  %mul301 = fmul float %242, %245, !dbg !4064
  %add302 = fadd float %add294, %mul301, !dbg !4065
  %246 = load i32, i32* %j, align 4, !dbg !4066
  %add303 = add nsw i32 %246, 1, !dbg !4067
  %idxprom304 = sext i32 %add303 to i64, !dbg !4068
  %247 = load float*, float** %s3.addr, align 8, !dbg !4068
  %arrayidx305 = getelementptr inbounds float, float* %247, i64 %idxprom304, !dbg !4068
  %248 = load float, float* %arrayidx305, align 4, !dbg !4068
  %249 = load i32, i32* %k, align 4, !dbg !4069
  %add306 = add nsw i32 %249, 0, !dbg !4070
  %idxprom307 = sext i32 %add306 to i64, !dbg !4071
  %250 = load float*, float** %h3, align 8, !dbg !4071
  %arrayidx308 = getelementptr inbounds float, float* %250, i64 %idxprom307, !dbg !4071
  %251 = load float, float* %arrayidx308, align 4, !dbg !4071
  %mul309 = fmul float %248, %251, !dbg !4072
  %add310 = fadd float %add302, %mul309, !dbg !4073
  %252 = load float*, float** %d2, align 8, !dbg !4074
  %incdec.ptr311 = getelementptr inbounds float, float* %252, i32 1, !dbg !4074
  store float* %incdec.ptr311, float** %d2, align 8, !dbg !4074
  store float %add310, float* %252, align 4, !dbg !4075
  %253 = load i32, i32* %j, align 4, !dbg !4076
  %add312 = add nsw i32 %253, 2, !dbg !4076
  store i32 %add312, i32* %j, align 4, !dbg !4076
  %254 = load i32, i32* %step.addr, align 4, !dbg !4077
  %mul313 = mul nsw i32 2, %254, !dbg !4078
  %255 = load i32, i32* %k, align 4, !dbg !4079
  %add314 = add nsw i32 %255, %mul313, !dbg !4079
  store i32 %add314, i32* %k, align 4, !dbg !4079
  br label %for.inc315, !dbg !4080

for.inc315:                                       ; preds = %for.body57
  %256 = load i32, i32* %i, align 4, !dbg !4081
  %inc = add nsw i32 %256, 1, !dbg !4081
  store i32 %inc, i32* %i, align 4, !dbg !4081
  br label %for.cond54, !dbg !4083, !llvm.loop !4084

for.end316:                                       ; preds = %for.cond54
  %257 = load float*, float** %s0.addr, align 8, !dbg !4086
  %arrayidx317 = getelementptr inbounds float, float* %257, i64 1, !dbg !4086
  %258 = load float, float* %arrayidx317, align 4, !dbg !4086
  %259 = load i32, i32* %hoff, align 4, !dbg !4087
  %idxprom318 = sext i32 %259 to i64, !dbg !4088
  %260 = load float*, float** %t0.addr, align 8, !dbg !4088
  %arrayidx319 = getelementptr inbounds float, float* %260, i64 %idxprom318, !dbg !4088
  %261 = load float, float* %arrayidx319, align 4, !dbg !4088
  %mul320 = fmul float %258, %261, !dbg !4089
  %262 = load float*, float** %s1.addr, align 8, !dbg !4090
  %arrayidx321 = getelementptr inbounds float, float* %262, i64 1, !dbg !4090
  %263 = load float, float* %arrayidx321, align 4, !dbg !4090
  %264 = load i32, i32* %hoff, align 4, !dbg !4091
  %idxprom322 = sext i32 %264 to i64, !dbg !4092
  %265 = load float*, float** %t1.addr, align 8, !dbg !4092
  %arrayidx323 = getelementptr inbounds float, float* %265, i64 %idxprom322, !dbg !4092
  %266 = load float, float* %arrayidx323, align 4, !dbg !4092
  %mul324 = fmul float %263, %266, !dbg !4093
  %add325 = fadd float %mul320, %mul324, !dbg !4094
  %267 = load float*, float** %s2.addr, align 8, !dbg !4095
  %arrayidx326 = getelementptr inbounds float, float* %267, i64 1, !dbg !4095
  %268 = load float, float* %arrayidx326, align 4, !dbg !4095
  %269 = load i32, i32* %hoff, align 4, !dbg !4096
  %idxprom327 = sext i32 %269 to i64, !dbg !4097
  %270 = load float*, float** %t2.addr, align 8, !dbg !4097
  %arrayidx328 = getelementptr inbounds float, float* %270, i64 %idxprom327, !dbg !4097
  %271 = load float, float* %arrayidx328, align 4, !dbg !4097
  %mul329 = fmul float %268, %271, !dbg !4098
  %add330 = fadd float %add325, %mul329, !dbg !4099
  %272 = load float*, float** %s3.addr, align 8, !dbg !4100
  %arrayidx331 = getelementptr inbounds float, float* %272, i64 1, !dbg !4100
  %273 = load float, float* %arrayidx331, align 4, !dbg !4100
  %274 = load i32, i32* %hoff, align 4, !dbg !4101
  %idxprom332 = sext i32 %274 to i64, !dbg !4102
  %275 = load float*, float** %t3.addr, align 8, !dbg !4102
  %arrayidx333 = getelementptr inbounds float, float* %275, i64 %idxprom332, !dbg !4102
  %276 = load float, float* %arrayidx333, align 4, !dbg !4102
  %mul334 = fmul float %273, %276, !dbg !4103
  %add335 = fadd float %add330, %mul334, !dbg !4104
  %277 = load i32, i32* %len4, align 4, !dbg !4105
  %idxprom336 = sext i32 %277 to i64, !dbg !4106
  %278 = load float*, float** %dst.addr, align 8, !dbg !4106
  %arrayidx337 = getelementptr inbounds float, float* %278, i64 %idxprom336, !dbg !4106
  store float %add335, float* %arrayidx337, align 4, !dbg !4107
  %279 = load float*, float** %s0.addr, align 8, !dbg !4108
  %arrayidx338 = getelementptr inbounds float, float* %279, i64 1, !dbg !4108
  %280 = load float, float* %arrayidx338, align 4, !dbg !4108
  %281 = load i32, i32* %hoff, align 4, !dbg !4109
  %add339 = add nsw i32 %281, 1, !dbg !4110
  %idxprom340 = sext i32 %add339 to i64, !dbg !4111
  %282 = load float*, float** %t0.addr, align 8, !dbg !4111
  %arrayidx341 = getelementptr inbounds float, float* %282, i64 %idxprom340, !dbg !4111
  %283 = load float, float* %arrayidx341, align 4, !dbg !4111
  %mul342 = fmul float %280, %283, !dbg !4112
  %284 = load float*, float** %s1.addr, align 8, !dbg !4113
  %arrayidx343 = getelementptr inbounds float, float* %284, i64 1, !dbg !4113
  %285 = load float, float* %arrayidx343, align 4, !dbg !4113
  %286 = load i32, i32* %hoff, align 4, !dbg !4114
  %add344 = add nsw i32 %286, 1, !dbg !4115
  %idxprom345 = sext i32 %add344 to i64, !dbg !4116
  %287 = load float*, float** %t1.addr, align 8, !dbg !4116
  %arrayidx346 = getelementptr inbounds float, float* %287, i64 %idxprom345, !dbg !4116
  %288 = load float, float* %arrayidx346, align 4, !dbg !4116
  %mul347 = fmul float %285, %288, !dbg !4117
  %add348 = fadd float %mul342, %mul347, !dbg !4118
  %289 = load float*, float** %s2.addr, align 8, !dbg !4119
  %arrayidx349 = getelementptr inbounds float, float* %289, i64 1, !dbg !4119
  %290 = load float, float* %arrayidx349, align 4, !dbg !4119
  %291 = load i32, i32* %hoff, align 4, !dbg !4120
  %add350 = add nsw i32 %291, 1, !dbg !4121
  %idxprom351 = sext i32 %add350 to i64, !dbg !4122
  %292 = load float*, float** %t2.addr, align 8, !dbg !4122
  %arrayidx352 = getelementptr inbounds float, float* %292, i64 %idxprom351, !dbg !4122
  %293 = load float, float* %arrayidx352, align 4, !dbg !4122
  %mul353 = fmul float %290, %293, !dbg !4123
  %add354 = fadd float %add348, %mul353, !dbg !4124
  %294 = load float*, float** %s3.addr, align 8, !dbg !4125
  %arrayidx355 = getelementptr inbounds float, float* %294, i64 1, !dbg !4125
  %295 = load float, float* %arrayidx355, align 4, !dbg !4125
  %296 = load i32, i32* %hoff, align 4, !dbg !4126
  %add356 = add nsw i32 %296, 1, !dbg !4127
  %idxprom357 = sext i32 %add356 to i64, !dbg !4128
  %297 = load float*, float** %t3.addr, align 8, !dbg !4128
  %arrayidx358 = getelementptr inbounds float, float* %297, i64 %idxprom357, !dbg !4128
  %298 = load float, float* %arrayidx358, align 4, !dbg !4128
  %mul359 = fmul float %295, %298, !dbg !4129
  %add360 = fadd float %add354, %mul359, !dbg !4130
  %299 = load i32, i32* %len4, align 4, !dbg !4131
  %add361 = add nsw i32 %299, 1, !dbg !4132
  %idxprom362 = sext i32 %add361 to i64, !dbg !4133
  %300 = load float*, float** %dst.addr, align 8, !dbg !4133
  %arrayidx363 = getelementptr inbounds float, float* %300, i64 %idxprom362, !dbg !4133
  store float %add360, float* %arrayidx363, align 4, !dbg !4134
  %301 = load float*, float** %s0.addr, align 8, !dbg !4135
  %arrayidx364 = getelementptr inbounds float, float* %301, i64 1, !dbg !4135
  %302 = load float, float* %arrayidx364, align 4, !dbg !4135
  %303 = load i32, i32* %hoff, align 4, !dbg !4136
  %idxprom365 = sext i32 %303 to i64, !dbg !4137
  %304 = load float*, float** %h0, align 8, !dbg !4137
  %arrayidx366 = getelementptr inbounds float, float* %304, i64 %idxprom365, !dbg !4137
  %305 = load float, float* %arrayidx366, align 4, !dbg !4137
  %mul367 = fmul float %302, %305, !dbg !4138
  %306 = load float*, float** %s1.addr, align 8, !dbg !4139
  %arrayidx368 = getelementptr inbounds float, float* %306, i64 1, !dbg !4139
  %307 = load float, float* %arrayidx368, align 4, !dbg !4139
  %308 = load i32, i32* %hoff, align 4, !dbg !4140
  %idxprom369 = sext i32 %308 to i64, !dbg !4141
  %309 = load float*, float** %h1, align 8, !dbg !4141
  %arrayidx370 = getelementptr inbounds float, float* %309, i64 %idxprom369, !dbg !4141
  %310 = load float, float* %arrayidx370, align 4, !dbg !4141
  %mul371 = fmul float %307, %310, !dbg !4142
  %add372 = fadd float %mul367, %mul371, !dbg !4143
  %311 = load float*, float** %s2.addr, align 8, !dbg !4144
  %arrayidx373 = getelementptr inbounds float, float* %311, i64 1, !dbg !4144
  %312 = load float, float* %arrayidx373, align 4, !dbg !4144
  %313 = load i32, i32* %hoff, align 4, !dbg !4145
  %idxprom374 = sext i32 %313 to i64, !dbg !4146
  %314 = load float*, float** %h2, align 8, !dbg !4146
  %arrayidx375 = getelementptr inbounds float, float* %314, i64 %idxprom374, !dbg !4146
  %315 = load float, float* %arrayidx375, align 4, !dbg !4146
  %mul376 = fmul float %312, %315, !dbg !4147
  %add377 = fadd float %add372, %mul376, !dbg !4148
  %316 = load float*, float** %s3.addr, align 8, !dbg !4149
  %arrayidx378 = getelementptr inbounds float, float* %316, i64 1, !dbg !4149
  %317 = load float, float* %arrayidx378, align 4, !dbg !4149
  %318 = load i32, i32* %hoff, align 4, !dbg !4150
  %idxprom379 = sext i32 %318 to i64, !dbg !4151
  %319 = load float*, float** %h3, align 8, !dbg !4151
  %arrayidx380 = getelementptr inbounds float, float* %319, i64 %idxprom379, !dbg !4151
  %320 = load float, float* %arrayidx380, align 4, !dbg !4151
  %mul381 = fmul float %317, %320, !dbg !4152
  %add382 = fadd float %add377, %mul381, !dbg !4153
  %321 = load i32, i32* %len4, align 4, !dbg !4154
  %322 = load i32, i32* %len2, align 4, !dbg !4155
  %add383 = add nsw i32 %321, %322, !dbg !4156
  %idxprom384 = sext i32 %add383 to i64, !dbg !4157
  %323 = load float*, float** %dst.addr, align 8, !dbg !4157
  %arrayidx385 = getelementptr inbounds float, float* %323, i64 %idxprom384, !dbg !4157
  store float %add382, float* %arrayidx385, align 4, !dbg !4158
  %324 = load float*, float** %s0.addr, align 8, !dbg !4159
  %arrayidx386 = getelementptr inbounds float, float* %324, i64 1, !dbg !4159
  %325 = load float, float* %arrayidx386, align 4, !dbg !4159
  %326 = load i32, i32* %hoff, align 4, !dbg !4160
  %add387 = add nsw i32 %326, 1, !dbg !4161
  %idxprom388 = sext i32 %add387 to i64, !dbg !4162
  %327 = load float*, float** %h0, align 8, !dbg !4162
  %arrayidx389 = getelementptr inbounds float, float* %327, i64 %idxprom388, !dbg !4162
  %328 = load float, float* %arrayidx389, align 4, !dbg !4162
  %mul390 = fmul float %325, %328, !dbg !4163
  %329 = load float*, float** %s1.addr, align 8, !dbg !4164
  %arrayidx391 = getelementptr inbounds float, float* %329, i64 1, !dbg !4164
  %330 = load float, float* %arrayidx391, align 4, !dbg !4164
  %331 = load i32, i32* %hoff, align 4, !dbg !4165
  %add392 = add nsw i32 %331, 1, !dbg !4166
  %idxprom393 = sext i32 %add392 to i64, !dbg !4167
  %332 = load float*, float** %h1, align 8, !dbg !4167
  %arrayidx394 = getelementptr inbounds float, float* %332, i64 %idxprom393, !dbg !4167
  %333 = load float, float* %arrayidx394, align 4, !dbg !4167
  %mul395 = fmul float %330, %333, !dbg !4168
  %add396 = fadd float %mul390, %mul395, !dbg !4169
  %334 = load float*, float** %s2.addr, align 8, !dbg !4170
  %arrayidx397 = getelementptr inbounds float, float* %334, i64 1, !dbg !4170
  %335 = load float, float* %arrayidx397, align 4, !dbg !4170
  %336 = load i32, i32* %hoff, align 4, !dbg !4171
  %add398 = add nsw i32 %336, 1, !dbg !4172
  %idxprom399 = sext i32 %add398 to i64, !dbg !4173
  %337 = load float*, float** %h2, align 8, !dbg !4173
  %arrayidx400 = getelementptr inbounds float, float* %337, i64 %idxprom399, !dbg !4173
  %338 = load float, float* %arrayidx400, align 4, !dbg !4173
  %mul401 = fmul float %335, %338, !dbg !4174
  %add402 = fadd float %add396, %mul401, !dbg !4175
  %339 = load float*, float** %s3.addr, align 8, !dbg !4176
  %arrayidx403 = getelementptr inbounds float, float* %339, i64 1, !dbg !4176
  %340 = load float, float* %arrayidx403, align 4, !dbg !4176
  %341 = load i32, i32* %hoff, align 4, !dbg !4177
  %add404 = add nsw i32 %341, 1, !dbg !4178
  %idxprom405 = sext i32 %add404 to i64, !dbg !4179
  %342 = load float*, float** %h3, align 8, !dbg !4179
  %arrayidx406 = getelementptr inbounds float, float* %342, i64 %idxprom405, !dbg !4179
  %343 = load float, float* %arrayidx406, align 4, !dbg !4179
  %mul407 = fmul float %340, %343, !dbg !4180
  %add408 = fadd float %add402, %mul407, !dbg !4181
  %344 = load i32, i32* %len4, align 4, !dbg !4182
  %345 = load i32, i32* %len2, align 4, !dbg !4183
  %add409 = add nsw i32 %344, %345, !dbg !4184
  %add410 = add nsw i32 %add409, 1, !dbg !4185
  %idxprom411 = sext i32 %add410 to i64, !dbg !4186
  %346 = load float*, float** %dst.addr, align 8, !dbg !4186
  %arrayidx412 = getelementptr inbounds float, float* %346, i64 %idxprom411, !dbg !4186
  store float %add408, float* %arrayidx412, align 4, !dbg !4187
  %347 = load i32, i32* %len4, align 4, !dbg !4188
  store i32 %347, i32* %j, align 4, !dbg !4189
  %348 = load i32, i32* %hoff, align 4, !dbg !4190
  %349 = load i32, i32* %step.addr, align 4, !dbg !4191
  %mul413 = mul nsw i32 2, %349, !dbg !4192
  %350 = load i32, i32* %len4, align 4, !dbg !4193
  %mul414 = mul nsw i32 %mul413, %350, !dbg !4194
  %add415 = add nsw i32 %348, %mul414, !dbg !4195
  store i32 %add415, i32* %k, align 4, !dbg !4196
  %351 = load float*, float** %dst.addr, align 8, !dbg !4197
  %352 = load i32, i32* %len4, align 4, !dbg !4198
  %idx.ext416 = sext i32 %352 to i64, !dbg !4199
  %add.ptr417 = getelementptr inbounds float, float* %351, i64 %idx.ext416, !dbg !4199
  %add.ptr418 = getelementptr inbounds float, float* %add.ptr417, i64 2, !dbg !4200
  store float* %add.ptr418, float** %d1, align 8, !dbg !4201
  %353 = load float*, float** %dst.addr, align 8, !dbg !4202
  %354 = load i32, i32* %len4, align 4, !dbg !4203
  %idx.ext419 = sext i32 %354 to i64, !dbg !4204
  %add.ptr420 = getelementptr inbounds float, float* %353, i64 %idx.ext419, !dbg !4204
  %add.ptr421 = getelementptr inbounds float, float* %add.ptr420, i64 2, !dbg !4205
  %355 = load i32, i32* %len2, align 4, !dbg !4206
  %idx.ext422 = sext i32 %355 to i64, !dbg !4207
  %add.ptr423 = getelementptr inbounds float, float* %add.ptr421, i64 %idx.ext422, !dbg !4207
  store float* %add.ptr423, float** %d2, align 8, !dbg !4208
  store i32 0, i32* %i, align 4, !dbg !4209
  br label %for.cond424, !dbg !4211

for.cond424:                                      ; preds = %for.inc688, %for.end316
  %356 = load i32, i32* %i, align 4, !dbg !4212
  %357 = load i32, i32* %len4, align 4, !dbg !4215
  %sub425 = sub nsw i32 %357, 2, !dbg !4216
  %shr426 = ashr i32 %sub425, 1, !dbg !4217
  %cmp427 = icmp slt i32 %356, %shr426, !dbg !4218
  br i1 %cmp427, label %for.body428, label %for.end690, !dbg !4219

for.body428:                                      ; preds = %for.cond424
  %358 = load i32, i32* %j, align 4, !dbg !4220
  %add429 = add nsw i32 %358, 0, !dbg !4222
  %idxprom430 = sext i32 %add429 to i64, !dbg !4223
  %359 = load float*, float** %s0.addr, align 8, !dbg !4223
  %arrayidx431 = getelementptr inbounds float, float* %359, i64 %idxprom430, !dbg !4223
  %360 = load float, float* %arrayidx431, align 4, !dbg !4223
  %361 = load i32, i32* %k, align 4, !dbg !4224
  %add432 = add nsw i32 %361, 0, !dbg !4225
  %idxprom433 = sext i32 %add432 to i64, !dbg !4226
  %362 = load float*, float** %t0.addr, align 8, !dbg !4226
  %arrayidx434 = getelementptr inbounds float, float* %362, i64 %idxprom433, !dbg !4226
  %363 = load float, float* %arrayidx434, align 4, !dbg !4226
  %mul435 = fmul float %360, %363, !dbg !4227
  %364 = load i32, i32* %j, align 4, !dbg !4228
  %add436 = add nsw i32 %364, 1, !dbg !4229
  %idxprom437 = sext i32 %add436 to i64, !dbg !4230
  %365 = load float*, float** %s0.addr, align 8, !dbg !4230
  %arrayidx438 = getelementptr inbounds float, float* %365, i64 %idxprom437, !dbg !4230
  %366 = load float, float* %arrayidx438, align 4, !dbg !4230
  %367 = load i32, i32* %k, align 4, !dbg !4231
  %add439 = add nsw i32 %367, 1, !dbg !4232
  %idxprom440 = sext i32 %add439 to i64, !dbg !4233
  %368 = load float*, float** %t0.addr, align 8, !dbg !4233
  %arrayidx441 = getelementptr inbounds float, float* %368, i64 %idxprom440, !dbg !4233
  %369 = load float, float* %arrayidx441, align 4, !dbg !4233
  %mul442 = fmul float %366, %369, !dbg !4234
  %add443 = fadd float %mul435, %mul442, !dbg !4235
  %370 = load i32, i32* %j, align 4, !dbg !4236
  %add444 = add nsw i32 %370, 0, !dbg !4237
  %idxprom445 = sext i32 %add444 to i64, !dbg !4238
  %371 = load float*, float** %s1.addr, align 8, !dbg !4238
  %arrayidx446 = getelementptr inbounds float, float* %371, i64 %idxprom445, !dbg !4238
  %372 = load float, float* %arrayidx446, align 4, !dbg !4238
  %373 = load i32, i32* %k, align 4, !dbg !4239
  %add447 = add nsw i32 %373, 0, !dbg !4240
  %idxprom448 = sext i32 %add447 to i64, !dbg !4241
  %374 = load float*, float** %t1.addr, align 8, !dbg !4241
  %arrayidx449 = getelementptr inbounds float, float* %374, i64 %idxprom448, !dbg !4241
  %375 = load float, float* %arrayidx449, align 4, !dbg !4241
  %mul450 = fmul float %372, %375, !dbg !4242
  %add451 = fadd float %add443, %mul450, !dbg !4243
  %376 = load i32, i32* %j, align 4, !dbg !4244
  %add452 = add nsw i32 %376, 1, !dbg !4245
  %idxprom453 = sext i32 %add452 to i64, !dbg !4246
  %377 = load float*, float** %s1.addr, align 8, !dbg !4246
  %arrayidx454 = getelementptr inbounds float, float* %377, i64 %idxprom453, !dbg !4246
  %378 = load float, float* %arrayidx454, align 4, !dbg !4246
  %379 = load i32, i32* %k, align 4, !dbg !4247
  %add455 = add nsw i32 %379, 1, !dbg !4248
  %idxprom456 = sext i32 %add455 to i64, !dbg !4249
  %380 = load float*, float** %t1.addr, align 8, !dbg !4249
  %arrayidx457 = getelementptr inbounds float, float* %380, i64 %idxprom456, !dbg !4249
  %381 = load float, float* %arrayidx457, align 4, !dbg !4249
  %mul458 = fmul float %378, %381, !dbg !4250
  %add459 = fadd float %add451, %mul458, !dbg !4251
  %382 = load i32, i32* %j, align 4, !dbg !4252
  %add460 = add nsw i32 %382, 0, !dbg !4253
  %idxprom461 = sext i32 %add460 to i64, !dbg !4254
  %383 = load float*, float** %s2.addr, align 8, !dbg !4254
  %arrayidx462 = getelementptr inbounds float, float* %383, i64 %idxprom461, !dbg !4254
  %384 = load float, float* %arrayidx462, align 4, !dbg !4254
  %385 = load i32, i32* %k, align 4, !dbg !4255
  %add463 = add nsw i32 %385, 0, !dbg !4256
  %idxprom464 = sext i32 %add463 to i64, !dbg !4257
  %386 = load float*, float** %t2.addr, align 8, !dbg !4257
  %arrayidx465 = getelementptr inbounds float, float* %386, i64 %idxprom464, !dbg !4257
  %387 = load float, float* %arrayidx465, align 4, !dbg !4257
  %mul466 = fmul float %384, %387, !dbg !4258
  %add467 = fadd float %add459, %mul466, !dbg !4259
  %388 = load i32, i32* %j, align 4, !dbg !4260
  %add468 = add nsw i32 %388, 1, !dbg !4261
  %idxprom469 = sext i32 %add468 to i64, !dbg !4262
  %389 = load float*, float** %s2.addr, align 8, !dbg !4262
  %arrayidx470 = getelementptr inbounds float, float* %389, i64 %idxprom469, !dbg !4262
  %390 = load float, float* %arrayidx470, align 4, !dbg !4262
  %391 = load i32, i32* %k, align 4, !dbg !4263
  %add471 = add nsw i32 %391, 1, !dbg !4264
  %idxprom472 = sext i32 %add471 to i64, !dbg !4265
  %392 = load float*, float** %t2.addr, align 8, !dbg !4265
  %arrayidx473 = getelementptr inbounds float, float* %392, i64 %idxprom472, !dbg !4265
  %393 = load float, float* %arrayidx473, align 4, !dbg !4265
  %mul474 = fmul float %390, %393, !dbg !4266
  %add475 = fadd float %add467, %mul474, !dbg !4267
  %394 = load i32, i32* %j, align 4, !dbg !4268
  %add476 = add nsw i32 %394, 0, !dbg !4269
  %idxprom477 = sext i32 %add476 to i64, !dbg !4270
  %395 = load float*, float** %s3.addr, align 8, !dbg !4270
  %arrayidx478 = getelementptr inbounds float, float* %395, i64 %idxprom477, !dbg !4270
  %396 = load float, float* %arrayidx478, align 4, !dbg !4270
  %397 = load i32, i32* %k, align 4, !dbg !4271
  %add479 = add nsw i32 %397, 0, !dbg !4272
  %idxprom480 = sext i32 %add479 to i64, !dbg !4273
  %398 = load float*, float** %t3.addr, align 8, !dbg !4273
  %arrayidx481 = getelementptr inbounds float, float* %398, i64 %idxprom480, !dbg !4273
  %399 = load float, float* %arrayidx481, align 4, !dbg !4273
  %mul482 = fmul float %396, %399, !dbg !4274
  %add483 = fadd float %add475, %mul482, !dbg !4275
  %400 = load i32, i32* %j, align 4, !dbg !4276
  %add484 = add nsw i32 %400, 1, !dbg !4277
  %idxprom485 = sext i32 %add484 to i64, !dbg !4278
  %401 = load float*, float** %s3.addr, align 8, !dbg !4278
  %arrayidx486 = getelementptr inbounds float, float* %401, i64 %idxprom485, !dbg !4278
  %402 = load float, float* %arrayidx486, align 4, !dbg !4278
  %403 = load i32, i32* %k, align 4, !dbg !4279
  %add487 = add nsw i32 %403, 1, !dbg !4280
  %idxprom488 = sext i32 %add487 to i64, !dbg !4281
  %404 = load float*, float** %t3.addr, align 8, !dbg !4281
  %arrayidx489 = getelementptr inbounds float, float* %404, i64 %idxprom488, !dbg !4281
  %405 = load float, float* %arrayidx489, align 4, !dbg !4281
  %mul490 = fmul float %402, %405, !dbg !4282
  %add491 = fadd float %add483, %mul490, !dbg !4283
  %406 = load float*, float** %d1, align 8, !dbg !4284
  %incdec.ptr492 = getelementptr inbounds float, float* %406, i32 1, !dbg !4284
  store float* %incdec.ptr492, float** %d1, align 8, !dbg !4284
  store float %add491, float* %406, align 4, !dbg !4285
  %407 = load i32, i32* %j, align 4, !dbg !4286
  %add493 = add nsw i32 %407, 0, !dbg !4287
  %idxprom494 = sext i32 %add493 to i64, !dbg !4288
  %408 = load float*, float** %s0.addr, align 8, !dbg !4288
  %arrayidx495 = getelementptr inbounds float, float* %408, i64 %idxprom494, !dbg !4288
  %409 = load float, float* %arrayidx495, align 4, !dbg !4288
  %410 = load i32, i32* %k, align 4, !dbg !4289
  %add496 = add nsw i32 %410, 1, !dbg !4290
  %idxprom497 = sext i32 %add496 to i64, !dbg !4291
  %411 = load float*, float** %t0.addr, align 8, !dbg !4291
  %arrayidx498 = getelementptr inbounds float, float* %411, i64 %idxprom497, !dbg !4291
  %412 = load float, float* %arrayidx498, align 4, !dbg !4291
  %mul499 = fmul float %409, %412, !dbg !4292
  %413 = load i32, i32* %j, align 4, !dbg !4293
  %add500 = add nsw i32 %413, 1, !dbg !4294
  %idxprom501 = sext i32 %add500 to i64, !dbg !4295
  %414 = load float*, float** %s0.addr, align 8, !dbg !4295
  %arrayidx502 = getelementptr inbounds float, float* %414, i64 %idxprom501, !dbg !4295
  %415 = load float, float* %arrayidx502, align 4, !dbg !4295
  %416 = load i32, i32* %k, align 4, !dbg !4296
  %add503 = add nsw i32 %416, 0, !dbg !4297
  %idxprom504 = sext i32 %add503 to i64, !dbg !4298
  %417 = load float*, float** %t0.addr, align 8, !dbg !4298
  %arrayidx505 = getelementptr inbounds float, float* %417, i64 %idxprom504, !dbg !4298
  %418 = load float, float* %arrayidx505, align 4, !dbg !4298
  %mul506 = fmul float %415, %418, !dbg !4299
  %sub507 = fsub float %mul499, %mul506, !dbg !4300
  %419 = load i32, i32* %j, align 4, !dbg !4301
  %add508 = add nsw i32 %419, 0, !dbg !4302
  %idxprom509 = sext i32 %add508 to i64, !dbg !4303
  %420 = load float*, float** %s1.addr, align 8, !dbg !4303
  %arrayidx510 = getelementptr inbounds float, float* %420, i64 %idxprom509, !dbg !4303
  %421 = load float, float* %arrayidx510, align 4, !dbg !4303
  %422 = load i32, i32* %k, align 4, !dbg !4304
  %add511 = add nsw i32 %422, 1, !dbg !4305
  %idxprom512 = sext i32 %add511 to i64, !dbg !4306
  %423 = load float*, float** %t1.addr, align 8, !dbg !4306
  %arrayidx513 = getelementptr inbounds float, float* %423, i64 %idxprom512, !dbg !4306
  %424 = load float, float* %arrayidx513, align 4, !dbg !4306
  %mul514 = fmul float %421, %424, !dbg !4307
  %add515 = fadd float %sub507, %mul514, !dbg !4308
  %425 = load i32, i32* %j, align 4, !dbg !4309
  %add516 = add nsw i32 %425, 1, !dbg !4310
  %idxprom517 = sext i32 %add516 to i64, !dbg !4311
  %426 = load float*, float** %s1.addr, align 8, !dbg !4311
  %arrayidx518 = getelementptr inbounds float, float* %426, i64 %idxprom517, !dbg !4311
  %427 = load float, float* %arrayidx518, align 4, !dbg !4311
  %428 = load i32, i32* %k, align 4, !dbg !4312
  %add519 = add nsw i32 %428, 0, !dbg !4313
  %idxprom520 = sext i32 %add519 to i64, !dbg !4314
  %429 = load float*, float** %t1.addr, align 8, !dbg !4314
  %arrayidx521 = getelementptr inbounds float, float* %429, i64 %idxprom520, !dbg !4314
  %430 = load float, float* %arrayidx521, align 4, !dbg !4314
  %mul522 = fmul float %427, %430, !dbg !4315
  %sub523 = fsub float %add515, %mul522, !dbg !4316
  %431 = load i32, i32* %j, align 4, !dbg !4317
  %add524 = add nsw i32 %431, 0, !dbg !4318
  %idxprom525 = sext i32 %add524 to i64, !dbg !4319
  %432 = load float*, float** %s2.addr, align 8, !dbg !4319
  %arrayidx526 = getelementptr inbounds float, float* %432, i64 %idxprom525, !dbg !4319
  %433 = load float, float* %arrayidx526, align 4, !dbg !4319
  %434 = load i32, i32* %k, align 4, !dbg !4320
  %add527 = add nsw i32 %434, 1, !dbg !4321
  %idxprom528 = sext i32 %add527 to i64, !dbg !4322
  %435 = load float*, float** %t2.addr, align 8, !dbg !4322
  %arrayidx529 = getelementptr inbounds float, float* %435, i64 %idxprom528, !dbg !4322
  %436 = load float, float* %arrayidx529, align 4, !dbg !4322
  %mul530 = fmul float %433, %436, !dbg !4323
  %add531 = fadd float %sub523, %mul530, !dbg !4324
  %437 = load i32, i32* %j, align 4, !dbg !4325
  %add532 = add nsw i32 %437, 1, !dbg !4326
  %idxprom533 = sext i32 %add532 to i64, !dbg !4327
  %438 = load float*, float** %s2.addr, align 8, !dbg !4327
  %arrayidx534 = getelementptr inbounds float, float* %438, i64 %idxprom533, !dbg !4327
  %439 = load float, float* %arrayidx534, align 4, !dbg !4327
  %440 = load i32, i32* %k, align 4, !dbg !4328
  %add535 = add nsw i32 %440, 0, !dbg !4329
  %idxprom536 = sext i32 %add535 to i64, !dbg !4330
  %441 = load float*, float** %t2.addr, align 8, !dbg !4330
  %arrayidx537 = getelementptr inbounds float, float* %441, i64 %idxprom536, !dbg !4330
  %442 = load float, float* %arrayidx537, align 4, !dbg !4330
  %mul538 = fmul float %439, %442, !dbg !4331
  %sub539 = fsub float %add531, %mul538, !dbg !4332
  %443 = load i32, i32* %j, align 4, !dbg !4333
  %add540 = add nsw i32 %443, 0, !dbg !4334
  %idxprom541 = sext i32 %add540 to i64, !dbg !4335
  %444 = load float*, float** %s3.addr, align 8, !dbg !4335
  %arrayidx542 = getelementptr inbounds float, float* %444, i64 %idxprom541, !dbg !4335
  %445 = load float, float* %arrayidx542, align 4, !dbg !4335
  %446 = load i32, i32* %k, align 4, !dbg !4336
  %add543 = add nsw i32 %446, 1, !dbg !4337
  %idxprom544 = sext i32 %add543 to i64, !dbg !4338
  %447 = load float*, float** %t3.addr, align 8, !dbg !4338
  %arrayidx545 = getelementptr inbounds float, float* %447, i64 %idxprom544, !dbg !4338
  %448 = load float, float* %arrayidx545, align 4, !dbg !4338
  %mul546 = fmul float %445, %448, !dbg !4339
  %add547 = fadd float %sub539, %mul546, !dbg !4340
  %449 = load i32, i32* %j, align 4, !dbg !4341
  %add548 = add nsw i32 %449, 1, !dbg !4342
  %idxprom549 = sext i32 %add548 to i64, !dbg !4343
  %450 = load float*, float** %s3.addr, align 8, !dbg !4343
  %arrayidx550 = getelementptr inbounds float, float* %450, i64 %idxprom549, !dbg !4343
  %451 = load float, float* %arrayidx550, align 4, !dbg !4343
  %452 = load i32, i32* %k, align 4, !dbg !4344
  %add551 = add nsw i32 %452, 0, !dbg !4345
  %idxprom552 = sext i32 %add551 to i64, !dbg !4346
  %453 = load float*, float** %t3.addr, align 8, !dbg !4346
  %arrayidx553 = getelementptr inbounds float, float* %453, i64 %idxprom552, !dbg !4346
  %454 = load float, float* %arrayidx553, align 4, !dbg !4346
  %mul554 = fmul float %451, %454, !dbg !4347
  %sub555 = fsub float %add547, %mul554, !dbg !4348
  %455 = load float*, float** %d1, align 8, !dbg !4349
  %incdec.ptr556 = getelementptr inbounds float, float* %455, i32 1, !dbg !4349
  store float* %incdec.ptr556, float** %d1, align 8, !dbg !4349
  store float %sub555, float* %455, align 4, !dbg !4350
  %456 = load i32, i32* %j, align 4, !dbg !4351
  %add557 = add nsw i32 %456, 0, !dbg !4352
  %idxprom558 = sext i32 %add557 to i64, !dbg !4353
  %457 = load float*, float** %s0.addr, align 8, !dbg !4353
  %arrayidx559 = getelementptr inbounds float, float* %457, i64 %idxprom558, !dbg !4353
  %458 = load float, float* %arrayidx559, align 4, !dbg !4353
  %459 = load i32, i32* %k, align 4, !dbg !4354
  %add560 = add nsw i32 %459, 0, !dbg !4355
  %idxprom561 = sext i32 %add560 to i64, !dbg !4356
  %460 = load float*, float** %h0, align 8, !dbg !4356
  %arrayidx562 = getelementptr inbounds float, float* %460, i64 %idxprom561, !dbg !4356
  %461 = load float, float* %arrayidx562, align 4, !dbg !4356
  %mul563 = fmul float %458, %461, !dbg !4357
  %462 = load i32, i32* %j, align 4, !dbg !4358
  %add564 = add nsw i32 %462, 1, !dbg !4359
  %idxprom565 = sext i32 %add564 to i64, !dbg !4360
  %463 = load float*, float** %s0.addr, align 8, !dbg !4360
  %arrayidx566 = getelementptr inbounds float, float* %463, i64 %idxprom565, !dbg !4360
  %464 = load float, float* %arrayidx566, align 4, !dbg !4360
  %465 = load i32, i32* %k, align 4, !dbg !4361
  %add567 = add nsw i32 %465, 1, !dbg !4362
  %idxprom568 = sext i32 %add567 to i64, !dbg !4363
  %466 = load float*, float** %h0, align 8, !dbg !4363
  %arrayidx569 = getelementptr inbounds float, float* %466, i64 %idxprom568, !dbg !4363
  %467 = load float, float* %arrayidx569, align 4, !dbg !4363
  %mul570 = fmul float %464, %467, !dbg !4364
  %add571 = fadd float %mul563, %mul570, !dbg !4365
  %468 = load i32, i32* %j, align 4, !dbg !4366
  %add572 = add nsw i32 %468, 0, !dbg !4367
  %idxprom573 = sext i32 %add572 to i64, !dbg !4368
  %469 = load float*, float** %s1.addr, align 8, !dbg !4368
  %arrayidx574 = getelementptr inbounds float, float* %469, i64 %idxprom573, !dbg !4368
  %470 = load float, float* %arrayidx574, align 4, !dbg !4368
  %471 = load i32, i32* %k, align 4, !dbg !4369
  %add575 = add nsw i32 %471, 0, !dbg !4370
  %idxprom576 = sext i32 %add575 to i64, !dbg !4371
  %472 = load float*, float** %h1, align 8, !dbg !4371
  %arrayidx577 = getelementptr inbounds float, float* %472, i64 %idxprom576, !dbg !4371
  %473 = load float, float* %arrayidx577, align 4, !dbg !4371
  %mul578 = fmul float %470, %473, !dbg !4372
  %add579 = fadd float %add571, %mul578, !dbg !4373
  %474 = load i32, i32* %j, align 4, !dbg !4374
  %add580 = add nsw i32 %474, 1, !dbg !4375
  %idxprom581 = sext i32 %add580 to i64, !dbg !4376
  %475 = load float*, float** %s1.addr, align 8, !dbg !4376
  %arrayidx582 = getelementptr inbounds float, float* %475, i64 %idxprom581, !dbg !4376
  %476 = load float, float* %arrayidx582, align 4, !dbg !4376
  %477 = load i32, i32* %k, align 4, !dbg !4377
  %add583 = add nsw i32 %477, 1, !dbg !4378
  %idxprom584 = sext i32 %add583 to i64, !dbg !4379
  %478 = load float*, float** %h1, align 8, !dbg !4379
  %arrayidx585 = getelementptr inbounds float, float* %478, i64 %idxprom584, !dbg !4379
  %479 = load float, float* %arrayidx585, align 4, !dbg !4379
  %mul586 = fmul float %476, %479, !dbg !4380
  %add587 = fadd float %add579, %mul586, !dbg !4381
  %480 = load i32, i32* %j, align 4, !dbg !4382
  %add588 = add nsw i32 %480, 0, !dbg !4383
  %idxprom589 = sext i32 %add588 to i64, !dbg !4384
  %481 = load float*, float** %s2.addr, align 8, !dbg !4384
  %arrayidx590 = getelementptr inbounds float, float* %481, i64 %idxprom589, !dbg !4384
  %482 = load float, float* %arrayidx590, align 4, !dbg !4384
  %483 = load i32, i32* %k, align 4, !dbg !4385
  %add591 = add nsw i32 %483, 0, !dbg !4386
  %idxprom592 = sext i32 %add591 to i64, !dbg !4387
  %484 = load float*, float** %h2, align 8, !dbg !4387
  %arrayidx593 = getelementptr inbounds float, float* %484, i64 %idxprom592, !dbg !4387
  %485 = load float, float* %arrayidx593, align 4, !dbg !4387
  %mul594 = fmul float %482, %485, !dbg !4388
  %add595 = fadd float %add587, %mul594, !dbg !4389
  %486 = load i32, i32* %j, align 4, !dbg !4390
  %add596 = add nsw i32 %486, 1, !dbg !4391
  %idxprom597 = sext i32 %add596 to i64, !dbg !4392
  %487 = load float*, float** %s2.addr, align 8, !dbg !4392
  %arrayidx598 = getelementptr inbounds float, float* %487, i64 %idxprom597, !dbg !4392
  %488 = load float, float* %arrayidx598, align 4, !dbg !4392
  %489 = load i32, i32* %k, align 4, !dbg !4393
  %add599 = add nsw i32 %489, 1, !dbg !4394
  %idxprom600 = sext i32 %add599 to i64, !dbg !4395
  %490 = load float*, float** %h2, align 8, !dbg !4395
  %arrayidx601 = getelementptr inbounds float, float* %490, i64 %idxprom600, !dbg !4395
  %491 = load float, float* %arrayidx601, align 4, !dbg !4395
  %mul602 = fmul float %488, %491, !dbg !4396
  %add603 = fadd float %add595, %mul602, !dbg !4397
  %492 = load i32, i32* %j, align 4, !dbg !4398
  %add604 = add nsw i32 %492, 0, !dbg !4399
  %idxprom605 = sext i32 %add604 to i64, !dbg !4400
  %493 = load float*, float** %s3.addr, align 8, !dbg !4400
  %arrayidx606 = getelementptr inbounds float, float* %493, i64 %idxprom605, !dbg !4400
  %494 = load float, float* %arrayidx606, align 4, !dbg !4400
  %495 = load i32, i32* %k, align 4, !dbg !4401
  %add607 = add nsw i32 %495, 0, !dbg !4402
  %idxprom608 = sext i32 %add607 to i64, !dbg !4403
  %496 = load float*, float** %h3, align 8, !dbg !4403
  %arrayidx609 = getelementptr inbounds float, float* %496, i64 %idxprom608, !dbg !4403
  %497 = load float, float* %arrayidx609, align 4, !dbg !4403
  %mul610 = fmul float %494, %497, !dbg !4404
  %add611 = fadd float %add603, %mul610, !dbg !4405
  %498 = load i32, i32* %j, align 4, !dbg !4406
  %add612 = add nsw i32 %498, 1, !dbg !4407
  %idxprom613 = sext i32 %add612 to i64, !dbg !4408
  %499 = load float*, float** %s3.addr, align 8, !dbg !4408
  %arrayidx614 = getelementptr inbounds float, float* %499, i64 %idxprom613, !dbg !4408
  %500 = load float, float* %arrayidx614, align 4, !dbg !4408
  %501 = load i32, i32* %k, align 4, !dbg !4409
  %add615 = add nsw i32 %501, 1, !dbg !4410
  %idxprom616 = sext i32 %add615 to i64, !dbg !4411
  %502 = load float*, float** %h3, align 8, !dbg !4411
  %arrayidx617 = getelementptr inbounds float, float* %502, i64 %idxprom616, !dbg !4411
  %503 = load float, float* %arrayidx617, align 4, !dbg !4411
  %mul618 = fmul float %500, %503, !dbg !4412
  %add619 = fadd float %add611, %mul618, !dbg !4413
  %504 = load float*, float** %d2, align 8, !dbg !4414
  %incdec.ptr620 = getelementptr inbounds float, float* %504, i32 1, !dbg !4414
  store float* %incdec.ptr620, float** %d2, align 8, !dbg !4414
  store float %add619, float* %504, align 4, !dbg !4415
  %505 = load i32, i32* %j, align 4, !dbg !4416
  %add621 = add nsw i32 %505, 0, !dbg !4417
  %idxprom622 = sext i32 %add621 to i64, !dbg !4418
  %506 = load float*, float** %s0.addr, align 8, !dbg !4418
  %arrayidx623 = getelementptr inbounds float, float* %506, i64 %idxprom622, !dbg !4418
  %507 = load float, float* %arrayidx623, align 4, !dbg !4418
  %508 = load i32, i32* %k, align 4, !dbg !4419
  %add624 = add nsw i32 %508, 1, !dbg !4420
  %idxprom625 = sext i32 %add624 to i64, !dbg !4421
  %509 = load float*, float** %h0, align 8, !dbg !4421
  %arrayidx626 = getelementptr inbounds float, float* %509, i64 %idxprom625, !dbg !4421
  %510 = load float, float* %arrayidx626, align 4, !dbg !4421
  %mul627 = fmul float %507, %510, !dbg !4422
  %511 = load i32, i32* %j, align 4, !dbg !4423
  %add628 = add nsw i32 %511, 1, !dbg !4424
  %idxprom629 = sext i32 %add628 to i64, !dbg !4425
  %512 = load float*, float** %s0.addr, align 8, !dbg !4425
  %arrayidx630 = getelementptr inbounds float, float* %512, i64 %idxprom629, !dbg !4425
  %513 = load float, float* %arrayidx630, align 4, !dbg !4425
  %514 = load i32, i32* %k, align 4, !dbg !4426
  %add631 = add nsw i32 %514, 0, !dbg !4427
  %idxprom632 = sext i32 %add631 to i64, !dbg !4428
  %515 = load float*, float** %h0, align 8, !dbg !4428
  %arrayidx633 = getelementptr inbounds float, float* %515, i64 %idxprom632, !dbg !4428
  %516 = load float, float* %arrayidx633, align 4, !dbg !4428
  %mul634 = fmul float %513, %516, !dbg !4429
  %sub635 = fsub float %mul627, %mul634, !dbg !4430
  %517 = load i32, i32* %j, align 4, !dbg !4431
  %add636 = add nsw i32 %517, 0, !dbg !4432
  %idxprom637 = sext i32 %add636 to i64, !dbg !4433
  %518 = load float*, float** %s1.addr, align 8, !dbg !4433
  %arrayidx638 = getelementptr inbounds float, float* %518, i64 %idxprom637, !dbg !4433
  %519 = load float, float* %arrayidx638, align 4, !dbg !4433
  %520 = load i32, i32* %k, align 4, !dbg !4434
  %add639 = add nsw i32 %520, 1, !dbg !4435
  %idxprom640 = sext i32 %add639 to i64, !dbg !4436
  %521 = load float*, float** %h1, align 8, !dbg !4436
  %arrayidx641 = getelementptr inbounds float, float* %521, i64 %idxprom640, !dbg !4436
  %522 = load float, float* %arrayidx641, align 4, !dbg !4436
  %mul642 = fmul float %519, %522, !dbg !4437
  %add643 = fadd float %sub635, %mul642, !dbg !4438
  %523 = load i32, i32* %j, align 4, !dbg !4439
  %add644 = add nsw i32 %523, 1, !dbg !4440
  %idxprom645 = sext i32 %add644 to i64, !dbg !4441
  %524 = load float*, float** %s1.addr, align 8, !dbg !4441
  %arrayidx646 = getelementptr inbounds float, float* %524, i64 %idxprom645, !dbg !4441
  %525 = load float, float* %arrayidx646, align 4, !dbg !4441
  %526 = load i32, i32* %k, align 4, !dbg !4442
  %add647 = add nsw i32 %526, 0, !dbg !4443
  %idxprom648 = sext i32 %add647 to i64, !dbg !4444
  %527 = load float*, float** %h1, align 8, !dbg !4444
  %arrayidx649 = getelementptr inbounds float, float* %527, i64 %idxprom648, !dbg !4444
  %528 = load float, float* %arrayidx649, align 4, !dbg !4444
  %mul650 = fmul float %525, %528, !dbg !4445
  %sub651 = fsub float %add643, %mul650, !dbg !4446
  %529 = load i32, i32* %j, align 4, !dbg !4447
  %add652 = add nsw i32 %529, 0, !dbg !4448
  %idxprom653 = sext i32 %add652 to i64, !dbg !4449
  %530 = load float*, float** %s2.addr, align 8, !dbg !4449
  %arrayidx654 = getelementptr inbounds float, float* %530, i64 %idxprom653, !dbg !4449
  %531 = load float, float* %arrayidx654, align 4, !dbg !4449
  %532 = load i32, i32* %k, align 4, !dbg !4450
  %add655 = add nsw i32 %532, 1, !dbg !4451
  %idxprom656 = sext i32 %add655 to i64, !dbg !4452
  %533 = load float*, float** %h2, align 8, !dbg !4452
  %arrayidx657 = getelementptr inbounds float, float* %533, i64 %idxprom656, !dbg !4452
  %534 = load float, float* %arrayidx657, align 4, !dbg !4452
  %mul658 = fmul float %531, %534, !dbg !4453
  %add659 = fadd float %sub651, %mul658, !dbg !4454
  %535 = load i32, i32* %j, align 4, !dbg !4455
  %add660 = add nsw i32 %535, 1, !dbg !4456
  %idxprom661 = sext i32 %add660 to i64, !dbg !4457
  %536 = load float*, float** %s2.addr, align 8, !dbg !4457
  %arrayidx662 = getelementptr inbounds float, float* %536, i64 %idxprom661, !dbg !4457
  %537 = load float, float* %arrayidx662, align 4, !dbg !4457
  %538 = load i32, i32* %k, align 4, !dbg !4458
  %add663 = add nsw i32 %538, 0, !dbg !4459
  %idxprom664 = sext i32 %add663 to i64, !dbg !4460
  %539 = load float*, float** %h2, align 8, !dbg !4460
  %arrayidx665 = getelementptr inbounds float, float* %539, i64 %idxprom664, !dbg !4460
  %540 = load float, float* %arrayidx665, align 4, !dbg !4460
  %mul666 = fmul float %537, %540, !dbg !4461
  %sub667 = fsub float %add659, %mul666, !dbg !4462
  %541 = load i32, i32* %j, align 4, !dbg !4463
  %add668 = add nsw i32 %541, 0, !dbg !4464
  %idxprom669 = sext i32 %add668 to i64, !dbg !4465
  %542 = load float*, float** %s3.addr, align 8, !dbg !4465
  %arrayidx670 = getelementptr inbounds float, float* %542, i64 %idxprom669, !dbg !4465
  %543 = load float, float* %arrayidx670, align 4, !dbg !4465
  %544 = load i32, i32* %k, align 4, !dbg !4466
  %add671 = add nsw i32 %544, 1, !dbg !4467
  %idxprom672 = sext i32 %add671 to i64, !dbg !4468
  %545 = load float*, float** %h3, align 8, !dbg !4468
  %arrayidx673 = getelementptr inbounds float, float* %545, i64 %idxprom672, !dbg !4468
  %546 = load float, float* %arrayidx673, align 4, !dbg !4468
  %mul674 = fmul float %543, %546, !dbg !4469
  %add675 = fadd float %sub667, %mul674, !dbg !4470
  %547 = load i32, i32* %j, align 4, !dbg !4471
  %add676 = add nsw i32 %547, 1, !dbg !4472
  %idxprom677 = sext i32 %add676 to i64, !dbg !4473
  %548 = load float*, float** %s3.addr, align 8, !dbg !4473
  %arrayidx678 = getelementptr inbounds float, float* %548, i64 %idxprom677, !dbg !4473
  %549 = load float, float* %arrayidx678, align 4, !dbg !4473
  %550 = load i32, i32* %k, align 4, !dbg !4474
  %add679 = add nsw i32 %550, 0, !dbg !4475
  %idxprom680 = sext i32 %add679 to i64, !dbg !4476
  %551 = load float*, float** %h3, align 8, !dbg !4476
  %arrayidx681 = getelementptr inbounds float, float* %551, i64 %idxprom680, !dbg !4476
  %552 = load float, float* %arrayidx681, align 4, !dbg !4476
  %mul682 = fmul float %549, %552, !dbg !4477
  %sub683 = fsub float %add675, %mul682, !dbg !4478
  %553 = load float*, float** %d2, align 8, !dbg !4479
  %incdec.ptr684 = getelementptr inbounds float, float* %553, i32 1, !dbg !4479
  store float* %incdec.ptr684, float** %d2, align 8, !dbg !4479
  store float %sub683, float* %553, align 4, !dbg !4480
  %554 = load i32, i32* %j, align 4, !dbg !4481
  %sub685 = sub nsw i32 %554, 2, !dbg !4481
  store i32 %sub685, i32* %j, align 4, !dbg !4481
  %555 = load i32, i32* %step.addr, align 4, !dbg !4482
  %mul686 = mul nsw i32 2, %555, !dbg !4483
  %556 = load i32, i32* %k, align 4, !dbg !4484
  %add687 = add nsw i32 %556, %mul686, !dbg !4484
  store i32 %add687, i32* %k, align 4, !dbg !4484
  br label %for.inc688, !dbg !4485

for.inc688:                                       ; preds = %for.body428
  %557 = load i32, i32* %i, align 4, !dbg !4486
  %inc689 = add nsw i32 %557, 1, !dbg !4486
  store i32 %inc689, i32* %i, align 4, !dbg !4486
  br label %for.cond424, !dbg !4488, !llvm.loop !4489

for.end690:                                       ; preds = %for.cond424
  %558 = load float*, float** %s0.addr, align 8, !dbg !4491
  %arrayidx691 = getelementptr inbounds float, float* %558, i64 0, !dbg !4491
  %559 = load float, float* %arrayidx691, align 4, !dbg !4491
  %560 = load i32, i32* %k, align 4, !dbg !4492
  %idxprom692 = sext i32 %560 to i64, !dbg !4493
  %561 = load float*, float** %t0.addr, align 8, !dbg !4493
  %arrayidx693 = getelementptr inbounds float, float* %561, i64 %idxprom692, !dbg !4493
  %562 = load float, float* %arrayidx693, align 4, !dbg !4493
  %mul694 = fmul float %559, %562, !dbg !4494
  %563 = load float*, float** %s1.addr, align 8, !dbg !4495
  %arrayidx695 = getelementptr inbounds float, float* %563, i64 0, !dbg !4495
  %564 = load float, float* %arrayidx695, align 4, !dbg !4495
  %565 = load i32, i32* %k, align 4, !dbg !4496
  %idxprom696 = sext i32 %565 to i64, !dbg !4497
  %566 = load float*, float** %t1.addr, align 8, !dbg !4497
  %arrayidx697 = getelementptr inbounds float, float* %566, i64 %idxprom696, !dbg !4497
  %567 = load float, float* %arrayidx697, align 4, !dbg !4497
  %mul698 = fmul float %564, %567, !dbg !4498
  %add699 = fadd float %mul694, %mul698, !dbg !4499
  %568 = load float*, float** %s2.addr, align 8, !dbg !4500
  %arrayidx700 = getelementptr inbounds float, float* %568, i64 0, !dbg !4500
  %569 = load float, float* %arrayidx700, align 4, !dbg !4500
  %570 = load i32, i32* %k, align 4, !dbg !4501
  %idxprom701 = sext i32 %570 to i64, !dbg !4502
  %571 = load float*, float** %t2.addr, align 8, !dbg !4502
  %arrayidx702 = getelementptr inbounds float, float* %571, i64 %idxprom701, !dbg !4502
  %572 = load float, float* %arrayidx702, align 4, !dbg !4502
  %mul703 = fmul float %569, %572, !dbg !4503
  %add704 = fadd float %add699, %mul703, !dbg !4504
  %573 = load float*, float** %s3.addr, align 8, !dbg !4505
  %arrayidx705 = getelementptr inbounds float, float* %573, i64 0, !dbg !4505
  %574 = load float, float* %arrayidx705, align 4, !dbg !4505
  %575 = load i32, i32* %k, align 4, !dbg !4506
  %idxprom706 = sext i32 %575 to i64, !dbg !4507
  %576 = load float*, float** %t3.addr, align 8, !dbg !4507
  %arrayidx707 = getelementptr inbounds float, float* %576, i64 %idxprom706, !dbg !4507
  %577 = load float, float* %arrayidx707, align 4, !dbg !4507
  %mul708 = fmul float %574, %577, !dbg !4508
  %add709 = fadd float %add704, %mul708, !dbg !4509
  %578 = load i32, i32* %len2, align 4, !dbg !4510
  %add710 = add nsw i32 %578, 4, !dbg !4511
  %idxprom711 = sext i32 %add710 to i64, !dbg !4512
  %579 = load float*, float** %dst.addr, align 8, !dbg !4512
  %arrayidx712 = getelementptr inbounds float, float* %579, i64 %idxprom711, !dbg !4512
  store float %add709, float* %arrayidx712, align 4, !dbg !4513
  %580 = load float*, float** %s0.addr, align 8, !dbg !4514
  %arrayidx713 = getelementptr inbounds float, float* %580, i64 0, !dbg !4514
  %581 = load float, float* %arrayidx713, align 4, !dbg !4514
  %582 = load i32, i32* %k, align 4, !dbg !4515
  %add714 = add nsw i32 %582, 1, !dbg !4516
  %idxprom715 = sext i32 %add714 to i64, !dbg !4517
  %583 = load float*, float** %t0.addr, align 8, !dbg !4517
  %arrayidx716 = getelementptr inbounds float, float* %583, i64 %idxprom715, !dbg !4517
  %584 = load float, float* %arrayidx716, align 4, !dbg !4517
  %mul717 = fmul float %581, %584, !dbg !4518
  %585 = load float*, float** %s1.addr, align 8, !dbg !4519
  %arrayidx718 = getelementptr inbounds float, float* %585, i64 0, !dbg !4519
  %586 = load float, float* %arrayidx718, align 4, !dbg !4519
  %587 = load i32, i32* %k, align 4, !dbg !4520
  %add719 = add nsw i32 %587, 1, !dbg !4521
  %idxprom720 = sext i32 %add719 to i64, !dbg !4522
  %588 = load float*, float** %t1.addr, align 8, !dbg !4522
  %arrayidx721 = getelementptr inbounds float, float* %588, i64 %idxprom720, !dbg !4522
  %589 = load float, float* %arrayidx721, align 4, !dbg !4522
  %mul722 = fmul float %586, %589, !dbg !4523
  %add723 = fadd float %mul717, %mul722, !dbg !4524
  %590 = load float*, float** %s2.addr, align 8, !dbg !4525
  %arrayidx724 = getelementptr inbounds float, float* %590, i64 0, !dbg !4525
  %591 = load float, float* %arrayidx724, align 4, !dbg !4525
  %592 = load i32, i32* %k, align 4, !dbg !4526
  %add725 = add nsw i32 %592, 1, !dbg !4527
  %idxprom726 = sext i32 %add725 to i64, !dbg !4528
  %593 = load float*, float** %t2.addr, align 8, !dbg !4528
  %arrayidx727 = getelementptr inbounds float, float* %593, i64 %idxprom726, !dbg !4528
  %594 = load float, float* %arrayidx727, align 4, !dbg !4528
  %mul728 = fmul float %591, %594, !dbg !4529
  %add729 = fadd float %add723, %mul728, !dbg !4530
  %595 = load float*, float** %s3.addr, align 8, !dbg !4531
  %arrayidx730 = getelementptr inbounds float, float* %595, i64 0, !dbg !4531
  %596 = load float, float* %arrayidx730, align 4, !dbg !4531
  %597 = load i32, i32* %k, align 4, !dbg !4532
  %add731 = add nsw i32 %597, 1, !dbg !4533
  %idxprom732 = sext i32 %add731 to i64, !dbg !4534
  %598 = load float*, float** %t3.addr, align 8, !dbg !4534
  %arrayidx733 = getelementptr inbounds float, float* %598, i64 %idxprom732, !dbg !4534
  %599 = load float, float* %arrayidx733, align 4, !dbg !4534
  %mul734 = fmul float %596, %599, !dbg !4535
  %add735 = fadd float %add729, %mul734, !dbg !4536
  %600 = load i32, i32* %len2, align 4, !dbg !4537
  %add736 = add nsw i32 %600, 4, !dbg !4538
  %add737 = add nsw i32 %add736, 1, !dbg !4539
  %idxprom738 = sext i32 %add737 to i64, !dbg !4540
  %601 = load float*, float** %dst.addr, align 8, !dbg !4540
  %arrayidx739 = getelementptr inbounds float, float* %601, i64 %idxprom738, !dbg !4540
  store float %add735, float* %arrayidx739, align 4, !dbg !4541
  ret void, !dbg !4542
}

declare void @ff_free_vlc(%struct.VLC*) #3

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @on2avc_decode_subframe(%struct.On2AVCContext* %c, i8* %buf, i32 %buf_size, %struct.AVFrame* %dst, i32 %offset) #1 !dbg !4543 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i32, align 4
  %dst.addr = alloca %struct.AVFrame*, align 8
  %offset.addr = alloca i32, align 4
  %gb = alloca %struct.GetBitContext, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !4546, metadata !1675), !dbg !4547
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4548, metadata !1675), !dbg !4549
  store i32 %buf_size, i32* %buf_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buf_size.addr, metadata !4550, metadata !1675), !dbg !4551
  store %struct.AVFrame* %dst, %struct.AVFrame** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %dst.addr, metadata !4552, metadata !1675), !dbg !4553
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !4554, metadata !1675), !dbg !4555
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !4556, metadata !1675), !dbg !4566
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4567, metadata !1675), !dbg !4568
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4569, metadata !1675), !dbg !4570
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !4571
  %1 = load i32, i32* %buf_size.addr, align 4, !dbg !4573
  %call = call i32 @init_get_bits8(%struct.GetBitContext* %gb, i8* %0, i32 %1), !dbg !4574
  store i32 %call, i32* %ret, align 4, !dbg !4575
  %cmp = icmp slt i32 %call, 0, !dbg !4576
  br i1 %cmp, label %if.then, label %if.end, !dbg !4577

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !4578
  store i32 %2, i32* %retval, align 4, !dbg !4579
  br label %return, !dbg !4579

if.end:                                           ; preds = %entry
  %call1 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !4580
  %tobool = icmp ne i32 %call1, 0, !dbg !4580
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !4582

if.then2:                                         ; preds = %if.end
  %3 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4583
  %avctx = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %3, i32 0, i32 0, !dbg !4585
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !4585
  %5 = bitcast %struct.AVCodecContext* %4 to i8*, !dbg !4583
  call void (i8*, i32, i8*, ...) @av_log(i8* %5, i32 16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0)), !dbg !4586
  store i32 -1094995529, i32* %retval, align 4, !dbg !4587
  br label %return, !dbg !4587

if.end3:                                          ; preds = %if.end
  %6 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4588
  %window_type = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %6, i32 0, i32 12, !dbg !4589
  %7 = load i32, i32* %window_type, align 8, !dbg !4589
  %8 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4590
  %prev_window_type = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %8, i32 0, i32 13, !dbg !4591
  store i32 %7, i32* %prev_window_type, align 4, !dbg !4592
  %call4 = call i32 @get_bits(%struct.GetBitContext* %gb, i32 3), !dbg !4593
  %9 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4594
  %window_type5 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %9, i32 0, i32 12, !dbg !4595
  store i32 %call4, i32* %window_type5, align 8, !dbg !4596
  %10 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4597
  %window_type6 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %10, i32 0, i32 12, !dbg !4598
  %11 = load i32, i32* %window_type6, align 8, !dbg !4598
  %idxprom = sext i32 %11 to i64, !dbg !4599
  %12 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4599
  %modes = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %12, i32 0, i32 11, !dbg !4600
  %13 = load %struct.On2AVCMode*, %struct.On2AVCMode** %modes, align 16, !dbg !4600
  %arrayidx = getelementptr inbounds %struct.On2AVCMode, %struct.On2AVCMode* %13, i64 %idxprom, !dbg !4599
  %band_start = getelementptr inbounds %struct.On2AVCMode, %struct.On2AVCMode* %arrayidx, i32 0, i32 2, !dbg !4601
  %14 = load i32*, i32** %band_start, align 8, !dbg !4601
  %15 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4602
  %band_start7 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %15, i32 0, i32 17, !dbg !4603
  store i32* %14, i32** %band_start7, align 16, !dbg !4604
  %16 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4605
  %window_type8 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %16, i32 0, i32 12, !dbg !4606
  %17 = load i32, i32* %window_type8, align 8, !dbg !4606
  %idxprom9 = sext i32 %17 to i64, !dbg !4607
  %18 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4607
  %modes10 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %18, i32 0, i32 11, !dbg !4608
  %19 = load %struct.On2AVCMode*, %struct.On2AVCMode** %modes10, align 16, !dbg !4608
  %arrayidx11 = getelementptr inbounds %struct.On2AVCMode, %struct.On2AVCMode* %19, i64 %idxprom9, !dbg !4607
  %num_windows = getelementptr inbounds %struct.On2AVCMode, %struct.On2AVCMode* %arrayidx11, i32 0, i32 0, !dbg !4609
  %20 = load i32, i32* %num_windows, align 8, !dbg !4609
  %21 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4610
  %num_windows12 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %21, i32 0, i32 14, !dbg !4611
  store i32 %20, i32* %num_windows12, align 32, !dbg !4612
  %22 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4613
  %window_type13 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %22, i32 0, i32 12, !dbg !4614
  %23 = load i32, i32* %window_type13, align 8, !dbg !4614
  %idxprom14 = sext i32 %23 to i64, !dbg !4615
  %24 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4615
  %modes15 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %24, i32 0, i32 11, !dbg !4616
  %25 = load %struct.On2AVCMode*, %struct.On2AVCMode** %modes15, align 16, !dbg !4616
  %arrayidx16 = getelementptr inbounds %struct.On2AVCMode, %struct.On2AVCMode* %25, i64 %idxprom14, !dbg !4615
  %num_bands = getelementptr inbounds %struct.On2AVCMode, %struct.On2AVCMode* %arrayidx16, i32 0, i32 1, !dbg !4617
  %26 = load i32, i32* %num_bands, align 4, !dbg !4617
  %27 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4618
  %num_bands17 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %27, i32 0, i32 15, !dbg !4619
  store i32 %26, i32* %num_bands17, align 4, !dbg !4620
  %28 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4621
  %window_type18 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %28, i32 0, i32 12, !dbg !4622
  %29 = load i32, i32* %window_type18, align 8, !dbg !4622
  %cmp19 = icmp ne i32 %29, 3, !dbg !4623
  %conv = zext i1 %cmp19 to i32, !dbg !4623
  %30 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4624
  %is_long = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %30, i32 0, i32 21, !dbg !4625
  store i32 %conv, i32* %is_long, align 4, !dbg !4626
  %31 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4627
  %grouping = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %31, i32 0, i32 18, !dbg !4628
  %arrayidx20 = getelementptr inbounds [8 x i32], [8 x i32]* %grouping, i64 0, i64 0, !dbg !4627
  store i32 1, i32* %arrayidx20, align 8, !dbg !4629
  store i32 1, i32* %i, align 4, !dbg !4630
  br label %for.cond, !dbg !4632

for.cond:                                         ; preds = %for.inc, %if.end3
  %32 = load i32, i32* %i, align 4, !dbg !4633
  %33 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4636
  %num_windows21 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %33, i32 0, i32 14, !dbg !4637
  %34 = load i32, i32* %num_windows21, align 32, !dbg !4637
  %cmp22 = icmp slt i32 %32, %34, !dbg !4638
  br i1 %cmp22, label %for.body, label %for.end, !dbg !4639

for.body:                                         ; preds = %for.cond
  %call24 = call i32 @get_bits1(%struct.GetBitContext* %gb), !dbg !4640
  %tobool25 = icmp ne i32 %call24, 0, !dbg !4641
  %lnot = xor i1 %tobool25, true, !dbg !4641
  %lnot.ext = zext i1 %lnot to i32, !dbg !4641
  %35 = load i32, i32* %i, align 4, !dbg !4642
  %idxprom26 = sext i32 %35 to i64, !dbg !4643
  %36 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4643
  %grouping27 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %36, i32 0, i32 18, !dbg !4644
  %arrayidx28 = getelementptr inbounds [8 x i32], [8 x i32]* %grouping27, i64 0, i64 %idxprom26, !dbg !4643
  store i32 %lnot.ext, i32* %arrayidx28, align 4, !dbg !4645
  br label %for.inc, !dbg !4643

for.inc:                                          ; preds = %for.body
  %37 = load i32, i32* %i, align 4, !dbg !4646
  %inc = add nsw i32 %37, 1, !dbg !4646
  store i32 %inc, i32* %i, align 4, !dbg !4646
  br label %for.cond, !dbg !4648, !llvm.loop !4649

for.end:                                          ; preds = %for.cond
  %38 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4651
  call void @on2avc_read_ms_info(%struct.On2AVCContext* %38, %struct.GetBitContext* %gb), !dbg !4652
  store i32 0, i32* %i, align 4, !dbg !4653
  br label %for.cond29, !dbg !4655

for.cond29:                                       ; preds = %for.inc39, %for.end
  %39 = load i32, i32* %i, align 4, !dbg !4656
  %40 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4659
  %avctx30 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %40, i32 0, i32 0, !dbg !4660
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx30, align 32, !dbg !4660
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 83, !dbg !4661
  %42 = load i32, i32* %channels, align 4, !dbg !4661
  %cmp31 = icmp slt i32 %39, %42, !dbg !4662
  br i1 %cmp31, label %for.body33, label %for.end41, !dbg !4663

for.body33:                                       ; preds = %for.cond29
  %43 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4664
  %44 = load i32, i32* %i, align 4, !dbg !4666
  %call34 = call i32 @on2avc_read_channel_data(%struct.On2AVCContext* %43, %struct.GetBitContext* %gb, i32 %44), !dbg !4667
  store i32 %call34, i32* %ret, align 4, !dbg !4668
  %cmp35 = icmp slt i32 %call34, 0, !dbg !4669
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !4670

if.then37:                                        ; preds = %for.body33
  store i32 -1094995529, i32* %retval, align 4, !dbg !4671
  br label %return, !dbg !4671

if.end38:                                         ; preds = %for.body33
  br label %for.inc39, !dbg !4672

for.inc39:                                        ; preds = %if.end38
  %45 = load i32, i32* %i, align 4, !dbg !4674
  %inc40 = add nsw i32 %45, 1, !dbg !4674
  store i32 %inc40, i32* %i, align 4, !dbg !4674
  br label %for.cond29, !dbg !4676, !llvm.loop !4677

for.end41:                                        ; preds = %for.cond29
  %46 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4679
  %avctx42 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %46, i32 0, i32 0, !dbg !4681
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx42, align 32, !dbg !4681
  %channels43 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %47, i32 0, i32 83, !dbg !4682
  %48 = load i32, i32* %channels43, align 4, !dbg !4682
  %cmp44 = icmp eq i32 %48, 2, !dbg !4683
  br i1 %cmp44, label %land.lhs.true, label %if.end49, !dbg !4684

land.lhs.true:                                    ; preds = %for.end41
  %49 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4685
  %ms_present = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %49, i32 0, i32 19, !dbg !4687
  %50 = load i32, i32* %ms_present, align 8, !dbg !4687
  %tobool46 = icmp ne i32 %50, 0, !dbg !4685
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !4688

if.then47:                                        ; preds = %land.lhs.true
  %51 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4689
  %call48 = call i32 @on2avc_apply_ms(%struct.On2AVCContext* %51), !dbg !4690
  br label %if.end49, !dbg !4690

if.end49:                                         ; preds = %if.then47, %land.lhs.true, %for.end41
  %52 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4691
  %window_type50 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %52, i32 0, i32 12, !dbg !4693
  %53 = load i32, i32* %window_type50, align 8, !dbg !4693
  %cmp51 = icmp slt i32 %53, 4, !dbg !4694
  br i1 %cmp51, label %if.then53, label %if.else, !dbg !4695

if.then53:                                        ; preds = %if.end49
  store i32 0, i32* %i, align 4, !dbg !4696
  br label %for.cond54, !dbg !4699

for.cond54:                                       ; preds = %for.inc61, %if.then53
  %54 = load i32, i32* %i, align 4, !dbg !4700
  %55 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4703
  %avctx55 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %55, i32 0, i32 0, !dbg !4704
  %56 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx55, align 32, !dbg !4704
  %channels56 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %56, i32 0, i32 83, !dbg !4705
  %57 = load i32, i32* %channels56, align 4, !dbg !4705
  %cmp57 = icmp slt i32 %54, %57, !dbg !4706
  br i1 %cmp57, label %for.body59, label %for.end63, !dbg !4707

for.body59:                                       ; preds = %for.cond54
  %58 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4708
  %59 = load i32, i32* %i, align 4, !dbg !4709
  %60 = load %struct.AVFrame*, %struct.AVFrame** %dst.addr, align 8, !dbg !4710
  %61 = load i32, i32* %offset.addr, align 4, !dbg !4711
  %call60 = call i32 @on2avc_reconstruct_channel(%struct.On2AVCContext* %58, i32 %59, %struct.AVFrame* %60, i32 %61), !dbg !4712
  br label %for.inc61, !dbg !4712

for.inc61:                                        ; preds = %for.body59
  %62 = load i32, i32* %i, align 4, !dbg !4713
  %inc62 = add nsw i32 %62, 1, !dbg !4713
  store i32 %inc62, i32* %i, align 4, !dbg !4713
  br label %for.cond54, !dbg !4715, !llvm.loop !4716

for.end63:                                        ; preds = %for.cond54
  br label %if.end65, !dbg !4718

if.else:                                          ; preds = %if.end49
  %63 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4719
  %64 = load %struct.AVFrame*, %struct.AVFrame** %dst.addr, align 8, !dbg !4721
  %65 = load i32, i32* %offset.addr, align 4, !dbg !4722
  %call64 = call i32 @on2avc_reconstruct_channel_ext(%struct.On2AVCContext* %63, %struct.AVFrame* %64, i32 %65), !dbg !4723
  br label %if.end65

if.end65:                                         ; preds = %if.else, %for.end63
  store i32 0, i32* %retval, align 4, !dbg !4724
  br label %return, !dbg !4724

return:                                           ; preds = %if.end65, %if.then37, %if.then2, %if.then
  %66 = load i32, i32* %retval, align 4, !dbg !4725
  ret i32 %66, !dbg !4725
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits8(%struct.GetBitContext* %s, i8* %buffer, i32 %byte_size) #7 !dbg !4726 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %byte_size.addr = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4730, metadata !1675), !dbg !4731
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !4732, metadata !1675), !dbg !4733
  store i32 %byte_size, i32* %byte_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte_size.addr, metadata !4734, metadata !1675), !dbg !4735
  %0 = load i32, i32* %byte_size.addr, align 4, !dbg !4736
  %cmp = icmp sgt i32 %0, 268435455, !dbg !4738
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4739

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %byte_size.addr, align 4, !dbg !4740
  %cmp1 = icmp slt i32 %1, 0, !dbg !4742
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4743

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %byte_size.addr, align 4, !dbg !4744
  br label %if.end, !dbg !4745

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4746
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !4747
  %4 = load i32, i32* %byte_size.addr, align 4, !dbg !4748
  %mul = mul nsw i32 %4, 8, !dbg !4749
  %call = call i32 @init_get_bits(%struct.GetBitContext* %2, i8* %3, i32 %mul), !dbg !4750
  ret i32 %call, !dbg !4751
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #7 !dbg !4752 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4755, metadata !1675), !dbg !4756
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4757, metadata !1675), !dbg !4758
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4759
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4760
  %1 = load i32, i32* %index1, align 8, !dbg !4760
  store i32 %1, i32* %index, align 4, !dbg !4758
  call void @llvm.dbg.declare(metadata i8* %result, metadata !4761, metadata !1675), !dbg !4762
  %2 = load i32, i32* %index, align 4, !dbg !4763
  %shr = lshr i32 %2, 3, !dbg !4764
  %idxprom = zext i32 %shr to i64, !dbg !4765
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4765
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !4766
  %4 = load i8*, i8** %buffer, align 8, !dbg !4766
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !4765
  %5 = load i8, i8* %arrayidx, align 1, !dbg !4765
  store i8 %5, i8* %result, align 1, !dbg !4762
  %6 = load i32, i32* %index, align 4, !dbg !4767
  %and = and i32 %6, 7, !dbg !4768
  %7 = load i8, i8* %result, align 1, !dbg !4769
  %conv = zext i8 %7 to i32, !dbg !4769
  %shl = shl i32 %conv, %and, !dbg !4769
  %conv2 = trunc i32 %shl to i8, !dbg !4769
  store i8 %conv2, i8* %result, align 1, !dbg !4769
  %8 = load i8, i8* %result, align 1, !dbg !4770
  %conv3 = zext i8 %8 to i32, !dbg !4770
  %shr4 = ashr i32 %conv3, 7, !dbg !4770
  %conv5 = trunc i32 %shr4 to i8, !dbg !4770
  store i8 %conv5, i8* %result, align 1, !dbg !4770
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4771
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !4773
  %10 = load i32, i32* %index6, align 8, !dbg !4773
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4774
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !4775
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4775
  %cmp = icmp slt i32 %10, %12, !dbg !4776
  br i1 %cmp, label %if.then, label %if.end, !dbg !4777

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !4778
  %inc = add i32 %13, 1, !dbg !4778
  store i32 %inc, i32* %index, align 4, !dbg !4778
  br label %if.end, !dbg !4779

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !4780
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4781
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !4782
  store i32 %14, i32* %index8, align 8, !dbg !4783
  %16 = load i8, i8* %result, align 1, !dbg !4784
  %conv9 = zext i8 %16 to i32, !dbg !4784
  ret i32 %conv9, !dbg !4785
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #7 !dbg !4786 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !4789, metadata !1675), !dbg !4794
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !4796, metadata !1675), !dbg !4797
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !4798, metadata !1675), !dbg !4799
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !4800, metadata !1675), !dbg !4801
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !4802, metadata !1675), !dbg !4803
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4804
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !4805
  %1 = load i32, i32* %index, align 8, !dbg !4805
  store i32 %1, i32* %re_index, align 4, !dbg !4803
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !4806, metadata !1675), !dbg !4807
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !4808, metadata !1675), !dbg !4809
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4810
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !4811
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !4811
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !4809
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4812
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !4813
  %5 = load i8*, i8** %buffer, align 8, !dbg !4813
  %6 = load i32, i32* %re_index, align 4, !dbg !4814
  %shr = lshr i32 %6, 3, !dbg !4815
  %idx.ext = zext i32 %shr to i64, !dbg !4816
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !4816
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !4817
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !4817
  %8 = load i32, i32* %l, align 1, !dbg !4817
  store i32 %8, i32* %x.addr.i, align 4, !dbg !4818
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !4819
  %shl.i = shl i32 %9, 8, !dbg !4820
  %and.i = and i32 %shl.i, 65280, !dbg !4821
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !4822
  %shr.i = lshr i32 %10, 8, !dbg !4823
  %and1.i = and i32 %shr.i, 255, !dbg !4824
  %or.i = or i32 %and.i, %and1.i, !dbg !4825
  %shl2.i = shl i32 %or.i, 16, !dbg !4826
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !4827
  %shr3.i = lshr i32 %11, 16, !dbg !4828
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4829
  %and5.i = and i32 %shl4.i, 65280, !dbg !4830
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !4831
  %shr6.i = lshr i32 %12, 16, !dbg !4832
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4833
  %and8.i = and i32 %shr7.i, 255, !dbg !4834
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4835
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4836
  %13 = load i32, i32* %re_index, align 4, !dbg !4837
  %and = and i32 %13, 7, !dbg !4838
  %shl = shl i32 %or10.i, %and, !dbg !4839
  store i32 %shl, i32* %re_cache, align 4, !dbg !4840
  %14 = load i32, i32* %re_cache, align 4, !dbg !4841
  %15 = load i32, i32* %n.addr, align 4, !dbg !4842
  %conv = trunc i32 %15 to i8, !dbg !4842
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !4843
  store i32 %call4, i32* %tmp, align 4, !dbg !4844
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !4845
  %17 = load i32, i32* %re_index, align 4, !dbg !4846
  %18 = load i32, i32* %n.addr, align 4, !dbg !4847
  %add = add i32 %17, %18, !dbg !4848
  %cmp = icmp ugt i32 %16, %add, !dbg !4849
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4850

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !4851
  %20 = load i32, i32* %n.addr, align 4, !dbg !4853
  %add6 = add i32 %19, %20, !dbg !4854
  br label %cond.end, !dbg !4855

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !4856
  br label %cond.end, !dbg !4858

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !4859
  store i32 %cond, i32* %re_index, align 4, !dbg !4861
  %22 = load i32, i32* %re_index, align 4, !dbg !4862
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !4863
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !4864
  store i32 %22, i32* %index7, align 8, !dbg !4865
  %24 = load i32, i32* %tmp, align 4, !dbg !4866
  ret i32 %24, !dbg !4867
}

; Function Attrs: nounwind uwtable
define internal void @on2avc_read_ms_info(%struct.On2AVCContext* %c, %struct.GetBitContext* %gb) #1 !dbg !4868 {
entry:
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %w = alloca i32, align 4
  %b = alloca i32, align 4
  %band_off = alloca i32, align 4
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !4871, metadata !1675), !dbg !4872
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4873, metadata !1675), !dbg !4874
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4875, metadata !1675), !dbg !4876
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4877, metadata !1675), !dbg !4878
  call void @llvm.dbg.declare(metadata i32* %band_off, metadata !4879, metadata !1675), !dbg !4880
  store i32 0, i32* %band_off, align 4, !dbg !4880
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4881
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !4882
  %1 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4883
  %ms_present = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %1, i32 0, i32 19, !dbg !4884
  store i32 %call, i32* %ms_present, align 8, !dbg !4885
  %2 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4886
  %ms_present1 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %2, i32 0, i32 19, !dbg !4888
  %3 = load i32, i32* %ms_present1, align 8, !dbg !4888
  %tobool = icmp ne i32 %3, 0, !dbg !4886
  br i1 %tobool, label %if.end, label %if.then, !dbg !4889

if.then:                                          ; preds = %entry
  br label %for.end25, !dbg !4890

if.end:                                           ; preds = %entry
  store i32 0, i32* %w, align 4, !dbg !4891
  br label %for.cond, !dbg !4893

for.cond:                                         ; preds = %for.inc23, %if.end
  %4 = load i32, i32* %w, align 4, !dbg !4894
  %5 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4897
  %num_windows = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %5, i32 0, i32 14, !dbg !4898
  %6 = load i32, i32* %num_windows, align 32, !dbg !4898
  %cmp = icmp slt i32 %4, %6, !dbg !4899
  br i1 %cmp, label %for.body, label %for.end25, !dbg !4900

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %w, align 4, !dbg !4901
  %idxprom = sext i32 %7 to i64, !dbg !4904
  %8 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4904
  %grouping = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %8, i32 0, i32 18, !dbg !4905
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %grouping, i64 0, i64 %idxprom, !dbg !4904
  %9 = load i32, i32* %arrayidx, align 4, !dbg !4904
  %tobool2 = icmp ne i32 %9, 0, !dbg !4904
  br i1 %tobool2, label %if.end12, label %if.then3, !dbg !4906

if.then3:                                         ; preds = %for.body
  %10 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4907
  %ms_info = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %10, i32 0, i32 20, !dbg !4909
  %arraydecay = getelementptr inbounds [112 x i32], [112 x i32]* %ms_info, i32 0, i32 0, !dbg !4907
  %11 = load i32, i32* %band_off, align 4, !dbg !4910
  %idx.ext = sext i32 %11 to i64, !dbg !4911
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %idx.ext, !dbg !4911
  %12 = bitcast i32* %add.ptr to i8*, !dbg !4912
  %13 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4913
  %ms_info4 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %13, i32 0, i32 20, !dbg !4914
  %arraydecay5 = getelementptr inbounds [112 x i32], [112 x i32]* %ms_info4, i32 0, i32 0, !dbg !4913
  %14 = load i32, i32* %band_off, align 4, !dbg !4915
  %idx.ext6 = sext i32 %14 to i64, !dbg !4916
  %add.ptr7 = getelementptr inbounds i32, i32* %arraydecay5, i64 %idx.ext6, !dbg !4916
  %15 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4917
  %num_bands = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %15, i32 0, i32 15, !dbg !4918
  %16 = load i32, i32* %num_bands, align 4, !dbg !4918
  %idx.ext8 = sext i32 %16 to i64, !dbg !4919
  %idx.neg = sub i64 0, %idx.ext8, !dbg !4919
  %add.ptr9 = getelementptr inbounds i32, i32* %add.ptr7, i64 %idx.neg, !dbg !4919
  %17 = bitcast i32* %add.ptr9 to i8*, !dbg !4912
  %18 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4920
  %num_bands10 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %18, i32 0, i32 15, !dbg !4921
  %19 = load i32, i32* %num_bands10, align 4, !dbg !4921
  %conv = sext i32 %19 to i64, !dbg !4920
  %mul = mul i64 %conv, 4, !dbg !4922
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %17, i64 %mul, i32 4, i1 false), !dbg !4912
  %20 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4923
  %num_bands11 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %20, i32 0, i32 15, !dbg !4924
  %21 = load i32, i32* %num_bands11, align 4, !dbg !4924
  %22 = load i32, i32* %band_off, align 4, !dbg !4925
  %add = add nsw i32 %22, %21, !dbg !4925
  store i32 %add, i32* %band_off, align 4, !dbg !4925
  br label %for.inc23, !dbg !4926

if.end12:                                         ; preds = %for.body
  store i32 0, i32* %b, align 4, !dbg !4927
  br label %for.cond13, !dbg !4929

for.cond13:                                       ; preds = %for.inc, %if.end12
  %23 = load i32, i32* %b, align 4, !dbg !4930
  %24 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4933
  %num_bands14 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %24, i32 0, i32 15, !dbg !4934
  %25 = load i32, i32* %num_bands14, align 4, !dbg !4934
  %cmp15 = icmp slt i32 %23, %25, !dbg !4935
  br i1 %cmp15, label %for.body17, label %for.end, !dbg !4936

for.body17:                                       ; preds = %for.cond13
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4937
  %call18 = call i32 @get_bits1(%struct.GetBitContext* %26), !dbg !4938
  %27 = load i32, i32* %band_off, align 4, !dbg !4939
  %inc = add nsw i32 %27, 1, !dbg !4939
  store i32 %inc, i32* %band_off, align 4, !dbg !4939
  %idxprom19 = sext i32 %27 to i64, !dbg !4940
  %28 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4940
  %ms_info20 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %28, i32 0, i32 20, !dbg !4941
  %arrayidx21 = getelementptr inbounds [112 x i32], [112 x i32]* %ms_info20, i64 0, i64 %idxprom19, !dbg !4940
  store i32 %call18, i32* %arrayidx21, align 4, !dbg !4942
  br label %for.inc, !dbg !4940

for.inc:                                          ; preds = %for.body17
  %29 = load i32, i32* %b, align 4, !dbg !4943
  %inc22 = add nsw i32 %29, 1, !dbg !4943
  store i32 %inc22, i32* %b, align 4, !dbg !4943
  br label %for.cond13, !dbg !4945, !llvm.loop !4946

for.end:                                          ; preds = %for.cond13
  br label %for.inc23, !dbg !4948

for.inc23:                                        ; preds = %for.end, %if.then3
  %30 = load i32, i32* %w, align 4, !dbg !4949
  %inc24 = add nsw i32 %30, 1, !dbg !4949
  store i32 %inc24, i32* %w, align 4, !dbg !4949
  br label %for.cond, !dbg !4951, !llvm.loop !4952

for.end25:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !4954
}

; Function Attrs: nounwind uwtable
define internal i32 @on2avc_read_channel_data(%struct.On2AVCContext* %c, %struct.GetBitContext* %gb, i32 %ch) #1 !dbg !4955 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ch.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %w = alloca i32, align 4
  %b = alloca i32, align 4
  %band_idx = alloca i32, align 4
  %coeff_ptr = alloca float*, align 8
  %band_size = alloca i32, align 4
  %band_type = alloca i32, align 4
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !4958, metadata !1675), !dbg !4959
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !4960, metadata !1675), !dbg !4961
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !4962, metadata !1675), !dbg !4963
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4964, metadata !1675), !dbg !4965
  call void @llvm.dbg.declare(metadata i32* %w, metadata !4966, metadata !1675), !dbg !4967
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4968, metadata !1675), !dbg !4969
  call void @llvm.dbg.declare(metadata i32* %band_idx, metadata !4970, metadata !1675), !dbg !4971
  call void @llvm.dbg.declare(metadata float** %coeff_ptr, metadata !4972, metadata !1675), !dbg !4973
  %0 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4974
  %1 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4976
  %call = call i32 @on2avc_decode_band_types(%struct.On2AVCContext* %0, %struct.GetBitContext* %1), !dbg !4977
  store i32 %call, i32* %ret, align 4, !dbg !4978
  %cmp = icmp slt i32 %call, 0, !dbg !4979
  br i1 %cmp, label %if.then, label %if.end, !dbg !4980

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !4981
  store i32 %2, i32* %retval, align 4, !dbg !4982
  br label %return, !dbg !4982

if.end:                                           ; preds = %entry
  %3 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4983
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !4985
  %call1 = call i32 @on2avc_decode_band_scales(%struct.On2AVCContext* %3, %struct.GetBitContext* %4), !dbg !4986
  store i32 %call1, i32* %ret, align 4, !dbg !4987
  %cmp2 = icmp slt i32 %call1, 0, !dbg !4988
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4989

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %ret, align 4, !dbg !4990
  store i32 %5, i32* %retval, align 4, !dbg !4991
  br label %return, !dbg !4991

if.end4:                                          ; preds = %if.end
  %6 = load i32, i32* %ch.addr, align 4, !dbg !4992
  %idxprom = sext i32 %6 to i64, !dbg !4993
  %7 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !4993
  %coeffs = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %7, i32 0, i32 29, !dbg !4994
  %arrayidx = getelementptr inbounds [2 x [1024 x float]], [2 x [1024 x float]]* %coeffs, i64 0, i64 %idxprom, !dbg !4993
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx, i32 0, i32 0, !dbg !4993
  store float* %arraydecay, float** %coeff_ptr, align 8, !dbg !4995
  store i32 0, i32* %band_idx, align 4, !dbg !4996
  %8 = load float*, float** %coeff_ptr, align 8, !dbg !4997
  %9 = bitcast float* %8 to i8*, !dbg !4998
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 4096, i32 4, i1 false), !dbg !4998
  store i32 0, i32* %w, align 4, !dbg !4999
  br label %for.cond, !dbg !5001

for.cond:                                         ; preds = %for.inc37, %if.end4
  %10 = load i32, i32* %w, align 4, !dbg !5002
  %11 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5005
  %num_windows = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %11, i32 0, i32 14, !dbg !5006
  %12 = load i32, i32* %num_windows, align 32, !dbg !5006
  %cmp5 = icmp slt i32 %10, %12, !dbg !5007
  br i1 %cmp5, label %for.body, label %for.end39, !dbg !5008

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %b, align 4, !dbg !5009
  br label %for.cond6, !dbg !5012

for.cond6:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %b, align 4, !dbg !5013
  %14 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5016
  %num_bands = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %14, i32 0, i32 15, !dbg !5017
  %15 = load i32, i32* %num_bands, align 4, !dbg !5017
  %cmp7 = icmp slt i32 %13, %15, !dbg !5018
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !5019

for.body8:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata i32* %band_size, metadata !5020, metadata !1675), !dbg !5022
  %16 = load i32, i32* %b, align 4, !dbg !5023
  %add = add nsw i32 %16, 1, !dbg !5024
  %idxprom9 = sext i32 %add to i64, !dbg !5025
  %17 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5025
  %band_start = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %17, i32 0, i32 17, !dbg !5026
  %18 = load i32*, i32** %band_start, align 16, !dbg !5026
  %arrayidx10 = getelementptr inbounds i32, i32* %18, i64 %idxprom9, !dbg !5025
  %19 = load i32, i32* %arrayidx10, align 4, !dbg !5025
  %20 = load i32, i32* %b, align 4, !dbg !5027
  %idxprom11 = sext i32 %20 to i64, !dbg !5028
  %21 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5028
  %band_start12 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %21, i32 0, i32 17, !dbg !5029
  %22 = load i32*, i32** %band_start12, align 16, !dbg !5029
  %arrayidx13 = getelementptr inbounds i32, i32* %22, i64 %idxprom11, !dbg !5028
  %23 = load i32, i32* %arrayidx13, align 4, !dbg !5028
  %sub = sub nsw i32 %19, %23, !dbg !5030
  store i32 %sub, i32* %band_size, align 4, !dbg !5022
  call void @llvm.dbg.declare(metadata i32* %band_type, metadata !5031, metadata !1675), !dbg !5032
  %24 = load i32, i32* %band_idx, align 4, !dbg !5033
  %25 = load i32, i32* %b, align 4, !dbg !5034
  %add14 = add nsw i32 %24, %25, !dbg !5035
  %idxprom15 = sext i32 %add14 to i64, !dbg !5036
  %26 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5036
  %band_type16 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %26, i32 0, i32 22, !dbg !5037
  %arrayidx17 = getelementptr inbounds [112 x i8], [112 x i8]* %band_type16, i64 0, i64 %idxprom15, !dbg !5036
  %27 = load i8, i8* %arrayidx17, align 1, !dbg !5036
  %conv = zext i8 %27 to i32, !dbg !5036
  store i32 %conv, i32* %band_type, align 4, !dbg !5032
  %28 = load i32, i32* %band_type, align 4, !dbg !5038
  %tobool = icmp ne i32 %28, 0, !dbg !5038
  br i1 %tobool, label %if.end19, label %if.then18, !dbg !5040

if.then18:                                        ; preds = %for.body8
  %29 = load i32, i32* %band_size, align 4, !dbg !5041
  %30 = load float*, float** %coeff_ptr, align 8, !dbg !5043
  %idx.ext = sext i32 %29 to i64, !dbg !5043
  %add.ptr = getelementptr inbounds float, float* %30, i64 %idx.ext, !dbg !5043
  store float* %add.ptr, float** %coeff_ptr, align 8, !dbg !5043
  br label %for.inc, !dbg !5044

if.end19:                                         ; preds = %for.body8
  %31 = load i32, i32* %band_type, align 4, !dbg !5045
  %cmp20 = icmp slt i32 %31, 9, !dbg !5047
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !5048

if.then22:                                        ; preds = %if.end19
  %32 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5049
  %33 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5050
  %34 = load float*, float** %coeff_ptr, align 8, !dbg !5051
  %35 = load i32, i32* %band_size, align 4, !dbg !5052
  %36 = load i32, i32* %band_type, align 4, !dbg !5053
  %37 = load i32, i32* %band_idx, align 4, !dbg !5054
  %38 = load i32, i32* %b, align 4, !dbg !5055
  %add23 = add nsw i32 %37, %38, !dbg !5056
  %idxprom24 = sext i32 %add23 to i64, !dbg !5057
  %39 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5057
  %band_scales = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %39, i32 0, i32 25, !dbg !5058
  %arrayidx25 = getelementptr inbounds [112 x float], [112 x float]* %band_scales, i64 0, i64 %idxprom24, !dbg !5057
  %40 = load float, float* %arrayidx25, align 4, !dbg !5057
  %call26 = call i32 @on2avc_decode_quads(%struct.On2AVCContext* %32, %struct.GetBitContext* %33, float* %34, i32 %35, i32 %36, float %40), !dbg !5059
  br label %if.end32, !dbg !5059

if.else:                                          ; preds = %if.end19
  %41 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5060
  %42 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5061
  %43 = load float*, float** %coeff_ptr, align 8, !dbg !5062
  %44 = load i32, i32* %band_size, align 4, !dbg !5063
  %45 = load i32, i32* %band_type, align 4, !dbg !5064
  %46 = load i32, i32* %band_idx, align 4, !dbg !5065
  %47 = load i32, i32* %b, align 4, !dbg !5066
  %add27 = add nsw i32 %46, %47, !dbg !5067
  %idxprom28 = sext i32 %add27 to i64, !dbg !5068
  %48 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5068
  %band_scales29 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %48, i32 0, i32 25, !dbg !5069
  %arrayidx30 = getelementptr inbounds [112 x float], [112 x float]* %band_scales29, i64 0, i64 %idxprom28, !dbg !5068
  %49 = load float, float* %arrayidx30, align 4, !dbg !5068
  %call31 = call i32 @on2avc_decode_pairs(%struct.On2AVCContext* %41, %struct.GetBitContext* %42, float* %43, i32 %44, i32 %45, float %49), !dbg !5070
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then22
  %50 = load i32, i32* %band_size, align 4, !dbg !5071
  %51 = load float*, float** %coeff_ptr, align 8, !dbg !5072
  %idx.ext33 = sext i32 %50 to i64, !dbg !5072
  %add.ptr34 = getelementptr inbounds float, float* %51, i64 %idx.ext33, !dbg !5072
  store float* %add.ptr34, float** %coeff_ptr, align 8, !dbg !5072
  br label %for.inc, !dbg !5073

for.inc:                                          ; preds = %if.end32, %if.then18
  %52 = load i32, i32* %b, align 4, !dbg !5074
  %inc = add nsw i32 %52, 1, !dbg !5074
  store i32 %inc, i32* %b, align 4, !dbg !5074
  br label %for.cond6, !dbg !5076, !llvm.loop !5077

for.end:                                          ; preds = %for.cond6
  %53 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5079
  %num_bands35 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %53, i32 0, i32 15, !dbg !5080
  %54 = load i32, i32* %num_bands35, align 4, !dbg !5080
  %55 = load i32, i32* %band_idx, align 4, !dbg !5081
  %add36 = add nsw i32 %55, %54, !dbg !5081
  store i32 %add36, i32* %band_idx, align 4, !dbg !5081
  br label %for.inc37, !dbg !5082

for.inc37:                                        ; preds = %for.end
  %56 = load i32, i32* %w, align 4, !dbg !5083
  %inc38 = add nsw i32 %56, 1, !dbg !5083
  store i32 %inc38, i32* %w, align 4, !dbg !5083
  br label %for.cond, !dbg !5085, !llvm.loop !5086

for.end39:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5088
  br label %return, !dbg !5088

return:                                           ; preds = %for.end39, %if.then3, %if.then
  %57 = load i32, i32* %retval, align 4, !dbg !5089
  ret i32 %57, !dbg !5089
}

; Function Attrs: nounwind uwtable
define internal i32 @on2avc_apply_ms(%struct.On2AVCContext* %c) #1 !dbg !5090 {
entry:
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %w = alloca i32, align 4
  %b = alloca i32, align 4
  %i = alloca i32, align 4
  %band_off = alloca i32, align 4
  %ch0 = alloca float*, align 8
  %ch1 = alloca float*, align 8
  %l = alloca float, align 4
  %r = alloca float, align 4
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !5093, metadata !1675), !dbg !5094
  call void @llvm.dbg.declare(metadata i32* %w, metadata !5095, metadata !1675), !dbg !5096
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5097, metadata !1675), !dbg !5098
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5099, metadata !1675), !dbg !5100
  call void @llvm.dbg.declare(metadata i32* %band_off, metadata !5101, metadata !1675), !dbg !5102
  store i32 0, i32* %band_off, align 4, !dbg !5102
  call void @llvm.dbg.declare(metadata float** %ch0, metadata !5103, metadata !1675), !dbg !5104
  %0 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5105
  %coeffs = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %0, i32 0, i32 29, !dbg !5106
  %arrayidx = getelementptr inbounds [2 x [1024 x float]], [2 x [1024 x float]]* %coeffs, i64 0, i64 0, !dbg !5105
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx, i32 0, i32 0, !dbg !5105
  store float* %arraydecay, float** %ch0, align 8, !dbg !5104
  call void @llvm.dbg.declare(metadata float** %ch1, metadata !5107, metadata !1675), !dbg !5108
  %1 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5109
  %coeffs1 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %1, i32 0, i32 29, !dbg !5110
  %arrayidx2 = getelementptr inbounds [2 x [1024 x float]], [2 x [1024 x float]]* %coeffs1, i64 0, i64 1, !dbg !5109
  %arraydecay3 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx2, i32 0, i32 0, !dbg !5109
  store float* %arraydecay3, float** %ch1, align 8, !dbg !5108
  store i32 0, i32* %w, align 4, !dbg !5111
  br label %for.cond, !dbg !5113

for.cond:                                         ; preds = %for.inc42, %entry
  %2 = load i32, i32* %w, align 4, !dbg !5114
  %3 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5117
  %num_windows = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %3, i32 0, i32 14, !dbg !5118
  %4 = load i32, i32* %num_windows, align 32, !dbg !5118
  %cmp = icmp slt i32 %2, %4, !dbg !5119
  br i1 %cmp, label %for.body, label %for.end44, !dbg !5120

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %b, align 4, !dbg !5121
  br label %for.cond4, !dbg !5124

for.cond4:                                        ; preds = %for.inc37, %for.body
  %5 = load i32, i32* %b, align 4, !dbg !5125
  %6 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5128
  %num_bands = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %6, i32 0, i32 15, !dbg !5129
  %7 = load i32, i32* %num_bands, align 4, !dbg !5129
  %cmp5 = icmp slt i32 %5, %7, !dbg !5130
  br i1 %cmp5, label %for.body6, label %for.end39, !dbg !5131

for.body6:                                        ; preds = %for.cond4
  %8 = load i32, i32* %band_off, align 4, !dbg !5132
  %9 = load i32, i32* %b, align 4, !dbg !5135
  %add = add nsw i32 %8, %9, !dbg !5136
  %idxprom = sext i32 %add to i64, !dbg !5137
  %10 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5137
  %ms_info = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %10, i32 0, i32 20, !dbg !5138
  %arrayidx7 = getelementptr inbounds [112 x i32], [112 x i32]* %ms_info, i64 0, i64 %idxprom, !dbg !5137
  %11 = load i32, i32* %arrayidx7, align 4, !dbg !5137
  %tobool = icmp ne i32 %11, 0, !dbg !5137
  br i1 %tobool, label %if.then, label %if.else, !dbg !5139

if.then:                                          ; preds = %for.body6
  %12 = load i32, i32* %b, align 4, !dbg !5140
  %idxprom8 = sext i32 %12 to i64, !dbg !5143
  %13 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5143
  %band_start = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %13, i32 0, i32 17, !dbg !5144
  %14 = load i32*, i32** %band_start, align 16, !dbg !5144
  %arrayidx9 = getelementptr inbounds i32, i32* %14, i64 %idxprom8, !dbg !5143
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !5143
  store i32 %15, i32* %i, align 4, !dbg !5145
  br label %for.cond10, !dbg !5146

for.cond10:                                       ; preds = %for.inc, %if.then
  %16 = load i32, i32* %i, align 4, !dbg !5147
  %17 = load i32, i32* %b, align 4, !dbg !5150
  %add11 = add nsw i32 %17, 1, !dbg !5151
  %idxprom12 = sext i32 %add11 to i64, !dbg !5152
  %18 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5152
  %band_start13 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %18, i32 0, i32 17, !dbg !5153
  %19 = load i32*, i32** %band_start13, align 16, !dbg !5153
  %arrayidx14 = getelementptr inbounds i32, i32* %19, i64 %idxprom12, !dbg !5152
  %20 = load i32, i32* %arrayidx14, align 4, !dbg !5152
  %cmp15 = icmp slt i32 %16, %20, !dbg !5154
  br i1 %cmp15, label %for.body16, label %for.end, !dbg !5155

for.body16:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata float* %l, metadata !5156, metadata !1675), !dbg !5158
  %21 = load float*, float** %ch0, align 8, !dbg !5159
  %22 = load float, float* %21, align 4, !dbg !5160
  store float %22, float* %l, align 4, !dbg !5158
  call void @llvm.dbg.declare(metadata float* %r, metadata !5161, metadata !1675), !dbg !5162
  %23 = load float*, float** %ch1, align 8, !dbg !5163
  %24 = load float, float* %23, align 4, !dbg !5164
  store float %24, float* %r, align 4, !dbg !5162
  %25 = load float, float* %l, align 4, !dbg !5165
  %26 = load float, float* %r, align 4, !dbg !5166
  %add17 = fadd float %25, %26, !dbg !5167
  %27 = load float*, float** %ch0, align 8, !dbg !5168
  %incdec.ptr = getelementptr inbounds float, float* %27, i32 1, !dbg !5168
  store float* %incdec.ptr, float** %ch0, align 8, !dbg !5168
  store float %add17, float* %27, align 4, !dbg !5169
  %28 = load float, float* %l, align 4, !dbg !5170
  %29 = load float, float* %r, align 4, !dbg !5171
  %sub = fsub float %28, %29, !dbg !5172
  %30 = load float*, float** %ch1, align 8, !dbg !5173
  %incdec.ptr18 = getelementptr inbounds float, float* %30, i32 1, !dbg !5173
  store float* %incdec.ptr18, float** %ch1, align 8, !dbg !5173
  store float %sub, float* %30, align 4, !dbg !5174
  br label %for.inc, !dbg !5175

for.inc:                                          ; preds = %for.body16
  %31 = load i32, i32* %i, align 4, !dbg !5176
  %inc = add nsw i32 %31, 1, !dbg !5176
  store i32 %inc, i32* %i, align 4, !dbg !5176
  br label %for.cond10, !dbg !5178, !llvm.loop !5179

for.end:                                          ; preds = %for.cond10
  br label %if.end, !dbg !5181

if.else:                                          ; preds = %for.body6
  %32 = load i32, i32* %b, align 4, !dbg !5182
  %add19 = add nsw i32 %32, 1, !dbg !5184
  %idxprom20 = sext i32 %add19 to i64, !dbg !5185
  %33 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5185
  %band_start21 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %33, i32 0, i32 17, !dbg !5186
  %34 = load i32*, i32** %band_start21, align 16, !dbg !5186
  %arrayidx22 = getelementptr inbounds i32, i32* %34, i64 %idxprom20, !dbg !5185
  %35 = load i32, i32* %arrayidx22, align 4, !dbg !5185
  %36 = load i32, i32* %b, align 4, !dbg !5187
  %idxprom23 = sext i32 %36 to i64, !dbg !5188
  %37 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5188
  %band_start24 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %37, i32 0, i32 17, !dbg !5189
  %38 = load i32*, i32** %band_start24, align 16, !dbg !5189
  %arrayidx25 = getelementptr inbounds i32, i32* %38, i64 %idxprom23, !dbg !5188
  %39 = load i32, i32* %arrayidx25, align 4, !dbg !5188
  %sub26 = sub nsw i32 %35, %39, !dbg !5190
  %40 = load float*, float** %ch0, align 8, !dbg !5191
  %idx.ext = sext i32 %sub26 to i64, !dbg !5191
  %add.ptr = getelementptr inbounds float, float* %40, i64 %idx.ext, !dbg !5191
  store float* %add.ptr, float** %ch0, align 8, !dbg !5191
  %41 = load i32, i32* %b, align 4, !dbg !5192
  %add27 = add nsw i32 %41, 1, !dbg !5193
  %idxprom28 = sext i32 %add27 to i64, !dbg !5194
  %42 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5194
  %band_start29 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %42, i32 0, i32 17, !dbg !5195
  %43 = load i32*, i32** %band_start29, align 16, !dbg !5195
  %arrayidx30 = getelementptr inbounds i32, i32* %43, i64 %idxprom28, !dbg !5194
  %44 = load i32, i32* %arrayidx30, align 4, !dbg !5194
  %45 = load i32, i32* %b, align 4, !dbg !5196
  %idxprom31 = sext i32 %45 to i64, !dbg !5197
  %46 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5197
  %band_start32 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %46, i32 0, i32 17, !dbg !5198
  %47 = load i32*, i32** %band_start32, align 16, !dbg !5198
  %arrayidx33 = getelementptr inbounds i32, i32* %47, i64 %idxprom31, !dbg !5197
  %48 = load i32, i32* %arrayidx33, align 4, !dbg !5197
  %sub34 = sub nsw i32 %44, %48, !dbg !5199
  %49 = load float*, float** %ch1, align 8, !dbg !5200
  %idx.ext35 = sext i32 %sub34 to i64, !dbg !5200
  %add.ptr36 = getelementptr inbounds float, float* %49, i64 %idx.ext35, !dbg !5200
  store float* %add.ptr36, float** %ch1, align 8, !dbg !5200
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  br label %for.inc37, !dbg !5201

for.inc37:                                        ; preds = %if.end
  %50 = load i32, i32* %b, align 4, !dbg !5202
  %inc38 = add nsw i32 %50, 1, !dbg !5202
  store i32 %inc38, i32* %b, align 4, !dbg !5202
  br label %for.cond4, !dbg !5204, !llvm.loop !5205

for.end39:                                        ; preds = %for.cond4
  %51 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5207
  %num_bands40 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %51, i32 0, i32 15, !dbg !5208
  %52 = load i32, i32* %num_bands40, align 4, !dbg !5208
  %53 = load i32, i32* %band_off, align 4, !dbg !5209
  %add41 = add nsw i32 %53, %52, !dbg !5209
  store i32 %add41, i32* %band_off, align 4, !dbg !5209
  br label %for.inc42, !dbg !5210

for.inc42:                                        ; preds = %for.end39
  %54 = load i32, i32* %w, align 4, !dbg !5211
  %inc43 = add nsw i32 %54, 1, !dbg !5211
  store i32 %inc43, i32* %w, align 4, !dbg !5211
  br label %for.cond, !dbg !5213, !llvm.loop !5214

for.end44:                                        ; preds = %for.cond
  ret i32 0, !dbg !5216
}

; Function Attrs: nounwind uwtable
define internal i32 @on2avc_reconstruct_channel(%struct.On2AVCContext* %c, i32 %channel, %struct.AVFrame* %dst, i32 %offset) #1 !dbg !5217 {
entry:
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %channel.addr = alloca i32, align 4
  %dst.addr = alloca %struct.AVFrame*, align 8
  %offset.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %out = alloca float*, align 8
  %in = alloca float*, align 8
  %saved = alloca float*, align 8
  %buf = alloca float*, align 8
  %temp = alloca float*, align 8
  %wout = alloca float*, align 8
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !5220, metadata !1675), !dbg !5221
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !5222, metadata !1675), !dbg !5223
  store %struct.AVFrame* %dst, %struct.AVFrame** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %dst.addr, metadata !5224, metadata !1675), !dbg !5225
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5226, metadata !1675), !dbg !5227
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5228, metadata !1675), !dbg !5229
  call void @llvm.dbg.declare(metadata float** %out, metadata !5230, metadata !1675), !dbg !5231
  %0 = load i32, i32* %channel.addr, align 4, !dbg !5232
  %idxprom = sext i32 %0 to i64, !dbg !5233
  %1 = load %struct.AVFrame*, %struct.AVFrame** %dst.addr, align 8, !dbg !5233
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %1, i32 0, i32 2, !dbg !5234
  %2 = load i8**, i8*** %extended_data, align 8, !dbg !5234
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !5233
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !5233
  %4 = bitcast i8* %3 to float*, !dbg !5235
  %5 = load i32, i32* %offset.addr, align 4, !dbg !5236
  %idx.ext = sext i32 %5 to i64, !dbg !5237
  %add.ptr = getelementptr inbounds float, float* %4, i64 %idx.ext, !dbg !5237
  store float* %add.ptr, float** %out, align 8, !dbg !5231
  call void @llvm.dbg.declare(metadata float** %in, metadata !5238, metadata !1675), !dbg !5239
  %6 = load i32, i32* %channel.addr, align 4, !dbg !5240
  %idxprom1 = sext i32 %6 to i64, !dbg !5241
  %7 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5241
  %coeffs = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %7, i32 0, i32 29, !dbg !5242
  %arrayidx2 = getelementptr inbounds [2 x [1024 x float]], [2 x [1024 x float]]* %coeffs, i64 0, i64 %idxprom1, !dbg !5241
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx2, i32 0, i32 0, !dbg !5241
  store float* %arraydecay, float** %in, align 8, !dbg !5239
  call void @llvm.dbg.declare(metadata float** %saved, metadata !5243, metadata !1675), !dbg !5244
  %8 = load i32, i32* %channel.addr, align 4, !dbg !5245
  %idxprom3 = sext i32 %8 to i64, !dbg !5246
  %9 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5246
  %delay = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %9, i32 0, i32 30, !dbg !5247
  %arrayidx4 = getelementptr inbounds [2 x [1024 x float]], [2 x [1024 x float]]* %delay, i64 0, i64 %idxprom3, !dbg !5246
  %arraydecay5 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx4, i32 0, i32 0, !dbg !5246
  store float* %arraydecay5, float** %saved, align 8, !dbg !5244
  call void @llvm.dbg.declare(metadata float** %buf, metadata !5248, metadata !1675), !dbg !5249
  %10 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5250
  %mdct_buf = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %10, i32 0, i32 32, !dbg !5251
  %arraydecay6 = getelementptr inbounds [1024 x float], [1024 x float]* %mdct_buf, i32 0, i32 0, !dbg !5250
  store float* %arraydecay6, float** %buf, align 8, !dbg !5249
  call void @llvm.dbg.declare(metadata float** %temp, metadata !5252, metadata !1675), !dbg !5253
  %11 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5254
  %temp7 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %11, i32 0, i32 31, !dbg !5255
  %arraydecay8 = getelementptr inbounds [2048 x float], [2048 x float]* %temp7, i32 0, i32 0, !dbg !5254
  store float* %arraydecay8, float** %temp, align 8, !dbg !5253
  %12 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5256
  %window_type = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %12, i32 0, i32 12, !dbg !5257
  %13 = load i32, i32* %window_type, align 8, !dbg !5257
  switch i32 %13, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb
    i32 0, label %sw.bb
    i32 3, label %sw.bb10
  ], !dbg !5258

sw.bb:                                            ; preds = %entry, %entry, %entry
  %14 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5259
  %mdct = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %14, i32 0, i32 2, !dbg !5261
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct, i32 0, i32 11, !dbg !5262
  %15 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half, align 8, !dbg !5262
  %16 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5263
  %mdct9 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %16, i32 0, i32 2, !dbg !5264
  %17 = load float*, float** %buf, align 8, !dbg !5265
  %18 = load float*, float** %in, align 8, !dbg !5266
  call void %15(%struct.FFTContext* %mdct9, float* %17, float* %18), !dbg !5259
  br label %sw.epilog, !dbg !5267

sw.bb10:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !5268
  br label %for.cond, !dbg !5270

for.cond:                                         ; preds = %for.inc, %sw.bb10
  %19 = load i32, i32* %i, align 4, !dbg !5271
  %cmp = icmp slt i32 %19, 1024, !dbg !5274
  br i1 %cmp, label %for.body, label %for.end, !dbg !5275

for.body:                                         ; preds = %for.cond
  %20 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5276
  %mdct_small = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %20, i32 0, i32 4, !dbg !5277
  %imdct_half11 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct_small, i32 0, i32 11, !dbg !5278
  %21 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half11, align 8, !dbg !5278
  %22 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5279
  %mdct_small12 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %22, i32 0, i32 4, !dbg !5280
  %23 = load float*, float** %buf, align 8, !dbg !5281
  %24 = load i32, i32* %i, align 4, !dbg !5282
  %idx.ext13 = sext i32 %24 to i64, !dbg !5283
  %add.ptr14 = getelementptr inbounds float, float* %23, i64 %idx.ext13, !dbg !5283
  %25 = load float*, float** %in, align 8, !dbg !5284
  %26 = load i32, i32* %i, align 4, !dbg !5285
  %idx.ext15 = sext i32 %26 to i64, !dbg !5286
  %add.ptr16 = getelementptr inbounds float, float* %25, i64 %idx.ext15, !dbg !5286
  call void %21(%struct.FFTContext* %mdct_small12, float* %add.ptr14, float* %add.ptr16), !dbg !5276
  br label %for.inc, !dbg !5276

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !5287
  %add = add nsw i32 %27, 128, !dbg !5287
  store i32 %add, i32* %i, align 4, !dbg !5287
  br label %for.cond, !dbg !5289, !llvm.loop !5290

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !5292

sw.epilog:                                        ; preds = %entry, %for.end, %sw.bb
  %28 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5293
  %prev_window_type = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %28, i32 0, i32 13, !dbg !5295
  %29 = load i32, i32* %prev_window_type, align 4, !dbg !5295
  %cmp17 = icmp eq i32 %29, 0, !dbg !5296
  br i1 %cmp17, label %land.lhs.true, label %lor.lhs.false, !dbg !5297

lor.lhs.false:                                    ; preds = %sw.epilog
  %30 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5298
  %prev_window_type18 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %30, i32 0, i32 13, !dbg !5299
  %31 = load i32, i32* %prev_window_type18, align 4, !dbg !5299
  %cmp19 = icmp eq i32 %31, 1, !dbg !5300
  br i1 %cmp19, label %land.lhs.true, label %if.else, !dbg !5301

land.lhs.true:                                    ; preds = %lor.lhs.false, %sw.epilog
  %32 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5302
  %window_type20 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %32, i32 0, i32 12, !dbg !5303
  %33 = load i32, i32* %window_type20, align 8, !dbg !5303
  %cmp21 = icmp eq i32 %33, 0, !dbg !5304
  br i1 %cmp21, label %if.then, label %lor.lhs.false22, !dbg !5305

lor.lhs.false22:                                  ; preds = %land.lhs.true
  %34 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5306
  %window_type23 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %34, i32 0, i32 12, !dbg !5307
  %35 = load i32, i32* %window_type23, align 8, !dbg !5307
  %cmp24 = icmp eq i32 %35, 2, !dbg !5308
  br i1 %cmp24, label %if.then, label %if.else, !dbg !5309

if.then:                                          ; preds = %lor.lhs.false22, %land.lhs.true
  %36 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5311
  %fdsp = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %36, i32 0, i32 1, !dbg !5313
  %37 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !5313
  %vector_fmul_window = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %37, i32 0, i32 5, !dbg !5314
  %38 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window, align 8, !dbg !5314
  %39 = load float*, float** %out, align 8, !dbg !5315
  %40 = load float*, float** %saved, align 8, !dbg !5316
  %41 = load float*, float** %buf, align 8, !dbg !5317
  %42 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5318
  %long_win = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %42, i32 0, i32 33, !dbg !5319
  %arraydecay25 = getelementptr inbounds [1024 x float], [1024 x float]* %long_win, i32 0, i32 0, !dbg !5318
  call void %38(float* %39, float* %40, float* %41, float* %arraydecay25, i32 512), !dbg !5311
  br label %if.end76, !dbg !5320

if.else:                                          ; preds = %lor.lhs.false22, %lor.lhs.false
  call void @llvm.dbg.declare(metadata float** %wout, metadata !5321, metadata !1675), !dbg !5323
  %43 = load float*, float** %out, align 8, !dbg !5324
  %add.ptr26 = getelementptr inbounds float, float* %43, i64 448, !dbg !5325
  store float* %add.ptr26, float** %wout, align 8, !dbg !5323
  %44 = load float*, float** %out, align 8, !dbg !5326
  %45 = bitcast float* %44 to i8*, !dbg !5327
  %46 = load float*, float** %saved, align 8, !dbg !5328
  %47 = bitcast float* %46 to i8*, !dbg !5327
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %47, i64 1792, i32 4, i1 false), !dbg !5327
  %48 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5329
  %window_type27 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %48, i32 0, i32 12, !dbg !5331
  %49 = load i32, i32* %window_type27, align 8, !dbg !5331
  %cmp28 = icmp eq i32 %49, 3, !dbg !5332
  br i1 %cmp28, label %if.then29, label %if.else68, !dbg !5333

if.then29:                                        ; preds = %if.else
  %50 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5334
  %fdsp30 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %50, i32 0, i32 1, !dbg !5336
  %51 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp30, align 8, !dbg !5336
  %vector_fmul_window31 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %51, i32 0, i32 5, !dbg !5337
  %52 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window31, align 8, !dbg !5337
  %53 = load float*, float** %wout, align 8, !dbg !5338
  %add.ptr32 = getelementptr inbounds float, float* %53, i64 0, !dbg !5339
  %54 = load float*, float** %saved, align 8, !dbg !5340
  %add.ptr33 = getelementptr inbounds float, float* %54, i64 448, !dbg !5341
  %55 = load float*, float** %buf, align 8, !dbg !5342
  %add.ptr34 = getelementptr inbounds float, float* %55, i64 0, !dbg !5343
  %56 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5344
  %short_win = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %56, i32 0, i32 34, !dbg !5345
  %arraydecay35 = getelementptr inbounds [128 x float], [128 x float]* %short_win, i32 0, i32 0, !dbg !5344
  call void %52(float* %add.ptr32, float* %add.ptr33, float* %add.ptr34, float* %arraydecay35, i32 64), !dbg !5334
  %57 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5346
  %fdsp36 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %57, i32 0, i32 1, !dbg !5347
  %58 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp36, align 8, !dbg !5347
  %vector_fmul_window37 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %58, i32 0, i32 5, !dbg !5348
  %59 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window37, align 8, !dbg !5348
  %60 = load float*, float** %wout, align 8, !dbg !5349
  %add.ptr38 = getelementptr inbounds float, float* %60, i64 128, !dbg !5350
  %61 = load float*, float** %buf, align 8, !dbg !5351
  %add.ptr39 = getelementptr inbounds float, float* %61, i64 0, !dbg !5352
  %add.ptr40 = getelementptr inbounds float, float* %add.ptr39, i64 64, !dbg !5353
  %62 = load float*, float** %buf, align 8, !dbg !5354
  %add.ptr41 = getelementptr inbounds float, float* %62, i64 128, !dbg !5355
  %63 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5356
  %short_win42 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %63, i32 0, i32 34, !dbg !5357
  %arraydecay43 = getelementptr inbounds [128 x float], [128 x float]* %short_win42, i32 0, i32 0, !dbg !5356
  call void %59(float* %add.ptr38, float* %add.ptr40, float* %add.ptr41, float* %arraydecay43, i32 64), !dbg !5346
  %64 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5358
  %fdsp44 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %64, i32 0, i32 1, !dbg !5359
  %65 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp44, align 8, !dbg !5359
  %vector_fmul_window45 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %65, i32 0, i32 5, !dbg !5360
  %66 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window45, align 8, !dbg !5360
  %67 = load float*, float** %wout, align 8, !dbg !5361
  %add.ptr46 = getelementptr inbounds float, float* %67, i64 256, !dbg !5362
  %68 = load float*, float** %buf, align 8, !dbg !5363
  %add.ptr47 = getelementptr inbounds float, float* %68, i64 128, !dbg !5364
  %add.ptr48 = getelementptr inbounds float, float* %add.ptr47, i64 64, !dbg !5365
  %69 = load float*, float** %buf, align 8, !dbg !5366
  %add.ptr49 = getelementptr inbounds float, float* %69, i64 256, !dbg !5367
  %70 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5368
  %short_win50 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %70, i32 0, i32 34, !dbg !5369
  %arraydecay51 = getelementptr inbounds [128 x float], [128 x float]* %short_win50, i32 0, i32 0, !dbg !5368
  call void %66(float* %add.ptr46, float* %add.ptr48, float* %add.ptr49, float* %arraydecay51, i32 64), !dbg !5358
  %71 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5370
  %fdsp52 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %71, i32 0, i32 1, !dbg !5371
  %72 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp52, align 8, !dbg !5371
  %vector_fmul_window53 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %72, i32 0, i32 5, !dbg !5372
  %73 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window53, align 8, !dbg !5372
  %74 = load float*, float** %wout, align 8, !dbg !5373
  %add.ptr54 = getelementptr inbounds float, float* %74, i64 384, !dbg !5374
  %75 = load float*, float** %buf, align 8, !dbg !5375
  %add.ptr55 = getelementptr inbounds float, float* %75, i64 256, !dbg !5376
  %add.ptr56 = getelementptr inbounds float, float* %add.ptr55, i64 64, !dbg !5377
  %76 = load float*, float** %buf, align 8, !dbg !5378
  %add.ptr57 = getelementptr inbounds float, float* %76, i64 384, !dbg !5379
  %77 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5380
  %short_win58 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %77, i32 0, i32 34, !dbg !5381
  %arraydecay59 = getelementptr inbounds [128 x float], [128 x float]* %short_win58, i32 0, i32 0, !dbg !5380
  call void %73(float* %add.ptr54, float* %add.ptr56, float* %add.ptr57, float* %arraydecay59, i32 64), !dbg !5370
  %78 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5382
  %fdsp60 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %78, i32 0, i32 1, !dbg !5383
  %79 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp60, align 8, !dbg !5383
  %vector_fmul_window61 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %79, i32 0, i32 5, !dbg !5384
  %80 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window61, align 8, !dbg !5384
  %81 = load float*, float** %temp, align 8, !dbg !5385
  %82 = load float*, float** %buf, align 8, !dbg !5386
  %add.ptr62 = getelementptr inbounds float, float* %82, i64 384, !dbg !5387
  %add.ptr63 = getelementptr inbounds float, float* %add.ptr62, i64 64, !dbg !5388
  %83 = load float*, float** %buf, align 8, !dbg !5389
  %add.ptr64 = getelementptr inbounds float, float* %83, i64 512, !dbg !5390
  %84 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5391
  %short_win65 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %84, i32 0, i32 34, !dbg !5392
  %arraydecay66 = getelementptr inbounds [128 x float], [128 x float]* %short_win65, i32 0, i32 0, !dbg !5391
  call void %80(float* %81, float* %add.ptr63, float* %add.ptr64, float* %arraydecay66, i32 64), !dbg !5382
  %85 = load float*, float** %wout, align 8, !dbg !5393
  %add.ptr67 = getelementptr inbounds float, float* %85, i64 512, !dbg !5394
  %86 = bitcast float* %add.ptr67 to i8*, !dbg !5395
  %87 = load float*, float** %temp, align 8, !dbg !5396
  %88 = bitcast float* %87 to i8*, !dbg !5395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %88, i64 256, i32 4, i1 false), !dbg !5395
  br label %if.end, !dbg !5397

if.else68:                                        ; preds = %if.else
  %89 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5398
  %fdsp69 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %89, i32 0, i32 1, !dbg !5400
  %90 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp69, align 8, !dbg !5400
  %vector_fmul_window70 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %90, i32 0, i32 5, !dbg !5401
  %91 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window70, align 8, !dbg !5401
  %92 = load float*, float** %wout, align 8, !dbg !5402
  %93 = load float*, float** %saved, align 8, !dbg !5403
  %add.ptr71 = getelementptr inbounds float, float* %93, i64 448, !dbg !5404
  %94 = load float*, float** %buf, align 8, !dbg !5405
  %95 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5406
  %short_win72 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %95, i32 0, i32 34, !dbg !5407
  %arraydecay73 = getelementptr inbounds [128 x float], [128 x float]* %short_win72, i32 0, i32 0, !dbg !5406
  call void %91(float* %92, float* %add.ptr71, float* %94, float* %arraydecay73, i32 64), !dbg !5398
  %96 = load float*, float** %wout, align 8, !dbg !5408
  %add.ptr74 = getelementptr inbounds float, float* %96, i64 128, !dbg !5409
  %97 = bitcast float* %add.ptr74 to i8*, !dbg !5410
  %98 = load float*, float** %buf, align 8, !dbg !5411
  %add.ptr75 = getelementptr inbounds float, float* %98, i64 64, !dbg !5412
  %99 = bitcast float* %add.ptr75 to i8*, !dbg !5410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %99, i64 1792, i32 4, i1 false), !dbg !5410
  br label %if.end

if.end:                                           ; preds = %if.else68, %if.then29
  br label %if.end76

if.end76:                                         ; preds = %if.end, %if.then
  %100 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5413
  %window_type77 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %100, i32 0, i32 12, !dbg !5414
  %101 = load i32, i32* %window_type77, align 8, !dbg !5414
  switch i32 %101, label %sw.epilog114 [
    i32 3, label %sw.bb78
    i32 2, label %sw.bb107
    i32 1, label %sw.bb112
    i32 0, label %sw.bb112
  ], !dbg !5415

sw.bb78:                                          ; preds = %if.end76
  %102 = load float*, float** %saved, align 8, !dbg !5416
  %103 = bitcast float* %102 to i8*, !dbg !5418
  %104 = load float*, float** %temp, align 8, !dbg !5419
  %add.ptr79 = getelementptr inbounds float, float* %104, i64 64, !dbg !5420
  %105 = bitcast float* %add.ptr79 to i8*, !dbg !5418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %105, i64 256, i32 4, i1 false), !dbg !5418
  %106 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5421
  %fdsp80 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %106, i32 0, i32 1, !dbg !5422
  %107 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp80, align 8, !dbg !5422
  %vector_fmul_window81 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %107, i32 0, i32 5, !dbg !5423
  %108 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window81, align 8, !dbg !5423
  %109 = load float*, float** %saved, align 8, !dbg !5424
  %add.ptr82 = getelementptr inbounds float, float* %109, i64 64, !dbg !5425
  %110 = load float*, float** %buf, align 8, !dbg !5426
  %add.ptr83 = getelementptr inbounds float, float* %110, i64 512, !dbg !5427
  %add.ptr84 = getelementptr inbounds float, float* %add.ptr83, i64 64, !dbg !5428
  %111 = load float*, float** %buf, align 8, !dbg !5429
  %add.ptr85 = getelementptr inbounds float, float* %111, i64 640, !dbg !5430
  %112 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5431
  %short_win86 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %112, i32 0, i32 34, !dbg !5432
  %arraydecay87 = getelementptr inbounds [128 x float], [128 x float]* %short_win86, i32 0, i32 0, !dbg !5431
  call void %108(float* %add.ptr82, float* %add.ptr84, float* %add.ptr85, float* %arraydecay87, i32 64), !dbg !5421
  %113 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5433
  %fdsp88 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %113, i32 0, i32 1, !dbg !5434
  %114 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp88, align 8, !dbg !5434
  %vector_fmul_window89 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %114, i32 0, i32 5, !dbg !5435
  %115 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window89, align 8, !dbg !5435
  %116 = load float*, float** %saved, align 8, !dbg !5436
  %add.ptr90 = getelementptr inbounds float, float* %116, i64 192, !dbg !5437
  %117 = load float*, float** %buf, align 8, !dbg !5438
  %add.ptr91 = getelementptr inbounds float, float* %117, i64 640, !dbg !5439
  %add.ptr92 = getelementptr inbounds float, float* %add.ptr91, i64 64, !dbg !5440
  %118 = load float*, float** %buf, align 8, !dbg !5441
  %add.ptr93 = getelementptr inbounds float, float* %118, i64 768, !dbg !5442
  %119 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5443
  %short_win94 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %119, i32 0, i32 34, !dbg !5444
  %arraydecay95 = getelementptr inbounds [128 x float], [128 x float]* %short_win94, i32 0, i32 0, !dbg !5443
  call void %115(float* %add.ptr90, float* %add.ptr92, float* %add.ptr93, float* %arraydecay95, i32 64), !dbg !5433
  %120 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5445
  %fdsp96 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %120, i32 0, i32 1, !dbg !5446
  %121 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp96, align 8, !dbg !5446
  %vector_fmul_window97 = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %121, i32 0, i32 5, !dbg !5447
  %122 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window97, align 8, !dbg !5447
  %123 = load float*, float** %saved, align 8, !dbg !5448
  %add.ptr98 = getelementptr inbounds float, float* %123, i64 320, !dbg !5449
  %124 = load float*, float** %buf, align 8, !dbg !5450
  %add.ptr99 = getelementptr inbounds float, float* %124, i64 768, !dbg !5451
  %add.ptr100 = getelementptr inbounds float, float* %add.ptr99, i64 64, !dbg !5452
  %125 = load float*, float** %buf, align 8, !dbg !5453
  %add.ptr101 = getelementptr inbounds float, float* %125, i64 896, !dbg !5454
  %126 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5455
  %short_win102 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %126, i32 0, i32 34, !dbg !5456
  %arraydecay103 = getelementptr inbounds [128 x float], [128 x float]* %short_win102, i32 0, i32 0, !dbg !5455
  call void %122(float* %add.ptr98, float* %add.ptr100, float* %add.ptr101, float* %arraydecay103, i32 64), !dbg !5445
  %127 = load float*, float** %saved, align 8, !dbg !5457
  %add.ptr104 = getelementptr inbounds float, float* %127, i64 448, !dbg !5458
  %128 = bitcast float* %add.ptr104 to i8*, !dbg !5459
  %129 = load float*, float** %buf, align 8, !dbg !5460
  %add.ptr105 = getelementptr inbounds float, float* %129, i64 896, !dbg !5461
  %add.ptr106 = getelementptr inbounds float, float* %add.ptr105, i64 64, !dbg !5462
  %130 = bitcast float* %add.ptr106 to i8*, !dbg !5459
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %130, i64 256, i32 4, i1 false), !dbg !5459
  br label %sw.epilog114, !dbg !5463

sw.bb107:                                         ; preds = %if.end76
  %131 = load float*, float** %saved, align 8, !dbg !5464
  %132 = bitcast float* %131 to i8*, !dbg !5465
  %133 = load float*, float** %buf, align 8, !dbg !5466
  %add.ptr108 = getelementptr inbounds float, float* %133, i64 512, !dbg !5467
  %134 = bitcast float* %add.ptr108 to i8*, !dbg !5465
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* %134, i64 1792, i32 4, i1 false), !dbg !5465
  %135 = load float*, float** %saved, align 8, !dbg !5468
  %add.ptr109 = getelementptr inbounds float, float* %135, i64 448, !dbg !5469
  %136 = bitcast float* %add.ptr109 to i8*, !dbg !5470
  %137 = load float*, float** %buf, align 8, !dbg !5471
  %add.ptr110 = getelementptr inbounds float, float* %137, i64 896, !dbg !5472
  %add.ptr111 = getelementptr inbounds float, float* %add.ptr110, i64 64, !dbg !5473
  %138 = bitcast float* %add.ptr111 to i8*, !dbg !5470
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %138, i64 256, i32 4, i1 false), !dbg !5470
  br label %sw.epilog114, !dbg !5474

sw.bb112:                                         ; preds = %if.end76, %if.end76
  %139 = load float*, float** %saved, align 8, !dbg !5475
  %140 = bitcast float* %139 to i8*, !dbg !5476
  %141 = load float*, float** %buf, align 8, !dbg !5477
  %add.ptr113 = getelementptr inbounds float, float* %141, i64 512, !dbg !5478
  %142 = bitcast float* %add.ptr113 to i8*, !dbg !5476
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %140, i8* %142, i64 2048, i32 4, i1 false), !dbg !5476
  br label %sw.epilog114, !dbg !5479

sw.epilog114:                                     ; preds = %if.end76, %sw.bb112, %sw.bb107, %sw.bb78
  ret i32 0, !dbg !5480
}

; Function Attrs: nounwind uwtable
define internal i32 @on2avc_reconstruct_channel_ext(%struct.On2AVCContext* %c, %struct.AVFrame* %dst, i32 %offset) #1 !dbg !5481 {
entry:
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %dst.addr = alloca %struct.AVFrame*, align 8
  %offset.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  %out = alloca float*, align 8
  %in = alloca float*, align 8
  %saved = alloca float*, align 8
  %buf = alloca float*, align 8
  %wout = alloca float*, align 8
  %SWAP_tmp = alloca float, align 4
  %SWAP_tmp37 = alloca float, align 4
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !5484, metadata !1675), !dbg !5485
  store %struct.AVFrame* %dst, %struct.AVFrame** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %dst.addr, metadata !5486, metadata !1675), !dbg !5487
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5488, metadata !1675), !dbg !5489
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !5490, metadata !1675), !dbg !5491
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5492, metadata !1675), !dbg !5493
  store i32 0, i32* %ch, align 4, !dbg !5494
  br label %for.cond, !dbg !5496

for.cond:                                         ; preds = %for.inc63, %entry
  %0 = load i32, i32* %ch, align 4, !dbg !5497
  %1 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5500
  %avctx = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %1, i32 0, i32 0, !dbg !5501
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !5501
  %channels = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 83, !dbg !5502
  %3 = load i32, i32* %channels, align 4, !dbg !5502
  %cmp = icmp slt i32 %0, %3, !dbg !5503
  br i1 %cmp, label %for.body, label %for.end65, !dbg !5504

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %out, metadata !5505, metadata !1675), !dbg !5507
  %4 = load i32, i32* %ch, align 4, !dbg !5508
  %idxprom = sext i32 %4 to i64, !dbg !5509
  %5 = load %struct.AVFrame*, %struct.AVFrame** %dst.addr, align 8, !dbg !5509
  %extended_data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %5, i32 0, i32 2, !dbg !5510
  %6 = load i8**, i8*** %extended_data, align 8, !dbg !5510
  %arrayidx = getelementptr inbounds i8*, i8** %6, i64 %idxprom, !dbg !5509
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !5509
  %8 = bitcast i8* %7 to float*, !dbg !5511
  %9 = load i32, i32* %offset.addr, align 4, !dbg !5512
  %idx.ext = sext i32 %9 to i64, !dbg !5513
  %add.ptr = getelementptr inbounds float, float* %8, i64 %idx.ext, !dbg !5513
  store float* %add.ptr, float** %out, align 8, !dbg !5507
  call void @llvm.dbg.declare(metadata float** %in, metadata !5514, metadata !1675), !dbg !5515
  %10 = load i32, i32* %ch, align 4, !dbg !5516
  %idxprom1 = sext i32 %10 to i64, !dbg !5517
  %11 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5517
  %coeffs = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %11, i32 0, i32 29, !dbg !5518
  %arrayidx2 = getelementptr inbounds [2 x [1024 x float]], [2 x [1024 x float]]* %coeffs, i64 0, i64 %idxprom1, !dbg !5517
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx2, i32 0, i32 0, !dbg !5517
  store float* %arraydecay, float** %in, align 8, !dbg !5515
  call void @llvm.dbg.declare(metadata float** %saved, metadata !5519, metadata !1675), !dbg !5520
  %12 = load i32, i32* %ch, align 4, !dbg !5521
  %idxprom3 = sext i32 %12 to i64, !dbg !5522
  %13 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5522
  %delay = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %13, i32 0, i32 30, !dbg !5523
  %arrayidx4 = getelementptr inbounds [2 x [1024 x float]], [2 x [1024 x float]]* %delay, i64 0, i64 %idxprom3, !dbg !5522
  %arraydecay5 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx4, i32 0, i32 0, !dbg !5522
  store float* %arraydecay5, float** %saved, align 8, !dbg !5520
  call void @llvm.dbg.declare(metadata float** %buf, metadata !5524, metadata !1675), !dbg !5525
  %14 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5526
  %mdct_buf = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %14, i32 0, i32 32, !dbg !5527
  %arraydecay6 = getelementptr inbounds [1024 x float], [1024 x float]* %mdct_buf, i32 0, i32 0, !dbg !5526
  store float* %arraydecay6, float** %buf, align 8, !dbg !5525
  call void @llvm.dbg.declare(metadata float** %wout, metadata !5528, metadata !1675), !dbg !5529
  %15 = load float*, float** %out, align 8, !dbg !5530
  %add.ptr7 = getelementptr inbounds float, float* %15, i64 448, !dbg !5531
  store float* %add.ptr7, float** %wout, align 8, !dbg !5529
  %16 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5532
  %window_type = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %16, i32 0, i32 12, !dbg !5533
  %17 = load i32, i32* %window_type, align 8, !dbg !5533
  switch i32 %17, label %sw.epilog [
    i32 7, label %sw.bb
    i32 4, label %sw.bb9
    i32 5, label %sw.bb10
    i32 6, label %sw.bb29
  ], !dbg !5534

sw.bb:                                            ; preds = %for.body
  %18 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5535
  %mdct = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %18, i32 0, i32 2, !dbg !5537
  %imdct_half = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct, i32 0, i32 11, !dbg !5538
  %19 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half, align 8, !dbg !5538
  %20 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5539
  %mdct8 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %20, i32 0, i32 2, !dbg !5540
  %21 = load float*, float** %buf, align 8, !dbg !5541
  %22 = load float*, float** %in, align 8, !dbg !5542
  call void %19(%struct.FFTContext* %mdct8, float* %21, float* %22), !dbg !5535
  br label %sw.epilog, !dbg !5543

sw.bb9:                                           ; preds = %for.body
  %23 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5544
  %wtf = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %23, i32 0, i32 9, !dbg !5545
  %24 = load void (%struct.On2AVCContext*, float*, float*, i32)*, void (%struct.On2AVCContext*, float*, float*, i32)** %wtf, align 32, !dbg !5545
  %25 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5546
  %26 = load float*, float** %buf, align 8, !dbg !5547
  %27 = load float*, float** %in, align 8, !dbg !5548
  call void %24(%struct.On2AVCContext* %25, float* %26, float* %27, i32 1024), !dbg !5544
  br label %sw.epilog, !dbg !5549

sw.bb10:                                          ; preds = %for.body
  %28 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5550
  %wtf11 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %28, i32 0, i32 9, !dbg !5551
  %29 = load void (%struct.On2AVCContext*, float*, float*, i32)*, void (%struct.On2AVCContext*, float*, float*, i32)** %wtf11, align 32, !dbg !5551
  %30 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5552
  %31 = load float*, float** %buf, align 8, !dbg !5553
  %32 = load float*, float** %in, align 8, !dbg !5554
  call void %29(%struct.On2AVCContext* %30, float* %31, float* %32, i32 512), !dbg !5550
  %33 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5555
  %mdct12 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %33, i32 0, i32 2, !dbg !5556
  %imdct_half13 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct12, i32 0, i32 11, !dbg !5557
  %34 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half13, align 8, !dbg !5557
  %35 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5558
  %mdct_half = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %35, i32 0, i32 3, !dbg !5559
  %36 = load float*, float** %buf, align 8, !dbg !5560
  %add.ptr14 = getelementptr inbounds float, float* %36, i64 512, !dbg !5561
  %37 = load float*, float** %in, align 8, !dbg !5562
  %add.ptr15 = getelementptr inbounds float, float* %37, i64 512, !dbg !5563
  call void %34(%struct.FFTContext* %mdct_half, float* %add.ptr14, float* %add.ptr15), !dbg !5555
  store i32 0, i32* %i, align 4, !dbg !5564
  br label %for.cond16, !dbg !5566

for.cond16:                                       ; preds = %for.inc, %sw.bb10
  %38 = load i32, i32* %i, align 4, !dbg !5567
  %cmp17 = icmp slt i32 %38, 256, !dbg !5570
  br i1 %cmp17, label %for.body18, label %for.end, !dbg !5571

for.body18:                                       ; preds = %for.cond16
  br label %do.body, !dbg !5572, !llvm.loop !5574

do.body:                                          ; preds = %for.body18
  call void @llvm.dbg.declare(metadata float* %SWAP_tmp, metadata !5575, metadata !1675), !dbg !5577
  %39 = load i32, i32* %i, align 4, !dbg !5578
  %sub = sub nsw i32 1023, %39, !dbg !5580
  %idxprom19 = sext i32 %sub to i64, !dbg !5581
  %40 = load float*, float** %buf, align 8, !dbg !5581
  %arrayidx20 = getelementptr inbounds float, float* %40, i64 %idxprom19, !dbg !5581
  %41 = load float, float* %arrayidx20, align 4, !dbg !5581
  store float %41, float* %SWAP_tmp, align 4, !dbg !5582
  %42 = load i32, i32* %i, align 4, !dbg !5583
  %add = add nsw i32 %42, 512, !dbg !5584
  %idxprom21 = sext i32 %add to i64, !dbg !5585
  %43 = load float*, float** %buf, align 8, !dbg !5585
  %arrayidx22 = getelementptr inbounds float, float* %43, i64 %idxprom21, !dbg !5585
  %44 = load float, float* %arrayidx22, align 4, !dbg !5585
  %45 = load i32, i32* %i, align 4, !dbg !5586
  %sub23 = sub nsw i32 1023, %45, !dbg !5587
  %idxprom24 = sext i32 %sub23 to i64, !dbg !5588
  %46 = load float*, float** %buf, align 8, !dbg !5588
  %arrayidx25 = getelementptr inbounds float, float* %46, i64 %idxprom24, !dbg !5588
  store float %44, float* %arrayidx25, align 4, !dbg !5589
  %47 = load float, float* %SWAP_tmp, align 4, !dbg !5590
  %48 = load i32, i32* %i, align 4, !dbg !5591
  %add26 = add nsw i32 %48, 512, !dbg !5592
  %idxprom27 = sext i32 %add26 to i64, !dbg !5593
  %49 = load float*, float** %buf, align 8, !dbg !5593
  %arrayidx28 = getelementptr inbounds float, float* %49, i64 %idxprom27, !dbg !5593
  store float %47, float* %arrayidx28, align 4, !dbg !5594
  br label %do.end, !dbg !5595

do.end:                                           ; preds = %do.body
  br label %for.inc, !dbg !5596

for.inc:                                          ; preds = %do.end
  %50 = load i32, i32* %i, align 4, !dbg !5597
  %inc = add nsw i32 %50, 1, !dbg !5597
  store i32 %inc, i32* %i, align 4, !dbg !5597
  br label %for.cond16, !dbg !5599, !llvm.loop !5600

for.end:                                          ; preds = %for.cond16
  br label %sw.epilog, !dbg !5602

sw.bb29:                                          ; preds = %for.body
  %51 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5603
  %mdct30 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %51, i32 0, i32 2, !dbg !5604
  %imdct_half31 = getelementptr inbounds %struct.FFTContext, %struct.FFTContext* %mdct30, i32 0, i32 11, !dbg !5605
  %52 = load void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)** %imdct_half31, align 8, !dbg !5605
  %53 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5606
  %mdct_half32 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %53, i32 0, i32 3, !dbg !5607
  %54 = load float*, float** %buf, align 8, !dbg !5608
  %55 = load float*, float** %in, align 8, !dbg !5609
  call void %52(%struct.FFTContext* %mdct_half32, float* %54, float* %55), !dbg !5603
  store i32 0, i32* %i, align 4, !dbg !5610
  br label %for.cond33, !dbg !5612

for.cond33:                                       ; preds = %for.inc49, %sw.bb29
  %56 = load i32, i32* %i, align 4, !dbg !5613
  %cmp34 = icmp slt i32 %56, 256, !dbg !5616
  br i1 %cmp34, label %for.body35, label %for.end51, !dbg !5617

for.body35:                                       ; preds = %for.cond33
  br label %do.body36, !dbg !5618, !llvm.loop !5620

do.body36:                                        ; preds = %for.body35
  call void @llvm.dbg.declare(metadata float* %SWAP_tmp37, metadata !5621, metadata !1675), !dbg !5623
  %57 = load i32, i32* %i, align 4, !dbg !5624
  %sub38 = sub nsw i32 511, %57, !dbg !5626
  %idxprom39 = sext i32 %sub38 to i64, !dbg !5627
  %58 = load float*, float** %buf, align 8, !dbg !5627
  %arrayidx40 = getelementptr inbounds float, float* %58, i64 %idxprom39, !dbg !5627
  %59 = load float, float* %arrayidx40, align 4, !dbg !5627
  store float %59, float* %SWAP_tmp37, align 4, !dbg !5628
  %60 = load i32, i32* %i, align 4, !dbg !5629
  %idxprom41 = sext i32 %60 to i64, !dbg !5630
  %61 = load float*, float** %buf, align 8, !dbg !5630
  %arrayidx42 = getelementptr inbounds float, float* %61, i64 %idxprom41, !dbg !5630
  %62 = load float, float* %arrayidx42, align 4, !dbg !5630
  %63 = load i32, i32* %i, align 4, !dbg !5631
  %sub43 = sub nsw i32 511, %63, !dbg !5632
  %idxprom44 = sext i32 %sub43 to i64, !dbg !5633
  %64 = load float*, float** %buf, align 8, !dbg !5633
  %arrayidx45 = getelementptr inbounds float, float* %64, i64 %idxprom44, !dbg !5633
  store float %62, float* %arrayidx45, align 4, !dbg !5634
  %65 = load float, float* %SWAP_tmp37, align 4, !dbg !5635
  %66 = load i32, i32* %i, align 4, !dbg !5636
  %idxprom46 = sext i32 %66 to i64, !dbg !5637
  %67 = load float*, float** %buf, align 8, !dbg !5637
  %arrayidx47 = getelementptr inbounds float, float* %67, i64 %idxprom46, !dbg !5637
  store float %65, float* %arrayidx47, align 4, !dbg !5638
  br label %do.end48, !dbg !5639

do.end48:                                         ; preds = %do.body36
  br label %for.inc49, !dbg !5640

for.inc49:                                        ; preds = %do.end48
  %68 = load i32, i32* %i, align 4, !dbg !5641
  %inc50 = add nsw i32 %68, 1, !dbg !5641
  store i32 %inc50, i32* %i, align 4, !dbg !5641
  br label %for.cond33, !dbg !5643, !llvm.loop !5644

for.end51:                                        ; preds = %for.cond33
  %69 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5646
  %wtf52 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %69, i32 0, i32 9, !dbg !5647
  %70 = load void (%struct.On2AVCContext*, float*, float*, i32)*, void (%struct.On2AVCContext*, float*, float*, i32)** %wtf52, align 32, !dbg !5647
  %71 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5648
  %72 = load float*, float** %buf, align 8, !dbg !5649
  %add.ptr53 = getelementptr inbounds float, float* %72, i64 512, !dbg !5650
  %73 = load float*, float** %in, align 8, !dbg !5651
  %add.ptr54 = getelementptr inbounds float, float* %73, i64 512, !dbg !5652
  call void %70(%struct.On2AVCContext* %71, float* %add.ptr53, float* %add.ptr54, i32 512), !dbg !5646
  br label %sw.epilog, !dbg !5653

sw.epilog:                                        ; preds = %for.body, %for.end51, %for.end, %sw.bb9, %sw.bb
  %74 = load float*, float** %out, align 8, !dbg !5654
  %75 = bitcast float* %74 to i8*, !dbg !5655
  %76 = load float*, float** %saved, align 8, !dbg !5656
  %77 = bitcast float* %76 to i8*, !dbg !5655
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %77, i64 1792, i32 4, i1 false), !dbg !5655
  %78 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5657
  %fdsp = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %78, i32 0, i32 1, !dbg !5658
  %79 = load %struct.AVFloatDSPContext*, %struct.AVFloatDSPContext** %fdsp, align 8, !dbg !5658
  %vector_fmul_window = getelementptr inbounds %struct.AVFloatDSPContext, %struct.AVFloatDSPContext* %79, i32 0, i32 5, !dbg !5659
  %80 = load void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)** %vector_fmul_window, align 8, !dbg !5659
  %81 = load float*, float** %wout, align 8, !dbg !5660
  %82 = load float*, float** %saved, align 8, !dbg !5661
  %add.ptr55 = getelementptr inbounds float, float* %82, i64 448, !dbg !5662
  %83 = load float*, float** %buf, align 8, !dbg !5663
  %84 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5664
  %short_win = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %84, i32 0, i32 34, !dbg !5665
  %arraydecay56 = getelementptr inbounds [128 x float], [128 x float]* %short_win, i32 0, i32 0, !dbg !5664
  call void %80(float* %81, float* %add.ptr55, float* %83, float* %arraydecay56, i32 64), !dbg !5657
  %85 = load float*, float** %wout, align 8, !dbg !5666
  %add.ptr57 = getelementptr inbounds float, float* %85, i64 128, !dbg !5667
  %86 = bitcast float* %add.ptr57 to i8*, !dbg !5668
  %87 = load float*, float** %buf, align 8, !dbg !5669
  %add.ptr58 = getelementptr inbounds float, float* %87, i64 64, !dbg !5670
  %88 = bitcast float* %add.ptr58 to i8*, !dbg !5668
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %88, i64 1792, i32 4, i1 false), !dbg !5668
  %89 = load float*, float** %saved, align 8, !dbg !5671
  %90 = bitcast float* %89 to i8*, !dbg !5672
  %91 = load float*, float** %buf, align 8, !dbg !5673
  %add.ptr59 = getelementptr inbounds float, float* %91, i64 512, !dbg !5674
  %92 = bitcast float* %add.ptr59 to i8*, !dbg !5672
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %92, i64 1792, i32 4, i1 false), !dbg !5672
  %93 = load float*, float** %saved, align 8, !dbg !5675
  %add.ptr60 = getelementptr inbounds float, float* %93, i64 448, !dbg !5676
  %94 = bitcast float* %add.ptr60 to i8*, !dbg !5677
  %95 = load float*, float** %buf, align 8, !dbg !5678
  %add.ptr61 = getelementptr inbounds float, float* %95, i64 896, !dbg !5679
  %add.ptr62 = getelementptr inbounds float, float* %add.ptr61, i64 64, !dbg !5680
  %96 = bitcast float* %add.ptr62 to i8*, !dbg !5677
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %96, i64 256, i32 4, i1 false), !dbg !5677
  br label %for.inc63, !dbg !5681

for.inc63:                                        ; preds = %sw.epilog
  %97 = load i32, i32* %ch, align 4, !dbg !5682
  %inc64 = add nsw i32 %97, 1, !dbg !5682
  store i32 %inc64, i32* %ch, align 4, !dbg !5682
  br label %for.cond, !dbg !5684, !llvm.loop !5685

for.end65:                                        ; preds = %for.cond
  ret i32 0, !dbg !5687
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #7 !dbg !5688 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !5689, metadata !1675), !dbg !5690
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !5691, metadata !1675), !dbg !5692
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !5693, metadata !1675), !dbg !5694
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !5695, metadata !1675), !dbg !5696
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5697, metadata !1675), !dbg !5698
  store i32 0, i32* %ret, align 4, !dbg !5698
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !5699
  %cmp = icmp sge i32 %0, 2147483135, !dbg !5701
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5702

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !5703
  %cmp1 = icmp slt i32 %1, 0, !dbg !5705
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !5706

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !5707
  %tobool = icmp ne i8* %2, null, !dbg !5707
  br i1 %tobool, label %if.end, label %if.then, !dbg !5709

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !5710
  store i8* null, i8** %buffer.addr, align 8, !dbg !5712
  store i32 -1094995529, i32* %ret, align 4, !dbg !5713
  br label %if.end, !dbg !5714

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !5715
  %add = add nsw i32 %3, 7, !dbg !5716
  %shr = ashr i32 %add, 3, !dbg !5717
  store i32 %shr, i32* %buffer_size, align 4, !dbg !5718
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !5719
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5720
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !5721
  store i8* %4, i8** %buffer3, align 8, !dbg !5722
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !5723
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5724
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !5725
  store i32 %6, i32* %size_in_bits, align 4, !dbg !5726
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !5727
  %add4 = add nsw i32 %8, 8, !dbg !5728
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5729
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !5730
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !5731
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !5732
  %11 = load i32, i32* %buffer_size, align 4, !dbg !5733
  %idx.ext = sext i32 %11 to i64, !dbg !5734
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !5734
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5735
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !5736
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !5737
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !5738
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !5739
  store i32 0, i32* %index, align 8, !dbg !5740
  %14 = load i32, i32* %ret, align 4, !dbg !5741
  ret i32 %14, !dbg !5742
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #7 !dbg !5743 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !5747, metadata !1675), !dbg !5748
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !5749, metadata !1675), !dbg !5750
  %0 = load i32, i32* %a.addr, align 4, !dbg !5751
  %1 = load i8, i8* %s.addr, align 1, !dbg !5752
  %conv = sext i8 %1 to i32, !dbg !5752
  %sub = sub nsw i32 0, %conv, !dbg !5753
  %conv1 = trunc i32 %sub to i8, !dbg !5754
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #2, !dbg !5751, !srcloc !5755
  store i32 %2, i32* %a.addr, align 4, !dbg !5751
  %3 = load i32, i32* %a.addr, align 4, !dbg !5756
  ret i32 %3, !dbg !5757
}

; Function Attrs: nounwind uwtable
define internal i32 @on2avc_decode_band_types(%struct.On2AVCContext* %c, %struct.GetBitContext* %gb) #1 !dbg !5758 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %bits_per_sect = alloca i32, align 4
  %esc_val = alloca i32, align 4
  %num_bands = alloca i32, align 4
  %band = alloca i32, align 4
  %i = alloca i32, align 4
  %band_type = alloca i32, align 4
  %run_len = alloca i32, align 4
  %run = alloca i32, align 4
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !5761, metadata !1675), !dbg !5762
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5763, metadata !1675), !dbg !5764
  call void @llvm.dbg.declare(metadata i32* %bits_per_sect, metadata !5765, metadata !1675), !dbg !5766
  %0 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5767
  %is_long = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %0, i32 0, i32 21, !dbg !5768
  %1 = load i32, i32* %is_long, align 4, !dbg !5768
  %tobool = icmp ne i32 %1, 0, !dbg !5767
  %cond = select i1 %tobool, i32 5, i32 3, !dbg !5767
  store i32 %cond, i32* %bits_per_sect, align 4, !dbg !5766
  call void @llvm.dbg.declare(metadata i32* %esc_val, metadata !5769, metadata !1675), !dbg !5770
  %2 = load i32, i32* %bits_per_sect, align 4, !dbg !5771
  %shl = shl i32 1, %2, !dbg !5772
  %sub = sub nsw i32 %shl, 1, !dbg !5773
  store i32 %sub, i32* %esc_val, align 4, !dbg !5770
  call void @llvm.dbg.declare(metadata i32* %num_bands, metadata !5774, metadata !1675), !dbg !5775
  %3 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5776
  %num_bands1 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %3, i32 0, i32 15, !dbg !5777
  %4 = load i32, i32* %num_bands1, align 4, !dbg !5777
  %5 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5778
  %num_windows = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %5, i32 0, i32 14, !dbg !5779
  %6 = load i32, i32* %num_windows, align 32, !dbg !5779
  %mul = mul nsw i32 %4, %6, !dbg !5780
  store i32 %mul, i32* %num_bands, align 4, !dbg !5775
  call void @llvm.dbg.declare(metadata i32* %band, metadata !5781, metadata !1675), !dbg !5782
  store i32 0, i32* %band, align 4, !dbg !5782
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5783, metadata !1675), !dbg !5784
  call void @llvm.dbg.declare(metadata i32* %band_type, metadata !5785, metadata !1675), !dbg !5786
  call void @llvm.dbg.declare(metadata i32* %run_len, metadata !5787, metadata !1675), !dbg !5788
  call void @llvm.dbg.declare(metadata i32* %run, metadata !5789, metadata !1675), !dbg !5790
  br label %while.cond, !dbg !5791

while.cond:                                       ; preds = %for.end, %entry
  %7 = load i32, i32* %band, align 4, !dbg !5792
  %8 = load i32, i32* %num_bands, align 4, !dbg !5794
  %cmp = icmp slt i32 %7, %8, !dbg !5795
  br i1 %cmp, label %while.body, label %while.end, !dbg !5796

while.body:                                       ; preds = %while.cond
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5797
  %call = call i32 @get_bits(%struct.GetBitContext* %9, i32 4), !dbg !5799
  store i32 %call, i32* %band_type, align 4, !dbg !5800
  store i32 1, i32* %run_len, align 4, !dbg !5801
  br label %do.body, !dbg !5802, !llvm.loop !5803

do.body:                                          ; preds = %do.cond, %while.body
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !5804
  %11 = load i32, i32* %bits_per_sect, align 4, !dbg !5806
  %call2 = call i32 @get_bits(%struct.GetBitContext* %10, i32 %11), !dbg !5807
  store i32 %call2, i32* %run, align 4, !dbg !5808
  %12 = load i32, i32* %run, align 4, !dbg !5809
  %13 = load i32, i32* %num_bands, align 4, !dbg !5811
  %14 = load i32, i32* %band, align 4, !dbg !5812
  %sub3 = sub nsw i32 %13, %14, !dbg !5813
  %15 = load i32, i32* %run_len, align 4, !dbg !5814
  %sub4 = sub nsw i32 %sub3, %15, !dbg !5815
  %cmp5 = icmp sgt i32 %12, %sub4, !dbg !5816
  br i1 %cmp5, label %if.then, label %if.end, !dbg !5817

if.then:                                          ; preds = %do.body
  %16 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5818
  %avctx = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %16, i32 0, i32 0, !dbg !5820
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !5820
  %18 = bitcast %struct.AVCodecContext* %17 to i8*, !dbg !5818
  call void (i8*, i32, i8*, ...) @av_log(i8* %18, i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)), !dbg !5821
  store i32 -1094995529, i32* %retval, align 4, !dbg !5822
  br label %return, !dbg !5822

if.end:                                           ; preds = %do.body
  %19 = load i32, i32* %run, align 4, !dbg !5823
  %20 = load i32, i32* %run_len, align 4, !dbg !5824
  %add = add nsw i32 %20, %19, !dbg !5824
  store i32 %add, i32* %run_len, align 4, !dbg !5824
  br label %do.cond, !dbg !5825

do.cond:                                          ; preds = %if.end
  %21 = load i32, i32* %run, align 4, !dbg !5826
  %22 = load i32, i32* %esc_val, align 4, !dbg !5828
  %cmp6 = icmp eq i32 %21, %22, !dbg !5829
  br i1 %cmp6, label %do.body, label %do.end, !dbg !5830, !llvm.loop !5803

do.end:                                           ; preds = %do.cond
  %23 = load i32, i32* %band, align 4, !dbg !5831
  store i32 %23, i32* %i, align 4, !dbg !5833
  br label %for.cond, !dbg !5834

for.cond:                                         ; preds = %for.inc, %do.end
  %24 = load i32, i32* %i, align 4, !dbg !5835
  %25 = load i32, i32* %band, align 4, !dbg !5838
  %26 = load i32, i32* %run_len, align 4, !dbg !5839
  %add7 = add nsw i32 %25, %26, !dbg !5840
  %cmp8 = icmp slt i32 %24, %add7, !dbg !5841
  br i1 %cmp8, label %for.body, label %for.end, !dbg !5842

for.body:                                         ; preds = %for.cond
  %27 = load i32, i32* %band_type, align 4, !dbg !5843
  %conv = trunc i32 %27 to i8, !dbg !5843
  %28 = load i32, i32* %i, align 4, !dbg !5845
  %idxprom = sext i32 %28 to i64, !dbg !5846
  %29 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5846
  %band_type9 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %29, i32 0, i32 22, !dbg !5847
  %arrayidx = getelementptr inbounds [112 x i8], [112 x i8]* %band_type9, i64 0, i64 %idxprom, !dbg !5846
  store i8 %conv, i8* %arrayidx, align 1, !dbg !5848
  %30 = load i32, i32* %band, align 4, !dbg !5849
  %31 = load i32, i32* %run_len, align 4, !dbg !5850
  %add10 = add nsw i32 %30, %31, !dbg !5851
  %conv11 = trunc i32 %add10 to i8, !dbg !5849
  %32 = load i32, i32* %i, align 4, !dbg !5852
  %idxprom12 = sext i32 %32 to i64, !dbg !5853
  %33 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5853
  %band_run_end = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %33, i32 0, i32 23, !dbg !5854
  %arrayidx13 = getelementptr inbounds [112 x i8], [112 x i8]* %band_run_end, i64 0, i64 %idxprom12, !dbg !5853
  store i8 %conv11, i8* %arrayidx13, align 1, !dbg !5855
  br label %for.inc, !dbg !5856

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %i, align 4, !dbg !5857
  %inc = add nsw i32 %34, 1, !dbg !5857
  store i32 %inc, i32* %i, align 4, !dbg !5857
  br label %for.cond, !dbg !5859, !llvm.loop !5860

for.end:                                          ; preds = %for.cond
  %35 = load i32, i32* %run_len, align 4, !dbg !5862
  %36 = load i32, i32* %band, align 4, !dbg !5863
  %add14 = add nsw i32 %36, %35, !dbg !5863
  store i32 %add14, i32* %band, align 4, !dbg !5863
  br label %while.cond, !dbg !5864, !llvm.loop !5866

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !5867
  br label %return, !dbg !5867

return:                                           ; preds = %while.end, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !5868
  ret i32 %37, !dbg !5868
}

; Function Attrs: nounwind uwtable
define internal i32 @on2avc_decode_band_scales(%struct.On2AVCContext* %c, %struct.GetBitContext* %gb) #1 !dbg !5869 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !4789, metadata !1675), !dbg !5870
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !4789, metadata !1675), !dbg !5890
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !4789, metadata !1675), !dbg !5893
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !5895, metadata !1675), !dbg !5896
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !5897, metadata !1675), !dbg !5898
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !5899, metadata !1675), !dbg !5900
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !5901, metadata !1675), !dbg !5902
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !5903, metadata !1675), !dbg !5904
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !5905, metadata !1675), !dbg !5906
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !5907, metadata !1675), !dbg !5908
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !5909, metadata !1675), !dbg !5910
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !5911, metadata !1675), !dbg !5912
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !5913, metadata !1675), !dbg !5914
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !5915, metadata !1675), !dbg !5916
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %w = alloca i32, align 4
  %w2 = alloca i32, align 4
  %b = alloca i32, align 4
  %scale = alloca i32, align 4
  %first = alloca i32, align 4
  %band_off = alloca i32, align 4
  %all_zero = alloca i32, align 4
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !5917, metadata !1675), !dbg !5918
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !5919, metadata !1675), !dbg !5920
  call void @llvm.dbg.declare(metadata i32* %w, metadata !5921, metadata !1675), !dbg !5922
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !5923, metadata !1675), !dbg !5924
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5925, metadata !1675), !dbg !5926
  call void @llvm.dbg.declare(metadata i32* %scale, metadata !5927, metadata !1675), !dbg !5928
  call void @llvm.dbg.declare(metadata i32* %first, metadata !5929, metadata !1675), !dbg !5930
  store i32 1, i32* %first, align 4, !dbg !5930
  call void @llvm.dbg.declare(metadata i32* %band_off, metadata !5931, metadata !1675), !dbg !5932
  store i32 0, i32* %band_off, align 4, !dbg !5932
  store i32 0, i32* %w, align 4, !dbg !5933
  br label %for.cond, !dbg !5934

for.cond:                                         ; preds = %for.inc67, %entry
  %0 = load i32, i32* %w, align 4, !dbg !5935
  %1 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5937
  %num_windows = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %1, i32 0, i32 14, !dbg !5938
  %2 = load i32, i32* %num_windows, align 32, !dbg !5938
  %cmp = icmp slt i32 %0, %2, !dbg !5939
  br i1 %cmp, label %for.body, label %for.end69, !dbg !5940

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %w, align 4, !dbg !5941
  %idxprom = sext i32 %3 to i64, !dbg !5943
  %4 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5943
  %grouping = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %4, i32 0, i32 18, !dbg !5944
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %grouping, i64 0, i64 %idxprom, !dbg !5943
  %5 = load i32, i32* %arrayidx, align 4, !dbg !5943
  %tobool = icmp ne i32 %5, 0, !dbg !5943
  br i1 %tobool, label %if.end, label %if.then, !dbg !5945

if.then:                                          ; preds = %for.body
  %6 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5946
  %band_scales = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %6, i32 0, i32 25, !dbg !5948
  %arraydecay = getelementptr inbounds [112 x float], [112 x float]* %band_scales, i32 0, i32 0, !dbg !5946
  %7 = load i32, i32* %band_off, align 4, !dbg !5949
  %idx.ext = sext i32 %7 to i64, !dbg !5950
  %add.ptr = getelementptr inbounds float, float* %arraydecay, i64 %idx.ext, !dbg !5950
  %8 = bitcast float* %add.ptr to i8*, !dbg !5951
  %9 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5952
  %band_scales1 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %9, i32 0, i32 25, !dbg !5953
  %arraydecay2 = getelementptr inbounds [112 x float], [112 x float]* %band_scales1, i32 0, i32 0, !dbg !5952
  %10 = load i32, i32* %band_off, align 4, !dbg !5954
  %idx.ext3 = sext i32 %10 to i64, !dbg !5955
  %add.ptr4 = getelementptr inbounds float, float* %arraydecay2, i64 %idx.ext3, !dbg !5955
  %11 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5956
  %num_bands = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %11, i32 0, i32 15, !dbg !5957
  %12 = load i32, i32* %num_bands, align 4, !dbg !5957
  %idx.ext5 = sext i32 %12 to i64, !dbg !5958
  %idx.neg = sub i64 0, %idx.ext5, !dbg !5958
  %add.ptr6 = getelementptr inbounds float, float* %add.ptr4, i64 %idx.neg, !dbg !5958
  %13 = bitcast float* %add.ptr6 to i8*, !dbg !5951
  %14 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5959
  %num_bands7 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %14, i32 0, i32 15, !dbg !5960
  %15 = load i32, i32* %num_bands7, align 4, !dbg !5960
  %conv = sext i32 %15 to i64, !dbg !5959
  %mul = mul i64 %conv, 4, !dbg !5961
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %13, i64 %mul, i32 4, i1 false), !dbg !5951
  %16 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5962
  %num_bands8 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %16, i32 0, i32 15, !dbg !5963
  %17 = load i32, i32* %num_bands8, align 4, !dbg !5963
  %18 = load i32, i32* %band_off, align 4, !dbg !5964
  %add = add nsw i32 %18, %17, !dbg !5964
  store i32 %add, i32* %band_off, align 4, !dbg !5964
  br label %for.inc67, !dbg !5965

if.end:                                           ; preds = %for.body
  store i32 0, i32* %b, align 4, !dbg !5966
  br label %for.cond9, !dbg !5967

for.cond9:                                        ; preds = %for.inc64, %if.end
  %19 = load i32, i32* %b, align 4, !dbg !5968
  %20 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5970
  %num_bands10 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %20, i32 0, i32 15, !dbg !5971
  %21 = load i32, i32* %num_bands10, align 4, !dbg !5971
  %cmp11 = icmp slt i32 %19, %21, !dbg !5972
  br i1 %cmp11, label %for.body13, label %for.end66, !dbg !5973

for.body13:                                       ; preds = %for.cond9
  %22 = load i32, i32* %band_off, align 4, !dbg !5974
  %idxprom14 = sext i32 %22 to i64, !dbg !5976
  %23 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5976
  %band_type = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %23, i32 0, i32 22, !dbg !5977
  %arrayidx15 = getelementptr inbounds [112 x i8], [112 x i8]* %band_type, i64 0, i64 %idxprom14, !dbg !5976
  %24 = load i8, i8* %arrayidx15, align 1, !dbg !5976
  %tobool16 = icmp ne i8 %24, 0, !dbg !5976
  br i1 %tobool16, label %if.end46, label %if.then17, !dbg !5978

if.then17:                                        ; preds = %for.body13
  call void @llvm.dbg.declare(metadata i32* %all_zero, metadata !5979, metadata !1675), !dbg !5981
  store i32 1, i32* %all_zero, align 4, !dbg !5981
  %25 = load i32, i32* %w, align 4, !dbg !5982
  %add18 = add nsw i32 %25, 1, !dbg !5984
  store i32 %add18, i32* %w2, align 4, !dbg !5985
  br label %for.cond19, !dbg !5986

for.cond19:                                       ; preds = %for.inc, %if.then17
  %26 = load i32, i32* %w2, align 4, !dbg !5987
  %27 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5990
  %num_windows20 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %27, i32 0, i32 14, !dbg !5991
  %28 = load i32, i32* %num_windows20, align 32, !dbg !5991
  %cmp21 = icmp slt i32 %26, %28, !dbg !5992
  br i1 %cmp21, label %for.body23, label %for.end, !dbg !5993

for.body23:                                       ; preds = %for.cond19
  %29 = load i32, i32* %w2, align 4, !dbg !5994
  %idxprom24 = sext i32 %29 to i64, !dbg !5997
  %30 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !5997
  %grouping25 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %30, i32 0, i32 18, !dbg !5998
  %arrayidx26 = getelementptr inbounds [8 x i32], [8 x i32]* %grouping25, i64 0, i64 %idxprom24, !dbg !5997
  %31 = load i32, i32* %arrayidx26, align 4, !dbg !5997
  %tobool27 = icmp ne i32 %31, 0, !dbg !5997
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !5999

if.then28:                                        ; preds = %for.body23
  br label %for.end, !dbg !6000

if.end29:                                         ; preds = %for.body23
  %32 = load i32, i32* %w2, align 4, !dbg !6001
  %33 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !6003
  %num_bands30 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %33, i32 0, i32 15, !dbg !6004
  %34 = load i32, i32* %num_bands30, align 4, !dbg !6004
  %mul31 = mul nsw i32 %32, %34, !dbg !6005
  %35 = load i32, i32* %b, align 4, !dbg !6006
  %add32 = add nsw i32 %mul31, %35, !dbg !6007
  %idxprom33 = sext i32 %add32 to i64, !dbg !6008
  %36 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !6008
  %band_type34 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %36, i32 0, i32 22, !dbg !6009
  %arrayidx35 = getelementptr inbounds [112 x i8], [112 x i8]* %band_type34, i64 0, i64 %idxprom33, !dbg !6008
  %37 = load i8, i8* %arrayidx35, align 1, !dbg !6008
  %tobool36 = icmp ne i8 %37, 0, !dbg !6008
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !6010

if.then37:                                        ; preds = %if.end29
  store i32 0, i32* %all_zero, align 4, !dbg !6011
  br label %for.end, !dbg !6013

if.end38:                                         ; preds = %if.end29
  br label %for.inc, !dbg !6014

for.inc:                                          ; preds = %if.end38
  %38 = load i32, i32* %w2, align 4, !dbg !6015
  %inc = add nsw i32 %38, 1, !dbg !6015
  store i32 %inc, i32* %w2, align 4, !dbg !6015
  br label %for.cond19, !dbg !6017, !llvm.loop !6018

for.end:                                          ; preds = %if.then37, %if.then28, %for.cond19
  %39 = load i32, i32* %all_zero, align 4, !dbg !6020
  %tobool39 = icmp ne i32 %39, 0, !dbg !6020
  br i1 %tobool39, label %if.then40, label %if.end45, !dbg !6022

if.then40:                                        ; preds = %for.end
  %40 = load i32, i32* %band_off, align 4, !dbg !6023
  %inc41 = add nsw i32 %40, 1, !dbg !6023
  store i32 %inc41, i32* %band_off, align 4, !dbg !6023
  %idxprom42 = sext i32 %40 to i64, !dbg !6025
  %41 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !6025
  %band_scales43 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %41, i32 0, i32 25, !dbg !6026
  %arrayidx44 = getelementptr inbounds [112 x float], [112 x float]* %band_scales43, i64 0, i64 %idxprom42, !dbg !6025
  store float 0.000000e+00, float* %arrayidx44, align 4, !dbg !6027
  br label %for.inc64, !dbg !6028

if.end45:                                         ; preds = %for.end
  br label %if.end46, !dbg !6029

if.end46:                                         ; preds = %if.end45, %for.body13
  %42 = load i32, i32* %first, align 4, !dbg !6030
  %tobool47 = icmp ne i32 %42, 0, !dbg !6030
  br i1 %tobool47, label %if.then48, label %if.else, !dbg !6031

if.then48:                                        ; preds = %if.end46
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6032
  %call = call i32 @get_bits(%struct.GetBitContext* %43, i32 7), !dbg !6034
  store i32 %call, i32* %scale, align 4, !dbg !6035
  store i32 0, i32* %first, align 4, !dbg !6036
  br label %if.end51, !dbg !6037

if.else:                                          ; preds = %if.end46
  %44 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6038
  %45 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !6039
  %scale_diff = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %45, i32 0, i32 26, !dbg !6040
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %scale_diff, i32 0, i32 1, !dbg !6041
  %46 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !6041
  store %struct.GetBitContext* %44, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6042
  store [2 x i16]* %46, [2 x i16]** %table.addr.i, align 8, !dbg !6042
  store i32 9, i32* %bits.addr.i, align 4, !dbg !6042
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !6042
  %47 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6043
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %47, i32 0, i32 2, !dbg !6044
  %48 = load i32, i32* %index.i, align 8, !dbg !6044
  store i32 %48, i32* %re_index.i, align 4, !dbg !5906
  %49 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6045
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %49, i32 0, i32 4, !dbg !6046
  %50 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !6046
  store i32 %50, i32* %re_size_plus8.i, align 4, !dbg !5910
  %51 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6047
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %51, i32 0, i32 0, !dbg !6048
  %52 = load i8*, i8** %buffer.i, align 8, !dbg !6048
  %53 = load i32, i32* %re_index.i, align 4, !dbg !6049
  %shr.i = lshr i32 %53, 3, !dbg !6050
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !6051
  %add.ptr.i = getelementptr inbounds i8, i8* %52, i64 %idx.ext.i, !dbg !6051
  %54 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !6052
  %l.i = bitcast %union.unaligned_32* %54 to i32*, !dbg !6052
  %55 = load i32, i32* %l.i, align 1, !dbg !6052
  store i32 %55, i32* %x.addr.i.i, align 4, !dbg !6053
  %56 = load i32, i32* %x.addr.i.i, align 4, !dbg !6054
  %shl.i.i = shl i32 %56, 8, !dbg !6055
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !6056
  %57 = load i32, i32* %x.addr.i.i, align 4, !dbg !6057
  %shr.i.i = lshr i32 %57, 8, !dbg !6058
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !6059
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !6060
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !6061
  %58 = load i32, i32* %x.addr.i.i, align 4, !dbg !6062
  %shr3.i.i = lshr i32 %58, 16, !dbg !6063
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !6064
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !6065
  %59 = load i32, i32* %x.addr.i.i, align 4, !dbg !6066
  %shr6.i.i = lshr i32 %59, 16, !dbg !6067
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !6068
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !6069
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !6070
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !6071
  %60 = load i32, i32* %re_index.i, align 4, !dbg !6072
  %and.i = and i32 %60, 7, !dbg !6073
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !6074
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !6075
  %61 = load i32, i32* %re_cache.i, align 4, !dbg !6076
  %62 = load i32, i32* %bits.addr.i, align 4, !dbg !6078
  %conv.i = trunc i32 %62 to i8, !dbg !6078
  %call2.i = call i32 @NEG_USR32(i32 %61, i8 signext %conv.i) #10, !dbg !6079
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !6080
  %63 = load i32, i32* %index1.i, align 4, !dbg !6081
  %idxprom.i = zext i32 %63 to i64, !dbg !6082
  %64 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6082
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %64, i64 %idxprom.i, !dbg !6082
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !6082
  %65 = load i16, i16* %arrayidx3.i, align 2, !dbg !6082
  %conv4.i = sext i16 %65 to i32, !dbg !6082
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !6083
  %66 = load i32, i32* %index1.i, align 4, !dbg !6084
  %idxprom5.i = zext i32 %66 to i64, !dbg !6085
  %67 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6085
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %67, i64 %idxprom5.i, !dbg !6085
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !6085
  %68 = load i16, i16* %arrayidx7.i, align 2, !dbg !6085
  %conv8.i = sext i16 %68 to i32, !dbg !6085
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !6086
  %69 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6087
  %cmp.i = icmp sgt i32 %69, 1, !dbg !6088
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !6089

land.lhs.true.i:                                  ; preds = %if.else
  %70 = load i32, i32* %n.i, align 4, !dbg !6090
  %cmp10.i = icmp slt i32 %70, 0, !dbg !6092
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !6093

if.then.i:                                        ; preds = %land.lhs.true.i
  %71 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6094
  %72 = load i32, i32* %re_index.i, align 4, !dbg !6096
  %73 = load i32, i32* %bits.addr.i, align 4, !dbg !6097
  %add.i = add i32 %72, %73, !dbg !6098
  %cmp12.i = icmp ugt i32 %71, %add.i, !dbg !6099
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !6100

cond.true.i:                                      ; preds = %if.then.i
  %74 = load i32, i32* %re_index.i, align 4, !dbg !6101
  %75 = load i32, i32* %bits.addr.i, align 4, !dbg !6103
  %add14.i = add i32 %74, %75, !dbg !6104
  br label %cond.end.i, !dbg !6105

cond.false.i:                                     ; preds = %if.then.i
  %76 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6106
  br label %cond.end.i, !dbg !6108

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %76, %cond.false.i ], !dbg !6109
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !6110
  %77 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6111
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %77, i32 0, i32 0, !dbg !6112
  %78 = load i8*, i8** %buffer15.i, align 8, !dbg !6112
  %79 = load i32, i32* %re_index.i, align 4, !dbg !6113
  %shr16.i = lshr i32 %79, 3, !dbg !6114
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !6115
  %add.ptr18.i = getelementptr inbounds i8, i8* %78, i64 %idx.ext17.i, !dbg !6115
  %80 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !6116
  %l19.i = bitcast %union.unaligned_32* %80 to i32*, !dbg !6116
  %81 = load i32, i32* %l19.i, align 1, !dbg !6116
  store i32 %81, i32* %x.addr.i81.i, align 4, !dbg !6117
  %82 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6118
  %shl.i82.i = shl i32 %82, 8, !dbg !6119
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !6120
  %83 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6121
  %shr.i84.i = lshr i32 %83, 8, !dbg !6122
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !6123
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !6124
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !6125
  %84 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6126
  %shr3.i88.i = lshr i32 %84, 16, !dbg !6127
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !6128
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !6129
  %85 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6130
  %shr6.i91.i = lshr i32 %85, 16, !dbg !6131
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !6132
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !6133
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !6134
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !6135
  %86 = load i32, i32* %re_index.i, align 4, !dbg !6136
  %and21.i = and i32 %86, 7, !dbg !6137
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !6138
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !6139
  %87 = load i32, i32* %n.i, align 4, !dbg !6140
  %sub.i = sub nsw i32 0, %87, !dbg !6141
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !6142
  %88 = load i32, i32* %re_cache.i, align 4, !dbg !6143
  %89 = load i32, i32* %nb_bits.i, align 4, !dbg !6144
  %conv23.i = trunc i32 %89 to i8, !dbg !6144
  %call24.i = call i32 @NEG_USR32(i32 %88, i8 signext %conv23.i) #10, !dbg !6145
  %90 = load i32, i32* %code.i, align 4, !dbg !6147
  %add25.i = add i32 %call24.i, %90, !dbg !6148
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !6149
  %91 = load i32, i32* %index1.i, align 4, !dbg !6150
  %idxprom26.i = zext i32 %91 to i64, !dbg !6151
  %92 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6151
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %92, i64 %idxprom26.i, !dbg !6151
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !6151
  %93 = load i16, i16* %arrayidx28.i, align 2, !dbg !6151
  %conv29.i = sext i16 %93 to i32, !dbg !6151
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !6152
  %94 = load i32, i32* %index1.i, align 4, !dbg !6153
  %idxprom30.i = zext i32 %94 to i64, !dbg !6154
  %95 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6154
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %95, i64 %idxprom30.i, !dbg !6154
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !6154
  %96 = load i16, i16* %arrayidx32.i, align 2, !dbg !6154
  %conv33.i = sext i16 %96 to i32, !dbg !6154
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !6155
  %97 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6156
  %cmp34.i = icmp sgt i32 %97, 2, !dbg !6157
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !6158

land.lhs.true36.i:                                ; preds = %cond.end.i
  %98 = load i32, i32* %n.i, align 4, !dbg !6159
  %cmp37.i = icmp slt i32 %98, 0, !dbg !6161
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !6162

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %99 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6163
  %100 = load i32, i32* %re_index.i, align 4, !dbg !6165
  %101 = load i32, i32* %nb_bits.i, align 4, !dbg !6166
  %add40.i = add i32 %100, %101, !dbg !6167
  %cmp41.i = icmp ugt i32 %99, %add40.i, !dbg !6168
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !6169

cond.true43.i:                                    ; preds = %if.then39.i
  %102 = load i32, i32* %re_index.i, align 4, !dbg !6170
  %103 = load i32, i32* %nb_bits.i, align 4, !dbg !6172
  %add44.i = add i32 %102, %103, !dbg !6173
  br label %cond.end46.i, !dbg !6174

cond.false45.i:                                   ; preds = %if.then39.i
  %104 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6175
  br label %cond.end46.i, !dbg !6177

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %104, %cond.false45.i ], !dbg !6178
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !6179
  %105 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6180
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %105, i32 0, i32 0, !dbg !6181
  %106 = load i8*, i8** %buffer48.i, align 8, !dbg !6181
  %107 = load i32, i32* %re_index.i, align 4, !dbg !6182
  %shr49.i = lshr i32 %107, 3, !dbg !6183
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !6184
  %add.ptr51.i = getelementptr inbounds i8, i8* %106, i64 %idx.ext50.i, !dbg !6184
  %108 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !6185
  %l52.i = bitcast %union.unaligned_32* %108 to i32*, !dbg !6185
  %109 = load i32, i32* %l52.i, align 1, !dbg !6185
  store i32 %109, i32* %x.addr.i96.i, align 4, !dbg !6186
  %110 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6187
  %shl.i97.i = shl i32 %110, 8, !dbg !6188
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !6189
  %111 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6190
  %shr.i99.i = lshr i32 %111, 8, !dbg !6191
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !6192
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !6193
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !6194
  %112 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6195
  %shr3.i103.i = lshr i32 %112, 16, !dbg !6196
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !6197
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !6198
  %113 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6199
  %shr6.i106.i = lshr i32 %113, 16, !dbg !6200
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !6201
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !6202
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !6203
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !6204
  %114 = load i32, i32* %re_index.i, align 4, !dbg !6205
  %and54.i = and i32 %114, 7, !dbg !6206
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !6207
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !6208
  %115 = load i32, i32* %n.i, align 4, !dbg !6209
  %sub56.i = sub nsw i32 0, %115, !dbg !6210
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !6211
  %116 = load i32, i32* %re_cache.i, align 4, !dbg !6212
  %117 = load i32, i32* %nb_bits.i, align 4, !dbg !6213
  %conv57.i = trunc i32 %117 to i8, !dbg !6213
  %call58.i = call i32 @NEG_USR32(i32 %116, i8 signext %conv57.i) #10, !dbg !6214
  %118 = load i32, i32* %code.i, align 4, !dbg !6216
  %add59.i = add i32 %call58.i, %118, !dbg !6217
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !6218
  %119 = load i32, i32* %index1.i, align 4, !dbg !6219
  %idxprom60.i = zext i32 %119 to i64, !dbg !6220
  %120 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6220
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %120, i64 %idxprom60.i, !dbg !6220
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !6220
  %121 = load i16, i16* %arrayidx62.i, align 2, !dbg !6220
  %conv63.i = sext i16 %121 to i32, !dbg !6220
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !6221
  %122 = load i32, i32* %index1.i, align 4, !dbg !6222
  %idxprom64.i = zext i32 %122 to i64, !dbg !6223
  %123 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6223
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %123, i64 %idxprom64.i, !dbg !6223
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !6223
  %124 = load i16, i16* %arrayidx66.i, align 2, !dbg !6223
  %conv67.i = sext i16 %124 to i32, !dbg !6223
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !6224
  br label %if.end.i, !dbg !6225

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !6226

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %if.else
  %125 = load i32, i32* %n.i, align 4, !dbg !6228
  %126 = load i32, i32* %re_cache.i, align 4, !dbg !6231
  %shl70.i = shl i32 %126, %125, !dbg !6231
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !6231
  %127 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6232
  %128 = load i32, i32* %re_index.i, align 4, !dbg !6233
  %129 = load i32, i32* %n.i, align 4, !dbg !6234
  %add71.i = add i32 %128, %129, !dbg !6235
  %cmp72.i = icmp ugt i32 %127, %add71.i, !dbg !6236
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !6237

cond.true74.i:                                    ; preds = %if.end68.i
  %130 = load i32, i32* %re_index.i, align 4, !dbg !6238
  %131 = load i32, i32* %n.i, align 4, !dbg !6240
  %add75.i = add i32 %130, %131, !dbg !6241
  br label %get_vlc2.exit, !dbg !6242

cond.false76.i:                                   ; preds = %if.end68.i
  %132 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6243
  br label %get_vlc2.exit, !dbg !6245

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %132, %cond.false76.i ], !dbg !6246
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !6248
  %133 = load i32, i32* %re_index.i, align 4, !dbg !6249
  %134 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6250
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %134, i32 0, i32 2, !dbg !6251
  store i32 %133, i32* %index80.i, align 8, !dbg !6252
  %135 = load i32, i32* %code.i, align 4, !dbg !6253
  %sub = sub nsw i32 %135, 60, !dbg !6254
  %136 = load i32, i32* %scale, align 4, !dbg !6255
  %add50 = add nsw i32 %136, %sub, !dbg !6255
  store i32 %add50, i32* %scale, align 4, !dbg !6255
  br label %if.end51

if.end51:                                         ; preds = %get_vlc2.exit, %if.then48
  %137 = load i32, i32* %scale, align 4, !dbg !6256
  %cmp52 = icmp slt i32 %137, 0, !dbg !6258
  br i1 %cmp52, label %if.then56, label %lor.lhs.false, !dbg !6259

lor.lhs.false:                                    ; preds = %if.end51
  %138 = load i32, i32* %scale, align 4, !dbg !6260
  %cmp54 = icmp sgt i32 %138, 127, !dbg !6262
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !6263

if.then56:                                        ; preds = %lor.lhs.false, %if.end51
  %139 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !6264
  %avctx = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %139, i32 0, i32 0, !dbg !6266
  %140 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 32, !dbg !6266
  %141 = bitcast %struct.AVCodecContext* %140 to i8*, !dbg !6264
  %142 = load i32, i32* %scale, align 4, !dbg !6267
  call void (i8*, i32, i8*, ...) @av_log(i8* %141, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i32 0, i32 0), i32 %142), !dbg !6268
  store i32 -1094995529, i32* %retval, align 4, !dbg !6269
  br label %return, !dbg !6269

if.end57:                                         ; preds = %lor.lhs.false
  %143 = load i32, i32* %scale, align 4, !dbg !6270
  %idxprom58 = sext i32 %143 to i64, !dbg !6271
  %144 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !6271
  %scale_tab = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %144, i32 0, i32 28, !dbg !6272
  %arrayidx59 = getelementptr inbounds [128 x float], [128 x float]* %scale_tab, i64 0, i64 %idxprom58, !dbg !6271
  %145 = load float, float* %arrayidx59, align 4, !dbg !6271
  %146 = load i32, i32* %band_off, align 4, !dbg !6273
  %inc60 = add nsw i32 %146, 1, !dbg !6273
  store i32 %inc60, i32* %band_off, align 4, !dbg !6273
  %idxprom61 = sext i32 %146 to i64, !dbg !6274
  %147 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !6274
  %band_scales62 = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %147, i32 0, i32 25, !dbg !6275
  %arrayidx63 = getelementptr inbounds [112 x float], [112 x float]* %band_scales62, i64 0, i64 %idxprom61, !dbg !6274
  store float %145, float* %arrayidx63, align 4, !dbg !6276
  br label %for.inc64, !dbg !6277

for.inc64:                                        ; preds = %if.end57, %if.then40
  %148 = load i32, i32* %b, align 4, !dbg !6278
  %inc65 = add nsw i32 %148, 1, !dbg !6278
  store i32 %inc65, i32* %b, align 4, !dbg !6278
  br label %for.cond9, !dbg !6280, !llvm.loop !6281

for.end66:                                        ; preds = %for.cond9
  br label %for.inc67, !dbg !6283

for.inc67:                                        ; preds = %for.end66, %if.then
  %149 = load i32, i32* %w, align 4, !dbg !6284
  %inc68 = add nsw i32 %149, 1, !dbg !6284
  store i32 %inc68, i32* %w, align 4, !dbg !6284
  br label %for.cond, !dbg !6286, !llvm.loop !6287

for.end69:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6289
  br label %return, !dbg !6289

return:                                           ; preds = %for.end69, %if.then56
  %150 = load i32, i32* %retval, align 4, !dbg !6290
  ret i32 %150, !dbg !6290
}

; Function Attrs: nounwind uwtable
define internal i32 @on2avc_decode_quads(%struct.On2AVCContext* %c, %struct.GetBitContext* %gb, float* %dst, i32 %dst_size, i32 %type, float %band_scale) #1 !dbg !6291 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !4789, metadata !1675), !dbg !6294
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !4789, metadata !1675), !dbg !6300
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !4789, metadata !1675), !dbg !6302
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !5895, metadata !1675), !dbg !6304
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !5897, metadata !1675), !dbg !6305
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !5899, metadata !1675), !dbg !6306
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !5901, metadata !1675), !dbg !6307
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !5903, metadata !1675), !dbg !6308
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !5905, metadata !1675), !dbg !6309
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !5907, metadata !1675), !dbg !6310
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !5909, metadata !1675), !dbg !6311
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !5911, metadata !1675), !dbg !6312
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !5913, metadata !1675), !dbg !6313
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !5915, metadata !1675), !dbg !6314
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %dst.addr = alloca float*, align 8
  %dst_size.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %band_scale.addr = alloca float, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %val = alloca i32, align 4
  %val1 = alloca i32, align 4
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !6315, metadata !1675), !dbg !6316
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6317, metadata !1675), !dbg !6318
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !6319, metadata !1675), !dbg !6320
  store i32 %dst_size, i32* %dst_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_size.addr, metadata !6321, metadata !1675), !dbg !6322
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6323, metadata !1675), !dbg !6324
  store float %band_scale, float* %band_scale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %band_scale.addr, metadata !6325, metadata !1675), !dbg !6326
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6327, metadata !1675), !dbg !6328
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6329, metadata !1675), !dbg !6330
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6331, metadata !1675), !dbg !6332
  call void @llvm.dbg.declare(metadata i32* %val1, metadata !6333, metadata !1675), !dbg !6334
  store i32 0, i32* %i, align 4, !dbg !6335
  br label %for.cond, !dbg !6336

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6337
  %1 = load i32, i32* %dst_size.addr, align 4, !dbg !6339
  %cmp = icmp slt i32 %0, %1, !dbg !6340
  br i1 %cmp, label %for.body, label %for.end7, !dbg !6341

for.body:                                         ; preds = %for.cond
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6342
  %3 = load i32, i32* %type.addr, align 4, !dbg !6343
  %idxprom = sext i32 %3 to i64, !dbg !6344
  %4 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !6344
  %cb_vlc = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %4, i32 0, i32 27, !dbg !6345
  %arrayidx = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %cb_vlc, i64 0, i64 %idxprom, !dbg !6344
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx, i32 0, i32 1, !dbg !6346
  %5 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !6346
  store %struct.GetBitContext* %2, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6347
  store [2 x i16]* %5, [2 x i16]** %table.addr.i, align 8, !dbg !6347
  store i32 9, i32* %bits.addr.i, align 4, !dbg !6347
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !6347
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6348
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !6349
  %7 = load i32, i32* %index.i, align 8, !dbg !6349
  store i32 %7, i32* %re_index.i, align 4, !dbg !6309
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6350
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %8, i32 0, i32 4, !dbg !6351
  %9 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !6351
  store i32 %9, i32* %re_size_plus8.i, align 4, !dbg !6311
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6352
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %10, i32 0, i32 0, !dbg !6353
  %11 = load i8*, i8** %buffer.i, align 8, !dbg !6353
  %12 = load i32, i32* %re_index.i, align 4, !dbg !6354
  %shr.i = lshr i32 %12, 3, !dbg !6355
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !6356
  %add.ptr.i = getelementptr inbounds i8, i8* %11, i64 %idx.ext.i, !dbg !6356
  %13 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !6357
  %l.i = bitcast %union.unaligned_32* %13 to i32*, !dbg !6357
  %14 = load i32, i32* %l.i, align 1, !dbg !6357
  store i32 %14, i32* %x.addr.i.i, align 4, !dbg !6358
  %15 = load i32, i32* %x.addr.i.i, align 4, !dbg !6359
  %shl.i.i = shl i32 %15, 8, !dbg !6360
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !6361
  %16 = load i32, i32* %x.addr.i.i, align 4, !dbg !6362
  %shr.i.i = lshr i32 %16, 8, !dbg !6363
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !6364
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !6365
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !6366
  %17 = load i32, i32* %x.addr.i.i, align 4, !dbg !6367
  %shr3.i.i = lshr i32 %17, 16, !dbg !6368
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !6369
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !6370
  %18 = load i32, i32* %x.addr.i.i, align 4, !dbg !6371
  %shr6.i.i = lshr i32 %18, 16, !dbg !6372
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !6373
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !6374
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !6375
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !6376
  %19 = load i32, i32* %re_index.i, align 4, !dbg !6377
  %and.i = and i32 %19, 7, !dbg !6378
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !6379
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !6380
  %20 = load i32, i32* %re_cache.i, align 4, !dbg !6381
  %21 = load i32, i32* %bits.addr.i, align 4, !dbg !6382
  %conv.i = trunc i32 %21 to i8, !dbg !6382
  %call2.i = call i32 @NEG_USR32(i32 %20, i8 signext %conv.i) #10, !dbg !6383
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !6384
  %22 = load i32, i32* %index1.i, align 4, !dbg !6385
  %idxprom.i = zext i32 %22 to i64, !dbg !6386
  %23 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6386
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %23, i64 %idxprom.i, !dbg !6386
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !6386
  %24 = load i16, i16* %arrayidx3.i, align 2, !dbg !6386
  %conv4.i = sext i16 %24 to i32, !dbg !6386
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !6387
  %25 = load i32, i32* %index1.i, align 4, !dbg !6388
  %idxprom5.i = zext i32 %25 to i64, !dbg !6389
  %26 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6389
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %26, i64 %idxprom5.i, !dbg !6389
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !6389
  %27 = load i16, i16* %arrayidx7.i, align 2, !dbg !6389
  %conv8.i = sext i16 %27 to i32, !dbg !6389
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !6390
  %28 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6391
  %cmp.i = icmp sgt i32 %28, 1, !dbg !6392
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !6393

land.lhs.true.i:                                  ; preds = %for.body
  %29 = load i32, i32* %n.i, align 4, !dbg !6394
  %cmp10.i = icmp slt i32 %29, 0, !dbg !6395
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !6396

if.then.i:                                        ; preds = %land.lhs.true.i
  %30 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6397
  %31 = load i32, i32* %re_index.i, align 4, !dbg !6398
  %32 = load i32, i32* %bits.addr.i, align 4, !dbg !6399
  %add.i = add i32 %31, %32, !dbg !6400
  %cmp12.i = icmp ugt i32 %30, %add.i, !dbg !6401
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !6402

cond.true.i:                                      ; preds = %if.then.i
  %33 = load i32, i32* %re_index.i, align 4, !dbg !6403
  %34 = load i32, i32* %bits.addr.i, align 4, !dbg !6404
  %add14.i = add i32 %33, %34, !dbg !6405
  br label %cond.end.i, !dbg !6406

cond.false.i:                                     ; preds = %if.then.i
  %35 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6407
  br label %cond.end.i, !dbg !6408

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %35, %cond.false.i ], !dbg !6409
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !6410
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6411
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %36, i32 0, i32 0, !dbg !6412
  %37 = load i8*, i8** %buffer15.i, align 8, !dbg !6412
  %38 = load i32, i32* %re_index.i, align 4, !dbg !6413
  %shr16.i = lshr i32 %38, 3, !dbg !6414
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !6415
  %add.ptr18.i = getelementptr inbounds i8, i8* %37, i64 %idx.ext17.i, !dbg !6415
  %39 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !6416
  %l19.i = bitcast %union.unaligned_32* %39 to i32*, !dbg !6416
  %40 = load i32, i32* %l19.i, align 1, !dbg !6416
  store i32 %40, i32* %x.addr.i81.i, align 4, !dbg !6417
  %41 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6418
  %shl.i82.i = shl i32 %41, 8, !dbg !6419
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !6420
  %42 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6421
  %shr.i84.i = lshr i32 %42, 8, !dbg !6422
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !6423
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !6424
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !6425
  %43 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6426
  %shr3.i88.i = lshr i32 %43, 16, !dbg !6427
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !6428
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !6429
  %44 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6430
  %shr6.i91.i = lshr i32 %44, 16, !dbg !6431
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !6432
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !6433
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !6434
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !6435
  %45 = load i32, i32* %re_index.i, align 4, !dbg !6436
  %and21.i = and i32 %45, 7, !dbg !6437
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !6438
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !6439
  %46 = load i32, i32* %n.i, align 4, !dbg !6440
  %sub.i = sub nsw i32 0, %46, !dbg !6441
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !6442
  %47 = load i32, i32* %re_cache.i, align 4, !dbg !6443
  %48 = load i32, i32* %nb_bits.i, align 4, !dbg !6444
  %conv23.i = trunc i32 %48 to i8, !dbg !6444
  %call24.i = call i32 @NEG_USR32(i32 %47, i8 signext %conv23.i) #10, !dbg !6445
  %49 = load i32, i32* %code.i, align 4, !dbg !6446
  %add25.i = add i32 %call24.i, %49, !dbg !6447
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !6448
  %50 = load i32, i32* %index1.i, align 4, !dbg !6449
  %idxprom26.i = zext i32 %50 to i64, !dbg !6450
  %51 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6450
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %51, i64 %idxprom26.i, !dbg !6450
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !6450
  %52 = load i16, i16* %arrayidx28.i, align 2, !dbg !6450
  %conv29.i = sext i16 %52 to i32, !dbg !6450
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !6451
  %53 = load i32, i32* %index1.i, align 4, !dbg !6452
  %idxprom30.i = zext i32 %53 to i64, !dbg !6453
  %54 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6453
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %54, i64 %idxprom30.i, !dbg !6453
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !6453
  %55 = load i16, i16* %arrayidx32.i, align 2, !dbg !6453
  %conv33.i = sext i16 %55 to i32, !dbg !6453
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !6454
  %56 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6455
  %cmp34.i = icmp sgt i32 %56, 2, !dbg !6456
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !6457

land.lhs.true36.i:                                ; preds = %cond.end.i
  %57 = load i32, i32* %n.i, align 4, !dbg !6458
  %cmp37.i = icmp slt i32 %57, 0, !dbg !6459
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !6460

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %58 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6461
  %59 = load i32, i32* %re_index.i, align 4, !dbg !6462
  %60 = load i32, i32* %nb_bits.i, align 4, !dbg !6463
  %add40.i = add i32 %59, %60, !dbg !6464
  %cmp41.i = icmp ugt i32 %58, %add40.i, !dbg !6465
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !6466

cond.true43.i:                                    ; preds = %if.then39.i
  %61 = load i32, i32* %re_index.i, align 4, !dbg !6467
  %62 = load i32, i32* %nb_bits.i, align 4, !dbg !6468
  %add44.i = add i32 %61, %62, !dbg !6469
  br label %cond.end46.i, !dbg !6470

cond.false45.i:                                   ; preds = %if.then39.i
  %63 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6471
  br label %cond.end46.i, !dbg !6472

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %63, %cond.false45.i ], !dbg !6473
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !6474
  %64 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6475
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %64, i32 0, i32 0, !dbg !6476
  %65 = load i8*, i8** %buffer48.i, align 8, !dbg !6476
  %66 = load i32, i32* %re_index.i, align 4, !dbg !6477
  %shr49.i = lshr i32 %66, 3, !dbg !6478
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !6479
  %add.ptr51.i = getelementptr inbounds i8, i8* %65, i64 %idx.ext50.i, !dbg !6479
  %67 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !6480
  %l52.i = bitcast %union.unaligned_32* %67 to i32*, !dbg !6480
  %68 = load i32, i32* %l52.i, align 1, !dbg !6480
  store i32 %68, i32* %x.addr.i96.i, align 4, !dbg !6481
  %69 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6482
  %shl.i97.i = shl i32 %69, 8, !dbg !6483
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !6484
  %70 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6485
  %shr.i99.i = lshr i32 %70, 8, !dbg !6486
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !6487
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !6488
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !6489
  %71 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6490
  %shr3.i103.i = lshr i32 %71, 16, !dbg !6491
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !6492
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !6493
  %72 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6494
  %shr6.i106.i = lshr i32 %72, 16, !dbg !6495
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !6496
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !6497
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !6498
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !6499
  %73 = load i32, i32* %re_index.i, align 4, !dbg !6500
  %and54.i = and i32 %73, 7, !dbg !6501
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !6502
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !6503
  %74 = load i32, i32* %n.i, align 4, !dbg !6504
  %sub56.i = sub nsw i32 0, %74, !dbg !6505
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !6506
  %75 = load i32, i32* %re_cache.i, align 4, !dbg !6507
  %76 = load i32, i32* %nb_bits.i, align 4, !dbg !6508
  %conv57.i = trunc i32 %76 to i8, !dbg !6508
  %call58.i = call i32 @NEG_USR32(i32 %75, i8 signext %conv57.i) #10, !dbg !6509
  %77 = load i32, i32* %code.i, align 4, !dbg !6510
  %add59.i = add i32 %call58.i, %77, !dbg !6511
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !6512
  %78 = load i32, i32* %index1.i, align 4, !dbg !6513
  %idxprom60.i = zext i32 %78 to i64, !dbg !6514
  %79 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6514
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %79, i64 %idxprom60.i, !dbg !6514
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !6514
  %80 = load i16, i16* %arrayidx62.i, align 2, !dbg !6514
  %conv63.i = sext i16 %80 to i32, !dbg !6514
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !6515
  %81 = load i32, i32* %index1.i, align 4, !dbg !6516
  %idxprom64.i = zext i32 %81 to i64, !dbg !6517
  %82 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6517
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %82, i64 %idxprom64.i, !dbg !6517
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !6517
  %83 = load i16, i16* %arrayidx66.i, align 2, !dbg !6517
  %conv67.i = sext i16 %83 to i32, !dbg !6517
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !6518
  br label %if.end.i, !dbg !6519

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !6520

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body
  %84 = load i32, i32* %n.i, align 4, !dbg !6521
  %85 = load i32, i32* %re_cache.i, align 4, !dbg !6522
  %shl70.i = shl i32 %85, %84, !dbg !6522
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !6522
  %86 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6523
  %87 = load i32, i32* %re_index.i, align 4, !dbg !6524
  %88 = load i32, i32* %n.i, align 4, !dbg !6525
  %add71.i = add i32 %87, %88, !dbg !6526
  %cmp72.i = icmp ugt i32 %86, %add71.i, !dbg !6527
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !6528

cond.true74.i:                                    ; preds = %if.end68.i
  %89 = load i32, i32* %re_index.i, align 4, !dbg !6529
  %90 = load i32, i32* %n.i, align 4, !dbg !6530
  %add75.i = add i32 %89, %90, !dbg !6531
  br label %get_vlc2.exit, !dbg !6532

cond.false76.i:                                   ; preds = %if.end68.i
  %91 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6533
  br label %get_vlc2.exit, !dbg !6534

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %91, %cond.false76.i ], !dbg !6535
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !6536
  %92 = load i32, i32* %re_index.i, align 4, !dbg !6537
  %93 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6538
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %93, i32 0, i32 2, !dbg !6539
  store i32 %92, i32* %index80.i, align 8, !dbg !6540
  %94 = load i32, i32* %code.i, align 4, !dbg !6541
  store i32 %94, i32* %val, align 4, !dbg !6542
  store i32 0, i32* %j, align 4, !dbg !6543
  br label %for.cond1, !dbg !6545

for.cond1:                                        ; preds = %for.inc, %get_vlc2.exit
  %95 = load i32, i32* %j, align 4, !dbg !6546
  %cmp2 = icmp slt i32 %95, 4, !dbg !6549
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !6550

for.body3:                                        ; preds = %for.cond1
  %96 = load i32, i32* %val, align 4, !dbg !6551
  %97 = load i32, i32* %j, align 4, !dbg !6553
  %mul = mul nsw i32 %97, 4, !dbg !6554
  %sub = sub nsw i32 12, %mul, !dbg !6555
  %shr = ashr i32 %96, %sub, !dbg !6556
  %and = and i32 %shr, 15, !dbg !6557
  %call4 = call i32 @sign_extend(i32 %and, i32 4) #2, !dbg !6558
  store i32 %call4, i32* %val1, align 4, !dbg !6559
  %98 = load i32, i32* %val1, align 4, !dbg !6560
  %99 = load float, float* %band_scale.addr, align 4, !dbg !6561
  %call5 = call float @on2avc_scale(i32 %98, float %99), !dbg !6562
  %100 = load float*, float** %dst.addr, align 8, !dbg !6563
  %incdec.ptr = getelementptr inbounds float, float* %100, i32 1, !dbg !6563
  store float* %incdec.ptr, float** %dst.addr, align 8, !dbg !6563
  store float %call5, float* %100, align 4, !dbg !6564
  br label %for.inc, !dbg !6565

for.inc:                                          ; preds = %for.body3
  %101 = load i32, i32* %j, align 4, !dbg !6566
  %inc = add nsw i32 %101, 1, !dbg !6566
  store i32 %inc, i32* %j, align 4, !dbg !6566
  br label %for.cond1, !dbg !6568, !llvm.loop !6569

for.end:                                          ; preds = %for.cond1
  br label %for.inc6, !dbg !6571

for.inc6:                                         ; preds = %for.end
  %102 = load i32, i32* %i, align 4, !dbg !6572
  %add = add nsw i32 %102, 4, !dbg !6572
  store i32 %add, i32* %i, align 4, !dbg !6572
  br label %for.cond, !dbg !6574, !llvm.loop !6575

for.end7:                                         ; preds = %for.cond
  ret i32 0, !dbg !6577
}

; Function Attrs: nounwind uwtable
define internal i32 @on2avc_decode_pairs(%struct.On2AVCContext* %c, %struct.GetBitContext* %gb, float* %dst, i32 %dst_size, i32 %type, float %band_scale) #1 !dbg !6578 {
entry:
  %x.addr.i96.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i96.i, metadata !4789, metadata !1675), !dbg !6579
  %x.addr.i81.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i81.i, metadata !4789, metadata !1675), !dbg !6585
  %x.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i.i, metadata !4789, metadata !1675), !dbg !6587
  %s.addr.i = alloca %struct.GetBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr.i, metadata !5895, metadata !1675), !dbg !6589
  %table.addr.i = alloca [2 x i16]*, align 8
  call void @llvm.dbg.declare(metadata [2 x i16]** %table.addr.i, metadata !5897, metadata !1675), !dbg !6590
  %bits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr.i, metadata !5899, metadata !1675), !dbg !6591
  %max_depth.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr.i, metadata !5901, metadata !1675), !dbg !6592
  %code.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %code.i, metadata !5903, metadata !1675), !dbg !6593
  %re_index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_index.i, metadata !5905, metadata !1675), !dbg !6594
  %re_cache.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_cache.i, metadata !5907, metadata !1675), !dbg !6595
  %re_size_plus8.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8.i, metadata !5909, metadata !1675), !dbg !6596
  %n.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %n.i, metadata !5911, metadata !1675), !dbg !6597
  %nb_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nb_bits.i, metadata !5913, metadata !1675), !dbg !6598
  %index1.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index1.i, metadata !5915, metadata !1675), !dbg !6599
  %c.addr = alloca %struct.On2AVCContext*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %dst.addr = alloca float*, align 8
  %dst_size.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %band_scale.addr = alloca float, align 4
  %i = alloca i32, align 4
  %val = alloca i32, align 4
  %val1 = alloca i32, align 4
  %val2 = alloca i32, align 4
  %sign = alloca i32, align 4
  store %struct.On2AVCContext* %c, %struct.On2AVCContext** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.On2AVCContext** %c.addr, metadata !6600, metadata !1675), !dbg !6601
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6602, metadata !1675), !dbg !6603
  store float* %dst, float** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dst.addr, metadata !6604, metadata !1675), !dbg !6605
  store i32 %dst_size, i32* %dst_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_size.addr, metadata !6606, metadata !1675), !dbg !6607
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6608, metadata !1675), !dbg !6609
  store float %band_scale, float* %band_scale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %band_scale.addr, metadata !6610, metadata !1675), !dbg !6611
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6612, metadata !1675), !dbg !6613
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6614, metadata !1675), !dbg !6615
  call void @llvm.dbg.declare(metadata i32* %val1, metadata !6616, metadata !1675), !dbg !6617
  call void @llvm.dbg.declare(metadata i32* %val2, metadata !6618, metadata !1675), !dbg !6619
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !6620, metadata !1675), !dbg !6621
  store i32 0, i32* %i, align 4, !dbg !6622
  br label %for.cond, !dbg !6623

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6624
  %1 = load i32, i32* %dst_size.addr, align 4, !dbg !6626
  %cmp = icmp slt i32 %0, %1, !dbg !6627
  br i1 %cmp, label %for.body, label %for.end, !dbg !6628

for.body:                                         ; preds = %for.cond
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6629
  %3 = load i32, i32* %type.addr, align 4, !dbg !6630
  %idxprom = sext i32 %3 to i64, !dbg !6631
  %4 = load %struct.On2AVCContext*, %struct.On2AVCContext** %c.addr, align 8, !dbg !6631
  %cb_vlc = getelementptr inbounds %struct.On2AVCContext, %struct.On2AVCContext* %4, i32 0, i32 27, !dbg !6632
  %arrayidx = getelementptr inbounds [16 x %struct.VLC], [16 x %struct.VLC]* %cb_vlc, i64 0, i64 %idxprom, !dbg !6631
  %table = getelementptr inbounds %struct.VLC, %struct.VLC* %arrayidx, i32 0, i32 1, !dbg !6633
  %5 = load [2 x i16]*, [2 x i16]** %table, align 8, !dbg !6633
  store %struct.GetBitContext* %2, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6634
  store [2 x i16]* %5, [2 x i16]** %table.addr.i, align 8, !dbg !6634
  store i32 9, i32* %bits.addr.i, align 4, !dbg !6634
  store i32 3, i32* %max_depth.addr.i, align 4, !dbg !6634
  %6 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6635
  %index.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %6, i32 0, i32 2, !dbg !6636
  %7 = load i32, i32* %index.i, align 8, !dbg !6636
  store i32 %7, i32* %re_index.i, align 4, !dbg !6594
  %8 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6637
  %size_in_bits_plus8.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %8, i32 0, i32 4, !dbg !6638
  %9 = load i32, i32* %size_in_bits_plus8.i, align 8, !dbg !6638
  store i32 %9, i32* %re_size_plus8.i, align 4, !dbg !6596
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6639
  %buffer.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %10, i32 0, i32 0, !dbg !6640
  %11 = load i8*, i8** %buffer.i, align 8, !dbg !6640
  %12 = load i32, i32* %re_index.i, align 4, !dbg !6641
  %shr.i = lshr i32 %12, 3, !dbg !6642
  %idx.ext.i = zext i32 %shr.i to i64, !dbg !6643
  %add.ptr.i = getelementptr inbounds i8, i8* %11, i64 %idx.ext.i, !dbg !6643
  %13 = bitcast i8* %add.ptr.i to %union.unaligned_32*, !dbg !6644
  %l.i = bitcast %union.unaligned_32* %13 to i32*, !dbg !6644
  %14 = load i32, i32* %l.i, align 1, !dbg !6644
  store i32 %14, i32* %x.addr.i.i, align 4, !dbg !6645
  %15 = load i32, i32* %x.addr.i.i, align 4, !dbg !6646
  %shl.i.i = shl i32 %15, 8, !dbg !6647
  %and.i.i = and i32 %shl.i.i, 65280, !dbg !6648
  %16 = load i32, i32* %x.addr.i.i, align 4, !dbg !6649
  %shr.i.i = lshr i32 %16, 8, !dbg !6650
  %and1.i.i = and i32 %shr.i.i, 255, !dbg !6651
  %or.i.i = or i32 %and.i.i, %and1.i.i, !dbg !6652
  %shl2.i.i = shl i32 %or.i.i, 16, !dbg !6653
  %17 = load i32, i32* %x.addr.i.i, align 4, !dbg !6654
  %shr3.i.i = lshr i32 %17, 16, !dbg !6655
  %shl4.i.i = shl i32 %shr3.i.i, 8, !dbg !6656
  %and5.i.i = and i32 %shl4.i.i, 65280, !dbg !6657
  %18 = load i32, i32* %x.addr.i.i, align 4, !dbg !6658
  %shr6.i.i = lshr i32 %18, 16, !dbg !6659
  %shr7.i.i = lshr i32 %shr6.i.i, 8, !dbg !6660
  %and8.i.i = and i32 %shr7.i.i, 255, !dbg !6661
  %or9.i.i = or i32 %and5.i.i, %and8.i.i, !dbg !6662
  %or10.i.i = or i32 %shl2.i.i, %or9.i.i, !dbg !6663
  %19 = load i32, i32* %re_index.i, align 4, !dbg !6664
  %and.i = and i32 %19, 7, !dbg !6665
  %shl.i = shl i32 %or10.i.i, %and.i, !dbg !6666
  store i32 %shl.i, i32* %re_cache.i, align 4, !dbg !6667
  %20 = load i32, i32* %re_cache.i, align 4, !dbg !6668
  %21 = load i32, i32* %bits.addr.i, align 4, !dbg !6669
  %conv.i = trunc i32 %21 to i8, !dbg !6669
  %call2.i = call i32 @NEG_USR32(i32 %20, i8 signext %conv.i) #10, !dbg !6670
  store i32 %call2.i, i32* %index1.i, align 4, !dbg !6671
  %22 = load i32, i32* %index1.i, align 4, !dbg !6672
  %idxprom.i = zext i32 %22 to i64, !dbg !6673
  %23 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6673
  %arrayidx.i = getelementptr inbounds [2 x i16], [2 x i16]* %23, i64 %idxprom.i, !dbg !6673
  %arrayidx3.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx.i, i64 0, i64 0, !dbg !6673
  %24 = load i16, i16* %arrayidx3.i, align 2, !dbg !6673
  %conv4.i = sext i16 %24 to i32, !dbg !6673
  store i32 %conv4.i, i32* %code.i, align 4, !dbg !6674
  %25 = load i32, i32* %index1.i, align 4, !dbg !6675
  %idxprom5.i = zext i32 %25 to i64, !dbg !6676
  %26 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6676
  %arrayidx6.i = getelementptr inbounds [2 x i16], [2 x i16]* %26, i64 %idxprom5.i, !dbg !6676
  %arrayidx7.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx6.i, i64 0, i64 1, !dbg !6676
  %27 = load i16, i16* %arrayidx7.i, align 2, !dbg !6676
  %conv8.i = sext i16 %27 to i32, !dbg !6676
  store i32 %conv8.i, i32* %n.i, align 4, !dbg !6677
  %28 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6678
  %cmp.i = icmp sgt i32 %28, 1, !dbg !6679
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end68.i, !dbg !6680

land.lhs.true.i:                                  ; preds = %for.body
  %29 = load i32, i32* %n.i, align 4, !dbg !6681
  %cmp10.i = icmp slt i32 %29, 0, !dbg !6682
  br i1 %cmp10.i, label %if.then.i, label %if.end68.i, !dbg !6683

if.then.i:                                        ; preds = %land.lhs.true.i
  %30 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6684
  %31 = load i32, i32* %re_index.i, align 4, !dbg !6685
  %32 = load i32, i32* %bits.addr.i, align 4, !dbg !6686
  %add.i = add i32 %31, %32, !dbg !6687
  %cmp12.i = icmp ugt i32 %30, %add.i, !dbg !6688
  br i1 %cmp12.i, label %cond.true.i, label %cond.false.i, !dbg !6689

cond.true.i:                                      ; preds = %if.then.i
  %33 = load i32, i32* %re_index.i, align 4, !dbg !6690
  %34 = load i32, i32* %bits.addr.i, align 4, !dbg !6691
  %add14.i = add i32 %33, %34, !dbg !6692
  br label %cond.end.i, !dbg !6693

cond.false.i:                                     ; preds = %if.then.i
  %35 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6694
  br label %cond.end.i, !dbg !6695

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %add14.i, %cond.true.i ], [ %35, %cond.false.i ], !dbg !6696
  store i32 %cond.i, i32* %re_index.i, align 4, !dbg !6697
  %36 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6698
  %buffer15.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %36, i32 0, i32 0, !dbg !6699
  %37 = load i8*, i8** %buffer15.i, align 8, !dbg !6699
  %38 = load i32, i32* %re_index.i, align 4, !dbg !6700
  %shr16.i = lshr i32 %38, 3, !dbg !6701
  %idx.ext17.i = zext i32 %shr16.i to i64, !dbg !6702
  %add.ptr18.i = getelementptr inbounds i8, i8* %37, i64 %idx.ext17.i, !dbg !6702
  %39 = bitcast i8* %add.ptr18.i to %union.unaligned_32*, !dbg !6703
  %l19.i = bitcast %union.unaligned_32* %39 to i32*, !dbg !6703
  %40 = load i32, i32* %l19.i, align 1, !dbg !6703
  store i32 %40, i32* %x.addr.i81.i, align 4, !dbg !6704
  %41 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6705
  %shl.i82.i = shl i32 %41, 8, !dbg !6706
  %and.i83.i = and i32 %shl.i82.i, 65280, !dbg !6707
  %42 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6708
  %shr.i84.i = lshr i32 %42, 8, !dbg !6709
  %and1.i85.i = and i32 %shr.i84.i, 255, !dbg !6710
  %or.i86.i = or i32 %and.i83.i, %and1.i85.i, !dbg !6711
  %shl2.i87.i = shl i32 %or.i86.i, 16, !dbg !6712
  %43 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6713
  %shr3.i88.i = lshr i32 %43, 16, !dbg !6714
  %shl4.i89.i = shl i32 %shr3.i88.i, 8, !dbg !6715
  %and5.i90.i = and i32 %shl4.i89.i, 65280, !dbg !6716
  %44 = load i32, i32* %x.addr.i81.i, align 4, !dbg !6717
  %shr6.i91.i = lshr i32 %44, 16, !dbg !6718
  %shr7.i92.i = lshr i32 %shr6.i91.i, 8, !dbg !6719
  %and8.i93.i = and i32 %shr7.i92.i, 255, !dbg !6720
  %or9.i94.i = or i32 %and5.i90.i, %and8.i93.i, !dbg !6721
  %or10.i95.i = or i32 %shl2.i87.i, %or9.i94.i, !dbg !6722
  %45 = load i32, i32* %re_index.i, align 4, !dbg !6723
  %and21.i = and i32 %45, 7, !dbg !6724
  %shl22.i = shl i32 %or10.i95.i, %and21.i, !dbg !6725
  store i32 %shl22.i, i32* %re_cache.i, align 4, !dbg !6726
  %46 = load i32, i32* %n.i, align 4, !dbg !6727
  %sub.i = sub nsw i32 0, %46, !dbg !6728
  store i32 %sub.i, i32* %nb_bits.i, align 4, !dbg !6729
  %47 = load i32, i32* %re_cache.i, align 4, !dbg !6730
  %48 = load i32, i32* %nb_bits.i, align 4, !dbg !6731
  %conv23.i = trunc i32 %48 to i8, !dbg !6731
  %call24.i = call i32 @NEG_USR32(i32 %47, i8 signext %conv23.i) #10, !dbg !6732
  %49 = load i32, i32* %code.i, align 4, !dbg !6733
  %add25.i = add i32 %call24.i, %49, !dbg !6734
  store i32 %add25.i, i32* %index1.i, align 4, !dbg !6735
  %50 = load i32, i32* %index1.i, align 4, !dbg !6736
  %idxprom26.i = zext i32 %50 to i64, !dbg !6737
  %51 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6737
  %arrayidx27.i = getelementptr inbounds [2 x i16], [2 x i16]* %51, i64 %idxprom26.i, !dbg !6737
  %arrayidx28.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx27.i, i64 0, i64 0, !dbg !6737
  %52 = load i16, i16* %arrayidx28.i, align 2, !dbg !6737
  %conv29.i = sext i16 %52 to i32, !dbg !6737
  store i32 %conv29.i, i32* %code.i, align 4, !dbg !6738
  %53 = load i32, i32* %index1.i, align 4, !dbg !6739
  %idxprom30.i = zext i32 %53 to i64, !dbg !6740
  %54 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6740
  %arrayidx31.i = getelementptr inbounds [2 x i16], [2 x i16]* %54, i64 %idxprom30.i, !dbg !6740
  %arrayidx32.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx31.i, i64 0, i64 1, !dbg !6740
  %55 = load i16, i16* %arrayidx32.i, align 2, !dbg !6740
  %conv33.i = sext i16 %55 to i32, !dbg !6740
  store i32 %conv33.i, i32* %n.i, align 4, !dbg !6741
  %56 = load i32, i32* %max_depth.addr.i, align 4, !dbg !6742
  %cmp34.i = icmp sgt i32 %56, 2, !dbg !6743
  br i1 %cmp34.i, label %land.lhs.true36.i, label %if.end.i, !dbg !6744

land.lhs.true36.i:                                ; preds = %cond.end.i
  %57 = load i32, i32* %n.i, align 4, !dbg !6745
  %cmp37.i = icmp slt i32 %57, 0, !dbg !6746
  br i1 %cmp37.i, label %if.then39.i, label %if.end.i, !dbg !6747

if.then39.i:                                      ; preds = %land.lhs.true36.i
  %58 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6748
  %59 = load i32, i32* %re_index.i, align 4, !dbg !6749
  %60 = load i32, i32* %nb_bits.i, align 4, !dbg !6750
  %add40.i = add i32 %59, %60, !dbg !6751
  %cmp41.i = icmp ugt i32 %58, %add40.i, !dbg !6752
  br i1 %cmp41.i, label %cond.true43.i, label %cond.false45.i, !dbg !6753

cond.true43.i:                                    ; preds = %if.then39.i
  %61 = load i32, i32* %re_index.i, align 4, !dbg !6754
  %62 = load i32, i32* %nb_bits.i, align 4, !dbg !6755
  %add44.i = add i32 %61, %62, !dbg !6756
  br label %cond.end46.i, !dbg !6757

cond.false45.i:                                   ; preds = %if.then39.i
  %63 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6758
  br label %cond.end46.i, !dbg !6759

cond.end46.i:                                     ; preds = %cond.false45.i, %cond.true43.i
  %cond47.i = phi i32 [ %add44.i, %cond.true43.i ], [ %63, %cond.false45.i ], !dbg !6760
  store i32 %cond47.i, i32* %re_index.i, align 4, !dbg !6761
  %64 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6762
  %buffer48.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %64, i32 0, i32 0, !dbg !6763
  %65 = load i8*, i8** %buffer48.i, align 8, !dbg !6763
  %66 = load i32, i32* %re_index.i, align 4, !dbg !6764
  %shr49.i = lshr i32 %66, 3, !dbg !6765
  %idx.ext50.i = zext i32 %shr49.i to i64, !dbg !6766
  %add.ptr51.i = getelementptr inbounds i8, i8* %65, i64 %idx.ext50.i, !dbg !6766
  %67 = bitcast i8* %add.ptr51.i to %union.unaligned_32*, !dbg !6767
  %l52.i = bitcast %union.unaligned_32* %67 to i32*, !dbg !6767
  %68 = load i32, i32* %l52.i, align 1, !dbg !6767
  store i32 %68, i32* %x.addr.i96.i, align 4, !dbg !6768
  %69 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6769
  %shl.i97.i = shl i32 %69, 8, !dbg !6770
  %and.i98.i = and i32 %shl.i97.i, 65280, !dbg !6771
  %70 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6772
  %shr.i99.i = lshr i32 %70, 8, !dbg !6773
  %and1.i100.i = and i32 %shr.i99.i, 255, !dbg !6774
  %or.i101.i = or i32 %and.i98.i, %and1.i100.i, !dbg !6775
  %shl2.i102.i = shl i32 %or.i101.i, 16, !dbg !6776
  %71 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6777
  %shr3.i103.i = lshr i32 %71, 16, !dbg !6778
  %shl4.i104.i = shl i32 %shr3.i103.i, 8, !dbg !6779
  %and5.i105.i = and i32 %shl4.i104.i, 65280, !dbg !6780
  %72 = load i32, i32* %x.addr.i96.i, align 4, !dbg !6781
  %shr6.i106.i = lshr i32 %72, 16, !dbg !6782
  %shr7.i107.i = lshr i32 %shr6.i106.i, 8, !dbg !6783
  %and8.i108.i = and i32 %shr7.i107.i, 255, !dbg !6784
  %or9.i109.i = or i32 %and5.i105.i, %and8.i108.i, !dbg !6785
  %or10.i110.i = or i32 %shl2.i102.i, %or9.i109.i, !dbg !6786
  %73 = load i32, i32* %re_index.i, align 4, !dbg !6787
  %and54.i = and i32 %73, 7, !dbg !6788
  %shl55.i = shl i32 %or10.i110.i, %and54.i, !dbg !6789
  store i32 %shl55.i, i32* %re_cache.i, align 4, !dbg !6790
  %74 = load i32, i32* %n.i, align 4, !dbg !6791
  %sub56.i = sub nsw i32 0, %74, !dbg !6792
  store i32 %sub56.i, i32* %nb_bits.i, align 4, !dbg !6793
  %75 = load i32, i32* %re_cache.i, align 4, !dbg !6794
  %76 = load i32, i32* %nb_bits.i, align 4, !dbg !6795
  %conv57.i = trunc i32 %76 to i8, !dbg !6795
  %call58.i = call i32 @NEG_USR32(i32 %75, i8 signext %conv57.i) #10, !dbg !6796
  %77 = load i32, i32* %code.i, align 4, !dbg !6797
  %add59.i = add i32 %call58.i, %77, !dbg !6798
  store i32 %add59.i, i32* %index1.i, align 4, !dbg !6799
  %78 = load i32, i32* %index1.i, align 4, !dbg !6800
  %idxprom60.i = zext i32 %78 to i64, !dbg !6801
  %79 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6801
  %arrayidx61.i = getelementptr inbounds [2 x i16], [2 x i16]* %79, i64 %idxprom60.i, !dbg !6801
  %arrayidx62.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx61.i, i64 0, i64 0, !dbg !6801
  %80 = load i16, i16* %arrayidx62.i, align 2, !dbg !6801
  %conv63.i = sext i16 %80 to i32, !dbg !6801
  store i32 %conv63.i, i32* %code.i, align 4, !dbg !6802
  %81 = load i32, i32* %index1.i, align 4, !dbg !6803
  %idxprom64.i = zext i32 %81 to i64, !dbg !6804
  %82 = load [2 x i16]*, [2 x i16]** %table.addr.i, align 8, !dbg !6804
  %arrayidx65.i = getelementptr inbounds [2 x i16], [2 x i16]* %82, i64 %idxprom64.i, !dbg !6804
  %arrayidx66.i = getelementptr inbounds [2 x i16], [2 x i16]* %arrayidx65.i, i64 0, i64 1, !dbg !6804
  %83 = load i16, i16* %arrayidx66.i, align 2, !dbg !6804
  %conv67.i = sext i16 %83 to i32, !dbg !6804
  store i32 %conv67.i, i32* %n.i, align 4, !dbg !6805
  br label %if.end.i, !dbg !6806

if.end.i:                                         ; preds = %cond.end46.i, %land.lhs.true36.i, %cond.end.i
  br label %if.end68.i, !dbg !6807

if.end68.i:                                       ; preds = %if.end.i, %land.lhs.true.i, %for.body
  %84 = load i32, i32* %n.i, align 4, !dbg !6808
  %85 = load i32, i32* %re_cache.i, align 4, !dbg !6809
  %shl70.i = shl i32 %85, %84, !dbg !6809
  store i32 %shl70.i, i32* %re_cache.i, align 4, !dbg !6809
  %86 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6810
  %87 = load i32, i32* %re_index.i, align 4, !dbg !6811
  %88 = load i32, i32* %n.i, align 4, !dbg !6812
  %add71.i = add i32 %87, %88, !dbg !6813
  %cmp72.i = icmp ugt i32 %86, %add71.i, !dbg !6814
  br i1 %cmp72.i, label %cond.true74.i, label %cond.false76.i, !dbg !6815

cond.true74.i:                                    ; preds = %if.end68.i
  %89 = load i32, i32* %re_index.i, align 4, !dbg !6816
  %90 = load i32, i32* %n.i, align 4, !dbg !6817
  %add75.i = add i32 %89, %90, !dbg !6818
  br label %get_vlc2.exit, !dbg !6819

cond.false76.i:                                   ; preds = %if.end68.i
  %91 = load i32, i32* %re_size_plus8.i, align 4, !dbg !6820
  br label %get_vlc2.exit, !dbg !6821

get_vlc2.exit:                                    ; preds = %cond.true74.i, %cond.false76.i
  %cond78.i = phi i32 [ %add75.i, %cond.true74.i ], [ %91, %cond.false76.i ], !dbg !6822
  store i32 %cond78.i, i32* %re_index.i, align 4, !dbg !6823
  %92 = load i32, i32* %re_index.i, align 4, !dbg !6824
  %93 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr.i, align 8, !dbg !6825
  %index80.i = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %93, i32 0, i32 2, !dbg !6826
  store i32 %92, i32* %index80.i, align 8, !dbg !6827
  %94 = load i32, i32* %code.i, align 4, !dbg !6828
  store i32 %94, i32* %val, align 4, !dbg !6829
  %95 = load i32, i32* %val, align 4, !dbg !6830
  %shr = ashr i32 %95, 8, !dbg !6831
  %call1 = call i32 @sign_extend(i32 %shr, i32 8) #2, !dbg !6832
  store i32 %call1, i32* %val1, align 4, !dbg !6833
  %96 = load i32, i32* %val, align 4, !dbg !6834
  %and = and i32 %96, 255, !dbg !6835
  %call2 = call i32 @sign_extend(i32 %and, i32 8) #2, !dbg !6836
  store i32 %call2, i32* %val2, align 4, !dbg !6837
  %97 = load i32, i32* %type.addr, align 4, !dbg !6838
  %cmp3 = icmp eq i32 %97, 15, !dbg !6840
  br i1 %cmp3, label %if.then, label %if.end23, !dbg !6841

if.then:                                          ; preds = %get_vlc2.exit
  %98 = load i32, i32* %val1, align 4, !dbg !6842
  %cmp4 = icmp sle i32 %98, -16, !dbg !6845
  br i1 %cmp4, label %if.then6, label %lor.lhs.false, !dbg !6846

lor.lhs.false:                                    ; preds = %if.then
  %99 = load i32, i32* %val1, align 4, !dbg !6847
  %cmp5 = icmp sge i32 %99, 16, !dbg !6849
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !6850

if.then6:                                         ; preds = %lor.lhs.false, %if.then
  %100 = load i32, i32* %val1, align 4, !dbg !6851
  %cmp7 = icmp slt i32 %100, 0, !dbg !6853
  %conv = zext i1 %cmp7 to i32, !dbg !6853
  %mul = mul nsw i32 %conv, 2, !dbg !6854
  %sub = sub nsw i32 1, %mul, !dbg !6855
  store i32 %sub, i32* %sign, align 4, !dbg !6856
  %101 = load i32, i32* %sign, align 4, !dbg !6857
  %102 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6858
  %call8 = call i32 @get_egolomb(%struct.GetBitContext* %102), !dbg !6859
  %mul9 = mul nsw i32 %101, %call8, !dbg !6860
  store i32 %mul9, i32* %val1, align 4, !dbg !6861
  br label %if.end, !dbg !6862

if.end:                                           ; preds = %if.then6, %lor.lhs.false
  %103 = load i32, i32* %val2, align 4, !dbg !6863
  %cmp10 = icmp sle i32 %103, -16, !dbg !6865
  br i1 %cmp10, label %if.then15, label %lor.lhs.false12, !dbg !6866

lor.lhs.false12:                                  ; preds = %if.end
  %104 = load i32, i32* %val2, align 4, !dbg !6867
  %cmp13 = icmp sge i32 %104, 16, !dbg !6869
  br i1 %cmp13, label %if.then15, label %if.end22, !dbg !6870

if.then15:                                        ; preds = %lor.lhs.false12, %if.end
  %105 = load i32, i32* %val2, align 4, !dbg !6871
  %cmp16 = icmp slt i32 %105, 0, !dbg !6873
  %conv17 = zext i1 %cmp16 to i32, !dbg !6873
  %mul18 = mul nsw i32 %conv17, 2, !dbg !6874
  %sub19 = sub nsw i32 1, %mul18, !dbg !6875
  store i32 %sub19, i32* %sign, align 4, !dbg !6876
  %106 = load i32, i32* %sign, align 4, !dbg !6877
  %107 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6878
  %call20 = call i32 @get_egolomb(%struct.GetBitContext* %107), !dbg !6879
  %mul21 = mul nsw i32 %106, %call20, !dbg !6880
  store i32 %mul21, i32* %val2, align 4, !dbg !6881
  br label %if.end22, !dbg !6882

if.end22:                                         ; preds = %if.then15, %lor.lhs.false12
  br label %if.end23, !dbg !6883

if.end23:                                         ; preds = %if.end22, %get_vlc2.exit
  %108 = load i32, i32* %val1, align 4, !dbg !6884
  %109 = load float, float* %band_scale.addr, align 4, !dbg !6885
  %call24 = call float @on2avc_scale(i32 %108, float %109), !dbg !6886
  %110 = load float*, float** %dst.addr, align 8, !dbg !6887
  %incdec.ptr = getelementptr inbounds float, float* %110, i32 1, !dbg !6887
  store float* %incdec.ptr, float** %dst.addr, align 8, !dbg !6887
  store float %call24, float* %110, align 4, !dbg !6888
  %111 = load i32, i32* %val2, align 4, !dbg !6889
  %112 = load float, float* %band_scale.addr, align 4, !dbg !6890
  %call25 = call float @on2avc_scale(i32 %111, float %112), !dbg !6891
  %113 = load float*, float** %dst.addr, align 8, !dbg !6892
  %incdec.ptr26 = getelementptr inbounds float, float* %113, i32 1, !dbg !6892
  store float* %incdec.ptr26, float** %dst.addr, align 8, !dbg !6892
  store float %call25, float* %113, align 4, !dbg !6893
  br label %for.inc, !dbg !6894

for.inc:                                          ; preds = %if.end23
  %114 = load i32, i32* %i, align 4, !dbg !6895
  %add = add nsw i32 %114, 2, !dbg !6895
  store i32 %add, i32* %i, align 4, !dbg !6895
  br label %for.cond, !dbg !6897, !llvm.loop !6898

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !6900
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @sign_extend(i32 %val, i32 %bits) #8 !dbg !6901 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  %shift = alloca i32, align 4
  %v = alloca %union.anon, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !6905, metadata !1675), !dbg !6906
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !6907, metadata !1675), !dbg !6908
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !6909, metadata !1675), !dbg !6910
  %0 = load i32, i32* %bits.addr, align 4, !dbg !6911
  %conv = zext i32 %0 to i64, !dbg !6911
  %sub = sub i64 32, %conv, !dbg !6912
  %conv1 = trunc i64 %sub to i32, !dbg !6913
  store i32 %conv1, i32* %shift, align 4, !dbg !6910
  call void @llvm.dbg.declare(metadata %union.anon* %v, metadata !6914, metadata !1675), !dbg !6919
  %u = bitcast %union.anon* %v to i32*, !dbg !6920
  %1 = load i32, i32* %val.addr, align 4, !dbg !6921
  %2 = load i32, i32* %shift, align 4, !dbg !6922
  %shl = shl i32 %1, %2, !dbg !6923
  store i32 %shl, i32* %u, align 4, !dbg !6920
  %s = bitcast %union.anon* %v to i32*, !dbg !6924
  %3 = load i32, i32* %s, align 4, !dbg !6924
  %4 = load i32, i32* %shift, align 4, !dbg !6925
  %shr = ashr i32 %3, %4, !dbg !6926
  ret i32 %shr, !dbg !6927
}

; Function Attrs: inlinehint nounwind uwtable
define internal float @on2avc_scale(i32 %v, float %scale) #7 !dbg !6928 {
entry:
  %v.addr = alloca i32, align 4
  %scale.addr = alloca float, align 4
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !6931, metadata !1675), !dbg !6932
  store float %scale, float* %scale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %scale.addr, metadata !6933, metadata !1675), !dbg !6934
  %0 = load i32, i32* %v.addr, align 4, !dbg !6935
  %conv = sitofp i32 %0 to float, !dbg !6935
  %1 = load i32, i32* %v.addr, align 4, !dbg !6936
  %call = call i32 @abs(i32 %1) #2, !dbg !6937
  %conv1 = sitofp i32 %call to float, !dbg !6937
  %call2 = call float @sqrtf(float %conv1) #10, !dbg !6938
  %mul = fmul float %conv, %call2, !dbg !6940
  %2 = load float, float* %scale.addr, align 4, !dbg !6941
  %mul3 = fmul float %mul, %2, !dbg !6942
  ret float %mul3, !dbg !6943
}

; Function Attrs: nounwind
declare float @sqrtf(float) #6

; Function Attrs: nounwind readnone
declare i32 @abs(i32) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_egolomb(%struct.GetBitContext* %gb) #7 !dbg !6944 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %v = alloca i32, align 4
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !6947, metadata !1675), !dbg !6948
  call void @llvm.dbg.declare(metadata i32* %v, metadata !6949, metadata !1675), !dbg !6950
  store i32 4, i32* %v, align 4, !dbg !6950
  br label %while.cond, !dbg !6951

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6952
  %call = call i32 @get_bits1(%struct.GetBitContext* %0), !dbg !6954
  %tobool = icmp ne i32 %call, 0, !dbg !6955
  br i1 %tobool, label %while.body, label %while.end, !dbg !6955

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %v, align 4, !dbg !6956
  %inc = add nsw i32 %1, 1, !dbg !6956
  store i32 %inc, i32* %v, align 4, !dbg !6956
  %2 = load i32, i32* %v, align 4, !dbg !6958
  %cmp = icmp sgt i32 %2, 30, !dbg !6960
  br i1 %cmp, label %if.then, label %if.end, !dbg !6961

if.then:                                          ; preds = %while.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 24, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i32 0, i32 0)), !dbg !6962
  store i32 30, i32* %v, align 4, !dbg !6964
  br label %while.end, !dbg !6965

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !6966, !llvm.loop !6968

while.end:                                        ; preds = %if.then, %while.cond
  %3 = load i32, i32* %v, align 4, !dbg !6969
  %shl = shl i32 1, %3, !dbg !6970
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !6971
  %5 = load i32, i32* %v, align 4, !dbg !6972
  %call1 = call i32 @get_bits_long(%struct.GetBitContext* %4, i32 %5), !dbg !6973
  %add = add i32 %shl, %call1, !dbg !6974
  ret i32 %add, !dbg !6975
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #7 !dbg !6976 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !6977, metadata !1675), !dbg !6978
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6979, metadata !1675), !dbg !6980
  %0 = load i32, i32* %n.addr, align 4, !dbg !6981
  %tobool = icmp ne i32 %0, 0, !dbg !6981
  br i1 %tobool, label %if.else, label %if.then, !dbg !6983

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6984
  br label %return, !dbg !6984

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !6986
  %cmp = icmp sle i32 %1, 25, !dbg !6988
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !6989

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6990
  %3 = load i32, i32* %n.addr, align 4, !dbg !6992
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !6993
  store i32 %call, i32* %retval, align 4, !dbg !6994
  br label %return, !dbg !6994

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6995, metadata !1675), !dbg !6997
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !6998
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !6999
  %5 = load i32, i32* %n.addr, align 4, !dbg !7000
  %sub = sub nsw i32 %5, 16, !dbg !7001
  %shl = shl i32 %call3, %sub, !dbg !7002
  store i32 %shl, i32* %ret, align 4, !dbg !6997
  %6 = load i32, i32* %ret, align 4, !dbg !7003
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7004
  %8 = load i32, i32* %n.addr, align 4, !dbg !7005
  %sub4 = sub nsw i32 %8, 16, !dbg !7006
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 %sub4), !dbg !7007
  %or = or i32 %6, %call5, !dbg !7008
  store i32 %or, i32* %retval, align 4, !dbg !7009
  br label %return, !dbg !7009

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7010
  ret i32 %9, !dbg !7010
}

; Function Attrs: noreturn nounwind
declare void @abort() #9

declare void @ff_mdct_end(%struct.FFTContext*) #3

declare void @ff_fft_end(%struct.FFTContext*) #3

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1664, !1665}
!llvm.ident = !{!1666}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !908, globals: !939)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--on2avc.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !13, !473, !673, !690, !711, !721, !745, !751, !769, !793, !812, !822, !852, !860, !872, !881, !887, !893, !897}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !4, line: 199, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12}
!6 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!7 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!8 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!9 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!10 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!11 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!12 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !14, line: 215, size: 32, align: 32, elements: !15)
!14 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472}
!16 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!17 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!18 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!19 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!20 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!21 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!22 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!23 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!24 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!25 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!26 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!27 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!28 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!29 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!30 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!31 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!32 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!33 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!34 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!35 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!36 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!37 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!38 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!39 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!40 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!41 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!42 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!43 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!44 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!45 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!46 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!47 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!48 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!49 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!50 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!51 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!52 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!54 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!55 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!56 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!57 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!58 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!59 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!60 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!62 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!63 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!64 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!65 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!66 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!67 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!68 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!69 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!70 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!71 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!72 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!73 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!74 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!75 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!76 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!77 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!78 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!79 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!80 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!81 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!82 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!83 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!84 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!85 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!86 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!87 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!88 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!89 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!90 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!91 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!94 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!98 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!99 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!100 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!101 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!102 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!103 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!104 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!105 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!106 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!108 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!109 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!110 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!111 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!112 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!113 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!114 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!115 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!116 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!117 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!118 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!119 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!121 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!123 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!124 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!126 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!127 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!128 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!129 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!130 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!131 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!132 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!133 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!134 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!135 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!137 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!139 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!140 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!141 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!143 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!144 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!145 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!146 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!147 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!148 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!149 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!150 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!151 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!152 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!153 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!154 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!155 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!156 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!157 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!158 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!159 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!160 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!161 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!162 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!164 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!166 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!168 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!169 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!170 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!171 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!172 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!173 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!175 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!176 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!177 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!180 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!181 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!183 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!184 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!185 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!186 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!188 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!189 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!191 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!192 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!193 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!194 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!196 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!200 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!201 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!202 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!203 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!204 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!205 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!206 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!207 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!208 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!209 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!211 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!212 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!213 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!214 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!216 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!217 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!218 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!220 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!221 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!222 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!223 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!224 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!225 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!226 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!227 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!228 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!229 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!230 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!231 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!232 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!233 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!234 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!235 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!236 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!237 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!238 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!239 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!240 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!241 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!243 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!244 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!245 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!246 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!247 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!248 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!249 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!250 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!251 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!252 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!254 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!255 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!256 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!257 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!258 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!259 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!260 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!261 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!262 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!263 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!265 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!266 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!268 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!269 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!270 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!271 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!272 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!273 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!279 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!289 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!290 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!291 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!292 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!293 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!295 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!296 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!297 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!298 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!299 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!300 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!301 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!302 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!303 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!304 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!305 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!306 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!307 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!308 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!309 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!330 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!331 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!332 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!333 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!335 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!336 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!337 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!338 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!339 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!340 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!341 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!342 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!343 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!344 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!345 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!346 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!347 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!348 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!349 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!350 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!351 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!352 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!353 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!354 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!355 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!357 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!358 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!359 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!360 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!361 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!362 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!363 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!364 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!365 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!366 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!367 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!368 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!369 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!370 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!372 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!373 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!375 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!376 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!377 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!380 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!382 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!384 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!385 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!387 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!388 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!389 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!390 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!391 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!392 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!393 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!394 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!395 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!396 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!397 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!398 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!400 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!401 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!402 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!403 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!404 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!406 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!407 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!408 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!410 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!411 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!412 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!413 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!414 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!416 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!417 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!418 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!419 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!420 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!421 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!423 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!424 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!425 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!426 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!427 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!428 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!429 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!430 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!431 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!432 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!434 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!435 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!436 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!437 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!438 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!439 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!441 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!442 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!443 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!444 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!445 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!447 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!450 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!451 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!452 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!453 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!454 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!456 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!457 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!458 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!459 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!460 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!461 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!462 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!463 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!465 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!466 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!468 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!469 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!470 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!471 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!472 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!473 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !474, line: 64, size: 32, align: 32, elements: !475)
!474 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!476 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!477 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!478 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!479 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!480 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!481 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!482 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!483 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!484 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!485 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!486 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!487 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!488 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!489 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!490 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!491 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!492 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!493 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!494 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!495 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!496 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!497 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!498 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!499 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!500 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!501 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!502 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!503 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!504 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!505 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!507 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!508 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!509 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!511 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!512 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!513 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!514 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!515 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!516 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!518 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!519 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!520 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!521 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!522 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!523 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!524 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!528 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!531 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!534 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!535 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!536 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!537 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!538 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!541 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!542 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!543 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!544 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!545 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!553 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!554 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!555 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!557 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!558 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!560 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!574 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!575 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!576 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!577 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!578 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!581 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!582 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!583 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!584 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!585 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!586 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!588 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!594 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!595 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!597 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!598 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!599 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!600 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!601 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!602 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!603 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!604 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!618 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!619 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!620 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!622 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!623 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!624 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!626 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!627 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!628 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!629 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!630 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!631 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!634 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!639 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!640 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!641 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!642 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!643 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!644 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!645 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!646 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!647 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!648 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!649 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!650 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!651 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!652 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!653 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!654 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!655 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!656 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!657 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!658 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!659 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!662 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!663 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!664 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!668 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!669 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!670 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!671 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!672 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !674, line: 58, size: 32, align: 32, elements: !675)
!674 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!675 = !{!676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!676 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!677 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!678 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!679 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!680 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!681 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!682 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!683 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!684 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!685 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!686 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!687 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!688 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!689 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 29, size: 32, align: 32, elements: !692)
!691 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!692 = !{!693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!693 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!694 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!695 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!696 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!697 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!698 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!699 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!700 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!701 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!702 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!703 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!704 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!705 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!706 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!707 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!708 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!709 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!710 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !4, line: 272, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720}
!713 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!714 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!715 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!716 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!717 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!718 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!719 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!720 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !722, line: 48, size: 32, align: 32, elements: !723)
!722 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!724 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!725 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!726 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!727 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!728 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!729 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!730 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!731 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!732 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!733 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!734 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!735 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!736 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!737 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!738 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!739 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!740 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!741 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!742 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!743 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!744 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!745 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !474, line: 516, size: 32, align: 32, elements: !746)
!746 = !{!747, !748, !749, !750}
!747 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!748 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!749 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!750 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !474, line: 440, size: 32, align: 32, elements: !752)
!752 = !{!753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!753 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!754 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!755 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!756 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!757 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!758 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!759 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!760 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!761 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!762 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!763 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!764 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!765 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!766 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!767 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!768 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !474, line: 464, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792}
!771 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!772 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!773 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!774 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!775 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!776 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!777 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!778 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!779 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!780 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!781 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!782 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!783 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!784 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!785 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!786 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!787 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!788 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!789 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!790 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!791 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!792 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!793 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !474, line: 493, size: 32, align: 32, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!795 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!796 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!797 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!798 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!799 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!800 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!801 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!802 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!803 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!804 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!805 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!806 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!807 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!808 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!809 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!810 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!811 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !474, line: 538, size: 32, align: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821}
!814 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!815 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!816 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!817 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!818 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!819 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!820 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!821 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!822 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !14, line: 1175, size: 32, align: 32, elements: !823)
!823 = !{!824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!824 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!825 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!826 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!827 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!828 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!829 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!830 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!831 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!832 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!833 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!834 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!835 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!836 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!837 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!838 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!839 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!840 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!841 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!842 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!843 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!844 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!845 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!846 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!847 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!848 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!849 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!850 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!851 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !14, line: 1534, size: 32, align: 32, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859}
!854 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!855 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!856 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!857 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!858 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!859 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!860 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !14, line: 810, size: 32, align: 32, elements: !861)
!861 = !{!862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!862 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!863 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!864 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!865 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!866 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!867 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !14, line: 798, size: 32, align: 32, elements: !873)
!873 = !{!874, !875, !876, !877, !878, !879, !880}
!874 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!875 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!876 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!877 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!878 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!879 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!880 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !14, line: 3865, size: 32, align: 32, elements: !882)
!882 = !{!883, !884, !885, !886}
!883 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!884 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!885 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!886 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !888, line: 77, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!891 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!892 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !888, line: 83, size: 32, align: 32, elements: !894)
!894 = !{!895, !896}
!895 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!896 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "WindowTypes", file: !898, line: 36, size: 32, align: 32, elements: !899)
!898 = !DIFile(filename: "libavcodec/on2avc.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!899 = !{!900, !901, !902, !903, !904, !905, !906, !907}
!900 = !DIEnumerator(name: "WINDOW_TYPE_LONG", value: 0)
!901 = !DIEnumerator(name: "WINDOW_TYPE_LONG_STOP", value: 1)
!902 = !DIEnumerator(name: "WINDOW_TYPE_LONG_START", value: 2)
!903 = !DIEnumerator(name: "WINDOW_TYPE_8SHORT", value: 3)
!904 = !DIEnumerator(name: "WINDOW_TYPE_EXT4", value: 4)
!905 = !DIEnumerator(name: "WINDOW_TYPE_EXT5", value: 5)
!906 = !DIEnumerator(name: "WINDOW_TYPE_EXT6", value: 6)
!907 = !DIEnumerator(name: "WINDOW_TYPE_EXT7", value: 7)
!908 = !{!909, !910, !911, !920, !928, !930, !931, !932}
!909 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!910 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64, align: 64)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !913, line: 39, baseType: !914)
!913 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !913, line: 37, size: 64, align: 32, elements: !915)
!915 = !{!916, !919}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !914, file: !913, line: 38, baseType: !917, size: 32, align: 32)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !913, line: 35, baseType: !918)
!918 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !914, file: !913, line: 38, baseType: !917, size: 32, align: 32, offset: 32)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64, align: 64)
!921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !922)
!922 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !923, line: 221, size: 32, align: 8, elements: !924)
!923 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!924 = !{!925}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !922, file: !923, line: 221, baseType: !926, size: 32, align: 32)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !927, line: 51, baseType: !910)
!927 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !927, line: 48, baseType: !929)
!929 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64, align: 64)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64, align: 64)
!933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !934)
!934 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_16", file: !923, line: 222, size: 16, align: 8, elements: !935)
!935 = !{!936}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !934, file: !923, line: 222, baseType: !937, size: 16, align: 16)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !927, line: 49, baseType: !938)
!938 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!939 = !{!940}
!940 = distinct !DIGlobalVariable(name: "ff_on2avc_decoder", scope: !0, file: !898, line: 1011, type: !941, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_on2avc_decoder)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !14, line: 3610, baseType: !942)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !14, line: 3468, size: 1984, align: 64, elements: !943)
!943 = !{!944, !948, !949, !950, !951, !952, !961, !964, !967, !970, !975, !976, !1017, !1025, !1026, !1027, !1029, !1579, !1585, !1593, !1597, !1598, !1635, !1639, !1643, !1644, !1648, !1652, !1653, !1657, !1658, !1659}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !942, file: !14, line: 3475, baseType: !945, size: 64, align: 64)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64, align: 64)
!946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!947 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !942, file: !14, line: 3480, baseType: !945, size: 64, align: 64, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !942, file: !14, line: 3481, baseType: !3, size: 32, align: 32, offset: 128)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !942, file: !14, line: 3482, baseType: !13, size: 32, align: 32, offset: 160)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !942, file: !14, line: 3487, baseType: !909, size: 32, align: 32, offset: 192)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !942, file: !14, line: 3488, baseType: !953, size: 64, align: 64, offset: 256)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64, align: 64)
!954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !956, line: 61, baseType: !957)
!956 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !956, line: 58, size: 64, align: 32, elements: !958)
!958 = !{!959, !960}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !957, file: !956, line: 59, baseType: !909, size: 32, align: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !957, file: !956, line: 60, baseType: !909, size: 32, align: 32, offset: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !942, file: !14, line: 3489, baseType: !962, size: 64, align: 64, offset: 320)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64, align: 64)
!963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !942, file: !14, line: 3490, baseType: !965, size: 64, align: 64, offset: 384)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64, align: 64)
!966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !909)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !942, file: !14, line: 3491, baseType: !968, size: 64, align: 64, offset: 448)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64, align: 64)
!969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !942, file: !14, line: 3492, baseType: !971, size: 64, align: 64, offset: 512)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64, align: 64)
!972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !973)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !927, line: 55, baseType: !974)
!974 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !942, file: !14, line: 3493, baseType: !928, size: 8, align: 8, offset: 576)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !942, file: !14, line: 3494, baseType: !977, size: 64, align: 64, offset: 640)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64, align: 64)
!978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !979)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !691, line: 143, baseType: !980)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !691, line: 67, size: 640, align: 64, elements: !981)
!981 = !{!982, !983, !987, !991, !992, !993, !994, !998, !1004, !1006, !1010}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !980, file: !691, line: 72, baseType: !945, size: 64, align: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !980, file: !691, line: 78, baseType: !984, size: 64, align: 64, offset: 64)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64, align: 64)
!985 = !DISubroutineType(types: !986)
!986 = !{!945, !930}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !980, file: !691, line: 85, baseType: !988, size: 64, align: 64, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!990 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !691, line: 85, flags: DIFlagFwdDecl)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !980, file: !691, line: 93, baseType: !909, size: 32, align: 32, offset: 192)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !980, file: !691, line: 99, baseType: !909, size: 32, align: 32, offset: 224)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !980, file: !691, line: 108, baseType: !909, size: 32, align: 32, offset: 256)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !980, file: !691, line: 113, baseType: !995, size: 64, align: 64, offset: 320)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64, align: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{!930, !930, !930}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !980, file: !691, line: 123, baseType: !999, size: 64, align: 64, offset: 384)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64, align: 64)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!1002, !1002}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64, align: 64)
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !980)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !980, file: !691, line: 130, baseType: !1005, size: 32, align: 32, offset: 448)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !691, line: 48, baseType: !690)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !980, file: !691, line: 136, baseType: !1007, size: 64, align: 64, offset: 512)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64, align: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!1005, !930}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !980, file: !691, line: 142, baseType: !1011, size: 64, align: 64, offset: 576)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64, align: 64)
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!909, !1014, !930, !945, !909}
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64, align: 64)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64, align: 64)
!1016 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !691, line: 60, flags: DIFlagFwdDecl)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !942, file: !14, line: 3495, baseType: !1018, size: 64, align: 64, offset: 704)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64, align: 64)
!1019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1020)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !14, line: 3404, baseType: !1021)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !14, line: 3401, size: 128, align: 64, elements: !1022)
!1022 = !{!1023, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1021, file: !14, line: 3402, baseType: !909, size: 32, align: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1021, file: !14, line: 3403, baseType: !945, size: 64, align: 64, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !942, file: !14, line: 3507, baseType: !945, size: 64, align: 64, offset: 768)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !942, file: !14, line: 3516, baseType: !909, size: 32, align: 32, offset: 832)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !942, file: !14, line: 3517, baseType: !1028, size: 64, align: 64, offset: 896)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64, align: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !942, file: !14, line: 3527, baseType: !1030, size: 64, align: 64, offset: 960)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64, align: 64)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!909, !1033}
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64, align: 64)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !14, line: 3360, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !14, line: 1556, size: 8448, align: 64, elements: !1036)
!1036 = !{!1037, !1038, !1039, !1040, !1043, !1044, !1045, !1046, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1328, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1517, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1035, file: !14, line: 1561, baseType: !977, size: 64, align: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1035, file: !14, line: 1562, baseType: !909, size: 32, align: 32, offset: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1035, file: !14, line: 1564, baseType: !3, size: 32, align: 32, offset: 96)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1035, file: !14, line: 1565, baseType: !1041, size: 64, align: 64, offset: 128)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64, align: 64)
!1042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !942)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1035, file: !14, line: 1566, baseType: !13, size: 32, align: 32, offset: 192)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1035, file: !14, line: 1581, baseType: !910, size: 32, align: 32, offset: 224)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1035, file: !14, line: 1583, baseType: !930, size: 64, align: 64, offset: 256)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1035, file: !14, line: 1591, baseType: !1047, size: 64, align: 64, offset: 320)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64, align: 64)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1049, line: 129, size: 1664, align: 64, elements: !1050)
!1049 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1050 = !{!1051, !1052, !1053, !1054, !1154, !1175, !1176, !1205, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1048, file: !1049, line: 136, baseType: !909, size: 32, align: 32)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1048, file: !1049, line: 151, baseType: !909, size: 32, align: 32, offset: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1048, file: !1049, line: 157, baseType: !909, size: 32, align: 32, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1048, file: !1049, line: 159, baseType: !1055, size: 64, align: 64, offset: 128)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !722, line: 646, baseType: !1057)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !722, line: 268, size: 4288, align: 64, elements: !1058)
!1058 = !{!1059, !1064, !1066, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1106, !1108, !1109, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1142, !1143, !1144, !1145, !1146, !1147, !1150, !1151, !1152, !1153}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1057, file: !722, line: 282, baseType: !1060, size: 512, align: 64)
!1060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1061, size: 512, align: 64, elements: !1062)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64, align: 64)
!1062 = !{!1063}
!1063 = !DISubrange(count: 8)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1057, file: !722, line: 299, baseType: !1065, size: 256, align: 32, offset: 512)
!1065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !909, size: 256, align: 32, elements: !1062)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1057, file: !722, line: 315, baseType: !1067, size: 64, align: 64, offset: 768)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64, align: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1057, file: !722, line: 326, baseType: !909, size: 32, align: 32, offset: 832)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1057, file: !722, line: 326, baseType: !909, size: 32, align: 32, offset: 864)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1057, file: !722, line: 334, baseType: !909, size: 32, align: 32, offset: 896)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1057, file: !722, line: 341, baseType: !909, size: 32, align: 32, offset: 928)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1057, file: !722, line: 346, baseType: !909, size: 32, align: 32, offset: 960)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1057, file: !722, line: 351, baseType: !711, size: 32, align: 32, offset: 992)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1057, file: !722, line: 356, baseType: !955, size: 64, align: 32, offset: 1024)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1057, file: !722, line: 361, baseType: !1076, size: 64, align: 64, offset: 1088)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !927, line: 40, baseType: !1077)
!1077 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1057, file: !722, line: 369, baseType: !1076, size: 64, align: 64, offset: 1152)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1057, file: !722, line: 377, baseType: !1076, size: 64, align: 64, offset: 1216)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1057, file: !722, line: 382, baseType: !909, size: 32, align: 32, offset: 1280)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1057, file: !722, line: 386, baseType: !909, size: 32, align: 32, offset: 1312)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1057, file: !722, line: 391, baseType: !909, size: 32, align: 32, offset: 1344)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1057, file: !722, line: 396, baseType: !930, size: 64, align: 64, offset: 1408)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1057, file: !722, line: 403, baseType: !1085, size: 512, align: 64, offset: 1472)
!1085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !973, size: 512, align: 64, elements: !1062)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1057, file: !722, line: 410, baseType: !909, size: 32, align: 32, offset: 1984)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1057, file: !722, line: 415, baseType: !909, size: 32, align: 32, offset: 2016)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1057, file: !722, line: 420, baseType: !909, size: 32, align: 32, offset: 2048)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1057, file: !722, line: 425, baseType: !909, size: 32, align: 32, offset: 2080)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1057, file: !722, line: 435, baseType: !1076, size: 64, align: 64, offset: 2112)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1057, file: !722, line: 440, baseType: !909, size: 32, align: 32, offset: 2176)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1057, file: !722, line: 445, baseType: !973, size: 64, align: 64, offset: 2240)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1057, file: !722, line: 459, baseType: !1094, size: 512, align: 64, offset: 2304)
!1094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1095, size: 512, align: 64, elements: !1062)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64, align: 64)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1097, line: 94, baseType: !1098)
!1097 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1097, line: 81, size: 192, align: 64, elements: !1099)
!1099 = !{!1100, !1104, !1105}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1098, file: !1097, line: 82, baseType: !1101, size: 64, align: 64)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64, align: 64)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1097, line: 73, baseType: !1103)
!1103 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1097, line: 73, flags: DIFlagFwdDecl)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1098, file: !1097, line: 89, baseType: !1061, size: 64, align: 64, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1098, file: !1097, line: 93, baseType: !909, size: 32, align: 32, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1057, file: !722, line: 473, baseType: !1107, size: 64, align: 64, offset: 2816)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64, align: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1057, file: !722, line: 477, baseType: !909, size: 32, align: 32, offset: 2880)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1057, file: !722, line: 479, baseType: !1110, size: 64, align: 64, offset: 2944)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64, align: 64)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64, align: 64)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !722, line: 207, baseType: !1113)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !722, line: 201, size: 320, align: 64, elements: !1114)
!1114 = !{!1115, !1116, !1117, !1118, !1123}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1113, file: !722, line: 202, baseType: !721, size: 32, align: 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1113, file: !722, line: 203, baseType: !1061, size: 64, align: 64, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1113, file: !722, line: 204, baseType: !909, size: 32, align: 32, offset: 128)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1113, file: !722, line: 205, baseType: !1119, size: 64, align: 64, offset: 192)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64, align: 64)
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1121, line: 86, baseType: !1122)
!1121 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1122 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1121, line: 86, flags: DIFlagFwdDecl)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1113, file: !722, line: 206, baseType: !1095, size: 64, align: 64, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1057, file: !722, line: 480, baseType: !909, size: 32, align: 32, offset: 3008)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1057, file: !722, line: 505, baseType: !909, size: 32, align: 32, offset: 3040)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1057, file: !722, line: 512, baseType: !745, size: 32, align: 32, offset: 3072)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1057, file: !722, line: 514, baseType: !751, size: 32, align: 32, offset: 3104)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1057, file: !722, line: 516, baseType: !769, size: 32, align: 32, offset: 3136)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1057, file: !722, line: 523, baseType: !793, size: 32, align: 32, offset: 3168)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1057, file: !722, line: 525, baseType: !812, size: 32, align: 32, offset: 3200)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1057, file: !722, line: 532, baseType: !1076, size: 64, align: 64, offset: 3264)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1057, file: !722, line: 539, baseType: !1076, size: 64, align: 64, offset: 3328)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1057, file: !722, line: 547, baseType: !1076, size: 64, align: 64, offset: 3392)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1057, file: !722, line: 554, baseType: !1119, size: 64, align: 64, offset: 3456)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1057, file: !722, line: 563, baseType: !909, size: 32, align: 32, offset: 3520)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1057, file: !722, line: 572, baseType: !909, size: 32, align: 32, offset: 3552)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1057, file: !722, line: 581, baseType: !909, size: 32, align: 32, offset: 3584)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1057, file: !722, line: 588, baseType: !1139, size: 64, align: 64, offset: 3648)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !927, line: 36, baseType: !1141)
!1141 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1057, file: !722, line: 593, baseType: !909, size: 32, align: 32, offset: 3712)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1057, file: !722, line: 596, baseType: !909, size: 32, align: 32, offset: 3744)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1057, file: !722, line: 599, baseType: !1095, size: 64, align: 64, offset: 3776)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1057, file: !722, line: 605, baseType: !1095, size: 64, align: 64, offset: 3840)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1057, file: !722, line: 616, baseType: !1095, size: 64, align: 64, offset: 3904)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1057, file: !722, line: 626, baseType: !1148, size: 64, align: 64, offset: 3968)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1149, line: 216, baseType: !974)
!1149 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1057, file: !722, line: 627, baseType: !1148, size: 64, align: 64, offset: 4032)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1057, file: !722, line: 628, baseType: !1148, size: 64, align: 64, offset: 4096)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1057, file: !722, line: 629, baseType: !1148, size: 64, align: 64, offset: 4160)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1057, file: !722, line: 645, baseType: !1095, size: 64, align: 64, offset: 4224)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1048, file: !1049, line: 161, baseType: !1155, size: 64, align: 64, offset: 192)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64, align: 64)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1049, line: 117, baseType: !1157)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1049, line: 100, size: 832, align: 64, elements: !1158)
!1158 = !{!1159, !1166, !1167, !1168, !1169, !1170, !1172, !1173, !1174}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1157, file: !1049, line: 105, baseType: !1160, size: 256, align: 64)
!1160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1161, size: 256, align: 64, elements: !1164)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64, align: 64)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1097, line: 238, baseType: !1163)
!1163 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1097, line: 238, flags: DIFlagFwdDecl)
!1164 = !{!1165}
!1165 = !DISubrange(count: 4)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1157, file: !1049, line: 110, baseType: !909, size: 32, align: 32, offset: 256)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1157, file: !1049, line: 111, baseType: !909, size: 32, align: 32, offset: 288)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1157, file: !1049, line: 111, baseType: !909, size: 32, align: 32, offset: 320)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1157, file: !1049, line: 112, baseType: !1065, size: 256, align: 32, offset: 352)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1157, file: !1049, line: 113, baseType: !1171, size: 128, align: 32, offset: 608)
!1171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !909, size: 128, align: 32, elements: !1164)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1157, file: !1049, line: 114, baseType: !909, size: 32, align: 32, offset: 736)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1157, file: !1049, line: 115, baseType: !909, size: 32, align: 32, offset: 768)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1157, file: !1049, line: 116, baseType: !909, size: 32, align: 32, offset: 800)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1048, file: !1049, line: 163, baseType: !930, size: 64, align: 64, offset: 256)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1048, file: !1049, line: 165, baseType: !1177, size: 128, align: 64, offset: 320)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1049, line: 122, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1049, line: 119, size: 128, align: 64, elements: !1179)
!1179 = !{!1180, !1204}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1178, file: !1049, line: 120, baseType: !1181, size: 64, align: 64)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64, align: 64)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !14, line: 1499, baseType: !1183)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !14, line: 1445, size: 704, align: 64, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1200, !1201, !1202, !1203}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1183, file: !14, line: 1451, baseType: !1095, size: 64, align: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1183, file: !14, line: 1461, baseType: !1076, size: 64, align: 64, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1183, file: !14, line: 1467, baseType: !1076, size: 64, align: 64, offset: 128)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1183, file: !14, line: 1468, baseType: !1061, size: 64, align: 64, offset: 192)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1183, file: !14, line: 1469, baseType: !909, size: 32, align: 32, offset: 256)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1183, file: !14, line: 1470, baseType: !909, size: 32, align: 32, offset: 288)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1183, file: !14, line: 1474, baseType: !909, size: 32, align: 32, offset: 320)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1183, file: !14, line: 1479, baseType: !1193, size: 64, align: 64, offset: 384)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64, align: 64)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !14, line: 1415, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !14, line: 1411, size: 128, align: 64, elements: !1196)
!1196 = !{!1197, !1198, !1199}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1195, file: !14, line: 1412, baseType: !1061, size: 64, align: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1195, file: !14, line: 1413, baseType: !909, size: 32, align: 32, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1195, file: !14, line: 1414, baseType: !822, size: 32, align: 32, offset: 96)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1183, file: !14, line: 1480, baseType: !909, size: 32, align: 32, offset: 448)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1183, file: !14, line: 1486, baseType: !1076, size: 64, align: 64, offset: 512)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1183, file: !14, line: 1488, baseType: !1076, size: 64, align: 64, offset: 576)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1183, file: !14, line: 1497, baseType: !1076, size: 64, align: 64, offset: 640)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1178, file: !1049, line: 121, baseType: !1055, size: 64, align: 64, offset: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1048, file: !1049, line: 166, baseType: !1206, size: 128, align: 64, offset: 448)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1049, line: 127, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1049, line: 124, size: 128, align: 64, elements: !1208)
!1208 = !{!1209, !1282}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1207, file: !1049, line: 125, baseType: !1210, size: 64, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64, align: 64)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64, align: 64)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !14, line: 5794, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !14, line: 5747, size: 512, align: 64, elements: !1214)
!1214 = !{!1215, !1216, !1240, !1244, !1245, !1279, !1280, !1281}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1213, file: !14, line: 5751, baseType: !977, size: 64, align: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1213, file: !14, line: 5756, baseType: !1217, size: 64, align: 64, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64, align: 64)
!1218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1219)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !14, line: 5796, size: 512, align: 64, elements: !1220)
!1220 = !{!1221, !1222, !1225, !1226, !1227, !1231, !1235, !1239}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1219, file: !14, line: 5797, baseType: !945, size: 64, align: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1219, file: !14, line: 5804, baseType: !1223, size: 64, align: 64, offset: 64)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64, align: 64)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1219, file: !14, line: 5815, baseType: !977, size: 64, align: 64, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1219, file: !14, line: 5825, baseType: !909, size: 32, align: 32, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1219, file: !14, line: 5826, baseType: !1228, size: 64, align: 64, offset: 256)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64, align: 64)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!909, !1211}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1219, file: !14, line: 5827, baseType: !1232, size: 64, align: 64, offset: 320)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64, align: 64)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!909, !1211, !1181}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1219, file: !14, line: 5828, baseType: !1236, size: 64, align: 64, offset: 384)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64, align: 64)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{null, !1211}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1219, file: !14, line: 5829, baseType: !1236, size: 64, align: 64, offset: 448)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1213, file: !14, line: 5762, baseType: !1241, size: 64, align: 64, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64, align: 64)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !14, line: 5735, baseType: !1243)
!1243 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !14, line: 5735, flags: DIFlagFwdDecl)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1213, file: !14, line: 5768, baseType: !930, size: 64, align: 64, offset: 192)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1213, file: !14, line: 5775, baseType: !1246, size: 64, align: 64, offset: 256)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64, align: 64)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !14, line: 4085, baseType: !1248)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !14, line: 3936, size: 1152, align: 64, elements: !1249)
!1249 = !{!1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1248, file: !14, line: 3940, baseType: !3, size: 32, align: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1248, file: !14, line: 3944, baseType: !13, size: 32, align: 32, offset: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1248, file: !14, line: 3948, baseType: !926, size: 32, align: 32, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1248, file: !14, line: 3958, baseType: !1061, size: 64, align: 64, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1248, file: !14, line: 3962, baseType: !909, size: 32, align: 32, offset: 192)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1248, file: !14, line: 3968, baseType: !909, size: 32, align: 32, offset: 224)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1248, file: !14, line: 3973, baseType: !1076, size: 64, align: 64, offset: 256)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1248, file: !14, line: 3986, baseType: !909, size: 32, align: 32, offset: 320)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1248, file: !14, line: 3999, baseType: !909, size: 32, align: 32, offset: 352)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1248, file: !14, line: 4004, baseType: !909, size: 32, align: 32, offset: 384)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1248, file: !14, line: 4005, baseType: !909, size: 32, align: 32, offset: 416)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1248, file: !14, line: 4010, baseType: !909, size: 32, align: 32, offset: 448)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1248, file: !14, line: 4011, baseType: !909, size: 32, align: 32, offset: 480)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1248, file: !14, line: 4020, baseType: !955, size: 64, align: 32, offset: 512)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1248, file: !14, line: 4025, baseType: !852, size: 32, align: 32, offset: 576)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1248, file: !14, line: 4030, baseType: !745, size: 32, align: 32, offset: 608)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1248, file: !14, line: 4031, baseType: !751, size: 32, align: 32, offset: 640)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1248, file: !14, line: 4032, baseType: !769, size: 32, align: 32, offset: 672)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1248, file: !14, line: 4033, baseType: !793, size: 32, align: 32, offset: 704)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1248, file: !14, line: 4034, baseType: !812, size: 32, align: 32, offset: 736)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1248, file: !14, line: 4039, baseType: !909, size: 32, align: 32, offset: 768)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1248, file: !14, line: 4046, baseType: !973, size: 64, align: 64, offset: 832)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1248, file: !14, line: 4050, baseType: !909, size: 32, align: 32, offset: 896)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1248, file: !14, line: 4054, baseType: !909, size: 32, align: 32, offset: 928)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1248, file: !14, line: 4061, baseType: !909, size: 32, align: 32, offset: 960)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1248, file: !14, line: 4065, baseType: !909, size: 32, align: 32, offset: 992)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1248, file: !14, line: 4073, baseType: !909, size: 32, align: 32, offset: 1024)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1248, file: !14, line: 4080, baseType: !909, size: 32, align: 32, offset: 1056)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1248, file: !14, line: 4084, baseType: !909, size: 32, align: 32, offset: 1088)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1213, file: !14, line: 5781, baseType: !1246, size: 64, align: 64, offset: 320)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1213, file: !14, line: 5787, baseType: !955, size: 64, align: 32, offset: 384)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1213, file: !14, line: 5793, baseType: !955, size: 64, align: 32, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1207, file: !1049, line: 126, baseType: !909, size: 32, align: 32, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1048, file: !1049, line: 172, baseType: !1181, size: 64, align: 64, offset: 576)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1048, file: !1049, line: 177, baseType: !1061, size: 64, align: 64, offset: 640)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1048, file: !1049, line: 178, baseType: !910, size: 32, align: 32, offset: 704)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1048, file: !1049, line: 180, baseType: !930, size: 64, align: 64, offset: 768)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1048, file: !1049, line: 185, baseType: !909, size: 32, align: 32, offset: 832)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1048, file: !1049, line: 190, baseType: !930, size: 64, align: 64, offset: 896)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1048, file: !1049, line: 195, baseType: !909, size: 32, align: 32, offset: 960)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1048, file: !1049, line: 200, baseType: !1181, size: 64, align: 64, offset: 1024)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1048, file: !1049, line: 201, baseType: !909, size: 32, align: 32, offset: 1088)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1048, file: !1049, line: 202, baseType: !1055, size: 64, align: 64, offset: 1152)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1048, file: !1049, line: 203, baseType: !909, size: 32, align: 32, offset: 1216)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1048, file: !1049, line: 205, baseType: !909, size: 32, align: 32, offset: 1248)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1048, file: !1049, line: 206, baseType: !909, size: 32, align: 32, offset: 1280)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1048, file: !1049, line: 209, baseType: !1148, size: 64, align: 64, offset: 1344)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1048, file: !1049, line: 212, baseType: !1148, size: 64, align: 64, offset: 1408)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1048, file: !1049, line: 213, baseType: !1055, size: 64, align: 64, offset: 1472)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1048, file: !1049, line: 215, baseType: !909, size: 32, align: 32, offset: 1536)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1048, file: !1049, line: 217, baseType: !909, size: 32, align: 32, offset: 1568)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1048, file: !1049, line: 220, baseType: !909, size: 32, align: 32, offset: 1600)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1035, file: !14, line: 1598, baseType: !930, size: 64, align: 64, offset: 384)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1035, file: !14, line: 1606, baseType: !1076, size: 64, align: 64, offset: 448)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1035, file: !14, line: 1614, baseType: !909, size: 32, align: 32, offset: 512)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1035, file: !14, line: 1622, baseType: !909, size: 32, align: 32, offset: 544)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1035, file: !14, line: 1628, baseType: !909, size: 32, align: 32, offset: 576)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1035, file: !14, line: 1636, baseType: !909, size: 32, align: 32, offset: 608)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1035, file: !14, line: 1643, baseType: !909, size: 32, align: 32, offset: 640)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1035, file: !14, line: 1657, baseType: !1061, size: 64, align: 64, offset: 704)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1035, file: !14, line: 1658, baseType: !909, size: 32, align: 32, offset: 768)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1035, file: !14, line: 1679, baseType: !955, size: 64, align: 32, offset: 800)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1035, file: !14, line: 1688, baseType: !909, size: 32, align: 32, offset: 864)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1035, file: !14, line: 1712, baseType: !909, size: 32, align: 32, offset: 896)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1035, file: !14, line: 1729, baseType: !909, size: 32, align: 32, offset: 928)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1035, file: !14, line: 1729, baseType: !909, size: 32, align: 32, offset: 960)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1035, file: !14, line: 1744, baseType: !909, size: 32, align: 32, offset: 992)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1035, file: !14, line: 1744, baseType: !909, size: 32, align: 32, offset: 1024)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1035, file: !14, line: 1751, baseType: !909, size: 32, align: 32, offset: 1056)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1035, file: !14, line: 1766, baseType: !473, size: 32, align: 32, offset: 1088)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1035, file: !14, line: 1791, baseType: !1321, size: 64, align: 64, offset: 1152)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64, align: 64)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{null, !1324, !1325, !1327, !909, !909, !909}
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64, align: 64)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64, align: 64)
!1326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1056)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64, align: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1035, file: !14, line: 1808, baseType: !1329, size: 64, align: 64, offset: 1216)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64, align: 64)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!473, !1324, !962}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1035, file: !14, line: 1816, baseType: !909, size: 32, align: 32, offset: 1280)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1035, file: !14, line: 1825, baseType: !918, size: 32, align: 32, offset: 1312)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1035, file: !14, line: 1830, baseType: !909, size: 32, align: 32, offset: 1344)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1035, file: !14, line: 1838, baseType: !918, size: 32, align: 32, offset: 1376)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1035, file: !14, line: 1846, baseType: !909, size: 32, align: 32, offset: 1408)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1035, file: !14, line: 1851, baseType: !909, size: 32, align: 32, offset: 1440)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1035, file: !14, line: 1861, baseType: !918, size: 32, align: 32, offset: 1472)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1035, file: !14, line: 1868, baseType: !918, size: 32, align: 32, offset: 1504)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1035, file: !14, line: 1875, baseType: !918, size: 32, align: 32, offset: 1536)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1035, file: !14, line: 1882, baseType: !918, size: 32, align: 32, offset: 1568)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1035, file: !14, line: 1889, baseType: !918, size: 32, align: 32, offset: 1600)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1035, file: !14, line: 1896, baseType: !918, size: 32, align: 32, offset: 1632)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1035, file: !14, line: 1903, baseType: !918, size: 32, align: 32, offset: 1664)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1035, file: !14, line: 1910, baseType: !909, size: 32, align: 32, offset: 1696)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1035, file: !14, line: 1915, baseType: !909, size: 32, align: 32, offset: 1728)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1035, file: !14, line: 1926, baseType: !1327, size: 64, align: 64, offset: 1792)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1035, file: !14, line: 1935, baseType: !955, size: 64, align: 32, offset: 1856)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1035, file: !14, line: 1942, baseType: !909, size: 32, align: 32, offset: 1920)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1035, file: !14, line: 1948, baseType: !909, size: 32, align: 32, offset: 1952)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1035, file: !14, line: 1954, baseType: !909, size: 32, align: 32, offset: 1984)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1035, file: !14, line: 1960, baseType: !909, size: 32, align: 32, offset: 2016)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1035, file: !14, line: 1984, baseType: !909, size: 32, align: 32, offset: 2048)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1035, file: !14, line: 1991, baseType: !909, size: 32, align: 32, offset: 2080)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1035, file: !14, line: 1996, baseType: !909, size: 32, align: 32, offset: 2112)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1035, file: !14, line: 2004, baseType: !909, size: 32, align: 32, offset: 2144)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1035, file: !14, line: 2011, baseType: !909, size: 32, align: 32, offset: 2176)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1035, file: !14, line: 2018, baseType: !909, size: 32, align: 32, offset: 2208)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1035, file: !14, line: 2027, baseType: !909, size: 32, align: 32, offset: 2240)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1035, file: !14, line: 2034, baseType: !909, size: 32, align: 32, offset: 2272)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1035, file: !14, line: 2044, baseType: !909, size: 32, align: 32, offset: 2304)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1035, file: !14, line: 2054, baseType: !1363, size: 64, align: 64, offset: 2368)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64, align: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1035, file: !14, line: 2061, baseType: !1363, size: 64, align: 64, offset: 2432)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1035, file: !14, line: 2066, baseType: !909, size: 32, align: 32, offset: 2496)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1035, file: !14, line: 2070, baseType: !909, size: 32, align: 32, offset: 2528)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1035, file: !14, line: 2078, baseType: !909, size: 32, align: 32, offset: 2560)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1035, file: !14, line: 2085, baseType: !909, size: 32, align: 32, offset: 2592)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1035, file: !14, line: 2092, baseType: !909, size: 32, align: 32, offset: 2624)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1035, file: !14, line: 2099, baseType: !909, size: 32, align: 32, offset: 2656)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1035, file: !14, line: 2106, baseType: !909, size: 32, align: 32, offset: 2688)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1035, file: !14, line: 2113, baseType: !909, size: 32, align: 32, offset: 2720)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1035, file: !14, line: 2120, baseType: !909, size: 32, align: 32, offset: 2752)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1035, file: !14, line: 2125, baseType: !909, size: 32, align: 32, offset: 2784)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1035, file: !14, line: 2133, baseType: !909, size: 32, align: 32, offset: 2816)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1035, file: !14, line: 2140, baseType: !909, size: 32, align: 32, offset: 2848)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1035, file: !14, line: 2145, baseType: !909, size: 32, align: 32, offset: 2880)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1035, file: !14, line: 2153, baseType: !909, size: 32, align: 32, offset: 2912)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1035, file: !14, line: 2158, baseType: !909, size: 32, align: 32, offset: 2944)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1035, file: !14, line: 2166, baseType: !751, size: 32, align: 32, offset: 2976)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1035, file: !14, line: 2173, baseType: !769, size: 32, align: 32, offset: 3008)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1035, file: !14, line: 2180, baseType: !793, size: 32, align: 32, offset: 3040)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1035, file: !14, line: 2187, baseType: !745, size: 32, align: 32, offset: 3072)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1035, file: !14, line: 2194, baseType: !812, size: 32, align: 32, offset: 3104)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1035, file: !14, line: 2203, baseType: !909, size: 32, align: 32, offset: 3136)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1035, file: !14, line: 2209, baseType: !852, size: 32, align: 32, offset: 3168)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1035, file: !14, line: 2212, baseType: !909, size: 32, align: 32, offset: 3200)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1035, file: !14, line: 2213, baseType: !909, size: 32, align: 32, offset: 3232)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1035, file: !14, line: 2220, baseType: !673, size: 32, align: 32, offset: 3264)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1035, file: !14, line: 2232, baseType: !909, size: 32, align: 32, offset: 3296)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1035, file: !14, line: 2243, baseType: !909, size: 32, align: 32, offset: 3328)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1035, file: !14, line: 2249, baseType: !909, size: 32, align: 32, offset: 3360)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1035, file: !14, line: 2256, baseType: !909, size: 32, align: 32, offset: 3392)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1035, file: !14, line: 2263, baseType: !973, size: 64, align: 64, offset: 3456)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1035, file: !14, line: 2270, baseType: !973, size: 64, align: 64, offset: 3520)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1035, file: !14, line: 2277, baseType: !860, size: 32, align: 32, offset: 3584)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1035, file: !14, line: 2285, baseType: !673, size: 32, align: 32, offset: 3616)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1035, file: !14, line: 2367, baseType: !1399, size: 64, align: 64, offset: 3648)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64, align: 64)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{!909, !1324, !1055, !909}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1035, file: !14, line: 2383, baseType: !909, size: 32, align: 32, offset: 3712)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1035, file: !14, line: 2386, baseType: !918, size: 32, align: 32, offset: 3744)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1035, file: !14, line: 2387, baseType: !918, size: 32, align: 32, offset: 3776)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1035, file: !14, line: 2394, baseType: !909, size: 32, align: 32, offset: 3808)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1035, file: !14, line: 2401, baseType: !909, size: 32, align: 32, offset: 3840)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1035, file: !14, line: 2408, baseType: !909, size: 32, align: 32, offset: 3872)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1035, file: !14, line: 2415, baseType: !909, size: 32, align: 32, offset: 3904)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1035, file: !14, line: 2422, baseType: !909, size: 32, align: 32, offset: 3936)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1035, file: !14, line: 2423, baseType: !1411, size: 64, align: 64, offset: 3968)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64, align: 64)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !14, line: 831, baseType: !1413)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !14, line: 826, size: 128, align: 32, elements: !1414)
!1414 = !{!1415, !1416, !1417, !1418}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1413, file: !14, line: 827, baseType: !909, size: 32, align: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1413, file: !14, line: 828, baseType: !909, size: 32, align: 32, offset: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1413, file: !14, line: 829, baseType: !909, size: 32, align: 32, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1413, file: !14, line: 830, baseType: !918, size: 32, align: 32, offset: 96)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1035, file: !14, line: 2430, baseType: !1076, size: 64, align: 64, offset: 4032)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1035, file: !14, line: 2437, baseType: !1076, size: 64, align: 64, offset: 4096)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1035, file: !14, line: 2444, baseType: !918, size: 32, align: 32, offset: 4160)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1035, file: !14, line: 2451, baseType: !918, size: 32, align: 32, offset: 4192)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1035, file: !14, line: 2458, baseType: !909, size: 32, align: 32, offset: 4224)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1035, file: !14, line: 2469, baseType: !909, size: 32, align: 32, offset: 4256)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1035, file: !14, line: 2475, baseType: !909, size: 32, align: 32, offset: 4288)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1035, file: !14, line: 2481, baseType: !909, size: 32, align: 32, offset: 4320)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1035, file: !14, line: 2485, baseType: !909, size: 32, align: 32, offset: 4352)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1035, file: !14, line: 2489, baseType: !909, size: 32, align: 32, offset: 4384)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1035, file: !14, line: 2493, baseType: !909, size: 32, align: 32, offset: 4416)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1035, file: !14, line: 2501, baseType: !909, size: 32, align: 32, offset: 4448)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1035, file: !14, line: 2506, baseType: !909, size: 32, align: 32, offset: 4480)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1035, file: !14, line: 2510, baseType: !909, size: 32, align: 32, offset: 4512)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1035, file: !14, line: 2514, baseType: !1076, size: 64, align: 64, offset: 4544)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1035, file: !14, line: 2528, baseType: !1435, size: 64, align: 64, offset: 4608)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64, align: 64)
!1436 = !DISubroutineType(types: !1437)
!1437 = !{null, !1324, !930, !909, !909}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1035, file: !14, line: 2534, baseType: !909, size: 32, align: 32, offset: 4672)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1035, file: !14, line: 2545, baseType: !909, size: 32, align: 32, offset: 4704)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1035, file: !14, line: 2547, baseType: !909, size: 32, align: 32, offset: 4736)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1035, file: !14, line: 2549, baseType: !909, size: 32, align: 32, offset: 4768)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1035, file: !14, line: 2551, baseType: !909, size: 32, align: 32, offset: 4800)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1035, file: !14, line: 2553, baseType: !909, size: 32, align: 32, offset: 4832)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1035, file: !14, line: 2555, baseType: !909, size: 32, align: 32, offset: 4864)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1035, file: !14, line: 2557, baseType: !909, size: 32, align: 32, offset: 4896)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1035, file: !14, line: 2559, baseType: !909, size: 32, align: 32, offset: 4928)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1035, file: !14, line: 2563, baseType: !909, size: 32, align: 32, offset: 4960)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1035, file: !14, line: 2571, baseType: !1449, size: 64, align: 64, offset: 4992)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64, align: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1035, file: !14, line: 2579, baseType: !1449, size: 64, align: 64, offset: 5056)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1035, file: !14, line: 2586, baseType: !909, size: 32, align: 32, offset: 5120)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1035, file: !14, line: 2615, baseType: !909, size: 32, align: 32, offset: 5152)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1035, file: !14, line: 2627, baseType: !909, size: 32, align: 32, offset: 5184)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1035, file: !14, line: 2637, baseType: !909, size: 32, align: 32, offset: 5216)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1035, file: !14, line: 2681, baseType: !909, size: 32, align: 32, offset: 5248)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1035, file: !14, line: 2709, baseType: !1076, size: 64, align: 64, offset: 5312)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1035, file: !14, line: 2716, baseType: !1458, size: 64, align: 64, offset: 5376)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64, align: 64)
!1459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !14, line: 3636, size: 896, align: 64, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465, !1466, !1467, !1471, !1477, !1481, !1482, !1483, !1484, !1490, !1491, !1492, !1493, !1494}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1460, file: !14, line: 3642, baseType: !945, size: 64, align: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1460, file: !14, line: 3649, baseType: !3, size: 32, align: 32, offset: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1460, file: !14, line: 3656, baseType: !13, size: 32, align: 32, offset: 96)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1460, file: !14, line: 3663, baseType: !473, size: 32, align: 32, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1460, file: !14, line: 3669, baseType: !909, size: 32, align: 32, offset: 160)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1460, file: !14, line: 3682, baseType: !1468, size: 64, align: 64, offset: 192)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64, align: 64)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!909, !1033, !1055}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1460, file: !14, line: 3698, baseType: !1472, size: 64, align: 64, offset: 256)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64, align: 64)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!909, !1033, !1475, !926}
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64, align: 64)
!1476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !928)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1460, file: !14, line: 3712, baseType: !1478, size: 64, align: 64, offset: 320)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64, align: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!909, !1033, !909, !1475, !926}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1460, file: !14, line: 3726, baseType: !1472, size: 64, align: 64, offset: 384)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1460, file: !14, line: 3737, baseType: !1030, size: 64, align: 64, offset: 448)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1460, file: !14, line: 3746, baseType: !909, size: 32, align: 32, offset: 512)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1460, file: !14, line: 3757, baseType: !1485, size: 64, align: 64, offset: 576)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64, align: 64)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{null, !1488}
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64, align: 64)
!1489 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !14, line: 3617, flags: DIFlagFwdDecl)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1460, file: !14, line: 3766, baseType: !1030, size: 64, align: 64, offset: 640)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1460, file: !14, line: 3774, baseType: !1030, size: 64, align: 64, offset: 704)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1460, file: !14, line: 3780, baseType: !909, size: 32, align: 32, offset: 768)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1460, file: !14, line: 3785, baseType: !909, size: 32, align: 32, offset: 800)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1460, file: !14, line: 3795, baseType: !1495, size: 64, align: 64, offset: 832)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64, align: 64)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!909, !1033, !1095}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1035, file: !14, line: 2728, baseType: !930, size: 64, align: 64, offset: 5440)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1035, file: !14, line: 2735, baseType: !1085, size: 512, align: 64, offset: 5504)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1035, file: !14, line: 2742, baseType: !909, size: 32, align: 32, offset: 6016)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1035, file: !14, line: 2755, baseType: !909, size: 32, align: 32, offset: 6048)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1035, file: !14, line: 2776, baseType: !909, size: 32, align: 32, offset: 6080)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1035, file: !14, line: 2783, baseType: !909, size: 32, align: 32, offset: 6112)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1035, file: !14, line: 2791, baseType: !909, size: 32, align: 32, offset: 6144)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1035, file: !14, line: 2802, baseType: !1055, size: 64, align: 64, offset: 6208)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1035, file: !14, line: 2811, baseType: !909, size: 32, align: 32, offset: 6272)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1035, file: !14, line: 2821, baseType: !909, size: 32, align: 32, offset: 6304)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1035, file: !14, line: 2830, baseType: !909, size: 32, align: 32, offset: 6336)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1035, file: !14, line: 2840, baseType: !909, size: 32, align: 32, offset: 6368)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1035, file: !14, line: 2851, baseType: !1511, size: 64, align: 64, offset: 6400)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64, align: 64)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!909, !1324, !1514, !930, !1327, !909, !909}
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64, align: 64)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!909, !1324, !930}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1035, file: !14, line: 2871, baseType: !1518, size: 64, align: 64, offset: 6464)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64, align: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!909, !1324, !1521, !930, !1327, !909}
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64, align: 64)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!909, !1324, !930, !909, !909}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1035, file: !14, line: 2878, baseType: !909, size: 32, align: 32, offset: 6528)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1035, file: !14, line: 2885, baseType: !909, size: 32, align: 32, offset: 6560)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1035, file: !14, line: 3005, baseType: !909, size: 32, align: 32, offset: 6592)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1035, file: !14, line: 3013, baseType: !872, size: 32, align: 32, offset: 6624)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1035, file: !14, line: 3020, baseType: !872, size: 32, align: 32, offset: 6656)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1035, file: !14, line: 3027, baseType: !872, size: 32, align: 32, offset: 6688)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1035, file: !14, line: 3037, baseType: !1061, size: 64, align: 64, offset: 6720)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1035, file: !14, line: 3038, baseType: !909, size: 32, align: 32, offset: 6784)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1035, file: !14, line: 3050, baseType: !973, size: 64, align: 64, offset: 6848)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1035, file: !14, line: 3065, baseType: !909, size: 32, align: 32, offset: 6912)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1035, file: !14, line: 3083, baseType: !909, size: 32, align: 32, offset: 6944)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1035, file: !14, line: 3092, baseType: !955, size: 64, align: 32, offset: 6976)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1035, file: !14, line: 3099, baseType: !473, size: 32, align: 32, offset: 7040)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1035, file: !14, line: 3106, baseType: !955, size: 64, align: 32, offset: 7072)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1035, file: !14, line: 3113, baseType: !1539, size: 64, align: 64, offset: 7168)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64, align: 64)
!1540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1541)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !14, line: 740, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !14, line: 712, size: 384, align: 64, elements: !1543)
!1543 = !{!1544, !1545, !1546, !1547, !1548, !1549, !1552}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1542, file: !14, line: 713, baseType: !13, size: 32, align: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1542, file: !14, line: 714, baseType: !3, size: 32, align: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1542, file: !14, line: 720, baseType: !945, size: 64, align: 64, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1542, file: !14, line: 724, baseType: !945, size: 64, align: 64, offset: 128)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1542, file: !14, line: 728, baseType: !909, size: 32, align: 32, offset: 192)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1542, file: !14, line: 734, baseType: !1550, size: 64, align: 64, offset: 256)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64, align: 64)
!1551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1542, file: !14, line: 739, baseType: !1553, size: 64, align: 64, offset: 320)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64, align: 64)
!1554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1021)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1035, file: !14, line: 3129, baseType: !1076, size: 64, align: 64, offset: 7232)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1035, file: !14, line: 3130, baseType: !1076, size: 64, align: 64, offset: 7296)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1035, file: !14, line: 3131, baseType: !1076, size: 64, align: 64, offset: 7360)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1035, file: !14, line: 3132, baseType: !1076, size: 64, align: 64, offset: 7424)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1035, file: !14, line: 3139, baseType: !1449, size: 64, align: 64, offset: 7488)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1035, file: !14, line: 3147, baseType: !909, size: 32, align: 32, offset: 7552)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1035, file: !14, line: 3165, baseType: !909, size: 32, align: 32, offset: 7584)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1035, file: !14, line: 3172, baseType: !909, size: 32, align: 32, offset: 7616)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1035, file: !14, line: 3180, baseType: !909, size: 32, align: 32, offset: 7648)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1035, file: !14, line: 3191, baseType: !1363, size: 64, align: 64, offset: 7680)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1035, file: !14, line: 3199, baseType: !1061, size: 64, align: 64, offset: 7744)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1035, file: !14, line: 3207, baseType: !1449, size: 64, align: 64, offset: 7808)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1035, file: !14, line: 3214, baseType: !910, size: 32, align: 32, offset: 7872)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1035, file: !14, line: 3224, baseType: !1193, size: 64, align: 64, offset: 7936)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1035, file: !14, line: 3225, baseType: !909, size: 32, align: 32, offset: 8000)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1035, file: !14, line: 3249, baseType: !1095, size: 64, align: 64, offset: 8064)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1035, file: !14, line: 3256, baseType: !909, size: 32, align: 32, offset: 8128)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1035, file: !14, line: 3271, baseType: !909, size: 32, align: 32, offset: 8160)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1035, file: !14, line: 3279, baseType: !1076, size: 64, align: 64, offset: 8192)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1035, file: !14, line: 3301, baseType: !1095, size: 64, align: 64, offset: 8256)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1035, file: !14, line: 3310, baseType: !909, size: 32, align: 32, offset: 8320)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1035, file: !14, line: 3337, baseType: !909, size: 32, align: 32, offset: 8352)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1035, file: !14, line: 3351, baseType: !909, size: 32, align: 32, offset: 8384)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1035, file: !14, line: 3359, baseType: !909, size: 32, align: 32, offset: 8416)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !942, file: !14, line: 3535, baseType: !1580, size: 64, align: 64, offset: 1024)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64, align: 64)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{!909, !1033, !1583}
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64, align: 64)
!1584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !942, file: !14, line: 3541, baseType: !1586, size: 64, align: 64, offset: 1088)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64, align: 64)
!1587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1588)
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !14, line: 3461, baseType: !1589)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1049, line: 223, size: 128, align: 64, elements: !1590)
!1590 = !{!1591, !1592}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1589, file: !1049, line: 224, baseType: !1475, size: 64, align: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1589, file: !1049, line: 225, baseType: !1475, size: 64, align: 64, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !942, file: !14, line: 3549, baseType: !1594, size: 64, align: 64, offset: 1152)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64, align: 64)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{null, !1028}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !942, file: !14, line: 3551, baseType: !1030, size: 64, align: 64, offset: 1216)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !942, file: !14, line: 3552, baseType: !1599, size: 64, align: 64, offset: 1280)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64, align: 64)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!909, !1033, !1061, !909, !1602}
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64, align: 64)
!1603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !14, line: 3920, size: 256, align: 64, elements: !1605)
!1605 = !{!1606, !1607, !1608, !1609, !1610, !1634}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1604, file: !14, line: 3921, baseType: !937, size: 16, align: 16)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1604, file: !14, line: 3922, baseType: !926, size: 32, align: 32, offset: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1604, file: !14, line: 3923, baseType: !926, size: 32, align: 32, offset: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1604, file: !14, line: 3924, baseType: !910, size: 32, align: 32, offset: 96)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1604, file: !14, line: 3925, baseType: !1611, size: 64, align: 64, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64, align: 64)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64, align: 64)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !14, line: 3918, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !14, line: 3885, size: 1600, align: 64, elements: !1615)
!1615 = !{!1616, !1617, !1618, !1619, !1620, !1621, !1627, !1629, !1630, !1631, !1632, !1633}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1614, file: !14, line: 3886, baseType: !909, size: 32, align: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1614, file: !14, line: 3887, baseType: !909, size: 32, align: 32, offset: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1614, file: !14, line: 3888, baseType: !909, size: 32, align: 32, offset: 64)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1614, file: !14, line: 3889, baseType: !909, size: 32, align: 32, offset: 96)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1614, file: !14, line: 3890, baseType: !909, size: 32, align: 32, offset: 128)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1614, file: !14, line: 3897, baseType: !1622, size: 768, align: 64, offset: 192)
!1622 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !14, line: 3858, baseType: !1623)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !14, line: 3853, size: 768, align: 64, elements: !1624)
!1624 = !{!1625, !1626}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1623, file: !14, line: 3855, baseType: !1060, size: 512, align: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1623, file: !14, line: 3857, baseType: !1065, size: 256, align: 32, offset: 512)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1614, file: !14, line: 3903, baseType: !1628, size: 256, align: 64, offset: 960)
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1061, size: 256, align: 64, elements: !1164)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1614, file: !14, line: 3904, baseType: !1171, size: 128, align: 32, offset: 1216)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1614, file: !14, line: 3906, baseType: !881, size: 32, align: 32, offset: 1344)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1614, file: !14, line: 3908, baseType: !1449, size: 64, align: 64, offset: 1408)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1614, file: !14, line: 3915, baseType: !1449, size: 64, align: 64, offset: 1472)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1614, file: !14, line: 3917, baseType: !909, size: 32, align: 32, offset: 1536)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1604, file: !14, line: 3926, baseType: !1076, size: 64, align: 64, offset: 192)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !942, file: !14, line: 3564, baseType: !1636, size: 64, align: 64, offset: 1344)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64, align: 64)
!1637 = !DISubroutineType(types: !1638)
!1638 = !{!909, !1033, !1181, !1325, !1327}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !942, file: !14, line: 3566, baseType: !1640, size: 64, align: 64, offset: 1408)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64, align: 64)
!1641 = !DISubroutineType(types: !1642)
!1642 = !{!909, !1033, !930, !1327, !1181}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !942, file: !14, line: 3567, baseType: !1030, size: 64, align: 64, offset: 1472)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !942, file: !14, line: 3576, baseType: !1645, size: 64, align: 64, offset: 1536)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64, align: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!909, !1033, !1325}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !942, file: !14, line: 3577, baseType: !1649, size: 64, align: 64, offset: 1600)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64, align: 64)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!909, !1033, !1181}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !942, file: !14, line: 3584, baseType: !1468, size: 64, align: 64, offset: 1664)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !942, file: !14, line: 3589, baseType: !1654, size: 64, align: 64, offset: 1728)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64, align: 64)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{null, !1033}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !942, file: !14, line: 3594, baseType: !909, size: 32, align: 32, offset: 1792)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !942, file: !14, line: 3600, baseType: !945, size: 64, align: 64, offset: 1856)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !942, file: !14, line: 3609, baseType: !1660, size: 64, align: 64, offset: 1920)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64, align: 64)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64, align: 64)
!1662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1663)
!1663 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !14, line: 3609, flags: DIFlagFwdDecl)
!1664 = !{i32 2, !"Dwarf Version", i32 4}
!1665 = !{i32 2, !"Debug Info Version", i32 3}
!1666 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!1667 = distinct !DISubprogram(name: "on2avc_decode_init", scope: !898, file: !898, line: 906, type: !1031, isLocal: true, isDefinition: true, scopeLine: 907, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!1668 = !{}
!1669 = !DILocalVariable(name: "x", arg: 1, scope: !1670, file: !1671, line: 42, type: !1674)
!1670 = distinct !DISubprogram(name: "ff_exp10", scope: !1671, file: !1671, line: 42, type: !1672, isLocal: true, isDefinition: true, scopeLine: 43, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!1671 = !DIFile(filename: "./libavutil/ffmath.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1672 = !DISubroutineType(types: !1673)
!1673 = !{!1674, !1674}
!1674 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1675 = !DIExpression()
!1676 = !DILocation(line: 42, column: 69, scope: !1670, inlinedAt: !1677)
!1677 = distinct !DILocation(line: 933, column: 32, scope: !1678)
!1678 = distinct !DILexicalBlock(scope: !1679, file: !898, line: 932, column: 5)
!1679 = distinct !DILexicalBlock(scope: !1667, file: !898, line: 932, column: 5)
!1680 = !DILocation(line: 42, column: 69, scope: !1670, inlinedAt: !1681)
!1681 = distinct !DILocation(line: 931, column: 32, scope: !1682)
!1682 = distinct !DILexicalBlock(scope: !1683, file: !898, line: 930, column: 5)
!1683 = distinct !DILexicalBlock(scope: !1667, file: !898, line: 930, column: 5)
!1684 = !DILocalVariable(name: "avctx", arg: 1, scope: !1667, file: !898, line: 906, type: !1033)
!1685 = !DILocation(line: 906, column: 69, scope: !1667)
!1686 = !DILocalVariable(name: "c", scope: !1667, file: !898, line: 908, type: !1687)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64, align: 64)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "On2AVCContext", file: !898, line: 86, baseType: !1689)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "On2AVCContext", file: !898, line: 47, size: 289792, align: 256, elements: !1690)
!1690 = !{!1691, !1692, !1736, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1784, !1785, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1807, !1808, !1810, !1811, !1812, !1814, !1829, !1833, !1837, !1841, !1842, !1846, !1849, !1850}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1689, file: !898, line: 48, baseType: !1033, size: 64, align: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1689, file: !898, line: 49, baseType: !1693, size: 64, align: 64, offset: 64)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64, align: 64)
!1694 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1695, line: 192, baseType: !1696)
!1695 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1695, line: 24, size: 704, align: 64, elements: !1697)
!1697 = !{!1698, !1704, !1708, !1715, !1716, !1717, !1721, !1722, !1723, !1728, !1732}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1696, file: !1695, line: 38, baseType: !1699, size: 64, align: 64)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64, align: 64)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{null, !931, !1702, !1702, !909}
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64, align: 64)
!1703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !918)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1696, file: !1695, line: 54, baseType: !1705, size: 64, align: 64, offset: 64)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64, align: 64)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{null, !931, !1702, !918, !909}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1696, file: !1695, line: 70, baseType: !1709, size: 64, align: 64, offset: 128)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64, align: 64)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{null, !1712, !1713, !1674, !909}
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 64, align: 64)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64, align: 64)
!1714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1674)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1696, file: !1695, line: 85, baseType: !1705, size: 64, align: 64, offset: 192)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1696, file: !1695, line: 100, baseType: !1709, size: 64, align: 64, offset: 256)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1696, file: !1695, line: 119, baseType: !1718, size: 64, align: 64, offset: 320)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64, align: 64)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{null, !931, !1702, !1702, !1702, !909}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1696, file: !1695, line: 137, baseType: !1718, size: 64, align: 64, offset: 384)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1696, file: !1695, line: 154, baseType: !1699, size: 64, align: 64, offset: 448)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1696, file: !1695, line: 164, baseType: !1724, size: 64, align: 64, offset: 512)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64, align: 64)
!1725 = !DISubroutineType(types: !1726)
!1726 = !{null, !1727, !1727, !909}
!1727 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !931)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1696, file: !1695, line: 175, baseType: !1729, size: 64, align: 64, offset: 576)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64, align: 64)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{!918, !1702, !1702, !909}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1696, file: !1695, line: 190, baseType: !1733, size: 64, align: 64, offset: 640)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64, align: 64)
!1734 = !DISubroutineType(types: !1735)
!1735 = !{null, !1712, !1713, !1713, !909}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !1689, file: !898, line: 50, baseType: !1737, size: 896, align: 64, offset: 128)
!1737 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !913, line: 41, baseType: !1738)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !888, line: 88, size: 896, align: 64, elements: !1739)
!1739 = !{!1740, !1741, !1742, !1743, !1744, !1745, !1746, !1748, !1749, !1754, !1755, !1761, !1762, !1763, !1769, !1770, !1771}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1738, file: !888, line: 89, baseType: !909, size: 32, align: 32)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1738, file: !888, line: 90, baseType: !909, size: 32, align: 32, offset: 32)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1738, file: !888, line: 91, baseType: !1363, size: 64, align: 64, offset: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1738, file: !888, line: 92, baseType: !911, size: 64, align: 64, offset: 128)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1738, file: !888, line: 93, baseType: !909, size: 32, align: 32, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1738, file: !888, line: 94, baseType: !909, size: 32, align: 32, offset: 224)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1738, file: !888, line: 96, baseType: !1747, size: 64, align: 64, offset: 256)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64, align: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1738, file: !888, line: 97, baseType: !1747, size: 64, align: 64, offset: 320)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1738, file: !888, line: 101, baseType: !1750, size: 64, align: 64, offset: 384)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64, align: 64)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{null, !1753, !911}
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64, align: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1738, file: !888, line: 106, baseType: !1750, size: 64, align: 64, offset: 448)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1738, file: !888, line: 107, baseType: !1756, size: 64, align: 64, offset: 512)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64, align: 64)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{null, !1753, !1747, !1759}
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64, align: 64)
!1760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1738, file: !888, line: 108, baseType: !1756, size: 64, align: 64, offset: 576)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1738, file: !888, line: 109, baseType: !1756, size: 64, align: 64, offset: 640)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1738, file: !888, line: 110, baseType: !1764, size: 64, align: 64, offset: 704)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64, align: 64)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{null, !1753, !1767, !1759}
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64, align: 64)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !888, line: 43, baseType: !918)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1738, file: !888, line: 111, baseType: !887, size: 32, align: 32, offset: 768)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1738, file: !888, line: 112, baseType: !893, size: 32, align: 32, offset: 800)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1738, file: !888, line: 113, baseType: !1772, size: 64, align: 64, offset: 832)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64, align: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_half", scope: !1689, file: !898, line: 50, baseType: !1737, size: 896, align: 64, offset: 1024)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_small", scope: !1689, file: !898, line: 50, baseType: !1737, size: 896, align: 64, offset: 1920)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "fft128", scope: !1689, file: !898, line: 51, baseType: !1737, size: 896, align: 64, offset: 2816)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "fft256", scope: !1689, file: !898, line: 51, baseType: !1737, size: 896, align: 64, offset: 3712)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "fft512", scope: !1689, file: !898, line: 51, baseType: !1737, size: 896, align: 64, offset: 4608)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "fft1024", scope: !1689, file: !898, line: 51, baseType: !1737, size: 896, align: 64, offset: 5504)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "wtf", scope: !1689, file: !898, line: 52, baseType: !1780, size: 64, align: 64, offset: 6400)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64, align: 64)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{null, !1783, !931, !931, !909}
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64, align: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "is_av500", scope: !1689, file: !898, line: 54, baseType: !909, size: 32, align: 32, offset: 6464)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "modes", scope: !1689, file: !898, line: 56, baseType: !1786, size: 64, align: 64, offset: 6528)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64, align: 64)
!1787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1788)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "On2AVCMode", file: !1789, line: 35, baseType: !1790)
!1789 = !DIFile(filename: "libavcodec/on2avcdata.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "On2AVCMode", file: !1789, line: 31, size: 128, align: 64, elements: !1791)
!1791 = !{!1792, !1793, !1794}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "num_windows", scope: !1790, file: !1789, line: 32, baseType: !909, size: 32, align: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "num_bands", scope: !1790, file: !1789, line: 33, baseType: !909, size: 32, align: 32, offset: 32)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "band_start", scope: !1790, file: !1789, line: 34, baseType: !965, size: 64, align: 64, offset: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "window_type", scope: !1689, file: !898, line: 57, baseType: !909, size: 32, align: 32, offset: 6592)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "prev_window_type", scope: !1689, file: !898, line: 57, baseType: !909, size: 32, align: 32, offset: 6624)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "num_windows", scope: !1689, file: !898, line: 58, baseType: !909, size: 32, align: 32, offset: 6656)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "num_bands", scope: !1689, file: !898, line: 58, baseType: !909, size: 32, align: 32, offset: 6688)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_section", scope: !1689, file: !898, line: 59, baseType: !909, size: 32, align: 32, offset: 6720)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "band_start", scope: !1689, file: !898, line: 60, baseType: !965, size: 64, align: 64, offset: 6784)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "grouping", scope: !1689, file: !898, line: 62, baseType: !1065, size: 256, align: 32, offset: 6848)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ms_present", scope: !1689, file: !898, line: 63, baseType: !909, size: 32, align: 32, offset: 7104)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "ms_info", scope: !1689, file: !898, line: 64, baseType: !1804, size: 3584, align: 32, offset: 7136)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !909, size: 3584, align: 32, elements: !1805)
!1805 = !{!1806}
!1806 = !DISubrange(count: 112)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "is_long", scope: !1689, file: !898, line: 66, baseType: !909, size: 32, align: 32, offset: 10720)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "band_type", scope: !1689, file: !898, line: 68, baseType: !1809, size: 896, align: 8, offset: 10752)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !928, size: 896, align: 8, elements: !1805)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "band_run_end", scope: !1689, file: !898, line: 69, baseType: !1809, size: 896, align: 8, offset: 11648)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "num_sections", scope: !1689, file: !898, line: 70, baseType: !909, size: 32, align: 32, offset: 12544)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "band_scales", scope: !1689, file: !898, line: 72, baseType: !1813, size: 3584, align: 32, offset: 12576)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 3584, align: 32, elements: !1805)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "scale_diff", scope: !1689, file: !898, line: 74, baseType: !1815, size: 192, align: 64, offset: 16192)
!1815 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !1816, line: 30, baseType: !1817)
!1816 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !1816, line: 26, size: 192, align: 64, elements: !1818)
!1818 = !{!1819, !1820, !1827, !1828}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1817, file: !1816, line: 27, baseType: !909, size: 32, align: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1817, file: !1816, line: 28, baseType: !1821, size: 64, align: 64, offset: 64)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64, align: 64)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1823, size: 32, align: 16, elements: !1825)
!1823 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !927, line: 37, baseType: !1824)
!1824 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1825 = !{!1826}
!1826 = !DISubrange(count: 2)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !1817, file: !1816, line: 29, baseType: !909, size: 32, align: 32, offset: 128)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !1817, file: !1816, line: 29, baseType: !909, size: 32, align: 32, offset: 160)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "cb_vlc", scope: !1689, file: !898, line: 75, baseType: !1830, size: 3072, align: 64, offset: 16384)
!1830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1815, size: 3072, align: 64, elements: !1831)
!1831 = !{!1832}
!1832 = !DISubrange(count: 16)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "scale_tab", scope: !1689, file: !898, line: 77, baseType: !1834, size: 4096, align: 32, offset: 19456)
!1834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 4096, align: 32, elements: !1835)
!1835 = !{!1836}
!1836 = !DISubrange(count: 128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !1689, file: !898, line: 79, baseType: !1838, size: 65536, align: 32, offset: 23552)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 65536, align: 32, elements: !1839)
!1839 = !{!1826, !1840}
!1840 = !DISubrange(count: 1024)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1689, file: !898, line: 80, baseType: !1838, size: 65536, align: 32, offset: 89088)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1689, file: !898, line: 82, baseType: !1843, size: 65536, align: 32, offset: 154624)
!1843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 65536, align: 32, elements: !1844)
!1844 = !{!1845}
!1845 = !DISubrange(count: 2048)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_buf", scope: !1689, file: !898, line: 83, baseType: !1847, size: 32768, align: 32, offset: 220160)
!1847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 32768, align: 32, elements: !1848)
!1848 = !{!1840}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "long_win", scope: !1689, file: !898, line: 84, baseType: !1847, size: 32768, align: 32, offset: 252928)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "short_win", scope: !1689, file: !898, line: 85, baseType: !1834, size: 4096, align: 32, offset: 285696)
!1851 = !DILocation(line: 908, column: 20, scope: !1667)
!1852 = !DILocation(line: 908, column: 24, scope: !1667)
!1853 = !DILocation(line: 908, column: 31, scope: !1667)
!1854 = !DILocalVariable(name: "i", scope: !1667, file: !898, line: 909, type: !909)
!1855 = !DILocation(line: 909, column: 9, scope: !1667)
!1856 = !DILocation(line: 911, column: 9, scope: !1857)
!1857 = distinct !DILexicalBlock(scope: !1667, file: !898, line: 911, column: 9)
!1858 = !DILocation(line: 911, column: 16, scope: !1857)
!1859 = !DILocation(line: 911, column: 25, scope: !1857)
!1860 = !DILocation(line: 911, column: 9, scope: !1667)
!1861 = !DILocation(line: 912, column: 31, scope: !1862)
!1862 = distinct !DILexicalBlock(scope: !1857, file: !898, line: 911, column: 31)
!1863 = !DILocation(line: 912, column: 9, scope: !1862)
!1864 = !DILocation(line: 913, column: 9, scope: !1862)
!1865 = !DILocation(line: 916, column: 16, scope: !1667)
!1866 = !DILocation(line: 916, column: 5, scope: !1667)
!1867 = !DILocation(line: 916, column: 8, scope: !1667)
!1868 = !DILocation(line: 916, column: 14, scope: !1667)
!1869 = !DILocation(line: 917, column: 5, scope: !1667)
!1870 = !DILocation(line: 917, column: 12, scope: !1667)
!1871 = !DILocation(line: 917, column: 23, scope: !1667)
!1872 = !DILocation(line: 918, column: 30, scope: !1667)
!1873 = !DILocation(line: 918, column: 37, scope: !1667)
!1874 = !DILocation(line: 918, column: 46, scope: !1667)
!1875 = !DILocation(line: 918, column: 29, scope: !1667)
!1876 = !DILocation(line: 918, column: 5, scope: !1667)
!1877 = !DILocation(line: 918, column: 12, scope: !1667)
!1878 = !DILocation(line: 918, column: 27, scope: !1667)
!1879 = !DILocation(line: 921, column: 20, scope: !1667)
!1880 = !DILocation(line: 921, column: 27, scope: !1667)
!1881 = !DILocation(line: 921, column: 37, scope: !1667)
!1882 = !DILocation(line: 921, column: 5, scope: !1667)
!1883 = !DILocation(line: 921, column: 8, scope: !1667)
!1884 = !DILocation(line: 921, column: 17, scope: !1667)
!1885 = !DILocation(line: 923, column: 9, scope: !1886)
!1886 = distinct !DILexicalBlock(scope: !1667, file: !898, line: 923, column: 9)
!1887 = !DILocation(line: 923, column: 16, scope: !1886)
!1888 = !DILocation(line: 923, column: 25, scope: !1886)
!1889 = !DILocation(line: 923, column: 9, scope: !1667)
!1890 = !DILocation(line: 924, column: 16, scope: !1886)
!1891 = !DILocation(line: 924, column: 9, scope: !1886)
!1892 = !DILocation(line: 930, column: 12, scope: !1683)
!1893 = !DILocation(line: 930, column: 10, scope: !1683)
!1894 = !DILocation(line: 930, column: 17, scope: !1895)
!1895 = !DILexicalBlockFile(scope: !1682, file: !898, discriminator: 1)
!1896 = !DILocation(line: 930, column: 19, scope: !1895)
!1897 = !DILocation(line: 930, column: 5, scope: !1895)
!1898 = !DILocation(line: 931, column: 41, scope: !1682)
!1899 = !DILocation(line: 931, column: 43, scope: !1682)
!1900 = !DILocation(line: 931, column: 32, scope: !1682)
!1901 = !DILocation(line: 44, column: 42, scope: !1670, inlinedAt: !1681)
!1902 = !DILocation(line: 44, column: 40, scope: !1670, inlinedAt: !1681)
!1903 = !DILocation(line: 44, column: 12, scope: !1670, inlinedAt: !1681)
!1904 = !DILocation(line: 931, column: 50, scope: !1682)
!1905 = !DILocation(line: 931, column: 55, scope: !1682)
!1906 = !DILocation(line: 931, column: 27, scope: !1895)
!1907 = !DILocation(line: 931, column: 63, scope: !1682)
!1908 = !DILocation(line: 931, column: 27, scope: !1682)
!1909 = !DILocation(line: 931, column: 22, scope: !1682)
!1910 = !DILocation(line: 931, column: 9, scope: !1682)
!1911 = !DILocation(line: 931, column: 12, scope: !1682)
!1912 = !DILocation(line: 931, column: 25, scope: !1682)
!1913 = !DILocation(line: 930, column: 26, scope: !1914)
!1914 = !DILexicalBlockFile(scope: !1682, file: !898, discriminator: 2)
!1915 = !DILocation(line: 930, column: 5, scope: !1914)
!1916 = distinct !{!1916, !1917}
!1917 = !DILocation(line: 930, column: 5, scope: !1667)
!1918 = !DILocation(line: 932, column: 5, scope: !1667)
!1919 = !DILocation(line: 932, column: 12, scope: !1920)
!1920 = !DILexicalBlockFile(scope: !1678, file: !898, discriminator: 1)
!1921 = !DILocation(line: 932, column: 14, scope: !1920)
!1922 = !DILocation(line: 932, column: 5, scope: !1920)
!1923 = !DILocation(line: 933, column: 41, scope: !1678)
!1924 = !DILocation(line: 933, column: 43, scope: !1678)
!1925 = !DILocation(line: 933, column: 32, scope: !1678)
!1926 = !DILocation(line: 44, column: 42, scope: !1670, inlinedAt: !1677)
!1927 = !DILocation(line: 44, column: 40, scope: !1670, inlinedAt: !1677)
!1928 = !DILocation(line: 44, column: 12, scope: !1670, inlinedAt: !1677)
!1929 = !DILocation(line: 933, column: 50, scope: !1678)
!1930 = !DILocation(line: 933, column: 56, scope: !1678)
!1931 = !DILocation(line: 933, column: 27, scope: !1920)
!1932 = !DILocation(line: 933, column: 27, scope: !1678)
!1933 = !DILocation(line: 933, column: 22, scope: !1678)
!1934 = !DILocation(line: 933, column: 9, scope: !1678)
!1935 = !DILocation(line: 933, column: 12, scope: !1678)
!1936 = !DILocation(line: 933, column: 25, scope: !1678)
!1937 = !DILocation(line: 932, column: 22, scope: !1938)
!1938 = !DILexicalBlockFile(scope: !1678, file: !898, discriminator: 2)
!1939 = !DILocation(line: 932, column: 5, scope: !1938)
!1940 = distinct !{!1940, !1918}
!1941 = !DILocation(line: 935, column: 9, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1667, file: !898, line: 935, column: 9)
!1943 = !DILocation(line: 935, column: 16, scope: !1942)
!1944 = !DILocation(line: 935, column: 28, scope: !1942)
!1945 = !DILocation(line: 935, column: 36, scope: !1942)
!1946 = !DILocation(line: 935, column: 39, scope: !1947)
!1947 = !DILexicalBlockFile(scope: !1942, file: !898, discriminator: 1)
!1948 = !DILocation(line: 935, column: 46, scope: !1947)
!1949 = !DILocation(line: 935, column: 55, scope: !1947)
!1950 = !DILocation(line: 935, column: 9, scope: !1947)
!1951 = !DILocation(line: 936, column: 16, scope: !1942)
!1952 = !DILocation(line: 936, column: 19, scope: !1942)
!1953 = !DILocation(line: 936, column: 9, scope: !1942)
!1954 = !DILocation(line: 939, column: 16, scope: !1942)
!1955 = !DILocation(line: 939, column: 19, scope: !1942)
!1956 = !DILocation(line: 939, column: 9, scope: !1942)
!1957 = !DILocation(line: 941, column: 12, scope: !1667)
!1958 = !DILocation(line: 941, column: 15, scope: !1667)
!1959 = !DILocation(line: 941, column: 5, scope: !1667)
!1960 = !DILocation(line: 943, column: 17, scope: !1667)
!1961 = !DILocation(line: 943, column: 24, scope: !1667)
!1962 = !DILocation(line: 943, column: 36, scope: !1667)
!1963 = !DILocation(line: 943, column: 16, scope: !1667)
!1964 = !DILocation(line: 943, column: 5, scope: !1667)
!1965 = !DILocation(line: 943, column: 8, scope: !1667)
!1966 = !DILocation(line: 943, column: 14, scope: !1667)
!1967 = !DILocation(line: 945, column: 15, scope: !1667)
!1968 = !DILocation(line: 945, column: 22, scope: !1667)
!1969 = !DILocation(line: 945, column: 34, scope: !1667)
!1970 = !DILocation(line: 945, column: 14, scope: !1667)
!1971 = !DILocation(line: 945, column: 5, scope: !1667)
!1972 = !DILocation(line: 945, column: 8, scope: !1667)
!1973 = !DILocation(line: 945, column: 12, scope: !1667)
!1974 = !DILocation(line: 948, column: 19, scope: !1667)
!1975 = !DILocation(line: 948, column: 22, scope: !1667)
!1976 = !DILocation(line: 948, column: 5, scope: !1667)
!1977 = !DILocation(line: 949, column: 19, scope: !1667)
!1978 = !DILocation(line: 949, column: 22, scope: !1667)
!1979 = !DILocation(line: 949, column: 5, scope: !1667)
!1980 = !DILocation(line: 950, column: 19, scope: !1667)
!1981 = !DILocation(line: 950, column: 22, scope: !1667)
!1982 = !DILocation(line: 950, column: 5, scope: !1667)
!1983 = !DILocation(line: 951, column: 18, scope: !1667)
!1984 = !DILocation(line: 951, column: 21, scope: !1667)
!1985 = !DILocation(line: 951, column: 5, scope: !1667)
!1986 = !DILocation(line: 952, column: 18, scope: !1667)
!1987 = !DILocation(line: 952, column: 21, scope: !1667)
!1988 = !DILocation(line: 952, column: 5, scope: !1667)
!1989 = !DILocation(line: 953, column: 18, scope: !1667)
!1990 = !DILocation(line: 953, column: 21, scope: !1667)
!1991 = !DILocation(line: 953, column: 5, scope: !1667)
!1992 = !DILocation(line: 954, column: 18, scope: !1667)
!1993 = !DILocation(line: 954, column: 21, scope: !1667)
!1994 = !DILocation(line: 954, column: 5, scope: !1667)
!1995 = !DILocation(line: 955, column: 38, scope: !1667)
!1996 = !DILocation(line: 955, column: 45, scope: !1667)
!1997 = !DILocation(line: 955, column: 51, scope: !1667)
!1998 = !DILocation(line: 955, column: 15, scope: !1667)
!1999 = !DILocation(line: 955, column: 5, scope: !1667)
!2000 = !DILocation(line: 955, column: 8, scope: !1667)
!2001 = !DILocation(line: 955, column: 13, scope: !1667)
!2002 = !DILocation(line: 956, column: 10, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !1667, file: !898, line: 956, column: 9)
!2004 = !DILocation(line: 956, column: 13, scope: !2003)
!2005 = !DILocation(line: 956, column: 9, scope: !1667)
!2006 = !DILocation(line: 957, column: 9, scope: !2003)
!2007 = !DILocation(line: 959, column: 29, scope: !2008)
!2008 = distinct !DILexicalBlock(scope: !1667, file: !898, line: 959, column: 9)
!2009 = !DILocation(line: 959, column: 32, scope: !2008)
!2010 = !DILocation(line: 959, column: 9, scope: !2008)
!2011 = !DILocation(line: 959, column: 9, scope: !1667)
!2012 = !DILocation(line: 962, column: 9, scope: !2013)
!2013 = distinct !DILexicalBlock(scope: !2008, file: !898, line: 961, column: 56)
!2014 = !DILocation(line: 964, column: 12, scope: !2015)
!2015 = distinct !DILexicalBlock(scope: !1667, file: !898, line: 964, column: 5)
!2016 = !DILocation(line: 964, column: 10, scope: !2015)
!2017 = !DILocation(line: 964, column: 17, scope: !2018)
!2018 = !DILexicalBlockFile(scope: !2019, file: !898, discriminator: 1)
!2019 = distinct !DILexicalBlock(scope: !2015, file: !898, line: 964, column: 5)
!2020 = !DILocation(line: 964, column: 19, scope: !2018)
!2021 = !DILocation(line: 964, column: 5, scope: !2018)
!2022 = !DILocalVariable(name: "idx", scope: !2023, file: !898, line: 965, type: !909)
!2023 = distinct !DILexicalBlock(scope: !2019, file: !898, line: 964, column: 29)
!2024 = !DILocation(line: 965, column: 13, scope: !2023)
!2025 = !DILocation(line: 965, column: 19, scope: !2023)
!2026 = !DILocation(line: 965, column: 21, scope: !2023)
!2027 = !DILocation(line: 966, column: 43, scope: !2028)
!2028 = distinct !DILexicalBlock(scope: !2023, file: !898, line: 966, column: 13)
!2029 = !DILocation(line: 966, column: 33, scope: !2028)
!2030 = !DILocation(line: 966, column: 36, scope: !2028)
!2031 = !DILocation(line: 966, column: 74, scope: !2028)
!2032 = !DILocation(line: 966, column: 50, scope: !2028)
!2033 = !DILocation(line: 967, column: 55, scope: !2028)
!2034 = !DILocation(line: 967, column: 32, scope: !2028)
!2035 = !DILocation(line: 968, column: 56, scope: !2028)
!2036 = !DILocation(line: 968, column: 32, scope: !2028)
!2037 = !DILocation(line: 969, column: 55, scope: !2028)
!2038 = !DILocation(line: 969, column: 32, scope: !2028)
!2039 = !DILocation(line: 966, column: 13, scope: !2028)
!2040 = !DILocation(line: 966, column: 13, scope: !2023)
!2041 = !DILocation(line: 970, column: 13, scope: !2042)
!2042 = distinct !DILexicalBlock(scope: !2028, file: !898, line: 969, column: 71)
!2043 = !DILocation(line: 972, column: 5, scope: !2023)
!2044 = !DILocation(line: 964, column: 25, scope: !2045)
!2045 = !DILexicalBlockFile(scope: !2019, file: !898, discriminator: 2)
!2046 = !DILocation(line: 964, column: 5, scope: !2045)
!2047 = distinct !{!2047, !2048}
!2048 = !DILocation(line: 964, column: 5, scope: !1667)
!2049 = !DILocation(line: 973, column: 12, scope: !2050)
!2050 = distinct !DILexicalBlock(scope: !1667, file: !898, line: 973, column: 5)
!2051 = !DILocation(line: 973, column: 10, scope: !2050)
!2052 = !DILocation(line: 973, column: 17, scope: !2053)
!2053 = !DILexicalBlockFile(scope: !2054, file: !898, discriminator: 1)
!2054 = distinct !DILexicalBlock(scope: !2050, file: !898, line: 973, column: 5)
!2055 = !DILocation(line: 973, column: 19, scope: !2053)
!2056 = !DILocation(line: 973, column: 5, scope: !2053)
!2057 = !DILocalVariable(name: "idx", scope: !2058, file: !898, line: 974, type: !909)
!2058 = distinct !DILexicalBlock(scope: !2054, file: !898, line: 973, column: 30)
!2059 = !DILocation(line: 974, column: 13, scope: !2058)
!2060 = !DILocation(line: 974, column: 19, scope: !2058)
!2061 = !DILocation(line: 974, column: 21, scope: !2058)
!2062 = !DILocation(line: 975, column: 43, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2058, file: !898, line: 975, column: 13)
!2064 = !DILocation(line: 975, column: 33, scope: !2063)
!2065 = !DILocation(line: 975, column: 36, scope: !2063)
!2066 = !DILocation(line: 975, column: 74, scope: !2063)
!2067 = !DILocation(line: 975, column: 50, scope: !2063)
!2068 = !DILocation(line: 976, column: 55, scope: !2063)
!2069 = !DILocation(line: 976, column: 32, scope: !2063)
!2070 = !DILocation(line: 977, column: 56, scope: !2063)
!2071 = !DILocation(line: 977, column: 32, scope: !2063)
!2072 = !DILocation(line: 978, column: 55, scope: !2063)
!2073 = !DILocation(line: 978, column: 32, scope: !2063)
!2074 = !DILocation(line: 975, column: 13, scope: !2063)
!2075 = !DILocation(line: 975, column: 13, scope: !2058)
!2076 = !DILocation(line: 979, column: 13, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !2063, file: !898, line: 978, column: 71)
!2078 = !DILocation(line: 981, column: 5, scope: !2058)
!2079 = !DILocation(line: 973, column: 26, scope: !2080)
!2080 = !DILexicalBlockFile(scope: !2054, file: !898, discriminator: 2)
!2081 = !DILocation(line: 973, column: 5, scope: !2080)
!2082 = distinct !{!2082, !2083}
!2083 = !DILocation(line: 973, column: 5, scope: !1667)
!2084 = !DILocation(line: 983, column: 5, scope: !1667)
!2085 = !DILocation(line: 985, column: 12, scope: !1667)
!2086 = !DILocation(line: 985, column: 5, scope: !1667)
!2087 = !DILocation(line: 986, column: 22, scope: !1667)
!2088 = !DILocation(line: 986, column: 5, scope: !1667)
!2089 = !DILocation(line: 987, column: 15, scope: !1667)
!2090 = !DILocation(line: 987, column: 18, scope: !1667)
!2091 = !DILocation(line: 987, column: 14, scope: !1667)
!2092 = !DILocation(line: 987, column: 5, scope: !1667)
!2093 = !DILocation(line: 988, column: 5, scope: !1667)
!2094 = !DILocation(line: 989, column: 1, scope: !1667)
!2095 = distinct !DISubprogram(name: "on2avc_decode_frame", scope: !898, file: !898, line: 839, type: !1641, isLocal: true, isDefinition: true, scopeLine: 841, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!2096 = !DILocalVariable(name: "g", arg: 1, scope: !2097, file: !2098, line: 164, type: !2101)
!2097 = distinct !DISubprogram(name: "bytestream2_skip", scope: !2098, file: !2098, line: 164, type: !2099, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!2098 = !DIFile(filename: "libavcodec/bytestream.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2099 = !DISubroutineType(types: !2100)
!2100 = !{null, !2101, !910}
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64, align: 64)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetByteContext", file: !2098, line: 35, baseType: !2103)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetByteContext", file: !2098, line: 33, size: 192, align: 64, elements: !2104)
!2104 = !{!2105, !2106, !2107}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2103, file: !2098, line: 34, baseType: !1475, size: 64, align: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2103, file: !2098, line: 34, baseType: !1475, size: 64, align: 64, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !2103, file: !2098, line: 34, baseType: !1475, size: 64, align: 64, offset: 128)
!2108 = !DILocation(line: 164, column: 84, scope: !2097, inlinedAt: !2109)
!2109 = distinct !DILocation(line: 868, column: 13, scope: !2110)
!2110 = distinct !DILexicalBlock(scope: !2111, file: !898, line: 860, column: 53)
!2111 = distinct !DILexicalBlock(scope: !2112, file: !898, line: 858, column: 12)
!2112 = distinct !DILexicalBlock(scope: !2095, file: !898, line: 850, column: 9)
!2113 = !DILocalVariable(name: "size", arg: 2, scope: !2097, file: !2098, line: 165, type: !910)
!2114 = !DILocation(line: 165, column: 60, scope: !2097, inlinedAt: !2109)
!2115 = !DILocalVariable(name: "g", arg: 1, scope: !2116, file: !2098, line: 133, type: !2101)
!2116 = distinct !DISubprogram(name: "bytestream2_init", scope: !2098, file: !2098, line: 133, type: !2117, isLocal: true, isDefinition: true, scopeLine: 136, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{null, !2101, !1475, !909}
!2119 = !DILocation(line: 133, column: 84, scope: !2116, inlinedAt: !2120)
!2120 = distinct !DILocation(line: 881, column: 9, scope: !2111)
!2121 = !DILocalVariable(name: "buf", arg: 2, scope: !2116, file: !2098, line: 134, type: !1475)
!2122 = !DILocation(line: 134, column: 62, scope: !2116, inlinedAt: !2120)
!2123 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2116, file: !2098, line: 135, type: !909)
!2124 = !DILocation(line: 135, column: 51, scope: !2116, inlinedAt: !2120)
!2125 = !DILocalVariable(name: "g", arg: 1, scope: !2126, file: !2098, line: 154, type: !2101)
!2126 = distinct !DISubprogram(name: "bytestream2_get_bytes_left", scope: !2098, file: !2098, line: 154, type: !2127, isLocal: true, isDefinition: true, scopeLine: 155, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{!910, !2101}
!2129 = !DILocation(line: 154, column: 102, scope: !2126, inlinedAt: !2130)
!2130 = distinct !DILocation(line: 882, column: 16, scope: !2131)
!2131 = !DILexicalBlockFile(scope: !2111, file: !898, discriminator: 1)
!2132 = !DILocalVariable(name: "b", arg: 1, scope: !2133, file: !2098, line: 90, type: !2136)
!2133 = distinct !DISubprogram(name: "bytestream_get_le16", scope: !2098, file: !2098, line: 90, type: !2134, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{!910, !2136}
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64, align: 64)
!2137 = !DILocation(line: 90, column: 95, scope: !2133, inlinedAt: !2138)
!2138 = distinct !DILocation(line: 90, column: 868, scope: !2139, inlinedAt: !2140)
!2139 = distinct !DISubprogram(name: "bytestream2_get_le16u", scope: !2098, file: !2098, line: 90, type: !2127, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!2140 = distinct !DILocation(line: 90, column: 1086, scope: !2141, inlinedAt: !2143)
!2141 = !DILexicalBlockFile(scope: !2142, file: !2098, discriminator: 2)
!2142 = distinct !DISubprogram(name: "bytestream2_get_le16", scope: !2098, file: !2098, line: 90, type: !2127, isLocal: true, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!2143 = distinct !DILocation(line: 883, column: 26, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !2111, file: !898, line: 882, column: 53)
!2145 = !DILocalVariable(name: "g", arg: 1, scope: !2139, file: !2098, line: 90, type: !2101)
!2146 = !DILocation(line: 90, column: 856, scope: !2139, inlinedAt: !2140)
!2147 = !DILocalVariable(name: "g", arg: 1, scope: !2142, file: !2098, line: 90, type: !2101)
!2148 = !DILocation(line: 90, column: 998, scope: !2142, inlinedAt: !2143)
!2149 = !DILocation(line: 154, column: 102, scope: !2126, inlinedAt: !2150)
!2150 = distinct !DILocation(line: 862, column: 45, scope: !2151)
!2151 = !DILexicalBlockFile(scope: !2152, file: !898, discriminator: 1)
!2152 = distinct !DILexicalBlock(scope: !2110, file: !898, line: 862, column: 17)
!2153 = !DILocation(line: 164, column: 84, scope: !2097, inlinedAt: !2154)
!2154 = distinct !DILocation(line: 888, column: 13, scope: !2144)
!2155 = !DILocation(line: 165, column: 60, scope: !2097, inlinedAt: !2154)
!2156 = !DILocation(line: 90, column: 95, scope: !2133, inlinedAt: !2157)
!2157 = distinct !DILocation(line: 90, column: 868, scope: !2139, inlinedAt: !2158)
!2158 = distinct !DILocation(line: 90, column: 1086, scope: !2141, inlinedAt: !2159)
!2159 = distinct !DILocation(line: 861, column: 26, scope: !2110)
!2160 = !DILocation(line: 90, column: 856, scope: !2139, inlinedAt: !2158)
!2161 = !DILocation(line: 90, column: 998, scope: !2142, inlinedAt: !2159)
!2162 = !DILocation(line: 154, column: 102, scope: !2126, inlinedAt: !2163)
!2163 = distinct !DILocation(line: 860, column: 16, scope: !2131)
!2164 = !DILocation(line: 133, column: 84, scope: !2116, inlinedAt: !2165)
!2165 = distinct !DILocation(line: 859, column: 9, scope: !2111)
!2166 = !DILocation(line: 134, column: 62, scope: !2116, inlinedAt: !2165)
!2167 = !DILocation(line: 135, column: 51, scope: !2116, inlinedAt: !2165)
!2168 = !DILocalVariable(name: "avctx", arg: 1, scope: !2095, file: !898, line: 839, type: !1033)
!2169 = !DILocation(line: 839, column: 49, scope: !2095)
!2170 = !DILocalVariable(name: "data", arg: 2, scope: !2095, file: !898, line: 839, type: !930)
!2171 = !DILocation(line: 839, column: 62, scope: !2095)
!2172 = !DILocalVariable(name: "got_frame_ptr", arg: 3, scope: !2095, file: !898, line: 840, type: !1327)
!2173 = !DILocation(line: 840, column: 37, scope: !2095)
!2174 = !DILocalVariable(name: "avpkt", arg: 4, scope: !2095, file: !898, line: 840, type: !1181)
!2175 = !DILocation(line: 840, column: 62, scope: !2095)
!2176 = !DILocalVariable(name: "frame", scope: !2095, file: !898, line: 842, type: !1055)
!2177 = !DILocation(line: 842, column: 14, scope: !2095)
!2178 = !DILocation(line: 842, column: 22, scope: !2095)
!2179 = !DILocalVariable(name: "buf", scope: !2095, file: !898, line: 843, type: !1475)
!2180 = !DILocation(line: 843, column: 20, scope: !2095)
!2181 = !DILocation(line: 843, column: 26, scope: !2095)
!2182 = !DILocation(line: 843, column: 33, scope: !2095)
!2183 = !DILocalVariable(name: "buf_size", scope: !2095, file: !898, line: 844, type: !909)
!2184 = !DILocation(line: 844, column: 9, scope: !2095)
!2185 = !DILocation(line: 844, column: 20, scope: !2095)
!2186 = !DILocation(line: 844, column: 27, scope: !2095)
!2187 = !DILocalVariable(name: "c", scope: !2095, file: !898, line: 845, type: !1687)
!2188 = !DILocation(line: 845, column: 20, scope: !2095)
!2189 = !DILocation(line: 845, column: 24, scope: !2095)
!2190 = !DILocation(line: 845, column: 31, scope: !2095)
!2191 = !DILocalVariable(name: "gb", scope: !2095, file: !898, line: 846, type: !2102)
!2192 = !DILocation(line: 846, column: 20, scope: !2095)
!2193 = !DILocalVariable(name: "num_frames", scope: !2095, file: !898, line: 847, type: !909)
!2194 = !DILocation(line: 847, column: 9, scope: !2095)
!2195 = !DILocalVariable(name: "frame_size", scope: !2095, file: !898, line: 847, type: !909)
!2196 = !DILocation(line: 847, column: 25, scope: !2095)
!2197 = !DILocalVariable(name: "audio_off", scope: !2095, file: !898, line: 847, type: !909)
!2198 = !DILocation(line: 847, column: 37, scope: !2095)
!2199 = !DILocalVariable(name: "ret", scope: !2095, file: !898, line: 848, type: !909)
!2200 = !DILocation(line: 848, column: 9, scope: !2095)
!2201 = !DILocation(line: 850, column: 9, scope: !2112)
!2202 = !DILocation(line: 850, column: 12, scope: !2112)
!2203 = !DILocation(line: 850, column: 9, scope: !2095)
!2204 = !DILocation(line: 852, column: 9, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !2112, file: !898, line: 850, column: 22)
!2206 = !DILocation(line: 852, column: 16, scope: !2205)
!2207 = !DILocation(line: 852, column: 27, scope: !2205)
!2208 = !DILocation(line: 853, column: 34, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2205, file: !898, line: 853, column: 13)
!2210 = !DILocation(line: 853, column: 41, scope: !2209)
!2211 = !DILocation(line: 853, column: 20, scope: !2209)
!2212 = !DILocation(line: 853, column: 18, scope: !2209)
!2213 = !DILocation(line: 853, column: 52, scope: !2209)
!2214 = !DILocation(line: 853, column: 13, scope: !2205)
!2215 = !DILocation(line: 854, column: 20, scope: !2209)
!2216 = !DILocation(line: 854, column: 13, scope: !2209)
!2217 = !DILocation(line: 856, column: 43, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !2205, file: !898, line: 856, column: 13)
!2219 = !DILocation(line: 856, column: 46, scope: !2218)
!2220 = !DILocation(line: 856, column: 51, scope: !2218)
!2221 = !DILocation(line: 856, column: 61, scope: !2218)
!2222 = !DILocation(line: 856, column: 20, scope: !2218)
!2223 = !DILocation(line: 856, column: 18, scope: !2218)
!2224 = !DILocation(line: 856, column: 72, scope: !2218)
!2225 = !DILocation(line: 856, column: 13, scope: !2205)
!2226 = !DILocation(line: 857, column: 20, scope: !2218)
!2227 = !DILocation(line: 857, column: 13, scope: !2218)
!2228 = !DILocation(line: 858, column: 5, scope: !2205)
!2229 = !DILocation(line: 859, column: 31, scope: !2111)
!2230 = !DILocation(line: 859, column: 36, scope: !2111)
!2231 = !DILocation(line: 859, column: 9, scope: !2111)
!2232 = !DILocation(line: 137, column: 16, scope: !2233, inlinedAt: !2165)
!2233 = !DILexicalBlockFile(scope: !2234, file: !2098, discriminator: 1)
!2234 = distinct !DILexicalBlock(scope: !2235, file: !2098, line: 137, column: 14)
!2235 = distinct !DILexicalBlock(scope: !2116, file: !2098, line: 137, column: 8)
!2236 = !DILocation(line: 137, column: 25, scope: !2233, inlinedAt: !2165)
!2237 = !DILocation(line: 137, column: 14, scope: !2233, inlinedAt: !2165)
!2238 = !DILocation(line: 137, column: 34, scope: !2239, inlinedAt: !2165)
!2239 = !DILexicalBlockFile(scope: !2240, file: !2098, discriminator: 2)
!2240 = distinct !DILexicalBlock(scope: !2234, file: !2098, line: 137, column: 32)
!2241 = !DILocation(line: 137, column: 93, scope: !2242, inlinedAt: !2165)
!2242 = !DILexicalBlockFile(scope: !2239, file: !2098, discriminator: 4)
!2243 = !DILocation(line: 137, column: 93, scope: !2239, inlinedAt: !2165)
!2244 = !DILocation(line: 138, column: 17, scope: !2116, inlinedAt: !2165)
!2245 = !DILocation(line: 138, column: 5, scope: !2116, inlinedAt: !2165)
!2246 = !DILocation(line: 138, column: 8, scope: !2116, inlinedAt: !2165)
!2247 = !DILocation(line: 138, column: 15, scope: !2116, inlinedAt: !2165)
!2248 = !DILocation(line: 139, column: 23, scope: !2116, inlinedAt: !2165)
!2249 = !DILocation(line: 139, column: 5, scope: !2116, inlinedAt: !2165)
!2250 = !DILocation(line: 139, column: 8, scope: !2116, inlinedAt: !2165)
!2251 = !DILocation(line: 139, column: 21, scope: !2116, inlinedAt: !2165)
!2252 = !DILocation(line: 140, column: 21, scope: !2116, inlinedAt: !2165)
!2253 = !DILocation(line: 140, column: 27, scope: !2116, inlinedAt: !2165)
!2254 = !DILocation(line: 140, column: 25, scope: !2116, inlinedAt: !2165)
!2255 = !DILocation(line: 140, column: 5, scope: !2116, inlinedAt: !2165)
!2256 = !DILocation(line: 140, column: 8, scope: !2116, inlinedAt: !2165)
!2257 = !DILocation(line: 140, column: 19, scope: !2116, inlinedAt: !2165)
!2258 = !DILocation(line: 860, column: 9, scope: !2111)
!2259 = !DILocation(line: 860, column: 16, scope: !2131)
!2260 = !DILocation(line: 156, column: 12, scope: !2126, inlinedAt: !2163)
!2261 = !DILocation(line: 156, column: 15, scope: !2126, inlinedAt: !2163)
!2262 = !DILocation(line: 156, column: 28, scope: !2126, inlinedAt: !2163)
!2263 = !DILocation(line: 156, column: 31, scope: !2126, inlinedAt: !2163)
!2264 = !DILocation(line: 156, column: 26, scope: !2126, inlinedAt: !2163)
!2265 = !DILocation(line: 860, column: 48, scope: !2131)
!2266 = !DILocation(line: 860, column: 9, scope: !2131)
!2267 = !DILocation(line: 861, column: 26, scope: !2110)
!2268 = !DILocation(line: 90, column: 1007, scope: !2269, inlinedAt: !2159)
!2269 = distinct !DILexicalBlock(scope: !2142, file: !2098, line: 90, column: 1007)
!2270 = !DILocation(line: 90, column: 1010, scope: !2269, inlinedAt: !2159)
!2271 = !DILocation(line: 90, column: 1023, scope: !2269, inlinedAt: !2159)
!2272 = !DILocation(line: 90, column: 1026, scope: !2269, inlinedAt: !2159)
!2273 = !DILocation(line: 90, column: 1021, scope: !2269, inlinedAt: !2159)
!2274 = !DILocation(line: 90, column: 1033, scope: !2269, inlinedAt: !2159)
!2275 = !DILocation(line: 90, column: 1007, scope: !2142, inlinedAt: !2159)
!2276 = !DILocation(line: 90, column: 1052, scope: !2277, inlinedAt: !2159)
!2277 = !DILexicalBlockFile(scope: !2278, file: !2098, discriminator: 1)
!2278 = distinct !DILexicalBlock(scope: !2269, file: !2098, line: 90, column: 1038)
!2279 = !DILocation(line: 90, column: 1055, scope: !2277, inlinedAt: !2159)
!2280 = !DILocation(line: 90, column: 1040, scope: !2277, inlinedAt: !2159)
!2281 = !DILocation(line: 90, column: 1043, scope: !2277, inlinedAt: !2159)
!2282 = !DILocation(line: 90, column: 1050, scope: !2277, inlinedAt: !2159)
!2283 = !DILocation(line: 90, column: 1067, scope: !2277, inlinedAt: !2159)
!2284 = !DILocation(line: 90, column: 1108, scope: !2141, inlinedAt: !2159)
!2285 = !DILocation(line: 90, column: 1086, scope: !2141, inlinedAt: !2159)
!2286 = !DILocation(line: 90, column: 889, scope: !2139, inlinedAt: !2158)
!2287 = !DILocation(line: 90, column: 892, scope: !2139, inlinedAt: !2158)
!2288 = !DILocation(line: 90, column: 868, scope: !2139, inlinedAt: !2158)
!2289 = !DILocation(line: 90, column: 102, scope: !2133, inlinedAt: !2157)
!2290 = !DILocation(line: 90, column: 105, scope: !2133, inlinedAt: !2157)
!2291 = !DILocation(line: 90, column: 151, scope: !2133, inlinedAt: !2157)
!2292 = !DILocation(line: 90, column: 150, scope: !2133, inlinedAt: !2157)
!2293 = !DILocation(line: 90, column: 153, scope: !2133, inlinedAt: !2157)
!2294 = !DILocation(line: 90, column: 160, scope: !2133, inlinedAt: !2157)
!2295 = !DILocation(line: 90, column: 118, scope: !2133, inlinedAt: !2157)
!2296 = !DILocation(line: 90, column: 1079, scope: !2141, inlinedAt: !2159)
!2297 = !DILocation(line: 90, column: 1112, scope: !2298, inlinedAt: !2159)
!2298 = !DILexicalBlockFile(scope: !2142, file: !2098, discriminator: 3)
!2299 = !DILocation(line: 861, column: 24, scope: !2110)
!2300 = !DILocation(line: 862, column: 18, scope: !2152)
!2301 = !DILocation(line: 862, column: 29, scope: !2152)
!2302 = !DILocation(line: 862, column: 32, scope: !2151)
!2303 = !DILocation(line: 862, column: 45, scope: !2151)
!2304 = !DILocation(line: 156, column: 12, scope: !2126, inlinedAt: !2150)
!2305 = !DILocation(line: 156, column: 15, scope: !2126, inlinedAt: !2150)
!2306 = !DILocation(line: 156, column: 28, scope: !2126, inlinedAt: !2150)
!2307 = !DILocation(line: 156, column: 31, scope: !2126, inlinedAt: !2150)
!2308 = !DILocation(line: 156, column: 26, scope: !2126, inlinedAt: !2150)
!2309 = !DILocation(line: 862, column: 43, scope: !2151)
!2310 = !DILocation(line: 862, column: 17, scope: !2151)
!2311 = !DILocation(line: 863, column: 24, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2152, file: !898, line: 862, column: 78)
!2313 = !DILocation(line: 864, column: 24, scope: !2312)
!2314 = !DILocation(line: 863, column: 17, scope: !2312)
!2315 = !DILocation(line: 865, column: 17, scope: !2312)
!2316 = !DILocation(line: 867, column: 23, scope: !2110)
!2317 = !DILocation(line: 868, column: 35, scope: !2110)
!2318 = !DILocation(line: 868, column: 13, scope: !2110)
!2319 = !DILocation(line: 167, column: 20, scope: !2097, inlinedAt: !2109)
!2320 = !DILocation(line: 167, column: 23, scope: !2097, inlinedAt: !2109)
!2321 = !DILocation(line: 167, column: 36, scope: !2097, inlinedAt: !2109)
!2322 = !DILocation(line: 167, column: 39, scope: !2097, inlinedAt: !2109)
!2323 = !DILocation(line: 167, column: 34, scope: !2097, inlinedAt: !2109)
!2324 = !DILocation(line: 167, column: 50, scope: !2097, inlinedAt: !2109)
!2325 = !DILocation(line: 167, column: 49, scope: !2097, inlinedAt: !2109)
!2326 = !DILocation(line: 167, column: 47, scope: !2097, inlinedAt: !2109)
!2327 = !DILocation(line: 167, column: 19, scope: !2097, inlinedAt: !2109)
!2328 = !DILocation(line: 167, column: 59, scope: !2329, inlinedAt: !2109)
!2329 = !DILexicalBlockFile(scope: !2097, file: !2098, discriminator: 1)
!2330 = !DILocation(line: 167, column: 58, scope: !2329, inlinedAt: !2109)
!2331 = !DILocation(line: 167, column: 19, scope: !2329, inlinedAt: !2109)
!2332 = !DILocation(line: 167, column: 68, scope: !2333, inlinedAt: !2109)
!2333 = !DILexicalBlockFile(scope: !2097, file: !2098, discriminator: 2)
!2334 = !DILocation(line: 167, column: 71, scope: !2333, inlinedAt: !2109)
!2335 = !DILocation(line: 167, column: 84, scope: !2333, inlinedAt: !2109)
!2336 = !DILocation(line: 167, column: 87, scope: !2333, inlinedAt: !2109)
!2337 = !DILocation(line: 167, column: 82, scope: !2333, inlinedAt: !2109)
!2338 = !DILocation(line: 167, column: 19, scope: !2333, inlinedAt: !2109)
!2339 = !DILocation(line: 167, column: 19, scope: !2340, inlinedAt: !2109)
!2340 = !DILexicalBlockFile(scope: !2097, file: !2098, discriminator: 3)
!2341 = !DILocation(line: 167, column: 5, scope: !2340, inlinedAt: !2109)
!2342 = !DILocation(line: 167, column: 8, scope: !2340, inlinedAt: !2109)
!2343 = !DILocation(line: 167, column: 15, scope: !2340, inlinedAt: !2109)
!2344 = !DILocation(line: 860, column: 9, scope: !2345)
!2345 = !DILexicalBlockFile(scope: !2111, file: !898, discriminator: 2)
!2346 = distinct !{!2346, !2258}
!2347 = !DILocation(line: 870, column: 14, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2111, file: !898, line: 870, column: 13)
!2349 = !DILocation(line: 870, column: 13, scope: !2111)
!2350 = !DILocation(line: 871, column: 20, scope: !2351)
!2351 = distinct !DILexicalBlock(scope: !2348, file: !898, line: 870, column: 26)
!2352 = !DILocation(line: 871, column: 13, scope: !2351)
!2353 = !DILocation(line: 872, column: 13, scope: !2351)
!2354 = !DILocation(line: 876, column: 36, scope: !2111)
!2355 = !DILocation(line: 876, column: 34, scope: !2111)
!2356 = !DILocation(line: 876, column: 9, scope: !2111)
!2357 = !DILocation(line: 876, column: 16, scope: !2111)
!2358 = !DILocation(line: 876, column: 27, scope: !2111)
!2359 = !DILocation(line: 877, column: 34, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2111, file: !898, line: 877, column: 13)
!2361 = !DILocation(line: 877, column: 41, scope: !2360)
!2362 = !DILocation(line: 877, column: 20, scope: !2360)
!2363 = !DILocation(line: 877, column: 18, scope: !2360)
!2364 = !DILocation(line: 877, column: 52, scope: !2360)
!2365 = !DILocation(line: 877, column: 13, scope: !2111)
!2366 = !DILocation(line: 878, column: 20, scope: !2360)
!2367 = !DILocation(line: 878, column: 13, scope: !2360)
!2368 = !DILocation(line: 880, column: 19, scope: !2111)
!2369 = !DILocation(line: 881, column: 31, scope: !2111)
!2370 = !DILocation(line: 881, column: 36, scope: !2111)
!2371 = !DILocation(line: 881, column: 9, scope: !2111)
!2372 = !DILocation(line: 137, column: 16, scope: !2233, inlinedAt: !2120)
!2373 = !DILocation(line: 137, column: 25, scope: !2233, inlinedAt: !2120)
!2374 = !DILocation(line: 137, column: 14, scope: !2233, inlinedAt: !2120)
!2375 = !DILocation(line: 137, column: 34, scope: !2239, inlinedAt: !2120)
!2376 = !DILocation(line: 137, column: 93, scope: !2242, inlinedAt: !2120)
!2377 = !DILocation(line: 137, column: 93, scope: !2239, inlinedAt: !2120)
!2378 = !DILocation(line: 138, column: 17, scope: !2116, inlinedAt: !2120)
!2379 = !DILocation(line: 138, column: 5, scope: !2116, inlinedAt: !2120)
!2380 = !DILocation(line: 138, column: 8, scope: !2116, inlinedAt: !2120)
!2381 = !DILocation(line: 138, column: 15, scope: !2116, inlinedAt: !2120)
!2382 = !DILocation(line: 139, column: 23, scope: !2116, inlinedAt: !2120)
!2383 = !DILocation(line: 139, column: 5, scope: !2116, inlinedAt: !2120)
!2384 = !DILocation(line: 139, column: 8, scope: !2116, inlinedAt: !2120)
!2385 = !DILocation(line: 139, column: 21, scope: !2116, inlinedAt: !2120)
!2386 = !DILocation(line: 140, column: 21, scope: !2116, inlinedAt: !2120)
!2387 = !DILocation(line: 140, column: 27, scope: !2116, inlinedAt: !2120)
!2388 = !DILocation(line: 140, column: 25, scope: !2116, inlinedAt: !2120)
!2389 = !DILocation(line: 140, column: 5, scope: !2116, inlinedAt: !2120)
!2390 = !DILocation(line: 140, column: 8, scope: !2116, inlinedAt: !2120)
!2391 = !DILocation(line: 140, column: 19, scope: !2116, inlinedAt: !2120)
!2392 = !DILocation(line: 882, column: 9, scope: !2111)
!2393 = !DILocation(line: 882, column: 16, scope: !2131)
!2394 = !DILocation(line: 156, column: 12, scope: !2126, inlinedAt: !2130)
!2395 = !DILocation(line: 156, column: 15, scope: !2126, inlinedAt: !2130)
!2396 = !DILocation(line: 156, column: 28, scope: !2126, inlinedAt: !2130)
!2397 = !DILocation(line: 156, column: 31, scope: !2126, inlinedAt: !2130)
!2398 = !DILocation(line: 156, column: 26, scope: !2126, inlinedAt: !2130)
!2399 = !DILocation(line: 882, column: 48, scope: !2131)
!2400 = !DILocation(line: 882, column: 9, scope: !2131)
!2401 = !DILocation(line: 883, column: 26, scope: !2144)
!2402 = !DILocation(line: 90, column: 1007, scope: !2269, inlinedAt: !2143)
!2403 = !DILocation(line: 90, column: 1010, scope: !2269, inlinedAt: !2143)
!2404 = !DILocation(line: 90, column: 1023, scope: !2269, inlinedAt: !2143)
!2405 = !DILocation(line: 90, column: 1026, scope: !2269, inlinedAt: !2143)
!2406 = !DILocation(line: 90, column: 1021, scope: !2269, inlinedAt: !2143)
!2407 = !DILocation(line: 90, column: 1033, scope: !2269, inlinedAt: !2143)
!2408 = !DILocation(line: 90, column: 1007, scope: !2142, inlinedAt: !2143)
!2409 = !DILocation(line: 90, column: 1052, scope: !2277, inlinedAt: !2143)
!2410 = !DILocation(line: 90, column: 1055, scope: !2277, inlinedAt: !2143)
!2411 = !DILocation(line: 90, column: 1040, scope: !2277, inlinedAt: !2143)
!2412 = !DILocation(line: 90, column: 1043, scope: !2277, inlinedAt: !2143)
!2413 = !DILocation(line: 90, column: 1050, scope: !2277, inlinedAt: !2143)
!2414 = !DILocation(line: 90, column: 1067, scope: !2277, inlinedAt: !2143)
!2415 = !DILocation(line: 90, column: 1108, scope: !2141, inlinedAt: !2143)
!2416 = !DILocation(line: 90, column: 1086, scope: !2141, inlinedAt: !2143)
!2417 = !DILocation(line: 90, column: 889, scope: !2139, inlinedAt: !2140)
!2418 = !DILocation(line: 90, column: 892, scope: !2139, inlinedAt: !2140)
!2419 = !DILocation(line: 90, column: 868, scope: !2139, inlinedAt: !2140)
!2420 = !DILocation(line: 90, column: 102, scope: !2133, inlinedAt: !2138)
!2421 = !DILocation(line: 90, column: 105, scope: !2133, inlinedAt: !2138)
!2422 = !DILocation(line: 90, column: 151, scope: !2133, inlinedAt: !2138)
!2423 = !DILocation(line: 90, column: 150, scope: !2133, inlinedAt: !2138)
!2424 = !DILocation(line: 90, column: 153, scope: !2133, inlinedAt: !2138)
!2425 = !DILocation(line: 90, column: 160, scope: !2133, inlinedAt: !2138)
!2426 = !DILocation(line: 90, column: 118, scope: !2133, inlinedAt: !2138)
!2427 = !DILocation(line: 90, column: 1079, scope: !2141, inlinedAt: !2143)
!2428 = !DILocation(line: 90, column: 1112, scope: !2298, inlinedAt: !2143)
!2429 = !DILocation(line: 883, column: 24, scope: !2144)
!2430 = !DILocation(line: 884, column: 47, scope: !2431)
!2431 = distinct !DILexicalBlock(scope: !2144, file: !898, line: 884, column: 17)
!2432 = !DILocation(line: 884, column: 53, scope: !2431)
!2433 = !DILocation(line: 884, column: 61, scope: !2431)
!2434 = !DILocation(line: 885, column: 47, scope: !2431)
!2435 = !DILocation(line: 885, column: 54, scope: !2431)
!2436 = !DILocation(line: 884, column: 24, scope: !2431)
!2437 = !DILocation(line: 884, column: 22, scope: !2431)
!2438 = !DILocation(line: 885, column: 66, scope: !2431)
!2439 = !DILocation(line: 884, column: 17, scope: !2144)
!2440 = !DILocation(line: 886, column: 24, scope: !2431)
!2441 = !DILocation(line: 886, column: 17, scope: !2431)
!2442 = !DILocation(line: 887, column: 23, scope: !2144)
!2443 = !DILocation(line: 888, column: 35, scope: !2144)
!2444 = !DILocation(line: 888, column: 13, scope: !2144)
!2445 = !DILocation(line: 167, column: 20, scope: !2097, inlinedAt: !2154)
!2446 = !DILocation(line: 167, column: 23, scope: !2097, inlinedAt: !2154)
!2447 = !DILocation(line: 167, column: 36, scope: !2097, inlinedAt: !2154)
!2448 = !DILocation(line: 167, column: 39, scope: !2097, inlinedAt: !2154)
!2449 = !DILocation(line: 167, column: 34, scope: !2097, inlinedAt: !2154)
!2450 = !DILocation(line: 167, column: 50, scope: !2097, inlinedAt: !2154)
!2451 = !DILocation(line: 167, column: 49, scope: !2097, inlinedAt: !2154)
!2452 = !DILocation(line: 167, column: 47, scope: !2097, inlinedAt: !2154)
!2453 = !DILocation(line: 167, column: 19, scope: !2097, inlinedAt: !2154)
!2454 = !DILocation(line: 167, column: 59, scope: !2329, inlinedAt: !2154)
!2455 = !DILocation(line: 167, column: 58, scope: !2329, inlinedAt: !2154)
!2456 = !DILocation(line: 167, column: 19, scope: !2329, inlinedAt: !2154)
!2457 = !DILocation(line: 167, column: 68, scope: !2333, inlinedAt: !2154)
!2458 = !DILocation(line: 167, column: 71, scope: !2333, inlinedAt: !2154)
!2459 = !DILocation(line: 167, column: 84, scope: !2333, inlinedAt: !2154)
!2460 = !DILocation(line: 167, column: 87, scope: !2333, inlinedAt: !2154)
!2461 = !DILocation(line: 167, column: 82, scope: !2333, inlinedAt: !2154)
!2462 = !DILocation(line: 167, column: 19, scope: !2333, inlinedAt: !2154)
!2463 = !DILocation(line: 167, column: 19, scope: !2340, inlinedAt: !2154)
!2464 = !DILocation(line: 167, column: 5, scope: !2340, inlinedAt: !2154)
!2465 = !DILocation(line: 167, column: 8, scope: !2340, inlinedAt: !2154)
!2466 = !DILocation(line: 167, column: 15, scope: !2340, inlinedAt: !2154)
!2467 = !DILocation(line: 882, column: 9, scope: !2345)
!2468 = distinct !{!2468, !2392}
!2469 = !DILocation(line: 892, column: 6, scope: !2095)
!2470 = !DILocation(line: 892, column: 20, scope: !2095)
!2471 = !DILocation(line: 894, column: 12, scope: !2095)
!2472 = !DILocation(line: 894, column: 5, scope: !2095)
!2473 = !DILocation(line: 895, column: 1, scope: !2095)
!2474 = distinct !DISubprogram(name: "on2avc_decode_close", scope: !898, file: !898, line: 991, type: !1031, isLocal: true, isDefinition: true, scopeLine: 992, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!2475 = !DILocalVariable(name: "avctx", arg: 1, scope: !2474, file: !898, line: 991, type: !1033)
!2476 = !DILocation(line: 991, column: 70, scope: !2474)
!2477 = !DILocalVariable(name: "c", scope: !2474, file: !898, line: 993, type: !1687)
!2478 = !DILocation(line: 993, column: 20, scope: !2474)
!2479 = !DILocation(line: 993, column: 24, scope: !2474)
!2480 = !DILocation(line: 993, column: 31, scope: !2474)
!2481 = !DILocation(line: 995, column: 18, scope: !2474)
!2482 = !DILocation(line: 995, column: 21, scope: !2474)
!2483 = !DILocation(line: 995, column: 5, scope: !2474)
!2484 = !DILocation(line: 996, column: 18, scope: !2474)
!2485 = !DILocation(line: 996, column: 21, scope: !2474)
!2486 = !DILocation(line: 996, column: 5, scope: !2474)
!2487 = !DILocation(line: 997, column: 18, scope: !2474)
!2488 = !DILocation(line: 997, column: 21, scope: !2474)
!2489 = !DILocation(line: 997, column: 5, scope: !2474)
!2490 = !DILocation(line: 998, column: 17, scope: !2474)
!2491 = !DILocation(line: 998, column: 20, scope: !2474)
!2492 = !DILocation(line: 998, column: 5, scope: !2474)
!2493 = !DILocation(line: 999, column: 17, scope: !2474)
!2494 = !DILocation(line: 999, column: 20, scope: !2474)
!2495 = !DILocation(line: 999, column: 5, scope: !2474)
!2496 = !DILocation(line: 1000, column: 17, scope: !2474)
!2497 = !DILocation(line: 1000, column: 20, scope: !2474)
!2498 = !DILocation(line: 1000, column: 5, scope: !2474)
!2499 = !DILocation(line: 1001, column: 17, scope: !2474)
!2500 = !DILocation(line: 1001, column: 20, scope: !2474)
!2501 = !DILocation(line: 1001, column: 5, scope: !2474)
!2502 = !DILocation(line: 1003, column: 15, scope: !2474)
!2503 = !DILocation(line: 1003, column: 18, scope: !2474)
!2504 = !DILocation(line: 1003, column: 14, scope: !2474)
!2505 = !DILocation(line: 1003, column: 5, scope: !2474)
!2506 = !DILocation(line: 1005, column: 22, scope: !2474)
!2507 = !DILocation(line: 1005, column: 5, scope: !2474)
!2508 = !DILocation(line: 1007, column: 5, scope: !2474)
!2509 = distinct !DISubprogram(name: "wtf_40", scope: !898, file: !898, line: 528, type: !2510, isLocal: true, isDefinition: true, scopeLine: 529, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!2510 = !DISubroutineType(types: !2511)
!2511 = !{null, !1687, !931, !931, !909}
!2512 = !DILocalVariable(name: "c", arg: 1, scope: !2509, file: !898, line: 528, type: !1687)
!2513 = !DILocation(line: 528, column: 35, scope: !2509)
!2514 = !DILocalVariable(name: "out", arg: 2, scope: !2509, file: !898, line: 528, type: !931)
!2515 = !DILocation(line: 528, column: 45, scope: !2509)
!2516 = !DILocalVariable(name: "src", arg: 3, scope: !2509, file: !898, line: 528, type: !931)
!2517 = !DILocation(line: 528, column: 57, scope: !2509)
!2518 = !DILocalVariable(name: "size", arg: 4, scope: !2509, file: !898, line: 528, type: !909)
!2519 = !DILocation(line: 528, column: 66, scope: !2509)
!2520 = !DILocalVariable(name: "tmp0", scope: !2509, file: !898, line: 530, type: !931)
!2521 = !DILocation(line: 530, column: 12, scope: !2509)
!2522 = !DILocation(line: 530, column: 19, scope: !2509)
!2523 = !DILocation(line: 530, column: 22, scope: !2509)
!2524 = !DILocalVariable(name: "tmp1", scope: !2509, file: !898, line: 530, type: !931)
!2525 = !DILocation(line: 530, column: 29, scope: !2509)
!2526 = !DILocation(line: 530, column: 36, scope: !2509)
!2527 = !DILocation(line: 530, column: 39, scope: !2509)
!2528 = !DILocation(line: 530, column: 44, scope: !2509)
!2529 = !DILocation(line: 532, column: 12, scope: !2509)
!2530 = !DILocation(line: 532, column: 5, scope: !2509)
!2531 = !DILocation(line: 533, column: 12, scope: !2509)
!2532 = !DILocation(line: 533, column: 5, scope: !2509)
!2533 = !DILocation(line: 535, column: 9, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2509, file: !898, line: 535, column: 9)
!2535 = !DILocation(line: 535, column: 14, scope: !2534)
!2536 = !DILocation(line: 535, column: 9, scope: !2509)
!2537 = !DILocation(line: 536, column: 17, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2534, file: !898, line: 535, column: 22)
!2539 = !DILocation(line: 536, column: 23, scope: !2538)
!2540 = !DILocation(line: 536, column: 9, scope: !2538)
!2541 = !DILocation(line: 537, column: 17, scope: !2538)
!2542 = !DILocation(line: 537, column: 21, scope: !2538)
!2543 = !DILocation(line: 537, column: 27, scope: !2538)
!2544 = !DILocation(line: 537, column: 9, scope: !2538)
!2545 = !DILocation(line: 538, column: 17, scope: !2538)
!2546 = !DILocation(line: 538, column: 21, scope: !2538)
!2547 = !DILocation(line: 538, column: 28, scope: !2538)
!2548 = !DILocation(line: 538, column: 9, scope: !2538)
!2549 = !DILocation(line: 539, column: 17, scope: !2538)
!2550 = !DILocation(line: 539, column: 21, scope: !2538)
!2551 = !DILocation(line: 539, column: 28, scope: !2538)
!2552 = !DILocation(line: 539, column: 9, scope: !2538)
!2553 = !DILocation(line: 540, column: 17, scope: !2538)
!2554 = !DILocation(line: 540, column: 21, scope: !2538)
!2555 = !DILocation(line: 540, column: 28, scope: !2538)
!2556 = !DILocation(line: 540, column: 9, scope: !2538)
!2557 = !DILocation(line: 541, column: 17, scope: !2538)
!2558 = !DILocation(line: 541, column: 21, scope: !2538)
!2559 = !DILocation(line: 541, column: 28, scope: !2538)
!2560 = !DILocation(line: 541, column: 9, scope: !2538)
!2561 = !DILocation(line: 542, column: 17, scope: !2538)
!2562 = !DILocation(line: 542, column: 21, scope: !2538)
!2563 = !DILocation(line: 542, column: 28, scope: !2538)
!2564 = !DILocation(line: 542, column: 9, scope: !2538)
!2565 = !DILocation(line: 543, column: 17, scope: !2538)
!2566 = !DILocation(line: 543, column: 21, scope: !2538)
!2567 = !DILocation(line: 543, column: 28, scope: !2538)
!2568 = !DILocation(line: 543, column: 9, scope: !2538)
!2569 = !DILocation(line: 544, column: 18, scope: !2538)
!2570 = !DILocation(line: 544, column: 29, scope: !2538)
!2571 = !DILocation(line: 544, column: 9, scope: !2538)
!2572 = !DILocation(line: 545, column: 18, scope: !2538)
!2573 = !DILocation(line: 545, column: 29, scope: !2538)
!2574 = !DILocation(line: 545, column: 9, scope: !2538)
!2575 = !DILocation(line: 546, column: 18, scope: !2538)
!2576 = !DILocation(line: 546, column: 29, scope: !2538)
!2577 = !DILocation(line: 546, column: 9, scope: !2538)
!2578 = !DILocation(line: 547, column: 18, scope: !2538)
!2579 = !DILocation(line: 547, column: 29, scope: !2538)
!2580 = !DILocation(line: 547, column: 9, scope: !2538)
!2581 = !DILocation(line: 548, column: 17, scope: !2538)
!2582 = !DILocation(line: 548, column: 21, scope: !2538)
!2583 = !DILocation(line: 548, column: 28, scope: !2538)
!2584 = !DILocation(line: 548, column: 9, scope: !2538)
!2585 = !DILocation(line: 549, column: 17, scope: !2538)
!2586 = !DILocation(line: 549, column: 21, scope: !2538)
!2587 = !DILocation(line: 549, column: 28, scope: !2538)
!2588 = !DILocation(line: 549, column: 9, scope: !2538)
!2589 = !DILocation(line: 550, column: 17, scope: !2538)
!2590 = !DILocation(line: 550, column: 21, scope: !2538)
!2591 = !DILocation(line: 550, column: 28, scope: !2538)
!2592 = !DILocation(line: 550, column: 9, scope: !2538)
!2593 = !DILocation(line: 551, column: 17, scope: !2538)
!2594 = !DILocation(line: 551, column: 21, scope: !2538)
!2595 = !DILocation(line: 551, column: 29, scope: !2538)
!2596 = !DILocation(line: 551, column: 9, scope: !2538)
!2597 = !DILocation(line: 552, column: 17, scope: !2538)
!2598 = !DILocation(line: 552, column: 21, scope: !2538)
!2599 = !DILocation(line: 552, column: 29, scope: !2538)
!2600 = !DILocation(line: 552, column: 9, scope: !2538)
!2601 = !DILocation(line: 553, column: 17, scope: !2538)
!2602 = !DILocation(line: 553, column: 21, scope: !2538)
!2603 = !DILocation(line: 553, column: 29, scope: !2538)
!2604 = !DILocation(line: 553, column: 9, scope: !2538)
!2605 = !DILocation(line: 554, column: 17, scope: !2538)
!2606 = !DILocation(line: 554, column: 21, scope: !2538)
!2607 = !DILocation(line: 554, column: 29, scope: !2538)
!2608 = !DILocation(line: 554, column: 9, scope: !2538)
!2609 = !DILocation(line: 555, column: 17, scope: !2538)
!2610 = !DILocation(line: 555, column: 21, scope: !2538)
!2611 = !DILocation(line: 555, column: 29, scope: !2538)
!2612 = !DILocation(line: 555, column: 9, scope: !2538)
!2613 = !DILocation(line: 557, column: 16, scope: !2538)
!2614 = !DILocation(line: 557, column: 9, scope: !2538)
!2615 = !DILocation(line: 559, column: 18, scope: !2538)
!2616 = !DILocation(line: 559, column: 29, scope: !2538)
!2617 = !DILocation(line: 559, column: 9, scope: !2538)
!2618 = !DILocation(line: 560, column: 18, scope: !2538)
!2619 = !DILocation(line: 560, column: 30, scope: !2538)
!2620 = !DILocation(line: 560, column: 9, scope: !2538)
!2621 = !DILocation(line: 561, column: 18, scope: !2538)
!2622 = !DILocation(line: 561, column: 30, scope: !2538)
!2623 = !DILocation(line: 561, column: 9, scope: !2538)
!2624 = !DILocation(line: 562, column: 18, scope: !2538)
!2625 = !DILocation(line: 562, column: 30, scope: !2538)
!2626 = !DILocation(line: 562, column: 9, scope: !2538)
!2627 = !DILocation(line: 563, column: 18, scope: !2538)
!2628 = !DILocation(line: 563, column: 30, scope: !2538)
!2629 = !DILocation(line: 563, column: 9, scope: !2538)
!2630 = !DILocation(line: 564, column: 18, scope: !2538)
!2631 = !DILocation(line: 564, column: 30, scope: !2538)
!2632 = !DILocation(line: 564, column: 9, scope: !2538)
!2633 = !DILocation(line: 565, column: 17, scope: !2538)
!2634 = !DILocation(line: 565, column: 21, scope: !2538)
!2635 = !DILocation(line: 565, column: 29, scope: !2538)
!2636 = !DILocation(line: 565, column: 9, scope: !2538)
!2637 = !DILocation(line: 566, column: 17, scope: !2538)
!2638 = !DILocation(line: 566, column: 21, scope: !2538)
!2639 = !DILocation(line: 566, column: 29, scope: !2538)
!2640 = !DILocation(line: 566, column: 9, scope: !2538)
!2641 = !DILocation(line: 567, column: 17, scope: !2538)
!2642 = !DILocation(line: 567, column: 21, scope: !2538)
!2643 = !DILocation(line: 567, column: 29, scope: !2538)
!2644 = !DILocation(line: 567, column: 9, scope: !2538)
!2645 = !DILocation(line: 568, column: 17, scope: !2538)
!2646 = !DILocation(line: 568, column: 21, scope: !2538)
!2647 = !DILocation(line: 568, column: 29, scope: !2538)
!2648 = !DILocation(line: 568, column: 9, scope: !2538)
!2649 = !DILocation(line: 569, column: 17, scope: !2538)
!2650 = !DILocation(line: 569, column: 21, scope: !2538)
!2651 = !DILocation(line: 569, column: 29, scope: !2538)
!2652 = !DILocation(line: 569, column: 9, scope: !2538)
!2653 = !DILocation(line: 570, column: 17, scope: !2538)
!2654 = !DILocation(line: 570, column: 21, scope: !2538)
!2655 = !DILocation(line: 570, column: 29, scope: !2538)
!2656 = !DILocation(line: 570, column: 9, scope: !2538)
!2657 = !DILocation(line: 572, column: 21, scope: !2538)
!2658 = !DILocation(line: 572, column: 24, scope: !2538)
!2659 = !DILocation(line: 572, column: 29, scope: !2538)
!2660 = !DILocation(line: 572, column: 34, scope: !2538)
!2661 = !DILocation(line: 572, column: 40, scope: !2538)
!2662 = !DILocation(line: 572, column: 9, scope: !2538)
!2663 = !DILocation(line: 573, column: 5, scope: !2538)
!2664 = !DILocation(line: 574, column: 17, scope: !2665)
!2665 = distinct !DILexicalBlock(scope: !2534, file: !898, line: 573, column: 12)
!2666 = !DILocation(line: 574, column: 23, scope: !2665)
!2667 = !DILocation(line: 574, column: 9, scope: !2665)
!2668 = !DILocation(line: 575, column: 17, scope: !2665)
!2669 = !DILocation(line: 575, column: 21, scope: !2665)
!2670 = !DILocation(line: 575, column: 28, scope: !2665)
!2671 = !DILocation(line: 575, column: 9, scope: !2665)
!2672 = !DILocation(line: 576, column: 17, scope: !2665)
!2673 = !DILocation(line: 576, column: 21, scope: !2665)
!2674 = !DILocation(line: 576, column: 28, scope: !2665)
!2675 = !DILocation(line: 576, column: 9, scope: !2665)
!2676 = !DILocation(line: 577, column: 17, scope: !2665)
!2677 = !DILocation(line: 577, column: 21, scope: !2665)
!2678 = !DILocation(line: 577, column: 28, scope: !2665)
!2679 = !DILocation(line: 577, column: 9, scope: !2665)
!2680 = !DILocation(line: 578, column: 17, scope: !2665)
!2681 = !DILocation(line: 578, column: 21, scope: !2665)
!2682 = !DILocation(line: 578, column: 28, scope: !2665)
!2683 = !DILocation(line: 578, column: 9, scope: !2665)
!2684 = !DILocation(line: 579, column: 17, scope: !2665)
!2685 = !DILocation(line: 579, column: 21, scope: !2665)
!2686 = !DILocation(line: 579, column: 28, scope: !2665)
!2687 = !DILocation(line: 579, column: 9, scope: !2665)
!2688 = !DILocation(line: 580, column: 17, scope: !2665)
!2689 = !DILocation(line: 580, column: 21, scope: !2665)
!2690 = !DILocation(line: 580, column: 28, scope: !2665)
!2691 = !DILocation(line: 580, column: 9, scope: !2665)
!2692 = !DILocation(line: 581, column: 17, scope: !2665)
!2693 = !DILocation(line: 581, column: 21, scope: !2665)
!2694 = !DILocation(line: 581, column: 29, scope: !2665)
!2695 = !DILocation(line: 581, column: 9, scope: !2665)
!2696 = !DILocation(line: 582, column: 18, scope: !2665)
!2697 = !DILocation(line: 582, column: 29, scope: !2665)
!2698 = !DILocation(line: 582, column: 9, scope: !2665)
!2699 = !DILocation(line: 583, column: 18, scope: !2665)
!2700 = !DILocation(line: 583, column: 29, scope: !2665)
!2701 = !DILocation(line: 583, column: 9, scope: !2665)
!2702 = !DILocation(line: 584, column: 18, scope: !2665)
!2703 = !DILocation(line: 584, column: 29, scope: !2665)
!2704 = !DILocation(line: 584, column: 9, scope: !2665)
!2705 = !DILocation(line: 585, column: 18, scope: !2665)
!2706 = !DILocation(line: 585, column: 29, scope: !2665)
!2707 = !DILocation(line: 585, column: 9, scope: !2665)
!2708 = !DILocation(line: 586, column: 17, scope: !2665)
!2709 = !DILocation(line: 586, column: 21, scope: !2665)
!2710 = !DILocation(line: 586, column: 29, scope: !2665)
!2711 = !DILocation(line: 586, column: 9, scope: !2665)
!2712 = !DILocation(line: 587, column: 17, scope: !2665)
!2713 = !DILocation(line: 587, column: 21, scope: !2665)
!2714 = !DILocation(line: 587, column: 29, scope: !2665)
!2715 = !DILocation(line: 587, column: 9, scope: !2665)
!2716 = !DILocation(line: 588, column: 17, scope: !2665)
!2717 = !DILocation(line: 588, column: 21, scope: !2665)
!2718 = !DILocation(line: 588, column: 29, scope: !2665)
!2719 = !DILocation(line: 588, column: 9, scope: !2665)
!2720 = !DILocation(line: 589, column: 17, scope: !2665)
!2721 = !DILocation(line: 589, column: 21, scope: !2665)
!2722 = !DILocation(line: 589, column: 29, scope: !2665)
!2723 = !DILocation(line: 589, column: 9, scope: !2665)
!2724 = !DILocation(line: 590, column: 17, scope: !2665)
!2725 = !DILocation(line: 590, column: 21, scope: !2665)
!2726 = !DILocation(line: 590, column: 29, scope: !2665)
!2727 = !DILocation(line: 590, column: 9, scope: !2665)
!2728 = !DILocation(line: 591, column: 17, scope: !2665)
!2729 = !DILocation(line: 591, column: 21, scope: !2665)
!2730 = !DILocation(line: 591, column: 29, scope: !2665)
!2731 = !DILocation(line: 591, column: 9, scope: !2665)
!2732 = !DILocation(line: 592, column: 17, scope: !2665)
!2733 = !DILocation(line: 592, column: 21, scope: !2665)
!2734 = !DILocation(line: 592, column: 29, scope: !2665)
!2735 = !DILocation(line: 592, column: 9, scope: !2665)
!2736 = !DILocation(line: 593, column: 17, scope: !2665)
!2737 = !DILocation(line: 593, column: 21, scope: !2665)
!2738 = !DILocation(line: 593, column: 29, scope: !2665)
!2739 = !DILocation(line: 593, column: 9, scope: !2665)
!2740 = !DILocation(line: 595, column: 16, scope: !2665)
!2741 = !DILocation(line: 595, column: 9, scope: !2665)
!2742 = !DILocation(line: 597, column: 18, scope: !2665)
!2743 = !DILocation(line: 597, column: 29, scope: !2665)
!2744 = !DILocation(line: 597, column: 9, scope: !2665)
!2745 = !DILocation(line: 598, column: 18, scope: !2665)
!2746 = !DILocation(line: 598, column: 30, scope: !2665)
!2747 = !DILocation(line: 598, column: 9, scope: !2665)
!2748 = !DILocation(line: 599, column: 18, scope: !2665)
!2749 = !DILocation(line: 599, column: 30, scope: !2665)
!2750 = !DILocation(line: 599, column: 9, scope: !2665)
!2751 = !DILocation(line: 600, column: 18, scope: !2665)
!2752 = !DILocation(line: 600, column: 30, scope: !2665)
!2753 = !DILocation(line: 600, column: 9, scope: !2665)
!2754 = !DILocation(line: 601, column: 18, scope: !2665)
!2755 = !DILocation(line: 601, column: 30, scope: !2665)
!2756 = !DILocation(line: 601, column: 9, scope: !2665)
!2757 = !DILocation(line: 602, column: 18, scope: !2665)
!2758 = !DILocation(line: 602, column: 30, scope: !2665)
!2759 = !DILocation(line: 602, column: 9, scope: !2665)
!2760 = !DILocation(line: 603, column: 17, scope: !2665)
!2761 = !DILocation(line: 603, column: 21, scope: !2665)
!2762 = !DILocation(line: 603, column: 29, scope: !2665)
!2763 = !DILocation(line: 603, column: 9, scope: !2665)
!2764 = !DILocation(line: 604, column: 17, scope: !2665)
!2765 = !DILocation(line: 604, column: 21, scope: !2665)
!2766 = !DILocation(line: 604, column: 29, scope: !2665)
!2767 = !DILocation(line: 604, column: 9, scope: !2665)
!2768 = !DILocation(line: 605, column: 17, scope: !2665)
!2769 = !DILocation(line: 605, column: 21, scope: !2665)
!2770 = !DILocation(line: 605, column: 29, scope: !2665)
!2771 = !DILocation(line: 605, column: 9, scope: !2665)
!2772 = !DILocation(line: 606, column: 17, scope: !2665)
!2773 = !DILocation(line: 606, column: 21, scope: !2665)
!2774 = !DILocation(line: 606, column: 29, scope: !2665)
!2775 = !DILocation(line: 606, column: 9, scope: !2665)
!2776 = !DILocation(line: 607, column: 17, scope: !2665)
!2777 = !DILocation(line: 607, column: 21, scope: !2665)
!2778 = !DILocation(line: 607, column: 29, scope: !2665)
!2779 = !DILocation(line: 607, column: 9, scope: !2665)
!2780 = !DILocation(line: 608, column: 17, scope: !2665)
!2781 = !DILocation(line: 608, column: 21, scope: !2665)
!2782 = !DILocation(line: 608, column: 29, scope: !2665)
!2783 = !DILocation(line: 608, column: 9, scope: !2665)
!2784 = !DILocation(line: 610, column: 22, scope: !2665)
!2785 = !DILocation(line: 610, column: 25, scope: !2665)
!2786 = !DILocation(line: 610, column: 30, scope: !2665)
!2787 = !DILocation(line: 610, column: 35, scope: !2665)
!2788 = !DILocation(line: 610, column: 41, scope: !2665)
!2789 = !DILocation(line: 610, column: 9, scope: !2665)
!2790 = !DILocation(line: 612, column: 1, scope: !2509)
!2791 = distinct !DISubprogram(name: "wtf_44", scope: !898, file: !898, line: 614, type: !2510, isLocal: true, isDefinition: true, scopeLine: 615, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!2792 = !DILocalVariable(name: "c", arg: 1, scope: !2791, file: !898, line: 614, type: !1687)
!2793 = !DILocation(line: 614, column: 35, scope: !2791)
!2794 = !DILocalVariable(name: "out", arg: 2, scope: !2791, file: !898, line: 614, type: !931)
!2795 = !DILocation(line: 614, column: 45, scope: !2791)
!2796 = !DILocalVariable(name: "src", arg: 3, scope: !2791, file: !898, line: 614, type: !931)
!2797 = !DILocation(line: 614, column: 57, scope: !2791)
!2798 = !DILocalVariable(name: "size", arg: 4, scope: !2791, file: !898, line: 614, type: !909)
!2799 = !DILocation(line: 614, column: 66, scope: !2791)
!2800 = !DILocalVariable(name: "tmp0", scope: !2791, file: !898, line: 616, type: !931)
!2801 = !DILocation(line: 616, column: 12, scope: !2791)
!2802 = !DILocation(line: 616, column: 19, scope: !2791)
!2803 = !DILocation(line: 616, column: 22, scope: !2791)
!2804 = !DILocalVariable(name: "tmp1", scope: !2791, file: !898, line: 616, type: !931)
!2805 = !DILocation(line: 616, column: 29, scope: !2791)
!2806 = !DILocation(line: 616, column: 36, scope: !2791)
!2807 = !DILocation(line: 616, column: 39, scope: !2791)
!2808 = !DILocation(line: 616, column: 44, scope: !2791)
!2809 = !DILocation(line: 618, column: 12, scope: !2791)
!2810 = !DILocation(line: 618, column: 5, scope: !2791)
!2811 = !DILocation(line: 619, column: 12, scope: !2791)
!2812 = !DILocation(line: 619, column: 5, scope: !2791)
!2813 = !DILocation(line: 621, column: 9, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2791, file: !898, line: 621, column: 9)
!2815 = !DILocation(line: 621, column: 14, scope: !2814)
!2816 = !DILocation(line: 621, column: 9, scope: !2791)
!2817 = !DILocation(line: 622, column: 17, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2814, file: !898, line: 621, column: 22)
!2819 = !DILocation(line: 622, column: 23, scope: !2818)
!2820 = !DILocation(line: 622, column: 9, scope: !2818)
!2821 = !DILocation(line: 623, column: 17, scope: !2818)
!2822 = !DILocation(line: 623, column: 21, scope: !2818)
!2823 = !DILocation(line: 623, column: 27, scope: !2818)
!2824 = !DILocation(line: 623, column: 9, scope: !2818)
!2825 = !DILocation(line: 624, column: 17, scope: !2818)
!2826 = !DILocation(line: 624, column: 21, scope: !2818)
!2827 = !DILocation(line: 624, column: 28, scope: !2818)
!2828 = !DILocation(line: 624, column: 9, scope: !2818)
!2829 = !DILocation(line: 625, column: 17, scope: !2818)
!2830 = !DILocation(line: 625, column: 21, scope: !2818)
!2831 = !DILocation(line: 625, column: 28, scope: !2818)
!2832 = !DILocation(line: 625, column: 9, scope: !2818)
!2833 = !DILocation(line: 626, column: 17, scope: !2818)
!2834 = !DILocation(line: 626, column: 21, scope: !2818)
!2835 = !DILocation(line: 626, column: 28, scope: !2818)
!2836 = !DILocation(line: 626, column: 9, scope: !2818)
!2837 = !DILocation(line: 627, column: 17, scope: !2818)
!2838 = !DILocation(line: 627, column: 21, scope: !2818)
!2839 = !DILocation(line: 627, column: 28, scope: !2818)
!2840 = !DILocation(line: 627, column: 9, scope: !2818)
!2841 = !DILocation(line: 628, column: 17, scope: !2818)
!2842 = !DILocation(line: 628, column: 21, scope: !2818)
!2843 = !DILocation(line: 628, column: 28, scope: !2818)
!2844 = !DILocation(line: 628, column: 9, scope: !2818)
!2845 = !DILocation(line: 629, column: 17, scope: !2818)
!2846 = !DILocation(line: 629, column: 21, scope: !2818)
!2847 = !DILocation(line: 629, column: 28, scope: !2818)
!2848 = !DILocation(line: 629, column: 9, scope: !2818)
!2849 = !DILocation(line: 630, column: 18, scope: !2818)
!2850 = !DILocation(line: 630, column: 29, scope: !2818)
!2851 = !DILocation(line: 630, column: 9, scope: !2818)
!2852 = !DILocation(line: 631, column: 18, scope: !2818)
!2853 = !DILocation(line: 631, column: 29, scope: !2818)
!2854 = !DILocation(line: 631, column: 9, scope: !2818)
!2855 = !DILocation(line: 632, column: 18, scope: !2818)
!2856 = !DILocation(line: 632, column: 29, scope: !2818)
!2857 = !DILocation(line: 632, column: 9, scope: !2818)
!2858 = !DILocation(line: 633, column: 18, scope: !2818)
!2859 = !DILocation(line: 633, column: 29, scope: !2818)
!2860 = !DILocation(line: 633, column: 9, scope: !2818)
!2861 = !DILocation(line: 634, column: 17, scope: !2818)
!2862 = !DILocation(line: 634, column: 21, scope: !2818)
!2863 = !DILocation(line: 634, column: 28, scope: !2818)
!2864 = !DILocation(line: 634, column: 9, scope: !2818)
!2865 = !DILocation(line: 635, column: 17, scope: !2818)
!2866 = !DILocation(line: 635, column: 21, scope: !2818)
!2867 = !DILocation(line: 635, column: 28, scope: !2818)
!2868 = !DILocation(line: 635, column: 9, scope: !2818)
!2869 = !DILocation(line: 636, column: 17, scope: !2818)
!2870 = !DILocation(line: 636, column: 21, scope: !2818)
!2871 = !DILocation(line: 636, column: 28, scope: !2818)
!2872 = !DILocation(line: 636, column: 9, scope: !2818)
!2873 = !DILocation(line: 637, column: 17, scope: !2818)
!2874 = !DILocation(line: 637, column: 21, scope: !2818)
!2875 = !DILocation(line: 637, column: 29, scope: !2818)
!2876 = !DILocation(line: 637, column: 9, scope: !2818)
!2877 = !DILocation(line: 639, column: 16, scope: !2818)
!2878 = !DILocation(line: 639, column: 9, scope: !2818)
!2879 = !DILocation(line: 641, column: 18, scope: !2818)
!2880 = !DILocation(line: 641, column: 29, scope: !2818)
!2881 = !DILocation(line: 641, column: 9, scope: !2818)
!2882 = !DILocation(line: 642, column: 18, scope: !2818)
!2883 = !DILocation(line: 642, column: 29, scope: !2818)
!2884 = !DILocation(line: 642, column: 9, scope: !2818)
!2885 = !DILocation(line: 643, column: 18, scope: !2818)
!2886 = !DILocation(line: 643, column: 29, scope: !2818)
!2887 = !DILocation(line: 643, column: 9, scope: !2818)
!2888 = !DILocation(line: 644, column: 18, scope: !2818)
!2889 = !DILocation(line: 644, column: 29, scope: !2818)
!2890 = !DILocation(line: 644, column: 9, scope: !2818)
!2891 = !DILocation(line: 645, column: 17, scope: !2818)
!2892 = !DILocation(line: 645, column: 21, scope: !2818)
!2893 = !DILocation(line: 645, column: 29, scope: !2818)
!2894 = !DILocation(line: 645, column: 9, scope: !2818)
!2895 = !DILocation(line: 646, column: 17, scope: !2818)
!2896 = !DILocation(line: 646, column: 21, scope: !2818)
!2897 = !DILocation(line: 646, column: 29, scope: !2818)
!2898 = !DILocation(line: 646, column: 9, scope: !2818)
!2899 = !DILocation(line: 647, column: 17, scope: !2818)
!2900 = !DILocation(line: 647, column: 21, scope: !2818)
!2901 = !DILocation(line: 647, column: 29, scope: !2818)
!2902 = !DILocation(line: 647, column: 9, scope: !2818)
!2903 = !DILocation(line: 648, column: 17, scope: !2818)
!2904 = !DILocation(line: 648, column: 21, scope: !2818)
!2905 = !DILocation(line: 648, column: 29, scope: !2818)
!2906 = !DILocation(line: 648, column: 9, scope: !2818)
!2907 = !DILocation(line: 649, column: 17, scope: !2818)
!2908 = !DILocation(line: 649, column: 21, scope: !2818)
!2909 = !DILocation(line: 649, column: 29, scope: !2818)
!2910 = !DILocation(line: 649, column: 9, scope: !2818)
!2911 = !DILocation(line: 650, column: 17, scope: !2818)
!2912 = !DILocation(line: 650, column: 21, scope: !2818)
!2913 = !DILocation(line: 650, column: 29, scope: !2818)
!2914 = !DILocation(line: 650, column: 9, scope: !2818)
!2915 = !DILocation(line: 652, column: 21, scope: !2818)
!2916 = !DILocation(line: 652, column: 24, scope: !2818)
!2917 = !DILocation(line: 652, column: 29, scope: !2818)
!2918 = !DILocation(line: 652, column: 34, scope: !2818)
!2919 = !DILocation(line: 652, column: 40, scope: !2818)
!2920 = !DILocation(line: 652, column: 9, scope: !2818)
!2921 = !DILocation(line: 653, column: 5, scope: !2818)
!2922 = !DILocation(line: 654, column: 17, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2814, file: !898, line: 653, column: 12)
!2924 = !DILocation(line: 654, column: 23, scope: !2923)
!2925 = !DILocation(line: 654, column: 9, scope: !2923)
!2926 = !DILocation(line: 655, column: 17, scope: !2923)
!2927 = !DILocation(line: 655, column: 21, scope: !2923)
!2928 = !DILocation(line: 655, column: 28, scope: !2923)
!2929 = !DILocation(line: 655, column: 9, scope: !2923)
!2930 = !DILocation(line: 656, column: 17, scope: !2923)
!2931 = !DILocation(line: 656, column: 21, scope: !2923)
!2932 = !DILocation(line: 656, column: 28, scope: !2923)
!2933 = !DILocation(line: 656, column: 9, scope: !2923)
!2934 = !DILocation(line: 657, column: 17, scope: !2923)
!2935 = !DILocation(line: 657, column: 21, scope: !2923)
!2936 = !DILocation(line: 657, column: 28, scope: !2923)
!2937 = !DILocation(line: 657, column: 9, scope: !2923)
!2938 = !DILocation(line: 658, column: 17, scope: !2923)
!2939 = !DILocation(line: 658, column: 21, scope: !2923)
!2940 = !DILocation(line: 658, column: 28, scope: !2923)
!2941 = !DILocation(line: 658, column: 9, scope: !2923)
!2942 = !DILocation(line: 659, column: 17, scope: !2923)
!2943 = !DILocation(line: 659, column: 21, scope: !2923)
!2944 = !DILocation(line: 659, column: 28, scope: !2923)
!2945 = !DILocation(line: 659, column: 9, scope: !2923)
!2946 = !DILocation(line: 660, column: 17, scope: !2923)
!2947 = !DILocation(line: 660, column: 21, scope: !2923)
!2948 = !DILocation(line: 660, column: 28, scope: !2923)
!2949 = !DILocation(line: 660, column: 9, scope: !2923)
!2950 = !DILocation(line: 661, column: 17, scope: !2923)
!2951 = !DILocation(line: 661, column: 21, scope: !2923)
!2952 = !DILocation(line: 661, column: 29, scope: !2923)
!2953 = !DILocation(line: 661, column: 9, scope: !2923)
!2954 = !DILocation(line: 662, column: 18, scope: !2923)
!2955 = !DILocation(line: 662, column: 29, scope: !2923)
!2956 = !DILocation(line: 662, column: 9, scope: !2923)
!2957 = !DILocation(line: 663, column: 18, scope: !2923)
!2958 = !DILocation(line: 663, column: 29, scope: !2923)
!2959 = !DILocation(line: 663, column: 9, scope: !2923)
!2960 = !DILocation(line: 664, column: 18, scope: !2923)
!2961 = !DILocation(line: 664, column: 29, scope: !2923)
!2962 = !DILocation(line: 664, column: 9, scope: !2923)
!2963 = !DILocation(line: 665, column: 18, scope: !2923)
!2964 = !DILocation(line: 665, column: 29, scope: !2923)
!2965 = !DILocation(line: 665, column: 9, scope: !2923)
!2966 = !DILocation(line: 666, column: 17, scope: !2923)
!2967 = !DILocation(line: 666, column: 21, scope: !2923)
!2968 = !DILocation(line: 666, column: 29, scope: !2923)
!2969 = !DILocation(line: 666, column: 9, scope: !2923)
!2970 = !DILocation(line: 667, column: 17, scope: !2923)
!2971 = !DILocation(line: 667, column: 21, scope: !2923)
!2972 = !DILocation(line: 667, column: 29, scope: !2923)
!2973 = !DILocation(line: 667, column: 9, scope: !2923)
!2974 = !DILocation(line: 668, column: 17, scope: !2923)
!2975 = !DILocation(line: 668, column: 21, scope: !2923)
!2976 = !DILocation(line: 668, column: 29, scope: !2923)
!2977 = !DILocation(line: 668, column: 9, scope: !2923)
!2978 = !DILocation(line: 669, column: 17, scope: !2923)
!2979 = !DILocation(line: 669, column: 21, scope: !2923)
!2980 = !DILocation(line: 669, column: 29, scope: !2923)
!2981 = !DILocation(line: 669, column: 9, scope: !2923)
!2982 = !DILocation(line: 671, column: 16, scope: !2923)
!2983 = !DILocation(line: 671, column: 9, scope: !2923)
!2984 = !DILocation(line: 673, column: 18, scope: !2923)
!2985 = !DILocation(line: 673, column: 29, scope: !2923)
!2986 = !DILocation(line: 673, column: 9, scope: !2923)
!2987 = !DILocation(line: 674, column: 18, scope: !2923)
!2988 = !DILocation(line: 674, column: 30, scope: !2923)
!2989 = !DILocation(line: 674, column: 9, scope: !2923)
!2990 = !DILocation(line: 675, column: 18, scope: !2923)
!2991 = !DILocation(line: 675, column: 30, scope: !2923)
!2992 = !DILocation(line: 675, column: 9, scope: !2923)
!2993 = !DILocation(line: 676, column: 18, scope: !2923)
!2994 = !DILocation(line: 676, column: 30, scope: !2923)
!2995 = !DILocation(line: 676, column: 9, scope: !2923)
!2996 = !DILocation(line: 677, column: 17, scope: !2923)
!2997 = !DILocation(line: 677, column: 21, scope: !2923)
!2998 = !DILocation(line: 677, column: 29, scope: !2923)
!2999 = !DILocation(line: 677, column: 9, scope: !2923)
!3000 = !DILocation(line: 678, column: 17, scope: !2923)
!3001 = !DILocation(line: 678, column: 21, scope: !2923)
!3002 = !DILocation(line: 678, column: 29, scope: !2923)
!3003 = !DILocation(line: 678, column: 9, scope: !2923)
!3004 = !DILocation(line: 679, column: 17, scope: !2923)
!3005 = !DILocation(line: 679, column: 21, scope: !2923)
!3006 = !DILocation(line: 679, column: 29, scope: !2923)
!3007 = !DILocation(line: 679, column: 9, scope: !2923)
!3008 = !DILocation(line: 680, column: 17, scope: !2923)
!3009 = !DILocation(line: 680, column: 21, scope: !2923)
!3010 = !DILocation(line: 680, column: 29, scope: !2923)
!3011 = !DILocation(line: 680, column: 9, scope: !2923)
!3012 = !DILocation(line: 681, column: 17, scope: !2923)
!3013 = !DILocation(line: 681, column: 21, scope: !2923)
!3014 = !DILocation(line: 681, column: 29, scope: !2923)
!3015 = !DILocation(line: 681, column: 9, scope: !2923)
!3016 = !DILocation(line: 682, column: 17, scope: !2923)
!3017 = !DILocation(line: 682, column: 21, scope: !2923)
!3018 = !DILocation(line: 682, column: 29, scope: !2923)
!3019 = !DILocation(line: 682, column: 9, scope: !2923)
!3020 = !DILocation(line: 684, column: 22, scope: !2923)
!3021 = !DILocation(line: 684, column: 25, scope: !2923)
!3022 = !DILocation(line: 684, column: 30, scope: !2923)
!3023 = !DILocation(line: 684, column: 35, scope: !2923)
!3024 = !DILocation(line: 684, column: 41, scope: !2923)
!3025 = !DILocation(line: 684, column: 9, scope: !2923)
!3026 = !DILocation(line: 686, column: 1, scope: !2791)
!3027 = distinct !DISubprogram(name: "on2avc_free_vlcs", scope: !898, file: !898, line: 897, type: !3028, isLocal: true, isDefinition: true, scopeLine: 898, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{null, !1687}
!3030 = !DILocalVariable(name: "c", arg: 1, scope: !3027, file: !898, line: 897, type: !1687)
!3031 = !DILocation(line: 897, column: 67, scope: !3027)
!3032 = !DILocalVariable(name: "i", scope: !3027, file: !898, line: 899, type: !909)
!3033 = !DILocation(line: 899, column: 9, scope: !3027)
!3034 = !DILocation(line: 901, column: 18, scope: !3027)
!3035 = !DILocation(line: 901, column: 21, scope: !3027)
!3036 = !DILocation(line: 901, column: 5, scope: !3027)
!3037 = !DILocation(line: 902, column: 12, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3027, file: !898, line: 902, column: 5)
!3039 = !DILocation(line: 902, column: 10, scope: !3038)
!3040 = !DILocation(line: 902, column: 17, scope: !3041)
!3041 = !DILexicalBlockFile(scope: !3042, file: !898, discriminator: 1)
!3042 = distinct !DILexicalBlock(scope: !3038, file: !898, line: 902, column: 5)
!3043 = !DILocation(line: 902, column: 19, scope: !3041)
!3044 = !DILocation(line: 902, column: 5, scope: !3041)
!3045 = !DILocation(line: 903, column: 32, scope: !3042)
!3046 = !DILocation(line: 903, column: 22, scope: !3042)
!3047 = !DILocation(line: 903, column: 25, scope: !3042)
!3048 = !DILocation(line: 903, column: 9, scope: !3042)
!3049 = !DILocation(line: 902, column: 26, scope: !3050)
!3050 = !DILexicalBlockFile(scope: !3042, file: !898, discriminator: 2)
!3051 = !DILocation(line: 902, column: 5, scope: !3050)
!3052 = distinct !{!3052, !3053}
!3053 = !DILocation(line: 902, column: 5, scope: !3027)
!3054 = !DILocation(line: 904, column: 1, scope: !3027)
!3055 = distinct !DISubprogram(name: "twiddle", scope: !898, file: !898, line: 348, type: !3056, isLocal: true, isDefinition: true, scopeLine: 351, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{null, !931, !931, !909, !1713, !909, !909, !909, !909, !3058}
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 64, align: 64)
!3059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1713)
!3060 = !DILocalVariable(name: "src1", arg: 1, scope: !3055, file: !898, line: 348, type: !931)
!3061 = !DILocation(line: 348, column: 28, scope: !3055)
!3062 = !DILocalVariable(name: "src2", arg: 2, scope: !3055, file: !898, line: 348, type: !931)
!3063 = !DILocation(line: 348, column: 41, scope: !3055)
!3064 = !DILocalVariable(name: "src2_len", arg: 3, scope: !3055, file: !898, line: 348, type: !909)
!3065 = !DILocation(line: 348, column: 51, scope: !3055)
!3066 = !DILocalVariable(name: "tab", arg: 4, scope: !3055, file: !898, line: 349, type: !1713)
!3067 = !DILocation(line: 349, column: 35, scope: !3055)
!3068 = !DILocalVariable(name: "tab_len", arg: 5, scope: !3055, file: !898, line: 349, type: !909)
!3069 = !DILocation(line: 349, column: 44, scope: !3055)
!3070 = !DILocalVariable(name: "step", arg: 6, scope: !3055, file: !898, line: 349, type: !909)
!3071 = !DILocation(line: 349, column: 57, scope: !3055)
!3072 = !DILocalVariable(name: "order0", arg: 7, scope: !3055, file: !898, line: 350, type: !909)
!3073 = !DILocation(line: 350, column: 25, scope: !3055)
!3074 = !DILocalVariable(name: "order1", arg: 8, scope: !3055, file: !898, line: 350, type: !909)
!3075 = !DILocation(line: 350, column: 37, scope: !3055)
!3076 = !DILocalVariable(name: "tabs", arg: 9, scope: !3055, file: !898, line: 350, type: !3058)
!3077 = !DILocation(line: 350, column: 67, scope: !3055)
!3078 = !DILocalVariable(name: "steps", scope: !3055, file: !898, line: 352, type: !909)
!3079 = !DILocation(line: 352, column: 9, scope: !3055)
!3080 = !DILocalVariable(name: "mask", scope: !3055, file: !898, line: 353, type: !909)
!3081 = !DILocation(line: 353, column: 9, scope: !3055)
!3082 = !DILocalVariable(name: "i", scope: !3055, file: !898, line: 354, type: !909)
!3083 = !DILocation(line: 354, column: 9, scope: !3055)
!3084 = !DILocalVariable(name: "j", scope: !3055, file: !898, line: 354, type: !909)
!3085 = !DILocation(line: 354, column: 12, scope: !3055)
!3086 = !DILocation(line: 356, column: 14, scope: !3055)
!3087 = !DILocation(line: 356, column: 25, scope: !3055)
!3088 = !DILocation(line: 356, column: 23, scope: !3055)
!3089 = !DILocation(line: 356, column: 36, scope: !3055)
!3090 = !DILocation(line: 356, column: 34, scope: !3055)
!3091 = !DILocation(line: 356, column: 41, scope: !3055)
!3092 = !DILocation(line: 356, column: 11, scope: !3055)
!3093 = !DILocation(line: 357, column: 16, scope: !3055)
!3094 = !DILocation(line: 357, column: 22, scope: !3055)
!3095 = !DILocation(line: 357, column: 28, scope: !3055)
!3096 = !DILocation(line: 357, column: 38, scope: !3055)
!3097 = !DILocation(line: 357, column: 47, scope: !3055)
!3098 = !DILocation(line: 357, column: 53, scope: !3055)
!3099 = !DILocation(line: 357, column: 61, scope: !3055)
!3100 = !DILocation(line: 357, column: 69, scope: !3055)
!3101 = !DILocation(line: 357, column: 5, scope: !3055)
!3102 = !DILocation(line: 358, column: 12, scope: !3055)
!3103 = !DILocation(line: 358, column: 20, scope: !3055)
!3104 = !DILocation(line: 358, column: 10, scope: !3055)
!3105 = !DILocation(line: 360, column: 12, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3055, file: !898, line: 360, column: 5)
!3107 = !DILocation(line: 360, column: 10, scope: !3106)
!3108 = !DILocation(line: 360, column: 17, scope: !3109)
!3109 = !DILexicalBlockFile(scope: !3110, file: !898, discriminator: 1)
!3110 = distinct !DILexicalBlock(scope: !3106, file: !898, line: 360, column: 5)
!3111 = !DILocation(line: 360, column: 21, scope: !3109)
!3112 = !DILocation(line: 360, column: 19, scope: !3109)
!3113 = !DILocation(line: 360, column: 5, scope: !3109)
!3114 = !DILocalVariable(name: "in0", scope: !3115, file: !898, line: 361, type: !918)
!3115 = distinct !DILexicalBlock(scope: !3110, file: !898, line: 360, column: 33)
!3116 = !DILocation(line: 361, column: 15, scope: !3115)
!3117 = !DILocation(line: 361, column: 26, scope: !3115)
!3118 = !DILocation(line: 361, column: 35, scope: !3115)
!3119 = !DILocation(line: 361, column: 33, scope: !3115)
!3120 = !DILocation(line: 361, column: 21, scope: !3115)
!3121 = !DILocalVariable(name: "pos", scope: !3115, file: !898, line: 362, type: !909)
!3122 = !DILocation(line: 362, column: 13, scope: !3115)
!3123 = !DILocation(line: 362, column: 20, scope: !3115)
!3124 = !DILocation(line: 362, column: 29, scope: !3115)
!3125 = !DILocation(line: 362, column: 36, scope: !3115)
!3126 = !DILocation(line: 362, column: 34, scope: !3115)
!3127 = !DILocation(line: 364, column: 13, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3115, file: !898, line: 364, column: 13)
!3129 = !DILocation(line: 364, column: 19, scope: !3128)
!3130 = !DILocation(line: 364, column: 17, scope: !3128)
!3131 = !DILocation(line: 364, column: 13, scope: !3115)
!3132 = !DILocalVariable(name: "t", scope: !3133, file: !898, line: 365, type: !1713)
!3133 = distinct !DILexicalBlock(scope: !3128, file: !898, line: 364, column: 28)
!3134 = !DILocation(line: 365, column: 27, scope: !3133)
!3135 = !DILocation(line: 365, column: 31, scope: !3133)
!3136 = !DILocation(line: 366, column: 22, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3133, file: !898, line: 366, column: 13)
!3138 = !DILocation(line: 366, column: 20, scope: !3137)
!3139 = !DILocation(line: 366, column: 18, scope: !3137)
!3140 = !DILocation(line: 366, column: 27, scope: !3141)
!3141 = !DILexicalBlockFile(scope: !3142, file: !898, discriminator: 1)
!3142 = distinct !DILexicalBlock(scope: !3137, file: !898, line: 366, column: 13)
!3143 = !DILocation(line: 366, column: 29, scope: !3141)
!3144 = !DILocation(line: 366, column: 13, scope: !3141)
!3145 = !DILocation(line: 367, column: 28, scope: !3142)
!3146 = !DILocation(line: 367, column: 36, scope: !3142)
!3147 = !DILocation(line: 367, column: 34, scope: !3142)
!3148 = !DILocation(line: 367, column: 32, scope: !3142)
!3149 = !DILocation(line: 367, column: 22, scope: !3142)
!3150 = !DILocation(line: 367, column: 17, scope: !3142)
!3151 = !DILocation(line: 367, column: 25, scope: !3142)
!3152 = !DILocation(line: 366, column: 36, scope: !3153)
!3153 = !DILexicalBlockFile(scope: !3142, file: !898, discriminator: 2)
!3154 = !DILocation(line: 366, column: 13, scope: !3153)
!3155 = distinct !{!3155, !3156}
!3156 = !DILocation(line: 366, column: 13, scope: !3133)
!3157 = !DILocation(line: 368, column: 20, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3133, file: !898, line: 368, column: 13)
!3159 = !DILocation(line: 368, column: 18, scope: !3158)
!3160 = !DILocation(line: 368, column: 25, scope: !3161)
!3161 = !DILexicalBlockFile(scope: !3162, file: !898, discriminator: 1)
!3162 = distinct !DILexicalBlock(scope: !3158, file: !898, line: 368, column: 13)
!3163 = !DILocation(line: 368, column: 29, scope: !3161)
!3164 = !DILocation(line: 368, column: 39, scope: !3161)
!3165 = !DILocation(line: 368, column: 37, scope: !3161)
!3166 = !DILocation(line: 368, column: 43, scope: !3161)
!3167 = !DILocation(line: 368, column: 27, scope: !3161)
!3168 = !DILocation(line: 368, column: 13, scope: !3161)
!3169 = !DILocation(line: 369, column: 43, scope: !3162)
!3170 = !DILocation(line: 369, column: 53, scope: !3162)
!3171 = !DILocation(line: 369, column: 57, scope: !3162)
!3172 = !DILocation(line: 369, column: 63, scope: !3162)
!3173 = !DILocation(line: 369, column: 61, scope: !3162)
!3174 = !DILocation(line: 369, column: 49, scope: !3162)
!3175 = !DILocation(line: 369, column: 47, scope: !3162)
!3176 = !DILocation(line: 369, column: 22, scope: !3162)
!3177 = !DILocation(line: 369, column: 33, scope: !3162)
!3178 = !DILocation(line: 369, column: 31, scope: !3162)
!3179 = !DILocation(line: 369, column: 35, scope: !3162)
!3180 = !DILocation(line: 369, column: 17, scope: !3162)
!3181 = !DILocation(line: 369, column: 40, scope: !3162)
!3182 = !DILocation(line: 368, column: 49, scope: !3183)
!3183 = !DILexicalBlockFile(scope: !3162, file: !898, discriminator: 2)
!3184 = !DILocation(line: 368, column: 13, scope: !3183)
!3185 = distinct !{!3185, !3186}
!3186 = !DILocation(line: 368, column: 13, scope: !3133)
!3187 = !DILocation(line: 370, column: 9, scope: !3133)
!3188 = !DILocation(line: 371, column: 20, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3190, file: !898, line: 371, column: 13)
!3190 = distinct !DILexicalBlock(scope: !3128, file: !898, line: 370, column: 16)
!3191 = !DILocation(line: 371, column: 18, scope: !3189)
!3192 = !DILocation(line: 371, column: 25, scope: !3193)
!3193 = !DILexicalBlockFile(scope: !3194, file: !898, discriminator: 1)
!3194 = distinct !DILexicalBlock(scope: !3189, file: !898, line: 371, column: 13)
!3195 = !DILocation(line: 371, column: 29, scope: !3193)
!3196 = !DILocation(line: 371, column: 27, scope: !3193)
!3197 = !DILocation(line: 371, column: 13, scope: !3193)
!3198 = !DILocation(line: 372, column: 34, scope: !3194)
!3199 = !DILocation(line: 372, column: 44, scope: !3194)
!3200 = !DILocation(line: 372, column: 40, scope: !3194)
!3201 = !DILocation(line: 372, column: 38, scope: !3194)
!3202 = !DILocation(line: 372, column: 22, scope: !3194)
!3203 = !DILocation(line: 372, column: 28, scope: !3194)
!3204 = !DILocation(line: 372, column: 26, scope: !3194)
!3205 = !DILocation(line: 372, column: 17, scope: !3194)
!3206 = !DILocation(line: 372, column: 31, scope: !3194)
!3207 = !DILocation(line: 371, column: 39, scope: !3208)
!3208 = !DILexicalBlockFile(scope: !3194, file: !898, discriminator: 2)
!3209 = !DILocation(line: 371, column: 13, scope: !3208)
!3210 = distinct !{!3210, !3211}
!3211 = !DILocation(line: 371, column: 13, scope: !3190)
!3212 = !DILocation(line: 374, column: 16, scope: !3115)
!3213 = !DILocation(line: 374, column: 22, scope: !3115)
!3214 = !DILocation(line: 374, column: 20, scope: !3115)
!3215 = !DILocation(line: 374, column: 14, scope: !3115)
!3216 = !DILocation(line: 375, column: 5, scope: !3115)
!3217 = !DILocation(line: 360, column: 29, scope: !3218)
!3218 = !DILexicalBlockFile(scope: !3110, file: !898, discriminator: 2)
!3219 = !DILocation(line: 360, column: 5, scope: !3218)
!3220 = distinct !{!3220, !3221}
!3221 = !DILocation(line: 360, column: 5, scope: !3055)
!3222 = !DILocation(line: 376, column: 1, scope: !3055)
!3223 = distinct !DISubprogram(name: "wtf_end_512", scope: !898, file: !898, line: 462, type: !3224, isLocal: true, isDefinition: true, scopeLine: 464, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!3224 = !DISubroutineType(types: !3225)
!3225 = !{null, !1687, !931, !931, !931, !931}
!3226 = !DILocalVariable(name: "c", arg: 1, scope: !3223, file: !898, line: 462, type: !1687)
!3227 = !DILocation(line: 462, column: 40, scope: !3223)
!3228 = !DILocalVariable(name: "out", arg: 2, scope: !3223, file: !898, line: 462, type: !931)
!3229 = !DILocation(line: 462, column: 50, scope: !3223)
!3230 = !DILocalVariable(name: "src", arg: 3, scope: !3223, file: !898, line: 462, type: !931)
!3231 = !DILocation(line: 462, column: 62, scope: !3223)
!3232 = !DILocalVariable(name: "tmp0", arg: 4, scope: !3223, file: !898, line: 463, type: !931)
!3233 = !DILocation(line: 463, column: 32, scope: !3223)
!3234 = !DILocalVariable(name: "tmp1", arg: 5, scope: !3223, file: !898, line: 463, type: !931)
!3235 = !DILocation(line: 463, column: 45, scope: !3223)
!3236 = !DILocation(line: 465, column: 12, scope: !3223)
!3237 = !DILocation(line: 465, column: 5, scope: !3223)
!3238 = !DILocation(line: 465, column: 17, scope: !3223)
!3239 = !DILocation(line: 466, column: 12, scope: !3223)
!3240 = !DILocation(line: 466, column: 17, scope: !3223)
!3241 = !DILocation(line: 466, column: 5, scope: !3223)
!3242 = !DILocation(line: 466, column: 24, scope: !3223)
!3243 = !DILocation(line: 466, column: 28, scope: !3223)
!3244 = !DILocation(line: 468, column: 24, scope: !3223)
!3245 = !DILocation(line: 468, column: 5, scope: !3223)
!3246 = !DILocation(line: 469, column: 24, scope: !3223)
!3247 = !DILocation(line: 469, column: 28, scope: !3223)
!3248 = !DILocation(line: 469, column: 5, scope: !3223)
!3249 = !DILocation(line: 470, column: 24, scope: !3223)
!3250 = !DILocation(line: 470, column: 28, scope: !3223)
!3251 = !DILocation(line: 470, column: 5, scope: !3223)
!3252 = !DILocation(line: 471, column: 24, scope: !3223)
!3253 = !DILocation(line: 471, column: 28, scope: !3223)
!3254 = !DILocation(line: 471, column: 5, scope: !3223)
!3255 = !DILocation(line: 473, column: 5, scope: !3223)
!3256 = !DILocation(line: 473, column: 8, scope: !3223)
!3257 = !DILocation(line: 473, column: 15, scope: !3223)
!3258 = !DILocation(line: 473, column: 28, scope: !3223)
!3259 = !DILocation(line: 473, column: 31, scope: !3223)
!3260 = !DILocation(line: 473, column: 52, scope: !3223)
!3261 = !DILocation(line: 473, column: 39, scope: !3223)
!3262 = !DILocation(line: 474, column: 5, scope: !3223)
!3263 = !DILocation(line: 474, column: 8, scope: !3223)
!3264 = !DILocation(line: 474, column: 15, scope: !3223)
!3265 = !DILocation(line: 474, column: 28, scope: !3223)
!3266 = !DILocation(line: 474, column: 31, scope: !3223)
!3267 = !DILocation(line: 474, column: 53, scope: !3223)
!3268 = !DILocation(line: 474, column: 57, scope: !3223)
!3269 = !DILocation(line: 474, column: 39, scope: !3223)
!3270 = !DILocation(line: 475, column: 5, scope: !3223)
!3271 = !DILocation(line: 475, column: 8, scope: !3223)
!3272 = !DILocation(line: 475, column: 15, scope: !3223)
!3273 = !DILocation(line: 475, column: 28, scope: !3223)
!3274 = !DILocation(line: 475, column: 31, scope: !3223)
!3275 = !DILocation(line: 475, column: 53, scope: !3223)
!3276 = !DILocation(line: 475, column: 57, scope: !3223)
!3277 = !DILocation(line: 475, column: 39, scope: !3223)
!3278 = !DILocation(line: 476, column: 5, scope: !3223)
!3279 = !DILocation(line: 476, column: 8, scope: !3223)
!3280 = !DILocation(line: 476, column: 15, scope: !3223)
!3281 = !DILocation(line: 476, column: 28, scope: !3223)
!3282 = !DILocation(line: 476, column: 31, scope: !3223)
!3283 = !DILocation(line: 476, column: 53, scope: !3223)
!3284 = !DILocation(line: 476, column: 57, scope: !3223)
!3285 = !DILocation(line: 476, column: 39, scope: !3223)
!3286 = !DILocation(line: 477, column: 5, scope: !3223)
!3287 = !DILocation(line: 477, column: 8, scope: !3223)
!3288 = !DILocation(line: 477, column: 15, scope: !3223)
!3289 = !DILocation(line: 477, column: 25, scope: !3223)
!3290 = !DILocation(line: 477, column: 28, scope: !3223)
!3291 = !DILocation(line: 477, column: 49, scope: !3223)
!3292 = !DILocation(line: 477, column: 36, scope: !3223)
!3293 = !DILocation(line: 478, column: 5, scope: !3223)
!3294 = !DILocation(line: 478, column: 8, scope: !3223)
!3295 = !DILocation(line: 478, column: 15, scope: !3223)
!3296 = !DILocation(line: 478, column: 25, scope: !3223)
!3297 = !DILocation(line: 478, column: 28, scope: !3223)
!3298 = !DILocation(line: 478, column: 50, scope: !3223)
!3299 = !DILocation(line: 478, column: 54, scope: !3223)
!3300 = !DILocation(line: 478, column: 36, scope: !3223)
!3301 = !DILocation(line: 479, column: 5, scope: !3223)
!3302 = !DILocation(line: 479, column: 8, scope: !3223)
!3303 = !DILocation(line: 479, column: 15, scope: !3223)
!3304 = !DILocation(line: 479, column: 25, scope: !3223)
!3305 = !DILocation(line: 479, column: 28, scope: !3223)
!3306 = !DILocation(line: 479, column: 50, scope: !3223)
!3307 = !DILocation(line: 479, column: 54, scope: !3223)
!3308 = !DILocation(line: 479, column: 36, scope: !3223)
!3309 = !DILocation(line: 480, column: 5, scope: !3223)
!3310 = !DILocation(line: 480, column: 8, scope: !3223)
!3311 = !DILocation(line: 480, column: 15, scope: !3223)
!3312 = !DILocation(line: 480, column: 25, scope: !3223)
!3313 = !DILocation(line: 480, column: 28, scope: !3223)
!3314 = !DILocation(line: 480, column: 50, scope: !3223)
!3315 = !DILocation(line: 480, column: 54, scope: !3223)
!3316 = !DILocation(line: 480, column: 36, scope: !3223)
!3317 = !DILocation(line: 481, column: 17, scope: !3223)
!3318 = !DILocation(line: 481, column: 22, scope: !3223)
!3319 = !DILocation(line: 481, column: 26, scope: !3223)
!3320 = !DILocation(line: 481, column: 33, scope: !3223)
!3321 = !DILocation(line: 481, column: 37, scope: !3223)
!3322 = !DILocation(line: 481, column: 44, scope: !3223)
!3323 = !DILocation(line: 481, column: 48, scope: !3223)
!3324 = !DILocation(line: 481, column: 55, scope: !3223)
!3325 = !DILocation(line: 481, column: 5, scope: !3223)
!3326 = !DILocation(line: 484, column: 5, scope: !3223)
!3327 = !DILocation(line: 484, column: 8, scope: !3223)
!3328 = !DILocation(line: 484, column: 15, scope: !3223)
!3329 = !DILocation(line: 484, column: 28, scope: !3223)
!3330 = !DILocation(line: 484, column: 31, scope: !3223)
!3331 = !DILocation(line: 484, column: 52, scope: !3223)
!3332 = !DILocation(line: 484, column: 39, scope: !3223)
!3333 = !DILocation(line: 485, column: 5, scope: !3223)
!3334 = !DILocation(line: 485, column: 8, scope: !3223)
!3335 = !DILocation(line: 485, column: 15, scope: !3223)
!3336 = !DILocation(line: 485, column: 25, scope: !3223)
!3337 = !DILocation(line: 485, column: 28, scope: !3223)
!3338 = !DILocation(line: 485, column: 49, scope: !3223)
!3339 = !DILocation(line: 485, column: 36, scope: !3223)
!3340 = !DILocation(line: 487, column: 17, scope: !3223)
!3341 = !DILocation(line: 487, column: 27, scope: !3223)
!3342 = !DILocation(line: 487, column: 5, scope: !3223)
!3343 = !DILocation(line: 488, column: 17, scope: !3223)
!3344 = !DILocation(line: 488, column: 28, scope: !3223)
!3345 = !DILocation(line: 488, column: 5, scope: !3223)
!3346 = !DILocation(line: 489, column: 17, scope: !3223)
!3347 = !DILocation(line: 489, column: 28, scope: !3223)
!3348 = !DILocation(line: 489, column: 5, scope: !3223)
!3349 = !DILocation(line: 490, column: 17, scope: !3223)
!3350 = !DILocation(line: 490, column: 28, scope: !3223)
!3351 = !DILocation(line: 490, column: 5, scope: !3223)
!3352 = !DILocation(line: 492, column: 12, scope: !3223)
!3353 = !DILocation(line: 492, column: 5, scope: !3223)
!3354 = !DILocation(line: 492, column: 17, scope: !3223)
!3355 = !DILocation(line: 493, column: 1, scope: !3223)
!3356 = distinct !DISubprogram(name: "wtf_end_1024", scope: !898, file: !898, line: 495, type: !3224, isLocal: true, isDefinition: true, scopeLine: 497, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!3357 = !DILocalVariable(name: "c", arg: 1, scope: !3356, file: !898, line: 495, type: !1687)
!3358 = !DILocation(line: 495, column: 41, scope: !3356)
!3359 = !DILocalVariable(name: "out", arg: 2, scope: !3356, file: !898, line: 495, type: !931)
!3360 = !DILocation(line: 495, column: 51, scope: !3356)
!3361 = !DILocalVariable(name: "src", arg: 3, scope: !3356, file: !898, line: 495, type: !931)
!3362 = !DILocation(line: 495, column: 63, scope: !3356)
!3363 = !DILocalVariable(name: "tmp0", arg: 4, scope: !3356, file: !898, line: 496, type: !931)
!3364 = !DILocation(line: 496, column: 33, scope: !3356)
!3365 = !DILocalVariable(name: "tmp1", arg: 5, scope: !3356, file: !898, line: 496, type: !931)
!3366 = !DILocation(line: 496, column: 46, scope: !3356)
!3367 = !DILocation(line: 498, column: 12, scope: !3356)
!3368 = !DILocation(line: 498, column: 5, scope: !3356)
!3369 = !DILocation(line: 498, column: 17, scope: !3356)
!3370 = !DILocation(line: 499, column: 12, scope: !3356)
!3371 = !DILocation(line: 499, column: 17, scope: !3356)
!3372 = !DILocation(line: 499, column: 5, scope: !3356)
!3373 = !DILocation(line: 499, column: 24, scope: !3356)
!3374 = !DILocation(line: 499, column: 28, scope: !3356)
!3375 = !DILocation(line: 501, column: 24, scope: !3356)
!3376 = !DILocation(line: 501, column: 5, scope: !3356)
!3377 = !DILocation(line: 502, column: 24, scope: !3356)
!3378 = !DILocation(line: 502, column: 28, scope: !3356)
!3379 = !DILocation(line: 502, column: 5, scope: !3356)
!3380 = !DILocation(line: 503, column: 24, scope: !3356)
!3381 = !DILocation(line: 503, column: 28, scope: !3356)
!3382 = !DILocation(line: 503, column: 5, scope: !3356)
!3383 = !DILocation(line: 504, column: 24, scope: !3356)
!3384 = !DILocation(line: 504, column: 28, scope: !3356)
!3385 = !DILocation(line: 504, column: 5, scope: !3356)
!3386 = !DILocation(line: 506, column: 5, scope: !3356)
!3387 = !DILocation(line: 506, column: 8, scope: !3356)
!3388 = !DILocation(line: 506, column: 15, scope: !3356)
!3389 = !DILocation(line: 506, column: 28, scope: !3356)
!3390 = !DILocation(line: 506, column: 31, scope: !3356)
!3391 = !DILocation(line: 506, column: 52, scope: !3356)
!3392 = !DILocation(line: 506, column: 39, scope: !3356)
!3393 = !DILocation(line: 507, column: 5, scope: !3356)
!3394 = !DILocation(line: 507, column: 8, scope: !3356)
!3395 = !DILocation(line: 507, column: 15, scope: !3356)
!3396 = !DILocation(line: 507, column: 28, scope: !3356)
!3397 = !DILocation(line: 507, column: 31, scope: !3356)
!3398 = !DILocation(line: 507, column: 53, scope: !3356)
!3399 = !DILocation(line: 507, column: 57, scope: !3356)
!3400 = !DILocation(line: 507, column: 39, scope: !3356)
!3401 = !DILocation(line: 508, column: 5, scope: !3356)
!3402 = !DILocation(line: 508, column: 8, scope: !3356)
!3403 = !DILocation(line: 508, column: 15, scope: !3356)
!3404 = !DILocation(line: 508, column: 28, scope: !3356)
!3405 = !DILocation(line: 508, column: 31, scope: !3356)
!3406 = !DILocation(line: 508, column: 53, scope: !3356)
!3407 = !DILocation(line: 508, column: 57, scope: !3356)
!3408 = !DILocation(line: 508, column: 39, scope: !3356)
!3409 = !DILocation(line: 509, column: 5, scope: !3356)
!3410 = !DILocation(line: 509, column: 8, scope: !3356)
!3411 = !DILocation(line: 509, column: 15, scope: !3356)
!3412 = !DILocation(line: 509, column: 28, scope: !3356)
!3413 = !DILocation(line: 509, column: 31, scope: !3356)
!3414 = !DILocation(line: 509, column: 53, scope: !3356)
!3415 = !DILocation(line: 509, column: 57, scope: !3356)
!3416 = !DILocation(line: 509, column: 39, scope: !3356)
!3417 = !DILocation(line: 510, column: 5, scope: !3356)
!3418 = !DILocation(line: 510, column: 8, scope: !3356)
!3419 = !DILocation(line: 510, column: 15, scope: !3356)
!3420 = !DILocation(line: 510, column: 25, scope: !3356)
!3421 = !DILocation(line: 510, column: 28, scope: !3356)
!3422 = !DILocation(line: 510, column: 49, scope: !3356)
!3423 = !DILocation(line: 510, column: 36, scope: !3356)
!3424 = !DILocation(line: 511, column: 5, scope: !3356)
!3425 = !DILocation(line: 511, column: 8, scope: !3356)
!3426 = !DILocation(line: 511, column: 15, scope: !3356)
!3427 = !DILocation(line: 511, column: 25, scope: !3356)
!3428 = !DILocation(line: 511, column: 28, scope: !3356)
!3429 = !DILocation(line: 511, column: 50, scope: !3356)
!3430 = !DILocation(line: 511, column: 54, scope: !3356)
!3431 = !DILocation(line: 511, column: 36, scope: !3356)
!3432 = !DILocation(line: 512, column: 5, scope: !3356)
!3433 = !DILocation(line: 512, column: 8, scope: !3356)
!3434 = !DILocation(line: 512, column: 15, scope: !3356)
!3435 = !DILocation(line: 512, column: 25, scope: !3356)
!3436 = !DILocation(line: 512, column: 28, scope: !3356)
!3437 = !DILocation(line: 512, column: 50, scope: !3356)
!3438 = !DILocation(line: 512, column: 54, scope: !3356)
!3439 = !DILocation(line: 512, column: 36, scope: !3356)
!3440 = !DILocation(line: 513, column: 5, scope: !3356)
!3441 = !DILocation(line: 513, column: 8, scope: !3356)
!3442 = !DILocation(line: 513, column: 15, scope: !3356)
!3443 = !DILocation(line: 513, column: 25, scope: !3356)
!3444 = !DILocation(line: 513, column: 28, scope: !3356)
!3445 = !DILocation(line: 513, column: 50, scope: !3356)
!3446 = !DILocation(line: 513, column: 54, scope: !3356)
!3447 = !DILocation(line: 513, column: 36, scope: !3356)
!3448 = !DILocation(line: 514, column: 17, scope: !3356)
!3449 = !DILocation(line: 514, column: 22, scope: !3356)
!3450 = !DILocation(line: 514, column: 26, scope: !3356)
!3451 = !DILocation(line: 514, column: 33, scope: !3356)
!3452 = !DILocation(line: 514, column: 37, scope: !3356)
!3453 = !DILocation(line: 514, column: 44, scope: !3356)
!3454 = !DILocation(line: 514, column: 48, scope: !3356)
!3455 = !DILocation(line: 514, column: 55, scope: !3356)
!3456 = !DILocation(line: 514, column: 5, scope: !3356)
!3457 = !DILocation(line: 517, column: 5, scope: !3356)
!3458 = !DILocation(line: 517, column: 8, scope: !3356)
!3459 = !DILocation(line: 517, column: 16, scope: !3356)
!3460 = !DILocation(line: 517, column: 29, scope: !3356)
!3461 = !DILocation(line: 517, column: 32, scope: !3356)
!3462 = !DILocation(line: 517, column: 54, scope: !3356)
!3463 = !DILocation(line: 517, column: 41, scope: !3356)
!3464 = !DILocation(line: 518, column: 5, scope: !3356)
!3465 = !DILocation(line: 518, column: 8, scope: !3356)
!3466 = !DILocation(line: 518, column: 16, scope: !3356)
!3467 = !DILocation(line: 518, column: 26, scope: !3356)
!3468 = !DILocation(line: 518, column: 29, scope: !3356)
!3469 = !DILocation(line: 518, column: 51, scope: !3356)
!3470 = !DILocation(line: 518, column: 38, scope: !3356)
!3471 = !DILocation(line: 520, column: 17, scope: !3356)
!3472 = !DILocation(line: 520, column: 27, scope: !3356)
!3473 = !DILocation(line: 520, column: 5, scope: !3356)
!3474 = !DILocation(line: 521, column: 17, scope: !3356)
!3475 = !DILocation(line: 521, column: 28, scope: !3356)
!3476 = !DILocation(line: 521, column: 5, scope: !3356)
!3477 = !DILocation(line: 522, column: 17, scope: !3356)
!3478 = !DILocation(line: 522, column: 28, scope: !3356)
!3479 = !DILocation(line: 522, column: 5, scope: !3356)
!3480 = !DILocation(line: 523, column: 17, scope: !3356)
!3481 = !DILocation(line: 523, column: 28, scope: !3356)
!3482 = !DILocation(line: 523, column: 5, scope: !3356)
!3483 = !DILocation(line: 525, column: 12, scope: !3356)
!3484 = !DILocation(line: 525, column: 5, scope: !3356)
!3485 = !DILocation(line: 525, column: 17, scope: !3356)
!3486 = !DILocation(line: 526, column: 1, scope: !3356)
!3487 = distinct !DISubprogram(name: "pretwiddle", scope: !898, file: !898, line: 321, type: !3488, isLocal: true, isDefinition: true, scopeLine: 323, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{null, !931, !931, !909, !909, !909, !909, !909, !3058}
!3490 = !DILocalVariable(name: "src", arg: 1, scope: !3487, file: !898, line: 321, type: !931)
!3491 = !DILocation(line: 321, column: 31, scope: !3487)
!3492 = !DILocalVariable(name: "dst", arg: 2, scope: !3487, file: !898, line: 321, type: !931)
!3493 = !DILocation(line: 321, column: 43, scope: !3487)
!3494 = !DILocalVariable(name: "dst_len", arg: 3, scope: !3487, file: !898, line: 321, type: !909)
!3495 = !DILocation(line: 321, column: 52, scope: !3487)
!3496 = !DILocalVariable(name: "tab_step", arg: 4, scope: !3487, file: !898, line: 321, type: !909)
!3497 = !DILocation(line: 321, column: 65, scope: !3487)
!3498 = !DILocalVariable(name: "step", arg: 5, scope: !3487, file: !898, line: 322, type: !909)
!3499 = !DILocation(line: 322, column: 28, scope: !3487)
!3500 = !DILocalVariable(name: "order0", arg: 6, scope: !3487, file: !898, line: 322, type: !909)
!3501 = !DILocation(line: 322, column: 38, scope: !3487)
!3502 = !DILocalVariable(name: "order1", arg: 7, scope: !3487, file: !898, line: 322, type: !909)
!3503 = !DILocation(line: 322, column: 50, scope: !3487)
!3504 = !DILocalVariable(name: "tabs", arg: 8, scope: !3487, file: !898, line: 322, type: !3058)
!3505 = !DILocation(line: 322, column: 80, scope: !3487)
!3506 = !DILocalVariable(name: "src2", scope: !3487, file: !898, line: 324, type: !931)
!3507 = !DILocation(line: 324, column: 12, scope: !3487)
!3508 = !DILocalVariable(name: "out", scope: !3487, file: !898, line: 324, type: !931)
!3509 = !DILocation(line: 324, column: 19, scope: !3487)
!3510 = !DILocalVariable(name: "tab", scope: !3487, file: !898, line: 325, type: !1713)
!3511 = !DILocation(line: 325, column: 19, scope: !3487)
!3512 = !DILocalVariable(name: "i", scope: !3487, file: !898, line: 326, type: !909)
!3513 = !DILocation(line: 326, column: 9, scope: !3487)
!3514 = !DILocalVariable(name: "j", scope: !3487, file: !898, line: 326, type: !909)
!3515 = !DILocation(line: 326, column: 12, scope: !3487)
!3516 = !DILocation(line: 328, column: 11, scope: !3487)
!3517 = !DILocation(line: 328, column: 9, scope: !3487)
!3518 = !DILocation(line: 329, column: 11, scope: !3487)
!3519 = !DILocation(line: 329, column: 9, scope: !3487)
!3520 = !DILocation(line: 330, column: 12, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3487, file: !898, line: 330, column: 5)
!3522 = !DILocation(line: 330, column: 10, scope: !3521)
!3523 = !DILocation(line: 330, column: 17, scope: !3524)
!3524 = !DILexicalBlockFile(scope: !3525, file: !898, discriminator: 1)
!3525 = distinct !DILexicalBlock(scope: !3521, file: !898, line: 330, column: 5)
!3526 = !DILocation(line: 330, column: 21, scope: !3524)
!3527 = !DILocation(line: 330, column: 19, scope: !3524)
!3528 = !DILocation(line: 330, column: 5, scope: !3524)
!3529 = !DILocalVariable(name: "sum", scope: !3530, file: !898, line: 331, type: !1674)
!3530 = distinct !DILexicalBlock(scope: !3525, file: !898, line: 330, column: 36)
!3531 = !DILocation(line: 331, column: 16, scope: !3530)
!3532 = !DILocation(line: 332, column: 16, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3530, file: !898, line: 332, column: 9)
!3534 = !DILocation(line: 332, column: 14, scope: !3533)
!3535 = !DILocation(line: 332, column: 21, scope: !3536)
!3536 = !DILexicalBlockFile(scope: !3537, file: !898, discriminator: 1)
!3537 = distinct !DILexicalBlock(scope: !3533, file: !898, line: 332, column: 9)
!3538 = !DILocation(line: 332, column: 25, scope: !3536)
!3539 = !DILocation(line: 332, column: 23, scope: !3536)
!3540 = !DILocation(line: 332, column: 9, scope: !3536)
!3541 = !DILocation(line: 333, column: 24, scope: !3537)
!3542 = !DILocation(line: 333, column: 20, scope: !3537)
!3543 = !DILocation(line: 333, column: 33, scope: !3537)
!3544 = !DILocation(line: 333, column: 37, scope: !3537)
!3545 = !DILocation(line: 333, column: 35, scope: !3537)
!3546 = !DILocation(line: 333, column: 48, scope: !3537)
!3547 = !DILocation(line: 333, column: 46, scope: !3537)
!3548 = !DILocation(line: 333, column: 29, scope: !3537)
!3549 = !DILocation(line: 333, column: 27, scope: !3537)
!3550 = !DILocation(line: 333, column: 17, scope: !3537)
!3551 = !DILocation(line: 333, column: 13, scope: !3537)
!3552 = !DILocation(line: 332, column: 34, scope: !3553)
!3553 = !DILexicalBlockFile(scope: !3537, file: !898, discriminator: 2)
!3554 = !DILocation(line: 332, column: 9, scope: !3553)
!3555 = distinct !{!3555, !3556}
!3556 = !DILocation(line: 332, column: 9, scope: !3530)
!3557 = !DILocation(line: 334, column: 19, scope: !3530)
!3558 = !DILocation(line: 334, column: 13, scope: !3530)
!3559 = !DILocation(line: 334, column: 9, scope: !3530)
!3560 = !DILocation(line: 334, column: 16, scope: !3530)
!3561 = !DILocation(line: 335, column: 5, scope: !3530)
!3562 = !DILocation(line: 330, column: 32, scope: !3563)
!3563 = !DILexicalBlockFile(scope: !3525, file: !898, discriminator: 2)
!3564 = !DILocation(line: 330, column: 5, scope: !3563)
!3565 = distinct !{!3565, !3566}
!3566 = !DILocation(line: 330, column: 5, scope: !3487)
!3567 = !DILocation(line: 337, column: 11, scope: !3487)
!3568 = !DILocation(line: 337, column: 17, scope: !3487)
!3569 = !DILocation(line: 337, column: 15, scope: !3487)
!3570 = !DILocation(line: 337, column: 27, scope: !3487)
!3571 = !DILocation(line: 337, column: 25, scope: !3487)
!3572 = !DILocation(line: 337, column: 9, scope: !3487)
!3573 = !DILocation(line: 338, column: 16, scope: !3487)
!3574 = !DILocation(line: 338, column: 11, scope: !3487)
!3575 = !DILocation(line: 338, column: 9, scope: !3487)
!3576 = !DILocation(line: 339, column: 12, scope: !3487)
!3577 = !DILocation(line: 339, column: 19, scope: !3487)
!3578 = !DILocation(line: 339, column: 29, scope: !3487)
!3579 = !DILocation(line: 339, column: 27, scope: !3487)
!3580 = !DILocation(line: 339, column: 41, scope: !3487)
!3581 = !DILocation(line: 339, column: 39, scope: !3487)
!3582 = !DILocation(line: 339, column: 16, scope: !3487)
!3583 = !DILocation(line: 339, column: 46, scope: !3487)
!3584 = !DILocation(line: 339, column: 52, scope: !3487)
!3585 = !DILocation(line: 339, column: 50, scope: !3487)
!3586 = !DILocation(line: 339, column: 10, scope: !3487)
!3587 = !DILocation(line: 340, column: 12, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3487, file: !898, line: 340, column: 5)
!3589 = !DILocation(line: 340, column: 10, scope: !3588)
!3590 = !DILocation(line: 340, column: 17, scope: !3591)
!3591 = !DILexicalBlockFile(scope: !3592, file: !898, discriminator: 1)
!3592 = distinct !DILexicalBlock(scope: !3588, file: !898, line: 340, column: 5)
!3593 = !DILocation(line: 340, column: 21, scope: !3591)
!3594 = !DILocation(line: 340, column: 19, scope: !3591)
!3595 = !DILocation(line: 340, column: 5, scope: !3591)
!3596 = !DILocalVariable(name: "sum", scope: !3597, file: !898, line: 341, type: !1674)
!3597 = distinct !DILexicalBlock(scope: !3592, file: !898, line: 340, column: 36)
!3598 = !DILocation(line: 341, column: 16, scope: !3597)
!3599 = !DILocation(line: 342, column: 16, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3597, file: !898, line: 342, column: 9)
!3601 = !DILocation(line: 342, column: 14, scope: !3600)
!3602 = !DILocation(line: 342, column: 21, scope: !3603)
!3603 = !DILexicalBlockFile(scope: !3604, file: !898, discriminator: 1)
!3604 = distinct !DILexicalBlock(scope: !3600, file: !898, line: 342, column: 9)
!3605 = !DILocation(line: 342, column: 25, scope: !3603)
!3606 = !DILocation(line: 342, column: 23, scope: !3603)
!3607 = !DILocation(line: 342, column: 9, scope: !3603)
!3608 = !DILocation(line: 343, column: 25, scope: !3604)
!3609 = !DILocation(line: 343, column: 20, scope: !3604)
!3610 = !DILocation(line: 343, column: 34, scope: !3604)
!3611 = !DILocation(line: 343, column: 38, scope: !3604)
!3612 = !DILocation(line: 343, column: 36, scope: !3604)
!3613 = !DILocation(line: 343, column: 49, scope: !3604)
!3614 = !DILocation(line: 343, column: 47, scope: !3604)
!3615 = !DILocation(line: 343, column: 30, scope: !3604)
!3616 = !DILocation(line: 343, column: 28, scope: !3604)
!3617 = !DILocation(line: 343, column: 17, scope: !3604)
!3618 = !DILocation(line: 343, column: 13, scope: !3604)
!3619 = !DILocation(line: 342, column: 34, scope: !3620)
!3620 = !DILexicalBlockFile(scope: !3604, file: !898, discriminator: 2)
!3621 = !DILocation(line: 342, column: 9, scope: !3620)
!3622 = distinct !{!3622, !3623}
!3623 = !DILocation(line: 342, column: 9, scope: !3597)
!3624 = !DILocation(line: 344, column: 19, scope: !3597)
!3625 = !DILocation(line: 344, column: 13, scope: !3597)
!3626 = !DILocation(line: 344, column: 9, scope: !3597)
!3627 = !DILocation(line: 344, column: 16, scope: !3597)
!3628 = !DILocation(line: 345, column: 5, scope: !3597)
!3629 = !DILocation(line: 340, column: 32, scope: !3630)
!3630 = !DILexicalBlockFile(scope: !3592, file: !898, discriminator: 2)
!3631 = !DILocation(line: 340, column: 5, scope: !3630)
!3632 = distinct !{!3632, !3633}
!3633 = !DILocation(line: 340, column: 5, scope: !3487)
!3634 = !DILocation(line: 346, column: 1, scope: !3487)
!3635 = distinct !DISubprogram(name: "zero_head_and_tail", scope: !898, file: !898, line: 315, type: !3636, isLocal: true, isDefinition: true, scopeLine: 316, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!3636 = !DISubroutineType(types: !3637)
!3637 = !{null, !931, !909, !909, !909}
!3638 = !DILocalVariable(name: "src", arg: 1, scope: !3635, file: !898, line: 315, type: !931)
!3639 = !DILocation(line: 315, column: 39, scope: !3635)
!3640 = !DILocalVariable(name: "len", arg: 2, scope: !3635, file: !898, line: 315, type: !909)
!3641 = !DILocation(line: 315, column: 48, scope: !3635)
!3642 = !DILocalVariable(name: "order0", arg: 3, scope: !3635, file: !898, line: 315, type: !909)
!3643 = !DILocation(line: 315, column: 57, scope: !3635)
!3644 = !DILocalVariable(name: "order1", arg: 4, scope: !3635, file: !898, line: 315, type: !909)
!3645 = !DILocation(line: 315, column: 69, scope: !3635)
!3646 = !DILocation(line: 317, column: 12, scope: !3635)
!3647 = !DILocation(line: 317, column: 5, scope: !3635)
!3648 = !DILocation(line: 317, column: 35, scope: !3635)
!3649 = !DILocation(line: 317, column: 33, scope: !3635)
!3650 = !DILocation(line: 318, column: 12, scope: !3635)
!3651 = !DILocation(line: 318, column: 18, scope: !3635)
!3652 = !DILocation(line: 318, column: 16, scope: !3635)
!3653 = !DILocation(line: 318, column: 24, scope: !3635)
!3654 = !DILocation(line: 318, column: 22, scope: !3635)
!3655 = !DILocation(line: 318, column: 5, scope: !3635)
!3656 = !DILocation(line: 318, column: 50, scope: !3635)
!3657 = !DILocation(line: 318, column: 48, scope: !3635)
!3658 = !DILocation(line: 319, column: 1, scope: !3635)
!3659 = distinct !DISubprogram(name: "combine_fft", scope: !898, file: !898, line: 413, type: !3660, isLocal: true, isDefinition: true, scopeLine: 416, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!3660 = !DISubroutineType(types: !3661)
!3661 = !{null, !931, !931, !931, !931, !931, !1702, !1702, !1702, !1702, !909, !909}
!3662 = !DILocalVariable(name: "s0", arg: 1, scope: !3659, file: !898, line: 413, type: !931)
!3663 = !DILocation(line: 413, column: 32, scope: !3659)
!3664 = !DILocalVariable(name: "s1", arg: 2, scope: !3659, file: !898, line: 413, type: !931)
!3665 = !DILocation(line: 413, column: 43, scope: !3659)
!3666 = !DILocalVariable(name: "s2", arg: 3, scope: !3659, file: !898, line: 413, type: !931)
!3667 = !DILocation(line: 413, column: 54, scope: !3659)
!3668 = !DILocalVariable(name: "s3", arg: 4, scope: !3659, file: !898, line: 413, type: !931)
!3669 = !DILocation(line: 413, column: 65, scope: !3659)
!3670 = !DILocalVariable(name: "dst", arg: 5, scope: !3659, file: !898, line: 413, type: !931)
!3671 = !DILocation(line: 413, column: 76, scope: !3659)
!3672 = !DILocalVariable(name: "t0", arg: 6, scope: !3659, file: !898, line: 414, type: !1702)
!3673 = !DILocation(line: 414, column: 38, scope: !3659)
!3674 = !DILocalVariable(name: "t1", arg: 7, scope: !3659, file: !898, line: 414, type: !1702)
!3675 = !DILocation(line: 414, column: 55, scope: !3659)
!3676 = !DILocalVariable(name: "t2", arg: 8, scope: !3659, file: !898, line: 415, type: !1702)
!3677 = !DILocation(line: 415, column: 38, scope: !3659)
!3678 = !DILocalVariable(name: "t3", arg: 9, scope: !3659, file: !898, line: 415, type: !1702)
!3679 = !DILocation(line: 415, column: 55, scope: !3659)
!3680 = !DILocalVariable(name: "len", arg: 10, scope: !3659, file: !898, line: 415, type: !909)
!3681 = !DILocation(line: 415, column: 63, scope: !3659)
!3682 = !DILocalVariable(name: "step", arg: 11, scope: !3659, file: !898, line: 415, type: !909)
!3683 = !DILocation(line: 415, column: 72, scope: !3659)
!3684 = !DILocalVariable(name: "h0", scope: !3659, file: !898, line: 417, type: !1702)
!3685 = !DILocation(line: 417, column: 18, scope: !3659)
!3686 = !DILocalVariable(name: "h1", scope: !3659, file: !898, line: 417, type: !1702)
!3687 = !DILocation(line: 417, column: 23, scope: !3659)
!3688 = !DILocalVariable(name: "h2", scope: !3659, file: !898, line: 417, type: !1702)
!3689 = !DILocation(line: 417, column: 28, scope: !3659)
!3690 = !DILocalVariable(name: "h3", scope: !3659, file: !898, line: 417, type: !1702)
!3691 = !DILocation(line: 417, column: 33, scope: !3659)
!3692 = !DILocalVariable(name: "d1", scope: !3659, file: !898, line: 418, type: !931)
!3693 = !DILocation(line: 418, column: 12, scope: !3659)
!3694 = !DILocalVariable(name: "d2", scope: !3659, file: !898, line: 418, type: !931)
!3695 = !DILocation(line: 418, column: 17, scope: !3659)
!3696 = !DILocalVariable(name: "tmp", scope: !3659, file: !898, line: 419, type: !909)
!3697 = !DILocation(line: 419, column: 9, scope: !3659)
!3698 = !DILocalVariable(name: "half", scope: !3659, file: !898, line: 419, type: !909)
!3699 = !DILocation(line: 419, column: 14, scope: !3659)
!3700 = !DILocalVariable(name: "len2", scope: !3659, file: !898, line: 420, type: !909)
!3701 = !DILocation(line: 420, column: 9, scope: !3659)
!3702 = !DILocation(line: 420, column: 16, scope: !3659)
!3703 = !DILocation(line: 420, column: 20, scope: !3659)
!3704 = !DILocalVariable(name: "len4", scope: !3659, file: !898, line: 420, type: !909)
!3705 = !DILocation(line: 420, column: 26, scope: !3659)
!3706 = !DILocation(line: 420, column: 33, scope: !3659)
!3707 = !DILocation(line: 420, column: 37, scope: !3659)
!3708 = !DILocalVariable(name: "hoff", scope: !3659, file: !898, line: 421, type: !909)
!3709 = !DILocation(line: 421, column: 9, scope: !3659)
!3710 = !DILocalVariable(name: "i", scope: !3659, file: !898, line: 422, type: !909)
!3711 = !DILocation(line: 422, column: 9, scope: !3659)
!3712 = !DILocalVariable(name: "j", scope: !3659, file: !898, line: 422, type: !909)
!3713 = !DILocation(line: 422, column: 12, scope: !3659)
!3714 = !DILocalVariable(name: "k", scope: !3659, file: !898, line: 422, type: !909)
!3715 = !DILocation(line: 422, column: 15, scope: !3659)
!3716 = !DILocation(line: 424, column: 11, scope: !3659)
!3717 = !DILocation(line: 424, column: 9, scope: !3659)
!3718 = !DILocation(line: 425, column: 17, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3659, file: !898, line: 425, column: 5)
!3720 = !DILocation(line: 425, column: 15, scope: !3719)
!3721 = !DILocation(line: 425, column: 10, scope: !3719)
!3722 = !DILocation(line: 425, column: 23, scope: !3723)
!3723 = !DILexicalBlockFile(scope: !3724, file: !898, discriminator: 1)
!3724 = distinct !DILexicalBlock(scope: !3719, file: !898, line: 425, column: 5)
!3725 = !DILocation(line: 425, column: 27, scope: !3723)
!3726 = !DILocation(line: 425, column: 5, scope: !3723)
!3727 = !DILocation(line: 425, column: 5, scope: !3728)
!3728 = !DILexicalBlockFile(scope: !3719, file: !898, discriminator: 2)
!3729 = !DILocation(line: 425, column: 37, scope: !3730)
!3730 = !DILexicalBlockFile(scope: !3724, file: !898, discriminator: 3)
!3731 = !DILocation(line: 425, column: 48, scope: !3730)
!3732 = !DILocation(line: 425, column: 5, scope: !3730)
!3733 = distinct !{!3733, !3734}
!3734 = !DILocation(line: 425, column: 5, scope: !3659)
!3735 = !DILocation(line: 427, column: 10, scope: !3659)
!3736 = !DILocation(line: 427, column: 15, scope: !3659)
!3737 = !DILocation(line: 427, column: 13, scope: !3659)
!3738 = !DILocation(line: 427, column: 8, scope: !3659)
!3739 = !DILocation(line: 428, column: 10, scope: !3659)
!3740 = !DILocation(line: 428, column: 15, scope: !3659)
!3741 = !DILocation(line: 428, column: 13, scope: !3659)
!3742 = !DILocation(line: 428, column: 8, scope: !3659)
!3743 = !DILocation(line: 429, column: 10, scope: !3659)
!3744 = !DILocation(line: 429, column: 15, scope: !3659)
!3745 = !DILocation(line: 429, column: 13, scope: !3659)
!3746 = !DILocation(line: 429, column: 8, scope: !3659)
!3747 = !DILocation(line: 430, column: 10, scope: !3659)
!3748 = !DILocation(line: 430, column: 15, scope: !3659)
!3749 = !DILocation(line: 430, column: 13, scope: !3659)
!3750 = !DILocation(line: 430, column: 8, scope: !3659)
!3751 = !DILocation(line: 432, column: 14, scope: !3659)
!3752 = !DILocation(line: 432, column: 22, scope: !3659)
!3753 = !DILocation(line: 432, column: 20, scope: !3659)
!3754 = !DILocation(line: 432, column: 30, scope: !3659)
!3755 = !DILocation(line: 432, column: 38, scope: !3659)
!3756 = !DILocation(line: 432, column: 36, scope: !3659)
!3757 = !DILocation(line: 432, column: 28, scope: !3659)
!3758 = !DILocation(line: 432, column: 46, scope: !3659)
!3759 = !DILocation(line: 432, column: 54, scope: !3659)
!3760 = !DILocation(line: 432, column: 52, scope: !3659)
!3761 = !DILocation(line: 432, column: 44, scope: !3659)
!3762 = !DILocation(line: 432, column: 62, scope: !3659)
!3763 = !DILocation(line: 432, column: 70, scope: !3659)
!3764 = !DILocation(line: 432, column: 68, scope: !3659)
!3765 = !DILocation(line: 432, column: 60, scope: !3659)
!3766 = !DILocation(line: 432, column: 5, scope: !3659)
!3767 = !DILocation(line: 432, column: 12, scope: !3659)
!3768 = !DILocation(line: 432, column: 90, scope: !3659)
!3769 = !DILocation(line: 432, column: 98, scope: !3659)
!3770 = !DILocation(line: 432, column: 96, scope: !3659)
!3771 = !DILocation(line: 432, column: 110, scope: !3659)
!3772 = !DILocation(line: 432, column: 118, scope: !3659)
!3773 = !DILocation(line: 432, column: 116, scope: !3659)
!3774 = !DILocation(line: 432, column: 108, scope: !3659)
!3775 = !DILocation(line: 432, column: 130, scope: !3659)
!3776 = !DILocation(line: 432, column: 138, scope: !3659)
!3777 = !DILocation(line: 432, column: 136, scope: !3659)
!3778 = !DILocation(line: 432, column: 128, scope: !3659)
!3779 = !DILocation(line: 432, column: 150, scope: !3659)
!3780 = !DILocation(line: 432, column: 158, scope: !3659)
!3781 = !DILocation(line: 432, column: 156, scope: !3659)
!3782 = !DILocation(line: 432, column: 148, scope: !3659)
!3783 = !DILocation(line: 432, column: 77, scope: !3659)
!3784 = !DILocation(line: 432, column: 88, scope: !3659)
!3785 = !DILocation(line: 434, column: 16, scope: !3659)
!3786 = !DILocation(line: 434, column: 14, scope: !3659)
!3787 = !DILocation(line: 434, column: 24, scope: !3659)
!3788 = !DILocation(line: 434, column: 29, scope: !3659)
!3789 = !DILocation(line: 434, column: 21, scope: !3659)
!3790 = !DILocation(line: 434, column: 10, scope: !3659)
!3791 = !DILocation(line: 436, column: 7, scope: !3659)
!3792 = !DILocation(line: 437, column: 13, scope: !3659)
!3793 = !DILocation(line: 437, column: 11, scope: !3659)
!3794 = !DILocation(line: 437, column: 7, scope: !3659)
!3795 = !DILocation(line: 438, column: 10, scope: !3659)
!3796 = !DILocation(line: 438, column: 14, scope: !3659)
!3797 = !DILocation(line: 438, column: 8, scope: !3659)
!3798 = !DILocation(line: 439, column: 10, scope: !3659)
!3799 = !DILocation(line: 439, column: 14, scope: !3659)
!3800 = !DILocation(line: 439, column: 21, scope: !3659)
!3801 = !DILocation(line: 439, column: 25, scope: !3659)
!3802 = !DILocation(line: 439, column: 18, scope: !3659)
!3803 = !DILocation(line: 439, column: 8, scope: !3659)
!3804 = !DILocation(line: 440, column: 12, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3659, file: !898, line: 440, column: 5)
!3806 = !DILocation(line: 440, column: 10, scope: !3805)
!3807 = !DILocation(line: 440, column: 17, scope: !3808)
!3808 = !DILexicalBlockFile(scope: !3809, file: !898, discriminator: 1)
!3809 = distinct !DILexicalBlock(scope: !3805, file: !898, line: 440, column: 5)
!3810 = !DILocation(line: 440, column: 22, scope: !3808)
!3811 = !DILocation(line: 440, column: 27, scope: !3808)
!3812 = !DILocation(line: 440, column: 32, scope: !3808)
!3813 = !DILocation(line: 440, column: 19, scope: !3808)
!3814 = !DILocation(line: 440, column: 5, scope: !3808)
!3815 = !DILocation(line: 441, column: 20, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3809, file: !898, line: 440, column: 43)
!3817 = !DILocation(line: 441, column: 22, scope: !3816)
!3818 = !DILocation(line: 441, column: 17, scope: !3816)
!3819 = !DILocation(line: 441, column: 32, scope: !3816)
!3820 = !DILocation(line: 441, column: 34, scope: !3816)
!3821 = !DILocation(line: 441, column: 29, scope: !3816)
!3822 = !DILocation(line: 441, column: 27, scope: !3816)
!3823 = !DILocation(line: 441, column: 44, scope: !3816)
!3824 = !DILocation(line: 441, column: 46, scope: !3816)
!3825 = !DILocation(line: 441, column: 41, scope: !3816)
!3826 = !DILocation(line: 441, column: 56, scope: !3816)
!3827 = !DILocation(line: 441, column: 58, scope: !3816)
!3828 = !DILocation(line: 441, column: 53, scope: !3816)
!3829 = !DILocation(line: 441, column: 51, scope: !3816)
!3830 = !DILocation(line: 441, column: 39, scope: !3816)
!3831 = !DILocation(line: 441, column: 68, scope: !3816)
!3832 = !DILocation(line: 441, column: 70, scope: !3816)
!3833 = !DILocation(line: 441, column: 65, scope: !3816)
!3834 = !DILocation(line: 441, column: 80, scope: !3816)
!3835 = !DILocation(line: 441, column: 82, scope: !3816)
!3836 = !DILocation(line: 441, column: 77, scope: !3816)
!3837 = !DILocation(line: 441, column: 75, scope: !3816)
!3838 = !DILocation(line: 441, column: 63, scope: !3816)
!3839 = !DILocation(line: 441, column: 92, scope: !3816)
!3840 = !DILocation(line: 441, column: 94, scope: !3816)
!3841 = !DILocation(line: 441, column: 89, scope: !3816)
!3842 = !DILocation(line: 441, column: 104, scope: !3816)
!3843 = !DILocation(line: 441, column: 106, scope: !3816)
!3844 = !DILocation(line: 441, column: 101, scope: !3816)
!3845 = !DILocation(line: 441, column: 99, scope: !3816)
!3846 = !DILocation(line: 441, column: 87, scope: !3816)
!3847 = !DILocation(line: 441, column: 116, scope: !3816)
!3848 = !DILocation(line: 441, column: 118, scope: !3816)
!3849 = !DILocation(line: 441, column: 113, scope: !3816)
!3850 = !DILocation(line: 441, column: 128, scope: !3816)
!3851 = !DILocation(line: 441, column: 130, scope: !3816)
!3852 = !DILocation(line: 441, column: 125, scope: !3816)
!3853 = !DILocation(line: 441, column: 123, scope: !3816)
!3854 = !DILocation(line: 441, column: 111, scope: !3816)
!3855 = !DILocation(line: 441, column: 140, scope: !3816)
!3856 = !DILocation(line: 441, column: 142, scope: !3816)
!3857 = !DILocation(line: 441, column: 137, scope: !3816)
!3858 = !DILocation(line: 441, column: 152, scope: !3816)
!3859 = !DILocation(line: 441, column: 154, scope: !3816)
!3860 = !DILocation(line: 441, column: 149, scope: !3816)
!3861 = !DILocation(line: 441, column: 147, scope: !3816)
!3862 = !DILocation(line: 441, column: 135, scope: !3816)
!3863 = !DILocation(line: 441, column: 164, scope: !3816)
!3864 = !DILocation(line: 441, column: 166, scope: !3816)
!3865 = !DILocation(line: 441, column: 161, scope: !3816)
!3866 = !DILocation(line: 441, column: 176, scope: !3816)
!3867 = !DILocation(line: 441, column: 178, scope: !3816)
!3868 = !DILocation(line: 441, column: 173, scope: !3816)
!3869 = !DILocation(line: 441, column: 171, scope: !3816)
!3870 = !DILocation(line: 441, column: 159, scope: !3816)
!3871 = !DILocation(line: 441, column: 188, scope: !3816)
!3872 = !DILocation(line: 441, column: 190, scope: !3816)
!3873 = !DILocation(line: 441, column: 185, scope: !3816)
!3874 = !DILocation(line: 441, column: 200, scope: !3816)
!3875 = !DILocation(line: 441, column: 202, scope: !3816)
!3876 = !DILocation(line: 441, column: 197, scope: !3816)
!3877 = !DILocation(line: 441, column: 195, scope: !3816)
!3878 = !DILocation(line: 441, column: 183, scope: !3816)
!3879 = !DILocation(line: 441, column: 12, scope: !3816)
!3880 = !DILocation(line: 441, column: 15, scope: !3816)
!3881 = !DILocation(line: 441, column: 219, scope: !3816)
!3882 = !DILocation(line: 441, column: 221, scope: !3816)
!3883 = !DILocation(line: 441, column: 216, scope: !3816)
!3884 = !DILocation(line: 441, column: 231, scope: !3816)
!3885 = !DILocation(line: 441, column: 233, scope: !3816)
!3886 = !DILocation(line: 441, column: 228, scope: !3816)
!3887 = !DILocation(line: 441, column: 226, scope: !3816)
!3888 = !DILocation(line: 441, column: 243, scope: !3816)
!3889 = !DILocation(line: 441, column: 245, scope: !3816)
!3890 = !DILocation(line: 441, column: 240, scope: !3816)
!3891 = !DILocation(line: 441, column: 255, scope: !3816)
!3892 = !DILocation(line: 441, column: 257, scope: !3816)
!3893 = !DILocation(line: 441, column: 252, scope: !3816)
!3894 = !DILocation(line: 441, column: 250, scope: !3816)
!3895 = !DILocation(line: 441, column: 238, scope: !3816)
!3896 = !DILocation(line: 441, column: 267, scope: !3816)
!3897 = !DILocation(line: 441, column: 269, scope: !3816)
!3898 = !DILocation(line: 441, column: 264, scope: !3816)
!3899 = !DILocation(line: 441, column: 279, scope: !3816)
!3900 = !DILocation(line: 441, column: 281, scope: !3816)
!3901 = !DILocation(line: 441, column: 276, scope: !3816)
!3902 = !DILocation(line: 441, column: 274, scope: !3816)
!3903 = !DILocation(line: 441, column: 262, scope: !3816)
!3904 = !DILocation(line: 441, column: 291, scope: !3816)
!3905 = !DILocation(line: 441, column: 293, scope: !3816)
!3906 = !DILocation(line: 441, column: 288, scope: !3816)
!3907 = !DILocation(line: 441, column: 303, scope: !3816)
!3908 = !DILocation(line: 441, column: 305, scope: !3816)
!3909 = !DILocation(line: 441, column: 300, scope: !3816)
!3910 = !DILocation(line: 441, column: 298, scope: !3816)
!3911 = !DILocation(line: 441, column: 286, scope: !3816)
!3912 = !DILocation(line: 441, column: 315, scope: !3816)
!3913 = !DILocation(line: 441, column: 317, scope: !3816)
!3914 = !DILocation(line: 441, column: 312, scope: !3816)
!3915 = !DILocation(line: 441, column: 327, scope: !3816)
!3916 = !DILocation(line: 441, column: 329, scope: !3816)
!3917 = !DILocation(line: 441, column: 324, scope: !3816)
!3918 = !DILocation(line: 441, column: 322, scope: !3816)
!3919 = !DILocation(line: 441, column: 310, scope: !3816)
!3920 = !DILocation(line: 441, column: 339, scope: !3816)
!3921 = !DILocation(line: 441, column: 341, scope: !3816)
!3922 = !DILocation(line: 441, column: 336, scope: !3816)
!3923 = !DILocation(line: 441, column: 351, scope: !3816)
!3924 = !DILocation(line: 441, column: 353, scope: !3816)
!3925 = !DILocation(line: 441, column: 348, scope: !3816)
!3926 = !DILocation(line: 441, column: 346, scope: !3816)
!3927 = !DILocation(line: 441, column: 334, scope: !3816)
!3928 = !DILocation(line: 441, column: 363, scope: !3816)
!3929 = !DILocation(line: 441, column: 365, scope: !3816)
!3930 = !DILocation(line: 441, column: 360, scope: !3816)
!3931 = !DILocation(line: 441, column: 375, scope: !3816)
!3932 = !DILocation(line: 441, column: 377, scope: !3816)
!3933 = !DILocation(line: 441, column: 372, scope: !3816)
!3934 = !DILocation(line: 441, column: 370, scope: !3816)
!3935 = !DILocation(line: 441, column: 358, scope: !3816)
!3936 = !DILocation(line: 441, column: 387, scope: !3816)
!3937 = !DILocation(line: 441, column: 389, scope: !3816)
!3938 = !DILocation(line: 441, column: 384, scope: !3816)
!3939 = !DILocation(line: 441, column: 399, scope: !3816)
!3940 = !DILocation(line: 441, column: 401, scope: !3816)
!3941 = !DILocation(line: 441, column: 396, scope: !3816)
!3942 = !DILocation(line: 441, column: 394, scope: !3816)
!3943 = !DILocation(line: 441, column: 382, scope: !3816)
!3944 = !DILocation(line: 441, column: 211, scope: !3816)
!3945 = !DILocation(line: 441, column: 214, scope: !3816)
!3946 = !DILocation(line: 442, column: 20, scope: !3816)
!3947 = !DILocation(line: 442, column: 22, scope: !3816)
!3948 = !DILocation(line: 442, column: 17, scope: !3816)
!3949 = !DILocation(line: 442, column: 32, scope: !3816)
!3950 = !DILocation(line: 442, column: 34, scope: !3816)
!3951 = !DILocation(line: 442, column: 29, scope: !3816)
!3952 = !DILocation(line: 442, column: 27, scope: !3816)
!3953 = !DILocation(line: 442, column: 44, scope: !3816)
!3954 = !DILocation(line: 442, column: 46, scope: !3816)
!3955 = !DILocation(line: 442, column: 41, scope: !3816)
!3956 = !DILocation(line: 442, column: 56, scope: !3816)
!3957 = !DILocation(line: 442, column: 58, scope: !3816)
!3958 = !DILocation(line: 442, column: 53, scope: !3816)
!3959 = !DILocation(line: 442, column: 51, scope: !3816)
!3960 = !DILocation(line: 442, column: 39, scope: !3816)
!3961 = !DILocation(line: 442, column: 68, scope: !3816)
!3962 = !DILocation(line: 442, column: 70, scope: !3816)
!3963 = !DILocation(line: 442, column: 65, scope: !3816)
!3964 = !DILocation(line: 442, column: 80, scope: !3816)
!3965 = !DILocation(line: 442, column: 82, scope: !3816)
!3966 = !DILocation(line: 442, column: 77, scope: !3816)
!3967 = !DILocation(line: 442, column: 75, scope: !3816)
!3968 = !DILocation(line: 442, column: 63, scope: !3816)
!3969 = !DILocation(line: 442, column: 92, scope: !3816)
!3970 = !DILocation(line: 442, column: 94, scope: !3816)
!3971 = !DILocation(line: 442, column: 89, scope: !3816)
!3972 = !DILocation(line: 442, column: 104, scope: !3816)
!3973 = !DILocation(line: 442, column: 106, scope: !3816)
!3974 = !DILocation(line: 442, column: 101, scope: !3816)
!3975 = !DILocation(line: 442, column: 99, scope: !3816)
!3976 = !DILocation(line: 442, column: 87, scope: !3816)
!3977 = !DILocation(line: 442, column: 116, scope: !3816)
!3978 = !DILocation(line: 442, column: 118, scope: !3816)
!3979 = !DILocation(line: 442, column: 113, scope: !3816)
!3980 = !DILocation(line: 442, column: 128, scope: !3816)
!3981 = !DILocation(line: 442, column: 130, scope: !3816)
!3982 = !DILocation(line: 442, column: 125, scope: !3816)
!3983 = !DILocation(line: 442, column: 123, scope: !3816)
!3984 = !DILocation(line: 442, column: 111, scope: !3816)
!3985 = !DILocation(line: 442, column: 140, scope: !3816)
!3986 = !DILocation(line: 442, column: 142, scope: !3816)
!3987 = !DILocation(line: 442, column: 137, scope: !3816)
!3988 = !DILocation(line: 442, column: 152, scope: !3816)
!3989 = !DILocation(line: 442, column: 154, scope: !3816)
!3990 = !DILocation(line: 442, column: 149, scope: !3816)
!3991 = !DILocation(line: 442, column: 147, scope: !3816)
!3992 = !DILocation(line: 442, column: 135, scope: !3816)
!3993 = !DILocation(line: 442, column: 164, scope: !3816)
!3994 = !DILocation(line: 442, column: 166, scope: !3816)
!3995 = !DILocation(line: 442, column: 161, scope: !3816)
!3996 = !DILocation(line: 442, column: 176, scope: !3816)
!3997 = !DILocation(line: 442, column: 178, scope: !3816)
!3998 = !DILocation(line: 442, column: 173, scope: !3816)
!3999 = !DILocation(line: 442, column: 171, scope: !3816)
!4000 = !DILocation(line: 442, column: 159, scope: !3816)
!4001 = !DILocation(line: 442, column: 188, scope: !3816)
!4002 = !DILocation(line: 442, column: 190, scope: !3816)
!4003 = !DILocation(line: 442, column: 185, scope: !3816)
!4004 = !DILocation(line: 442, column: 200, scope: !3816)
!4005 = !DILocation(line: 442, column: 202, scope: !3816)
!4006 = !DILocation(line: 442, column: 197, scope: !3816)
!4007 = !DILocation(line: 442, column: 195, scope: !3816)
!4008 = !DILocation(line: 442, column: 183, scope: !3816)
!4009 = !DILocation(line: 442, column: 12, scope: !3816)
!4010 = !DILocation(line: 442, column: 15, scope: !3816)
!4011 = !DILocation(line: 442, column: 219, scope: !3816)
!4012 = !DILocation(line: 442, column: 221, scope: !3816)
!4013 = !DILocation(line: 442, column: 216, scope: !3816)
!4014 = !DILocation(line: 442, column: 231, scope: !3816)
!4015 = !DILocation(line: 442, column: 233, scope: !3816)
!4016 = !DILocation(line: 442, column: 228, scope: !3816)
!4017 = !DILocation(line: 442, column: 226, scope: !3816)
!4018 = !DILocation(line: 442, column: 243, scope: !3816)
!4019 = !DILocation(line: 442, column: 245, scope: !3816)
!4020 = !DILocation(line: 442, column: 240, scope: !3816)
!4021 = !DILocation(line: 442, column: 255, scope: !3816)
!4022 = !DILocation(line: 442, column: 257, scope: !3816)
!4023 = !DILocation(line: 442, column: 252, scope: !3816)
!4024 = !DILocation(line: 442, column: 250, scope: !3816)
!4025 = !DILocation(line: 442, column: 238, scope: !3816)
!4026 = !DILocation(line: 442, column: 267, scope: !3816)
!4027 = !DILocation(line: 442, column: 269, scope: !3816)
!4028 = !DILocation(line: 442, column: 264, scope: !3816)
!4029 = !DILocation(line: 442, column: 279, scope: !3816)
!4030 = !DILocation(line: 442, column: 281, scope: !3816)
!4031 = !DILocation(line: 442, column: 276, scope: !3816)
!4032 = !DILocation(line: 442, column: 274, scope: !3816)
!4033 = !DILocation(line: 442, column: 262, scope: !3816)
!4034 = !DILocation(line: 442, column: 291, scope: !3816)
!4035 = !DILocation(line: 442, column: 293, scope: !3816)
!4036 = !DILocation(line: 442, column: 288, scope: !3816)
!4037 = !DILocation(line: 442, column: 303, scope: !3816)
!4038 = !DILocation(line: 442, column: 305, scope: !3816)
!4039 = !DILocation(line: 442, column: 300, scope: !3816)
!4040 = !DILocation(line: 442, column: 298, scope: !3816)
!4041 = !DILocation(line: 442, column: 286, scope: !3816)
!4042 = !DILocation(line: 442, column: 315, scope: !3816)
!4043 = !DILocation(line: 442, column: 317, scope: !3816)
!4044 = !DILocation(line: 442, column: 312, scope: !3816)
!4045 = !DILocation(line: 442, column: 327, scope: !3816)
!4046 = !DILocation(line: 442, column: 329, scope: !3816)
!4047 = !DILocation(line: 442, column: 324, scope: !3816)
!4048 = !DILocation(line: 442, column: 322, scope: !3816)
!4049 = !DILocation(line: 442, column: 310, scope: !3816)
!4050 = !DILocation(line: 442, column: 339, scope: !3816)
!4051 = !DILocation(line: 442, column: 341, scope: !3816)
!4052 = !DILocation(line: 442, column: 336, scope: !3816)
!4053 = !DILocation(line: 442, column: 351, scope: !3816)
!4054 = !DILocation(line: 442, column: 353, scope: !3816)
!4055 = !DILocation(line: 442, column: 348, scope: !3816)
!4056 = !DILocation(line: 442, column: 346, scope: !3816)
!4057 = !DILocation(line: 442, column: 334, scope: !3816)
!4058 = !DILocation(line: 442, column: 363, scope: !3816)
!4059 = !DILocation(line: 442, column: 365, scope: !3816)
!4060 = !DILocation(line: 442, column: 360, scope: !3816)
!4061 = !DILocation(line: 442, column: 375, scope: !3816)
!4062 = !DILocation(line: 442, column: 377, scope: !3816)
!4063 = !DILocation(line: 442, column: 372, scope: !3816)
!4064 = !DILocation(line: 442, column: 370, scope: !3816)
!4065 = !DILocation(line: 442, column: 358, scope: !3816)
!4066 = !DILocation(line: 442, column: 387, scope: !3816)
!4067 = !DILocation(line: 442, column: 389, scope: !3816)
!4068 = !DILocation(line: 442, column: 384, scope: !3816)
!4069 = !DILocation(line: 442, column: 399, scope: !3816)
!4070 = !DILocation(line: 442, column: 401, scope: !3816)
!4071 = !DILocation(line: 442, column: 396, scope: !3816)
!4072 = !DILocation(line: 442, column: 394, scope: !3816)
!4073 = !DILocation(line: 442, column: 382, scope: !3816)
!4074 = !DILocation(line: 442, column: 211, scope: !3816)
!4075 = !DILocation(line: 442, column: 214, scope: !3816)
!4076 = !DILocation(line: 443, column: 11, scope: !3816)
!4077 = !DILocation(line: 444, column: 18, scope: !3816)
!4078 = !DILocation(line: 444, column: 16, scope: !3816)
!4079 = !DILocation(line: 444, column: 11, scope: !3816)
!4080 = !DILocation(line: 445, column: 5, scope: !3816)
!4081 = !DILocation(line: 440, column: 39, scope: !4082)
!4082 = !DILexicalBlockFile(scope: !3809, file: !898, discriminator: 2)
!4083 = !DILocation(line: 440, column: 5, scope: !4082)
!4084 = distinct !{!4084, !4085}
!4085 = !DILocation(line: 440, column: 5, scope: !3659)
!4086 = !DILocation(line: 446, column: 17, scope: !3659)
!4087 = !DILocation(line: 446, column: 28, scope: !3659)
!4088 = !DILocation(line: 446, column: 25, scope: !3659)
!4089 = !DILocation(line: 446, column: 23, scope: !3659)
!4090 = !DILocation(line: 446, column: 36, scope: !3659)
!4091 = !DILocation(line: 446, column: 47, scope: !3659)
!4092 = !DILocation(line: 446, column: 44, scope: !3659)
!4093 = !DILocation(line: 446, column: 42, scope: !3659)
!4094 = !DILocation(line: 446, column: 34, scope: !3659)
!4095 = !DILocation(line: 446, column: 55, scope: !3659)
!4096 = !DILocation(line: 446, column: 66, scope: !3659)
!4097 = !DILocation(line: 446, column: 63, scope: !3659)
!4098 = !DILocation(line: 446, column: 61, scope: !3659)
!4099 = !DILocation(line: 446, column: 53, scope: !3659)
!4100 = !DILocation(line: 446, column: 74, scope: !3659)
!4101 = !DILocation(line: 446, column: 85, scope: !3659)
!4102 = !DILocation(line: 446, column: 82, scope: !3659)
!4103 = !DILocation(line: 446, column: 80, scope: !3659)
!4104 = !DILocation(line: 446, column: 72, scope: !3659)
!4105 = !DILocation(line: 446, column: 9, scope: !3659)
!4106 = !DILocation(line: 446, column: 5, scope: !3659)
!4107 = !DILocation(line: 446, column: 15, scope: !3659)
!4108 = !DILocation(line: 446, column: 108, scope: !3659)
!4109 = !DILocation(line: 446, column: 119, scope: !3659)
!4110 = !DILocation(line: 446, column: 124, scope: !3659)
!4111 = !DILocation(line: 446, column: 116, scope: !3659)
!4112 = !DILocation(line: 446, column: 114, scope: !3659)
!4113 = !DILocation(line: 446, column: 131, scope: !3659)
!4114 = !DILocation(line: 446, column: 142, scope: !3659)
!4115 = !DILocation(line: 446, column: 147, scope: !3659)
!4116 = !DILocation(line: 446, column: 139, scope: !3659)
!4117 = !DILocation(line: 446, column: 137, scope: !3659)
!4118 = !DILocation(line: 446, column: 129, scope: !3659)
!4119 = !DILocation(line: 446, column: 154, scope: !3659)
!4120 = !DILocation(line: 446, column: 165, scope: !3659)
!4121 = !DILocation(line: 446, column: 170, scope: !3659)
!4122 = !DILocation(line: 446, column: 162, scope: !3659)
!4123 = !DILocation(line: 446, column: 160, scope: !3659)
!4124 = !DILocation(line: 446, column: 152, scope: !3659)
!4125 = !DILocation(line: 446, column: 177, scope: !3659)
!4126 = !DILocation(line: 446, column: 188, scope: !3659)
!4127 = !DILocation(line: 446, column: 193, scope: !3659)
!4128 = !DILocation(line: 446, column: 185, scope: !3659)
!4129 = !DILocation(line: 446, column: 183, scope: !3659)
!4130 = !DILocation(line: 446, column: 175, scope: !3659)
!4131 = !DILocation(line: 446, column: 96, scope: !3659)
!4132 = !DILocation(line: 446, column: 101, scope: !3659)
!4133 = !DILocation(line: 446, column: 92, scope: !3659)
!4134 = !DILocation(line: 446, column: 106, scope: !3659)
!4135 = !DILocation(line: 447, column: 24, scope: !3659)
!4136 = !DILocation(line: 447, column: 35, scope: !3659)
!4137 = !DILocation(line: 447, column: 32, scope: !3659)
!4138 = !DILocation(line: 447, column: 30, scope: !3659)
!4139 = !DILocation(line: 447, column: 43, scope: !3659)
!4140 = !DILocation(line: 447, column: 54, scope: !3659)
!4141 = !DILocation(line: 447, column: 51, scope: !3659)
!4142 = !DILocation(line: 447, column: 49, scope: !3659)
!4143 = !DILocation(line: 447, column: 41, scope: !3659)
!4144 = !DILocation(line: 447, column: 62, scope: !3659)
!4145 = !DILocation(line: 447, column: 73, scope: !3659)
!4146 = !DILocation(line: 447, column: 70, scope: !3659)
!4147 = !DILocation(line: 447, column: 68, scope: !3659)
!4148 = !DILocation(line: 447, column: 60, scope: !3659)
!4149 = !DILocation(line: 447, column: 81, scope: !3659)
!4150 = !DILocation(line: 447, column: 92, scope: !3659)
!4151 = !DILocation(line: 447, column: 89, scope: !3659)
!4152 = !DILocation(line: 447, column: 87, scope: !3659)
!4153 = !DILocation(line: 447, column: 79, scope: !3659)
!4154 = !DILocation(line: 447, column: 9, scope: !3659)
!4155 = !DILocation(line: 447, column: 16, scope: !3659)
!4156 = !DILocation(line: 447, column: 14, scope: !3659)
!4157 = !DILocation(line: 447, column: 5, scope: !3659)
!4158 = !DILocation(line: 447, column: 22, scope: !3659)
!4159 = !DILocation(line: 447, column: 122, scope: !3659)
!4160 = !DILocation(line: 447, column: 133, scope: !3659)
!4161 = !DILocation(line: 447, column: 138, scope: !3659)
!4162 = !DILocation(line: 447, column: 130, scope: !3659)
!4163 = !DILocation(line: 447, column: 128, scope: !3659)
!4164 = !DILocation(line: 447, column: 145, scope: !3659)
!4165 = !DILocation(line: 447, column: 156, scope: !3659)
!4166 = !DILocation(line: 447, column: 161, scope: !3659)
!4167 = !DILocation(line: 447, column: 153, scope: !3659)
!4168 = !DILocation(line: 447, column: 151, scope: !3659)
!4169 = !DILocation(line: 447, column: 143, scope: !3659)
!4170 = !DILocation(line: 447, column: 168, scope: !3659)
!4171 = !DILocation(line: 447, column: 179, scope: !3659)
!4172 = !DILocation(line: 447, column: 184, scope: !3659)
!4173 = !DILocation(line: 447, column: 176, scope: !3659)
!4174 = !DILocation(line: 447, column: 174, scope: !3659)
!4175 = !DILocation(line: 447, column: 166, scope: !3659)
!4176 = !DILocation(line: 447, column: 191, scope: !3659)
!4177 = !DILocation(line: 447, column: 202, scope: !3659)
!4178 = !DILocation(line: 447, column: 207, scope: !3659)
!4179 = !DILocation(line: 447, column: 199, scope: !3659)
!4180 = !DILocation(line: 447, column: 197, scope: !3659)
!4181 = !DILocation(line: 447, column: 189, scope: !3659)
!4182 = !DILocation(line: 447, column: 103, scope: !3659)
!4183 = !DILocation(line: 447, column: 110, scope: !3659)
!4184 = !DILocation(line: 447, column: 108, scope: !3659)
!4185 = !DILocation(line: 447, column: 115, scope: !3659)
!4186 = !DILocation(line: 447, column: 99, scope: !3659)
!4187 = !DILocation(line: 447, column: 120, scope: !3659)
!4188 = !DILocation(line: 449, column: 9, scope: !3659)
!4189 = !DILocation(line: 449, column: 7, scope: !3659)
!4190 = !DILocation(line: 450, column: 9, scope: !3659)
!4191 = !DILocation(line: 450, column: 20, scope: !3659)
!4192 = !DILocation(line: 450, column: 18, scope: !3659)
!4193 = !DILocation(line: 450, column: 27, scope: !3659)
!4194 = !DILocation(line: 450, column: 25, scope: !3659)
!4195 = !DILocation(line: 450, column: 14, scope: !3659)
!4196 = !DILocation(line: 450, column: 7, scope: !3659)
!4197 = !DILocation(line: 451, column: 10, scope: !3659)
!4198 = !DILocation(line: 451, column: 16, scope: !3659)
!4199 = !DILocation(line: 451, column: 14, scope: !3659)
!4200 = !DILocation(line: 451, column: 21, scope: !3659)
!4201 = !DILocation(line: 451, column: 8, scope: !3659)
!4202 = !DILocation(line: 452, column: 10, scope: !3659)
!4203 = !DILocation(line: 452, column: 16, scope: !3659)
!4204 = !DILocation(line: 452, column: 14, scope: !3659)
!4205 = !DILocation(line: 452, column: 21, scope: !3659)
!4206 = !DILocation(line: 452, column: 27, scope: !3659)
!4207 = !DILocation(line: 452, column: 25, scope: !3659)
!4208 = !DILocation(line: 452, column: 8, scope: !3659)
!4209 = !DILocation(line: 453, column: 12, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !3659, file: !898, line: 453, column: 5)
!4211 = !DILocation(line: 453, column: 10, scope: !4210)
!4212 = !DILocation(line: 453, column: 17, scope: !4213)
!4213 = !DILexicalBlockFile(scope: !4214, file: !898, discriminator: 1)
!4214 = distinct !DILexicalBlock(scope: !4210, file: !898, line: 453, column: 5)
!4215 = !DILocation(line: 453, column: 22, scope: !4213)
!4216 = !DILocation(line: 453, column: 27, scope: !4213)
!4217 = !DILocation(line: 453, column: 32, scope: !4213)
!4218 = !DILocation(line: 453, column: 19, scope: !4213)
!4219 = !DILocation(line: 453, column: 5, scope: !4213)
!4220 = !DILocation(line: 454, column: 20, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4214, file: !898, line: 453, column: 43)
!4222 = !DILocation(line: 454, column: 22, scope: !4221)
!4223 = !DILocation(line: 454, column: 17, scope: !4221)
!4224 = !DILocation(line: 454, column: 32, scope: !4221)
!4225 = !DILocation(line: 454, column: 34, scope: !4221)
!4226 = !DILocation(line: 454, column: 29, scope: !4221)
!4227 = !DILocation(line: 454, column: 27, scope: !4221)
!4228 = !DILocation(line: 454, column: 44, scope: !4221)
!4229 = !DILocation(line: 454, column: 46, scope: !4221)
!4230 = !DILocation(line: 454, column: 41, scope: !4221)
!4231 = !DILocation(line: 454, column: 56, scope: !4221)
!4232 = !DILocation(line: 454, column: 58, scope: !4221)
!4233 = !DILocation(line: 454, column: 53, scope: !4221)
!4234 = !DILocation(line: 454, column: 51, scope: !4221)
!4235 = !DILocation(line: 454, column: 39, scope: !4221)
!4236 = !DILocation(line: 454, column: 68, scope: !4221)
!4237 = !DILocation(line: 454, column: 70, scope: !4221)
!4238 = !DILocation(line: 454, column: 65, scope: !4221)
!4239 = !DILocation(line: 454, column: 80, scope: !4221)
!4240 = !DILocation(line: 454, column: 82, scope: !4221)
!4241 = !DILocation(line: 454, column: 77, scope: !4221)
!4242 = !DILocation(line: 454, column: 75, scope: !4221)
!4243 = !DILocation(line: 454, column: 63, scope: !4221)
!4244 = !DILocation(line: 454, column: 92, scope: !4221)
!4245 = !DILocation(line: 454, column: 94, scope: !4221)
!4246 = !DILocation(line: 454, column: 89, scope: !4221)
!4247 = !DILocation(line: 454, column: 104, scope: !4221)
!4248 = !DILocation(line: 454, column: 106, scope: !4221)
!4249 = !DILocation(line: 454, column: 101, scope: !4221)
!4250 = !DILocation(line: 454, column: 99, scope: !4221)
!4251 = !DILocation(line: 454, column: 87, scope: !4221)
!4252 = !DILocation(line: 454, column: 116, scope: !4221)
!4253 = !DILocation(line: 454, column: 118, scope: !4221)
!4254 = !DILocation(line: 454, column: 113, scope: !4221)
!4255 = !DILocation(line: 454, column: 128, scope: !4221)
!4256 = !DILocation(line: 454, column: 130, scope: !4221)
!4257 = !DILocation(line: 454, column: 125, scope: !4221)
!4258 = !DILocation(line: 454, column: 123, scope: !4221)
!4259 = !DILocation(line: 454, column: 111, scope: !4221)
!4260 = !DILocation(line: 454, column: 140, scope: !4221)
!4261 = !DILocation(line: 454, column: 142, scope: !4221)
!4262 = !DILocation(line: 454, column: 137, scope: !4221)
!4263 = !DILocation(line: 454, column: 152, scope: !4221)
!4264 = !DILocation(line: 454, column: 154, scope: !4221)
!4265 = !DILocation(line: 454, column: 149, scope: !4221)
!4266 = !DILocation(line: 454, column: 147, scope: !4221)
!4267 = !DILocation(line: 454, column: 135, scope: !4221)
!4268 = !DILocation(line: 454, column: 164, scope: !4221)
!4269 = !DILocation(line: 454, column: 166, scope: !4221)
!4270 = !DILocation(line: 454, column: 161, scope: !4221)
!4271 = !DILocation(line: 454, column: 176, scope: !4221)
!4272 = !DILocation(line: 454, column: 178, scope: !4221)
!4273 = !DILocation(line: 454, column: 173, scope: !4221)
!4274 = !DILocation(line: 454, column: 171, scope: !4221)
!4275 = !DILocation(line: 454, column: 159, scope: !4221)
!4276 = !DILocation(line: 454, column: 188, scope: !4221)
!4277 = !DILocation(line: 454, column: 190, scope: !4221)
!4278 = !DILocation(line: 454, column: 185, scope: !4221)
!4279 = !DILocation(line: 454, column: 200, scope: !4221)
!4280 = !DILocation(line: 454, column: 202, scope: !4221)
!4281 = !DILocation(line: 454, column: 197, scope: !4221)
!4282 = !DILocation(line: 454, column: 195, scope: !4221)
!4283 = !DILocation(line: 454, column: 183, scope: !4221)
!4284 = !DILocation(line: 454, column: 12, scope: !4221)
!4285 = !DILocation(line: 454, column: 15, scope: !4221)
!4286 = !DILocation(line: 454, column: 219, scope: !4221)
!4287 = !DILocation(line: 454, column: 221, scope: !4221)
!4288 = !DILocation(line: 454, column: 216, scope: !4221)
!4289 = !DILocation(line: 454, column: 231, scope: !4221)
!4290 = !DILocation(line: 454, column: 233, scope: !4221)
!4291 = !DILocation(line: 454, column: 228, scope: !4221)
!4292 = !DILocation(line: 454, column: 226, scope: !4221)
!4293 = !DILocation(line: 454, column: 243, scope: !4221)
!4294 = !DILocation(line: 454, column: 245, scope: !4221)
!4295 = !DILocation(line: 454, column: 240, scope: !4221)
!4296 = !DILocation(line: 454, column: 255, scope: !4221)
!4297 = !DILocation(line: 454, column: 257, scope: !4221)
!4298 = !DILocation(line: 454, column: 252, scope: !4221)
!4299 = !DILocation(line: 454, column: 250, scope: !4221)
!4300 = !DILocation(line: 454, column: 238, scope: !4221)
!4301 = !DILocation(line: 454, column: 267, scope: !4221)
!4302 = !DILocation(line: 454, column: 269, scope: !4221)
!4303 = !DILocation(line: 454, column: 264, scope: !4221)
!4304 = !DILocation(line: 454, column: 279, scope: !4221)
!4305 = !DILocation(line: 454, column: 281, scope: !4221)
!4306 = !DILocation(line: 454, column: 276, scope: !4221)
!4307 = !DILocation(line: 454, column: 274, scope: !4221)
!4308 = !DILocation(line: 454, column: 262, scope: !4221)
!4309 = !DILocation(line: 454, column: 291, scope: !4221)
!4310 = !DILocation(line: 454, column: 293, scope: !4221)
!4311 = !DILocation(line: 454, column: 288, scope: !4221)
!4312 = !DILocation(line: 454, column: 303, scope: !4221)
!4313 = !DILocation(line: 454, column: 305, scope: !4221)
!4314 = !DILocation(line: 454, column: 300, scope: !4221)
!4315 = !DILocation(line: 454, column: 298, scope: !4221)
!4316 = !DILocation(line: 454, column: 286, scope: !4221)
!4317 = !DILocation(line: 454, column: 315, scope: !4221)
!4318 = !DILocation(line: 454, column: 317, scope: !4221)
!4319 = !DILocation(line: 454, column: 312, scope: !4221)
!4320 = !DILocation(line: 454, column: 327, scope: !4221)
!4321 = !DILocation(line: 454, column: 329, scope: !4221)
!4322 = !DILocation(line: 454, column: 324, scope: !4221)
!4323 = !DILocation(line: 454, column: 322, scope: !4221)
!4324 = !DILocation(line: 454, column: 310, scope: !4221)
!4325 = !DILocation(line: 454, column: 339, scope: !4221)
!4326 = !DILocation(line: 454, column: 341, scope: !4221)
!4327 = !DILocation(line: 454, column: 336, scope: !4221)
!4328 = !DILocation(line: 454, column: 351, scope: !4221)
!4329 = !DILocation(line: 454, column: 353, scope: !4221)
!4330 = !DILocation(line: 454, column: 348, scope: !4221)
!4331 = !DILocation(line: 454, column: 346, scope: !4221)
!4332 = !DILocation(line: 454, column: 334, scope: !4221)
!4333 = !DILocation(line: 454, column: 363, scope: !4221)
!4334 = !DILocation(line: 454, column: 365, scope: !4221)
!4335 = !DILocation(line: 454, column: 360, scope: !4221)
!4336 = !DILocation(line: 454, column: 375, scope: !4221)
!4337 = !DILocation(line: 454, column: 377, scope: !4221)
!4338 = !DILocation(line: 454, column: 372, scope: !4221)
!4339 = !DILocation(line: 454, column: 370, scope: !4221)
!4340 = !DILocation(line: 454, column: 358, scope: !4221)
!4341 = !DILocation(line: 454, column: 387, scope: !4221)
!4342 = !DILocation(line: 454, column: 389, scope: !4221)
!4343 = !DILocation(line: 454, column: 384, scope: !4221)
!4344 = !DILocation(line: 454, column: 399, scope: !4221)
!4345 = !DILocation(line: 454, column: 401, scope: !4221)
!4346 = !DILocation(line: 454, column: 396, scope: !4221)
!4347 = !DILocation(line: 454, column: 394, scope: !4221)
!4348 = !DILocation(line: 454, column: 382, scope: !4221)
!4349 = !DILocation(line: 454, column: 211, scope: !4221)
!4350 = !DILocation(line: 454, column: 214, scope: !4221)
!4351 = !DILocation(line: 455, column: 20, scope: !4221)
!4352 = !DILocation(line: 455, column: 22, scope: !4221)
!4353 = !DILocation(line: 455, column: 17, scope: !4221)
!4354 = !DILocation(line: 455, column: 32, scope: !4221)
!4355 = !DILocation(line: 455, column: 34, scope: !4221)
!4356 = !DILocation(line: 455, column: 29, scope: !4221)
!4357 = !DILocation(line: 455, column: 27, scope: !4221)
!4358 = !DILocation(line: 455, column: 44, scope: !4221)
!4359 = !DILocation(line: 455, column: 46, scope: !4221)
!4360 = !DILocation(line: 455, column: 41, scope: !4221)
!4361 = !DILocation(line: 455, column: 56, scope: !4221)
!4362 = !DILocation(line: 455, column: 58, scope: !4221)
!4363 = !DILocation(line: 455, column: 53, scope: !4221)
!4364 = !DILocation(line: 455, column: 51, scope: !4221)
!4365 = !DILocation(line: 455, column: 39, scope: !4221)
!4366 = !DILocation(line: 455, column: 68, scope: !4221)
!4367 = !DILocation(line: 455, column: 70, scope: !4221)
!4368 = !DILocation(line: 455, column: 65, scope: !4221)
!4369 = !DILocation(line: 455, column: 80, scope: !4221)
!4370 = !DILocation(line: 455, column: 82, scope: !4221)
!4371 = !DILocation(line: 455, column: 77, scope: !4221)
!4372 = !DILocation(line: 455, column: 75, scope: !4221)
!4373 = !DILocation(line: 455, column: 63, scope: !4221)
!4374 = !DILocation(line: 455, column: 92, scope: !4221)
!4375 = !DILocation(line: 455, column: 94, scope: !4221)
!4376 = !DILocation(line: 455, column: 89, scope: !4221)
!4377 = !DILocation(line: 455, column: 104, scope: !4221)
!4378 = !DILocation(line: 455, column: 106, scope: !4221)
!4379 = !DILocation(line: 455, column: 101, scope: !4221)
!4380 = !DILocation(line: 455, column: 99, scope: !4221)
!4381 = !DILocation(line: 455, column: 87, scope: !4221)
!4382 = !DILocation(line: 455, column: 116, scope: !4221)
!4383 = !DILocation(line: 455, column: 118, scope: !4221)
!4384 = !DILocation(line: 455, column: 113, scope: !4221)
!4385 = !DILocation(line: 455, column: 128, scope: !4221)
!4386 = !DILocation(line: 455, column: 130, scope: !4221)
!4387 = !DILocation(line: 455, column: 125, scope: !4221)
!4388 = !DILocation(line: 455, column: 123, scope: !4221)
!4389 = !DILocation(line: 455, column: 111, scope: !4221)
!4390 = !DILocation(line: 455, column: 140, scope: !4221)
!4391 = !DILocation(line: 455, column: 142, scope: !4221)
!4392 = !DILocation(line: 455, column: 137, scope: !4221)
!4393 = !DILocation(line: 455, column: 152, scope: !4221)
!4394 = !DILocation(line: 455, column: 154, scope: !4221)
!4395 = !DILocation(line: 455, column: 149, scope: !4221)
!4396 = !DILocation(line: 455, column: 147, scope: !4221)
!4397 = !DILocation(line: 455, column: 135, scope: !4221)
!4398 = !DILocation(line: 455, column: 164, scope: !4221)
!4399 = !DILocation(line: 455, column: 166, scope: !4221)
!4400 = !DILocation(line: 455, column: 161, scope: !4221)
!4401 = !DILocation(line: 455, column: 176, scope: !4221)
!4402 = !DILocation(line: 455, column: 178, scope: !4221)
!4403 = !DILocation(line: 455, column: 173, scope: !4221)
!4404 = !DILocation(line: 455, column: 171, scope: !4221)
!4405 = !DILocation(line: 455, column: 159, scope: !4221)
!4406 = !DILocation(line: 455, column: 188, scope: !4221)
!4407 = !DILocation(line: 455, column: 190, scope: !4221)
!4408 = !DILocation(line: 455, column: 185, scope: !4221)
!4409 = !DILocation(line: 455, column: 200, scope: !4221)
!4410 = !DILocation(line: 455, column: 202, scope: !4221)
!4411 = !DILocation(line: 455, column: 197, scope: !4221)
!4412 = !DILocation(line: 455, column: 195, scope: !4221)
!4413 = !DILocation(line: 455, column: 183, scope: !4221)
!4414 = !DILocation(line: 455, column: 12, scope: !4221)
!4415 = !DILocation(line: 455, column: 15, scope: !4221)
!4416 = !DILocation(line: 455, column: 219, scope: !4221)
!4417 = !DILocation(line: 455, column: 221, scope: !4221)
!4418 = !DILocation(line: 455, column: 216, scope: !4221)
!4419 = !DILocation(line: 455, column: 231, scope: !4221)
!4420 = !DILocation(line: 455, column: 233, scope: !4221)
!4421 = !DILocation(line: 455, column: 228, scope: !4221)
!4422 = !DILocation(line: 455, column: 226, scope: !4221)
!4423 = !DILocation(line: 455, column: 243, scope: !4221)
!4424 = !DILocation(line: 455, column: 245, scope: !4221)
!4425 = !DILocation(line: 455, column: 240, scope: !4221)
!4426 = !DILocation(line: 455, column: 255, scope: !4221)
!4427 = !DILocation(line: 455, column: 257, scope: !4221)
!4428 = !DILocation(line: 455, column: 252, scope: !4221)
!4429 = !DILocation(line: 455, column: 250, scope: !4221)
!4430 = !DILocation(line: 455, column: 238, scope: !4221)
!4431 = !DILocation(line: 455, column: 267, scope: !4221)
!4432 = !DILocation(line: 455, column: 269, scope: !4221)
!4433 = !DILocation(line: 455, column: 264, scope: !4221)
!4434 = !DILocation(line: 455, column: 279, scope: !4221)
!4435 = !DILocation(line: 455, column: 281, scope: !4221)
!4436 = !DILocation(line: 455, column: 276, scope: !4221)
!4437 = !DILocation(line: 455, column: 274, scope: !4221)
!4438 = !DILocation(line: 455, column: 262, scope: !4221)
!4439 = !DILocation(line: 455, column: 291, scope: !4221)
!4440 = !DILocation(line: 455, column: 293, scope: !4221)
!4441 = !DILocation(line: 455, column: 288, scope: !4221)
!4442 = !DILocation(line: 455, column: 303, scope: !4221)
!4443 = !DILocation(line: 455, column: 305, scope: !4221)
!4444 = !DILocation(line: 455, column: 300, scope: !4221)
!4445 = !DILocation(line: 455, column: 298, scope: !4221)
!4446 = !DILocation(line: 455, column: 286, scope: !4221)
!4447 = !DILocation(line: 455, column: 315, scope: !4221)
!4448 = !DILocation(line: 455, column: 317, scope: !4221)
!4449 = !DILocation(line: 455, column: 312, scope: !4221)
!4450 = !DILocation(line: 455, column: 327, scope: !4221)
!4451 = !DILocation(line: 455, column: 329, scope: !4221)
!4452 = !DILocation(line: 455, column: 324, scope: !4221)
!4453 = !DILocation(line: 455, column: 322, scope: !4221)
!4454 = !DILocation(line: 455, column: 310, scope: !4221)
!4455 = !DILocation(line: 455, column: 339, scope: !4221)
!4456 = !DILocation(line: 455, column: 341, scope: !4221)
!4457 = !DILocation(line: 455, column: 336, scope: !4221)
!4458 = !DILocation(line: 455, column: 351, scope: !4221)
!4459 = !DILocation(line: 455, column: 353, scope: !4221)
!4460 = !DILocation(line: 455, column: 348, scope: !4221)
!4461 = !DILocation(line: 455, column: 346, scope: !4221)
!4462 = !DILocation(line: 455, column: 334, scope: !4221)
!4463 = !DILocation(line: 455, column: 363, scope: !4221)
!4464 = !DILocation(line: 455, column: 365, scope: !4221)
!4465 = !DILocation(line: 455, column: 360, scope: !4221)
!4466 = !DILocation(line: 455, column: 375, scope: !4221)
!4467 = !DILocation(line: 455, column: 377, scope: !4221)
!4468 = !DILocation(line: 455, column: 372, scope: !4221)
!4469 = !DILocation(line: 455, column: 370, scope: !4221)
!4470 = !DILocation(line: 455, column: 358, scope: !4221)
!4471 = !DILocation(line: 455, column: 387, scope: !4221)
!4472 = !DILocation(line: 455, column: 389, scope: !4221)
!4473 = !DILocation(line: 455, column: 384, scope: !4221)
!4474 = !DILocation(line: 455, column: 399, scope: !4221)
!4475 = !DILocation(line: 455, column: 401, scope: !4221)
!4476 = !DILocation(line: 455, column: 396, scope: !4221)
!4477 = !DILocation(line: 455, column: 394, scope: !4221)
!4478 = !DILocation(line: 455, column: 382, scope: !4221)
!4479 = !DILocation(line: 455, column: 211, scope: !4221)
!4480 = !DILocation(line: 455, column: 214, scope: !4221)
!4481 = !DILocation(line: 456, column: 11, scope: !4221)
!4482 = !DILocation(line: 457, column: 18, scope: !4221)
!4483 = !DILocation(line: 457, column: 16, scope: !4221)
!4484 = !DILocation(line: 457, column: 11, scope: !4221)
!4485 = !DILocation(line: 458, column: 5, scope: !4221)
!4486 = !DILocation(line: 453, column: 39, scope: !4487)
!4487 = !DILexicalBlockFile(scope: !4214, file: !898, discriminator: 2)
!4488 = !DILocation(line: 453, column: 5, scope: !4487)
!4489 = distinct !{!4489, !4490}
!4490 = !DILocation(line: 453, column: 5, scope: !3659)
!4491 = !DILocation(line: 459, column: 21, scope: !3659)
!4492 = !DILocation(line: 459, column: 32, scope: !3659)
!4493 = !DILocation(line: 459, column: 29, scope: !3659)
!4494 = !DILocation(line: 459, column: 27, scope: !3659)
!4495 = !DILocation(line: 459, column: 37, scope: !3659)
!4496 = !DILocation(line: 459, column: 48, scope: !3659)
!4497 = !DILocation(line: 459, column: 45, scope: !3659)
!4498 = !DILocation(line: 459, column: 43, scope: !3659)
!4499 = !DILocation(line: 459, column: 35, scope: !3659)
!4500 = !DILocation(line: 459, column: 53, scope: !3659)
!4501 = !DILocation(line: 459, column: 64, scope: !3659)
!4502 = !DILocation(line: 459, column: 61, scope: !3659)
!4503 = !DILocation(line: 459, column: 59, scope: !3659)
!4504 = !DILocation(line: 459, column: 51, scope: !3659)
!4505 = !DILocation(line: 459, column: 69, scope: !3659)
!4506 = !DILocation(line: 459, column: 80, scope: !3659)
!4507 = !DILocation(line: 459, column: 77, scope: !3659)
!4508 = !DILocation(line: 459, column: 75, scope: !3659)
!4509 = !DILocation(line: 459, column: 67, scope: !3659)
!4510 = !DILocation(line: 459, column: 9, scope: !3659)
!4511 = !DILocation(line: 459, column: 14, scope: !3659)
!4512 = !DILocation(line: 459, column: 5, scope: !3659)
!4513 = !DILocation(line: 459, column: 19, scope: !3659)
!4514 = !DILocation(line: 459, column: 104, scope: !3659)
!4515 = !DILocation(line: 459, column: 115, scope: !3659)
!4516 = !DILocation(line: 459, column: 117, scope: !3659)
!4517 = !DILocation(line: 459, column: 112, scope: !3659)
!4518 = !DILocation(line: 459, column: 110, scope: !3659)
!4519 = !DILocation(line: 459, column: 124, scope: !3659)
!4520 = !DILocation(line: 459, column: 135, scope: !3659)
!4521 = !DILocation(line: 459, column: 137, scope: !3659)
!4522 = !DILocation(line: 459, column: 132, scope: !3659)
!4523 = !DILocation(line: 459, column: 130, scope: !3659)
!4524 = !DILocation(line: 459, column: 122, scope: !3659)
!4525 = !DILocation(line: 459, column: 144, scope: !3659)
!4526 = !DILocation(line: 459, column: 155, scope: !3659)
!4527 = !DILocation(line: 459, column: 157, scope: !3659)
!4528 = !DILocation(line: 459, column: 152, scope: !3659)
!4529 = !DILocation(line: 459, column: 150, scope: !3659)
!4530 = !DILocation(line: 459, column: 142, scope: !3659)
!4531 = !DILocation(line: 459, column: 164, scope: !3659)
!4532 = !DILocation(line: 459, column: 175, scope: !3659)
!4533 = !DILocation(line: 459, column: 177, scope: !3659)
!4534 = !DILocation(line: 459, column: 172, scope: !3659)
!4535 = !DILocation(line: 459, column: 170, scope: !3659)
!4536 = !DILocation(line: 459, column: 162, scope: !3659)
!4537 = !DILocation(line: 459, column: 88, scope: !3659)
!4538 = !DILocation(line: 459, column: 93, scope: !3659)
!4539 = !DILocation(line: 459, column: 97, scope: !3659)
!4540 = !DILocation(line: 459, column: 84, scope: !3659)
!4541 = !DILocation(line: 459, column: 102, scope: !3659)
!4542 = !DILocation(line: 460, column: 1, scope: !3659)
!4543 = distinct !DISubprogram(name: "on2avc_decode_subframe", scope: !898, file: !898, line: 798, type: !4544, isLocal: true, isDefinition: true, scopeLine: 800, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!4544 = !DISubroutineType(types: !4545)
!4545 = !{!909, !1687, !1475, !909, !1055, !909}
!4546 = !DILocalVariable(name: "c", arg: 1, scope: !4543, file: !898, line: 798, type: !1687)
!4547 = !DILocation(line: 798, column: 50, scope: !4543)
!4548 = !DILocalVariable(name: "buf", arg: 2, scope: !4543, file: !898, line: 798, type: !1475)
!4549 = !DILocation(line: 798, column: 68, scope: !4543)
!4550 = !DILocalVariable(name: "buf_size", arg: 3, scope: !4543, file: !898, line: 799, type: !909)
!4551 = !DILocation(line: 799, column: 39, scope: !4543)
!4552 = !DILocalVariable(name: "dst", arg: 4, scope: !4543, file: !898, line: 799, type: !1055)
!4553 = !DILocation(line: 799, column: 58, scope: !4543)
!4554 = !DILocalVariable(name: "offset", arg: 5, scope: !4543, file: !898, line: 799, type: !909)
!4555 = !DILocation(line: 799, column: 67, scope: !4543)
!4556 = !DILocalVariable(name: "gb", scope: !4543, file: !898, line: 801, type: !4557)
!4557 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !4558, line: 70, baseType: !4559)
!4558 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!4559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !4558, line: 61, size: 256, align: 64, elements: !4560)
!4560 = !{!4561, !4562, !4563, !4564, !4565}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4559, file: !4558, line: 62, baseType: !1475, size: 64, align: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !4559, file: !4558, line: 62, baseType: !1475, size: 64, align: 64, offset: 64)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4559, file: !4558, line: 67, baseType: !909, size: 32, align: 32, offset: 128)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !4559, file: !4558, line: 68, baseType: !909, size: 32, align: 32, offset: 160)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !4559, file: !4558, line: 69, baseType: !909, size: 32, align: 32, offset: 192)
!4566 = !DILocation(line: 801, column: 19, scope: !4543)
!4567 = !DILocalVariable(name: "i", scope: !4543, file: !898, line: 802, type: !909)
!4568 = !DILocation(line: 802, column: 9, scope: !4543)
!4569 = !DILocalVariable(name: "ret", scope: !4543, file: !898, line: 802, type: !909)
!4570 = !DILocation(line: 802, column: 12, scope: !4543)
!4571 = !DILocation(line: 804, column: 36, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4543, file: !898, line: 804, column: 9)
!4573 = !DILocation(line: 804, column: 41, scope: !4572)
!4574 = !DILocation(line: 804, column: 16, scope: !4572)
!4575 = !DILocation(line: 804, column: 14, scope: !4572)
!4576 = !DILocation(line: 804, column: 52, scope: !4572)
!4577 = !DILocation(line: 804, column: 9, scope: !4543)
!4578 = !DILocation(line: 805, column: 16, scope: !4572)
!4579 = !DILocation(line: 805, column: 9, scope: !4572)
!4580 = !DILocation(line: 807, column: 9, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4543, file: !898, line: 807, column: 9)
!4582 = !DILocation(line: 807, column: 9, scope: !4543)
!4583 = !DILocation(line: 808, column: 16, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4581, file: !898, line: 807, column: 25)
!4585 = !DILocation(line: 808, column: 19, scope: !4584)
!4586 = !DILocation(line: 808, column: 9, scope: !4584)
!4587 = !DILocation(line: 809, column: 9, scope: !4584)
!4588 = !DILocation(line: 811, column: 27, scope: !4543)
!4589 = !DILocation(line: 811, column: 30, scope: !4543)
!4590 = !DILocation(line: 811, column: 5, scope: !4543)
!4591 = !DILocation(line: 811, column: 8, scope: !4543)
!4592 = !DILocation(line: 811, column: 25, scope: !4543)
!4593 = !DILocation(line: 812, column: 22, scope: !4543)
!4594 = !DILocation(line: 812, column: 5, scope: !4543)
!4595 = !DILocation(line: 812, column: 8, scope: !4543)
!4596 = !DILocation(line: 812, column: 20, scope: !4543)
!4597 = !DILocation(line: 814, column: 30, scope: !4543)
!4598 = !DILocation(line: 814, column: 33, scope: !4543)
!4599 = !DILocation(line: 814, column: 21, scope: !4543)
!4600 = !DILocation(line: 814, column: 24, scope: !4543)
!4601 = !DILocation(line: 814, column: 46, scope: !4543)
!4602 = !DILocation(line: 814, column: 5, scope: !4543)
!4603 = !DILocation(line: 814, column: 8, scope: !4543)
!4604 = !DILocation(line: 814, column: 19, scope: !4543)
!4605 = !DILocation(line: 815, column: 31, scope: !4543)
!4606 = !DILocation(line: 815, column: 34, scope: !4543)
!4607 = !DILocation(line: 815, column: 22, scope: !4543)
!4608 = !DILocation(line: 815, column: 25, scope: !4543)
!4609 = !DILocation(line: 815, column: 47, scope: !4543)
!4610 = !DILocation(line: 815, column: 5, scope: !4543)
!4611 = !DILocation(line: 815, column: 8, scope: !4543)
!4612 = !DILocation(line: 815, column: 20, scope: !4543)
!4613 = !DILocation(line: 816, column: 29, scope: !4543)
!4614 = !DILocation(line: 816, column: 32, scope: !4543)
!4615 = !DILocation(line: 816, column: 20, scope: !4543)
!4616 = !DILocation(line: 816, column: 23, scope: !4543)
!4617 = !DILocation(line: 816, column: 45, scope: !4543)
!4618 = !DILocation(line: 816, column: 5, scope: !4543)
!4619 = !DILocation(line: 816, column: 8, scope: !4543)
!4620 = !DILocation(line: 816, column: 18, scope: !4543)
!4621 = !DILocation(line: 817, column: 19, scope: !4543)
!4622 = !DILocation(line: 817, column: 22, scope: !4543)
!4623 = !DILocation(line: 817, column: 34, scope: !4543)
!4624 = !DILocation(line: 817, column: 5, scope: !4543)
!4625 = !DILocation(line: 817, column: 8, scope: !4543)
!4626 = !DILocation(line: 817, column: 16, scope: !4543)
!4627 = !DILocation(line: 819, column: 5, scope: !4543)
!4628 = !DILocation(line: 819, column: 8, scope: !4543)
!4629 = !DILocation(line: 819, column: 20, scope: !4543)
!4630 = !DILocation(line: 820, column: 12, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4543, file: !898, line: 820, column: 5)
!4632 = !DILocation(line: 820, column: 10, scope: !4631)
!4633 = !DILocation(line: 820, column: 17, scope: !4634)
!4634 = !DILexicalBlockFile(scope: !4635, file: !898, discriminator: 1)
!4635 = distinct !DILexicalBlock(scope: !4631, file: !898, line: 820, column: 5)
!4636 = !DILocation(line: 820, column: 21, scope: !4634)
!4637 = !DILocation(line: 820, column: 24, scope: !4634)
!4638 = !DILocation(line: 820, column: 19, scope: !4634)
!4639 = !DILocation(line: 820, column: 5, scope: !4634)
!4640 = !DILocation(line: 821, column: 27, scope: !4635)
!4641 = !DILocation(line: 821, column: 26, scope: !4635)
!4642 = !DILocation(line: 821, column: 21, scope: !4635)
!4643 = !DILocation(line: 821, column: 9, scope: !4635)
!4644 = !DILocation(line: 821, column: 12, scope: !4635)
!4645 = !DILocation(line: 821, column: 24, scope: !4635)
!4646 = !DILocation(line: 820, column: 38, scope: !4647)
!4647 = !DILexicalBlockFile(scope: !4635, file: !898, discriminator: 2)
!4648 = !DILocation(line: 820, column: 5, scope: !4647)
!4649 = distinct !{!4649, !4650}
!4650 = !DILocation(line: 820, column: 5, scope: !4543)
!4651 = !DILocation(line: 823, column: 25, scope: !4543)
!4652 = !DILocation(line: 823, column: 5, scope: !4543)
!4653 = !DILocation(line: 824, column: 12, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4543, file: !898, line: 824, column: 5)
!4655 = !DILocation(line: 824, column: 10, scope: !4654)
!4656 = !DILocation(line: 824, column: 17, scope: !4657)
!4657 = !DILexicalBlockFile(scope: !4658, file: !898, discriminator: 1)
!4658 = distinct !DILexicalBlock(scope: !4654, file: !898, line: 824, column: 5)
!4659 = !DILocation(line: 824, column: 21, scope: !4657)
!4660 = !DILocation(line: 824, column: 24, scope: !4657)
!4661 = !DILocation(line: 824, column: 31, scope: !4657)
!4662 = !DILocation(line: 824, column: 19, scope: !4657)
!4663 = !DILocation(line: 824, column: 5, scope: !4657)
!4664 = !DILocation(line: 825, column: 45, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4658, file: !898, line: 825, column: 13)
!4666 = !DILocation(line: 825, column: 53, scope: !4665)
!4667 = !DILocation(line: 825, column: 20, scope: !4665)
!4668 = !DILocation(line: 825, column: 18, scope: !4665)
!4669 = !DILocation(line: 825, column: 57, scope: !4665)
!4670 = !DILocation(line: 825, column: 13, scope: !4658)
!4671 = !DILocation(line: 826, column: 13, scope: !4665)
!4672 = !DILocation(line: 825, column: 59, scope: !4673)
!4673 = !DILexicalBlockFile(scope: !4665, file: !898, discriminator: 1)
!4674 = !DILocation(line: 824, column: 42, scope: !4675)
!4675 = !DILexicalBlockFile(scope: !4658, file: !898, discriminator: 2)
!4676 = !DILocation(line: 824, column: 5, scope: !4675)
!4677 = distinct !{!4677, !4678}
!4678 = !DILocation(line: 824, column: 5, scope: !4543)
!4679 = !DILocation(line: 827, column: 9, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4543, file: !898, line: 827, column: 9)
!4681 = !DILocation(line: 827, column: 12, scope: !4680)
!4682 = !DILocation(line: 827, column: 19, scope: !4680)
!4683 = !DILocation(line: 827, column: 28, scope: !4680)
!4684 = !DILocation(line: 827, column: 33, scope: !4680)
!4685 = !DILocation(line: 827, column: 36, scope: !4686)
!4686 = !DILexicalBlockFile(scope: !4680, file: !898, discriminator: 1)
!4687 = !DILocation(line: 827, column: 39, scope: !4686)
!4688 = !DILocation(line: 827, column: 9, scope: !4686)
!4689 = !DILocation(line: 828, column: 25, scope: !4680)
!4690 = !DILocation(line: 828, column: 9, scope: !4680)
!4691 = !DILocation(line: 829, column: 9, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4543, file: !898, line: 829, column: 9)
!4693 = !DILocation(line: 829, column: 12, scope: !4692)
!4694 = !DILocation(line: 829, column: 24, scope: !4692)
!4695 = !DILocation(line: 829, column: 9, scope: !4543)
!4696 = !DILocation(line: 830, column: 16, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !898, line: 830, column: 9)
!4698 = distinct !DILexicalBlock(scope: !4692, file: !898, line: 829, column: 44)
!4699 = !DILocation(line: 830, column: 14, scope: !4697)
!4700 = !DILocation(line: 830, column: 21, scope: !4701)
!4701 = !DILexicalBlockFile(scope: !4702, file: !898, discriminator: 1)
!4702 = distinct !DILexicalBlock(scope: !4697, file: !898, line: 830, column: 9)
!4703 = !DILocation(line: 830, column: 25, scope: !4701)
!4704 = !DILocation(line: 830, column: 28, scope: !4701)
!4705 = !DILocation(line: 830, column: 35, scope: !4701)
!4706 = !DILocation(line: 830, column: 23, scope: !4701)
!4707 = !DILocation(line: 830, column: 9, scope: !4701)
!4708 = !DILocation(line: 831, column: 40, scope: !4702)
!4709 = !DILocation(line: 831, column: 43, scope: !4702)
!4710 = !DILocation(line: 831, column: 46, scope: !4702)
!4711 = !DILocation(line: 831, column: 51, scope: !4702)
!4712 = !DILocation(line: 831, column: 13, scope: !4702)
!4713 = !DILocation(line: 830, column: 46, scope: !4714)
!4714 = !DILexicalBlockFile(scope: !4702, file: !898, discriminator: 2)
!4715 = !DILocation(line: 830, column: 9, scope: !4714)
!4716 = distinct !{!4716, !4717}
!4717 = !DILocation(line: 830, column: 9, scope: !4698)
!4718 = !DILocation(line: 832, column: 5, scope: !4698)
!4719 = !DILocation(line: 833, column: 40, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4692, file: !898, line: 832, column: 12)
!4721 = !DILocation(line: 833, column: 43, scope: !4720)
!4722 = !DILocation(line: 833, column: 48, scope: !4720)
!4723 = !DILocation(line: 833, column: 9, scope: !4720)
!4724 = !DILocation(line: 836, column: 5, scope: !4543)
!4725 = !DILocation(line: 837, column: 1, scope: !4543)
!4726 = distinct !DISubprogram(name: "init_get_bits8", scope: !4558, file: !4558, line: 650, type: !4727, isLocal: true, isDefinition: true, scopeLine: 652, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!4727 = !DISubroutineType(types: !4728)
!4728 = !{!909, !4729, !1475, !909}
!4729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4557, size: 64, align: 64)
!4730 = !DILocalVariable(name: "s", arg: 1, scope: !4726, file: !4558, line: 650, type: !4729)
!4731 = !DILocation(line: 650, column: 49, scope: !4726)
!4732 = !DILocalVariable(name: "buffer", arg: 2, scope: !4726, file: !4558, line: 650, type: !1475)
!4733 = !DILocation(line: 650, column: 67, scope: !4726)
!4734 = !DILocalVariable(name: "byte_size", arg: 3, scope: !4726, file: !4558, line: 651, type: !909)
!4735 = !DILocation(line: 651, column: 38, scope: !4726)
!4736 = !DILocation(line: 653, column: 9, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4726, file: !4558, line: 653, column: 9)
!4738 = !DILocation(line: 653, column: 19, scope: !4737)
!4739 = !DILocation(line: 653, column: 36, scope: !4737)
!4740 = !DILocation(line: 653, column: 39, scope: !4741)
!4741 = !DILexicalBlockFile(scope: !4737, file: !4558, discriminator: 1)
!4742 = !DILocation(line: 653, column: 49, scope: !4741)
!4743 = !DILocation(line: 653, column: 9, scope: !4741)
!4744 = !DILocation(line: 654, column: 19, scope: !4737)
!4745 = !DILocation(line: 654, column: 9, scope: !4737)
!4746 = !DILocation(line: 655, column: 26, scope: !4726)
!4747 = !DILocation(line: 655, column: 29, scope: !4726)
!4748 = !DILocation(line: 655, column: 37, scope: !4726)
!4749 = !DILocation(line: 655, column: 47, scope: !4726)
!4750 = !DILocation(line: 655, column: 12, scope: !4726)
!4751 = !DILocation(line: 655, column: 5, scope: !4726)
!4752 = distinct !DISubprogram(name: "get_bits1", scope: !4558, file: !4558, line: 487, type: !4753, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{!910, !4729}
!4755 = !DILocalVariable(name: "s", arg: 1, scope: !4752, file: !4558, line: 487, type: !4729)
!4756 = !DILocation(line: 487, column: 53, scope: !4752)
!4757 = !DILocalVariable(name: "index", scope: !4752, file: !4558, line: 499, type: !910)
!4758 = !DILocation(line: 499, column: 18, scope: !4752)
!4759 = !DILocation(line: 499, column: 26, scope: !4752)
!4760 = !DILocation(line: 499, column: 29, scope: !4752)
!4761 = !DILocalVariable(name: "result", scope: !4752, file: !4558, line: 500, type: !928)
!4762 = !DILocation(line: 500, column: 13, scope: !4752)
!4763 = !DILocation(line: 500, column: 32, scope: !4752)
!4764 = !DILocation(line: 500, column: 38, scope: !4752)
!4765 = !DILocation(line: 500, column: 22, scope: !4752)
!4766 = !DILocation(line: 500, column: 25, scope: !4752)
!4767 = !DILocation(line: 505, column: 16, scope: !4752)
!4768 = !DILocation(line: 505, column: 22, scope: !4752)
!4769 = !DILocation(line: 505, column: 12, scope: !4752)
!4770 = !DILocation(line: 506, column: 12, scope: !4752)
!4771 = !DILocation(line: 509, column: 9, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4752, file: !4558, line: 509, column: 9)
!4773 = !DILocation(line: 509, column: 12, scope: !4772)
!4774 = !DILocation(line: 509, column: 20, scope: !4772)
!4775 = !DILocation(line: 509, column: 23, scope: !4772)
!4776 = !DILocation(line: 509, column: 18, scope: !4772)
!4777 = !DILocation(line: 509, column: 9, scope: !4752)
!4778 = !DILocation(line: 511, column: 14, scope: !4772)
!4779 = !DILocation(line: 511, column: 9, scope: !4772)
!4780 = !DILocation(line: 512, column: 16, scope: !4752)
!4781 = !DILocation(line: 512, column: 5, scope: !4752)
!4782 = !DILocation(line: 512, column: 8, scope: !4752)
!4783 = !DILocation(line: 512, column: 14, scope: !4752)
!4784 = !DILocation(line: 514, column: 12, scope: !4752)
!4785 = !DILocation(line: 514, column: 5, scope: !4752)
!4786 = distinct !DISubprogram(name: "get_bits", scope: !4558, file: !4558, line: 381, type: !4787, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{!910, !4729, !909}
!4789 = !DILocalVariable(name: "x", arg: 1, scope: !4790, file: !4791, line: 66, type: !926)
!4790 = distinct !DISubprogram(name: "av_bswap32", scope: !4791, file: !4791, line: 66, type: !4792, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!4791 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!4792 = !DISubroutineType(types: !4793)
!4793 = !{!926, !926}
!4794 = !DILocation(line: 66, column: 98, scope: !4790, inlinedAt: !4795)
!4795 = distinct !DILocation(line: 401, column: 16, scope: !4786)
!4796 = !DILocalVariable(name: "s", arg: 1, scope: !4786, file: !4558, line: 381, type: !4729)
!4797 = !DILocation(line: 381, column: 52, scope: !4786)
!4798 = !DILocalVariable(name: "n", arg: 2, scope: !4786, file: !4558, line: 381, type: !909)
!4799 = !DILocation(line: 381, column: 59, scope: !4786)
!4800 = !DILocalVariable(name: "tmp", scope: !4786, file: !4558, line: 383, type: !909)
!4801 = !DILocation(line: 383, column: 18, scope: !4786)
!4802 = !DILocalVariable(name: "re_index", scope: !4786, file: !4558, line: 399, type: !910)
!4803 = !DILocation(line: 399, column: 18, scope: !4786)
!4804 = !DILocation(line: 399, column: 30, scope: !4786)
!4805 = !DILocation(line: 399, column: 34, scope: !4786)
!4806 = !DILocalVariable(name: "re_cache", scope: !4786, file: !4558, line: 399, type: !910)
!4807 = !DILocation(line: 399, column: 78, scope: !4786)
!4808 = !DILocalVariable(name: "re_size_plus8", scope: !4786, file: !4558, line: 399, type: !910)
!4809 = !DILocation(line: 399, column: 101, scope: !4786)
!4810 = !DILocation(line: 399, column: 118, scope: !4786)
!4811 = !DILocation(line: 399, column: 122, scope: !4786)
!4812 = !DILocation(line: 401, column: 60, scope: !4786)
!4813 = !DILocation(line: 401, column: 64, scope: !4786)
!4814 = !DILocation(line: 401, column: 74, scope: !4786)
!4815 = !DILocation(line: 401, column: 83, scope: !4786)
!4816 = !DILocation(line: 401, column: 71, scope: !4786)
!4817 = !DILocation(line: 401, column: 92, scope: !4786)
!4818 = !DILocation(line: 401, column: 16, scope: !4786)
!4819 = !DILocation(line: 68, column: 16, scope: !4790, inlinedAt: !4795)
!4820 = !DILocation(line: 68, column: 19, scope: !4790, inlinedAt: !4795)
!4821 = !DILocation(line: 68, column: 24, scope: !4790, inlinedAt: !4795)
!4822 = !DILocation(line: 68, column: 38, scope: !4790, inlinedAt: !4795)
!4823 = !DILocation(line: 68, column: 41, scope: !4790, inlinedAt: !4795)
!4824 = !DILocation(line: 68, column: 46, scope: !4790, inlinedAt: !4795)
!4825 = !DILocation(line: 68, column: 34, scope: !4790, inlinedAt: !4795)
!4826 = !DILocation(line: 68, column: 57, scope: !4790, inlinedAt: !4795)
!4827 = !DILocation(line: 68, column: 69, scope: !4790, inlinedAt: !4795)
!4828 = !DILocation(line: 68, column: 72, scope: !4790, inlinedAt: !4795)
!4829 = !DILocation(line: 68, column: 79, scope: !4790, inlinedAt: !4795)
!4830 = !DILocation(line: 68, column: 84, scope: !4790, inlinedAt: !4795)
!4831 = !DILocation(line: 68, column: 99, scope: !4790, inlinedAt: !4795)
!4832 = !DILocation(line: 68, column: 102, scope: !4790, inlinedAt: !4795)
!4833 = !DILocation(line: 68, column: 109, scope: !4790, inlinedAt: !4795)
!4834 = !DILocation(line: 68, column: 114, scope: !4790, inlinedAt: !4795)
!4835 = !DILocation(line: 68, column: 94, scope: !4790, inlinedAt: !4795)
!4836 = !DILocation(line: 68, column: 63, scope: !4790, inlinedAt: !4795)
!4837 = !DILocation(line: 401, column: 100, scope: !4786)
!4838 = !DILocation(line: 401, column: 109, scope: !4786)
!4839 = !DILocation(line: 401, column: 96, scope: !4786)
!4840 = !DILocation(line: 401, column: 14, scope: !4786)
!4841 = !DILocation(line: 402, column: 21, scope: !4786)
!4842 = !DILocation(line: 402, column: 31, scope: !4786)
!4843 = !DILocation(line: 402, column: 11, scope: !4786)
!4844 = !DILocation(line: 402, column: 9, scope: !4786)
!4845 = !DILocation(line: 403, column: 18, scope: !4786)
!4846 = !DILocation(line: 403, column: 36, scope: !4786)
!4847 = !DILocation(line: 403, column: 48, scope: !4786)
!4848 = !DILocation(line: 403, column: 45, scope: !4786)
!4849 = !DILocation(line: 403, column: 33, scope: !4786)
!4850 = !DILocation(line: 403, column: 17, scope: !4786)
!4851 = !DILocation(line: 403, column: 55, scope: !4852)
!4852 = !DILexicalBlockFile(scope: !4786, file: !4558, discriminator: 1)
!4853 = !DILocation(line: 403, column: 67, scope: !4852)
!4854 = !DILocation(line: 403, column: 64, scope: !4852)
!4855 = !DILocation(line: 403, column: 17, scope: !4852)
!4856 = !DILocation(line: 403, column: 74, scope: !4857)
!4857 = !DILexicalBlockFile(scope: !4786, file: !4558, discriminator: 2)
!4858 = !DILocation(line: 403, column: 17, scope: !4857)
!4859 = !DILocation(line: 403, column: 17, scope: !4860)
!4860 = !DILexicalBlockFile(scope: !4786, file: !4558, discriminator: 3)
!4861 = !DILocation(line: 403, column: 14, scope: !4860)
!4862 = !DILocation(line: 404, column: 18, scope: !4786)
!4863 = !DILocation(line: 404, column: 6, scope: !4786)
!4864 = !DILocation(line: 404, column: 10, scope: !4786)
!4865 = !DILocation(line: 404, column: 16, scope: !4786)
!4866 = !DILocation(line: 406, column: 12, scope: !4786)
!4867 = !DILocation(line: 406, column: 5, scope: !4786)
!4868 = distinct !DISubprogram(name: "on2avc_read_ms_info", scope: !898, file: !898, line: 88, type: !4869, isLocal: true, isDefinition: true, scopeLine: 89, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!4869 = !DISubroutineType(types: !4870)
!4870 = !{null, !1687, !4729}
!4871 = !DILocalVariable(name: "c", arg: 1, scope: !4868, file: !898, line: 88, type: !1687)
!4872 = !DILocation(line: 88, column: 48, scope: !4868)
!4873 = !DILocalVariable(name: "gb", arg: 2, scope: !4868, file: !898, line: 88, type: !4729)
!4874 = !DILocation(line: 88, column: 66, scope: !4868)
!4875 = !DILocalVariable(name: "w", scope: !4868, file: !898, line: 90, type: !909)
!4876 = !DILocation(line: 90, column: 9, scope: !4868)
!4877 = !DILocalVariable(name: "b", scope: !4868, file: !898, line: 90, type: !909)
!4878 = !DILocation(line: 90, column: 12, scope: !4868)
!4879 = !DILocalVariable(name: "band_off", scope: !4868, file: !898, line: 90, type: !909)
!4880 = !DILocation(line: 90, column: 15, scope: !4868)
!4881 = !DILocation(line: 92, column: 31, scope: !4868)
!4882 = !DILocation(line: 92, column: 21, scope: !4868)
!4883 = !DILocation(line: 92, column: 5, scope: !4868)
!4884 = !DILocation(line: 92, column: 8, scope: !4868)
!4885 = !DILocation(line: 92, column: 19, scope: !4868)
!4886 = !DILocation(line: 93, column: 10, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4868, file: !898, line: 93, column: 9)
!4888 = !DILocation(line: 93, column: 13, scope: !4887)
!4889 = !DILocation(line: 93, column: 9, scope: !4868)
!4890 = !DILocation(line: 94, column: 9, scope: !4887)
!4891 = !DILocation(line: 95, column: 12, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4868, file: !898, line: 95, column: 5)
!4893 = !DILocation(line: 95, column: 10, scope: !4892)
!4894 = !DILocation(line: 95, column: 17, scope: !4895)
!4895 = !DILexicalBlockFile(scope: !4896, file: !898, discriminator: 1)
!4896 = distinct !DILexicalBlock(scope: !4892, file: !898, line: 95, column: 5)
!4897 = !DILocation(line: 95, column: 21, scope: !4895)
!4898 = !DILocation(line: 95, column: 24, scope: !4895)
!4899 = !DILocation(line: 95, column: 19, scope: !4895)
!4900 = !DILocation(line: 95, column: 5, scope: !4895)
!4901 = !DILocation(line: 96, column: 26, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4903, file: !898, line: 96, column: 13)
!4903 = distinct !DILexicalBlock(scope: !4896, file: !898, line: 95, column: 42)
!4904 = !DILocation(line: 96, column: 14, scope: !4902)
!4905 = !DILocation(line: 96, column: 17, scope: !4902)
!4906 = !DILocation(line: 96, column: 13, scope: !4903)
!4907 = !DILocation(line: 97, column: 20, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4902, file: !898, line: 96, column: 30)
!4909 = !DILocation(line: 97, column: 23, scope: !4908)
!4910 = !DILocation(line: 97, column: 33, scope: !4908)
!4911 = !DILocation(line: 97, column: 31, scope: !4908)
!4912 = !DILocation(line: 97, column: 13, scope: !4908)
!4913 = !DILocation(line: 98, column: 20, scope: !4908)
!4914 = !DILocation(line: 98, column: 23, scope: !4908)
!4915 = !DILocation(line: 98, column: 33, scope: !4908)
!4916 = !DILocation(line: 98, column: 31, scope: !4908)
!4917 = !DILocation(line: 98, column: 44, scope: !4908)
!4918 = !DILocation(line: 98, column: 47, scope: !4908)
!4919 = !DILocation(line: 98, column: 42, scope: !4908)
!4920 = !DILocation(line: 99, column: 20, scope: !4908)
!4921 = !DILocation(line: 99, column: 23, scope: !4908)
!4922 = !DILocation(line: 99, column: 33, scope: !4908)
!4923 = !DILocation(line: 100, column: 25, scope: !4908)
!4924 = !DILocation(line: 100, column: 28, scope: !4908)
!4925 = !DILocation(line: 100, column: 22, scope: !4908)
!4926 = !DILocation(line: 101, column: 13, scope: !4908)
!4927 = !DILocation(line: 103, column: 16, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4903, file: !898, line: 103, column: 9)
!4929 = !DILocation(line: 103, column: 14, scope: !4928)
!4930 = !DILocation(line: 103, column: 21, scope: !4931)
!4931 = !DILexicalBlockFile(scope: !4932, file: !898, discriminator: 1)
!4932 = distinct !DILexicalBlock(scope: !4928, file: !898, line: 103, column: 9)
!4933 = !DILocation(line: 103, column: 25, scope: !4931)
!4934 = !DILocation(line: 103, column: 28, scope: !4931)
!4935 = !DILocation(line: 103, column: 23, scope: !4931)
!4936 = !DILocation(line: 103, column: 9, scope: !4931)
!4937 = !DILocation(line: 104, column: 48, scope: !4932)
!4938 = !DILocation(line: 104, column: 38, scope: !4932)
!4939 = !DILocation(line: 104, column: 32, scope: !4932)
!4940 = !DILocation(line: 104, column: 13, scope: !4932)
!4941 = !DILocation(line: 104, column: 16, scope: !4932)
!4942 = !DILocation(line: 104, column: 36, scope: !4932)
!4943 = !DILocation(line: 103, column: 40, scope: !4944)
!4944 = !DILexicalBlockFile(scope: !4932, file: !898, discriminator: 2)
!4945 = !DILocation(line: 103, column: 9, scope: !4944)
!4946 = distinct !{!4946, !4947}
!4947 = !DILocation(line: 103, column: 9, scope: !4903)
!4948 = !DILocation(line: 105, column: 5, scope: !4903)
!4949 = !DILocation(line: 95, column: 38, scope: !4950)
!4950 = !DILexicalBlockFile(scope: !4896, file: !898, discriminator: 2)
!4951 = !DILocation(line: 95, column: 5, scope: !4950)
!4952 = distinct !{!4952, !4953}
!4953 = !DILocation(line: 95, column: 5, scope: !4868)
!4954 = !DILocation(line: 106, column: 1, scope: !4868)
!4955 = distinct !DISubprogram(name: "on2avc_read_channel_data", scope: !898, file: !898, line: 253, type: !4956, isLocal: true, isDefinition: true, scopeLine: 254, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{!909, !1687, !4729, !909}
!4958 = !DILocalVariable(name: "c", arg: 1, scope: !4955, file: !898, line: 253, type: !1687)
!4959 = !DILocation(line: 253, column: 52, scope: !4955)
!4960 = !DILocalVariable(name: "gb", arg: 2, scope: !4955, file: !898, line: 253, type: !4729)
!4961 = !DILocation(line: 253, column: 70, scope: !4955)
!4962 = !DILocalVariable(name: "ch", arg: 3, scope: !4955, file: !898, line: 253, type: !909)
!4963 = !DILocation(line: 253, column: 78, scope: !4955)
!4964 = !DILocalVariable(name: "ret", scope: !4955, file: !898, line: 255, type: !909)
!4965 = !DILocation(line: 255, column: 9, scope: !4955)
!4966 = !DILocalVariable(name: "w", scope: !4955, file: !898, line: 256, type: !909)
!4967 = !DILocation(line: 256, column: 9, scope: !4955)
!4968 = !DILocalVariable(name: "b", scope: !4955, file: !898, line: 256, type: !909)
!4969 = !DILocation(line: 256, column: 12, scope: !4955)
!4970 = !DILocalVariable(name: "band_idx", scope: !4955, file: !898, line: 256, type: !909)
!4971 = !DILocation(line: 256, column: 15, scope: !4955)
!4972 = !DILocalVariable(name: "coeff_ptr", scope: !4955, file: !898, line: 257, type: !931)
!4973 = !DILocation(line: 257, column: 12, scope: !4955)
!4974 = !DILocation(line: 259, column: 41, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4955, file: !898, line: 259, column: 9)
!4976 = !DILocation(line: 259, column: 44, scope: !4975)
!4977 = !DILocation(line: 259, column: 16, scope: !4975)
!4978 = !DILocation(line: 259, column: 14, scope: !4975)
!4979 = !DILocation(line: 259, column: 49, scope: !4975)
!4980 = !DILocation(line: 259, column: 9, scope: !4955)
!4981 = !DILocation(line: 260, column: 16, scope: !4975)
!4982 = !DILocation(line: 260, column: 9, scope: !4975)
!4983 = !DILocation(line: 261, column: 42, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4955, file: !898, line: 261, column: 9)
!4985 = !DILocation(line: 261, column: 45, scope: !4984)
!4986 = !DILocation(line: 261, column: 16, scope: !4984)
!4987 = !DILocation(line: 261, column: 14, scope: !4984)
!4988 = !DILocation(line: 261, column: 50, scope: !4984)
!4989 = !DILocation(line: 261, column: 9, scope: !4955)
!4990 = !DILocation(line: 262, column: 16, scope: !4984)
!4991 = !DILocation(line: 262, column: 9, scope: !4984)
!4992 = !DILocation(line: 264, column: 27, scope: !4955)
!4993 = !DILocation(line: 264, column: 17, scope: !4955)
!4994 = !DILocation(line: 264, column: 20, scope: !4955)
!4995 = !DILocation(line: 264, column: 15, scope: !4955)
!4996 = !DILocation(line: 265, column: 14, scope: !4955)
!4997 = !DILocation(line: 266, column: 12, scope: !4955)
!4998 = !DILocation(line: 266, column: 5, scope: !4955)
!4999 = !DILocation(line: 267, column: 12, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4955, file: !898, line: 267, column: 5)
!5001 = !DILocation(line: 267, column: 10, scope: !5000)
!5002 = !DILocation(line: 267, column: 17, scope: !5003)
!5003 = !DILexicalBlockFile(scope: !5004, file: !898, discriminator: 1)
!5004 = distinct !DILexicalBlock(scope: !5000, file: !898, line: 267, column: 5)
!5005 = !DILocation(line: 267, column: 21, scope: !5003)
!5006 = !DILocation(line: 267, column: 24, scope: !5003)
!5007 = !DILocation(line: 267, column: 19, scope: !5003)
!5008 = !DILocation(line: 267, column: 5, scope: !5003)
!5009 = !DILocation(line: 268, column: 16, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5011, file: !898, line: 268, column: 9)
!5011 = distinct !DILexicalBlock(scope: !5004, file: !898, line: 267, column: 42)
!5012 = !DILocation(line: 268, column: 14, scope: !5010)
!5013 = !DILocation(line: 268, column: 21, scope: !5014)
!5014 = !DILexicalBlockFile(scope: !5015, file: !898, discriminator: 1)
!5015 = distinct !DILexicalBlock(scope: !5010, file: !898, line: 268, column: 9)
!5016 = !DILocation(line: 268, column: 25, scope: !5014)
!5017 = !DILocation(line: 268, column: 28, scope: !5014)
!5018 = !DILocation(line: 268, column: 23, scope: !5014)
!5019 = !DILocation(line: 268, column: 9, scope: !5014)
!5020 = !DILocalVariable(name: "band_size", scope: !5021, file: !898, line: 269, type: !909)
!5021 = distinct !DILexicalBlock(scope: !5015, file: !898, line: 268, column: 44)
!5022 = !DILocation(line: 269, column: 17, scope: !5021)
!5023 = !DILocation(line: 269, column: 43, scope: !5021)
!5024 = !DILocation(line: 269, column: 45, scope: !5021)
!5025 = !DILocation(line: 269, column: 29, scope: !5021)
!5026 = !DILocation(line: 269, column: 32, scope: !5021)
!5027 = !DILocation(line: 269, column: 66, scope: !5021)
!5028 = !DILocation(line: 269, column: 52, scope: !5021)
!5029 = !DILocation(line: 269, column: 55, scope: !5021)
!5030 = !DILocation(line: 269, column: 50, scope: !5021)
!5031 = !DILocalVariable(name: "band_type", scope: !5021, file: !898, line: 270, type: !909)
!5032 = !DILocation(line: 270, column: 17, scope: !5021)
!5033 = !DILocation(line: 270, column: 42, scope: !5021)
!5034 = !DILocation(line: 270, column: 53, scope: !5021)
!5035 = !DILocation(line: 270, column: 51, scope: !5021)
!5036 = !DILocation(line: 270, column: 29, scope: !5021)
!5037 = !DILocation(line: 270, column: 32, scope: !5021)
!5038 = !DILocation(line: 272, column: 18, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5021, file: !898, line: 272, column: 17)
!5040 = !DILocation(line: 272, column: 17, scope: !5021)
!5041 = !DILocation(line: 273, column: 30, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5039, file: !898, line: 272, column: 29)
!5043 = !DILocation(line: 273, column: 27, scope: !5042)
!5044 = !DILocation(line: 274, column: 17, scope: !5042)
!5045 = !DILocation(line: 276, column: 17, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !5021, file: !898, line: 276, column: 17)
!5047 = !DILocation(line: 276, column: 27, scope: !5046)
!5048 = !DILocation(line: 276, column: 17, scope: !5021)
!5049 = !DILocation(line: 277, column: 37, scope: !5046)
!5050 = !DILocation(line: 277, column: 40, scope: !5046)
!5051 = !DILocation(line: 277, column: 44, scope: !5046)
!5052 = !DILocation(line: 277, column: 55, scope: !5046)
!5053 = !DILocation(line: 277, column: 66, scope: !5046)
!5054 = !DILocation(line: 278, column: 52, scope: !5046)
!5055 = !DILocation(line: 278, column: 63, scope: !5046)
!5056 = !DILocation(line: 278, column: 61, scope: !5046)
!5057 = !DILocation(line: 278, column: 37, scope: !5046)
!5058 = !DILocation(line: 278, column: 40, scope: !5046)
!5059 = !DILocation(line: 277, column: 17, scope: !5046)
!5060 = !DILocation(line: 280, column: 37, scope: !5046)
!5061 = !DILocation(line: 280, column: 40, scope: !5046)
!5062 = !DILocation(line: 280, column: 44, scope: !5046)
!5063 = !DILocation(line: 280, column: 55, scope: !5046)
!5064 = !DILocation(line: 280, column: 66, scope: !5046)
!5065 = !DILocation(line: 281, column: 52, scope: !5046)
!5066 = !DILocation(line: 281, column: 63, scope: !5046)
!5067 = !DILocation(line: 281, column: 61, scope: !5046)
!5068 = !DILocation(line: 281, column: 37, scope: !5046)
!5069 = !DILocation(line: 281, column: 40, scope: !5046)
!5070 = !DILocation(line: 280, column: 17, scope: !5046)
!5071 = !DILocation(line: 282, column: 26, scope: !5021)
!5072 = !DILocation(line: 282, column: 23, scope: !5021)
!5073 = !DILocation(line: 283, column: 9, scope: !5021)
!5074 = !DILocation(line: 268, column: 40, scope: !5075)
!5075 = !DILexicalBlockFile(scope: !5015, file: !898, discriminator: 2)
!5076 = !DILocation(line: 268, column: 9, scope: !5075)
!5077 = distinct !{!5077, !5078}
!5078 = !DILocation(line: 268, column: 9, scope: !5011)
!5079 = !DILocation(line: 284, column: 21, scope: !5011)
!5080 = !DILocation(line: 284, column: 24, scope: !5011)
!5081 = !DILocation(line: 284, column: 18, scope: !5011)
!5082 = !DILocation(line: 285, column: 5, scope: !5011)
!5083 = !DILocation(line: 267, column: 38, scope: !5084)
!5084 = !DILexicalBlockFile(scope: !5004, file: !898, discriminator: 2)
!5085 = !DILocation(line: 267, column: 5, scope: !5084)
!5086 = distinct !{!5086, !5087}
!5087 = !DILocation(line: 267, column: 5, scope: !4955)
!5088 = !DILocation(line: 287, column: 5, scope: !4955)
!5089 = !DILocation(line: 288, column: 1, scope: !4955)
!5090 = distinct !DISubprogram(name: "on2avc_apply_ms", scope: !898, file: !898, line: 290, type: !5091, isLocal: true, isDefinition: true, scopeLine: 291, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!5091 = !DISubroutineType(types: !5092)
!5092 = !{!909, !1687}
!5093 = !DILocalVariable(name: "c", arg: 1, scope: !5090, file: !898, line: 290, type: !1687)
!5094 = !DILocation(line: 290, column: 43, scope: !5090)
!5095 = !DILocalVariable(name: "w", scope: !5090, file: !898, line: 292, type: !909)
!5096 = !DILocation(line: 292, column: 9, scope: !5090)
!5097 = !DILocalVariable(name: "b", scope: !5090, file: !898, line: 292, type: !909)
!5098 = !DILocation(line: 292, column: 12, scope: !5090)
!5099 = !DILocalVariable(name: "i", scope: !5090, file: !898, line: 292, type: !909)
!5100 = !DILocation(line: 292, column: 15, scope: !5090)
!5101 = !DILocalVariable(name: "band_off", scope: !5090, file: !898, line: 293, type: !909)
!5102 = !DILocation(line: 293, column: 9, scope: !5090)
!5103 = !DILocalVariable(name: "ch0", scope: !5090, file: !898, line: 294, type: !931)
!5104 = !DILocation(line: 294, column: 12, scope: !5090)
!5105 = !DILocation(line: 294, column: 18, scope: !5090)
!5106 = !DILocation(line: 294, column: 21, scope: !5090)
!5107 = !DILocalVariable(name: "ch1", scope: !5090, file: !898, line: 295, type: !931)
!5108 = !DILocation(line: 295, column: 12, scope: !5090)
!5109 = !DILocation(line: 295, column: 18, scope: !5090)
!5110 = !DILocation(line: 295, column: 21, scope: !5090)
!5111 = !DILocation(line: 297, column: 12, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5090, file: !898, line: 297, column: 5)
!5113 = !DILocation(line: 297, column: 10, scope: !5112)
!5114 = !DILocation(line: 297, column: 17, scope: !5115)
!5115 = !DILexicalBlockFile(scope: !5116, file: !898, discriminator: 1)
!5116 = distinct !DILexicalBlock(scope: !5112, file: !898, line: 297, column: 5)
!5117 = !DILocation(line: 297, column: 21, scope: !5115)
!5118 = !DILocation(line: 297, column: 24, scope: !5115)
!5119 = !DILocation(line: 297, column: 19, scope: !5115)
!5120 = !DILocation(line: 297, column: 5, scope: !5115)
!5121 = !DILocation(line: 298, column: 16, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5123, file: !898, line: 298, column: 9)
!5123 = distinct !DILexicalBlock(scope: !5116, file: !898, line: 297, column: 42)
!5124 = !DILocation(line: 298, column: 14, scope: !5122)
!5125 = !DILocation(line: 298, column: 21, scope: !5126)
!5126 = !DILexicalBlockFile(scope: !5127, file: !898, discriminator: 1)
!5127 = distinct !DILexicalBlock(scope: !5122, file: !898, line: 298, column: 9)
!5128 = !DILocation(line: 298, column: 25, scope: !5126)
!5129 = !DILocation(line: 298, column: 28, scope: !5126)
!5130 = !DILocation(line: 298, column: 23, scope: !5126)
!5131 = !DILocation(line: 298, column: 9, scope: !5126)
!5132 = !DILocation(line: 299, column: 28, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5134, file: !898, line: 299, column: 17)
!5134 = distinct !DILexicalBlock(scope: !5127, file: !898, line: 298, column: 44)
!5135 = !DILocation(line: 299, column: 39, scope: !5133)
!5136 = !DILocation(line: 299, column: 37, scope: !5133)
!5137 = !DILocation(line: 299, column: 17, scope: !5133)
!5138 = !DILocation(line: 299, column: 20, scope: !5133)
!5139 = !DILocation(line: 299, column: 17, scope: !5134)
!5140 = !DILocation(line: 300, column: 40, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5142, file: !898, line: 300, column: 17)
!5142 = distinct !DILexicalBlock(scope: !5133, file: !898, line: 299, column: 43)
!5143 = !DILocation(line: 300, column: 26, scope: !5141)
!5144 = !DILocation(line: 300, column: 29, scope: !5141)
!5145 = !DILocation(line: 300, column: 24, scope: !5141)
!5146 = !DILocation(line: 300, column: 22, scope: !5141)
!5147 = !DILocation(line: 300, column: 44, scope: !5148)
!5148 = !DILexicalBlockFile(scope: !5149, file: !898, discriminator: 1)
!5149 = distinct !DILexicalBlock(scope: !5141, file: !898, line: 300, column: 17)
!5150 = !DILocation(line: 300, column: 62, scope: !5148)
!5151 = !DILocation(line: 300, column: 64, scope: !5148)
!5152 = !DILocation(line: 300, column: 48, scope: !5148)
!5153 = !DILocation(line: 300, column: 51, scope: !5148)
!5154 = !DILocation(line: 300, column: 46, scope: !5148)
!5155 = !DILocation(line: 300, column: 17, scope: !5148)
!5156 = !DILocalVariable(name: "l", scope: !5157, file: !898, line: 301, type: !918)
!5157 = distinct !DILexicalBlock(scope: !5149, file: !898, line: 300, column: 75)
!5158 = !DILocation(line: 301, column: 27, scope: !5157)
!5159 = !DILocation(line: 301, column: 32, scope: !5157)
!5160 = !DILocation(line: 301, column: 31, scope: !5157)
!5161 = !DILocalVariable(name: "r", scope: !5157, file: !898, line: 301, type: !918)
!5162 = !DILocation(line: 301, column: 37, scope: !5157)
!5163 = !DILocation(line: 301, column: 42, scope: !5157)
!5164 = !DILocation(line: 301, column: 41, scope: !5157)
!5165 = !DILocation(line: 302, column: 30, scope: !5157)
!5166 = !DILocation(line: 302, column: 34, scope: !5157)
!5167 = !DILocation(line: 302, column: 32, scope: !5157)
!5168 = !DILocation(line: 302, column: 25, scope: !5157)
!5169 = !DILocation(line: 302, column: 28, scope: !5157)
!5170 = !DILocation(line: 303, column: 30, scope: !5157)
!5171 = !DILocation(line: 303, column: 34, scope: !5157)
!5172 = !DILocation(line: 303, column: 32, scope: !5157)
!5173 = !DILocation(line: 303, column: 25, scope: !5157)
!5174 = !DILocation(line: 303, column: 28, scope: !5157)
!5175 = !DILocation(line: 304, column: 17, scope: !5157)
!5176 = !DILocation(line: 300, column: 71, scope: !5177)
!5177 = !DILexicalBlockFile(scope: !5149, file: !898, discriminator: 2)
!5178 = !DILocation(line: 300, column: 17, scope: !5177)
!5179 = distinct !{!5179, !5180}
!5180 = !DILocation(line: 300, column: 17, scope: !5142)
!5181 = !DILocation(line: 305, column: 13, scope: !5142)
!5182 = !DILocation(line: 306, column: 38, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5133, file: !898, line: 305, column: 20)
!5184 = !DILocation(line: 306, column: 40, scope: !5183)
!5185 = !DILocation(line: 306, column: 24, scope: !5183)
!5186 = !DILocation(line: 306, column: 27, scope: !5183)
!5187 = !DILocation(line: 306, column: 61, scope: !5183)
!5188 = !DILocation(line: 306, column: 47, scope: !5183)
!5189 = !DILocation(line: 306, column: 50, scope: !5183)
!5190 = !DILocation(line: 306, column: 45, scope: !5183)
!5191 = !DILocation(line: 306, column: 21, scope: !5183)
!5192 = !DILocation(line: 307, column: 38, scope: !5183)
!5193 = !DILocation(line: 307, column: 40, scope: !5183)
!5194 = !DILocation(line: 307, column: 24, scope: !5183)
!5195 = !DILocation(line: 307, column: 27, scope: !5183)
!5196 = !DILocation(line: 307, column: 61, scope: !5183)
!5197 = !DILocation(line: 307, column: 47, scope: !5183)
!5198 = !DILocation(line: 307, column: 50, scope: !5183)
!5199 = !DILocation(line: 307, column: 45, scope: !5183)
!5200 = !DILocation(line: 307, column: 21, scope: !5183)
!5201 = !DILocation(line: 309, column: 9, scope: !5134)
!5202 = !DILocation(line: 298, column: 40, scope: !5203)
!5203 = !DILexicalBlockFile(scope: !5127, file: !898, discriminator: 2)
!5204 = !DILocation(line: 298, column: 9, scope: !5203)
!5205 = distinct !{!5205, !5206}
!5206 = !DILocation(line: 298, column: 9, scope: !5123)
!5207 = !DILocation(line: 310, column: 21, scope: !5123)
!5208 = !DILocation(line: 310, column: 24, scope: !5123)
!5209 = !DILocation(line: 310, column: 18, scope: !5123)
!5210 = !DILocation(line: 311, column: 5, scope: !5123)
!5211 = !DILocation(line: 297, column: 38, scope: !5212)
!5212 = !DILexicalBlockFile(scope: !5116, file: !898, discriminator: 2)
!5213 = !DILocation(line: 297, column: 5, scope: !5212)
!5214 = distinct !{!5214, !5215}
!5215 = !DILocation(line: 297, column: 5, scope: !5090)
!5216 = !DILocation(line: 312, column: 5, scope: !5090)
!5217 = distinct !DISubprogram(name: "on2avc_reconstruct_channel", scope: !898, file: !898, line: 733, type: !5218, isLocal: true, isDefinition: true, scopeLine: 735, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!5218 = !DISubroutineType(types: !5219)
!5219 = !{!909, !1687, !909, !1055, !909}
!5220 = !DILocalVariable(name: "c", arg: 1, scope: !5217, file: !898, line: 733, type: !1687)
!5221 = !DILocation(line: 733, column: 54, scope: !5217)
!5222 = !DILocalVariable(name: "channel", arg: 2, scope: !5217, file: !898, line: 733, type: !909)
!5223 = !DILocation(line: 733, column: 61, scope: !5217)
!5224 = !DILocalVariable(name: "dst", arg: 3, scope: !5217, file: !898, line: 734, type: !1055)
!5225 = !DILocation(line: 734, column: 48, scope: !5217)
!5226 = !DILocalVariable(name: "offset", arg: 4, scope: !5217, file: !898, line: 734, type: !909)
!5227 = !DILocation(line: 734, column: 57, scope: !5217)
!5228 = !DILocalVariable(name: "i", scope: !5217, file: !898, line: 736, type: !909)
!5229 = !DILocation(line: 736, column: 9, scope: !5217)
!5230 = !DILocalVariable(name: "out", scope: !5217, file: !898, line: 737, type: !931)
!5231 = !DILocation(line: 737, column: 12, scope: !5217)
!5232 = !DILocation(line: 737, column: 45, scope: !5217)
!5233 = !DILocation(line: 737, column: 26, scope: !5217)
!5234 = !DILocation(line: 737, column: 31, scope: !5217)
!5235 = !DILocation(line: 737, column: 18, scope: !5217)
!5236 = !DILocation(line: 737, column: 56, scope: !5217)
!5237 = !DILocation(line: 737, column: 54, scope: !5217)
!5238 = !DILocalVariable(name: "in", scope: !5217, file: !898, line: 738, type: !931)
!5239 = !DILocation(line: 738, column: 12, scope: !5217)
!5240 = !DILocation(line: 738, column: 27, scope: !5217)
!5241 = !DILocation(line: 738, column: 17, scope: !5217)
!5242 = !DILocation(line: 738, column: 20, scope: !5217)
!5243 = !DILocalVariable(name: "saved", scope: !5217, file: !898, line: 739, type: !931)
!5244 = !DILocation(line: 739, column: 12, scope: !5217)
!5245 = !DILocation(line: 739, column: 29, scope: !5217)
!5246 = !DILocation(line: 739, column: 20, scope: !5217)
!5247 = !DILocation(line: 739, column: 23, scope: !5217)
!5248 = !DILocalVariable(name: "buf", scope: !5217, file: !898, line: 740, type: !931)
!5249 = !DILocation(line: 740, column: 12, scope: !5217)
!5250 = !DILocation(line: 740, column: 18, scope: !5217)
!5251 = !DILocation(line: 740, column: 21, scope: !5217)
!5252 = !DILocalVariable(name: "temp", scope: !5217, file: !898, line: 741, type: !931)
!5253 = !DILocation(line: 741, column: 12, scope: !5217)
!5254 = !DILocation(line: 741, column: 19, scope: !5217)
!5255 = !DILocation(line: 741, column: 22, scope: !5217)
!5256 = !DILocation(line: 743, column: 13, scope: !5217)
!5257 = !DILocation(line: 743, column: 16, scope: !5217)
!5258 = !DILocation(line: 743, column: 5, scope: !5217)
!5259 = !DILocation(line: 747, column: 9, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5217, file: !898, line: 743, column: 29)
!5261 = !DILocation(line: 747, column: 12, scope: !5260)
!5262 = !DILocation(line: 747, column: 17, scope: !5260)
!5263 = !DILocation(line: 747, column: 29, scope: !5260)
!5264 = !DILocation(line: 747, column: 32, scope: !5260)
!5265 = !DILocation(line: 747, column: 38, scope: !5260)
!5266 = !DILocation(line: 747, column: 43, scope: !5260)
!5267 = !DILocation(line: 748, column: 9, scope: !5260)
!5268 = !DILocation(line: 750, column: 16, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5260, file: !898, line: 750, column: 9)
!5270 = !DILocation(line: 750, column: 14, scope: !5269)
!5271 = !DILocation(line: 750, column: 21, scope: !5272)
!5272 = !DILexicalBlockFile(scope: !5273, file: !898, discriminator: 1)
!5273 = distinct !DILexicalBlock(scope: !5269, file: !898, line: 750, column: 9)
!5274 = !DILocation(line: 750, column: 23, scope: !5272)
!5275 = !DILocation(line: 750, column: 9, scope: !5272)
!5276 = !DILocation(line: 751, column: 13, scope: !5273)
!5277 = !DILocation(line: 751, column: 16, scope: !5273)
!5278 = !DILocation(line: 751, column: 27, scope: !5273)
!5279 = !DILocation(line: 751, column: 39, scope: !5273)
!5280 = !DILocation(line: 751, column: 42, scope: !5273)
!5281 = !DILocation(line: 751, column: 54, scope: !5273)
!5282 = !DILocation(line: 751, column: 60, scope: !5273)
!5283 = !DILocation(line: 751, column: 58, scope: !5273)
!5284 = !DILocation(line: 751, column: 63, scope: !5273)
!5285 = !DILocation(line: 751, column: 68, scope: !5273)
!5286 = !DILocation(line: 751, column: 66, scope: !5273)
!5287 = !DILocation(line: 750, column: 33, scope: !5288)
!5288 = !DILexicalBlockFile(scope: !5273, file: !898, discriminator: 2)
!5289 = !DILocation(line: 750, column: 9, scope: !5288)
!5290 = distinct !{!5290, !5291}
!5291 = !DILocation(line: 750, column: 9, scope: !5260)
!5292 = !DILocation(line: 752, column: 9, scope: !5260)
!5293 = !DILocation(line: 755, column: 10, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5217, file: !898, line: 755, column: 9)
!5295 = !DILocation(line: 755, column: 13, scope: !5294)
!5296 = !DILocation(line: 755, column: 30, scope: !5294)
!5297 = !DILocation(line: 755, column: 50, scope: !5294)
!5298 = !DILocation(line: 756, column: 10, scope: !5294)
!5299 = !DILocation(line: 756, column: 13, scope: !5294)
!5300 = !DILocation(line: 756, column: 30, scope: !5294)
!5301 = !DILocation(line: 756, column: 56, scope: !5294)
!5302 = !DILocation(line: 757, column: 10, scope: !5294)
!5303 = !DILocation(line: 757, column: 13, scope: !5294)
!5304 = !DILocation(line: 757, column: 25, scope: !5294)
!5305 = !DILocation(line: 757, column: 45, scope: !5294)
!5306 = !DILocation(line: 758, column: 10, scope: !5294)
!5307 = !DILocation(line: 758, column: 13, scope: !5294)
!5308 = !DILocation(line: 758, column: 25, scope: !5294)
!5309 = !DILocation(line: 755, column: 9, scope: !5310)
!5310 = !DILexicalBlockFile(scope: !5217, file: !898, discriminator: 1)
!5311 = !DILocation(line: 759, column: 9, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5294, file: !898, line: 758, column: 53)
!5313 = !DILocation(line: 759, column: 12, scope: !5312)
!5314 = !DILocation(line: 759, column: 18, scope: !5312)
!5315 = !DILocation(line: 759, column: 37, scope: !5312)
!5316 = !DILocation(line: 759, column: 42, scope: !5312)
!5317 = !DILocation(line: 759, column: 49, scope: !5312)
!5318 = !DILocation(line: 759, column: 54, scope: !5312)
!5319 = !DILocation(line: 759, column: 57, scope: !5312)
!5320 = !DILocation(line: 760, column: 5, scope: !5312)
!5321 = !DILocalVariable(name: "wout", scope: !5322, file: !898, line: 761, type: !931)
!5322 = distinct !DILexicalBlock(scope: !5294, file: !898, line: 760, column: 12)
!5323 = !DILocation(line: 761, column: 16, scope: !5322)
!5324 = !DILocation(line: 761, column: 23, scope: !5322)
!5325 = !DILocation(line: 761, column: 27, scope: !5322)
!5326 = !DILocation(line: 762, column: 16, scope: !5322)
!5327 = !DILocation(line: 762, column: 9, scope: !5322)
!5328 = !DILocation(line: 762, column: 21, scope: !5322)
!5329 = !DILocation(line: 764, column: 13, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5322, file: !898, line: 764, column: 13)
!5331 = !DILocation(line: 764, column: 16, scope: !5330)
!5332 = !DILocation(line: 764, column: 28, scope: !5330)
!5333 = !DILocation(line: 764, column: 13, scope: !5322)
!5334 = !DILocation(line: 765, column: 13, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5330, file: !898, line: 764, column: 51)
!5336 = !DILocation(line: 765, column: 16, scope: !5335)
!5337 = !DILocation(line: 765, column: 22, scope: !5335)
!5338 = !DILocation(line: 765, column: 41, scope: !5335)
!5339 = !DILocation(line: 765, column: 46, scope: !5335)
!5340 = !DILocation(line: 765, column: 55, scope: !5335)
!5341 = !DILocation(line: 765, column: 61, scope: !5335)
!5342 = !DILocation(line: 765, column: 68, scope: !5335)
!5343 = !DILocation(line: 765, column: 72, scope: !5335)
!5344 = !DILocation(line: 765, column: 81, scope: !5335)
!5345 = !DILocation(line: 765, column: 84, scope: !5335)
!5346 = !DILocation(line: 766, column: 13, scope: !5335)
!5347 = !DILocation(line: 766, column: 16, scope: !5335)
!5348 = !DILocation(line: 766, column: 22, scope: !5335)
!5349 = !DILocation(line: 766, column: 41, scope: !5335)
!5350 = !DILocation(line: 766, column: 46, scope: !5335)
!5351 = !DILocation(line: 766, column: 55, scope: !5335)
!5352 = !DILocation(line: 766, column: 59, scope: !5335)
!5353 = !DILocation(line: 766, column: 67, scope: !5335)
!5354 = !DILocation(line: 766, column: 73, scope: !5335)
!5355 = !DILocation(line: 766, column: 77, scope: !5335)
!5356 = !DILocation(line: 766, column: 86, scope: !5335)
!5357 = !DILocation(line: 766, column: 89, scope: !5335)
!5358 = !DILocation(line: 767, column: 13, scope: !5335)
!5359 = !DILocation(line: 767, column: 16, scope: !5335)
!5360 = !DILocation(line: 767, column: 22, scope: !5335)
!5361 = !DILocation(line: 767, column: 41, scope: !5335)
!5362 = !DILocation(line: 767, column: 46, scope: !5335)
!5363 = !DILocation(line: 767, column: 55, scope: !5335)
!5364 = !DILocation(line: 767, column: 59, scope: !5335)
!5365 = !DILocation(line: 767, column: 67, scope: !5335)
!5366 = !DILocation(line: 767, column: 73, scope: !5335)
!5367 = !DILocation(line: 767, column: 77, scope: !5335)
!5368 = !DILocation(line: 767, column: 86, scope: !5335)
!5369 = !DILocation(line: 767, column: 89, scope: !5335)
!5370 = !DILocation(line: 768, column: 13, scope: !5335)
!5371 = !DILocation(line: 768, column: 16, scope: !5335)
!5372 = !DILocation(line: 768, column: 22, scope: !5335)
!5373 = !DILocation(line: 768, column: 41, scope: !5335)
!5374 = !DILocation(line: 768, column: 46, scope: !5335)
!5375 = !DILocation(line: 768, column: 55, scope: !5335)
!5376 = !DILocation(line: 768, column: 59, scope: !5335)
!5377 = !DILocation(line: 768, column: 67, scope: !5335)
!5378 = !DILocation(line: 768, column: 73, scope: !5335)
!5379 = !DILocation(line: 768, column: 77, scope: !5335)
!5380 = !DILocation(line: 768, column: 86, scope: !5335)
!5381 = !DILocation(line: 768, column: 89, scope: !5335)
!5382 = !DILocation(line: 769, column: 13, scope: !5335)
!5383 = !DILocation(line: 769, column: 16, scope: !5335)
!5384 = !DILocation(line: 769, column: 22, scope: !5335)
!5385 = !DILocation(line: 769, column: 41, scope: !5335)
!5386 = !DILocation(line: 769, column: 47, scope: !5335)
!5387 = !DILocation(line: 769, column: 51, scope: !5335)
!5388 = !DILocation(line: 769, column: 59, scope: !5335)
!5389 = !DILocation(line: 769, column: 65, scope: !5335)
!5390 = !DILocation(line: 769, column: 69, scope: !5335)
!5391 = !DILocation(line: 769, column: 78, scope: !5335)
!5392 = !DILocation(line: 769, column: 81, scope: !5335)
!5393 = !DILocation(line: 770, column: 20, scope: !5335)
!5394 = !DILocation(line: 770, column: 25, scope: !5335)
!5395 = !DILocation(line: 770, column: 13, scope: !5335)
!5396 = !DILocation(line: 770, column: 34, scope: !5335)
!5397 = !DILocation(line: 771, column: 9, scope: !5335)
!5398 = !DILocation(line: 772, column: 13, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5330, file: !898, line: 771, column: 16)
!5400 = !DILocation(line: 772, column: 16, scope: !5399)
!5401 = !DILocation(line: 772, column: 22, scope: !5399)
!5402 = !DILocation(line: 772, column: 41, scope: !5399)
!5403 = !DILocation(line: 772, column: 47, scope: !5399)
!5404 = !DILocation(line: 772, column: 53, scope: !5399)
!5405 = !DILocation(line: 772, column: 60, scope: !5399)
!5406 = !DILocation(line: 772, column: 65, scope: !5399)
!5407 = !DILocation(line: 772, column: 68, scope: !5399)
!5408 = !DILocation(line: 773, column: 20, scope: !5399)
!5409 = !DILocation(line: 773, column: 25, scope: !5399)
!5410 = !DILocation(line: 773, column: 13, scope: !5399)
!5411 = !DILocation(line: 773, column: 32, scope: !5399)
!5412 = !DILocation(line: 773, column: 36, scope: !5399)
!5413 = !DILocation(line: 778, column: 13, scope: !5217)
!5414 = !DILocation(line: 778, column: 16, scope: !5217)
!5415 = !DILocation(line: 778, column: 5, scope: !5217)
!5416 = !DILocation(line: 780, column: 16, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5217, file: !898, line: 778, column: 29)
!5418 = !DILocation(line: 780, column: 9, scope: !5417)
!5419 = !DILocation(line: 780, column: 23, scope: !5417)
!5420 = !DILocation(line: 780, column: 28, scope: !5417)
!5421 = !DILocation(line: 781, column: 9, scope: !5417)
!5422 = !DILocation(line: 781, column: 12, scope: !5417)
!5423 = !DILocation(line: 781, column: 18, scope: !5417)
!5424 = !DILocation(line: 781, column: 37, scope: !5417)
!5425 = !DILocation(line: 781, column: 43, scope: !5417)
!5426 = !DILocation(line: 781, column: 49, scope: !5417)
!5427 = !DILocation(line: 781, column: 53, scope: !5417)
!5428 = !DILocation(line: 781, column: 61, scope: !5417)
!5429 = !DILocation(line: 781, column: 67, scope: !5417)
!5430 = !DILocation(line: 781, column: 71, scope: !5417)
!5431 = !DILocation(line: 781, column: 80, scope: !5417)
!5432 = !DILocation(line: 781, column: 83, scope: !5417)
!5433 = !DILocation(line: 782, column: 9, scope: !5417)
!5434 = !DILocation(line: 782, column: 12, scope: !5417)
!5435 = !DILocation(line: 782, column: 18, scope: !5417)
!5436 = !DILocation(line: 782, column: 37, scope: !5417)
!5437 = !DILocation(line: 782, column: 43, scope: !5417)
!5438 = !DILocation(line: 782, column: 50, scope: !5417)
!5439 = !DILocation(line: 782, column: 54, scope: !5417)
!5440 = !DILocation(line: 782, column: 62, scope: !5417)
!5441 = !DILocation(line: 782, column: 68, scope: !5417)
!5442 = !DILocation(line: 782, column: 72, scope: !5417)
!5443 = !DILocation(line: 782, column: 81, scope: !5417)
!5444 = !DILocation(line: 782, column: 84, scope: !5417)
!5445 = !DILocation(line: 783, column: 9, scope: !5417)
!5446 = !DILocation(line: 783, column: 12, scope: !5417)
!5447 = !DILocation(line: 783, column: 18, scope: !5417)
!5448 = !DILocation(line: 783, column: 37, scope: !5417)
!5449 = !DILocation(line: 783, column: 43, scope: !5417)
!5450 = !DILocation(line: 783, column: 50, scope: !5417)
!5451 = !DILocation(line: 783, column: 54, scope: !5417)
!5452 = !DILocation(line: 783, column: 62, scope: !5417)
!5453 = !DILocation(line: 783, column: 68, scope: !5417)
!5454 = !DILocation(line: 783, column: 72, scope: !5417)
!5455 = !DILocation(line: 783, column: 81, scope: !5417)
!5456 = !DILocation(line: 783, column: 84, scope: !5417)
!5457 = !DILocation(line: 784, column: 16, scope: !5417)
!5458 = !DILocation(line: 784, column: 22, scope: !5417)
!5459 = !DILocation(line: 784, column: 9, scope: !5417)
!5460 = !DILocation(line: 784, column: 29, scope: !5417)
!5461 = !DILocation(line: 784, column: 33, scope: !5417)
!5462 = !DILocation(line: 784, column: 41, scope: !5417)
!5463 = !DILocation(line: 785, column: 9, scope: !5417)
!5464 = !DILocation(line: 787, column: 16, scope: !5417)
!5465 = !DILocation(line: 787, column: 9, scope: !5417)
!5466 = !DILocation(line: 787, column: 23, scope: !5417)
!5467 = !DILocation(line: 787, column: 27, scope: !5417)
!5468 = !DILocation(line: 788, column: 16, scope: !5417)
!5469 = !DILocation(line: 788, column: 22, scope: !5417)
!5470 = !DILocation(line: 788, column: 9, scope: !5417)
!5471 = !DILocation(line: 788, column: 29, scope: !5417)
!5472 = !DILocation(line: 788, column: 33, scope: !5417)
!5473 = !DILocation(line: 788, column: 41, scope: !5417)
!5474 = !DILocation(line: 789, column: 9, scope: !5417)
!5475 = !DILocation(line: 792, column: 16, scope: !5417)
!5476 = !DILocation(line: 792, column: 9, scope: !5417)
!5477 = !DILocation(line: 792, column: 23, scope: !5417)
!5478 = !DILocation(line: 792, column: 27, scope: !5417)
!5479 = !DILocation(line: 793, column: 9, scope: !5417)
!5480 = !DILocation(line: 795, column: 5, scope: !5217)
!5481 = distinct !DISubprogram(name: "on2avc_reconstruct_channel_ext", scope: !898, file: !898, line: 688, type: !5482, isLocal: true, isDefinition: true, scopeLine: 689, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!5482 = !DISubroutineType(types: !5483)
!5483 = !{!909, !1687, !1055, !909}
!5484 = !DILocalVariable(name: "c", arg: 1, scope: !5481, file: !898, line: 688, type: !1687)
!5485 = !DILocation(line: 688, column: 58, scope: !5481)
!5486 = !DILocalVariable(name: "dst", arg: 2, scope: !5481, file: !898, line: 688, type: !1055)
!5487 = !DILocation(line: 688, column: 70, scope: !5481)
!5488 = !DILocalVariable(name: "offset", arg: 3, scope: !5481, file: !898, line: 688, type: !909)
!5489 = !DILocation(line: 688, column: 79, scope: !5481)
!5490 = !DILocalVariable(name: "ch", scope: !5481, file: !898, line: 690, type: !909)
!5491 = !DILocation(line: 690, column: 9, scope: !5481)
!5492 = !DILocalVariable(name: "i", scope: !5481, file: !898, line: 690, type: !909)
!5493 = !DILocation(line: 690, column: 13, scope: !5481)
!5494 = !DILocation(line: 692, column: 13, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5481, file: !898, line: 692, column: 5)
!5496 = !DILocation(line: 692, column: 10, scope: !5495)
!5497 = !DILocation(line: 692, column: 18, scope: !5498)
!5498 = !DILexicalBlockFile(scope: !5499, file: !898, discriminator: 1)
!5499 = distinct !DILexicalBlock(scope: !5495, file: !898, line: 692, column: 5)
!5500 = !DILocation(line: 692, column: 23, scope: !5498)
!5501 = !DILocation(line: 692, column: 26, scope: !5498)
!5502 = !DILocation(line: 692, column: 33, scope: !5498)
!5503 = !DILocation(line: 692, column: 21, scope: !5498)
!5504 = !DILocation(line: 692, column: 5, scope: !5498)
!5505 = !DILocalVariable(name: "out", scope: !5506, file: !898, line: 693, type: !931)
!5506 = distinct !DILexicalBlock(scope: !5499, file: !898, line: 692, column: 49)
!5507 = !DILocation(line: 693, column: 16, scope: !5506)
!5508 = !DILocation(line: 693, column: 49, scope: !5506)
!5509 = !DILocation(line: 693, column: 30, scope: !5506)
!5510 = !DILocation(line: 693, column: 35, scope: !5506)
!5511 = !DILocation(line: 693, column: 22, scope: !5506)
!5512 = !DILocation(line: 693, column: 55, scope: !5506)
!5513 = !DILocation(line: 693, column: 53, scope: !5506)
!5514 = !DILocalVariable(name: "in", scope: !5506, file: !898, line: 694, type: !931)
!5515 = !DILocation(line: 694, column: 16, scope: !5506)
!5516 = !DILocation(line: 694, column: 31, scope: !5506)
!5517 = !DILocation(line: 694, column: 21, scope: !5506)
!5518 = !DILocation(line: 694, column: 24, scope: !5506)
!5519 = !DILocalVariable(name: "saved", scope: !5506, file: !898, line: 695, type: !931)
!5520 = !DILocation(line: 695, column: 16, scope: !5506)
!5521 = !DILocation(line: 695, column: 33, scope: !5506)
!5522 = !DILocation(line: 695, column: 24, scope: !5506)
!5523 = !DILocation(line: 695, column: 27, scope: !5506)
!5524 = !DILocalVariable(name: "buf", scope: !5506, file: !898, line: 696, type: !931)
!5525 = !DILocation(line: 696, column: 16, scope: !5506)
!5526 = !DILocation(line: 696, column: 22, scope: !5506)
!5527 = !DILocation(line: 696, column: 25, scope: !5506)
!5528 = !DILocalVariable(name: "wout", scope: !5506, file: !898, line: 697, type: !931)
!5529 = !DILocation(line: 697, column: 16, scope: !5506)
!5530 = !DILocation(line: 697, column: 23, scope: !5506)
!5531 = !DILocation(line: 697, column: 27, scope: !5506)
!5532 = !DILocation(line: 699, column: 17, scope: !5506)
!5533 = !DILocation(line: 699, column: 20, scope: !5506)
!5534 = !DILocation(line: 699, column: 9, scope: !5506)
!5535 = !DILocation(line: 701, column: 13, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5506, file: !898, line: 699, column: 33)
!5537 = !DILocation(line: 701, column: 16, scope: !5536)
!5538 = !DILocation(line: 701, column: 21, scope: !5536)
!5539 = !DILocation(line: 701, column: 33, scope: !5536)
!5540 = !DILocation(line: 701, column: 36, scope: !5536)
!5541 = !DILocation(line: 701, column: 42, scope: !5536)
!5542 = !DILocation(line: 701, column: 47, scope: !5536)
!5543 = !DILocation(line: 702, column: 13, scope: !5536)
!5544 = !DILocation(line: 704, column: 13, scope: !5536)
!5545 = !DILocation(line: 704, column: 16, scope: !5536)
!5546 = !DILocation(line: 704, column: 20, scope: !5536)
!5547 = !DILocation(line: 704, column: 23, scope: !5536)
!5548 = !DILocation(line: 704, column: 28, scope: !5536)
!5549 = !DILocation(line: 705, column: 13, scope: !5536)
!5550 = !DILocation(line: 707, column: 13, scope: !5536)
!5551 = !DILocation(line: 707, column: 16, scope: !5536)
!5552 = !DILocation(line: 707, column: 20, scope: !5536)
!5553 = !DILocation(line: 707, column: 23, scope: !5536)
!5554 = !DILocation(line: 707, column: 28, scope: !5536)
!5555 = !DILocation(line: 708, column: 13, scope: !5536)
!5556 = !DILocation(line: 708, column: 16, scope: !5536)
!5557 = !DILocation(line: 708, column: 21, scope: !5536)
!5558 = !DILocation(line: 708, column: 33, scope: !5536)
!5559 = !DILocation(line: 708, column: 36, scope: !5536)
!5560 = !DILocation(line: 708, column: 47, scope: !5536)
!5561 = !DILocation(line: 708, column: 51, scope: !5536)
!5562 = !DILocation(line: 708, column: 58, scope: !5536)
!5563 = !DILocation(line: 708, column: 61, scope: !5536)
!5564 = !DILocation(line: 709, column: 20, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5536, file: !898, line: 709, column: 13)
!5566 = !DILocation(line: 709, column: 18, scope: !5565)
!5567 = !DILocation(line: 709, column: 25, scope: !5568)
!5568 = !DILexicalBlockFile(scope: !5569, file: !898, discriminator: 1)
!5569 = distinct !DILexicalBlock(scope: !5565, file: !898, line: 709, column: 13)
!5570 = !DILocation(line: 709, column: 27, scope: !5568)
!5571 = !DILocation(line: 709, column: 13, scope: !5568)
!5572 = !DILocation(line: 710, column: 17, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5569, file: !898, line: 709, column: 39)
!5574 = distinct !{!5574, !5572}
!5575 = !DILocalVariable(name: "SWAP_tmp", scope: !5576, file: !898, line: 710, type: !918)
!5576 = distinct !DILexicalBlock(scope: !5573, file: !898, line: 710, column: 19)
!5577 = !DILocation(line: 710, column: 26, scope: !5576)
!5578 = !DILocation(line: 710, column: 47, scope: !5579)
!5579 = !DILexicalBlockFile(scope: !5576, file: !898, discriminator: 1)
!5580 = !DILocation(line: 710, column: 45, scope: !5579)
!5581 = !DILocation(line: 710, column: 36, scope: !5579)
!5582 = !DILocation(line: 710, column: 26, scope: !5579)
!5583 = !DILocation(line: 710, column: 70, scope: !5579)
!5584 = !DILocation(line: 710, column: 72, scope: !5579)
!5585 = !DILocation(line: 710, column: 66, scope: !5579)
!5586 = !DILocation(line: 710, column: 62, scope: !5579)
!5587 = !DILocation(line: 710, column: 60, scope: !5579)
!5588 = !DILocation(line: 710, column: 51, scope: !5579)
!5589 = !DILocation(line: 710, column: 64, scope: !5579)
!5590 = !DILocation(line: 710, column: 94, scope: !5579)
!5591 = !DILocation(line: 710, column: 84, scope: !5579)
!5592 = !DILocation(line: 710, column: 86, scope: !5579)
!5593 = !DILocation(line: 710, column: 80, scope: !5579)
!5594 = !DILocation(line: 710, column: 92, scope: !5579)
!5595 = !DILocation(line: 710, column: 103, scope: !5579)
!5596 = !DILocation(line: 711, column: 13, scope: !5573)
!5597 = !DILocation(line: 709, column: 35, scope: !5598)
!5598 = !DILexicalBlockFile(scope: !5569, file: !898, discriminator: 2)
!5599 = !DILocation(line: 709, column: 13, scope: !5598)
!5600 = distinct !{!5600, !5601}
!5601 = !DILocation(line: 709, column: 13, scope: !5536)
!5602 = !DILocation(line: 712, column: 13, scope: !5536)
!5603 = !DILocation(line: 714, column: 13, scope: !5536)
!5604 = !DILocation(line: 714, column: 16, scope: !5536)
!5605 = !DILocation(line: 714, column: 21, scope: !5536)
!5606 = !DILocation(line: 714, column: 33, scope: !5536)
!5607 = !DILocation(line: 714, column: 36, scope: !5536)
!5608 = !DILocation(line: 714, column: 47, scope: !5536)
!5609 = !DILocation(line: 714, column: 52, scope: !5536)
!5610 = !DILocation(line: 715, column: 20, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5536, file: !898, line: 715, column: 13)
!5612 = !DILocation(line: 715, column: 18, scope: !5611)
!5613 = !DILocation(line: 715, column: 25, scope: !5614)
!5614 = !DILexicalBlockFile(scope: !5615, file: !898, discriminator: 1)
!5615 = distinct !DILexicalBlock(scope: !5611, file: !898, line: 715, column: 13)
!5616 = !DILocation(line: 715, column: 27, scope: !5614)
!5617 = !DILocation(line: 715, column: 13, scope: !5614)
!5618 = !DILocation(line: 716, column: 17, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5615, file: !898, line: 715, column: 39)
!5620 = distinct !{!5620, !5618}
!5621 = !DILocalVariable(name: "SWAP_tmp", scope: !5622, file: !898, line: 716, type: !918)
!5622 = distinct !DILexicalBlock(scope: !5619, file: !898, line: 716, column: 19)
!5623 = !DILocation(line: 716, column: 26, scope: !5622)
!5624 = !DILocation(line: 716, column: 46, scope: !5625)
!5625 = !DILexicalBlockFile(scope: !5622, file: !898, discriminator: 1)
!5626 = !DILocation(line: 716, column: 44, scope: !5625)
!5627 = !DILocation(line: 716, column: 36, scope: !5625)
!5628 = !DILocation(line: 716, column: 26, scope: !5625)
!5629 = !DILocation(line: 716, column: 68, scope: !5625)
!5630 = !DILocation(line: 716, column: 64, scope: !5625)
!5631 = !DILocation(line: 716, column: 60, scope: !5625)
!5632 = !DILocation(line: 716, column: 58, scope: !5625)
!5633 = !DILocation(line: 716, column: 50, scope: !5625)
!5634 = !DILocation(line: 716, column: 62, scope: !5625)
!5635 = !DILocation(line: 716, column: 80, scope: !5625)
!5636 = !DILocation(line: 716, column: 76, scope: !5625)
!5637 = !DILocation(line: 716, column: 72, scope: !5625)
!5638 = !DILocation(line: 716, column: 78, scope: !5625)
!5639 = !DILocation(line: 716, column: 89, scope: !5625)
!5640 = !DILocation(line: 717, column: 13, scope: !5619)
!5641 = !DILocation(line: 715, column: 35, scope: !5642)
!5642 = !DILexicalBlockFile(scope: !5615, file: !898, discriminator: 2)
!5643 = !DILocation(line: 715, column: 13, scope: !5642)
!5644 = distinct !{!5644, !5645}
!5645 = !DILocation(line: 715, column: 13, scope: !5536)
!5646 = !DILocation(line: 718, column: 13, scope: !5536)
!5647 = !DILocation(line: 718, column: 16, scope: !5536)
!5648 = !DILocation(line: 718, column: 20, scope: !5536)
!5649 = !DILocation(line: 718, column: 23, scope: !5536)
!5650 = !DILocation(line: 718, column: 27, scope: !5536)
!5651 = !DILocation(line: 718, column: 34, scope: !5536)
!5652 = !DILocation(line: 718, column: 37, scope: !5536)
!5653 = !DILocation(line: 719, column: 13, scope: !5536)
!5654 = !DILocation(line: 722, column: 16, scope: !5506)
!5655 = !DILocation(line: 722, column: 9, scope: !5506)
!5656 = !DILocation(line: 722, column: 21, scope: !5506)
!5657 = !DILocation(line: 723, column: 9, scope: !5506)
!5658 = !DILocation(line: 723, column: 12, scope: !5506)
!5659 = !DILocation(line: 723, column: 18, scope: !5506)
!5660 = !DILocation(line: 723, column: 37, scope: !5506)
!5661 = !DILocation(line: 723, column: 43, scope: !5506)
!5662 = !DILocation(line: 723, column: 49, scope: !5506)
!5663 = !DILocation(line: 723, column: 56, scope: !5506)
!5664 = !DILocation(line: 723, column: 61, scope: !5506)
!5665 = !DILocation(line: 723, column: 64, scope: !5506)
!5666 = !DILocation(line: 724, column: 16, scope: !5506)
!5667 = !DILocation(line: 724, column: 21, scope: !5506)
!5668 = !DILocation(line: 724, column: 9, scope: !5506)
!5669 = !DILocation(line: 724, column: 28, scope: !5506)
!5670 = !DILocation(line: 724, column: 32, scope: !5506)
!5671 = !DILocation(line: 725, column: 16, scope: !5506)
!5672 = !DILocation(line: 725, column: 9, scope: !5506)
!5673 = !DILocation(line: 725, column: 23, scope: !5506)
!5674 = !DILocation(line: 725, column: 27, scope: !5506)
!5675 = !DILocation(line: 726, column: 16, scope: !5506)
!5676 = !DILocation(line: 726, column: 22, scope: !5506)
!5677 = !DILocation(line: 726, column: 9, scope: !5506)
!5678 = !DILocation(line: 726, column: 29, scope: !5506)
!5679 = !DILocation(line: 726, column: 33, scope: !5506)
!5680 = !DILocation(line: 726, column: 41, scope: !5506)
!5681 = !DILocation(line: 727, column: 5, scope: !5506)
!5682 = !DILocation(line: 692, column: 45, scope: !5683)
!5683 = !DILexicalBlockFile(scope: !5499, file: !898, discriminator: 2)
!5684 = !DILocation(line: 692, column: 5, scope: !5683)
!5685 = distinct !{!5685, !5686}
!5686 = !DILocation(line: 692, column: 5, scope: !5481)
!5687 = !DILocation(line: 729, column: 5, scope: !5481)
!5688 = distinct !DISubprogram(name: "init_get_bits", scope: !4558, file: !4558, line: 615, type: !4727, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!5689 = !DILocalVariable(name: "s", arg: 1, scope: !5688, file: !4558, line: 615, type: !4729)
!5690 = !DILocation(line: 615, column: 48, scope: !5688)
!5691 = !DILocalVariable(name: "buffer", arg: 2, scope: !5688, file: !4558, line: 615, type: !1475)
!5692 = !DILocation(line: 615, column: 66, scope: !5688)
!5693 = !DILocalVariable(name: "bit_size", arg: 3, scope: !5688, file: !4558, line: 616, type: !909)
!5694 = !DILocation(line: 616, column: 37, scope: !5688)
!5695 = !DILocalVariable(name: "buffer_size", scope: !5688, file: !4558, line: 618, type: !909)
!5696 = !DILocation(line: 618, column: 9, scope: !5688)
!5697 = !DILocalVariable(name: "ret", scope: !5688, file: !4558, line: 619, type: !909)
!5698 = !DILocation(line: 619, column: 9, scope: !5688)
!5699 = !DILocation(line: 621, column: 9, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5688, file: !4558, line: 621, column: 9)
!5701 = !DILocation(line: 621, column: 18, scope: !5700)
!5702 = !DILocation(line: 621, column: 64, scope: !5700)
!5703 = !DILocation(line: 621, column: 67, scope: !5704)
!5704 = !DILexicalBlockFile(scope: !5700, file: !4558, discriminator: 1)
!5705 = !DILocation(line: 621, column: 76, scope: !5704)
!5706 = !DILocation(line: 621, column: 80, scope: !5704)
!5707 = !DILocation(line: 621, column: 84, scope: !5708)
!5708 = !DILexicalBlockFile(scope: !5700, file: !4558, discriminator: 2)
!5709 = !DILocation(line: 621, column: 9, scope: !5708)
!5710 = !DILocation(line: 622, column: 18, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5700, file: !4558, line: 621, column: 92)
!5712 = !DILocation(line: 623, column: 16, scope: !5711)
!5713 = !DILocation(line: 624, column: 13, scope: !5711)
!5714 = !DILocation(line: 625, column: 5, scope: !5711)
!5715 = !DILocation(line: 627, column: 20, scope: !5688)
!5716 = !DILocation(line: 627, column: 29, scope: !5688)
!5717 = !DILocation(line: 627, column: 34, scope: !5688)
!5718 = !DILocation(line: 627, column: 17, scope: !5688)
!5719 = !DILocation(line: 629, column: 17, scope: !5688)
!5720 = !DILocation(line: 629, column: 5, scope: !5688)
!5721 = !DILocation(line: 629, column: 8, scope: !5688)
!5722 = !DILocation(line: 629, column: 15, scope: !5688)
!5723 = !DILocation(line: 630, column: 23, scope: !5688)
!5724 = !DILocation(line: 630, column: 5, scope: !5688)
!5725 = !DILocation(line: 630, column: 8, scope: !5688)
!5726 = !DILocation(line: 630, column: 21, scope: !5688)
!5727 = !DILocation(line: 631, column: 29, scope: !5688)
!5728 = !DILocation(line: 631, column: 38, scope: !5688)
!5729 = !DILocation(line: 631, column: 5, scope: !5688)
!5730 = !DILocation(line: 631, column: 8, scope: !5688)
!5731 = !DILocation(line: 631, column: 27, scope: !5688)
!5732 = !DILocation(line: 632, column: 21, scope: !5688)
!5733 = !DILocation(line: 632, column: 30, scope: !5688)
!5734 = !DILocation(line: 632, column: 28, scope: !5688)
!5735 = !DILocation(line: 632, column: 5, scope: !5688)
!5736 = !DILocation(line: 632, column: 8, scope: !5688)
!5737 = !DILocation(line: 632, column: 19, scope: !5688)
!5738 = !DILocation(line: 633, column: 5, scope: !5688)
!5739 = !DILocation(line: 633, column: 8, scope: !5688)
!5740 = !DILocation(line: 633, column: 14, scope: !5688)
!5741 = !DILocation(line: 639, column: 12, scope: !5688)
!5742 = !DILocation(line: 639, column: 5, scope: !5688)
!5743 = distinct !DISubprogram(name: "NEG_USR32", scope: !5744, file: !5744, line: 124, type: !5745, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!5744 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5745 = !DISubroutineType(types: !5746)
!5746 = !{!926, !926, !1140}
!5747 = !DILocalVariable(name: "a", arg: 1, scope: !5743, file: !5744, line: 124, type: !926)
!5748 = !DILocation(line: 124, column: 43, scope: !5743)
!5749 = !DILocalVariable(name: "s", arg: 2, scope: !5743, file: !5744, line: 124, type: !1140)
!5750 = !DILocation(line: 124, column: 53, scope: !5743)
!5751 = !DILocation(line: 125, column: 5, scope: !5743)
!5752 = !DILocation(line: 127, column: 29, scope: !5743)
!5753 = !DILocation(line: 127, column: 28, scope: !5743)
!5754 = !DILocation(line: 127, column: 18, scope: !5743)
!5755 = !{i32 207843, i32 207857}
!5756 = !DILocation(line: 129, column: 12, scope: !5743)
!5757 = !DILocation(line: 129, column: 5, scope: !5743)
!5758 = distinct !DISubprogram(name: "on2avc_decode_band_types", scope: !898, file: !898, line: 109, type: !5759, isLocal: true, isDefinition: true, scopeLine: 110, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!5759 = !DISubroutineType(types: !5760)
!5760 = !{!909, !1687, !4729}
!5761 = !DILocalVariable(name: "c", arg: 1, scope: !5758, file: !898, line: 109, type: !1687)
!5762 = !DILocation(line: 109, column: 52, scope: !5758)
!5763 = !DILocalVariable(name: "gb", arg: 2, scope: !5758, file: !898, line: 109, type: !4729)
!5764 = !DILocation(line: 109, column: 70, scope: !5758)
!5765 = !DILocalVariable(name: "bits_per_sect", scope: !5758, file: !898, line: 111, type: !909)
!5766 = !DILocation(line: 111, column: 9, scope: !5758)
!5767 = !DILocation(line: 111, column: 25, scope: !5758)
!5768 = !DILocation(line: 111, column: 28, scope: !5758)
!5769 = !DILocalVariable(name: "esc_val", scope: !5758, file: !898, line: 112, type: !909)
!5770 = !DILocation(line: 112, column: 9, scope: !5758)
!5771 = !DILocation(line: 112, column: 25, scope: !5758)
!5772 = !DILocation(line: 112, column: 22, scope: !5758)
!5773 = !DILocation(line: 112, column: 40, scope: !5758)
!5774 = !DILocalVariable(name: "num_bands", scope: !5758, file: !898, line: 113, type: !909)
!5775 = !DILocation(line: 113, column: 9, scope: !5758)
!5776 = !DILocation(line: 113, column: 21, scope: !5758)
!5777 = !DILocation(line: 113, column: 24, scope: !5758)
!5778 = !DILocation(line: 113, column: 36, scope: !5758)
!5779 = !DILocation(line: 113, column: 39, scope: !5758)
!5780 = !DILocation(line: 113, column: 34, scope: !5758)
!5781 = !DILocalVariable(name: "band", scope: !5758, file: !898, line: 114, type: !909)
!5782 = !DILocation(line: 114, column: 9, scope: !5758)
!5783 = !DILocalVariable(name: "i", scope: !5758, file: !898, line: 114, type: !909)
!5784 = !DILocation(line: 114, column: 19, scope: !5758)
!5785 = !DILocalVariable(name: "band_type", scope: !5758, file: !898, line: 114, type: !909)
!5786 = !DILocation(line: 114, column: 22, scope: !5758)
!5787 = !DILocalVariable(name: "run_len", scope: !5758, file: !898, line: 114, type: !909)
!5788 = !DILocation(line: 114, column: 33, scope: !5758)
!5789 = !DILocalVariable(name: "run", scope: !5758, file: !898, line: 114, type: !909)
!5790 = !DILocation(line: 114, column: 42, scope: !5758)
!5791 = !DILocation(line: 116, column: 5, scope: !5758)
!5792 = !DILocation(line: 116, column: 12, scope: !5793)
!5793 = !DILexicalBlockFile(scope: !5758, file: !898, discriminator: 1)
!5794 = !DILocation(line: 116, column: 19, scope: !5793)
!5795 = !DILocation(line: 116, column: 17, scope: !5793)
!5796 = !DILocation(line: 116, column: 5, scope: !5793)
!5797 = !DILocation(line: 117, column: 30, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5758, file: !898, line: 116, column: 30)
!5799 = !DILocation(line: 117, column: 21, scope: !5798)
!5800 = !DILocation(line: 117, column: 19, scope: !5798)
!5801 = !DILocation(line: 118, column: 17, scope: !5798)
!5802 = !DILocation(line: 119, column: 9, scope: !5798)
!5803 = distinct !{!5803, !5802}
!5804 = !DILocation(line: 120, column: 28, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5798, file: !898, line: 119, column: 12)
!5806 = !DILocation(line: 120, column: 32, scope: !5805)
!5807 = !DILocation(line: 120, column: 19, scope: !5805)
!5808 = !DILocation(line: 120, column: 17, scope: !5805)
!5809 = !DILocation(line: 121, column: 17, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5805, file: !898, line: 121, column: 17)
!5811 = !DILocation(line: 121, column: 23, scope: !5810)
!5812 = !DILocation(line: 121, column: 35, scope: !5810)
!5813 = !DILocation(line: 121, column: 33, scope: !5810)
!5814 = !DILocation(line: 121, column: 42, scope: !5810)
!5815 = !DILocation(line: 121, column: 40, scope: !5810)
!5816 = !DILocation(line: 121, column: 21, scope: !5810)
!5817 = !DILocation(line: 121, column: 17, scope: !5805)
!5818 = !DILocation(line: 122, column: 24, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5810, file: !898, line: 121, column: 51)
!5820 = !DILocation(line: 122, column: 27, scope: !5819)
!5821 = !DILocation(line: 122, column: 17, scope: !5819)
!5822 = !DILocation(line: 123, column: 17, scope: !5819)
!5823 = !DILocation(line: 125, column: 24, scope: !5805)
!5824 = !DILocation(line: 125, column: 21, scope: !5805)
!5825 = !DILocation(line: 126, column: 9, scope: !5805)
!5826 = !DILocation(line: 126, column: 18, scope: !5827)
!5827 = !DILexicalBlockFile(scope: !5798, file: !898, discriminator: 1)
!5828 = !DILocation(line: 126, column: 25, scope: !5827)
!5829 = !DILocation(line: 126, column: 22, scope: !5827)
!5830 = !DILocation(line: 126, column: 9, scope: !5827)
!5831 = !DILocation(line: 127, column: 18, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5798, file: !898, line: 127, column: 9)
!5833 = !DILocation(line: 127, column: 16, scope: !5832)
!5834 = !DILocation(line: 127, column: 14, scope: !5832)
!5835 = !DILocation(line: 127, column: 24, scope: !5836)
!5836 = !DILexicalBlockFile(scope: !5837, file: !898, discriminator: 1)
!5837 = distinct !DILexicalBlock(scope: !5832, file: !898, line: 127, column: 9)
!5838 = !DILocation(line: 127, column: 28, scope: !5836)
!5839 = !DILocation(line: 127, column: 35, scope: !5836)
!5840 = !DILocation(line: 127, column: 33, scope: !5836)
!5841 = !DILocation(line: 127, column: 26, scope: !5836)
!5842 = !DILocation(line: 127, column: 9, scope: !5836)
!5843 = !DILocation(line: 128, column: 31, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5837, file: !898, line: 127, column: 49)
!5845 = !DILocation(line: 128, column: 26, scope: !5844)
!5846 = !DILocation(line: 128, column: 13, scope: !5844)
!5847 = !DILocation(line: 128, column: 16, scope: !5844)
!5848 = !DILocation(line: 128, column: 29, scope: !5844)
!5849 = !DILocation(line: 129, column: 34, scope: !5844)
!5850 = !DILocation(line: 129, column: 41, scope: !5844)
!5851 = !DILocation(line: 129, column: 39, scope: !5844)
!5852 = !DILocation(line: 129, column: 29, scope: !5844)
!5853 = !DILocation(line: 129, column: 13, scope: !5844)
!5854 = !DILocation(line: 129, column: 16, scope: !5844)
!5855 = !DILocation(line: 129, column: 32, scope: !5844)
!5856 = !DILocation(line: 130, column: 9, scope: !5844)
!5857 = !DILocation(line: 127, column: 45, scope: !5858)
!5858 = !DILexicalBlockFile(scope: !5837, file: !898, discriminator: 2)
!5859 = !DILocation(line: 127, column: 9, scope: !5858)
!5860 = distinct !{!5860, !5861}
!5861 = !DILocation(line: 127, column: 9, scope: !5798)
!5862 = !DILocation(line: 131, column: 17, scope: !5798)
!5863 = !DILocation(line: 131, column: 14, scope: !5798)
!5864 = !DILocation(line: 116, column: 5, scope: !5865)
!5865 = !DILexicalBlockFile(scope: !5758, file: !898, discriminator: 2)
!5866 = distinct !{!5866, !5791}
!5867 = !DILocation(line: 134, column: 5, scope: !5758)
!5868 = !DILocation(line: 135, column: 1, scope: !5758)
!5869 = distinct !DISubprogram(name: "on2avc_decode_band_scales", scope: !898, file: !898, line: 139, type: !5759, isLocal: true, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!5870 = !DILocation(line: 66, column: 98, scope: !4790, inlinedAt: !5871)
!5871 = distinct !DILocation(line: 788, column: 601, scope: !5872, inlinedAt: !5881)
!5872 = !DILexicalBlockFile(scope: !5873, file: !4558, discriminator: 11)
!5873 = distinct !DILexicalBlock(scope: !5874, file: !4558, line: 788, column: 490)
!5874 = distinct !DILexicalBlock(scope: !5875, file: !4558, line: 788, column: 466)
!5875 = distinct !DILexicalBlock(scope: !5876, file: !4558, line: 788, column: 154)
!5876 = distinct !DILexicalBlock(scope: !5877, file: !4558, line: 788, column: 130)
!5877 = distinct !DILexicalBlock(scope: !5878, file: !4558, line: 788, column: 8)
!5878 = distinct !DISubprogram(name: "get_vlc2", scope: !4558, file: !4558, line: 762, type: !5879, isLocal: true, isDefinition: true, scopeLine: 764, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!5879 = !DISubroutineType(types: !5880)
!5880 = !{!909, !4729, !1821, !909, !909}
!5881 = distinct !DILocation(line: 172, column: 26, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5883, file: !898, line: 171, column: 20)
!5883 = distinct !DILexicalBlock(scope: !5884, file: !898, line: 168, column: 17)
!5884 = distinct !DILexicalBlock(scope: !5885, file: !898, line: 152, column: 44)
!5885 = distinct !DILexicalBlock(scope: !5886, file: !898, line: 152, column: 9)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !898, line: 152, column: 9)
!5887 = distinct !DILexicalBlock(scope: !5888, file: !898, line: 144, column: 42)
!5888 = distinct !DILexicalBlock(scope: !5889, file: !898, line: 144, column: 5)
!5889 = distinct !DILexicalBlock(scope: !5869, file: !898, line: 144, column: 5)
!5890 = !DILocation(line: 66, column: 98, scope: !4790, inlinedAt: !5891)
!5891 = distinct !DILocation(line: 788, column: 259, scope: !5892, inlinedAt: !5881)
!5892 = !DILexicalBlockFile(scope: !5875, file: !4558, discriminator: 6)
!5893 = !DILocation(line: 66, column: 98, scope: !4790, inlinedAt: !5894)
!5894 = distinct !DILocation(line: 786, column: 16, scope: !5878, inlinedAt: !5881)
!5895 = !DILocalVariable(name: "s", arg: 1, scope: !5878, file: !4558, line: 762, type: !4729)
!5896 = !DILocation(line: 762, column: 74, scope: !5878, inlinedAt: !5881)
!5897 = !DILocalVariable(name: "table", arg: 2, scope: !5878, file: !4558, line: 762, type: !1821)
!5898 = !DILocation(line: 762, column: 87, scope: !5878, inlinedAt: !5881)
!5899 = !DILocalVariable(name: "bits", arg: 3, scope: !5878, file: !4558, line: 763, type: !909)
!5900 = !DILocation(line: 763, column: 42, scope: !5878, inlinedAt: !5881)
!5901 = !DILocalVariable(name: "max_depth", arg: 4, scope: !5878, file: !4558, line: 763, type: !909)
!5902 = !DILocation(line: 763, column: 52, scope: !5878, inlinedAt: !5881)
!5903 = !DILocalVariable(name: "code", scope: !5878, file: !4558, line: 783, type: !909)
!5904 = !DILocation(line: 783, column: 9, scope: !5878, inlinedAt: !5881)
!5905 = !DILocalVariable(name: "re_index", scope: !5878, file: !4558, line: 785, type: !910)
!5906 = !DILocation(line: 785, column: 18, scope: !5878, inlinedAt: !5881)
!5907 = !DILocalVariable(name: "re_cache", scope: !5878, file: !4558, line: 785, type: !910)
!5908 = !DILocation(line: 785, column: 78, scope: !5878, inlinedAt: !5881)
!5909 = !DILocalVariable(name: "re_size_plus8", scope: !5878, file: !4558, line: 785, type: !910)
!5910 = !DILocation(line: 785, column: 101, scope: !5878, inlinedAt: !5881)
!5911 = !DILocalVariable(name: "n", scope: !5877, file: !4558, line: 788, type: !909)
!5912 = !DILocation(line: 788, column: 14, scope: !5877, inlinedAt: !5881)
!5913 = !DILocalVariable(name: "nb_bits", scope: !5877, file: !4558, line: 788, type: !909)
!5914 = !DILocation(line: 788, column: 17, scope: !5877, inlinedAt: !5881)
!5915 = !DILocalVariable(name: "index", scope: !5877, file: !4558, line: 788, type: !910)
!5916 = !DILocation(line: 788, column: 39, scope: !5877, inlinedAt: !5881)
!5917 = !DILocalVariable(name: "c", arg: 1, scope: !5869, file: !898, line: 139, type: !1687)
!5918 = !DILocation(line: 139, column: 53, scope: !5869)
!5919 = !DILocalVariable(name: "gb", arg: 2, scope: !5869, file: !898, line: 139, type: !4729)
!5920 = !DILocation(line: 139, column: 71, scope: !5869)
!5921 = !DILocalVariable(name: "w", scope: !5869, file: !898, line: 141, type: !909)
!5922 = !DILocation(line: 141, column: 9, scope: !5869)
!5923 = !DILocalVariable(name: "w2", scope: !5869, file: !898, line: 141, type: !909)
!5924 = !DILocation(line: 141, column: 12, scope: !5869)
!5925 = !DILocalVariable(name: "b", scope: !5869, file: !898, line: 141, type: !909)
!5926 = !DILocation(line: 141, column: 16, scope: !5869)
!5927 = !DILocalVariable(name: "scale", scope: !5869, file: !898, line: 141, type: !909)
!5928 = !DILocation(line: 141, column: 19, scope: !5869)
!5929 = !DILocalVariable(name: "first", scope: !5869, file: !898, line: 141, type: !909)
!5930 = !DILocation(line: 141, column: 26, scope: !5869)
!5931 = !DILocalVariable(name: "band_off", scope: !5869, file: !898, line: 142, type: !909)
!5932 = !DILocation(line: 142, column: 9, scope: !5869)
!5933 = !DILocation(line: 144, column: 12, scope: !5889)
!5934 = !DILocation(line: 144, column: 10, scope: !5889)
!5935 = !DILocation(line: 144, column: 17, scope: !5936)
!5936 = !DILexicalBlockFile(scope: !5888, file: !898, discriminator: 1)
!5937 = !DILocation(line: 144, column: 21, scope: !5936)
!5938 = !DILocation(line: 144, column: 24, scope: !5936)
!5939 = !DILocation(line: 144, column: 19, scope: !5936)
!5940 = !DILocation(line: 144, column: 5, scope: !5936)
!5941 = !DILocation(line: 145, column: 26, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5887, file: !898, line: 145, column: 13)
!5943 = !DILocation(line: 145, column: 14, scope: !5942)
!5944 = !DILocation(line: 145, column: 17, scope: !5942)
!5945 = !DILocation(line: 145, column: 13, scope: !5887)
!5946 = !DILocation(line: 146, column: 20, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5942, file: !898, line: 145, column: 30)
!5948 = !DILocation(line: 146, column: 23, scope: !5947)
!5949 = !DILocation(line: 146, column: 37, scope: !5947)
!5950 = !DILocation(line: 146, column: 35, scope: !5947)
!5951 = !DILocation(line: 146, column: 13, scope: !5947)
!5952 = !DILocation(line: 147, column: 20, scope: !5947)
!5953 = !DILocation(line: 147, column: 23, scope: !5947)
!5954 = !DILocation(line: 147, column: 37, scope: !5947)
!5955 = !DILocation(line: 147, column: 35, scope: !5947)
!5956 = !DILocation(line: 147, column: 48, scope: !5947)
!5957 = !DILocation(line: 147, column: 51, scope: !5947)
!5958 = !DILocation(line: 147, column: 46, scope: !5947)
!5959 = !DILocation(line: 148, column: 20, scope: !5947)
!5960 = !DILocation(line: 148, column: 23, scope: !5947)
!5961 = !DILocation(line: 148, column: 33, scope: !5947)
!5962 = !DILocation(line: 149, column: 25, scope: !5947)
!5963 = !DILocation(line: 149, column: 28, scope: !5947)
!5964 = !DILocation(line: 149, column: 22, scope: !5947)
!5965 = !DILocation(line: 150, column: 13, scope: !5947)
!5966 = !DILocation(line: 152, column: 16, scope: !5886)
!5967 = !DILocation(line: 152, column: 14, scope: !5886)
!5968 = !DILocation(line: 152, column: 21, scope: !5969)
!5969 = !DILexicalBlockFile(scope: !5885, file: !898, discriminator: 1)
!5970 = !DILocation(line: 152, column: 25, scope: !5969)
!5971 = !DILocation(line: 152, column: 28, scope: !5969)
!5972 = !DILocation(line: 152, column: 23, scope: !5969)
!5973 = !DILocation(line: 152, column: 9, scope: !5969)
!5974 = !DILocation(line: 153, column: 31, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5884, file: !898, line: 153, column: 17)
!5976 = !DILocation(line: 153, column: 18, scope: !5975)
!5977 = !DILocation(line: 153, column: 21, scope: !5975)
!5978 = !DILocation(line: 153, column: 17, scope: !5884)
!5979 = !DILocalVariable(name: "all_zero", scope: !5980, file: !898, line: 154, type: !909)
!5980 = distinct !DILexicalBlock(scope: !5975, file: !898, line: 153, column: 42)
!5981 = !DILocation(line: 154, column: 21, scope: !5980)
!5982 = !DILocation(line: 155, column: 27, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5980, file: !898, line: 155, column: 17)
!5984 = !DILocation(line: 155, column: 29, scope: !5983)
!5985 = !DILocation(line: 155, column: 25, scope: !5983)
!5986 = !DILocation(line: 155, column: 22, scope: !5983)
!5987 = !DILocation(line: 155, column: 34, scope: !5988)
!5988 = !DILexicalBlockFile(scope: !5989, file: !898, discriminator: 1)
!5989 = distinct !DILexicalBlock(scope: !5983, file: !898, line: 155, column: 17)
!5990 = !DILocation(line: 155, column: 39, scope: !5988)
!5991 = !DILocation(line: 155, column: 42, scope: !5988)
!5992 = !DILocation(line: 155, column: 37, scope: !5988)
!5993 = !DILocation(line: 155, column: 17, scope: !5988)
!5994 = !DILocation(line: 156, column: 37, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5996, file: !898, line: 156, column: 25)
!5996 = distinct !DILexicalBlock(scope: !5989, file: !898, line: 155, column: 61)
!5997 = !DILocation(line: 156, column: 25, scope: !5995)
!5998 = !DILocation(line: 156, column: 28, scope: !5995)
!5999 = !DILocation(line: 156, column: 25, scope: !5996)
!6000 = !DILocation(line: 157, column: 25, scope: !5995)
!6001 = !DILocation(line: 158, column: 38, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5996, file: !898, line: 158, column: 25)
!6003 = !DILocation(line: 158, column: 43, scope: !6002)
!6004 = !DILocation(line: 158, column: 46, scope: !6002)
!6005 = !DILocation(line: 158, column: 41, scope: !6002)
!6006 = !DILocation(line: 158, column: 58, scope: !6002)
!6007 = !DILocation(line: 158, column: 56, scope: !6002)
!6008 = !DILocation(line: 158, column: 25, scope: !6002)
!6009 = !DILocation(line: 158, column: 28, scope: !6002)
!6010 = !DILocation(line: 158, column: 25, scope: !5996)
!6011 = !DILocation(line: 159, column: 34, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6002, file: !898, line: 158, column: 62)
!6013 = !DILocation(line: 160, column: 25, scope: !6012)
!6014 = !DILocation(line: 162, column: 17, scope: !5996)
!6015 = !DILocation(line: 155, column: 57, scope: !6016)
!6016 = !DILexicalBlockFile(scope: !5989, file: !898, discriminator: 2)
!6017 = !DILocation(line: 155, column: 17, scope: !6016)
!6018 = distinct !{!6018, !6019}
!6019 = !DILocation(line: 155, column: 17, scope: !5980)
!6020 = !DILocation(line: 163, column: 21, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5980, file: !898, line: 163, column: 21)
!6022 = !DILocation(line: 163, column: 21, scope: !5980)
!6023 = !DILocation(line: 164, column: 44, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6021, file: !898, line: 163, column: 31)
!6025 = !DILocation(line: 164, column: 21, scope: !6024)
!6026 = !DILocation(line: 164, column: 24, scope: !6024)
!6027 = !DILocation(line: 164, column: 48, scope: !6024)
!6028 = !DILocation(line: 165, column: 21, scope: !6024)
!6029 = !DILocation(line: 167, column: 13, scope: !5980)
!6030 = !DILocation(line: 168, column: 17, scope: !5883)
!6031 = !DILocation(line: 168, column: 17, scope: !5884)
!6032 = !DILocation(line: 169, column: 34, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !5883, file: !898, line: 168, column: 24)
!6034 = !DILocation(line: 169, column: 25, scope: !6033)
!6035 = !DILocation(line: 169, column: 23, scope: !6033)
!6036 = !DILocation(line: 170, column: 23, scope: !6033)
!6037 = !DILocation(line: 171, column: 13, scope: !6033)
!6038 = !DILocation(line: 172, column: 35, scope: !5882)
!6039 = !DILocation(line: 172, column: 39, scope: !5882)
!6040 = !DILocation(line: 172, column: 42, scope: !5882)
!6041 = !DILocation(line: 172, column: 53, scope: !5882)
!6042 = !DILocation(line: 172, column: 26, scope: !5882)
!6043 = !DILocation(line: 785, column: 30, scope: !5878, inlinedAt: !5881)
!6044 = !DILocation(line: 785, column: 34, scope: !5878, inlinedAt: !5881)
!6045 = !DILocation(line: 785, column: 118, scope: !5878, inlinedAt: !5881)
!6046 = !DILocation(line: 785, column: 122, scope: !5878, inlinedAt: !5881)
!6047 = !DILocation(line: 786, column: 60, scope: !5878, inlinedAt: !5881)
!6048 = !DILocation(line: 786, column: 64, scope: !5878, inlinedAt: !5881)
!6049 = !DILocation(line: 786, column: 74, scope: !5878, inlinedAt: !5881)
!6050 = !DILocation(line: 786, column: 83, scope: !5878, inlinedAt: !5881)
!6051 = !DILocation(line: 786, column: 71, scope: !5878, inlinedAt: !5881)
!6052 = !DILocation(line: 786, column: 92, scope: !5878, inlinedAt: !5881)
!6053 = !DILocation(line: 786, column: 16, scope: !5878, inlinedAt: !5881)
!6054 = !DILocation(line: 68, column: 16, scope: !4790, inlinedAt: !5894)
!6055 = !DILocation(line: 68, column: 19, scope: !4790, inlinedAt: !5894)
!6056 = !DILocation(line: 68, column: 24, scope: !4790, inlinedAt: !5894)
!6057 = !DILocation(line: 68, column: 38, scope: !4790, inlinedAt: !5894)
!6058 = !DILocation(line: 68, column: 41, scope: !4790, inlinedAt: !5894)
!6059 = !DILocation(line: 68, column: 46, scope: !4790, inlinedAt: !5894)
!6060 = !DILocation(line: 68, column: 34, scope: !4790, inlinedAt: !5894)
!6061 = !DILocation(line: 68, column: 57, scope: !4790, inlinedAt: !5894)
!6062 = !DILocation(line: 68, column: 69, scope: !4790, inlinedAt: !5894)
!6063 = !DILocation(line: 68, column: 72, scope: !4790, inlinedAt: !5894)
!6064 = !DILocation(line: 68, column: 79, scope: !4790, inlinedAt: !5894)
!6065 = !DILocation(line: 68, column: 84, scope: !4790, inlinedAt: !5894)
!6066 = !DILocation(line: 68, column: 99, scope: !4790, inlinedAt: !5894)
!6067 = !DILocation(line: 68, column: 102, scope: !4790, inlinedAt: !5894)
!6068 = !DILocation(line: 68, column: 109, scope: !4790, inlinedAt: !5894)
!6069 = !DILocation(line: 68, column: 114, scope: !4790, inlinedAt: !5894)
!6070 = !DILocation(line: 68, column: 94, scope: !4790, inlinedAt: !5894)
!6071 = !DILocation(line: 68, column: 63, scope: !4790, inlinedAt: !5894)
!6072 = !DILocation(line: 786, column: 100, scope: !5878, inlinedAt: !5881)
!6073 = !DILocation(line: 786, column: 109, scope: !5878, inlinedAt: !5881)
!6074 = !DILocation(line: 786, column: 96, scope: !5878, inlinedAt: !5881)
!6075 = !DILocation(line: 786, column: 14, scope: !5878, inlinedAt: !5881)
!6076 = !DILocation(line: 788, column: 64, scope: !6077, inlinedAt: !5881)
!6077 = !DILexicalBlockFile(scope: !5877, file: !4558, discriminator: 1)
!6078 = !DILocation(line: 788, column: 74, scope: !6077, inlinedAt: !5881)
!6079 = !DILocation(line: 788, column: 54, scope: !6077, inlinedAt: !5881)
!6080 = !DILocation(line: 788, column: 52, scope: !6077, inlinedAt: !5881)
!6081 = !DILocation(line: 788, column: 94, scope: !6077, inlinedAt: !5881)
!6082 = !DILocation(line: 788, column: 88, scope: !6077, inlinedAt: !5881)
!6083 = !DILocation(line: 788, column: 86, scope: !6077, inlinedAt: !5881)
!6084 = !DILocation(line: 788, column: 115, scope: !6077, inlinedAt: !5881)
!6085 = !DILocation(line: 788, column: 109, scope: !6077, inlinedAt: !5881)
!6086 = !DILocation(line: 788, column: 107, scope: !6077, inlinedAt: !5881)
!6087 = !DILocation(line: 788, column: 130, scope: !6077, inlinedAt: !5881)
!6088 = !DILocation(line: 788, column: 140, scope: !6077, inlinedAt: !5881)
!6089 = !DILocation(line: 788, column: 144, scope: !6077, inlinedAt: !5881)
!6090 = !DILocation(line: 788, column: 147, scope: !6091, inlinedAt: !5881)
!6091 = !DILexicalBlockFile(scope: !5876, file: !4558, discriminator: 2)
!6092 = !DILocation(line: 788, column: 149, scope: !6091, inlinedAt: !5881)
!6093 = !DILocation(line: 788, column: 130, scope: !6091, inlinedAt: !5881)
!6094 = !DILocation(line: 788, column: 169, scope: !6095, inlinedAt: !5881)
!6095 = !DILexicalBlockFile(scope: !5875, file: !4558, discriminator: 3)
!6096 = !DILocation(line: 788, column: 187, scope: !6095, inlinedAt: !5881)
!6097 = !DILocation(line: 788, column: 199, scope: !6095, inlinedAt: !5881)
!6098 = !DILocation(line: 788, column: 196, scope: !6095, inlinedAt: !5881)
!6099 = !DILocation(line: 788, column: 184, scope: !6095, inlinedAt: !5881)
!6100 = !DILocation(line: 788, column: 168, scope: !6095, inlinedAt: !5881)
!6101 = !DILocation(line: 788, column: 209, scope: !6102, inlinedAt: !5881)
!6102 = !DILexicalBlockFile(scope: !5875, file: !4558, discriminator: 4)
!6103 = !DILocation(line: 788, column: 221, scope: !6102, inlinedAt: !5881)
!6104 = !DILocation(line: 788, column: 218, scope: !6102, inlinedAt: !5881)
!6105 = !DILocation(line: 788, column: 168, scope: !6102, inlinedAt: !5881)
!6106 = !DILocation(line: 788, column: 231, scope: !6107, inlinedAt: !5881)
!6107 = !DILexicalBlockFile(scope: !5875, file: !4558, discriminator: 5)
!6108 = !DILocation(line: 788, column: 168, scope: !6107, inlinedAt: !5881)
!6109 = !DILocation(line: 788, column: 168, scope: !5892, inlinedAt: !5881)
!6110 = !DILocation(line: 788, column: 165, scope: !5892, inlinedAt: !5881)
!6111 = !DILocation(line: 788, column: 303, scope: !5892, inlinedAt: !5881)
!6112 = !DILocation(line: 788, column: 307, scope: !5892, inlinedAt: !5881)
!6113 = !DILocation(line: 788, column: 317, scope: !5892, inlinedAt: !5881)
!6114 = !DILocation(line: 788, column: 326, scope: !5892, inlinedAt: !5881)
!6115 = !DILocation(line: 788, column: 314, scope: !5892, inlinedAt: !5881)
!6116 = !DILocation(line: 788, column: 335, scope: !5892, inlinedAt: !5881)
!6117 = !DILocation(line: 788, column: 259, scope: !5892, inlinedAt: !5881)
!6118 = !DILocation(line: 68, column: 16, scope: !4790, inlinedAt: !5891)
!6119 = !DILocation(line: 68, column: 19, scope: !4790, inlinedAt: !5891)
!6120 = !DILocation(line: 68, column: 24, scope: !4790, inlinedAt: !5891)
!6121 = !DILocation(line: 68, column: 38, scope: !4790, inlinedAt: !5891)
!6122 = !DILocation(line: 68, column: 41, scope: !4790, inlinedAt: !5891)
!6123 = !DILocation(line: 68, column: 46, scope: !4790, inlinedAt: !5891)
!6124 = !DILocation(line: 68, column: 34, scope: !4790, inlinedAt: !5891)
!6125 = !DILocation(line: 68, column: 57, scope: !4790, inlinedAt: !5891)
!6126 = !DILocation(line: 68, column: 69, scope: !4790, inlinedAt: !5891)
!6127 = !DILocation(line: 68, column: 72, scope: !4790, inlinedAt: !5891)
!6128 = !DILocation(line: 68, column: 79, scope: !4790, inlinedAt: !5891)
!6129 = !DILocation(line: 68, column: 84, scope: !4790, inlinedAt: !5891)
!6130 = !DILocation(line: 68, column: 99, scope: !4790, inlinedAt: !5891)
!6131 = !DILocation(line: 68, column: 102, scope: !4790, inlinedAt: !5891)
!6132 = !DILocation(line: 68, column: 109, scope: !4790, inlinedAt: !5891)
!6133 = !DILocation(line: 68, column: 114, scope: !4790, inlinedAt: !5891)
!6134 = !DILocation(line: 68, column: 94, scope: !4790, inlinedAt: !5891)
!6135 = !DILocation(line: 68, column: 63, scope: !4790, inlinedAt: !5891)
!6136 = !DILocation(line: 788, column: 343, scope: !5892, inlinedAt: !5881)
!6137 = !DILocation(line: 788, column: 352, scope: !5892, inlinedAt: !5881)
!6138 = !DILocation(line: 788, column: 339, scope: !5892, inlinedAt: !5881)
!6139 = !DILocation(line: 788, column: 257, scope: !5892, inlinedAt: !5881)
!6140 = !DILocation(line: 788, column: 369, scope: !5892, inlinedAt: !5881)
!6141 = !DILocation(line: 788, column: 368, scope: !5892, inlinedAt: !5881)
!6142 = !DILocation(line: 788, column: 366, scope: !5892, inlinedAt: !5881)
!6143 = !DILocation(line: 788, column: 390, scope: !5892, inlinedAt: !5881)
!6144 = !DILocation(line: 788, column: 400, scope: !5892, inlinedAt: !5881)
!6145 = !DILocation(line: 788, column: 380, scope: !6146, inlinedAt: !5881)
!6146 = !DILexicalBlockFile(scope: !5892, file: !4558, discriminator: 19)
!6147 = !DILocation(line: 788, column: 411, scope: !5892, inlinedAt: !5881)
!6148 = !DILocation(line: 788, column: 409, scope: !5892, inlinedAt: !5881)
!6149 = !DILocation(line: 788, column: 378, scope: !5892, inlinedAt: !5881)
!6150 = !DILocation(line: 788, column: 430, scope: !5892, inlinedAt: !5881)
!6151 = !DILocation(line: 788, column: 424, scope: !5892, inlinedAt: !5881)
!6152 = !DILocation(line: 788, column: 422, scope: !5892, inlinedAt: !5881)
!6153 = !DILocation(line: 788, column: 451, scope: !5892, inlinedAt: !5881)
!6154 = !DILocation(line: 788, column: 445, scope: !5892, inlinedAt: !5881)
!6155 = !DILocation(line: 788, column: 443, scope: !5892, inlinedAt: !5881)
!6156 = !DILocation(line: 788, column: 466, scope: !5892, inlinedAt: !5881)
!6157 = !DILocation(line: 788, column: 476, scope: !5892, inlinedAt: !5881)
!6158 = !DILocation(line: 788, column: 480, scope: !5892, inlinedAt: !5881)
!6159 = !DILocation(line: 788, column: 483, scope: !6160, inlinedAt: !5881)
!6160 = !DILexicalBlockFile(scope: !5874, file: !4558, discriminator: 7)
!6161 = !DILocation(line: 788, column: 485, scope: !6160, inlinedAt: !5881)
!6162 = !DILocation(line: 788, column: 466, scope: !6160, inlinedAt: !5881)
!6163 = !DILocation(line: 788, column: 505, scope: !6164, inlinedAt: !5881)
!6164 = !DILexicalBlockFile(scope: !5873, file: !4558, discriminator: 8)
!6165 = !DILocation(line: 788, column: 523, scope: !6164, inlinedAt: !5881)
!6166 = !DILocation(line: 788, column: 535, scope: !6164, inlinedAt: !5881)
!6167 = !DILocation(line: 788, column: 532, scope: !6164, inlinedAt: !5881)
!6168 = !DILocation(line: 788, column: 520, scope: !6164, inlinedAt: !5881)
!6169 = !DILocation(line: 788, column: 504, scope: !6164, inlinedAt: !5881)
!6170 = !DILocation(line: 788, column: 548, scope: !6171, inlinedAt: !5881)
!6171 = !DILexicalBlockFile(scope: !5873, file: !4558, discriminator: 9)
!6172 = !DILocation(line: 788, column: 560, scope: !6171, inlinedAt: !5881)
!6173 = !DILocation(line: 788, column: 557, scope: !6171, inlinedAt: !5881)
!6174 = !DILocation(line: 788, column: 504, scope: !6171, inlinedAt: !5881)
!6175 = !DILocation(line: 788, column: 573, scope: !6176, inlinedAt: !5881)
!6176 = !DILexicalBlockFile(scope: !5873, file: !4558, discriminator: 10)
!6177 = !DILocation(line: 788, column: 504, scope: !6176, inlinedAt: !5881)
!6178 = !DILocation(line: 788, column: 504, scope: !5872, inlinedAt: !5881)
!6179 = !DILocation(line: 788, column: 501, scope: !5872, inlinedAt: !5881)
!6180 = !DILocation(line: 788, column: 645, scope: !5872, inlinedAt: !5881)
!6181 = !DILocation(line: 788, column: 649, scope: !5872, inlinedAt: !5881)
!6182 = !DILocation(line: 788, column: 659, scope: !5872, inlinedAt: !5881)
!6183 = !DILocation(line: 788, column: 668, scope: !5872, inlinedAt: !5881)
!6184 = !DILocation(line: 788, column: 656, scope: !5872, inlinedAt: !5881)
!6185 = !DILocation(line: 788, column: 677, scope: !5872, inlinedAt: !5881)
!6186 = !DILocation(line: 788, column: 601, scope: !5872, inlinedAt: !5881)
!6187 = !DILocation(line: 68, column: 16, scope: !4790, inlinedAt: !5871)
!6188 = !DILocation(line: 68, column: 19, scope: !4790, inlinedAt: !5871)
!6189 = !DILocation(line: 68, column: 24, scope: !4790, inlinedAt: !5871)
!6190 = !DILocation(line: 68, column: 38, scope: !4790, inlinedAt: !5871)
!6191 = !DILocation(line: 68, column: 41, scope: !4790, inlinedAt: !5871)
!6192 = !DILocation(line: 68, column: 46, scope: !4790, inlinedAt: !5871)
!6193 = !DILocation(line: 68, column: 34, scope: !4790, inlinedAt: !5871)
!6194 = !DILocation(line: 68, column: 57, scope: !4790, inlinedAt: !5871)
!6195 = !DILocation(line: 68, column: 69, scope: !4790, inlinedAt: !5871)
!6196 = !DILocation(line: 68, column: 72, scope: !4790, inlinedAt: !5871)
!6197 = !DILocation(line: 68, column: 79, scope: !4790, inlinedAt: !5871)
!6198 = !DILocation(line: 68, column: 84, scope: !4790, inlinedAt: !5871)
!6199 = !DILocation(line: 68, column: 99, scope: !4790, inlinedAt: !5871)
!6200 = !DILocation(line: 68, column: 102, scope: !4790, inlinedAt: !5871)
!6201 = !DILocation(line: 68, column: 109, scope: !4790, inlinedAt: !5871)
!6202 = !DILocation(line: 68, column: 114, scope: !4790, inlinedAt: !5871)
!6203 = !DILocation(line: 68, column: 94, scope: !4790, inlinedAt: !5871)
!6204 = !DILocation(line: 68, column: 63, scope: !4790, inlinedAt: !5871)
!6205 = !DILocation(line: 788, column: 685, scope: !5872, inlinedAt: !5881)
!6206 = !DILocation(line: 788, column: 694, scope: !5872, inlinedAt: !5881)
!6207 = !DILocation(line: 788, column: 681, scope: !5872, inlinedAt: !5881)
!6208 = !DILocation(line: 788, column: 599, scope: !5872, inlinedAt: !5881)
!6209 = !DILocation(line: 788, column: 711, scope: !5872, inlinedAt: !5881)
!6210 = !DILocation(line: 788, column: 710, scope: !5872, inlinedAt: !5881)
!6211 = !DILocation(line: 788, column: 708, scope: !5872, inlinedAt: !5881)
!6212 = !DILocation(line: 788, column: 732, scope: !5872, inlinedAt: !5881)
!6213 = !DILocation(line: 788, column: 742, scope: !5872, inlinedAt: !5881)
!6214 = !DILocation(line: 788, column: 722, scope: !6215, inlinedAt: !5881)
!6215 = !DILexicalBlockFile(scope: !5872, file: !4558, discriminator: 20)
!6216 = !DILocation(line: 788, column: 753, scope: !5872, inlinedAt: !5881)
!6217 = !DILocation(line: 788, column: 751, scope: !5872, inlinedAt: !5881)
!6218 = !DILocation(line: 788, column: 720, scope: !5872, inlinedAt: !5881)
!6219 = !DILocation(line: 788, column: 772, scope: !5872, inlinedAt: !5881)
!6220 = !DILocation(line: 788, column: 766, scope: !5872, inlinedAt: !5881)
!6221 = !DILocation(line: 788, column: 764, scope: !5872, inlinedAt: !5881)
!6222 = !DILocation(line: 788, column: 793, scope: !5872, inlinedAt: !5881)
!6223 = !DILocation(line: 788, column: 787, scope: !5872, inlinedAt: !5881)
!6224 = !DILocation(line: 788, column: 785, scope: !5872, inlinedAt: !5881)
!6225 = !DILocation(line: 788, column: 804, scope: !5872, inlinedAt: !5881)
!6226 = !DILocation(line: 788, column: 806, scope: !6227, inlinedAt: !5881)
!6227 = !DILexicalBlockFile(scope: !5875, file: !4558, discriminator: 12)
!6228 = !DILocation(line: 788, column: 827, scope: !6229, inlinedAt: !5881)
!6229 = !DILexicalBlockFile(scope: !6230, file: !4558, discriminator: 14)
!6230 = distinct !DILexicalBlock(scope: !5877, file: !4558, line: 788, column: 811)
!6231 = !DILocation(line: 788, column: 822, scope: !6229, inlinedAt: !5881)
!6232 = !DILocation(line: 788, column: 844, scope: !6229, inlinedAt: !5881)
!6233 = !DILocation(line: 788, column: 862, scope: !6229, inlinedAt: !5881)
!6234 = !DILocation(line: 788, column: 874, scope: !6229, inlinedAt: !5881)
!6235 = !DILocation(line: 788, column: 871, scope: !6229, inlinedAt: !5881)
!6236 = !DILocation(line: 788, column: 859, scope: !6229, inlinedAt: !5881)
!6237 = !DILocation(line: 788, column: 843, scope: !6229, inlinedAt: !5881)
!6238 = !DILocation(line: 788, column: 881, scope: !6239, inlinedAt: !5881)
!6239 = !DILexicalBlockFile(scope: !6230, file: !4558, discriminator: 15)
!6240 = !DILocation(line: 788, column: 893, scope: !6239, inlinedAt: !5881)
!6241 = !DILocation(line: 788, column: 890, scope: !6239, inlinedAt: !5881)
!6242 = !DILocation(line: 788, column: 843, scope: !6239, inlinedAt: !5881)
!6243 = !DILocation(line: 788, column: 900, scope: !6244, inlinedAt: !5881)
!6244 = !DILexicalBlockFile(scope: !6230, file: !4558, discriminator: 16)
!6245 = !DILocation(line: 788, column: 843, scope: !6244, inlinedAt: !5881)
!6246 = !DILocation(line: 788, column: 843, scope: !6247, inlinedAt: !5881)
!6247 = !DILexicalBlockFile(scope: !6230, file: !4558, discriminator: 17)
!6248 = !DILocation(line: 788, column: 840, scope: !6247, inlinedAt: !5881)
!6249 = !DILocation(line: 790, column: 18, scope: !5878, inlinedAt: !5881)
!6250 = !DILocation(line: 790, column: 6, scope: !5878, inlinedAt: !5881)
!6251 = !DILocation(line: 790, column: 10, scope: !5878, inlinedAt: !5881)
!6252 = !DILocation(line: 790, column: 16, scope: !5878, inlinedAt: !5881)
!6253 = !DILocation(line: 792, column: 12, scope: !5878, inlinedAt: !5881)
!6254 = !DILocation(line: 172, column: 66, scope: !5882)
!6255 = !DILocation(line: 172, column: 23, scope: !5882)
!6256 = !DILocation(line: 174, column: 17, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !5884, file: !898, line: 174, column: 17)
!6258 = !DILocation(line: 174, column: 23, scope: !6257)
!6259 = !DILocation(line: 174, column: 27, scope: !6257)
!6260 = !DILocation(line: 174, column: 30, scope: !6261)
!6261 = !DILexicalBlockFile(scope: !6257, file: !898, discriminator: 1)
!6262 = !DILocation(line: 174, column: 36, scope: !6261)
!6263 = !DILocation(line: 174, column: 17, scope: !6261)
!6264 = !DILocation(line: 175, column: 24, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6257, file: !898, line: 174, column: 43)
!6266 = !DILocation(line: 175, column: 27, scope: !6265)
!6267 = !DILocation(line: 176, column: 24, scope: !6265)
!6268 = !DILocation(line: 175, column: 17, scope: !6265)
!6269 = !DILocation(line: 177, column: 17, scope: !6265)
!6270 = !DILocation(line: 179, column: 55, scope: !5884)
!6271 = !DILocation(line: 179, column: 42, scope: !5884)
!6272 = !DILocation(line: 179, column: 45, scope: !5884)
!6273 = !DILocation(line: 179, column: 36, scope: !5884)
!6274 = !DILocation(line: 179, column: 13, scope: !5884)
!6275 = !DILocation(line: 179, column: 16, scope: !5884)
!6276 = !DILocation(line: 179, column: 40, scope: !5884)
!6277 = !DILocation(line: 180, column: 9, scope: !5884)
!6278 = !DILocation(line: 152, column: 40, scope: !6279)
!6279 = !DILexicalBlockFile(scope: !5885, file: !898, discriminator: 2)
!6280 = !DILocation(line: 152, column: 9, scope: !6279)
!6281 = distinct !{!6281, !6282}
!6282 = !DILocation(line: 152, column: 9, scope: !5887)
!6283 = !DILocation(line: 181, column: 5, scope: !5887)
!6284 = !DILocation(line: 144, column: 38, scope: !6285)
!6285 = !DILexicalBlockFile(scope: !5888, file: !898, discriminator: 2)
!6286 = !DILocation(line: 144, column: 5, scope: !6285)
!6287 = distinct !{!6287, !6288}
!6288 = !DILocation(line: 144, column: 5, scope: !5869)
!6289 = !DILocation(line: 183, column: 5, scope: !5869)
!6290 = !DILocation(line: 184, column: 1, scope: !5869)
!6291 = distinct !DISubprogram(name: "on2avc_decode_quads", scope: !898, file: !898, line: 192, type: !6292, isLocal: true, isDefinition: true, scopeLine: 194, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!6292 = !DISubroutineType(types: !6293)
!6293 = !{!909, !1687, !4729, !931, !909, !909, !918}
!6294 = !DILocation(line: 66, column: 98, scope: !4790, inlinedAt: !6295)
!6295 = distinct !DILocation(line: 788, column: 601, scope: !5872, inlinedAt: !6296)
!6296 = distinct !DILocation(line: 198, column: 15, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6298, file: !898, line: 197, column: 39)
!6298 = distinct !DILexicalBlock(scope: !6299, file: !898, line: 197, column: 5)
!6299 = distinct !DILexicalBlock(scope: !6291, file: !898, line: 197, column: 5)
!6300 = !DILocation(line: 66, column: 98, scope: !4790, inlinedAt: !6301)
!6301 = distinct !DILocation(line: 788, column: 259, scope: !5892, inlinedAt: !6296)
!6302 = !DILocation(line: 66, column: 98, scope: !4790, inlinedAt: !6303)
!6303 = distinct !DILocation(line: 786, column: 16, scope: !5878, inlinedAt: !6296)
!6304 = !DILocation(line: 762, column: 74, scope: !5878, inlinedAt: !6296)
!6305 = !DILocation(line: 762, column: 87, scope: !5878, inlinedAt: !6296)
!6306 = !DILocation(line: 763, column: 42, scope: !5878, inlinedAt: !6296)
!6307 = !DILocation(line: 763, column: 52, scope: !5878, inlinedAt: !6296)
!6308 = !DILocation(line: 783, column: 9, scope: !5878, inlinedAt: !6296)
!6309 = !DILocation(line: 785, column: 18, scope: !5878, inlinedAt: !6296)
!6310 = !DILocation(line: 785, column: 78, scope: !5878, inlinedAt: !6296)
!6311 = !DILocation(line: 785, column: 101, scope: !5878, inlinedAt: !6296)
!6312 = !DILocation(line: 788, column: 14, scope: !5877, inlinedAt: !6296)
!6313 = !DILocation(line: 788, column: 17, scope: !5877, inlinedAt: !6296)
!6314 = !DILocation(line: 788, column: 39, scope: !5877, inlinedAt: !6296)
!6315 = !DILocalVariable(name: "c", arg: 1, scope: !6291, file: !898, line: 192, type: !1687)
!6316 = !DILocation(line: 192, column: 47, scope: !6291)
!6317 = !DILocalVariable(name: "gb", arg: 2, scope: !6291, file: !898, line: 192, type: !4729)
!6318 = !DILocation(line: 192, column: 65, scope: !6291)
!6319 = !DILocalVariable(name: "dst", arg: 3, scope: !6291, file: !898, line: 192, type: !931)
!6320 = !DILocation(line: 192, column: 76, scope: !6291)
!6321 = !DILocalVariable(name: "dst_size", arg: 4, scope: !6291, file: !898, line: 193, type: !909)
!6322 = !DILocation(line: 193, column: 36, scope: !6291)
!6323 = !DILocalVariable(name: "type", arg: 5, scope: !6291, file: !898, line: 193, type: !909)
!6324 = !DILocation(line: 193, column: 50, scope: !6291)
!6325 = !DILocalVariable(name: "band_scale", arg: 6, scope: !6291, file: !898, line: 193, type: !918)
!6326 = !DILocation(line: 193, column: 62, scope: !6291)
!6327 = !DILocalVariable(name: "i", scope: !6291, file: !898, line: 195, type: !909)
!6328 = !DILocation(line: 195, column: 9, scope: !6291)
!6329 = !DILocalVariable(name: "j", scope: !6291, file: !898, line: 195, type: !909)
!6330 = !DILocation(line: 195, column: 12, scope: !6291)
!6331 = !DILocalVariable(name: "val", scope: !6291, file: !898, line: 195, type: !909)
!6332 = !DILocation(line: 195, column: 15, scope: !6291)
!6333 = !DILocalVariable(name: "val1", scope: !6291, file: !898, line: 195, type: !909)
!6334 = !DILocation(line: 195, column: 20, scope: !6291)
!6335 = !DILocation(line: 197, column: 12, scope: !6299)
!6336 = !DILocation(line: 197, column: 10, scope: !6299)
!6337 = !DILocation(line: 197, column: 17, scope: !6338)
!6338 = !DILexicalBlockFile(scope: !6298, file: !898, discriminator: 1)
!6339 = !DILocation(line: 197, column: 21, scope: !6338)
!6340 = !DILocation(line: 197, column: 19, scope: !6338)
!6341 = !DILocation(line: 197, column: 5, scope: !6338)
!6342 = !DILocation(line: 198, column: 24, scope: !6297)
!6343 = !DILocation(line: 198, column: 38, scope: !6297)
!6344 = !DILocation(line: 198, column: 28, scope: !6297)
!6345 = !DILocation(line: 198, column: 31, scope: !6297)
!6346 = !DILocation(line: 198, column: 44, scope: !6297)
!6347 = !DILocation(line: 198, column: 15, scope: !6297)
!6348 = !DILocation(line: 785, column: 30, scope: !5878, inlinedAt: !6296)
!6349 = !DILocation(line: 785, column: 34, scope: !5878, inlinedAt: !6296)
!6350 = !DILocation(line: 785, column: 118, scope: !5878, inlinedAt: !6296)
!6351 = !DILocation(line: 785, column: 122, scope: !5878, inlinedAt: !6296)
!6352 = !DILocation(line: 786, column: 60, scope: !5878, inlinedAt: !6296)
!6353 = !DILocation(line: 786, column: 64, scope: !5878, inlinedAt: !6296)
!6354 = !DILocation(line: 786, column: 74, scope: !5878, inlinedAt: !6296)
!6355 = !DILocation(line: 786, column: 83, scope: !5878, inlinedAt: !6296)
!6356 = !DILocation(line: 786, column: 71, scope: !5878, inlinedAt: !6296)
!6357 = !DILocation(line: 786, column: 92, scope: !5878, inlinedAt: !6296)
!6358 = !DILocation(line: 786, column: 16, scope: !5878, inlinedAt: !6296)
!6359 = !DILocation(line: 68, column: 16, scope: !4790, inlinedAt: !6303)
!6360 = !DILocation(line: 68, column: 19, scope: !4790, inlinedAt: !6303)
!6361 = !DILocation(line: 68, column: 24, scope: !4790, inlinedAt: !6303)
!6362 = !DILocation(line: 68, column: 38, scope: !4790, inlinedAt: !6303)
!6363 = !DILocation(line: 68, column: 41, scope: !4790, inlinedAt: !6303)
!6364 = !DILocation(line: 68, column: 46, scope: !4790, inlinedAt: !6303)
!6365 = !DILocation(line: 68, column: 34, scope: !4790, inlinedAt: !6303)
!6366 = !DILocation(line: 68, column: 57, scope: !4790, inlinedAt: !6303)
!6367 = !DILocation(line: 68, column: 69, scope: !4790, inlinedAt: !6303)
!6368 = !DILocation(line: 68, column: 72, scope: !4790, inlinedAt: !6303)
!6369 = !DILocation(line: 68, column: 79, scope: !4790, inlinedAt: !6303)
!6370 = !DILocation(line: 68, column: 84, scope: !4790, inlinedAt: !6303)
!6371 = !DILocation(line: 68, column: 99, scope: !4790, inlinedAt: !6303)
!6372 = !DILocation(line: 68, column: 102, scope: !4790, inlinedAt: !6303)
!6373 = !DILocation(line: 68, column: 109, scope: !4790, inlinedAt: !6303)
!6374 = !DILocation(line: 68, column: 114, scope: !4790, inlinedAt: !6303)
!6375 = !DILocation(line: 68, column: 94, scope: !4790, inlinedAt: !6303)
!6376 = !DILocation(line: 68, column: 63, scope: !4790, inlinedAt: !6303)
!6377 = !DILocation(line: 786, column: 100, scope: !5878, inlinedAt: !6296)
!6378 = !DILocation(line: 786, column: 109, scope: !5878, inlinedAt: !6296)
!6379 = !DILocation(line: 786, column: 96, scope: !5878, inlinedAt: !6296)
!6380 = !DILocation(line: 786, column: 14, scope: !5878, inlinedAt: !6296)
!6381 = !DILocation(line: 788, column: 64, scope: !6077, inlinedAt: !6296)
!6382 = !DILocation(line: 788, column: 74, scope: !6077, inlinedAt: !6296)
!6383 = !DILocation(line: 788, column: 54, scope: !6077, inlinedAt: !6296)
!6384 = !DILocation(line: 788, column: 52, scope: !6077, inlinedAt: !6296)
!6385 = !DILocation(line: 788, column: 94, scope: !6077, inlinedAt: !6296)
!6386 = !DILocation(line: 788, column: 88, scope: !6077, inlinedAt: !6296)
!6387 = !DILocation(line: 788, column: 86, scope: !6077, inlinedAt: !6296)
!6388 = !DILocation(line: 788, column: 115, scope: !6077, inlinedAt: !6296)
!6389 = !DILocation(line: 788, column: 109, scope: !6077, inlinedAt: !6296)
!6390 = !DILocation(line: 788, column: 107, scope: !6077, inlinedAt: !6296)
!6391 = !DILocation(line: 788, column: 130, scope: !6077, inlinedAt: !6296)
!6392 = !DILocation(line: 788, column: 140, scope: !6077, inlinedAt: !6296)
!6393 = !DILocation(line: 788, column: 144, scope: !6077, inlinedAt: !6296)
!6394 = !DILocation(line: 788, column: 147, scope: !6091, inlinedAt: !6296)
!6395 = !DILocation(line: 788, column: 149, scope: !6091, inlinedAt: !6296)
!6396 = !DILocation(line: 788, column: 130, scope: !6091, inlinedAt: !6296)
!6397 = !DILocation(line: 788, column: 169, scope: !6095, inlinedAt: !6296)
!6398 = !DILocation(line: 788, column: 187, scope: !6095, inlinedAt: !6296)
!6399 = !DILocation(line: 788, column: 199, scope: !6095, inlinedAt: !6296)
!6400 = !DILocation(line: 788, column: 196, scope: !6095, inlinedAt: !6296)
!6401 = !DILocation(line: 788, column: 184, scope: !6095, inlinedAt: !6296)
!6402 = !DILocation(line: 788, column: 168, scope: !6095, inlinedAt: !6296)
!6403 = !DILocation(line: 788, column: 209, scope: !6102, inlinedAt: !6296)
!6404 = !DILocation(line: 788, column: 221, scope: !6102, inlinedAt: !6296)
!6405 = !DILocation(line: 788, column: 218, scope: !6102, inlinedAt: !6296)
!6406 = !DILocation(line: 788, column: 168, scope: !6102, inlinedAt: !6296)
!6407 = !DILocation(line: 788, column: 231, scope: !6107, inlinedAt: !6296)
!6408 = !DILocation(line: 788, column: 168, scope: !6107, inlinedAt: !6296)
!6409 = !DILocation(line: 788, column: 168, scope: !5892, inlinedAt: !6296)
!6410 = !DILocation(line: 788, column: 165, scope: !5892, inlinedAt: !6296)
!6411 = !DILocation(line: 788, column: 303, scope: !5892, inlinedAt: !6296)
!6412 = !DILocation(line: 788, column: 307, scope: !5892, inlinedAt: !6296)
!6413 = !DILocation(line: 788, column: 317, scope: !5892, inlinedAt: !6296)
!6414 = !DILocation(line: 788, column: 326, scope: !5892, inlinedAt: !6296)
!6415 = !DILocation(line: 788, column: 314, scope: !5892, inlinedAt: !6296)
!6416 = !DILocation(line: 788, column: 335, scope: !5892, inlinedAt: !6296)
!6417 = !DILocation(line: 788, column: 259, scope: !5892, inlinedAt: !6296)
!6418 = !DILocation(line: 68, column: 16, scope: !4790, inlinedAt: !6301)
!6419 = !DILocation(line: 68, column: 19, scope: !4790, inlinedAt: !6301)
!6420 = !DILocation(line: 68, column: 24, scope: !4790, inlinedAt: !6301)
!6421 = !DILocation(line: 68, column: 38, scope: !4790, inlinedAt: !6301)
!6422 = !DILocation(line: 68, column: 41, scope: !4790, inlinedAt: !6301)
!6423 = !DILocation(line: 68, column: 46, scope: !4790, inlinedAt: !6301)
!6424 = !DILocation(line: 68, column: 34, scope: !4790, inlinedAt: !6301)
!6425 = !DILocation(line: 68, column: 57, scope: !4790, inlinedAt: !6301)
!6426 = !DILocation(line: 68, column: 69, scope: !4790, inlinedAt: !6301)
!6427 = !DILocation(line: 68, column: 72, scope: !4790, inlinedAt: !6301)
!6428 = !DILocation(line: 68, column: 79, scope: !4790, inlinedAt: !6301)
!6429 = !DILocation(line: 68, column: 84, scope: !4790, inlinedAt: !6301)
!6430 = !DILocation(line: 68, column: 99, scope: !4790, inlinedAt: !6301)
!6431 = !DILocation(line: 68, column: 102, scope: !4790, inlinedAt: !6301)
!6432 = !DILocation(line: 68, column: 109, scope: !4790, inlinedAt: !6301)
!6433 = !DILocation(line: 68, column: 114, scope: !4790, inlinedAt: !6301)
!6434 = !DILocation(line: 68, column: 94, scope: !4790, inlinedAt: !6301)
!6435 = !DILocation(line: 68, column: 63, scope: !4790, inlinedAt: !6301)
!6436 = !DILocation(line: 788, column: 343, scope: !5892, inlinedAt: !6296)
!6437 = !DILocation(line: 788, column: 352, scope: !5892, inlinedAt: !6296)
!6438 = !DILocation(line: 788, column: 339, scope: !5892, inlinedAt: !6296)
!6439 = !DILocation(line: 788, column: 257, scope: !5892, inlinedAt: !6296)
!6440 = !DILocation(line: 788, column: 369, scope: !5892, inlinedAt: !6296)
!6441 = !DILocation(line: 788, column: 368, scope: !5892, inlinedAt: !6296)
!6442 = !DILocation(line: 788, column: 366, scope: !5892, inlinedAt: !6296)
!6443 = !DILocation(line: 788, column: 390, scope: !5892, inlinedAt: !6296)
!6444 = !DILocation(line: 788, column: 400, scope: !5892, inlinedAt: !6296)
!6445 = !DILocation(line: 788, column: 380, scope: !6146, inlinedAt: !6296)
!6446 = !DILocation(line: 788, column: 411, scope: !5892, inlinedAt: !6296)
!6447 = !DILocation(line: 788, column: 409, scope: !5892, inlinedAt: !6296)
!6448 = !DILocation(line: 788, column: 378, scope: !5892, inlinedAt: !6296)
!6449 = !DILocation(line: 788, column: 430, scope: !5892, inlinedAt: !6296)
!6450 = !DILocation(line: 788, column: 424, scope: !5892, inlinedAt: !6296)
!6451 = !DILocation(line: 788, column: 422, scope: !5892, inlinedAt: !6296)
!6452 = !DILocation(line: 788, column: 451, scope: !5892, inlinedAt: !6296)
!6453 = !DILocation(line: 788, column: 445, scope: !5892, inlinedAt: !6296)
!6454 = !DILocation(line: 788, column: 443, scope: !5892, inlinedAt: !6296)
!6455 = !DILocation(line: 788, column: 466, scope: !5892, inlinedAt: !6296)
!6456 = !DILocation(line: 788, column: 476, scope: !5892, inlinedAt: !6296)
!6457 = !DILocation(line: 788, column: 480, scope: !5892, inlinedAt: !6296)
!6458 = !DILocation(line: 788, column: 483, scope: !6160, inlinedAt: !6296)
!6459 = !DILocation(line: 788, column: 485, scope: !6160, inlinedAt: !6296)
!6460 = !DILocation(line: 788, column: 466, scope: !6160, inlinedAt: !6296)
!6461 = !DILocation(line: 788, column: 505, scope: !6164, inlinedAt: !6296)
!6462 = !DILocation(line: 788, column: 523, scope: !6164, inlinedAt: !6296)
!6463 = !DILocation(line: 788, column: 535, scope: !6164, inlinedAt: !6296)
!6464 = !DILocation(line: 788, column: 532, scope: !6164, inlinedAt: !6296)
!6465 = !DILocation(line: 788, column: 520, scope: !6164, inlinedAt: !6296)
!6466 = !DILocation(line: 788, column: 504, scope: !6164, inlinedAt: !6296)
!6467 = !DILocation(line: 788, column: 548, scope: !6171, inlinedAt: !6296)
!6468 = !DILocation(line: 788, column: 560, scope: !6171, inlinedAt: !6296)
!6469 = !DILocation(line: 788, column: 557, scope: !6171, inlinedAt: !6296)
!6470 = !DILocation(line: 788, column: 504, scope: !6171, inlinedAt: !6296)
!6471 = !DILocation(line: 788, column: 573, scope: !6176, inlinedAt: !6296)
!6472 = !DILocation(line: 788, column: 504, scope: !6176, inlinedAt: !6296)
!6473 = !DILocation(line: 788, column: 504, scope: !5872, inlinedAt: !6296)
!6474 = !DILocation(line: 788, column: 501, scope: !5872, inlinedAt: !6296)
!6475 = !DILocation(line: 788, column: 645, scope: !5872, inlinedAt: !6296)
!6476 = !DILocation(line: 788, column: 649, scope: !5872, inlinedAt: !6296)
!6477 = !DILocation(line: 788, column: 659, scope: !5872, inlinedAt: !6296)
!6478 = !DILocation(line: 788, column: 668, scope: !5872, inlinedAt: !6296)
!6479 = !DILocation(line: 788, column: 656, scope: !5872, inlinedAt: !6296)
!6480 = !DILocation(line: 788, column: 677, scope: !5872, inlinedAt: !6296)
!6481 = !DILocation(line: 788, column: 601, scope: !5872, inlinedAt: !6296)
!6482 = !DILocation(line: 68, column: 16, scope: !4790, inlinedAt: !6295)
!6483 = !DILocation(line: 68, column: 19, scope: !4790, inlinedAt: !6295)
!6484 = !DILocation(line: 68, column: 24, scope: !4790, inlinedAt: !6295)
!6485 = !DILocation(line: 68, column: 38, scope: !4790, inlinedAt: !6295)
!6486 = !DILocation(line: 68, column: 41, scope: !4790, inlinedAt: !6295)
!6487 = !DILocation(line: 68, column: 46, scope: !4790, inlinedAt: !6295)
!6488 = !DILocation(line: 68, column: 34, scope: !4790, inlinedAt: !6295)
!6489 = !DILocation(line: 68, column: 57, scope: !4790, inlinedAt: !6295)
!6490 = !DILocation(line: 68, column: 69, scope: !4790, inlinedAt: !6295)
!6491 = !DILocation(line: 68, column: 72, scope: !4790, inlinedAt: !6295)
!6492 = !DILocation(line: 68, column: 79, scope: !4790, inlinedAt: !6295)
!6493 = !DILocation(line: 68, column: 84, scope: !4790, inlinedAt: !6295)
!6494 = !DILocation(line: 68, column: 99, scope: !4790, inlinedAt: !6295)
!6495 = !DILocation(line: 68, column: 102, scope: !4790, inlinedAt: !6295)
!6496 = !DILocation(line: 68, column: 109, scope: !4790, inlinedAt: !6295)
!6497 = !DILocation(line: 68, column: 114, scope: !4790, inlinedAt: !6295)
!6498 = !DILocation(line: 68, column: 94, scope: !4790, inlinedAt: !6295)
!6499 = !DILocation(line: 68, column: 63, scope: !4790, inlinedAt: !6295)
!6500 = !DILocation(line: 788, column: 685, scope: !5872, inlinedAt: !6296)
!6501 = !DILocation(line: 788, column: 694, scope: !5872, inlinedAt: !6296)
!6502 = !DILocation(line: 788, column: 681, scope: !5872, inlinedAt: !6296)
!6503 = !DILocation(line: 788, column: 599, scope: !5872, inlinedAt: !6296)
!6504 = !DILocation(line: 788, column: 711, scope: !5872, inlinedAt: !6296)
!6505 = !DILocation(line: 788, column: 710, scope: !5872, inlinedAt: !6296)
!6506 = !DILocation(line: 788, column: 708, scope: !5872, inlinedAt: !6296)
!6507 = !DILocation(line: 788, column: 732, scope: !5872, inlinedAt: !6296)
!6508 = !DILocation(line: 788, column: 742, scope: !5872, inlinedAt: !6296)
!6509 = !DILocation(line: 788, column: 722, scope: !6215, inlinedAt: !6296)
!6510 = !DILocation(line: 788, column: 753, scope: !5872, inlinedAt: !6296)
!6511 = !DILocation(line: 788, column: 751, scope: !5872, inlinedAt: !6296)
!6512 = !DILocation(line: 788, column: 720, scope: !5872, inlinedAt: !6296)
!6513 = !DILocation(line: 788, column: 772, scope: !5872, inlinedAt: !6296)
!6514 = !DILocation(line: 788, column: 766, scope: !5872, inlinedAt: !6296)
!6515 = !DILocation(line: 788, column: 764, scope: !5872, inlinedAt: !6296)
!6516 = !DILocation(line: 788, column: 793, scope: !5872, inlinedAt: !6296)
!6517 = !DILocation(line: 788, column: 787, scope: !5872, inlinedAt: !6296)
!6518 = !DILocation(line: 788, column: 785, scope: !5872, inlinedAt: !6296)
!6519 = !DILocation(line: 788, column: 804, scope: !5872, inlinedAt: !6296)
!6520 = !DILocation(line: 788, column: 806, scope: !6227, inlinedAt: !6296)
!6521 = !DILocation(line: 788, column: 827, scope: !6229, inlinedAt: !6296)
!6522 = !DILocation(line: 788, column: 822, scope: !6229, inlinedAt: !6296)
!6523 = !DILocation(line: 788, column: 844, scope: !6229, inlinedAt: !6296)
!6524 = !DILocation(line: 788, column: 862, scope: !6229, inlinedAt: !6296)
!6525 = !DILocation(line: 788, column: 874, scope: !6229, inlinedAt: !6296)
!6526 = !DILocation(line: 788, column: 871, scope: !6229, inlinedAt: !6296)
!6527 = !DILocation(line: 788, column: 859, scope: !6229, inlinedAt: !6296)
!6528 = !DILocation(line: 788, column: 843, scope: !6229, inlinedAt: !6296)
!6529 = !DILocation(line: 788, column: 881, scope: !6239, inlinedAt: !6296)
!6530 = !DILocation(line: 788, column: 893, scope: !6239, inlinedAt: !6296)
!6531 = !DILocation(line: 788, column: 890, scope: !6239, inlinedAt: !6296)
!6532 = !DILocation(line: 788, column: 843, scope: !6239, inlinedAt: !6296)
!6533 = !DILocation(line: 788, column: 900, scope: !6244, inlinedAt: !6296)
!6534 = !DILocation(line: 788, column: 843, scope: !6244, inlinedAt: !6296)
!6535 = !DILocation(line: 788, column: 843, scope: !6247, inlinedAt: !6296)
!6536 = !DILocation(line: 788, column: 840, scope: !6247, inlinedAt: !6296)
!6537 = !DILocation(line: 790, column: 18, scope: !5878, inlinedAt: !6296)
!6538 = !DILocation(line: 790, column: 6, scope: !5878, inlinedAt: !6296)
!6539 = !DILocation(line: 790, column: 10, scope: !5878, inlinedAt: !6296)
!6540 = !DILocation(line: 790, column: 16, scope: !5878, inlinedAt: !6296)
!6541 = !DILocation(line: 792, column: 12, scope: !5878, inlinedAt: !6296)
!6542 = !DILocation(line: 198, column: 13, scope: !6297)
!6543 = !DILocation(line: 200, column: 16, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6297, file: !898, line: 200, column: 9)
!6545 = !DILocation(line: 200, column: 14, scope: !6544)
!6546 = !DILocation(line: 200, column: 21, scope: !6547)
!6547 = !DILexicalBlockFile(scope: !6548, file: !898, discriminator: 1)
!6548 = distinct !DILexicalBlock(scope: !6544, file: !898, line: 200, column: 9)
!6549 = !DILocation(line: 200, column: 23, scope: !6547)
!6550 = !DILocation(line: 200, column: 9, scope: !6547)
!6551 = !DILocation(line: 201, column: 33, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6548, file: !898, line: 200, column: 33)
!6553 = !DILocation(line: 201, column: 46, scope: !6552)
!6554 = !DILocation(line: 201, column: 48, scope: !6552)
!6555 = !DILocation(line: 201, column: 44, scope: !6552)
!6556 = !DILocation(line: 201, column: 37, scope: !6552)
!6557 = !DILocation(line: 201, column: 54, scope: !6552)
!6558 = !DILocation(line: 201, column: 20, scope: !6552)
!6559 = !DILocation(line: 201, column: 18, scope: !6552)
!6560 = !DILocation(line: 202, column: 35, scope: !6552)
!6561 = !DILocation(line: 202, column: 41, scope: !6552)
!6562 = !DILocation(line: 202, column: 22, scope: !6552)
!6563 = !DILocation(line: 202, column: 17, scope: !6552)
!6564 = !DILocation(line: 202, column: 20, scope: !6552)
!6565 = !DILocation(line: 203, column: 9, scope: !6552)
!6566 = !DILocation(line: 200, column: 29, scope: !6567)
!6567 = !DILexicalBlockFile(scope: !6548, file: !898, discriminator: 2)
!6568 = !DILocation(line: 200, column: 9, scope: !6567)
!6569 = distinct !{!6569, !6570}
!6570 = !DILocation(line: 200, column: 9, scope: !6297)
!6571 = !DILocation(line: 204, column: 5, scope: !6297)
!6572 = !DILocation(line: 197, column: 33, scope: !6573)
!6573 = !DILexicalBlockFile(scope: !6298, file: !898, discriminator: 2)
!6574 = !DILocation(line: 197, column: 5, scope: !6573)
!6575 = distinct !{!6575, !6576}
!6576 = !DILocation(line: 197, column: 5, scope: !6291)
!6577 = !DILocation(line: 206, column: 5, scope: !6291)
!6578 = distinct !DISubprogram(name: "on2avc_decode_pairs", scope: !898, file: !898, line: 225, type: !6292, isLocal: true, isDefinition: true, scopeLine: 227, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!6579 = !DILocation(line: 66, column: 98, scope: !4790, inlinedAt: !6580)
!6580 = distinct !DILocation(line: 788, column: 601, scope: !5872, inlinedAt: !6581)
!6581 = distinct !DILocation(line: 231, column: 15, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6583, file: !898, line: 230, column: 39)
!6583 = distinct !DILexicalBlock(scope: !6584, file: !898, line: 230, column: 5)
!6584 = distinct !DILexicalBlock(scope: !6578, file: !898, line: 230, column: 5)
!6585 = !DILocation(line: 66, column: 98, scope: !4790, inlinedAt: !6586)
!6586 = distinct !DILocation(line: 788, column: 259, scope: !5892, inlinedAt: !6581)
!6587 = !DILocation(line: 66, column: 98, scope: !4790, inlinedAt: !6588)
!6588 = distinct !DILocation(line: 786, column: 16, scope: !5878, inlinedAt: !6581)
!6589 = !DILocation(line: 762, column: 74, scope: !5878, inlinedAt: !6581)
!6590 = !DILocation(line: 762, column: 87, scope: !5878, inlinedAt: !6581)
!6591 = !DILocation(line: 763, column: 42, scope: !5878, inlinedAt: !6581)
!6592 = !DILocation(line: 763, column: 52, scope: !5878, inlinedAt: !6581)
!6593 = !DILocation(line: 783, column: 9, scope: !5878, inlinedAt: !6581)
!6594 = !DILocation(line: 785, column: 18, scope: !5878, inlinedAt: !6581)
!6595 = !DILocation(line: 785, column: 78, scope: !5878, inlinedAt: !6581)
!6596 = !DILocation(line: 785, column: 101, scope: !5878, inlinedAt: !6581)
!6597 = !DILocation(line: 788, column: 14, scope: !5877, inlinedAt: !6581)
!6598 = !DILocation(line: 788, column: 17, scope: !5877, inlinedAt: !6581)
!6599 = !DILocation(line: 788, column: 39, scope: !5877, inlinedAt: !6581)
!6600 = !DILocalVariable(name: "c", arg: 1, scope: !6578, file: !898, line: 225, type: !1687)
!6601 = !DILocation(line: 225, column: 47, scope: !6578)
!6602 = !DILocalVariable(name: "gb", arg: 2, scope: !6578, file: !898, line: 225, type: !4729)
!6603 = !DILocation(line: 225, column: 65, scope: !6578)
!6604 = !DILocalVariable(name: "dst", arg: 3, scope: !6578, file: !898, line: 225, type: !931)
!6605 = !DILocation(line: 225, column: 76, scope: !6578)
!6606 = !DILocalVariable(name: "dst_size", arg: 4, scope: !6578, file: !898, line: 226, type: !909)
!6607 = !DILocation(line: 226, column: 36, scope: !6578)
!6608 = !DILocalVariable(name: "type", arg: 5, scope: !6578, file: !898, line: 226, type: !909)
!6609 = !DILocation(line: 226, column: 50, scope: !6578)
!6610 = !DILocalVariable(name: "band_scale", arg: 6, scope: !6578, file: !898, line: 226, type: !918)
!6611 = !DILocation(line: 226, column: 62, scope: !6578)
!6612 = !DILocalVariable(name: "i", scope: !6578, file: !898, line: 228, type: !909)
!6613 = !DILocation(line: 228, column: 9, scope: !6578)
!6614 = !DILocalVariable(name: "val", scope: !6578, file: !898, line: 228, type: !909)
!6615 = !DILocation(line: 228, column: 12, scope: !6578)
!6616 = !DILocalVariable(name: "val1", scope: !6578, file: !898, line: 228, type: !909)
!6617 = !DILocation(line: 228, column: 17, scope: !6578)
!6618 = !DILocalVariable(name: "val2", scope: !6578, file: !898, line: 228, type: !909)
!6619 = !DILocation(line: 228, column: 23, scope: !6578)
!6620 = !DILocalVariable(name: "sign", scope: !6578, file: !898, line: 228, type: !909)
!6621 = !DILocation(line: 228, column: 29, scope: !6578)
!6622 = !DILocation(line: 230, column: 12, scope: !6584)
!6623 = !DILocation(line: 230, column: 10, scope: !6584)
!6624 = !DILocation(line: 230, column: 17, scope: !6625)
!6625 = !DILexicalBlockFile(scope: !6583, file: !898, discriminator: 1)
!6626 = !DILocation(line: 230, column: 21, scope: !6625)
!6627 = !DILocation(line: 230, column: 19, scope: !6625)
!6628 = !DILocation(line: 230, column: 5, scope: !6625)
!6629 = !DILocation(line: 231, column: 24, scope: !6582)
!6630 = !DILocation(line: 231, column: 38, scope: !6582)
!6631 = !DILocation(line: 231, column: 28, scope: !6582)
!6632 = !DILocation(line: 231, column: 31, scope: !6582)
!6633 = !DILocation(line: 231, column: 44, scope: !6582)
!6634 = !DILocation(line: 231, column: 15, scope: !6582)
!6635 = !DILocation(line: 785, column: 30, scope: !5878, inlinedAt: !6581)
!6636 = !DILocation(line: 785, column: 34, scope: !5878, inlinedAt: !6581)
!6637 = !DILocation(line: 785, column: 118, scope: !5878, inlinedAt: !6581)
!6638 = !DILocation(line: 785, column: 122, scope: !5878, inlinedAt: !6581)
!6639 = !DILocation(line: 786, column: 60, scope: !5878, inlinedAt: !6581)
!6640 = !DILocation(line: 786, column: 64, scope: !5878, inlinedAt: !6581)
!6641 = !DILocation(line: 786, column: 74, scope: !5878, inlinedAt: !6581)
!6642 = !DILocation(line: 786, column: 83, scope: !5878, inlinedAt: !6581)
!6643 = !DILocation(line: 786, column: 71, scope: !5878, inlinedAt: !6581)
!6644 = !DILocation(line: 786, column: 92, scope: !5878, inlinedAt: !6581)
!6645 = !DILocation(line: 786, column: 16, scope: !5878, inlinedAt: !6581)
!6646 = !DILocation(line: 68, column: 16, scope: !4790, inlinedAt: !6588)
!6647 = !DILocation(line: 68, column: 19, scope: !4790, inlinedAt: !6588)
!6648 = !DILocation(line: 68, column: 24, scope: !4790, inlinedAt: !6588)
!6649 = !DILocation(line: 68, column: 38, scope: !4790, inlinedAt: !6588)
!6650 = !DILocation(line: 68, column: 41, scope: !4790, inlinedAt: !6588)
!6651 = !DILocation(line: 68, column: 46, scope: !4790, inlinedAt: !6588)
!6652 = !DILocation(line: 68, column: 34, scope: !4790, inlinedAt: !6588)
!6653 = !DILocation(line: 68, column: 57, scope: !4790, inlinedAt: !6588)
!6654 = !DILocation(line: 68, column: 69, scope: !4790, inlinedAt: !6588)
!6655 = !DILocation(line: 68, column: 72, scope: !4790, inlinedAt: !6588)
!6656 = !DILocation(line: 68, column: 79, scope: !4790, inlinedAt: !6588)
!6657 = !DILocation(line: 68, column: 84, scope: !4790, inlinedAt: !6588)
!6658 = !DILocation(line: 68, column: 99, scope: !4790, inlinedAt: !6588)
!6659 = !DILocation(line: 68, column: 102, scope: !4790, inlinedAt: !6588)
!6660 = !DILocation(line: 68, column: 109, scope: !4790, inlinedAt: !6588)
!6661 = !DILocation(line: 68, column: 114, scope: !4790, inlinedAt: !6588)
!6662 = !DILocation(line: 68, column: 94, scope: !4790, inlinedAt: !6588)
!6663 = !DILocation(line: 68, column: 63, scope: !4790, inlinedAt: !6588)
!6664 = !DILocation(line: 786, column: 100, scope: !5878, inlinedAt: !6581)
!6665 = !DILocation(line: 786, column: 109, scope: !5878, inlinedAt: !6581)
!6666 = !DILocation(line: 786, column: 96, scope: !5878, inlinedAt: !6581)
!6667 = !DILocation(line: 786, column: 14, scope: !5878, inlinedAt: !6581)
!6668 = !DILocation(line: 788, column: 64, scope: !6077, inlinedAt: !6581)
!6669 = !DILocation(line: 788, column: 74, scope: !6077, inlinedAt: !6581)
!6670 = !DILocation(line: 788, column: 54, scope: !6077, inlinedAt: !6581)
!6671 = !DILocation(line: 788, column: 52, scope: !6077, inlinedAt: !6581)
!6672 = !DILocation(line: 788, column: 94, scope: !6077, inlinedAt: !6581)
!6673 = !DILocation(line: 788, column: 88, scope: !6077, inlinedAt: !6581)
!6674 = !DILocation(line: 788, column: 86, scope: !6077, inlinedAt: !6581)
!6675 = !DILocation(line: 788, column: 115, scope: !6077, inlinedAt: !6581)
!6676 = !DILocation(line: 788, column: 109, scope: !6077, inlinedAt: !6581)
!6677 = !DILocation(line: 788, column: 107, scope: !6077, inlinedAt: !6581)
!6678 = !DILocation(line: 788, column: 130, scope: !6077, inlinedAt: !6581)
!6679 = !DILocation(line: 788, column: 140, scope: !6077, inlinedAt: !6581)
!6680 = !DILocation(line: 788, column: 144, scope: !6077, inlinedAt: !6581)
!6681 = !DILocation(line: 788, column: 147, scope: !6091, inlinedAt: !6581)
!6682 = !DILocation(line: 788, column: 149, scope: !6091, inlinedAt: !6581)
!6683 = !DILocation(line: 788, column: 130, scope: !6091, inlinedAt: !6581)
!6684 = !DILocation(line: 788, column: 169, scope: !6095, inlinedAt: !6581)
!6685 = !DILocation(line: 788, column: 187, scope: !6095, inlinedAt: !6581)
!6686 = !DILocation(line: 788, column: 199, scope: !6095, inlinedAt: !6581)
!6687 = !DILocation(line: 788, column: 196, scope: !6095, inlinedAt: !6581)
!6688 = !DILocation(line: 788, column: 184, scope: !6095, inlinedAt: !6581)
!6689 = !DILocation(line: 788, column: 168, scope: !6095, inlinedAt: !6581)
!6690 = !DILocation(line: 788, column: 209, scope: !6102, inlinedAt: !6581)
!6691 = !DILocation(line: 788, column: 221, scope: !6102, inlinedAt: !6581)
!6692 = !DILocation(line: 788, column: 218, scope: !6102, inlinedAt: !6581)
!6693 = !DILocation(line: 788, column: 168, scope: !6102, inlinedAt: !6581)
!6694 = !DILocation(line: 788, column: 231, scope: !6107, inlinedAt: !6581)
!6695 = !DILocation(line: 788, column: 168, scope: !6107, inlinedAt: !6581)
!6696 = !DILocation(line: 788, column: 168, scope: !5892, inlinedAt: !6581)
!6697 = !DILocation(line: 788, column: 165, scope: !5892, inlinedAt: !6581)
!6698 = !DILocation(line: 788, column: 303, scope: !5892, inlinedAt: !6581)
!6699 = !DILocation(line: 788, column: 307, scope: !5892, inlinedAt: !6581)
!6700 = !DILocation(line: 788, column: 317, scope: !5892, inlinedAt: !6581)
!6701 = !DILocation(line: 788, column: 326, scope: !5892, inlinedAt: !6581)
!6702 = !DILocation(line: 788, column: 314, scope: !5892, inlinedAt: !6581)
!6703 = !DILocation(line: 788, column: 335, scope: !5892, inlinedAt: !6581)
!6704 = !DILocation(line: 788, column: 259, scope: !5892, inlinedAt: !6581)
!6705 = !DILocation(line: 68, column: 16, scope: !4790, inlinedAt: !6586)
!6706 = !DILocation(line: 68, column: 19, scope: !4790, inlinedAt: !6586)
!6707 = !DILocation(line: 68, column: 24, scope: !4790, inlinedAt: !6586)
!6708 = !DILocation(line: 68, column: 38, scope: !4790, inlinedAt: !6586)
!6709 = !DILocation(line: 68, column: 41, scope: !4790, inlinedAt: !6586)
!6710 = !DILocation(line: 68, column: 46, scope: !4790, inlinedAt: !6586)
!6711 = !DILocation(line: 68, column: 34, scope: !4790, inlinedAt: !6586)
!6712 = !DILocation(line: 68, column: 57, scope: !4790, inlinedAt: !6586)
!6713 = !DILocation(line: 68, column: 69, scope: !4790, inlinedAt: !6586)
!6714 = !DILocation(line: 68, column: 72, scope: !4790, inlinedAt: !6586)
!6715 = !DILocation(line: 68, column: 79, scope: !4790, inlinedAt: !6586)
!6716 = !DILocation(line: 68, column: 84, scope: !4790, inlinedAt: !6586)
!6717 = !DILocation(line: 68, column: 99, scope: !4790, inlinedAt: !6586)
!6718 = !DILocation(line: 68, column: 102, scope: !4790, inlinedAt: !6586)
!6719 = !DILocation(line: 68, column: 109, scope: !4790, inlinedAt: !6586)
!6720 = !DILocation(line: 68, column: 114, scope: !4790, inlinedAt: !6586)
!6721 = !DILocation(line: 68, column: 94, scope: !4790, inlinedAt: !6586)
!6722 = !DILocation(line: 68, column: 63, scope: !4790, inlinedAt: !6586)
!6723 = !DILocation(line: 788, column: 343, scope: !5892, inlinedAt: !6581)
!6724 = !DILocation(line: 788, column: 352, scope: !5892, inlinedAt: !6581)
!6725 = !DILocation(line: 788, column: 339, scope: !5892, inlinedAt: !6581)
!6726 = !DILocation(line: 788, column: 257, scope: !5892, inlinedAt: !6581)
!6727 = !DILocation(line: 788, column: 369, scope: !5892, inlinedAt: !6581)
!6728 = !DILocation(line: 788, column: 368, scope: !5892, inlinedAt: !6581)
!6729 = !DILocation(line: 788, column: 366, scope: !5892, inlinedAt: !6581)
!6730 = !DILocation(line: 788, column: 390, scope: !5892, inlinedAt: !6581)
!6731 = !DILocation(line: 788, column: 400, scope: !5892, inlinedAt: !6581)
!6732 = !DILocation(line: 788, column: 380, scope: !6146, inlinedAt: !6581)
!6733 = !DILocation(line: 788, column: 411, scope: !5892, inlinedAt: !6581)
!6734 = !DILocation(line: 788, column: 409, scope: !5892, inlinedAt: !6581)
!6735 = !DILocation(line: 788, column: 378, scope: !5892, inlinedAt: !6581)
!6736 = !DILocation(line: 788, column: 430, scope: !5892, inlinedAt: !6581)
!6737 = !DILocation(line: 788, column: 424, scope: !5892, inlinedAt: !6581)
!6738 = !DILocation(line: 788, column: 422, scope: !5892, inlinedAt: !6581)
!6739 = !DILocation(line: 788, column: 451, scope: !5892, inlinedAt: !6581)
!6740 = !DILocation(line: 788, column: 445, scope: !5892, inlinedAt: !6581)
!6741 = !DILocation(line: 788, column: 443, scope: !5892, inlinedAt: !6581)
!6742 = !DILocation(line: 788, column: 466, scope: !5892, inlinedAt: !6581)
!6743 = !DILocation(line: 788, column: 476, scope: !5892, inlinedAt: !6581)
!6744 = !DILocation(line: 788, column: 480, scope: !5892, inlinedAt: !6581)
!6745 = !DILocation(line: 788, column: 483, scope: !6160, inlinedAt: !6581)
!6746 = !DILocation(line: 788, column: 485, scope: !6160, inlinedAt: !6581)
!6747 = !DILocation(line: 788, column: 466, scope: !6160, inlinedAt: !6581)
!6748 = !DILocation(line: 788, column: 505, scope: !6164, inlinedAt: !6581)
!6749 = !DILocation(line: 788, column: 523, scope: !6164, inlinedAt: !6581)
!6750 = !DILocation(line: 788, column: 535, scope: !6164, inlinedAt: !6581)
!6751 = !DILocation(line: 788, column: 532, scope: !6164, inlinedAt: !6581)
!6752 = !DILocation(line: 788, column: 520, scope: !6164, inlinedAt: !6581)
!6753 = !DILocation(line: 788, column: 504, scope: !6164, inlinedAt: !6581)
!6754 = !DILocation(line: 788, column: 548, scope: !6171, inlinedAt: !6581)
!6755 = !DILocation(line: 788, column: 560, scope: !6171, inlinedAt: !6581)
!6756 = !DILocation(line: 788, column: 557, scope: !6171, inlinedAt: !6581)
!6757 = !DILocation(line: 788, column: 504, scope: !6171, inlinedAt: !6581)
!6758 = !DILocation(line: 788, column: 573, scope: !6176, inlinedAt: !6581)
!6759 = !DILocation(line: 788, column: 504, scope: !6176, inlinedAt: !6581)
!6760 = !DILocation(line: 788, column: 504, scope: !5872, inlinedAt: !6581)
!6761 = !DILocation(line: 788, column: 501, scope: !5872, inlinedAt: !6581)
!6762 = !DILocation(line: 788, column: 645, scope: !5872, inlinedAt: !6581)
!6763 = !DILocation(line: 788, column: 649, scope: !5872, inlinedAt: !6581)
!6764 = !DILocation(line: 788, column: 659, scope: !5872, inlinedAt: !6581)
!6765 = !DILocation(line: 788, column: 668, scope: !5872, inlinedAt: !6581)
!6766 = !DILocation(line: 788, column: 656, scope: !5872, inlinedAt: !6581)
!6767 = !DILocation(line: 788, column: 677, scope: !5872, inlinedAt: !6581)
!6768 = !DILocation(line: 788, column: 601, scope: !5872, inlinedAt: !6581)
!6769 = !DILocation(line: 68, column: 16, scope: !4790, inlinedAt: !6580)
!6770 = !DILocation(line: 68, column: 19, scope: !4790, inlinedAt: !6580)
!6771 = !DILocation(line: 68, column: 24, scope: !4790, inlinedAt: !6580)
!6772 = !DILocation(line: 68, column: 38, scope: !4790, inlinedAt: !6580)
!6773 = !DILocation(line: 68, column: 41, scope: !4790, inlinedAt: !6580)
!6774 = !DILocation(line: 68, column: 46, scope: !4790, inlinedAt: !6580)
!6775 = !DILocation(line: 68, column: 34, scope: !4790, inlinedAt: !6580)
!6776 = !DILocation(line: 68, column: 57, scope: !4790, inlinedAt: !6580)
!6777 = !DILocation(line: 68, column: 69, scope: !4790, inlinedAt: !6580)
!6778 = !DILocation(line: 68, column: 72, scope: !4790, inlinedAt: !6580)
!6779 = !DILocation(line: 68, column: 79, scope: !4790, inlinedAt: !6580)
!6780 = !DILocation(line: 68, column: 84, scope: !4790, inlinedAt: !6580)
!6781 = !DILocation(line: 68, column: 99, scope: !4790, inlinedAt: !6580)
!6782 = !DILocation(line: 68, column: 102, scope: !4790, inlinedAt: !6580)
!6783 = !DILocation(line: 68, column: 109, scope: !4790, inlinedAt: !6580)
!6784 = !DILocation(line: 68, column: 114, scope: !4790, inlinedAt: !6580)
!6785 = !DILocation(line: 68, column: 94, scope: !4790, inlinedAt: !6580)
!6786 = !DILocation(line: 68, column: 63, scope: !4790, inlinedAt: !6580)
!6787 = !DILocation(line: 788, column: 685, scope: !5872, inlinedAt: !6581)
!6788 = !DILocation(line: 788, column: 694, scope: !5872, inlinedAt: !6581)
!6789 = !DILocation(line: 788, column: 681, scope: !5872, inlinedAt: !6581)
!6790 = !DILocation(line: 788, column: 599, scope: !5872, inlinedAt: !6581)
!6791 = !DILocation(line: 788, column: 711, scope: !5872, inlinedAt: !6581)
!6792 = !DILocation(line: 788, column: 710, scope: !5872, inlinedAt: !6581)
!6793 = !DILocation(line: 788, column: 708, scope: !5872, inlinedAt: !6581)
!6794 = !DILocation(line: 788, column: 732, scope: !5872, inlinedAt: !6581)
!6795 = !DILocation(line: 788, column: 742, scope: !5872, inlinedAt: !6581)
!6796 = !DILocation(line: 788, column: 722, scope: !6215, inlinedAt: !6581)
!6797 = !DILocation(line: 788, column: 753, scope: !5872, inlinedAt: !6581)
!6798 = !DILocation(line: 788, column: 751, scope: !5872, inlinedAt: !6581)
!6799 = !DILocation(line: 788, column: 720, scope: !5872, inlinedAt: !6581)
!6800 = !DILocation(line: 788, column: 772, scope: !5872, inlinedAt: !6581)
!6801 = !DILocation(line: 788, column: 766, scope: !5872, inlinedAt: !6581)
!6802 = !DILocation(line: 788, column: 764, scope: !5872, inlinedAt: !6581)
!6803 = !DILocation(line: 788, column: 793, scope: !5872, inlinedAt: !6581)
!6804 = !DILocation(line: 788, column: 787, scope: !5872, inlinedAt: !6581)
!6805 = !DILocation(line: 788, column: 785, scope: !5872, inlinedAt: !6581)
!6806 = !DILocation(line: 788, column: 804, scope: !5872, inlinedAt: !6581)
!6807 = !DILocation(line: 788, column: 806, scope: !6227, inlinedAt: !6581)
!6808 = !DILocation(line: 788, column: 827, scope: !6229, inlinedAt: !6581)
!6809 = !DILocation(line: 788, column: 822, scope: !6229, inlinedAt: !6581)
!6810 = !DILocation(line: 788, column: 844, scope: !6229, inlinedAt: !6581)
!6811 = !DILocation(line: 788, column: 862, scope: !6229, inlinedAt: !6581)
!6812 = !DILocation(line: 788, column: 874, scope: !6229, inlinedAt: !6581)
!6813 = !DILocation(line: 788, column: 871, scope: !6229, inlinedAt: !6581)
!6814 = !DILocation(line: 788, column: 859, scope: !6229, inlinedAt: !6581)
!6815 = !DILocation(line: 788, column: 843, scope: !6229, inlinedAt: !6581)
!6816 = !DILocation(line: 788, column: 881, scope: !6239, inlinedAt: !6581)
!6817 = !DILocation(line: 788, column: 893, scope: !6239, inlinedAt: !6581)
!6818 = !DILocation(line: 788, column: 890, scope: !6239, inlinedAt: !6581)
!6819 = !DILocation(line: 788, column: 843, scope: !6239, inlinedAt: !6581)
!6820 = !DILocation(line: 788, column: 900, scope: !6244, inlinedAt: !6581)
!6821 = !DILocation(line: 788, column: 843, scope: !6244, inlinedAt: !6581)
!6822 = !DILocation(line: 788, column: 843, scope: !6247, inlinedAt: !6581)
!6823 = !DILocation(line: 788, column: 840, scope: !6247, inlinedAt: !6581)
!6824 = !DILocation(line: 790, column: 18, scope: !5878, inlinedAt: !6581)
!6825 = !DILocation(line: 790, column: 6, scope: !5878, inlinedAt: !6581)
!6826 = !DILocation(line: 790, column: 10, scope: !5878, inlinedAt: !6581)
!6827 = !DILocation(line: 790, column: 16, scope: !5878, inlinedAt: !6581)
!6828 = !DILocation(line: 792, column: 12, scope: !5878, inlinedAt: !6581)
!6829 = !DILocation(line: 231, column: 13, scope: !6582)
!6830 = !DILocation(line: 233, column: 28, scope: !6582)
!6831 = !DILocation(line: 233, column: 32, scope: !6582)
!6832 = !DILocation(line: 233, column: 16, scope: !6582)
!6833 = !DILocation(line: 233, column: 14, scope: !6582)
!6834 = !DILocation(line: 234, column: 28, scope: !6582)
!6835 = !DILocation(line: 234, column: 32, scope: !6582)
!6836 = !DILocation(line: 234, column: 16, scope: !6582)
!6837 = !DILocation(line: 234, column: 14, scope: !6582)
!6838 = !DILocation(line: 235, column: 13, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6582, file: !898, line: 235, column: 13)
!6840 = !DILocation(line: 235, column: 18, scope: !6839)
!6841 = !DILocation(line: 235, column: 13, scope: !6582)
!6842 = !DILocation(line: 236, column: 17, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !898, line: 236, column: 17)
!6844 = distinct !DILexicalBlock(scope: !6839, file: !898, line: 235, column: 25)
!6845 = !DILocation(line: 236, column: 22, scope: !6843)
!6846 = !DILocation(line: 236, column: 29, scope: !6843)
!6847 = !DILocation(line: 236, column: 32, scope: !6848)
!6848 = !DILexicalBlockFile(scope: !6843, file: !898, discriminator: 1)
!6849 = !DILocation(line: 236, column: 37, scope: !6848)
!6850 = !DILocation(line: 236, column: 17, scope: !6848)
!6851 = !DILocation(line: 237, column: 29, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6843, file: !898, line: 236, column: 44)
!6853 = !DILocation(line: 237, column: 34, scope: !6852)
!6854 = !DILocation(line: 237, column: 39, scope: !6852)
!6855 = !DILocation(line: 237, column: 26, scope: !6852)
!6856 = !DILocation(line: 237, column: 22, scope: !6852)
!6857 = !DILocation(line: 238, column: 24, scope: !6852)
!6858 = !DILocation(line: 238, column: 43, scope: !6852)
!6859 = !DILocation(line: 238, column: 31, scope: !6852)
!6860 = !DILocation(line: 238, column: 29, scope: !6852)
!6861 = !DILocation(line: 238, column: 22, scope: !6852)
!6862 = !DILocation(line: 239, column: 13, scope: !6852)
!6863 = !DILocation(line: 240, column: 17, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6844, file: !898, line: 240, column: 17)
!6865 = !DILocation(line: 240, column: 22, scope: !6864)
!6866 = !DILocation(line: 240, column: 29, scope: !6864)
!6867 = !DILocation(line: 240, column: 32, scope: !6868)
!6868 = !DILexicalBlockFile(scope: !6864, file: !898, discriminator: 1)
!6869 = !DILocation(line: 240, column: 37, scope: !6868)
!6870 = !DILocation(line: 240, column: 17, scope: !6868)
!6871 = !DILocation(line: 241, column: 29, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6864, file: !898, line: 240, column: 44)
!6873 = !DILocation(line: 241, column: 34, scope: !6872)
!6874 = !DILocation(line: 241, column: 39, scope: !6872)
!6875 = !DILocation(line: 241, column: 26, scope: !6872)
!6876 = !DILocation(line: 241, column: 22, scope: !6872)
!6877 = !DILocation(line: 242, column: 24, scope: !6872)
!6878 = !DILocation(line: 242, column: 43, scope: !6872)
!6879 = !DILocation(line: 242, column: 31, scope: !6872)
!6880 = !DILocation(line: 242, column: 29, scope: !6872)
!6881 = !DILocation(line: 242, column: 22, scope: !6872)
!6882 = !DILocation(line: 243, column: 13, scope: !6872)
!6883 = !DILocation(line: 244, column: 9, scope: !6844)
!6884 = !DILocation(line: 246, column: 31, scope: !6582)
!6885 = !DILocation(line: 246, column: 37, scope: !6582)
!6886 = !DILocation(line: 246, column: 18, scope: !6582)
!6887 = !DILocation(line: 246, column: 13, scope: !6582)
!6888 = !DILocation(line: 246, column: 16, scope: !6582)
!6889 = !DILocation(line: 247, column: 31, scope: !6582)
!6890 = !DILocation(line: 247, column: 37, scope: !6582)
!6891 = !DILocation(line: 247, column: 18, scope: !6582)
!6892 = !DILocation(line: 247, column: 13, scope: !6582)
!6893 = !DILocation(line: 247, column: 16, scope: !6582)
!6894 = !DILocation(line: 248, column: 5, scope: !6582)
!6895 = !DILocation(line: 230, column: 33, scope: !6896)
!6896 = !DILexicalBlockFile(scope: !6583, file: !898, discriminator: 2)
!6897 = !DILocation(line: 230, column: 5, scope: !6896)
!6898 = distinct !{!6898, !6899}
!6899 = !DILocation(line: 230, column: 5, scope: !6578)
!6900 = !DILocation(line: 250, column: 5, scope: !6578)
!6901 = distinct !DISubprogram(name: "sign_extend", scope: !6902, file: !6902, line: 130, type: !6903, isLocal: true, isDefinition: true, scopeLine: 131, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!6902 = !DIFile(filename: "libavcodec/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!6903 = !DISubroutineType(types: !6904)
!6904 = !{!909, !909, !910}
!6905 = !DILocalVariable(name: "val", arg: 1, scope: !6901, file: !6902, line: 130, type: !909)
!6906 = !DILocation(line: 130, column: 58, scope: !6901)
!6907 = !DILocalVariable(name: "bits", arg: 2, scope: !6901, file: !6902, line: 130, type: !910)
!6908 = !DILocation(line: 130, column: 72, scope: !6901)
!6909 = !DILocalVariable(name: "shift", scope: !6901, file: !6902, line: 132, type: !910)
!6910 = !DILocation(line: 132, column: 14, scope: !6901)
!6911 = !DILocation(line: 132, column: 40, scope: !6901)
!6912 = !DILocation(line: 132, column: 38, scope: !6901)
!6913 = !DILocation(line: 132, column: 22, scope: !6901)
!6914 = !DILocalVariable(name: "v", scope: !6901, file: !6902, line: 133, type: !6915)
!6915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6901, file: !6902, line: 133, size: 32, align: 32, elements: !6916)
!6916 = !{!6917, !6918}
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !6915, file: !6902, line: 133, baseType: !910, size: 32, align: 32)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !6915, file: !6902, line: 133, baseType: !909, size: 32, align: 32)
!6919 = !DILocation(line: 133, column: 34, scope: !6901)
!6920 = !DILocation(line: 133, column: 38, scope: !6901)
!6921 = !DILocation(line: 133, column: 51, scope: !6901)
!6922 = !DILocation(line: 133, column: 58, scope: !6901)
!6923 = !DILocation(line: 133, column: 55, scope: !6901)
!6924 = !DILocation(line: 134, column: 14, scope: !6901)
!6925 = !DILocation(line: 134, column: 19, scope: !6901)
!6926 = !DILocation(line: 134, column: 16, scope: !6901)
!6927 = !DILocation(line: 134, column: 5, scope: !6901)
!6928 = distinct !DISubprogram(name: "on2avc_scale", scope: !898, file: !898, line: 186, type: !6929, isLocal: true, isDefinition: true, scopeLine: 187, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!6929 = !DISubroutineType(types: !6930)
!6930 = !{!918, !909, !918}
!6931 = !DILocalVariable(name: "v", arg: 1, scope: !6928, file: !898, line: 186, type: !909)
!6932 = !DILocation(line: 186, column: 38, scope: !6928)
!6933 = !DILocalVariable(name: "scale", arg: 2, scope: !6928, file: !898, line: 186, type: !918)
!6934 = !DILocation(line: 186, column: 47, scope: !6928)
!6935 = !DILocation(line: 188, column: 12, scope: !6928)
!6936 = !DILocation(line: 188, column: 26, scope: !6928)
!6937 = !DILocation(line: 188, column: 22, scope: !6928)
!6938 = !DILocation(line: 188, column: 16, scope: !6939)
!6939 = !DILexicalBlockFile(scope: !6928, file: !898, discriminator: 1)
!6940 = !DILocation(line: 188, column: 14, scope: !6928)
!6941 = !DILocation(line: 188, column: 32, scope: !6928)
!6942 = !DILocation(line: 188, column: 30, scope: !6928)
!6943 = !DILocation(line: 188, column: 5, scope: !6928)
!6944 = distinct !DISubprogram(name: "get_egolomb", scope: !898, file: !898, line: 209, type: !6945, isLocal: true, isDefinition: true, scopeLine: 210, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!6945 = !DISubroutineType(types: !6946)
!6946 = !{!909, !4729}
!6947 = !DILocalVariable(name: "gb", arg: 1, scope: !6944, file: !898, line: 209, type: !4729)
!6948 = !DILocation(line: 209, column: 46, scope: !6944)
!6949 = !DILocalVariable(name: "v", scope: !6944, file: !898, line: 211, type: !909)
!6950 = !DILocation(line: 211, column: 9, scope: !6944)
!6951 = !DILocation(line: 213, column: 5, scope: !6944)
!6952 = !DILocation(line: 213, column: 22, scope: !6953)
!6953 = !DILexicalBlockFile(scope: !6944, file: !898, discriminator: 1)
!6954 = !DILocation(line: 213, column: 12, scope: !6953)
!6955 = !DILocation(line: 213, column: 5, scope: !6953)
!6956 = !DILocation(line: 214, column: 10, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6944, file: !898, line: 213, column: 27)
!6958 = !DILocation(line: 215, column: 13, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6957, file: !898, line: 215, column: 13)
!6960 = !DILocation(line: 215, column: 15, scope: !6959)
!6961 = !DILocation(line: 215, column: 13, scope: !6957)
!6962 = !DILocation(line: 216, column: 13, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6959, file: !898, line: 215, column: 21)
!6964 = !DILocation(line: 217, column: 15, scope: !6963)
!6965 = !DILocation(line: 218, column: 13, scope: !6963)
!6966 = !DILocation(line: 213, column: 5, scope: !6967)
!6967 = !DILexicalBlockFile(scope: !6944, file: !898, discriminator: 2)
!6968 = distinct !{!6968, !6951}
!6969 = !DILocation(line: 222, column: 18, scope: !6944)
!6970 = !DILocation(line: 222, column: 15, scope: !6944)
!6971 = !DILocation(line: 222, column: 37, scope: !6944)
!6972 = !DILocation(line: 222, column: 41, scope: !6944)
!6973 = !DILocation(line: 222, column: 23, scope: !6944)
!6974 = !DILocation(line: 222, column: 21, scope: !6944)
!6975 = !DILocation(line: 222, column: 5, scope: !6944)
!6976 = distinct !DISubprogram(name: "get_bits_long", scope: !4558, file: !4558, line: 531, type: !4787, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1668)
!6977 = !DILocalVariable(name: "s", arg: 1, scope: !6976, file: !4558, line: 531, type: !4729)
!6978 = !DILocation(line: 531, column: 57, scope: !6976)
!6979 = !DILocalVariable(name: "n", arg: 2, scope: !6976, file: !4558, line: 531, type: !909)
!6980 = !DILocation(line: 531, column: 64, scope: !6976)
!6981 = !DILocation(line: 534, column: 10, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6976, file: !4558, line: 534, column: 9)
!6983 = !DILocation(line: 534, column: 9, scope: !6976)
!6984 = !DILocation(line: 535, column: 9, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6982, file: !4558, line: 534, column: 13)
!6986 = !DILocation(line: 540, column: 16, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6982, file: !4558, line: 540, column: 16)
!6988 = !DILocation(line: 540, column: 18, scope: !6987)
!6989 = !DILocation(line: 540, column: 16, scope: !6982)
!6990 = !DILocation(line: 541, column: 25, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6987, file: !4558, line: 540, column: 25)
!6992 = !DILocation(line: 541, column: 28, scope: !6991)
!6993 = !DILocation(line: 541, column: 16, scope: !6991)
!6994 = !DILocation(line: 541, column: 9, scope: !6991)
!6995 = !DILocalVariable(name: "ret", scope: !6996, file: !4558, line: 547, type: !910)
!6996 = distinct !DILexicalBlock(scope: !6987, file: !4558, line: 542, column: 12)
!6997 = !DILocation(line: 547, column: 18, scope: !6996)
!6998 = !DILocation(line: 547, column: 33, scope: !6996)
!6999 = !DILocation(line: 547, column: 24, scope: !6996)
!7000 = !DILocation(line: 547, column: 44, scope: !6996)
!7001 = !DILocation(line: 547, column: 46, scope: !6996)
!7002 = !DILocation(line: 547, column: 40, scope: !6996)
!7003 = !DILocation(line: 548, column: 16, scope: !6996)
!7004 = !DILocation(line: 548, column: 31, scope: !6996)
!7005 = !DILocation(line: 548, column: 34, scope: !6996)
!7006 = !DILocation(line: 548, column: 36, scope: !6996)
!7007 = !DILocation(line: 548, column: 22, scope: !6996)
!7008 = !DILocation(line: 548, column: 20, scope: !6996)
!7009 = !DILocation(line: 548, column: 9, scope: !6996)
!7010 = !DILocation(line: 552, column: 1, scope: !6976)
