; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--aacenc_is.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--aacenc_is.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AACEncContext = type { %struct.AVClass*, %struct.AACEncOptions, %struct.PutBitContext, %struct.FFTContext, %struct.FFTContext, %struct.AVFloatDSPContext*, %struct.AACPCEInfo, [16 x float*], i32, i32, [8 x i8], %struct.LPCContext, i32, i32, i8*, i8*, %struct.ChannelElement*, %struct.FFPsyContext, %struct.FFPsyPreprocessContext*, %struct.AACCoefficientsEncoder*, i32, i32, float, i32, float, i32, i32, %struct.AudioFrameQueue, [96 x i32], [1024 x float], i16, [256 x [128 x %struct.AACQuantizeBandCostCacheEntry]], void (float*, float*, i32)*, void (i32*, float*, float*, i32, i32, i32, float, float)*, %struct.anon.0 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AACEncOptions = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.AACPCEInfo = type { i64, [4 x i32], [3 x [8 x i32]], [4 x [8 x i32]], [16 x i8], [16 x i8] }
%struct.LPCContext = type { i32, i32, i32, double*, double*, void (i32*, i32, double*)*, void (double*, i32, i32, double*)*, [16 x i8], [2 x %struct.LLSModel] }
%struct.LLSModel = type { [36 x [36 x double]], [32 x [32 x double]], [32 x double], i32, void (%struct.LLSModel*, double*)*, double (%struct.LLSModel*, double*, i32)*, [8 x i8] }
%struct.ChannelElement = type { i32, i32, i32, i8, [128 x i8], [128 x i8], [19 x i8], [2 x %struct.SingleChannelElement], %struct.ChannelCoupling, [24 x i8], %struct.SpectralBandReplication }
%struct.SingleChannelElement = type { %struct.IndividualChannelStream, %struct.TemporalNoiseShaping, %struct.Pulse, [128 x i32], [128 x i32], [120 x i32], [120 x float], [128 x i32], [128 x i8], [128 x i8], [128 x float], [128 x float], [4 x i8], [1024 x float], [1024 x float], [1536 x float], [2048 x float], [3072 x float], [1024 x float], [1024 x float], [672 x %struct.PredictorState], float*, [24 x i8] }
%struct.IndividualChannelStream = type { i8, [2 x i32], [2 x i8], i32, [8 x i8], %struct.LongTermPrediction, i16*, i8*, i32, i32, i32, i32, i32, i32, [31 x i32], [41 x i8], [8 x i8], float }
%struct.LongTermPrediction = type { i8, i16, i32, float, [40 x i8] }
%struct.TemporalNoiseShaping = type { i32, [8 x i32], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x i32]], [8 x [4 x [20 x i32]]], [8 x [4 x [20 x float]]] }
%struct.Pulse = type { i32, i32, [4 x i32], [4 x i32] }
%struct.PredictorState = type { float, float, float, float, float, float, float, float }
%struct.ChannelCoupling = type { i32, i32, [8 x i32], [8 x i32], [8 x i32], [16 x [120 x float]] }
%struct.SpectralBandReplication = type { i32, i32, i32, i32, i32, %struct.SpectrumParameters, i32, i32, i32, i32, i32, i32, [5 x i32], [2 x i32], [2 x i32], i32, i32, [2 x %struct.SBRData], %struct.PSContext, [2 x i32], i32, i32, [49 x i16], [25 x i16], [49 x i16], [6 x i16], [30 x i16], i32, [6 x i8], [6 x i8], [32 x [40 x [2 x float]]], [64 x [40 x [2 x float]]], [2 x [2 x [38 x [64 x float]]]], [64 x [2 x float]], [64 x [2 x float]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x i8]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x float]], [7 x [48 x float]], [16 x i8], [5 x [64 x float]], %struct.FFTContext, %struct.FFTContext, %struct.SBRDSPContext, %struct.AACSBRContext, [16 x i8] }
%struct.SpectrumParameters = type { i8, i8, i8, i8, i8, i8 }
%struct.SBRData = type { i32, i32, i32, [7 x i8], i32, [5 x i8], [2 x i8], [2 x [5 x i8]], [48 x i8], i32, [2304 x float], [1312 x float], i32, [2 x i32], [5 x float], [2 x [32 x [32 x [2 x float]]]], i32, [12 x i8], [2 x [38 x [64 x [2 x float]]]], [42 x [48 x float]], [42 x [48 x float]], [8 x [48 x i8]], [6 x [48 x i8]], [6 x [48 x float]], [3 x [5 x i8]], [3 x [5 x float]], [8 x i8], i8, [3 x i8], i32, i32, [16 x i8] }
%struct.PSContext = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x i32], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], [5 x [34 x i8]], i32, i32, [4 x i8], [5 x [44 x [2 x float]]], [91 x [46 x [2 x float]]], [50 x [3 x [37 x [2 x float]]]], [34 x float], [8 x i8], [34 x float], [8 x i8], [34 x float], [8 x i8], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [2 x [6 x [34 x float]]], [91 x [32 x [2 x float]]], [91 x [32 x [2 x float]]], [34 x i8], [34 x i8], %struct.PSDSPContext, [8 x i8] }
%struct.PSDSPContext = type { void (float*, [2 x float]*, i32)*, void ([2 x float]*, [2 x float]*, float*, i32)*, void ([2 x float]*, [2 x float]*, [8 x [2 x float]]*, i64, i32)*, void ([32 x [2 x float]]*, [38 x [64 x float]]*, i32, i32)*, void ([38 x [64 x float]]*, [32 x [2 x float]]*, i32, i32)*, void ([2 x float]*, [2 x float]*, [37 x [2 x float]]*, float*, [2 x float]*, float*, float, i32)*, [2 x void ([2 x float]*, [2 x float]*, [4 x float]*, [4 x float]*, i32)*] }
%struct.SBRDSPContext = type { void (float*)*, float ([2 x float]*, i32)*, void (float*)*, void (float*)*, void ([2 x float]*, float*)*, void (float*, float*)*, void (float*, float*, float*)*, void ([2 x float]*, [2 x [2 x float]]*)*, void ([2 x float]*, [2 x float]*, float*, float*, float, i32, i32)*, void ([2 x float]*, [40 x [2 x float]]*, float*, i32, i64)*, [4 x void ([2 x float]*, float*, float*, i32, i32, i32)*] }
%struct.AACSBRContext = type { i32 (%struct.AACContext*, %struct.SpectralBandReplication*, [40 x [2 x float]]*, [32 x [32 x [2 x float]]]*, i32)*, void ([64 x [2 x float]]*, [40 x [2 x float]]*, %struct.SpectralBandReplication*, %struct.SBRData*, i32*)*, i32 (%struct.SpectralBandReplication*, [38 x [64 x float]]*, [64 x [2 x float]]*, [64 x [2 x float]]*, [40 x [2 x float]]*, i32)*, void (%struct.SBRDSPContext*, [2 x float]*, [2 x float]*, [40 x [2 x float]]*, i32)* }
%struct.AACContext = type { %struct.AVClass*, %struct.AVCodecContext*, %struct.AVFrame*, i32, %struct.DynamicRangeControl, [4 x [16 x %struct.ChannelElement*]], [4 x [16 x %struct.ChannelElement*]], i32, i32, [1024 x float], %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.FFTContext, %struct.MDCT15Context*, %struct.MDCT15Context*, %struct.MDCT15Context*, %struct.AVFloatDSPContext*, i32, [64 x %struct.SingleChannelElement*], i32, i32, [16 x i8], [128 x float], [2 x %struct.OutputConfiguration], i32, i32, i32, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (float*, %struct.TemporalNoiseShaping*, %struct.IndividualChannelStream*, i32)*, void (%struct.AACContext*, float*, float*, %struct.IndividualChannelStream*)*, void (%struct.AACContext*, %struct.SingleChannelElement*)*, void (i32*, i32)*, void (i32*, i32*, i32, i32, i32, i8*)*, [8 x i8] }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.DynamicRangeControl = type { i32, [17 x i32], [17 x i32], [64 x i32], i32, i32, [17 x i32], i32 }
%struct.MDCT15Context = type { i32, i32, i32, i32, i32*, i32*, %struct.FFTContext, %struct.FFTComplex*, %struct.FFTComplex*, [64 x %struct.FFTComplex], void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.FFTComplex*, i64)*, void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.FFTComplex*, i32*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)* }
%struct.OutputConfiguration = type { %struct.MPEG4AudioConfig, [64 x [3 x i8]], i32, i32, i64, i32 }
%struct.MPEG4AudioConfig = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.FFPsyContext = type { %struct.AVCodecContext*, %struct.FFPsyModel*, %struct.FFPsyChannel*, %struct.FFPsyChannelGroup*, i32, i32, i8**, i32*, i32, %struct.anon, i8* }
%struct.FFPsyModel = type { i8*, i32 (%struct.FFPsyContext*)*, void (%struct.FFPsyWindowInfo*, %struct.FFPsyContext*, float*, float*, i32, i32)*, void (%struct.FFPsyContext*, i32, float**, %struct.FFPsyWindowInfo*)*, void (%struct.FFPsyContext*)* }
%struct.FFPsyWindowInfo = type { [3 x i32], i32, i32, [8 x i32], [8 x float], i32* }
%struct.FFPsyChannel = type { [128 x %struct.FFPsyBand], float }
%struct.FFPsyBand = type { i32, float, float, float }
%struct.FFPsyChannelGroup = type { [20 x %struct.FFPsyChannel*], i8, [128 x i8] }
%struct.anon = type { i32, i32, i32 }
%struct.FFPsyPreprocessContext = type opaque
%struct.AACCoefficientsEncoder = type { void (%struct.AVCodecContext*, %struct.AACEncContext*, %struct.SingleChannelElement*, float)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32, i32, float)*, void (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, i32, i32, i32, float, i32)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*, i32)*, void (%struct.AACEncContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.AVCodecContext*, %struct.ChannelElement*)*, void (%struct.AACEncContext*, %struct.SingleChannelElement*)* }
%struct.AudioFrameQueue = type { %struct.AVCodecContext*, i32, i32, %struct.AudioFrame*, i32, i32 }
%struct.AudioFrame = type { i64, i32 }
%struct.AACQuantizeBandCostCacheEntry = type { float, float, i32, i8, i8, i16 }
%struct.anon.0 = type { float* }
%struct.AACISError = type { i32, i32, float, float, float, float }
%union.unaligned_32 = type { i32 }

@ff_aac_pow34sf_tab = external global [428 x float], align 16
@aac_maxval_cb = internal constant [14 x i8] c"\00\01\03\05\05\07\07\07\09\09\09\09\09\0B", align 1
@quantize_and_encode_band_cost_rtz_arr = internal constant [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*] [float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_ZERO, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_ESC_RTZ, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_NONE, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_NOISE, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_STEREO, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_STEREO], align 16
@quantize_and_encode_band_cost_arr = internal constant [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*] [float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_ZERO, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UQUAD, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_SPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_UPAIR, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_ESC, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_NONE, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_NOISE, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_STEREO, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)* @quantize_and_encode_band_cost_STEREO], align 16
@ff_aac_pow2sf_tab = external global [428 x float], align 16
@aac_cb_maxval = internal constant [12 x i8] c"\00\01\01\02\02\04\04\07\07\0C\0C\10", align 1
@aac_cb_range = internal constant [12 x i8] c"\00\03\03\03\03\09\09\08\08\0D\0D\11", align 1
@ff_aac_spectral_bits = external constant [11 x i8*], align 16
@ff_aac_codebook_vectors = external global [0 x float*], align 8
@ff_aac_spectral_codes = external constant [11 x i16*], align 16
@.str = private unnamed_addr constant [43 x i8] c"Internal error, put_bits buffer too small\0A\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"libavcodec/aacenc_quantization.h\00", align 1

; Function Attrs: nounwind uwtable
define void @ff_aac_is_encoding_err(%struct.AACISError* noalias sret %agg.result, %struct.AACEncContext* %s, %struct.ChannelElement* %cpe, i32 %start, i32 %w, i32 %g, float %ener0, float %ener1, float %ener01, i32 %use_pcoeffs, i32 %phase) #0 !dbg !2746 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %start.addr = alloca i32, align 4
  %w.addr = alloca i32, align 4
  %g.addr = alloca i32, align 4
  %ener0.addr = alloca float, align 4
  %ener1.addr = alloca float, align 4
  %ener01.addr = alloca float, align 4
  %use_pcoeffs.addr = alloca i32, align 4
  %phase.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %w2 = alloca i32, align 4
  %sce0 = alloca %struct.SingleChannelElement*, align 8
  %sce1 = alloca %struct.SingleChannelElement*, align 8
  %L = alloca float*, align 8
  %R = alloca float*, align 8
  %L34 = alloca float*, align 8
  %R34 = alloca float*, align 8
  %IS = alloca float*, align 8
  %I34 = alloca float*, align 8
  %dist1 = alloca float, align 4
  %dist2 = alloca float, align 4
  %is_error = alloca %struct.AACISError, align 4
  %band0 = alloca %struct.FFPsyBand*, align 8
  %band1 = alloca %struct.FFPsyBand*, align 8
  %is_band_type = alloca i32, align 4
  %is_sf_idx = alloca i32, align 4
  %e01_34 = alloca float, align 4
  %maxval = alloca float, align 4
  %dist_spec_err = alloca float, align 4
  %minthr = alloca float, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !2762, metadata !2763), !dbg !2764
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !2765, metadata !2763), !dbg !2766
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !2767, metadata !2763), !dbg !2768
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !2769, metadata !2763), !dbg !2770
  store i32 %g, i32* %g.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %g.addr, metadata !2771, metadata !2763), !dbg !2772
  store float %ener0, float* %ener0.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ener0.addr, metadata !2773, metadata !2763), !dbg !2774
  store float %ener1, float* %ener1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ener1.addr, metadata !2775, metadata !2763), !dbg !2776
  store float %ener01, float* %ener01.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ener01.addr, metadata !2777, metadata !2763), !dbg !2778
  store i32 %use_pcoeffs, i32* %use_pcoeffs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %use_pcoeffs.addr, metadata !2779, metadata !2763), !dbg !2780
  store i32 %phase, i32* %phase.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phase.addr, metadata !2781, metadata !2763), !dbg !2782
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2783, metadata !2763), !dbg !2784
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !2785, metadata !2763), !dbg !2786
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce0, metadata !2787, metadata !2763), !dbg !2788
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !2789
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !2790
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !2789
  store %struct.SingleChannelElement* %arrayidx, %struct.SingleChannelElement** %sce0, align 8, !dbg !2788
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce1, metadata !2791, metadata !2763), !dbg !2792
  %1 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !2793
  %ch1 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %1, i32 0, i32 7, !dbg !2794
  %arrayidx2 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch1, i64 0, i64 1, !dbg !2793
  store %struct.SingleChannelElement* %arrayidx2, %struct.SingleChannelElement** %sce1, align 8, !dbg !2792
  call void @llvm.dbg.declare(metadata float** %L, metadata !2795, metadata !2763), !dbg !2796
  %2 = load i32, i32* %use_pcoeffs.addr, align 4, !dbg !2797
  %tobool = icmp ne i32 %2, 0, !dbg !2797
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2797

cond.true:                                        ; preds = %entry
  %3 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !2798
  %pcoeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %3, i32 0, i32 13, !dbg !2800
  %arraydecay = getelementptr inbounds [1024 x float], [1024 x float]* %pcoeffs, i32 0, i32 0, !dbg !2798
  br label %cond.end, !dbg !2801

cond.false:                                       ; preds = %entry
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !2802
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 14, !dbg !2804
  %arraydecay3 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i32 0, i32 0, !dbg !2802
  br label %cond.end, !dbg !2805

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay, %cond.true ], [ %arraydecay3, %cond.false ], !dbg !2806
  store float* %cond, float** %L, align 8, !dbg !2808
  call void @llvm.dbg.declare(metadata float** %R, metadata !2809, metadata !2763), !dbg !2810
  %5 = load i32, i32* %use_pcoeffs.addr, align 4, !dbg !2811
  %tobool4 = icmp ne i32 %5, 0, !dbg !2811
  br i1 %tobool4, label %cond.true5, label %cond.false8, !dbg !2811

cond.true5:                                       ; preds = %cond.end
  %6 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !2812
  %pcoeffs6 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %6, i32 0, i32 13, !dbg !2813
  %arraydecay7 = getelementptr inbounds [1024 x float], [1024 x float]* %pcoeffs6, i32 0, i32 0, !dbg !2812
  br label %cond.end11, !dbg !2814

cond.false8:                                      ; preds = %cond.end
  %7 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !2815
  %coeffs9 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %7, i32 0, i32 14, !dbg !2816
  %arraydecay10 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs9, i32 0, i32 0, !dbg !2815
  br label %cond.end11, !dbg !2817

cond.end11:                                       ; preds = %cond.false8, %cond.true5
  %cond12 = phi float* [ %arraydecay7, %cond.true5 ], [ %arraydecay10, %cond.false8 ], !dbg !2818
  store float* %cond12, float** %R, align 8, !dbg !2819
  call void @llvm.dbg.declare(metadata float** %L34, metadata !2820, metadata !2763), !dbg !2821
  %8 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !2822
  %scoefs = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %8, i32 0, i32 29, !dbg !2823
  %arrayidx13 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs, i64 0, i64 0, !dbg !2822
  store float* %arrayidx13, float** %L34, align 8, !dbg !2821
  call void @llvm.dbg.declare(metadata float** %R34, metadata !2824, metadata !2763), !dbg !2825
  %9 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !2826
  %scoefs14 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %9, i32 0, i32 29, !dbg !2827
  %arrayidx15 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs14, i64 0, i64 256, !dbg !2826
  store float* %arrayidx15, float** %R34, align 8, !dbg !2825
  call void @llvm.dbg.declare(metadata float** %IS, metadata !2828, metadata !2763), !dbg !2829
  %10 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !2830
  %scoefs16 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %10, i32 0, i32 29, !dbg !2831
  %arrayidx17 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs16, i64 0, i64 512, !dbg !2830
  store float* %arrayidx17, float** %IS, align 8, !dbg !2829
  call void @llvm.dbg.declare(metadata float** %I34, metadata !2832, metadata !2763), !dbg !2833
  %11 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !2834
  %scoefs18 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %11, i32 0, i32 29, !dbg !2835
  %arrayidx19 = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs18, i64 0, i64 768, !dbg !2834
  store float* %arrayidx19, float** %I34, align 8, !dbg !2833
  call void @llvm.dbg.declare(metadata float* %dist1, metadata !2836, metadata !2763), !dbg !2837
  store float 0.000000e+00, float* %dist1, align 4, !dbg !2837
  call void @llvm.dbg.declare(metadata float* %dist2, metadata !2838, metadata !2763), !dbg !2839
  store float 0.000000e+00, float* %dist2, align 4, !dbg !2839
  call void @llvm.dbg.declare(metadata %struct.AACISError* %is_error, metadata !2840, metadata !2763), !dbg !2841
  %12 = bitcast %struct.AACISError* %is_error to i8*, !dbg !2841
  call void @llvm.memset.p0i8.i64(i8* %12, i8 0, i64 24, i32 4, i1 false), !dbg !2841
  %13 = load float, float* %ener01.addr, align 4, !dbg !2842
  %cmp = fcmp ole float %13, 0.000000e+00, !dbg !2844
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2845

lor.lhs.false:                                    ; preds = %cond.end11
  %14 = load float, float* %ener0.addr, align 4, !dbg !2846
  %cmp20 = fcmp ole float %14, 0.000000e+00, !dbg !2848
  br i1 %cmp20, label %if.then, label %if.end, !dbg !2849

if.then:                                          ; preds = %lor.lhs.false, %cond.end11
  %pass = getelementptr inbounds %struct.AACISError, %struct.AACISError* %is_error, i32 0, i32 0, !dbg !2850
  store i32 0, i32* %pass, align 4, !dbg !2852
  %15 = bitcast %struct.AACISError* %agg.result to i8*, !dbg !2853
  %16 = bitcast %struct.AACISError* %is_error to i8*, !dbg !2853
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 24, i32 4, i1 false), !dbg !2853
  br label %return, !dbg !2854

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %w2, align 4, !dbg !2855
  br label %for.cond, !dbg !2857

for.cond:                                         ; preds = %for.inc234, %if.end
  %17 = load i32, i32* %w2, align 4, !dbg !2858
  %18 = load i32, i32* %w.addr, align 4, !dbg !2861
  %idxprom = sext i32 %18 to i64, !dbg !2862
  %19 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !2862
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %19, i32 0, i32 0, !dbg !2863
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 4, !dbg !2864
  %arrayidx21 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom, !dbg !2862
  %20 = load i8, i8* %arrayidx21, align 1, !dbg !2862
  %conv = zext i8 %20 to i32, !dbg !2862
  %cmp22 = icmp slt i32 %17, %conv, !dbg !2865
  br i1 %cmp22, label %for.body, label %for.end236, !dbg !2866

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.FFPsyBand** %band0, metadata !2867, metadata !2763), !dbg !2870
  %21 = load i32, i32* %w.addr, align 4, !dbg !2871
  %22 = load i32, i32* %w2, align 4, !dbg !2872
  %add = add nsw i32 %21, %22, !dbg !2873
  %mul = mul nsw i32 %add, 16, !dbg !2874
  %23 = load i32, i32* %g.addr, align 4, !dbg !2875
  %add24 = add nsw i32 %mul, %23, !dbg !2876
  %idxprom25 = sext i32 %add24 to i64, !dbg !2877
  %24 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !2878
  %cur_channel = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %24, i32 0, i32 20, !dbg !2879
  %25 = load i32, i32* %cur_channel, align 32, !dbg !2879
  %add26 = add nsw i32 %25, 0, !dbg !2880
  %idxprom27 = sext i32 %add26 to i64, !dbg !2877
  %26 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !2877
  %psy = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %26, i32 0, i32 17, !dbg !2881
  %ch28 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy, i32 0, i32 2, !dbg !2882
  %27 = load %struct.FFPsyChannel*, %struct.FFPsyChannel** %ch28, align 16, !dbg !2882
  %arrayidx29 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %27, i64 %idxprom27, !dbg !2877
  %psy_bands = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %arrayidx29, i32 0, i32 0, !dbg !2883
  %arrayidx30 = getelementptr inbounds [128 x %struct.FFPsyBand], [128 x %struct.FFPsyBand]* %psy_bands, i64 0, i64 %idxprom25, !dbg !2877
  store %struct.FFPsyBand* %arrayidx30, %struct.FFPsyBand** %band0, align 8, !dbg !2870
  call void @llvm.dbg.declare(metadata %struct.FFPsyBand** %band1, metadata !2884, metadata !2763), !dbg !2885
  %28 = load i32, i32* %w.addr, align 4, !dbg !2886
  %29 = load i32, i32* %w2, align 4, !dbg !2887
  %add31 = add nsw i32 %28, %29, !dbg !2888
  %mul32 = mul nsw i32 %add31, 16, !dbg !2889
  %30 = load i32, i32* %g.addr, align 4, !dbg !2890
  %add33 = add nsw i32 %mul32, %30, !dbg !2891
  %idxprom34 = sext i32 %add33 to i64, !dbg !2892
  %31 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !2893
  %cur_channel35 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %31, i32 0, i32 20, !dbg !2894
  %32 = load i32, i32* %cur_channel35, align 32, !dbg !2894
  %add36 = add nsw i32 %32, 1, !dbg !2895
  %idxprom37 = sext i32 %add36 to i64, !dbg !2892
  %33 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !2892
  %psy38 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %33, i32 0, i32 17, !dbg !2896
  %ch39 = getelementptr inbounds %struct.FFPsyContext, %struct.FFPsyContext* %psy38, i32 0, i32 2, !dbg !2897
  %34 = load %struct.FFPsyChannel*, %struct.FFPsyChannel** %ch39, align 16, !dbg !2897
  %arrayidx40 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %34, i64 %idxprom37, !dbg !2892
  %psy_bands41 = getelementptr inbounds %struct.FFPsyChannel, %struct.FFPsyChannel* %arrayidx40, i32 0, i32 0, !dbg !2898
  %arrayidx42 = getelementptr inbounds [128 x %struct.FFPsyBand], [128 x %struct.FFPsyBand]* %psy_bands41, i64 0, i64 %idxprom34, !dbg !2892
  store %struct.FFPsyBand* %arrayidx42, %struct.FFPsyBand** %band1, align 8, !dbg !2885
  call void @llvm.dbg.declare(metadata i32* %is_band_type, metadata !2899, metadata !2763), !dbg !2900
  call void @llvm.dbg.declare(metadata i32* %is_sf_idx, metadata !2901, metadata !2763), !dbg !2902
  %35 = load i32, i32* %w.addr, align 4, !dbg !2903
  %mul43 = mul nsw i32 %35, 16, !dbg !2904
  %36 = load i32, i32* %g.addr, align 4, !dbg !2905
  %add44 = add nsw i32 %mul43, %36, !dbg !2906
  %idxprom45 = sext i32 %add44 to i64, !dbg !2907
  %37 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !2907
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %37, i32 0, i32 7, !dbg !2908
  %arrayidx46 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 %idxprom45, !dbg !2907
  %38 = load i32, i32* %arrayidx46, align 4, !dbg !2907
  %sub = sub nsw i32 %38, 4, !dbg !2909
  %cmp47 = icmp sgt i32 1, %sub, !dbg !2910
  br i1 %cmp47, label %cond.true49, label %cond.false50, !dbg !2911

cond.true49:                                      ; preds = %for.body
  br label %cond.end57, !dbg !2912

cond.false50:                                     ; preds = %for.body
  %39 = load i32, i32* %w.addr, align 4, !dbg !2914
  %mul51 = mul nsw i32 %39, 16, !dbg !2916
  %40 = load i32, i32* %g.addr, align 4, !dbg !2917
  %add52 = add nsw i32 %mul51, %40, !dbg !2918
  %idxprom53 = sext i32 %add52 to i64, !dbg !2919
  %41 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !2919
  %sf_idx54 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %41, i32 0, i32 7, !dbg !2920
  %arrayidx55 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx54, i64 0, i64 %idxprom53, !dbg !2919
  %42 = load i32, i32* %arrayidx55, align 4, !dbg !2919
  %sub56 = sub nsw i32 %42, 4, !dbg !2921
  br label %cond.end57, !dbg !2922

cond.end57:                                       ; preds = %cond.false50, %cond.true49
  %cond58 = phi i32 [ 1, %cond.true49 ], [ %sub56, %cond.false50 ], !dbg !2923
  store i32 %cond58, i32* %is_sf_idx, align 4, !dbg !2925
  call void @llvm.dbg.declare(metadata float* %e01_34, metadata !2926, metadata !2763), !dbg !2927
  %43 = load i32, i32* %phase.addr, align 4, !dbg !2928
  %conv59 = sitofp i32 %43 to float, !dbg !2928
  %44 = load float, float* %ener1.addr, align 4, !dbg !2929
  %45 = load float, float* %ener0.addr, align 4, !dbg !2930
  %div = fdiv float %44, %45, !dbg !2931
  %call = call float @pos_pow34(float %div), !dbg !2932
  %mul60 = fmul float %conv59, %call, !dbg !2933
  store float %mul60, float* %e01_34, align 4, !dbg !2927
  call void @llvm.dbg.declare(metadata float* %maxval, metadata !2934, metadata !2763), !dbg !2935
  call void @llvm.dbg.declare(metadata float* %dist_spec_err, metadata !2936, metadata !2763), !dbg !2937
  store float 0.000000e+00, float* %dist_spec_err, align 4, !dbg !2937
  call void @llvm.dbg.declare(metadata float* %minthr, metadata !2938, metadata !2763), !dbg !2939
  %46 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band0, align 8, !dbg !2940
  %threshold = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %46, i32 0, i32 2, !dbg !2941
  %47 = load float, float* %threshold, align 4, !dbg !2941
  %48 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band1, align 8, !dbg !2942
  %threshold61 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %48, i32 0, i32 2, !dbg !2943
  %49 = load float, float* %threshold61, align 4, !dbg !2943
  %cmp62 = fcmp ogt float %47, %49, !dbg !2944
  br i1 %cmp62, label %cond.true64, label %cond.false66, !dbg !2945

cond.true64:                                      ; preds = %cond.end57
  %50 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band1, align 8, !dbg !2946
  %threshold65 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %50, i32 0, i32 2, !dbg !2947
  %51 = load float, float* %threshold65, align 4, !dbg !2947
  br label %cond.end68, !dbg !2948

cond.false66:                                     ; preds = %cond.end57
  %52 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band0, align 8, !dbg !2949
  %threshold67 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %52, i32 0, i32 2, !dbg !2950
  %53 = load float, float* %threshold67, align 4, !dbg !2950
  br label %cond.end68, !dbg !2951

cond.end68:                                       ; preds = %cond.false66, %cond.true64
  %cond69 = phi float [ %51, %cond.true64 ], [ %53, %cond.false66 ], !dbg !2952
  store float %cond69, float* %minthr, align 4, !dbg !2953
  store i32 0, i32* %i, align 4, !dbg !2954
  br label %for.cond70, !dbg !2956

for.cond70:                                       ; preds = %for.inc, %cond.end68
  %54 = load i32, i32* %i, align 4, !dbg !2957
  %55 = load i32, i32* %g.addr, align 4, !dbg !2960
  %idxprom71 = sext i32 %55 to i64, !dbg !2961
  %56 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !2961
  %ics72 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %56, i32 0, i32 0, !dbg !2962
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics72, i32 0, i32 7, !dbg !2963
  %57 = load i8*, i8** %swb_sizes, align 8, !dbg !2963
  %arrayidx73 = getelementptr inbounds i8, i8* %57, i64 %idxprom71, !dbg !2961
  %58 = load i8, i8* %arrayidx73, align 1, !dbg !2961
  %conv74 = zext i8 %58 to i32, !dbg !2961
  %cmp75 = icmp slt i32 %54, %conv74, !dbg !2964
  br i1 %cmp75, label %for.body77, label %for.end, !dbg !2965

for.body77:                                       ; preds = %for.cond70
  %59 = load i32, i32* %start.addr, align 4, !dbg !2966
  %60 = load i32, i32* %w.addr, align 4, !dbg !2967
  %61 = load i32, i32* %w2, align 4, !dbg !2968
  %add78 = add nsw i32 %60, %61, !dbg !2969
  %mul79 = mul nsw i32 %add78, 128, !dbg !2970
  %add80 = add nsw i32 %59, %mul79, !dbg !2971
  %62 = load i32, i32* %i, align 4, !dbg !2972
  %add81 = add nsw i32 %add80, %62, !dbg !2973
  %idxprom82 = sext i32 %add81 to i64, !dbg !2974
  %63 = load float*, float** %L, align 8, !dbg !2974
  %arrayidx83 = getelementptr inbounds float, float* %63, i64 %idxprom82, !dbg !2974
  %64 = load float, float* %arrayidx83, align 4, !dbg !2974
  %65 = load i32, i32* %phase.addr, align 4, !dbg !2975
  %conv84 = sitofp i32 %65 to float, !dbg !2975
  %66 = load i32, i32* %start.addr, align 4, !dbg !2976
  %67 = load i32, i32* %w.addr, align 4, !dbg !2977
  %68 = load i32, i32* %w2, align 4, !dbg !2978
  %add85 = add nsw i32 %67, %68, !dbg !2979
  %mul86 = mul nsw i32 %add85, 128, !dbg !2980
  %add87 = add nsw i32 %66, %mul86, !dbg !2981
  %69 = load i32, i32* %i, align 4, !dbg !2982
  %add88 = add nsw i32 %add87, %69, !dbg !2983
  %idxprom89 = sext i32 %add88 to i64, !dbg !2984
  %70 = load float*, float** %R, align 8, !dbg !2984
  %arrayidx90 = getelementptr inbounds float, float* %70, i64 %idxprom89, !dbg !2984
  %71 = load float, float* %arrayidx90, align 4, !dbg !2984
  %mul91 = fmul float %conv84, %71, !dbg !2985
  %add92 = fadd float %64, %mul91, !dbg !2986
  %conv93 = fpext float %add92 to double, !dbg !2987
  %72 = load float, float* %ener0.addr, align 4, !dbg !2988
  %73 = load float, float* %ener01.addr, align 4, !dbg !2989
  %div94 = fdiv float %72, %73, !dbg !2990
  %conv95 = fpext float %div94 to double, !dbg !2988
  %call96 = call double @sqrt(double %conv95) #8, !dbg !2991
  %mul97 = fmul double %conv93, %call96, !dbg !2992
  %conv98 = fptrunc double %mul97 to float, !dbg !2987
  %74 = load i32, i32* %i, align 4, !dbg !2993
  %idxprom99 = sext i32 %74 to i64, !dbg !2994
  %75 = load float*, float** %IS, align 8, !dbg !2994
  %arrayidx100 = getelementptr inbounds float, float* %75, i64 %idxprom99, !dbg !2994
  store float %conv98, float* %arrayidx100, align 4, !dbg !2995
  br label %for.inc, !dbg !2994

for.inc:                                          ; preds = %for.body77
  %76 = load i32, i32* %i, align 4, !dbg !2996
  %inc = add nsw i32 %76, 1, !dbg !2996
  store i32 %inc, i32* %i, align 4, !dbg !2996
  br label %for.cond70, !dbg !2998, !llvm.loop !2999

for.end:                                          ; preds = %for.cond70
  %77 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3001
  %abs_pow34 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %77, i32 0, i32 32, !dbg !3002
  %78 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34, align 8, !dbg !3002
  %79 = load float*, float** %L34, align 8, !dbg !3003
  %80 = load i32, i32* %start.addr, align 4, !dbg !3004
  %81 = load i32, i32* %w.addr, align 4, !dbg !3005
  %82 = load i32, i32* %w2, align 4, !dbg !3006
  %add101 = add nsw i32 %81, %82, !dbg !3007
  %mul102 = mul nsw i32 %add101, 128, !dbg !3008
  %add103 = add nsw i32 %80, %mul102, !dbg !3009
  %idxprom104 = sext i32 %add103 to i64, !dbg !3010
  %83 = load float*, float** %L, align 8, !dbg !3010
  %arrayidx105 = getelementptr inbounds float, float* %83, i64 %idxprom104, !dbg !3010
  %84 = load i32, i32* %g.addr, align 4, !dbg !3011
  %idxprom106 = sext i32 %84 to i64, !dbg !3012
  %85 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3012
  %ics107 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %85, i32 0, i32 0, !dbg !3013
  %swb_sizes108 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics107, i32 0, i32 7, !dbg !3014
  %86 = load i8*, i8** %swb_sizes108, align 8, !dbg !3014
  %arrayidx109 = getelementptr inbounds i8, i8* %86, i64 %idxprom106, !dbg !3012
  %87 = load i8, i8* %arrayidx109, align 1, !dbg !3012
  %conv110 = zext i8 %87 to i32, !dbg !3012
  call void %78(float* %79, float* %arrayidx105, i32 %conv110), !dbg !3001
  %88 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3015
  %abs_pow34111 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %88, i32 0, i32 32, !dbg !3016
  %89 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34111, align 8, !dbg !3016
  %90 = load float*, float** %R34, align 8, !dbg !3017
  %91 = load i32, i32* %start.addr, align 4, !dbg !3018
  %92 = load i32, i32* %w.addr, align 4, !dbg !3019
  %93 = load i32, i32* %w2, align 4, !dbg !3020
  %add112 = add nsw i32 %92, %93, !dbg !3021
  %mul113 = mul nsw i32 %add112, 128, !dbg !3022
  %add114 = add nsw i32 %91, %mul113, !dbg !3023
  %idxprom115 = sext i32 %add114 to i64, !dbg !3024
  %94 = load float*, float** %R, align 8, !dbg !3024
  %arrayidx116 = getelementptr inbounds float, float* %94, i64 %idxprom115, !dbg !3024
  %95 = load i32, i32* %g.addr, align 4, !dbg !3025
  %idxprom117 = sext i32 %95 to i64, !dbg !3026
  %96 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3026
  %ics118 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %96, i32 0, i32 0, !dbg !3027
  %swb_sizes119 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics118, i32 0, i32 7, !dbg !3028
  %97 = load i8*, i8** %swb_sizes119, align 8, !dbg !3028
  %arrayidx120 = getelementptr inbounds i8, i8* %97, i64 %idxprom117, !dbg !3026
  %98 = load i8, i8* %arrayidx120, align 1, !dbg !3026
  %conv121 = zext i8 %98 to i32, !dbg !3026
  call void %89(float* %90, float* %arrayidx116, i32 %conv121), !dbg !3015
  %99 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3029
  %abs_pow34122 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %99, i32 0, i32 32, !dbg !3030
  %100 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34122, align 8, !dbg !3030
  %101 = load float*, float** %I34, align 8, !dbg !3031
  %102 = load float*, float** %IS, align 8, !dbg !3032
  %103 = load i32, i32* %g.addr, align 4, !dbg !3033
  %idxprom123 = sext i32 %103 to i64, !dbg !3034
  %104 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3034
  %ics124 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %104, i32 0, i32 0, !dbg !3035
  %swb_sizes125 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics124, i32 0, i32 7, !dbg !3036
  %105 = load i8*, i8** %swb_sizes125, align 8, !dbg !3036
  %arrayidx126 = getelementptr inbounds i8, i8* %105, i64 %idxprom123, !dbg !3034
  %106 = load i8, i8* %arrayidx126, align 1, !dbg !3034
  %conv127 = zext i8 %106 to i32, !dbg !3034
  call void %100(float* %101, float* %102, i32 %conv127), !dbg !3029
  %107 = load i32, i32* %g.addr, align 4, !dbg !3037
  %idxprom128 = sext i32 %107 to i64, !dbg !3038
  %108 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3038
  %ics129 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %108, i32 0, i32 0, !dbg !3039
  %swb_sizes130 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics129, i32 0, i32 7, !dbg !3040
  %109 = load i8*, i8** %swb_sizes130, align 8, !dbg !3040
  %arrayidx131 = getelementptr inbounds i8, i8* %109, i64 %idxprom128, !dbg !3038
  %110 = load i8, i8* %arrayidx131, align 1, !dbg !3038
  %conv132 = zext i8 %110 to i32, !dbg !3038
  %111 = load float*, float** %I34, align 8, !dbg !3041
  %call133 = call float @find_max_val(i32 1, i32 %conv132, float* %111), !dbg !3042
  store float %call133, float* %maxval, align 4, !dbg !3043
  %112 = load float, float* %maxval, align 4, !dbg !3044
  %113 = load i32, i32* %is_sf_idx, align 4, !dbg !3045
  %call134 = call i32 @find_min_book(float %112, i32 %113), !dbg !3046
  store i32 %call134, i32* %is_band_type, align 4, !dbg !3047
  %114 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3048
  %115 = load i32, i32* %start.addr, align 4, !dbg !3049
  %116 = load i32, i32* %w.addr, align 4, !dbg !3050
  %117 = load i32, i32* %w2, align 4, !dbg !3051
  %add135 = add nsw i32 %116, %117, !dbg !3052
  %mul136 = mul nsw i32 %add135, 128, !dbg !3053
  %add137 = add nsw i32 %115, %mul136, !dbg !3054
  %idxprom138 = sext i32 %add137 to i64, !dbg !3055
  %118 = load float*, float** %L, align 8, !dbg !3055
  %arrayidx139 = getelementptr inbounds float, float* %118, i64 %idxprom138, !dbg !3055
  %119 = load float*, float** %L34, align 8, !dbg !3056
  %120 = load i32, i32* %g.addr, align 4, !dbg !3057
  %idxprom140 = sext i32 %120 to i64, !dbg !3058
  %121 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3058
  %ics141 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %121, i32 0, i32 0, !dbg !3059
  %swb_sizes142 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics141, i32 0, i32 7, !dbg !3060
  %122 = load i8*, i8** %swb_sizes142, align 8, !dbg !3060
  %arrayidx143 = getelementptr inbounds i8, i8* %122, i64 %idxprom140, !dbg !3058
  %123 = load i8, i8* %arrayidx143, align 1, !dbg !3058
  %conv144 = zext i8 %123 to i32, !dbg !3058
  %124 = load i32, i32* %w.addr, align 4, !dbg !3061
  %mul145 = mul nsw i32 %124, 16, !dbg !3062
  %125 = load i32, i32* %g.addr, align 4, !dbg !3063
  %add146 = add nsw i32 %mul145, %125, !dbg !3064
  %idxprom147 = sext i32 %add146 to i64, !dbg !3065
  %126 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3065
  %sf_idx148 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %126, i32 0, i32 7, !dbg !3066
  %arrayidx149 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx148, i64 0, i64 %idxprom147, !dbg !3065
  %127 = load i32, i32* %arrayidx149, align 4, !dbg !3065
  %128 = load i32, i32* %w.addr, align 4, !dbg !3067
  %mul150 = mul nsw i32 %128, 16, !dbg !3068
  %129 = load i32, i32* %g.addr, align 4, !dbg !3069
  %add151 = add nsw i32 %mul150, %129, !dbg !3070
  %idxprom152 = sext i32 %add151 to i64, !dbg !3071
  %130 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3071
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %130, i32 0, i32 3, !dbg !3072
  %arrayidx153 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom152, !dbg !3071
  %131 = load i32, i32* %arrayidx153, align 4, !dbg !3071
  %132 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3073
  %lambda = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %132, i32 0, i32 22, !dbg !3074
  %133 = load float, float* %lambda, align 8, !dbg !3074
  %134 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band0, align 8, !dbg !3075
  %threshold154 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %134, i32 0, i32 2, !dbg !3076
  %135 = load float, float* %threshold154, align 4, !dbg !3076
  %div155 = fdiv float %133, %135, !dbg !3077
  %call156 = call float @quantize_band_cost(%struct.AACEncContext* %114, float* %arrayidx139, float* %119, i32 %conv144, i32 %127, i32 %131, float %div155, float 0x7FF0000000000000, i32* null, float* null, i32 0), !dbg !3078
  %136 = load float, float* %dist1, align 4, !dbg !3079
  %add157 = fadd float %136, %call156, !dbg !3079
  store float %add157, float* %dist1, align 4, !dbg !3079
  %137 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3080
  %138 = load i32, i32* %start.addr, align 4, !dbg !3081
  %139 = load i32, i32* %w.addr, align 4, !dbg !3082
  %140 = load i32, i32* %w2, align 4, !dbg !3083
  %add158 = add nsw i32 %139, %140, !dbg !3084
  %mul159 = mul nsw i32 %add158, 128, !dbg !3085
  %add160 = add nsw i32 %138, %mul159, !dbg !3086
  %idxprom161 = sext i32 %add160 to i64, !dbg !3087
  %141 = load float*, float** %R, align 8, !dbg !3087
  %arrayidx162 = getelementptr inbounds float, float* %141, i64 %idxprom161, !dbg !3087
  %142 = load float*, float** %R34, align 8, !dbg !3088
  %143 = load i32, i32* %g.addr, align 4, !dbg !3089
  %idxprom163 = sext i32 %143 to i64, !dbg !3090
  %144 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !3090
  %ics164 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %144, i32 0, i32 0, !dbg !3091
  %swb_sizes165 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics164, i32 0, i32 7, !dbg !3092
  %145 = load i8*, i8** %swb_sizes165, align 8, !dbg !3092
  %arrayidx166 = getelementptr inbounds i8, i8* %145, i64 %idxprom163, !dbg !3090
  %146 = load i8, i8* %arrayidx166, align 1, !dbg !3090
  %conv167 = zext i8 %146 to i32, !dbg !3090
  %147 = load i32, i32* %w.addr, align 4, !dbg !3093
  %mul168 = mul nsw i32 %147, 16, !dbg !3094
  %148 = load i32, i32* %g.addr, align 4, !dbg !3095
  %add169 = add nsw i32 %mul168, %148, !dbg !3096
  %idxprom170 = sext i32 %add169 to i64, !dbg !3097
  %149 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !3097
  %sf_idx171 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %149, i32 0, i32 7, !dbg !3098
  %arrayidx172 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx171, i64 0, i64 %idxprom170, !dbg !3097
  %150 = load i32, i32* %arrayidx172, align 4, !dbg !3097
  %151 = load i32, i32* %w.addr, align 4, !dbg !3099
  %mul173 = mul nsw i32 %151, 16, !dbg !3100
  %152 = load i32, i32* %g.addr, align 4, !dbg !3101
  %add174 = add nsw i32 %mul173, %152, !dbg !3102
  %idxprom175 = sext i32 %add174 to i64, !dbg !3103
  %153 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !3103
  %band_type176 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %153, i32 0, i32 3, !dbg !3104
  %arrayidx177 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type176, i64 0, i64 %idxprom175, !dbg !3103
  %154 = load i32, i32* %arrayidx177, align 4, !dbg !3103
  %155 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3105
  %lambda178 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %155, i32 0, i32 22, !dbg !3106
  %156 = load float, float* %lambda178, align 8, !dbg !3106
  %157 = load %struct.FFPsyBand*, %struct.FFPsyBand** %band1, align 8, !dbg !3107
  %threshold179 = getelementptr inbounds %struct.FFPsyBand, %struct.FFPsyBand* %157, i32 0, i32 2, !dbg !3108
  %158 = load float, float* %threshold179, align 4, !dbg !3108
  %div180 = fdiv float %156, %158, !dbg !3109
  %call181 = call float @quantize_band_cost(%struct.AACEncContext* %137, float* %arrayidx162, float* %142, i32 %conv167, i32 %150, i32 %154, float %div180, float 0x7FF0000000000000, i32* null, float* null, i32 0), !dbg !3110
  %159 = load float, float* %dist1, align 4, !dbg !3111
  %add182 = fadd float %159, %call181, !dbg !3111
  store float %add182, float* %dist1, align 4, !dbg !3111
  %160 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3112
  %161 = load float*, float** %IS, align 8, !dbg !3113
  %162 = load float*, float** %I34, align 8, !dbg !3114
  %163 = load i32, i32* %g.addr, align 4, !dbg !3115
  %idxprom183 = sext i32 %163 to i64, !dbg !3116
  %164 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3116
  %ics184 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %164, i32 0, i32 0, !dbg !3117
  %swb_sizes185 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics184, i32 0, i32 7, !dbg !3118
  %165 = load i8*, i8** %swb_sizes185, align 8, !dbg !3118
  %arrayidx186 = getelementptr inbounds i8, i8* %165, i64 %idxprom183, !dbg !3116
  %166 = load i8, i8* %arrayidx186, align 1, !dbg !3116
  %conv187 = zext i8 %166 to i32, !dbg !3116
  %167 = load i32, i32* %is_sf_idx, align 4, !dbg !3119
  %168 = load i32, i32* %is_band_type, align 4, !dbg !3120
  %169 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3121
  %lambda188 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %169, i32 0, i32 22, !dbg !3122
  %170 = load float, float* %lambda188, align 8, !dbg !3122
  %171 = load float, float* %minthr, align 4, !dbg !3123
  %div189 = fdiv float %170, %171, !dbg !3124
  %call190 = call float @quantize_band_cost(%struct.AACEncContext* %160, float* %161, float* %162, i32 %conv187, i32 %167, i32 %168, float %div189, float 0x7FF0000000000000, i32* null, float* null, i32 0), !dbg !3125
  %172 = load float, float* %dist2, align 4, !dbg !3126
  %add191 = fadd float %172, %call190, !dbg !3126
  store float %add191, float* %dist2, align 4, !dbg !3126
  store i32 0, i32* %i, align 4, !dbg !3127
  br label %for.cond192, !dbg !3129

for.cond192:                                      ; preds = %for.inc227, %for.end
  %173 = load i32, i32* %i, align 4, !dbg !3130
  %174 = load i32, i32* %g.addr, align 4, !dbg !3133
  %idxprom193 = sext i32 %174 to i64, !dbg !3134
  %175 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3134
  %ics194 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %175, i32 0, i32 0, !dbg !3135
  %swb_sizes195 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics194, i32 0, i32 7, !dbg !3136
  %176 = load i8*, i8** %swb_sizes195, align 8, !dbg !3136
  %arrayidx196 = getelementptr inbounds i8, i8* %176, i64 %idxprom193, !dbg !3134
  %177 = load i8, i8* %arrayidx196, align 1, !dbg !3134
  %conv197 = zext i8 %177 to i32, !dbg !3134
  %cmp198 = icmp slt i32 %173, %conv197, !dbg !3137
  br i1 %cmp198, label %for.body200, label %for.end229, !dbg !3138

for.body200:                                      ; preds = %for.cond192
  %178 = load i32, i32* %i, align 4, !dbg !3139
  %idxprom201 = sext i32 %178 to i64, !dbg !3141
  %179 = load float*, float** %L34, align 8, !dbg !3141
  %arrayidx202 = getelementptr inbounds float, float* %179, i64 %idxprom201, !dbg !3141
  %180 = load float, float* %arrayidx202, align 4, !dbg !3141
  %181 = load i32, i32* %i, align 4, !dbg !3142
  %idxprom203 = sext i32 %181 to i64, !dbg !3143
  %182 = load float*, float** %I34, align 8, !dbg !3143
  %arrayidx204 = getelementptr inbounds float, float* %182, i64 %idxprom203, !dbg !3143
  %183 = load float, float* %arrayidx204, align 4, !dbg !3143
  %sub205 = fsub float %180, %183, !dbg !3144
  %184 = load i32, i32* %i, align 4, !dbg !3145
  %idxprom206 = sext i32 %184 to i64, !dbg !3146
  %185 = load float*, float** %L34, align 8, !dbg !3146
  %arrayidx207 = getelementptr inbounds float, float* %185, i64 %idxprom206, !dbg !3146
  %186 = load float, float* %arrayidx207, align 4, !dbg !3146
  %187 = load i32, i32* %i, align 4, !dbg !3147
  %idxprom208 = sext i32 %187 to i64, !dbg !3148
  %188 = load float*, float** %I34, align 8, !dbg !3148
  %arrayidx209 = getelementptr inbounds float, float* %188, i64 %idxprom208, !dbg !3148
  %189 = load float, float* %arrayidx209, align 4, !dbg !3148
  %sub210 = fsub float %186, %189, !dbg !3149
  %mul211 = fmul float %sub205, %sub210, !dbg !3150
  %190 = load float, float* %dist_spec_err, align 4, !dbg !3151
  %add212 = fadd float %190, %mul211, !dbg !3151
  store float %add212, float* %dist_spec_err, align 4, !dbg !3151
  %191 = load i32, i32* %i, align 4, !dbg !3152
  %idxprom213 = sext i32 %191 to i64, !dbg !3153
  %192 = load float*, float** %R34, align 8, !dbg !3153
  %arrayidx214 = getelementptr inbounds float, float* %192, i64 %idxprom213, !dbg !3153
  %193 = load float, float* %arrayidx214, align 4, !dbg !3153
  %194 = load i32, i32* %i, align 4, !dbg !3154
  %idxprom215 = sext i32 %194 to i64, !dbg !3155
  %195 = load float*, float** %I34, align 8, !dbg !3155
  %arrayidx216 = getelementptr inbounds float, float* %195, i64 %idxprom215, !dbg !3155
  %196 = load float, float* %arrayidx216, align 4, !dbg !3155
  %197 = load float, float* %e01_34, align 4, !dbg !3156
  %mul217 = fmul float %196, %197, !dbg !3157
  %sub218 = fsub float %193, %mul217, !dbg !3158
  %198 = load i32, i32* %i, align 4, !dbg !3159
  %idxprom219 = sext i32 %198 to i64, !dbg !3160
  %199 = load float*, float** %R34, align 8, !dbg !3160
  %arrayidx220 = getelementptr inbounds float, float* %199, i64 %idxprom219, !dbg !3160
  %200 = load float, float* %arrayidx220, align 4, !dbg !3160
  %201 = load i32, i32* %i, align 4, !dbg !3161
  %idxprom221 = sext i32 %201 to i64, !dbg !3162
  %202 = load float*, float** %I34, align 8, !dbg !3162
  %arrayidx222 = getelementptr inbounds float, float* %202, i64 %idxprom221, !dbg !3162
  %203 = load float, float* %arrayidx222, align 4, !dbg !3162
  %204 = load float, float* %e01_34, align 4, !dbg !3163
  %mul223 = fmul float %203, %204, !dbg !3164
  %sub224 = fsub float %200, %mul223, !dbg !3165
  %mul225 = fmul float %sub218, %sub224, !dbg !3166
  %205 = load float, float* %dist_spec_err, align 4, !dbg !3167
  %add226 = fadd float %205, %mul225, !dbg !3167
  store float %add226, float* %dist_spec_err, align 4, !dbg !3167
  br label %for.inc227, !dbg !3168

for.inc227:                                       ; preds = %for.body200
  %206 = load i32, i32* %i, align 4, !dbg !3169
  %inc228 = add nsw i32 %206, 1, !dbg !3169
  store i32 %inc228, i32* %i, align 4, !dbg !3169
  br label %for.cond192, !dbg !3171, !llvm.loop !3172

for.end229:                                       ; preds = %for.cond192
  %207 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3174
  %lambda230 = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %207, i32 0, i32 22, !dbg !3175
  %208 = load float, float* %lambda230, align 8, !dbg !3175
  %209 = load float, float* %minthr, align 4, !dbg !3176
  %div231 = fdiv float %208, %209, !dbg !3177
  %210 = load float, float* %dist_spec_err, align 4, !dbg !3178
  %mul232 = fmul float %210, %div231, !dbg !3178
  store float %mul232, float* %dist_spec_err, align 4, !dbg !3178
  %211 = load float, float* %dist_spec_err, align 4, !dbg !3179
  %212 = load float, float* %dist2, align 4, !dbg !3180
  %add233 = fadd float %212, %211, !dbg !3180
  store float %add233, float* %dist2, align 4, !dbg !3180
  br label %for.inc234, !dbg !3181

for.inc234:                                       ; preds = %for.end229
  %213 = load i32, i32* %w2, align 4, !dbg !3182
  %inc235 = add nsw i32 %213, 1, !dbg !3182
  store i32 %inc235, i32* %w2, align 4, !dbg !3182
  br label %for.cond, !dbg !3184, !llvm.loop !3185

for.end236:                                       ; preds = %for.cond
  %214 = load float, float* %dist2, align 4, !dbg !3187
  %215 = load float, float* %dist1, align 4, !dbg !3188
  %cmp237 = fcmp ole float %214, %215, !dbg !3189
  %conv238 = zext i1 %cmp237 to i32, !dbg !3189
  %pass239 = getelementptr inbounds %struct.AACISError, %struct.AACISError* %is_error, i32 0, i32 0, !dbg !3190
  store i32 %conv238, i32* %pass239, align 4, !dbg !3191
  %216 = load i32, i32* %phase.addr, align 4, !dbg !3192
  %phase240 = getelementptr inbounds %struct.AACISError, %struct.AACISError* %is_error, i32 0, i32 1, !dbg !3193
  store i32 %216, i32* %phase240, align 4, !dbg !3194
  %217 = load float, float* %dist2, align 4, !dbg !3195
  %218 = load float, float* %dist1, align 4, !dbg !3196
  %sub241 = fsub float %217, %218, !dbg !3197
  %error = getelementptr inbounds %struct.AACISError, %struct.AACISError* %is_error, i32 0, i32 2, !dbg !3198
  store float %sub241, float* %error, align 4, !dbg !3199
  %219 = load float, float* %dist1, align 4, !dbg !3200
  %dist1242 = getelementptr inbounds %struct.AACISError, %struct.AACISError* %is_error, i32 0, i32 3, !dbg !3201
  store float %219, float* %dist1242, align 4, !dbg !3202
  %220 = load float, float* %dist2, align 4, !dbg !3203
  %dist2243 = getelementptr inbounds %struct.AACISError, %struct.AACISError* %is_error, i32 0, i32 4, !dbg !3204
  store float %220, float* %dist2243, align 4, !dbg !3205
  %221 = load float, float* %ener01.addr, align 4, !dbg !3206
  %ener01244 = getelementptr inbounds %struct.AACISError, %struct.AACISError* %is_error, i32 0, i32 5, !dbg !3207
  store float %221, float* %ener01244, align 4, !dbg !3208
  %222 = bitcast %struct.AACISError* %agg.result to i8*, !dbg !3209
  %223 = bitcast %struct.AACISError* %is_error to i8*, !dbg !3209
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %222, i8* %223, i64 24, i32 4, i1 false), !dbg !3209
  br label %return, !dbg !3210

return:                                           ; preds = %for.end236, %if.then
  ret void, !dbg !3211
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: inlinehint nounwind uwtable
define internal float @pos_pow34(float %a) #3 !dbg !3212 {
entry:
  %a.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !3216, metadata !2763), !dbg !3217
  %0 = load float, float* %a.addr, align 4, !dbg !3218
  %1 = load float, float* %a.addr, align 4, !dbg !3219
  %call = call float @sqrtf(float %1) #8, !dbg !3220
  %mul = fmul float %0, %call, !dbg !3221
  %call1 = call float @sqrtf(float %mul) #8, !dbg !3222
  ret float %call1, !dbg !3224
}

; Function Attrs: nounwind
declare double @sqrt(double) #4

; Function Attrs: inlinehint nounwind uwtable
define internal float @find_max_val(i32 %group_len, i32 %swb_size, float* %scaled) #3 !dbg !3225 {
entry:
  %group_len.addr = alloca i32, align 4
  %swb_size.addr = alloca i32, align 4
  %scaled.addr = alloca float*, align 8
  %maxval = alloca float, align 4
  %w2 = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %group_len, i32* %group_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group_len.addr, metadata !3228, metadata !2763), !dbg !3229
  store i32 %swb_size, i32* %swb_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %swb_size.addr, metadata !3230, metadata !2763), !dbg !3231
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !3232, metadata !2763), !dbg !3233
  call void @llvm.dbg.declare(metadata float* %maxval, metadata !3234, metadata !2763), !dbg !3235
  store float 0.000000e+00, float* %maxval, align 4, !dbg !3235
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !3236, metadata !2763), !dbg !3237
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3238, metadata !2763), !dbg !3239
  store i32 0, i32* %w2, align 4, !dbg !3240
  br label %for.cond, !dbg !3242

for.cond:                                         ; preds = %for.inc9, %entry
  %0 = load i32, i32* %w2, align 4, !dbg !3243
  %1 = load i32, i32* %group_len.addr, align 4, !dbg !3246
  %cmp = icmp slt i32 %0, %1, !dbg !3247
  br i1 %cmp, label %for.body, label %for.end11, !dbg !3248

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3249
  br label %for.cond1, !dbg !3252

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %i, align 4, !dbg !3253
  %3 = load i32, i32* %swb_size.addr, align 4, !dbg !3256
  %cmp2 = icmp slt i32 %2, %3, !dbg !3257
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !3258

for.body3:                                        ; preds = %for.cond1
  %4 = load float, float* %maxval, align 4, !dbg !3259
  %5 = load i32, i32* %w2, align 4, !dbg !3261
  %mul = mul nsw i32 %5, 128, !dbg !3262
  %6 = load i32, i32* %i, align 4, !dbg !3263
  %add = add nsw i32 %mul, %6, !dbg !3264
  %idxprom = sext i32 %add to i64, !dbg !3265
  %7 = load float*, float** %scaled.addr, align 8, !dbg !3265
  %arrayidx = getelementptr inbounds float, float* %7, i64 %idxprom, !dbg !3265
  %8 = load float, float* %arrayidx, align 4, !dbg !3265
  %cmp4 = fcmp ogt float %4, %8, !dbg !3266
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !3267

cond.true:                                        ; preds = %for.body3
  %9 = load float, float* %maxval, align 4, !dbg !3268
  br label %cond.end, !dbg !3270

cond.false:                                       ; preds = %for.body3
  %10 = load i32, i32* %w2, align 4, !dbg !3271
  %mul5 = mul nsw i32 %10, 128, !dbg !3273
  %11 = load i32, i32* %i, align 4, !dbg !3274
  %add6 = add nsw i32 %mul5, %11, !dbg !3275
  %idxprom7 = sext i32 %add6 to i64, !dbg !3276
  %12 = load float*, float** %scaled.addr, align 8, !dbg !3276
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 %idxprom7, !dbg !3276
  %13 = load float, float* %arrayidx8, align 4, !dbg !3276
  br label %cond.end, !dbg !3277

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %9, %cond.true ], [ %13, %cond.false ], !dbg !3278
  store float %cond, float* %maxval, align 4, !dbg !3280
  br label %for.inc, !dbg !3281

for.inc:                                          ; preds = %cond.end
  %14 = load i32, i32* %i, align 4, !dbg !3282
  %inc = add nsw i32 %14, 1, !dbg !3282
  store i32 %inc, i32* %i, align 4, !dbg !3282
  br label %for.cond1, !dbg !3284, !llvm.loop !3285

for.end:                                          ; preds = %for.cond1
  br label %for.inc9, !dbg !3287

for.inc9:                                         ; preds = %for.end
  %15 = load i32, i32* %w2, align 4, !dbg !3288
  %inc10 = add nsw i32 %15, 1, !dbg !3288
  store i32 %inc10, i32* %w2, align 4, !dbg !3288
  br label %for.cond, !dbg !3290, !llvm.loop !3291

for.end11:                                        ; preds = %for.cond
  %16 = load float, float* %maxval, align 4, !dbg !3293
  ret float %16, !dbg !3294
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @find_min_book(float %maxval, i32 %sf) #3 !dbg !3295 {
entry:
  %maxval.addr = alloca float, align 4
  %sf.addr = alloca i32, align 4
  %Q34 = alloca float, align 4
  %qmaxval = alloca i32, align 4
  %cb = alloca i32, align 4
  store float %maxval, float* %maxval.addr, align 4
  call void @llvm.dbg.declare(metadata float* %maxval.addr, metadata !3298, metadata !2763), !dbg !3299
  store i32 %sf, i32* %sf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sf.addr, metadata !3300, metadata !2763), !dbg !3301
  call void @llvm.dbg.declare(metadata float* %Q34, metadata !3302, metadata !2763), !dbg !3303
  %0 = load i32, i32* %sf.addr, align 4, !dbg !3304
  %sub = sub nsw i32 200, %0, !dbg !3305
  %add = add nsw i32 %sub, 140, !dbg !3306
  %sub1 = sub nsw i32 %add, 36, !dbg !3307
  %idxprom = sext i32 %sub1 to i64, !dbg !3308
  %arrayidx = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom, !dbg !3308
  %1 = load float, float* %arrayidx, align 4, !dbg !3308
  store float %1, float* %Q34, align 4, !dbg !3303
  call void @llvm.dbg.declare(metadata i32* %qmaxval, metadata !3309, metadata !2763), !dbg !3310
  call void @llvm.dbg.declare(metadata i32* %cb, metadata !3311, metadata !2763), !dbg !3312
  %2 = load float, float* %maxval.addr, align 4, !dbg !3313
  %3 = load float, float* %Q34, align 4, !dbg !3314
  %mul = fmul float %2, %3, !dbg !3315
  %add2 = fadd float %mul, 0x3FD9F212E0000000, !dbg !3316
  %conv = fptosi float %add2 to i32, !dbg !3313
  store i32 %conv, i32* %qmaxval, align 4, !dbg !3317
  %4 = load i32, i32* %qmaxval, align 4, !dbg !3318
  %conv3 = sext i32 %4 to i64, !dbg !3318
  %cmp = icmp uge i64 %conv3, 14, !dbg !3320
  br i1 %cmp, label %if.then, label %if.else, !dbg !3321

if.then:                                          ; preds = %entry
  store i32 11, i32* %cb, align 4, !dbg !3322
  br label %if.end, !dbg !3323

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %qmaxval, align 4, !dbg !3324
  %idxprom5 = sext i32 %5 to i64, !dbg !3325
  %arrayidx6 = getelementptr inbounds [14 x i8], [14 x i8]* @aac_maxval_cb, i64 0, i64 %idxprom5, !dbg !3325
  %6 = load i8, i8* %arrayidx6, align 1, !dbg !3325
  %conv7 = zext i8 %6 to i32, !dbg !3325
  store i32 %conv7, i32* %cb, align 4, !dbg !3326
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %cb, align 4, !dbg !3327
  ret i32 %7, !dbg !3328
}

; Function Attrs: inlinehint nounwind uwtable
define internal float @quantize_band_cost(%struct.AACEncContext* %s, float* %in, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy, i32 %rtz) #3 !dbg !3329 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %in.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  %rtz.addr = alloca i32, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !3332, metadata !2763), !dbg !3333
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !3334, metadata !2763), !dbg !3335
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !3336, metadata !2763), !dbg !3337
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !3338, metadata !2763), !dbg !3339
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !3340, metadata !2763), !dbg !3341
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !3342, metadata !2763), !dbg !3343
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !3344, metadata !2763), !dbg !3345
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !3346, metadata !2763), !dbg !3347
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !3348, metadata !2763), !dbg !3349
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !3350, metadata !2763), !dbg !3351
  store i32 %rtz, i32* %rtz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rtz.addr, metadata !3352, metadata !2763), !dbg !3353
  %0 = load i32, i32* %cb.addr, align 4, !dbg !3354
  %idxprom = sext i32 %0 to i64, !dbg !3355
  %1 = load i32, i32* %rtz.addr, align 4, !dbg !3356
  %tobool = icmp ne i32 %1, 0, !dbg !3357
  %cond = select i1 %tobool, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** getelementptr inbounds ([16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*], [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*]* @quantize_and_encode_band_cost_rtz_arr, i32 0, i32 0), float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** getelementptr inbounds ([16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*], [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*]* @quantize_and_encode_band_cost_arr, i32 0, i32 0), !dbg !3357
  %arrayidx = getelementptr inbounds float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** %cond, i64 %idxprom, !dbg !3355
  %2 = load float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*, float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)** %arrayidx, align 8, !dbg !3355
  %3 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3358
  %4 = load float*, float** %in.addr, align 8, !dbg !3357
  %5 = load float*, float** %scaled.addr, align 8, !dbg !3357
  %6 = load i32, i32* %size.addr, align 4, !dbg !3359
  %7 = load i32, i32* %scale_idx.addr, align 4, !dbg !3360
  %8 = load i32, i32* %cb.addr, align 4, !dbg !3361
  %9 = load float, float* %lambda.addr, align 4, !dbg !3362
  %10 = load float, float* %uplim.addr, align 4, !dbg !3363
  %11 = load i32*, i32** %bits.addr, align 8, !dbg !3364
  %12 = load float*, float** %energy.addr, align 8, !dbg !3365
  %call = call float %2(%struct.AACEncContext* %3, %struct.PutBitContext* null, float* %4, float* null, float* %5, i32 %6, i32 %7, i32 %8, float %9, float %10, i32* %11, float* %12), !dbg !3355
  ret float %call, !dbg !3366
}

; Function Attrs: nounwind uwtable
define void @ff_aac_search_for_is(%struct.AACEncContext* %s, %struct.AVCodecContext* %avctx, %struct.ChannelElement* %cpe) #0 !dbg !3367 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %cpe.addr = alloca %struct.ChannelElement*, align 8
  %sce0 = alloca %struct.SingleChannelElement*, align 8
  %sce1 = alloca %struct.SingleChannelElement*, align 8
  %start = alloca i32, align 4
  %count = alloca i32, align 4
  %w = alloca i32, align 4
  %w2 = alloca i32, align 4
  %g = alloca i32, align 4
  %i = alloca i32, align 4
  %prev_sf1 = alloca i32, align 4
  %prev_bt = alloca i32, align 4
  %prev_is = alloca i32, align 4
  %freq_mult = alloca float, align 4
  %nextband1 = alloca [128 x i8], align 16
  %ener0 = alloca float, align 4
  %ener1 = alloca float, align 4
  %ener01 = alloca float, align 4
  %ener01p = alloca float, align 4
  %ph_err1 = alloca %struct.AACISError, align 4
  %ph_err2 = alloca %struct.AACISError, align 4
  %best = alloca %struct.AACISError*, align 8
  %coef0 = alloca float, align 4
  %coef1 = alloca float, align 4
  %tmp = alloca %struct.AACISError, align 4
  %tmp101 = alloca %struct.AACISError, align 4
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !3370, metadata !2763), !dbg !3371
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3372, metadata !2763), !dbg !3373
  store %struct.ChannelElement* %cpe, %struct.ChannelElement** %cpe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ChannelElement** %cpe.addr, metadata !3374, metadata !2763), !dbg !3375
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce0, metadata !3376, metadata !2763), !dbg !3377
  %0 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3378
  %ch = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %0, i32 0, i32 7, !dbg !3379
  %arrayidx = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch, i64 0, i64 0, !dbg !3378
  store %struct.SingleChannelElement* %arrayidx, %struct.SingleChannelElement** %sce0, align 8, !dbg !3377
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce1, metadata !3380, metadata !2763), !dbg !3381
  %1 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3382
  %ch1 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %1, i32 0, i32 7, !dbg !3383
  %arrayidx2 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch1, i64 0, i64 1, !dbg !3382
  store %struct.SingleChannelElement* %arrayidx2, %struct.SingleChannelElement** %sce1, align 8, !dbg !3381
  call void @llvm.dbg.declare(metadata i32* %start, metadata !3384, metadata !2763), !dbg !3385
  store i32 0, i32* %start, align 4, !dbg !3385
  call void @llvm.dbg.declare(metadata i32* %count, metadata !3386, metadata !2763), !dbg !3387
  store i32 0, i32* %count, align 4, !dbg !3387
  call void @llvm.dbg.declare(metadata i32* %w, metadata !3388, metadata !2763), !dbg !3389
  call void @llvm.dbg.declare(metadata i32* %w2, metadata !3390, metadata !2763), !dbg !3391
  call void @llvm.dbg.declare(metadata i32* %g, metadata !3392, metadata !2763), !dbg !3393
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3394, metadata !2763), !dbg !3395
  call void @llvm.dbg.declare(metadata i32* %prev_sf1, metadata !3396, metadata !2763), !dbg !3397
  store i32 -1, i32* %prev_sf1, align 4, !dbg !3397
  call void @llvm.dbg.declare(metadata i32* %prev_bt, metadata !3398, metadata !2763), !dbg !3399
  store i32 -1, i32* %prev_bt, align 4, !dbg !3399
  call void @llvm.dbg.declare(metadata i32* %prev_is, metadata !3400, metadata !2763), !dbg !3401
  store i32 0, i32* %prev_is, align 4, !dbg !3401
  call void @llvm.dbg.declare(metadata float* %freq_mult, metadata !3402, metadata !2763), !dbg !3403
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3404
  %sample_rate = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %2, i32 0, i32 82, !dbg !3405
  %3 = load i32, i32* %sample_rate, align 8, !dbg !3405
  %conv = sitofp i32 %3 to float, !dbg !3404
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3406
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 0, !dbg !3407
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !3408
  %5 = load i32, i32* %num_windows, align 4, !dbg !3408
  %conv3 = sitofp i32 %5 to float, !dbg !3406
  %div = fdiv float 1.024000e+03, %conv3, !dbg !3409
  %div4 = fdiv float %conv, %div, !dbg !3410
  %div5 = fdiv float %div4, 2.000000e+00, !dbg !3411
  store float %div5, float* %freq_mult, align 4, !dbg !3403
  call void @llvm.dbg.declare(metadata [128 x i8]* %nextband1, metadata !3412, metadata !2763), !dbg !3413
  %6 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3414
  %common_window = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %6, i32 0, i32 1, !dbg !3416
  %7 = load i32, i32* %common_window, align 4, !dbg !3416
  %tobool = icmp ne i32 %7, 0, !dbg !3414
  br i1 %tobool, label %if.end, label %if.then, !dbg !3417

if.then:                                          ; preds = %entry
  br label %return, !dbg !3418

if.end:                                           ; preds = %entry
  %8 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !3419
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %nextband1, i32 0, i32 0, !dbg !3420
  call void @ff_init_nextband_map(%struct.SingleChannelElement* %8, i8* %arraydecay), !dbg !3421
  store i32 0, i32* %w, align 4, !dbg !3422
  br label %for.cond, !dbg !3424

for.cond:                                         ; preds = %for.inc221, %if.end
  %9 = load i32, i32* %w, align 4, !dbg !3425
  %10 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3428
  %ics6 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %10, i32 0, i32 0, !dbg !3429
  %num_windows7 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics6, i32 0, i32 9, !dbg !3430
  %11 = load i32, i32* %num_windows7, align 4, !dbg !3430
  %cmp = icmp slt i32 %9, %11, !dbg !3431
  br i1 %cmp, label %for.body, label %for.end228, !dbg !3432

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %start, align 4, !dbg !3433
  store i32 0, i32* %g, align 4, !dbg !3435
  br label %for.cond9, !dbg !3437

for.cond9:                                        ; preds = %for.inc218, %for.body
  %12 = load i32, i32* %g, align 4, !dbg !3438
  %13 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3441
  %ics10 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %13, i32 0, i32 0, !dbg !3442
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics10, i32 0, i32 8, !dbg !3443
  %14 = load i32, i32* %num_swb, align 32, !dbg !3443
  %cmp11 = icmp slt i32 %12, %14, !dbg !3444
  br i1 %cmp11, label %for.body13, label %for.end220, !dbg !3445

for.body13:                                       ; preds = %for.cond9
  %15 = load i32, i32* %start, align 4, !dbg !3446
  %conv14 = sitofp i32 %15 to float, !dbg !3446
  %16 = load float, float* %freq_mult, align 4, !dbg !3449
  %mul = fmul float %conv14, %16, !dbg !3450
  %17 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3451
  %lambda = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %17, i32 0, i32 22, !dbg !3452
  %18 = load float, float* %lambda, align 8, !dbg !3452
  %div15 = fdiv float %18, 1.700000e+02, !dbg !3453
  %mul16 = fmul float 6.100000e+03, %div15, !dbg !3454
  %cmp17 = fcmp ogt float %mul, %mul16, !dbg !3455
  br i1 %cmp17, label %land.lhs.true, label %if.end185, !dbg !3456

land.lhs.true:                                    ; preds = %for.body13
  %19 = load i32, i32* %w, align 4, !dbg !3457
  %mul19 = mul nsw i32 %19, 16, !dbg !3458
  %20 = load i32, i32* %g, align 4, !dbg !3459
  %add = add nsw i32 %mul19, %20, !dbg !3460
  %idxprom = sext i32 %add to i64, !dbg !3461
  %21 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3461
  %ch20 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %21, i32 0, i32 7, !dbg !3462
  %arrayidx21 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch20, i64 0, i64 0, !dbg !3461
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx21, i32 0, i32 3, !dbg !3463
  %arrayidx22 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom, !dbg !3461
  %22 = load i32, i32* %arrayidx22, align 4, !dbg !3461
  %cmp23 = icmp ne i32 %22, 13, !dbg !3464
  br i1 %cmp23, label %land.lhs.true25, label %if.end185, !dbg !3465

land.lhs.true25:                                  ; preds = %land.lhs.true
  %23 = load i32, i32* %w, align 4, !dbg !3466
  %mul26 = mul nsw i32 %23, 16, !dbg !3468
  %24 = load i32, i32* %g, align 4, !dbg !3469
  %add27 = add nsw i32 %mul26, %24, !dbg !3470
  %idxprom28 = sext i32 %add27 to i64, !dbg !3471
  %25 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3471
  %ch29 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %25, i32 0, i32 7, !dbg !3472
  %arrayidx30 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch29, i64 0, i64 0, !dbg !3471
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx30, i32 0, i32 8, !dbg !3473
  %arrayidx31 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom28, !dbg !3471
  %26 = load i8, i8* %arrayidx31, align 1, !dbg !3471
  %tobool32 = icmp ne i8 %26, 0, !dbg !3471
  br i1 %tobool32, label %if.end185, label %land.lhs.true33, !dbg !3474

land.lhs.true33:                                  ; preds = %land.lhs.true25
  %27 = load i32, i32* %w, align 4, !dbg !3475
  %mul34 = mul nsw i32 %27, 16, !dbg !3476
  %28 = load i32, i32* %g, align 4, !dbg !3477
  %add35 = add nsw i32 %mul34, %28, !dbg !3478
  %idxprom36 = sext i32 %add35 to i64, !dbg !3479
  %29 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3479
  %ch37 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %29, i32 0, i32 7, !dbg !3480
  %arrayidx38 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch37, i64 0, i64 1, !dbg !3479
  %band_type39 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx38, i32 0, i32 3, !dbg !3481
  %arrayidx40 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type39, i64 0, i64 %idxprom36, !dbg !3479
  %30 = load i32, i32* %arrayidx40, align 4, !dbg !3479
  %cmp41 = icmp ne i32 %30, 13, !dbg !3482
  br i1 %cmp41, label %land.lhs.true43, label %if.end185, !dbg !3483

land.lhs.true43:                                  ; preds = %land.lhs.true33
  %31 = load i32, i32* %w, align 4, !dbg !3484
  %mul44 = mul nsw i32 %31, 16, !dbg !3485
  %32 = load i32, i32* %g, align 4, !dbg !3486
  %add45 = add nsw i32 %mul44, %32, !dbg !3487
  %idxprom46 = sext i32 %add45 to i64, !dbg !3488
  %33 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3488
  %ch47 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %33, i32 0, i32 7, !dbg !3489
  %arrayidx48 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch47, i64 0, i64 1, !dbg !3488
  %zeroes49 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx48, i32 0, i32 8, !dbg !3490
  %arrayidx50 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes49, i64 0, i64 %idxprom46, !dbg !3488
  %34 = load i8, i8* %arrayidx50, align 1, !dbg !3488
  %tobool51 = icmp ne i8 %34, 0, !dbg !3488
  br i1 %tobool51, label %if.end185, label %land.lhs.true52, !dbg !3491

land.lhs.true52:                                  ; preds = %land.lhs.true43
  %35 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !3492
  %arraydecay53 = getelementptr inbounds [128 x i8], [128 x i8]* %nextband1, i32 0, i32 0, !dbg !3493
  %36 = load i32, i32* %prev_sf1, align 4, !dbg !3494
  %37 = load i32, i32* %w, align 4, !dbg !3495
  %mul54 = mul nsw i32 %37, 16, !dbg !3496
  %38 = load i32, i32* %g, align 4, !dbg !3497
  %add55 = add nsw i32 %mul54, %38, !dbg !3498
  %call = call i32 @ff_sfdelta_can_remove_band(%struct.SingleChannelElement* %35, i8* %arraydecay53, i32 %36, i32 %add55), !dbg !3499
  %tobool56 = icmp ne i32 %call, 0, !dbg !3499
  br i1 %tobool56, label %if.then57, label %if.end185, !dbg !3500

if.then57:                                        ; preds = %land.lhs.true52
  call void @llvm.dbg.declare(metadata float* %ener0, metadata !3502, metadata !2763), !dbg !3504
  store float 0.000000e+00, float* %ener0, align 4, !dbg !3504
  call void @llvm.dbg.declare(metadata float* %ener1, metadata !3505, metadata !2763), !dbg !3506
  store float 0.000000e+00, float* %ener1, align 4, !dbg !3506
  call void @llvm.dbg.declare(metadata float* %ener01, metadata !3507, metadata !2763), !dbg !3508
  store float 0.000000e+00, float* %ener01, align 4, !dbg !3508
  call void @llvm.dbg.declare(metadata float* %ener01p, metadata !3509, metadata !2763), !dbg !3510
  store float 0.000000e+00, float* %ener01p, align 4, !dbg !3510
  call void @llvm.dbg.declare(metadata %struct.AACISError* %ph_err1, metadata !3511, metadata !2763), !dbg !3512
  call void @llvm.dbg.declare(metadata %struct.AACISError* %ph_err2, metadata !3513, metadata !2763), !dbg !3514
  call void @llvm.dbg.declare(metadata %struct.AACISError** %best, metadata !3515, metadata !2763), !dbg !3517
  store i32 0, i32* %w2, align 4, !dbg !3518
  br label %for.cond58, !dbg !3520

for.cond58:                                       ; preds = %for.inc98, %if.then57
  %39 = load i32, i32* %w2, align 4, !dbg !3521
  %40 = load i32, i32* %w, align 4, !dbg !3524
  %idxprom59 = sext i32 %40 to i64, !dbg !3525
  %41 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3525
  %ics60 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %41, i32 0, i32 0, !dbg !3526
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics60, i32 0, i32 4, !dbg !3527
  %arrayidx61 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom59, !dbg !3525
  %42 = load i8, i8* %arrayidx61, align 1, !dbg !3525
  %conv62 = zext i8 %42 to i32, !dbg !3525
  %cmp63 = icmp slt i32 %39, %conv62, !dbg !3528
  br i1 %cmp63, label %for.body65, label %for.end100, !dbg !3529

for.body65:                                       ; preds = %for.cond58
  store i32 0, i32* %i, align 4, !dbg !3530
  br label %for.cond66, !dbg !3533

for.cond66:                                       ; preds = %for.inc, %for.body65
  %43 = load i32, i32* %i, align 4, !dbg !3534
  %44 = load i32, i32* %g, align 4, !dbg !3537
  %idxprom67 = sext i32 %44 to i64, !dbg !3538
  %45 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3538
  %ics68 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %45, i32 0, i32 0, !dbg !3539
  %swb_sizes = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics68, i32 0, i32 7, !dbg !3540
  %46 = load i8*, i8** %swb_sizes, align 8, !dbg !3540
  %arrayidx69 = getelementptr inbounds i8, i8* %46, i64 %idxprom67, !dbg !3538
  %47 = load i8, i8* %arrayidx69, align 1, !dbg !3538
  %conv70 = zext i8 %47 to i32, !dbg !3538
  %cmp71 = icmp slt i32 %43, %conv70, !dbg !3541
  br i1 %cmp71, label %for.body73, label %for.end, !dbg !3542

for.body73:                                       ; preds = %for.cond66
  call void @llvm.dbg.declare(metadata float* %coef0, metadata !3543, metadata !2763), !dbg !3545
  %48 = load i32, i32* %start, align 4, !dbg !3546
  %49 = load i32, i32* %w, align 4, !dbg !3547
  %50 = load i32, i32* %w2, align 4, !dbg !3548
  %add74 = add nsw i32 %49, %50, !dbg !3549
  %mul75 = mul nsw i32 %add74, 128, !dbg !3550
  %add76 = add nsw i32 %48, %mul75, !dbg !3551
  %51 = load i32, i32* %i, align 4, !dbg !3552
  %add77 = add nsw i32 %add76, %51, !dbg !3553
  %idxprom78 = sext i32 %add77 to i64, !dbg !3554
  %52 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3554
  %coeffs = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %52, i32 0, i32 14, !dbg !3555
  %arrayidx79 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs, i64 0, i64 %idxprom78, !dbg !3554
  %53 = load float, float* %arrayidx79, align 4, !dbg !3554
  store float %53, float* %coef0, align 4, !dbg !3545
  call void @llvm.dbg.declare(metadata float* %coef1, metadata !3556, metadata !2763), !dbg !3557
  %54 = load i32, i32* %start, align 4, !dbg !3558
  %55 = load i32, i32* %w, align 4, !dbg !3559
  %56 = load i32, i32* %w2, align 4, !dbg !3560
  %add80 = add nsw i32 %55, %56, !dbg !3561
  %mul81 = mul nsw i32 %add80, 128, !dbg !3562
  %add82 = add nsw i32 %54, %mul81, !dbg !3563
  %57 = load i32, i32* %i, align 4, !dbg !3564
  %add83 = add nsw i32 %add82, %57, !dbg !3565
  %idxprom84 = sext i32 %add83 to i64, !dbg !3566
  %58 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !3566
  %coeffs85 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %58, i32 0, i32 14, !dbg !3567
  %arrayidx86 = getelementptr inbounds [1024 x float], [1024 x float]* %coeffs85, i64 0, i64 %idxprom84, !dbg !3566
  %59 = load float, float* %arrayidx86, align 4, !dbg !3566
  store float %59, float* %coef1, align 4, !dbg !3557
  %60 = load float, float* %coef0, align 4, !dbg !3568
  %61 = load float, float* %coef0, align 4, !dbg !3569
  %mul87 = fmul float %60, %61, !dbg !3570
  %62 = load float, float* %ener0, align 4, !dbg !3571
  %add88 = fadd float %62, %mul87, !dbg !3571
  store float %add88, float* %ener0, align 4, !dbg !3571
  %63 = load float, float* %coef1, align 4, !dbg !3572
  %64 = load float, float* %coef1, align 4, !dbg !3573
  %mul89 = fmul float %63, %64, !dbg !3574
  %65 = load float, float* %ener1, align 4, !dbg !3575
  %add90 = fadd float %65, %mul89, !dbg !3575
  store float %add90, float* %ener1, align 4, !dbg !3575
  %66 = load float, float* %coef0, align 4, !dbg !3576
  %67 = load float, float* %coef1, align 4, !dbg !3577
  %add91 = fadd float %66, %67, !dbg !3578
  %68 = load float, float* %coef0, align 4, !dbg !3579
  %69 = load float, float* %coef1, align 4, !dbg !3580
  %add92 = fadd float %68, %69, !dbg !3581
  %mul93 = fmul float %add91, %add92, !dbg !3582
  %70 = load float, float* %ener01, align 4, !dbg !3583
  %add94 = fadd float %70, %mul93, !dbg !3583
  store float %add94, float* %ener01, align 4, !dbg !3583
  %71 = load float, float* %coef0, align 4, !dbg !3584
  %72 = load float, float* %coef1, align 4, !dbg !3585
  %sub = fsub float %71, %72, !dbg !3586
  %73 = load float, float* %coef0, align 4, !dbg !3587
  %74 = load float, float* %coef1, align 4, !dbg !3588
  %sub95 = fsub float %73, %74, !dbg !3589
  %mul96 = fmul float %sub, %sub95, !dbg !3590
  %75 = load float, float* %ener01p, align 4, !dbg !3591
  %add97 = fadd float %75, %mul96, !dbg !3591
  store float %add97, float* %ener01p, align 4, !dbg !3591
  br label %for.inc, !dbg !3592

for.inc:                                          ; preds = %for.body73
  %76 = load i32, i32* %i, align 4, !dbg !3593
  %inc = add nsw i32 %76, 1, !dbg !3593
  store i32 %inc, i32* %i, align 4, !dbg !3593
  br label %for.cond66, !dbg !3595, !llvm.loop !3596

for.end:                                          ; preds = %for.cond66
  br label %for.inc98, !dbg !3598

for.inc98:                                        ; preds = %for.end
  %77 = load i32, i32* %w2, align 4, !dbg !3599
  %inc99 = add nsw i32 %77, 1, !dbg !3599
  store i32 %inc99, i32* %w2, align 4, !dbg !3599
  br label %for.cond58, !dbg !3601, !llvm.loop !3602

for.end100:                                       ; preds = %for.cond58
  %78 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3604
  %79 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3605
  %80 = load i32, i32* %start, align 4, !dbg !3606
  %81 = load i32, i32* %w, align 4, !dbg !3607
  %82 = load i32, i32* %g, align 4, !dbg !3608
  %83 = load float, float* %ener0, align 4, !dbg !3609
  %84 = load float, float* %ener1, align 4, !dbg !3610
  %85 = load float, float* %ener01p, align 4, !dbg !3611
  call void @ff_aac_is_encoding_err(%struct.AACISError* sret %tmp, %struct.AACEncContext* %78, %struct.ChannelElement* %79, i32 %80, i32 %81, i32 %82, float %83, float %84, float %85, i32 0, i32 -1), !dbg !3612
  %86 = bitcast %struct.AACISError* %ph_err1 to i8*, !dbg !3612
  %87 = bitcast %struct.AACISError* %tmp to i8*, !dbg !3612
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 24, i32 4, i1 false), !dbg !3613
  %88 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !3615
  %89 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3616
  %90 = load i32, i32* %start, align 4, !dbg !3617
  %91 = load i32, i32* %w, align 4, !dbg !3618
  %92 = load i32, i32* %g, align 4, !dbg !3619
  %93 = load float, float* %ener0, align 4, !dbg !3620
  %94 = load float, float* %ener1, align 4, !dbg !3621
  %95 = load float, float* %ener01, align 4, !dbg !3622
  call void @ff_aac_is_encoding_err(%struct.AACISError* sret %tmp101, %struct.AACEncContext* %88, %struct.ChannelElement* %89, i32 %90, i32 %91, i32 %92, float %93, float %94, float %95, i32 0, i32 1), !dbg !3623
  %96 = bitcast %struct.AACISError* %ph_err2 to i8*, !dbg !3623
  %97 = bitcast %struct.AACISError* %tmp101 to i8*, !dbg !3623
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 24, i32 4, i1 false), !dbg !3624
  %pass = getelementptr inbounds %struct.AACISError, %struct.AACISError* %ph_err1, i32 0, i32 0, !dbg !3625
  %98 = load i32, i32* %pass, align 4, !dbg !3625
  %tobool102 = icmp ne i32 %98, 0, !dbg !3626
  br i1 %tobool102, label %land.lhs.true103, label %cond.false, !dbg !3627

land.lhs.true103:                                 ; preds = %for.end100
  %error = getelementptr inbounds %struct.AACISError, %struct.AACISError* %ph_err1, i32 0, i32 2, !dbg !3628
  %99 = load float, float* %error, align 4, !dbg !3628
  %error104 = getelementptr inbounds %struct.AACISError, %struct.AACISError* %ph_err2, i32 0, i32 2, !dbg !3629
  %100 = load float, float* %error104, align 4, !dbg !3629
  %cmp105 = fcmp olt float %99, %100, !dbg !3630
  br i1 %cmp105, label %cond.true, label %cond.false, !dbg !3631

cond.true:                                        ; preds = %land.lhs.true103
  br label %cond.end, !dbg !3632

cond.false:                                       ; preds = %land.lhs.true103, %for.end100
  br label %cond.end, !dbg !3634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.AACISError* [ %ph_err1, %cond.true ], [ %ph_err2, %cond.false ], !dbg !3636
  store %struct.AACISError* %cond, %struct.AACISError** %best, align 8, !dbg !3638
  %101 = load %struct.AACISError*, %struct.AACISError** %best, align 8, !dbg !3639
  %pass107 = getelementptr inbounds %struct.AACISError, %struct.AACISError* %101, i32 0, i32 0, !dbg !3641
  %102 = load i32, i32* %pass107, align 4, !dbg !3641
  %tobool108 = icmp ne i32 %102, 0, !dbg !3639
  br i1 %tobool108, label %if.then109, label %if.end184, !dbg !3642

if.then109:                                       ; preds = %cond.end
  %103 = load i32, i32* %w, align 4, !dbg !3643
  %mul110 = mul nsw i32 %103, 16, !dbg !3645
  %104 = load i32, i32* %g, align 4, !dbg !3646
  %add111 = add nsw i32 %mul110, %104, !dbg !3647
  %idxprom112 = sext i32 %add111 to i64, !dbg !3648
  %105 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3648
  %is_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %105, i32 0, i32 5, !dbg !3649
  %arrayidx113 = getelementptr inbounds [128 x i8], [128 x i8]* %is_mask, i64 0, i64 %idxprom112, !dbg !3648
  store i8 1, i8* %arrayidx113, align 1, !dbg !3650
  %106 = load i32, i32* %w, align 4, !dbg !3651
  %mul114 = mul nsw i32 %106, 16, !dbg !3652
  %107 = load i32, i32* %g, align 4, !dbg !3653
  %add115 = add nsw i32 %mul114, %107, !dbg !3654
  %idxprom116 = sext i32 %add115 to i64, !dbg !3655
  %108 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3655
  %ms_mask = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %108, i32 0, i32 4, !dbg !3656
  %arrayidx117 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask, i64 0, i64 %idxprom116, !dbg !3655
  store i8 0, i8* %arrayidx117, align 1, !dbg !3657
  %109 = load float, float* %ener0, align 4, !dbg !3658
  %110 = load %struct.AACISError*, %struct.AACISError** %best, align 8, !dbg !3659
  %ener01118 = getelementptr inbounds %struct.AACISError, %struct.AACISError* %110, i32 0, i32 5, !dbg !3660
  %111 = load float, float* %ener01118, align 4, !dbg !3660
  %div119 = fdiv float %109, %111, !dbg !3661
  %conv120 = fpext float %div119 to double, !dbg !3658
  %call121 = call double @sqrt(double %conv120) #8, !dbg !3662
  %conv122 = fptrunc double %call121 to float, !dbg !3662
  %112 = load i32, i32* %w, align 4, !dbg !3663
  %mul123 = mul nsw i32 %112, 16, !dbg !3664
  %113 = load i32, i32* %g, align 4, !dbg !3665
  %add124 = add nsw i32 %mul123, %113, !dbg !3666
  %idxprom125 = sext i32 %add124 to i64, !dbg !3667
  %114 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3667
  %ch126 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %114, i32 0, i32 7, !dbg !3668
  %arrayidx127 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch126, i64 0, i64 0, !dbg !3667
  %is_ener = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx127, i32 0, i32 10, !dbg !3669
  %arrayidx128 = getelementptr inbounds [128 x float], [128 x float]* %is_ener, i64 0, i64 %idxprom125, !dbg !3667
  store float %conv122, float* %arrayidx128, align 4, !dbg !3670
  %115 = load float, float* %ener0, align 4, !dbg !3671
  %116 = load float, float* %ener1, align 4, !dbg !3672
  %div129 = fdiv float %115, %116, !dbg !3673
  %117 = load i32, i32* %w, align 4, !dbg !3674
  %mul130 = mul nsw i32 %117, 16, !dbg !3675
  %118 = load i32, i32* %g, align 4, !dbg !3676
  %add131 = add nsw i32 %mul130, %118, !dbg !3677
  %idxprom132 = sext i32 %add131 to i64, !dbg !3678
  %119 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3678
  %ch133 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %119, i32 0, i32 7, !dbg !3679
  %arrayidx134 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch133, i64 0, i64 1, !dbg !3678
  %is_ener135 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx134, i32 0, i32 10, !dbg !3680
  %arrayidx136 = getelementptr inbounds [128 x float], [128 x float]* %is_ener135, i64 0, i64 %idxprom132, !dbg !3678
  store float %div129, float* %arrayidx136, align 4, !dbg !3681
  %120 = load %struct.AACISError*, %struct.AACISError** %best, align 8, !dbg !3682
  %phase = getelementptr inbounds %struct.AACISError, %struct.AACISError* %120, i32 0, i32 1, !dbg !3683
  %121 = load i32, i32* %phase, align 4, !dbg !3683
  %cmp137 = icmp sgt i32 %121, 0, !dbg !3684
  %cond139 = select i1 %cmp137, i32 15, i32 14, !dbg !3685
  %122 = load i32, i32* %w, align 4, !dbg !3686
  %mul140 = mul nsw i32 %122, 16, !dbg !3687
  %123 = load i32, i32* %g, align 4, !dbg !3688
  %add141 = add nsw i32 %mul140, %123, !dbg !3689
  %idxprom142 = sext i32 %add141 to i64, !dbg !3690
  %124 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3690
  %ch143 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %124, i32 0, i32 7, !dbg !3691
  %arrayidx144 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch143, i64 0, i64 1, !dbg !3690
  %band_type145 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx144, i32 0, i32 3, !dbg !3692
  %arrayidx146 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type145, i64 0, i64 %idxprom142, !dbg !3690
  store i32 %cond139, i32* %arrayidx146, align 4, !dbg !3693
  %125 = load i32, i32* %prev_is, align 4, !dbg !3694
  %tobool147 = icmp ne i32 %125, 0, !dbg !3694
  br i1 %tobool147, label %land.lhs.true148, label %if.end175, !dbg !3696

land.lhs.true148:                                 ; preds = %if.then109
  %126 = load i32, i32* %prev_bt, align 4, !dbg !3697
  %127 = load i32, i32* %w, align 4, !dbg !3699
  %mul149 = mul nsw i32 %127, 16, !dbg !3700
  %128 = load i32, i32* %g, align 4, !dbg !3701
  %add150 = add nsw i32 %mul149, %128, !dbg !3702
  %idxprom151 = sext i32 %add150 to i64, !dbg !3703
  %129 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3703
  %ch152 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %129, i32 0, i32 7, !dbg !3704
  %arrayidx153 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch152, i64 0, i64 1, !dbg !3703
  %band_type154 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx153, i32 0, i32 3, !dbg !3705
  %arrayidx155 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type154, i64 0, i64 %idxprom151, !dbg !3703
  %130 = load i32, i32* %arrayidx155, align 4, !dbg !3703
  %cmp156 = icmp ne i32 %126, %130, !dbg !3706
  br i1 %cmp156, label %if.then158, label %if.end175, !dbg !3707

if.then158:                                       ; preds = %land.lhs.true148
  %131 = load i32, i32* %w, align 4, !dbg !3708
  %mul159 = mul nsw i32 %131, 16, !dbg !3710
  %132 = load i32, i32* %g, align 4, !dbg !3711
  %add160 = add nsw i32 %mul159, %132, !dbg !3712
  %idxprom161 = sext i32 %add160 to i64, !dbg !3713
  %133 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3713
  %ms_mask162 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %133, i32 0, i32 4, !dbg !3714
  %arrayidx163 = getelementptr inbounds [128 x i8], [128 x i8]* %ms_mask162, i64 0, i64 %idxprom161, !dbg !3713
  store i8 1, i8* %arrayidx163, align 1, !dbg !3715
  %134 = load %struct.AACISError*, %struct.AACISError** %best, align 8, !dbg !3716
  %phase164 = getelementptr inbounds %struct.AACISError, %struct.AACISError* %134, i32 0, i32 1, !dbg !3717
  %135 = load i32, i32* %phase164, align 4, !dbg !3717
  %cmp165 = icmp sgt i32 %135, 0, !dbg !3718
  %cond167 = select i1 %cmp165, i32 14, i32 15, !dbg !3719
  %136 = load i32, i32* %w, align 4, !dbg !3720
  %mul168 = mul nsw i32 %136, 16, !dbg !3721
  %137 = load i32, i32* %g, align 4, !dbg !3722
  %add169 = add nsw i32 %mul168, %137, !dbg !3723
  %idxprom170 = sext i32 %add169 to i64, !dbg !3724
  %138 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3724
  %ch171 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %138, i32 0, i32 7, !dbg !3725
  %arrayidx172 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch171, i64 0, i64 1, !dbg !3724
  %band_type173 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx172, i32 0, i32 3, !dbg !3726
  %arrayidx174 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type173, i64 0, i64 %idxprom170, !dbg !3724
  store i32 %cond167, i32* %arrayidx174, align 4, !dbg !3727
  br label %if.end175, !dbg !3728

if.end175:                                        ; preds = %if.then158, %land.lhs.true148, %if.then109
  %139 = load i32, i32* %w, align 4, !dbg !3729
  %mul176 = mul nsw i32 %139, 16, !dbg !3730
  %140 = load i32, i32* %g, align 4, !dbg !3731
  %add177 = add nsw i32 %mul176, %140, !dbg !3732
  %idxprom178 = sext i32 %add177 to i64, !dbg !3733
  %141 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3733
  %ch179 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %141, i32 0, i32 7, !dbg !3734
  %arrayidx180 = getelementptr inbounds [2 x %struct.SingleChannelElement], [2 x %struct.SingleChannelElement]* %ch179, i64 0, i64 1, !dbg !3733
  %band_type181 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %arrayidx180, i32 0, i32 3, !dbg !3735
  %arrayidx182 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type181, i64 0, i64 %idxprom178, !dbg !3733
  %142 = load i32, i32* %arrayidx182, align 4, !dbg !3733
  store i32 %142, i32* %prev_bt, align 4, !dbg !3736
  %143 = load i32, i32* %count, align 4, !dbg !3737
  %inc183 = add nsw i32 %143, 1, !dbg !3737
  store i32 %inc183, i32* %count, align 4, !dbg !3737
  br label %if.end184, !dbg !3738

if.end184:                                        ; preds = %if.end175, %cond.end
  br label %if.end185, !dbg !3739

if.end185:                                        ; preds = %if.end184, %land.lhs.true52, %land.lhs.true43, %land.lhs.true33, %land.lhs.true25, %land.lhs.true, %for.body13
  %144 = load i32, i32* %w, align 4, !dbg !3740
  %mul186 = mul nsw i32 %144, 16, !dbg !3742
  %145 = load i32, i32* %g, align 4, !dbg !3743
  %add187 = add nsw i32 %mul186, %145, !dbg !3744
  %idxprom188 = sext i32 %add187 to i64, !dbg !3745
  %146 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !3745
  %zeroes189 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %146, i32 0, i32 8, !dbg !3746
  %arrayidx190 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes189, i64 0, i64 %idxprom188, !dbg !3745
  %147 = load i8, i8* %arrayidx190, align 1, !dbg !3745
  %tobool191 = icmp ne i8 %147, 0, !dbg !3745
  br i1 %tobool191, label %if.end205, label %land.lhs.true192, !dbg !3747

land.lhs.true192:                                 ; preds = %if.end185
  %148 = load i32, i32* %w, align 4, !dbg !3748
  %mul193 = mul nsw i32 %148, 16, !dbg !3750
  %149 = load i32, i32* %g, align 4, !dbg !3751
  %add194 = add nsw i32 %mul193, %149, !dbg !3752
  %idxprom195 = sext i32 %add194 to i64, !dbg !3753
  %150 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !3753
  %band_type196 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %150, i32 0, i32 3, !dbg !3754
  %arrayidx197 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type196, i64 0, i64 %idxprom195, !dbg !3753
  %151 = load i32, i32* %arrayidx197, align 4, !dbg !3753
  %cmp198 = icmp ult i32 %151, 12, !dbg !3755
  br i1 %cmp198, label %if.then200, label %if.end205, !dbg !3756

if.then200:                                       ; preds = %land.lhs.true192
  %152 = load i32, i32* %w, align 4, !dbg !3757
  %mul201 = mul nsw i32 %152, 16, !dbg !3758
  %153 = load i32, i32* %g, align 4, !dbg !3759
  %add202 = add nsw i32 %mul201, %153, !dbg !3760
  %idxprom203 = sext i32 %add202 to i64, !dbg !3761
  %154 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce1, align 8, !dbg !3761
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %154, i32 0, i32 7, !dbg !3762
  %arrayidx204 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 %idxprom203, !dbg !3761
  %155 = load i32, i32* %arrayidx204, align 4, !dbg !3761
  store i32 %155, i32* %prev_sf1, align 4, !dbg !3763
  br label %if.end205, !dbg !3764

if.end205:                                        ; preds = %if.then200, %land.lhs.true192, %if.end185
  %156 = load i32, i32* %w, align 4, !dbg !3765
  %mul206 = mul nsw i32 %156, 16, !dbg !3766
  %157 = load i32, i32* %g, align 4, !dbg !3767
  %add207 = add nsw i32 %mul206, %157, !dbg !3768
  %idxprom208 = sext i32 %add207 to i64, !dbg !3769
  %158 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3769
  %is_mask209 = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %158, i32 0, i32 5, !dbg !3770
  %arrayidx210 = getelementptr inbounds [128 x i8], [128 x i8]* %is_mask209, i64 0, i64 %idxprom208, !dbg !3769
  %159 = load i8, i8* %arrayidx210, align 1, !dbg !3769
  %conv211 = zext i8 %159 to i32, !dbg !3769
  store i32 %conv211, i32* %prev_is, align 4, !dbg !3771
  %160 = load i32, i32* %g, align 4, !dbg !3772
  %idxprom212 = sext i32 %160 to i64, !dbg !3773
  %161 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3773
  %ics213 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %161, i32 0, i32 0, !dbg !3774
  %swb_sizes214 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics213, i32 0, i32 7, !dbg !3775
  %162 = load i8*, i8** %swb_sizes214, align 8, !dbg !3775
  %arrayidx215 = getelementptr inbounds i8, i8* %162, i64 %idxprom212, !dbg !3773
  %163 = load i8, i8* %arrayidx215, align 1, !dbg !3773
  %conv216 = zext i8 %163 to i32, !dbg !3773
  %164 = load i32, i32* %start, align 4, !dbg !3776
  %add217 = add nsw i32 %164, %conv216, !dbg !3776
  store i32 %add217, i32* %start, align 4, !dbg !3776
  br label %for.inc218, !dbg !3777

for.inc218:                                       ; preds = %if.end205
  %165 = load i32, i32* %g, align 4, !dbg !3778
  %inc219 = add nsw i32 %165, 1, !dbg !3778
  store i32 %inc219, i32* %g, align 4, !dbg !3778
  br label %for.cond9, !dbg !3780, !llvm.loop !3781

for.end220:                                       ; preds = %for.cond9
  br label %for.inc221, !dbg !3783

for.inc221:                                       ; preds = %for.end220
  %166 = load i32, i32* %w, align 4, !dbg !3784
  %idxprom222 = sext i32 %166 to i64, !dbg !3786
  %167 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce0, align 8, !dbg !3786
  %ics223 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %167, i32 0, i32 0, !dbg !3787
  %group_len224 = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics223, i32 0, i32 4, !dbg !3788
  %arrayidx225 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len224, i64 0, i64 %idxprom222, !dbg !3786
  %168 = load i8, i8* %arrayidx225, align 1, !dbg !3786
  %conv226 = zext i8 %168 to i32, !dbg !3786
  %169 = load i32, i32* %w, align 4, !dbg !3789
  %add227 = add nsw i32 %169, %conv226, !dbg !3789
  store i32 %add227, i32* %w, align 4, !dbg !3789
  br label %for.cond, !dbg !3790, !llvm.loop !3791

for.end228:                                       ; preds = %for.cond
  %170 = load i32, i32* %count, align 4, !dbg !3793
  %tobool229 = icmp ne i32 %170, 0, !dbg !3794
  %lnot = xor i1 %tobool229, true, !dbg !3794
  %lnot230 = xor i1 %lnot, true, !dbg !3795
  %lnot.ext = zext i1 %lnot230 to i32, !dbg !3795
  %conv231 = trunc i32 %lnot.ext to i8, !dbg !3795
  %171 = load %struct.ChannelElement*, %struct.ChannelElement** %cpe.addr, align 8, !dbg !3796
  %is_mode = getelementptr inbounds %struct.ChannelElement, %struct.ChannelElement* %171, i32 0, i32 3, !dbg !3797
  store i8 %conv231, i8* %is_mode, align 4, !dbg !3798
  br label %return, !dbg !3799

return:                                           ; preds = %for.end228, %if.then
  ret void, !dbg !3800
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @ff_init_nextband_map(%struct.SingleChannelElement* %sce, i8* %nextband) #3 !dbg !3802 {
entry:
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %nextband.addr = alloca i8*, align 8
  %prevband = alloca i8, align 1
  %w = alloca i32, align 4
  %g = alloca i32, align 4
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !3807, metadata !2763), !dbg !3808
  store i8* %nextband, i8** %nextband.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nextband.addr, metadata !3809, metadata !2763), !dbg !3810
  call void @llvm.dbg.declare(metadata i8* %prevband, metadata !3811, metadata !2763), !dbg !3812
  store i8 0, i8* %prevband, align 1, !dbg !3812
  call void @llvm.dbg.declare(metadata i32* %w, metadata !3813, metadata !2763), !dbg !3814
  call void @llvm.dbg.declare(metadata i32* %g, metadata !3815, metadata !2763), !dbg !3816
  store i32 0, i32* %g, align 4, !dbg !3817
  br label %for.cond, !dbg !3819

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %g, align 4, !dbg !3820
  %cmp = icmp slt i32 %0, 128, !dbg !3823
  br i1 %cmp, label %for.body, label %for.end, !dbg !3824

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %g, align 4, !dbg !3825
  %conv = trunc i32 %1 to i8, !dbg !3825
  %2 = load i32, i32* %g, align 4, !dbg !3826
  %idxprom = sext i32 %2 to i64, !dbg !3827
  %3 = load i8*, i8** %nextband.addr, align 8, !dbg !3827
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !3827
  store i8 %conv, i8* %arrayidx, align 1, !dbg !3828
  br label %for.inc, !dbg !3827

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %g, align 4, !dbg !3829
  %inc = add nsw i32 %4, 1, !dbg !3829
  store i32 %inc, i32* %g, align 4, !dbg !3829
  br label %for.cond, !dbg !3831, !llvm.loop !3832

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %w, align 4, !dbg !3834
  br label %for.cond1, !dbg !3836

for.cond1:                                        ; preds = %for.inc26, %for.end
  %5 = load i32, i32* %w, align 4, !dbg !3837
  %6 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3840
  %ics = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %6, i32 0, i32 0, !dbg !3841
  %num_windows = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics, i32 0, i32 9, !dbg !3842
  %7 = load i32, i32* %num_windows, align 4, !dbg !3842
  %cmp2 = icmp slt i32 %5, %7, !dbg !3843
  br i1 %cmp2, label %for.body4, label %for.end32, !dbg !3844

for.body4:                                        ; preds = %for.cond1
  store i32 0, i32* %g, align 4, !dbg !3845
  br label %for.cond5, !dbg !3848

for.cond5:                                        ; preds = %for.inc23, %for.body4
  %8 = load i32, i32* %g, align 4, !dbg !3849
  %9 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3852
  %ics6 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %9, i32 0, i32 0, !dbg !3853
  %num_swb = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics6, i32 0, i32 8, !dbg !3854
  %10 = load i32, i32* %num_swb, align 32, !dbg !3854
  %cmp7 = icmp slt i32 %8, %10, !dbg !3855
  br i1 %cmp7, label %for.body9, label %for.end25, !dbg !3856

for.body9:                                        ; preds = %for.cond5
  %11 = load i32, i32* %w, align 4, !dbg !3857
  %mul = mul nsw i32 %11, 16, !dbg !3860
  %12 = load i32, i32* %g, align 4, !dbg !3861
  %add = add nsw i32 %mul, %12, !dbg !3862
  %idxprom10 = sext i32 %add to i64, !dbg !3863
  %13 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3863
  %zeroes = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %13, i32 0, i32 8, !dbg !3864
  %arrayidx11 = getelementptr inbounds [128 x i8], [128 x i8]* %zeroes, i64 0, i64 %idxprom10, !dbg !3863
  %14 = load i8, i8* %arrayidx11, align 1, !dbg !3863
  %tobool = icmp ne i8 %14, 0, !dbg !3863
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3865

land.lhs.true:                                    ; preds = %for.body9
  %15 = load i32, i32* %w, align 4, !dbg !3866
  %mul12 = mul nsw i32 %15, 16, !dbg !3868
  %16 = load i32, i32* %g, align 4, !dbg !3869
  %add13 = add nsw i32 %mul12, %16, !dbg !3870
  %idxprom14 = sext i32 %add13 to i64, !dbg !3871
  %17 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3871
  %band_type = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %17, i32 0, i32 3, !dbg !3872
  %arrayidx15 = getelementptr inbounds [128 x i32], [128 x i32]* %band_type, i64 0, i64 %idxprom14, !dbg !3871
  %18 = load i32, i32* %arrayidx15, align 4, !dbg !3871
  %cmp16 = icmp ult i32 %18, 12, !dbg !3873
  br i1 %cmp16, label %if.then, label %if.end, !dbg !3874

if.then:                                          ; preds = %land.lhs.true
  %19 = load i32, i32* %w, align 4, !dbg !3875
  %mul18 = mul nsw i32 %19, 16, !dbg !3876
  %20 = load i32, i32* %g, align 4, !dbg !3877
  %add19 = add nsw i32 %mul18, %20, !dbg !3878
  %conv20 = trunc i32 %add19 to i8, !dbg !3875
  %21 = load i8, i8* %prevband, align 1, !dbg !3879
  %idxprom21 = zext i8 %21 to i64, !dbg !3880
  %22 = load i8*, i8** %nextband.addr, align 8, !dbg !3880
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %idxprom21, !dbg !3880
  store i8 %conv20, i8* %arrayidx22, align 1, !dbg !3881
  store i8 %conv20, i8* %prevband, align 1, !dbg !3882
  br label %if.end, !dbg !3883

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body9
  br label %for.inc23, !dbg !3884

for.inc23:                                        ; preds = %if.end
  %23 = load i32, i32* %g, align 4, !dbg !3885
  %inc24 = add nsw i32 %23, 1, !dbg !3885
  store i32 %inc24, i32* %g, align 4, !dbg !3885
  br label %for.cond5, !dbg !3887, !llvm.loop !3888

for.end25:                                        ; preds = %for.cond5
  br label %for.inc26, !dbg !3890

for.inc26:                                        ; preds = %for.end25
  %24 = load i32, i32* %w, align 4, !dbg !3891
  %idxprom27 = sext i32 %24 to i64, !dbg !3893
  %25 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3893
  %ics28 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %25, i32 0, i32 0, !dbg !3894
  %group_len = getelementptr inbounds %struct.IndividualChannelStream, %struct.IndividualChannelStream* %ics28, i32 0, i32 4, !dbg !3895
  %arrayidx29 = getelementptr inbounds [8 x i8], [8 x i8]* %group_len, i64 0, i64 %idxprom27, !dbg !3893
  %26 = load i8, i8* %arrayidx29, align 1, !dbg !3893
  %conv30 = zext i8 %26 to i32, !dbg !3893
  %27 = load i32, i32* %w, align 4, !dbg !3896
  %add31 = add nsw i32 %27, %conv30, !dbg !3896
  store i32 %add31, i32* %w, align 4, !dbg !3896
  br label %for.cond1, !dbg !3897, !llvm.loop !3898

for.end32:                                        ; preds = %for.cond1
  %28 = load i8, i8* %prevband, align 1, !dbg !3900
  %29 = load i8, i8* %prevband, align 1, !dbg !3901
  %idxprom33 = zext i8 %29 to i64, !dbg !3902
  %30 = load i8*, i8** %nextband.addr, align 8, !dbg !3902
  %arrayidx34 = getelementptr inbounds i8, i8* %30, i64 %idxprom33, !dbg !3902
  store i8 %28, i8* %arrayidx34, align 1, !dbg !3903
  ret void, !dbg !3904
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ff_sfdelta_can_remove_band(%struct.SingleChannelElement* %sce, i8* %nextband, i32 %prev_sf, i32 %band) #3 !dbg !3905 {
entry:
  %sce.addr = alloca %struct.SingleChannelElement*, align 8
  %nextband.addr = alloca i8*, align 8
  %prev_sf.addr = alloca i32, align 4
  %band.addr = alloca i32, align 4
  store %struct.SingleChannelElement* %sce, %struct.SingleChannelElement** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SingleChannelElement** %sce.addr, metadata !3908, metadata !2763), !dbg !3909
  store i8* %nextband, i8** %nextband.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %nextband.addr, metadata !3910, metadata !2763), !dbg !3911
  store i32 %prev_sf, i32* %prev_sf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prev_sf.addr, metadata !3912, metadata !2763), !dbg !3913
  store i32 %band, i32* %band.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %band.addr, metadata !3914, metadata !2763), !dbg !3915
  %0 = load i32, i32* %prev_sf.addr, align 4, !dbg !3916
  %cmp = icmp sge i32 %0, 0, !dbg !3917
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !3918

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %band.addr, align 4, !dbg !3919
  %idxprom = sext i32 %1 to i64, !dbg !3921
  %2 = load i8*, i8** %nextband.addr, align 8, !dbg !3921
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !3921
  %3 = load i8, i8* %arrayidx, align 1, !dbg !3921
  %idxprom1 = zext i8 %3 to i64, !dbg !3922
  %4 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3922
  %sf_idx = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %4, i32 0, i32 7, !dbg !3923
  %arrayidx2 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx, i64 0, i64 %idxprom1, !dbg !3922
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !3922
  %6 = load i32, i32* %prev_sf.addr, align 4, !dbg !3924
  %sub = sub nsw i32 %6, 60, !dbg !3925
  %cmp3 = icmp sge i32 %5, %sub, !dbg !3926
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !3927

land.rhs:                                         ; preds = %land.lhs.true
  %7 = load i32, i32* %band.addr, align 4, !dbg !3928
  %idxprom4 = sext i32 %7 to i64, !dbg !3929
  %8 = load i8*, i8** %nextband.addr, align 8, !dbg !3929
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 %idxprom4, !dbg !3929
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !3929
  %idxprom6 = zext i8 %9 to i64, !dbg !3930
  %10 = load %struct.SingleChannelElement*, %struct.SingleChannelElement** %sce.addr, align 8, !dbg !3930
  %sf_idx7 = getelementptr inbounds %struct.SingleChannelElement, %struct.SingleChannelElement* %10, i32 0, i32 7, !dbg !3931
  %arrayidx8 = getelementptr inbounds [128 x i32], [128 x i32]* %sf_idx7, i64 0, i64 %idxprom6, !dbg !3930
  %11 = load i32, i32* %arrayidx8, align 4, !dbg !3930
  %12 = load i32, i32* %prev_sf.addr, align 4, !dbg !3932
  %add = add nsw i32 %12, 60, !dbg !3933
  %cmp9 = icmp sle i32 %11, %add, !dbg !3934
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %13 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp9, %land.rhs ]
  %land.ext = zext i1 %13 to i32, !dbg !3935
  ret i32 %land.ext, !dbg !3937
}

; Function Attrs: nounwind
declare float @sqrtf(float) #4

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_ZERO(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !3938 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !3939, metadata !2763), !dbg !3944
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !3963, metadata !2763), !dbg !3964
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !3939, metadata !2763), !dbg !3965
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !3963, metadata !2763), !dbg !3977
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !3978, metadata !2763), !dbg !3979
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3980, metadata !2763), !dbg !3981
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !3982, metadata !2763), !dbg !3983
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !3984, metadata !2763), !dbg !3985
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !3986, metadata !2763), !dbg !3987
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3988, metadata !2763), !dbg !3989
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !3990, metadata !2763), !dbg !3991
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !3992, metadata !2763), !dbg !3993
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !3994, metadata !2763), !dbg !3995
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !3996, metadata !2763), !dbg !3997
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !3998, metadata !2763), !dbg !3999
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !4000, metadata !2763), !dbg !4001
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !4002, metadata !2763), !dbg !4003
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !4004, metadata !2763), !dbg !4005
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !4006, metadata !2763), !dbg !4007
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !4008, metadata !2763), !dbg !4009
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !4010, metadata !2763), !dbg !4011
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !4012, metadata !2763), !dbg !4013
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !4014, metadata !2763), !dbg !4015
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !4016, metadata !2763), !dbg !4017
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !4018, metadata !2763), !dbg !4019
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !4020, metadata !2763), !dbg !4021
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !4022, metadata !2763), !dbg !4023
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !4024, metadata !2763), !dbg !4025
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !4026, metadata !2763), !dbg !4027
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !4028, metadata !2763), !dbg !4029
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !4030, metadata !2763), !dbg !4031
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !4032, metadata !2763), !dbg !4033
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !4034, metadata !2763), !dbg !4035
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !4036, metadata !2763), !dbg !4037
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !4038, metadata !2763), !dbg !4039
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !4040, metadata !2763), !dbg !4041
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !4042, metadata !2763), !dbg !4043
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !4044, metadata !2763), !dbg !4045
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !4046, metadata !2763), !dbg !4047
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !4048, metadata !2763), !dbg !4049
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !4050, metadata !2763), !dbg !4051
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !4052, metadata !2763), !dbg !4053
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !4054, metadata !2763), !dbg !4055
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !4056, metadata !2763), !dbg !4057
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !4058, metadata !2763), !dbg !4059
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !4060, metadata !2763), !dbg !4061
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !4062, metadata !2763), !dbg !4063
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !4064, metadata !2763), !dbg !4065
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !4066, metadata !2763), !dbg !4067
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !4068, metadata !2763), !dbg !4069
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !4070, metadata !2763), !dbg !4071
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !4072, metadata !2763), !dbg !4073
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !4074, metadata !2763), !dbg !4075
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !4076, metadata !2763), !dbg !4077
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !4078, metadata !2763), !dbg !4079
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !4080, metadata !2763), !dbg !4081
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !4082, metadata !2763), !dbg !4083
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !4084, metadata !2763), !dbg !4085
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4086
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !4087
  %2 = load float*, float** %in.addr, align 8, !dbg !4088
  %3 = load float*, float** %quant.addr, align 8, !dbg !4089
  %4 = load float*, float** %scaled.addr, align 8, !dbg !4090
  %5 = load i32, i32* %size.addr, align 4, !dbg !4091
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !4092
  %7 = load i32, i32* %cb.addr, align 4, !dbg !4093
  %8 = load float, float* %lambda.addr, align 4, !dbg !4094
  %9 = load float, float* %uplim.addr, align 4, !dbg !4095
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !4096
  %11 = load float*, float** %energy.addr, align 8, !dbg !4097
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4098
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !4098
  store float* %2, float** %in.addr.i, align 8, !dbg !4098
  store float* %3, float** %out.addr.i, align 8, !dbg !4098
  store float* %4, float** %scaled.addr.i, align 8, !dbg !4098
  store i32 %5, i32* %size.addr.i, align 4, !dbg !4098
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !4098
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !4098
  store float %8, float* %lambda.addr.i, align 4, !dbg !4098
  store float %9, float* %uplim.addr.i, align 4, !dbg !4098
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !4098
  store float* %11, float** %energy.addr.i, align 8, !dbg !4098
  store i32 1, i32* %BT_ZERO.addr.i, align 4, !dbg !4098
  store i32 0, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !4098
  store i32 0, i32* %BT_PAIR.addr.i, align 4, !dbg !4098
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !4098
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !4098
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !4098
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !4098
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !4099
  %sub.i = sub nsw i32 200, %12, !dbg !4100
  %add.i = add nsw i32 %sub.i, 140, !dbg !4101
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !4102
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !4017
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !4103
  %idxprom.i = sext i32 %13 to i64, !dbg !4104
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !4104
  %14 = load float, float* %arrayidx.i, align 4, !dbg !4104
  store float %14, float* %Q.i, align 4, !dbg !4019
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !4105
  %idxprom2.i = sext i32 %15 to i64, !dbg !4106
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !4106
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !4106
  store float %16, float* %Q34.i, align 4, !dbg !4021
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !4107
  %add4.i = add nsw i32 200, %17, !dbg !4108
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !4109
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !4110
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !4111
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !4111
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !4111
  store float %18, float* %IQ.i, align 4, !dbg !4023
  %19 = load float, float* %IQ.i, align 4, !dbg !4112
  %mul.i = fmul float 1.651400e+05, %19, !dbg !4113
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !4025
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !4031
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !4033
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !4114
  %tobool.i = icmp ne i32 %20, 0, !dbg !4114
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !4114
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !4035
  store i32 0, i32* %resbits.i, align 4, !dbg !4037
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !4115
  %tobool9.i = icmp ne i32 %21, 0, !dbg !4115
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !4117

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !4118
  %tobool10.i = icmp ne i32 %22, 0, !dbg !4118
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !4120

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !4121
  %tobool12.i = icmp ne i32 %23, 0, !dbg !4121
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !4123

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !4124
  br label %for.cond.i, !dbg !4127

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !4128
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !4131
  %cmp.i = icmp slt i32 %24, %25, !dbg !4132
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !4133

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !4134
  %idxprom13.i = sext i32 %26 to i64, !dbg !4135
  %27 = load float*, float** %in.addr.i, align 8, !dbg !4135
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !4135
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !4135
  %29 = load i32, i32* %i.i, align 4, !dbg !4136
  %idxprom15.i = sext i32 %29 to i64, !dbg !4137
  %30 = load float*, float** %in.addr.i, align 8, !dbg !4137
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !4137
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !4137
  %mul17.i = fmul float %28, %31, !dbg !4138
  %32 = load float, float* %cost.i, align 4, !dbg !4139
  %add18.i = fadd float %32, %mul17.i, !dbg !4139
  store float %add18.i, float* %cost.i, align 4, !dbg !4139
  %33 = load i32, i32* %i.i, align 4, !dbg !4140
  %inc.i = add nsw i32 %33, 1, !dbg !4140
  store i32 %inc.i, i32* %i.i, align 4, !dbg !4140
  br label %for.cond.i, !dbg !4142, !llvm.loop !4143

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !4145
  %tobool19.i = icmp ne i32* %34, null, !dbg !4145
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !4147

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !4148
  store i32 0, i32* %35, align 4, !dbg !4149
  br label %if.end.i, !dbg !4150

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !4151
  %tobool21.i = icmp ne float* %36, null, !dbg !4151
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !4153

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !4154
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !4155
  store float %37, float* %38, align 4, !dbg !4156
  br label %if.end23.i, !dbg !4157

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !4158
  %tobool24.i = icmp ne float* %39, null, !dbg !4158
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !4160

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !4161
  br label %for.cond26.i, !dbg !4164

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !4165
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !4168
  %cmp27.i = icmp slt i32 %40, %41, !dbg !4169
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !4170

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !4171
  br label %for.cond29.i, !dbg !4173

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !4174
  %43 = load i32, i32* %dim.i, align 4, !dbg !4177
  %cmp30.i = icmp slt i32 %42, %43, !dbg !4178
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !4179

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !4180
  %45 = load i32, i32* %j.i, align 4, !dbg !4181
  %add32.i = add nsw i32 %44, %45, !dbg !4182
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !4183
  %46 = load float*, float** %out.addr.i, align 8, !dbg !4183
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !4183
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !4184
  %47 = load i32, i32* %j.i, align 4, !dbg !4185
  %inc36.i = add nsw i32 %47, 1, !dbg !4185
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !4185
  br label %for.cond29.i, !dbg !4187, !llvm.loop !4188

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !4190
  %49 = load i32, i32* %i.i, align 4, !dbg !4192
  %add39.i = add nsw i32 %49, %48, !dbg !4192
  store i32 %add39.i, i32* %i.i, align 4, !dbg !4192
  br label %for.cond26.i, !dbg !4193, !llvm.loop !4194

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !4196

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !4197
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !4198
  %mul42.i = fmul float %50, %51, !dbg !4199
  store float %mul42.i, float* %retval.i, align 4, !dbg !4200
  br label %quantize_and_encode_band_cost_template.exit, !dbg !4200

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !4201
  %tobool44.i = icmp ne float* %52, null, !dbg !4201
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !4203

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4204
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !4206
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !4206
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4207
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !4208
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !4207
  %56 = load float*, float** %in.addr.i, align 8, !dbg !4209
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !4210
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #8, !dbg !4204
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4211
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !4212
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !4211
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !4213
  br label %if.end48.i, !dbg !4214

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4215
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !4216
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !4216
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4217
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !4218
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !4217
  %62 = load float*, float** %in.addr.i, align 8, !dbg !4219
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !4220
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !4221
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !4222
  %tobool50.i = icmp ne i32 %65, 0, !dbg !4223
  %lnot.i = xor i1 %tobool50.i, true, !dbg !4223
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !4223
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !4224
  %idxprom51.i = sext i32 %66 to i64, !dbg !4225
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !4225
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !4225
  %conv.i = zext i8 %67 to i32, !dbg !4225
  %68 = load float, float* %Q34.i, align 4, !dbg !4226
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !4227
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #8, !dbg !4215
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !4228
  %tobool53.i = icmp ne i32 %70, 0, !dbg !4228
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !4230

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !4231
  br label %if.end58.i, !dbg !4233

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !4234
  %idxprom55.i = sext i32 %71 to i64, !dbg !4236
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !4236
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !4236
  %conv57.i = zext i8 %72 to i32, !dbg !4236
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !4237
  br label %if.end58.i, !dbg !4098

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !4238
  br label %for.cond59.i, !dbg !4239

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !4240
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !4242
  %cmp60.i = icmp slt i32 %73, %74, !dbg !4243
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !4244

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4245
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !4246
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !4245
  %76 = load i32, i32* %i.i, align 4, !dbg !4247
  %idx.ext.i = sext i32 %76 to i64, !dbg !4248
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !4248
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !4043
  store i32 0, i32* %curidx.i, align 4, !dbg !4045
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !4051
  store i32 0, i32* %j.i, align 4, !dbg !4249
  br label %for.cond65.i, !dbg !4251

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !4252
  %78 = load i32, i32* %dim.i, align 4, !dbg !4255
  %cmp66.i = icmp slt i32 %77, %78, !dbg !4256
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !4257

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !4258
  %idxprom69.i = sext i32 %79 to i64, !dbg !4260
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !4260
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !4260
  %conv71.i = zext i8 %80 to i32, !dbg !4260
  %81 = load i32, i32* %curidx.i, align 4, !dbg !4261
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !4261
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !4261
  %82 = load i32, i32* %j.i, align 4, !dbg !4262
  %idxprom73.i = sext i32 %82 to i64, !dbg !4263
  %83 = load i32*, i32** %quants.i, align 8, !dbg !4263
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !4263
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !4263
  %85 = load i32, i32* %off.i, align 4, !dbg !4264
  %add75.i = add nsw i32 %84, %85, !dbg !4265
  %86 = load i32, i32* %curidx.i, align 4, !dbg !4266
  %add76.i = add nsw i32 %86, %add75.i, !dbg !4266
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !4266
  %87 = load i32, i32* %j.i, align 4, !dbg !4267
  %inc78.i = add nsw i32 %87, 1, !dbg !4267
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !4267
  br label %for.cond65.i, !dbg !4269, !llvm.loop !4270

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !4272
  %idxprom80.i = sext i32 %88 to i64, !dbg !4273
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !4274
  %sub81.i = sub nsw i32 %89, 1, !dbg !4275
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !4273
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !4273
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !4273
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !4273
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !4273
  %conv85.i = zext i8 %91 to i32, !dbg !4273
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !4276
  %92 = load i32, i32* %curidx.i, align 4, !dbg !4277
  %93 = load i32, i32* %dim.i, align 4, !dbg !4278
  %mul86.i = mul nsw i32 %92, %93, !dbg !4279
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !4280
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !4281
  %sub88.i = sub nsw i32 %94, 1, !dbg !4282
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !4280
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !4280
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !4280
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !4280
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !4283
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !4284
  %tobool92.i = icmp ne i32 %96, 0, !dbg !4284
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !4285

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !4286
  br label %for.cond94.i, !dbg !4287

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !4288
  %98 = load i32, i32* %dim.i, align 4, !dbg !4290
  %cmp95.i = icmp slt i32 %97, %98, !dbg !4291
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !4292

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !4293
  %100 = load i32, i32* %j.i, align 4, !dbg !4294
  %add98.i = add nsw i32 %99, %100, !dbg !4295
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !4296
  %101 = load float*, float** %in.addr.i, align 8, !dbg !4296
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !4296
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !4296
  %call.i = call float @fabsf(float %102) #1, !dbg !4297
  store float %call.i, float* %t.i, align 4, !dbg !4053
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !4298
  %tobool101.i = icmp ne i32 %103, 0, !dbg !4298
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !4299

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !4300
  %idxprom102.i = sext i32 %104 to i64, !dbg !4302
  %105 = load float*, float** %vec.i, align 8, !dbg !4302
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !4302
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !4302
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !4303
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !4304

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !4305
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !4306
  %cmp107.i = fcmp oge float %107, %108, !dbg !4307
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !4308

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !4309
  store float %109, float* %quantized.i, align 4, !dbg !4311
  %110 = load i32, i32* %curbits.i, align 4, !dbg !4312
  %add110.i = add nsw i32 %110, 21, !dbg !4312
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !4312
  br label %if.end124.i, !dbg !4313

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !4314
  %112 = load float, float* %Q.i, align 4, !dbg !4315
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !4316
  %call112.i = call i32 @quant(float %111, float %112, float %113) #8, !dbg !4317
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !4318
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !4318
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !4319
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !4321
  %shl.i.i = shl i32 1, %115, !dbg !4322
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !4323
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !4324
  %and.i.i = and i32 %114, %neg.i.i, !dbg !4325
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !4325
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !4326

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !4327
  %neg1.i.i = xor i32 %116, -1, !dbg !4329
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !4330
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !4331
  %shl2.i.i = shl i32 1, %117, !dbg !4332
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !4333
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !4334
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !4335
  br label %av_clip_uintp2_c.exit.i, !dbg !4335

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !4336
  store i32 %118, i32* %retval.i.i, align 4, !dbg !4337
  br label %av_clip_uintp2_c.exit.i, !dbg !4337

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !4338
  store i32 %119, i32* %c.i, align 4, !dbg !4057
  %120 = load i32, i32* %c.i, align 4, !dbg !4339
  %conv114.i = sitofp i32 %120 to float, !dbg !4339
  %121 = load i32, i32* %c.i, align 4, !dbg !4340
  %conv115.i = sitofp i32 %121 to float, !dbg !4340
  %call116.i = call float @cbrtf(float %conv115.i) #8, !dbg !4341
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !4342
  %122 = load float, float* %IQ.i, align 4, !dbg !4343
  %mul118.i = fmul float %mul117.i, %122, !dbg !4344
  store float %mul118.i, float* %quantized.i, align 4, !dbg !4345
  %123 = load i32, i32* %c.i, align 4, !dbg !4346
  %or.i = or i32 %123, 1, !dbg !4347
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #8, !dbg !4348
  %sub119.i = sub nsw i32 31, %124, !dbg !4349
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !4350
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !4351
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !4352
  %125 = load i32, i32* %curbits.i, align 4, !dbg !4353
  %add123.i = add nsw i32 %125, %add122.i, !dbg !4353
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !4353
  br label %if.end124.i, !dbg !4098

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !4354

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !4355
  %idxprom126.i = sext i32 %126 to i64, !dbg !4357
  %127 = load float*, float** %vec.i, align 8, !dbg !4357
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !4357
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !4357
  %129 = load float, float* %IQ.i, align 4, !dbg !4358
  %mul128.i = fmul float %128, %129, !dbg !4359
  store float %mul128.i, float* %quantized.i, align 4, !dbg !4360
  br label %if.end129.i, !dbg !4098

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !4361
  %131 = load float, float* %quantized.i, align 4, !dbg !4362
  %sub130.i = fsub float %130, %131, !dbg !4363
  store float %sub130.i, float* %di.i, align 4, !dbg !4364
  %132 = load float*, float** %out.addr.i, align 8, !dbg !4365
  %tobool131.i = icmp ne float* %132, null, !dbg !4365
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !4367

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !4368
  %134 = load i32, i32* %j.i, align 4, !dbg !4369
  %add133.i = add nsw i32 %133, %134, !dbg !4370
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !4371
  %135 = load float*, float** %in.addr.i, align 8, !dbg !4371
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !4371
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !4371
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !4372
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !4371

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !4373
  br label %cond.end.i, !dbg !4375

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !4376
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !4378
  br label %cond.end.i, !dbg !4379

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !4380
  %139 = load i32, i32* %i.i, align 4, !dbg !4382
  %140 = load i32, i32* %j.i, align 4, !dbg !4383
  %add140.i = add nsw i32 %139, %140, !dbg !4384
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !4385
  %141 = load float*, float** %out.addr.i, align 8, !dbg !4385
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !4385
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !4386
  br label %if.end143.i, !dbg !4385

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !4387
  %idxprom144.i = sext i32 %142 to i64, !dbg !4389
  %143 = load float*, float** %vec.i, align 8, !dbg !4389
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !4389
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !4389
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !4390
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !4391

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !4392
  %inc149.i = add nsw i32 %145, 1, !dbg !4392
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !4392
  br label %if.end150.i, !dbg !4393

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !4394
  %147 = load float, float* %quantized.i, align 4, !dbg !4395
  %mul151.i = fmul float %146, %147, !dbg !4396
  %148 = load float, float* %qenergy.i, align 4, !dbg !4397
  %add152.i = fadd float %148, %mul151.i, !dbg !4397
  store float %add152.i, float* %qenergy.i, align 4, !dbg !4397
  %149 = load float, float* %di.i, align 4, !dbg !4398
  %150 = load float, float* %di.i, align 4, !dbg !4399
  %mul153.i = fmul float %149, %150, !dbg !4400
  %151 = load float, float* %rd.i, align 4, !dbg !4401
  %add154.i = fadd float %151, %mul153.i, !dbg !4401
  store float %add154.i, float* %rd.i, align 4, !dbg !4401
  %152 = load i32, i32* %j.i, align 4, !dbg !4402
  %inc156.i = add nsw i32 %152, 1, !dbg !4402
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !4402
  br label %for.cond94.i, !dbg !4404, !llvm.loop !4405

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !4407

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !4408
  br label %for.cond159.i, !dbg !4411

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !4412
  %154 = load i32, i32* %dim.i, align 4, !dbg !4415
  %cmp160.i = icmp slt i32 %153, %154, !dbg !4416
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !4417

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !4418
  %idxprom163.i = sext i32 %155 to i64, !dbg !4420
  %156 = load float*, float** %vec.i, align 8, !dbg !4420
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !4420
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !4420
  %158 = load float, float* %IQ.i, align 4, !dbg !4421
  %mul165.i = fmul float %157, %158, !dbg !4422
  store float %mul165.i, float* %quantized.i, align 4, !dbg !4423
  %159 = load float, float* %quantized.i, align 4, !dbg !4424
  %160 = load float, float* %quantized.i, align 4, !dbg !4425
  %mul166.i = fmul float %159, %160, !dbg !4426
  %161 = load float, float* %qenergy.i, align 4, !dbg !4427
  %add167.i = fadd float %161, %mul166.i, !dbg !4427
  store float %add167.i, float* %qenergy.i, align 4, !dbg !4427
  %162 = load float*, float** %out.addr.i, align 8, !dbg !4428
  %tobool168.i = icmp ne float* %162, null, !dbg !4428
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !4430

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !4431
  %164 = load i32, i32* %i.i, align 4, !dbg !4432
  %165 = load i32, i32* %j.i, align 4, !dbg !4433
  %add170.i = add nsw i32 %164, %165, !dbg !4434
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !4435
  %166 = load float*, float** %out.addr.i, align 8, !dbg !4435
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !4435
  store float %163, float* %arrayidx172.i, align 4, !dbg !4436
  br label %if.end173.i, !dbg !4435

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !4437
  %168 = load i32, i32* %j.i, align 4, !dbg !4438
  %add174.i = add nsw i32 %167, %168, !dbg !4439
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !4440
  %169 = load float*, float** %in.addr.i, align 8, !dbg !4440
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !4440
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !4440
  %171 = load float, float* %quantized.i, align 4, !dbg !4441
  %sub177.i = fsub float %170, %171, !dbg !4442
  %172 = load i32, i32* %i.i, align 4, !dbg !4443
  %173 = load i32, i32* %j.i, align 4, !dbg !4444
  %add178.i = add nsw i32 %172, %173, !dbg !4445
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !4446
  %174 = load float*, float** %in.addr.i, align 8, !dbg !4446
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !4446
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !4446
  %176 = load float, float* %quantized.i, align 4, !dbg !4447
  %sub181.i = fsub float %175, %176, !dbg !4448
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !4449
  %177 = load float, float* %rd.i, align 4, !dbg !4450
  %add183.i = fadd float %177, %mul182.i, !dbg !4450
  store float %add183.i, float* %rd.i, align 4, !dbg !4450
  %178 = load i32, i32* %j.i, align 4, !dbg !4451
  %inc185.i = add nsw i32 %178, 1, !dbg !4451
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !4451
  br label %for.cond159.i, !dbg !4453, !llvm.loop !4454

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !4098

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !4456
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !4457
  %mul188.i = fmul float %179, %180, !dbg !4458
  %181 = load i32, i32* %curbits.i, align 4, !dbg !4459
  %conv189.i = sitofp i32 %181 to float, !dbg !4459
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !4460
  %182 = load float, float* %cost.i, align 4, !dbg !4461
  %add191.i = fadd float %182, %add190.i, !dbg !4461
  store float %add191.i, float* %cost.i, align 4, !dbg !4461
  %183 = load i32, i32* %curbits.i, align 4, !dbg !4462
  %184 = load i32, i32* %resbits.i, align 4, !dbg !4463
  %add192.i = add nsw i32 %184, %183, !dbg !4463
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !4463
  %185 = load float, float* %cost.i, align 4, !dbg !4464
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !4466
  %cmp193.i = fcmp oge float %185, %186, !dbg !4467
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !4468

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !4469
  store float %187, float* %retval.i, align 4, !dbg !4470
  br label %quantize_and_encode_band_cost_template.exit, !dbg !4470

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !4471
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !4471
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !4472

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !4473
  %190 = load i32, i32* %curidx.i, align 4, !dbg !4474
  %idxprom199.i = sext i32 %190 to i64, !dbg !4475
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !4476
  %sub200.i = sub nsw i32 %191, 1, !dbg !4477
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !4475
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !4475
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !4475
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !4475
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !4475
  %conv204.i = zext i8 %193 to i32, !dbg !4475
  %194 = load i32, i32* %curidx.i, align 4, !dbg !4478
  %idxprom205.i = sext i32 %194 to i64, !dbg !4479
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !4480
  %sub206.i = sub nsw i32 %195, 1, !dbg !4481
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !4479
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !4479
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !4479
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !4479
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !4479
  %conv210.i = zext i16 %197 to i32, !dbg !4479
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #8, !dbg !4482
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !4483
  %tobool211.i = icmp ne i32 %198, 0, !dbg !4483
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !4485

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !4486
  br label %for.cond213.i, !dbg !4488

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !4489
  %200 = load i32, i32* %dim.i, align 4, !dbg !4492
  %cmp214.i = icmp slt i32 %199, %200, !dbg !4493
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !4494

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !4495
  %202 = load i32, i32* %dim.i, align 4, !dbg !4497
  %mul217.i = mul nsw i32 %201, %202, !dbg !4498
  %203 = load i32, i32* %j.i, align 4, !dbg !4499
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !4500
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !4501
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !4502
  %sub220.i = sub nsw i32 %204, 1, !dbg !4503
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !4501
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !4501
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !4501
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !4501
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !4501
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !4504
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !4505

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !4506
  %208 = load i32, i32* %i.i, align 4, !dbg !4507
  %209 = load i32, i32* %j.i, align 4, !dbg !4508
  %add227.i = add nsw i32 %208, %209, !dbg !4509
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !4510
  %210 = load float*, float** %in.addr.i, align 8, !dbg !4510
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !4510
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !4510
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !4511
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !4511
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #8, !dbg !4512
  br label %if.end232.i, !dbg !4512

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !4513
  %inc234.i = add nsw i32 %212, 1, !dbg !4513
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !4513
  br label %for.cond213.i, !dbg !4515, !llvm.loop !4516

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !4518

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !4520
  %tobool237.i = icmp ne i32 %213, 0, !dbg !4520
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !4521

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !4522
  br label %for.cond239.i, !dbg !4523

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !4524
  %cmp240.i = icmp slt i32 %214, 2, !dbg !4526
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !4527

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !4528
  %mul243.i = mul nsw i32 %215, 2, !dbg !4529
  %216 = load i32, i32* %j.i, align 4, !dbg !4530
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !4531
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !4532
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !4533
  %sub246.i = sub nsw i32 %217, 1, !dbg !4534
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !4532
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !4532
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !4532
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !4532
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !4532
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !4535
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !4536

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !4537
  %221 = load i32, i32* %j.i, align 4, !dbg !4538
  %add253.i = add nsw i32 %220, %221, !dbg !4539
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !4540
  %222 = load float*, float** %in.addr.i, align 8, !dbg !4540
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !4540
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !4540
  %call256.i = call float @fabsf(float %223) #1, !dbg !4541
  %224 = load float, float* %Q.i, align 4, !dbg !4542
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !4543
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #8, !dbg !4544
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !4546
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !4546
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !4547
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !4548
  %shl.i284.i = shl i32 1, %227, !dbg !4549
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !4550
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !4551
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !4552
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !4552
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !4553

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !4554
  %neg1.i289.i = xor i32 %228, -1, !dbg !4555
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !4556
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !4557
  %shl2.i291.i = shl i32 1, %229, !dbg !4558
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !4559
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !4560
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !4561
  br label %av_clip_uintp2_c.exit296.i, !dbg !4561

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !4562
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !4563
  br label %av_clip_uintp2_c.exit296.i, !dbg !4563

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !4564
  store i32 %231, i32* %coef.i, align 4, !dbg !4059
  %232 = load i32, i32* %coef.i, align 4, !dbg !4565
  %or259.i = or i32 %232, 1, !dbg !4566
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #8, !dbg !4567
  %sub260.i = sub nsw i32 31, %233, !dbg !4568
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !4061
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !4569
  %235 = load i32, i32* %len.i, align 4, !dbg !4570
  %sub261.i = sub nsw i32 %235, 4, !dbg !4571
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !4572
  %236 = load i32, i32* %len.i, align 4, !dbg !4573
  %sub263.i = sub nsw i32 %236, 4, !dbg !4574
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !4575
  %shl.i = shl i32 1, %add264.i, !dbg !4576
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !4577
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #8, !dbg !4578
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !4579
  %238 = load i32, i32* %len.i, align 4, !dbg !4580
  %239 = load i32, i32* %coef.i, align 4, !dbg !4581
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #8, !dbg !4582
  br label %if.end266.i, !dbg !4583

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !4584
  %inc268.i = add nsw i32 %240, 1, !dbg !4584
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !4584
  br label %for.cond239.i, !dbg !4586, !llvm.loop !4587

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !4589

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !4590

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !4591
  %242 = load i32, i32* %i.i, align 4, !dbg !4593
  %add273.i = add nsw i32 %242, %241, !dbg !4593
  store i32 %add273.i, i32* %i.i, align 4, !dbg !4593
  br label %for.cond59.i, !dbg !4594, !llvm.loop !4595

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !4597
  %tobool275.i = icmp ne i32* %243, null, !dbg !4597
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !4599

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !4600
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !4601
  store i32 %244, i32* %245, align 4, !dbg !4602
  br label %if.end277.i, !dbg !4603

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !4604
  %tobool278.i = icmp ne float* %246, null, !dbg !4604
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !4606

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !4607
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !4608
  store float %247, float* %248, align 4, !dbg !4609
  br label %if.end280.i, !dbg !4610

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !4611
  store float %249, float* %retval.i, align 4, !dbg !4612
  br label %quantize_and_encode_band_cost_template.exit, !dbg !4612

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !4613
  ret float %250, !dbg !4614
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_SQUAD(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !4615 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !3939, metadata !2763), !dbg !4616
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !3963, metadata !2763), !dbg !4619
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !3939, metadata !2763), !dbg !4620
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !3963, metadata !2763), !dbg !4622
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !3978, metadata !2763), !dbg !4623
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3980, metadata !2763), !dbg !4624
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !3982, metadata !2763), !dbg !4625
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !3984, metadata !2763), !dbg !4626
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !3986, metadata !2763), !dbg !4627
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3988, metadata !2763), !dbg !4628
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !3990, metadata !2763), !dbg !4629
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !3992, metadata !2763), !dbg !4630
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !3994, metadata !2763), !dbg !4631
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !3996, metadata !2763), !dbg !4632
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !3998, metadata !2763), !dbg !4633
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !4000, metadata !2763), !dbg !4634
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !4002, metadata !2763), !dbg !4635
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !4004, metadata !2763), !dbg !4636
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !4006, metadata !2763), !dbg !4637
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !4008, metadata !2763), !dbg !4638
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !4010, metadata !2763), !dbg !4639
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !4012, metadata !2763), !dbg !4640
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !4014, metadata !2763), !dbg !4641
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !4016, metadata !2763), !dbg !4642
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !4018, metadata !2763), !dbg !4643
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !4020, metadata !2763), !dbg !4644
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !4022, metadata !2763), !dbg !4645
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !4024, metadata !2763), !dbg !4646
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !4026, metadata !2763), !dbg !4647
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !4028, metadata !2763), !dbg !4648
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !4030, metadata !2763), !dbg !4649
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !4032, metadata !2763), !dbg !4650
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !4034, metadata !2763), !dbg !4651
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !4036, metadata !2763), !dbg !4652
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !4038, metadata !2763), !dbg !4653
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !4040, metadata !2763), !dbg !4654
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !4042, metadata !2763), !dbg !4655
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !4044, metadata !2763), !dbg !4656
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !4046, metadata !2763), !dbg !4657
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !4048, metadata !2763), !dbg !4658
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !4050, metadata !2763), !dbg !4659
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !4052, metadata !2763), !dbg !4660
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !4054, metadata !2763), !dbg !4661
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !4056, metadata !2763), !dbg !4662
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !4058, metadata !2763), !dbg !4663
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !4060, metadata !2763), !dbg !4664
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !4665, metadata !2763), !dbg !4666
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !4667, metadata !2763), !dbg !4668
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !4669, metadata !2763), !dbg !4670
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !4671, metadata !2763), !dbg !4672
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !4673, metadata !2763), !dbg !4674
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !4675, metadata !2763), !dbg !4676
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !4677, metadata !2763), !dbg !4678
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !4679, metadata !2763), !dbg !4680
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !4681, metadata !2763), !dbg !4682
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !4683, metadata !2763), !dbg !4684
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !4685, metadata !2763), !dbg !4686
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !4687, metadata !2763), !dbg !4688
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !4689
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !4690
  %2 = load float*, float** %in.addr, align 8, !dbg !4691
  %3 = load float*, float** %quant.addr, align 8, !dbg !4692
  %4 = load float*, float** %scaled.addr, align 8, !dbg !4693
  %5 = load i32, i32* %size.addr, align 4, !dbg !4694
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !4695
  %7 = load i32, i32* %cb.addr, align 4, !dbg !4696
  %8 = load float, float* %lambda.addr, align 4, !dbg !4697
  %9 = load float, float* %uplim.addr, align 4, !dbg !4698
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !4699
  %11 = load float*, float** %energy.addr, align 8, !dbg !4700
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4701
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !4701
  store float* %2, float** %in.addr.i, align 8, !dbg !4701
  store float* %3, float** %out.addr.i, align 8, !dbg !4701
  store float* %4, float** %scaled.addr.i, align 8, !dbg !4701
  store i32 %5, i32* %size.addr.i, align 4, !dbg !4701
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !4701
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !4701
  store float %8, float* %lambda.addr.i, align 4, !dbg !4701
  store float %9, float* %uplim.addr.i, align 4, !dbg !4701
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !4701
  store float* %11, float** %energy.addr.i, align 8, !dbg !4701
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !4701
  store i32 0, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !4701
  store i32 0, i32* %BT_PAIR.addr.i, align 4, !dbg !4701
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !4701
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !4701
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !4701
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !4701
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !4702
  %sub.i = sub nsw i32 200, %12, !dbg !4703
  %add.i = add nsw i32 %sub.i, 140, !dbg !4704
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !4705
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !4642
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !4706
  %idxprom.i = sext i32 %13 to i64, !dbg !4707
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !4707
  %14 = load float, float* %arrayidx.i, align 4, !dbg !4707
  store float %14, float* %Q.i, align 4, !dbg !4643
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !4708
  %idxprom2.i = sext i32 %15 to i64, !dbg !4709
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !4709
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !4709
  store float %16, float* %Q34.i, align 4, !dbg !4644
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !4710
  %add4.i = add nsw i32 200, %17, !dbg !4711
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !4712
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !4713
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !4714
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !4714
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !4714
  store float %18, float* %IQ.i, align 4, !dbg !4645
  %19 = load float, float* %IQ.i, align 4, !dbg !4715
  %mul.i = fmul float 1.651400e+05, %19, !dbg !4716
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !4646
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !4649
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !4650
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !4717
  %tobool.i = icmp ne i32 %20, 0, !dbg !4717
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !4717
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !4651
  store i32 0, i32* %resbits.i, align 4, !dbg !4652
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !4718
  %tobool9.i = icmp ne i32 %21, 0, !dbg !4718
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !4719

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !4720
  %tobool10.i = icmp ne i32 %22, 0, !dbg !4720
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !4721

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !4722
  %tobool12.i = icmp ne i32 %23, 0, !dbg !4722
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !4723

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !4724
  br label %for.cond.i, !dbg !4725

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !4726
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !4727
  %cmp.i = icmp slt i32 %24, %25, !dbg !4728
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !4729

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !4730
  %idxprom13.i = sext i32 %26 to i64, !dbg !4731
  %27 = load float*, float** %in.addr.i, align 8, !dbg !4731
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !4731
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !4731
  %29 = load i32, i32* %i.i, align 4, !dbg !4732
  %idxprom15.i = sext i32 %29 to i64, !dbg !4733
  %30 = load float*, float** %in.addr.i, align 8, !dbg !4733
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !4733
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !4733
  %mul17.i = fmul float %28, %31, !dbg !4734
  %32 = load float, float* %cost.i, align 4, !dbg !4735
  %add18.i = fadd float %32, %mul17.i, !dbg !4735
  store float %add18.i, float* %cost.i, align 4, !dbg !4735
  %33 = load i32, i32* %i.i, align 4, !dbg !4736
  %inc.i = add nsw i32 %33, 1, !dbg !4736
  store i32 %inc.i, i32* %i.i, align 4, !dbg !4736
  br label %for.cond.i, !dbg !4737, !llvm.loop !4143

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !4738
  %tobool19.i = icmp ne i32* %34, null, !dbg !4738
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !4739

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !4740
  store i32 0, i32* %35, align 4, !dbg !4741
  br label %if.end.i, !dbg !4742

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !4743
  %tobool21.i = icmp ne float* %36, null, !dbg !4743
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !4744

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !4745
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !4746
  store float %37, float* %38, align 4, !dbg !4747
  br label %if.end23.i, !dbg !4748

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !4749
  %tobool24.i = icmp ne float* %39, null, !dbg !4749
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !4750

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !4751
  br label %for.cond26.i, !dbg !4752

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !4753
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !4754
  %cmp27.i = icmp slt i32 %40, %41, !dbg !4755
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !4756

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !4757
  br label %for.cond29.i, !dbg !4758

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !4759
  %43 = load i32, i32* %dim.i, align 4, !dbg !4760
  %cmp30.i = icmp slt i32 %42, %43, !dbg !4761
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !4762

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !4763
  %45 = load i32, i32* %j.i, align 4, !dbg !4764
  %add32.i = add nsw i32 %44, %45, !dbg !4765
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !4766
  %46 = load float*, float** %out.addr.i, align 8, !dbg !4766
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !4766
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !4767
  %47 = load i32, i32* %j.i, align 4, !dbg !4768
  %inc36.i = add nsw i32 %47, 1, !dbg !4768
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !4768
  br label %for.cond29.i, !dbg !4769, !llvm.loop !4188

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !4770
  %49 = load i32, i32* %i.i, align 4, !dbg !4771
  %add39.i = add nsw i32 %49, %48, !dbg !4771
  store i32 %add39.i, i32* %i.i, align 4, !dbg !4771
  br label %for.cond26.i, !dbg !4772, !llvm.loop !4194

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !4773

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !4774
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !4775
  %mul42.i = fmul float %50, %51, !dbg !4776
  store float %mul42.i, float* %retval.i, align 4, !dbg !4777
  br label %quantize_and_encode_band_cost_template.exit, !dbg !4777

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !4778
  %tobool44.i = icmp ne float* %52, null, !dbg !4778
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !4779

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4780
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !4781
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !4781
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4782
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !4783
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !4782
  %56 = load float*, float** %in.addr.i, align 8, !dbg !4784
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !4785
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #8, !dbg !4780
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4786
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !4787
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !4786
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !4788
  br label %if.end48.i, !dbg !4789

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4790
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !4791
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !4791
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4792
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !4793
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !4792
  %62 = load float*, float** %in.addr.i, align 8, !dbg !4794
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !4795
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !4796
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !4797
  %tobool50.i = icmp ne i32 %65, 0, !dbg !4798
  %lnot.i = xor i1 %tobool50.i, true, !dbg !4798
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !4798
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !4799
  %idxprom51.i = sext i32 %66 to i64, !dbg !4800
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !4800
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !4800
  %conv.i = zext i8 %67 to i32, !dbg !4800
  %68 = load float, float* %Q34.i, align 4, !dbg !4801
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !4802
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #8, !dbg !4790
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !4803
  %tobool53.i = icmp ne i32 %70, 0, !dbg !4803
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !4804

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !4805
  br label %if.end58.i, !dbg !4806

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !4807
  %idxprom55.i = sext i32 %71 to i64, !dbg !4808
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !4808
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !4808
  %conv57.i = zext i8 %72 to i32, !dbg !4808
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !4809
  br label %if.end58.i, !dbg !4701

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !4810
  br label %for.cond59.i, !dbg !4811

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !4812
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !4813
  %cmp60.i = icmp slt i32 %73, %74, !dbg !4814
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !4815

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !4816
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !4817
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !4816
  %76 = load i32, i32* %i.i, align 4, !dbg !4818
  %idx.ext.i = sext i32 %76 to i64, !dbg !4819
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !4819
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !4655
  store i32 0, i32* %curidx.i, align 4, !dbg !4656
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !4659
  store i32 0, i32* %j.i, align 4, !dbg !4820
  br label %for.cond65.i, !dbg !4821

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !4822
  %78 = load i32, i32* %dim.i, align 4, !dbg !4823
  %cmp66.i = icmp slt i32 %77, %78, !dbg !4824
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !4825

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !4826
  %idxprom69.i = sext i32 %79 to i64, !dbg !4827
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !4827
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !4827
  %conv71.i = zext i8 %80 to i32, !dbg !4827
  %81 = load i32, i32* %curidx.i, align 4, !dbg !4828
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !4828
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !4828
  %82 = load i32, i32* %j.i, align 4, !dbg !4829
  %idxprom73.i = sext i32 %82 to i64, !dbg !4830
  %83 = load i32*, i32** %quants.i, align 8, !dbg !4830
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !4830
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !4830
  %85 = load i32, i32* %off.i, align 4, !dbg !4831
  %add75.i = add nsw i32 %84, %85, !dbg !4832
  %86 = load i32, i32* %curidx.i, align 4, !dbg !4833
  %add76.i = add nsw i32 %86, %add75.i, !dbg !4833
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !4833
  %87 = load i32, i32* %j.i, align 4, !dbg !4834
  %inc78.i = add nsw i32 %87, 1, !dbg !4834
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !4834
  br label %for.cond65.i, !dbg !4835, !llvm.loop !4270

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !4836
  %idxprom80.i = sext i32 %88 to i64, !dbg !4837
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !4838
  %sub81.i = sub nsw i32 %89, 1, !dbg !4839
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !4837
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !4837
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !4837
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !4837
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !4837
  %conv85.i = zext i8 %91 to i32, !dbg !4837
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !4840
  %92 = load i32, i32* %curidx.i, align 4, !dbg !4841
  %93 = load i32, i32* %dim.i, align 4, !dbg !4842
  %mul86.i = mul nsw i32 %92, %93, !dbg !4843
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !4844
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !4845
  %sub88.i = sub nsw i32 %94, 1, !dbg !4846
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !4844
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !4844
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !4844
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !4844
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !4847
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !4848
  %tobool92.i = icmp ne i32 %96, 0, !dbg !4848
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !4849

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !4850
  br label %for.cond94.i, !dbg !4851

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !4852
  %98 = load i32, i32* %dim.i, align 4, !dbg !4853
  %cmp95.i = icmp slt i32 %97, %98, !dbg !4854
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !4855

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !4856
  %100 = load i32, i32* %j.i, align 4, !dbg !4857
  %add98.i = add nsw i32 %99, %100, !dbg !4858
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !4859
  %101 = load float*, float** %in.addr.i, align 8, !dbg !4859
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !4859
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !4859
  %call.i = call float @fabsf(float %102) #1, !dbg !4860
  store float %call.i, float* %t.i, align 4, !dbg !4660
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !4861
  %tobool101.i = icmp ne i32 %103, 0, !dbg !4861
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !4862

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !4863
  %idxprom102.i = sext i32 %104 to i64, !dbg !4864
  %105 = load float*, float** %vec.i, align 8, !dbg !4864
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !4864
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !4864
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !4865
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !4866

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !4867
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !4868
  %cmp107.i = fcmp oge float %107, %108, !dbg !4869
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !4870

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !4871
  store float %109, float* %quantized.i, align 4, !dbg !4872
  %110 = load i32, i32* %curbits.i, align 4, !dbg !4873
  %add110.i = add nsw i32 %110, 21, !dbg !4873
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !4873
  br label %if.end124.i, !dbg !4874

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !4875
  %112 = load float, float* %Q.i, align 4, !dbg !4876
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !4877
  %call112.i = call i32 @quant(float %111, float %112, float %113) #8, !dbg !4878
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !4879
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !4879
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !4880
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !4881
  %shl.i.i = shl i32 1, %115, !dbg !4882
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !4883
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !4884
  %and.i.i = and i32 %114, %neg.i.i, !dbg !4885
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !4885
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !4886

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !4887
  %neg1.i.i = xor i32 %116, -1, !dbg !4888
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !4889
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !4890
  %shl2.i.i = shl i32 1, %117, !dbg !4891
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !4892
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !4893
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !4894
  br label %av_clip_uintp2_c.exit.i, !dbg !4894

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !4895
  store i32 %118, i32* %retval.i.i, align 4, !dbg !4896
  br label %av_clip_uintp2_c.exit.i, !dbg !4896

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !4897
  store i32 %119, i32* %c.i, align 4, !dbg !4662
  %120 = load i32, i32* %c.i, align 4, !dbg !4898
  %conv114.i = sitofp i32 %120 to float, !dbg !4898
  %121 = load i32, i32* %c.i, align 4, !dbg !4899
  %conv115.i = sitofp i32 %121 to float, !dbg !4899
  %call116.i = call float @cbrtf(float %conv115.i) #8, !dbg !4900
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !4901
  %122 = load float, float* %IQ.i, align 4, !dbg !4902
  %mul118.i = fmul float %mul117.i, %122, !dbg !4903
  store float %mul118.i, float* %quantized.i, align 4, !dbg !4904
  %123 = load i32, i32* %c.i, align 4, !dbg !4905
  %or.i = or i32 %123, 1, !dbg !4906
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #8, !dbg !4907
  %sub119.i = sub nsw i32 31, %124, !dbg !4908
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !4909
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !4910
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !4911
  %125 = load i32, i32* %curbits.i, align 4, !dbg !4912
  %add123.i = add nsw i32 %125, %add122.i, !dbg !4912
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !4912
  br label %if.end124.i, !dbg !4701

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !4913

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !4914
  %idxprom126.i = sext i32 %126 to i64, !dbg !4915
  %127 = load float*, float** %vec.i, align 8, !dbg !4915
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !4915
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !4915
  %129 = load float, float* %IQ.i, align 4, !dbg !4916
  %mul128.i = fmul float %128, %129, !dbg !4917
  store float %mul128.i, float* %quantized.i, align 4, !dbg !4918
  br label %if.end129.i, !dbg !4701

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !4919
  %131 = load float, float* %quantized.i, align 4, !dbg !4920
  %sub130.i = fsub float %130, %131, !dbg !4921
  store float %sub130.i, float* %di.i, align 4, !dbg !4922
  %132 = load float*, float** %out.addr.i, align 8, !dbg !4923
  %tobool131.i = icmp ne float* %132, null, !dbg !4923
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !4924

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !4925
  %134 = load i32, i32* %j.i, align 4, !dbg !4926
  %add133.i = add nsw i32 %133, %134, !dbg !4927
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !4928
  %135 = load float*, float** %in.addr.i, align 8, !dbg !4928
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !4928
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !4928
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !4929
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !4928

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !4930
  br label %cond.end.i, !dbg !4931

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !4932
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !4933
  br label %cond.end.i, !dbg !4934

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !4935
  %139 = load i32, i32* %i.i, align 4, !dbg !4936
  %140 = load i32, i32* %j.i, align 4, !dbg !4937
  %add140.i = add nsw i32 %139, %140, !dbg !4938
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !4939
  %141 = load float*, float** %out.addr.i, align 8, !dbg !4939
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !4939
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !4940
  br label %if.end143.i, !dbg !4939

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !4941
  %idxprom144.i = sext i32 %142 to i64, !dbg !4942
  %143 = load float*, float** %vec.i, align 8, !dbg !4942
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !4942
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !4942
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !4943
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !4944

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !4945
  %inc149.i = add nsw i32 %145, 1, !dbg !4945
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !4945
  br label %if.end150.i, !dbg !4946

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !4947
  %147 = load float, float* %quantized.i, align 4, !dbg !4948
  %mul151.i = fmul float %146, %147, !dbg !4949
  %148 = load float, float* %qenergy.i, align 4, !dbg !4950
  %add152.i = fadd float %148, %mul151.i, !dbg !4950
  store float %add152.i, float* %qenergy.i, align 4, !dbg !4950
  %149 = load float, float* %di.i, align 4, !dbg !4951
  %150 = load float, float* %di.i, align 4, !dbg !4952
  %mul153.i = fmul float %149, %150, !dbg !4953
  %151 = load float, float* %rd.i, align 4, !dbg !4954
  %add154.i = fadd float %151, %mul153.i, !dbg !4954
  store float %add154.i, float* %rd.i, align 4, !dbg !4954
  %152 = load i32, i32* %j.i, align 4, !dbg !4955
  %inc156.i = add nsw i32 %152, 1, !dbg !4955
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !4955
  br label %for.cond94.i, !dbg !4956, !llvm.loop !4405

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !4957

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !4958
  br label %for.cond159.i, !dbg !4959

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !4960
  %154 = load i32, i32* %dim.i, align 4, !dbg !4961
  %cmp160.i = icmp slt i32 %153, %154, !dbg !4962
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !4963

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !4964
  %idxprom163.i = sext i32 %155 to i64, !dbg !4965
  %156 = load float*, float** %vec.i, align 8, !dbg !4965
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !4965
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !4965
  %158 = load float, float* %IQ.i, align 4, !dbg !4966
  %mul165.i = fmul float %157, %158, !dbg !4967
  store float %mul165.i, float* %quantized.i, align 4, !dbg !4968
  %159 = load float, float* %quantized.i, align 4, !dbg !4969
  %160 = load float, float* %quantized.i, align 4, !dbg !4970
  %mul166.i = fmul float %159, %160, !dbg !4971
  %161 = load float, float* %qenergy.i, align 4, !dbg !4972
  %add167.i = fadd float %161, %mul166.i, !dbg !4972
  store float %add167.i, float* %qenergy.i, align 4, !dbg !4972
  %162 = load float*, float** %out.addr.i, align 8, !dbg !4973
  %tobool168.i = icmp ne float* %162, null, !dbg !4973
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !4974

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !4975
  %164 = load i32, i32* %i.i, align 4, !dbg !4976
  %165 = load i32, i32* %j.i, align 4, !dbg !4977
  %add170.i = add nsw i32 %164, %165, !dbg !4978
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !4979
  %166 = load float*, float** %out.addr.i, align 8, !dbg !4979
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !4979
  store float %163, float* %arrayidx172.i, align 4, !dbg !4980
  br label %if.end173.i, !dbg !4979

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !4981
  %168 = load i32, i32* %j.i, align 4, !dbg !4982
  %add174.i = add nsw i32 %167, %168, !dbg !4983
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !4984
  %169 = load float*, float** %in.addr.i, align 8, !dbg !4984
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !4984
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !4984
  %171 = load float, float* %quantized.i, align 4, !dbg !4985
  %sub177.i = fsub float %170, %171, !dbg !4986
  %172 = load i32, i32* %i.i, align 4, !dbg !4987
  %173 = load i32, i32* %j.i, align 4, !dbg !4988
  %add178.i = add nsw i32 %172, %173, !dbg !4989
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !4990
  %174 = load float*, float** %in.addr.i, align 8, !dbg !4990
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !4990
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !4990
  %176 = load float, float* %quantized.i, align 4, !dbg !4991
  %sub181.i = fsub float %175, %176, !dbg !4992
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !4993
  %177 = load float, float* %rd.i, align 4, !dbg !4994
  %add183.i = fadd float %177, %mul182.i, !dbg !4994
  store float %add183.i, float* %rd.i, align 4, !dbg !4994
  %178 = load i32, i32* %j.i, align 4, !dbg !4995
  %inc185.i = add nsw i32 %178, 1, !dbg !4995
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !4995
  br label %for.cond159.i, !dbg !4996, !llvm.loop !4454

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !4701

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !4997
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !4998
  %mul188.i = fmul float %179, %180, !dbg !4999
  %181 = load i32, i32* %curbits.i, align 4, !dbg !5000
  %conv189.i = sitofp i32 %181 to float, !dbg !5000
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !5001
  %182 = load float, float* %cost.i, align 4, !dbg !5002
  %add191.i = fadd float %182, %add190.i, !dbg !5002
  store float %add191.i, float* %cost.i, align 4, !dbg !5002
  %183 = load i32, i32* %curbits.i, align 4, !dbg !5003
  %184 = load i32, i32* %resbits.i, align 4, !dbg !5004
  %add192.i = add nsw i32 %184, %183, !dbg !5004
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !5004
  %185 = load float, float* %cost.i, align 4, !dbg !5005
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !5006
  %cmp193.i = fcmp oge float %185, %186, !dbg !5007
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !5008

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !5009
  store float %187, float* %retval.i, align 4, !dbg !5010
  br label %quantize_and_encode_band_cost_template.exit, !dbg !5010

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5011
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !5011
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !5012

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5013
  %190 = load i32, i32* %curidx.i, align 4, !dbg !5014
  %idxprom199.i = sext i32 %190 to i64, !dbg !5015
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !5016
  %sub200.i = sub nsw i32 %191, 1, !dbg !5017
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !5015
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !5015
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !5015
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !5015
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !5015
  %conv204.i = zext i8 %193 to i32, !dbg !5015
  %194 = load i32, i32* %curidx.i, align 4, !dbg !5018
  %idxprom205.i = sext i32 %194 to i64, !dbg !5019
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !5020
  %sub206.i = sub nsw i32 %195, 1, !dbg !5021
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !5019
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !5019
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !5019
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !5019
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !5019
  %conv210.i = zext i16 %197 to i32, !dbg !5019
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #8, !dbg !5022
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !5023
  %tobool211.i = icmp ne i32 %198, 0, !dbg !5023
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !5024

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !5025
  br label %for.cond213.i, !dbg !5026

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !5027
  %200 = load i32, i32* %dim.i, align 4, !dbg !5028
  %cmp214.i = icmp slt i32 %199, %200, !dbg !5029
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !5030

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !5031
  %202 = load i32, i32* %dim.i, align 4, !dbg !5032
  %mul217.i = mul nsw i32 %201, %202, !dbg !5033
  %203 = load i32, i32* %j.i, align 4, !dbg !5034
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !5035
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !5036
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !5037
  %sub220.i = sub nsw i32 %204, 1, !dbg !5038
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !5036
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !5036
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !5036
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !5036
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !5036
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !5039
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !5040

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5041
  %208 = load i32, i32* %i.i, align 4, !dbg !5042
  %209 = load i32, i32* %j.i, align 4, !dbg !5043
  %add227.i = add nsw i32 %208, %209, !dbg !5044
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !5045
  %210 = load float*, float** %in.addr.i, align 8, !dbg !5045
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !5045
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !5045
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !5046
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !5046
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #8, !dbg !5047
  br label %if.end232.i, !dbg !5047

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !5048
  %inc234.i = add nsw i32 %212, 1, !dbg !5048
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !5048
  br label %for.cond213.i, !dbg !5049, !llvm.loop !4516

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !5050

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !5051
  %tobool237.i = icmp ne i32 %213, 0, !dbg !5051
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !5052

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !5053
  br label %for.cond239.i, !dbg !5054

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !5055
  %cmp240.i = icmp slt i32 %214, 2, !dbg !5056
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !5057

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !5058
  %mul243.i = mul nsw i32 %215, 2, !dbg !5059
  %216 = load i32, i32* %j.i, align 4, !dbg !5060
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !5061
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !5062
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !5063
  %sub246.i = sub nsw i32 %217, 1, !dbg !5064
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !5062
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !5062
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !5062
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !5062
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !5062
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !5065
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !5066

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !5067
  %221 = load i32, i32* %j.i, align 4, !dbg !5068
  %add253.i = add nsw i32 %220, %221, !dbg !5069
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !5070
  %222 = load float*, float** %in.addr.i, align 8, !dbg !5070
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !5070
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !5070
  %call256.i = call float @fabsf(float %223) #1, !dbg !5071
  %224 = load float, float* %Q.i, align 4, !dbg !5072
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !5073
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #8, !dbg !5074
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !5075
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !5075
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !5076
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !5077
  %shl.i284.i = shl i32 1, %227, !dbg !5078
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !5079
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !5080
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !5081
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !5081
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !5082

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !5083
  %neg1.i289.i = xor i32 %228, -1, !dbg !5084
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !5085
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !5086
  %shl2.i291.i = shl i32 1, %229, !dbg !5087
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !5088
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !5089
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !5090
  br label %av_clip_uintp2_c.exit296.i, !dbg !5090

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !5091
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !5092
  br label %av_clip_uintp2_c.exit296.i, !dbg !5092

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !5093
  store i32 %231, i32* %coef.i, align 4, !dbg !4663
  %232 = load i32, i32* %coef.i, align 4, !dbg !5094
  %or259.i = or i32 %232, 1, !dbg !5095
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #8, !dbg !5096
  %sub260.i = sub nsw i32 31, %233, !dbg !5097
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !4664
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5098
  %235 = load i32, i32* %len.i, align 4, !dbg !5099
  %sub261.i = sub nsw i32 %235, 4, !dbg !5100
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !5101
  %236 = load i32, i32* %len.i, align 4, !dbg !5102
  %sub263.i = sub nsw i32 %236, 4, !dbg !5103
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !5104
  %shl.i = shl i32 1, %add264.i, !dbg !5105
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !5106
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #8, !dbg !5107
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5108
  %238 = load i32, i32* %len.i, align 4, !dbg !5109
  %239 = load i32, i32* %coef.i, align 4, !dbg !5110
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #8, !dbg !5111
  br label %if.end266.i, !dbg !5112

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !5113
  %inc268.i = add nsw i32 %240, 1, !dbg !5113
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !5113
  br label %for.cond239.i, !dbg !5114, !llvm.loop !4587

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !5115

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !5116

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !5117
  %242 = load i32, i32* %i.i, align 4, !dbg !5118
  %add273.i = add nsw i32 %242, %241, !dbg !5118
  store i32 %add273.i, i32* %i.i, align 4, !dbg !5118
  br label %for.cond59.i, !dbg !5119, !llvm.loop !4595

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !5120
  %tobool275.i = icmp ne i32* %243, null, !dbg !5120
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !5121

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !5122
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !5123
  store i32 %244, i32* %245, align 4, !dbg !5124
  br label %if.end277.i, !dbg !5125

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !5126
  %tobool278.i = icmp ne float* %246, null, !dbg !5126
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !5127

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !5128
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !5129
  store float %247, float* %248, align 4, !dbg !5130
  br label %if.end280.i, !dbg !5131

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !5132
  store float %249, float* %retval.i, align 4, !dbg !5133
  br label %quantize_and_encode_band_cost_template.exit, !dbg !5133

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !5134
  ret float %250, !dbg !5135
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_UQUAD(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !5136 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !3939, metadata !2763), !dbg !5137
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !3963, metadata !2763), !dbg !5140
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !3939, metadata !2763), !dbg !5141
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !3963, metadata !2763), !dbg !5143
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !3978, metadata !2763), !dbg !5144
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3980, metadata !2763), !dbg !5145
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !3982, metadata !2763), !dbg !5146
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !3984, metadata !2763), !dbg !5147
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !3986, metadata !2763), !dbg !5148
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3988, metadata !2763), !dbg !5149
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !3990, metadata !2763), !dbg !5150
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !3992, metadata !2763), !dbg !5151
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !3994, metadata !2763), !dbg !5152
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !3996, metadata !2763), !dbg !5153
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !3998, metadata !2763), !dbg !5154
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !4000, metadata !2763), !dbg !5155
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !4002, metadata !2763), !dbg !5156
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !4004, metadata !2763), !dbg !5157
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !4006, metadata !2763), !dbg !5158
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !4008, metadata !2763), !dbg !5159
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !4010, metadata !2763), !dbg !5160
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !4012, metadata !2763), !dbg !5161
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !4014, metadata !2763), !dbg !5162
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !4016, metadata !2763), !dbg !5163
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !4018, metadata !2763), !dbg !5164
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !4020, metadata !2763), !dbg !5165
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !4022, metadata !2763), !dbg !5166
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !4024, metadata !2763), !dbg !5167
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !4026, metadata !2763), !dbg !5168
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !4028, metadata !2763), !dbg !5169
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !4030, metadata !2763), !dbg !5170
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !4032, metadata !2763), !dbg !5171
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !4034, metadata !2763), !dbg !5172
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !4036, metadata !2763), !dbg !5173
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !4038, metadata !2763), !dbg !5174
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !4040, metadata !2763), !dbg !5175
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !4042, metadata !2763), !dbg !5176
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !4044, metadata !2763), !dbg !5177
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !4046, metadata !2763), !dbg !5178
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !4048, metadata !2763), !dbg !5179
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !4050, metadata !2763), !dbg !5180
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !4052, metadata !2763), !dbg !5181
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !4054, metadata !2763), !dbg !5182
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !4056, metadata !2763), !dbg !5183
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !4058, metadata !2763), !dbg !5184
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !4060, metadata !2763), !dbg !5185
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !5186, metadata !2763), !dbg !5187
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !5188, metadata !2763), !dbg !5189
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !5190, metadata !2763), !dbg !5191
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !5192, metadata !2763), !dbg !5193
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !5194, metadata !2763), !dbg !5195
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5196, metadata !2763), !dbg !5197
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !5198, metadata !2763), !dbg !5199
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !5200, metadata !2763), !dbg !5201
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !5202, metadata !2763), !dbg !5203
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !5204, metadata !2763), !dbg !5205
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !5206, metadata !2763), !dbg !5207
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !5208, metadata !2763), !dbg !5209
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5210
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5211
  %2 = load float*, float** %in.addr, align 8, !dbg !5212
  %3 = load float*, float** %quant.addr, align 8, !dbg !5213
  %4 = load float*, float** %scaled.addr, align 8, !dbg !5214
  %5 = load i32, i32* %size.addr, align 4, !dbg !5215
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !5216
  %7 = load i32, i32* %cb.addr, align 4, !dbg !5217
  %8 = load float, float* %lambda.addr, align 4, !dbg !5218
  %9 = load float, float* %uplim.addr, align 4, !dbg !5219
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !5220
  %11 = load float*, float** %energy.addr, align 8, !dbg !5221
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5222
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5222
  store float* %2, float** %in.addr.i, align 8, !dbg !5222
  store float* %3, float** %out.addr.i, align 8, !dbg !5222
  store float* %4, float** %scaled.addr.i, align 8, !dbg !5222
  store i32 %5, i32* %size.addr.i, align 4, !dbg !5222
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !5222
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !5222
  store float %8, float* %lambda.addr.i, align 4, !dbg !5222
  store float %9, float* %uplim.addr.i, align 4, !dbg !5222
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !5222
  store float* %11, float** %energy.addr.i, align 8, !dbg !5222
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !5222
  store i32 1, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !5222
  store i32 0, i32* %BT_PAIR.addr.i, align 4, !dbg !5222
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !5222
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !5222
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !5222
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !5222
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !5223
  %sub.i = sub nsw i32 200, %12, !dbg !5224
  %add.i = add nsw i32 %sub.i, 140, !dbg !5225
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !5226
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !5163
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !5227
  %idxprom.i = sext i32 %13 to i64, !dbg !5228
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !5228
  %14 = load float, float* %arrayidx.i, align 4, !dbg !5228
  store float %14, float* %Q.i, align 4, !dbg !5164
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !5229
  %idxprom2.i = sext i32 %15 to i64, !dbg !5230
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !5230
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !5230
  store float %16, float* %Q34.i, align 4, !dbg !5165
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !5231
  %add4.i = add nsw i32 200, %17, !dbg !5232
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !5233
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !5234
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !5235
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !5235
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !5235
  store float %18, float* %IQ.i, align 4, !dbg !5166
  %19 = load float, float* %IQ.i, align 4, !dbg !5236
  %mul.i = fmul float 1.651400e+05, %19, !dbg !5237
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !5167
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !5170
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !5171
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !5238
  %tobool.i = icmp ne i32 %20, 0, !dbg !5238
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !5238
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !5172
  store i32 0, i32* %resbits.i, align 4, !dbg !5173
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !5239
  %tobool9.i = icmp ne i32 %21, 0, !dbg !5239
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !5240

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !5241
  %tobool10.i = icmp ne i32 %22, 0, !dbg !5241
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !5242

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !5243
  %tobool12.i = icmp ne i32 %23, 0, !dbg !5243
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !5244

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !5245
  br label %for.cond.i, !dbg !5246

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !5247
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !5248
  %cmp.i = icmp slt i32 %24, %25, !dbg !5249
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !5250

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !5251
  %idxprom13.i = sext i32 %26 to i64, !dbg !5252
  %27 = load float*, float** %in.addr.i, align 8, !dbg !5252
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !5252
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !5252
  %29 = load i32, i32* %i.i, align 4, !dbg !5253
  %idxprom15.i = sext i32 %29 to i64, !dbg !5254
  %30 = load float*, float** %in.addr.i, align 8, !dbg !5254
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !5254
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !5254
  %mul17.i = fmul float %28, %31, !dbg !5255
  %32 = load float, float* %cost.i, align 4, !dbg !5256
  %add18.i = fadd float %32, %mul17.i, !dbg !5256
  store float %add18.i, float* %cost.i, align 4, !dbg !5256
  %33 = load i32, i32* %i.i, align 4, !dbg !5257
  %inc.i = add nsw i32 %33, 1, !dbg !5257
  store i32 %inc.i, i32* %i.i, align 4, !dbg !5257
  br label %for.cond.i, !dbg !5258, !llvm.loop !4143

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !5259
  %tobool19.i = icmp ne i32* %34, null, !dbg !5259
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !5260

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !5261
  store i32 0, i32* %35, align 4, !dbg !5262
  br label %if.end.i, !dbg !5263

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !5264
  %tobool21.i = icmp ne float* %36, null, !dbg !5264
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !5265

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !5266
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !5267
  store float %37, float* %38, align 4, !dbg !5268
  br label %if.end23.i, !dbg !5269

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !5270
  %tobool24.i = icmp ne float* %39, null, !dbg !5270
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !5271

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !5272
  br label %for.cond26.i, !dbg !5273

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !5274
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !5275
  %cmp27.i = icmp slt i32 %40, %41, !dbg !5276
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !5277

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !5278
  br label %for.cond29.i, !dbg !5279

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !5280
  %43 = load i32, i32* %dim.i, align 4, !dbg !5281
  %cmp30.i = icmp slt i32 %42, %43, !dbg !5282
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !5283

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !5284
  %45 = load i32, i32* %j.i, align 4, !dbg !5285
  %add32.i = add nsw i32 %44, %45, !dbg !5286
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !5287
  %46 = load float*, float** %out.addr.i, align 8, !dbg !5287
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !5287
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !5288
  %47 = load i32, i32* %j.i, align 4, !dbg !5289
  %inc36.i = add nsw i32 %47, 1, !dbg !5289
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !5289
  br label %for.cond29.i, !dbg !5290, !llvm.loop !4188

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !5291
  %49 = load i32, i32* %i.i, align 4, !dbg !5292
  %add39.i = add nsw i32 %49, %48, !dbg !5292
  store i32 %add39.i, i32* %i.i, align 4, !dbg !5292
  br label %for.cond26.i, !dbg !5293, !llvm.loop !4194

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !5294

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !5295
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !5296
  %mul42.i = fmul float %50, %51, !dbg !5297
  store float %mul42.i, float* %retval.i, align 4, !dbg !5298
  br label %quantize_and_encode_band_cost_template.exit, !dbg !5298

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !5299
  %tobool44.i = icmp ne float* %52, null, !dbg !5299
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !5300

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5301
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !5302
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !5302
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5303
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !5304
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !5303
  %56 = load float*, float** %in.addr.i, align 8, !dbg !5305
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !5306
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #8, !dbg !5301
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5307
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !5308
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !5307
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !5309
  br label %if.end48.i, !dbg !5310

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5311
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !5312
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !5312
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5313
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !5314
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !5313
  %62 = load float*, float** %in.addr.i, align 8, !dbg !5315
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !5316
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !5317
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !5318
  %tobool50.i = icmp ne i32 %65, 0, !dbg !5319
  %lnot.i = xor i1 %tobool50.i, true, !dbg !5319
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !5319
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !5320
  %idxprom51.i = sext i32 %66 to i64, !dbg !5321
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !5321
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !5321
  %conv.i = zext i8 %67 to i32, !dbg !5321
  %68 = load float, float* %Q34.i, align 4, !dbg !5322
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !5323
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #8, !dbg !5311
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !5324
  %tobool53.i = icmp ne i32 %70, 0, !dbg !5324
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !5325

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !5326
  br label %if.end58.i, !dbg !5327

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !5328
  %idxprom55.i = sext i32 %71 to i64, !dbg !5329
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !5329
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !5329
  %conv57.i = zext i8 %72 to i32, !dbg !5329
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !5330
  br label %if.end58.i, !dbg !5222

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !5331
  br label %for.cond59.i, !dbg !5332

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !5333
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !5334
  %cmp60.i = icmp slt i32 %73, %74, !dbg !5335
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !5336

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5337
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !5338
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !5337
  %76 = load i32, i32* %i.i, align 4, !dbg !5339
  %idx.ext.i = sext i32 %76 to i64, !dbg !5340
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !5340
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !5176
  store i32 0, i32* %curidx.i, align 4, !dbg !5177
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !5180
  store i32 0, i32* %j.i, align 4, !dbg !5341
  br label %for.cond65.i, !dbg !5342

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !5343
  %78 = load i32, i32* %dim.i, align 4, !dbg !5344
  %cmp66.i = icmp slt i32 %77, %78, !dbg !5345
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !5346

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !5347
  %idxprom69.i = sext i32 %79 to i64, !dbg !5348
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !5348
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !5348
  %conv71.i = zext i8 %80 to i32, !dbg !5348
  %81 = load i32, i32* %curidx.i, align 4, !dbg !5349
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !5349
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !5349
  %82 = load i32, i32* %j.i, align 4, !dbg !5350
  %idxprom73.i = sext i32 %82 to i64, !dbg !5351
  %83 = load i32*, i32** %quants.i, align 8, !dbg !5351
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !5351
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !5351
  %85 = load i32, i32* %off.i, align 4, !dbg !5352
  %add75.i = add nsw i32 %84, %85, !dbg !5353
  %86 = load i32, i32* %curidx.i, align 4, !dbg !5354
  %add76.i = add nsw i32 %86, %add75.i, !dbg !5354
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !5354
  %87 = load i32, i32* %j.i, align 4, !dbg !5355
  %inc78.i = add nsw i32 %87, 1, !dbg !5355
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !5355
  br label %for.cond65.i, !dbg !5356, !llvm.loop !4270

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !5357
  %idxprom80.i = sext i32 %88 to i64, !dbg !5358
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !5359
  %sub81.i = sub nsw i32 %89, 1, !dbg !5360
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !5358
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !5358
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !5358
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !5358
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !5358
  %conv85.i = zext i8 %91 to i32, !dbg !5358
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !5361
  %92 = load i32, i32* %curidx.i, align 4, !dbg !5362
  %93 = load i32, i32* %dim.i, align 4, !dbg !5363
  %mul86.i = mul nsw i32 %92, %93, !dbg !5364
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !5365
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !5366
  %sub88.i = sub nsw i32 %94, 1, !dbg !5367
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !5365
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !5365
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !5365
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !5365
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !5368
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !5369
  %tobool92.i = icmp ne i32 %96, 0, !dbg !5369
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !5370

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !5371
  br label %for.cond94.i, !dbg !5372

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !5373
  %98 = load i32, i32* %dim.i, align 4, !dbg !5374
  %cmp95.i = icmp slt i32 %97, %98, !dbg !5375
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !5376

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !5377
  %100 = load i32, i32* %j.i, align 4, !dbg !5378
  %add98.i = add nsw i32 %99, %100, !dbg !5379
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !5380
  %101 = load float*, float** %in.addr.i, align 8, !dbg !5380
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !5380
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !5380
  %call.i = call float @fabsf(float %102) #1, !dbg !5381
  store float %call.i, float* %t.i, align 4, !dbg !5181
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !5382
  %tobool101.i = icmp ne i32 %103, 0, !dbg !5382
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !5383

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !5384
  %idxprom102.i = sext i32 %104 to i64, !dbg !5385
  %105 = load float*, float** %vec.i, align 8, !dbg !5385
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !5385
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !5385
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !5386
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !5387

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !5388
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !5389
  %cmp107.i = fcmp oge float %107, %108, !dbg !5390
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !5391

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !5392
  store float %109, float* %quantized.i, align 4, !dbg !5393
  %110 = load i32, i32* %curbits.i, align 4, !dbg !5394
  %add110.i = add nsw i32 %110, 21, !dbg !5394
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !5394
  br label %if.end124.i, !dbg !5395

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !5396
  %112 = load float, float* %Q.i, align 4, !dbg !5397
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !5398
  %call112.i = call i32 @quant(float %111, float %112, float %113) #8, !dbg !5399
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !5400
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !5400
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !5401
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !5402
  %shl.i.i = shl i32 1, %115, !dbg !5403
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !5404
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !5405
  %and.i.i = and i32 %114, %neg.i.i, !dbg !5406
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !5406
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !5407

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !5408
  %neg1.i.i = xor i32 %116, -1, !dbg !5409
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !5410
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !5411
  %shl2.i.i = shl i32 1, %117, !dbg !5412
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !5413
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !5414
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !5415
  br label %av_clip_uintp2_c.exit.i, !dbg !5415

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !5416
  store i32 %118, i32* %retval.i.i, align 4, !dbg !5417
  br label %av_clip_uintp2_c.exit.i, !dbg !5417

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !5418
  store i32 %119, i32* %c.i, align 4, !dbg !5183
  %120 = load i32, i32* %c.i, align 4, !dbg !5419
  %conv114.i = sitofp i32 %120 to float, !dbg !5419
  %121 = load i32, i32* %c.i, align 4, !dbg !5420
  %conv115.i = sitofp i32 %121 to float, !dbg !5420
  %call116.i = call float @cbrtf(float %conv115.i) #8, !dbg !5421
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !5422
  %122 = load float, float* %IQ.i, align 4, !dbg !5423
  %mul118.i = fmul float %mul117.i, %122, !dbg !5424
  store float %mul118.i, float* %quantized.i, align 4, !dbg !5425
  %123 = load i32, i32* %c.i, align 4, !dbg !5426
  %or.i = or i32 %123, 1, !dbg !5427
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #8, !dbg !5428
  %sub119.i = sub nsw i32 31, %124, !dbg !5429
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !5430
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !5431
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !5432
  %125 = load i32, i32* %curbits.i, align 4, !dbg !5433
  %add123.i = add nsw i32 %125, %add122.i, !dbg !5433
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !5433
  br label %if.end124.i, !dbg !5222

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !5434

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !5435
  %idxprom126.i = sext i32 %126 to i64, !dbg !5436
  %127 = load float*, float** %vec.i, align 8, !dbg !5436
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !5436
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !5436
  %129 = load float, float* %IQ.i, align 4, !dbg !5437
  %mul128.i = fmul float %128, %129, !dbg !5438
  store float %mul128.i, float* %quantized.i, align 4, !dbg !5439
  br label %if.end129.i, !dbg !5222

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !5440
  %131 = load float, float* %quantized.i, align 4, !dbg !5441
  %sub130.i = fsub float %130, %131, !dbg !5442
  store float %sub130.i, float* %di.i, align 4, !dbg !5443
  %132 = load float*, float** %out.addr.i, align 8, !dbg !5444
  %tobool131.i = icmp ne float* %132, null, !dbg !5444
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !5445

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !5446
  %134 = load i32, i32* %j.i, align 4, !dbg !5447
  %add133.i = add nsw i32 %133, %134, !dbg !5448
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !5449
  %135 = load float*, float** %in.addr.i, align 8, !dbg !5449
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !5449
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !5449
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !5450
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !5449

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !5451
  br label %cond.end.i, !dbg !5452

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !5453
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !5454
  br label %cond.end.i, !dbg !5455

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !5456
  %139 = load i32, i32* %i.i, align 4, !dbg !5457
  %140 = load i32, i32* %j.i, align 4, !dbg !5458
  %add140.i = add nsw i32 %139, %140, !dbg !5459
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !5460
  %141 = load float*, float** %out.addr.i, align 8, !dbg !5460
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !5460
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !5461
  br label %if.end143.i, !dbg !5460

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !5462
  %idxprom144.i = sext i32 %142 to i64, !dbg !5463
  %143 = load float*, float** %vec.i, align 8, !dbg !5463
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !5463
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !5463
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !5464
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !5465

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !5466
  %inc149.i = add nsw i32 %145, 1, !dbg !5466
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !5466
  br label %if.end150.i, !dbg !5467

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !5468
  %147 = load float, float* %quantized.i, align 4, !dbg !5469
  %mul151.i = fmul float %146, %147, !dbg !5470
  %148 = load float, float* %qenergy.i, align 4, !dbg !5471
  %add152.i = fadd float %148, %mul151.i, !dbg !5471
  store float %add152.i, float* %qenergy.i, align 4, !dbg !5471
  %149 = load float, float* %di.i, align 4, !dbg !5472
  %150 = load float, float* %di.i, align 4, !dbg !5473
  %mul153.i = fmul float %149, %150, !dbg !5474
  %151 = load float, float* %rd.i, align 4, !dbg !5475
  %add154.i = fadd float %151, %mul153.i, !dbg !5475
  store float %add154.i, float* %rd.i, align 4, !dbg !5475
  %152 = load i32, i32* %j.i, align 4, !dbg !5476
  %inc156.i = add nsw i32 %152, 1, !dbg !5476
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !5476
  br label %for.cond94.i, !dbg !5477, !llvm.loop !4405

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !5478

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !5479
  br label %for.cond159.i, !dbg !5480

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !5481
  %154 = load i32, i32* %dim.i, align 4, !dbg !5482
  %cmp160.i = icmp slt i32 %153, %154, !dbg !5483
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !5484

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !5485
  %idxprom163.i = sext i32 %155 to i64, !dbg !5486
  %156 = load float*, float** %vec.i, align 8, !dbg !5486
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !5486
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !5486
  %158 = load float, float* %IQ.i, align 4, !dbg !5487
  %mul165.i = fmul float %157, %158, !dbg !5488
  store float %mul165.i, float* %quantized.i, align 4, !dbg !5489
  %159 = load float, float* %quantized.i, align 4, !dbg !5490
  %160 = load float, float* %quantized.i, align 4, !dbg !5491
  %mul166.i = fmul float %159, %160, !dbg !5492
  %161 = load float, float* %qenergy.i, align 4, !dbg !5493
  %add167.i = fadd float %161, %mul166.i, !dbg !5493
  store float %add167.i, float* %qenergy.i, align 4, !dbg !5493
  %162 = load float*, float** %out.addr.i, align 8, !dbg !5494
  %tobool168.i = icmp ne float* %162, null, !dbg !5494
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !5495

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !5496
  %164 = load i32, i32* %i.i, align 4, !dbg !5497
  %165 = load i32, i32* %j.i, align 4, !dbg !5498
  %add170.i = add nsw i32 %164, %165, !dbg !5499
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !5500
  %166 = load float*, float** %out.addr.i, align 8, !dbg !5500
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !5500
  store float %163, float* %arrayidx172.i, align 4, !dbg !5501
  br label %if.end173.i, !dbg !5500

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !5502
  %168 = load i32, i32* %j.i, align 4, !dbg !5503
  %add174.i = add nsw i32 %167, %168, !dbg !5504
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !5505
  %169 = load float*, float** %in.addr.i, align 8, !dbg !5505
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !5505
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !5505
  %171 = load float, float* %quantized.i, align 4, !dbg !5506
  %sub177.i = fsub float %170, %171, !dbg !5507
  %172 = load i32, i32* %i.i, align 4, !dbg !5508
  %173 = load i32, i32* %j.i, align 4, !dbg !5509
  %add178.i = add nsw i32 %172, %173, !dbg !5510
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !5511
  %174 = load float*, float** %in.addr.i, align 8, !dbg !5511
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !5511
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !5511
  %176 = load float, float* %quantized.i, align 4, !dbg !5512
  %sub181.i = fsub float %175, %176, !dbg !5513
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !5514
  %177 = load float, float* %rd.i, align 4, !dbg !5515
  %add183.i = fadd float %177, %mul182.i, !dbg !5515
  store float %add183.i, float* %rd.i, align 4, !dbg !5515
  %178 = load i32, i32* %j.i, align 4, !dbg !5516
  %inc185.i = add nsw i32 %178, 1, !dbg !5516
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !5516
  br label %for.cond159.i, !dbg !5517, !llvm.loop !4454

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !5222

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !5518
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !5519
  %mul188.i = fmul float %179, %180, !dbg !5520
  %181 = load i32, i32* %curbits.i, align 4, !dbg !5521
  %conv189.i = sitofp i32 %181 to float, !dbg !5521
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !5522
  %182 = load float, float* %cost.i, align 4, !dbg !5523
  %add191.i = fadd float %182, %add190.i, !dbg !5523
  store float %add191.i, float* %cost.i, align 4, !dbg !5523
  %183 = load i32, i32* %curbits.i, align 4, !dbg !5524
  %184 = load i32, i32* %resbits.i, align 4, !dbg !5525
  %add192.i = add nsw i32 %184, %183, !dbg !5525
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !5525
  %185 = load float, float* %cost.i, align 4, !dbg !5526
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !5527
  %cmp193.i = fcmp oge float %185, %186, !dbg !5528
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !5529

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !5530
  store float %187, float* %retval.i, align 4, !dbg !5531
  br label %quantize_and_encode_band_cost_template.exit, !dbg !5531

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5532
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !5532
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !5533

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5534
  %190 = load i32, i32* %curidx.i, align 4, !dbg !5535
  %idxprom199.i = sext i32 %190 to i64, !dbg !5536
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !5537
  %sub200.i = sub nsw i32 %191, 1, !dbg !5538
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !5536
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !5536
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !5536
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !5536
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !5536
  %conv204.i = zext i8 %193 to i32, !dbg !5536
  %194 = load i32, i32* %curidx.i, align 4, !dbg !5539
  %idxprom205.i = sext i32 %194 to i64, !dbg !5540
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !5541
  %sub206.i = sub nsw i32 %195, 1, !dbg !5542
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !5540
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !5540
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !5540
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !5540
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !5540
  %conv210.i = zext i16 %197 to i32, !dbg !5540
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #8, !dbg !5543
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !5544
  %tobool211.i = icmp ne i32 %198, 0, !dbg !5544
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !5545

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !5546
  br label %for.cond213.i, !dbg !5547

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !5548
  %200 = load i32, i32* %dim.i, align 4, !dbg !5549
  %cmp214.i = icmp slt i32 %199, %200, !dbg !5550
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !5551

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !5552
  %202 = load i32, i32* %dim.i, align 4, !dbg !5553
  %mul217.i = mul nsw i32 %201, %202, !dbg !5554
  %203 = load i32, i32* %j.i, align 4, !dbg !5555
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !5556
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !5557
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !5558
  %sub220.i = sub nsw i32 %204, 1, !dbg !5559
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !5557
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !5557
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !5557
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !5557
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !5557
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !5560
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !5561

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5562
  %208 = load i32, i32* %i.i, align 4, !dbg !5563
  %209 = load i32, i32* %j.i, align 4, !dbg !5564
  %add227.i = add nsw i32 %208, %209, !dbg !5565
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !5566
  %210 = load float*, float** %in.addr.i, align 8, !dbg !5566
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !5566
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !5566
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !5567
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !5567
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #8, !dbg !5568
  br label %if.end232.i, !dbg !5568

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !5569
  %inc234.i = add nsw i32 %212, 1, !dbg !5569
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !5569
  br label %for.cond213.i, !dbg !5570, !llvm.loop !4516

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !5571

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !5572
  %tobool237.i = icmp ne i32 %213, 0, !dbg !5572
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !5573

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !5574
  br label %for.cond239.i, !dbg !5575

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !5576
  %cmp240.i = icmp slt i32 %214, 2, !dbg !5577
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !5578

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !5579
  %mul243.i = mul nsw i32 %215, 2, !dbg !5580
  %216 = load i32, i32* %j.i, align 4, !dbg !5581
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !5582
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !5583
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !5584
  %sub246.i = sub nsw i32 %217, 1, !dbg !5585
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !5583
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !5583
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !5583
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !5583
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !5583
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !5586
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !5587

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !5588
  %221 = load i32, i32* %j.i, align 4, !dbg !5589
  %add253.i = add nsw i32 %220, %221, !dbg !5590
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !5591
  %222 = load float*, float** %in.addr.i, align 8, !dbg !5591
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !5591
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !5591
  %call256.i = call float @fabsf(float %223) #1, !dbg !5592
  %224 = load float, float* %Q.i, align 4, !dbg !5593
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !5594
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #8, !dbg !5595
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !5596
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !5596
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !5597
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !5598
  %shl.i284.i = shl i32 1, %227, !dbg !5599
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !5600
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !5601
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !5602
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !5602
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !5603

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !5604
  %neg1.i289.i = xor i32 %228, -1, !dbg !5605
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !5606
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !5607
  %shl2.i291.i = shl i32 1, %229, !dbg !5608
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !5609
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !5610
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !5611
  br label %av_clip_uintp2_c.exit296.i, !dbg !5611

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !5612
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !5613
  br label %av_clip_uintp2_c.exit296.i, !dbg !5613

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !5614
  store i32 %231, i32* %coef.i, align 4, !dbg !5184
  %232 = load i32, i32* %coef.i, align 4, !dbg !5615
  %or259.i = or i32 %232, 1, !dbg !5616
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #8, !dbg !5617
  %sub260.i = sub nsw i32 31, %233, !dbg !5618
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !5185
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5619
  %235 = load i32, i32* %len.i, align 4, !dbg !5620
  %sub261.i = sub nsw i32 %235, 4, !dbg !5621
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !5622
  %236 = load i32, i32* %len.i, align 4, !dbg !5623
  %sub263.i = sub nsw i32 %236, 4, !dbg !5624
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !5625
  %shl.i = shl i32 1, %add264.i, !dbg !5626
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !5627
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #8, !dbg !5628
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5629
  %238 = load i32, i32* %len.i, align 4, !dbg !5630
  %239 = load i32, i32* %coef.i, align 4, !dbg !5631
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #8, !dbg !5632
  br label %if.end266.i, !dbg !5633

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !5634
  %inc268.i = add nsw i32 %240, 1, !dbg !5634
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !5634
  br label %for.cond239.i, !dbg !5635, !llvm.loop !4587

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !5636

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !5637

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !5638
  %242 = load i32, i32* %i.i, align 4, !dbg !5639
  %add273.i = add nsw i32 %242, %241, !dbg !5639
  store i32 %add273.i, i32* %i.i, align 4, !dbg !5639
  br label %for.cond59.i, !dbg !5640, !llvm.loop !4595

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !5641
  %tobool275.i = icmp ne i32* %243, null, !dbg !5641
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !5642

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !5643
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !5644
  store i32 %244, i32* %245, align 4, !dbg !5645
  br label %if.end277.i, !dbg !5646

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !5647
  %tobool278.i = icmp ne float* %246, null, !dbg !5647
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !5648

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !5649
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !5650
  store float %247, float* %248, align 4, !dbg !5651
  br label %if.end280.i, !dbg !5652

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !5653
  store float %249, float* %retval.i, align 4, !dbg !5654
  br label %quantize_and_encode_band_cost_template.exit, !dbg !5654

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !5655
  ret float %250, !dbg !5656
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_SPAIR(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !5657 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !3939, metadata !2763), !dbg !5658
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !3963, metadata !2763), !dbg !5661
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !3939, metadata !2763), !dbg !5662
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !3963, metadata !2763), !dbg !5664
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !3978, metadata !2763), !dbg !5665
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3980, metadata !2763), !dbg !5666
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !3982, metadata !2763), !dbg !5667
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !3984, metadata !2763), !dbg !5668
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !3986, metadata !2763), !dbg !5669
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3988, metadata !2763), !dbg !5670
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !3990, metadata !2763), !dbg !5671
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !3992, metadata !2763), !dbg !5672
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !3994, metadata !2763), !dbg !5673
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !3996, metadata !2763), !dbg !5674
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !3998, metadata !2763), !dbg !5675
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !4000, metadata !2763), !dbg !5676
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !4002, metadata !2763), !dbg !5677
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !4004, metadata !2763), !dbg !5678
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !4006, metadata !2763), !dbg !5679
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !4008, metadata !2763), !dbg !5680
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !4010, metadata !2763), !dbg !5681
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !4012, metadata !2763), !dbg !5682
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !4014, metadata !2763), !dbg !5683
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !4016, metadata !2763), !dbg !5684
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !4018, metadata !2763), !dbg !5685
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !4020, metadata !2763), !dbg !5686
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !4022, metadata !2763), !dbg !5687
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !4024, metadata !2763), !dbg !5688
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !4026, metadata !2763), !dbg !5689
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !4028, metadata !2763), !dbg !5690
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !4030, metadata !2763), !dbg !5691
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !4032, metadata !2763), !dbg !5692
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !4034, metadata !2763), !dbg !5693
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !4036, metadata !2763), !dbg !5694
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !4038, metadata !2763), !dbg !5695
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !4040, metadata !2763), !dbg !5696
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !4042, metadata !2763), !dbg !5697
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !4044, metadata !2763), !dbg !5698
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !4046, metadata !2763), !dbg !5699
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !4048, metadata !2763), !dbg !5700
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !4050, metadata !2763), !dbg !5701
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !4052, metadata !2763), !dbg !5702
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !4054, metadata !2763), !dbg !5703
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !4056, metadata !2763), !dbg !5704
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !4058, metadata !2763), !dbg !5705
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !4060, metadata !2763), !dbg !5706
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !5707, metadata !2763), !dbg !5708
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !5709, metadata !2763), !dbg !5710
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !5711, metadata !2763), !dbg !5712
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !5713, metadata !2763), !dbg !5714
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !5715, metadata !2763), !dbg !5716
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5717, metadata !2763), !dbg !5718
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !5719, metadata !2763), !dbg !5720
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !5721, metadata !2763), !dbg !5722
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !5723, metadata !2763), !dbg !5724
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !5725, metadata !2763), !dbg !5726
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !5727, metadata !2763), !dbg !5728
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !5729, metadata !2763), !dbg !5730
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !5731
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !5732
  %2 = load float*, float** %in.addr, align 8, !dbg !5733
  %3 = load float*, float** %quant.addr, align 8, !dbg !5734
  %4 = load float*, float** %scaled.addr, align 8, !dbg !5735
  %5 = load i32, i32* %size.addr, align 4, !dbg !5736
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !5737
  %7 = load i32, i32* %cb.addr, align 4, !dbg !5738
  %8 = load float, float* %lambda.addr, align 4, !dbg !5739
  %9 = load float, float* %uplim.addr, align 4, !dbg !5740
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !5741
  %11 = load float*, float** %energy.addr, align 8, !dbg !5742
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5743
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !5743
  store float* %2, float** %in.addr.i, align 8, !dbg !5743
  store float* %3, float** %out.addr.i, align 8, !dbg !5743
  store float* %4, float** %scaled.addr.i, align 8, !dbg !5743
  store i32 %5, i32* %size.addr.i, align 4, !dbg !5743
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !5743
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !5743
  store float %8, float* %lambda.addr.i, align 4, !dbg !5743
  store float %9, float* %uplim.addr.i, align 4, !dbg !5743
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !5743
  store float* %11, float** %energy.addr.i, align 8, !dbg !5743
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !5743
  store i32 0, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !5743
  store i32 1, i32* %BT_PAIR.addr.i, align 4, !dbg !5743
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !5743
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !5743
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !5743
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !5743
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !5744
  %sub.i = sub nsw i32 200, %12, !dbg !5745
  %add.i = add nsw i32 %sub.i, 140, !dbg !5746
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !5747
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !5684
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !5748
  %idxprom.i = sext i32 %13 to i64, !dbg !5749
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !5749
  %14 = load float, float* %arrayidx.i, align 4, !dbg !5749
  store float %14, float* %Q.i, align 4, !dbg !5685
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !5750
  %idxprom2.i = sext i32 %15 to i64, !dbg !5751
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !5751
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !5751
  store float %16, float* %Q34.i, align 4, !dbg !5686
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !5752
  %add4.i = add nsw i32 200, %17, !dbg !5753
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !5754
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !5755
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !5756
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !5756
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !5756
  store float %18, float* %IQ.i, align 4, !dbg !5687
  %19 = load float, float* %IQ.i, align 4, !dbg !5757
  %mul.i = fmul float 1.651400e+05, %19, !dbg !5758
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !5688
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !5691
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !5692
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !5759
  %tobool.i = icmp ne i32 %20, 0, !dbg !5759
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !5759
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !5693
  store i32 0, i32* %resbits.i, align 4, !dbg !5694
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !5760
  %tobool9.i = icmp ne i32 %21, 0, !dbg !5760
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !5761

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !5762
  %tobool10.i = icmp ne i32 %22, 0, !dbg !5762
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !5763

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !5764
  %tobool12.i = icmp ne i32 %23, 0, !dbg !5764
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !5765

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !5766
  br label %for.cond.i, !dbg !5767

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !5768
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !5769
  %cmp.i = icmp slt i32 %24, %25, !dbg !5770
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !5771

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !5772
  %idxprom13.i = sext i32 %26 to i64, !dbg !5773
  %27 = load float*, float** %in.addr.i, align 8, !dbg !5773
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !5773
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !5773
  %29 = load i32, i32* %i.i, align 4, !dbg !5774
  %idxprom15.i = sext i32 %29 to i64, !dbg !5775
  %30 = load float*, float** %in.addr.i, align 8, !dbg !5775
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !5775
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !5775
  %mul17.i = fmul float %28, %31, !dbg !5776
  %32 = load float, float* %cost.i, align 4, !dbg !5777
  %add18.i = fadd float %32, %mul17.i, !dbg !5777
  store float %add18.i, float* %cost.i, align 4, !dbg !5777
  %33 = load i32, i32* %i.i, align 4, !dbg !5778
  %inc.i = add nsw i32 %33, 1, !dbg !5778
  store i32 %inc.i, i32* %i.i, align 4, !dbg !5778
  br label %for.cond.i, !dbg !5779, !llvm.loop !4143

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !5780
  %tobool19.i = icmp ne i32* %34, null, !dbg !5780
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !5781

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !5782
  store i32 0, i32* %35, align 4, !dbg !5783
  br label %if.end.i, !dbg !5784

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !5785
  %tobool21.i = icmp ne float* %36, null, !dbg !5785
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !5786

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !5787
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !5788
  store float %37, float* %38, align 4, !dbg !5789
  br label %if.end23.i, !dbg !5790

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !5791
  %tobool24.i = icmp ne float* %39, null, !dbg !5791
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !5792

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !5793
  br label %for.cond26.i, !dbg !5794

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !5795
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !5796
  %cmp27.i = icmp slt i32 %40, %41, !dbg !5797
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !5798

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !5799
  br label %for.cond29.i, !dbg !5800

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !5801
  %43 = load i32, i32* %dim.i, align 4, !dbg !5802
  %cmp30.i = icmp slt i32 %42, %43, !dbg !5803
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !5804

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !5805
  %45 = load i32, i32* %j.i, align 4, !dbg !5806
  %add32.i = add nsw i32 %44, %45, !dbg !5807
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !5808
  %46 = load float*, float** %out.addr.i, align 8, !dbg !5808
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !5808
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !5809
  %47 = load i32, i32* %j.i, align 4, !dbg !5810
  %inc36.i = add nsw i32 %47, 1, !dbg !5810
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !5810
  br label %for.cond29.i, !dbg !5811, !llvm.loop !4188

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !5812
  %49 = load i32, i32* %i.i, align 4, !dbg !5813
  %add39.i = add nsw i32 %49, %48, !dbg !5813
  store i32 %add39.i, i32* %i.i, align 4, !dbg !5813
  br label %for.cond26.i, !dbg !5814, !llvm.loop !4194

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !5815

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !5816
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !5817
  %mul42.i = fmul float %50, %51, !dbg !5818
  store float %mul42.i, float* %retval.i, align 4, !dbg !5819
  br label %quantize_and_encode_band_cost_template.exit, !dbg !5819

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !5820
  %tobool44.i = icmp ne float* %52, null, !dbg !5820
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !5821

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5822
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !5823
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !5823
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5824
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !5825
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !5824
  %56 = load float*, float** %in.addr.i, align 8, !dbg !5826
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !5827
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #8, !dbg !5822
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5828
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !5829
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !5828
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !5830
  br label %if.end48.i, !dbg !5831

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5832
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !5833
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !5833
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5834
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !5835
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !5834
  %62 = load float*, float** %in.addr.i, align 8, !dbg !5836
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !5837
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !5838
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !5839
  %tobool50.i = icmp ne i32 %65, 0, !dbg !5840
  %lnot.i = xor i1 %tobool50.i, true, !dbg !5840
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !5840
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !5841
  %idxprom51.i = sext i32 %66 to i64, !dbg !5842
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !5842
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !5842
  %conv.i = zext i8 %67 to i32, !dbg !5842
  %68 = load float, float* %Q34.i, align 4, !dbg !5843
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !5844
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #8, !dbg !5832
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !5845
  %tobool53.i = icmp ne i32 %70, 0, !dbg !5845
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !5846

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !5847
  br label %if.end58.i, !dbg !5848

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !5849
  %idxprom55.i = sext i32 %71 to i64, !dbg !5850
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !5850
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !5850
  %conv57.i = zext i8 %72 to i32, !dbg !5850
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !5851
  br label %if.end58.i, !dbg !5743

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !5852
  br label %for.cond59.i, !dbg !5853

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !5854
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !5855
  %cmp60.i = icmp slt i32 %73, %74, !dbg !5856
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !5857

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !5858
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !5859
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !5858
  %76 = load i32, i32* %i.i, align 4, !dbg !5860
  %idx.ext.i = sext i32 %76 to i64, !dbg !5861
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !5861
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !5697
  store i32 0, i32* %curidx.i, align 4, !dbg !5698
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !5701
  store i32 0, i32* %j.i, align 4, !dbg !5862
  br label %for.cond65.i, !dbg !5863

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !5864
  %78 = load i32, i32* %dim.i, align 4, !dbg !5865
  %cmp66.i = icmp slt i32 %77, %78, !dbg !5866
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !5867

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !5868
  %idxprom69.i = sext i32 %79 to i64, !dbg !5869
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !5869
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !5869
  %conv71.i = zext i8 %80 to i32, !dbg !5869
  %81 = load i32, i32* %curidx.i, align 4, !dbg !5870
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !5870
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !5870
  %82 = load i32, i32* %j.i, align 4, !dbg !5871
  %idxprom73.i = sext i32 %82 to i64, !dbg !5872
  %83 = load i32*, i32** %quants.i, align 8, !dbg !5872
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !5872
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !5872
  %85 = load i32, i32* %off.i, align 4, !dbg !5873
  %add75.i = add nsw i32 %84, %85, !dbg !5874
  %86 = load i32, i32* %curidx.i, align 4, !dbg !5875
  %add76.i = add nsw i32 %86, %add75.i, !dbg !5875
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !5875
  %87 = load i32, i32* %j.i, align 4, !dbg !5876
  %inc78.i = add nsw i32 %87, 1, !dbg !5876
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !5876
  br label %for.cond65.i, !dbg !5877, !llvm.loop !4270

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !5878
  %idxprom80.i = sext i32 %88 to i64, !dbg !5879
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !5880
  %sub81.i = sub nsw i32 %89, 1, !dbg !5881
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !5879
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !5879
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !5879
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !5879
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !5879
  %conv85.i = zext i8 %91 to i32, !dbg !5879
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !5882
  %92 = load i32, i32* %curidx.i, align 4, !dbg !5883
  %93 = load i32, i32* %dim.i, align 4, !dbg !5884
  %mul86.i = mul nsw i32 %92, %93, !dbg !5885
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !5886
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !5887
  %sub88.i = sub nsw i32 %94, 1, !dbg !5888
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !5886
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !5886
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !5886
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !5886
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !5889
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !5890
  %tobool92.i = icmp ne i32 %96, 0, !dbg !5890
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !5891

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !5892
  br label %for.cond94.i, !dbg !5893

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !5894
  %98 = load i32, i32* %dim.i, align 4, !dbg !5895
  %cmp95.i = icmp slt i32 %97, %98, !dbg !5896
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !5897

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !5898
  %100 = load i32, i32* %j.i, align 4, !dbg !5899
  %add98.i = add nsw i32 %99, %100, !dbg !5900
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !5901
  %101 = load float*, float** %in.addr.i, align 8, !dbg !5901
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !5901
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !5901
  %call.i = call float @fabsf(float %102) #1, !dbg !5902
  store float %call.i, float* %t.i, align 4, !dbg !5702
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !5903
  %tobool101.i = icmp ne i32 %103, 0, !dbg !5903
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !5904

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !5905
  %idxprom102.i = sext i32 %104 to i64, !dbg !5906
  %105 = load float*, float** %vec.i, align 8, !dbg !5906
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !5906
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !5906
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !5907
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !5908

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !5909
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !5910
  %cmp107.i = fcmp oge float %107, %108, !dbg !5911
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !5912

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !5913
  store float %109, float* %quantized.i, align 4, !dbg !5914
  %110 = load i32, i32* %curbits.i, align 4, !dbg !5915
  %add110.i = add nsw i32 %110, 21, !dbg !5915
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !5915
  br label %if.end124.i, !dbg !5916

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !5917
  %112 = load float, float* %Q.i, align 4, !dbg !5918
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !5919
  %call112.i = call i32 @quant(float %111, float %112, float %113) #8, !dbg !5920
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !5921
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !5921
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !5922
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !5923
  %shl.i.i = shl i32 1, %115, !dbg !5924
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !5925
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !5926
  %and.i.i = and i32 %114, %neg.i.i, !dbg !5927
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !5927
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !5928

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !5929
  %neg1.i.i = xor i32 %116, -1, !dbg !5930
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !5931
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !5932
  %shl2.i.i = shl i32 1, %117, !dbg !5933
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !5934
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !5935
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !5936
  br label %av_clip_uintp2_c.exit.i, !dbg !5936

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !5937
  store i32 %118, i32* %retval.i.i, align 4, !dbg !5938
  br label %av_clip_uintp2_c.exit.i, !dbg !5938

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !5939
  store i32 %119, i32* %c.i, align 4, !dbg !5704
  %120 = load i32, i32* %c.i, align 4, !dbg !5940
  %conv114.i = sitofp i32 %120 to float, !dbg !5940
  %121 = load i32, i32* %c.i, align 4, !dbg !5941
  %conv115.i = sitofp i32 %121 to float, !dbg !5941
  %call116.i = call float @cbrtf(float %conv115.i) #8, !dbg !5942
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !5943
  %122 = load float, float* %IQ.i, align 4, !dbg !5944
  %mul118.i = fmul float %mul117.i, %122, !dbg !5945
  store float %mul118.i, float* %quantized.i, align 4, !dbg !5946
  %123 = load i32, i32* %c.i, align 4, !dbg !5947
  %or.i = or i32 %123, 1, !dbg !5948
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #8, !dbg !5949
  %sub119.i = sub nsw i32 31, %124, !dbg !5950
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !5951
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !5952
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !5953
  %125 = load i32, i32* %curbits.i, align 4, !dbg !5954
  %add123.i = add nsw i32 %125, %add122.i, !dbg !5954
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !5954
  br label %if.end124.i, !dbg !5743

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !5955

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !5956
  %idxprom126.i = sext i32 %126 to i64, !dbg !5957
  %127 = load float*, float** %vec.i, align 8, !dbg !5957
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !5957
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !5957
  %129 = load float, float* %IQ.i, align 4, !dbg !5958
  %mul128.i = fmul float %128, %129, !dbg !5959
  store float %mul128.i, float* %quantized.i, align 4, !dbg !5960
  br label %if.end129.i, !dbg !5743

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !5961
  %131 = load float, float* %quantized.i, align 4, !dbg !5962
  %sub130.i = fsub float %130, %131, !dbg !5963
  store float %sub130.i, float* %di.i, align 4, !dbg !5964
  %132 = load float*, float** %out.addr.i, align 8, !dbg !5965
  %tobool131.i = icmp ne float* %132, null, !dbg !5965
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !5966

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !5967
  %134 = load i32, i32* %j.i, align 4, !dbg !5968
  %add133.i = add nsw i32 %133, %134, !dbg !5969
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !5970
  %135 = load float*, float** %in.addr.i, align 8, !dbg !5970
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !5970
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !5970
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !5971
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !5970

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !5972
  br label %cond.end.i, !dbg !5973

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !5974
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !5975
  br label %cond.end.i, !dbg !5976

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !5977
  %139 = load i32, i32* %i.i, align 4, !dbg !5978
  %140 = load i32, i32* %j.i, align 4, !dbg !5979
  %add140.i = add nsw i32 %139, %140, !dbg !5980
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !5981
  %141 = load float*, float** %out.addr.i, align 8, !dbg !5981
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !5981
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !5982
  br label %if.end143.i, !dbg !5981

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !5983
  %idxprom144.i = sext i32 %142 to i64, !dbg !5984
  %143 = load float*, float** %vec.i, align 8, !dbg !5984
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !5984
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !5984
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !5985
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !5986

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !5987
  %inc149.i = add nsw i32 %145, 1, !dbg !5987
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !5987
  br label %if.end150.i, !dbg !5988

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !5989
  %147 = load float, float* %quantized.i, align 4, !dbg !5990
  %mul151.i = fmul float %146, %147, !dbg !5991
  %148 = load float, float* %qenergy.i, align 4, !dbg !5992
  %add152.i = fadd float %148, %mul151.i, !dbg !5992
  store float %add152.i, float* %qenergy.i, align 4, !dbg !5992
  %149 = load float, float* %di.i, align 4, !dbg !5993
  %150 = load float, float* %di.i, align 4, !dbg !5994
  %mul153.i = fmul float %149, %150, !dbg !5995
  %151 = load float, float* %rd.i, align 4, !dbg !5996
  %add154.i = fadd float %151, %mul153.i, !dbg !5996
  store float %add154.i, float* %rd.i, align 4, !dbg !5996
  %152 = load i32, i32* %j.i, align 4, !dbg !5997
  %inc156.i = add nsw i32 %152, 1, !dbg !5997
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !5997
  br label %for.cond94.i, !dbg !5998, !llvm.loop !4405

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !5999

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !6000
  br label %for.cond159.i, !dbg !6001

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !6002
  %154 = load i32, i32* %dim.i, align 4, !dbg !6003
  %cmp160.i = icmp slt i32 %153, %154, !dbg !6004
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !6005

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !6006
  %idxprom163.i = sext i32 %155 to i64, !dbg !6007
  %156 = load float*, float** %vec.i, align 8, !dbg !6007
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !6007
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !6007
  %158 = load float, float* %IQ.i, align 4, !dbg !6008
  %mul165.i = fmul float %157, %158, !dbg !6009
  store float %mul165.i, float* %quantized.i, align 4, !dbg !6010
  %159 = load float, float* %quantized.i, align 4, !dbg !6011
  %160 = load float, float* %quantized.i, align 4, !dbg !6012
  %mul166.i = fmul float %159, %160, !dbg !6013
  %161 = load float, float* %qenergy.i, align 4, !dbg !6014
  %add167.i = fadd float %161, %mul166.i, !dbg !6014
  store float %add167.i, float* %qenergy.i, align 4, !dbg !6014
  %162 = load float*, float** %out.addr.i, align 8, !dbg !6015
  %tobool168.i = icmp ne float* %162, null, !dbg !6015
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !6016

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !6017
  %164 = load i32, i32* %i.i, align 4, !dbg !6018
  %165 = load i32, i32* %j.i, align 4, !dbg !6019
  %add170.i = add nsw i32 %164, %165, !dbg !6020
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !6021
  %166 = load float*, float** %out.addr.i, align 8, !dbg !6021
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !6021
  store float %163, float* %arrayidx172.i, align 4, !dbg !6022
  br label %if.end173.i, !dbg !6021

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !6023
  %168 = load i32, i32* %j.i, align 4, !dbg !6024
  %add174.i = add nsw i32 %167, %168, !dbg !6025
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !6026
  %169 = load float*, float** %in.addr.i, align 8, !dbg !6026
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !6026
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !6026
  %171 = load float, float* %quantized.i, align 4, !dbg !6027
  %sub177.i = fsub float %170, %171, !dbg !6028
  %172 = load i32, i32* %i.i, align 4, !dbg !6029
  %173 = load i32, i32* %j.i, align 4, !dbg !6030
  %add178.i = add nsw i32 %172, %173, !dbg !6031
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !6032
  %174 = load float*, float** %in.addr.i, align 8, !dbg !6032
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !6032
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !6032
  %176 = load float, float* %quantized.i, align 4, !dbg !6033
  %sub181.i = fsub float %175, %176, !dbg !6034
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !6035
  %177 = load float, float* %rd.i, align 4, !dbg !6036
  %add183.i = fadd float %177, %mul182.i, !dbg !6036
  store float %add183.i, float* %rd.i, align 4, !dbg !6036
  %178 = load i32, i32* %j.i, align 4, !dbg !6037
  %inc185.i = add nsw i32 %178, 1, !dbg !6037
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !6037
  br label %for.cond159.i, !dbg !6038, !llvm.loop !4454

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !5743

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !6039
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !6040
  %mul188.i = fmul float %179, %180, !dbg !6041
  %181 = load i32, i32* %curbits.i, align 4, !dbg !6042
  %conv189.i = sitofp i32 %181 to float, !dbg !6042
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !6043
  %182 = load float, float* %cost.i, align 4, !dbg !6044
  %add191.i = fadd float %182, %add190.i, !dbg !6044
  store float %add191.i, float* %cost.i, align 4, !dbg !6044
  %183 = load i32, i32* %curbits.i, align 4, !dbg !6045
  %184 = load i32, i32* %resbits.i, align 4, !dbg !6046
  %add192.i = add nsw i32 %184, %183, !dbg !6046
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !6046
  %185 = load float, float* %cost.i, align 4, !dbg !6047
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !6048
  %cmp193.i = fcmp oge float %185, %186, !dbg !6049
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !6050

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !6051
  store float %187, float* %retval.i, align 4, !dbg !6052
  br label %quantize_and_encode_band_cost_template.exit, !dbg !6052

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6053
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !6053
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !6054

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6055
  %190 = load i32, i32* %curidx.i, align 4, !dbg !6056
  %idxprom199.i = sext i32 %190 to i64, !dbg !6057
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !6058
  %sub200.i = sub nsw i32 %191, 1, !dbg !6059
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !6057
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !6057
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !6057
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !6057
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !6057
  %conv204.i = zext i8 %193 to i32, !dbg !6057
  %194 = load i32, i32* %curidx.i, align 4, !dbg !6060
  %idxprom205.i = sext i32 %194 to i64, !dbg !6061
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !6062
  %sub206.i = sub nsw i32 %195, 1, !dbg !6063
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !6061
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !6061
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !6061
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !6061
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !6061
  %conv210.i = zext i16 %197 to i32, !dbg !6061
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #8, !dbg !6064
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !6065
  %tobool211.i = icmp ne i32 %198, 0, !dbg !6065
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !6066

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !6067
  br label %for.cond213.i, !dbg !6068

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !6069
  %200 = load i32, i32* %dim.i, align 4, !dbg !6070
  %cmp214.i = icmp slt i32 %199, %200, !dbg !6071
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !6072

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !6073
  %202 = load i32, i32* %dim.i, align 4, !dbg !6074
  %mul217.i = mul nsw i32 %201, %202, !dbg !6075
  %203 = load i32, i32* %j.i, align 4, !dbg !6076
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !6077
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !6078
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !6079
  %sub220.i = sub nsw i32 %204, 1, !dbg !6080
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !6078
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !6078
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !6078
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !6078
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !6078
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !6081
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !6082

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6083
  %208 = load i32, i32* %i.i, align 4, !dbg !6084
  %209 = load i32, i32* %j.i, align 4, !dbg !6085
  %add227.i = add nsw i32 %208, %209, !dbg !6086
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !6087
  %210 = load float*, float** %in.addr.i, align 8, !dbg !6087
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !6087
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !6087
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !6088
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !6088
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #8, !dbg !6089
  br label %if.end232.i, !dbg !6089

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !6090
  %inc234.i = add nsw i32 %212, 1, !dbg !6090
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !6090
  br label %for.cond213.i, !dbg !6091, !llvm.loop !4516

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !6092

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !6093
  %tobool237.i = icmp ne i32 %213, 0, !dbg !6093
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !6094

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !6095
  br label %for.cond239.i, !dbg !6096

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !6097
  %cmp240.i = icmp slt i32 %214, 2, !dbg !6098
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !6099

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !6100
  %mul243.i = mul nsw i32 %215, 2, !dbg !6101
  %216 = load i32, i32* %j.i, align 4, !dbg !6102
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !6103
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !6104
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !6105
  %sub246.i = sub nsw i32 %217, 1, !dbg !6106
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !6104
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !6104
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !6104
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !6104
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !6104
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !6107
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !6108

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !6109
  %221 = load i32, i32* %j.i, align 4, !dbg !6110
  %add253.i = add nsw i32 %220, %221, !dbg !6111
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !6112
  %222 = load float*, float** %in.addr.i, align 8, !dbg !6112
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !6112
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !6112
  %call256.i = call float @fabsf(float %223) #1, !dbg !6113
  %224 = load float, float* %Q.i, align 4, !dbg !6114
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !6115
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #8, !dbg !6116
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !6117
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !6117
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !6118
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !6119
  %shl.i284.i = shl i32 1, %227, !dbg !6120
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !6121
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !6122
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !6123
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !6123
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !6124

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !6125
  %neg1.i289.i = xor i32 %228, -1, !dbg !6126
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !6127
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !6128
  %shl2.i291.i = shl i32 1, %229, !dbg !6129
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !6130
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !6131
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !6132
  br label %av_clip_uintp2_c.exit296.i, !dbg !6132

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !6133
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !6134
  br label %av_clip_uintp2_c.exit296.i, !dbg !6134

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !6135
  store i32 %231, i32* %coef.i, align 4, !dbg !5705
  %232 = load i32, i32* %coef.i, align 4, !dbg !6136
  %or259.i = or i32 %232, 1, !dbg !6137
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #8, !dbg !6138
  %sub260.i = sub nsw i32 31, %233, !dbg !6139
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !5706
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6140
  %235 = load i32, i32* %len.i, align 4, !dbg !6141
  %sub261.i = sub nsw i32 %235, 4, !dbg !6142
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !6143
  %236 = load i32, i32* %len.i, align 4, !dbg !6144
  %sub263.i = sub nsw i32 %236, 4, !dbg !6145
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !6146
  %shl.i = shl i32 1, %add264.i, !dbg !6147
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !6148
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #8, !dbg !6149
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6150
  %238 = load i32, i32* %len.i, align 4, !dbg !6151
  %239 = load i32, i32* %coef.i, align 4, !dbg !6152
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #8, !dbg !6153
  br label %if.end266.i, !dbg !6154

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !6155
  %inc268.i = add nsw i32 %240, 1, !dbg !6155
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !6155
  br label %for.cond239.i, !dbg !6156, !llvm.loop !4587

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !6157

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !6158

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !6159
  %242 = load i32, i32* %i.i, align 4, !dbg !6160
  %add273.i = add nsw i32 %242, %241, !dbg !6160
  store i32 %add273.i, i32* %i.i, align 4, !dbg !6160
  br label %for.cond59.i, !dbg !6161, !llvm.loop !4595

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !6162
  %tobool275.i = icmp ne i32* %243, null, !dbg !6162
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !6163

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !6164
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !6165
  store i32 %244, i32* %245, align 4, !dbg !6166
  br label %if.end277.i, !dbg !6167

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !6168
  %tobool278.i = icmp ne float* %246, null, !dbg !6168
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !6169

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !6170
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !6171
  store float %247, float* %248, align 4, !dbg !6172
  br label %if.end280.i, !dbg !6173

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !6174
  store float %249, float* %retval.i, align 4, !dbg !6175
  br label %quantize_and_encode_band_cost_template.exit, !dbg !6175

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !6176
  ret float %250, !dbg !6177
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_UPAIR(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !6178 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !3939, metadata !2763), !dbg !6179
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !3963, metadata !2763), !dbg !6182
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !3939, metadata !2763), !dbg !6183
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !3963, metadata !2763), !dbg !6185
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !3978, metadata !2763), !dbg !6186
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3980, metadata !2763), !dbg !6187
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !3982, metadata !2763), !dbg !6188
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !3984, metadata !2763), !dbg !6189
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !3986, metadata !2763), !dbg !6190
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3988, metadata !2763), !dbg !6191
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !3990, metadata !2763), !dbg !6192
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !3992, metadata !2763), !dbg !6193
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !3994, metadata !2763), !dbg !6194
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !3996, metadata !2763), !dbg !6195
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !3998, metadata !2763), !dbg !6196
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !4000, metadata !2763), !dbg !6197
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !4002, metadata !2763), !dbg !6198
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !4004, metadata !2763), !dbg !6199
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !4006, metadata !2763), !dbg !6200
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !4008, metadata !2763), !dbg !6201
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !4010, metadata !2763), !dbg !6202
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !4012, metadata !2763), !dbg !6203
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !4014, metadata !2763), !dbg !6204
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !4016, metadata !2763), !dbg !6205
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !4018, metadata !2763), !dbg !6206
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !4020, metadata !2763), !dbg !6207
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !4022, metadata !2763), !dbg !6208
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !4024, metadata !2763), !dbg !6209
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !4026, metadata !2763), !dbg !6210
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !4028, metadata !2763), !dbg !6211
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !4030, metadata !2763), !dbg !6212
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !4032, metadata !2763), !dbg !6213
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !4034, metadata !2763), !dbg !6214
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !4036, metadata !2763), !dbg !6215
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !4038, metadata !2763), !dbg !6216
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !4040, metadata !2763), !dbg !6217
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !4042, metadata !2763), !dbg !6218
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !4044, metadata !2763), !dbg !6219
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !4046, metadata !2763), !dbg !6220
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !4048, metadata !2763), !dbg !6221
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !4050, metadata !2763), !dbg !6222
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !4052, metadata !2763), !dbg !6223
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !4054, metadata !2763), !dbg !6224
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !4056, metadata !2763), !dbg !6225
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !4058, metadata !2763), !dbg !6226
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !4060, metadata !2763), !dbg !6227
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !6228, metadata !2763), !dbg !6229
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !6230, metadata !2763), !dbg !6231
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !6232, metadata !2763), !dbg !6233
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !6234, metadata !2763), !dbg !6235
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !6236, metadata !2763), !dbg !6237
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6238, metadata !2763), !dbg !6239
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !6240, metadata !2763), !dbg !6241
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !6242, metadata !2763), !dbg !6243
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !6244, metadata !2763), !dbg !6245
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !6246, metadata !2763), !dbg !6247
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !6248, metadata !2763), !dbg !6249
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !6250, metadata !2763), !dbg !6251
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6252
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6253
  %2 = load float*, float** %in.addr, align 8, !dbg !6254
  %3 = load float*, float** %quant.addr, align 8, !dbg !6255
  %4 = load float*, float** %scaled.addr, align 8, !dbg !6256
  %5 = load i32, i32* %size.addr, align 4, !dbg !6257
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !6258
  %7 = load i32, i32* %cb.addr, align 4, !dbg !6259
  %8 = load float, float* %lambda.addr, align 4, !dbg !6260
  %9 = load float, float* %uplim.addr, align 4, !dbg !6261
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !6262
  %11 = load float*, float** %energy.addr, align 8, !dbg !6263
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6264
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6264
  store float* %2, float** %in.addr.i, align 8, !dbg !6264
  store float* %3, float** %out.addr.i, align 8, !dbg !6264
  store float* %4, float** %scaled.addr.i, align 8, !dbg !6264
  store i32 %5, i32* %size.addr.i, align 4, !dbg !6264
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !6264
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !6264
  store float %8, float* %lambda.addr.i, align 4, !dbg !6264
  store float %9, float* %uplim.addr.i, align 4, !dbg !6264
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !6264
  store float* %11, float** %energy.addr.i, align 8, !dbg !6264
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !6264
  store i32 1, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !6264
  store i32 1, i32* %BT_PAIR.addr.i, align 4, !dbg !6264
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !6264
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !6264
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !6264
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !6264
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !6265
  %sub.i = sub nsw i32 200, %12, !dbg !6266
  %add.i = add nsw i32 %sub.i, 140, !dbg !6267
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !6268
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !6205
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !6269
  %idxprom.i = sext i32 %13 to i64, !dbg !6270
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !6270
  %14 = load float, float* %arrayidx.i, align 4, !dbg !6270
  store float %14, float* %Q.i, align 4, !dbg !6206
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !6271
  %idxprom2.i = sext i32 %15 to i64, !dbg !6272
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !6272
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !6272
  store float %16, float* %Q34.i, align 4, !dbg !6207
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !6273
  %add4.i = add nsw i32 200, %17, !dbg !6274
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !6275
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !6276
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !6277
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !6277
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !6277
  store float %18, float* %IQ.i, align 4, !dbg !6208
  %19 = load float, float* %IQ.i, align 4, !dbg !6278
  %mul.i = fmul float 1.651400e+05, %19, !dbg !6279
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !6209
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !6212
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !6213
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !6280
  %tobool.i = icmp ne i32 %20, 0, !dbg !6280
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !6280
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !6214
  store i32 0, i32* %resbits.i, align 4, !dbg !6215
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !6281
  %tobool9.i = icmp ne i32 %21, 0, !dbg !6281
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !6282

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !6283
  %tobool10.i = icmp ne i32 %22, 0, !dbg !6283
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !6284

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !6285
  %tobool12.i = icmp ne i32 %23, 0, !dbg !6285
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !6286

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !6287
  br label %for.cond.i, !dbg !6288

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !6289
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !6290
  %cmp.i = icmp slt i32 %24, %25, !dbg !6291
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !6292

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !6293
  %idxprom13.i = sext i32 %26 to i64, !dbg !6294
  %27 = load float*, float** %in.addr.i, align 8, !dbg !6294
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !6294
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !6294
  %29 = load i32, i32* %i.i, align 4, !dbg !6295
  %idxprom15.i = sext i32 %29 to i64, !dbg !6296
  %30 = load float*, float** %in.addr.i, align 8, !dbg !6296
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !6296
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !6296
  %mul17.i = fmul float %28, %31, !dbg !6297
  %32 = load float, float* %cost.i, align 4, !dbg !6298
  %add18.i = fadd float %32, %mul17.i, !dbg !6298
  store float %add18.i, float* %cost.i, align 4, !dbg !6298
  %33 = load i32, i32* %i.i, align 4, !dbg !6299
  %inc.i = add nsw i32 %33, 1, !dbg !6299
  store i32 %inc.i, i32* %i.i, align 4, !dbg !6299
  br label %for.cond.i, !dbg !6300, !llvm.loop !4143

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !6301
  %tobool19.i = icmp ne i32* %34, null, !dbg !6301
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !6302

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !6303
  store i32 0, i32* %35, align 4, !dbg !6304
  br label %if.end.i, !dbg !6305

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !6306
  %tobool21.i = icmp ne float* %36, null, !dbg !6306
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !6307

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !6308
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !6309
  store float %37, float* %38, align 4, !dbg !6310
  br label %if.end23.i, !dbg !6311

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !6312
  %tobool24.i = icmp ne float* %39, null, !dbg !6312
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !6313

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !6314
  br label %for.cond26.i, !dbg !6315

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !6316
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !6317
  %cmp27.i = icmp slt i32 %40, %41, !dbg !6318
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !6319

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !6320
  br label %for.cond29.i, !dbg !6321

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !6322
  %43 = load i32, i32* %dim.i, align 4, !dbg !6323
  %cmp30.i = icmp slt i32 %42, %43, !dbg !6324
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !6325

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !6326
  %45 = load i32, i32* %j.i, align 4, !dbg !6327
  %add32.i = add nsw i32 %44, %45, !dbg !6328
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !6329
  %46 = load float*, float** %out.addr.i, align 8, !dbg !6329
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !6329
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !6330
  %47 = load i32, i32* %j.i, align 4, !dbg !6331
  %inc36.i = add nsw i32 %47, 1, !dbg !6331
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !6331
  br label %for.cond29.i, !dbg !6332, !llvm.loop !4188

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !6333
  %49 = load i32, i32* %i.i, align 4, !dbg !6334
  %add39.i = add nsw i32 %49, %48, !dbg !6334
  store i32 %add39.i, i32* %i.i, align 4, !dbg !6334
  br label %for.cond26.i, !dbg !6335, !llvm.loop !4194

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !6336

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !6337
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !6338
  %mul42.i = fmul float %50, %51, !dbg !6339
  store float %mul42.i, float* %retval.i, align 4, !dbg !6340
  br label %quantize_and_encode_band_cost_template.exit, !dbg !6340

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !6341
  %tobool44.i = icmp ne float* %52, null, !dbg !6341
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !6342

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6343
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !6344
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !6344
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6345
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !6346
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !6345
  %56 = load float*, float** %in.addr.i, align 8, !dbg !6347
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !6348
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #8, !dbg !6343
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6349
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !6350
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !6349
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !6351
  br label %if.end48.i, !dbg !6352

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6353
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !6354
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !6354
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6355
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !6356
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !6355
  %62 = load float*, float** %in.addr.i, align 8, !dbg !6357
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !6358
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !6359
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !6360
  %tobool50.i = icmp ne i32 %65, 0, !dbg !6361
  %lnot.i = xor i1 %tobool50.i, true, !dbg !6361
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !6361
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !6362
  %idxprom51.i = sext i32 %66 to i64, !dbg !6363
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !6363
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !6363
  %conv.i = zext i8 %67 to i32, !dbg !6363
  %68 = load float, float* %Q34.i, align 4, !dbg !6364
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !6365
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #8, !dbg !6353
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !6366
  %tobool53.i = icmp ne i32 %70, 0, !dbg !6366
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !6367

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !6368
  br label %if.end58.i, !dbg !6369

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !6370
  %idxprom55.i = sext i32 %71 to i64, !dbg !6371
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !6371
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !6371
  %conv57.i = zext i8 %72 to i32, !dbg !6371
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !6372
  br label %if.end58.i, !dbg !6264

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !6373
  br label %for.cond59.i, !dbg !6374

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !6375
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !6376
  %cmp60.i = icmp slt i32 %73, %74, !dbg !6377
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !6378

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6379
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !6380
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !6379
  %76 = load i32, i32* %i.i, align 4, !dbg !6381
  %idx.ext.i = sext i32 %76 to i64, !dbg !6382
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !6382
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !6218
  store i32 0, i32* %curidx.i, align 4, !dbg !6219
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !6222
  store i32 0, i32* %j.i, align 4, !dbg !6383
  br label %for.cond65.i, !dbg !6384

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !6385
  %78 = load i32, i32* %dim.i, align 4, !dbg !6386
  %cmp66.i = icmp slt i32 %77, %78, !dbg !6387
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !6388

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !6389
  %idxprom69.i = sext i32 %79 to i64, !dbg !6390
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !6390
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !6390
  %conv71.i = zext i8 %80 to i32, !dbg !6390
  %81 = load i32, i32* %curidx.i, align 4, !dbg !6391
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !6391
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !6391
  %82 = load i32, i32* %j.i, align 4, !dbg !6392
  %idxprom73.i = sext i32 %82 to i64, !dbg !6393
  %83 = load i32*, i32** %quants.i, align 8, !dbg !6393
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !6393
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !6393
  %85 = load i32, i32* %off.i, align 4, !dbg !6394
  %add75.i = add nsw i32 %84, %85, !dbg !6395
  %86 = load i32, i32* %curidx.i, align 4, !dbg !6396
  %add76.i = add nsw i32 %86, %add75.i, !dbg !6396
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !6396
  %87 = load i32, i32* %j.i, align 4, !dbg !6397
  %inc78.i = add nsw i32 %87, 1, !dbg !6397
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !6397
  br label %for.cond65.i, !dbg !6398, !llvm.loop !4270

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !6399
  %idxprom80.i = sext i32 %88 to i64, !dbg !6400
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !6401
  %sub81.i = sub nsw i32 %89, 1, !dbg !6402
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !6400
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !6400
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !6400
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !6400
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !6400
  %conv85.i = zext i8 %91 to i32, !dbg !6400
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !6403
  %92 = load i32, i32* %curidx.i, align 4, !dbg !6404
  %93 = load i32, i32* %dim.i, align 4, !dbg !6405
  %mul86.i = mul nsw i32 %92, %93, !dbg !6406
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !6407
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !6408
  %sub88.i = sub nsw i32 %94, 1, !dbg !6409
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !6407
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !6407
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !6407
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !6407
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !6410
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !6411
  %tobool92.i = icmp ne i32 %96, 0, !dbg !6411
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !6412

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !6413
  br label %for.cond94.i, !dbg !6414

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !6415
  %98 = load i32, i32* %dim.i, align 4, !dbg !6416
  %cmp95.i = icmp slt i32 %97, %98, !dbg !6417
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !6418

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !6419
  %100 = load i32, i32* %j.i, align 4, !dbg !6420
  %add98.i = add nsw i32 %99, %100, !dbg !6421
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !6422
  %101 = load float*, float** %in.addr.i, align 8, !dbg !6422
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !6422
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !6422
  %call.i = call float @fabsf(float %102) #1, !dbg !6423
  store float %call.i, float* %t.i, align 4, !dbg !6223
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !6424
  %tobool101.i = icmp ne i32 %103, 0, !dbg !6424
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !6425

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !6426
  %idxprom102.i = sext i32 %104 to i64, !dbg !6427
  %105 = load float*, float** %vec.i, align 8, !dbg !6427
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !6427
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !6427
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !6428
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !6429

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !6430
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !6431
  %cmp107.i = fcmp oge float %107, %108, !dbg !6432
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !6433

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !6434
  store float %109, float* %quantized.i, align 4, !dbg !6435
  %110 = load i32, i32* %curbits.i, align 4, !dbg !6436
  %add110.i = add nsw i32 %110, 21, !dbg !6436
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !6436
  br label %if.end124.i, !dbg !6437

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !6438
  %112 = load float, float* %Q.i, align 4, !dbg !6439
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !6440
  %call112.i = call i32 @quant(float %111, float %112, float %113) #8, !dbg !6441
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !6442
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !6442
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !6443
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !6444
  %shl.i.i = shl i32 1, %115, !dbg !6445
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !6446
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !6447
  %and.i.i = and i32 %114, %neg.i.i, !dbg !6448
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !6448
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !6449

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !6450
  %neg1.i.i = xor i32 %116, -1, !dbg !6451
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !6452
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !6453
  %shl2.i.i = shl i32 1, %117, !dbg !6454
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !6455
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !6456
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !6457
  br label %av_clip_uintp2_c.exit.i, !dbg !6457

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !6458
  store i32 %118, i32* %retval.i.i, align 4, !dbg !6459
  br label %av_clip_uintp2_c.exit.i, !dbg !6459

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !6460
  store i32 %119, i32* %c.i, align 4, !dbg !6225
  %120 = load i32, i32* %c.i, align 4, !dbg !6461
  %conv114.i = sitofp i32 %120 to float, !dbg !6461
  %121 = load i32, i32* %c.i, align 4, !dbg !6462
  %conv115.i = sitofp i32 %121 to float, !dbg !6462
  %call116.i = call float @cbrtf(float %conv115.i) #8, !dbg !6463
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !6464
  %122 = load float, float* %IQ.i, align 4, !dbg !6465
  %mul118.i = fmul float %mul117.i, %122, !dbg !6466
  store float %mul118.i, float* %quantized.i, align 4, !dbg !6467
  %123 = load i32, i32* %c.i, align 4, !dbg !6468
  %or.i = or i32 %123, 1, !dbg !6469
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #8, !dbg !6470
  %sub119.i = sub nsw i32 31, %124, !dbg !6471
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !6472
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !6473
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !6474
  %125 = load i32, i32* %curbits.i, align 4, !dbg !6475
  %add123.i = add nsw i32 %125, %add122.i, !dbg !6475
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !6475
  br label %if.end124.i, !dbg !6264

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !6476

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !6477
  %idxprom126.i = sext i32 %126 to i64, !dbg !6478
  %127 = load float*, float** %vec.i, align 8, !dbg !6478
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !6478
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !6478
  %129 = load float, float* %IQ.i, align 4, !dbg !6479
  %mul128.i = fmul float %128, %129, !dbg !6480
  store float %mul128.i, float* %quantized.i, align 4, !dbg !6481
  br label %if.end129.i, !dbg !6264

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !6482
  %131 = load float, float* %quantized.i, align 4, !dbg !6483
  %sub130.i = fsub float %130, %131, !dbg !6484
  store float %sub130.i, float* %di.i, align 4, !dbg !6485
  %132 = load float*, float** %out.addr.i, align 8, !dbg !6486
  %tobool131.i = icmp ne float* %132, null, !dbg !6486
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !6487

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !6488
  %134 = load i32, i32* %j.i, align 4, !dbg !6489
  %add133.i = add nsw i32 %133, %134, !dbg !6490
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !6491
  %135 = load float*, float** %in.addr.i, align 8, !dbg !6491
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !6491
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !6491
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !6492
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !6491

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !6493
  br label %cond.end.i, !dbg !6494

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !6495
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !6496
  br label %cond.end.i, !dbg !6497

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !6498
  %139 = load i32, i32* %i.i, align 4, !dbg !6499
  %140 = load i32, i32* %j.i, align 4, !dbg !6500
  %add140.i = add nsw i32 %139, %140, !dbg !6501
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !6502
  %141 = load float*, float** %out.addr.i, align 8, !dbg !6502
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !6502
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !6503
  br label %if.end143.i, !dbg !6502

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !6504
  %idxprom144.i = sext i32 %142 to i64, !dbg !6505
  %143 = load float*, float** %vec.i, align 8, !dbg !6505
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !6505
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !6505
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !6506
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !6507

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !6508
  %inc149.i = add nsw i32 %145, 1, !dbg !6508
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !6508
  br label %if.end150.i, !dbg !6509

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !6510
  %147 = load float, float* %quantized.i, align 4, !dbg !6511
  %mul151.i = fmul float %146, %147, !dbg !6512
  %148 = load float, float* %qenergy.i, align 4, !dbg !6513
  %add152.i = fadd float %148, %mul151.i, !dbg !6513
  store float %add152.i, float* %qenergy.i, align 4, !dbg !6513
  %149 = load float, float* %di.i, align 4, !dbg !6514
  %150 = load float, float* %di.i, align 4, !dbg !6515
  %mul153.i = fmul float %149, %150, !dbg !6516
  %151 = load float, float* %rd.i, align 4, !dbg !6517
  %add154.i = fadd float %151, %mul153.i, !dbg !6517
  store float %add154.i, float* %rd.i, align 4, !dbg !6517
  %152 = load i32, i32* %j.i, align 4, !dbg !6518
  %inc156.i = add nsw i32 %152, 1, !dbg !6518
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !6518
  br label %for.cond94.i, !dbg !6519, !llvm.loop !4405

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !6520

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !6521
  br label %for.cond159.i, !dbg !6522

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !6523
  %154 = load i32, i32* %dim.i, align 4, !dbg !6524
  %cmp160.i = icmp slt i32 %153, %154, !dbg !6525
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !6526

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !6527
  %idxprom163.i = sext i32 %155 to i64, !dbg !6528
  %156 = load float*, float** %vec.i, align 8, !dbg !6528
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !6528
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !6528
  %158 = load float, float* %IQ.i, align 4, !dbg !6529
  %mul165.i = fmul float %157, %158, !dbg !6530
  store float %mul165.i, float* %quantized.i, align 4, !dbg !6531
  %159 = load float, float* %quantized.i, align 4, !dbg !6532
  %160 = load float, float* %quantized.i, align 4, !dbg !6533
  %mul166.i = fmul float %159, %160, !dbg !6534
  %161 = load float, float* %qenergy.i, align 4, !dbg !6535
  %add167.i = fadd float %161, %mul166.i, !dbg !6535
  store float %add167.i, float* %qenergy.i, align 4, !dbg !6535
  %162 = load float*, float** %out.addr.i, align 8, !dbg !6536
  %tobool168.i = icmp ne float* %162, null, !dbg !6536
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !6537

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !6538
  %164 = load i32, i32* %i.i, align 4, !dbg !6539
  %165 = load i32, i32* %j.i, align 4, !dbg !6540
  %add170.i = add nsw i32 %164, %165, !dbg !6541
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !6542
  %166 = load float*, float** %out.addr.i, align 8, !dbg !6542
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !6542
  store float %163, float* %arrayidx172.i, align 4, !dbg !6543
  br label %if.end173.i, !dbg !6542

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !6544
  %168 = load i32, i32* %j.i, align 4, !dbg !6545
  %add174.i = add nsw i32 %167, %168, !dbg !6546
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !6547
  %169 = load float*, float** %in.addr.i, align 8, !dbg !6547
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !6547
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !6547
  %171 = load float, float* %quantized.i, align 4, !dbg !6548
  %sub177.i = fsub float %170, %171, !dbg !6549
  %172 = load i32, i32* %i.i, align 4, !dbg !6550
  %173 = load i32, i32* %j.i, align 4, !dbg !6551
  %add178.i = add nsw i32 %172, %173, !dbg !6552
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !6553
  %174 = load float*, float** %in.addr.i, align 8, !dbg !6553
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !6553
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !6553
  %176 = load float, float* %quantized.i, align 4, !dbg !6554
  %sub181.i = fsub float %175, %176, !dbg !6555
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !6556
  %177 = load float, float* %rd.i, align 4, !dbg !6557
  %add183.i = fadd float %177, %mul182.i, !dbg !6557
  store float %add183.i, float* %rd.i, align 4, !dbg !6557
  %178 = load i32, i32* %j.i, align 4, !dbg !6558
  %inc185.i = add nsw i32 %178, 1, !dbg !6558
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !6558
  br label %for.cond159.i, !dbg !6559, !llvm.loop !4454

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !6264

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !6560
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !6561
  %mul188.i = fmul float %179, %180, !dbg !6562
  %181 = load i32, i32* %curbits.i, align 4, !dbg !6563
  %conv189.i = sitofp i32 %181 to float, !dbg !6563
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !6564
  %182 = load float, float* %cost.i, align 4, !dbg !6565
  %add191.i = fadd float %182, %add190.i, !dbg !6565
  store float %add191.i, float* %cost.i, align 4, !dbg !6565
  %183 = load i32, i32* %curbits.i, align 4, !dbg !6566
  %184 = load i32, i32* %resbits.i, align 4, !dbg !6567
  %add192.i = add nsw i32 %184, %183, !dbg !6567
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !6567
  %185 = load float, float* %cost.i, align 4, !dbg !6568
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !6569
  %cmp193.i = fcmp oge float %185, %186, !dbg !6570
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !6571

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !6572
  store float %187, float* %retval.i, align 4, !dbg !6573
  br label %quantize_and_encode_band_cost_template.exit, !dbg !6573

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6574
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !6574
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !6575

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6576
  %190 = load i32, i32* %curidx.i, align 4, !dbg !6577
  %idxprom199.i = sext i32 %190 to i64, !dbg !6578
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !6579
  %sub200.i = sub nsw i32 %191, 1, !dbg !6580
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !6578
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !6578
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !6578
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !6578
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !6578
  %conv204.i = zext i8 %193 to i32, !dbg !6578
  %194 = load i32, i32* %curidx.i, align 4, !dbg !6581
  %idxprom205.i = sext i32 %194 to i64, !dbg !6582
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !6583
  %sub206.i = sub nsw i32 %195, 1, !dbg !6584
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !6582
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !6582
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !6582
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !6582
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !6582
  %conv210.i = zext i16 %197 to i32, !dbg !6582
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #8, !dbg !6585
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !6586
  %tobool211.i = icmp ne i32 %198, 0, !dbg !6586
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !6587

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !6588
  br label %for.cond213.i, !dbg !6589

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !6590
  %200 = load i32, i32* %dim.i, align 4, !dbg !6591
  %cmp214.i = icmp slt i32 %199, %200, !dbg !6592
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !6593

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !6594
  %202 = load i32, i32* %dim.i, align 4, !dbg !6595
  %mul217.i = mul nsw i32 %201, %202, !dbg !6596
  %203 = load i32, i32* %j.i, align 4, !dbg !6597
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !6598
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !6599
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !6600
  %sub220.i = sub nsw i32 %204, 1, !dbg !6601
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !6599
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !6599
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !6599
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !6599
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !6599
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !6602
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !6603

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6604
  %208 = load i32, i32* %i.i, align 4, !dbg !6605
  %209 = load i32, i32* %j.i, align 4, !dbg !6606
  %add227.i = add nsw i32 %208, %209, !dbg !6607
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !6608
  %210 = load float*, float** %in.addr.i, align 8, !dbg !6608
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !6608
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !6608
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !6609
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !6609
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #8, !dbg !6610
  br label %if.end232.i, !dbg !6610

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !6611
  %inc234.i = add nsw i32 %212, 1, !dbg !6611
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !6611
  br label %for.cond213.i, !dbg !6612, !llvm.loop !4516

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !6613

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !6614
  %tobool237.i = icmp ne i32 %213, 0, !dbg !6614
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !6615

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !6616
  br label %for.cond239.i, !dbg !6617

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !6618
  %cmp240.i = icmp slt i32 %214, 2, !dbg !6619
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !6620

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !6621
  %mul243.i = mul nsw i32 %215, 2, !dbg !6622
  %216 = load i32, i32* %j.i, align 4, !dbg !6623
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !6624
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !6625
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !6626
  %sub246.i = sub nsw i32 %217, 1, !dbg !6627
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !6625
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !6625
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !6625
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !6625
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !6625
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !6628
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !6629

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !6630
  %221 = load i32, i32* %j.i, align 4, !dbg !6631
  %add253.i = add nsw i32 %220, %221, !dbg !6632
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !6633
  %222 = load float*, float** %in.addr.i, align 8, !dbg !6633
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !6633
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !6633
  %call256.i = call float @fabsf(float %223) #1, !dbg !6634
  %224 = load float, float* %Q.i, align 4, !dbg !6635
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !6636
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #8, !dbg !6637
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !6638
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !6638
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !6639
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !6640
  %shl.i284.i = shl i32 1, %227, !dbg !6641
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !6642
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !6643
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !6644
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !6644
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !6645

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !6646
  %neg1.i289.i = xor i32 %228, -1, !dbg !6647
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !6648
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !6649
  %shl2.i291.i = shl i32 1, %229, !dbg !6650
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !6651
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !6652
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !6653
  br label %av_clip_uintp2_c.exit296.i, !dbg !6653

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !6654
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !6655
  br label %av_clip_uintp2_c.exit296.i, !dbg !6655

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !6656
  store i32 %231, i32* %coef.i, align 4, !dbg !6226
  %232 = load i32, i32* %coef.i, align 4, !dbg !6657
  %or259.i = or i32 %232, 1, !dbg !6658
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #8, !dbg !6659
  %sub260.i = sub nsw i32 31, %233, !dbg !6660
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !6227
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6661
  %235 = load i32, i32* %len.i, align 4, !dbg !6662
  %sub261.i = sub nsw i32 %235, 4, !dbg !6663
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !6664
  %236 = load i32, i32* %len.i, align 4, !dbg !6665
  %sub263.i = sub nsw i32 %236, 4, !dbg !6666
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !6667
  %shl.i = shl i32 1, %add264.i, !dbg !6668
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !6669
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #8, !dbg !6670
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6671
  %238 = load i32, i32* %len.i, align 4, !dbg !6672
  %239 = load i32, i32* %coef.i, align 4, !dbg !6673
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #8, !dbg !6674
  br label %if.end266.i, !dbg !6675

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !6676
  %inc268.i = add nsw i32 %240, 1, !dbg !6676
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !6676
  br label %for.cond239.i, !dbg !6677, !llvm.loop !4587

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !6678

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !6679

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !6680
  %242 = load i32, i32* %i.i, align 4, !dbg !6681
  %add273.i = add nsw i32 %242, %241, !dbg !6681
  store i32 %add273.i, i32* %i.i, align 4, !dbg !6681
  br label %for.cond59.i, !dbg !6682, !llvm.loop !4595

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !6683
  %tobool275.i = icmp ne i32* %243, null, !dbg !6683
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !6684

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !6685
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !6686
  store i32 %244, i32* %245, align 4, !dbg !6687
  br label %if.end277.i, !dbg !6688

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !6689
  %tobool278.i = icmp ne float* %246, null, !dbg !6689
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !6690

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !6691
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !6692
  store float %247, float* %248, align 4, !dbg !6693
  br label %if.end280.i, !dbg !6694

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !6695
  store float %249, float* %retval.i, align 4, !dbg !6696
  br label %quantize_and_encode_band_cost_template.exit, !dbg !6696

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !6697
  ret float %250, !dbg !6698
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_ESC_RTZ(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !6699 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !3939, metadata !2763), !dbg !6700
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !3963, metadata !2763), !dbg !6703
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !3939, metadata !2763), !dbg !6704
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !3963, metadata !2763), !dbg !6706
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !3978, metadata !2763), !dbg !6707
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3980, metadata !2763), !dbg !6708
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !3982, metadata !2763), !dbg !6709
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !3984, metadata !2763), !dbg !6710
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !3986, metadata !2763), !dbg !6711
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3988, metadata !2763), !dbg !6712
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !3990, metadata !2763), !dbg !6713
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !3992, metadata !2763), !dbg !6714
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !3994, metadata !2763), !dbg !6715
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !3996, metadata !2763), !dbg !6716
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !3998, metadata !2763), !dbg !6717
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !4000, metadata !2763), !dbg !6718
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !4002, metadata !2763), !dbg !6719
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !4004, metadata !2763), !dbg !6720
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !4006, metadata !2763), !dbg !6721
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !4008, metadata !2763), !dbg !6722
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !4010, metadata !2763), !dbg !6723
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !4012, metadata !2763), !dbg !6724
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !4014, metadata !2763), !dbg !6725
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !4016, metadata !2763), !dbg !6726
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !4018, metadata !2763), !dbg !6727
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !4020, metadata !2763), !dbg !6728
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !4022, metadata !2763), !dbg !6729
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !4024, metadata !2763), !dbg !6730
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !4026, metadata !2763), !dbg !6731
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !4028, metadata !2763), !dbg !6732
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !4030, metadata !2763), !dbg !6733
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !4032, metadata !2763), !dbg !6734
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !4034, metadata !2763), !dbg !6735
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !4036, metadata !2763), !dbg !6736
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !4038, metadata !2763), !dbg !6737
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !4040, metadata !2763), !dbg !6738
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !4042, metadata !2763), !dbg !6739
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !4044, metadata !2763), !dbg !6740
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !4046, metadata !2763), !dbg !6741
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !4048, metadata !2763), !dbg !6742
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !4050, metadata !2763), !dbg !6743
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !4052, metadata !2763), !dbg !6744
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !4054, metadata !2763), !dbg !6745
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !4056, metadata !2763), !dbg !6746
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !4058, metadata !2763), !dbg !6747
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !4060, metadata !2763), !dbg !6748
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !6749, metadata !2763), !dbg !6750
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !6751, metadata !2763), !dbg !6752
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !6753, metadata !2763), !dbg !6754
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !6755, metadata !2763), !dbg !6756
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !6757, metadata !2763), !dbg !6758
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6759, metadata !2763), !dbg !6760
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !6761, metadata !2763), !dbg !6762
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !6763, metadata !2763), !dbg !6764
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !6765, metadata !2763), !dbg !6766
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !6767, metadata !2763), !dbg !6768
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !6769, metadata !2763), !dbg !6770
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !6771, metadata !2763), !dbg !6772
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !6773
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !6774
  %2 = load float*, float** %in.addr, align 8, !dbg !6775
  %3 = load float*, float** %quant.addr, align 8, !dbg !6776
  %4 = load float*, float** %scaled.addr, align 8, !dbg !6777
  %5 = load i32, i32* %size.addr, align 4, !dbg !6778
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !6779
  %7 = load float, float* %lambda.addr, align 4, !dbg !6780
  %8 = load float, float* %uplim.addr, align 4, !dbg !6781
  %9 = load i32*, i32** %bits.addr, align 8, !dbg !6782
  %10 = load float*, float** %energy.addr, align 8, !dbg !6783
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6784
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !6784
  store float* %2, float** %in.addr.i, align 8, !dbg !6784
  store float* %3, float** %out.addr.i, align 8, !dbg !6784
  store float* %4, float** %scaled.addr.i, align 8, !dbg !6784
  store i32 %5, i32* %size.addr.i, align 4, !dbg !6784
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !6784
  store i32 11, i32* %cb.addr.i, align 4, !dbg !6784
  store float %7, float* %lambda.addr.i, align 4, !dbg !6784
  store float %8, float* %uplim.addr.i, align 4, !dbg !6784
  store i32* %9, i32** %bits.addr.i, align 8, !dbg !6784
  store float* %10, float** %energy.addr.i, align 8, !dbg !6784
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !6784
  store i32 1, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !6784
  store i32 1, i32* %BT_PAIR.addr.i, align 4, !dbg !6784
  store i32 1, i32* %BT_ESC.addr.i, align 4, !dbg !6784
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !6784
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !6784
  store float 0x3FBAFB7EA0000000, float* %ROUNDING.addr.i, align 4, !dbg !6784
  %11 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !6785
  %sub.i = sub nsw i32 200, %11, !dbg !6786
  %add.i = add nsw i32 %sub.i, 140, !dbg !6787
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !6788
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !6726
  %12 = load i32, i32* %q_idx.i, align 4, !dbg !6789
  %idxprom.i = sext i32 %12 to i64, !dbg !6790
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !6790
  %13 = load float, float* %arrayidx.i, align 4, !dbg !6790
  store float %13, float* %Q.i, align 4, !dbg !6727
  %14 = load i32, i32* %q_idx.i, align 4, !dbg !6791
  %idxprom2.i = sext i32 %14 to i64, !dbg !6792
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !6792
  %15 = load float, float* %arrayidx3.i, align 4, !dbg !6792
  store float %15, float* %Q34.i, align 4, !dbg !6728
  %16 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !6793
  %add4.i = add nsw i32 200, %16, !dbg !6794
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !6795
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !6796
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !6797
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !6797
  %17 = load float, float* %arrayidx8.i, align 4, !dbg !6797
  store float %17, float* %IQ.i, align 4, !dbg !6729
  %18 = load float, float* %IQ.i, align 4, !dbg !6798
  %mul.i = fmul float 1.651400e+05, %18, !dbg !6799
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !6730
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !6733
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !6734
  %19 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !6800
  %tobool.i = icmp ne i32 %19, 0, !dbg !6800
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !6800
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !6735
  store i32 0, i32* %resbits.i, align 4, !dbg !6736
  %20 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !6801
  %tobool9.i = icmp ne i32 %20, 0, !dbg !6801
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !6802

lor.lhs.false.i:                                  ; preds = %entry
  %21 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !6803
  %tobool10.i = icmp ne i32 %21, 0, !dbg !6803
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !6804

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %22 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !6805
  %tobool12.i = icmp ne i32 %22, 0, !dbg !6805
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !6806

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !6807
  br label %for.cond.i, !dbg !6808

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %23 = load i32, i32* %i.i, align 4, !dbg !6809
  %24 = load i32, i32* %size.addr.i, align 4, !dbg !6810
  %cmp.i = icmp slt i32 %23, %24, !dbg !6811
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !6812

for.body.i:                                       ; preds = %for.cond.i
  %25 = load i32, i32* %i.i, align 4, !dbg !6813
  %idxprom13.i = sext i32 %25 to i64, !dbg !6814
  %26 = load float*, float** %in.addr.i, align 8, !dbg !6814
  %arrayidx14.i = getelementptr inbounds float, float* %26, i64 %idxprom13.i, !dbg !6814
  %27 = load float, float* %arrayidx14.i, align 4, !dbg !6814
  %28 = load i32, i32* %i.i, align 4, !dbg !6815
  %idxprom15.i = sext i32 %28 to i64, !dbg !6816
  %29 = load float*, float** %in.addr.i, align 8, !dbg !6816
  %arrayidx16.i = getelementptr inbounds float, float* %29, i64 %idxprom15.i, !dbg !6816
  %30 = load float, float* %arrayidx16.i, align 4, !dbg !6816
  %mul17.i = fmul float %27, %30, !dbg !6817
  %31 = load float, float* %cost.i, align 4, !dbg !6818
  %add18.i = fadd float %31, %mul17.i, !dbg !6818
  store float %add18.i, float* %cost.i, align 4, !dbg !6818
  %32 = load i32, i32* %i.i, align 4, !dbg !6819
  %inc.i = add nsw i32 %32, 1, !dbg !6819
  store i32 %inc.i, i32* %i.i, align 4, !dbg !6819
  br label %for.cond.i, !dbg !6820, !llvm.loop !4143

for.end.i:                                        ; preds = %for.cond.i
  %33 = load i32*, i32** %bits.addr.i, align 8, !dbg !6821
  %tobool19.i = icmp ne i32* %33, null, !dbg !6821
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !6822

if.then20.i:                                      ; preds = %for.end.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !6823
  store i32 0, i32* %34, align 4, !dbg !6824
  br label %if.end.i, !dbg !6825

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %35 = load float*, float** %energy.addr.i, align 8, !dbg !6826
  %tobool21.i = icmp ne float* %35, null, !dbg !6826
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !6827

if.then22.i:                                      ; preds = %if.end.i
  %36 = load float, float* %qenergy.i, align 4, !dbg !6828
  %37 = load float*, float** %energy.addr.i, align 8, !dbg !6829
  store float %36, float* %37, align 4, !dbg !6830
  br label %if.end23.i, !dbg !6831

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %38 = load float*, float** %out.addr.i, align 8, !dbg !6832
  %tobool24.i = icmp ne float* %38, null, !dbg !6832
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !6833

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !6834
  br label %for.cond26.i, !dbg !6835

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %39 = load i32, i32* %i.i, align 4, !dbg !6836
  %40 = load i32, i32* %size.addr.i, align 4, !dbg !6837
  %cmp27.i = icmp slt i32 %39, %40, !dbg !6838
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !6839

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !6840
  br label %for.cond29.i, !dbg !6841

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %41 = load i32, i32* %j.i, align 4, !dbg !6842
  %42 = load i32, i32* %dim.i, align 4, !dbg !6843
  %cmp30.i = icmp slt i32 %41, %42, !dbg !6844
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !6845

for.body31.i:                                     ; preds = %for.cond29.i
  %43 = load i32, i32* %i.i, align 4, !dbg !6846
  %44 = load i32, i32* %j.i, align 4, !dbg !6847
  %add32.i = add nsw i32 %43, %44, !dbg !6848
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !6849
  %45 = load float*, float** %out.addr.i, align 8, !dbg !6849
  %arrayidx34.i = getelementptr inbounds float, float* %45, i64 %idxprom33.i, !dbg !6849
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !6850
  %46 = load i32, i32* %j.i, align 4, !dbg !6851
  %inc36.i = add nsw i32 %46, 1, !dbg !6851
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !6851
  br label %for.cond29.i, !dbg !6852, !llvm.loop !4188

for.end37.i:                                      ; preds = %for.cond29.i
  %47 = load i32, i32* %dim.i, align 4, !dbg !6853
  %48 = load i32, i32* %i.i, align 4, !dbg !6854
  %add39.i = add nsw i32 %48, %47, !dbg !6854
  store i32 %add39.i, i32* %i.i, align 4, !dbg !6854
  br label %for.cond26.i, !dbg !6855, !llvm.loop !4194

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !6856

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %49 = load float, float* %cost.i, align 4, !dbg !6857
  %50 = load float, float* %lambda.addr.i, align 4, !dbg !6858
  %mul42.i = fmul float %49, %50, !dbg !6859
  store float %mul42.i, float* %retval.i, align 4, !dbg !6860
  br label %quantize_and_encode_band_cost_template.exit, !dbg !6860

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %51 = load float*, float** %scaled.addr.i, align 8, !dbg !6861
  %tobool44.i = icmp ne float* %51, null, !dbg !6861
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !6862

if.then45.i:                                      ; preds = %if.end43.i
  %52 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6863
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %52, i32 0, i32 32, !dbg !6864
  %53 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !6864
  %54 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6865
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %54, i32 0, i32 29, !dbg !6866
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !6865
  %55 = load float*, float** %in.addr.i, align 8, !dbg !6867
  %56 = load i32, i32* %size.addr.i, align 4, !dbg !6868
  call void %53(float* %arraydecay.i, float* %55, i32 %56) #8, !dbg !6863
  %57 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6869
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %57, i32 0, i32 29, !dbg !6870
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !6869
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !6871
  br label %if.end48.i, !dbg !6872

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6873
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 33, !dbg !6874
  %59 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !6874
  %60 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6875
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %60, i32 0, i32 28, !dbg !6876
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !6875
  %61 = load float*, float** %in.addr.i, align 8, !dbg !6877
  %62 = load float*, float** %scaled.addr.i, align 8, !dbg !6878
  %63 = load i32, i32* %size.addr.i, align 4, !dbg !6879
  %64 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !6880
  %tobool50.i = icmp ne i32 %64, 0, !dbg !6881
  %lnot.i = xor i1 %tobool50.i, true, !dbg !6881
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !6881
  %65 = load i32, i32* %cb.addr.i, align 4, !dbg !6882
  %idxprom51.i = sext i32 %65 to i64, !dbg !6883
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !6883
  %66 = load i8, i8* %arrayidx52.i, align 1, !dbg !6883
  %conv.i = zext i8 %66 to i32, !dbg !6883
  %67 = load float, float* %Q34.i, align 4, !dbg !6884
  %68 = load float, float* %ROUNDING.addr.i, align 4, !dbg !6885
  call void %59(i32* %arraydecay49.i, float* %61, float* %62, i32 %63, i32 %lnot.ext.i, i32 %conv.i, float %67, float %68) #8, !dbg !6873
  %69 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !6886
  %tobool53.i = icmp ne i32 %69, 0, !dbg !6886
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !6887

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !6888
  br label %if.end58.i, !dbg !6889

if.else.i:                                        ; preds = %if.end48.i
  %70 = load i32, i32* %cb.addr.i, align 4, !dbg !6890
  %idxprom55.i = sext i32 %70 to i64, !dbg !6891
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !6891
  %71 = load i8, i8* %arrayidx56.i, align 1, !dbg !6891
  %conv57.i = zext i8 %71 to i32, !dbg !6891
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !6892
  br label %if.end58.i, !dbg !6784

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !6893
  br label %for.cond59.i, !dbg !6894

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %72 = load i32, i32* %i.i, align 4, !dbg !6895
  %73 = load i32, i32* %size.addr.i, align 4, !dbg !6896
  %cmp60.i = icmp slt i32 %72, %73, !dbg !6897
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !6898

for.body62.i:                                     ; preds = %for.cond59.i
  %74 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !6899
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %74, i32 0, i32 28, !dbg !6900
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !6899
  %75 = load i32, i32* %i.i, align 4, !dbg !6901
  %idx.ext.i = sext i32 %75 to i64, !dbg !6902
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !6902
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !6739
  store i32 0, i32* %curidx.i, align 4, !dbg !6740
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !6743
  store i32 0, i32* %j.i, align 4, !dbg !6903
  br label %for.cond65.i, !dbg !6904

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %76 = load i32, i32* %j.i, align 4, !dbg !6905
  %77 = load i32, i32* %dim.i, align 4, !dbg !6906
  %cmp66.i = icmp slt i32 %76, %77, !dbg !6907
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !6908

for.body68.i:                                     ; preds = %for.cond65.i
  %78 = load i32, i32* %cb.addr.i, align 4, !dbg !6909
  %idxprom69.i = sext i32 %78 to i64, !dbg !6910
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !6910
  %79 = load i8, i8* %arrayidx70.i, align 1, !dbg !6910
  %conv71.i = zext i8 %79 to i32, !dbg !6910
  %80 = load i32, i32* %curidx.i, align 4, !dbg !6911
  %mul72.i = mul nsw i32 %80, %conv71.i, !dbg !6911
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !6911
  %81 = load i32, i32* %j.i, align 4, !dbg !6912
  %idxprom73.i = sext i32 %81 to i64, !dbg !6913
  %82 = load i32*, i32** %quants.i, align 8, !dbg !6913
  %arrayidx74.i = getelementptr inbounds i32, i32* %82, i64 %idxprom73.i, !dbg !6913
  %83 = load i32, i32* %arrayidx74.i, align 4, !dbg !6913
  %84 = load i32, i32* %off.i, align 4, !dbg !6914
  %add75.i = add nsw i32 %83, %84, !dbg !6915
  %85 = load i32, i32* %curidx.i, align 4, !dbg !6916
  %add76.i = add nsw i32 %85, %add75.i, !dbg !6916
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !6916
  %86 = load i32, i32* %j.i, align 4, !dbg !6917
  %inc78.i = add nsw i32 %86, 1, !dbg !6917
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !6917
  br label %for.cond65.i, !dbg !6918, !llvm.loop !4270

for.end79.i:                                      ; preds = %for.cond65.i
  %87 = load i32, i32* %curidx.i, align 4, !dbg !6919
  %idxprom80.i = sext i32 %87 to i64, !dbg !6920
  %88 = load i32, i32* %cb.addr.i, align 4, !dbg !6921
  %sub81.i = sub nsw i32 %88, 1, !dbg !6922
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !6920
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !6920
  %89 = load i8*, i8** %arrayidx83.i, align 8, !dbg !6920
  %arrayidx84.i = getelementptr inbounds i8, i8* %89, i64 %idxprom80.i, !dbg !6920
  %90 = load i8, i8* %arrayidx84.i, align 1, !dbg !6920
  %conv85.i = zext i8 %90 to i32, !dbg !6920
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !6923
  %91 = load i32, i32* %curidx.i, align 4, !dbg !6924
  %92 = load i32, i32* %dim.i, align 4, !dbg !6925
  %mul86.i = mul nsw i32 %91, %92, !dbg !6926
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !6927
  %93 = load i32, i32* %cb.addr.i, align 4, !dbg !6928
  %sub88.i = sub nsw i32 %93, 1, !dbg !6929
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !6927
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !6927
  %94 = load float*, float** %arrayidx90.i, align 8, !dbg !6927
  %arrayidx91.i = getelementptr inbounds float, float* %94, i64 %idxprom87.i, !dbg !6927
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !6930
  %95 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !6931
  %tobool92.i = icmp ne i32 %95, 0, !dbg !6931
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !6932

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !6933
  br label %for.cond94.i, !dbg !6934

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %96 = load i32, i32* %j.i, align 4, !dbg !6935
  %97 = load i32, i32* %dim.i, align 4, !dbg !6936
  %cmp95.i = icmp slt i32 %96, %97, !dbg !6937
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !6938

for.body97.i:                                     ; preds = %for.cond94.i
  %98 = load i32, i32* %i.i, align 4, !dbg !6939
  %99 = load i32, i32* %j.i, align 4, !dbg !6940
  %add98.i = add nsw i32 %98, %99, !dbg !6941
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !6942
  %100 = load float*, float** %in.addr.i, align 8, !dbg !6942
  %arrayidx100.i = getelementptr inbounds float, float* %100, i64 %idxprom99.i, !dbg !6942
  %101 = load float, float* %arrayidx100.i, align 4, !dbg !6942
  %call.i = call float @fabsf(float %101) #1, !dbg !6943
  store float %call.i, float* %t.i, align 4, !dbg !6744
  %102 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !6944
  %tobool101.i = icmp ne i32 %102, 0, !dbg !6944
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !6945

land.lhs.true.i:                                  ; preds = %for.body97.i
  %103 = load i32, i32* %j.i, align 4, !dbg !6946
  %idxprom102.i = sext i32 %103 to i64, !dbg !6947
  %104 = load float*, float** %vec.i, align 8, !dbg !6947
  %arrayidx103.i = getelementptr inbounds float, float* %104, i64 %idxprom102.i, !dbg !6947
  %105 = load float, float* %arrayidx103.i, align 4, !dbg !6947
  %cmp104.i = fcmp oeq float %105, 6.400000e+01, !dbg !6948
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !6949

if.then106.i:                                     ; preds = %land.lhs.true.i
  %106 = load float, float* %t.i, align 4, !dbg !6950
  %107 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !6951
  %cmp107.i = fcmp oge float %106, %107, !dbg !6952
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !6953

if.then109.i:                                     ; preds = %if.then106.i
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !6954
  store float %108, float* %quantized.i, align 4, !dbg !6955
  %109 = load i32, i32* %curbits.i, align 4, !dbg !6956
  %add110.i = add nsw i32 %109, 21, !dbg !6956
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !6956
  br label %if.end124.i, !dbg !6957

if.else111.i:                                     ; preds = %if.then106.i
  %110 = load float, float* %t.i, align 4, !dbg !6958
  %111 = load float, float* %Q.i, align 4, !dbg !6959
  %112 = load float, float* %ROUNDING.addr.i, align 4, !dbg !6960
  %call112.i = call i32 @quant(float %110, float %111, float %112) #8, !dbg !6961
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !6962
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !6962
  %113 = load i32, i32* %a.addr.i.i, align 4, !dbg !6963
  %114 = load i32, i32* %p.addr.i.i, align 4, !dbg !6964
  %shl.i.i = shl i32 1, %114, !dbg !6965
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !6966
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !6967
  %and.i.i = and i32 %113, %neg.i.i, !dbg !6968
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !6968
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !6969

if.then.i.i:                                      ; preds = %if.else111.i
  %115 = load i32, i32* %a.addr.i.i, align 4, !dbg !6970
  %neg1.i.i = xor i32 %115, -1, !dbg !6971
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !6972
  %116 = load i32, i32* %p.addr.i.i, align 4, !dbg !6973
  %shl2.i.i = shl i32 1, %116, !dbg !6974
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !6975
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !6976
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !6977
  br label %av_clip_uintp2_c.exit.i, !dbg !6977

if.else.i.i:                                      ; preds = %if.else111.i
  %117 = load i32, i32* %a.addr.i.i, align 4, !dbg !6978
  store i32 %117, i32* %retval.i.i, align 4, !dbg !6979
  br label %av_clip_uintp2_c.exit.i, !dbg !6979

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %118 = load i32, i32* %retval.i.i, align 4, !dbg !6980
  store i32 %118, i32* %c.i, align 4, !dbg !6746
  %119 = load i32, i32* %c.i, align 4, !dbg !6981
  %conv114.i = sitofp i32 %119 to float, !dbg !6981
  %120 = load i32, i32* %c.i, align 4, !dbg !6982
  %conv115.i = sitofp i32 %120 to float, !dbg !6982
  %call116.i = call float @cbrtf(float %conv115.i) #8, !dbg !6983
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !6984
  %121 = load float, float* %IQ.i, align 4, !dbg !6985
  %mul118.i = fmul float %mul117.i, %121, !dbg !6986
  store float %mul118.i, float* %quantized.i, align 4, !dbg !6987
  %122 = load i32, i32* %c.i, align 4, !dbg !6988
  %or.i = or i32 %122, 1, !dbg !6989
  %123 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #8, !dbg !6990
  %sub119.i = sub nsw i32 31, %123, !dbg !6991
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !6992
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !6993
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !6994
  %124 = load i32, i32* %curbits.i, align 4, !dbg !6995
  %add123.i = add nsw i32 %124, %add122.i, !dbg !6995
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !6995
  br label %if.end124.i, !dbg !6784

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !6996

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %125 = load i32, i32* %j.i, align 4, !dbg !6997
  %idxprom126.i = sext i32 %125 to i64, !dbg !6998
  %126 = load float*, float** %vec.i, align 8, !dbg !6998
  %arrayidx127.i = getelementptr inbounds float, float* %126, i64 %idxprom126.i, !dbg !6998
  %127 = load float, float* %arrayidx127.i, align 4, !dbg !6998
  %128 = load float, float* %IQ.i, align 4, !dbg !6999
  %mul128.i = fmul float %127, %128, !dbg !7000
  store float %mul128.i, float* %quantized.i, align 4, !dbg !7001
  br label %if.end129.i, !dbg !6784

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %129 = load float, float* %t.i, align 4, !dbg !7002
  %130 = load float, float* %quantized.i, align 4, !dbg !7003
  %sub130.i = fsub float %129, %130, !dbg !7004
  store float %sub130.i, float* %di.i, align 4, !dbg !7005
  %131 = load float*, float** %out.addr.i, align 8, !dbg !7006
  %tobool131.i = icmp ne float* %131, null, !dbg !7006
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !7007

if.then132.i:                                     ; preds = %if.end129.i
  %132 = load i32, i32* %i.i, align 4, !dbg !7008
  %133 = load i32, i32* %j.i, align 4, !dbg !7009
  %add133.i = add nsw i32 %132, %133, !dbg !7010
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !7011
  %134 = load float*, float** %in.addr.i, align 8, !dbg !7011
  %arrayidx135.i = getelementptr inbounds float, float* %134, i64 %idxprom134.i, !dbg !7011
  %135 = load float, float* %arrayidx135.i, align 4, !dbg !7011
  %cmp136.i = fcmp oge float %135, 0.000000e+00, !dbg !7012
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !7011

cond.true.i:                                      ; preds = %if.then132.i
  %136 = load float, float* %quantized.i, align 4, !dbg !7013
  br label %cond.end.i, !dbg !7014

cond.false.i:                                     ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !7015
  %sub138.i = fsub float -0.000000e+00, %137, !dbg !7016
  br label %cond.end.i, !dbg !7017

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %136, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !7018
  %138 = load i32, i32* %i.i, align 4, !dbg !7019
  %139 = load i32, i32* %j.i, align 4, !dbg !7020
  %add140.i = add nsw i32 %138, %139, !dbg !7021
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !7022
  %140 = load float*, float** %out.addr.i, align 8, !dbg !7022
  %arrayidx142.i = getelementptr inbounds float, float* %140, i64 %idxprom141.i, !dbg !7022
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !7023
  br label %if.end143.i, !dbg !7022

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %141 = load i32, i32* %j.i, align 4, !dbg !7024
  %idxprom144.i = sext i32 %141 to i64, !dbg !7025
  %142 = load float*, float** %vec.i, align 8, !dbg !7025
  %arrayidx145.i = getelementptr inbounds float, float* %142, i64 %idxprom144.i, !dbg !7025
  %143 = load float, float* %arrayidx145.i, align 4, !dbg !7025
  %cmp146.i = fcmp une float %143, 0.000000e+00, !dbg !7026
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !7027

if.then148.i:                                     ; preds = %if.end143.i
  %144 = load i32, i32* %curbits.i, align 4, !dbg !7028
  %inc149.i = add nsw i32 %144, 1, !dbg !7028
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !7028
  br label %if.end150.i, !dbg !7029

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %145 = load float, float* %quantized.i, align 4, !dbg !7030
  %146 = load float, float* %quantized.i, align 4, !dbg !7031
  %mul151.i = fmul float %145, %146, !dbg !7032
  %147 = load float, float* %qenergy.i, align 4, !dbg !7033
  %add152.i = fadd float %147, %mul151.i, !dbg !7033
  store float %add152.i, float* %qenergy.i, align 4, !dbg !7033
  %148 = load float, float* %di.i, align 4, !dbg !7034
  %149 = load float, float* %di.i, align 4, !dbg !7035
  %mul153.i = fmul float %148, %149, !dbg !7036
  %150 = load float, float* %rd.i, align 4, !dbg !7037
  %add154.i = fadd float %150, %mul153.i, !dbg !7037
  store float %add154.i, float* %rd.i, align 4, !dbg !7037
  %151 = load i32, i32* %j.i, align 4, !dbg !7038
  %inc156.i = add nsw i32 %151, 1, !dbg !7038
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !7038
  br label %for.cond94.i, !dbg !7039, !llvm.loop !4405

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !7040

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !7041
  br label %for.cond159.i, !dbg !7042

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %152 = load i32, i32* %j.i, align 4, !dbg !7043
  %153 = load i32, i32* %dim.i, align 4, !dbg !7044
  %cmp160.i = icmp slt i32 %152, %153, !dbg !7045
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !7046

for.body162.i:                                    ; preds = %for.cond159.i
  %154 = load i32, i32* %j.i, align 4, !dbg !7047
  %idxprom163.i = sext i32 %154 to i64, !dbg !7048
  %155 = load float*, float** %vec.i, align 8, !dbg !7048
  %arrayidx164.i = getelementptr inbounds float, float* %155, i64 %idxprom163.i, !dbg !7048
  %156 = load float, float* %arrayidx164.i, align 4, !dbg !7048
  %157 = load float, float* %IQ.i, align 4, !dbg !7049
  %mul165.i = fmul float %156, %157, !dbg !7050
  store float %mul165.i, float* %quantized.i, align 4, !dbg !7051
  %158 = load float, float* %quantized.i, align 4, !dbg !7052
  %159 = load float, float* %quantized.i, align 4, !dbg !7053
  %mul166.i = fmul float %158, %159, !dbg !7054
  %160 = load float, float* %qenergy.i, align 4, !dbg !7055
  %add167.i = fadd float %160, %mul166.i, !dbg !7055
  store float %add167.i, float* %qenergy.i, align 4, !dbg !7055
  %161 = load float*, float** %out.addr.i, align 8, !dbg !7056
  %tobool168.i = icmp ne float* %161, null, !dbg !7056
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !7057

if.then169.i:                                     ; preds = %for.body162.i
  %162 = load float, float* %quantized.i, align 4, !dbg !7058
  %163 = load i32, i32* %i.i, align 4, !dbg !7059
  %164 = load i32, i32* %j.i, align 4, !dbg !7060
  %add170.i = add nsw i32 %163, %164, !dbg !7061
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !7062
  %165 = load float*, float** %out.addr.i, align 8, !dbg !7062
  %arrayidx172.i = getelementptr inbounds float, float* %165, i64 %idxprom171.i, !dbg !7062
  store float %162, float* %arrayidx172.i, align 4, !dbg !7063
  br label %if.end173.i, !dbg !7062

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %166 = load i32, i32* %i.i, align 4, !dbg !7064
  %167 = load i32, i32* %j.i, align 4, !dbg !7065
  %add174.i = add nsw i32 %166, %167, !dbg !7066
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !7067
  %168 = load float*, float** %in.addr.i, align 8, !dbg !7067
  %arrayidx176.i = getelementptr inbounds float, float* %168, i64 %idxprom175.i, !dbg !7067
  %169 = load float, float* %arrayidx176.i, align 4, !dbg !7067
  %170 = load float, float* %quantized.i, align 4, !dbg !7068
  %sub177.i = fsub float %169, %170, !dbg !7069
  %171 = load i32, i32* %i.i, align 4, !dbg !7070
  %172 = load i32, i32* %j.i, align 4, !dbg !7071
  %add178.i = add nsw i32 %171, %172, !dbg !7072
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !7073
  %173 = load float*, float** %in.addr.i, align 8, !dbg !7073
  %arrayidx180.i = getelementptr inbounds float, float* %173, i64 %idxprom179.i, !dbg !7073
  %174 = load float, float* %arrayidx180.i, align 4, !dbg !7073
  %175 = load float, float* %quantized.i, align 4, !dbg !7074
  %sub181.i = fsub float %174, %175, !dbg !7075
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !7076
  %176 = load float, float* %rd.i, align 4, !dbg !7077
  %add183.i = fadd float %176, %mul182.i, !dbg !7077
  store float %add183.i, float* %rd.i, align 4, !dbg !7077
  %177 = load i32, i32* %j.i, align 4, !dbg !7078
  %inc185.i = add nsw i32 %177, 1, !dbg !7078
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !7078
  br label %for.cond159.i, !dbg !7079, !llvm.loop !4454

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !6784

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %178 = load float, float* %rd.i, align 4, !dbg !7080
  %179 = load float, float* %lambda.addr.i, align 4, !dbg !7081
  %mul188.i = fmul float %178, %179, !dbg !7082
  %180 = load i32, i32* %curbits.i, align 4, !dbg !7083
  %conv189.i = sitofp i32 %180 to float, !dbg !7083
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !7084
  %181 = load float, float* %cost.i, align 4, !dbg !7085
  %add191.i = fadd float %181, %add190.i, !dbg !7085
  store float %add191.i, float* %cost.i, align 4, !dbg !7085
  %182 = load i32, i32* %curbits.i, align 4, !dbg !7086
  %183 = load i32, i32* %resbits.i, align 4, !dbg !7087
  %add192.i = add nsw i32 %183, %182, !dbg !7087
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !7087
  %184 = load float, float* %cost.i, align 4, !dbg !7088
  %185 = load float, float* %uplim.addr.i, align 4, !dbg !7089
  %cmp193.i = fcmp oge float %184, %185, !dbg !7090
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !7091

if.then195.i:                                     ; preds = %if.end187.i
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !7092
  store float %186, float* %retval.i, align 4, !dbg !7093
  br label %quantize_and_encode_band_cost_template.exit, !dbg !7093

if.end196.i:                                      ; preds = %if.end187.i
  %187 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7094
  %tobool197.i = icmp ne %struct.PutBitContext* %187, null, !dbg !7094
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !7095

if.then198.i:                                     ; preds = %if.end196.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7096
  %189 = load i32, i32* %curidx.i, align 4, !dbg !7097
  %idxprom199.i = sext i32 %189 to i64, !dbg !7098
  %190 = load i32, i32* %cb.addr.i, align 4, !dbg !7099
  %sub200.i = sub nsw i32 %190, 1, !dbg !7100
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !7098
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !7098
  %191 = load i8*, i8** %arrayidx202.i, align 8, !dbg !7098
  %arrayidx203.i = getelementptr inbounds i8, i8* %191, i64 %idxprom199.i, !dbg !7098
  %192 = load i8, i8* %arrayidx203.i, align 1, !dbg !7098
  %conv204.i = zext i8 %192 to i32, !dbg !7098
  %193 = load i32, i32* %curidx.i, align 4, !dbg !7101
  %idxprom205.i = sext i32 %193 to i64, !dbg !7102
  %194 = load i32, i32* %cb.addr.i, align 4, !dbg !7103
  %sub206.i = sub nsw i32 %194, 1, !dbg !7104
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !7102
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !7102
  %195 = load i16*, i16** %arrayidx208.i, align 8, !dbg !7102
  %arrayidx209.i = getelementptr inbounds i16, i16* %195, i64 %idxprom205.i, !dbg !7102
  %196 = load i16, i16* %arrayidx209.i, align 2, !dbg !7102
  %conv210.i = zext i16 %196 to i32, !dbg !7102
  call void @put_bits(%struct.PutBitContext* %188, i32 %conv204.i, i32 %conv210.i) #8, !dbg !7105
  %197 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !7106
  %tobool211.i = icmp ne i32 %197, 0, !dbg !7106
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !7107

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !7108
  br label %for.cond213.i, !dbg !7109

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %198 = load i32, i32* %j.i, align 4, !dbg !7110
  %199 = load i32, i32* %dim.i, align 4, !dbg !7111
  %cmp214.i = icmp slt i32 %198, %199, !dbg !7112
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !7113

for.body216.i:                                    ; preds = %for.cond213.i
  %200 = load i32, i32* %curidx.i, align 4, !dbg !7114
  %201 = load i32, i32* %dim.i, align 4, !dbg !7115
  %mul217.i = mul nsw i32 %200, %201, !dbg !7116
  %202 = load i32, i32* %j.i, align 4, !dbg !7117
  %add218.i = add nsw i32 %mul217.i, %202, !dbg !7118
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !7119
  %203 = load i32, i32* %cb.addr.i, align 4, !dbg !7120
  %sub220.i = sub nsw i32 %203, 1, !dbg !7121
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !7119
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !7119
  %204 = load float*, float** %arrayidx222.i, align 8, !dbg !7119
  %arrayidx223.i = getelementptr inbounds float, float* %204, i64 %idxprom219.i, !dbg !7119
  %205 = load float, float* %arrayidx223.i, align 4, !dbg !7119
  %cmp224.i = fcmp une float %205, 0.000000e+00, !dbg !7122
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !7123

if.then226.i:                                     ; preds = %for.body216.i
  %206 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7124
  %207 = load i32, i32* %i.i, align 4, !dbg !7125
  %208 = load i32, i32* %j.i, align 4, !dbg !7126
  %add227.i = add nsw i32 %207, %208, !dbg !7127
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !7128
  %209 = load float*, float** %in.addr.i, align 8, !dbg !7128
  %arrayidx229.i = getelementptr inbounds float, float* %209, i64 %idxprom228.i, !dbg !7128
  %210 = load float, float* %arrayidx229.i, align 4, !dbg !7128
  %cmp230.i = fcmp olt float %210, 0.000000e+00, !dbg !7129
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !7129
  call void @put_bits(%struct.PutBitContext* %206, i32 1, i32 %conv231.i) #8, !dbg !7130
  br label %if.end232.i, !dbg !7130

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %211 = load i32, i32* %j.i, align 4, !dbg !7131
  %inc234.i = add nsw i32 %211, 1, !dbg !7131
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !7131
  br label %for.cond213.i, !dbg !7132, !llvm.loop !4516

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !7133

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %212 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !7134
  %tobool237.i = icmp ne i32 %212, 0, !dbg !7134
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !7135

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !7136
  br label %for.cond239.i, !dbg !7137

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %213 = load i32, i32* %j.i, align 4, !dbg !7138
  %cmp240.i = icmp slt i32 %213, 2, !dbg !7139
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !7140

for.body242.i:                                    ; preds = %for.cond239.i
  %214 = load i32, i32* %curidx.i, align 4, !dbg !7141
  %mul243.i = mul nsw i32 %214, 2, !dbg !7142
  %215 = load i32, i32* %j.i, align 4, !dbg !7143
  %add244.i = add nsw i32 %mul243.i, %215, !dbg !7144
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !7145
  %216 = load i32, i32* %cb.addr.i, align 4, !dbg !7146
  %sub246.i = sub nsw i32 %216, 1, !dbg !7147
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !7145
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !7145
  %217 = load float*, float** %arrayidx248.i, align 8, !dbg !7145
  %arrayidx249.i = getelementptr inbounds float, float* %217, i64 %idxprom245.i, !dbg !7145
  %218 = load float, float* %arrayidx249.i, align 4, !dbg !7145
  %cmp250.i = fcmp oeq float %218, 6.400000e+01, !dbg !7148
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !7149

if.then252.i:                                     ; preds = %for.body242.i
  %219 = load i32, i32* %i.i, align 4, !dbg !7150
  %220 = load i32, i32* %j.i, align 4, !dbg !7151
  %add253.i = add nsw i32 %219, %220, !dbg !7152
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !7153
  %221 = load float*, float** %in.addr.i, align 8, !dbg !7153
  %arrayidx255.i = getelementptr inbounds float, float* %221, i64 %idxprom254.i, !dbg !7153
  %222 = load float, float* %arrayidx255.i, align 4, !dbg !7153
  %call256.i = call float @fabsf(float %222) #1, !dbg !7154
  %223 = load float, float* %Q.i, align 4, !dbg !7155
  %224 = load float, float* %ROUNDING.addr.i, align 4, !dbg !7156
  %call257.i = call i32 @quant(float %call256.i, float %223, float %224) #8, !dbg !7157
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !7158
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !7158
  %225 = load i32, i32* %a.addr.i282.i, align 4, !dbg !7159
  %226 = load i32, i32* %p.addr.i283.i, align 4, !dbg !7160
  %shl.i284.i = shl i32 1, %226, !dbg !7161
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !7162
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !7163
  %and.i287.i = and i32 %225, %neg.i286.i, !dbg !7164
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !7164
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !7165

if.then.i294.i:                                   ; preds = %if.then252.i
  %227 = load i32, i32* %a.addr.i282.i, align 4, !dbg !7166
  %neg1.i289.i = xor i32 %227, -1, !dbg !7167
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !7168
  %228 = load i32, i32* %p.addr.i283.i, align 4, !dbg !7169
  %shl2.i291.i = shl i32 1, %228, !dbg !7170
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !7171
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !7172
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !7173
  br label %av_clip_uintp2_c.exit296.i, !dbg !7173

if.else.i295.i:                                   ; preds = %if.then252.i
  %229 = load i32, i32* %a.addr.i282.i, align 4, !dbg !7174
  store i32 %229, i32* %retval.i281.i, align 4, !dbg !7175
  br label %av_clip_uintp2_c.exit296.i, !dbg !7175

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %230 = load i32, i32* %retval.i281.i, align 4, !dbg !7176
  store i32 %230, i32* %coef.i, align 4, !dbg !6747
  %231 = load i32, i32* %coef.i, align 4, !dbg !7177
  %or259.i = or i32 %231, 1, !dbg !7178
  %232 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #8, !dbg !7179
  %sub260.i = sub nsw i32 31, %232, !dbg !7180
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !6748
  %233 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7181
  %234 = load i32, i32* %len.i, align 4, !dbg !7182
  %sub261.i = sub nsw i32 %234, 4, !dbg !7183
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !7184
  %235 = load i32, i32* %len.i, align 4, !dbg !7185
  %sub263.i = sub nsw i32 %235, 4, !dbg !7186
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !7187
  %shl.i = shl i32 1, %add264.i, !dbg !7188
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !7189
  call void @put_bits(%struct.PutBitContext* %233, i32 %add262.i, i32 %sub265.i) #8, !dbg !7190
  %236 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7191
  %237 = load i32, i32* %len.i, align 4, !dbg !7192
  %238 = load i32, i32* %coef.i, align 4, !dbg !7193
  call void @put_sbits(%struct.PutBitContext* %236, i32 %237, i32 %238) #8, !dbg !7194
  br label %if.end266.i, !dbg !7195

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %239 = load i32, i32* %j.i, align 4, !dbg !7196
  %inc268.i = add nsw i32 %239, 1, !dbg !7196
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !7196
  br label %for.cond239.i, !dbg !7197, !llvm.loop !4587

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !7198

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !7199

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %240 = load i32, i32* %dim.i, align 4, !dbg !7200
  %241 = load i32, i32* %i.i, align 4, !dbg !7201
  %add273.i = add nsw i32 %241, %240, !dbg !7201
  store i32 %add273.i, i32* %i.i, align 4, !dbg !7201
  br label %for.cond59.i, !dbg !7202, !llvm.loop !4595

for.end274.i:                                     ; preds = %for.cond59.i
  %242 = load i32*, i32** %bits.addr.i, align 8, !dbg !7203
  %tobool275.i = icmp ne i32* %242, null, !dbg !7203
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !7204

if.then276.i:                                     ; preds = %for.end274.i
  %243 = load i32, i32* %resbits.i, align 4, !dbg !7205
  %244 = load i32*, i32** %bits.addr.i, align 8, !dbg !7206
  store i32 %243, i32* %244, align 4, !dbg !7207
  br label %if.end277.i, !dbg !7208

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %245 = load float*, float** %energy.addr.i, align 8, !dbg !7209
  %tobool278.i = icmp ne float* %245, null, !dbg !7209
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !7210

if.then279.i:                                     ; preds = %if.end277.i
  %246 = load float, float* %qenergy.i, align 4, !dbg !7211
  %247 = load float*, float** %energy.addr.i, align 8, !dbg !7212
  store float %246, float* %247, align 4, !dbg !7213
  br label %if.end280.i, !dbg !7214

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %248 = load float, float* %cost.i, align 4, !dbg !7215
  store float %248, float* %retval.i, align 4, !dbg !7216
  br label %quantize_and_encode_band_cost_template.exit, !dbg !7216

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %249 = load float, float* %retval.i, align 4, !dbg !7217
  ret float %249, !dbg !7218
}

; Function Attrs: inlinehint nounwind uwtable
define internal float @quantize_and_encode_band_cost_NONE(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #3 !dbg !7219 {
entry:
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !7220, metadata !2763), !dbg !7221
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !7222, metadata !2763), !dbg !7223
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !7224, metadata !2763), !dbg !7225
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !7226, metadata !2763), !dbg !7227
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !7228, metadata !2763), !dbg !7229
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7230, metadata !2763), !dbg !7231
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !7232, metadata !2763), !dbg !7233
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !7234, metadata !2763), !dbg !7235
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !7236, metadata !2763), !dbg !7237
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !7238, metadata !2763), !dbg !7239
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !7240, metadata !2763), !dbg !7241
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !7242, metadata !2763), !dbg !7243
  br label %do.body, !dbg !7244, !llvm.loop !7245

do.body:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i32 0, i32 0), i32 167), !dbg !7246
  call void @abort() #9, !dbg !7251
  unreachable, !dbg !7253

do.end:                                           ; No predecessors!
  ret float 0.000000e+00, !dbg !7254
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_NOISE(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !7255 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !3939, metadata !2763), !dbg !7256
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !3963, metadata !2763), !dbg !7259
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !3939, metadata !2763), !dbg !7260
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !3963, metadata !2763), !dbg !7262
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !3978, metadata !2763), !dbg !7263
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3980, metadata !2763), !dbg !7264
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !3982, metadata !2763), !dbg !7265
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !3984, metadata !2763), !dbg !7266
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !3986, metadata !2763), !dbg !7267
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3988, metadata !2763), !dbg !7268
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !3990, metadata !2763), !dbg !7269
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !3992, metadata !2763), !dbg !7270
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !3994, metadata !2763), !dbg !7271
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !3996, metadata !2763), !dbg !7272
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !3998, metadata !2763), !dbg !7273
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !4000, metadata !2763), !dbg !7274
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !4002, metadata !2763), !dbg !7275
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !4004, metadata !2763), !dbg !7276
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !4006, metadata !2763), !dbg !7277
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !4008, metadata !2763), !dbg !7278
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !4010, metadata !2763), !dbg !7279
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !4012, metadata !2763), !dbg !7280
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !4014, metadata !2763), !dbg !7281
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !4016, metadata !2763), !dbg !7282
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !4018, metadata !2763), !dbg !7283
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !4020, metadata !2763), !dbg !7284
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !4022, metadata !2763), !dbg !7285
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !4024, metadata !2763), !dbg !7286
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !4026, metadata !2763), !dbg !7287
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !4028, metadata !2763), !dbg !7288
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !4030, metadata !2763), !dbg !7289
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !4032, metadata !2763), !dbg !7290
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !4034, metadata !2763), !dbg !7291
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !4036, metadata !2763), !dbg !7292
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !4038, metadata !2763), !dbg !7293
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !4040, metadata !2763), !dbg !7294
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !4042, metadata !2763), !dbg !7295
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !4044, metadata !2763), !dbg !7296
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !4046, metadata !2763), !dbg !7297
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !4048, metadata !2763), !dbg !7298
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !4050, metadata !2763), !dbg !7299
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !4052, metadata !2763), !dbg !7300
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !4054, metadata !2763), !dbg !7301
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !4056, metadata !2763), !dbg !7302
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !4058, metadata !2763), !dbg !7303
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !4060, metadata !2763), !dbg !7304
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !7305, metadata !2763), !dbg !7306
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !7307, metadata !2763), !dbg !7308
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !7309, metadata !2763), !dbg !7310
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !7311, metadata !2763), !dbg !7312
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !7313, metadata !2763), !dbg !7314
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7315, metadata !2763), !dbg !7316
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !7317, metadata !2763), !dbg !7318
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !7319, metadata !2763), !dbg !7320
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !7321, metadata !2763), !dbg !7322
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !7323, metadata !2763), !dbg !7324
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !7325, metadata !2763), !dbg !7326
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !7327, metadata !2763), !dbg !7328
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7329
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7330
  %2 = load float*, float** %in.addr, align 8, !dbg !7331
  %3 = load float*, float** %quant.addr, align 8, !dbg !7332
  %4 = load float*, float** %scaled.addr, align 8, !dbg !7333
  %5 = load i32, i32* %size.addr, align 4, !dbg !7334
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !7335
  %7 = load i32, i32* %cb.addr, align 4, !dbg !7336
  %8 = load float, float* %lambda.addr, align 4, !dbg !7337
  %9 = load float, float* %uplim.addr, align 4, !dbg !7338
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !7339
  %11 = load float*, float** %energy.addr, align 8, !dbg !7340
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7341
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7341
  store float* %2, float** %in.addr.i, align 8, !dbg !7341
  store float* %3, float** %out.addr.i, align 8, !dbg !7341
  store float* %4, float** %scaled.addr.i, align 8, !dbg !7341
  store i32 %5, i32* %size.addr.i, align 4, !dbg !7341
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !7341
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !7341
  store float %8, float* %lambda.addr.i, align 4, !dbg !7341
  store float %9, float* %uplim.addr.i, align 4, !dbg !7341
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !7341
  store float* %11, float** %energy.addr.i, align 8, !dbg !7341
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !7341
  store i32 0, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !7341
  store i32 0, i32* %BT_PAIR.addr.i, align 4, !dbg !7341
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !7341
  store i32 1, i32* %BT_NOISE.addr.i, align 4, !dbg !7341
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !7341
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !7341
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !7342
  %sub.i = sub nsw i32 200, %12, !dbg !7343
  %add.i = add nsw i32 %sub.i, 140, !dbg !7344
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !7345
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !7282
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !7346
  %idxprom.i = sext i32 %13 to i64, !dbg !7347
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !7347
  %14 = load float, float* %arrayidx.i, align 4, !dbg !7347
  store float %14, float* %Q.i, align 4, !dbg !7283
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !7348
  %idxprom2.i = sext i32 %15 to i64, !dbg !7349
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !7349
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !7349
  store float %16, float* %Q34.i, align 4, !dbg !7284
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !7350
  %add4.i = add nsw i32 200, %17, !dbg !7351
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !7352
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !7353
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !7354
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !7354
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !7354
  store float %18, float* %IQ.i, align 4, !dbg !7285
  %19 = load float, float* %IQ.i, align 4, !dbg !7355
  %mul.i = fmul float 1.651400e+05, %19, !dbg !7356
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !7286
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !7289
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !7290
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !7357
  %tobool.i = icmp ne i32 %20, 0, !dbg !7357
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !7357
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !7291
  store i32 0, i32* %resbits.i, align 4, !dbg !7292
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !7358
  %tobool9.i = icmp ne i32 %21, 0, !dbg !7358
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !7359

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !7360
  %tobool10.i = icmp ne i32 %22, 0, !dbg !7360
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !7361

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !7362
  %tobool12.i = icmp ne i32 %23, 0, !dbg !7362
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !7363

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !7364
  br label %for.cond.i, !dbg !7365

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !7366
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !7367
  %cmp.i = icmp slt i32 %24, %25, !dbg !7368
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !7369

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !7370
  %idxprom13.i = sext i32 %26 to i64, !dbg !7371
  %27 = load float*, float** %in.addr.i, align 8, !dbg !7371
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !7371
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !7371
  %29 = load i32, i32* %i.i, align 4, !dbg !7372
  %idxprom15.i = sext i32 %29 to i64, !dbg !7373
  %30 = load float*, float** %in.addr.i, align 8, !dbg !7373
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !7373
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !7373
  %mul17.i = fmul float %28, %31, !dbg !7374
  %32 = load float, float* %cost.i, align 4, !dbg !7375
  %add18.i = fadd float %32, %mul17.i, !dbg !7375
  store float %add18.i, float* %cost.i, align 4, !dbg !7375
  %33 = load i32, i32* %i.i, align 4, !dbg !7376
  %inc.i = add nsw i32 %33, 1, !dbg !7376
  store i32 %inc.i, i32* %i.i, align 4, !dbg !7376
  br label %for.cond.i, !dbg !7377, !llvm.loop !4143

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !7378
  %tobool19.i = icmp ne i32* %34, null, !dbg !7378
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !7379

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !7380
  store i32 0, i32* %35, align 4, !dbg !7381
  br label %if.end.i, !dbg !7382

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !7383
  %tobool21.i = icmp ne float* %36, null, !dbg !7383
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !7384

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !7385
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !7386
  store float %37, float* %38, align 4, !dbg !7387
  br label %if.end23.i, !dbg !7388

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !7389
  %tobool24.i = icmp ne float* %39, null, !dbg !7389
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !7390

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !7391
  br label %for.cond26.i, !dbg !7392

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !7393
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !7394
  %cmp27.i = icmp slt i32 %40, %41, !dbg !7395
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !7396

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !7397
  br label %for.cond29.i, !dbg !7398

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !7399
  %43 = load i32, i32* %dim.i, align 4, !dbg !7400
  %cmp30.i = icmp slt i32 %42, %43, !dbg !7401
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !7402

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !7403
  %45 = load i32, i32* %j.i, align 4, !dbg !7404
  %add32.i = add nsw i32 %44, %45, !dbg !7405
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !7406
  %46 = load float*, float** %out.addr.i, align 8, !dbg !7406
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !7406
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !7407
  %47 = load i32, i32* %j.i, align 4, !dbg !7408
  %inc36.i = add nsw i32 %47, 1, !dbg !7408
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !7408
  br label %for.cond29.i, !dbg !7409, !llvm.loop !4188

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !7410
  %49 = load i32, i32* %i.i, align 4, !dbg !7411
  %add39.i = add nsw i32 %49, %48, !dbg !7411
  store i32 %add39.i, i32* %i.i, align 4, !dbg !7411
  br label %for.cond26.i, !dbg !7412, !llvm.loop !4194

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !7413

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !7414
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !7415
  %mul42.i = fmul float %50, %51, !dbg !7416
  store float %mul42.i, float* %retval.i, align 4, !dbg !7417
  br label %quantize_and_encode_band_cost_template.exit, !dbg !7417

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !7418
  %tobool44.i = icmp ne float* %52, null, !dbg !7418
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !7419

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7420
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !7421
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !7421
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7422
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !7423
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !7422
  %56 = load float*, float** %in.addr.i, align 8, !dbg !7424
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !7425
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #8, !dbg !7420
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7426
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !7427
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !7426
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !7428
  br label %if.end48.i, !dbg !7429

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7430
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !7431
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !7431
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7432
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !7433
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !7432
  %62 = load float*, float** %in.addr.i, align 8, !dbg !7434
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !7435
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !7436
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !7437
  %tobool50.i = icmp ne i32 %65, 0, !dbg !7438
  %lnot.i = xor i1 %tobool50.i, true, !dbg !7438
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !7438
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !7439
  %idxprom51.i = sext i32 %66 to i64, !dbg !7440
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !7440
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !7440
  %conv.i = zext i8 %67 to i32, !dbg !7440
  %68 = load float, float* %Q34.i, align 4, !dbg !7441
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !7442
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #8, !dbg !7430
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !7443
  %tobool53.i = icmp ne i32 %70, 0, !dbg !7443
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !7444

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !7445
  br label %if.end58.i, !dbg !7446

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !7447
  %idxprom55.i = sext i32 %71 to i64, !dbg !7448
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !7448
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !7448
  %conv57.i = zext i8 %72 to i32, !dbg !7448
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !7449
  br label %if.end58.i, !dbg !7341

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !7450
  br label %for.cond59.i, !dbg !7451

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !7452
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !7453
  %cmp60.i = icmp slt i32 %73, %74, !dbg !7454
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !7455

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7456
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !7457
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !7456
  %76 = load i32, i32* %i.i, align 4, !dbg !7458
  %idx.ext.i = sext i32 %76 to i64, !dbg !7459
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !7459
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !7295
  store i32 0, i32* %curidx.i, align 4, !dbg !7296
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !7299
  store i32 0, i32* %j.i, align 4, !dbg !7460
  br label %for.cond65.i, !dbg !7461

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !7462
  %78 = load i32, i32* %dim.i, align 4, !dbg !7463
  %cmp66.i = icmp slt i32 %77, %78, !dbg !7464
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !7465

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !7466
  %idxprom69.i = sext i32 %79 to i64, !dbg !7467
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !7467
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !7467
  %conv71.i = zext i8 %80 to i32, !dbg !7467
  %81 = load i32, i32* %curidx.i, align 4, !dbg !7468
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !7468
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !7468
  %82 = load i32, i32* %j.i, align 4, !dbg !7469
  %idxprom73.i = sext i32 %82 to i64, !dbg !7470
  %83 = load i32*, i32** %quants.i, align 8, !dbg !7470
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !7470
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !7470
  %85 = load i32, i32* %off.i, align 4, !dbg !7471
  %add75.i = add nsw i32 %84, %85, !dbg !7472
  %86 = load i32, i32* %curidx.i, align 4, !dbg !7473
  %add76.i = add nsw i32 %86, %add75.i, !dbg !7473
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !7473
  %87 = load i32, i32* %j.i, align 4, !dbg !7474
  %inc78.i = add nsw i32 %87, 1, !dbg !7474
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !7474
  br label %for.cond65.i, !dbg !7475, !llvm.loop !4270

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !7476
  %idxprom80.i = sext i32 %88 to i64, !dbg !7477
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !7478
  %sub81.i = sub nsw i32 %89, 1, !dbg !7479
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !7477
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !7477
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !7477
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !7477
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !7477
  %conv85.i = zext i8 %91 to i32, !dbg !7477
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !7480
  %92 = load i32, i32* %curidx.i, align 4, !dbg !7481
  %93 = load i32, i32* %dim.i, align 4, !dbg !7482
  %mul86.i = mul nsw i32 %92, %93, !dbg !7483
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !7484
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !7485
  %sub88.i = sub nsw i32 %94, 1, !dbg !7486
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !7484
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !7484
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !7484
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !7484
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !7487
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !7488
  %tobool92.i = icmp ne i32 %96, 0, !dbg !7488
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !7489

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !7490
  br label %for.cond94.i, !dbg !7491

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !7492
  %98 = load i32, i32* %dim.i, align 4, !dbg !7493
  %cmp95.i = icmp slt i32 %97, %98, !dbg !7494
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !7495

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !7496
  %100 = load i32, i32* %j.i, align 4, !dbg !7497
  %add98.i = add nsw i32 %99, %100, !dbg !7498
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !7499
  %101 = load float*, float** %in.addr.i, align 8, !dbg !7499
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !7499
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !7499
  %call.i = call float @fabsf(float %102) #1, !dbg !7500
  store float %call.i, float* %t.i, align 4, !dbg !7300
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !7501
  %tobool101.i = icmp ne i32 %103, 0, !dbg !7501
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !7502

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !7503
  %idxprom102.i = sext i32 %104 to i64, !dbg !7504
  %105 = load float*, float** %vec.i, align 8, !dbg !7504
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !7504
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !7504
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !7505
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !7506

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !7507
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !7508
  %cmp107.i = fcmp oge float %107, %108, !dbg !7509
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !7510

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !7511
  store float %109, float* %quantized.i, align 4, !dbg !7512
  %110 = load i32, i32* %curbits.i, align 4, !dbg !7513
  %add110.i = add nsw i32 %110, 21, !dbg !7513
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !7513
  br label %if.end124.i, !dbg !7514

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !7515
  %112 = load float, float* %Q.i, align 4, !dbg !7516
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !7517
  %call112.i = call i32 @quant(float %111, float %112, float %113) #8, !dbg !7518
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !7519
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !7519
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !7520
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !7521
  %shl.i.i = shl i32 1, %115, !dbg !7522
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !7523
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !7524
  %and.i.i = and i32 %114, %neg.i.i, !dbg !7525
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !7525
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !7526

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !7527
  %neg1.i.i = xor i32 %116, -1, !dbg !7528
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !7529
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !7530
  %shl2.i.i = shl i32 1, %117, !dbg !7531
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !7532
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !7533
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !7534
  br label %av_clip_uintp2_c.exit.i, !dbg !7534

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !7535
  store i32 %118, i32* %retval.i.i, align 4, !dbg !7536
  br label %av_clip_uintp2_c.exit.i, !dbg !7536

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !7537
  store i32 %119, i32* %c.i, align 4, !dbg !7302
  %120 = load i32, i32* %c.i, align 4, !dbg !7538
  %conv114.i = sitofp i32 %120 to float, !dbg !7538
  %121 = load i32, i32* %c.i, align 4, !dbg !7539
  %conv115.i = sitofp i32 %121 to float, !dbg !7539
  %call116.i = call float @cbrtf(float %conv115.i) #8, !dbg !7540
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !7541
  %122 = load float, float* %IQ.i, align 4, !dbg !7542
  %mul118.i = fmul float %mul117.i, %122, !dbg !7543
  store float %mul118.i, float* %quantized.i, align 4, !dbg !7544
  %123 = load i32, i32* %c.i, align 4, !dbg !7545
  %or.i = or i32 %123, 1, !dbg !7546
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #8, !dbg !7547
  %sub119.i = sub nsw i32 31, %124, !dbg !7548
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !7549
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !7550
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !7551
  %125 = load i32, i32* %curbits.i, align 4, !dbg !7552
  %add123.i = add nsw i32 %125, %add122.i, !dbg !7552
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !7552
  br label %if.end124.i, !dbg !7341

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !7553

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !7554
  %idxprom126.i = sext i32 %126 to i64, !dbg !7555
  %127 = load float*, float** %vec.i, align 8, !dbg !7555
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !7555
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !7555
  %129 = load float, float* %IQ.i, align 4, !dbg !7556
  %mul128.i = fmul float %128, %129, !dbg !7557
  store float %mul128.i, float* %quantized.i, align 4, !dbg !7558
  br label %if.end129.i, !dbg !7341

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !7559
  %131 = load float, float* %quantized.i, align 4, !dbg !7560
  %sub130.i = fsub float %130, %131, !dbg !7561
  store float %sub130.i, float* %di.i, align 4, !dbg !7562
  %132 = load float*, float** %out.addr.i, align 8, !dbg !7563
  %tobool131.i = icmp ne float* %132, null, !dbg !7563
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !7564

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !7565
  %134 = load i32, i32* %j.i, align 4, !dbg !7566
  %add133.i = add nsw i32 %133, %134, !dbg !7567
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !7568
  %135 = load float*, float** %in.addr.i, align 8, !dbg !7568
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !7568
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !7568
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !7569
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !7568

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !7570
  br label %cond.end.i, !dbg !7571

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !7572
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !7573
  br label %cond.end.i, !dbg !7574

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !7575
  %139 = load i32, i32* %i.i, align 4, !dbg !7576
  %140 = load i32, i32* %j.i, align 4, !dbg !7577
  %add140.i = add nsw i32 %139, %140, !dbg !7578
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !7579
  %141 = load float*, float** %out.addr.i, align 8, !dbg !7579
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !7579
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !7580
  br label %if.end143.i, !dbg !7579

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !7581
  %idxprom144.i = sext i32 %142 to i64, !dbg !7582
  %143 = load float*, float** %vec.i, align 8, !dbg !7582
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !7582
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !7582
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !7583
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !7584

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !7585
  %inc149.i = add nsw i32 %145, 1, !dbg !7585
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !7585
  br label %if.end150.i, !dbg !7586

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !7587
  %147 = load float, float* %quantized.i, align 4, !dbg !7588
  %mul151.i = fmul float %146, %147, !dbg !7589
  %148 = load float, float* %qenergy.i, align 4, !dbg !7590
  %add152.i = fadd float %148, %mul151.i, !dbg !7590
  store float %add152.i, float* %qenergy.i, align 4, !dbg !7590
  %149 = load float, float* %di.i, align 4, !dbg !7591
  %150 = load float, float* %di.i, align 4, !dbg !7592
  %mul153.i = fmul float %149, %150, !dbg !7593
  %151 = load float, float* %rd.i, align 4, !dbg !7594
  %add154.i = fadd float %151, %mul153.i, !dbg !7594
  store float %add154.i, float* %rd.i, align 4, !dbg !7594
  %152 = load i32, i32* %j.i, align 4, !dbg !7595
  %inc156.i = add nsw i32 %152, 1, !dbg !7595
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !7595
  br label %for.cond94.i, !dbg !7596, !llvm.loop !4405

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !7597

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !7598
  br label %for.cond159.i, !dbg !7599

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !7600
  %154 = load i32, i32* %dim.i, align 4, !dbg !7601
  %cmp160.i = icmp slt i32 %153, %154, !dbg !7602
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !7603

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !7604
  %idxprom163.i = sext i32 %155 to i64, !dbg !7605
  %156 = load float*, float** %vec.i, align 8, !dbg !7605
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !7605
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !7605
  %158 = load float, float* %IQ.i, align 4, !dbg !7606
  %mul165.i = fmul float %157, %158, !dbg !7607
  store float %mul165.i, float* %quantized.i, align 4, !dbg !7608
  %159 = load float, float* %quantized.i, align 4, !dbg !7609
  %160 = load float, float* %quantized.i, align 4, !dbg !7610
  %mul166.i = fmul float %159, %160, !dbg !7611
  %161 = load float, float* %qenergy.i, align 4, !dbg !7612
  %add167.i = fadd float %161, %mul166.i, !dbg !7612
  store float %add167.i, float* %qenergy.i, align 4, !dbg !7612
  %162 = load float*, float** %out.addr.i, align 8, !dbg !7613
  %tobool168.i = icmp ne float* %162, null, !dbg !7613
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !7614

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !7615
  %164 = load i32, i32* %i.i, align 4, !dbg !7616
  %165 = load i32, i32* %j.i, align 4, !dbg !7617
  %add170.i = add nsw i32 %164, %165, !dbg !7618
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !7619
  %166 = load float*, float** %out.addr.i, align 8, !dbg !7619
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !7619
  store float %163, float* %arrayidx172.i, align 4, !dbg !7620
  br label %if.end173.i, !dbg !7619

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !7621
  %168 = load i32, i32* %j.i, align 4, !dbg !7622
  %add174.i = add nsw i32 %167, %168, !dbg !7623
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !7624
  %169 = load float*, float** %in.addr.i, align 8, !dbg !7624
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !7624
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !7624
  %171 = load float, float* %quantized.i, align 4, !dbg !7625
  %sub177.i = fsub float %170, %171, !dbg !7626
  %172 = load i32, i32* %i.i, align 4, !dbg !7627
  %173 = load i32, i32* %j.i, align 4, !dbg !7628
  %add178.i = add nsw i32 %172, %173, !dbg !7629
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !7630
  %174 = load float*, float** %in.addr.i, align 8, !dbg !7630
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !7630
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !7630
  %176 = load float, float* %quantized.i, align 4, !dbg !7631
  %sub181.i = fsub float %175, %176, !dbg !7632
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !7633
  %177 = load float, float* %rd.i, align 4, !dbg !7634
  %add183.i = fadd float %177, %mul182.i, !dbg !7634
  store float %add183.i, float* %rd.i, align 4, !dbg !7634
  %178 = load i32, i32* %j.i, align 4, !dbg !7635
  %inc185.i = add nsw i32 %178, 1, !dbg !7635
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !7635
  br label %for.cond159.i, !dbg !7636, !llvm.loop !4454

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !7341

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !7637
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !7638
  %mul188.i = fmul float %179, %180, !dbg !7639
  %181 = load i32, i32* %curbits.i, align 4, !dbg !7640
  %conv189.i = sitofp i32 %181 to float, !dbg !7640
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !7641
  %182 = load float, float* %cost.i, align 4, !dbg !7642
  %add191.i = fadd float %182, %add190.i, !dbg !7642
  store float %add191.i, float* %cost.i, align 4, !dbg !7642
  %183 = load i32, i32* %curbits.i, align 4, !dbg !7643
  %184 = load i32, i32* %resbits.i, align 4, !dbg !7644
  %add192.i = add nsw i32 %184, %183, !dbg !7644
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !7644
  %185 = load float, float* %cost.i, align 4, !dbg !7645
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !7646
  %cmp193.i = fcmp oge float %185, %186, !dbg !7647
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !7648

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !7649
  store float %187, float* %retval.i, align 4, !dbg !7650
  br label %quantize_and_encode_band_cost_template.exit, !dbg !7650

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7651
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !7651
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !7652

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7653
  %190 = load i32, i32* %curidx.i, align 4, !dbg !7654
  %idxprom199.i = sext i32 %190 to i64, !dbg !7655
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !7656
  %sub200.i = sub nsw i32 %191, 1, !dbg !7657
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !7655
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !7655
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !7655
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !7655
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !7655
  %conv204.i = zext i8 %193 to i32, !dbg !7655
  %194 = load i32, i32* %curidx.i, align 4, !dbg !7658
  %idxprom205.i = sext i32 %194 to i64, !dbg !7659
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !7660
  %sub206.i = sub nsw i32 %195, 1, !dbg !7661
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !7659
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !7659
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !7659
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !7659
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !7659
  %conv210.i = zext i16 %197 to i32, !dbg !7659
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #8, !dbg !7662
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !7663
  %tobool211.i = icmp ne i32 %198, 0, !dbg !7663
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !7664

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !7665
  br label %for.cond213.i, !dbg !7666

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !7667
  %200 = load i32, i32* %dim.i, align 4, !dbg !7668
  %cmp214.i = icmp slt i32 %199, %200, !dbg !7669
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !7670

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !7671
  %202 = load i32, i32* %dim.i, align 4, !dbg !7672
  %mul217.i = mul nsw i32 %201, %202, !dbg !7673
  %203 = load i32, i32* %j.i, align 4, !dbg !7674
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !7675
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !7676
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !7677
  %sub220.i = sub nsw i32 %204, 1, !dbg !7678
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !7676
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !7676
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !7676
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !7676
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !7676
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !7679
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !7680

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7681
  %208 = load i32, i32* %i.i, align 4, !dbg !7682
  %209 = load i32, i32* %j.i, align 4, !dbg !7683
  %add227.i = add nsw i32 %208, %209, !dbg !7684
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !7685
  %210 = load float*, float** %in.addr.i, align 8, !dbg !7685
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !7685
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !7685
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !7686
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !7686
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #8, !dbg !7687
  br label %if.end232.i, !dbg !7687

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !7688
  %inc234.i = add nsw i32 %212, 1, !dbg !7688
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !7688
  br label %for.cond213.i, !dbg !7689, !llvm.loop !4516

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !7690

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !7691
  %tobool237.i = icmp ne i32 %213, 0, !dbg !7691
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !7692

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !7693
  br label %for.cond239.i, !dbg !7694

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !7695
  %cmp240.i = icmp slt i32 %214, 2, !dbg !7696
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !7697

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !7698
  %mul243.i = mul nsw i32 %215, 2, !dbg !7699
  %216 = load i32, i32* %j.i, align 4, !dbg !7700
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !7701
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !7702
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !7703
  %sub246.i = sub nsw i32 %217, 1, !dbg !7704
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !7702
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !7702
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !7702
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !7702
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !7702
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !7705
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !7706

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !7707
  %221 = load i32, i32* %j.i, align 4, !dbg !7708
  %add253.i = add nsw i32 %220, %221, !dbg !7709
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !7710
  %222 = load float*, float** %in.addr.i, align 8, !dbg !7710
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !7710
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !7710
  %call256.i = call float @fabsf(float %223) #1, !dbg !7711
  %224 = load float, float* %Q.i, align 4, !dbg !7712
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !7713
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #8, !dbg !7714
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !7715
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !7715
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !7716
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !7717
  %shl.i284.i = shl i32 1, %227, !dbg !7718
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !7719
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !7720
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !7721
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !7721
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !7722

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !7723
  %neg1.i289.i = xor i32 %228, -1, !dbg !7724
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !7725
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !7726
  %shl2.i291.i = shl i32 1, %229, !dbg !7727
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !7728
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !7729
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !7730
  br label %av_clip_uintp2_c.exit296.i, !dbg !7730

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !7731
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !7732
  br label %av_clip_uintp2_c.exit296.i, !dbg !7732

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !7733
  store i32 %231, i32* %coef.i, align 4, !dbg !7303
  %232 = load i32, i32* %coef.i, align 4, !dbg !7734
  %or259.i = or i32 %232, 1, !dbg !7735
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #8, !dbg !7736
  %sub260.i = sub nsw i32 31, %233, !dbg !7737
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !7304
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7738
  %235 = load i32, i32* %len.i, align 4, !dbg !7739
  %sub261.i = sub nsw i32 %235, 4, !dbg !7740
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !7741
  %236 = load i32, i32* %len.i, align 4, !dbg !7742
  %sub263.i = sub nsw i32 %236, 4, !dbg !7743
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !7744
  %shl.i = shl i32 1, %add264.i, !dbg !7745
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !7746
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #8, !dbg !7747
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7748
  %238 = load i32, i32* %len.i, align 4, !dbg !7749
  %239 = load i32, i32* %coef.i, align 4, !dbg !7750
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #8, !dbg !7751
  br label %if.end266.i, !dbg !7752

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !7753
  %inc268.i = add nsw i32 %240, 1, !dbg !7753
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !7753
  br label %for.cond239.i, !dbg !7754, !llvm.loop !4587

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !7755

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !7756

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !7757
  %242 = load i32, i32* %i.i, align 4, !dbg !7758
  %add273.i = add nsw i32 %242, %241, !dbg !7758
  store i32 %add273.i, i32* %i.i, align 4, !dbg !7758
  br label %for.cond59.i, !dbg !7759, !llvm.loop !4595

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !7760
  %tobool275.i = icmp ne i32* %243, null, !dbg !7760
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !7761

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !7762
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !7763
  store i32 %244, i32* %245, align 4, !dbg !7764
  br label %if.end277.i, !dbg !7765

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !7766
  %tobool278.i = icmp ne float* %246, null, !dbg !7766
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !7767

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !7768
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !7769
  store float %247, float* %248, align 4, !dbg !7770
  br label %if.end280.i, !dbg !7771

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !7772
  store float %249, float* %retval.i, align 4, !dbg !7773
  br label %quantize_and_encode_band_cost_template.exit, !dbg !7773

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !7774
  ret float %250, !dbg !7775
}

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_STEREO(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !7776 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !3939, metadata !2763), !dbg !7777
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !3963, metadata !2763), !dbg !7780
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !3939, metadata !2763), !dbg !7781
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !3963, metadata !2763), !dbg !7783
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !3978, metadata !2763), !dbg !7784
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3980, metadata !2763), !dbg !7785
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !3982, metadata !2763), !dbg !7786
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !3984, metadata !2763), !dbg !7787
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !3986, metadata !2763), !dbg !7788
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3988, metadata !2763), !dbg !7789
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !3990, metadata !2763), !dbg !7790
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !3992, metadata !2763), !dbg !7791
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !3994, metadata !2763), !dbg !7792
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !3996, metadata !2763), !dbg !7793
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !3998, metadata !2763), !dbg !7794
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !4000, metadata !2763), !dbg !7795
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !4002, metadata !2763), !dbg !7796
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !4004, metadata !2763), !dbg !7797
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !4006, metadata !2763), !dbg !7798
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !4008, metadata !2763), !dbg !7799
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !4010, metadata !2763), !dbg !7800
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !4012, metadata !2763), !dbg !7801
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !4014, metadata !2763), !dbg !7802
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !4016, metadata !2763), !dbg !7803
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !4018, metadata !2763), !dbg !7804
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !4020, metadata !2763), !dbg !7805
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !4022, metadata !2763), !dbg !7806
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !4024, metadata !2763), !dbg !7807
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !4026, metadata !2763), !dbg !7808
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !4028, metadata !2763), !dbg !7809
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !4030, metadata !2763), !dbg !7810
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !4032, metadata !2763), !dbg !7811
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !4034, metadata !2763), !dbg !7812
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !4036, metadata !2763), !dbg !7813
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !4038, metadata !2763), !dbg !7814
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !4040, metadata !2763), !dbg !7815
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !4042, metadata !2763), !dbg !7816
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !4044, metadata !2763), !dbg !7817
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !4046, metadata !2763), !dbg !7818
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !4048, metadata !2763), !dbg !7819
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !4050, metadata !2763), !dbg !7820
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !4052, metadata !2763), !dbg !7821
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !4054, metadata !2763), !dbg !7822
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !4056, metadata !2763), !dbg !7823
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !4058, metadata !2763), !dbg !7824
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !4060, metadata !2763), !dbg !7825
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !7826, metadata !2763), !dbg !7827
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !7828, metadata !2763), !dbg !7829
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !7830, metadata !2763), !dbg !7831
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !7832, metadata !2763), !dbg !7833
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !7834, metadata !2763), !dbg !7835
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7836, metadata !2763), !dbg !7837
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !7838, metadata !2763), !dbg !7839
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !7840, metadata !2763), !dbg !7841
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !7842, metadata !2763), !dbg !7843
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !7844, metadata !2763), !dbg !7845
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !7846, metadata !2763), !dbg !7847
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !7848, metadata !2763), !dbg !7849
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !7850
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !7851
  %2 = load float*, float** %in.addr, align 8, !dbg !7852
  %3 = load float*, float** %quant.addr, align 8, !dbg !7853
  %4 = load float*, float** %scaled.addr, align 8, !dbg !7854
  %5 = load i32, i32* %size.addr, align 4, !dbg !7855
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !7856
  %7 = load i32, i32* %cb.addr, align 4, !dbg !7857
  %8 = load float, float* %lambda.addr, align 4, !dbg !7858
  %9 = load float, float* %uplim.addr, align 4, !dbg !7859
  %10 = load i32*, i32** %bits.addr, align 8, !dbg !7860
  %11 = load float*, float** %energy.addr, align 8, !dbg !7861
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7862
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !7862
  store float* %2, float** %in.addr.i, align 8, !dbg !7862
  store float* %3, float** %out.addr.i, align 8, !dbg !7862
  store float* %4, float** %scaled.addr.i, align 8, !dbg !7862
  store i32 %5, i32* %size.addr.i, align 4, !dbg !7862
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !7862
  store i32 %7, i32* %cb.addr.i, align 4, !dbg !7862
  store float %8, float* %lambda.addr.i, align 4, !dbg !7862
  store float %9, float* %uplim.addr.i, align 4, !dbg !7862
  store i32* %10, i32** %bits.addr.i, align 8, !dbg !7862
  store float* %11, float** %energy.addr.i, align 8, !dbg !7862
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !7862
  store i32 0, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !7862
  store i32 0, i32* %BT_PAIR.addr.i, align 4, !dbg !7862
  store i32 0, i32* %BT_ESC.addr.i, align 4, !dbg !7862
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !7862
  store i32 1, i32* %BT_STEREO.addr.i, align 4, !dbg !7862
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !7862
  %12 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !7863
  %sub.i = sub nsw i32 200, %12, !dbg !7864
  %add.i = add nsw i32 %sub.i, 140, !dbg !7865
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !7866
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !7803
  %13 = load i32, i32* %q_idx.i, align 4, !dbg !7867
  %idxprom.i = sext i32 %13 to i64, !dbg !7868
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !7868
  %14 = load float, float* %arrayidx.i, align 4, !dbg !7868
  store float %14, float* %Q.i, align 4, !dbg !7804
  %15 = load i32, i32* %q_idx.i, align 4, !dbg !7869
  %idxprom2.i = sext i32 %15 to i64, !dbg !7870
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !7870
  %16 = load float, float* %arrayidx3.i, align 4, !dbg !7870
  store float %16, float* %Q34.i, align 4, !dbg !7805
  %17 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !7871
  %add4.i = add nsw i32 200, %17, !dbg !7872
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !7873
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !7874
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !7875
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !7875
  %18 = load float, float* %arrayidx8.i, align 4, !dbg !7875
  store float %18, float* %IQ.i, align 4, !dbg !7806
  %19 = load float, float* %IQ.i, align 4, !dbg !7876
  %mul.i = fmul float 1.651400e+05, %19, !dbg !7877
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !7807
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !7810
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !7811
  %20 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !7878
  %tobool.i = icmp ne i32 %20, 0, !dbg !7878
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !7878
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !7812
  store i32 0, i32* %resbits.i, align 4, !dbg !7813
  %21 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !7879
  %tobool9.i = icmp ne i32 %21, 0, !dbg !7879
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !7880

lor.lhs.false.i:                                  ; preds = %entry
  %22 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !7881
  %tobool10.i = icmp ne i32 %22, 0, !dbg !7881
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !7882

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %23 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !7883
  %tobool12.i = icmp ne i32 %23, 0, !dbg !7883
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !7884

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !7885
  br label %for.cond.i, !dbg !7886

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %24 = load i32, i32* %i.i, align 4, !dbg !7887
  %25 = load i32, i32* %size.addr.i, align 4, !dbg !7888
  %cmp.i = icmp slt i32 %24, %25, !dbg !7889
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !7890

for.body.i:                                       ; preds = %for.cond.i
  %26 = load i32, i32* %i.i, align 4, !dbg !7891
  %idxprom13.i = sext i32 %26 to i64, !dbg !7892
  %27 = load float*, float** %in.addr.i, align 8, !dbg !7892
  %arrayidx14.i = getelementptr inbounds float, float* %27, i64 %idxprom13.i, !dbg !7892
  %28 = load float, float* %arrayidx14.i, align 4, !dbg !7892
  %29 = load i32, i32* %i.i, align 4, !dbg !7893
  %idxprom15.i = sext i32 %29 to i64, !dbg !7894
  %30 = load float*, float** %in.addr.i, align 8, !dbg !7894
  %arrayidx16.i = getelementptr inbounds float, float* %30, i64 %idxprom15.i, !dbg !7894
  %31 = load float, float* %arrayidx16.i, align 4, !dbg !7894
  %mul17.i = fmul float %28, %31, !dbg !7895
  %32 = load float, float* %cost.i, align 4, !dbg !7896
  %add18.i = fadd float %32, %mul17.i, !dbg !7896
  store float %add18.i, float* %cost.i, align 4, !dbg !7896
  %33 = load i32, i32* %i.i, align 4, !dbg !7897
  %inc.i = add nsw i32 %33, 1, !dbg !7897
  store i32 %inc.i, i32* %i.i, align 4, !dbg !7897
  br label %for.cond.i, !dbg !7898, !llvm.loop !4143

for.end.i:                                        ; preds = %for.cond.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !7899
  %tobool19.i = icmp ne i32* %34, null, !dbg !7899
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !7900

if.then20.i:                                      ; preds = %for.end.i
  %35 = load i32*, i32** %bits.addr.i, align 8, !dbg !7901
  store i32 0, i32* %35, align 4, !dbg !7902
  br label %if.end.i, !dbg !7903

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %36 = load float*, float** %energy.addr.i, align 8, !dbg !7904
  %tobool21.i = icmp ne float* %36, null, !dbg !7904
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !7905

if.then22.i:                                      ; preds = %if.end.i
  %37 = load float, float* %qenergy.i, align 4, !dbg !7906
  %38 = load float*, float** %energy.addr.i, align 8, !dbg !7907
  store float %37, float* %38, align 4, !dbg !7908
  br label %if.end23.i, !dbg !7909

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %39 = load float*, float** %out.addr.i, align 8, !dbg !7910
  %tobool24.i = icmp ne float* %39, null, !dbg !7910
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !7911

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !7912
  br label %for.cond26.i, !dbg !7913

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %40 = load i32, i32* %i.i, align 4, !dbg !7914
  %41 = load i32, i32* %size.addr.i, align 4, !dbg !7915
  %cmp27.i = icmp slt i32 %40, %41, !dbg !7916
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !7917

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !7918
  br label %for.cond29.i, !dbg !7919

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %42 = load i32, i32* %j.i, align 4, !dbg !7920
  %43 = load i32, i32* %dim.i, align 4, !dbg !7921
  %cmp30.i = icmp slt i32 %42, %43, !dbg !7922
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !7923

for.body31.i:                                     ; preds = %for.cond29.i
  %44 = load i32, i32* %i.i, align 4, !dbg !7924
  %45 = load i32, i32* %j.i, align 4, !dbg !7925
  %add32.i = add nsw i32 %44, %45, !dbg !7926
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !7927
  %46 = load float*, float** %out.addr.i, align 8, !dbg !7927
  %arrayidx34.i = getelementptr inbounds float, float* %46, i64 %idxprom33.i, !dbg !7927
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !7928
  %47 = load i32, i32* %j.i, align 4, !dbg !7929
  %inc36.i = add nsw i32 %47, 1, !dbg !7929
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !7929
  br label %for.cond29.i, !dbg !7930, !llvm.loop !4188

for.end37.i:                                      ; preds = %for.cond29.i
  %48 = load i32, i32* %dim.i, align 4, !dbg !7931
  %49 = load i32, i32* %i.i, align 4, !dbg !7932
  %add39.i = add nsw i32 %49, %48, !dbg !7932
  store i32 %add39.i, i32* %i.i, align 4, !dbg !7932
  br label %for.cond26.i, !dbg !7933, !llvm.loop !4194

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !7934

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %50 = load float, float* %cost.i, align 4, !dbg !7935
  %51 = load float, float* %lambda.addr.i, align 4, !dbg !7936
  %mul42.i = fmul float %50, %51, !dbg !7937
  store float %mul42.i, float* %retval.i, align 4, !dbg !7938
  br label %quantize_and_encode_band_cost_template.exit, !dbg !7938

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %52 = load float*, float** %scaled.addr.i, align 8, !dbg !7939
  %tobool44.i = icmp ne float* %52, null, !dbg !7939
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !7940

if.then45.i:                                      ; preds = %if.end43.i
  %53 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7941
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %53, i32 0, i32 32, !dbg !7942
  %54 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !7942
  %55 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7943
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %55, i32 0, i32 29, !dbg !7944
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !7943
  %56 = load float*, float** %in.addr.i, align 8, !dbg !7945
  %57 = load i32, i32* %size.addr.i, align 4, !dbg !7946
  call void %54(float* %arraydecay.i, float* %56, i32 %57) #8, !dbg !7941
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7947
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 29, !dbg !7948
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !7947
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !7949
  br label %if.end48.i, !dbg !7950

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %59 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7951
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %59, i32 0, i32 33, !dbg !7952
  %60 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !7952
  %61 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7953
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %61, i32 0, i32 28, !dbg !7954
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !7953
  %62 = load float*, float** %in.addr.i, align 8, !dbg !7955
  %63 = load float*, float** %scaled.addr.i, align 8, !dbg !7956
  %64 = load i32, i32* %size.addr.i, align 4, !dbg !7957
  %65 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !7958
  %tobool50.i = icmp ne i32 %65, 0, !dbg !7959
  %lnot.i = xor i1 %tobool50.i, true, !dbg !7959
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !7959
  %66 = load i32, i32* %cb.addr.i, align 4, !dbg !7960
  %idxprom51.i = sext i32 %66 to i64, !dbg !7961
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !7961
  %67 = load i8, i8* %arrayidx52.i, align 1, !dbg !7961
  %conv.i = zext i8 %67 to i32, !dbg !7961
  %68 = load float, float* %Q34.i, align 4, !dbg !7962
  %69 = load float, float* %ROUNDING.addr.i, align 4, !dbg !7963
  call void %60(i32* %arraydecay49.i, float* %62, float* %63, i32 %64, i32 %lnot.ext.i, i32 %conv.i, float %68, float %69) #8, !dbg !7951
  %70 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !7964
  %tobool53.i = icmp ne i32 %70, 0, !dbg !7964
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !7965

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !7966
  br label %if.end58.i, !dbg !7967

if.else.i:                                        ; preds = %if.end48.i
  %71 = load i32, i32* %cb.addr.i, align 4, !dbg !7968
  %idxprom55.i = sext i32 %71 to i64, !dbg !7969
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !7969
  %72 = load i8, i8* %arrayidx56.i, align 1, !dbg !7969
  %conv57.i = zext i8 %72 to i32, !dbg !7969
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !7970
  br label %if.end58.i, !dbg !7862

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !7971
  br label %for.cond59.i, !dbg !7972

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %73 = load i32, i32* %i.i, align 4, !dbg !7973
  %74 = load i32, i32* %size.addr.i, align 4, !dbg !7974
  %cmp60.i = icmp slt i32 %73, %74, !dbg !7975
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !7976

for.body62.i:                                     ; preds = %for.cond59.i
  %75 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !7977
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %75, i32 0, i32 28, !dbg !7978
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !7977
  %76 = load i32, i32* %i.i, align 4, !dbg !7979
  %idx.ext.i = sext i32 %76 to i64, !dbg !7980
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !7980
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !7816
  store i32 0, i32* %curidx.i, align 4, !dbg !7817
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !7820
  store i32 0, i32* %j.i, align 4, !dbg !7981
  br label %for.cond65.i, !dbg !7982

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %77 = load i32, i32* %j.i, align 4, !dbg !7983
  %78 = load i32, i32* %dim.i, align 4, !dbg !7984
  %cmp66.i = icmp slt i32 %77, %78, !dbg !7985
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !7986

for.body68.i:                                     ; preds = %for.cond65.i
  %79 = load i32, i32* %cb.addr.i, align 4, !dbg !7987
  %idxprom69.i = sext i32 %79 to i64, !dbg !7988
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !7988
  %80 = load i8, i8* %arrayidx70.i, align 1, !dbg !7988
  %conv71.i = zext i8 %80 to i32, !dbg !7988
  %81 = load i32, i32* %curidx.i, align 4, !dbg !7989
  %mul72.i = mul nsw i32 %81, %conv71.i, !dbg !7989
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !7989
  %82 = load i32, i32* %j.i, align 4, !dbg !7990
  %idxprom73.i = sext i32 %82 to i64, !dbg !7991
  %83 = load i32*, i32** %quants.i, align 8, !dbg !7991
  %arrayidx74.i = getelementptr inbounds i32, i32* %83, i64 %idxprom73.i, !dbg !7991
  %84 = load i32, i32* %arrayidx74.i, align 4, !dbg !7991
  %85 = load i32, i32* %off.i, align 4, !dbg !7992
  %add75.i = add nsw i32 %84, %85, !dbg !7993
  %86 = load i32, i32* %curidx.i, align 4, !dbg !7994
  %add76.i = add nsw i32 %86, %add75.i, !dbg !7994
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !7994
  %87 = load i32, i32* %j.i, align 4, !dbg !7995
  %inc78.i = add nsw i32 %87, 1, !dbg !7995
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !7995
  br label %for.cond65.i, !dbg !7996, !llvm.loop !4270

for.end79.i:                                      ; preds = %for.cond65.i
  %88 = load i32, i32* %curidx.i, align 4, !dbg !7997
  %idxprom80.i = sext i32 %88 to i64, !dbg !7998
  %89 = load i32, i32* %cb.addr.i, align 4, !dbg !7999
  %sub81.i = sub nsw i32 %89, 1, !dbg !8000
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !7998
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !7998
  %90 = load i8*, i8** %arrayidx83.i, align 8, !dbg !7998
  %arrayidx84.i = getelementptr inbounds i8, i8* %90, i64 %idxprom80.i, !dbg !7998
  %91 = load i8, i8* %arrayidx84.i, align 1, !dbg !7998
  %conv85.i = zext i8 %91 to i32, !dbg !7998
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !8001
  %92 = load i32, i32* %curidx.i, align 4, !dbg !8002
  %93 = load i32, i32* %dim.i, align 4, !dbg !8003
  %mul86.i = mul nsw i32 %92, %93, !dbg !8004
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !8005
  %94 = load i32, i32* %cb.addr.i, align 4, !dbg !8006
  %sub88.i = sub nsw i32 %94, 1, !dbg !8007
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !8005
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !8005
  %95 = load float*, float** %arrayidx90.i, align 8, !dbg !8005
  %arrayidx91.i = getelementptr inbounds float, float* %95, i64 %idxprom87.i, !dbg !8005
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !8008
  %96 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !8009
  %tobool92.i = icmp ne i32 %96, 0, !dbg !8009
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !8010

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !8011
  br label %for.cond94.i, !dbg !8012

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %97 = load i32, i32* %j.i, align 4, !dbg !8013
  %98 = load i32, i32* %dim.i, align 4, !dbg !8014
  %cmp95.i = icmp slt i32 %97, %98, !dbg !8015
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !8016

for.body97.i:                                     ; preds = %for.cond94.i
  %99 = load i32, i32* %i.i, align 4, !dbg !8017
  %100 = load i32, i32* %j.i, align 4, !dbg !8018
  %add98.i = add nsw i32 %99, %100, !dbg !8019
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !8020
  %101 = load float*, float** %in.addr.i, align 8, !dbg !8020
  %arrayidx100.i = getelementptr inbounds float, float* %101, i64 %idxprom99.i, !dbg !8020
  %102 = load float, float* %arrayidx100.i, align 4, !dbg !8020
  %call.i = call float @fabsf(float %102) #1, !dbg !8021
  store float %call.i, float* %t.i, align 4, !dbg !7821
  %103 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !8022
  %tobool101.i = icmp ne i32 %103, 0, !dbg !8022
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !8023

land.lhs.true.i:                                  ; preds = %for.body97.i
  %104 = load i32, i32* %j.i, align 4, !dbg !8024
  %idxprom102.i = sext i32 %104 to i64, !dbg !8025
  %105 = load float*, float** %vec.i, align 8, !dbg !8025
  %arrayidx103.i = getelementptr inbounds float, float* %105, i64 %idxprom102.i, !dbg !8025
  %106 = load float, float* %arrayidx103.i, align 4, !dbg !8025
  %cmp104.i = fcmp oeq float %106, 6.400000e+01, !dbg !8026
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !8027

if.then106.i:                                     ; preds = %land.lhs.true.i
  %107 = load float, float* %t.i, align 4, !dbg !8028
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !8029
  %cmp107.i = fcmp oge float %107, %108, !dbg !8030
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !8031

if.then109.i:                                     ; preds = %if.then106.i
  %109 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !8032
  store float %109, float* %quantized.i, align 4, !dbg !8033
  %110 = load i32, i32* %curbits.i, align 4, !dbg !8034
  %add110.i = add nsw i32 %110, 21, !dbg !8034
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !8034
  br label %if.end124.i, !dbg !8035

if.else111.i:                                     ; preds = %if.then106.i
  %111 = load float, float* %t.i, align 4, !dbg !8036
  %112 = load float, float* %Q.i, align 4, !dbg !8037
  %113 = load float, float* %ROUNDING.addr.i, align 4, !dbg !8038
  %call112.i = call i32 @quant(float %111, float %112, float %113) #8, !dbg !8039
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !8040
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !8040
  %114 = load i32, i32* %a.addr.i.i, align 4, !dbg !8041
  %115 = load i32, i32* %p.addr.i.i, align 4, !dbg !8042
  %shl.i.i = shl i32 1, %115, !dbg !8043
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !8044
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !8045
  %and.i.i = and i32 %114, %neg.i.i, !dbg !8046
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !8046
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !8047

if.then.i.i:                                      ; preds = %if.else111.i
  %116 = load i32, i32* %a.addr.i.i, align 4, !dbg !8048
  %neg1.i.i = xor i32 %116, -1, !dbg !8049
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !8050
  %117 = load i32, i32* %p.addr.i.i, align 4, !dbg !8051
  %shl2.i.i = shl i32 1, %117, !dbg !8052
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !8053
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !8054
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !8055
  br label %av_clip_uintp2_c.exit.i, !dbg !8055

if.else.i.i:                                      ; preds = %if.else111.i
  %118 = load i32, i32* %a.addr.i.i, align 4, !dbg !8056
  store i32 %118, i32* %retval.i.i, align 4, !dbg !8057
  br label %av_clip_uintp2_c.exit.i, !dbg !8057

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %119 = load i32, i32* %retval.i.i, align 4, !dbg !8058
  store i32 %119, i32* %c.i, align 4, !dbg !7823
  %120 = load i32, i32* %c.i, align 4, !dbg !8059
  %conv114.i = sitofp i32 %120 to float, !dbg !8059
  %121 = load i32, i32* %c.i, align 4, !dbg !8060
  %conv115.i = sitofp i32 %121 to float, !dbg !8060
  %call116.i = call float @cbrtf(float %conv115.i) #8, !dbg !8061
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !8062
  %122 = load float, float* %IQ.i, align 4, !dbg !8063
  %mul118.i = fmul float %mul117.i, %122, !dbg !8064
  store float %mul118.i, float* %quantized.i, align 4, !dbg !8065
  %123 = load i32, i32* %c.i, align 4, !dbg !8066
  %or.i = or i32 %123, 1, !dbg !8067
  %124 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #8, !dbg !8068
  %sub119.i = sub nsw i32 31, %124, !dbg !8069
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !8070
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !8071
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !8072
  %125 = load i32, i32* %curbits.i, align 4, !dbg !8073
  %add123.i = add nsw i32 %125, %add122.i, !dbg !8073
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !8073
  br label %if.end124.i, !dbg !7862

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !8074

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %126 = load i32, i32* %j.i, align 4, !dbg !8075
  %idxprom126.i = sext i32 %126 to i64, !dbg !8076
  %127 = load float*, float** %vec.i, align 8, !dbg !8076
  %arrayidx127.i = getelementptr inbounds float, float* %127, i64 %idxprom126.i, !dbg !8076
  %128 = load float, float* %arrayidx127.i, align 4, !dbg !8076
  %129 = load float, float* %IQ.i, align 4, !dbg !8077
  %mul128.i = fmul float %128, %129, !dbg !8078
  store float %mul128.i, float* %quantized.i, align 4, !dbg !8079
  br label %if.end129.i, !dbg !7862

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %130 = load float, float* %t.i, align 4, !dbg !8080
  %131 = load float, float* %quantized.i, align 4, !dbg !8081
  %sub130.i = fsub float %130, %131, !dbg !8082
  store float %sub130.i, float* %di.i, align 4, !dbg !8083
  %132 = load float*, float** %out.addr.i, align 8, !dbg !8084
  %tobool131.i = icmp ne float* %132, null, !dbg !8084
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !8085

if.then132.i:                                     ; preds = %if.end129.i
  %133 = load i32, i32* %i.i, align 4, !dbg !8086
  %134 = load i32, i32* %j.i, align 4, !dbg !8087
  %add133.i = add nsw i32 %133, %134, !dbg !8088
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !8089
  %135 = load float*, float** %in.addr.i, align 8, !dbg !8089
  %arrayidx135.i = getelementptr inbounds float, float* %135, i64 %idxprom134.i, !dbg !8089
  %136 = load float, float* %arrayidx135.i, align 4, !dbg !8089
  %cmp136.i = fcmp oge float %136, 0.000000e+00, !dbg !8090
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !8089

cond.true.i:                                      ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !8091
  br label %cond.end.i, !dbg !8092

cond.false.i:                                     ; preds = %if.then132.i
  %138 = load float, float* %quantized.i, align 4, !dbg !8093
  %sub138.i = fsub float -0.000000e+00, %138, !dbg !8094
  br label %cond.end.i, !dbg !8095

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %137, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !8096
  %139 = load i32, i32* %i.i, align 4, !dbg !8097
  %140 = load i32, i32* %j.i, align 4, !dbg !8098
  %add140.i = add nsw i32 %139, %140, !dbg !8099
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !8100
  %141 = load float*, float** %out.addr.i, align 8, !dbg !8100
  %arrayidx142.i = getelementptr inbounds float, float* %141, i64 %idxprom141.i, !dbg !8100
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !8101
  br label %if.end143.i, !dbg !8100

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %142 = load i32, i32* %j.i, align 4, !dbg !8102
  %idxprom144.i = sext i32 %142 to i64, !dbg !8103
  %143 = load float*, float** %vec.i, align 8, !dbg !8103
  %arrayidx145.i = getelementptr inbounds float, float* %143, i64 %idxprom144.i, !dbg !8103
  %144 = load float, float* %arrayidx145.i, align 4, !dbg !8103
  %cmp146.i = fcmp une float %144, 0.000000e+00, !dbg !8104
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !8105

if.then148.i:                                     ; preds = %if.end143.i
  %145 = load i32, i32* %curbits.i, align 4, !dbg !8106
  %inc149.i = add nsw i32 %145, 1, !dbg !8106
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !8106
  br label %if.end150.i, !dbg !8107

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %146 = load float, float* %quantized.i, align 4, !dbg !8108
  %147 = load float, float* %quantized.i, align 4, !dbg !8109
  %mul151.i = fmul float %146, %147, !dbg !8110
  %148 = load float, float* %qenergy.i, align 4, !dbg !8111
  %add152.i = fadd float %148, %mul151.i, !dbg !8111
  store float %add152.i, float* %qenergy.i, align 4, !dbg !8111
  %149 = load float, float* %di.i, align 4, !dbg !8112
  %150 = load float, float* %di.i, align 4, !dbg !8113
  %mul153.i = fmul float %149, %150, !dbg !8114
  %151 = load float, float* %rd.i, align 4, !dbg !8115
  %add154.i = fadd float %151, %mul153.i, !dbg !8115
  store float %add154.i, float* %rd.i, align 4, !dbg !8115
  %152 = load i32, i32* %j.i, align 4, !dbg !8116
  %inc156.i = add nsw i32 %152, 1, !dbg !8116
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !8116
  br label %for.cond94.i, !dbg !8117, !llvm.loop !4405

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !8118

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !8119
  br label %for.cond159.i, !dbg !8120

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %153 = load i32, i32* %j.i, align 4, !dbg !8121
  %154 = load i32, i32* %dim.i, align 4, !dbg !8122
  %cmp160.i = icmp slt i32 %153, %154, !dbg !8123
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !8124

for.body162.i:                                    ; preds = %for.cond159.i
  %155 = load i32, i32* %j.i, align 4, !dbg !8125
  %idxprom163.i = sext i32 %155 to i64, !dbg !8126
  %156 = load float*, float** %vec.i, align 8, !dbg !8126
  %arrayidx164.i = getelementptr inbounds float, float* %156, i64 %idxprom163.i, !dbg !8126
  %157 = load float, float* %arrayidx164.i, align 4, !dbg !8126
  %158 = load float, float* %IQ.i, align 4, !dbg !8127
  %mul165.i = fmul float %157, %158, !dbg !8128
  store float %mul165.i, float* %quantized.i, align 4, !dbg !8129
  %159 = load float, float* %quantized.i, align 4, !dbg !8130
  %160 = load float, float* %quantized.i, align 4, !dbg !8131
  %mul166.i = fmul float %159, %160, !dbg !8132
  %161 = load float, float* %qenergy.i, align 4, !dbg !8133
  %add167.i = fadd float %161, %mul166.i, !dbg !8133
  store float %add167.i, float* %qenergy.i, align 4, !dbg !8133
  %162 = load float*, float** %out.addr.i, align 8, !dbg !8134
  %tobool168.i = icmp ne float* %162, null, !dbg !8134
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !8135

if.then169.i:                                     ; preds = %for.body162.i
  %163 = load float, float* %quantized.i, align 4, !dbg !8136
  %164 = load i32, i32* %i.i, align 4, !dbg !8137
  %165 = load i32, i32* %j.i, align 4, !dbg !8138
  %add170.i = add nsw i32 %164, %165, !dbg !8139
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !8140
  %166 = load float*, float** %out.addr.i, align 8, !dbg !8140
  %arrayidx172.i = getelementptr inbounds float, float* %166, i64 %idxprom171.i, !dbg !8140
  store float %163, float* %arrayidx172.i, align 4, !dbg !8141
  br label %if.end173.i, !dbg !8140

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %167 = load i32, i32* %i.i, align 4, !dbg !8142
  %168 = load i32, i32* %j.i, align 4, !dbg !8143
  %add174.i = add nsw i32 %167, %168, !dbg !8144
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !8145
  %169 = load float*, float** %in.addr.i, align 8, !dbg !8145
  %arrayidx176.i = getelementptr inbounds float, float* %169, i64 %idxprom175.i, !dbg !8145
  %170 = load float, float* %arrayidx176.i, align 4, !dbg !8145
  %171 = load float, float* %quantized.i, align 4, !dbg !8146
  %sub177.i = fsub float %170, %171, !dbg !8147
  %172 = load i32, i32* %i.i, align 4, !dbg !8148
  %173 = load i32, i32* %j.i, align 4, !dbg !8149
  %add178.i = add nsw i32 %172, %173, !dbg !8150
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !8151
  %174 = load float*, float** %in.addr.i, align 8, !dbg !8151
  %arrayidx180.i = getelementptr inbounds float, float* %174, i64 %idxprom179.i, !dbg !8151
  %175 = load float, float* %arrayidx180.i, align 4, !dbg !8151
  %176 = load float, float* %quantized.i, align 4, !dbg !8152
  %sub181.i = fsub float %175, %176, !dbg !8153
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !8154
  %177 = load float, float* %rd.i, align 4, !dbg !8155
  %add183.i = fadd float %177, %mul182.i, !dbg !8155
  store float %add183.i, float* %rd.i, align 4, !dbg !8155
  %178 = load i32, i32* %j.i, align 4, !dbg !8156
  %inc185.i = add nsw i32 %178, 1, !dbg !8156
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !8156
  br label %for.cond159.i, !dbg !8157, !llvm.loop !4454

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !7862

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %179 = load float, float* %rd.i, align 4, !dbg !8158
  %180 = load float, float* %lambda.addr.i, align 4, !dbg !8159
  %mul188.i = fmul float %179, %180, !dbg !8160
  %181 = load i32, i32* %curbits.i, align 4, !dbg !8161
  %conv189.i = sitofp i32 %181 to float, !dbg !8161
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !8162
  %182 = load float, float* %cost.i, align 4, !dbg !8163
  %add191.i = fadd float %182, %add190.i, !dbg !8163
  store float %add191.i, float* %cost.i, align 4, !dbg !8163
  %183 = load i32, i32* %curbits.i, align 4, !dbg !8164
  %184 = load i32, i32* %resbits.i, align 4, !dbg !8165
  %add192.i = add nsw i32 %184, %183, !dbg !8165
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !8165
  %185 = load float, float* %cost.i, align 4, !dbg !8166
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !8167
  %cmp193.i = fcmp oge float %185, %186, !dbg !8168
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !8169

if.then195.i:                                     ; preds = %if.end187.i
  %187 = load float, float* %uplim.addr.i, align 4, !dbg !8170
  store float %187, float* %retval.i, align 4, !dbg !8171
  br label %quantize_and_encode_band_cost_template.exit, !dbg !8171

if.end196.i:                                      ; preds = %if.end187.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !8172
  %tobool197.i = icmp ne %struct.PutBitContext* %188, null, !dbg !8172
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !8173

if.then198.i:                                     ; preds = %if.end196.i
  %189 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !8174
  %190 = load i32, i32* %curidx.i, align 4, !dbg !8175
  %idxprom199.i = sext i32 %190 to i64, !dbg !8176
  %191 = load i32, i32* %cb.addr.i, align 4, !dbg !8177
  %sub200.i = sub nsw i32 %191, 1, !dbg !8178
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !8176
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !8176
  %192 = load i8*, i8** %arrayidx202.i, align 8, !dbg !8176
  %arrayidx203.i = getelementptr inbounds i8, i8* %192, i64 %idxprom199.i, !dbg !8176
  %193 = load i8, i8* %arrayidx203.i, align 1, !dbg !8176
  %conv204.i = zext i8 %193 to i32, !dbg !8176
  %194 = load i32, i32* %curidx.i, align 4, !dbg !8179
  %idxprom205.i = sext i32 %194 to i64, !dbg !8180
  %195 = load i32, i32* %cb.addr.i, align 4, !dbg !8181
  %sub206.i = sub nsw i32 %195, 1, !dbg !8182
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !8180
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !8180
  %196 = load i16*, i16** %arrayidx208.i, align 8, !dbg !8180
  %arrayidx209.i = getelementptr inbounds i16, i16* %196, i64 %idxprom205.i, !dbg !8180
  %197 = load i16, i16* %arrayidx209.i, align 2, !dbg !8180
  %conv210.i = zext i16 %197 to i32, !dbg !8180
  call void @put_bits(%struct.PutBitContext* %189, i32 %conv204.i, i32 %conv210.i) #8, !dbg !8183
  %198 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !8184
  %tobool211.i = icmp ne i32 %198, 0, !dbg !8184
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !8185

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !8186
  br label %for.cond213.i, !dbg !8187

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %199 = load i32, i32* %j.i, align 4, !dbg !8188
  %200 = load i32, i32* %dim.i, align 4, !dbg !8189
  %cmp214.i = icmp slt i32 %199, %200, !dbg !8190
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !8191

for.body216.i:                                    ; preds = %for.cond213.i
  %201 = load i32, i32* %curidx.i, align 4, !dbg !8192
  %202 = load i32, i32* %dim.i, align 4, !dbg !8193
  %mul217.i = mul nsw i32 %201, %202, !dbg !8194
  %203 = load i32, i32* %j.i, align 4, !dbg !8195
  %add218.i = add nsw i32 %mul217.i, %203, !dbg !8196
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !8197
  %204 = load i32, i32* %cb.addr.i, align 4, !dbg !8198
  %sub220.i = sub nsw i32 %204, 1, !dbg !8199
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !8197
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !8197
  %205 = load float*, float** %arrayidx222.i, align 8, !dbg !8197
  %arrayidx223.i = getelementptr inbounds float, float* %205, i64 %idxprom219.i, !dbg !8197
  %206 = load float, float* %arrayidx223.i, align 4, !dbg !8197
  %cmp224.i = fcmp une float %206, 0.000000e+00, !dbg !8200
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !8201

if.then226.i:                                     ; preds = %for.body216.i
  %207 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !8202
  %208 = load i32, i32* %i.i, align 4, !dbg !8203
  %209 = load i32, i32* %j.i, align 4, !dbg !8204
  %add227.i = add nsw i32 %208, %209, !dbg !8205
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !8206
  %210 = load float*, float** %in.addr.i, align 8, !dbg !8206
  %arrayidx229.i = getelementptr inbounds float, float* %210, i64 %idxprom228.i, !dbg !8206
  %211 = load float, float* %arrayidx229.i, align 4, !dbg !8206
  %cmp230.i = fcmp olt float %211, 0.000000e+00, !dbg !8207
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !8207
  call void @put_bits(%struct.PutBitContext* %207, i32 1, i32 %conv231.i) #8, !dbg !8208
  br label %if.end232.i, !dbg !8208

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %212 = load i32, i32* %j.i, align 4, !dbg !8209
  %inc234.i = add nsw i32 %212, 1, !dbg !8209
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !8209
  br label %for.cond213.i, !dbg !8210, !llvm.loop !4516

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !8211

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %213 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !8212
  %tobool237.i = icmp ne i32 %213, 0, !dbg !8212
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !8213

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !8214
  br label %for.cond239.i, !dbg !8215

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %214 = load i32, i32* %j.i, align 4, !dbg !8216
  %cmp240.i = icmp slt i32 %214, 2, !dbg !8217
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !8218

for.body242.i:                                    ; preds = %for.cond239.i
  %215 = load i32, i32* %curidx.i, align 4, !dbg !8219
  %mul243.i = mul nsw i32 %215, 2, !dbg !8220
  %216 = load i32, i32* %j.i, align 4, !dbg !8221
  %add244.i = add nsw i32 %mul243.i, %216, !dbg !8222
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !8223
  %217 = load i32, i32* %cb.addr.i, align 4, !dbg !8224
  %sub246.i = sub nsw i32 %217, 1, !dbg !8225
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !8223
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !8223
  %218 = load float*, float** %arrayidx248.i, align 8, !dbg !8223
  %arrayidx249.i = getelementptr inbounds float, float* %218, i64 %idxprom245.i, !dbg !8223
  %219 = load float, float* %arrayidx249.i, align 4, !dbg !8223
  %cmp250.i = fcmp oeq float %219, 6.400000e+01, !dbg !8226
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !8227

if.then252.i:                                     ; preds = %for.body242.i
  %220 = load i32, i32* %i.i, align 4, !dbg !8228
  %221 = load i32, i32* %j.i, align 4, !dbg !8229
  %add253.i = add nsw i32 %220, %221, !dbg !8230
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !8231
  %222 = load float*, float** %in.addr.i, align 8, !dbg !8231
  %arrayidx255.i = getelementptr inbounds float, float* %222, i64 %idxprom254.i, !dbg !8231
  %223 = load float, float* %arrayidx255.i, align 4, !dbg !8231
  %call256.i = call float @fabsf(float %223) #1, !dbg !8232
  %224 = load float, float* %Q.i, align 4, !dbg !8233
  %225 = load float, float* %ROUNDING.addr.i, align 4, !dbg !8234
  %call257.i = call i32 @quant(float %call256.i, float %224, float %225) #8, !dbg !8235
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !8236
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !8236
  %226 = load i32, i32* %a.addr.i282.i, align 4, !dbg !8237
  %227 = load i32, i32* %p.addr.i283.i, align 4, !dbg !8238
  %shl.i284.i = shl i32 1, %227, !dbg !8239
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !8240
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !8241
  %and.i287.i = and i32 %226, %neg.i286.i, !dbg !8242
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !8242
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !8243

if.then.i294.i:                                   ; preds = %if.then252.i
  %228 = load i32, i32* %a.addr.i282.i, align 4, !dbg !8244
  %neg1.i289.i = xor i32 %228, -1, !dbg !8245
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !8246
  %229 = load i32, i32* %p.addr.i283.i, align 4, !dbg !8247
  %shl2.i291.i = shl i32 1, %229, !dbg !8248
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !8249
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !8250
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !8251
  br label %av_clip_uintp2_c.exit296.i, !dbg !8251

if.else.i295.i:                                   ; preds = %if.then252.i
  %230 = load i32, i32* %a.addr.i282.i, align 4, !dbg !8252
  store i32 %230, i32* %retval.i281.i, align 4, !dbg !8253
  br label %av_clip_uintp2_c.exit296.i, !dbg !8253

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %231 = load i32, i32* %retval.i281.i, align 4, !dbg !8254
  store i32 %231, i32* %coef.i, align 4, !dbg !7824
  %232 = load i32, i32* %coef.i, align 4, !dbg !8255
  %or259.i = or i32 %232, 1, !dbg !8256
  %233 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #8, !dbg !8257
  %sub260.i = sub nsw i32 31, %233, !dbg !8258
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !7825
  %234 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !8259
  %235 = load i32, i32* %len.i, align 4, !dbg !8260
  %sub261.i = sub nsw i32 %235, 4, !dbg !8261
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !8262
  %236 = load i32, i32* %len.i, align 4, !dbg !8263
  %sub263.i = sub nsw i32 %236, 4, !dbg !8264
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !8265
  %shl.i = shl i32 1, %add264.i, !dbg !8266
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !8267
  call void @put_bits(%struct.PutBitContext* %234, i32 %add262.i, i32 %sub265.i) #8, !dbg !8268
  %237 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !8269
  %238 = load i32, i32* %len.i, align 4, !dbg !8270
  %239 = load i32, i32* %coef.i, align 4, !dbg !8271
  call void @put_sbits(%struct.PutBitContext* %237, i32 %238, i32 %239) #8, !dbg !8272
  br label %if.end266.i, !dbg !8273

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %240 = load i32, i32* %j.i, align 4, !dbg !8274
  %inc268.i = add nsw i32 %240, 1, !dbg !8274
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !8274
  br label %for.cond239.i, !dbg !8275, !llvm.loop !4587

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !8276

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !8277

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %241 = load i32, i32* %dim.i, align 4, !dbg !8278
  %242 = load i32, i32* %i.i, align 4, !dbg !8279
  %add273.i = add nsw i32 %242, %241, !dbg !8279
  store i32 %add273.i, i32* %i.i, align 4, !dbg !8279
  br label %for.cond59.i, !dbg !8280, !llvm.loop !4595

for.end274.i:                                     ; preds = %for.cond59.i
  %243 = load i32*, i32** %bits.addr.i, align 8, !dbg !8281
  %tobool275.i = icmp ne i32* %243, null, !dbg !8281
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !8282

if.then276.i:                                     ; preds = %for.end274.i
  %244 = load i32, i32* %resbits.i, align 4, !dbg !8283
  %245 = load i32*, i32** %bits.addr.i, align 8, !dbg !8284
  store i32 %244, i32* %245, align 4, !dbg !8285
  br label %if.end277.i, !dbg !8286

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %246 = load float*, float** %energy.addr.i, align 8, !dbg !8287
  %tobool278.i = icmp ne float* %246, null, !dbg !8287
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !8288

if.then279.i:                                     ; preds = %if.end277.i
  %247 = load float, float* %qenergy.i, align 4, !dbg !8289
  %248 = load float*, float** %energy.addr.i, align 8, !dbg !8290
  store float %247, float* %248, align 4, !dbg !8291
  br label %if.end280.i, !dbg !8292

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %249 = load float, float* %cost.i, align 4, !dbg !8293
  store float %249, float* %retval.i, align 4, !dbg !8294
  br label %quantize_and_encode_band_cost_template.exit, !dbg !8294

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %250 = load float, float* %retval.i, align 4, !dbg !8295
  ret float %250, !dbg !8296
}

; Function Attrs: nounwind readnone
declare float @fabsf(float) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @quant(float %coef, float %Q, float %rounding) #3 !dbg !8297 {
entry:
  %coef.addr = alloca float, align 4
  %Q.addr = alloca float, align 4
  %rounding.addr = alloca float, align 4
  %a = alloca float, align 4
  store float %coef, float* %coef.addr, align 4
  call void @llvm.dbg.declare(metadata float* %coef.addr, metadata !8300, metadata !2763), !dbg !8301
  store float %Q, float* %Q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %Q.addr, metadata !8302, metadata !2763), !dbg !8303
  store float %rounding, float* %rounding.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rounding.addr, metadata !8304, metadata !2763), !dbg !8305
  call void @llvm.dbg.declare(metadata float* %a, metadata !8306, metadata !2763), !dbg !8307
  %0 = load float, float* %coef.addr, align 4, !dbg !8308
  %1 = load float, float* %Q.addr, align 4, !dbg !8309
  %mul = fmul float %0, %1, !dbg !8310
  store float %mul, float* %a, align 4, !dbg !8307
  %2 = load float, float* %a, align 4, !dbg !8311
  %3 = load float, float* %a, align 4, !dbg !8312
  %call = call float @sqrtf(float %3) #8, !dbg !8313
  %mul1 = fmul float %2, %call, !dbg !8314
  %call2 = call float @sqrtf(float %mul1) #8, !dbg !8315
  %4 = load float, float* %rounding.addr, align 4, !dbg !8317
  %add = fadd float %call2, %4, !dbg !8318
  %conv = fptosi float %add to i32, !dbg !8319
  ret i32 %conv, !dbg !8320
}

; Function Attrs: nounwind
declare float @cbrtf(float) #4

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_bits(%struct.PutBitContext* %s, i32 %n, i32 %value) #3 !dbg !8321 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !8324, metadata !2763), !dbg !8329
  %s.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_buf = alloca i32, align 4
  %bit_left = alloca i32, align 4
  store %struct.PutBitContext* %s, %struct.PutBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %s.addr, metadata !8335, metadata !2763), !dbg !8336
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8337, metadata !2763), !dbg !8338
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !8339, metadata !2763), !dbg !8340
  call void @llvm.dbg.declare(metadata i32* %bit_buf, metadata !8341, metadata !2763), !dbg !8342
  call void @llvm.dbg.declare(metadata i32* %bit_left, metadata !8343, metadata !2763), !dbg !8344
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8345
  %bit_buf1 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %0, i32 0, i32 0, !dbg !8346
  %1 = load i32, i32* %bit_buf1, align 8, !dbg !8346
  store i32 %1, i32* %bit_buf, align 4, !dbg !8347
  %2 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8348
  %bit_left2 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %2, i32 0, i32 1, !dbg !8349
  %3 = load i32, i32* %bit_left2, align 4, !dbg !8349
  store i32 %3, i32* %bit_left, align 4, !dbg !8350
  %4 = load i32, i32* %n.addr, align 4, !dbg !8351
  %5 = load i32, i32* %bit_left, align 4, !dbg !8352
  %cmp = icmp slt i32 %4, %5, !dbg !8353
  br i1 %cmp, label %if.then, label %if.else, !dbg !8354

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %bit_buf, align 4, !dbg !8355
  %7 = load i32, i32* %n.addr, align 4, !dbg !8357
  %shl = shl i32 %6, %7, !dbg !8358
  %8 = load i32, i32* %value.addr, align 4, !dbg !8359
  %or = or i32 %shl, %8, !dbg !8360
  store i32 %or, i32* %bit_buf, align 4, !dbg !8361
  %9 = load i32, i32* %n.addr, align 4, !dbg !8362
  %10 = load i32, i32* %bit_left, align 4, !dbg !8363
  %sub = sub nsw i32 %10, %9, !dbg !8363
  store i32 %sub, i32* %bit_left, align 4, !dbg !8363
  br label %if.end12, !dbg !8364

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %bit_left, align 4, !dbg !8365
  %12 = load i32, i32* %bit_buf, align 4, !dbg !8366
  %shl3 = shl i32 %12, %11, !dbg !8366
  store i32 %shl3, i32* %bit_buf, align 4, !dbg !8366
  %13 = load i32, i32* %value.addr, align 4, !dbg !8367
  %14 = load i32, i32* %n.addr, align 4, !dbg !8368
  %15 = load i32, i32* %bit_left, align 4, !dbg !8369
  %sub4 = sub nsw i32 %14, %15, !dbg !8370
  %shr = lshr i32 %13, %sub4, !dbg !8371
  %16 = load i32, i32* %bit_buf, align 4, !dbg !8372
  %or5 = or i32 %16, %shr, !dbg !8372
  store i32 %or5, i32* %bit_buf, align 4, !dbg !8372
  %17 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8373
  %buf_end = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %17, i32 0, i32 4, !dbg !8374
  %18 = load i8*, i8** %buf_end, align 8, !dbg !8374
  %19 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8375
  %buf_ptr = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %19, i32 0, i32 3, !dbg !8376
  %20 = load i8*, i8** %buf_ptr, align 8, !dbg !8376
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !8377
  %sub.ptr.rhs.cast = ptrtoint i8* %20 to i64, !dbg !8377
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8377
  %cmp6 = icmp slt i64 3, %sub.ptr.sub, !dbg !8378
  br i1 %cmp6, label %if.then7, label %if.else10, !dbg !8379

if.then7:                                         ; preds = %if.else
  %21 = load i32, i32* %bit_buf, align 4, !dbg !8380
  store i32 %21, i32* %x.addr.i, align 4, !dbg !8381
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !8382
  %shl.i = shl i32 %22, 8, !dbg !8383
  %and.i = and i32 %shl.i, 65280, !dbg !8384
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !8385
  %shr.i = lshr i32 %23, 8, !dbg !8386
  %and1.i = and i32 %shr.i, 255, !dbg !8387
  %or.i = or i32 %and.i, %and1.i, !dbg !8388
  %shl2.i = shl i32 %or.i, 16, !dbg !8389
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !8390
  %shr3.i = lshr i32 %24, 16, !dbg !8391
  %shl4.i = shl i32 %shr3.i, 8, !dbg !8392
  %and5.i = and i32 %shl4.i, 65280, !dbg !8393
  %25 = load i32, i32* %x.addr.i, align 4, !dbg !8394
  %shr6.i = lshr i32 %25, 16, !dbg !8395
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !8396
  %and8.i = and i32 %shr7.i, 255, !dbg !8397
  %or9.i = or i32 %and5.i, %and8.i, !dbg !8398
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !8399
  %26 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8400
  %buf_ptr8 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %26, i32 0, i32 3, !dbg !8401
  %27 = load i8*, i8** %buf_ptr8, align 8, !dbg !8401
  %28 = bitcast i8* %27 to %union.unaligned_32*, !dbg !8402
  %l = bitcast %union.unaligned_32* %28 to i32*, !dbg !8402
  store i32 %or10.i, i32* %l, align 1, !dbg !8403
  %29 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8404
  %buf_ptr9 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %29, i32 0, i32 3, !dbg !8405
  %30 = load i8*, i8** %buf_ptr9, align 8, !dbg !8406
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 4, !dbg !8406
  store i8* %add.ptr, i8** %buf_ptr9, align 8, !dbg !8406
  br label %if.end, !dbg !8407

if.else10:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i32 0, i32 0)), !dbg !8408
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then7
  %31 = load i32, i32* %n.addr, align 4, !dbg !8410
  %sub11 = sub nsw i32 32, %31, !dbg !8411
  %32 = load i32, i32* %bit_left, align 4, !dbg !8412
  %add = add nsw i32 %32, %sub11, !dbg !8412
  store i32 %add, i32* %bit_left, align 4, !dbg !8412
  %33 = load i32, i32* %value.addr, align 4, !dbg !8413
  store i32 %33, i32* %bit_buf, align 4, !dbg !8414
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %34 = load i32, i32* %bit_buf, align 4, !dbg !8415
  %35 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8416
  %bit_buf13 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %35, i32 0, i32 0, !dbg !8417
  store i32 %34, i32* %bit_buf13, align 8, !dbg !8418
  %36 = load i32, i32* %bit_left, align 4, !dbg !8419
  %37 = load %struct.PutBitContext*, %struct.PutBitContext** %s.addr, align 8, !dbg !8420
  %bit_left14 = getelementptr inbounds %struct.PutBitContext, %struct.PutBitContext* %37, i32 0, i32 1, !dbg !8421
  store i32 %36, i32* %bit_left14, align 4, !dbg !8422
  ret void, !dbg !8423
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_sbits(%struct.PutBitContext* %pb, i32 %n, i32 %value) #3 !dbg !8424 {
entry:
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !8427, metadata !2763), !dbg !8431
  %p.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i, metadata !8433, metadata !2763), !dbg !8434
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !8435, metadata !2763), !dbg !8436
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8437, metadata !2763), !dbg !8438
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !8439, metadata !2763), !dbg !8440
  %0 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !8441
  %1 = load i32, i32* %n.addr, align 4, !dbg !8442
  %2 = load i32, i32* %value.addr, align 4, !dbg !8443
  %3 = load i32, i32* %n.addr, align 4, !dbg !8444
  store i32 %2, i32* %a.addr.i, align 4, !dbg !8445
  store i32 %3, i32* %p.addr.i, align 4, !dbg !8445
  %4 = load i32, i32* %a.addr.i, align 4, !dbg !8446
  %5 = load i32, i32* %p.addr.i, align 4, !dbg !8447
  %shl.i = shl i32 1, %5, !dbg !8448
  %sub.i = sub nsw i32 %shl.i, 1, !dbg !8449
  %and.i = and i32 %4, %sub.i, !dbg !8450
  call void @put_bits(%struct.PutBitContext* %0, i32 %1, i32 %and.i), !dbg !8451
  ret void, !dbg !8453
}

declare void @av_log(i8*, i32, i8*, ...) #6

; Function Attrs: noreturn nounwind
declare void @abort() #7

; Function Attrs: nounwind uwtable
define internal float @quantize_and_encode_band_cost_ESC(%struct.AACEncContext* %s, %struct.PutBitContext* %pb, float* %in, float* %quant, float* %scaled, i32 %size, i32 %scale_idx, i32 %cb, float %lambda, float %uplim, i32* %bits, float* %energy) #0 !dbg !8454 {
entry:
  %retval.i281.i = alloca i32, align 4
  %a.addr.i282.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i282.i, metadata !3939, metadata !2763), !dbg !8455
  %p.addr.i283.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i283.i, metadata !3963, metadata !2763), !dbg !8458
  %retval.i.i = alloca i32, align 4
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !3939, metadata !2763), !dbg !8459
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !3963, metadata !2763), !dbg !8461
  %retval.i = alloca float, align 4
  %s.addr.i = alloca %struct.AACEncContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr.i, metadata !3978, metadata !2763), !dbg !8462
  %pb.addr.i = alloca %struct.PutBitContext*, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr.i, metadata !3980, metadata !2763), !dbg !8463
  %in.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr.i, metadata !3982, metadata !2763), !dbg !8464
  %out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr.i, metadata !3984, metadata !2763), !dbg !8465
  %scaled.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr.i, metadata !3986, metadata !2763), !dbg !8466
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3988, metadata !2763), !dbg !8467
  %scale_idx.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr.i, metadata !3990, metadata !2763), !dbg !8468
  %cb.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr.i, metadata !3992, metadata !2763), !dbg !8469
  %lambda.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr.i, metadata !3994, metadata !2763), !dbg !8470
  %uplim.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr.i, metadata !3996, metadata !2763), !dbg !8471
  %bits.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr.i, metadata !3998, metadata !2763), !dbg !8472
  %energy.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr.i, metadata !4000, metadata !2763), !dbg !8473
  %BT_ZERO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ZERO.addr.i, metadata !4002, metadata !2763), !dbg !8474
  %BT_UNSIGNED.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_UNSIGNED.addr.i, metadata !4004, metadata !2763), !dbg !8475
  %BT_PAIR.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_PAIR.addr.i, metadata !4006, metadata !2763), !dbg !8476
  %BT_ESC.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_ESC.addr.i, metadata !4008, metadata !2763), !dbg !8477
  %BT_NOISE.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_NOISE.addr.i, metadata !4010, metadata !2763), !dbg !8478
  %BT_STEREO.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %BT_STEREO.addr.i, metadata !4012, metadata !2763), !dbg !8479
  %ROUNDING.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %ROUNDING.addr.i, metadata !4014, metadata !2763), !dbg !8480
  %q_idx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q_idx.i, metadata !4016, metadata !2763), !dbg !8481
  %Q.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q.i, metadata !4018, metadata !2763), !dbg !8482
  %Q34.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %Q34.i, metadata !4020, metadata !2763), !dbg !8483
  %IQ.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %IQ.i, metadata !4022, metadata !2763), !dbg !8484
  %CLIPPED_ESCAPE.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %CLIPPED_ESCAPE.i, metadata !4024, metadata !2763), !dbg !8485
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !4026, metadata !2763), !dbg !8486
  %j.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %j.i, metadata !4028, metadata !2763), !dbg !8487
  %cost.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %cost.i, metadata !4030, metadata !2763), !dbg !8488
  %qenergy.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %qenergy.i, metadata !4032, metadata !2763), !dbg !8489
  %dim.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dim.i, metadata !4034, metadata !2763), !dbg !8490
  %resbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %resbits.i, metadata !4036, metadata !2763), !dbg !8491
  %off.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %off.i, metadata !4038, metadata !2763), !dbg !8492
  %vec.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %vec.i, metadata !4040, metadata !2763), !dbg !8493
  %quants.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %quants.i, metadata !4042, metadata !2763), !dbg !8494
  %curidx.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curidx.i, metadata !4044, metadata !2763), !dbg !8495
  %curbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curbits.i, metadata !4046, metadata !2763), !dbg !8496
  %quantized.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %quantized.i, metadata !4048, metadata !2763), !dbg !8497
  %rd.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %rd.i, metadata !4050, metadata !2763), !dbg !8498
  %t.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %t.i, metadata !4052, metadata !2763), !dbg !8499
  %di.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %di.i, metadata !4054, metadata !2763), !dbg !8500
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !4056, metadata !2763), !dbg !8501
  %coef.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %coef.i, metadata !4058, metadata !2763), !dbg !8502
  %len.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %len.i, metadata !4060, metadata !2763), !dbg !8503
  %s.addr = alloca %struct.AACEncContext*, align 8
  %pb.addr = alloca %struct.PutBitContext*, align 8
  %in.addr = alloca float*, align 8
  %quant.addr = alloca float*, align 8
  %scaled.addr = alloca float*, align 8
  %size.addr = alloca i32, align 4
  %scale_idx.addr = alloca i32, align 4
  %cb.addr = alloca i32, align 4
  %lambda.addr = alloca float, align 4
  %uplim.addr = alloca float, align 4
  %bits.addr = alloca i32*, align 8
  %energy.addr = alloca float*, align 8
  store %struct.AACEncContext* %s, %struct.AACEncContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AACEncContext** %s.addr, metadata !8504, metadata !2763), !dbg !8505
  store %struct.PutBitContext* %pb, %struct.PutBitContext** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PutBitContext** %pb.addr, metadata !8506, metadata !2763), !dbg !8507
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !8508, metadata !2763), !dbg !8509
  store float* %quant, float** %quant.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quant.addr, metadata !8510, metadata !2763), !dbg !8511
  store float* %scaled, float** %scaled.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scaled.addr, metadata !8512, metadata !2763), !dbg !8513
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8514, metadata !2763), !dbg !8515
  store i32 %scale_idx, i32* %scale_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scale_idx.addr, metadata !8516, metadata !2763), !dbg !8517
  store i32 %cb, i32* %cb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cb.addr, metadata !8518, metadata !2763), !dbg !8519
  store float %lambda, float* %lambda.addr, align 4
  call void @llvm.dbg.declare(metadata float* %lambda.addr, metadata !8520, metadata !2763), !dbg !8521
  store float %uplim, float* %uplim.addr, align 4
  call void @llvm.dbg.declare(metadata float* %uplim.addr, metadata !8522, metadata !2763), !dbg !8523
  store i32* %bits, i32** %bits.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bits.addr, metadata !8524, metadata !2763), !dbg !8525
  store float* %energy, float** %energy.addr, align 8
  call void @llvm.dbg.declare(metadata float** %energy.addr, metadata !8526, metadata !2763), !dbg !8527
  %0 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr, align 8, !dbg !8528
  %1 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr, align 8, !dbg !8529
  %2 = load float*, float** %in.addr, align 8, !dbg !8530
  %3 = load float*, float** %quant.addr, align 8, !dbg !8531
  %4 = load float*, float** %scaled.addr, align 8, !dbg !8532
  %5 = load i32, i32* %size.addr, align 4, !dbg !8533
  %6 = load i32, i32* %scale_idx.addr, align 4, !dbg !8534
  %7 = load float, float* %lambda.addr, align 4, !dbg !8535
  %8 = load float, float* %uplim.addr, align 4, !dbg !8536
  %9 = load i32*, i32** %bits.addr, align 8, !dbg !8537
  %10 = load float*, float** %energy.addr, align 8, !dbg !8538
  store %struct.AACEncContext* %0, %struct.AACEncContext** %s.addr.i, align 8, !dbg !8539
  store %struct.PutBitContext* %1, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !8539
  store float* %2, float** %in.addr.i, align 8, !dbg !8539
  store float* %3, float** %out.addr.i, align 8, !dbg !8539
  store float* %4, float** %scaled.addr.i, align 8, !dbg !8539
  store i32 %5, i32* %size.addr.i, align 4, !dbg !8539
  store i32 %6, i32* %scale_idx.addr.i, align 4, !dbg !8539
  store i32 11, i32* %cb.addr.i, align 4, !dbg !8539
  store float %7, float* %lambda.addr.i, align 4, !dbg !8539
  store float %8, float* %uplim.addr.i, align 4, !dbg !8539
  store i32* %9, i32** %bits.addr.i, align 8, !dbg !8539
  store float* %10, float** %energy.addr.i, align 8, !dbg !8539
  store i32 0, i32* %BT_ZERO.addr.i, align 4, !dbg !8539
  store i32 1, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !8539
  store i32 1, i32* %BT_PAIR.addr.i, align 4, !dbg !8539
  store i32 1, i32* %BT_ESC.addr.i, align 4, !dbg !8539
  store i32 0, i32* %BT_NOISE.addr.i, align 4, !dbg !8539
  store i32 0, i32* %BT_STEREO.addr.i, align 4, !dbg !8539
  store float 0x3FD9F212E0000000, float* %ROUNDING.addr.i, align 4, !dbg !8539
  %11 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !8540
  %sub.i = sub nsw i32 200, %11, !dbg !8541
  %add.i = add nsw i32 %sub.i, 140, !dbg !8542
  %sub1.i = sub nsw i32 %add.i, 36, !dbg !8543
  store i32 %sub1.i, i32* %q_idx.i, align 4, !dbg !8481
  %12 = load i32, i32* %q_idx.i, align 4, !dbg !8544
  %idxprom.i = sext i32 %12 to i64, !dbg !8545
  %arrayidx.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom.i, !dbg !8545
  %13 = load float, float* %arrayidx.i, align 4, !dbg !8545
  store float %13, float* %Q.i, align 4, !dbg !8482
  %14 = load i32, i32* %q_idx.i, align 4, !dbg !8546
  %idxprom2.i = sext i32 %14 to i64, !dbg !8547
  %arrayidx3.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow34sf_tab, i64 0, i64 %idxprom2.i, !dbg !8547
  %15 = load float, float* %arrayidx3.i, align 4, !dbg !8547
  store float %15, float* %Q34.i, align 4, !dbg !8483
  %16 = load i32, i32* %scale_idx.addr.i, align 4, !dbg !8548
  %add4.i = add nsw i32 200, %16, !dbg !8549
  %sub5.i = sub nsw i32 %add4.i, 140, !dbg !8550
  %add6.i = add nsw i32 %sub5.i, 36, !dbg !8551
  %idxprom7.i = sext i32 %add6.i to i64, !dbg !8552
  %arrayidx8.i = getelementptr inbounds [428 x float], [428 x float]* @ff_aac_pow2sf_tab, i64 0, i64 %idxprom7.i, !dbg !8552
  %17 = load float, float* %arrayidx8.i, align 4, !dbg !8552
  store float %17, float* %IQ.i, align 4, !dbg !8484
  %18 = load float, float* %IQ.i, align 4, !dbg !8553
  %mul.i = fmul float 1.651400e+05, %18, !dbg !8554
  store float %mul.i, float* %CLIPPED_ESCAPE.i, align 4, !dbg !8485
  store float 0.000000e+00, float* %cost.i, align 4, !dbg !8488
  store float 0.000000e+00, float* %qenergy.i, align 4, !dbg !8489
  %19 = load i32, i32* %BT_PAIR.addr.i, align 4, !dbg !8555
  %tobool.i = icmp ne i32 %19, 0, !dbg !8555
  %cond.i = select i1 %tobool.i, i32 2, i32 4, !dbg !8555
  store i32 %cond.i, i32* %dim.i, align 4, !dbg !8490
  store i32 0, i32* %resbits.i, align 4, !dbg !8491
  %20 = load i32, i32* %BT_ZERO.addr.i, align 4, !dbg !8556
  %tobool9.i = icmp ne i32 %20, 0, !dbg !8556
  br i1 %tobool9.i, label %if.then.i, label %lor.lhs.false.i, !dbg !8557

lor.lhs.false.i:                                  ; preds = %entry
  %21 = load i32, i32* %BT_NOISE.addr.i, align 4, !dbg !8558
  %tobool10.i = icmp ne i32 %21, 0, !dbg !8558
  br i1 %tobool10.i, label %if.then.i, label %lor.lhs.false11.i, !dbg !8559

lor.lhs.false11.i:                                ; preds = %lor.lhs.false.i
  %22 = load i32, i32* %BT_STEREO.addr.i, align 4, !dbg !8560
  %tobool12.i = icmp ne i32 %22, 0, !dbg !8560
  br i1 %tobool12.i, label %if.then.i, label %if.end43.i, !dbg !8561

if.then.i:                                        ; preds = %lor.lhs.false11.i, %lor.lhs.false.i, %entry
  store i32 0, i32* %i.i, align 4, !dbg !8562
  br label %for.cond.i, !dbg !8563

for.cond.i:                                       ; preds = %for.body.i, %if.then.i
  %23 = load i32, i32* %i.i, align 4, !dbg !8564
  %24 = load i32, i32* %size.addr.i, align 4, !dbg !8565
  %cmp.i = icmp slt i32 %23, %24, !dbg !8566
  br i1 %cmp.i, label %for.body.i, label %for.end.i, !dbg !8567

for.body.i:                                       ; preds = %for.cond.i
  %25 = load i32, i32* %i.i, align 4, !dbg !8568
  %idxprom13.i = sext i32 %25 to i64, !dbg !8569
  %26 = load float*, float** %in.addr.i, align 8, !dbg !8569
  %arrayidx14.i = getelementptr inbounds float, float* %26, i64 %idxprom13.i, !dbg !8569
  %27 = load float, float* %arrayidx14.i, align 4, !dbg !8569
  %28 = load i32, i32* %i.i, align 4, !dbg !8570
  %idxprom15.i = sext i32 %28 to i64, !dbg !8571
  %29 = load float*, float** %in.addr.i, align 8, !dbg !8571
  %arrayidx16.i = getelementptr inbounds float, float* %29, i64 %idxprom15.i, !dbg !8571
  %30 = load float, float* %arrayidx16.i, align 4, !dbg !8571
  %mul17.i = fmul float %27, %30, !dbg !8572
  %31 = load float, float* %cost.i, align 4, !dbg !8573
  %add18.i = fadd float %31, %mul17.i, !dbg !8573
  store float %add18.i, float* %cost.i, align 4, !dbg !8573
  %32 = load i32, i32* %i.i, align 4, !dbg !8574
  %inc.i = add nsw i32 %32, 1, !dbg !8574
  store i32 %inc.i, i32* %i.i, align 4, !dbg !8574
  br label %for.cond.i, !dbg !8575, !llvm.loop !4143

for.end.i:                                        ; preds = %for.cond.i
  %33 = load i32*, i32** %bits.addr.i, align 8, !dbg !8576
  %tobool19.i = icmp ne i32* %33, null, !dbg !8576
  br i1 %tobool19.i, label %if.then20.i, label %if.end.i, !dbg !8577

if.then20.i:                                      ; preds = %for.end.i
  %34 = load i32*, i32** %bits.addr.i, align 8, !dbg !8578
  store i32 0, i32* %34, align 4, !dbg !8579
  br label %if.end.i, !dbg !8580

if.end.i:                                         ; preds = %if.then20.i, %for.end.i
  %35 = load float*, float** %energy.addr.i, align 8, !dbg !8581
  %tobool21.i = icmp ne float* %35, null, !dbg !8581
  br i1 %tobool21.i, label %if.then22.i, label %if.end23.i, !dbg !8582

if.then22.i:                                      ; preds = %if.end.i
  %36 = load float, float* %qenergy.i, align 4, !dbg !8583
  %37 = load float*, float** %energy.addr.i, align 8, !dbg !8584
  store float %36, float* %37, align 4, !dbg !8585
  br label %if.end23.i, !dbg !8586

if.end23.i:                                       ; preds = %if.then22.i, %if.end.i
  %38 = load float*, float** %out.addr.i, align 8, !dbg !8587
  %tobool24.i = icmp ne float* %38, null, !dbg !8587
  br i1 %tobool24.i, label %if.then25.i, label %if.end41.i, !dbg !8588

if.then25.i:                                      ; preds = %if.end23.i
  store i32 0, i32* %i.i, align 4, !dbg !8589
  br label %for.cond26.i, !dbg !8590

for.cond26.i:                                     ; preds = %for.end37.i, %if.then25.i
  %39 = load i32, i32* %i.i, align 4, !dbg !8591
  %40 = load i32, i32* %size.addr.i, align 4, !dbg !8592
  %cmp27.i = icmp slt i32 %39, %40, !dbg !8593
  br i1 %cmp27.i, label %for.body28.i, label %for.end40.i, !dbg !8594

for.body28.i:                                     ; preds = %for.cond26.i
  store i32 0, i32* %j.i, align 4, !dbg !8595
  br label %for.cond29.i, !dbg !8596

for.cond29.i:                                     ; preds = %for.body31.i, %for.body28.i
  %41 = load i32, i32* %j.i, align 4, !dbg !8597
  %42 = load i32, i32* %dim.i, align 4, !dbg !8598
  %cmp30.i = icmp slt i32 %41, %42, !dbg !8599
  br i1 %cmp30.i, label %for.body31.i, label %for.end37.i, !dbg !8600

for.body31.i:                                     ; preds = %for.cond29.i
  %43 = load i32, i32* %i.i, align 4, !dbg !8601
  %44 = load i32, i32* %j.i, align 4, !dbg !8602
  %add32.i = add nsw i32 %43, %44, !dbg !8603
  %idxprom33.i = sext i32 %add32.i to i64, !dbg !8604
  %45 = load float*, float** %out.addr.i, align 8, !dbg !8604
  %arrayidx34.i = getelementptr inbounds float, float* %45, i64 %idxprom33.i, !dbg !8604
  store float 0.000000e+00, float* %arrayidx34.i, align 4, !dbg !8605
  %46 = load i32, i32* %j.i, align 4, !dbg !8606
  %inc36.i = add nsw i32 %46, 1, !dbg !8606
  store i32 %inc36.i, i32* %j.i, align 4, !dbg !8606
  br label %for.cond29.i, !dbg !8607, !llvm.loop !4188

for.end37.i:                                      ; preds = %for.cond29.i
  %47 = load i32, i32* %dim.i, align 4, !dbg !8608
  %48 = load i32, i32* %i.i, align 4, !dbg !8609
  %add39.i = add nsw i32 %48, %47, !dbg !8609
  store i32 %add39.i, i32* %i.i, align 4, !dbg !8609
  br label %for.cond26.i, !dbg !8610, !llvm.loop !4194

for.end40.i:                                      ; preds = %for.cond26.i
  br label %if.end41.i, !dbg !8611

if.end41.i:                                       ; preds = %for.end40.i, %if.end23.i
  %49 = load float, float* %cost.i, align 4, !dbg !8612
  %50 = load float, float* %lambda.addr.i, align 4, !dbg !8613
  %mul42.i = fmul float %49, %50, !dbg !8614
  store float %mul42.i, float* %retval.i, align 4, !dbg !8615
  br label %quantize_and_encode_band_cost_template.exit, !dbg !8615

if.end43.i:                                       ; preds = %lor.lhs.false11.i
  %51 = load float*, float** %scaled.addr.i, align 8, !dbg !8616
  %tobool44.i = icmp ne float* %51, null, !dbg !8616
  br i1 %tobool44.i, label %if.end48.i, label %if.then45.i, !dbg !8617

if.then45.i:                                      ; preds = %if.end43.i
  %52 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !8618
  %abs_pow34.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %52, i32 0, i32 32, !dbg !8619
  %53 = load void (float*, float*, i32)*, void (float*, float*, i32)** %abs_pow34.i, align 8, !dbg !8619
  %54 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !8620
  %scoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %54, i32 0, i32 29, !dbg !8621
  %arraydecay.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs.i, i32 0, i32 0, !dbg !8620
  %55 = load float*, float** %in.addr.i, align 8, !dbg !8622
  %56 = load i32, i32* %size.addr.i, align 4, !dbg !8623
  call void %53(float* %arraydecay.i, float* %55, i32 %56) #8, !dbg !8618
  %57 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !8624
  %scoefs46.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %57, i32 0, i32 29, !dbg !8625
  %arraydecay47.i = getelementptr inbounds [1024 x float], [1024 x float]* %scoefs46.i, i32 0, i32 0, !dbg !8624
  store float* %arraydecay47.i, float** %scaled.addr.i, align 8, !dbg !8626
  br label %if.end48.i, !dbg !8627

if.end48.i:                                       ; preds = %if.then45.i, %if.end43.i
  %58 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !8628
  %quant_bands.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %58, i32 0, i32 33, !dbg !8629
  %59 = load void (i32*, float*, float*, i32, i32, i32, float, float)*, void (i32*, float*, float*, i32, i32, i32, float, float)** %quant_bands.i, align 16, !dbg !8629
  %60 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !8630
  %qcoefs.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %60, i32 0, i32 28, !dbg !8631
  %arraydecay49.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs.i, i32 0, i32 0, !dbg !8630
  %61 = load float*, float** %in.addr.i, align 8, !dbg !8632
  %62 = load float*, float** %scaled.addr.i, align 8, !dbg !8633
  %63 = load i32, i32* %size.addr.i, align 4, !dbg !8634
  %64 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !8635
  %tobool50.i = icmp ne i32 %64, 0, !dbg !8636
  %lnot.i = xor i1 %tobool50.i, true, !dbg !8636
  %lnot.ext.i = zext i1 %lnot.i to i32, !dbg !8636
  %65 = load i32, i32* %cb.addr.i, align 4, !dbg !8637
  %idxprom51.i = sext i32 %65 to i64, !dbg !8638
  %arrayidx52.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom51.i, !dbg !8638
  %66 = load i8, i8* %arrayidx52.i, align 1, !dbg !8638
  %conv.i = zext i8 %66 to i32, !dbg !8638
  %67 = load float, float* %Q34.i, align 4, !dbg !8639
  %68 = load float, float* %ROUNDING.addr.i, align 4, !dbg !8640
  call void %59(i32* %arraydecay49.i, float* %61, float* %62, i32 %63, i32 %lnot.ext.i, i32 %conv.i, float %67, float %68) #8, !dbg !8628
  %69 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !8641
  %tobool53.i = icmp ne i32 %69, 0, !dbg !8641
  br i1 %tobool53.i, label %if.then54.i, label %if.else.i, !dbg !8642

if.then54.i:                                      ; preds = %if.end48.i
  store i32 0, i32* %off.i, align 4, !dbg !8643
  br label %if.end58.i, !dbg !8644

if.else.i:                                        ; preds = %if.end48.i
  %70 = load i32, i32* %cb.addr.i, align 4, !dbg !8645
  %idxprom55.i = sext i32 %70 to i64, !dbg !8646
  %arrayidx56.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_maxval, i64 0, i64 %idxprom55.i, !dbg !8646
  %71 = load i8, i8* %arrayidx56.i, align 1, !dbg !8646
  %conv57.i = zext i8 %71 to i32, !dbg !8646
  store i32 %conv57.i, i32* %off.i, align 4, !dbg !8647
  br label %if.end58.i, !dbg !8539

if.end58.i:                                       ; preds = %if.else.i, %if.then54.i
  store i32 0, i32* %i.i, align 4, !dbg !8648
  br label %for.cond59.i, !dbg !8649

for.cond59.i:                                     ; preds = %if.end271.i, %if.end58.i
  %72 = load i32, i32* %i.i, align 4, !dbg !8650
  %73 = load i32, i32* %size.addr.i, align 4, !dbg !8651
  %cmp60.i = icmp slt i32 %72, %73, !dbg !8652
  br i1 %cmp60.i, label %for.body62.i, label %for.end274.i, !dbg !8653

for.body62.i:                                     ; preds = %for.cond59.i
  %74 = load %struct.AACEncContext*, %struct.AACEncContext** %s.addr.i, align 8, !dbg !8654
  %qcoefs63.i = getelementptr inbounds %struct.AACEncContext, %struct.AACEncContext* %74, i32 0, i32 28, !dbg !8655
  %arraydecay64.i = getelementptr inbounds [96 x i32], [96 x i32]* %qcoefs63.i, i32 0, i32 0, !dbg !8654
  %75 = load i32, i32* %i.i, align 4, !dbg !8656
  %idx.ext.i = sext i32 %75 to i64, !dbg !8657
  %add.ptr.i = getelementptr inbounds i32, i32* %arraydecay64.i, i64 %idx.ext.i, !dbg !8657
  store i32* %add.ptr.i, i32** %quants.i, align 8, !dbg !8494
  store i32 0, i32* %curidx.i, align 4, !dbg !8495
  store float 0.000000e+00, float* %rd.i, align 4, !dbg !8498
  store i32 0, i32* %j.i, align 4, !dbg !8658
  br label %for.cond65.i, !dbg !8659

for.cond65.i:                                     ; preds = %for.body68.i, %for.body62.i
  %76 = load i32, i32* %j.i, align 4, !dbg !8660
  %77 = load i32, i32* %dim.i, align 4, !dbg !8661
  %cmp66.i = icmp slt i32 %76, %77, !dbg !8662
  br i1 %cmp66.i, label %for.body68.i, label %for.end79.i, !dbg !8663

for.body68.i:                                     ; preds = %for.cond65.i
  %78 = load i32, i32* %cb.addr.i, align 4, !dbg !8664
  %idxprom69.i = sext i32 %78 to i64, !dbg !8665
  %arrayidx70.i = getelementptr inbounds [12 x i8], [12 x i8]* @aac_cb_range, i64 0, i64 %idxprom69.i, !dbg !8665
  %79 = load i8, i8* %arrayidx70.i, align 1, !dbg !8665
  %conv71.i = zext i8 %79 to i32, !dbg !8665
  %80 = load i32, i32* %curidx.i, align 4, !dbg !8666
  %mul72.i = mul nsw i32 %80, %conv71.i, !dbg !8666
  store i32 %mul72.i, i32* %curidx.i, align 4, !dbg !8666
  %81 = load i32, i32* %j.i, align 4, !dbg !8667
  %idxprom73.i = sext i32 %81 to i64, !dbg !8668
  %82 = load i32*, i32** %quants.i, align 8, !dbg !8668
  %arrayidx74.i = getelementptr inbounds i32, i32* %82, i64 %idxprom73.i, !dbg !8668
  %83 = load i32, i32* %arrayidx74.i, align 4, !dbg !8668
  %84 = load i32, i32* %off.i, align 4, !dbg !8669
  %add75.i = add nsw i32 %83, %84, !dbg !8670
  %85 = load i32, i32* %curidx.i, align 4, !dbg !8671
  %add76.i = add nsw i32 %85, %add75.i, !dbg !8671
  store i32 %add76.i, i32* %curidx.i, align 4, !dbg !8671
  %86 = load i32, i32* %j.i, align 4, !dbg !8672
  %inc78.i = add nsw i32 %86, 1, !dbg !8672
  store i32 %inc78.i, i32* %j.i, align 4, !dbg !8672
  br label %for.cond65.i, !dbg !8673, !llvm.loop !4270

for.end79.i:                                      ; preds = %for.cond65.i
  %87 = load i32, i32* %curidx.i, align 4, !dbg !8674
  %idxprom80.i = sext i32 %87 to i64, !dbg !8675
  %88 = load i32, i32* %cb.addr.i, align 4, !dbg !8676
  %sub81.i = sub nsw i32 %88, 1, !dbg !8677
  %idxprom82.i = sext i32 %sub81.i to i64, !dbg !8675
  %arrayidx83.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom82.i, !dbg !8675
  %89 = load i8*, i8** %arrayidx83.i, align 8, !dbg !8675
  %arrayidx84.i = getelementptr inbounds i8, i8* %89, i64 %idxprom80.i, !dbg !8675
  %90 = load i8, i8* %arrayidx84.i, align 1, !dbg !8675
  %conv85.i = zext i8 %90 to i32, !dbg !8675
  store i32 %conv85.i, i32* %curbits.i, align 4, !dbg !8678
  %91 = load i32, i32* %curidx.i, align 4, !dbg !8679
  %92 = load i32, i32* %dim.i, align 4, !dbg !8680
  %mul86.i = mul nsw i32 %91, %92, !dbg !8681
  %idxprom87.i = sext i32 %mul86.i to i64, !dbg !8682
  %93 = load i32, i32* %cb.addr.i, align 4, !dbg !8683
  %sub88.i = sub nsw i32 %93, 1, !dbg !8684
  %idxprom89.i = sext i32 %sub88.i to i64, !dbg !8682
  %arrayidx90.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom89.i, !dbg !8682
  %94 = load float*, float** %arrayidx90.i, align 8, !dbg !8682
  %arrayidx91.i = getelementptr inbounds float, float* %94, i64 %idxprom87.i, !dbg !8682
  store float* %arrayidx91.i, float** %vec.i, align 8, !dbg !8685
  %95 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !8686
  %tobool92.i = icmp ne i32 %95, 0, !dbg !8686
  br i1 %tobool92.i, label %if.then93.i, label %if.else158.i, !dbg !8687

if.then93.i:                                      ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !8688
  br label %for.cond94.i, !dbg !8689

for.cond94.i:                                     ; preds = %if.end150.i, %if.then93.i
  %96 = load i32, i32* %j.i, align 4, !dbg !8690
  %97 = load i32, i32* %dim.i, align 4, !dbg !8691
  %cmp95.i = icmp slt i32 %96, %97, !dbg !8692
  br i1 %cmp95.i, label %for.body97.i, label %for.end157.i, !dbg !8693

for.body97.i:                                     ; preds = %for.cond94.i
  %98 = load i32, i32* %i.i, align 4, !dbg !8694
  %99 = load i32, i32* %j.i, align 4, !dbg !8695
  %add98.i = add nsw i32 %98, %99, !dbg !8696
  %idxprom99.i = sext i32 %add98.i to i64, !dbg !8697
  %100 = load float*, float** %in.addr.i, align 8, !dbg !8697
  %arrayidx100.i = getelementptr inbounds float, float* %100, i64 %idxprom99.i, !dbg !8697
  %101 = load float, float* %arrayidx100.i, align 4, !dbg !8697
  %call.i = call float @fabsf(float %101) #1, !dbg !8698
  store float %call.i, float* %t.i, align 4, !dbg !8499
  %102 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !8699
  %tobool101.i = icmp ne i32 %102, 0, !dbg !8699
  br i1 %tobool101.i, label %land.lhs.true.i, label %if.else125.i, !dbg !8700

land.lhs.true.i:                                  ; preds = %for.body97.i
  %103 = load i32, i32* %j.i, align 4, !dbg !8701
  %idxprom102.i = sext i32 %103 to i64, !dbg !8702
  %104 = load float*, float** %vec.i, align 8, !dbg !8702
  %arrayidx103.i = getelementptr inbounds float, float* %104, i64 %idxprom102.i, !dbg !8702
  %105 = load float, float* %arrayidx103.i, align 4, !dbg !8702
  %cmp104.i = fcmp oeq float %105, 6.400000e+01, !dbg !8703
  br i1 %cmp104.i, label %if.then106.i, label %if.else125.i, !dbg !8704

if.then106.i:                                     ; preds = %land.lhs.true.i
  %106 = load float, float* %t.i, align 4, !dbg !8705
  %107 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !8706
  %cmp107.i = fcmp oge float %106, %107, !dbg !8707
  br i1 %cmp107.i, label %if.then109.i, label %if.else111.i, !dbg !8708

if.then109.i:                                     ; preds = %if.then106.i
  %108 = load float, float* %CLIPPED_ESCAPE.i, align 4, !dbg !8709
  store float %108, float* %quantized.i, align 4, !dbg !8710
  %109 = load i32, i32* %curbits.i, align 4, !dbg !8711
  %add110.i = add nsw i32 %109, 21, !dbg !8711
  store i32 %add110.i, i32* %curbits.i, align 4, !dbg !8711
  br label %if.end124.i, !dbg !8712

if.else111.i:                                     ; preds = %if.then106.i
  %110 = load float, float* %t.i, align 4, !dbg !8713
  %111 = load float, float* %Q.i, align 4, !dbg !8714
  %112 = load float, float* %ROUNDING.addr.i, align 4, !dbg !8715
  %call112.i = call i32 @quant(float %110, float %111, float %112) #8, !dbg !8716
  store i32 %call112.i, i32* %a.addr.i.i, align 4, !dbg !8717
  store i32 13, i32* %p.addr.i.i, align 4, !dbg !8717
  %113 = load i32, i32* %a.addr.i.i, align 4, !dbg !8718
  %114 = load i32, i32* %p.addr.i.i, align 4, !dbg !8719
  %shl.i.i = shl i32 1, %114, !dbg !8720
  %sub.i.i = sub nsw i32 %shl.i.i, 1, !dbg !8721
  %neg.i.i = xor i32 %sub.i.i, -1, !dbg !8722
  %and.i.i = and i32 %113, %neg.i.i, !dbg !8723
  %tobool.i.i = icmp ne i32 %and.i.i, 0, !dbg !8723
  br i1 %tobool.i.i, label %if.then.i.i, label %if.else.i.i, !dbg !8724

if.then.i.i:                                      ; preds = %if.else111.i
  %115 = load i32, i32* %a.addr.i.i, align 4, !dbg !8725
  %neg1.i.i = xor i32 %115, -1, !dbg !8726
  %shr.i.i = ashr i32 %neg1.i.i, 31, !dbg !8727
  %116 = load i32, i32* %p.addr.i.i, align 4, !dbg !8728
  %shl2.i.i = shl i32 1, %116, !dbg !8729
  %sub3.i.i = sub nsw i32 %shl2.i.i, 1, !dbg !8730
  %and4.i.i = and i32 %shr.i.i, %sub3.i.i, !dbg !8731
  store i32 %and4.i.i, i32* %retval.i.i, align 4, !dbg !8732
  br label %av_clip_uintp2_c.exit.i, !dbg !8732

if.else.i.i:                                      ; preds = %if.else111.i
  %117 = load i32, i32* %a.addr.i.i, align 4, !dbg !8733
  store i32 %117, i32* %retval.i.i, align 4, !dbg !8734
  br label %av_clip_uintp2_c.exit.i, !dbg !8734

av_clip_uintp2_c.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %118 = load i32, i32* %retval.i.i, align 4, !dbg !8735
  store i32 %118, i32* %c.i, align 4, !dbg !8501
  %119 = load i32, i32* %c.i, align 4, !dbg !8736
  %conv114.i = sitofp i32 %119 to float, !dbg !8736
  %120 = load i32, i32* %c.i, align 4, !dbg !8737
  %conv115.i = sitofp i32 %120 to float, !dbg !8737
  %call116.i = call float @cbrtf(float %conv115.i) #8, !dbg !8738
  %mul117.i = fmul float %conv114.i, %call116.i, !dbg !8739
  %121 = load float, float* %IQ.i, align 4, !dbg !8740
  %mul118.i = fmul float %mul117.i, %121, !dbg !8741
  store float %mul118.i, float* %quantized.i, align 4, !dbg !8742
  %122 = load i32, i32* %c.i, align 4, !dbg !8743
  %or.i = or i32 %122, 1, !dbg !8744
  %123 = call i32 @llvm.ctlz.i32(i32 %or.i, i1 true) #8, !dbg !8745
  %sub119.i = sub nsw i32 31, %123, !dbg !8746
  %mul120.i = mul nsw i32 %sub119.i, 2, !dbg !8747
  %sub121.i = sub nsw i32 %mul120.i, 4, !dbg !8748
  %add122.i = add nsw i32 %sub121.i, 1, !dbg !8749
  %124 = load i32, i32* %curbits.i, align 4, !dbg !8750
  %add123.i = add nsw i32 %124, %add122.i, !dbg !8750
  store i32 %add123.i, i32* %curbits.i, align 4, !dbg !8750
  br label %if.end124.i, !dbg !8539

if.end124.i:                                      ; preds = %av_clip_uintp2_c.exit.i, %if.then109.i
  br label %if.end129.i, !dbg !8751

if.else125.i:                                     ; preds = %land.lhs.true.i, %for.body97.i
  %125 = load i32, i32* %j.i, align 4, !dbg !8752
  %idxprom126.i = sext i32 %125 to i64, !dbg !8753
  %126 = load float*, float** %vec.i, align 8, !dbg !8753
  %arrayidx127.i = getelementptr inbounds float, float* %126, i64 %idxprom126.i, !dbg !8753
  %127 = load float, float* %arrayidx127.i, align 4, !dbg !8753
  %128 = load float, float* %IQ.i, align 4, !dbg !8754
  %mul128.i = fmul float %127, %128, !dbg !8755
  store float %mul128.i, float* %quantized.i, align 4, !dbg !8756
  br label %if.end129.i, !dbg !8539

if.end129.i:                                      ; preds = %if.else125.i, %if.end124.i
  %129 = load float, float* %t.i, align 4, !dbg !8757
  %130 = load float, float* %quantized.i, align 4, !dbg !8758
  %sub130.i = fsub float %129, %130, !dbg !8759
  store float %sub130.i, float* %di.i, align 4, !dbg !8760
  %131 = load float*, float** %out.addr.i, align 8, !dbg !8761
  %tobool131.i = icmp ne float* %131, null, !dbg !8761
  br i1 %tobool131.i, label %if.then132.i, label %if.end143.i, !dbg !8762

if.then132.i:                                     ; preds = %if.end129.i
  %132 = load i32, i32* %i.i, align 4, !dbg !8763
  %133 = load i32, i32* %j.i, align 4, !dbg !8764
  %add133.i = add nsw i32 %132, %133, !dbg !8765
  %idxprom134.i = sext i32 %add133.i to i64, !dbg !8766
  %134 = load float*, float** %in.addr.i, align 8, !dbg !8766
  %arrayidx135.i = getelementptr inbounds float, float* %134, i64 %idxprom134.i, !dbg !8766
  %135 = load float, float* %arrayidx135.i, align 4, !dbg !8766
  %cmp136.i = fcmp oge float %135, 0.000000e+00, !dbg !8767
  br i1 %cmp136.i, label %cond.true.i, label %cond.false.i, !dbg !8766

cond.true.i:                                      ; preds = %if.then132.i
  %136 = load float, float* %quantized.i, align 4, !dbg !8768
  br label %cond.end.i, !dbg !8769

cond.false.i:                                     ; preds = %if.then132.i
  %137 = load float, float* %quantized.i, align 4, !dbg !8770
  %sub138.i = fsub float -0.000000e+00, %137, !dbg !8771
  br label %cond.end.i, !dbg !8772

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond139.i = phi float [ %136, %cond.true.i ], [ %sub138.i, %cond.false.i ], !dbg !8773
  %138 = load i32, i32* %i.i, align 4, !dbg !8774
  %139 = load i32, i32* %j.i, align 4, !dbg !8775
  %add140.i = add nsw i32 %138, %139, !dbg !8776
  %idxprom141.i = sext i32 %add140.i to i64, !dbg !8777
  %140 = load float*, float** %out.addr.i, align 8, !dbg !8777
  %arrayidx142.i = getelementptr inbounds float, float* %140, i64 %idxprom141.i, !dbg !8777
  store float %cond139.i, float* %arrayidx142.i, align 4, !dbg !8778
  br label %if.end143.i, !dbg !8777

if.end143.i:                                      ; preds = %cond.end.i, %if.end129.i
  %141 = load i32, i32* %j.i, align 4, !dbg !8779
  %idxprom144.i = sext i32 %141 to i64, !dbg !8780
  %142 = load float*, float** %vec.i, align 8, !dbg !8780
  %arrayidx145.i = getelementptr inbounds float, float* %142, i64 %idxprom144.i, !dbg !8780
  %143 = load float, float* %arrayidx145.i, align 4, !dbg !8780
  %cmp146.i = fcmp une float %143, 0.000000e+00, !dbg !8781
  br i1 %cmp146.i, label %if.then148.i, label %if.end150.i, !dbg !8782

if.then148.i:                                     ; preds = %if.end143.i
  %144 = load i32, i32* %curbits.i, align 4, !dbg !8783
  %inc149.i = add nsw i32 %144, 1, !dbg !8783
  store i32 %inc149.i, i32* %curbits.i, align 4, !dbg !8783
  br label %if.end150.i, !dbg !8784

if.end150.i:                                      ; preds = %if.then148.i, %if.end143.i
  %145 = load float, float* %quantized.i, align 4, !dbg !8785
  %146 = load float, float* %quantized.i, align 4, !dbg !8786
  %mul151.i = fmul float %145, %146, !dbg !8787
  %147 = load float, float* %qenergy.i, align 4, !dbg !8788
  %add152.i = fadd float %147, %mul151.i, !dbg !8788
  store float %add152.i, float* %qenergy.i, align 4, !dbg !8788
  %148 = load float, float* %di.i, align 4, !dbg !8789
  %149 = load float, float* %di.i, align 4, !dbg !8790
  %mul153.i = fmul float %148, %149, !dbg !8791
  %150 = load float, float* %rd.i, align 4, !dbg !8792
  %add154.i = fadd float %150, %mul153.i, !dbg !8792
  store float %add154.i, float* %rd.i, align 4, !dbg !8792
  %151 = load i32, i32* %j.i, align 4, !dbg !8793
  %inc156.i = add nsw i32 %151, 1, !dbg !8793
  store i32 %inc156.i, i32* %j.i, align 4, !dbg !8793
  br label %for.cond94.i, !dbg !8794, !llvm.loop !4405

for.end157.i:                                     ; preds = %for.cond94.i
  br label %if.end187.i, !dbg !8795

if.else158.i:                                     ; preds = %for.end79.i
  store i32 0, i32* %j.i, align 4, !dbg !8796
  br label %for.cond159.i, !dbg !8797

for.cond159.i:                                    ; preds = %if.end173.i, %if.else158.i
  %152 = load i32, i32* %j.i, align 4, !dbg !8798
  %153 = load i32, i32* %dim.i, align 4, !dbg !8799
  %cmp160.i = icmp slt i32 %152, %153, !dbg !8800
  br i1 %cmp160.i, label %for.body162.i, label %for.end186.i, !dbg !8801

for.body162.i:                                    ; preds = %for.cond159.i
  %154 = load i32, i32* %j.i, align 4, !dbg !8802
  %idxprom163.i = sext i32 %154 to i64, !dbg !8803
  %155 = load float*, float** %vec.i, align 8, !dbg !8803
  %arrayidx164.i = getelementptr inbounds float, float* %155, i64 %idxprom163.i, !dbg !8803
  %156 = load float, float* %arrayidx164.i, align 4, !dbg !8803
  %157 = load float, float* %IQ.i, align 4, !dbg !8804
  %mul165.i = fmul float %156, %157, !dbg !8805
  store float %mul165.i, float* %quantized.i, align 4, !dbg !8806
  %158 = load float, float* %quantized.i, align 4, !dbg !8807
  %159 = load float, float* %quantized.i, align 4, !dbg !8808
  %mul166.i = fmul float %158, %159, !dbg !8809
  %160 = load float, float* %qenergy.i, align 4, !dbg !8810
  %add167.i = fadd float %160, %mul166.i, !dbg !8810
  store float %add167.i, float* %qenergy.i, align 4, !dbg !8810
  %161 = load float*, float** %out.addr.i, align 8, !dbg !8811
  %tobool168.i = icmp ne float* %161, null, !dbg !8811
  br i1 %tobool168.i, label %if.then169.i, label %if.end173.i, !dbg !8812

if.then169.i:                                     ; preds = %for.body162.i
  %162 = load float, float* %quantized.i, align 4, !dbg !8813
  %163 = load i32, i32* %i.i, align 4, !dbg !8814
  %164 = load i32, i32* %j.i, align 4, !dbg !8815
  %add170.i = add nsw i32 %163, %164, !dbg !8816
  %idxprom171.i = sext i32 %add170.i to i64, !dbg !8817
  %165 = load float*, float** %out.addr.i, align 8, !dbg !8817
  %arrayidx172.i = getelementptr inbounds float, float* %165, i64 %idxprom171.i, !dbg !8817
  store float %162, float* %arrayidx172.i, align 4, !dbg !8818
  br label %if.end173.i, !dbg !8817

if.end173.i:                                      ; preds = %if.then169.i, %for.body162.i
  %166 = load i32, i32* %i.i, align 4, !dbg !8819
  %167 = load i32, i32* %j.i, align 4, !dbg !8820
  %add174.i = add nsw i32 %166, %167, !dbg !8821
  %idxprom175.i = sext i32 %add174.i to i64, !dbg !8822
  %168 = load float*, float** %in.addr.i, align 8, !dbg !8822
  %arrayidx176.i = getelementptr inbounds float, float* %168, i64 %idxprom175.i, !dbg !8822
  %169 = load float, float* %arrayidx176.i, align 4, !dbg !8822
  %170 = load float, float* %quantized.i, align 4, !dbg !8823
  %sub177.i = fsub float %169, %170, !dbg !8824
  %171 = load i32, i32* %i.i, align 4, !dbg !8825
  %172 = load i32, i32* %j.i, align 4, !dbg !8826
  %add178.i = add nsw i32 %171, %172, !dbg !8827
  %idxprom179.i = sext i32 %add178.i to i64, !dbg !8828
  %173 = load float*, float** %in.addr.i, align 8, !dbg !8828
  %arrayidx180.i = getelementptr inbounds float, float* %173, i64 %idxprom179.i, !dbg !8828
  %174 = load float, float* %arrayidx180.i, align 4, !dbg !8828
  %175 = load float, float* %quantized.i, align 4, !dbg !8829
  %sub181.i = fsub float %174, %175, !dbg !8830
  %mul182.i = fmul float %sub177.i, %sub181.i, !dbg !8831
  %176 = load float, float* %rd.i, align 4, !dbg !8832
  %add183.i = fadd float %176, %mul182.i, !dbg !8832
  store float %add183.i, float* %rd.i, align 4, !dbg !8832
  %177 = load i32, i32* %j.i, align 4, !dbg !8833
  %inc185.i = add nsw i32 %177, 1, !dbg !8833
  store i32 %inc185.i, i32* %j.i, align 4, !dbg !8833
  br label %for.cond159.i, !dbg !8834, !llvm.loop !4454

for.end186.i:                                     ; preds = %for.cond159.i
  br label %if.end187.i, !dbg !8539

if.end187.i:                                      ; preds = %for.end186.i, %for.end157.i
  %178 = load float, float* %rd.i, align 4, !dbg !8835
  %179 = load float, float* %lambda.addr.i, align 4, !dbg !8836
  %mul188.i = fmul float %178, %179, !dbg !8837
  %180 = load i32, i32* %curbits.i, align 4, !dbg !8838
  %conv189.i = sitofp i32 %180 to float, !dbg !8838
  %add190.i = fadd float %mul188.i, %conv189.i, !dbg !8839
  %181 = load float, float* %cost.i, align 4, !dbg !8840
  %add191.i = fadd float %181, %add190.i, !dbg !8840
  store float %add191.i, float* %cost.i, align 4, !dbg !8840
  %182 = load i32, i32* %curbits.i, align 4, !dbg !8841
  %183 = load i32, i32* %resbits.i, align 4, !dbg !8842
  %add192.i = add nsw i32 %183, %182, !dbg !8842
  store i32 %add192.i, i32* %resbits.i, align 4, !dbg !8842
  %184 = load float, float* %cost.i, align 4, !dbg !8843
  %185 = load float, float* %uplim.addr.i, align 4, !dbg !8844
  %cmp193.i = fcmp oge float %184, %185, !dbg !8845
  br i1 %cmp193.i, label %if.then195.i, label %if.end196.i, !dbg !8846

if.then195.i:                                     ; preds = %if.end187.i
  %186 = load float, float* %uplim.addr.i, align 4, !dbg !8847
  store float %186, float* %retval.i, align 4, !dbg !8848
  br label %quantize_and_encode_band_cost_template.exit, !dbg !8848

if.end196.i:                                      ; preds = %if.end187.i
  %187 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !8849
  %tobool197.i = icmp ne %struct.PutBitContext* %187, null, !dbg !8849
  br i1 %tobool197.i, label %if.then198.i, label %if.end271.i, !dbg !8850

if.then198.i:                                     ; preds = %if.end196.i
  %188 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !8851
  %189 = load i32, i32* %curidx.i, align 4, !dbg !8852
  %idxprom199.i = sext i32 %189 to i64, !dbg !8853
  %190 = load i32, i32* %cb.addr.i, align 4, !dbg !8854
  %sub200.i = sub nsw i32 %190, 1, !dbg !8855
  %idxprom201.i = sext i32 %sub200.i to i64, !dbg !8853
  %arrayidx202.i = getelementptr inbounds [11 x i8*], [11 x i8*]* @ff_aac_spectral_bits, i64 0, i64 %idxprom201.i, !dbg !8853
  %191 = load i8*, i8** %arrayidx202.i, align 8, !dbg !8853
  %arrayidx203.i = getelementptr inbounds i8, i8* %191, i64 %idxprom199.i, !dbg !8853
  %192 = load i8, i8* %arrayidx203.i, align 1, !dbg !8853
  %conv204.i = zext i8 %192 to i32, !dbg !8853
  %193 = load i32, i32* %curidx.i, align 4, !dbg !8856
  %idxprom205.i = sext i32 %193 to i64, !dbg !8857
  %194 = load i32, i32* %cb.addr.i, align 4, !dbg !8858
  %sub206.i = sub nsw i32 %194, 1, !dbg !8859
  %idxprom207.i = sext i32 %sub206.i to i64, !dbg !8857
  %arrayidx208.i = getelementptr inbounds [11 x i16*], [11 x i16*]* @ff_aac_spectral_codes, i64 0, i64 %idxprom207.i, !dbg !8857
  %195 = load i16*, i16** %arrayidx208.i, align 8, !dbg !8857
  %arrayidx209.i = getelementptr inbounds i16, i16* %195, i64 %idxprom205.i, !dbg !8857
  %196 = load i16, i16* %arrayidx209.i, align 2, !dbg !8857
  %conv210.i = zext i16 %196 to i32, !dbg !8857
  call void @put_bits(%struct.PutBitContext* %188, i32 %conv204.i, i32 %conv210.i) #8, !dbg !8860
  %197 = load i32, i32* %BT_UNSIGNED.addr.i, align 4, !dbg !8861
  %tobool211.i = icmp ne i32 %197, 0, !dbg !8861
  br i1 %tobool211.i, label %if.then212.i, label %if.end236.i, !dbg !8862

if.then212.i:                                     ; preds = %if.then198.i
  store i32 0, i32* %j.i, align 4, !dbg !8863
  br label %for.cond213.i, !dbg !8864

for.cond213.i:                                    ; preds = %if.end232.i, %if.then212.i
  %198 = load i32, i32* %j.i, align 4, !dbg !8865
  %199 = load i32, i32* %dim.i, align 4, !dbg !8866
  %cmp214.i = icmp slt i32 %198, %199, !dbg !8867
  br i1 %cmp214.i, label %for.body216.i, label %for.end235.i, !dbg !8868

for.body216.i:                                    ; preds = %for.cond213.i
  %200 = load i32, i32* %curidx.i, align 4, !dbg !8869
  %201 = load i32, i32* %dim.i, align 4, !dbg !8870
  %mul217.i = mul nsw i32 %200, %201, !dbg !8871
  %202 = load i32, i32* %j.i, align 4, !dbg !8872
  %add218.i = add nsw i32 %mul217.i, %202, !dbg !8873
  %idxprom219.i = sext i32 %add218.i to i64, !dbg !8874
  %203 = load i32, i32* %cb.addr.i, align 4, !dbg !8875
  %sub220.i = sub nsw i32 %203, 1, !dbg !8876
  %idxprom221.i = sext i32 %sub220.i to i64, !dbg !8874
  %arrayidx222.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom221.i, !dbg !8874
  %204 = load float*, float** %arrayidx222.i, align 8, !dbg !8874
  %arrayidx223.i = getelementptr inbounds float, float* %204, i64 %idxprom219.i, !dbg !8874
  %205 = load float, float* %arrayidx223.i, align 4, !dbg !8874
  %cmp224.i = fcmp une float %205, 0.000000e+00, !dbg !8877
  br i1 %cmp224.i, label %if.then226.i, label %if.end232.i, !dbg !8878

if.then226.i:                                     ; preds = %for.body216.i
  %206 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !8879
  %207 = load i32, i32* %i.i, align 4, !dbg !8880
  %208 = load i32, i32* %j.i, align 4, !dbg !8881
  %add227.i = add nsw i32 %207, %208, !dbg !8882
  %idxprom228.i = sext i32 %add227.i to i64, !dbg !8883
  %209 = load float*, float** %in.addr.i, align 8, !dbg !8883
  %arrayidx229.i = getelementptr inbounds float, float* %209, i64 %idxprom228.i, !dbg !8883
  %210 = load float, float* %arrayidx229.i, align 4, !dbg !8883
  %cmp230.i = fcmp olt float %210, 0.000000e+00, !dbg !8884
  %conv231.i = zext i1 %cmp230.i to i32, !dbg !8884
  call void @put_bits(%struct.PutBitContext* %206, i32 1, i32 %conv231.i) #8, !dbg !8885
  br label %if.end232.i, !dbg !8885

if.end232.i:                                      ; preds = %if.then226.i, %for.body216.i
  %211 = load i32, i32* %j.i, align 4, !dbg !8886
  %inc234.i = add nsw i32 %211, 1, !dbg !8886
  store i32 %inc234.i, i32* %j.i, align 4, !dbg !8886
  br label %for.cond213.i, !dbg !8887, !llvm.loop !4516

for.end235.i:                                     ; preds = %for.cond213.i
  br label %if.end236.i, !dbg !8888

if.end236.i:                                      ; preds = %for.end235.i, %if.then198.i
  %212 = load i32, i32* %BT_ESC.addr.i, align 4, !dbg !8889
  %tobool237.i = icmp ne i32 %212, 0, !dbg !8889
  br i1 %tobool237.i, label %if.then238.i, label %if.end270.i, !dbg !8890

if.then238.i:                                     ; preds = %if.end236.i
  store i32 0, i32* %j.i, align 4, !dbg !8891
  br label %for.cond239.i, !dbg !8892

for.cond239.i:                                    ; preds = %if.end266.i, %if.then238.i
  %213 = load i32, i32* %j.i, align 4, !dbg !8893
  %cmp240.i = icmp slt i32 %213, 2, !dbg !8894
  br i1 %cmp240.i, label %for.body242.i, label %for.end269.i, !dbg !8895

for.body242.i:                                    ; preds = %for.cond239.i
  %214 = load i32, i32* %curidx.i, align 4, !dbg !8896
  %mul243.i = mul nsw i32 %214, 2, !dbg !8897
  %215 = load i32, i32* %j.i, align 4, !dbg !8898
  %add244.i = add nsw i32 %mul243.i, %215, !dbg !8899
  %idxprom245.i = sext i32 %add244.i to i64, !dbg !8900
  %216 = load i32, i32* %cb.addr.i, align 4, !dbg !8901
  %sub246.i = sub nsw i32 %216, 1, !dbg !8902
  %idxprom247.i = sext i32 %sub246.i to i64, !dbg !8900
  %arrayidx248.i = getelementptr inbounds [0 x float*], [0 x float*]* @ff_aac_codebook_vectors, i64 0, i64 %idxprom247.i, !dbg !8900
  %217 = load float*, float** %arrayidx248.i, align 8, !dbg !8900
  %arrayidx249.i = getelementptr inbounds float, float* %217, i64 %idxprom245.i, !dbg !8900
  %218 = load float, float* %arrayidx249.i, align 4, !dbg !8900
  %cmp250.i = fcmp oeq float %218, 6.400000e+01, !dbg !8903
  br i1 %cmp250.i, label %if.then252.i, label %if.end266.i, !dbg !8904

if.then252.i:                                     ; preds = %for.body242.i
  %219 = load i32, i32* %i.i, align 4, !dbg !8905
  %220 = load i32, i32* %j.i, align 4, !dbg !8906
  %add253.i = add nsw i32 %219, %220, !dbg !8907
  %idxprom254.i = sext i32 %add253.i to i64, !dbg !8908
  %221 = load float*, float** %in.addr.i, align 8, !dbg !8908
  %arrayidx255.i = getelementptr inbounds float, float* %221, i64 %idxprom254.i, !dbg !8908
  %222 = load float, float* %arrayidx255.i, align 4, !dbg !8908
  %call256.i = call float @fabsf(float %222) #1, !dbg !8909
  %223 = load float, float* %Q.i, align 4, !dbg !8910
  %224 = load float, float* %ROUNDING.addr.i, align 4, !dbg !8911
  %call257.i = call i32 @quant(float %call256.i, float %223, float %224) #8, !dbg !8912
  store i32 %call257.i, i32* %a.addr.i282.i, align 4, !dbg !8913
  store i32 13, i32* %p.addr.i283.i, align 4, !dbg !8913
  %225 = load i32, i32* %a.addr.i282.i, align 4, !dbg !8914
  %226 = load i32, i32* %p.addr.i283.i, align 4, !dbg !8915
  %shl.i284.i = shl i32 1, %226, !dbg !8916
  %sub.i285.i = sub nsw i32 %shl.i284.i, 1, !dbg !8917
  %neg.i286.i = xor i32 %sub.i285.i, -1, !dbg !8918
  %and.i287.i = and i32 %225, %neg.i286.i, !dbg !8919
  %tobool.i288.i = icmp ne i32 %and.i287.i, 0, !dbg !8919
  br i1 %tobool.i288.i, label %if.then.i294.i, label %if.else.i295.i, !dbg !8920

if.then.i294.i:                                   ; preds = %if.then252.i
  %227 = load i32, i32* %a.addr.i282.i, align 4, !dbg !8921
  %neg1.i289.i = xor i32 %227, -1, !dbg !8922
  %shr.i290.i = ashr i32 %neg1.i289.i, 31, !dbg !8923
  %228 = load i32, i32* %p.addr.i283.i, align 4, !dbg !8924
  %shl2.i291.i = shl i32 1, %228, !dbg !8925
  %sub3.i292.i = sub nsw i32 %shl2.i291.i, 1, !dbg !8926
  %and4.i293.i = and i32 %shr.i290.i, %sub3.i292.i, !dbg !8927
  store i32 %and4.i293.i, i32* %retval.i281.i, align 4, !dbg !8928
  br label %av_clip_uintp2_c.exit296.i, !dbg !8928

if.else.i295.i:                                   ; preds = %if.then252.i
  %229 = load i32, i32* %a.addr.i282.i, align 4, !dbg !8929
  store i32 %229, i32* %retval.i281.i, align 4, !dbg !8930
  br label %av_clip_uintp2_c.exit296.i, !dbg !8930

av_clip_uintp2_c.exit296.i:                       ; preds = %if.else.i295.i, %if.then.i294.i
  %230 = load i32, i32* %retval.i281.i, align 4, !dbg !8931
  store i32 %230, i32* %coef.i, align 4, !dbg !8502
  %231 = load i32, i32* %coef.i, align 4, !dbg !8932
  %or259.i = or i32 %231, 1, !dbg !8933
  %232 = call i32 @llvm.ctlz.i32(i32 %or259.i, i1 true) #8, !dbg !8934
  %sub260.i = sub nsw i32 31, %232, !dbg !8935
  store i32 %sub260.i, i32* %len.i, align 4, !dbg !8503
  %233 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !8936
  %234 = load i32, i32* %len.i, align 4, !dbg !8937
  %sub261.i = sub nsw i32 %234, 4, !dbg !8938
  %add262.i = add nsw i32 %sub261.i, 1, !dbg !8939
  %235 = load i32, i32* %len.i, align 4, !dbg !8940
  %sub263.i = sub nsw i32 %235, 4, !dbg !8941
  %add264.i = add nsw i32 %sub263.i, 1, !dbg !8942
  %shl.i = shl i32 1, %add264.i, !dbg !8943
  %sub265.i = sub nsw i32 %shl.i, 2, !dbg !8944
  call void @put_bits(%struct.PutBitContext* %233, i32 %add262.i, i32 %sub265.i) #8, !dbg !8945
  %236 = load %struct.PutBitContext*, %struct.PutBitContext** %pb.addr.i, align 8, !dbg !8946
  %237 = load i32, i32* %len.i, align 4, !dbg !8947
  %238 = load i32, i32* %coef.i, align 4, !dbg !8948
  call void @put_sbits(%struct.PutBitContext* %236, i32 %237, i32 %238) #8, !dbg !8949
  br label %if.end266.i, !dbg !8950

if.end266.i:                                      ; preds = %av_clip_uintp2_c.exit296.i, %for.body242.i
  %239 = load i32, i32* %j.i, align 4, !dbg !8951
  %inc268.i = add nsw i32 %239, 1, !dbg !8951
  store i32 %inc268.i, i32* %j.i, align 4, !dbg !8951
  br label %for.cond239.i, !dbg !8952, !llvm.loop !4587

for.end269.i:                                     ; preds = %for.cond239.i
  br label %if.end270.i, !dbg !8953

if.end270.i:                                      ; preds = %for.end269.i, %if.end236.i
  br label %if.end271.i, !dbg !8954

if.end271.i:                                      ; preds = %if.end270.i, %if.end196.i
  %240 = load i32, i32* %dim.i, align 4, !dbg !8955
  %241 = load i32, i32* %i.i, align 4, !dbg !8956
  %add273.i = add nsw i32 %241, %240, !dbg !8956
  store i32 %add273.i, i32* %i.i, align 4, !dbg !8956
  br label %for.cond59.i, !dbg !8957, !llvm.loop !4595

for.end274.i:                                     ; preds = %for.cond59.i
  %242 = load i32*, i32** %bits.addr.i, align 8, !dbg !8958
  %tobool275.i = icmp ne i32* %242, null, !dbg !8958
  br i1 %tobool275.i, label %if.then276.i, label %if.end277.i, !dbg !8959

if.then276.i:                                     ; preds = %for.end274.i
  %243 = load i32, i32* %resbits.i, align 4, !dbg !8960
  %244 = load i32*, i32** %bits.addr.i, align 8, !dbg !8961
  store i32 %243, i32* %244, align 4, !dbg !8962
  br label %if.end277.i, !dbg !8963

if.end277.i:                                      ; preds = %if.then276.i, %for.end274.i
  %245 = load float*, float** %energy.addr.i, align 8, !dbg !8964
  %tobool278.i = icmp ne float* %245, null, !dbg !8964
  br i1 %tobool278.i, label %if.then279.i, label %if.end280.i, !dbg !8965

if.then279.i:                                     ; preds = %if.end277.i
  %246 = load float, float* %qenergy.i, align 4, !dbg !8966
  %247 = load float*, float** %energy.addr.i, align 8, !dbg !8967
  store float %246, float* %247, align 4, !dbg !8968
  br label %if.end280.i, !dbg !8969

if.end280.i:                                      ; preds = %if.then279.i, %if.end277.i
  %248 = load float, float* %cost.i, align 4, !dbg !8970
  store float %248, float* %retval.i, align 4, !dbg !8971
  br label %quantize_and_encode_band_cost_template.exit, !dbg !8971

quantize_and_encode_band_cost_template.exit:      ; preds = %if.end41.i, %if.then195.i, %if.end280.i
  %249 = load float, float* %retval.i, align 4, !dbg !8972
  ret float %249, !dbg !8973
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2743, !2744}
!llvm.ident = !{!2745}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !944, globals: !954)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--aacenc_is.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !24, !30, !34, !43, !50, !59, !64, !74, !84, !544, !744, !761, !767, !797, !807, !831, !837, !855, !879, !898, !908, !916, !928, !937}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !25, line: 77, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!28 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!29 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !25, line: 83, size: 32, align: 32, elements: !31)
!31 = !{!32, !33}
!32 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!33 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FFLPCType", file: !35, line: 43, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/lpc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!36 = !{!37, !38, !39, !40, !41, !42}
!37 = !DIEnumerator(name: "FF_LPC_TYPE_DEFAULT", value: -1)
!38 = !DIEnumerator(name: "FF_LPC_TYPE_NONE", value: 0)
!39 = !DIEnumerator(name: "FF_LPC_TYPE_FIXED", value: 1)
!40 = !DIEnumerator(name: "FF_LPC_TYPE_LEVINSON", value: 2)
!41 = !DIEnumerator(name: "FF_LPC_TYPE_CHOLESKY", value: 3)
!42 = !DIEnumerator(name: "FF_LPC_TYPE_NB", value: 4)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "WindowSequence", file: !44, line: 75, size: 32, align: 32, elements: !45)
!44 = !DIFile(filename: "libavcodec/aac.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!45 = !{!46, !47, !48, !49}
!46 = !DIEnumerator(name: "ONLY_LONG_SEQUENCE", value: 0)
!47 = !DIEnumerator(name: "LONG_START_SEQUENCE", value: 1)
!48 = !DIEnumerator(name: "EIGHT_SHORT_SEQUENCE", value: 2)
!49 = !DIEnumerator(name: "LONG_STOP_SEQUENCE", value: 3)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BandType", file: !44, line: 82, size: 32, align: 32, elements: !51)
!51 = !{!52, !53, !54, !55, !56, !57, !58}
!52 = !DIEnumerator(name: "ZERO_BT", value: 0)
!53 = !DIEnumerator(name: "FIRST_PAIR_BT", value: 5)
!54 = !DIEnumerator(name: "ESC_BT", value: 11)
!55 = !DIEnumerator(name: "RESERVED_BT", value: 12)
!56 = !DIEnumerator(name: "NOISE_BT", value: 13)
!57 = !DIEnumerator(name: "INTENSITY_BT2", value: 14)
!58 = !DIEnumerator(name: "INTENSITY_BT", value: 15)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CouplingPoint", file: !44, line: 106, size: 32, align: 32, elements: !60)
!60 = !{!61, !62, !63}
!61 = !DIEnumerator(name: "BEFORE_TNS", value: 0)
!62 = !DIEnumerator(name: "BETWEEN_TNS_AND_IMDCT", value: 1)
!63 = !DIEnumerator(name: "AFTER_IMDCT", value: 3)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RawDataBlockType", file: !44, line: 55, size: 32, align: 32, elements: !65)
!65 = !{!66, !67, !68, !69, !70, !71, !72, !73}
!66 = !DIEnumerator(name: "TYPE_SCE", value: 0)
!67 = !DIEnumerator(name: "TYPE_CPE", value: 1)
!68 = !DIEnumerator(name: "TYPE_CCE", value: 2)
!69 = !DIEnumerator(name: "TYPE_LFE", value: 3)
!70 = !DIEnumerator(name: "TYPE_DSE", value: 4)
!71 = !DIEnumerator(name: "TYPE_PCE", value: 5)
!72 = !DIEnumerator(name: "TYPE_FIL", value: 6)
!73 = !DIEnumerator(name: "TYPE_END", value: 7)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !75, line: 199, size: 32, align: 32, elements: !76)
!75 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!76 = !{!77, !78, !79, !80, !81, !82, !83}
!77 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!78 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!79 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!80 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!81 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!82 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!83 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !85, line: 215, size: 32, align: 32, elements: !86)
!85 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!86 = !{!87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543}
!87 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!88 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!89 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!90 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!91 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!92 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!93 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!94 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!95 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!96 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!97 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!98 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!99 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!100 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!101 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!102 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!103 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!104 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!105 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!106 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!107 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!108 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!109 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!110 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!111 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!112 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!113 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!114 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!115 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!116 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!117 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!119 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!120 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!121 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!122 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!123 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!124 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!125 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!126 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!127 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!128 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!129 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!130 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!131 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!132 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!133 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!134 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!135 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!136 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!137 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!138 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!139 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!140 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!141 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!142 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!143 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!144 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!145 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!146 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!147 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!148 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!149 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!150 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!151 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!152 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!153 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!154 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!155 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!156 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!157 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!158 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!159 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!160 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!162 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!163 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!164 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!165 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!166 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!167 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!168 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!169 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!170 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!171 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!172 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!173 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!174 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!175 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!177 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!178 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!179 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!180 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!181 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!182 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!183 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!184 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!185 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!187 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!188 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!189 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!191 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!192 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!193 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!194 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!195 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!196 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!197 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!198 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!199 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!200 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!201 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!202 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!203 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!204 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!205 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!206 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!207 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!208 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!209 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!210 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!211 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!212 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!213 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!214 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!215 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!216 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!217 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!218 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!219 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!220 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!221 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!222 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!223 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!224 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!225 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!226 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!227 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!228 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!229 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!230 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!231 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!232 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!233 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!234 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!235 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!236 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!237 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!238 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!239 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!240 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!241 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!242 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!243 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!244 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!245 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!246 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!247 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!248 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!250 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!251 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!252 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!253 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!254 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!255 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!256 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!257 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!258 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!259 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!260 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!261 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!262 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!263 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!264 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!265 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!266 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!267 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!268 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!269 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!270 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!272 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!273 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!274 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!275 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!276 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!277 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!278 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!279 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!280 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!281 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!282 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!283 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!284 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!285 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!286 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!287 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!288 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!289 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!290 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!291 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!292 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!293 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!294 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!295 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!296 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!297 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!298 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!299 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!300 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!301 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!304 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!305 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!306 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!307 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!308 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!309 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!310 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!311 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!312 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!313 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!314 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!315 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!316 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!317 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!318 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!319 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!320 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!321 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!323 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!324 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!325 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!326 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!327 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!328 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!329 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!330 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!331 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!332 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!333 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!334 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!335 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!336 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!337 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!338 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!339 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!340 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!341 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!342 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!343 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!344 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!345 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!346 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!347 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!348 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!349 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!350 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!351 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!352 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!353 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!354 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!355 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!356 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!357 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!358 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!359 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!360 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!362 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!363 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!364 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!365 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!366 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!367 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!368 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!370 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!372 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!373 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!374 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!375 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!376 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!378 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!379 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!380 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!381 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!382 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!383 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!384 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!385 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!386 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!387 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!388 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!389 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!390 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!391 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!393 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!394 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!395 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!396 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!397 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!398 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!401 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!402 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!403 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!404 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!405 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!406 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!407 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!408 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!409 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!410 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!411 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!412 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!413 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!414 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!415 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!416 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!417 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!418 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!419 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!420 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!421 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!422 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!423 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!424 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!425 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!426 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!427 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!428 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!429 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!430 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!431 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!432 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!433 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!434 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!435 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!436 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!438 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!439 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!440 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!441 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!442 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!443 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!444 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!445 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!446 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!447 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!448 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!449 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!450 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!451 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!452 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!453 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!455 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!456 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!457 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!458 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!459 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!460 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!461 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!462 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!463 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!464 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!465 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!466 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!467 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!468 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!469 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!470 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!471 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!472 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!473 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!474 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!475 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!476 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!477 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!478 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!479 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!481 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!482 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!483 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!484 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!485 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!487 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!488 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!489 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!490 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!491 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!492 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!493 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!494 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!495 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!496 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!497 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!498 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!499 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!500 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!501 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!502 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!503 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!504 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!505 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!506 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!507 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!508 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!509 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!510 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!511 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!512 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!513 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!514 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!515 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!516 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!517 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!518 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!519 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!520 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!521 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!522 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!523 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!524 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!525 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!526 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!527 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!528 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!529 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!530 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!531 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!532 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!533 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!534 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!535 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!536 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!537 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!538 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!539 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!540 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!541 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!542 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!543 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!544 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !545, line: 64, size: 32, align: 32, elements: !546)
!545 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!546 = !{!547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743}
!547 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!550 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!551 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!553 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!554 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!555 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!556 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!557 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!558 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!559 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!560 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!561 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!563 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!564 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!565 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!566 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!567 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!568 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!569 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!570 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!571 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!572 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!573 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!574 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!575 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!576 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!580 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!581 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!582 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!583 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!584 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!585 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!586 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!587 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!588 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!589 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!590 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!591 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!592 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!593 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!594 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!595 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!602 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!603 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!604 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!605 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!606 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!608 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!609 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!617 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!618 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!619 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!620 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!622 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!623 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!624 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!625 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!626 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!627 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!628 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!629 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!630 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!631 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!638 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!639 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!640 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!641 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!643 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!644 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!645 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!646 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!647 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!648 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!650 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!651 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!652 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!653 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!654 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!655 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!656 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!657 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!658 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!659 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!660 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!661 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!662 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!663 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!664 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!668 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!670 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!671 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!672 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!673 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!674 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!675 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!676 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!677 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!678 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!679 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!680 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!681 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!682 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!683 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!684 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!685 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!686 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!687 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!689 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!690 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!691 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!693 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!694 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!695 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!696 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!697 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!698 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!699 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!700 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!701 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!702 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!703 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!704 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!705 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!706 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!707 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!708 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!709 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!710 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!711 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!712 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!713 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!714 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!715 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!716 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!717 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!718 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!719 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!720 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!721 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!722 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!723 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!724 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!725 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!726 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!727 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!728 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!729 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!730 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!731 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!732 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!733 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!734 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!735 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!736 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!737 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!738 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!739 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!740 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!741 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!742 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!743 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!744 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !745, line: 58, size: 32, align: 32, elements: !746)
!745 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!746 = !{!747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760}
!747 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!748 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!749 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!750 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!751 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!752 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!753 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!754 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!755 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!756 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!757 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!758 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!759 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!760 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!761 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !85, line: 3865, size: 32, align: 32, elements: !762)
!762 = !{!763, !764, !765, !766}
!763 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!764 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!765 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!766 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !85, line: 1175, size: 32, align: 32, elements: !768)
!768 = !{!769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796}
!769 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!770 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!771 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!772 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!773 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!774 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!775 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!776 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!777 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!778 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!779 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!780 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!781 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!782 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!783 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!784 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!785 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!786 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!787 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!788 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!789 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!790 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!791 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!792 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!793 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!794 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!795 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!796 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!797 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !75, line: 272, size: 32, align: 32, elements: !798)
!798 = !{!799, !800, !801, !802, !803, !804, !805, !806}
!799 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!800 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!801 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!802 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!803 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!804 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!805 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!806 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!807 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !808, line: 48, size: 32, align: 32, elements: !809)
!808 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!809 = !{!810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830}
!810 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!811 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!812 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!813 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!814 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!815 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!816 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!817 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!818 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!819 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!820 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!821 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!822 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!823 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!824 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!825 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!826 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!827 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!828 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!829 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!830 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!831 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !545, line: 516, size: 32, align: 32, elements: !832)
!832 = !{!833, !834, !835, !836}
!833 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!834 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!835 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!836 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!837 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !545, line: 440, size: 32, align: 32, elements: !838)
!838 = !{!839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854}
!839 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!840 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!841 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!842 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!843 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!844 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!845 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!846 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!847 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!848 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!849 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!850 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!851 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!852 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!853 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!854 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!855 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !545, line: 464, size: 32, align: 32, elements: !856)
!856 = !{!857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878}
!857 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!858 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!859 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!860 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!861 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!862 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!863 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!864 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!865 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!866 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!867 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!868 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!869 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!870 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!871 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!872 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!873 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!874 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!875 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!876 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!877 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!878 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!879 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !545, line: 493, size: 32, align: 32, elements: !880)
!880 = !{!881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897}
!881 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!882 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!883 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!884 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!885 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!886 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!887 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!888 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!889 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!890 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!891 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!892 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!893 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!894 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!895 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!896 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!897 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!898 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !545, line: 538, size: 32, align: 32, elements: !899)
!899 = !{!900, !901, !902, !903, !904, !905, !906, !907}
!900 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!901 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!902 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!903 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!904 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!905 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!906 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!907 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!908 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !85, line: 1534, size: 32, align: 32, elements: !909)
!909 = !{!910, !911, !912, !913, !914, !915}
!910 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!911 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!912 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!913 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!914 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!915 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!916 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !85, line: 810, size: 32, align: 32, elements: !917)
!917 = !{!918, !919, !920, !921, !922, !923, !924, !925, !926, !927}
!918 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!919 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!920 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!921 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!922 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!923 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!924 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!925 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!926 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!927 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!928 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !85, line: 798, size: 32, align: 32, elements: !929)
!929 = !{!930, !931, !932, !933, !934, !935, !936}
!930 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!931 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!932 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!933 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!934 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!935 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!936 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!937 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OCStatus", file: !44, line: 115, size: 32, align: 32, elements: !938)
!938 = !{!939, !940, !941, !942, !943}
!939 = !DIEnumerator(name: "OC_NONE", value: 0)
!940 = !DIEnumerator(name: "OC_TRIAL_PCE", value: 1)
!941 = !DIEnumerator(name: "OC_TRIAL_FRAME", value: 2)
!942 = !DIEnumerator(name: "OC_GLOBAL_HDR", value: 3)
!943 = !DIEnumerator(name: "OC_LOCKED", value: 4)
!944 = !{!945, !953}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64, align: 64)
!946 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !947, line: 221, size: 32, align: 8, elements: !948)
!947 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!948 = !{!949}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !946, file: !947, line: 221, baseType: !950, size: 32, align: 32)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !951, line: 51, baseType: !952)
!951 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!952 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!954 = !{!955, !962, !2737, !2741, !2742}
!955 = distinct !DIGlobalVariable(name: "aac_maxval_cb", scope: !0, file: !956, line: 128, type: !957, isLocal: true, isDefinition: true, variable: [14 x i8]* @aac_maxval_cb)
!956 = !DIFile(filename: "libavcodec/aacenctab.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 112, align: 8, elements: !960)
!958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !959)
!959 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!960 = !{!961}
!961 = !DISubrange(count: 14)
!962 = distinct !DIGlobalVariable(name: "quantize_and_encode_band_cost_rtz_arr", scope: !0, file: !963, line: 219, type: !964, isLocal: true, isDefinition: true, variable: [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*]* @quantize_and_encode_band_cost_rtz_arr)
!963 = !DIFile(filename: "libavcodec/aacenc_quantization.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !965, size: 1024, align: 64, elements: !1159)
!965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !966)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64, align: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!969, !970, !2645, !1103, !1102, !1103, !992, !992, !992, !1104, !1104, !1963, !1102}
!969 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACEncContext", file: !972, line: 376, size: 4539904, align: 256, elements: !973)
!972 = !DIFile(filename: "libavcodec/aacenc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!973 = !{!974, !1018, !1030, !1043, !1091, !1092, !1138, !1162, !1164, !1165, !1166, !1215, !1216, !1217, !1220, !1221, !2544, !2624, !2627, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2705, !2709, !2711, !2712, !2725, !2729, !2733}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !971, file: !972, line: 377, baseType: !975, size: 64, align: 64)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64, align: 64)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !978)
!978 = !{!979, !983, !987, !991, !993, !994, !995, !999, !1005, !1007, !1011}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !977, file: !4, line: 72, baseType: !980, size: 64, align: 64)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64, align: 64)
!981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!982 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !977, file: !4, line: 78, baseType: !984, size: 64, align: 64, offset: 64)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64, align: 64)
!985 = !DISubroutineType(types: !986)
!986 = !{!980, !953}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !977, file: !4, line: 85, baseType: !988, size: 64, align: 64, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !990)
!990 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !977, file: !4, line: 93, baseType: !992, size: 32, align: 32, offset: 192)
!992 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !977, file: !4, line: 99, baseType: !992, size: 32, align: 32, offset: 224)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !977, file: !4, line: 108, baseType: !992, size: 32, align: 32, offset: 256)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !977, file: !4, line: 113, baseType: !996, size: 64, align: 64, offset: 320)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64, align: 64)
!997 = !DISubroutineType(types: !998)
!998 = !{!953, !953, !953}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !977, file: !4, line: 123, baseType: !1000, size: 64, align: 64, offset: 384)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64, align: 64)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!1003, !1003}
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64, align: 64)
!1004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !977)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !977, file: !4, line: 130, baseType: !1006, size: 32, align: 32, offset: 448)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !977, file: !4, line: 136, baseType: !1008, size: 64, align: 64, offset: 512)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64, align: 64)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!1006, !953}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !977, file: !4, line: 142, baseType: !1012, size: 64, align: 64, offset: 576)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64, align: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!992, !1015, !953, !980, !992}
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64, align: 64)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64, align: 64)
!1017 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !971, file: !972, line: 378, baseType: !1019, size: 256, align: 32, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACEncOptions", file: !972, line: 52, baseType: !1020)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACEncOptions", file: !972, line: 43, size: 256, align: 32, elements: !1021)
!1021 = !{!1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "coder", scope: !1020, file: !972, line: 44, baseType: !992, size: 32, align: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "pns", scope: !1020, file: !972, line: 45, baseType: !992, size: 32, align: 32, offset: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "tns", scope: !1020, file: !972, line: 46, baseType: !992, size: 32, align: 32, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "ltp", scope: !1020, file: !972, line: 47, baseType: !992, size: 32, align: 32, offset: 96)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "pce", scope: !1020, file: !972, line: 48, baseType: !992, size: 32, align: 32, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !1020, file: !972, line: 49, baseType: !992, size: 32, align: 32, offset: 160)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "mid_side", scope: !1020, file: !972, line: 50, baseType: !992, size: 32, align: 32, offset: 192)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "intensity_stereo", scope: !1020, file: !972, line: 51, baseType: !992, size: 32, align: 32, offset: 224)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !971, file: !972, line: 379, baseType: !1031, size: 320, align: 64, offset: 320)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1032, line: 40, baseType: !1033)
!1032 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1032, line: 35, size: 320, align: 64, elements: !1034)
!1034 = !{!1035, !1036, !1037, !1040, !1041, !1042}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1033, file: !1032, line: 36, baseType: !950, size: 32, align: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1033, file: !1032, line: 37, baseType: !992, size: 32, align: 32, offset: 32)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1033, file: !1032, line: 38, baseType: !1038, size: 64, align: 64, offset: 64)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64, align: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !951, line: 48, baseType: !959)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1033, file: !1032, line: 38, baseType: !1038, size: 64, align: 64, offset: 128)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1033, file: !1032, line: 38, baseType: !1038, size: 64, align: 64, offset: 192)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1033, file: !1032, line: 39, baseType: !992, size: 32, align: 32, offset: 256)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "mdct1024", scope: !971, file: !972, line: 380, baseType: !1044, size: 896, align: 64, offset: 640)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !1045, line: 41, baseType: !1046)
!1045 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !25, line: 88, size: 896, align: 64, elements: !1047)
!1047 = !{!1048, !1049, !1050, !1054, !1062, !1063, !1064, !1066, !1067, !1072, !1073, !1079, !1080, !1081, !1087, !1088, !1089}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1046, file: !25, line: 89, baseType: !992, size: 32, align: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1046, file: !25, line: 90, baseType: !992, size: 32, align: 32, offset: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1046, file: !25, line: 91, baseType: !1051, size: 64, align: 64, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64, align: 64)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !951, line: 49, baseType: !1053)
!1053 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1046, file: !25, line: 92, baseType: !1055, size: 64, align: 64, offset: 128)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !1045, line: 39, baseType: !1057)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !1045, line: 37, size: 64, align: 32, elements: !1058)
!1058 = !{!1059, !1061}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !1057, file: !1045, line: 38, baseType: !1060, size: 32, align: 32)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !1045, line: 35, baseType: !969)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1057, file: !1045, line: 38, baseType: !1060, size: 32, align: 32, offset: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1046, file: !25, line: 93, baseType: !992, size: 32, align: 32, offset: 192)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1046, file: !25, line: 94, baseType: !992, size: 32, align: 32, offset: 224)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1046, file: !25, line: 96, baseType: !1065, size: 64, align: 64, offset: 256)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64, align: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1046, file: !25, line: 97, baseType: !1065, size: 64, align: 64, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1046, file: !25, line: 101, baseType: !1068, size: 64, align: 64, offset: 384)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64, align: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{null, !1071, !1055}
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64, align: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1046, file: !25, line: 106, baseType: !1068, size: 64, align: 64, offset: 448)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1046, file: !25, line: 107, baseType: !1074, size: 64, align: 64, offset: 512)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64, align: 64)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{null, !1071, !1065, !1077}
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64, align: 64)
!1078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1060)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1046, file: !25, line: 108, baseType: !1074, size: 64, align: 64, offset: 576)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1046, file: !25, line: 109, baseType: !1074, size: 64, align: 64, offset: 640)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1046, file: !25, line: 110, baseType: !1082, size: 64, align: 64, offset: 704)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64, align: 64)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{null, !1071, !1085, !1077}
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64, align: 64)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !25, line: 43, baseType: !969)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1046, file: !25, line: 111, baseType: !24, size: 32, align: 32, offset: 768)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1046, file: !25, line: 112, baseType: !30, size: 32, align: 32, offset: 800)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1046, file: !25, line: 113, baseType: !1090, size: 64, align: 64, offset: 832)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64, align: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "mdct128", scope: !971, file: !972, line: 381, baseType: !1044, size: 896, align: 64, offset: 1536)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !971, file: !972, line: 382, baseType: !1093, size: 64, align: 64, offset: 2432)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64, align: 64)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1095, line: 192, baseType: !1096)
!1095 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1095, line: 24, size: 704, align: 64, elements: !1097)
!1097 = !{!1098, !1105, !1109, !1117, !1118, !1119, !1123, !1124, !1125, !1130, !1134}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1096, file: !1095, line: 38, baseType: !1099, size: 64, align: 64)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64, align: 64)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{null, !1102, !1103, !1103, !992}
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64, align: 64)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64, align: 64)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1096, file: !1095, line: 54, baseType: !1106, size: 64, align: 64, offset: 64)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64, align: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{null, !1102, !1103, !969, !992}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1096, file: !1095, line: 70, baseType: !1110, size: 64, align: 64, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64, align: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{null, !1113, !1115, !1114, !992}
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64, align: 64)
!1114 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1114)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1096, file: !1095, line: 85, baseType: !1106, size: 64, align: 64, offset: 192)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1096, file: !1095, line: 100, baseType: !1110, size: 64, align: 64, offset: 256)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1096, file: !1095, line: 119, baseType: !1120, size: 64, align: 64, offset: 320)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64, align: 64)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{null, !1102, !1103, !1103, !1103, !992}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1096, file: !1095, line: 137, baseType: !1120, size: 64, align: 64, offset: 384)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1096, file: !1095, line: 154, baseType: !1099, size: 64, align: 64, offset: 448)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1096, file: !1095, line: 164, baseType: !1126, size: 64, align: 64, offset: 512)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64, align: 64)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{null, !1129, !1129, !992}
!1129 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1102)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1096, file: !1095, line: 175, baseType: !1131, size: 64, align: 64, offset: 576)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64, align: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!969, !1103, !1103, !992}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1096, file: !1095, line: 190, baseType: !1135, size: 64, align: 64, offset: 640)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64, align: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{null, !1113, !1115, !1115, !992}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "pce", scope: !971, file: !972, line: 383, baseType: !1139, size: 2240, align: 64, offset: 2496)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACPCEInfo", file: !972, line: 100, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACPCEInfo", file: !972, line: 93, size: 2240, align: 64, elements: !1141)
!1141 = !{!1142, !1145, !1149, !1154, !1157, !1161}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !1140, file: !972, line: 94, baseType: !1143, size: 64, align: 64)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !951, line: 40, baseType: !1144)
!1144 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "num_ele", scope: !1140, file: !972, line: 95, baseType: !1146, size: 128, align: 32, offset: 64)
!1146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 128, align: 32, elements: !1147)
!1147 = !{!1148}
!1148 = !DISubrange(count: 4)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "pairing", scope: !1140, file: !972, line: 96, baseType: !1150, size: 768, align: 32, offset: 192)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 768, align: 32, elements: !1151)
!1151 = !{!1152, !1153}
!1152 = !DISubrange(count: 3)
!1153 = !DISubrange(count: 8)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1140, file: !972, line: 97, baseType: !1155, size: 1024, align: 32, offset: 960)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 1024, align: 32, elements: !1156)
!1156 = !{!1148, !1153}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "config_map", scope: !1140, file: !972, line: 98, baseType: !1158, size: 128, align: 8, offset: 1984)
!1158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 128, align: 8, elements: !1159)
!1159 = !{!1160}
!1160 = !DISubrange(count: 16)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "reorder_map", scope: !1140, file: !972, line: 99, baseType: !1158, size: 128, align: 8, offset: 2112)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "planar_samples", scope: !971, file: !972, line: 384, baseType: !1163, size: 1024, align: 64, offset: 4736)
!1163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1102, size: 1024, align: 64, elements: !1159)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !971, file: !972, line: 386, baseType: !992, size: 32, align: 32, offset: 5760)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "needs_pce", scope: !971, file: !972, line: 387, baseType: !992, size: 32, align: 32, offset: 5792)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "lpc", scope: !971, file: !972, line: 388, baseType: !1167, size: 302080, align: 256, offset: 5888)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "LPCContext", file: !35, line: 87, baseType: !1168)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LPCContext", file: !35, line: 52, size: 302080, align: 256, elements: !1169)
!1169 = !{!1170, !1171, !1172, !1173, !1174, !1175, !1182, !1186}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "blocksize", scope: !1168, file: !35, line: 53, baseType: !992, size: 32, align: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "max_order", scope: !1168, file: !35, line: 54, baseType: !992, size: 32, align: 32, offset: 32)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_type", scope: !1168, file: !35, line: 55, baseType: !34, size: 32, align: 32, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "windowed_buffer", scope: !1168, file: !35, line: 56, baseType: !1113, size: 64, align: 64, offset: 128)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "windowed_samples", scope: !1168, file: !35, line: 57, baseType: !1113, size: 64, align: 64, offset: 192)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_apply_welch_window", scope: !1168, file: !35, line: 67, baseType: !1176, size: 64, align: 64, offset: 256)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64, align: 64)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{null, !1179, !992, !1113}
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !951, line: 38, baseType: !992)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "lpc_compute_autocorr", scope: !1168, file: !35, line: 82, baseType: !1183, size: 64, align: 64, offset: 320)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64, align: 64)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{null, !1115, !992, !992, !1113}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "lls_models", scope: !1168, file: !35, line: 86, baseType: !1187, size: 301568, align: 256, offset: 512)
!1187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1188, size: 301568, align: 256, elements: !1213)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "LLSModel", file: !1189, line: 58, baseType: !1190)
!1189 = !DIFile(filename: "./libavutil/lls.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LLSModel", file: !1189, line: 38, size: 150784, align: 256, elements: !1191)
!1191 = !{!1192, !1196, !1200, !1203, !1204, !1209}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "covariance", scope: !1190, file: !1189, line: 39, baseType: !1193, size: 82944, align: 64)
!1193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1114, size: 82944, align: 64, elements: !1194)
!1194 = !{!1195, !1195}
!1195 = !DISubrange(count: 36)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "coeff", scope: !1190, file: !1189, line: 40, baseType: !1197, size: 65536, align: 64, offset: 82944)
!1197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1114, size: 65536, align: 64, elements: !1198)
!1198 = !{!1199, !1199}
!1199 = !DISubrange(count: 32)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "variance", scope: !1190, file: !1189, line: 41, baseType: !1201, size: 2048, align: 64, offset: 148480)
!1201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1114, size: 2048, align: 64, elements: !1202)
!1202 = !{!1199}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "indep_count", scope: !1190, file: !1189, line: 42, baseType: !992, size: 32, align: 32, offset: 150528)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "update_lls", scope: !1190, file: !1189, line: 50, baseType: !1205, size: 64, align: 64, offset: 150592)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64, align: 64)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{null, !1208, !1115}
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64, align: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_lls", scope: !1190, file: !1189, line: 57, baseType: !1210, size: 64, align: 64, offset: 150656)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64, align: 64)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!1114, !1208, !1115, !992}
!1213 = !{!1214}
!1214 = !DISubrange(count: 2)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "samplerate_index", scope: !971, file: !972, line: 389, baseType: !992, size: 32, align: 32, offset: 307968)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !971, file: !972, line: 390, baseType: !992, size: 32, align: 32, offset: 308000)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "reorder_map", scope: !971, file: !972, line: 391, baseType: !1218, size: 64, align: 64, offset: 308032)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64, align: 64)
!1219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "chan_map", scope: !971, file: !972, line: 392, baseType: !1218, size: 64, align: 64, offset: 308096)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "cpe", scope: !971, file: !972, line: 394, baseType: !1222, size: 64, align: 64, offset: 308160)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64, align: 64)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelElement", file: !44, line: 288, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelElement", file: !44, line: 275, size: 4381952, align: 256, elements: !1225)
!1225 = !{!1226, !1227, !1228, !1229, !1230, !1234, !1235, !1371, !1384}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !1224, file: !44, line: 276, baseType: !992, size: 32, align: 32)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "common_window", scope: !1224, file: !44, line: 278, baseType: !992, size: 32, align: 32, offset: 32)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mode", scope: !1224, file: !44, line: 279, baseType: !992, size: 32, align: 32, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "is_mode", scope: !1224, file: !44, line: 280, baseType: !1039, size: 8, align: 8, offset: 96)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "ms_mask", scope: !1224, file: !44, line: 281, baseType: !1231, size: 1024, align: 8, offset: 104)
!1231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 1024, align: 8, elements: !1232)
!1232 = !{!1233}
!1233 = !DISubrange(count: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "is_mask", scope: !1224, file: !44, line: 282, baseType: !1231, size: 1024, align: 8, offset: 1128)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !1224, file: !44, line: 284, baseType: !1236, size: 1187328, align: 256, offset: 2304)
!1236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1237, size: 1187328, align: 256, elements: !1213)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "SingleChannelElement", file: !44, line: 270, baseType: !1238)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SingleChannelElement", file: !44, line: 248, size: 593664, align: 256, elements: !1239)
!1239 = !{!1240, !1291, !1309, !1317, !1319, !1320, !1324, !1326, !1328, !1329, !1330, !1332, !1333, !1337, !1338, !1342, !1346, !1350, !1353, !1354, !1369}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "ics", scope: !1238, file: !44, line: 249, baseType: !1241, size: 2432, align: 64)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndividualChannelStream", file: !44, line: 193, baseType: !1242)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IndividualChannelStream", file: !44, line: 174, size: 2432, align: 64, elements: !1243)
!1243 = !{!1244, !1245, !1247, !1249, !1250, !1253, !1271, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1285, !1289, !1290}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "max_sfb", scope: !1242, file: !44, line: 175, baseType: !1039, size: 8, align: 8)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "window_sequence", scope: !1242, file: !44, line: 176, baseType: !1246, size: 64, align: 32, offset: 32)
!1246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 64, align: 32, elements: !1213)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "use_kb_window", scope: !1242, file: !44, line: 177, baseType: !1248, size: 16, align: 8, offset: 96)
!1248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 16, align: 8, elements: !1213)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "num_window_groups", scope: !1242, file: !44, line: 178, baseType: !992, size: 32, align: 32, offset: 128)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "group_len", scope: !1242, file: !44, line: 179, baseType: !1251, size: 64, align: 8, offset: 160)
!1251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 64, align: 8, elements: !1252)
!1252 = !{!1153}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "ltp", scope: !1242, file: !44, line: 180, baseType: !1254, size: 416, align: 32, offset: 224)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "LongTermPrediction", file: !44, line: 169, baseType: !1255)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LongTermPrediction", file: !44, line: 163, size: 416, align: 32, elements: !1256)
!1256 = !{!1257, !1260, !1263, !1264, !1267}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !1255, file: !44, line: 164, baseType: !1258, size: 8, align: 8)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !951, line: 36, baseType: !1259)
!1259 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "lag", scope: !1255, file: !44, line: 165, baseType: !1261, size: 16, align: 16, offset: 16)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !951, line: 37, baseType: !1262)
!1262 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !1255, file: !44, line: 166, baseType: !992, size: 32, align: 32, offset: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !1255, file: !44, line: 167, baseType: !1265, size: 32, align: 32, offset: 64)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "INTFLOAT", file: !1266, line: 86, baseType: !969)
!1266 = !DIFile(filename: "libavcodec/aac_defines.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1255, file: !44, line: 168, baseType: !1268, size: 320, align: 8, offset: 96)
!1268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1258, size: 320, align: 8, elements: !1269)
!1269 = !{!1270}
!1270 = !DISubrange(count: 40)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "swb_offset", scope: !1242, file: !44, line: 181, baseType: !1272, size: 64, align: 64, offset: 640)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64, align: 64)
!1273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "swb_sizes", scope: !1242, file: !44, line: 182, baseType: !1218, size: 64, align: 64, offset: 704)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "num_swb", scope: !1242, file: !44, line: 183, baseType: !992, size: 32, align: 32, offset: 768)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "num_windows", scope: !1242, file: !44, line: 184, baseType: !992, size: 32, align: 32, offset: 800)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "tns_max_bands", scope: !1242, file: !44, line: 185, baseType: !992, size: 32, align: 32, offset: 832)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_present", scope: !1242, file: !44, line: 186, baseType: !992, size: 32, align: 32, offset: 864)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_initialized", scope: !1242, file: !44, line: 187, baseType: !992, size: 32, align: 32, offset: 896)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_group", scope: !1242, file: !44, line: 188, baseType: !992, size: 32, align: 32, offset: 928)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_reset_count", scope: !1242, file: !44, line: 189, baseType: !1282, size: 992, align: 32, offset: 960)
!1282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 992, align: 32, elements: !1283)
!1283 = !{!1284}
!1284 = !DISubrange(count: 31)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_used", scope: !1242, file: !44, line: 190, baseType: !1286, size: 328, align: 8, offset: 1952)
!1286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 328, align: 8, elements: !1287)
!1287 = !{!1288}
!1288 = !DISubrange(count: 41)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "window_clipping", scope: !1242, file: !44, line: 191, baseType: !1251, size: 64, align: 8, offset: 2280)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "clip_avoidance_factor", scope: !1242, file: !44, line: 192, baseType: !969, size: 32, align: 32, offset: 2368)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "tns", scope: !1238, file: !44, line: 250, baseType: !1292, size: 44320, align: 32, offset: 2432)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "TemporalNoiseShaping", file: !44, line: 206, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TemporalNoiseShaping", file: !44, line: 198, size: 44320, align: 32, elements: !1294)
!1294 = !{!1295, !1296, !1298, !1301, !1302, !1303, !1307}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !1293, file: !44, line: 199, baseType: !992, size: 32, align: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "n_filt", scope: !1293, file: !44, line: 200, baseType: !1297, size: 256, align: 32, offset: 32)
!1297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 256, align: 32, elements: !1252)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1293, file: !44, line: 201, baseType: !1299, size: 1024, align: 32, offset: 288)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 1024, align: 32, elements: !1300)
!1300 = !{!1153, !1148}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1293, file: !44, line: 202, baseType: !1299, size: 1024, align: 32, offset: 1312)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !1293, file: !44, line: 203, baseType: !1299, size: 1024, align: 32, offset: 2336)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "coef_idx", scope: !1293, file: !44, line: 204, baseType: !1304, size: 20480, align: 32, offset: 3360)
!1304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 20480, align: 32, elements: !1305)
!1305 = !{!1153, !1148, !1306}
!1306 = !DISubrange(count: 20)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "coef", scope: !1293, file: !44, line: 205, baseType: !1308, size: 20480, align: 32, offset: 23840)
!1308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 20480, align: 32, elements: !1305)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "pulse", scope: !1238, file: !44, line: 251, baseType: !1310, size: 320, align: 32, offset: 46752)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pulse", file: !44, line: 229, baseType: !1311)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Pulse", file: !44, line: 224, size: 320, align: 32, elements: !1312)
!1312 = !{!1313, !1314, !1315, !1316}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "num_pulse", scope: !1311, file: !44, line: 225, baseType: !992, size: 32, align: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1311, file: !44, line: 226, baseType: !992, size: 32, align: 32, offset: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1311, file: !44, line: 227, baseType: !1146, size: 128, align: 32, offset: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "amp", scope: !1311, file: !44, line: 228, baseType: !1146, size: 128, align: 32, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "band_type", scope: !1238, file: !44, line: 252, baseType: !1318, size: 4096, align: 32, offset: 47072)
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 4096, align: 32, elements: !1232)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "band_alt", scope: !1238, file: !44, line: 253, baseType: !1318, size: 4096, align: 32, offset: 51168)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "band_type_run_end", scope: !1238, file: !44, line: 254, baseType: !1321, size: 3840, align: 32, offset: 55264)
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 3840, align: 32, elements: !1322)
!1322 = !{!1323}
!1323 = !DISubrange(count: 120)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1238, file: !44, line: 255, baseType: !1325, size: 3840, align: 32, offset: 59104)
!1325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 3840, align: 32, elements: !1322)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "sf_idx", scope: !1238, file: !44, line: 256, baseType: !1327, size: 4096, align: 32, offset: 62944)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 4096, align: 32, elements: !1232)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "zeroes", scope: !1238, file: !44, line: 257, baseType: !1231, size: 1024, align: 8, offset: 67040)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "can_pns", scope: !1238, file: !44, line: 258, baseType: !1231, size: 1024, align: 8, offset: 68064)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "is_ener", scope: !1238, file: !44, line: 259, baseType: !1331, size: 4096, align: 32, offset: 69088)
!1331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 4096, align: 32, elements: !1232)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "pns_ener", scope: !1238, file: !44, line: 260, baseType: !1331, size: 4096, align: 32, offset: 73184)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "pcoeffs", scope: !1238, file: !44, line: 261, baseType: !1334, size: 32768, align: 32, offset: 77312)
!1334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 32768, align: 32, elements: !1335)
!1335 = !{!1336}
!1336 = !DISubrange(count: 1024)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !1238, file: !44, line: 262, baseType: !1334, size: 32768, align: 32, offset: 110080)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1238, file: !44, line: 263, baseType: !1339, size: 49152, align: 32, offset: 142848)
!1339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 49152, align: 32, elements: !1340)
!1340 = !{!1341}
!1341 = !DISubrange(count: 1536)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "ret_buf", scope: !1238, file: !44, line: 264, baseType: !1343, size: 65536, align: 32, offset: 192000)
!1343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 65536, align: 32, elements: !1344)
!1344 = !{!1345}
!1345 = !DISubrange(count: 2048)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_state", scope: !1238, file: !44, line: 265, baseType: !1347, size: 98304, align: 32, offset: 257536)
!1347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 98304, align: 32, elements: !1348)
!1348 = !{!1349}
!1349 = !DISubrange(count: 3072)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "lcoeffs", scope: !1238, file: !44, line: 266, baseType: !1351, size: 32768, align: 32, offset: 355840)
!1351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1352, size: 32768, align: 32, elements: !1335)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_FLOAT", file: !1266, line: 90, baseType: !969)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "prcoeffs", scope: !1238, file: !44, line: 267, baseType: !1351, size: 32768, align: 32, offset: 388608)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "predictor_state", scope: !1238, file: !44, line: 268, baseType: !1355, size: 172032, align: 32, offset: 421376)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 172032, align: 32, elements: !1367)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "PredictorState", file: !44, line: 144, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PredictorState", file: !44, line: 135, size: 256, align: 32, elements: !1358)
!1358 = !{!1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "cor0", scope: !1357, file: !44, line: 136, baseType: !1352, size: 32, align: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "cor1", scope: !1357, file: !44, line: 137, baseType: !1352, size: 32, align: 32, offset: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "var0", scope: !1357, file: !44, line: 138, baseType: !1352, size: 32, align: 32, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "var1", scope: !1357, file: !44, line: 139, baseType: !1352, size: 32, align: 32, offset: 96)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1357, file: !44, line: 140, baseType: !1352, size: 32, align: 32, offset: 128)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1357, file: !44, line: 141, baseType: !1352, size: 32, align: 32, offset: 160)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1357, file: !44, line: 142, baseType: !1352, size: 32, align: 32, offset: 192)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "x_est", scope: !1357, file: !44, line: 143, baseType: !1352, size: 32, align: 32, offset: 224)
!1367 = !{!1368}
!1368 = !DISubrange(count: 672)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "ret", scope: !1238, file: !44, line: 269, baseType: !1370, size: 64, align: 64, offset: 593408)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64, align: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "coup", scope: !1224, file: !44, line: 286, baseType: !1372, size: 62272, align: 32, offset: 1189632)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelCoupling", file: !44, line: 243, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelCoupling", file: !44, line: 234, size: 62272, align: 32, elements: !1374)
!1374 = !{!1375, !1376, !1377, !1379, !1380, !1381}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "coupling_point", scope: !1373, file: !44, line: 235, baseType: !59, size: 32, align: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "num_coupled", scope: !1373, file: !44, line: 236, baseType: !992, size: 32, align: 32, offset: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1373, file: !44, line: 237, baseType: !1378, size: 256, align: 32, offset: 64)
!1378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 256, align: 32, elements: !1252)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "id_select", scope: !1373, file: !44, line: 238, baseType: !1297, size: 256, align: 32, offset: 320)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "ch_select", scope: !1373, file: !44, line: 239, baseType: !1297, size: 256, align: 32, offset: 576)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1373, file: !44, line: 242, baseType: !1382, size: 61440, align: 32, offset: 832)
!1382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 61440, align: 32, elements: !1383)
!1383 = !{!1160, !1323}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !1224, file: !44, line: 287, baseType: !1385, size: 3129856, align: 256, offset: 1252096)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectralBandReplication", file: !1386, line: 115, baseType: !1387)
!1386 = !DIFile(filename: "libavcodec/sbr.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectralBandReplication", file: !1386, line: 139, size: 3129856, align: 256, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1393, !1394, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1415, !1417, !1418, !1419, !1420, !1492, !1610, !1611, !1612, !1613, !1617, !1621, !1622, !1624, !1628, !1629, !1631, !1632, !1635, !1638, !1641, !1644, !1645, !1648, !1649, !1651, !1652, !1653, !1654, !1655, !1658, !1659, !1660, !1713}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1387, file: !1386, line: 140, baseType: !992, size: 32, align: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1387, file: !1386, line: 141, baseType: !992, size: 32, align: 32, offset: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "ready_for_dequant", scope: !1387, file: !1386, line: 142, baseType: !992, size: 32, align: 32, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "id_aac", scope: !1387, file: !1386, line: 143, baseType: !992, size: 32, align: 32, offset: 96)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !1387, file: !1386, line: 144, baseType: !992, size: 32, align: 32, offset: 128)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "spectrum_params", scope: !1387, file: !1386, line: 145, baseType: !1395, size: 48, align: 8, offset: 160)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpectrumParameters", file: !1386, line: 55, baseType: !1396)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpectrumParameters", file: !1386, line: 42, size: 48, align: 8, elements: !1397)
!1397 = !{!1398, !1399, !1400, !1401, !1402, !1403}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "bs_start_freq", scope: !1396, file: !1386, line: 43, baseType: !1039, size: 8, align: 8)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "bs_stop_freq", scope: !1396, file: !1386, line: 44, baseType: !1039, size: 8, align: 8, offset: 8)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "bs_xover_band", scope: !1396, file: !1386, line: 45, baseType: !1039, size: 8, align: 8, offset: 16)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_scale", scope: !1396, file: !1386, line: 51, baseType: !1039, size: 8, align: 8, offset: 24)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "bs_alter_scale", scope: !1396, file: !1386, line: 52, baseType: !1039, size: 8, align: 8, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "bs_noise_bands", scope: !1396, file: !1386, line: 53, baseType: !1039, size: 8, align: 8, offset: 40)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res_header", scope: !1387, file: !1386, line: 146, baseType: !992, size: 32, align: 32, offset: 224)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_bands", scope: !1387, file: !1386, line: 151, baseType: !952, size: 32, align: 32, offset: 256)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "bs_limiter_gains", scope: !1387, file: !1386, line: 152, baseType: !952, size: 32, align: 32, offset: 288)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "bs_interpol_freq", scope: !1387, file: !1386, line: 153, baseType: !952, size: 32, align: 32, offset: 320)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "bs_smoothing_mode", scope: !1387, file: !1386, line: 154, baseType: !952, size: 32, align: 32, offset: 352)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "bs_coupling", scope: !1387, file: !1386, line: 156, baseType: !952, size: 32, align: 32, offset: 384)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !1387, file: !1386, line: 157, baseType: !1411, size: 160, align: 32, offset: 416)
!1411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 160, align: 32, elements: !1413)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "AAC_SIGNE", file: !1266, line: 91, baseType: !952)
!1413 = !{!1414}
!1414 = !DISubrange(count: 5)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "kx", scope: !1387, file: !1386, line: 160, baseType: !1416, size: 64, align: 32, offset: 576)
!1416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 64, align: 32, elements: !1213)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !1387, file: !1386, line: 162, baseType: !1416, size: 64, align: 32, offset: 640)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "kx_and_m_pushed", scope: !1387, file: !1386, line: 163, baseType: !952, size: 32, align: 32, offset: 704)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "n_master", scope: !1387, file: !1386, line: 165, baseType: !1412, size: 32, align: 32, offset: 736)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1387, file: !1386, line: 166, baseType: !1421, size: 1407488, align: 256, offset: 768)
!1421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1422, size: 1407488, align: 256, elements: !1213)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRData", file: !1386, line: 113, baseType: !1423)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRData", file: !1386, line: 62, size: 703744, align: 256, elements: !1424)
!1424 = !{!1425, !1426, !1427, !1428, !1432, !1433, !1435, !1436, !1439, !1443, !1444, !1448, !1452, !1453, !1455, !1457, !1460, !1461, !1466, !1470, !1471, !1474, !1478, !1480, !1483, !1485, !1486, !1487, !1490, !1491}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "bs_frame_class", scope: !1423, file: !1386, line: 67, baseType: !952, size: 32, align: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic_flag", scope: !1423, file: !1386, line: 68, baseType: !952, size: 32, align: 32, offset: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_env", scope: !1423, file: !1386, line: 69, baseType: !1412, size: 32, align: 32, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "bs_freq_res", scope: !1423, file: !1386, line: 70, baseType: !1429, size: 56, align: 8, offset: 96)
!1429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 56, align: 8, elements: !1430)
!1430 = !{!1431}
!1431 = !DISubrange(count: 7)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "bs_num_noise", scope: !1423, file: !1386, line: 71, baseType: !1412, size: 32, align: 32, offset: 160)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_env", scope: !1423, file: !1386, line: 72, baseType: !1434, size: 40, align: 8, offset: 192)
!1434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 40, align: 8, elements: !1413)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "bs_df_noise", scope: !1423, file: !1386, line: 73, baseType: !1248, size: 16, align: 8, offset: 232)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "bs_invf_mode", scope: !1423, file: !1386, line: 74, baseType: !1437, size: 80, align: 8, offset: 248)
!1437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 80, align: 8, elements: !1438)
!1438 = !{!1214, !1414}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "bs_add_harmonic", scope: !1423, file: !1386, line: 75, baseType: !1440, size: 384, align: 8, offset: 328)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 384, align: 8, elements: !1441)
!1441 = !{!1442}
!1442 = !DISubrange(count: 48)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "bs_amp_res", scope: !1423, file: !1386, line: 76, baseType: !952, size: 32, align: 32, offset: 736)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples", scope: !1423, file: !1386, line: 83, baseType: !1445, size: 73728, align: 32, offset: 768)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 73728, align: 32, elements: !1446)
!1446 = !{!1447}
!1447 = !DISubrange(count: 2304)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "analysis_filterbank_samples", scope: !1423, file: !1386, line: 84, baseType: !1449, size: 41984, align: 32, offset: 74496)
!1449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 41984, align: 32, elements: !1450)
!1450 = !{!1451}
!1451 = !DISubrange(count: 1312)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "synthesis_filterbank_samples_offset", scope: !1423, file: !1386, line: 85, baseType: !992, size: 32, align: 32, offset: 116480)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "e_a", scope: !1423, file: !1386, line: 87, baseType: !1454, size: 64, align: 32, offset: 116512)
!1454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 64, align: 32, elements: !1213)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "bw_array", scope: !1423, file: !1386, line: 89, baseType: !1456, size: 160, align: 32, offset: 116576)
!1456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 160, align: 32, elements: !1413)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "W", scope: !1423, file: !1386, line: 91, baseType: !1458, size: 131072, align: 32, offset: 116736)
!1458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 131072, align: 32, elements: !1459)
!1459 = !{!1214, !1199, !1199, !1214}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "Ypos", scope: !1423, file: !1386, line: 93, baseType: !992, size: 32, align: 32, offset: 247808)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "Y", scope: !1423, file: !1386, line: 94, baseType: !1462, size: 311296, align: 32, offset: 247936)
!1462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 311296, align: 32, elements: !1463)
!1463 = !{!1214, !1464, !1465, !1214}
!1464 = !DISubrange(count: 38)
!1465 = !DISubrange(count: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "g_temp", scope: !1423, file: !1386, line: 95, baseType: !1467, size: 64512, align: 32, offset: 559232)
!1467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1352, size: 64512, align: 32, elements: !1468)
!1468 = !{!1469, !1442}
!1469 = !DISubrange(count: 42)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "q_temp", scope: !1423, file: !1386, line: 96, baseType: !1467, size: 64512, align: 32, offset: 623744)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "s_indexmapped", scope: !1423, file: !1386, line: 97, baseType: !1472, size: 3072, align: 8, offset: 688256)
!1472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 3072, align: 8, elements: !1473)
!1473 = !{!1153, !1442}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs_q", scope: !1423, file: !1386, line: 99, baseType: !1475, size: 2304, align: 8, offset: 691328)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 2304, align: 8, elements: !1476)
!1476 = !{!1477, !1442}
!1477 = !DISubrange(count: 6)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "env_facs", scope: !1423, file: !1386, line: 100, baseType: !1479, size: 9216, align: 32, offset: 693632)
!1479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1352, size: 9216, align: 32, elements: !1476)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs_q", scope: !1423, file: !1386, line: 102, baseType: !1481, size: 120, align: 8, offset: 702848)
!1481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 120, align: 8, elements: !1482)
!1482 = !{!1152, !1414}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "noise_facs", scope: !1423, file: !1386, line: 103, baseType: !1484, size: 480, align: 32, offset: 702976)
!1484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1352, size: 480, align: 32, elements: !1482)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "t_env", scope: !1423, file: !1386, line: 105, baseType: !1251, size: 64, align: 8, offset: 703456)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "t_env_num_env_old", scope: !1423, file: !1386, line: 107, baseType: !1039, size: 8, align: 8, offset: 703520)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "t_q", scope: !1423, file: !1386, line: 109, baseType: !1488, size: 24, align: 8, offset: 703528)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 24, align: 8, elements: !1489)
!1489 = !{!1152}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexnoise", scope: !1423, file: !1386, line: 110, baseType: !952, size: 32, align: 32, offset: 703552)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "f_indexsine", scope: !1423, file: !1386, line: 111, baseType: !952, size: 32, align: 32, offset: 703584)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !1387, file: !1386, line: 167, baseType: !1493, size: 1072896, align: 128, offset: 1408256)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSContext", file: !1494, line: 79, baseType: !1495)
!1494 = !DIFile(filename: "libavcodec/aacps.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSContext", file: !1494, line: 41, size: 1072896, align: 128, elements: !1496)
!1496 = !{!1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1513, !1517, !1518, !1519, !1520, !1521, !1522, !1526, !1531, !1536, !1539, !1540, !1541, !1544, !1545, !1546, !1547, !1550, !1551, !1553, !1554}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1495, file: !1494, line: 42, baseType: !992, size: 32, align: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "enable_iid", scope: !1495, file: !1494, line: 43, baseType: !992, size: 32, align: 32, offset: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "iid_quant", scope: !1495, file: !1494, line: 44, baseType: !992, size: 32, align: 32, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nr_iid_par", scope: !1495, file: !1494, line: 45, baseType: !992, size: 32, align: 32, offset: 96)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ipdopd_par", scope: !1495, file: !1494, line: 46, baseType: !992, size: 32, align: 32, offset: 128)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "enable_icc", scope: !1495, file: !1494, line: 47, baseType: !992, size: 32, align: 32, offset: 160)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "icc_mode", scope: !1495, file: !1494, line: 48, baseType: !992, size: 32, align: 32, offset: 192)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "nr_icc_par", scope: !1495, file: !1494, line: 49, baseType: !992, size: 32, align: 32, offset: 224)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ext", scope: !1495, file: !1494, line: 50, baseType: !992, size: 32, align: 32, offset: 256)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "frame_class", scope: !1495, file: !1494, line: 51, baseType: !992, size: 32, align: 32, offset: 288)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "num_env_old", scope: !1495, file: !1494, line: 52, baseType: !992, size: 32, align: 32, offset: 320)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "num_env", scope: !1495, file: !1494, line: 53, baseType: !992, size: 32, align: 32, offset: 352)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ipdopd", scope: !1495, file: !1494, line: 54, baseType: !992, size: 32, align: 32, offset: 384)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "border_position", scope: !1495, file: !1494, line: 55, baseType: !1511, size: 192, align: 32, offset: 416)
!1511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 192, align: 32, elements: !1512)
!1512 = !{!1477}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "iid_par", scope: !1495, file: !1494, line: 56, baseType: !1514, size: 1360, align: 8, offset: 608)
!1514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1258, size: 1360, align: 8, elements: !1515)
!1515 = !{!1414, !1516}
!1516 = !DISubrange(count: 34)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "icc_par", scope: !1495, file: !1494, line: 57, baseType: !1514, size: 1360, align: 8, offset: 1968)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_par", scope: !1495, file: !1494, line: 59, baseType: !1514, size: 1360, align: 8, offset: 3328)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "opd_par", scope: !1495, file: !1494, line: 60, baseType: !1514, size: 1360, align: 8, offset: 4688)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands", scope: !1495, file: !1494, line: 61, baseType: !992, size: 32, align: 32, offset: 6048)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "is34bands_old", scope: !1495, file: !1494, line: 62, baseType: !992, size: 32, align: 32, offset: 6080)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1495, file: !1494, line: 64, baseType: !1523, size: 14080, align: 32, offset: 6144)
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 14080, align: 32, elements: !1524)
!1524 = !{!1414, !1525, !1214}
!1525 = !DISubrange(count: 44)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1495, file: !1494, line: 65, baseType: !1527, size: 267904, align: 32, offset: 20224)
!1527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 267904, align: 32, elements: !1528)
!1528 = !{!1529, !1530, !1214}
!1529 = !DISubrange(count: 91)
!1530 = !DISubrange(count: 46)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "ap_delay", scope: !1495, file: !1494, line: 66, baseType: !1532, size: 355200, align: 32, offset: 288128)
!1532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 355200, align: 32, elements: !1533)
!1533 = !{!1534, !1152, !1535, !1214}
!1534 = !DISubrange(count: 50)
!1535 = !DISubrange(count: 37)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_nrg", scope: !1495, file: !1494, line: 67, baseType: !1537, size: 1088, align: 32, offset: 643328)
!1537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 1088, align: 32, elements: !1538)
!1538 = !{!1516}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "power_smooth", scope: !1495, file: !1494, line: 68, baseType: !1537, size: 1088, align: 32, offset: 644480)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "peak_decay_diff_smooth", scope: !1495, file: !1494, line: 69, baseType: !1537, size: 1088, align: 32, offset: 645632)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "H11", scope: !1495, file: !1494, line: 70, baseType: !1542, size: 13056, align: 32, offset: 646784)
!1542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 13056, align: 32, elements: !1543)
!1543 = !{!1214, !1477, !1516}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "H12", scope: !1495, file: !1494, line: 71, baseType: !1542, size: 13056, align: 32, offset: 659840)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "H21", scope: !1495, file: !1494, line: 72, baseType: !1542, size: 13056, align: 32, offset: 672896)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "H22", scope: !1495, file: !1494, line: 73, baseType: !1542, size: 13056, align: 32, offset: 685952)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "Lbuf", scope: !1495, file: !1494, line: 74, baseType: !1548, size: 186368, align: 32, offset: 699008)
!1548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 186368, align: 32, elements: !1549)
!1549 = !{!1529, !1199, !1214}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "Rbuf", scope: !1495, file: !1494, line: 75, baseType: !1548, size: 186368, align: 32, offset: 885376)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "opd_hist", scope: !1495, file: !1494, line: 76, baseType: !1552, size: 272, align: 8, offset: 1071744)
!1552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1258, size: 272, align: 8, elements: !1538)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ipd_hist", scope: !1495, file: !1494, line: 77, baseType: !1552, size: 272, align: 8, offset: 1072016)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !1495, file: !1494, line: 78, baseType: !1555, size: 512, align: 64, offset: 1072320)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "PSDSPContext", file: !1556, line: 52, baseType: !1557)
!1556 = !DIFile(filename: "libavcodec/aacpsdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PSDSPContext", file: !1556, line: 32, size: 512, align: 64, elements: !1558)
!1558 = !{!1559, !1566, !1572, !1581, !1591, !1595, !1603}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "add_squares", scope: !1557, file: !1556, line: 33, baseType: !1560, size: 64, align: 64)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64, align: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{null, !1370, !1563, !992}
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64, align: 64)
!1564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1565, size: 64, align: 32, elements: !1213)
!1565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1265)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "mul_pair_single", scope: !1557, file: !1556, line: 34, baseType: !1567, size: 64, align: 64, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64, align: 64)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{null, !1570, !1570, !1370, !992}
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64, align: 64)
!1571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 64, align: 32, elements: !1213)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis", scope: !1557, file: !1556, line: 36, baseType: !1573, size: 64, align: 64, offset: 128)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64, align: 64)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{null, !1570, !1570, !1576, !1579, !992}
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64, align: 64)
!1577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1565, size: 512, align: 32, elements: !1578)
!1578 = !{!1153, !1214}
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1580, line: 149, baseType: !1144)
!1580 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_analysis_ileave", scope: !1557, file: !1556, line: 39, baseType: !1582, size: 64, align: 64, offset: 192)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64, align: 64)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{null, !1585, !1588, !992, !992}
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64, align: 64)
!1586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 2048, align: 32, elements: !1587)
!1587 = !{!1199, !1214}
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64, align: 64)
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 77824, align: 32, elements: !1590)
!1590 = !{!1464, !1465}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "hybrid_synthesis_deint", scope: !1557, file: !1556, line: 41, baseType: !1592, size: 64, align: 64, offset: 256)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64, align: 64)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{null, !1588, !1585, !992, !992}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "decorrelate", scope: !1557, file: !1556, line: 43, baseType: !1596, size: 64, align: 64, offset: 320)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64, align: 64)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{null, !1570, !1570, !1599, !1602, !1563, !1602, !1265, !992}
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64, align: 64)
!1600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 2368, align: 32, elements: !1601)
!1601 = !{!1535, !1214}
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64, align: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_interpolate", scope: !1557, file: !1556, line: 49, baseType: !1604, size: 128, align: 64, offset: 384)
!1604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1605, size: 128, align: 64, elements: !1213)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64, align: 64)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{null, !1570, !1570, !1608, !1608, !992}
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64, align: 64)
!1609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 128, align: 32, elements: !1147)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !1387, file: !1386, line: 169, baseType: !1416, size: 64, align: 32, offset: 2481152)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "n_q", scope: !1387, file: !1386, line: 171, baseType: !1412, size: 32, align: 32, offset: 2481216)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "n_lim", scope: !1387, file: !1386, line: 173, baseType: !1412, size: 32, align: 32, offset: 2481248)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "f_master", scope: !1387, file: !1386, line: 175, baseType: !1614, size: 784, align: 16, offset: 2481280)
!1614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1052, size: 784, align: 16, elements: !1615)
!1615 = !{!1616}
!1616 = !DISubrange(count: 49)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelow", scope: !1387, file: !1386, line: 177, baseType: !1618, size: 400, align: 16, offset: 2482064)
!1618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1052, size: 400, align: 16, elements: !1619)
!1619 = !{!1620}
!1620 = !DISubrange(count: 25)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablehigh", scope: !1387, file: !1386, line: 179, baseType: !1614, size: 784, align: 16, offset: 2482464)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablenoise", scope: !1387, file: !1386, line: 181, baseType: !1623, size: 96, align: 16, offset: 2483248)
!1623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1052, size: 96, align: 16, elements: !1512)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "f_tablelim", scope: !1387, file: !1386, line: 183, baseType: !1625, size: 480, align: 16, offset: 2483344)
!1625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1052, size: 480, align: 16, elements: !1626)
!1626 = !{!1627}
!1627 = !DISubrange(count: 30)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "num_patches", scope: !1387, file: !1386, line: 184, baseType: !1412, size: 32, align: 32, offset: 2483840)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "patch_num_subbands", scope: !1387, file: !1386, line: 185, baseType: !1630, size: 48, align: 8, offset: 2483872)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 48, align: 8, elements: !1512)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "patch_start_subband", scope: !1387, file: !1386, line: 186, baseType: !1630, size: 48, align: 8, offset: 2483920)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "X_low", scope: !1387, file: !1386, line: 188, baseType: !1633, size: 81920, align: 32, offset: 2483968)
!1633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 81920, align: 32, elements: !1634)
!1634 = !{!1199, !1270, !1214}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "X_high", scope: !1387, file: !1386, line: 190, baseType: !1636, size: 163840, align: 32, offset: 2565888)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 163840, align: 32, elements: !1637)
!1637 = !{!1465, !1270, !1214}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "X", scope: !1387, file: !1386, line: 192, baseType: !1639, size: 311296, align: 32, offset: 2729728)
!1639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 311296, align: 32, elements: !1640)
!1640 = !{!1214, !1214, !1464, !1465}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "alpha0", scope: !1387, file: !1386, line: 194, baseType: !1642, size: 4096, align: 32, offset: 3041024)
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 4096, align: 32, elements: !1643)
!1643 = !{!1465, !1214}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "alpha1", scope: !1387, file: !1386, line: 196, baseType: !1642, size: 4096, align: 32, offset: 3045120)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "e_origmapped", scope: !1387, file: !1386, line: 198, baseType: !1646, size: 10752, align: 32, offset: 3049216)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1352, size: 10752, align: 32, elements: !1647)
!1647 = !{!1431, !1442}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "q_mapped", scope: !1387, file: !1386, line: 200, baseType: !1646, size: 10752, align: 32, offset: 3059968)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "s_mapped", scope: !1387, file: !1386, line: 202, baseType: !1650, size: 2688, align: 8, offset: 3070720)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 2688, align: 8, elements: !1647)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "e_curr", scope: !1387, file: !1386, line: 204, baseType: !1646, size: 10752, align: 32, offset: 3073408)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "q_m", scope: !1387, file: !1386, line: 206, baseType: !1646, size: 10752, align: 32, offset: 3084160)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "s_m", scope: !1387, file: !1386, line: 208, baseType: !1646, size: 10752, align: 32, offset: 3094912)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1387, file: !1386, line: 209, baseType: !1646, size: 10752, align: 32, offset: 3105664)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_filter_scratch", scope: !1387, file: !1386, line: 210, baseType: !1656, size: 10240, align: 32, offset: 3116544)
!1656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 10240, align: 32, elements: !1657)
!1657 = !{!1414, !1465}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ana", scope: !1387, file: !1386, line: 211, baseType: !1044, size: 896, align: 64, offset: 3126784)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !1387, file: !1386, line: 212, baseType: !1044, size: 896, align: 64, offset: 3127680)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !1387, file: !1386, line: 213, baseType: !1661, size: 896, align: 64, offset: 3128576)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBRDSPContext", file: !1662, line: 45, baseType: !1663)
!1662 = !DIFile(filename: "libavcodec/sbrdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBRDSPContext", file: !1662, line: 28, size: 896, align: 64, elements: !1664)
!1664 = !{!1665, !1669, !1673, !1674, !1675, !1679, !1683, !1687, !1694, !1698, !1708}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "sum64x5", scope: !1663, file: !1662, line: 29, baseType: !1666, size: 64, align: 64)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64, align: 64)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{null, !1370}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "sum_square", scope: !1663, file: !1662, line: 30, baseType: !1670, size: 64, align: 64, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64, align: 64)
!1671 = !DISubroutineType(types: !1672)
!1672 = !{!1352, !1570, !992}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "neg_odd_64", scope: !1663, file: !1662, line: 31, baseType: !1666, size: 64, align: 64, offset: 128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_pre_shuffle", scope: !1663, file: !1662, line: 32, baseType: !1666, size: 64, align: 64, offset: 192)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_post_shuffle", scope: !1663, file: !1662, line: 33, baseType: !1676, size: 64, align: 64, offset: 256)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64, align: 64)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{null, !1570, !1602}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_neg", scope: !1663, file: !1662, line: 34, baseType: !1680, size: 64, align: 64, offset: 320)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64, align: 64)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{null, !1370, !1602}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "qmf_deint_bfly", scope: !1663, file: !1662, line: 35, baseType: !1684, size: 64, align: 64, offset: 384)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64, align: 64)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{null, !1370, !1602, !1602}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "autocorrelate", scope: !1663, file: !1662, line: 36, baseType: !1688, size: 64, align: 64, offset: 448)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64, align: 64)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{null, !1563, !1691}
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64, align: 64)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1352, size: 128, align: 32, elements: !1693)
!1693 = !{!1214, !1214}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "hf_gen", scope: !1663, file: !1662, line: 37, baseType: !1695, size: 64, align: 64, offset: 512)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64, align: 64)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{null, !1570, !1563, !1602, !1602, !1265, !992, !992}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "hf_g_filt", scope: !1663, file: !1662, line: 40, baseType: !1699, size: 64, align: 64, offset: 576)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64, align: 64)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{null, !1570, !1702, !1705, !992, !1707}
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64, align: 64)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1565, size: 2560, align: 32, elements: !1704)
!1704 = !{!1270, !1214}
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64, align: 64)
!1706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1352)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !951, line: 119, baseType: !1144)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "hf_apply_noise", scope: !1663, file: !1662, line: 42, baseType: !1709, size: 256, align: 64, offset: 640)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1710, size: 256, align: 64, elements: !1147)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64, align: 64)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{null, !1570, !1705, !1705, !992, !992, !992}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1387, file: !1386, line: 214, baseType: !1714, size: 256, align: 64, offset: 3129472)
!1714 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACSBRContext", file: !1386, line: 134, baseType: !1715)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACSBRContext", file: !1386, line: 120, size: 256, align: 64, elements: !1716)
!1716 = !{!1717, !2527, !2533, !2539}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_lf_gen", scope: !1715, file: !1386, line: 121, baseType: !1718, size: 64, align: 64)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64, align: 64)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!992, !1721, !2521, !2522, !2524, !992}
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64, align: 64)
!1722 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACContext", file: !1386, line: 37, baseType: !1723)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACContext", file: !44, line: 293, size: 62208, align: 256, elements: !1724)
!1724 = !{!1725, !1726, !2393, !2394, !2395, !2412, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2454, !2455, !2456, !2457, !2458, !2461, !2462, !2463, !2465, !2494, !2495, !2496, !2497, !2501, !2502, !2508, !2512, !2513, !2517}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1723, file: !44, line: 294, baseType: !975, size: 64, align: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1723, file: !44, line: 295, baseType: !1727, size: 64, align: 64, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64, align: 64)
!1728 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !85, line: 3360, baseType: !1729)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !85, line: 1556, size: 8448, align: 64, elements: !1730)
!1730 = !{!1731, !1734, !1735, !1736, !1993, !1994, !1995, !1996, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2149, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2331, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1729, file: !85, line: 1561, baseType: !1732, size: 64, align: 64)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64, align: 64)
!1733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1729, file: !85, line: 1562, baseType: !992, size: 32, align: 32, offset: 64)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1729, file: !85, line: 1564, baseType: !74, size: 32, align: 32, offset: 96)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1729, file: !85, line: 1565, baseType: !1737, size: 64, align: 64, offset: 128)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64, align: 64)
!1738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !85, line: 3468, size: 1984, align: 64, elements: !1740)
!1740 = !{!1741, !1742, !1743, !1744, !1745, !1746, !1755, !1758, !1761, !1764, !1769, !1770, !1771, !1779, !1780, !1781, !1783, !1787, !1793, !1802, !1806, !1807, !1846, !1964, !1968, !1969, !1973, !1977, !1982, !1986, !1987, !1988}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1739, file: !85, line: 3475, baseType: !980, size: 64, align: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1739, file: !85, line: 3480, baseType: !980, size: 64, align: 64, offset: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1739, file: !85, line: 3481, baseType: !74, size: 32, align: 32, offset: 128)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1739, file: !85, line: 3482, baseType: !84, size: 32, align: 32, offset: 160)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1739, file: !85, line: 3487, baseType: !992, size: 32, align: 32, offset: 192)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1739, file: !85, line: 3488, baseType: !1747, size: 64, align: 64, offset: 256)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64, align: 64)
!1748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1749)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1750, line: 61, baseType: !1751)
!1750 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1750, line: 58, size: 64, align: 32, elements: !1752)
!1752 = !{!1753, !1754}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1751, file: !1750, line: 59, baseType: !992, size: 32, align: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1751, file: !1750, line: 60, baseType: !992, size: 32, align: 32, offset: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1739, file: !85, line: 3489, baseType: !1756, size: 64, align: 64, offset: 320)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64, align: 64)
!1757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !544)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1739, file: !85, line: 3490, baseType: !1759, size: 64, align: 64, offset: 384)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64, align: 64)
!1760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !992)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1739, file: !85, line: 3491, baseType: !1762, size: 64, align: 64, offset: 448)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64, align: 64)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !744)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1739, file: !85, line: 3492, baseType: !1765, size: 64, align: 64, offset: 512)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64, align: 64)
!1766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1767)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !951, line: 55, baseType: !1768)
!1768 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1739, file: !85, line: 3493, baseType: !1039, size: 8, align: 8, offset: 576)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1739, file: !85, line: 3494, baseType: !1732, size: 64, align: 64, offset: 640)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1739, file: !85, line: 3495, baseType: !1772, size: 64, align: 64, offset: 704)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64, align: 64)
!1773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1774)
!1774 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !85, line: 3404, baseType: !1775)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !85, line: 3401, size: 128, align: 64, elements: !1776)
!1776 = !{!1777, !1778}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1775, file: !85, line: 3402, baseType: !992, size: 32, align: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1775, file: !85, line: 3403, baseType: !980, size: 64, align: 64, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1739, file: !85, line: 3507, baseType: !980, size: 64, align: 64, offset: 768)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1739, file: !85, line: 3516, baseType: !992, size: 32, align: 32, offset: 832)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1739, file: !85, line: 3517, baseType: !1782, size: 64, align: 64, offset: 896)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64, align: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1739, file: !85, line: 3527, baseType: !1784, size: 64, align: 64, offset: 960)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64, align: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!992, !1727}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1739, file: !85, line: 3535, baseType: !1788, size: 64, align: 64, offset: 1024)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64, align: 64)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!992, !1727, !1791}
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64, align: 64)
!1792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1728)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1739, file: !85, line: 3541, baseType: !1794, size: 64, align: 64, offset: 1088)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64, align: 64)
!1795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1796)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !85, line: 3461, baseType: !1797)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1798, line: 223, size: 128, align: 64, elements: !1799)
!1798 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1799 = !{!1800, !1801}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1797, file: !1798, line: 224, baseType: !1218, size: 64, align: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1797, file: !1798, line: 225, baseType: !1218, size: 64, align: 64, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1739, file: !85, line: 3549, baseType: !1803, size: 64, align: 64, offset: 1152)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64, align: 64)
!1804 = !DISubroutineType(types: !1805)
!1805 = !{null, !1782}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1739, file: !85, line: 3551, baseType: !1784, size: 64, align: 64, offset: 1216)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1739, file: !85, line: 3552, baseType: !1808, size: 64, align: 64, offset: 1280)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64, align: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!992, !1727, !1038, !992, !1811}
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64, align: 64)
!1812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1813)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !85, line: 3920, size: 256, align: 64, elements: !1814)
!1814 = !{!1815, !1816, !1817, !1818, !1819, !1845}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1813, file: !85, line: 3921, baseType: !1052, size: 16, align: 16)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1813, file: !85, line: 3922, baseType: !950, size: 32, align: 32, offset: 32)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1813, file: !85, line: 3923, baseType: !950, size: 32, align: 32, offset: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1813, file: !85, line: 3924, baseType: !952, size: 32, align: 32, offset: 96)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1813, file: !85, line: 3925, baseType: !1820, size: 64, align: 64, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64, align: 64)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64, align: 64)
!1822 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !85, line: 3918, baseType: !1823)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !85, line: 3885, size: 1600, align: 64, elements: !1824)
!1824 = !{!1825, !1826, !1827, !1828, !1829, !1830, !1837, !1839, !1840, !1841, !1843, !1844}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1823, file: !85, line: 3886, baseType: !992, size: 32, align: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1823, file: !85, line: 3887, baseType: !992, size: 32, align: 32, offset: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1823, file: !85, line: 3888, baseType: !992, size: 32, align: 32, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1823, file: !85, line: 3889, baseType: !992, size: 32, align: 32, offset: 96)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1823, file: !85, line: 3890, baseType: !992, size: 32, align: 32, offset: 128)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1823, file: !85, line: 3897, baseType: !1831, size: 768, align: 64, offset: 192)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !85, line: 3858, baseType: !1832)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !85, line: 3853, size: 768, align: 64, elements: !1833)
!1833 = !{!1834, !1836}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1832, file: !85, line: 3855, baseType: !1835, size: 512, align: 64)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 512, align: 64, elements: !1252)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1832, file: !85, line: 3857, baseType: !1297, size: 256, align: 32, offset: 512)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1823, file: !85, line: 3903, baseType: !1838, size: 256, align: 64, offset: 960)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 256, align: 64, elements: !1147)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1823, file: !85, line: 3904, baseType: !1146, size: 128, align: 32, offset: 1216)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1823, file: !85, line: 3906, baseType: !761, size: 32, align: 32, offset: 1344)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1823, file: !85, line: 3908, baseType: !1842, size: 64, align: 64, offset: 1408)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64, align: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1823, file: !85, line: 3915, baseType: !1842, size: 64, align: 64, offset: 1472)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1823, file: !85, line: 3917, baseType: !992, size: 32, align: 32, offset: 1536)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1813, file: !85, line: 3926, baseType: !1143, size: 64, align: 64, offset: 192)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1739, file: !85, line: 3564, baseType: !1847, size: 64, align: 64, offset: 1344)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64, align: 64)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{!992, !1727, !1850, !1884, !1963}
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64, align: 64)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !85, line: 1499, baseType: !1852)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !85, line: 1445, size: 704, align: 64, elements: !1853)
!1853 = !{!1854, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1880, !1881, !1882, !1883}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1852, file: !85, line: 1451, baseType: !1855, size: 64, align: 64)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64, align: 64)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1857, line: 94, baseType: !1858)
!1857 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1857, line: 81, size: 192, align: 64, elements: !1859)
!1859 = !{!1860, !1864, !1865}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1858, file: !1857, line: 82, baseType: !1861, size: 64, align: 64)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64, align: 64)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1857, line: 73, baseType: !1863)
!1863 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1857, line: 73, flags: DIFlagFwdDecl)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1858, file: !1857, line: 89, baseType: !1038, size: 64, align: 64, offset: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1858, file: !1857, line: 93, baseType: !992, size: 32, align: 32, offset: 128)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1852, file: !85, line: 1461, baseType: !1143, size: 64, align: 64, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1852, file: !85, line: 1467, baseType: !1143, size: 64, align: 64, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1852, file: !85, line: 1468, baseType: !1038, size: 64, align: 64, offset: 192)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1852, file: !85, line: 1469, baseType: !992, size: 32, align: 32, offset: 256)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1852, file: !85, line: 1470, baseType: !992, size: 32, align: 32, offset: 288)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1852, file: !85, line: 1474, baseType: !992, size: 32, align: 32, offset: 320)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1852, file: !85, line: 1479, baseType: !1873, size: 64, align: 64, offset: 384)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64, align: 64)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !85, line: 1415, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !85, line: 1411, size: 128, align: 64, elements: !1876)
!1876 = !{!1877, !1878, !1879}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1875, file: !85, line: 1412, baseType: !1038, size: 64, align: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1875, file: !85, line: 1413, baseType: !992, size: 32, align: 32, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1875, file: !85, line: 1414, baseType: !767, size: 32, align: 32, offset: 96)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1852, file: !85, line: 1480, baseType: !992, size: 32, align: 32, offset: 448)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1852, file: !85, line: 1486, baseType: !1143, size: 64, align: 64, offset: 512)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1852, file: !85, line: 1488, baseType: !1143, size: 64, align: 64, offset: 576)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1852, file: !85, line: 1497, baseType: !1143, size: 64, align: 64, offset: 640)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64, align: 64)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !808, line: 646, baseType: !1887)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !808, line: 268, size: 4288, align: 64, elements: !1888)
!1888 = !{!1889, !1890, !1891, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1918, !1920, !1921, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1952, !1953, !1954, !1955, !1956, !1957, !1959, !1960, !1961, !1962}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1887, file: !808, line: 282, baseType: !1835, size: 512, align: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1887, file: !808, line: 299, baseType: !1297, size: 256, align: 32, offset: 512)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1887, file: !808, line: 315, baseType: !1892, size: 64, align: 64, offset: 768)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64, align: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1887, file: !808, line: 326, baseType: !992, size: 32, align: 32, offset: 832)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1887, file: !808, line: 326, baseType: !992, size: 32, align: 32, offset: 864)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1887, file: !808, line: 334, baseType: !992, size: 32, align: 32, offset: 896)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1887, file: !808, line: 341, baseType: !992, size: 32, align: 32, offset: 928)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1887, file: !808, line: 346, baseType: !992, size: 32, align: 32, offset: 960)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1887, file: !808, line: 351, baseType: !797, size: 32, align: 32, offset: 992)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1887, file: !808, line: 356, baseType: !1749, size: 64, align: 32, offset: 1024)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1887, file: !808, line: 361, baseType: !1143, size: 64, align: 64, offset: 1088)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1887, file: !808, line: 369, baseType: !1143, size: 64, align: 64, offset: 1152)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1887, file: !808, line: 377, baseType: !1143, size: 64, align: 64, offset: 1216)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1887, file: !808, line: 382, baseType: !992, size: 32, align: 32, offset: 1280)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1887, file: !808, line: 386, baseType: !992, size: 32, align: 32, offset: 1312)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1887, file: !808, line: 391, baseType: !992, size: 32, align: 32, offset: 1344)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1887, file: !808, line: 396, baseType: !953, size: 64, align: 64, offset: 1408)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1887, file: !808, line: 403, baseType: !1908, size: 512, align: 64, offset: 1472)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1767, size: 512, align: 64, elements: !1252)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1887, file: !808, line: 410, baseType: !992, size: 32, align: 32, offset: 1984)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1887, file: !808, line: 415, baseType: !992, size: 32, align: 32, offset: 2016)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1887, file: !808, line: 420, baseType: !992, size: 32, align: 32, offset: 2048)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1887, file: !808, line: 425, baseType: !992, size: 32, align: 32, offset: 2080)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1887, file: !808, line: 435, baseType: !1143, size: 64, align: 64, offset: 2112)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1887, file: !808, line: 440, baseType: !992, size: 32, align: 32, offset: 2176)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1887, file: !808, line: 445, baseType: !1767, size: 64, align: 64, offset: 2240)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1887, file: !808, line: 459, baseType: !1917, size: 512, align: 64, offset: 2304)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1855, size: 512, align: 64, elements: !1252)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1887, file: !808, line: 473, baseType: !1919, size: 64, align: 64, offset: 2816)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64, align: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1887, file: !808, line: 477, baseType: !992, size: 32, align: 32, offset: 2880)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1887, file: !808, line: 479, baseType: !1922, size: 64, align: 64, offset: 2944)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64, align: 64)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64, align: 64)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !808, line: 207, baseType: !1925)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !808, line: 201, size: 320, align: 64, elements: !1926)
!1926 = !{!1927, !1928, !1929, !1930, !1935}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1925, file: !808, line: 202, baseType: !807, size: 32, align: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1925, file: !808, line: 203, baseType: !1038, size: 64, align: 64, offset: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1925, file: !808, line: 204, baseType: !992, size: 32, align: 32, offset: 128)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1925, file: !808, line: 205, baseType: !1931, size: 64, align: 64, offset: 192)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64, align: 64)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1933, line: 86, baseType: !1934)
!1933 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1934 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1933, line: 86, flags: DIFlagFwdDecl)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1925, file: !808, line: 206, baseType: !1855, size: 64, align: 64, offset: 256)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1887, file: !808, line: 480, baseType: !992, size: 32, align: 32, offset: 3008)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1887, file: !808, line: 505, baseType: !992, size: 32, align: 32, offset: 3040)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1887, file: !808, line: 512, baseType: !831, size: 32, align: 32, offset: 3072)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1887, file: !808, line: 514, baseType: !837, size: 32, align: 32, offset: 3104)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1887, file: !808, line: 516, baseType: !855, size: 32, align: 32, offset: 3136)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1887, file: !808, line: 523, baseType: !879, size: 32, align: 32, offset: 3168)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1887, file: !808, line: 525, baseType: !898, size: 32, align: 32, offset: 3200)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1887, file: !808, line: 532, baseType: !1143, size: 64, align: 64, offset: 3264)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1887, file: !808, line: 539, baseType: !1143, size: 64, align: 64, offset: 3328)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1887, file: !808, line: 547, baseType: !1143, size: 64, align: 64, offset: 3392)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1887, file: !808, line: 554, baseType: !1931, size: 64, align: 64, offset: 3456)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1887, file: !808, line: 563, baseType: !992, size: 32, align: 32, offset: 3520)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1887, file: !808, line: 572, baseType: !992, size: 32, align: 32, offset: 3552)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1887, file: !808, line: 581, baseType: !992, size: 32, align: 32, offset: 3584)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1887, file: !808, line: 588, baseType: !1951, size: 64, align: 64, offset: 3648)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64, align: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1887, file: !808, line: 593, baseType: !992, size: 32, align: 32, offset: 3712)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1887, file: !808, line: 596, baseType: !992, size: 32, align: 32, offset: 3744)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1887, file: !808, line: 599, baseType: !1855, size: 64, align: 64, offset: 3776)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1887, file: !808, line: 605, baseType: !1855, size: 64, align: 64, offset: 3840)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1887, file: !808, line: 616, baseType: !1855, size: 64, align: 64, offset: 3904)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1887, file: !808, line: 626, baseType: !1958, size: 64, align: 64, offset: 3968)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1580, line: 216, baseType: !1768)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1887, file: !808, line: 627, baseType: !1958, size: 64, align: 64, offset: 4032)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1887, file: !808, line: 628, baseType: !1958, size: 64, align: 64, offset: 4096)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1887, file: !808, line: 629, baseType: !1958, size: 64, align: 64, offset: 4160)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1887, file: !808, line: 645, baseType: !1855, size: 64, align: 64, offset: 4224)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64, align: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1739, file: !85, line: 3566, baseType: !1965, size: 64, align: 64, offset: 1408)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64, align: 64)
!1966 = !DISubroutineType(types: !1967)
!1967 = !{!992, !1727, !953, !1963, !1850}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1739, file: !85, line: 3567, baseType: !1784, size: 64, align: 64, offset: 1472)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1739, file: !85, line: 3576, baseType: !1970, size: 64, align: 64, offset: 1536)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64, align: 64)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!992, !1727, !1884}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1739, file: !85, line: 3577, baseType: !1974, size: 64, align: 64, offset: 1600)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64, align: 64)
!1975 = !DISubroutineType(types: !1976)
!1976 = !{!992, !1727, !1850}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1739, file: !85, line: 3584, baseType: !1978, size: 64, align: 64, offset: 1664)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64, align: 64)
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!992, !1727, !1981}
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64, align: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1739, file: !85, line: 3589, baseType: !1983, size: 64, align: 64, offset: 1728)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64, align: 64)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{null, !1727}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1739, file: !85, line: 3594, baseType: !992, size: 32, align: 32, offset: 1792)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1739, file: !85, line: 3600, baseType: !980, size: 64, align: 64, offset: 1856)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1739, file: !85, line: 3609, baseType: !1989, size: 64, align: 64, offset: 1920)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64, align: 64)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64, align: 64)
!1991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1992)
!1992 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !85, line: 3609, flags: DIFlagFwdDecl)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1729, file: !85, line: 1566, baseType: !84, size: 32, align: 32, offset: 192)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1729, file: !85, line: 1581, baseType: !952, size: 32, align: 32, offset: 224)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1729, file: !85, line: 1583, baseType: !953, size: 64, align: 64, offset: 256)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1729, file: !85, line: 1591, baseType: !1997, size: 64, align: 64, offset: 320)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64, align: 64)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1798, line: 129, size: 1664, align: 64, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003, !2004, !2022, !2023, !2029, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1998, file: !1798, line: 136, baseType: !992, size: 32, align: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1998, file: !1798, line: 151, baseType: !992, size: 32, align: 32, offset: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1998, file: !1798, line: 157, baseType: !992, size: 32, align: 32, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1998, file: !1798, line: 159, baseType: !1981, size: 64, align: 64, offset: 128)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1998, file: !1798, line: 161, baseType: !2005, size: 64, align: 64, offset: 192)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64, align: 64)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1798, line: 117, baseType: !2007)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1798, line: 100, size: 832, align: 64, elements: !2008)
!2008 = !{!2009, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !2007, file: !1798, line: 105, baseType: !2010, size: 256, align: 64)
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2011, size: 256, align: 64, elements: !1147)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64, align: 64)
!2012 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1857, line: 238, baseType: !2013)
!2013 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1857, line: 238, flags: DIFlagFwdDecl)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2007, file: !1798, line: 110, baseType: !992, size: 32, align: 32, offset: 256)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2007, file: !1798, line: 111, baseType: !992, size: 32, align: 32, offset: 288)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2007, file: !1798, line: 111, baseType: !992, size: 32, align: 32, offset: 320)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !2007, file: !1798, line: 112, baseType: !1297, size: 256, align: 32, offset: 352)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !2007, file: !1798, line: 113, baseType: !1146, size: 128, align: 32, offset: 608)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2007, file: !1798, line: 114, baseType: !992, size: 32, align: 32, offset: 736)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2007, file: !1798, line: 115, baseType: !992, size: 32, align: 32, offset: 768)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !2007, file: !1798, line: 116, baseType: !992, size: 32, align: 32, offset: 800)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1998, file: !1798, line: 163, baseType: !953, size: 64, align: 64, offset: 256)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1998, file: !1798, line: 165, baseType: !2024, size: 128, align: 64, offset: 320)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1798, line: 122, baseType: !2025)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1798, line: 119, size: 128, align: 64, elements: !2026)
!2026 = !{!2027, !2028}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !2025, file: !1798, line: 120, baseType: !1850, size: 64, align: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !2025, file: !1798, line: 121, baseType: !1981, size: 64, align: 64, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1998, file: !1798, line: 166, baseType: !2030, size: 128, align: 64, offset: 448)
!2030 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1798, line: 127, baseType: !2031)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1798, line: 124, size: 128, align: 64, elements: !2032)
!2032 = !{!2033, !2106}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !2031, file: !1798, line: 125, baseType: !2034, size: 64, align: 64)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64, align: 64)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64, align: 64)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !85, line: 5794, baseType: !2037)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !85, line: 5747, size: 512, align: 64, elements: !2038)
!2038 = !{!2039, !2040, !2064, !2068, !2069, !2103, !2104, !2105}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !2037, file: !85, line: 5751, baseType: !1732, size: 64, align: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2037, file: !85, line: 5756, baseType: !2041, size: 64, align: 64, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64, align: 64)
!2042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2043)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !85, line: 5796, size: 512, align: 64, elements: !2044)
!2044 = !{!2045, !2046, !2049, !2050, !2051, !2055, !2059, !2063}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2043, file: !85, line: 5797, baseType: !980, size: 64, align: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !2043, file: !85, line: 5804, baseType: !2047, size: 64, align: 64, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64, align: 64)
!2048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !84)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !2043, file: !85, line: 5815, baseType: !1732, size: 64, align: 64, offset: 128)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2043, file: !85, line: 5825, baseType: !992, size: 32, align: 32, offset: 192)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2043, file: !85, line: 5826, baseType: !2052, size: 64, align: 64, offset: 256)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64, align: 64)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!992, !2035}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2043, file: !85, line: 5827, baseType: !2056, size: 64, align: 64, offset: 320)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64, align: 64)
!2057 = !DISubroutineType(types: !2058)
!2058 = !{!992, !2035, !1850}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2043, file: !85, line: 5828, baseType: !2060, size: 64, align: 64, offset: 384)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64, align: 64)
!2061 = !DISubroutineType(types: !2062)
!2062 = !{null, !2035}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2043, file: !85, line: 5829, baseType: !2060, size: 64, align: 64, offset: 448)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !2037, file: !85, line: 5762, baseType: !2065, size: 64, align: 64, offset: 128)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64, align: 64)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !85, line: 5735, baseType: !2067)
!2067 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !85, line: 5735, flags: DIFlagFwdDecl)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !2037, file: !85, line: 5768, baseType: !953, size: 64, align: 64, offset: 192)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !2037, file: !85, line: 5775, baseType: !2070, size: 64, align: 64, offset: 256)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64, align: 64)
!2071 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !85, line: 4085, baseType: !2072)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !85, line: 3936, size: 1152, align: 64, elements: !2073)
!2073 = !{!2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !2072, file: !85, line: 3940, baseType: !74, size: 32, align: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !2072, file: !85, line: 3944, baseType: !84, size: 32, align: 32, offset: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !2072, file: !85, line: 3948, baseType: !950, size: 32, align: 32, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !2072, file: !85, line: 3958, baseType: !1038, size: 64, align: 64, offset: 128)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !2072, file: !85, line: 3962, baseType: !992, size: 32, align: 32, offset: 192)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2072, file: !85, line: 3968, baseType: !992, size: 32, align: 32, offset: 224)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !2072, file: !85, line: 3973, baseType: !1143, size: 64, align: 64, offset: 256)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !2072, file: !85, line: 3986, baseType: !992, size: 32, align: 32, offset: 320)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !2072, file: !85, line: 3999, baseType: !992, size: 32, align: 32, offset: 352)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2072, file: !85, line: 4004, baseType: !992, size: 32, align: 32, offset: 384)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2072, file: !85, line: 4005, baseType: !992, size: 32, align: 32, offset: 416)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2072, file: !85, line: 4010, baseType: !992, size: 32, align: 32, offset: 448)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2072, file: !85, line: 4011, baseType: !992, size: 32, align: 32, offset: 480)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !2072, file: !85, line: 4020, baseType: !1749, size: 64, align: 32, offset: 512)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !2072, file: !85, line: 4025, baseType: !908, size: 32, align: 32, offset: 576)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !2072, file: !85, line: 4030, baseType: !831, size: 32, align: 32, offset: 608)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !2072, file: !85, line: 4031, baseType: !837, size: 32, align: 32, offset: 640)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !2072, file: !85, line: 4032, baseType: !855, size: 32, align: 32, offset: 672)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !2072, file: !85, line: 4033, baseType: !879, size: 32, align: 32, offset: 704)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !2072, file: !85, line: 4034, baseType: !898, size: 32, align: 32, offset: 736)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !2072, file: !85, line: 4039, baseType: !992, size: 32, align: 32, offset: 768)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !2072, file: !85, line: 4046, baseType: !1767, size: 64, align: 64, offset: 832)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2072, file: !85, line: 4050, baseType: !992, size: 32, align: 32, offset: 896)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2072, file: !85, line: 4054, baseType: !992, size: 32, align: 32, offset: 928)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !2072, file: !85, line: 4061, baseType: !992, size: 32, align: 32, offset: 960)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !2072, file: !85, line: 4065, baseType: !992, size: 32, align: 32, offset: 992)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !2072, file: !85, line: 4073, baseType: !992, size: 32, align: 32, offset: 1024)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !2072, file: !85, line: 4080, baseType: !992, size: 32, align: 32, offset: 1056)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !2072, file: !85, line: 4084, baseType: !992, size: 32, align: 32, offset: 1088)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !2037, file: !85, line: 5781, baseType: !2070, size: 64, align: 64, offset: 320)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !2037, file: !85, line: 5787, baseType: !1749, size: 64, align: 32, offset: 384)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !2037, file: !85, line: 5793, baseType: !1749, size: 64, align: 32, offset: 448)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !2031, file: !1798, line: 126, baseType: !992, size: 32, align: 32, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1998, file: !1798, line: 172, baseType: !1850, size: 64, align: 64, offset: 576)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1998, file: !1798, line: 177, baseType: !1038, size: 64, align: 64, offset: 640)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1998, file: !1798, line: 178, baseType: !952, size: 32, align: 32, offset: 704)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1998, file: !1798, line: 180, baseType: !953, size: 64, align: 64, offset: 768)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1998, file: !1798, line: 185, baseType: !992, size: 32, align: 32, offset: 832)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1998, file: !1798, line: 190, baseType: !953, size: 64, align: 64, offset: 896)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1998, file: !1798, line: 195, baseType: !992, size: 32, align: 32, offset: 960)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1998, file: !1798, line: 200, baseType: !1850, size: 64, align: 64, offset: 1024)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1998, file: !1798, line: 201, baseType: !992, size: 32, align: 32, offset: 1088)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1998, file: !1798, line: 202, baseType: !1981, size: 64, align: 64, offset: 1152)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1998, file: !1798, line: 203, baseType: !992, size: 32, align: 32, offset: 1216)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1998, file: !1798, line: 205, baseType: !992, size: 32, align: 32, offset: 1248)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1998, file: !1798, line: 206, baseType: !992, size: 32, align: 32, offset: 1280)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1998, file: !1798, line: 209, baseType: !1958, size: 64, align: 64, offset: 1344)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1998, file: !1798, line: 212, baseType: !1958, size: 64, align: 64, offset: 1408)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1998, file: !1798, line: 213, baseType: !1981, size: 64, align: 64, offset: 1472)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1998, file: !1798, line: 215, baseType: !992, size: 32, align: 32, offset: 1536)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1998, file: !1798, line: 217, baseType: !992, size: 32, align: 32, offset: 1568)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1998, file: !1798, line: 220, baseType: !992, size: 32, align: 32, offset: 1600)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1729, file: !85, line: 1598, baseType: !953, size: 64, align: 64, offset: 384)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1729, file: !85, line: 1606, baseType: !1143, size: 64, align: 64, offset: 448)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1729, file: !85, line: 1614, baseType: !992, size: 32, align: 32, offset: 512)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1729, file: !85, line: 1622, baseType: !992, size: 32, align: 32, offset: 544)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1729, file: !85, line: 1628, baseType: !992, size: 32, align: 32, offset: 576)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1729, file: !85, line: 1636, baseType: !992, size: 32, align: 32, offset: 608)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1729, file: !85, line: 1643, baseType: !992, size: 32, align: 32, offset: 640)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1729, file: !85, line: 1657, baseType: !1038, size: 64, align: 64, offset: 704)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1729, file: !85, line: 1658, baseType: !992, size: 32, align: 32, offset: 768)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1729, file: !85, line: 1679, baseType: !1749, size: 64, align: 32, offset: 800)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1729, file: !85, line: 1688, baseType: !992, size: 32, align: 32, offset: 864)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1729, file: !85, line: 1712, baseType: !992, size: 32, align: 32, offset: 896)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1729, file: !85, line: 1729, baseType: !992, size: 32, align: 32, offset: 928)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1729, file: !85, line: 1729, baseType: !992, size: 32, align: 32, offset: 960)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1729, file: !85, line: 1744, baseType: !992, size: 32, align: 32, offset: 992)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1729, file: !85, line: 1744, baseType: !992, size: 32, align: 32, offset: 1024)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1729, file: !85, line: 1751, baseType: !992, size: 32, align: 32, offset: 1056)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1729, file: !85, line: 1766, baseType: !544, size: 32, align: 32, offset: 1088)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1729, file: !85, line: 1791, baseType: !2145, size: 64, align: 64, offset: 1152)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64, align: 64)
!2146 = !DISubroutineType(types: !2147)
!2147 = !{null, !2148, !1884, !1963, !992, !992, !992}
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64, align: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1729, file: !85, line: 1808, baseType: !2150, size: 64, align: 64, offset: 1216)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64, align: 64)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{!544, !2148, !1756}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1729, file: !85, line: 1816, baseType: !992, size: 32, align: 32, offset: 1280)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1729, file: !85, line: 1825, baseType: !969, size: 32, align: 32, offset: 1312)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1729, file: !85, line: 1830, baseType: !992, size: 32, align: 32, offset: 1344)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1729, file: !85, line: 1838, baseType: !969, size: 32, align: 32, offset: 1376)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1729, file: !85, line: 1846, baseType: !992, size: 32, align: 32, offset: 1408)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1729, file: !85, line: 1851, baseType: !992, size: 32, align: 32, offset: 1440)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1729, file: !85, line: 1861, baseType: !969, size: 32, align: 32, offset: 1472)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1729, file: !85, line: 1868, baseType: !969, size: 32, align: 32, offset: 1504)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1729, file: !85, line: 1875, baseType: !969, size: 32, align: 32, offset: 1536)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1729, file: !85, line: 1882, baseType: !969, size: 32, align: 32, offset: 1568)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1729, file: !85, line: 1889, baseType: !969, size: 32, align: 32, offset: 1600)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1729, file: !85, line: 1896, baseType: !969, size: 32, align: 32, offset: 1632)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1729, file: !85, line: 1903, baseType: !969, size: 32, align: 32, offset: 1664)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1729, file: !85, line: 1910, baseType: !992, size: 32, align: 32, offset: 1696)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1729, file: !85, line: 1915, baseType: !992, size: 32, align: 32, offset: 1728)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1729, file: !85, line: 1926, baseType: !1963, size: 64, align: 64, offset: 1792)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1729, file: !85, line: 1935, baseType: !1749, size: 64, align: 32, offset: 1856)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1729, file: !85, line: 1942, baseType: !992, size: 32, align: 32, offset: 1920)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1729, file: !85, line: 1948, baseType: !992, size: 32, align: 32, offset: 1952)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1729, file: !85, line: 1954, baseType: !992, size: 32, align: 32, offset: 1984)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1729, file: !85, line: 1960, baseType: !992, size: 32, align: 32, offset: 2016)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1729, file: !85, line: 1984, baseType: !992, size: 32, align: 32, offset: 2048)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1729, file: !85, line: 1991, baseType: !992, size: 32, align: 32, offset: 2080)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1729, file: !85, line: 1996, baseType: !992, size: 32, align: 32, offset: 2112)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1729, file: !85, line: 2004, baseType: !992, size: 32, align: 32, offset: 2144)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1729, file: !85, line: 2011, baseType: !992, size: 32, align: 32, offset: 2176)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1729, file: !85, line: 2018, baseType: !992, size: 32, align: 32, offset: 2208)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1729, file: !85, line: 2027, baseType: !992, size: 32, align: 32, offset: 2240)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1729, file: !85, line: 2034, baseType: !992, size: 32, align: 32, offset: 2272)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1729, file: !85, line: 2044, baseType: !992, size: 32, align: 32, offset: 2304)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1729, file: !85, line: 2054, baseType: !1051, size: 64, align: 64, offset: 2368)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1729, file: !85, line: 2061, baseType: !1051, size: 64, align: 64, offset: 2432)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1729, file: !85, line: 2066, baseType: !992, size: 32, align: 32, offset: 2496)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1729, file: !85, line: 2070, baseType: !992, size: 32, align: 32, offset: 2528)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1729, file: !85, line: 2078, baseType: !992, size: 32, align: 32, offset: 2560)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1729, file: !85, line: 2085, baseType: !992, size: 32, align: 32, offset: 2592)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1729, file: !85, line: 2092, baseType: !992, size: 32, align: 32, offset: 2624)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1729, file: !85, line: 2099, baseType: !992, size: 32, align: 32, offset: 2656)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1729, file: !85, line: 2106, baseType: !992, size: 32, align: 32, offset: 2688)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1729, file: !85, line: 2113, baseType: !992, size: 32, align: 32, offset: 2720)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1729, file: !85, line: 2120, baseType: !992, size: 32, align: 32, offset: 2752)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1729, file: !85, line: 2125, baseType: !992, size: 32, align: 32, offset: 2784)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1729, file: !85, line: 2133, baseType: !992, size: 32, align: 32, offset: 2816)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1729, file: !85, line: 2140, baseType: !992, size: 32, align: 32, offset: 2848)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1729, file: !85, line: 2145, baseType: !992, size: 32, align: 32, offset: 2880)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1729, file: !85, line: 2153, baseType: !992, size: 32, align: 32, offset: 2912)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1729, file: !85, line: 2158, baseType: !992, size: 32, align: 32, offset: 2944)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1729, file: !85, line: 2166, baseType: !837, size: 32, align: 32, offset: 2976)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1729, file: !85, line: 2173, baseType: !855, size: 32, align: 32, offset: 3008)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1729, file: !85, line: 2180, baseType: !879, size: 32, align: 32, offset: 3040)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1729, file: !85, line: 2187, baseType: !831, size: 32, align: 32, offset: 3072)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1729, file: !85, line: 2194, baseType: !898, size: 32, align: 32, offset: 3104)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1729, file: !85, line: 2203, baseType: !992, size: 32, align: 32, offset: 3136)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1729, file: !85, line: 2209, baseType: !908, size: 32, align: 32, offset: 3168)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1729, file: !85, line: 2212, baseType: !992, size: 32, align: 32, offset: 3200)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1729, file: !85, line: 2213, baseType: !992, size: 32, align: 32, offset: 3232)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1729, file: !85, line: 2220, baseType: !744, size: 32, align: 32, offset: 3264)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1729, file: !85, line: 2232, baseType: !992, size: 32, align: 32, offset: 3296)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1729, file: !85, line: 2243, baseType: !992, size: 32, align: 32, offset: 3328)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1729, file: !85, line: 2249, baseType: !992, size: 32, align: 32, offset: 3360)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1729, file: !85, line: 2256, baseType: !992, size: 32, align: 32, offset: 3392)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1729, file: !85, line: 2263, baseType: !1767, size: 64, align: 64, offset: 3456)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1729, file: !85, line: 2270, baseType: !1767, size: 64, align: 64, offset: 3520)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1729, file: !85, line: 2277, baseType: !916, size: 32, align: 32, offset: 3584)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1729, file: !85, line: 2285, baseType: !744, size: 32, align: 32, offset: 3616)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1729, file: !85, line: 2367, baseType: !2219, size: 64, align: 64, offset: 3648)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64, align: 64)
!2220 = !DISubroutineType(types: !2221)
!2221 = !{!992, !2148, !1981, !992}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1729, file: !85, line: 2383, baseType: !992, size: 32, align: 32, offset: 3712)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1729, file: !85, line: 2386, baseType: !969, size: 32, align: 32, offset: 3744)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1729, file: !85, line: 2387, baseType: !969, size: 32, align: 32, offset: 3776)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1729, file: !85, line: 2394, baseType: !992, size: 32, align: 32, offset: 3808)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1729, file: !85, line: 2401, baseType: !992, size: 32, align: 32, offset: 3840)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1729, file: !85, line: 2408, baseType: !992, size: 32, align: 32, offset: 3872)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1729, file: !85, line: 2415, baseType: !992, size: 32, align: 32, offset: 3904)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1729, file: !85, line: 2422, baseType: !992, size: 32, align: 32, offset: 3936)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1729, file: !85, line: 2423, baseType: !2231, size: 64, align: 64, offset: 3968)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 64, align: 64)
!2232 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !85, line: 831, baseType: !2233)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !85, line: 826, size: 128, align: 32, elements: !2234)
!2234 = !{!2235, !2236, !2237, !2238}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2233, file: !85, line: 827, baseType: !992, size: 32, align: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2233, file: !85, line: 828, baseType: !992, size: 32, align: 32, offset: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !2233, file: !85, line: 829, baseType: !992, size: 32, align: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !2233, file: !85, line: 830, baseType: !969, size: 32, align: 32, offset: 96)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1729, file: !85, line: 2430, baseType: !1143, size: 64, align: 64, offset: 4032)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1729, file: !85, line: 2437, baseType: !1143, size: 64, align: 64, offset: 4096)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1729, file: !85, line: 2444, baseType: !969, size: 32, align: 32, offset: 4160)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1729, file: !85, line: 2451, baseType: !969, size: 32, align: 32, offset: 4192)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1729, file: !85, line: 2458, baseType: !992, size: 32, align: 32, offset: 4224)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1729, file: !85, line: 2469, baseType: !992, size: 32, align: 32, offset: 4256)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1729, file: !85, line: 2475, baseType: !992, size: 32, align: 32, offset: 4288)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1729, file: !85, line: 2481, baseType: !992, size: 32, align: 32, offset: 4320)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1729, file: !85, line: 2485, baseType: !992, size: 32, align: 32, offset: 4352)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1729, file: !85, line: 2489, baseType: !992, size: 32, align: 32, offset: 4384)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1729, file: !85, line: 2493, baseType: !992, size: 32, align: 32, offset: 4416)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1729, file: !85, line: 2501, baseType: !992, size: 32, align: 32, offset: 4448)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1729, file: !85, line: 2506, baseType: !992, size: 32, align: 32, offset: 4480)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1729, file: !85, line: 2510, baseType: !992, size: 32, align: 32, offset: 4512)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1729, file: !85, line: 2514, baseType: !1143, size: 64, align: 64, offset: 4544)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1729, file: !85, line: 2528, baseType: !2255, size: 64, align: 64, offset: 4608)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64, align: 64)
!2256 = !DISubroutineType(types: !2257)
!2257 = !{null, !2148, !953, !992, !992}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1729, file: !85, line: 2534, baseType: !992, size: 32, align: 32, offset: 4672)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1729, file: !85, line: 2545, baseType: !992, size: 32, align: 32, offset: 4704)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1729, file: !85, line: 2547, baseType: !992, size: 32, align: 32, offset: 4736)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1729, file: !85, line: 2549, baseType: !992, size: 32, align: 32, offset: 4768)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1729, file: !85, line: 2551, baseType: !992, size: 32, align: 32, offset: 4800)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1729, file: !85, line: 2553, baseType: !992, size: 32, align: 32, offset: 4832)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1729, file: !85, line: 2555, baseType: !992, size: 32, align: 32, offset: 4864)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1729, file: !85, line: 2557, baseType: !992, size: 32, align: 32, offset: 4896)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1729, file: !85, line: 2559, baseType: !992, size: 32, align: 32, offset: 4928)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1729, file: !85, line: 2563, baseType: !992, size: 32, align: 32, offset: 4960)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1729, file: !85, line: 2571, baseType: !1842, size: 64, align: 64, offset: 4992)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1729, file: !85, line: 2579, baseType: !1842, size: 64, align: 64, offset: 5056)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1729, file: !85, line: 2586, baseType: !992, size: 32, align: 32, offset: 5120)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1729, file: !85, line: 2615, baseType: !992, size: 32, align: 32, offset: 5152)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1729, file: !85, line: 2627, baseType: !992, size: 32, align: 32, offset: 5184)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1729, file: !85, line: 2637, baseType: !992, size: 32, align: 32, offset: 5216)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1729, file: !85, line: 2681, baseType: !992, size: 32, align: 32, offset: 5248)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1729, file: !85, line: 2709, baseType: !1143, size: 64, align: 64, offset: 5312)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1729, file: !85, line: 2716, baseType: !2277, size: 64, align: 64, offset: 5376)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64, align: 64)
!2278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2279)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !85, line: 3636, size: 896, align: 64, elements: !2280)
!2280 = !{!2281, !2282, !2283, !2284, !2285, !2286, !2287, !2291, !2295, !2296, !2297, !2298, !2304, !2305, !2306, !2307, !2308}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2279, file: !85, line: 3642, baseType: !980, size: 64, align: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2279, file: !85, line: 3649, baseType: !74, size: 32, align: 32, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2279, file: !85, line: 3656, baseType: !84, size: 32, align: 32, offset: 96)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !2279, file: !85, line: 3663, baseType: !544, size: 32, align: 32, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !2279, file: !85, line: 3669, baseType: !992, size: 32, align: 32, offset: 160)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !2279, file: !85, line: 3682, baseType: !1978, size: 64, align: 64, offset: 192)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !2279, file: !85, line: 3698, baseType: !2288, size: 64, align: 64, offset: 256)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64, align: 64)
!2289 = !DISubroutineType(types: !2290)
!2290 = !{!992, !1727, !1218, !950}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !2279, file: !85, line: 3712, baseType: !2292, size: 64, align: 64, offset: 320)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64, align: 64)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!992, !1727, !992, !1218, !950}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !2279, file: !85, line: 3726, baseType: !2288, size: 64, align: 64, offset: 384)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !2279, file: !85, line: 3737, baseType: !1784, size: 64, align: 64, offset: 448)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !2279, file: !85, line: 3746, baseType: !992, size: 32, align: 32, offset: 512)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !2279, file: !85, line: 3757, baseType: !2299, size: 64, align: 64, offset: 576)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64, align: 64)
!2300 = !DISubroutineType(types: !2301)
!2301 = !{null, !2302}
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64, align: 64)
!2303 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !85, line: 3617, flags: DIFlagFwdDecl)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2279, file: !85, line: 3766, baseType: !1784, size: 64, align: 64, offset: 640)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !2279, file: !85, line: 3774, baseType: !1784, size: 64, align: 64, offset: 704)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !2279, file: !85, line: 3780, baseType: !992, size: 32, align: 32, offset: 768)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !2279, file: !85, line: 3785, baseType: !992, size: 32, align: 32, offset: 800)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !2279, file: !85, line: 3795, baseType: !2309, size: 64, align: 64, offset: 832)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64, align: 64)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{!992, !1727, !1855}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1729, file: !85, line: 2728, baseType: !953, size: 64, align: 64, offset: 5440)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1729, file: !85, line: 2735, baseType: !1908, size: 512, align: 64, offset: 5504)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1729, file: !85, line: 2742, baseType: !992, size: 32, align: 32, offset: 6016)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1729, file: !85, line: 2755, baseType: !992, size: 32, align: 32, offset: 6048)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1729, file: !85, line: 2776, baseType: !992, size: 32, align: 32, offset: 6080)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1729, file: !85, line: 2783, baseType: !992, size: 32, align: 32, offset: 6112)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1729, file: !85, line: 2791, baseType: !992, size: 32, align: 32, offset: 6144)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1729, file: !85, line: 2802, baseType: !1981, size: 64, align: 64, offset: 6208)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1729, file: !85, line: 2811, baseType: !992, size: 32, align: 32, offset: 6272)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1729, file: !85, line: 2821, baseType: !992, size: 32, align: 32, offset: 6304)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1729, file: !85, line: 2830, baseType: !992, size: 32, align: 32, offset: 6336)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1729, file: !85, line: 2840, baseType: !992, size: 32, align: 32, offset: 6368)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1729, file: !85, line: 2851, baseType: !2325, size: 64, align: 64, offset: 6400)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64, align: 64)
!2326 = !DISubroutineType(types: !2327)
!2327 = !{!992, !2148, !2328, !953, !1963, !992, !992}
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64, align: 64)
!2329 = !DISubroutineType(types: !2330)
!2330 = !{!992, !2148, !953}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1729, file: !85, line: 2871, baseType: !2332, size: 64, align: 64, offset: 6464)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 64, align: 64)
!2333 = !DISubroutineType(types: !2334)
!2334 = !{!992, !2148, !2335, !953, !1963, !992}
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64, align: 64)
!2336 = !DISubroutineType(types: !2337)
!2337 = !{!992, !2148, !953, !992, !992}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1729, file: !85, line: 2878, baseType: !992, size: 32, align: 32, offset: 6528)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1729, file: !85, line: 2885, baseType: !992, size: 32, align: 32, offset: 6560)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1729, file: !85, line: 3005, baseType: !992, size: 32, align: 32, offset: 6592)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1729, file: !85, line: 3013, baseType: !928, size: 32, align: 32, offset: 6624)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1729, file: !85, line: 3020, baseType: !928, size: 32, align: 32, offset: 6656)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1729, file: !85, line: 3027, baseType: !928, size: 32, align: 32, offset: 6688)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1729, file: !85, line: 3037, baseType: !1038, size: 64, align: 64, offset: 6720)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1729, file: !85, line: 3038, baseType: !992, size: 32, align: 32, offset: 6784)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1729, file: !85, line: 3050, baseType: !1767, size: 64, align: 64, offset: 6848)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1729, file: !85, line: 3065, baseType: !992, size: 32, align: 32, offset: 6912)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1729, file: !85, line: 3083, baseType: !992, size: 32, align: 32, offset: 6944)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1729, file: !85, line: 3092, baseType: !1749, size: 64, align: 32, offset: 6976)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1729, file: !85, line: 3099, baseType: !544, size: 32, align: 32, offset: 7040)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1729, file: !85, line: 3106, baseType: !1749, size: 64, align: 32, offset: 7072)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1729, file: !85, line: 3113, baseType: !2353, size: 64, align: 64, offset: 7168)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64, align: 64)
!2354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2355)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !85, line: 740, baseType: !2356)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !85, line: 712, size: 384, align: 64, elements: !2357)
!2357 = !{!2358, !2359, !2360, !2361, !2362, !2363, !2366}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2356, file: !85, line: 713, baseType: !84, size: 32, align: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2356, file: !85, line: 714, baseType: !74, size: 32, align: 32, offset: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2356, file: !85, line: 720, baseType: !980, size: 64, align: 64, offset: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !2356, file: !85, line: 724, baseType: !980, size: 64, align: 64, offset: 128)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !2356, file: !85, line: 728, baseType: !992, size: 32, align: 32, offset: 192)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !2356, file: !85, line: 734, baseType: !2364, size: 64, align: 64, offset: 256)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64, align: 64)
!2365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !980)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !2356, file: !85, line: 739, baseType: !2367, size: 64, align: 64, offset: 320)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 64, align: 64)
!2368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1775)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1729, file: !85, line: 3129, baseType: !1143, size: 64, align: 64, offset: 7232)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1729, file: !85, line: 3130, baseType: !1143, size: 64, align: 64, offset: 7296)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1729, file: !85, line: 3131, baseType: !1143, size: 64, align: 64, offset: 7360)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1729, file: !85, line: 3132, baseType: !1143, size: 64, align: 64, offset: 7424)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1729, file: !85, line: 3139, baseType: !1842, size: 64, align: 64, offset: 7488)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1729, file: !85, line: 3147, baseType: !992, size: 32, align: 32, offset: 7552)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1729, file: !85, line: 3165, baseType: !992, size: 32, align: 32, offset: 7584)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1729, file: !85, line: 3172, baseType: !992, size: 32, align: 32, offset: 7616)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1729, file: !85, line: 3180, baseType: !992, size: 32, align: 32, offset: 7648)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1729, file: !85, line: 3191, baseType: !1051, size: 64, align: 64, offset: 7680)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1729, file: !85, line: 3199, baseType: !1038, size: 64, align: 64, offset: 7744)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1729, file: !85, line: 3207, baseType: !1842, size: 64, align: 64, offset: 7808)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1729, file: !85, line: 3214, baseType: !952, size: 32, align: 32, offset: 7872)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1729, file: !85, line: 3224, baseType: !1873, size: 64, align: 64, offset: 7936)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1729, file: !85, line: 3225, baseType: !992, size: 32, align: 32, offset: 8000)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1729, file: !85, line: 3249, baseType: !1855, size: 64, align: 64, offset: 8064)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1729, file: !85, line: 3256, baseType: !992, size: 32, align: 32, offset: 8128)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1729, file: !85, line: 3271, baseType: !992, size: 32, align: 32, offset: 8160)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1729, file: !85, line: 3279, baseType: !1143, size: 64, align: 64, offset: 8192)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1729, file: !85, line: 3301, baseType: !1855, size: 64, align: 64, offset: 8256)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1729, file: !85, line: 3310, baseType: !992, size: 32, align: 32, offset: 8320)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1729, file: !85, line: 3337, baseType: !992, size: 32, align: 32, offset: 8352)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1729, file: !85, line: 3351, baseType: !992, size: 32, align: 32, offset: 8384)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1729, file: !85, line: 3359, baseType: !992, size: 32, align: 32, offset: 8416)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1723, file: !44, line: 296, baseType: !1981, size: 64, align: 64, offset: 128)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "is_saved", scope: !1723, file: !44, line: 298, baseType: !992, size: 32, align: 32, offset: 192)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "che_drc", scope: !1723, file: !44, line: 299, baseType: !2396, size: 3808, align: 32, offset: 224)
!2396 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicRangeControl", file: !44, line: 222, baseType: !2397)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicRangeControl", file: !44, line: 211, size: 3808, align: 32, elements: !2398)
!2398 = !{!2399, !2400, !2404, !2405, !2408, !2409, !2410, !2411}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "pce_instance_tag", scope: !2397, file: !44, line: 212, baseType: !992, size: 32, align: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_sgn", scope: !2397, file: !44, line: 213, baseType: !2401, size: 544, align: 32, offset: 32)
!2401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 544, align: 32, elements: !2402)
!2402 = !{!2403}
!2403 = !DISubrange(count: 17)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_rng_ctl", scope: !2397, file: !44, line: 214, baseType: !2401, size: 544, align: 32, offset: 576)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_mask", scope: !2397, file: !44, line: 215, baseType: !2406, size: 2048, align: 32, offset: 1120)
!2406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 2048, align: 32, elements: !2407)
!2407 = !{!1465}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "band_incr", scope: !2397, file: !44, line: 216, baseType: !992, size: 32, align: 32, offset: 3168)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation_scheme", scope: !2397, file: !44, line: 217, baseType: !992, size: 32, align: 32, offset: 3200)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "band_top", scope: !2397, file: !44, line: 218, baseType: !2401, size: 544, align: 32, offset: 3232)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ref_level", scope: !2397, file: !44, line: 219, baseType: !992, size: 32, align: 32, offset: 3776)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "che", scope: !1723, file: !44, line: 305, baseType: !2413, size: 4096, align: 64, offset: 4032)
!2413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1222, size: 4096, align: 64, elements: !2414)
!2414 = !{!1148, !1160}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "tag_che_map", scope: !1723, file: !44, line: 306, baseType: !2413, size: 4096, align: 64, offset: 8128)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "tags_mapped", scope: !1723, file: !44, line: 307, baseType: !992, size: 32, align: 32, offset: 12224)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "warned_remapping_once", scope: !1723, file: !44, line: 308, baseType: !992, size: 32, align: 32, offset: 12256)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mdct", scope: !1723, file: !44, line: 316, baseType: !1334, size: 32768, align: 32, offset: 12288)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !1723, file: !44, line: 323, baseType: !1044, size: 896, align: 64, offset: 45056)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_small", scope: !1723, file: !44, line: 324, baseType: !1044, size: 896, align: 64, offset: 45952)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ld", scope: !1723, file: !44, line: 325, baseType: !1044, size: 896, align: 64, offset: 46848)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_ltp", scope: !1723, file: !44, line: 326, baseType: !1044, size: 896, align: 64, offset: 47744)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "mdct120", scope: !1723, file: !44, line: 330, baseType: !2424, size: 64, align: 64, offset: 48640)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64, align: 64)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDCT15Context", file: !2426, line: 54, baseType: !2427)
!2426 = !DIFile(filename: "libavcodec/mdct15.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDCT15Context", file: !2426, line: 28, size: 5632, align: 256, elements: !2428)
!2428 = !{!2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2440, !2444, !2448, !2453}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "fft_n", scope: !2427, file: !2426, line: 29, baseType: !992, size: 32, align: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "len2", scope: !2427, file: !2426, line: 30, baseType: !992, size: 32, align: 32, offset: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "len4", scope: !2427, file: !2426, line: 31, baseType: !992, size: 32, align: 32, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !2427, file: !2426, line: 32, baseType: !992, size: 32, align: 32, offset: 96)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "pfa_prereindex", scope: !2427, file: !2426, line: 33, baseType: !1963, size: 64, align: 64, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "pfa_postreindex", scope: !2427, file: !2426, line: 34, baseType: !1963, size: 64, align: 64, offset: 192)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "ptwo_fft", scope: !2427, file: !2426, line: 36, baseType: !1044, size: 896, align: 64, offset: 256)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !2427, file: !2426, line: 37, baseType: !1055, size: 64, align: 64, offset: 1152)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "twiddle_exptab", scope: !2427, file: !2426, line: 38, baseType: !1055, size: 64, align: 64, offset: 1216)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "exptab", scope: !2427, file: !2426, line: 40, baseType: !2439, size: 4096, align: 32, offset: 1280)
!2439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1056, size: 4096, align: 32, elements: !2407)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "fft15", scope: !2427, file: !2426, line: 43, baseType: !2441, size: 64, align: 64, offset: 5376)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64, align: 64)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{null, !1055, !1055, !1055, !1579}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "postreindex", scope: !2427, file: !2426, line: 46, baseType: !2445, size: 64, align: 64, offset: 5440)
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 64, align: 64)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{null, !1055, !1055, !1055, !1963, !1579}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !2427, file: !2426, line: 49, baseType: !2449, size: 64, align: 64, offset: 5504)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64, align: 64)
!2450 = !DISubroutineType(types: !2451)
!2451 = !{null, !2452, !1102, !1103, !1579}
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64, align: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !2427, file: !2426, line: 52, baseType: !2449, size: 64, align: 64, offset: 5568)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "mdct480", scope: !1723, file: !44, line: 331, baseType: !2424, size: 64, align: 64, offset: 48704)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "mdct960", scope: !1723, file: !44, line: 332, baseType: !2424, size: 64, align: 64, offset: 48768)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1723, file: !44, line: 333, baseType: !1093, size: 64, align: 64, offset: 48832)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "random_state", scope: !1723, file: !44, line: 335, baseType: !992, size: 32, align: 32, offset: 48896)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "output_element", scope: !1723, file: !44, line: 342, baseType: !2459, size: 4096, align: 64, offset: 48960)
!2459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2460, size: 4096, align: 64, elements: !2407)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64, align: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "force_dmono_mode", scope: !1723, file: !44, line: 350, baseType: !992, size: 32, align: 32, offset: 53056)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "dmono_mode", scope: !1723, file: !44, line: 351, baseType: !992, size: 32, align: 32, offset: 53088)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1723, file: !44, line: 354, baseType: !2464, size: 4096, align: 32, offset: 53248)
!2464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 4096, align: 32, elements: !1232)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "oc", scope: !1723, file: !44, line: 356, baseType: !2466, size: 4224, align: 64, offset: 57344)
!2466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2467, size: 4224, align: 64, elements: !1213)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "OutputConfiguration", file: !44, line: 130, baseType: !2468)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OutputConfiguration", file: !44, line: 123, size: 2112, align: 64, elements: !2469)
!2469 = !{!2470, !2487, !2490, !2491, !2492, !2493}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "m4ac", scope: !2468, file: !44, line: 124, baseType: !2471, size: 384, align: 32)
!2471 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPEG4AudioConfig", file: !2472, line: 46, baseType: !2473)
!2472 = !DIFile(filename: "libavcodec/mpeg4audio.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPEG4AudioConfig", file: !2472, line: 33, size: 384, align: 32, elements: !2474)
!2474 = !{!2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "object_type", scope: !2473, file: !2472, line: 34, baseType: !992, size: 32, align: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_index", scope: !2473, file: !2472, line: 35, baseType: !992, size: 32, align: 32, offset: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !2473, file: !2472, line: 36, baseType: !992, size: 32, align: 32, offset: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "chan_config", scope: !2473, file: !2472, line: 37, baseType: !992, size: 32, align: 32, offset: 96)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "sbr", scope: !2473, file: !2472, line: 38, baseType: !992, size: 32, align: 32, offset: 128)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "ext_object_type", scope: !2473, file: !2472, line: 39, baseType: !992, size: 32, align: 32, offset: 160)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sampling_index", scope: !2473, file: !2472, line: 40, baseType: !992, size: 32, align: 32, offset: 192)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "ext_sample_rate", scope: !2473, file: !2472, line: 41, baseType: !992, size: 32, align: 32, offset: 224)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "ext_chan_config", scope: !2473, file: !2472, line: 42, baseType: !992, size: 32, align: 32, offset: 256)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2473, file: !2472, line: 43, baseType: !992, size: 32, align: 32, offset: 288)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !2473, file: !2472, line: 44, baseType: !992, size: 32, align: 32, offset: 320)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length_short", scope: !2473, file: !2472, line: 45, baseType: !992, size: 32, align: 32, offset: 352)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map", scope: !2468, file: !44, line: 125, baseType: !2488, size: 1536, align: 8, offset: 384)
!2488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 1536, align: 8, elements: !2489)
!2489 = !{!1465, !1152}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "layout_map_tags", scope: !2468, file: !44, line: 126, baseType: !992, size: 32, align: 32, offset: 1920)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2468, file: !44, line: 127, baseType: !992, size: 32, align: 32, offset: 1952)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !2468, file: !44, line: 128, baseType: !1767, size: 64, align: 64, offset: 1984)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2468, file: !44, line: 129, baseType: !937, size: 32, align: 32, offset: 2048)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "warned_num_aac_frames", scope: !1723, file: !44, line: 357, baseType: !992, size: 32, align: 32, offset: 61568)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "warned_960_sbr", scope: !1723, file: !44, line: 358, baseType: !992, size: 32, align: 32, offset: 61600)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "warned_gain_control", scope: !1723, file: !44, line: 360, baseType: !992, size: 32, align: 32, offset: 61632)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_and_windowing", scope: !1723, file: !44, line: 363, baseType: !2498, size: 64, align: 64, offset: 61696)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64, align: 64)
!2499 = !DISubroutineType(types: !2500)
!2500 = !{null, !1721, !2460}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "apply_ltp", scope: !1723, file: !44, line: 364, baseType: !2498, size: 64, align: 64, offset: 61760)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "apply_tns", scope: !1723, file: !44, line: 365, baseType: !2503, size: 64, align: 64, offset: 61824)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64, align: 64)
!2504 = !DISubroutineType(types: !2505)
!2505 = !{null, !1370, !2506, !2507, !992}
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64, align: 64)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64, align: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "windowing_and_mdct_ltp", scope: !1723, file: !44, line: 367, baseType: !2509, size: 64, align: 64, offset: 61888)
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 64, align: 64)
!2510 = !DISubroutineType(types: !2511)
!2511 = !{null, !1721, !1370, !1370, !2507}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "update_ltp", scope: !1723, file: !44, line: 369, baseType: !2498, size: 64, align: 64, offset: 61952)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "vector_pow43", scope: !1723, file: !44, line: 370, baseType: !2514, size: 64, align: 64, offset: 62016)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 64, align: 64)
!2515 = !DISubroutineType(types: !2516)
!2516 = !{null, !1963, !992}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "subband_scale", scope: !1723, file: !44, line: 371, baseType: !2518, size: 64, align: 64, offset: 62080)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64, align: 64)
!2519 = !DISubroutineType(types: !2520)
!2520 = !{null, !1963, !1963, !992, !992, !992, !953}
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64, align: 64)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64, align: 64)
!2523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 2560, align: 32, elements: !1704)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 64, align: 64)
!2525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1565, size: 65536, align: 32, elements: !2526)
!2526 = !{!1199, !1199, !1214}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_assemble", scope: !1715, file: !1386, line: 124, baseType: !2528, size: 64, align: 64, offset: 64)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64, align: 64)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{null, !2531, !1702, !2521, !2532, !1759}
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64, align: 64)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64, align: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_x_gen", scope: !1715, file: !1386, line: 128, baseType: !2534, size: 64, align: 64, offset: 128)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64, align: 64)
!2535 = !DISubroutineType(types: !2536)
!2536 = !{!992, !2521, !1588, !2537, !2537, !1702, !992}
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64, align: 64)
!2538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1565, size: 4096, align: 32, elements: !1643)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "sbr_hf_inverse_filter", scope: !1715, file: !1386, line: 131, baseType: !2540, size: 64, align: 64, offset: 192)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64, align: 64)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{null, !2543, !1570, !1570, !1702, !992}
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64, align: 64)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "psy", scope: !971, file: !972, line: 395, baseType: !2545, size: 640, align: 64, offset: 308224)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyContext", file: !2546, line: 109, baseType: !2547)
!2546 = !DIFile(filename: "libavcodec/psymodel.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyContext", file: !2546, line: 89, size: 640, align: 64, elements: !2548)
!2548 = !{!2549, !2550, !2587, !2602, !2612, !2613, !2614, !2615, !2616, !2617, !2623}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2547, file: !2546, line: 90, baseType: !1727, size: 64, align: 64)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !2547, file: !2546, line: 91, baseType: !2551, size: 64, align: 64, offset: 64)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64, align: 64)
!2552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2553)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyModel", file: !2546, line: 114, size: 320, align: 64, elements: !2554)
!2554 = !{!2555, !2556, !2561, !2576, !2583}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2553, file: !2546, line: 115, baseType: !980, size: 64, align: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2553, file: !2546, line: 116, baseType: !2557, size: 64, align: 64, offset: 64)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64, align: 64)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!992, !2560}
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 64, align: 64)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !2553, file: !2546, line: 129, baseType: !2562, size: 64, align: 64, offset: 128)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64, align: 64)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{!2565, !2560, !1103, !1103, !992, !992}
!2565 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyWindowInfo", file: !2546, line: 84, baseType: !2566)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyWindowInfo", file: !2546, line: 77, size: 768, align: 64, elements: !2567)
!2567 = !{!2568, !2570, !2571, !2572, !2573, !2575}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "window_type", scope: !2566, file: !2546, line: 78, baseType: !2569, size: 96, align: 32)
!2569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 96, align: 32, elements: !1489)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "window_shape", scope: !2566, file: !2546, line: 79, baseType: !992, size: 32, align: 32, offset: 96)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "num_windows", scope: !2566, file: !2546, line: 80, baseType: !992, size: 32, align: 32, offset: 128)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "grouping", scope: !2566, file: !2546, line: 81, baseType: !1297, size: 256, align: 32, offset: 160)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "clipping", scope: !2566, file: !2546, line: 82, baseType: !2574, size: 256, align: 32, offset: 416)
!2574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 256, align: 32, elements: !1252)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "window_sizes", scope: !2566, file: !2546, line: 83, baseType: !1963, size: 64, align: 64, offset: 704)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "analyze", scope: !2553, file: !2546, line: 139, baseType: !2577, size: 64, align: 64, offset: 192)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64, align: 64)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{null, !2560, !992, !2580, !2581}
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64, align: 64)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64, align: 64)
!2582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2565)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2553, file: !2546, line: 141, baseType: !2584, size: 64, align: 64, offset: 256)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 64, align: 64)
!2585 = !DISubroutineType(types: !2586)
!2586 = !{null, !2560}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !2547, file: !2546, line: 93, baseType: !2588, size: 64, align: 64, offset: 128)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64, align: 64)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyChannel", file: !2546, line: 63, baseType: !2590)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyChannel", file: !2546, line: 60, size: 16416, align: 32, elements: !2591)
!2591 = !{!2592, !2601}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "psy_bands", scope: !2590, file: !2546, line: 61, baseType: !2593, size: 16384, align: 32)
!2593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2594, size: 16384, align: 32, elements: !1232)
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyBand", file: !2546, line: 55, baseType: !2595)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyBand", file: !2546, line: 50, size: 128, align: 32, elements: !2596)
!2596 = !{!2597, !2598, !2599, !2600}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2595, file: !2546, line: 51, baseType: !992, size: 32, align: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !2595, file: !2546, line: 52, baseType: !969, size: 32, align: 32, offset: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "threshold", scope: !2595, file: !2546, line: 53, baseType: !969, size: 32, align: 32, offset: 64)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !2595, file: !2546, line: 54, baseType: !969, size: 32, align: 32, offset: 96)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "entropy", scope: !2590, file: !2546, line: 62, baseType: !969, size: 32, align: 32, offset: 16384)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2547, file: !2546, line: 94, baseType: !2603, size: 64, align: 64, offset: 192)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64, align: 64)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFPsyChannelGroup", file: !2546, line: 72, baseType: !2605)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyChannelGroup", file: !2546, line: 68, size: 2368, align: 64, elements: !2606)
!2606 = !{!2607, !2610, !2611}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !2605, file: !2546, line: 69, baseType: !2608, size: 1280, align: 64)
!2608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2588, size: 1280, align: 64, elements: !2609)
!2609 = !{!1306}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "num_ch", scope: !2605, file: !2546, line: 70, baseType: !1039, size: 8, align: 8, offset: 1280)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "coupling", scope: !2605, file: !2546, line: 71, baseType: !1231, size: 1024, align: 8, offset: 1288)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "num_groups", scope: !2547, file: !2546, line: 95, baseType: !992, size: 32, align: 32, offset: 256)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !2547, file: !2546, line: 96, baseType: !992, size: 32, align: 32, offset: 288)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "bands", scope: !2547, file: !2546, line: 98, baseType: !1892, size: 64, align: 64, offset: 320)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "num_bands", scope: !2547, file: !2546, line: 99, baseType: !1963, size: 64, align: 64, offset: 384)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "num_lens", scope: !2547, file: !2546, line: 100, baseType: !992, size: 32, align: 32, offset: 448)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "bitres", scope: !2547, file: !2546, line: 106, baseType: !2618, size: 96, align: 32, offset: 480)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2547, file: !2546, line: 102, size: 96, align: 32, elements: !2619)
!2619 = !{!2620, !2621, !2622}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2618, file: !2546, line: 103, baseType: !992, size: 32, align: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2618, file: !2546, line: 104, baseType: !992, size: 32, align: 32, offset: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2618, file: !2546, line: 105, baseType: !992, size: 32, align: 32, offset: 64)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "model_priv_data", scope: !2547, file: !2546, line: 108, baseType: !953, size: 64, align: 64, offset: 576)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "psypp", scope: !971, file: !972, line: 396, baseType: !2625, size: 64, align: 64, offset: 308864)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64, align: 64)
!2626 = !DICompositeType(tag: DW_TAG_structure_type, name: "FFPsyPreprocessContext", file: !2546, line: 183, flags: DIFlagFwdDecl)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "coder", scope: !971, file: !972, line: 397, baseType: !2628, size: 64, align: 64, offset: 308928)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64, align: 64)
!2629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2630)
!2630 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACCoefficientsEncoder", file: !972, line: 80, baseType: !2631)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACCoefficientsEncoder", file: !972, line: 56, size: 1280, align: 64, elements: !2632)
!2632 = !{!2633, !2637, !2641, !2646, !2650, !2654, !2655, !2659, !2660, !2661, !2662, !2663, !2667, !2668, !2672, !2673, !2674, !2675, !2676, !2680}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_quantizers", scope: !2631, file: !972, line: 57, baseType: !2634, size: 64, align: 64)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64, align: 64)
!2635 = !DISubroutineType(types: !2636)
!2636 = !{null, !1727, !970, !2460, !1104}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "encode_window_bands_info", scope: !2631, file: !972, line: 59, baseType: !2638, size: 64, align: 64, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64, align: 64)
!2639 = !DISubroutineType(types: !2640)
!2640 = !{null, !970, !2460, !992, !992, !1104}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_and_encode_band", scope: !2631, file: !972, line: 61, baseType: !2642, size: 64, align: 64, offset: 128)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64, align: 64)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{null, !970, !2645, !1103, !1102, !992, !992, !992, !1104, !992}
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64, align: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "encode_tns_info", scope: !2631, file: !972, line: 63, baseType: !2647, size: 64, align: 64, offset: 192)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64, align: 64)
!2648 = !DISubroutineType(types: !2649)
!2649 = !{null, !970, !2460}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "encode_ltp_info", scope: !2631, file: !972, line: 64, baseType: !2651, size: 64, align: 64, offset: 256)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64, align: 64)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{null, !970, !2460, !992}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "encode_main_pred", scope: !2631, file: !972, line: 65, baseType: !2647, size: 64, align: 64, offset: 320)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "adjust_common_pred", scope: !2631, file: !972, line: 66, baseType: !2656, size: 64, align: 64, offset: 384)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64, align: 64)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{null, !970, !1222}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "adjust_common_ltp", scope: !2631, file: !972, line: 67, baseType: !2656, size: 64, align: 64, offset: 448)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "apply_main_pred", scope: !2631, file: !972, line: 68, baseType: !2647, size: 64, align: 64, offset: 512)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "apply_tns_filt", scope: !2631, file: !972, line: 69, baseType: !2647, size: 64, align: 64, offset: 576)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "update_ltp", scope: !2631, file: !972, line: 70, baseType: !2647, size: 64, align: 64, offset: 640)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "ltp_insert_new_frame", scope: !2631, file: !972, line: 71, baseType: !2664, size: 64, align: 64, offset: 704)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64, align: 64)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{null, !970}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "set_special_band_scalefactors", scope: !2631, file: !972, line: 72, baseType: !2647, size: 64, align: 64, offset: 768)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_pns", scope: !2631, file: !972, line: 73, baseType: !2669, size: 64, align: 64, offset: 832)
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64, align: 64)
!2670 = !DISubroutineType(types: !2671)
!2671 = !{null, !970, !1727, !2460}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "mark_pns", scope: !2631, file: !972, line: 74, baseType: !2669, size: 64, align: 64, offset: 896)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_tns", scope: !2631, file: !972, line: 75, baseType: !2647, size: 64, align: 64, offset: 960)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_ltp", scope: !2631, file: !972, line: 76, baseType: !2651, size: 64, align: 64, offset: 1024)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_ms", scope: !2631, file: !972, line: 77, baseType: !2656, size: 64, align: 64, offset: 1088)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_is", scope: !2631, file: !972, line: 78, baseType: !2677, size: 64, align: 64, offset: 1152)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64, align: 64)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{null, !970, !1727, !1222}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "search_for_pred", scope: !2631, file: !972, line: 79, baseType: !2647, size: 64, align: 64, offset: 1216)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "cur_channel", scope: !971, file: !972, line: 398, baseType: !992, size: 32, align: 32, offset: 308992)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "random_state", scope: !971, file: !972, line: 399, baseType: !992, size: 32, align: 32, offset: 309024)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "lambda", scope: !971, file: !972, line: 400, baseType: !969, size: 32, align: 32, offset: 309056)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame_pb_count", scope: !971, file: !972, line: 401, baseType: !992, size: 32, align: 32, offset: 309088)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "lambda_sum", scope: !971, file: !972, line: 402, baseType: !969, size: 32, align: 32, offset: 309120)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "lambda_count", scope: !971, file: !972, line: 403, baseType: !992, size: 32, align: 32, offset: 309152)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "cur_type", scope: !971, file: !972, line: 404, baseType: !64, size: 32, align: 32, offset: 309184)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "afq", scope: !971, file: !972, line: 406, baseType: !2689, size: 256, align: 64, offset: 309248)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioFrameQueue", file: !2690, line: 39, baseType: !2691)
!2690 = !DIFile(filename: "libavcodec/audio_frame_queue.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioFrameQueue", file: !2690, line: 32, size: 256, align: 64, elements: !2692)
!2692 = !{!2693, !2694, !2695, !2696, !2703, !2704}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2691, file: !2690, line: 33, baseType: !1727, size: 64, align: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_delay", scope: !2691, file: !2690, line: 34, baseType: !992, size: 32, align: 32, offset: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "remaining_samples", scope: !2691, file: !2690, line: 35, baseType: !992, size: 32, align: 32, offset: 96)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2691, file: !2690, line: 36, baseType: !2697, size: 64, align: 64, offset: 128)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64, align: 64)
!2698 = !DIDerivedType(tag: DW_TAG_typedef, name: "AudioFrame", file: !2690, line: 30, baseType: !2699)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioFrame", file: !2690, line: 27, size: 128, align: 64, elements: !2700)
!2700 = !{!2701, !2702}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2699, file: !2690, line: 28, baseType: !1143, size: 64, align: 64)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2699, file: !2690, line: 29, baseType: !992, size: 32, align: 32, offset: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count", scope: !2691, file: !2690, line: 37, baseType: !952, size: 32, align: 32, offset: 192)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "frame_alloc", scope: !2691, file: !2690, line: 38, baseType: !952, size: 32, align: 32, offset: 224)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "qcoefs", scope: !971, file: !972, line: 407, baseType: !2706, size: 3072, align: 32, offset: 309504)
!2706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 3072, align: 32, elements: !2707)
!2707 = !{!2708}
!2708 = !DISubrange(count: 96)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "scoefs", scope: !971, file: !972, line: 408, baseType: !2710, size: 32768, align: 32, offset: 312576)
!2710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !969, size: 32768, align: 32, elements: !1335)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_band_cost_cache_generation", scope: !971, file: !972, line: 410, baseType: !1052, size: 16, align: 16, offset: 345344)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "quantize_band_cost_cache", scope: !971, file: !972, line: 411, baseType: !2713, size: 4194304, align: 32, offset: 345376)
!2713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2714, size: 4194304, align: 32, elements: !2723)
!2714 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACQuantizeBandCostCacheEntry", file: !972, line: 91, baseType: !2715)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACQuantizeBandCostCacheEntry", file: !972, line: 84, size: 128, align: 32, elements: !2716)
!2716 = !{!2717, !2718, !2719, !2720, !2721, !2722}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !2715, file: !972, line: 85, baseType: !969, size: 32, align: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !2715, file: !972, line: 86, baseType: !969, size: 32, align: 32, offset: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2715, file: !972, line: 87, baseType: !992, size: 32, align: 32, offset: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2715, file: !972, line: 88, baseType: !982, size: 8, align: 8, offset: 96)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "rtz", scope: !2715, file: !972, line: 89, baseType: !982, size: 8, align: 8, offset: 104)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "generation", scope: !2715, file: !972, line: 90, baseType: !1052, size: 16, align: 16, offset: 112)
!2723 = !{!2724, !1233}
!2724 = !DISubrange(count: 256)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "abs_pow34", scope: !971, file: !972, line: 413, baseType: !2726, size: 64, align: 64, offset: 4539712)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64, align: 64)
!2727 = !DISubroutineType(types: !2728)
!2728 = !{null, !1102, !1103, !1760}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "quant_bands", scope: !971, file: !972, line: 414, baseType: !2730, size: 64, align: 64, offset: 4539776)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64, align: 64)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{null, !1963, !1103, !1103, !992, !992, !992, !1104, !1104}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !971, file: !972, line: 420, baseType: !2734, size: 64, align: 64, offset: 4539840)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !971, file: !972, line: 418, size: 64, align: 64, elements: !2735)
!2735 = !{!2736}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !2734, file: !972, line: 419, baseType: !1102, size: 64, align: 64)
!2737 = distinct !DIGlobalVariable(name: "aac_cb_maxval", scope: !0, file: !956, line: 126, type: !2738, isLocal: true, isDefinition: true, variable: [12 x i8]* @aac_cb_maxval)
!2738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1219, size: 96, align: 8, elements: !2739)
!2739 = !{!2740}
!2740 = !DISubrange(count: 12)
!2741 = distinct !DIGlobalVariable(name: "aac_cb_range", scope: !0, file: !956, line: 125, type: !2738, isLocal: true, isDefinition: true, variable: [12 x i8]* @aac_cb_range)
!2742 = distinct !DIGlobalVariable(name: "quantize_and_encode_band_cost_arr", scope: !0, file: !963, line: 195, type: !964, isLocal: true, isDefinition: true, variable: [16 x float (%struct.AACEncContext*, %struct.PutBitContext*, float*, float*, float*, i32, i32, i32, float, float, i32*, float*)*]* @quantize_and_encode_band_cost_arr)
!2743 = !{i32 2, !"Dwarf Version", i32 4}
!2744 = !{i32 2, !"Debug Info Version", i32 3}
!2745 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2746 = distinct !DISubprogram(name: "ff_aac_is_encoding_err", scope: !2747, file: !2747, line: 33, type: !2748, isLocal: false, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!2747 = !DIFile(filename: "libavcodec/aacenc_is.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2748 = !DISubroutineType(types: !2749)
!2749 = !{!2750, !2759, !1222, !992, !992, !992, !969, !969, !969, !992, !992}
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AACISError", file: !2751, line: 36, size: 192, align: 32, elements: !2752)
!2751 = !DIFile(filename: "libavcodec/aacenc_is.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2752 = !{!2753, !2754, !2755, !2756, !2757, !2758}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2750, file: !2751, line: 37, baseType: !992, size: 32, align: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !2750, file: !2751, line: 38, baseType: !992, size: 32, align: 32, offset: 32)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2750, file: !2751, line: 39, baseType: !969, size: 32, align: 32, offset: 64)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "dist1", scope: !2750, file: !2751, line: 40, baseType: !969, size: 32, align: 32, offset: 96)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "dist2", scope: !2750, file: !2751, line: 41, baseType: !969, size: 32, align: 32, offset: 128)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "ener01", scope: !2750, file: !2751, line: 42, baseType: !969, size: 32, align: 32, offset: 160)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64, align: 64)
!2760 = !DIDerivedType(tag: DW_TAG_typedef, name: "AACEncContext", file: !972, line: 421, baseType: !971)
!2761 = !{}
!2762 = !DILocalVariable(name: "s", arg: 1, scope: !2746, file: !2747, line: 33, type: !2759)
!2763 = !DIExpression()
!2764 = !DILocation(line: 33, column: 57, scope: !2746)
!2765 = !DILocalVariable(name: "cpe", arg: 2, scope: !2746, file: !2747, line: 33, type: !1222)
!2766 = !DILocation(line: 33, column: 76, scope: !2746)
!2767 = !DILocalVariable(name: "start", arg: 3, scope: !2746, file: !2747, line: 34, type: !992)
!2768 = !DILocation(line: 34, column: 46, scope: !2746)
!2769 = !DILocalVariable(name: "w", arg: 4, scope: !2746, file: !2747, line: 34, type: !992)
!2770 = !DILocation(line: 34, column: 57, scope: !2746)
!2771 = !DILocalVariable(name: "g", arg: 5, scope: !2746, file: !2747, line: 34, type: !992)
!2772 = !DILocation(line: 34, column: 64, scope: !2746)
!2773 = !DILocalVariable(name: "ener0", arg: 6, scope: !2746, file: !2747, line: 34, type: !969)
!2774 = !DILocation(line: 34, column: 73, scope: !2746)
!2775 = !DILocalVariable(name: "ener1", arg: 7, scope: !2746, file: !2747, line: 35, type: !969)
!2776 = !DILocation(line: 35, column: 48, scope: !2746)
!2777 = !DILocalVariable(name: "ener01", arg: 8, scope: !2746, file: !2747, line: 35, type: !969)
!2778 = !DILocation(line: 35, column: 61, scope: !2746)
!2779 = !DILocalVariable(name: "use_pcoeffs", arg: 9, scope: !2746, file: !2747, line: 36, type: !992)
!2780 = !DILocation(line: 36, column: 46, scope: !2746)
!2781 = !DILocalVariable(name: "phase", arg: 10, scope: !2746, file: !2747, line: 36, type: !992)
!2782 = !DILocation(line: 36, column: 63, scope: !2746)
!2783 = !DILocalVariable(name: "i", scope: !2746, file: !2747, line: 38, type: !992)
!2784 = !DILocation(line: 38, column: 9, scope: !2746)
!2785 = !DILocalVariable(name: "w2", scope: !2746, file: !2747, line: 38, type: !992)
!2786 = !DILocation(line: 38, column: 12, scope: !2746)
!2787 = !DILocalVariable(name: "sce0", scope: !2746, file: !2747, line: 39, type: !2460)
!2788 = !DILocation(line: 39, column: 27, scope: !2746)
!2789 = !DILocation(line: 39, column: 35, scope: !2746)
!2790 = !DILocation(line: 39, column: 40, scope: !2746)
!2791 = !DILocalVariable(name: "sce1", scope: !2746, file: !2747, line: 40, type: !2460)
!2792 = !DILocation(line: 40, column: 27, scope: !2746)
!2793 = !DILocation(line: 40, column: 35, scope: !2746)
!2794 = !DILocation(line: 40, column: 40, scope: !2746)
!2795 = !DILocalVariable(name: "L", scope: !2746, file: !2747, line: 41, type: !1102)
!2796 = !DILocation(line: 41, column: 12, scope: !2746)
!2797 = !DILocation(line: 41, column: 16, scope: !2746)
!2798 = !DILocation(line: 41, column: 30, scope: !2799)
!2799 = !DILexicalBlockFile(scope: !2746, file: !2747, discriminator: 1)
!2800 = !DILocation(line: 41, column: 36, scope: !2799)
!2801 = !DILocation(line: 41, column: 16, scope: !2799)
!2802 = !DILocation(line: 41, column: 46, scope: !2803)
!2803 = !DILexicalBlockFile(scope: !2746, file: !2747, discriminator: 2)
!2804 = !DILocation(line: 41, column: 52, scope: !2803)
!2805 = !DILocation(line: 41, column: 16, scope: !2803)
!2806 = !DILocation(line: 41, column: 16, scope: !2807)
!2807 = !DILexicalBlockFile(scope: !2746, file: !2747, discriminator: 3)
!2808 = !DILocation(line: 41, column: 12, scope: !2807)
!2809 = !DILocalVariable(name: "R", scope: !2746, file: !2747, line: 42, type: !1102)
!2810 = !DILocation(line: 42, column: 12, scope: !2746)
!2811 = !DILocation(line: 42, column: 16, scope: !2746)
!2812 = !DILocation(line: 42, column: 30, scope: !2799)
!2813 = !DILocation(line: 42, column: 36, scope: !2799)
!2814 = !DILocation(line: 42, column: 16, scope: !2799)
!2815 = !DILocation(line: 42, column: 46, scope: !2803)
!2816 = !DILocation(line: 42, column: 52, scope: !2803)
!2817 = !DILocation(line: 42, column: 16, scope: !2803)
!2818 = !DILocation(line: 42, column: 16, scope: !2807)
!2819 = !DILocation(line: 42, column: 12, scope: !2807)
!2820 = !DILocalVariable(name: "L34", scope: !2746, file: !2747, line: 43, type: !1102)
!2821 = !DILocation(line: 43, column: 12, scope: !2746)
!2822 = !DILocation(line: 43, column: 19, scope: !2746)
!2823 = !DILocation(line: 43, column: 22, scope: !2746)
!2824 = !DILocalVariable(name: "R34", scope: !2746, file: !2747, line: 43, type: !1102)
!2825 = !DILocation(line: 43, column: 38, scope: !2746)
!2826 = !DILocation(line: 43, column: 45, scope: !2746)
!2827 = !DILocation(line: 43, column: 48, scope: !2746)
!2828 = !DILocalVariable(name: "IS", scope: !2746, file: !2747, line: 44, type: !1102)
!2829 = !DILocation(line: 44, column: 12, scope: !2746)
!2830 = !DILocation(line: 44, column: 18, scope: !2746)
!2831 = !DILocation(line: 44, column: 21, scope: !2746)
!2832 = !DILocalVariable(name: "I34", scope: !2746, file: !2747, line: 44, type: !1102)
!2833 = !DILocation(line: 44, column: 37, scope: !2746)
!2834 = !DILocation(line: 44, column: 44, scope: !2746)
!2835 = !DILocation(line: 44, column: 47, scope: !2746)
!2836 = !DILocalVariable(name: "dist1", scope: !2746, file: !2747, line: 45, type: !969)
!2837 = !DILocation(line: 45, column: 11, scope: !2746)
!2838 = !DILocalVariable(name: "dist2", scope: !2746, file: !2747, line: 45, type: !969)
!2839 = !DILocation(line: 45, column: 25, scope: !2746)
!2840 = !DILocalVariable(name: "is_error", scope: !2746, file: !2747, line: 46, type: !2750)
!2841 = !DILocation(line: 46, column: 23, scope: !2746)
!2842 = !DILocation(line: 48, column: 9, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2746, file: !2747, line: 48, column: 9)
!2844 = !DILocation(line: 48, column: 16, scope: !2843)
!2845 = !DILocation(line: 48, column: 21, scope: !2843)
!2846 = !DILocation(line: 48, column: 24, scope: !2847)
!2847 = !DILexicalBlockFile(scope: !2843, file: !2747, discriminator: 1)
!2848 = !DILocation(line: 48, column: 30, scope: !2847)
!2849 = !DILocation(line: 48, column: 9, scope: !2847)
!2850 = !DILocation(line: 49, column: 18, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2843, file: !2747, line: 48, column: 36)
!2852 = !DILocation(line: 49, column: 23, scope: !2851)
!2853 = !DILocation(line: 50, column: 16, scope: !2851)
!2854 = !DILocation(line: 50, column: 9, scope: !2851)
!2855 = !DILocation(line: 53, column: 13, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2746, file: !2747, line: 53, column: 5)
!2857 = !DILocation(line: 53, column: 10, scope: !2856)
!2858 = !DILocation(line: 53, column: 18, scope: !2859)
!2859 = !DILexicalBlockFile(scope: !2860, file: !2747, discriminator: 1)
!2860 = distinct !DILexicalBlock(scope: !2856, file: !2747, line: 53, column: 5)
!2861 = !DILocation(line: 53, column: 43, scope: !2859)
!2862 = !DILocation(line: 53, column: 23, scope: !2859)
!2863 = !DILocation(line: 53, column: 29, scope: !2859)
!2864 = !DILocation(line: 53, column: 33, scope: !2859)
!2865 = !DILocation(line: 53, column: 21, scope: !2859)
!2866 = !DILocation(line: 53, column: 5, scope: !2859)
!2867 = !DILocalVariable(name: "band0", scope: !2868, file: !2747, line: 54, type: !2869)
!2868 = distinct !DILexicalBlock(scope: !2860, file: !2747, line: 53, column: 53)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 64, align: 64)
!2870 = !DILocation(line: 54, column: 20, scope: !2868)
!2871 = !DILocation(line: 54, column: 68, scope: !2868)
!2872 = !DILocation(line: 54, column: 70, scope: !2868)
!2873 = !DILocation(line: 54, column: 69, scope: !2868)
!2874 = !DILocation(line: 54, column: 73, scope: !2868)
!2875 = !DILocation(line: 54, column: 77, scope: !2868)
!2876 = !DILocation(line: 54, column: 76, scope: !2868)
!2877 = !DILocation(line: 54, column: 29, scope: !2868)
!2878 = !DILocation(line: 54, column: 39, scope: !2868)
!2879 = !DILocation(line: 54, column: 42, scope: !2868)
!2880 = !DILocation(line: 54, column: 53, scope: !2868)
!2881 = !DILocation(line: 54, column: 32, scope: !2868)
!2882 = !DILocation(line: 54, column: 36, scope: !2868)
!2883 = !DILocation(line: 54, column: 57, scope: !2868)
!2884 = !DILocalVariable(name: "band1", scope: !2868, file: !2747, line: 55, type: !2869)
!2885 = !DILocation(line: 55, column: 20, scope: !2868)
!2886 = !DILocation(line: 55, column: 68, scope: !2868)
!2887 = !DILocation(line: 55, column: 70, scope: !2868)
!2888 = !DILocation(line: 55, column: 69, scope: !2868)
!2889 = !DILocation(line: 55, column: 73, scope: !2868)
!2890 = !DILocation(line: 55, column: 77, scope: !2868)
!2891 = !DILocation(line: 55, column: 76, scope: !2868)
!2892 = !DILocation(line: 55, column: 29, scope: !2868)
!2893 = !DILocation(line: 55, column: 39, scope: !2868)
!2894 = !DILocation(line: 55, column: 42, scope: !2868)
!2895 = !DILocation(line: 55, column: 53, scope: !2868)
!2896 = !DILocation(line: 55, column: 32, scope: !2868)
!2897 = !DILocation(line: 55, column: 36, scope: !2868)
!2898 = !DILocation(line: 55, column: 57, scope: !2868)
!2899 = !DILocalVariable(name: "is_band_type", scope: !2868, file: !2747, line: 56, type: !992)
!2900 = !DILocation(line: 56, column: 13, scope: !2868)
!2901 = !DILocalVariable(name: "is_sf_idx", scope: !2868, file: !2747, line: 56, type: !992)
!2902 = !DILocation(line: 56, column: 27, scope: !2868)
!2903 = !DILocation(line: 56, column: 60, scope: !2868)
!2904 = !DILocation(line: 56, column: 61, scope: !2868)
!2905 = !DILocation(line: 56, column: 65, scope: !2868)
!2906 = !DILocation(line: 56, column: 64, scope: !2868)
!2907 = !DILocation(line: 56, column: 47, scope: !2868)
!2908 = !DILocation(line: 56, column: 53, scope: !2868)
!2909 = !DILocation(line: 56, column: 67, scope: !2868)
!2910 = !DILocation(line: 56, column: 44, scope: !2868)
!2911 = !DILocation(line: 56, column: 40, scope: !2868)
!2912 = !DILocation(line: 56, column: 40, scope: !2913)
!2913 = !DILexicalBlockFile(scope: !2868, file: !2747, discriminator: 1)
!2914 = !DILocation(line: 56, column: 93, scope: !2915)
!2915 = !DILexicalBlockFile(scope: !2868, file: !2747, discriminator: 2)
!2916 = !DILocation(line: 56, column: 94, scope: !2915)
!2917 = !DILocation(line: 56, column: 98, scope: !2915)
!2918 = !DILocation(line: 56, column: 97, scope: !2915)
!2919 = !DILocation(line: 56, column: 80, scope: !2915)
!2920 = !DILocation(line: 56, column: 86, scope: !2915)
!2921 = !DILocation(line: 56, column: 100, scope: !2915)
!2922 = !DILocation(line: 56, column: 40, scope: !2915)
!2923 = !DILocation(line: 56, column: 40, scope: !2924)
!2924 = !DILexicalBlockFile(scope: !2868, file: !2747, discriminator: 3)
!2925 = !DILocation(line: 56, column: 27, scope: !2924)
!2926 = !DILocalVariable(name: "e01_34", scope: !2868, file: !2747, line: 57, type: !969)
!2927 = !DILocation(line: 57, column: 15, scope: !2868)
!2928 = !DILocation(line: 57, column: 24, scope: !2868)
!2929 = !DILocation(line: 57, column: 40, scope: !2868)
!2930 = !DILocation(line: 57, column: 46, scope: !2868)
!2931 = !DILocation(line: 57, column: 45, scope: !2868)
!2932 = !DILocation(line: 57, column: 30, scope: !2868)
!2933 = !DILocation(line: 57, column: 29, scope: !2868)
!2934 = !DILocalVariable(name: "maxval", scope: !2868, file: !2747, line: 58, type: !969)
!2935 = !DILocation(line: 58, column: 15, scope: !2868)
!2936 = !DILocalVariable(name: "dist_spec_err", scope: !2868, file: !2747, line: 58, type: !969)
!2937 = !DILocation(line: 58, column: 23, scope: !2868)
!2938 = !DILocalVariable(name: "minthr", scope: !2868, file: !2747, line: 59, type: !969)
!2939 = !DILocation(line: 59, column: 15, scope: !2868)
!2940 = !DILocation(line: 59, column: 26, scope: !2868)
!2941 = !DILocation(line: 59, column: 33, scope: !2868)
!2942 = !DILocation(line: 59, column: 47, scope: !2868)
!2943 = !DILocation(line: 59, column: 54, scope: !2868)
!2944 = !DILocation(line: 59, column: 44, scope: !2868)
!2945 = !DILocation(line: 59, column: 25, scope: !2868)
!2946 = !DILocation(line: 59, column: 68, scope: !2913)
!2947 = !DILocation(line: 59, column: 75, scope: !2913)
!2948 = !DILocation(line: 59, column: 25, scope: !2913)
!2949 = !DILocation(line: 59, column: 89, scope: !2915)
!2950 = !DILocation(line: 59, column: 96, scope: !2915)
!2951 = !DILocation(line: 59, column: 25, scope: !2915)
!2952 = !DILocation(line: 59, column: 25, scope: !2924)
!2953 = !DILocation(line: 59, column: 15, scope: !2924)
!2954 = !DILocation(line: 60, column: 16, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2868, file: !2747, line: 60, column: 9)
!2956 = !DILocation(line: 60, column: 14, scope: !2955)
!2957 = !DILocation(line: 60, column: 21, scope: !2958)
!2958 = !DILexicalBlockFile(scope: !2959, file: !2747, discriminator: 1)
!2959 = distinct !DILexicalBlock(scope: !2955, file: !2747, line: 60, column: 9)
!2960 = !DILocation(line: 60, column: 45, scope: !2958)
!2961 = !DILocation(line: 60, column: 25, scope: !2958)
!2962 = !DILocation(line: 60, column: 31, scope: !2958)
!2963 = !DILocation(line: 60, column: 35, scope: !2958)
!2964 = !DILocation(line: 60, column: 23, scope: !2958)
!2965 = !DILocation(line: 60, column: 9, scope: !2958)
!2966 = !DILocation(line: 61, column: 24, scope: !2959)
!2967 = !DILocation(line: 61, column: 31, scope: !2959)
!2968 = !DILocation(line: 61, column: 33, scope: !2959)
!2969 = !DILocation(line: 61, column: 32, scope: !2959)
!2970 = !DILocation(line: 61, column: 36, scope: !2959)
!2971 = !DILocation(line: 61, column: 29, scope: !2959)
!2972 = !DILocation(line: 61, column: 41, scope: !2959)
!2973 = !DILocation(line: 61, column: 40, scope: !2959)
!2974 = !DILocation(line: 61, column: 22, scope: !2959)
!2975 = !DILocation(line: 61, column: 46, scope: !2959)
!2976 = !DILocation(line: 61, column: 54, scope: !2959)
!2977 = !DILocation(line: 61, column: 61, scope: !2959)
!2978 = !DILocation(line: 61, column: 63, scope: !2959)
!2979 = !DILocation(line: 61, column: 62, scope: !2959)
!2980 = !DILocation(line: 61, column: 66, scope: !2959)
!2981 = !DILocation(line: 61, column: 59, scope: !2959)
!2982 = !DILocation(line: 61, column: 71, scope: !2959)
!2983 = !DILocation(line: 61, column: 70, scope: !2959)
!2984 = !DILocation(line: 61, column: 52, scope: !2959)
!2985 = !DILocation(line: 61, column: 51, scope: !2959)
!2986 = !DILocation(line: 61, column: 44, scope: !2959)
!2987 = !DILocation(line: 61, column: 21, scope: !2959)
!2988 = !DILocation(line: 61, column: 80, scope: !2959)
!2989 = !DILocation(line: 61, column: 86, scope: !2959)
!2990 = !DILocation(line: 61, column: 85, scope: !2959)
!2991 = !DILocation(line: 61, column: 75, scope: !2959)
!2992 = !DILocation(line: 61, column: 74, scope: !2959)
!2993 = !DILocation(line: 61, column: 16, scope: !2959)
!2994 = !DILocation(line: 61, column: 13, scope: !2959)
!2995 = !DILocation(line: 61, column: 19, scope: !2959)
!2996 = !DILocation(line: 60, column: 50, scope: !2997)
!2997 = !DILexicalBlockFile(scope: !2959, file: !2747, discriminator: 2)
!2998 = !DILocation(line: 60, column: 9, scope: !2997)
!2999 = distinct !{!2999, !3000}
!3000 = !DILocation(line: 60, column: 9, scope: !2868)
!3001 = !DILocation(line: 62, column: 9, scope: !2868)
!3002 = !DILocation(line: 62, column: 12, scope: !2868)
!3003 = !DILocation(line: 62, column: 22, scope: !2868)
!3004 = !DILocation(line: 62, column: 30, scope: !2868)
!3005 = !DILocation(line: 62, column: 37, scope: !2868)
!3006 = !DILocation(line: 62, column: 39, scope: !2868)
!3007 = !DILocation(line: 62, column: 38, scope: !2868)
!3008 = !DILocation(line: 62, column: 42, scope: !2868)
!3009 = !DILocation(line: 62, column: 35, scope: !2868)
!3010 = !DILocation(line: 62, column: 28, scope: !2868)
!3011 = !DILocation(line: 62, column: 69, scope: !2868)
!3012 = !DILocation(line: 62, column: 49, scope: !2868)
!3013 = !DILocation(line: 62, column: 55, scope: !2868)
!3014 = !DILocation(line: 62, column: 59, scope: !2868)
!3015 = !DILocation(line: 63, column: 9, scope: !2868)
!3016 = !DILocation(line: 63, column: 12, scope: !2868)
!3017 = !DILocation(line: 63, column: 22, scope: !2868)
!3018 = !DILocation(line: 63, column: 30, scope: !2868)
!3019 = !DILocation(line: 63, column: 37, scope: !2868)
!3020 = !DILocation(line: 63, column: 39, scope: !2868)
!3021 = !DILocation(line: 63, column: 38, scope: !2868)
!3022 = !DILocation(line: 63, column: 42, scope: !2868)
!3023 = !DILocation(line: 63, column: 35, scope: !2868)
!3024 = !DILocation(line: 63, column: 28, scope: !2868)
!3025 = !DILocation(line: 63, column: 69, scope: !2868)
!3026 = !DILocation(line: 63, column: 49, scope: !2868)
!3027 = !DILocation(line: 63, column: 55, scope: !2868)
!3028 = !DILocation(line: 63, column: 59, scope: !2868)
!3029 = !DILocation(line: 64, column: 9, scope: !2868)
!3030 = !DILocation(line: 64, column: 12, scope: !2868)
!3031 = !DILocation(line: 64, column: 22, scope: !2868)
!3032 = !DILocation(line: 64, column: 27, scope: !2868)
!3033 = !DILocation(line: 64, column: 51, scope: !2868)
!3034 = !DILocation(line: 64, column: 31, scope: !2868)
!3035 = !DILocation(line: 64, column: 37, scope: !2868)
!3036 = !DILocation(line: 64, column: 41, scope: !2868)
!3037 = !DILocation(line: 65, column: 54, scope: !2868)
!3038 = !DILocation(line: 65, column: 34, scope: !2868)
!3039 = !DILocation(line: 65, column: 40, scope: !2868)
!3040 = !DILocation(line: 65, column: 44, scope: !2868)
!3041 = !DILocation(line: 65, column: 58, scope: !2868)
!3042 = !DILocation(line: 65, column: 18, scope: !2868)
!3043 = !DILocation(line: 65, column: 16, scope: !2868)
!3044 = !DILocation(line: 66, column: 38, scope: !2868)
!3045 = !DILocation(line: 66, column: 46, scope: !2868)
!3046 = !DILocation(line: 66, column: 24, scope: !2868)
!3047 = !DILocation(line: 66, column: 22, scope: !2868)
!3048 = !DILocation(line: 67, column: 37, scope: !2868)
!3049 = !DILocation(line: 67, column: 43, scope: !2868)
!3050 = !DILocation(line: 67, column: 52, scope: !2868)
!3051 = !DILocation(line: 67, column: 54, scope: !2868)
!3052 = !DILocation(line: 67, column: 53, scope: !2868)
!3053 = !DILocation(line: 67, column: 57, scope: !2868)
!3054 = !DILocation(line: 67, column: 49, scope: !2868)
!3055 = !DILocation(line: 67, column: 41, scope: !2868)
!3056 = !DILocation(line: 67, column: 64, scope: !2868)
!3057 = !DILocation(line: 68, column: 57, scope: !2868)
!3058 = !DILocation(line: 68, column: 37, scope: !2868)
!3059 = !DILocation(line: 68, column: 43, scope: !2868)
!3060 = !DILocation(line: 68, column: 47, scope: !2868)
!3061 = !DILocation(line: 69, column: 50, scope: !2868)
!3062 = !DILocation(line: 69, column: 51, scope: !2868)
!3063 = !DILocation(line: 69, column: 55, scope: !2868)
!3064 = !DILocation(line: 69, column: 54, scope: !2868)
!3065 = !DILocation(line: 69, column: 37, scope: !2868)
!3066 = !DILocation(line: 69, column: 43, scope: !2868)
!3067 = !DILocation(line: 70, column: 53, scope: !2868)
!3068 = !DILocation(line: 70, column: 54, scope: !2868)
!3069 = !DILocation(line: 70, column: 58, scope: !2868)
!3070 = !DILocation(line: 70, column: 57, scope: !2868)
!3071 = !DILocation(line: 70, column: 37, scope: !2868)
!3072 = !DILocation(line: 70, column: 43, scope: !2868)
!3073 = !DILocation(line: 71, column: 37, scope: !2868)
!3074 = !DILocation(line: 71, column: 40, scope: !2868)
!3075 = !DILocation(line: 71, column: 49, scope: !2868)
!3076 = !DILocation(line: 71, column: 56, scope: !2868)
!3077 = !DILocation(line: 71, column: 47, scope: !2868)
!3078 = !DILocation(line: 67, column: 18, scope: !2868)
!3079 = !DILocation(line: 67, column: 15, scope: !2868)
!3080 = !DILocation(line: 72, column: 37, scope: !2868)
!3081 = !DILocation(line: 72, column: 43, scope: !2868)
!3082 = !DILocation(line: 72, column: 52, scope: !2868)
!3083 = !DILocation(line: 72, column: 54, scope: !2868)
!3084 = !DILocation(line: 72, column: 53, scope: !2868)
!3085 = !DILocation(line: 72, column: 57, scope: !2868)
!3086 = !DILocation(line: 72, column: 49, scope: !2868)
!3087 = !DILocation(line: 72, column: 41, scope: !2868)
!3088 = !DILocation(line: 72, column: 64, scope: !2868)
!3089 = !DILocation(line: 73, column: 57, scope: !2868)
!3090 = !DILocation(line: 73, column: 37, scope: !2868)
!3091 = !DILocation(line: 73, column: 43, scope: !2868)
!3092 = !DILocation(line: 73, column: 47, scope: !2868)
!3093 = !DILocation(line: 74, column: 50, scope: !2868)
!3094 = !DILocation(line: 74, column: 51, scope: !2868)
!3095 = !DILocation(line: 74, column: 55, scope: !2868)
!3096 = !DILocation(line: 74, column: 54, scope: !2868)
!3097 = !DILocation(line: 74, column: 37, scope: !2868)
!3098 = !DILocation(line: 74, column: 43, scope: !2868)
!3099 = !DILocation(line: 75, column: 53, scope: !2868)
!3100 = !DILocation(line: 75, column: 54, scope: !2868)
!3101 = !DILocation(line: 75, column: 58, scope: !2868)
!3102 = !DILocation(line: 75, column: 57, scope: !2868)
!3103 = !DILocation(line: 75, column: 37, scope: !2868)
!3104 = !DILocation(line: 75, column: 43, scope: !2868)
!3105 = !DILocation(line: 76, column: 37, scope: !2868)
!3106 = !DILocation(line: 76, column: 40, scope: !2868)
!3107 = !DILocation(line: 76, column: 49, scope: !2868)
!3108 = !DILocation(line: 76, column: 56, scope: !2868)
!3109 = !DILocation(line: 76, column: 47, scope: !2868)
!3110 = !DILocation(line: 72, column: 18, scope: !2868)
!3111 = !DILocation(line: 72, column: 15, scope: !2868)
!3112 = !DILocation(line: 77, column: 37, scope: !2868)
!3113 = !DILocation(line: 77, column: 40, scope: !2868)
!3114 = !DILocation(line: 77, column: 44, scope: !2868)
!3115 = !DILocation(line: 77, column: 69, scope: !2868)
!3116 = !DILocation(line: 77, column: 49, scope: !2868)
!3117 = !DILocation(line: 77, column: 55, scope: !2868)
!3118 = !DILocation(line: 77, column: 59, scope: !2868)
!3119 = !DILocation(line: 78, column: 37, scope: !2868)
!3120 = !DILocation(line: 78, column: 48, scope: !2868)
!3121 = !DILocation(line: 79, column: 37, scope: !2868)
!3122 = !DILocation(line: 79, column: 40, scope: !2868)
!3123 = !DILocation(line: 79, column: 49, scope: !2868)
!3124 = !DILocation(line: 79, column: 47, scope: !2868)
!3125 = !DILocation(line: 77, column: 18, scope: !2868)
!3126 = !DILocation(line: 77, column: 15, scope: !2868)
!3127 = !DILocation(line: 80, column: 16, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !2868, file: !2747, line: 80, column: 9)
!3129 = !DILocation(line: 80, column: 14, scope: !3128)
!3130 = !DILocation(line: 80, column: 21, scope: !3131)
!3131 = !DILexicalBlockFile(scope: !3132, file: !2747, discriminator: 1)
!3132 = distinct !DILexicalBlock(scope: !3128, file: !2747, line: 80, column: 9)
!3133 = !DILocation(line: 80, column: 45, scope: !3131)
!3134 = !DILocation(line: 80, column: 25, scope: !3131)
!3135 = !DILocation(line: 80, column: 31, scope: !3131)
!3136 = !DILocation(line: 80, column: 35, scope: !3131)
!3137 = !DILocation(line: 80, column: 23, scope: !3131)
!3138 = !DILocation(line: 80, column: 9, scope: !3131)
!3139 = !DILocation(line: 81, column: 35, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3132, file: !2747, line: 80, column: 54)
!3141 = !DILocation(line: 81, column: 31, scope: !3140)
!3142 = !DILocation(line: 81, column: 44, scope: !3140)
!3143 = !DILocation(line: 81, column: 40, scope: !3140)
!3144 = !DILocation(line: 81, column: 38, scope: !3140)
!3145 = !DILocation(line: 81, column: 53, scope: !3140)
!3146 = !DILocation(line: 81, column: 49, scope: !3140)
!3147 = !DILocation(line: 81, column: 62, scope: !3140)
!3148 = !DILocation(line: 81, column: 58, scope: !3140)
!3149 = !DILocation(line: 81, column: 56, scope: !3140)
!3150 = !DILocation(line: 81, column: 47, scope: !3140)
!3151 = !DILocation(line: 81, column: 27, scope: !3140)
!3152 = !DILocation(line: 82, column: 35, scope: !3140)
!3153 = !DILocation(line: 82, column: 31, scope: !3140)
!3154 = !DILocation(line: 82, column: 44, scope: !3140)
!3155 = !DILocation(line: 82, column: 40, scope: !3140)
!3156 = !DILocation(line: 82, column: 47, scope: !3140)
!3157 = !DILocation(line: 82, column: 46, scope: !3140)
!3158 = !DILocation(line: 82, column: 38, scope: !3140)
!3159 = !DILocation(line: 82, column: 60, scope: !3140)
!3160 = !DILocation(line: 82, column: 56, scope: !3140)
!3161 = !DILocation(line: 82, column: 69, scope: !3140)
!3162 = !DILocation(line: 82, column: 65, scope: !3140)
!3163 = !DILocation(line: 82, column: 72, scope: !3140)
!3164 = !DILocation(line: 82, column: 71, scope: !3140)
!3165 = !DILocation(line: 82, column: 63, scope: !3140)
!3166 = !DILocation(line: 82, column: 54, scope: !3140)
!3167 = !DILocation(line: 82, column: 27, scope: !3140)
!3168 = !DILocation(line: 83, column: 9, scope: !3140)
!3169 = !DILocation(line: 80, column: 50, scope: !3170)
!3170 = !DILexicalBlockFile(scope: !3132, file: !2747, discriminator: 2)
!3171 = !DILocation(line: 80, column: 9, scope: !3170)
!3172 = distinct !{!3172, !3173}
!3173 = !DILocation(line: 80, column: 9, scope: !2868)
!3174 = !DILocation(line: 84, column: 26, scope: !2868)
!3175 = !DILocation(line: 84, column: 29, scope: !2868)
!3176 = !DILocation(line: 84, column: 38, scope: !2868)
!3177 = !DILocation(line: 84, column: 36, scope: !2868)
!3178 = !DILocation(line: 84, column: 23, scope: !2868)
!3179 = !DILocation(line: 85, column: 18, scope: !2868)
!3180 = !DILocation(line: 85, column: 15, scope: !2868)
!3181 = !DILocation(line: 86, column: 5, scope: !2868)
!3182 = !DILocation(line: 53, column: 49, scope: !3183)
!3183 = !DILexicalBlockFile(scope: !2860, file: !2747, discriminator: 2)
!3184 = !DILocation(line: 53, column: 5, scope: !3183)
!3185 = distinct !{!3185, !3186}
!3186 = !DILocation(line: 53, column: 5, scope: !2746)
!3187 = !DILocation(line: 88, column: 21, scope: !2746)
!3188 = !DILocation(line: 88, column: 30, scope: !2746)
!3189 = !DILocation(line: 88, column: 27, scope: !2746)
!3190 = !DILocation(line: 88, column: 14, scope: !2746)
!3191 = !DILocation(line: 88, column: 19, scope: !2746)
!3192 = !DILocation(line: 89, column: 22, scope: !2746)
!3193 = !DILocation(line: 89, column: 14, scope: !2746)
!3194 = !DILocation(line: 89, column: 20, scope: !2746)
!3195 = !DILocation(line: 90, column: 22, scope: !2746)
!3196 = !DILocation(line: 90, column: 30, scope: !2746)
!3197 = !DILocation(line: 90, column: 28, scope: !2746)
!3198 = !DILocation(line: 90, column: 14, scope: !2746)
!3199 = !DILocation(line: 90, column: 20, scope: !2746)
!3200 = !DILocation(line: 91, column: 22, scope: !2746)
!3201 = !DILocation(line: 91, column: 14, scope: !2746)
!3202 = !DILocation(line: 91, column: 20, scope: !2746)
!3203 = !DILocation(line: 92, column: 22, scope: !2746)
!3204 = !DILocation(line: 92, column: 14, scope: !2746)
!3205 = !DILocation(line: 92, column: 20, scope: !2746)
!3206 = !DILocation(line: 93, column: 23, scope: !2746)
!3207 = !DILocation(line: 93, column: 14, scope: !2746)
!3208 = !DILocation(line: 93, column: 21, scope: !2746)
!3209 = !DILocation(line: 95, column: 12, scope: !2746)
!3210 = !DILocation(line: 95, column: 5, scope: !2746)
!3211 = !DILocation(line: 96, column: 1, scope: !2746)
!3212 = distinct !DISubprogram(name: "pos_pow34", scope: !3213, file: !3213, line: 49, type: !3214, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!3213 = !DIFile(filename: "libavcodec/aacenc_utils.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3214 = !DISubroutineType(types: !3215)
!3215 = !{!969, !969}
!3216 = !DILocalVariable(name: "a", arg: 1, scope: !3212, file: !3213, line: 49, type: !969)
!3217 = !DILocation(line: 49, column: 37, scope: !3212)
!3218 = !DILocation(line: 51, column: 18, scope: !3212)
!3219 = !DILocation(line: 51, column: 28, scope: !3212)
!3220 = !DILocation(line: 51, column: 22, scope: !3212)
!3221 = !DILocation(line: 51, column: 20, scope: !3212)
!3222 = !DILocation(line: 51, column: 12, scope: !3223)
!3223 = !DILexicalBlockFile(scope: !3212, file: !3213, discriminator: 1)
!3224 = !DILocation(line: 51, column: 5, scope: !3212)
!3225 = distinct !DISubprogram(name: "find_max_val", scope: !3213, file: !3213, line: 80, type: !3226, isLocal: true, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!3226 = !DISubroutineType(types: !3227)
!3227 = !{!969, !992, !992, !1103}
!3228 = !DILocalVariable(name: "group_len", arg: 1, scope: !3225, file: !3213, line: 80, type: !992)
!3229 = !DILocation(line: 80, column: 38, scope: !3225)
!3230 = !DILocalVariable(name: "swb_size", arg: 2, scope: !3225, file: !3213, line: 80, type: !992)
!3231 = !DILocation(line: 80, column: 53, scope: !3225)
!3232 = !DILocalVariable(name: "scaled", arg: 3, scope: !3225, file: !3213, line: 80, type: !1103)
!3233 = !DILocation(line: 80, column: 76, scope: !3225)
!3234 = !DILocalVariable(name: "maxval", scope: !3225, file: !3213, line: 82, type: !969)
!3235 = !DILocation(line: 82, column: 11, scope: !3225)
!3236 = !DILocalVariable(name: "w2", scope: !3225, file: !3213, line: 83, type: !992)
!3237 = !DILocation(line: 83, column: 9, scope: !3225)
!3238 = !DILocalVariable(name: "i", scope: !3225, file: !3213, line: 83, type: !992)
!3239 = !DILocation(line: 83, column: 13, scope: !3225)
!3240 = !DILocation(line: 84, column: 13, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3225, file: !3213, line: 84, column: 5)
!3242 = !DILocation(line: 84, column: 10, scope: !3241)
!3243 = !DILocation(line: 84, column: 18, scope: !3244)
!3244 = !DILexicalBlockFile(scope: !3245, file: !3213, discriminator: 1)
!3245 = distinct !DILexicalBlock(scope: !3241, file: !3213, line: 84, column: 5)
!3246 = !DILocation(line: 84, column: 23, scope: !3244)
!3247 = !DILocation(line: 84, column: 21, scope: !3244)
!3248 = !DILocation(line: 84, column: 5, scope: !3244)
!3249 = !DILocation(line: 85, column: 16, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3251, file: !3213, line: 85, column: 9)
!3251 = distinct !DILexicalBlock(scope: !3245, file: !3213, line: 84, column: 40)
!3252 = !DILocation(line: 85, column: 14, scope: !3250)
!3253 = !DILocation(line: 85, column: 21, scope: !3254)
!3254 = !DILexicalBlockFile(scope: !3255, file: !3213, discriminator: 1)
!3255 = distinct !DILexicalBlock(scope: !3250, file: !3213, line: 85, column: 9)
!3256 = !DILocation(line: 85, column: 25, scope: !3254)
!3257 = !DILocation(line: 85, column: 23, scope: !3254)
!3258 = !DILocation(line: 85, column: 9, scope: !3254)
!3259 = !DILocation(line: 86, column: 24, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3255, file: !3213, line: 85, column: 40)
!3261 = !DILocation(line: 86, column: 42, scope: !3260)
!3262 = !DILocation(line: 86, column: 44, scope: !3260)
!3263 = !DILocation(line: 86, column: 49, scope: !3260)
!3264 = !DILocation(line: 86, column: 48, scope: !3260)
!3265 = !DILocation(line: 86, column: 35, scope: !3260)
!3266 = !DILocation(line: 86, column: 32, scope: !3260)
!3267 = !DILocation(line: 86, column: 23, scope: !3260)
!3268 = !DILocation(line: 86, column: 56, scope: !3269)
!3269 = !DILexicalBlockFile(scope: !3260, file: !3213, discriminator: 1)
!3270 = !DILocation(line: 86, column: 23, scope: !3269)
!3271 = !DILocation(line: 86, column: 74, scope: !3272)
!3272 = !DILexicalBlockFile(scope: !3260, file: !3213, discriminator: 2)
!3273 = !DILocation(line: 86, column: 76, scope: !3272)
!3274 = !DILocation(line: 86, column: 81, scope: !3272)
!3275 = !DILocation(line: 86, column: 80, scope: !3272)
!3276 = !DILocation(line: 86, column: 67, scope: !3272)
!3277 = !DILocation(line: 86, column: 23, scope: !3272)
!3278 = !DILocation(line: 86, column: 23, scope: !3279)
!3279 = !DILexicalBlockFile(scope: !3260, file: !3213, discriminator: 3)
!3280 = !DILocation(line: 86, column: 20, scope: !3279)
!3281 = !DILocation(line: 87, column: 9, scope: !3260)
!3282 = !DILocation(line: 85, column: 36, scope: !3283)
!3283 = !DILexicalBlockFile(scope: !3255, file: !3213, discriminator: 2)
!3284 = !DILocation(line: 85, column: 9, scope: !3283)
!3285 = distinct !{!3285, !3286}
!3286 = !DILocation(line: 85, column: 9, scope: !3251)
!3287 = !DILocation(line: 88, column: 5, scope: !3251)
!3288 = !DILocation(line: 84, column: 36, scope: !3289)
!3289 = !DILexicalBlockFile(scope: !3245, file: !3213, discriminator: 2)
!3290 = !DILocation(line: 84, column: 5, scope: !3289)
!3291 = distinct !{!3291, !3292}
!3292 = !DILocation(line: 84, column: 5, scope: !3225)
!3293 = !DILocation(line: 89, column: 12, scope: !3225)
!3294 = !DILocation(line: 89, column: 5, scope: !3225)
!3295 = distinct !DISubprogram(name: "find_min_book", scope: !3213, file: !3213, line: 92, type: !3296, isLocal: true, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{!992, !969, !992}
!3298 = !DILocalVariable(name: "maxval", arg: 1, scope: !3295, file: !3213, line: 92, type: !969)
!3299 = !DILocation(line: 92, column: 39, scope: !3295)
!3300 = !DILocalVariable(name: "sf", arg: 2, scope: !3295, file: !3213, line: 92, type: !992)
!3301 = !DILocation(line: 92, column: 51, scope: !3295)
!3302 = !DILocalVariable(name: "Q34", scope: !3295, file: !3213, line: 94, type: !969)
!3303 = !DILocation(line: 94, column: 11, scope: !3295)
!3304 = !DILocation(line: 94, column: 42, scope: !3295)
!3305 = !DILocation(line: 94, column: 40, scope: !3295)
!3306 = !DILocation(line: 94, column: 45, scope: !3295)
!3307 = !DILocation(line: 94, column: 51, scope: !3295)
!3308 = !DILocation(line: 94, column: 17, scope: !3295)
!3309 = !DILocalVariable(name: "qmaxval", scope: !3295, file: !3213, line: 95, type: !992)
!3310 = !DILocation(line: 95, column: 9, scope: !3295)
!3311 = !DILocalVariable(name: "cb", scope: !3295, file: !3213, line: 95, type: !992)
!3312 = !DILocation(line: 95, column: 18, scope: !3295)
!3313 = !DILocation(line: 96, column: 15, scope: !3295)
!3314 = !DILocation(line: 96, column: 24, scope: !3295)
!3315 = !DILocation(line: 96, column: 22, scope: !3295)
!3316 = !DILocation(line: 96, column: 28, scope: !3295)
!3317 = !DILocation(line: 96, column: 13, scope: !3295)
!3318 = !DILocation(line: 97, column: 9, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3295, file: !3213, line: 97, column: 9)
!3320 = !DILocation(line: 97, column: 17, scope: !3319)
!3321 = !DILocation(line: 97, column: 9, scope: !3295)
!3322 = !DILocation(line: 98, column: 12, scope: !3319)
!3323 = !DILocation(line: 98, column: 9, scope: !3319)
!3324 = !DILocation(line: 100, column: 28, scope: !3319)
!3325 = !DILocation(line: 100, column: 14, scope: !3319)
!3326 = !DILocation(line: 100, column: 12, scope: !3319)
!3327 = !DILocation(line: 101, column: 12, scope: !3295)
!3328 = !DILocation(line: 101, column: 5, scope: !3295)
!3329 = distinct !DISubprogram(name: "quantize_band_cost", scope: !963, file: !963, line: 250, type: !3330, isLocal: true, isDefinition: true, scopeLine: 254, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!3330 = !DISubroutineType(types: !3331)
!3331 = !{!969, !970, !1103, !1103, !992, !992, !992, !1104, !1104, !1963, !1102, !992}
!3332 = !DILocalVariable(name: "s", arg: 1, scope: !3329, file: !963, line: 250, type: !970)
!3333 = !DILocation(line: 250, column: 62, scope: !3329)
!3334 = !DILocalVariable(name: "in", arg: 2, scope: !3329, file: !963, line: 250, type: !1103)
!3335 = !DILocation(line: 250, column: 78, scope: !3329)
!3336 = !DILocalVariable(name: "scaled", arg: 3, scope: !3329, file: !963, line: 251, type: !1103)
!3337 = !DILocation(line: 251, column: 46, scope: !3329)
!3338 = !DILocalVariable(name: "size", arg: 4, scope: !3329, file: !963, line: 251, type: !992)
!3339 = !DILocation(line: 251, column: 58, scope: !3329)
!3340 = !DILocalVariable(name: "scale_idx", arg: 5, scope: !3329, file: !963, line: 251, type: !992)
!3341 = !DILocation(line: 251, column: 68, scope: !3329)
!3342 = !DILocalVariable(name: "cb", arg: 6, scope: !3329, file: !963, line: 252, type: !992)
!3343 = !DILocation(line: 252, column: 37, scope: !3329)
!3344 = !DILocalVariable(name: "lambda", arg: 7, scope: !3329, file: !963, line: 252, type: !1104)
!3345 = !DILocation(line: 252, column: 53, scope: !3329)
!3346 = !DILocalVariable(name: "uplim", arg: 8, scope: !3329, file: !963, line: 252, type: !1104)
!3347 = !DILocation(line: 252, column: 73, scope: !3329)
!3348 = !DILocalVariable(name: "bits", arg: 9, scope: !3329, file: !963, line: 253, type: !1963)
!3349 = !DILocation(line: 253, column: 38, scope: !3329)
!3350 = !DILocalVariable(name: "energy", arg: 10, scope: !3329, file: !963, line: 253, type: !1102)
!3351 = !DILocation(line: 253, column: 51, scope: !3329)
!3352 = !DILocalVariable(name: "rtz", arg: 11, scope: !3329, file: !963, line: 253, type: !992)
!3353 = !DILocation(line: 253, column: 63, scope: !3329)
!3354 = !DILocation(line: 255, column: 96, scope: !3329)
!3355 = !DILocation(line: 255, column: 12, scope: !3329)
!3356 = !DILocation(line: 255, column: 14, scope: !3329)
!3357 = !DILocation(line: 255, column: 13, scope: !3329)
!3358 = !DILocation(line: 255, column: 101, scope: !3329)
!3359 = !DILocation(line: 255, column: 21, scope: !3329)
!3360 = !DILocation(line: 255, column: 27, scope: !3329)
!3361 = !DILocation(line: 255, column: 38, scope: !3329)
!3362 = !DILocation(line: 255, column: 42, scope: !3329)
!3363 = !DILocation(line: 255, column: 50, scope: !3329)
!3364 = !DILocation(line: 255, column: 57, scope: !3329)
!3365 = !DILocation(line: 255, column: 63, scope: !3329)
!3366 = !DILocation(line: 255, column: 5, scope: !3329)
!3367 = distinct !DISubprogram(name: "ff_aac_search_for_is", scope: !2747, file: !2747, line: 98, type: !3368, isLocal: false, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{null, !2759, !1727, !1222}
!3370 = !DILocalVariable(name: "s", arg: 1, scope: !3367, file: !2747, line: 98, type: !2759)
!3371 = !DILocation(line: 98, column: 42, scope: !3367)
!3372 = !DILocalVariable(name: "avctx", arg: 2, scope: !3367, file: !2747, line: 98, type: !1727)
!3373 = !DILocation(line: 98, column: 61, scope: !3367)
!3374 = !DILocalVariable(name: "cpe", arg: 3, scope: !3367, file: !2747, line: 98, type: !1222)
!3375 = !DILocation(line: 98, column: 84, scope: !3367)
!3376 = !DILocalVariable(name: "sce0", scope: !3367, file: !2747, line: 100, type: !2460)
!3377 = !DILocation(line: 100, column: 27, scope: !3367)
!3378 = !DILocation(line: 100, column: 35, scope: !3367)
!3379 = !DILocation(line: 100, column: 40, scope: !3367)
!3380 = !DILocalVariable(name: "sce1", scope: !3367, file: !2747, line: 101, type: !2460)
!3381 = !DILocation(line: 101, column: 27, scope: !3367)
!3382 = !DILocation(line: 101, column: 35, scope: !3367)
!3383 = !DILocation(line: 101, column: 40, scope: !3367)
!3384 = !DILocalVariable(name: "start", scope: !3367, file: !2747, line: 102, type: !992)
!3385 = !DILocation(line: 102, column: 9, scope: !3367)
!3386 = !DILocalVariable(name: "count", scope: !3367, file: !2747, line: 102, type: !992)
!3387 = !DILocation(line: 102, column: 20, scope: !3367)
!3388 = !DILocalVariable(name: "w", scope: !3367, file: !2747, line: 102, type: !992)
!3389 = !DILocation(line: 102, column: 31, scope: !3367)
!3390 = !DILocalVariable(name: "w2", scope: !3367, file: !2747, line: 102, type: !992)
!3391 = !DILocation(line: 102, column: 34, scope: !3367)
!3392 = !DILocalVariable(name: "g", scope: !3367, file: !2747, line: 102, type: !992)
!3393 = !DILocation(line: 102, column: 38, scope: !3367)
!3394 = !DILocalVariable(name: "i", scope: !3367, file: !2747, line: 102, type: !992)
!3395 = !DILocation(line: 102, column: 41, scope: !3367)
!3396 = !DILocalVariable(name: "prev_sf1", scope: !3367, file: !2747, line: 102, type: !992)
!3397 = !DILocation(line: 102, column: 44, scope: !3367)
!3398 = !DILocalVariable(name: "prev_bt", scope: !3367, file: !2747, line: 102, type: !992)
!3399 = !DILocation(line: 102, column: 59, scope: !3367)
!3400 = !DILocalVariable(name: "prev_is", scope: !3367, file: !2747, line: 102, type: !992)
!3401 = !DILocation(line: 102, column: 73, scope: !3367)
!3402 = !DILocalVariable(name: "freq_mult", scope: !3367, file: !2747, line: 103, type: !1104)
!3403 = !DILocation(line: 103, column: 17, scope: !3367)
!3404 = !DILocation(line: 103, column: 29, scope: !3367)
!3405 = !DILocation(line: 103, column: 36, scope: !3367)
!3406 = !DILocation(line: 103, column: 57, scope: !3367)
!3407 = !DILocation(line: 103, column: 63, scope: !3367)
!3408 = !DILocation(line: 103, column: 67, scope: !3367)
!3409 = !DILocation(line: 103, column: 56, scope: !3367)
!3410 = !DILocation(line: 103, column: 47, scope: !3367)
!3411 = !DILocation(line: 103, column: 79, scope: !3367)
!3412 = !DILocalVariable(name: "nextband1", scope: !3367, file: !2747, line: 104, type: !1231)
!3413 = !DILocation(line: 104, column: 13, scope: !3367)
!3414 = !DILocation(line: 106, column: 10, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3367, file: !2747, line: 106, column: 9)
!3416 = !DILocation(line: 106, column: 15, scope: !3415)
!3417 = !DILocation(line: 106, column: 9, scope: !3367)
!3418 = !DILocation(line: 107, column: 9, scope: !3415)
!3419 = !DILocation(line: 110, column: 26, scope: !3367)
!3420 = !DILocation(line: 110, column: 32, scope: !3367)
!3421 = !DILocation(line: 110, column: 5, scope: !3367)
!3422 = !DILocation(line: 112, column: 12, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3367, file: !2747, line: 112, column: 5)
!3424 = !DILocation(line: 112, column: 10, scope: !3423)
!3425 = !DILocation(line: 112, column: 17, scope: !3426)
!3426 = !DILexicalBlockFile(scope: !3427, file: !2747, discriminator: 1)
!3427 = distinct !DILexicalBlock(scope: !3423, file: !2747, line: 112, column: 5)
!3428 = !DILocation(line: 112, column: 21, scope: !3426)
!3429 = !DILocation(line: 112, column: 27, scope: !3426)
!3430 = !DILocation(line: 112, column: 31, scope: !3426)
!3431 = !DILocation(line: 112, column: 19, scope: !3426)
!3432 = !DILocation(line: 112, column: 5, scope: !3426)
!3433 = !DILocation(line: 113, column: 15, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3427, file: !2747, line: 112, column: 73)
!3435 = !DILocation(line: 114, column: 16, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3434, file: !2747, line: 114, column: 9)
!3437 = !DILocation(line: 114, column: 14, scope: !3436)
!3438 = !DILocation(line: 114, column: 21, scope: !3439)
!3439 = !DILexicalBlockFile(scope: !3440, file: !2747, discriminator: 1)
!3440 = distinct !DILexicalBlock(scope: !3436, file: !2747, line: 114, column: 9)
!3441 = !DILocation(line: 114, column: 25, scope: !3439)
!3442 = !DILocation(line: 114, column: 31, scope: !3439)
!3443 = !DILocation(line: 114, column: 35, scope: !3439)
!3444 = !DILocation(line: 114, column: 23, scope: !3439)
!3445 = !DILocation(line: 114, column: 9, scope: !3439)
!3446 = !DILocation(line: 115, column: 17, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3448, file: !2747, line: 115, column: 17)
!3448 = distinct !DILexicalBlock(scope: !3440, file: !2747, line: 114, column: 49)
!3449 = !DILocation(line: 115, column: 23, scope: !3447)
!3450 = !DILocation(line: 115, column: 22, scope: !3447)
!3451 = !DILocation(line: 115, column: 41, scope: !3447)
!3452 = !DILocation(line: 115, column: 44, scope: !3447)
!3453 = !DILocation(line: 115, column: 50, scope: !3447)
!3454 = !DILocation(line: 115, column: 39, scope: !3447)
!3455 = !DILocation(line: 115, column: 33, scope: !3447)
!3456 = !DILocation(line: 115, column: 59, scope: !3447)
!3457 = !DILocation(line: 116, column: 38, scope: !3447)
!3458 = !DILocation(line: 116, column: 39, scope: !3447)
!3459 = !DILocation(line: 116, column: 43, scope: !3447)
!3460 = !DILocation(line: 116, column: 42, scope: !3447)
!3461 = !DILocation(line: 116, column: 17, scope: !3447)
!3462 = !DILocation(line: 116, column: 22, scope: !3447)
!3463 = !DILocation(line: 116, column: 28, scope: !3447)
!3464 = !DILocation(line: 116, column: 46, scope: !3447)
!3465 = !DILocation(line: 116, column: 58, scope: !3447)
!3466 = !DILocation(line: 116, column: 80, scope: !3467)
!3467 = !DILexicalBlockFile(scope: !3447, file: !2747, discriminator: 1)
!3468 = !DILocation(line: 116, column: 81, scope: !3467)
!3469 = !DILocation(line: 116, column: 85, scope: !3467)
!3470 = !DILocation(line: 116, column: 84, scope: !3467)
!3471 = !DILocation(line: 116, column: 62, scope: !3467)
!3472 = !DILocation(line: 116, column: 67, scope: !3467)
!3473 = !DILocation(line: 116, column: 73, scope: !3467)
!3474 = !DILocation(line: 116, column: 88, scope: !3467)
!3475 = !DILocation(line: 117, column: 38, scope: !3447)
!3476 = !DILocation(line: 117, column: 39, scope: !3447)
!3477 = !DILocation(line: 117, column: 43, scope: !3447)
!3478 = !DILocation(line: 117, column: 42, scope: !3447)
!3479 = !DILocation(line: 117, column: 17, scope: !3447)
!3480 = !DILocation(line: 117, column: 22, scope: !3447)
!3481 = !DILocation(line: 117, column: 28, scope: !3447)
!3482 = !DILocation(line: 117, column: 46, scope: !3447)
!3483 = !DILocation(line: 117, column: 58, scope: !3447)
!3484 = !DILocation(line: 117, column: 80, scope: !3467)
!3485 = !DILocation(line: 117, column: 81, scope: !3467)
!3486 = !DILocation(line: 117, column: 85, scope: !3467)
!3487 = !DILocation(line: 117, column: 84, scope: !3467)
!3488 = !DILocation(line: 117, column: 62, scope: !3467)
!3489 = !DILocation(line: 117, column: 67, scope: !3467)
!3490 = !DILocation(line: 117, column: 73, scope: !3467)
!3491 = !DILocation(line: 117, column: 88, scope: !3467)
!3492 = !DILocation(line: 118, column: 44, scope: !3447)
!3493 = !DILocation(line: 118, column: 50, scope: !3447)
!3494 = !DILocation(line: 118, column: 61, scope: !3447)
!3495 = !DILocation(line: 118, column: 71, scope: !3447)
!3496 = !DILocation(line: 118, column: 72, scope: !3447)
!3497 = !DILocation(line: 118, column: 76, scope: !3447)
!3498 = !DILocation(line: 118, column: 75, scope: !3447)
!3499 = !DILocation(line: 118, column: 17, scope: !3447)
!3500 = !DILocation(line: 115, column: 17, scope: !3501)
!3501 = !DILexicalBlockFile(scope: !3448, file: !2747, discriminator: 1)
!3502 = !DILocalVariable(name: "ener0", scope: !3503, file: !2747, line: 119, type: !969)
!3503 = distinct !DILexicalBlock(scope: !3447, file: !2747, line: 118, column: 80)
!3504 = !DILocation(line: 119, column: 23, scope: !3503)
!3505 = !DILocalVariable(name: "ener1", scope: !3503, file: !2747, line: 119, type: !969)
!3506 = !DILocation(line: 119, column: 37, scope: !3503)
!3507 = !DILocalVariable(name: "ener01", scope: !3503, file: !2747, line: 119, type: !969)
!3508 = !DILocation(line: 119, column: 51, scope: !3503)
!3509 = !DILocalVariable(name: "ener01p", scope: !3503, file: !2747, line: 119, type: !969)
!3510 = !DILocation(line: 119, column: 66, scope: !3503)
!3511 = !DILocalVariable(name: "ph_err1", scope: !3503, file: !2747, line: 120, type: !2750)
!3512 = !DILocation(line: 120, column: 35, scope: !3503)
!3513 = !DILocalVariable(name: "ph_err2", scope: !3503, file: !2747, line: 120, type: !2750)
!3514 = !DILocation(line: 120, column: 44, scope: !3503)
!3515 = !DILocalVariable(name: "best", scope: !3503, file: !2747, line: 120, type: !3516)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64, align: 64)
!3517 = !DILocation(line: 120, column: 54, scope: !3503)
!3518 = !DILocation(line: 121, column: 25, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3503, file: !2747, line: 121, column: 17)
!3520 = !DILocation(line: 121, column: 22, scope: !3519)
!3521 = !DILocation(line: 121, column: 30, scope: !3522)
!3522 = !DILexicalBlockFile(scope: !3523, file: !2747, discriminator: 1)
!3523 = distinct !DILexicalBlock(scope: !3519, file: !2747, line: 121, column: 17)
!3524 = !DILocation(line: 121, column: 55, scope: !3522)
!3525 = !DILocation(line: 121, column: 35, scope: !3522)
!3526 = !DILocation(line: 121, column: 41, scope: !3522)
!3527 = !DILocation(line: 121, column: 45, scope: !3522)
!3528 = !DILocation(line: 121, column: 33, scope: !3522)
!3529 = !DILocation(line: 121, column: 17, scope: !3522)
!3530 = !DILocation(line: 122, column: 28, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !2747, line: 122, column: 21)
!3532 = distinct !DILexicalBlock(scope: !3523, file: !2747, line: 121, column: 65)
!3533 = !DILocation(line: 122, column: 26, scope: !3531)
!3534 = !DILocation(line: 122, column: 33, scope: !3535)
!3535 = !DILexicalBlockFile(scope: !3536, file: !2747, discriminator: 1)
!3536 = distinct !DILexicalBlock(scope: !3531, file: !2747, line: 122, column: 21)
!3537 = !DILocation(line: 122, column: 57, scope: !3535)
!3538 = !DILocation(line: 122, column: 37, scope: !3535)
!3539 = !DILocation(line: 122, column: 43, scope: !3535)
!3540 = !DILocation(line: 122, column: 47, scope: !3535)
!3541 = !DILocation(line: 122, column: 35, scope: !3535)
!3542 = !DILocation(line: 122, column: 21, scope: !3535)
!3543 = !DILocalVariable(name: "coef0", scope: !3544, file: !2747, line: 123, type: !969)
!3544 = distinct !DILexicalBlock(scope: !3536, file: !2747, line: 122, column: 66)
!3545 = !DILocation(line: 123, column: 31, scope: !3544)
!3546 = !DILocation(line: 123, column: 52, scope: !3544)
!3547 = !DILocation(line: 123, column: 59, scope: !3544)
!3548 = !DILocation(line: 123, column: 61, scope: !3544)
!3549 = !DILocation(line: 123, column: 60, scope: !3544)
!3550 = !DILocation(line: 123, column: 64, scope: !3544)
!3551 = !DILocation(line: 123, column: 57, scope: !3544)
!3552 = !DILocation(line: 123, column: 69, scope: !3544)
!3553 = !DILocation(line: 123, column: 68, scope: !3544)
!3554 = !DILocation(line: 123, column: 39, scope: !3544)
!3555 = !DILocation(line: 123, column: 45, scope: !3544)
!3556 = !DILocalVariable(name: "coef1", scope: !3544, file: !2747, line: 124, type: !969)
!3557 = !DILocation(line: 124, column: 31, scope: !3544)
!3558 = !DILocation(line: 124, column: 52, scope: !3544)
!3559 = !DILocation(line: 124, column: 59, scope: !3544)
!3560 = !DILocation(line: 124, column: 61, scope: !3544)
!3561 = !DILocation(line: 124, column: 60, scope: !3544)
!3562 = !DILocation(line: 124, column: 64, scope: !3544)
!3563 = !DILocation(line: 124, column: 57, scope: !3544)
!3564 = !DILocation(line: 124, column: 69, scope: !3544)
!3565 = !DILocation(line: 124, column: 68, scope: !3544)
!3566 = !DILocation(line: 124, column: 39, scope: !3544)
!3567 = !DILocation(line: 124, column: 45, scope: !3544)
!3568 = !DILocation(line: 125, column: 34, scope: !3544)
!3569 = !DILocation(line: 125, column: 40, scope: !3544)
!3570 = !DILocation(line: 125, column: 39, scope: !3544)
!3571 = !DILocation(line: 125, column: 31, scope: !3544)
!3572 = !DILocation(line: 126, column: 34, scope: !3544)
!3573 = !DILocation(line: 126, column: 40, scope: !3544)
!3574 = !DILocation(line: 126, column: 39, scope: !3544)
!3575 = !DILocation(line: 126, column: 31, scope: !3544)
!3576 = !DILocation(line: 127, column: 36, scope: !3544)
!3577 = !DILocation(line: 127, column: 44, scope: !3544)
!3578 = !DILocation(line: 127, column: 42, scope: !3544)
!3579 = !DILocation(line: 127, column: 52, scope: !3544)
!3580 = !DILocation(line: 127, column: 60, scope: !3544)
!3581 = !DILocation(line: 127, column: 58, scope: !3544)
!3582 = !DILocation(line: 127, column: 50, scope: !3544)
!3583 = !DILocation(line: 127, column: 32, scope: !3544)
!3584 = !DILocation(line: 128, column: 37, scope: !3544)
!3585 = !DILocation(line: 128, column: 45, scope: !3544)
!3586 = !DILocation(line: 128, column: 43, scope: !3544)
!3587 = !DILocation(line: 128, column: 53, scope: !3544)
!3588 = !DILocation(line: 128, column: 61, scope: !3544)
!3589 = !DILocation(line: 128, column: 59, scope: !3544)
!3590 = !DILocation(line: 128, column: 51, scope: !3544)
!3591 = !DILocation(line: 128, column: 33, scope: !3544)
!3592 = !DILocation(line: 129, column: 21, scope: !3544)
!3593 = !DILocation(line: 122, column: 62, scope: !3594)
!3594 = !DILexicalBlockFile(scope: !3536, file: !2747, discriminator: 2)
!3595 = !DILocation(line: 122, column: 21, scope: !3594)
!3596 = distinct !{!3596, !3597}
!3597 = !DILocation(line: 122, column: 21, scope: !3532)
!3598 = !DILocation(line: 130, column: 17, scope: !3532)
!3599 = !DILocation(line: 121, column: 61, scope: !3600)
!3600 = !DILexicalBlockFile(scope: !3523, file: !2747, discriminator: 2)
!3601 = !DILocation(line: 121, column: 17, scope: !3600)
!3602 = distinct !{!3602, !3603}
!3603 = !DILocation(line: 121, column: 17, scope: !3503)
!3604 = !DILocation(line: 131, column: 50, scope: !3503)
!3605 = !DILocation(line: 131, column: 53, scope: !3503)
!3606 = !DILocation(line: 131, column: 58, scope: !3503)
!3607 = !DILocation(line: 131, column: 65, scope: !3503)
!3608 = !DILocation(line: 131, column: 68, scope: !3503)
!3609 = !DILocation(line: 132, column: 50, scope: !3503)
!3610 = !DILocation(line: 132, column: 57, scope: !3503)
!3611 = !DILocation(line: 132, column: 64, scope: !3503)
!3612 = !DILocation(line: 131, column: 27, scope: !3503)
!3613 = !DILocation(line: 131, column: 27, scope: !3614)
!3614 = !DILexicalBlockFile(scope: !3503, file: !2747, discriminator: 1)
!3615 = !DILocation(line: 133, column: 50, scope: !3503)
!3616 = !DILocation(line: 133, column: 53, scope: !3503)
!3617 = !DILocation(line: 133, column: 58, scope: !3503)
!3618 = !DILocation(line: 133, column: 65, scope: !3503)
!3619 = !DILocation(line: 133, column: 68, scope: !3503)
!3620 = !DILocation(line: 134, column: 50, scope: !3503)
!3621 = !DILocation(line: 134, column: 57, scope: !3503)
!3622 = !DILocation(line: 134, column: 64, scope: !3503)
!3623 = !DILocation(line: 133, column: 27, scope: !3503)
!3624 = !DILocation(line: 133, column: 27, scope: !3614)
!3625 = !DILocation(line: 135, column: 33, scope: !3503)
!3626 = !DILocation(line: 135, column: 25, scope: !3503)
!3627 = !DILocation(line: 135, column: 38, scope: !3503)
!3628 = !DILocation(line: 135, column: 49, scope: !3614)
!3629 = !DILocation(line: 135, column: 65, scope: !3614)
!3630 = !DILocation(line: 135, column: 55, scope: !3614)
!3631 = !DILocation(line: 135, column: 24, scope: !3614)
!3632 = !DILocation(line: 135, column: 24, scope: !3633)
!3633 = !DILexicalBlockFile(scope: !3503, file: !2747, discriminator: 2)
!3634 = !DILocation(line: 135, column: 24, scope: !3635)
!3635 = !DILexicalBlockFile(scope: !3503, file: !2747, discriminator: 3)
!3636 = !DILocation(line: 135, column: 24, scope: !3637)
!3637 = !DILexicalBlockFile(scope: !3503, file: !2747, discriminator: 4)
!3638 = !DILocation(line: 135, column: 22, scope: !3637)
!3639 = !DILocation(line: 136, column: 21, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3503, file: !2747, line: 136, column: 21)
!3641 = !DILocation(line: 136, column: 27, scope: !3640)
!3642 = !DILocation(line: 136, column: 21, scope: !3503)
!3643 = !DILocation(line: 137, column: 34, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3640, file: !2747, line: 136, column: 33)
!3645 = !DILocation(line: 137, column: 35, scope: !3644)
!3646 = !DILocation(line: 137, column: 39, scope: !3644)
!3647 = !DILocation(line: 137, column: 38, scope: !3644)
!3648 = !DILocation(line: 137, column: 21, scope: !3644)
!3649 = !DILocation(line: 137, column: 26, scope: !3644)
!3650 = !DILocation(line: 137, column: 42, scope: !3644)
!3651 = !DILocation(line: 138, column: 34, scope: !3644)
!3652 = !DILocation(line: 138, column: 35, scope: !3644)
!3653 = !DILocation(line: 138, column: 39, scope: !3644)
!3654 = !DILocation(line: 138, column: 38, scope: !3644)
!3655 = !DILocation(line: 138, column: 21, scope: !3644)
!3656 = !DILocation(line: 138, column: 26, scope: !3644)
!3657 = !DILocation(line: 138, column: 42, scope: !3644)
!3658 = !DILocation(line: 139, column: 55, scope: !3644)
!3659 = !DILocation(line: 139, column: 63, scope: !3644)
!3660 = !DILocation(line: 139, column: 69, scope: !3644)
!3661 = !DILocation(line: 139, column: 61, scope: !3644)
!3662 = !DILocation(line: 139, column: 50, scope: !3644)
!3663 = !DILocation(line: 139, column: 40, scope: !3644)
!3664 = !DILocation(line: 139, column: 41, scope: !3644)
!3665 = !DILocation(line: 139, column: 45, scope: !3644)
!3666 = !DILocation(line: 139, column: 44, scope: !3644)
!3667 = !DILocation(line: 139, column: 21, scope: !3644)
!3668 = !DILocation(line: 139, column: 26, scope: !3644)
!3669 = !DILocation(line: 139, column: 32, scope: !3644)
!3670 = !DILocation(line: 139, column: 48, scope: !3644)
!3671 = !DILocation(line: 140, column: 50, scope: !3644)
!3672 = !DILocation(line: 140, column: 56, scope: !3644)
!3673 = !DILocation(line: 140, column: 55, scope: !3644)
!3674 = !DILocation(line: 140, column: 40, scope: !3644)
!3675 = !DILocation(line: 140, column: 41, scope: !3644)
!3676 = !DILocation(line: 140, column: 45, scope: !3644)
!3677 = !DILocation(line: 140, column: 44, scope: !3644)
!3678 = !DILocation(line: 140, column: 21, scope: !3644)
!3679 = !DILocation(line: 140, column: 26, scope: !3644)
!3680 = !DILocation(line: 140, column: 32, scope: !3644)
!3681 = !DILocation(line: 140, column: 48, scope: !3644)
!3682 = !DILocation(line: 141, column: 53, scope: !3644)
!3683 = !DILocation(line: 141, column: 59, scope: !3644)
!3684 = !DILocation(line: 141, column: 65, scope: !3644)
!3685 = !DILocation(line: 141, column: 52, scope: !3644)
!3686 = !DILocation(line: 141, column: 42, scope: !3644)
!3687 = !DILocation(line: 141, column: 43, scope: !3644)
!3688 = !DILocation(line: 141, column: 47, scope: !3644)
!3689 = !DILocation(line: 141, column: 46, scope: !3644)
!3690 = !DILocation(line: 141, column: 21, scope: !3644)
!3691 = !DILocation(line: 141, column: 26, scope: !3644)
!3692 = !DILocation(line: 141, column: 32, scope: !3644)
!3693 = !DILocation(line: 141, column: 50, scope: !3644)
!3694 = !DILocation(line: 142, column: 25, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3644, file: !2747, line: 142, column: 25)
!3696 = !DILocation(line: 142, column: 33, scope: !3695)
!3697 = !DILocation(line: 142, column: 36, scope: !3698)
!3698 = !DILexicalBlockFile(scope: !3695, file: !2747, discriminator: 1)
!3699 = !DILocation(line: 142, column: 68, scope: !3698)
!3700 = !DILocation(line: 142, column: 69, scope: !3698)
!3701 = !DILocation(line: 142, column: 73, scope: !3698)
!3702 = !DILocation(line: 142, column: 72, scope: !3698)
!3703 = !DILocation(line: 142, column: 47, scope: !3698)
!3704 = !DILocation(line: 142, column: 52, scope: !3698)
!3705 = !DILocation(line: 142, column: 58, scope: !3698)
!3706 = !DILocation(line: 142, column: 44, scope: !3698)
!3707 = !DILocation(line: 142, column: 25, scope: !3698)
!3708 = !DILocation(line: 144, column: 38, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3695, file: !2747, line: 142, column: 77)
!3710 = !DILocation(line: 144, column: 39, scope: !3709)
!3711 = !DILocation(line: 144, column: 43, scope: !3709)
!3712 = !DILocation(line: 144, column: 42, scope: !3709)
!3713 = !DILocation(line: 144, column: 25, scope: !3709)
!3714 = !DILocation(line: 144, column: 30, scope: !3709)
!3715 = !DILocation(line: 144, column: 46, scope: !3709)
!3716 = !DILocation(line: 145, column: 57, scope: !3709)
!3717 = !DILocation(line: 145, column: 63, scope: !3709)
!3718 = !DILocation(line: 145, column: 69, scope: !3709)
!3719 = !DILocation(line: 145, column: 56, scope: !3709)
!3720 = !DILocation(line: 145, column: 46, scope: !3709)
!3721 = !DILocation(line: 145, column: 47, scope: !3709)
!3722 = !DILocation(line: 145, column: 51, scope: !3709)
!3723 = !DILocation(line: 145, column: 50, scope: !3709)
!3724 = !DILocation(line: 145, column: 25, scope: !3709)
!3725 = !DILocation(line: 145, column: 30, scope: !3709)
!3726 = !DILocation(line: 145, column: 36, scope: !3709)
!3727 = !DILocation(line: 145, column: 54, scope: !3709)
!3728 = !DILocation(line: 146, column: 21, scope: !3709)
!3729 = !DILocation(line: 147, column: 52, scope: !3644)
!3730 = !DILocation(line: 147, column: 53, scope: !3644)
!3731 = !DILocation(line: 147, column: 57, scope: !3644)
!3732 = !DILocation(line: 147, column: 56, scope: !3644)
!3733 = !DILocation(line: 147, column: 31, scope: !3644)
!3734 = !DILocation(line: 147, column: 36, scope: !3644)
!3735 = !DILocation(line: 147, column: 42, scope: !3644)
!3736 = !DILocation(line: 147, column: 29, scope: !3644)
!3737 = !DILocation(line: 148, column: 26, scope: !3644)
!3738 = !DILocation(line: 149, column: 17, scope: !3644)
!3739 = !DILocation(line: 150, column: 13, scope: !3503)
!3740 = !DILocation(line: 151, column: 31, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3448, file: !2747, line: 151, column: 17)
!3742 = !DILocation(line: 151, column: 32, scope: !3741)
!3743 = !DILocation(line: 151, column: 36, scope: !3741)
!3744 = !DILocation(line: 151, column: 35, scope: !3741)
!3745 = !DILocation(line: 151, column: 18, scope: !3741)
!3746 = !DILocation(line: 151, column: 24, scope: !3741)
!3747 = !DILocation(line: 151, column: 39, scope: !3741)
!3748 = !DILocation(line: 151, column: 58, scope: !3749)
!3749 = !DILexicalBlockFile(scope: !3741, file: !2747, discriminator: 1)
!3750 = !DILocation(line: 151, column: 59, scope: !3749)
!3751 = !DILocation(line: 151, column: 63, scope: !3749)
!3752 = !DILocation(line: 151, column: 62, scope: !3749)
!3753 = !DILocation(line: 151, column: 42, scope: !3749)
!3754 = !DILocation(line: 151, column: 48, scope: !3749)
!3755 = !DILocation(line: 151, column: 66, scope: !3749)
!3756 = !DILocation(line: 151, column: 17, scope: !3749)
!3757 = !DILocation(line: 152, column: 41, scope: !3741)
!3758 = !DILocation(line: 152, column: 42, scope: !3741)
!3759 = !DILocation(line: 152, column: 46, scope: !3741)
!3760 = !DILocation(line: 152, column: 45, scope: !3741)
!3761 = !DILocation(line: 152, column: 28, scope: !3741)
!3762 = !DILocation(line: 152, column: 34, scope: !3741)
!3763 = !DILocation(line: 152, column: 26, scope: !3741)
!3764 = !DILocation(line: 152, column: 17, scope: !3741)
!3765 = !DILocation(line: 153, column: 36, scope: !3448)
!3766 = !DILocation(line: 153, column: 37, scope: !3448)
!3767 = !DILocation(line: 153, column: 41, scope: !3448)
!3768 = !DILocation(line: 153, column: 40, scope: !3448)
!3769 = !DILocation(line: 153, column: 23, scope: !3448)
!3770 = !DILocation(line: 153, column: 28, scope: !3448)
!3771 = !DILocation(line: 153, column: 21, scope: !3448)
!3772 = !DILocation(line: 154, column: 42, scope: !3448)
!3773 = !DILocation(line: 154, column: 22, scope: !3448)
!3774 = !DILocation(line: 154, column: 28, scope: !3448)
!3775 = !DILocation(line: 154, column: 32, scope: !3448)
!3776 = !DILocation(line: 154, column: 19, scope: !3448)
!3777 = !DILocation(line: 155, column: 9, scope: !3448)
!3778 = !DILocation(line: 114, column: 45, scope: !3779)
!3779 = !DILexicalBlockFile(scope: !3440, file: !2747, discriminator: 2)
!3780 = !DILocation(line: 114, column: 9, scope: !3779)
!3781 = distinct !{!3781, !3782}
!3782 = !DILocation(line: 114, column: 9, scope: !3434)
!3783 = !DILocation(line: 156, column: 5, scope: !3434)
!3784 = !DILocation(line: 112, column: 69, scope: !3785)
!3785 = !DILexicalBlockFile(scope: !3427, file: !2747, discriminator: 2)
!3786 = !DILocation(line: 112, column: 49, scope: !3785)
!3787 = !DILocation(line: 112, column: 55, scope: !3785)
!3788 = !DILocation(line: 112, column: 59, scope: !3785)
!3789 = !DILocation(line: 112, column: 46, scope: !3785)
!3790 = !DILocation(line: 112, column: 5, scope: !3785)
!3791 = distinct !{!3791, !3792}
!3792 = !DILocation(line: 112, column: 5, scope: !3367)
!3793 = !DILocation(line: 157, column: 22, scope: !3367)
!3794 = !DILocation(line: 157, column: 21, scope: !3367)
!3795 = !DILocation(line: 157, column: 20, scope: !3367)
!3796 = !DILocation(line: 157, column: 5, scope: !3367)
!3797 = !DILocation(line: 157, column: 10, scope: !3367)
!3798 = !DILocation(line: 157, column: 18, scope: !3367)
!3799 = !DILocation(line: 158, column: 1, scope: !3367)
!3800 = !DILocation(line: 158, column: 1, scope: !3801)
!3801 = !DILexicalBlockFile(scope: !3367, file: !2747, discriminator: 1)
!3802 = distinct !DISubprogram(name: "ff_init_nextband_map", scope: !3213, file: !3213, line: 199, type: !3803, isLocal: true, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{null, !3805, !1038}
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3806, size: 64, align: 64)
!3806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1237)
!3807 = !DILocalVariable(name: "sce", arg: 1, scope: !3802, file: !3213, line: 199, type: !3805)
!3808 = !DILocation(line: 199, column: 69, scope: !3802)
!3809 = !DILocalVariable(name: "nextband", arg: 2, scope: !3802, file: !3213, line: 199, type: !1038)
!3810 = !DILocation(line: 199, column: 83, scope: !3802)
!3811 = !DILocalVariable(name: "prevband", scope: !3802, file: !3213, line: 201, type: !959)
!3812 = !DILocation(line: 201, column: 19, scope: !3802)
!3813 = !DILocalVariable(name: "w", scope: !3802, file: !3213, line: 202, type: !992)
!3814 = !DILocation(line: 202, column: 9, scope: !3802)
!3815 = !DILocalVariable(name: "g", scope: !3802, file: !3213, line: 202, type: !992)
!3816 = !DILocation(line: 202, column: 12, scope: !3802)
!3817 = !DILocation(line: 204, column: 12, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3802, file: !3213, line: 204, column: 5)
!3819 = !DILocation(line: 204, column: 10, scope: !3818)
!3820 = !DILocation(line: 204, column: 17, scope: !3821)
!3821 = !DILexicalBlockFile(scope: !3822, file: !3213, discriminator: 1)
!3822 = distinct !DILexicalBlock(scope: !3818, file: !3213, line: 204, column: 5)
!3823 = !DILocation(line: 204, column: 19, scope: !3821)
!3824 = !DILocation(line: 204, column: 5, scope: !3821)
!3825 = !DILocation(line: 205, column: 23, scope: !3822)
!3826 = !DILocation(line: 205, column: 18, scope: !3822)
!3827 = !DILocation(line: 205, column: 9, scope: !3822)
!3828 = !DILocation(line: 205, column: 21, scope: !3822)
!3829 = !DILocation(line: 204, column: 27, scope: !3830)
!3830 = !DILexicalBlockFile(scope: !3822, file: !3213, discriminator: 2)
!3831 = !DILocation(line: 204, column: 5, scope: !3830)
!3832 = distinct !{!3832, !3833}
!3833 = !DILocation(line: 204, column: 5, scope: !3802)
!3834 = !DILocation(line: 208, column: 12, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3802, file: !3213, line: 208, column: 5)
!3836 = !DILocation(line: 208, column: 10, scope: !3835)
!3837 = !DILocation(line: 208, column: 17, scope: !3838)
!3838 = !DILexicalBlockFile(scope: !3839, file: !3213, discriminator: 1)
!3839 = distinct !DILexicalBlock(scope: !3835, file: !3213, line: 208, column: 5)
!3840 = !DILocation(line: 208, column: 21, scope: !3838)
!3841 = !DILocation(line: 208, column: 26, scope: !3838)
!3842 = !DILocation(line: 208, column: 30, scope: !3838)
!3843 = !DILocation(line: 208, column: 19, scope: !3838)
!3844 = !DILocation(line: 208, column: 5, scope: !3838)
!3845 = !DILocation(line: 209, column: 16, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !3213, line: 209, column: 9)
!3847 = distinct !DILexicalBlock(scope: !3839, file: !3213, line: 208, column: 71)
!3848 = !DILocation(line: 209, column: 14, scope: !3846)
!3849 = !DILocation(line: 209, column: 21, scope: !3850)
!3850 = !DILexicalBlockFile(scope: !3851, file: !3213, discriminator: 1)
!3851 = distinct !DILexicalBlock(scope: !3846, file: !3213, line: 209, column: 9)
!3852 = !DILocation(line: 209, column: 25, scope: !3850)
!3853 = !DILocation(line: 209, column: 30, scope: !3850)
!3854 = !DILocation(line: 209, column: 34, scope: !3850)
!3855 = !DILocation(line: 209, column: 23, scope: !3850)
!3856 = !DILocation(line: 209, column: 9, scope: !3850)
!3857 = !DILocation(line: 210, column: 30, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3859, file: !3213, line: 210, column: 17)
!3859 = distinct !DILexicalBlock(scope: !3851, file: !3213, line: 209, column: 48)
!3860 = !DILocation(line: 210, column: 31, scope: !3858)
!3861 = !DILocation(line: 210, column: 35, scope: !3858)
!3862 = !DILocation(line: 210, column: 34, scope: !3858)
!3863 = !DILocation(line: 210, column: 18, scope: !3858)
!3864 = !DILocation(line: 210, column: 23, scope: !3858)
!3865 = !DILocation(line: 210, column: 38, scope: !3858)
!3866 = !DILocation(line: 210, column: 56, scope: !3867)
!3867 = !DILexicalBlockFile(scope: !3858, file: !3213, discriminator: 1)
!3868 = !DILocation(line: 210, column: 57, scope: !3867)
!3869 = !DILocation(line: 210, column: 61, scope: !3867)
!3870 = !DILocation(line: 210, column: 60, scope: !3867)
!3871 = !DILocation(line: 210, column: 41, scope: !3867)
!3872 = !DILocation(line: 210, column: 46, scope: !3867)
!3873 = !DILocation(line: 210, column: 64, scope: !3867)
!3874 = !DILocation(line: 210, column: 17, scope: !3867)
!3875 = !DILocation(line: 211, column: 49, scope: !3858)
!3876 = !DILocation(line: 211, column: 50, scope: !3858)
!3877 = !DILocation(line: 211, column: 54, scope: !3858)
!3878 = !DILocation(line: 211, column: 53, scope: !3858)
!3879 = !DILocation(line: 211, column: 37, scope: !3858)
!3880 = !DILocation(line: 211, column: 28, scope: !3858)
!3881 = !DILocation(line: 211, column: 47, scope: !3858)
!3882 = !DILocation(line: 211, column: 26, scope: !3858)
!3883 = !DILocation(line: 211, column: 17, scope: !3858)
!3884 = !DILocation(line: 212, column: 9, scope: !3859)
!3885 = !DILocation(line: 209, column: 44, scope: !3886)
!3886 = !DILexicalBlockFile(scope: !3851, file: !3213, discriminator: 2)
!3887 = !DILocation(line: 209, column: 9, scope: !3886)
!3888 = distinct !{!3888, !3889}
!3889 = !DILocation(line: 209, column: 9, scope: !3847)
!3890 = !DILocation(line: 213, column: 5, scope: !3847)
!3891 = !DILocation(line: 208, column: 67, scope: !3892)
!3892 = !DILexicalBlockFile(scope: !3839, file: !3213, discriminator: 2)
!3893 = !DILocation(line: 208, column: 48, scope: !3892)
!3894 = !DILocation(line: 208, column: 53, scope: !3892)
!3895 = !DILocation(line: 208, column: 57, scope: !3892)
!3896 = !DILocation(line: 208, column: 45, scope: !3892)
!3897 = !DILocation(line: 208, column: 5, scope: !3892)
!3898 = distinct !{!3898, !3899}
!3899 = !DILocation(line: 208, column: 5, scope: !3802)
!3900 = !DILocation(line: 214, column: 26, scope: !3802)
!3901 = !DILocation(line: 214, column: 14, scope: !3802)
!3902 = !DILocation(line: 214, column: 5, scope: !3802)
!3903 = !DILocation(line: 214, column: 24, scope: !3802)
!3904 = !DILocation(line: 215, column: 1, scope: !3802)
!3905 = distinct !DISubprogram(name: "ff_sfdelta_can_remove_band", scope: !3213, file: !3213, line: 232, type: !3906, isLocal: true, isDefinition: true, scopeLine: 234, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!3906 = !DISubroutineType(types: !3907)
!3907 = !{!992, !3805, !1218, !992, !992}
!3908 = !DILocalVariable(name: "sce", arg: 1, scope: !3905, file: !3213, line: 232, type: !3805)
!3909 = !DILocation(line: 232, column: 74, scope: !3905)
!3910 = !DILocalVariable(name: "nextband", arg: 2, scope: !3905, file: !3213, line: 233, type: !1218)
!3911 = !DILocation(line: 233, column: 20, scope: !3905)
!3912 = !DILocalVariable(name: "prev_sf", arg: 3, scope: !3905, file: !3213, line: 233, type: !992)
!3913 = !DILocation(line: 233, column: 34, scope: !3905)
!3914 = !DILocalVariable(name: "band", arg: 4, scope: !3905, file: !3213, line: 233, type: !992)
!3915 = !DILocation(line: 233, column: 47, scope: !3905)
!3916 = !DILocation(line: 235, column: 12, scope: !3905)
!3917 = !DILocation(line: 235, column: 20, scope: !3905)
!3918 = !DILocation(line: 236, column: 9, scope: !3905)
!3919 = !DILocation(line: 236, column: 33, scope: !3920)
!3920 = !DILexicalBlockFile(scope: !3905, file: !3213, discriminator: 1)
!3921 = !DILocation(line: 236, column: 24, scope: !3920)
!3922 = !DILocation(line: 236, column: 12, scope: !3920)
!3923 = !DILocation(line: 236, column: 17, scope: !3920)
!3924 = !DILocation(line: 236, column: 44, scope: !3920)
!3925 = !DILocation(line: 236, column: 52, scope: !3920)
!3926 = !DILocation(line: 236, column: 40, scope: !3920)
!3927 = !DILocation(line: 237, column: 9, scope: !3905)
!3928 = !DILocation(line: 237, column: 33, scope: !3920)
!3929 = !DILocation(line: 237, column: 24, scope: !3920)
!3930 = !DILocation(line: 237, column: 12, scope: !3920)
!3931 = !DILocation(line: 237, column: 17, scope: !3920)
!3932 = !DILocation(line: 237, column: 44, scope: !3920)
!3933 = !DILocation(line: 237, column: 52, scope: !3920)
!3934 = !DILocation(line: 237, column: 40, scope: !3920)
!3935 = !DILocation(line: 237, column: 9, scope: !3936)
!3936 = !DILexicalBlockFile(scope: !3905, file: !3213, discriminator: 2)
!3937 = !DILocation(line: 235, column: 5, scope: !3920)
!3938 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_ZERO", scope: !963, file: !963, line: 185, type: !967, isLocal: true, isDefinition: true, scopeLine: 185, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!3939 = !DILocalVariable(name: "a", arg: 1, scope: !3940, file: !3941, line: 229, type: !992)
!3940 = distinct !DISubprogram(name: "av_clip_uintp2_c", scope: !3941, file: !3941, line: 229, type: !3942, isLocal: true, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!3941 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3942 = !DISubroutineType(types: !3943)
!3943 = !{!952, !992, !992}
!3944 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !3945)
!3945 = distinct !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !3962)
!3946 = !DILexicalBlockFile(scope: !3947, file: !963, discriminator: 2)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !963, line: 143, column: 77)
!3948 = distinct !DILexicalBlock(scope: !3949, file: !963, line: 143, column: 25)
!3949 = distinct !DILexicalBlock(scope: !3950, file: !963, line: 142, column: 41)
!3950 = distinct !DILexicalBlock(scope: !3951, file: !963, line: 142, column: 17)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !963, line: 142, column: 17)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !963, line: 141, column: 25)
!3953 = distinct !DILexicalBlock(scope: !3954, file: !963, line: 141, column: 17)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !963, line: 135, column: 17)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !963, line: 135, column: 13)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !963, line: 86, column: 37)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !963, line: 86, column: 5)
!3958 = distinct !DILexicalBlock(scope: !3959, file: !963, line: 86, column: 5)
!3959 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_template", scope: !963, file: !963, line: 41, type: !3960, isLocal: true, isDefinition: true, scopeLine: 49, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{!969, !970, !2645, !1103, !1102, !1103, !992, !992, !992, !1104, !1104, !1963, !1102, !992, !992, !992, !992, !992, !992, !1104}
!3962 = distinct !DILocation(line: 185, column: 253, scope: !3938)
!3963 = !DILocalVariable(name: "p", arg: 2, scope: !3940, file: !3941, line: 229, type: !992)
!3964 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !3945)
!3965 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !3966)
!3966 = distinct !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !3962)
!3967 = !DILexicalBlockFile(scope: !3968, file: !963, discriminator: 1)
!3968 = distinct !DILexicalBlock(scope: !3969, file: !963, line: 106, column: 28)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !963, line: 103, column: 25)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !963, line: 102, column: 48)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !963, line: 102, column: 21)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !963, line: 99, column: 39)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !963, line: 99, column: 13)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !963, line: 99, column: 13)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !963, line: 98, column: 26)
!3976 = distinct !DILexicalBlock(scope: !3956, file: !963, line: 98, column: 13)
!3977 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !3966)
!3978 = !DILocalVariable(name: "s", arg: 1, scope: !3959, file: !963, line: 42, type: !970)
!3979 = !DILocation(line: 42, column: 55, scope: !3959, inlinedAt: !3962)
!3980 = !DILocalVariable(name: "pb", arg: 2, scope: !3959, file: !963, line: 43, type: !2645)
!3981 = !DILocation(line: 43, column: 48, scope: !3959, inlinedAt: !3962)
!3982 = !DILocalVariable(name: "in", arg: 3, scope: !3959, file: !963, line: 43, type: !1103)
!3983 = !DILocation(line: 43, column: 65, scope: !3959, inlinedAt: !3962)
!3984 = !DILocalVariable(name: "out", arg: 4, scope: !3959, file: !963, line: 43, type: !1102)
!3985 = !DILocation(line: 43, column: 76, scope: !3959, inlinedAt: !3962)
!3986 = !DILocalVariable(name: "scaled", arg: 5, scope: !3959, file: !963, line: 44, type: !1103)
!3987 = !DILocation(line: 44, column: 46, scope: !3959, inlinedAt: !3962)
!3988 = !DILocalVariable(name: "size", arg: 6, scope: !3959, file: !963, line: 44, type: !992)
!3989 = !DILocation(line: 44, column: 58, scope: !3959, inlinedAt: !3962)
!3990 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !3959, file: !963, line: 44, type: !992)
!3991 = !DILocation(line: 44, column: 68, scope: !3959, inlinedAt: !3962)
!3992 = !DILocalVariable(name: "cb", arg: 8, scope: !3959, file: !963, line: 45, type: !992)
!3993 = !DILocation(line: 45, column: 37, scope: !3959, inlinedAt: !3962)
!3994 = !DILocalVariable(name: "lambda", arg: 9, scope: !3959, file: !963, line: 45, type: !1104)
!3995 = !DILocation(line: 45, column: 53, scope: !3959, inlinedAt: !3962)
!3996 = !DILocalVariable(name: "uplim", arg: 10, scope: !3959, file: !963, line: 45, type: !1104)
!3997 = !DILocation(line: 45, column: 73, scope: !3959, inlinedAt: !3962)
!3998 = !DILocalVariable(name: "bits", arg: 11, scope: !3959, file: !963, line: 46, type: !1963)
!3999 = !DILocation(line: 46, column: 38, scope: !3959, inlinedAt: !3962)
!4000 = !DILocalVariable(name: "energy", arg: 12, scope: !3959, file: !963, line: 46, type: !1102)
!4001 = !DILocation(line: 46, column: 51, scope: !3959, inlinedAt: !3962)
!4002 = !DILocalVariable(name: "BT_ZERO", arg: 13, scope: !3959, file: !963, line: 46, type: !992)
!4003 = !DILocation(line: 46, column: 63, scope: !3959, inlinedAt: !3962)
!4004 = !DILocalVariable(name: "BT_UNSIGNED", arg: 14, scope: !3959, file: !963, line: 46, type: !992)
!4005 = !DILocation(line: 46, column: 76, scope: !3959, inlinedAt: !3962)
!4006 = !DILocalVariable(name: "BT_PAIR", arg: 15, scope: !3959, file: !963, line: 47, type: !992)
!4007 = !DILocation(line: 47, column: 37, scope: !3959, inlinedAt: !3962)
!4008 = !DILocalVariable(name: "BT_ESC", arg: 16, scope: !3959, file: !963, line: 47, type: !992)
!4009 = !DILocation(line: 47, column: 50, scope: !3959, inlinedAt: !3962)
!4010 = !DILocalVariable(name: "BT_NOISE", arg: 17, scope: !3959, file: !963, line: 47, type: !992)
!4011 = !DILocation(line: 47, column: 62, scope: !3959, inlinedAt: !3962)
!4012 = !DILocalVariable(name: "BT_STEREO", arg: 18, scope: !3959, file: !963, line: 47, type: !992)
!4013 = !DILocation(line: 47, column: 76, scope: !3959, inlinedAt: !3962)
!4014 = !DILocalVariable(name: "ROUNDING", arg: 19, scope: !3959, file: !963, line: 48, type: !1104)
!4015 = !DILocation(line: 48, column: 45, scope: !3959, inlinedAt: !3962)
!4016 = !DILocalVariable(name: "q_idx", scope: !3959, file: !963, line: 50, type: !1760)
!4017 = !DILocation(line: 50, column: 15, scope: !3959, inlinedAt: !3962)
!4018 = !DILocalVariable(name: "Q", scope: !3959, file: !963, line: 51, type: !1104)
!4019 = !DILocation(line: 51, column: 17, scope: !3959, inlinedAt: !3962)
!4020 = !DILocalVariable(name: "Q34", scope: !3959, file: !963, line: 52, type: !1104)
!4021 = !DILocation(line: 52, column: 17, scope: !3959, inlinedAt: !3962)
!4022 = !DILocalVariable(name: "IQ", scope: !3959, file: !963, line: 53, type: !1104)
!4023 = !DILocation(line: 53, column: 17, scope: !3959, inlinedAt: !3962)
!4024 = !DILocalVariable(name: "CLIPPED_ESCAPE", scope: !3959, file: !963, line: 54, type: !1104)
!4025 = !DILocation(line: 54, column: 17, scope: !3959, inlinedAt: !3962)
!4026 = !DILocalVariable(name: "i", scope: !3959, file: !963, line: 55, type: !992)
!4027 = !DILocation(line: 55, column: 9, scope: !3959, inlinedAt: !3962)
!4028 = !DILocalVariable(name: "j", scope: !3959, file: !963, line: 55, type: !992)
!4029 = !DILocation(line: 55, column: 12, scope: !3959, inlinedAt: !3962)
!4030 = !DILocalVariable(name: "cost", scope: !3959, file: !963, line: 56, type: !969)
!4031 = !DILocation(line: 56, column: 11, scope: !3959, inlinedAt: !3962)
!4032 = !DILocalVariable(name: "qenergy", scope: !3959, file: !963, line: 57, type: !969)
!4033 = !DILocation(line: 57, column: 11, scope: !3959, inlinedAt: !3962)
!4034 = !DILocalVariable(name: "dim", scope: !3959, file: !963, line: 58, type: !1760)
!4035 = !DILocation(line: 58, column: 15, scope: !3959, inlinedAt: !3962)
!4036 = !DILocalVariable(name: "resbits", scope: !3959, file: !963, line: 59, type: !992)
!4037 = !DILocation(line: 59, column: 9, scope: !3959, inlinedAt: !3962)
!4038 = !DILocalVariable(name: "off", scope: !3959, file: !963, line: 60, type: !992)
!4039 = !DILocation(line: 60, column: 9, scope: !3959, inlinedAt: !3962)
!4040 = !DILocalVariable(name: "vec", scope: !3956, file: !963, line: 87, type: !1103)
!4041 = !DILocation(line: 87, column: 22, scope: !3956, inlinedAt: !3962)
!4042 = !DILocalVariable(name: "quants", scope: !3956, file: !963, line: 88, type: !1963)
!4043 = !DILocation(line: 88, column: 14, scope: !3956, inlinedAt: !3962)
!4044 = !DILocalVariable(name: "curidx", scope: !3956, file: !963, line: 89, type: !992)
!4045 = !DILocation(line: 89, column: 13, scope: !3956, inlinedAt: !3962)
!4046 = !DILocalVariable(name: "curbits", scope: !3956, file: !963, line: 90, type: !992)
!4047 = !DILocation(line: 90, column: 13, scope: !3956, inlinedAt: !3962)
!4048 = !DILocalVariable(name: "quantized", scope: !3956, file: !963, line: 91, type: !969)
!4049 = !DILocation(line: 91, column: 15, scope: !3956, inlinedAt: !3962)
!4050 = !DILocalVariable(name: "rd", scope: !3956, file: !963, line: 91, type: !969)
!4051 = !DILocation(line: 91, column: 26, scope: !3956, inlinedAt: !3962)
!4052 = !DILocalVariable(name: "t", scope: !3972, file: !963, line: 100, type: !969)
!4053 = !DILocation(line: 100, column: 23, scope: !3972, inlinedAt: !3962)
!4054 = !DILocalVariable(name: "di", scope: !3972, file: !963, line: 101, type: !969)
!4055 = !DILocation(line: 101, column: 23, scope: !3972, inlinedAt: !3962)
!4056 = !DILocalVariable(name: "c", scope: !3968, file: !963, line: 107, type: !992)
!4057 = !DILocation(line: 107, column: 29, scope: !3968, inlinedAt: !3962)
!4058 = !DILocalVariable(name: "coef", scope: !3947, file: !963, line: 144, type: !992)
!4059 = !DILocation(line: 144, column: 29, scope: !3947, inlinedAt: !3962)
!4060 = !DILocalVariable(name: "len", scope: !3947, file: !963, line: 145, type: !992)
!4061 = !DILocation(line: 145, column: 29, scope: !3947, inlinedAt: !3962)
!4062 = !DILocalVariable(name: "s", arg: 1, scope: !3938, file: !963, line: 185, type: !970)
!4063 = !DILocation(line: 185, column: 72, scope: !3938)
!4064 = !DILocalVariable(name: "pb", arg: 2, scope: !3938, file: !963, line: 185, type: !2645)
!4065 = !DILocation(line: 185, column: 90, scope: !3938)
!4066 = !DILocalVariable(name: "in", arg: 3, scope: !3938, file: !963, line: 185, type: !1103)
!4067 = !DILocation(line: 185, column: 107, scope: !3938)
!4068 = !DILocalVariable(name: "quant", arg: 4, scope: !3938, file: !963, line: 185, type: !1102)
!4069 = !DILocation(line: 185, column: 118, scope: !3938)
!4070 = !DILocalVariable(name: "scaled", arg: 5, scope: !3938, file: !963, line: 185, type: !1103)
!4071 = !DILocation(line: 185, column: 138, scope: !3938)
!4072 = !DILocalVariable(name: "size", arg: 6, scope: !3938, file: !963, line: 185, type: !992)
!4073 = !DILocation(line: 185, column: 150, scope: !3938)
!4074 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !3938, file: !963, line: 185, type: !992)
!4075 = !DILocation(line: 185, column: 160, scope: !3938)
!4076 = !DILocalVariable(name: "cb", arg: 8, scope: !3938, file: !963, line: 185, type: !992)
!4077 = !DILocation(line: 185, column: 175, scope: !3938)
!4078 = !DILocalVariable(name: "lambda", arg: 9, scope: !3938, file: !963, line: 185, type: !1104)
!4079 = !DILocation(line: 185, column: 191, scope: !3938)
!4080 = !DILocalVariable(name: "uplim", arg: 10, scope: !3938, file: !963, line: 185, type: !1104)
!4081 = !DILocation(line: 185, column: 211, scope: !3938)
!4082 = !DILocalVariable(name: "bits", arg: 11, scope: !3938, file: !963, line: 185, type: !1963)
!4083 = !DILocation(line: 185, column: 223, scope: !3938)
!4084 = !DILocalVariable(name: "energy", arg: 12, scope: !3938, file: !963, line: 185, type: !1102)
!4085 = !DILocation(line: 185, column: 236, scope: !3938)
!4086 = !DILocation(line: 185, column: 293, scope: !3938)
!4087 = !DILocation(line: 185, column: 296, scope: !3938)
!4088 = !DILocation(line: 185, column: 300, scope: !3938)
!4089 = !DILocation(line: 185, column: 304, scope: !3938)
!4090 = !DILocation(line: 185, column: 311, scope: !3938)
!4091 = !DILocation(line: 185, column: 319, scope: !3938)
!4092 = !DILocation(line: 185, column: 325, scope: !3938)
!4093 = !DILocation(line: 185, column: 349, scope: !3938)
!4094 = !DILocation(line: 185, column: 353, scope: !3938)
!4095 = !DILocation(line: 185, column: 361, scope: !3938)
!4096 = !DILocation(line: 185, column: 368, scope: !3938)
!4097 = !DILocation(line: 185, column: 374, scope: !3938)
!4098 = !DILocation(line: 185, column: 253, scope: !3938)
!4099 = !DILocation(line: 50, column: 29, scope: !3959, inlinedAt: !3962)
!4100 = !DILocation(line: 50, column: 27, scope: !3959, inlinedAt: !3962)
!4101 = !DILocation(line: 50, column: 39, scope: !3959, inlinedAt: !3962)
!4102 = !DILocation(line: 50, column: 45, scope: !3959, inlinedAt: !3962)
!4103 = !DILocation(line: 51, column: 40, scope: !3959, inlinedAt: !3962)
!4104 = !DILocation(line: 51, column: 21, scope: !3959, inlinedAt: !3962)
!4105 = !DILocation(line: 52, column: 42, scope: !3959, inlinedAt: !3962)
!4106 = !DILocation(line: 52, column: 23, scope: !3959, inlinedAt: !3962)
!4107 = !DILocation(line: 53, column: 47, scope: !3959, inlinedAt: !3962)
!4108 = !DILocation(line: 53, column: 45, scope: !3959, inlinedAt: !3962)
!4109 = !DILocation(line: 53, column: 57, scope: !3959, inlinedAt: !3962)
!4110 = !DILocation(line: 53, column: 63, scope: !3959, inlinedAt: !3962)
!4111 = !DILocation(line: 53, column: 22, scope: !3959, inlinedAt: !3962)
!4112 = !DILocation(line: 54, column: 44, scope: !3959, inlinedAt: !3962)
!4113 = !DILocation(line: 54, column: 43, scope: !3959, inlinedAt: !3962)
!4114 = !DILocation(line: 58, column: 21, scope: !3959, inlinedAt: !3962)
!4115 = !DILocation(line: 62, column: 9, scope: !4116, inlinedAt: !3962)
!4116 = distinct !DILexicalBlock(scope: !3959, file: !963, line: 62, column: 9)
!4117 = !DILocation(line: 62, column: 17, scope: !4116, inlinedAt: !3962)
!4118 = !DILocation(line: 62, column: 20, scope: !4119, inlinedAt: !3962)
!4119 = !DILexicalBlockFile(scope: !4116, file: !963, discriminator: 1)
!4120 = !DILocation(line: 62, column: 29, scope: !4119, inlinedAt: !3962)
!4121 = !DILocation(line: 62, column: 32, scope: !4122, inlinedAt: !3962)
!4122 = !DILexicalBlockFile(scope: !4116, file: !963, discriminator: 2)
!4123 = !DILocation(line: 62, column: 9, scope: !4122, inlinedAt: !3962)
!4124 = !DILocation(line: 63, column: 16, scope: !4125, inlinedAt: !3962)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !963, line: 63, column: 9)
!4126 = distinct !DILexicalBlock(scope: !4116, file: !963, line: 62, column: 43)
!4127 = !DILocation(line: 63, column: 14, scope: !4125, inlinedAt: !3962)
!4128 = !DILocation(line: 63, column: 21, scope: !4129, inlinedAt: !3962)
!4129 = !DILexicalBlockFile(scope: !4130, file: !963, discriminator: 1)
!4130 = distinct !DILexicalBlock(scope: !4125, file: !963, line: 63, column: 9)
!4131 = !DILocation(line: 63, column: 25, scope: !4129, inlinedAt: !3962)
!4132 = !DILocation(line: 63, column: 23, scope: !4129, inlinedAt: !3962)
!4133 = !DILocation(line: 63, column: 9, scope: !4129, inlinedAt: !3962)
!4134 = !DILocation(line: 64, column: 24, scope: !4130, inlinedAt: !3962)
!4135 = !DILocation(line: 64, column: 21, scope: !4130, inlinedAt: !3962)
!4136 = !DILocation(line: 64, column: 30, scope: !4130, inlinedAt: !3962)
!4137 = !DILocation(line: 64, column: 27, scope: !4130, inlinedAt: !3962)
!4138 = !DILocation(line: 64, column: 26, scope: !4130, inlinedAt: !3962)
!4139 = !DILocation(line: 64, column: 18, scope: !4130, inlinedAt: !3962)
!4140 = !DILocation(line: 63, column: 32, scope: !4141, inlinedAt: !3962)
!4141 = !DILexicalBlockFile(scope: !4130, file: !963, discriminator: 2)
!4142 = !DILocation(line: 63, column: 9, scope: !4141, inlinedAt: !3962)
!4143 = distinct !{!4143, !4144}
!4144 = !DILocation(line: 63, column: 9, scope: !4126)
!4145 = !DILocation(line: 65, column: 13, scope: !4146, inlinedAt: !3962)
!4146 = distinct !DILexicalBlock(scope: !4126, file: !963, line: 65, column: 13)
!4147 = !DILocation(line: 65, column: 13, scope: !4126, inlinedAt: !3962)
!4148 = !DILocation(line: 66, column: 14, scope: !4146, inlinedAt: !3962)
!4149 = !DILocation(line: 66, column: 19, scope: !4146, inlinedAt: !3962)
!4150 = !DILocation(line: 66, column: 13, scope: !4146, inlinedAt: !3962)
!4151 = !DILocation(line: 67, column: 13, scope: !4152, inlinedAt: !3962)
!4152 = distinct !DILexicalBlock(scope: !4126, file: !963, line: 67, column: 13)
!4153 = !DILocation(line: 67, column: 13, scope: !4126, inlinedAt: !3962)
!4154 = !DILocation(line: 68, column: 23, scope: !4152, inlinedAt: !3962)
!4155 = !DILocation(line: 68, column: 14, scope: !4152, inlinedAt: !3962)
!4156 = !DILocation(line: 68, column: 21, scope: !4152, inlinedAt: !3962)
!4157 = !DILocation(line: 68, column: 13, scope: !4152, inlinedAt: !3962)
!4158 = !DILocation(line: 69, column: 13, scope: !4159, inlinedAt: !3962)
!4159 = distinct !DILexicalBlock(scope: !4126, file: !963, line: 69, column: 13)
!4160 = !DILocation(line: 69, column: 13, scope: !4126, inlinedAt: !3962)
!4161 = !DILocation(line: 70, column: 20, scope: !4162, inlinedAt: !3962)
!4162 = distinct !DILexicalBlock(scope: !4163, file: !963, line: 70, column: 13)
!4163 = distinct !DILexicalBlock(scope: !4159, file: !963, line: 69, column: 18)
!4164 = !DILocation(line: 70, column: 18, scope: !4162, inlinedAt: !3962)
!4165 = !DILocation(line: 70, column: 25, scope: !4166, inlinedAt: !3962)
!4166 = !DILexicalBlockFile(scope: !4167, file: !963, discriminator: 1)
!4167 = distinct !DILexicalBlock(scope: !4162, file: !963, line: 70, column: 13)
!4168 = !DILocation(line: 70, column: 29, scope: !4166, inlinedAt: !3962)
!4169 = !DILocation(line: 70, column: 27, scope: !4166, inlinedAt: !3962)
!4170 = !DILocation(line: 70, column: 13, scope: !4166, inlinedAt: !3962)
!4171 = !DILocation(line: 71, column: 24, scope: !4172, inlinedAt: !3962)
!4172 = distinct !DILexicalBlock(scope: !4167, file: !963, line: 71, column: 17)
!4173 = !DILocation(line: 71, column: 22, scope: !4172, inlinedAt: !3962)
!4174 = !DILocation(line: 71, column: 29, scope: !4175, inlinedAt: !3962)
!4175 = !DILexicalBlockFile(scope: !4176, file: !963, discriminator: 1)
!4176 = distinct !DILexicalBlock(scope: !4172, file: !963, line: 71, column: 17)
!4177 = !DILocation(line: 71, column: 33, scope: !4175, inlinedAt: !3962)
!4178 = !DILocation(line: 71, column: 31, scope: !4175, inlinedAt: !3962)
!4179 = !DILocation(line: 71, column: 17, scope: !4175, inlinedAt: !3962)
!4180 = !DILocation(line: 72, column: 25, scope: !4176, inlinedAt: !3962)
!4181 = !DILocation(line: 72, column: 27, scope: !4176, inlinedAt: !3962)
!4182 = !DILocation(line: 72, column: 26, scope: !4176, inlinedAt: !3962)
!4183 = !DILocation(line: 72, column: 21, scope: !4176, inlinedAt: !3962)
!4184 = !DILocation(line: 72, column: 30, scope: !4176, inlinedAt: !3962)
!4185 = !DILocation(line: 71, column: 39, scope: !4186, inlinedAt: !3962)
!4186 = !DILexicalBlockFile(scope: !4176, file: !963, discriminator: 2)
!4187 = !DILocation(line: 71, column: 17, scope: !4186, inlinedAt: !3962)
!4188 = distinct !{!4188, !4189}
!4189 = !DILocation(line: 71, column: 17, scope: !4167)
!4190 = !DILocation(line: 70, column: 40, scope: !4191, inlinedAt: !3962)
!4191 = !DILexicalBlockFile(scope: !4167, file: !963, discriminator: 2)
!4192 = !DILocation(line: 70, column: 37, scope: !4191, inlinedAt: !3962)
!4193 = !DILocation(line: 70, column: 13, scope: !4191, inlinedAt: !3962)
!4194 = distinct !{!4194, !4195}
!4195 = !DILocation(line: 70, column: 13, scope: !4163)
!4196 = !DILocation(line: 73, column: 9, scope: !4163, inlinedAt: !3962)
!4197 = !DILocation(line: 74, column: 16, scope: !4126, inlinedAt: !3962)
!4198 = !DILocation(line: 74, column: 23, scope: !4126, inlinedAt: !3962)
!4199 = !DILocation(line: 74, column: 21, scope: !4126, inlinedAt: !3962)
!4200 = !DILocation(line: 74, column: 9, scope: !4126, inlinedAt: !3962)
!4201 = !DILocation(line: 76, column: 10, scope: !4202, inlinedAt: !3962)
!4202 = distinct !DILexicalBlock(scope: !3959, file: !963, line: 76, column: 9)
!4203 = !DILocation(line: 76, column: 9, scope: !3959, inlinedAt: !3962)
!4204 = !DILocation(line: 77, column: 9, scope: !4205, inlinedAt: !3962)
!4205 = distinct !DILexicalBlock(scope: !4202, file: !963, line: 76, column: 18)
!4206 = !DILocation(line: 77, column: 12, scope: !4205, inlinedAt: !3962)
!4207 = !DILocation(line: 77, column: 22, scope: !4205, inlinedAt: !3962)
!4208 = !DILocation(line: 77, column: 25, scope: !4205, inlinedAt: !3962)
!4209 = !DILocation(line: 77, column: 33, scope: !4205, inlinedAt: !3962)
!4210 = !DILocation(line: 77, column: 37, scope: !4205, inlinedAt: !3962)
!4211 = !DILocation(line: 78, column: 18, scope: !4205, inlinedAt: !3962)
!4212 = !DILocation(line: 78, column: 21, scope: !4205, inlinedAt: !3962)
!4213 = !DILocation(line: 78, column: 16, scope: !4205, inlinedAt: !3962)
!4214 = !DILocation(line: 79, column: 5, scope: !4205, inlinedAt: !3962)
!4215 = !DILocation(line: 80, column: 5, scope: !3959, inlinedAt: !3962)
!4216 = !DILocation(line: 80, column: 8, scope: !3959, inlinedAt: !3962)
!4217 = !DILocation(line: 80, column: 20, scope: !3959, inlinedAt: !3962)
!4218 = !DILocation(line: 80, column: 23, scope: !3959, inlinedAt: !3962)
!4219 = !DILocation(line: 80, column: 31, scope: !3959, inlinedAt: !3962)
!4220 = !DILocation(line: 80, column: 35, scope: !3959, inlinedAt: !3962)
!4221 = !DILocation(line: 80, column: 43, scope: !3959, inlinedAt: !3962)
!4222 = !DILocation(line: 80, column: 50, scope: !3959, inlinedAt: !3962)
!4223 = !DILocation(line: 80, column: 49, scope: !3959, inlinedAt: !3962)
!4224 = !DILocation(line: 80, column: 77, scope: !3959, inlinedAt: !3962)
!4225 = !DILocation(line: 80, column: 63, scope: !3959, inlinedAt: !3962)
!4226 = !DILocation(line: 80, column: 82, scope: !3959, inlinedAt: !3962)
!4227 = !DILocation(line: 80, column: 87, scope: !3959, inlinedAt: !3962)
!4228 = !DILocation(line: 81, column: 9, scope: !4229, inlinedAt: !3962)
!4229 = distinct !DILexicalBlock(scope: !3959, file: !963, line: 81, column: 9)
!4230 = !DILocation(line: 81, column: 9, scope: !3959, inlinedAt: !3962)
!4231 = !DILocation(line: 82, column: 13, scope: !4232, inlinedAt: !3962)
!4232 = distinct !DILexicalBlock(scope: !4229, file: !963, line: 81, column: 22)
!4233 = !DILocation(line: 83, column: 5, scope: !4232, inlinedAt: !3962)
!4234 = !DILocation(line: 84, column: 29, scope: !4235, inlinedAt: !3962)
!4235 = distinct !DILexicalBlock(scope: !4229, file: !963, line: 83, column: 12)
!4236 = !DILocation(line: 84, column: 15, scope: !4235, inlinedAt: !3962)
!4237 = !DILocation(line: 84, column: 13, scope: !4235, inlinedAt: !3962)
!4238 = !DILocation(line: 86, column: 12, scope: !3958, inlinedAt: !3962)
!4239 = !DILocation(line: 86, column: 10, scope: !3958, inlinedAt: !3962)
!4240 = !DILocation(line: 86, column: 17, scope: !4241, inlinedAt: !3962)
!4241 = !DILexicalBlockFile(scope: !3957, file: !963, discriminator: 1)
!4242 = !DILocation(line: 86, column: 21, scope: !4241, inlinedAt: !3962)
!4243 = !DILocation(line: 86, column: 19, scope: !4241, inlinedAt: !3962)
!4244 = !DILocation(line: 86, column: 5, scope: !4241, inlinedAt: !3962)
!4245 = !DILocation(line: 88, column: 23, scope: !3956, inlinedAt: !3962)
!4246 = !DILocation(line: 88, column: 26, scope: !3956, inlinedAt: !3962)
!4247 = !DILocation(line: 88, column: 35, scope: !3956, inlinedAt: !3962)
!4248 = !DILocation(line: 88, column: 33, scope: !3956, inlinedAt: !3962)
!4249 = !DILocation(line: 92, column: 16, scope: !4250, inlinedAt: !3962)
!4250 = distinct !DILexicalBlock(scope: !3956, file: !963, line: 92, column: 9)
!4251 = !DILocation(line: 92, column: 14, scope: !4250, inlinedAt: !3962)
!4252 = !DILocation(line: 92, column: 21, scope: !4253, inlinedAt: !3962)
!4253 = !DILexicalBlockFile(scope: !4254, file: !963, discriminator: 1)
!4254 = distinct !DILexicalBlock(scope: !4250, file: !963, line: 92, column: 9)
!4255 = !DILocation(line: 92, column: 25, scope: !4253, inlinedAt: !3962)
!4256 = !DILocation(line: 92, column: 23, scope: !4253, inlinedAt: !3962)
!4257 = !DILocation(line: 92, column: 9, scope: !4253, inlinedAt: !3962)
!4258 = !DILocation(line: 93, column: 36, scope: !4259, inlinedAt: !3962)
!4259 = distinct !DILexicalBlock(scope: !4254, file: !963, line: 92, column: 35)
!4260 = !DILocation(line: 93, column: 23, scope: !4259, inlinedAt: !3962)
!4261 = !DILocation(line: 93, column: 20, scope: !4259, inlinedAt: !3962)
!4262 = !DILocation(line: 94, column: 30, scope: !4259, inlinedAt: !3962)
!4263 = !DILocation(line: 94, column: 23, scope: !4259, inlinedAt: !3962)
!4264 = !DILocation(line: 94, column: 35, scope: !4259, inlinedAt: !3962)
!4265 = !DILocation(line: 94, column: 33, scope: !4259, inlinedAt: !3962)
!4266 = !DILocation(line: 94, column: 20, scope: !4259, inlinedAt: !3962)
!4267 = !DILocation(line: 92, column: 31, scope: !4268, inlinedAt: !3962)
!4268 = !DILexicalBlockFile(scope: !4254, file: !963, discriminator: 2)
!4269 = !DILocation(line: 92, column: 9, scope: !4268, inlinedAt: !3962)
!4270 = distinct !{!4270, !4271}
!4271 = !DILocation(line: 92, column: 9, scope: !3956)
!4272 = !DILocation(line: 96, column: 46, scope: !3956, inlinedAt: !3962)
!4273 = !DILocation(line: 96, column: 19, scope: !3956, inlinedAt: !3962)
!4274 = !DILocation(line: 96, column: 40, scope: !3956, inlinedAt: !3962)
!4275 = !DILocation(line: 96, column: 42, scope: !3956, inlinedAt: !3962)
!4276 = !DILocation(line: 96, column: 17, scope: !3956, inlinedAt: !3962)
!4277 = !DILocation(line: 97, column: 46, scope: !3956, inlinedAt: !3962)
!4278 = !DILocation(line: 97, column: 53, scope: !3956, inlinedAt: !3962)
!4279 = !DILocation(line: 97, column: 52, scope: !3956, inlinedAt: !3962)
!4280 = !DILocation(line: 97, column: 16, scope: !3956, inlinedAt: !3962)
!4281 = !DILocation(line: 97, column: 40, scope: !3956, inlinedAt: !3962)
!4282 = !DILocation(line: 97, column: 42, scope: !3956, inlinedAt: !3962)
!4283 = !DILocation(line: 97, column: 13, scope: !3956, inlinedAt: !3962)
!4284 = !DILocation(line: 98, column: 13, scope: !3976, inlinedAt: !3962)
!4285 = !DILocation(line: 98, column: 13, scope: !3956, inlinedAt: !3962)
!4286 = !DILocation(line: 99, column: 20, scope: !3974, inlinedAt: !3962)
!4287 = !DILocation(line: 99, column: 18, scope: !3974, inlinedAt: !3962)
!4288 = !DILocation(line: 99, column: 25, scope: !4289, inlinedAt: !3962)
!4289 = !DILexicalBlockFile(scope: !3973, file: !963, discriminator: 1)
!4290 = !DILocation(line: 99, column: 29, scope: !4289, inlinedAt: !3962)
!4291 = !DILocation(line: 99, column: 27, scope: !4289, inlinedAt: !3962)
!4292 = !DILocation(line: 99, column: 13, scope: !4289, inlinedAt: !3962)
!4293 = !DILocation(line: 100, column: 36, scope: !3972, inlinedAt: !3962)
!4294 = !DILocation(line: 100, column: 38, scope: !3972, inlinedAt: !3962)
!4295 = !DILocation(line: 100, column: 37, scope: !3972, inlinedAt: !3962)
!4296 = !DILocation(line: 100, column: 33, scope: !3972, inlinedAt: !3962)
!4297 = !DILocation(line: 100, column: 27, scope: !3972, inlinedAt: !3962)
!4298 = !DILocation(line: 102, column: 21, scope: !3971, inlinedAt: !3962)
!4299 = !DILocation(line: 102, column: 28, scope: !3971, inlinedAt: !3962)
!4300 = !DILocation(line: 102, column: 35, scope: !4301, inlinedAt: !3962)
!4301 = !DILexicalBlockFile(scope: !3971, file: !963, discriminator: 1)
!4302 = !DILocation(line: 102, column: 31, scope: !4301, inlinedAt: !3962)
!4303 = !DILocation(line: 102, column: 38, scope: !4301, inlinedAt: !3962)
!4304 = !DILocation(line: 102, column: 21, scope: !4301, inlinedAt: !3962)
!4305 = !DILocation(line: 103, column: 25, scope: !3969, inlinedAt: !3962)
!4306 = !DILocation(line: 103, column: 30, scope: !3969, inlinedAt: !3962)
!4307 = !DILocation(line: 103, column: 27, scope: !3969, inlinedAt: !3962)
!4308 = !DILocation(line: 103, column: 25, scope: !3970, inlinedAt: !3962)
!4309 = !DILocation(line: 104, column: 37, scope: !4310, inlinedAt: !3962)
!4310 = distinct !DILexicalBlock(scope: !3969, file: !963, line: 103, column: 46)
!4311 = !DILocation(line: 104, column: 35, scope: !4310, inlinedAt: !3962)
!4312 = !DILocation(line: 105, column: 33, scope: !4310, inlinedAt: !3962)
!4313 = !DILocation(line: 106, column: 21, scope: !4310, inlinedAt: !3962)
!4314 = !DILocation(line: 107, column: 56, scope: !3968, inlinedAt: !3962)
!4315 = !DILocation(line: 107, column: 59, scope: !3968, inlinedAt: !3962)
!4316 = !DILocation(line: 107, column: 62, scope: !3968, inlinedAt: !3962)
!4317 = !DILocation(line: 107, column: 50, scope: !3968, inlinedAt: !3962)
!4318 = !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !3962)
!4319 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !3966)
!4320 = distinct !DILexicalBlock(scope: !3940, file: !3941, line: 231, column: 9)
!4321 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !3966)
!4322 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !3966)
!4323 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !3966)
!4324 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !3966)
!4325 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !3966)
!4326 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !3966)
!4327 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !3966)
!4328 = !DILexicalBlockFile(scope: !4320, file: !3941, discriminator: 1)
!4329 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !3966)
!4330 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !3966)
!4331 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !3966)
!4332 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !3966)
!4333 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !3966)
!4334 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !3966)
!4335 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !3966)
!4336 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !3966)
!4337 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !3966)
!4338 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !3966)
!4339 = !DILocation(line: 108, column: 37, scope: !3968, inlinedAt: !3962)
!4340 = !DILocation(line: 108, column: 45, scope: !3968, inlinedAt: !3962)
!4341 = !DILocation(line: 108, column: 39, scope: !3968, inlinedAt: !3962)
!4342 = !DILocation(line: 108, column: 38, scope: !3968, inlinedAt: !3962)
!4343 = !DILocation(line: 108, column: 48, scope: !3968, inlinedAt: !3962)
!4344 = !DILocation(line: 108, column: 47, scope: !3968, inlinedAt: !3962)
!4345 = !DILocation(line: 108, column: 35, scope: !3968, inlinedAt: !3962)
!4346 = !DILocation(line: 109, column: 57, scope: !3968, inlinedAt: !3962)
!4347 = !DILocation(line: 109, column: 59, scope: !3968, inlinedAt: !3962)
!4348 = !DILocation(line: 109, column: 42, scope: !3968, inlinedAt: !3962)
!4349 = !DILocation(line: 109, column: 40, scope: !3968, inlinedAt: !3962)
!4350 = !DILocation(line: 109, column: 63, scope: !3968, inlinedAt: !3962)
!4351 = !DILocation(line: 109, column: 66, scope: !3968, inlinedAt: !3962)
!4352 = !DILocation(line: 109, column: 70, scope: !3968, inlinedAt: !3962)
!4353 = !DILocation(line: 109, column: 33, scope: !3968, inlinedAt: !3962)
!4354 = !DILocation(line: 111, column: 17, scope: !3970, inlinedAt: !3962)
!4355 = !DILocation(line: 112, column: 37, scope: !4356, inlinedAt: !3962)
!4356 = distinct !DILexicalBlock(scope: !3971, file: !963, line: 111, column: 24)
!4357 = !DILocation(line: 112, column: 33, scope: !4356, inlinedAt: !3962)
!4358 = !DILocation(line: 112, column: 40, scope: !4356, inlinedAt: !3962)
!4359 = !DILocation(line: 112, column: 39, scope: !4356, inlinedAt: !3962)
!4360 = !DILocation(line: 112, column: 31, scope: !4356, inlinedAt: !3962)
!4361 = !DILocation(line: 114, column: 22, scope: !3972, inlinedAt: !3962)
!4362 = !DILocation(line: 114, column: 26, scope: !3972, inlinedAt: !3962)
!4363 = !DILocation(line: 114, column: 24, scope: !3972, inlinedAt: !3962)
!4364 = !DILocation(line: 114, column: 20, scope: !3972, inlinedAt: !3962)
!4365 = !DILocation(line: 115, column: 21, scope: !4366, inlinedAt: !3962)
!4366 = distinct !DILexicalBlock(scope: !3972, file: !963, line: 115, column: 21)
!4367 = !DILocation(line: 115, column: 21, scope: !3972, inlinedAt: !3962)
!4368 = !DILocation(line: 116, column: 35, scope: !4366, inlinedAt: !3962)
!4369 = !DILocation(line: 116, column: 37, scope: !4366, inlinedAt: !3962)
!4370 = !DILocation(line: 116, column: 36, scope: !4366, inlinedAt: !3962)
!4371 = !DILocation(line: 116, column: 32, scope: !4366, inlinedAt: !3962)
!4372 = !DILocation(line: 116, column: 40, scope: !4366, inlinedAt: !3962)
!4373 = !DILocation(line: 116, column: 47, scope: !4374, inlinedAt: !3962)
!4374 = !DILexicalBlockFile(scope: !4366, file: !963, discriminator: 1)
!4375 = !DILocation(line: 116, column: 32, scope: !4374, inlinedAt: !3962)
!4376 = !DILocation(line: 116, column: 60, scope: !4377, inlinedAt: !3962)
!4377 = !DILexicalBlockFile(scope: !4366, file: !963, discriminator: 2)
!4378 = !DILocation(line: 116, column: 59, scope: !4377, inlinedAt: !3962)
!4379 = !DILocation(line: 116, column: 32, scope: !4377, inlinedAt: !3962)
!4380 = !DILocation(line: 116, column: 32, scope: !4381, inlinedAt: !3962)
!4381 = !DILexicalBlockFile(scope: !4366, file: !963, discriminator: 3)
!4382 = !DILocation(line: 116, column: 25, scope: !4381, inlinedAt: !3962)
!4383 = !DILocation(line: 116, column: 27, scope: !4381, inlinedAt: !3962)
!4384 = !DILocation(line: 116, column: 26, scope: !4381, inlinedAt: !3962)
!4385 = !DILocation(line: 116, column: 21, scope: !4381, inlinedAt: !3962)
!4386 = !DILocation(line: 116, column: 30, scope: !4381, inlinedAt: !3962)
!4387 = !DILocation(line: 117, column: 25, scope: !4388, inlinedAt: !3962)
!4388 = distinct !DILexicalBlock(scope: !3972, file: !963, line: 117, column: 21)
!4389 = !DILocation(line: 117, column: 21, scope: !4388, inlinedAt: !3962)
!4390 = !DILocation(line: 117, column: 28, scope: !4388, inlinedAt: !3962)
!4391 = !DILocation(line: 117, column: 21, scope: !3972, inlinedAt: !3962)
!4392 = !DILocation(line: 118, column: 28, scope: !4388, inlinedAt: !3962)
!4393 = !DILocation(line: 118, column: 21, scope: !4388, inlinedAt: !3962)
!4394 = !DILocation(line: 119, column: 28, scope: !3972, inlinedAt: !3962)
!4395 = !DILocation(line: 119, column: 38, scope: !3972, inlinedAt: !3962)
!4396 = !DILocation(line: 119, column: 37, scope: !3972, inlinedAt: !3962)
!4397 = !DILocation(line: 119, column: 25, scope: !3972, inlinedAt: !3962)
!4398 = !DILocation(line: 120, column: 23, scope: !3972, inlinedAt: !3962)
!4399 = !DILocation(line: 120, column: 26, scope: !3972, inlinedAt: !3962)
!4400 = !DILocation(line: 120, column: 25, scope: !3972, inlinedAt: !3962)
!4401 = !DILocation(line: 120, column: 20, scope: !3972, inlinedAt: !3962)
!4402 = !DILocation(line: 99, column: 35, scope: !4403, inlinedAt: !3962)
!4403 = !DILexicalBlockFile(scope: !3973, file: !963, discriminator: 2)
!4404 = !DILocation(line: 99, column: 13, scope: !4403, inlinedAt: !3962)
!4405 = distinct !{!4405, !4406}
!4406 = !DILocation(line: 99, column: 13, scope: !3975)
!4407 = !DILocation(line: 122, column: 9, scope: !3975, inlinedAt: !3962)
!4408 = !DILocation(line: 123, column: 20, scope: !4409, inlinedAt: !3962)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !963, line: 123, column: 13)
!4410 = distinct !DILexicalBlock(scope: !3976, file: !963, line: 122, column: 16)
!4411 = !DILocation(line: 123, column: 18, scope: !4409, inlinedAt: !3962)
!4412 = !DILocation(line: 123, column: 25, scope: !4413, inlinedAt: !3962)
!4413 = !DILexicalBlockFile(scope: !4414, file: !963, discriminator: 1)
!4414 = distinct !DILexicalBlock(scope: !4409, file: !963, line: 123, column: 13)
!4415 = !DILocation(line: 123, column: 29, scope: !4413, inlinedAt: !3962)
!4416 = !DILocation(line: 123, column: 27, scope: !4413, inlinedAt: !3962)
!4417 = !DILocation(line: 123, column: 13, scope: !4413, inlinedAt: !3962)
!4418 = !DILocation(line: 124, column: 33, scope: !4419, inlinedAt: !3962)
!4419 = distinct !DILexicalBlock(scope: !4414, file: !963, line: 123, column: 39)
!4420 = !DILocation(line: 124, column: 29, scope: !4419, inlinedAt: !3962)
!4421 = !DILocation(line: 124, column: 36, scope: !4419, inlinedAt: !3962)
!4422 = !DILocation(line: 124, column: 35, scope: !4419, inlinedAt: !3962)
!4423 = !DILocation(line: 124, column: 27, scope: !4419, inlinedAt: !3962)
!4424 = !DILocation(line: 125, column: 28, scope: !4419, inlinedAt: !3962)
!4425 = !DILocation(line: 125, column: 38, scope: !4419, inlinedAt: !3962)
!4426 = !DILocation(line: 125, column: 37, scope: !4419, inlinedAt: !3962)
!4427 = !DILocation(line: 125, column: 25, scope: !4419, inlinedAt: !3962)
!4428 = !DILocation(line: 126, column: 21, scope: !4429, inlinedAt: !3962)
!4429 = distinct !DILexicalBlock(scope: !4419, file: !963, line: 126, column: 21)
!4430 = !DILocation(line: 126, column: 21, scope: !4419, inlinedAt: !3962)
!4431 = !DILocation(line: 127, column: 32, scope: !4429, inlinedAt: !3962)
!4432 = !DILocation(line: 127, column: 25, scope: !4429, inlinedAt: !3962)
!4433 = !DILocation(line: 127, column: 27, scope: !4429, inlinedAt: !3962)
!4434 = !DILocation(line: 127, column: 26, scope: !4429, inlinedAt: !3962)
!4435 = !DILocation(line: 127, column: 21, scope: !4429, inlinedAt: !3962)
!4436 = !DILocation(line: 127, column: 30, scope: !4429, inlinedAt: !3962)
!4437 = !DILocation(line: 128, column: 27, scope: !4419, inlinedAt: !3962)
!4438 = !DILocation(line: 128, column: 29, scope: !4419, inlinedAt: !3962)
!4439 = !DILocation(line: 128, column: 28, scope: !4419, inlinedAt: !3962)
!4440 = !DILocation(line: 128, column: 24, scope: !4419, inlinedAt: !3962)
!4441 = !DILocation(line: 128, column: 34, scope: !4419, inlinedAt: !3962)
!4442 = !DILocation(line: 128, column: 32, scope: !4419, inlinedAt: !3962)
!4443 = !DILocation(line: 128, column: 49, scope: !4419, inlinedAt: !3962)
!4444 = !DILocation(line: 128, column: 51, scope: !4419, inlinedAt: !3962)
!4445 = !DILocation(line: 128, column: 50, scope: !4419, inlinedAt: !3962)
!4446 = !DILocation(line: 128, column: 46, scope: !4419, inlinedAt: !3962)
!4447 = !DILocation(line: 128, column: 56, scope: !4419, inlinedAt: !3962)
!4448 = !DILocation(line: 128, column: 54, scope: !4419, inlinedAt: !3962)
!4449 = !DILocation(line: 128, column: 44, scope: !4419, inlinedAt: !3962)
!4450 = !DILocation(line: 128, column: 20, scope: !4419, inlinedAt: !3962)
!4451 = !DILocation(line: 123, column: 35, scope: !4452, inlinedAt: !3962)
!4452 = !DILexicalBlockFile(scope: !4414, file: !963, discriminator: 2)
!4453 = !DILocation(line: 123, column: 13, scope: !4452, inlinedAt: !3962)
!4454 = distinct !{!4454, !4455}
!4455 = !DILocation(line: 123, column: 13, scope: !4410)
!4456 = !DILocation(line: 131, column: 17, scope: !3956, inlinedAt: !3962)
!4457 = !DILocation(line: 131, column: 22, scope: !3956, inlinedAt: !3962)
!4458 = !DILocation(line: 131, column: 20, scope: !3956, inlinedAt: !3962)
!4459 = !DILocation(line: 131, column: 31, scope: !3956, inlinedAt: !3962)
!4460 = !DILocation(line: 131, column: 29, scope: !3956, inlinedAt: !3962)
!4461 = !DILocation(line: 131, column: 14, scope: !3956, inlinedAt: !3962)
!4462 = !DILocation(line: 132, column: 20, scope: !3956, inlinedAt: !3962)
!4463 = !DILocation(line: 132, column: 17, scope: !3956, inlinedAt: !3962)
!4464 = !DILocation(line: 133, column: 13, scope: !4465, inlinedAt: !3962)
!4465 = distinct !DILexicalBlock(scope: !3956, file: !963, line: 133, column: 13)
!4466 = !DILocation(line: 133, column: 21, scope: !4465, inlinedAt: !3962)
!4467 = !DILocation(line: 133, column: 18, scope: !4465, inlinedAt: !3962)
!4468 = !DILocation(line: 133, column: 13, scope: !3956, inlinedAt: !3962)
!4469 = !DILocation(line: 134, column: 20, scope: !4465, inlinedAt: !3962)
!4470 = !DILocation(line: 134, column: 13, scope: !4465, inlinedAt: !3962)
!4471 = !DILocation(line: 135, column: 13, scope: !3955, inlinedAt: !3962)
!4472 = !DILocation(line: 135, column: 13, scope: !3956, inlinedAt: !3962)
!4473 = !DILocation(line: 136, column: 22, scope: !3954, inlinedAt: !3962)
!4474 = !DILocation(line: 136, column: 53, scope: !3954, inlinedAt: !3962)
!4475 = !DILocation(line: 136, column: 26, scope: !3954, inlinedAt: !3962)
!4476 = !DILocation(line: 136, column: 47, scope: !3954, inlinedAt: !3962)
!4477 = !DILocation(line: 136, column: 49, scope: !3954, inlinedAt: !3962)
!4478 = !DILocation(line: 136, column: 90, scope: !3954, inlinedAt: !3962)
!4479 = !DILocation(line: 136, column: 62, scope: !3954, inlinedAt: !3962)
!4480 = !DILocation(line: 136, column: 84, scope: !3954, inlinedAt: !3962)
!4481 = !DILocation(line: 136, column: 86, scope: !3954, inlinedAt: !3962)
!4482 = !DILocation(line: 136, column: 13, scope: !3954, inlinedAt: !3962)
!4483 = !DILocation(line: 137, column: 17, scope: !4484, inlinedAt: !3962)
!4484 = distinct !DILexicalBlock(scope: !3954, file: !963, line: 137, column: 17)
!4485 = !DILocation(line: 137, column: 17, scope: !3954, inlinedAt: !3962)
!4486 = !DILocation(line: 138, column: 24, scope: !4487, inlinedAt: !3962)
!4487 = distinct !DILexicalBlock(scope: !4484, file: !963, line: 138, column: 17)
!4488 = !DILocation(line: 138, column: 22, scope: !4487, inlinedAt: !3962)
!4489 = !DILocation(line: 138, column: 29, scope: !4490, inlinedAt: !3962)
!4490 = !DILexicalBlockFile(scope: !4491, file: !963, discriminator: 1)
!4491 = distinct !DILexicalBlock(scope: !4487, file: !963, line: 138, column: 17)
!4492 = !DILocation(line: 138, column: 33, scope: !4490, inlinedAt: !3962)
!4493 = !DILocation(line: 138, column: 31, scope: !4490, inlinedAt: !3962)
!4494 = !DILocation(line: 138, column: 17, scope: !4490, inlinedAt: !3962)
!4495 = !DILocation(line: 139, column: 55, scope: !4496, inlinedAt: !3962)
!4496 = distinct !DILexicalBlock(scope: !4491, file: !963, line: 139, column: 25)
!4497 = !DILocation(line: 139, column: 62, scope: !4496, inlinedAt: !3962)
!4498 = !DILocation(line: 139, column: 61, scope: !4496, inlinedAt: !3962)
!4499 = !DILocation(line: 139, column: 66, scope: !4496, inlinedAt: !3962)
!4500 = !DILocation(line: 139, column: 65, scope: !4496, inlinedAt: !3962)
!4501 = !DILocation(line: 139, column: 25, scope: !4496, inlinedAt: !3962)
!4502 = !DILocation(line: 139, column: 49, scope: !4496, inlinedAt: !3962)
!4503 = !DILocation(line: 139, column: 51, scope: !4496, inlinedAt: !3962)
!4504 = !DILocation(line: 139, column: 69, scope: !4496, inlinedAt: !3962)
!4505 = !DILocation(line: 139, column: 25, scope: !4491, inlinedAt: !3962)
!4506 = !DILocation(line: 140, column: 34, scope: !4496, inlinedAt: !3962)
!4507 = !DILocation(line: 140, column: 44, scope: !4496, inlinedAt: !3962)
!4508 = !DILocation(line: 140, column: 46, scope: !4496, inlinedAt: !3962)
!4509 = !DILocation(line: 140, column: 45, scope: !4496, inlinedAt: !3962)
!4510 = !DILocation(line: 140, column: 41, scope: !4496, inlinedAt: !3962)
!4511 = !DILocation(line: 140, column: 49, scope: !4496, inlinedAt: !3962)
!4512 = !DILocation(line: 140, column: 25, scope: !4496, inlinedAt: !3962)
!4513 = !DILocation(line: 138, column: 39, scope: !4514, inlinedAt: !3962)
!4514 = !DILexicalBlockFile(scope: !4491, file: !963, discriminator: 2)
!4515 = !DILocation(line: 138, column: 17, scope: !4514, inlinedAt: !3962)
!4516 = distinct !{!4516, !4517}
!4517 = !DILocation(line: 138, column: 17, scope: !4484)
!4518 = !DILocation(line: 140, column: 55, scope: !4519, inlinedAt: !3962)
!4519 = !DILexicalBlockFile(scope: !4487, file: !963, discriminator: 1)
!4520 = !DILocation(line: 141, column: 17, scope: !3953, inlinedAt: !3962)
!4521 = !DILocation(line: 141, column: 17, scope: !3954, inlinedAt: !3962)
!4522 = !DILocation(line: 142, column: 24, scope: !3951, inlinedAt: !3962)
!4523 = !DILocation(line: 142, column: 22, scope: !3951, inlinedAt: !3962)
!4524 = !DILocation(line: 142, column: 29, scope: !4525, inlinedAt: !3962)
!4525 = !DILexicalBlockFile(scope: !3950, file: !963, discriminator: 1)
!4526 = !DILocation(line: 142, column: 31, scope: !4525, inlinedAt: !3962)
!4527 = !DILocation(line: 142, column: 17, scope: !4525, inlinedAt: !3962)
!4528 = !DILocation(line: 143, column: 55, scope: !3948, inlinedAt: !3962)
!4529 = !DILocation(line: 143, column: 61, scope: !3948, inlinedAt: !3962)
!4530 = !DILocation(line: 143, column: 64, scope: !3948, inlinedAt: !3962)
!4531 = !DILocation(line: 143, column: 63, scope: !3948, inlinedAt: !3962)
!4532 = !DILocation(line: 143, column: 25, scope: !3948, inlinedAt: !3962)
!4533 = !DILocation(line: 143, column: 49, scope: !3948, inlinedAt: !3962)
!4534 = !DILocation(line: 143, column: 51, scope: !3948, inlinedAt: !3962)
!4535 = !DILocation(line: 143, column: 67, scope: !3948, inlinedAt: !3962)
!4536 = !DILocation(line: 143, column: 25, scope: !3949, inlinedAt: !3962)
!4537 = !DILocation(line: 144, column: 68, scope: !3947, inlinedAt: !3962)
!4538 = !DILocation(line: 144, column: 70, scope: !3947, inlinedAt: !3962)
!4539 = !DILocation(line: 144, column: 69, scope: !3947, inlinedAt: !3962)
!4540 = !DILocation(line: 144, column: 65, scope: !3947, inlinedAt: !3962)
!4541 = !DILocation(line: 144, column: 59, scope: !3947, inlinedAt: !3962)
!4542 = !DILocation(line: 144, column: 75, scope: !3947, inlinedAt: !3962)
!4543 = !DILocation(line: 144, column: 78, scope: !3947, inlinedAt: !3962)
!4544 = !DILocation(line: 144, column: 53, scope: !4545, inlinedAt: !3962)
!4545 = !DILexicalBlockFile(scope: !3947, file: !963, discriminator: 1)
!4546 = !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !3962)
!4547 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !3945)
!4548 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !3945)
!4549 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !3945)
!4550 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !3945)
!4551 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !3945)
!4552 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !3945)
!4553 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !3945)
!4554 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !3945)
!4555 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !3945)
!4556 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !3945)
!4557 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !3945)
!4558 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !3945)
!4559 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !3945)
!4560 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !3945)
!4561 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !3945)
!4562 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !3945)
!4563 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !3945)
!4564 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !3945)
!4565 = !DILocation(line: 145, column: 56, scope: !3947, inlinedAt: !3962)
!4566 = !DILocation(line: 145, column: 61, scope: !3947, inlinedAt: !3962)
!4567 = !DILocation(line: 145, column: 41, scope: !3947, inlinedAt: !3962)
!4568 = !DILocation(line: 145, column: 39, scope: !3947, inlinedAt: !3962)
!4569 = !DILocation(line: 147, column: 34, scope: !3947, inlinedAt: !3962)
!4570 = !DILocation(line: 147, column: 38, scope: !3947, inlinedAt: !3962)
!4571 = !DILocation(line: 147, column: 42, scope: !3947, inlinedAt: !3962)
!4572 = !DILocation(line: 147, column: 46, scope: !3947, inlinedAt: !3962)
!4573 = !DILocation(line: 147, column: 58, scope: !3947, inlinedAt: !3962)
!4574 = !DILocation(line: 147, column: 62, scope: !3947, inlinedAt: !3962)
!4575 = !DILocation(line: 147, column: 66, scope: !3947, inlinedAt: !3962)
!4576 = !DILocation(line: 147, column: 54, scope: !3947, inlinedAt: !3962)
!4577 = !DILocation(line: 147, column: 72, scope: !3947, inlinedAt: !3962)
!4578 = !DILocation(line: 147, column: 25, scope: !3947, inlinedAt: !3962)
!4579 = !DILocation(line: 148, column: 35, scope: !3947, inlinedAt: !3962)
!4580 = !DILocation(line: 148, column: 39, scope: !3947, inlinedAt: !3962)
!4581 = !DILocation(line: 148, column: 44, scope: !3947, inlinedAt: !3962)
!4582 = !DILocation(line: 148, column: 25, scope: !3947, inlinedAt: !3962)
!4583 = !DILocation(line: 149, column: 21, scope: !3947, inlinedAt: !3962)
!4584 = !DILocation(line: 142, column: 37, scope: !4585, inlinedAt: !3962)
!4585 = !DILexicalBlockFile(scope: !3950, file: !963, discriminator: 2)
!4586 = !DILocation(line: 142, column: 17, scope: !4585, inlinedAt: !3962)
!4587 = distinct !{!4587, !4588}
!4588 = !DILocation(line: 142, column: 17, scope: !3952)
!4589 = !DILocation(line: 151, column: 13, scope: !3952, inlinedAt: !3962)
!4590 = !DILocation(line: 152, column: 9, scope: !3954, inlinedAt: !3962)
!4591 = !DILocation(line: 86, column: 32, scope: !4592, inlinedAt: !3962)
!4592 = !DILexicalBlockFile(scope: !3957, file: !963, discriminator: 2)
!4593 = !DILocation(line: 86, column: 29, scope: !4592, inlinedAt: !3962)
!4594 = !DILocation(line: 86, column: 5, scope: !4592, inlinedAt: !3962)
!4595 = distinct !{!4595, !4596}
!4596 = !DILocation(line: 86, column: 5, scope: !3959)
!4597 = !DILocation(line: 155, column: 9, scope: !4598, inlinedAt: !3962)
!4598 = distinct !DILexicalBlock(scope: !3959, file: !963, line: 155, column: 9)
!4599 = !DILocation(line: 155, column: 9, scope: !3959, inlinedAt: !3962)
!4600 = !DILocation(line: 156, column: 17, scope: !4598, inlinedAt: !3962)
!4601 = !DILocation(line: 156, column: 10, scope: !4598, inlinedAt: !3962)
!4602 = !DILocation(line: 156, column: 15, scope: !4598, inlinedAt: !3962)
!4603 = !DILocation(line: 156, column: 9, scope: !4598, inlinedAt: !3962)
!4604 = !DILocation(line: 157, column: 9, scope: !4605, inlinedAt: !3962)
!4605 = distinct !DILexicalBlock(scope: !3959, file: !963, line: 157, column: 9)
!4606 = !DILocation(line: 157, column: 9, scope: !3959, inlinedAt: !3962)
!4607 = !DILocation(line: 158, column: 19, scope: !4605, inlinedAt: !3962)
!4608 = !DILocation(line: 158, column: 10, scope: !4605, inlinedAt: !3962)
!4609 = !DILocation(line: 158, column: 17, scope: !4605, inlinedAt: !3962)
!4610 = !DILocation(line: 158, column: 9, scope: !4605, inlinedAt: !3962)
!4611 = !DILocation(line: 159, column: 12, scope: !3959, inlinedAt: !3962)
!4612 = !DILocation(line: 159, column: 5, scope: !3959, inlinedAt: !3962)
!4613 = !DILocation(line: 160, column: 1, scope: !3959, inlinedAt: !3962)
!4614 = !DILocation(line: 185, column: 246, scope: !3938)
!4615 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_SQUAD", scope: !963, file: !963, line: 186, type: !967, isLocal: true, isDefinition: true, scopeLine: 186, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!4616 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !4617)
!4617 = distinct !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !4618)
!4618 = distinct !DILocation(line: 186, column: 254, scope: !4615)
!4619 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !4617)
!4620 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !4621)
!4621 = distinct !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !4618)
!4622 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !4621)
!4623 = !DILocation(line: 42, column: 55, scope: !3959, inlinedAt: !4618)
!4624 = !DILocation(line: 43, column: 48, scope: !3959, inlinedAt: !4618)
!4625 = !DILocation(line: 43, column: 65, scope: !3959, inlinedAt: !4618)
!4626 = !DILocation(line: 43, column: 76, scope: !3959, inlinedAt: !4618)
!4627 = !DILocation(line: 44, column: 46, scope: !3959, inlinedAt: !4618)
!4628 = !DILocation(line: 44, column: 58, scope: !3959, inlinedAt: !4618)
!4629 = !DILocation(line: 44, column: 68, scope: !3959, inlinedAt: !4618)
!4630 = !DILocation(line: 45, column: 37, scope: !3959, inlinedAt: !4618)
!4631 = !DILocation(line: 45, column: 53, scope: !3959, inlinedAt: !4618)
!4632 = !DILocation(line: 45, column: 73, scope: !3959, inlinedAt: !4618)
!4633 = !DILocation(line: 46, column: 38, scope: !3959, inlinedAt: !4618)
!4634 = !DILocation(line: 46, column: 51, scope: !3959, inlinedAt: !4618)
!4635 = !DILocation(line: 46, column: 63, scope: !3959, inlinedAt: !4618)
!4636 = !DILocation(line: 46, column: 76, scope: !3959, inlinedAt: !4618)
!4637 = !DILocation(line: 47, column: 37, scope: !3959, inlinedAt: !4618)
!4638 = !DILocation(line: 47, column: 50, scope: !3959, inlinedAt: !4618)
!4639 = !DILocation(line: 47, column: 62, scope: !3959, inlinedAt: !4618)
!4640 = !DILocation(line: 47, column: 76, scope: !3959, inlinedAt: !4618)
!4641 = !DILocation(line: 48, column: 45, scope: !3959, inlinedAt: !4618)
!4642 = !DILocation(line: 50, column: 15, scope: !3959, inlinedAt: !4618)
!4643 = !DILocation(line: 51, column: 17, scope: !3959, inlinedAt: !4618)
!4644 = !DILocation(line: 52, column: 17, scope: !3959, inlinedAt: !4618)
!4645 = !DILocation(line: 53, column: 17, scope: !3959, inlinedAt: !4618)
!4646 = !DILocation(line: 54, column: 17, scope: !3959, inlinedAt: !4618)
!4647 = !DILocation(line: 55, column: 9, scope: !3959, inlinedAt: !4618)
!4648 = !DILocation(line: 55, column: 12, scope: !3959, inlinedAt: !4618)
!4649 = !DILocation(line: 56, column: 11, scope: !3959, inlinedAt: !4618)
!4650 = !DILocation(line: 57, column: 11, scope: !3959, inlinedAt: !4618)
!4651 = !DILocation(line: 58, column: 15, scope: !3959, inlinedAt: !4618)
!4652 = !DILocation(line: 59, column: 9, scope: !3959, inlinedAt: !4618)
!4653 = !DILocation(line: 60, column: 9, scope: !3959, inlinedAt: !4618)
!4654 = !DILocation(line: 87, column: 22, scope: !3956, inlinedAt: !4618)
!4655 = !DILocation(line: 88, column: 14, scope: !3956, inlinedAt: !4618)
!4656 = !DILocation(line: 89, column: 13, scope: !3956, inlinedAt: !4618)
!4657 = !DILocation(line: 90, column: 13, scope: !3956, inlinedAt: !4618)
!4658 = !DILocation(line: 91, column: 15, scope: !3956, inlinedAt: !4618)
!4659 = !DILocation(line: 91, column: 26, scope: !3956, inlinedAt: !4618)
!4660 = !DILocation(line: 100, column: 23, scope: !3972, inlinedAt: !4618)
!4661 = !DILocation(line: 101, column: 23, scope: !3972, inlinedAt: !4618)
!4662 = !DILocation(line: 107, column: 29, scope: !3968, inlinedAt: !4618)
!4663 = !DILocation(line: 144, column: 29, scope: !3947, inlinedAt: !4618)
!4664 = !DILocation(line: 145, column: 29, scope: !3947, inlinedAt: !4618)
!4665 = !DILocalVariable(name: "s", arg: 1, scope: !4615, file: !963, line: 186, type: !970)
!4666 = !DILocation(line: 186, column: 73, scope: !4615)
!4667 = !DILocalVariable(name: "pb", arg: 2, scope: !4615, file: !963, line: 186, type: !2645)
!4668 = !DILocation(line: 186, column: 91, scope: !4615)
!4669 = !DILocalVariable(name: "in", arg: 3, scope: !4615, file: !963, line: 186, type: !1103)
!4670 = !DILocation(line: 186, column: 108, scope: !4615)
!4671 = !DILocalVariable(name: "quant", arg: 4, scope: !4615, file: !963, line: 186, type: !1102)
!4672 = !DILocation(line: 186, column: 119, scope: !4615)
!4673 = !DILocalVariable(name: "scaled", arg: 5, scope: !4615, file: !963, line: 186, type: !1103)
!4674 = !DILocation(line: 186, column: 139, scope: !4615)
!4675 = !DILocalVariable(name: "size", arg: 6, scope: !4615, file: !963, line: 186, type: !992)
!4676 = !DILocation(line: 186, column: 151, scope: !4615)
!4677 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !4615, file: !963, line: 186, type: !992)
!4678 = !DILocation(line: 186, column: 161, scope: !4615)
!4679 = !DILocalVariable(name: "cb", arg: 8, scope: !4615, file: !963, line: 186, type: !992)
!4680 = !DILocation(line: 186, column: 176, scope: !4615)
!4681 = !DILocalVariable(name: "lambda", arg: 9, scope: !4615, file: !963, line: 186, type: !1104)
!4682 = !DILocation(line: 186, column: 192, scope: !4615)
!4683 = !DILocalVariable(name: "uplim", arg: 10, scope: !4615, file: !963, line: 186, type: !1104)
!4684 = !DILocation(line: 186, column: 212, scope: !4615)
!4685 = !DILocalVariable(name: "bits", arg: 11, scope: !4615, file: !963, line: 186, type: !1963)
!4686 = !DILocation(line: 186, column: 224, scope: !4615)
!4687 = !DILocalVariable(name: "energy", arg: 12, scope: !4615, file: !963, line: 186, type: !1102)
!4688 = !DILocation(line: 186, column: 237, scope: !4615)
!4689 = !DILocation(line: 186, column: 294, scope: !4615)
!4690 = !DILocation(line: 186, column: 297, scope: !4615)
!4691 = !DILocation(line: 186, column: 301, scope: !4615)
!4692 = !DILocation(line: 186, column: 305, scope: !4615)
!4693 = !DILocation(line: 186, column: 312, scope: !4615)
!4694 = !DILocation(line: 186, column: 320, scope: !4615)
!4695 = !DILocation(line: 186, column: 326, scope: !4615)
!4696 = !DILocation(line: 186, column: 350, scope: !4615)
!4697 = !DILocation(line: 186, column: 354, scope: !4615)
!4698 = !DILocation(line: 186, column: 362, scope: !4615)
!4699 = !DILocation(line: 186, column: 369, scope: !4615)
!4700 = !DILocation(line: 186, column: 375, scope: !4615)
!4701 = !DILocation(line: 186, column: 254, scope: !4615)
!4702 = !DILocation(line: 50, column: 29, scope: !3959, inlinedAt: !4618)
!4703 = !DILocation(line: 50, column: 27, scope: !3959, inlinedAt: !4618)
!4704 = !DILocation(line: 50, column: 39, scope: !3959, inlinedAt: !4618)
!4705 = !DILocation(line: 50, column: 45, scope: !3959, inlinedAt: !4618)
!4706 = !DILocation(line: 51, column: 40, scope: !3959, inlinedAt: !4618)
!4707 = !DILocation(line: 51, column: 21, scope: !3959, inlinedAt: !4618)
!4708 = !DILocation(line: 52, column: 42, scope: !3959, inlinedAt: !4618)
!4709 = !DILocation(line: 52, column: 23, scope: !3959, inlinedAt: !4618)
!4710 = !DILocation(line: 53, column: 47, scope: !3959, inlinedAt: !4618)
!4711 = !DILocation(line: 53, column: 45, scope: !3959, inlinedAt: !4618)
!4712 = !DILocation(line: 53, column: 57, scope: !3959, inlinedAt: !4618)
!4713 = !DILocation(line: 53, column: 63, scope: !3959, inlinedAt: !4618)
!4714 = !DILocation(line: 53, column: 22, scope: !3959, inlinedAt: !4618)
!4715 = !DILocation(line: 54, column: 44, scope: !3959, inlinedAt: !4618)
!4716 = !DILocation(line: 54, column: 43, scope: !3959, inlinedAt: !4618)
!4717 = !DILocation(line: 58, column: 21, scope: !3959, inlinedAt: !4618)
!4718 = !DILocation(line: 62, column: 9, scope: !4116, inlinedAt: !4618)
!4719 = !DILocation(line: 62, column: 17, scope: !4116, inlinedAt: !4618)
!4720 = !DILocation(line: 62, column: 20, scope: !4119, inlinedAt: !4618)
!4721 = !DILocation(line: 62, column: 29, scope: !4119, inlinedAt: !4618)
!4722 = !DILocation(line: 62, column: 32, scope: !4122, inlinedAt: !4618)
!4723 = !DILocation(line: 62, column: 9, scope: !4122, inlinedAt: !4618)
!4724 = !DILocation(line: 63, column: 16, scope: !4125, inlinedAt: !4618)
!4725 = !DILocation(line: 63, column: 14, scope: !4125, inlinedAt: !4618)
!4726 = !DILocation(line: 63, column: 21, scope: !4129, inlinedAt: !4618)
!4727 = !DILocation(line: 63, column: 25, scope: !4129, inlinedAt: !4618)
!4728 = !DILocation(line: 63, column: 23, scope: !4129, inlinedAt: !4618)
!4729 = !DILocation(line: 63, column: 9, scope: !4129, inlinedAt: !4618)
!4730 = !DILocation(line: 64, column: 24, scope: !4130, inlinedAt: !4618)
!4731 = !DILocation(line: 64, column: 21, scope: !4130, inlinedAt: !4618)
!4732 = !DILocation(line: 64, column: 30, scope: !4130, inlinedAt: !4618)
!4733 = !DILocation(line: 64, column: 27, scope: !4130, inlinedAt: !4618)
!4734 = !DILocation(line: 64, column: 26, scope: !4130, inlinedAt: !4618)
!4735 = !DILocation(line: 64, column: 18, scope: !4130, inlinedAt: !4618)
!4736 = !DILocation(line: 63, column: 32, scope: !4141, inlinedAt: !4618)
!4737 = !DILocation(line: 63, column: 9, scope: !4141, inlinedAt: !4618)
!4738 = !DILocation(line: 65, column: 13, scope: !4146, inlinedAt: !4618)
!4739 = !DILocation(line: 65, column: 13, scope: !4126, inlinedAt: !4618)
!4740 = !DILocation(line: 66, column: 14, scope: !4146, inlinedAt: !4618)
!4741 = !DILocation(line: 66, column: 19, scope: !4146, inlinedAt: !4618)
!4742 = !DILocation(line: 66, column: 13, scope: !4146, inlinedAt: !4618)
!4743 = !DILocation(line: 67, column: 13, scope: !4152, inlinedAt: !4618)
!4744 = !DILocation(line: 67, column: 13, scope: !4126, inlinedAt: !4618)
!4745 = !DILocation(line: 68, column: 23, scope: !4152, inlinedAt: !4618)
!4746 = !DILocation(line: 68, column: 14, scope: !4152, inlinedAt: !4618)
!4747 = !DILocation(line: 68, column: 21, scope: !4152, inlinedAt: !4618)
!4748 = !DILocation(line: 68, column: 13, scope: !4152, inlinedAt: !4618)
!4749 = !DILocation(line: 69, column: 13, scope: !4159, inlinedAt: !4618)
!4750 = !DILocation(line: 69, column: 13, scope: !4126, inlinedAt: !4618)
!4751 = !DILocation(line: 70, column: 20, scope: !4162, inlinedAt: !4618)
!4752 = !DILocation(line: 70, column: 18, scope: !4162, inlinedAt: !4618)
!4753 = !DILocation(line: 70, column: 25, scope: !4166, inlinedAt: !4618)
!4754 = !DILocation(line: 70, column: 29, scope: !4166, inlinedAt: !4618)
!4755 = !DILocation(line: 70, column: 27, scope: !4166, inlinedAt: !4618)
!4756 = !DILocation(line: 70, column: 13, scope: !4166, inlinedAt: !4618)
!4757 = !DILocation(line: 71, column: 24, scope: !4172, inlinedAt: !4618)
!4758 = !DILocation(line: 71, column: 22, scope: !4172, inlinedAt: !4618)
!4759 = !DILocation(line: 71, column: 29, scope: !4175, inlinedAt: !4618)
!4760 = !DILocation(line: 71, column: 33, scope: !4175, inlinedAt: !4618)
!4761 = !DILocation(line: 71, column: 31, scope: !4175, inlinedAt: !4618)
!4762 = !DILocation(line: 71, column: 17, scope: !4175, inlinedAt: !4618)
!4763 = !DILocation(line: 72, column: 25, scope: !4176, inlinedAt: !4618)
!4764 = !DILocation(line: 72, column: 27, scope: !4176, inlinedAt: !4618)
!4765 = !DILocation(line: 72, column: 26, scope: !4176, inlinedAt: !4618)
!4766 = !DILocation(line: 72, column: 21, scope: !4176, inlinedAt: !4618)
!4767 = !DILocation(line: 72, column: 30, scope: !4176, inlinedAt: !4618)
!4768 = !DILocation(line: 71, column: 39, scope: !4186, inlinedAt: !4618)
!4769 = !DILocation(line: 71, column: 17, scope: !4186, inlinedAt: !4618)
!4770 = !DILocation(line: 70, column: 40, scope: !4191, inlinedAt: !4618)
!4771 = !DILocation(line: 70, column: 37, scope: !4191, inlinedAt: !4618)
!4772 = !DILocation(line: 70, column: 13, scope: !4191, inlinedAt: !4618)
!4773 = !DILocation(line: 73, column: 9, scope: !4163, inlinedAt: !4618)
!4774 = !DILocation(line: 74, column: 16, scope: !4126, inlinedAt: !4618)
!4775 = !DILocation(line: 74, column: 23, scope: !4126, inlinedAt: !4618)
!4776 = !DILocation(line: 74, column: 21, scope: !4126, inlinedAt: !4618)
!4777 = !DILocation(line: 74, column: 9, scope: !4126, inlinedAt: !4618)
!4778 = !DILocation(line: 76, column: 10, scope: !4202, inlinedAt: !4618)
!4779 = !DILocation(line: 76, column: 9, scope: !3959, inlinedAt: !4618)
!4780 = !DILocation(line: 77, column: 9, scope: !4205, inlinedAt: !4618)
!4781 = !DILocation(line: 77, column: 12, scope: !4205, inlinedAt: !4618)
!4782 = !DILocation(line: 77, column: 22, scope: !4205, inlinedAt: !4618)
!4783 = !DILocation(line: 77, column: 25, scope: !4205, inlinedAt: !4618)
!4784 = !DILocation(line: 77, column: 33, scope: !4205, inlinedAt: !4618)
!4785 = !DILocation(line: 77, column: 37, scope: !4205, inlinedAt: !4618)
!4786 = !DILocation(line: 78, column: 18, scope: !4205, inlinedAt: !4618)
!4787 = !DILocation(line: 78, column: 21, scope: !4205, inlinedAt: !4618)
!4788 = !DILocation(line: 78, column: 16, scope: !4205, inlinedAt: !4618)
!4789 = !DILocation(line: 79, column: 5, scope: !4205, inlinedAt: !4618)
!4790 = !DILocation(line: 80, column: 5, scope: !3959, inlinedAt: !4618)
!4791 = !DILocation(line: 80, column: 8, scope: !3959, inlinedAt: !4618)
!4792 = !DILocation(line: 80, column: 20, scope: !3959, inlinedAt: !4618)
!4793 = !DILocation(line: 80, column: 23, scope: !3959, inlinedAt: !4618)
!4794 = !DILocation(line: 80, column: 31, scope: !3959, inlinedAt: !4618)
!4795 = !DILocation(line: 80, column: 35, scope: !3959, inlinedAt: !4618)
!4796 = !DILocation(line: 80, column: 43, scope: !3959, inlinedAt: !4618)
!4797 = !DILocation(line: 80, column: 50, scope: !3959, inlinedAt: !4618)
!4798 = !DILocation(line: 80, column: 49, scope: !3959, inlinedAt: !4618)
!4799 = !DILocation(line: 80, column: 77, scope: !3959, inlinedAt: !4618)
!4800 = !DILocation(line: 80, column: 63, scope: !3959, inlinedAt: !4618)
!4801 = !DILocation(line: 80, column: 82, scope: !3959, inlinedAt: !4618)
!4802 = !DILocation(line: 80, column: 87, scope: !3959, inlinedAt: !4618)
!4803 = !DILocation(line: 81, column: 9, scope: !4229, inlinedAt: !4618)
!4804 = !DILocation(line: 81, column: 9, scope: !3959, inlinedAt: !4618)
!4805 = !DILocation(line: 82, column: 13, scope: !4232, inlinedAt: !4618)
!4806 = !DILocation(line: 83, column: 5, scope: !4232, inlinedAt: !4618)
!4807 = !DILocation(line: 84, column: 29, scope: !4235, inlinedAt: !4618)
!4808 = !DILocation(line: 84, column: 15, scope: !4235, inlinedAt: !4618)
!4809 = !DILocation(line: 84, column: 13, scope: !4235, inlinedAt: !4618)
!4810 = !DILocation(line: 86, column: 12, scope: !3958, inlinedAt: !4618)
!4811 = !DILocation(line: 86, column: 10, scope: !3958, inlinedAt: !4618)
!4812 = !DILocation(line: 86, column: 17, scope: !4241, inlinedAt: !4618)
!4813 = !DILocation(line: 86, column: 21, scope: !4241, inlinedAt: !4618)
!4814 = !DILocation(line: 86, column: 19, scope: !4241, inlinedAt: !4618)
!4815 = !DILocation(line: 86, column: 5, scope: !4241, inlinedAt: !4618)
!4816 = !DILocation(line: 88, column: 23, scope: !3956, inlinedAt: !4618)
!4817 = !DILocation(line: 88, column: 26, scope: !3956, inlinedAt: !4618)
!4818 = !DILocation(line: 88, column: 35, scope: !3956, inlinedAt: !4618)
!4819 = !DILocation(line: 88, column: 33, scope: !3956, inlinedAt: !4618)
!4820 = !DILocation(line: 92, column: 16, scope: !4250, inlinedAt: !4618)
!4821 = !DILocation(line: 92, column: 14, scope: !4250, inlinedAt: !4618)
!4822 = !DILocation(line: 92, column: 21, scope: !4253, inlinedAt: !4618)
!4823 = !DILocation(line: 92, column: 25, scope: !4253, inlinedAt: !4618)
!4824 = !DILocation(line: 92, column: 23, scope: !4253, inlinedAt: !4618)
!4825 = !DILocation(line: 92, column: 9, scope: !4253, inlinedAt: !4618)
!4826 = !DILocation(line: 93, column: 36, scope: !4259, inlinedAt: !4618)
!4827 = !DILocation(line: 93, column: 23, scope: !4259, inlinedAt: !4618)
!4828 = !DILocation(line: 93, column: 20, scope: !4259, inlinedAt: !4618)
!4829 = !DILocation(line: 94, column: 30, scope: !4259, inlinedAt: !4618)
!4830 = !DILocation(line: 94, column: 23, scope: !4259, inlinedAt: !4618)
!4831 = !DILocation(line: 94, column: 35, scope: !4259, inlinedAt: !4618)
!4832 = !DILocation(line: 94, column: 33, scope: !4259, inlinedAt: !4618)
!4833 = !DILocation(line: 94, column: 20, scope: !4259, inlinedAt: !4618)
!4834 = !DILocation(line: 92, column: 31, scope: !4268, inlinedAt: !4618)
!4835 = !DILocation(line: 92, column: 9, scope: !4268, inlinedAt: !4618)
!4836 = !DILocation(line: 96, column: 46, scope: !3956, inlinedAt: !4618)
!4837 = !DILocation(line: 96, column: 19, scope: !3956, inlinedAt: !4618)
!4838 = !DILocation(line: 96, column: 40, scope: !3956, inlinedAt: !4618)
!4839 = !DILocation(line: 96, column: 42, scope: !3956, inlinedAt: !4618)
!4840 = !DILocation(line: 96, column: 17, scope: !3956, inlinedAt: !4618)
!4841 = !DILocation(line: 97, column: 46, scope: !3956, inlinedAt: !4618)
!4842 = !DILocation(line: 97, column: 53, scope: !3956, inlinedAt: !4618)
!4843 = !DILocation(line: 97, column: 52, scope: !3956, inlinedAt: !4618)
!4844 = !DILocation(line: 97, column: 16, scope: !3956, inlinedAt: !4618)
!4845 = !DILocation(line: 97, column: 40, scope: !3956, inlinedAt: !4618)
!4846 = !DILocation(line: 97, column: 42, scope: !3956, inlinedAt: !4618)
!4847 = !DILocation(line: 97, column: 13, scope: !3956, inlinedAt: !4618)
!4848 = !DILocation(line: 98, column: 13, scope: !3976, inlinedAt: !4618)
!4849 = !DILocation(line: 98, column: 13, scope: !3956, inlinedAt: !4618)
!4850 = !DILocation(line: 99, column: 20, scope: !3974, inlinedAt: !4618)
!4851 = !DILocation(line: 99, column: 18, scope: !3974, inlinedAt: !4618)
!4852 = !DILocation(line: 99, column: 25, scope: !4289, inlinedAt: !4618)
!4853 = !DILocation(line: 99, column: 29, scope: !4289, inlinedAt: !4618)
!4854 = !DILocation(line: 99, column: 27, scope: !4289, inlinedAt: !4618)
!4855 = !DILocation(line: 99, column: 13, scope: !4289, inlinedAt: !4618)
!4856 = !DILocation(line: 100, column: 36, scope: !3972, inlinedAt: !4618)
!4857 = !DILocation(line: 100, column: 38, scope: !3972, inlinedAt: !4618)
!4858 = !DILocation(line: 100, column: 37, scope: !3972, inlinedAt: !4618)
!4859 = !DILocation(line: 100, column: 33, scope: !3972, inlinedAt: !4618)
!4860 = !DILocation(line: 100, column: 27, scope: !3972, inlinedAt: !4618)
!4861 = !DILocation(line: 102, column: 21, scope: !3971, inlinedAt: !4618)
!4862 = !DILocation(line: 102, column: 28, scope: !3971, inlinedAt: !4618)
!4863 = !DILocation(line: 102, column: 35, scope: !4301, inlinedAt: !4618)
!4864 = !DILocation(line: 102, column: 31, scope: !4301, inlinedAt: !4618)
!4865 = !DILocation(line: 102, column: 38, scope: !4301, inlinedAt: !4618)
!4866 = !DILocation(line: 102, column: 21, scope: !4301, inlinedAt: !4618)
!4867 = !DILocation(line: 103, column: 25, scope: !3969, inlinedAt: !4618)
!4868 = !DILocation(line: 103, column: 30, scope: !3969, inlinedAt: !4618)
!4869 = !DILocation(line: 103, column: 27, scope: !3969, inlinedAt: !4618)
!4870 = !DILocation(line: 103, column: 25, scope: !3970, inlinedAt: !4618)
!4871 = !DILocation(line: 104, column: 37, scope: !4310, inlinedAt: !4618)
!4872 = !DILocation(line: 104, column: 35, scope: !4310, inlinedAt: !4618)
!4873 = !DILocation(line: 105, column: 33, scope: !4310, inlinedAt: !4618)
!4874 = !DILocation(line: 106, column: 21, scope: !4310, inlinedAt: !4618)
!4875 = !DILocation(line: 107, column: 56, scope: !3968, inlinedAt: !4618)
!4876 = !DILocation(line: 107, column: 59, scope: !3968, inlinedAt: !4618)
!4877 = !DILocation(line: 107, column: 62, scope: !3968, inlinedAt: !4618)
!4878 = !DILocation(line: 107, column: 50, scope: !3968, inlinedAt: !4618)
!4879 = !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !4618)
!4880 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !4621)
!4881 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !4621)
!4882 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !4621)
!4883 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !4621)
!4884 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !4621)
!4885 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !4621)
!4886 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !4621)
!4887 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !4621)
!4888 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !4621)
!4889 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !4621)
!4890 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !4621)
!4891 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !4621)
!4892 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !4621)
!4893 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !4621)
!4894 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !4621)
!4895 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !4621)
!4896 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !4621)
!4897 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !4621)
!4898 = !DILocation(line: 108, column: 37, scope: !3968, inlinedAt: !4618)
!4899 = !DILocation(line: 108, column: 45, scope: !3968, inlinedAt: !4618)
!4900 = !DILocation(line: 108, column: 39, scope: !3968, inlinedAt: !4618)
!4901 = !DILocation(line: 108, column: 38, scope: !3968, inlinedAt: !4618)
!4902 = !DILocation(line: 108, column: 48, scope: !3968, inlinedAt: !4618)
!4903 = !DILocation(line: 108, column: 47, scope: !3968, inlinedAt: !4618)
!4904 = !DILocation(line: 108, column: 35, scope: !3968, inlinedAt: !4618)
!4905 = !DILocation(line: 109, column: 57, scope: !3968, inlinedAt: !4618)
!4906 = !DILocation(line: 109, column: 59, scope: !3968, inlinedAt: !4618)
!4907 = !DILocation(line: 109, column: 42, scope: !3968, inlinedAt: !4618)
!4908 = !DILocation(line: 109, column: 40, scope: !3968, inlinedAt: !4618)
!4909 = !DILocation(line: 109, column: 63, scope: !3968, inlinedAt: !4618)
!4910 = !DILocation(line: 109, column: 66, scope: !3968, inlinedAt: !4618)
!4911 = !DILocation(line: 109, column: 70, scope: !3968, inlinedAt: !4618)
!4912 = !DILocation(line: 109, column: 33, scope: !3968, inlinedAt: !4618)
!4913 = !DILocation(line: 111, column: 17, scope: !3970, inlinedAt: !4618)
!4914 = !DILocation(line: 112, column: 37, scope: !4356, inlinedAt: !4618)
!4915 = !DILocation(line: 112, column: 33, scope: !4356, inlinedAt: !4618)
!4916 = !DILocation(line: 112, column: 40, scope: !4356, inlinedAt: !4618)
!4917 = !DILocation(line: 112, column: 39, scope: !4356, inlinedAt: !4618)
!4918 = !DILocation(line: 112, column: 31, scope: !4356, inlinedAt: !4618)
!4919 = !DILocation(line: 114, column: 22, scope: !3972, inlinedAt: !4618)
!4920 = !DILocation(line: 114, column: 26, scope: !3972, inlinedAt: !4618)
!4921 = !DILocation(line: 114, column: 24, scope: !3972, inlinedAt: !4618)
!4922 = !DILocation(line: 114, column: 20, scope: !3972, inlinedAt: !4618)
!4923 = !DILocation(line: 115, column: 21, scope: !4366, inlinedAt: !4618)
!4924 = !DILocation(line: 115, column: 21, scope: !3972, inlinedAt: !4618)
!4925 = !DILocation(line: 116, column: 35, scope: !4366, inlinedAt: !4618)
!4926 = !DILocation(line: 116, column: 37, scope: !4366, inlinedAt: !4618)
!4927 = !DILocation(line: 116, column: 36, scope: !4366, inlinedAt: !4618)
!4928 = !DILocation(line: 116, column: 32, scope: !4366, inlinedAt: !4618)
!4929 = !DILocation(line: 116, column: 40, scope: !4366, inlinedAt: !4618)
!4930 = !DILocation(line: 116, column: 47, scope: !4374, inlinedAt: !4618)
!4931 = !DILocation(line: 116, column: 32, scope: !4374, inlinedAt: !4618)
!4932 = !DILocation(line: 116, column: 60, scope: !4377, inlinedAt: !4618)
!4933 = !DILocation(line: 116, column: 59, scope: !4377, inlinedAt: !4618)
!4934 = !DILocation(line: 116, column: 32, scope: !4377, inlinedAt: !4618)
!4935 = !DILocation(line: 116, column: 32, scope: !4381, inlinedAt: !4618)
!4936 = !DILocation(line: 116, column: 25, scope: !4381, inlinedAt: !4618)
!4937 = !DILocation(line: 116, column: 27, scope: !4381, inlinedAt: !4618)
!4938 = !DILocation(line: 116, column: 26, scope: !4381, inlinedAt: !4618)
!4939 = !DILocation(line: 116, column: 21, scope: !4381, inlinedAt: !4618)
!4940 = !DILocation(line: 116, column: 30, scope: !4381, inlinedAt: !4618)
!4941 = !DILocation(line: 117, column: 25, scope: !4388, inlinedAt: !4618)
!4942 = !DILocation(line: 117, column: 21, scope: !4388, inlinedAt: !4618)
!4943 = !DILocation(line: 117, column: 28, scope: !4388, inlinedAt: !4618)
!4944 = !DILocation(line: 117, column: 21, scope: !3972, inlinedAt: !4618)
!4945 = !DILocation(line: 118, column: 28, scope: !4388, inlinedAt: !4618)
!4946 = !DILocation(line: 118, column: 21, scope: !4388, inlinedAt: !4618)
!4947 = !DILocation(line: 119, column: 28, scope: !3972, inlinedAt: !4618)
!4948 = !DILocation(line: 119, column: 38, scope: !3972, inlinedAt: !4618)
!4949 = !DILocation(line: 119, column: 37, scope: !3972, inlinedAt: !4618)
!4950 = !DILocation(line: 119, column: 25, scope: !3972, inlinedAt: !4618)
!4951 = !DILocation(line: 120, column: 23, scope: !3972, inlinedAt: !4618)
!4952 = !DILocation(line: 120, column: 26, scope: !3972, inlinedAt: !4618)
!4953 = !DILocation(line: 120, column: 25, scope: !3972, inlinedAt: !4618)
!4954 = !DILocation(line: 120, column: 20, scope: !3972, inlinedAt: !4618)
!4955 = !DILocation(line: 99, column: 35, scope: !4403, inlinedAt: !4618)
!4956 = !DILocation(line: 99, column: 13, scope: !4403, inlinedAt: !4618)
!4957 = !DILocation(line: 122, column: 9, scope: !3975, inlinedAt: !4618)
!4958 = !DILocation(line: 123, column: 20, scope: !4409, inlinedAt: !4618)
!4959 = !DILocation(line: 123, column: 18, scope: !4409, inlinedAt: !4618)
!4960 = !DILocation(line: 123, column: 25, scope: !4413, inlinedAt: !4618)
!4961 = !DILocation(line: 123, column: 29, scope: !4413, inlinedAt: !4618)
!4962 = !DILocation(line: 123, column: 27, scope: !4413, inlinedAt: !4618)
!4963 = !DILocation(line: 123, column: 13, scope: !4413, inlinedAt: !4618)
!4964 = !DILocation(line: 124, column: 33, scope: !4419, inlinedAt: !4618)
!4965 = !DILocation(line: 124, column: 29, scope: !4419, inlinedAt: !4618)
!4966 = !DILocation(line: 124, column: 36, scope: !4419, inlinedAt: !4618)
!4967 = !DILocation(line: 124, column: 35, scope: !4419, inlinedAt: !4618)
!4968 = !DILocation(line: 124, column: 27, scope: !4419, inlinedAt: !4618)
!4969 = !DILocation(line: 125, column: 28, scope: !4419, inlinedAt: !4618)
!4970 = !DILocation(line: 125, column: 38, scope: !4419, inlinedAt: !4618)
!4971 = !DILocation(line: 125, column: 37, scope: !4419, inlinedAt: !4618)
!4972 = !DILocation(line: 125, column: 25, scope: !4419, inlinedAt: !4618)
!4973 = !DILocation(line: 126, column: 21, scope: !4429, inlinedAt: !4618)
!4974 = !DILocation(line: 126, column: 21, scope: !4419, inlinedAt: !4618)
!4975 = !DILocation(line: 127, column: 32, scope: !4429, inlinedAt: !4618)
!4976 = !DILocation(line: 127, column: 25, scope: !4429, inlinedAt: !4618)
!4977 = !DILocation(line: 127, column: 27, scope: !4429, inlinedAt: !4618)
!4978 = !DILocation(line: 127, column: 26, scope: !4429, inlinedAt: !4618)
!4979 = !DILocation(line: 127, column: 21, scope: !4429, inlinedAt: !4618)
!4980 = !DILocation(line: 127, column: 30, scope: !4429, inlinedAt: !4618)
!4981 = !DILocation(line: 128, column: 27, scope: !4419, inlinedAt: !4618)
!4982 = !DILocation(line: 128, column: 29, scope: !4419, inlinedAt: !4618)
!4983 = !DILocation(line: 128, column: 28, scope: !4419, inlinedAt: !4618)
!4984 = !DILocation(line: 128, column: 24, scope: !4419, inlinedAt: !4618)
!4985 = !DILocation(line: 128, column: 34, scope: !4419, inlinedAt: !4618)
!4986 = !DILocation(line: 128, column: 32, scope: !4419, inlinedAt: !4618)
!4987 = !DILocation(line: 128, column: 49, scope: !4419, inlinedAt: !4618)
!4988 = !DILocation(line: 128, column: 51, scope: !4419, inlinedAt: !4618)
!4989 = !DILocation(line: 128, column: 50, scope: !4419, inlinedAt: !4618)
!4990 = !DILocation(line: 128, column: 46, scope: !4419, inlinedAt: !4618)
!4991 = !DILocation(line: 128, column: 56, scope: !4419, inlinedAt: !4618)
!4992 = !DILocation(line: 128, column: 54, scope: !4419, inlinedAt: !4618)
!4993 = !DILocation(line: 128, column: 44, scope: !4419, inlinedAt: !4618)
!4994 = !DILocation(line: 128, column: 20, scope: !4419, inlinedAt: !4618)
!4995 = !DILocation(line: 123, column: 35, scope: !4452, inlinedAt: !4618)
!4996 = !DILocation(line: 123, column: 13, scope: !4452, inlinedAt: !4618)
!4997 = !DILocation(line: 131, column: 17, scope: !3956, inlinedAt: !4618)
!4998 = !DILocation(line: 131, column: 22, scope: !3956, inlinedAt: !4618)
!4999 = !DILocation(line: 131, column: 20, scope: !3956, inlinedAt: !4618)
!5000 = !DILocation(line: 131, column: 31, scope: !3956, inlinedAt: !4618)
!5001 = !DILocation(line: 131, column: 29, scope: !3956, inlinedAt: !4618)
!5002 = !DILocation(line: 131, column: 14, scope: !3956, inlinedAt: !4618)
!5003 = !DILocation(line: 132, column: 20, scope: !3956, inlinedAt: !4618)
!5004 = !DILocation(line: 132, column: 17, scope: !3956, inlinedAt: !4618)
!5005 = !DILocation(line: 133, column: 13, scope: !4465, inlinedAt: !4618)
!5006 = !DILocation(line: 133, column: 21, scope: !4465, inlinedAt: !4618)
!5007 = !DILocation(line: 133, column: 18, scope: !4465, inlinedAt: !4618)
!5008 = !DILocation(line: 133, column: 13, scope: !3956, inlinedAt: !4618)
!5009 = !DILocation(line: 134, column: 20, scope: !4465, inlinedAt: !4618)
!5010 = !DILocation(line: 134, column: 13, scope: !4465, inlinedAt: !4618)
!5011 = !DILocation(line: 135, column: 13, scope: !3955, inlinedAt: !4618)
!5012 = !DILocation(line: 135, column: 13, scope: !3956, inlinedAt: !4618)
!5013 = !DILocation(line: 136, column: 22, scope: !3954, inlinedAt: !4618)
!5014 = !DILocation(line: 136, column: 53, scope: !3954, inlinedAt: !4618)
!5015 = !DILocation(line: 136, column: 26, scope: !3954, inlinedAt: !4618)
!5016 = !DILocation(line: 136, column: 47, scope: !3954, inlinedAt: !4618)
!5017 = !DILocation(line: 136, column: 49, scope: !3954, inlinedAt: !4618)
!5018 = !DILocation(line: 136, column: 90, scope: !3954, inlinedAt: !4618)
!5019 = !DILocation(line: 136, column: 62, scope: !3954, inlinedAt: !4618)
!5020 = !DILocation(line: 136, column: 84, scope: !3954, inlinedAt: !4618)
!5021 = !DILocation(line: 136, column: 86, scope: !3954, inlinedAt: !4618)
!5022 = !DILocation(line: 136, column: 13, scope: !3954, inlinedAt: !4618)
!5023 = !DILocation(line: 137, column: 17, scope: !4484, inlinedAt: !4618)
!5024 = !DILocation(line: 137, column: 17, scope: !3954, inlinedAt: !4618)
!5025 = !DILocation(line: 138, column: 24, scope: !4487, inlinedAt: !4618)
!5026 = !DILocation(line: 138, column: 22, scope: !4487, inlinedAt: !4618)
!5027 = !DILocation(line: 138, column: 29, scope: !4490, inlinedAt: !4618)
!5028 = !DILocation(line: 138, column: 33, scope: !4490, inlinedAt: !4618)
!5029 = !DILocation(line: 138, column: 31, scope: !4490, inlinedAt: !4618)
!5030 = !DILocation(line: 138, column: 17, scope: !4490, inlinedAt: !4618)
!5031 = !DILocation(line: 139, column: 55, scope: !4496, inlinedAt: !4618)
!5032 = !DILocation(line: 139, column: 62, scope: !4496, inlinedAt: !4618)
!5033 = !DILocation(line: 139, column: 61, scope: !4496, inlinedAt: !4618)
!5034 = !DILocation(line: 139, column: 66, scope: !4496, inlinedAt: !4618)
!5035 = !DILocation(line: 139, column: 65, scope: !4496, inlinedAt: !4618)
!5036 = !DILocation(line: 139, column: 25, scope: !4496, inlinedAt: !4618)
!5037 = !DILocation(line: 139, column: 49, scope: !4496, inlinedAt: !4618)
!5038 = !DILocation(line: 139, column: 51, scope: !4496, inlinedAt: !4618)
!5039 = !DILocation(line: 139, column: 69, scope: !4496, inlinedAt: !4618)
!5040 = !DILocation(line: 139, column: 25, scope: !4491, inlinedAt: !4618)
!5041 = !DILocation(line: 140, column: 34, scope: !4496, inlinedAt: !4618)
!5042 = !DILocation(line: 140, column: 44, scope: !4496, inlinedAt: !4618)
!5043 = !DILocation(line: 140, column: 46, scope: !4496, inlinedAt: !4618)
!5044 = !DILocation(line: 140, column: 45, scope: !4496, inlinedAt: !4618)
!5045 = !DILocation(line: 140, column: 41, scope: !4496, inlinedAt: !4618)
!5046 = !DILocation(line: 140, column: 49, scope: !4496, inlinedAt: !4618)
!5047 = !DILocation(line: 140, column: 25, scope: !4496, inlinedAt: !4618)
!5048 = !DILocation(line: 138, column: 39, scope: !4514, inlinedAt: !4618)
!5049 = !DILocation(line: 138, column: 17, scope: !4514, inlinedAt: !4618)
!5050 = !DILocation(line: 140, column: 55, scope: !4519, inlinedAt: !4618)
!5051 = !DILocation(line: 141, column: 17, scope: !3953, inlinedAt: !4618)
!5052 = !DILocation(line: 141, column: 17, scope: !3954, inlinedAt: !4618)
!5053 = !DILocation(line: 142, column: 24, scope: !3951, inlinedAt: !4618)
!5054 = !DILocation(line: 142, column: 22, scope: !3951, inlinedAt: !4618)
!5055 = !DILocation(line: 142, column: 29, scope: !4525, inlinedAt: !4618)
!5056 = !DILocation(line: 142, column: 31, scope: !4525, inlinedAt: !4618)
!5057 = !DILocation(line: 142, column: 17, scope: !4525, inlinedAt: !4618)
!5058 = !DILocation(line: 143, column: 55, scope: !3948, inlinedAt: !4618)
!5059 = !DILocation(line: 143, column: 61, scope: !3948, inlinedAt: !4618)
!5060 = !DILocation(line: 143, column: 64, scope: !3948, inlinedAt: !4618)
!5061 = !DILocation(line: 143, column: 63, scope: !3948, inlinedAt: !4618)
!5062 = !DILocation(line: 143, column: 25, scope: !3948, inlinedAt: !4618)
!5063 = !DILocation(line: 143, column: 49, scope: !3948, inlinedAt: !4618)
!5064 = !DILocation(line: 143, column: 51, scope: !3948, inlinedAt: !4618)
!5065 = !DILocation(line: 143, column: 67, scope: !3948, inlinedAt: !4618)
!5066 = !DILocation(line: 143, column: 25, scope: !3949, inlinedAt: !4618)
!5067 = !DILocation(line: 144, column: 68, scope: !3947, inlinedAt: !4618)
!5068 = !DILocation(line: 144, column: 70, scope: !3947, inlinedAt: !4618)
!5069 = !DILocation(line: 144, column: 69, scope: !3947, inlinedAt: !4618)
!5070 = !DILocation(line: 144, column: 65, scope: !3947, inlinedAt: !4618)
!5071 = !DILocation(line: 144, column: 59, scope: !3947, inlinedAt: !4618)
!5072 = !DILocation(line: 144, column: 75, scope: !3947, inlinedAt: !4618)
!5073 = !DILocation(line: 144, column: 78, scope: !3947, inlinedAt: !4618)
!5074 = !DILocation(line: 144, column: 53, scope: !4545, inlinedAt: !4618)
!5075 = !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !4618)
!5076 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !4617)
!5077 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !4617)
!5078 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !4617)
!5079 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !4617)
!5080 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !4617)
!5081 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !4617)
!5082 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !4617)
!5083 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !4617)
!5084 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !4617)
!5085 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !4617)
!5086 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !4617)
!5087 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !4617)
!5088 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !4617)
!5089 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !4617)
!5090 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !4617)
!5091 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !4617)
!5092 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !4617)
!5093 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !4617)
!5094 = !DILocation(line: 145, column: 56, scope: !3947, inlinedAt: !4618)
!5095 = !DILocation(line: 145, column: 61, scope: !3947, inlinedAt: !4618)
!5096 = !DILocation(line: 145, column: 41, scope: !3947, inlinedAt: !4618)
!5097 = !DILocation(line: 145, column: 39, scope: !3947, inlinedAt: !4618)
!5098 = !DILocation(line: 147, column: 34, scope: !3947, inlinedAt: !4618)
!5099 = !DILocation(line: 147, column: 38, scope: !3947, inlinedAt: !4618)
!5100 = !DILocation(line: 147, column: 42, scope: !3947, inlinedAt: !4618)
!5101 = !DILocation(line: 147, column: 46, scope: !3947, inlinedAt: !4618)
!5102 = !DILocation(line: 147, column: 58, scope: !3947, inlinedAt: !4618)
!5103 = !DILocation(line: 147, column: 62, scope: !3947, inlinedAt: !4618)
!5104 = !DILocation(line: 147, column: 66, scope: !3947, inlinedAt: !4618)
!5105 = !DILocation(line: 147, column: 54, scope: !3947, inlinedAt: !4618)
!5106 = !DILocation(line: 147, column: 72, scope: !3947, inlinedAt: !4618)
!5107 = !DILocation(line: 147, column: 25, scope: !3947, inlinedAt: !4618)
!5108 = !DILocation(line: 148, column: 35, scope: !3947, inlinedAt: !4618)
!5109 = !DILocation(line: 148, column: 39, scope: !3947, inlinedAt: !4618)
!5110 = !DILocation(line: 148, column: 44, scope: !3947, inlinedAt: !4618)
!5111 = !DILocation(line: 148, column: 25, scope: !3947, inlinedAt: !4618)
!5112 = !DILocation(line: 149, column: 21, scope: !3947, inlinedAt: !4618)
!5113 = !DILocation(line: 142, column: 37, scope: !4585, inlinedAt: !4618)
!5114 = !DILocation(line: 142, column: 17, scope: !4585, inlinedAt: !4618)
!5115 = !DILocation(line: 151, column: 13, scope: !3952, inlinedAt: !4618)
!5116 = !DILocation(line: 152, column: 9, scope: !3954, inlinedAt: !4618)
!5117 = !DILocation(line: 86, column: 32, scope: !4592, inlinedAt: !4618)
!5118 = !DILocation(line: 86, column: 29, scope: !4592, inlinedAt: !4618)
!5119 = !DILocation(line: 86, column: 5, scope: !4592, inlinedAt: !4618)
!5120 = !DILocation(line: 155, column: 9, scope: !4598, inlinedAt: !4618)
!5121 = !DILocation(line: 155, column: 9, scope: !3959, inlinedAt: !4618)
!5122 = !DILocation(line: 156, column: 17, scope: !4598, inlinedAt: !4618)
!5123 = !DILocation(line: 156, column: 10, scope: !4598, inlinedAt: !4618)
!5124 = !DILocation(line: 156, column: 15, scope: !4598, inlinedAt: !4618)
!5125 = !DILocation(line: 156, column: 9, scope: !4598, inlinedAt: !4618)
!5126 = !DILocation(line: 157, column: 9, scope: !4605, inlinedAt: !4618)
!5127 = !DILocation(line: 157, column: 9, scope: !3959, inlinedAt: !4618)
!5128 = !DILocation(line: 158, column: 19, scope: !4605, inlinedAt: !4618)
!5129 = !DILocation(line: 158, column: 10, scope: !4605, inlinedAt: !4618)
!5130 = !DILocation(line: 158, column: 17, scope: !4605, inlinedAt: !4618)
!5131 = !DILocation(line: 158, column: 9, scope: !4605, inlinedAt: !4618)
!5132 = !DILocation(line: 159, column: 12, scope: !3959, inlinedAt: !4618)
!5133 = !DILocation(line: 159, column: 5, scope: !3959, inlinedAt: !4618)
!5134 = !DILocation(line: 160, column: 1, scope: !3959, inlinedAt: !4618)
!5135 = !DILocation(line: 186, column: 247, scope: !4615)
!5136 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_UQUAD", scope: !963, file: !963, line: 187, type: !967, isLocal: true, isDefinition: true, scopeLine: 187, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!5137 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !5138)
!5138 = distinct !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !5139)
!5139 = distinct !DILocation(line: 187, column: 254, scope: !5136)
!5140 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !5138)
!5141 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !5142)
!5142 = distinct !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !5139)
!5143 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !5142)
!5144 = !DILocation(line: 42, column: 55, scope: !3959, inlinedAt: !5139)
!5145 = !DILocation(line: 43, column: 48, scope: !3959, inlinedAt: !5139)
!5146 = !DILocation(line: 43, column: 65, scope: !3959, inlinedAt: !5139)
!5147 = !DILocation(line: 43, column: 76, scope: !3959, inlinedAt: !5139)
!5148 = !DILocation(line: 44, column: 46, scope: !3959, inlinedAt: !5139)
!5149 = !DILocation(line: 44, column: 58, scope: !3959, inlinedAt: !5139)
!5150 = !DILocation(line: 44, column: 68, scope: !3959, inlinedAt: !5139)
!5151 = !DILocation(line: 45, column: 37, scope: !3959, inlinedAt: !5139)
!5152 = !DILocation(line: 45, column: 53, scope: !3959, inlinedAt: !5139)
!5153 = !DILocation(line: 45, column: 73, scope: !3959, inlinedAt: !5139)
!5154 = !DILocation(line: 46, column: 38, scope: !3959, inlinedAt: !5139)
!5155 = !DILocation(line: 46, column: 51, scope: !3959, inlinedAt: !5139)
!5156 = !DILocation(line: 46, column: 63, scope: !3959, inlinedAt: !5139)
!5157 = !DILocation(line: 46, column: 76, scope: !3959, inlinedAt: !5139)
!5158 = !DILocation(line: 47, column: 37, scope: !3959, inlinedAt: !5139)
!5159 = !DILocation(line: 47, column: 50, scope: !3959, inlinedAt: !5139)
!5160 = !DILocation(line: 47, column: 62, scope: !3959, inlinedAt: !5139)
!5161 = !DILocation(line: 47, column: 76, scope: !3959, inlinedAt: !5139)
!5162 = !DILocation(line: 48, column: 45, scope: !3959, inlinedAt: !5139)
!5163 = !DILocation(line: 50, column: 15, scope: !3959, inlinedAt: !5139)
!5164 = !DILocation(line: 51, column: 17, scope: !3959, inlinedAt: !5139)
!5165 = !DILocation(line: 52, column: 17, scope: !3959, inlinedAt: !5139)
!5166 = !DILocation(line: 53, column: 17, scope: !3959, inlinedAt: !5139)
!5167 = !DILocation(line: 54, column: 17, scope: !3959, inlinedAt: !5139)
!5168 = !DILocation(line: 55, column: 9, scope: !3959, inlinedAt: !5139)
!5169 = !DILocation(line: 55, column: 12, scope: !3959, inlinedAt: !5139)
!5170 = !DILocation(line: 56, column: 11, scope: !3959, inlinedAt: !5139)
!5171 = !DILocation(line: 57, column: 11, scope: !3959, inlinedAt: !5139)
!5172 = !DILocation(line: 58, column: 15, scope: !3959, inlinedAt: !5139)
!5173 = !DILocation(line: 59, column: 9, scope: !3959, inlinedAt: !5139)
!5174 = !DILocation(line: 60, column: 9, scope: !3959, inlinedAt: !5139)
!5175 = !DILocation(line: 87, column: 22, scope: !3956, inlinedAt: !5139)
!5176 = !DILocation(line: 88, column: 14, scope: !3956, inlinedAt: !5139)
!5177 = !DILocation(line: 89, column: 13, scope: !3956, inlinedAt: !5139)
!5178 = !DILocation(line: 90, column: 13, scope: !3956, inlinedAt: !5139)
!5179 = !DILocation(line: 91, column: 15, scope: !3956, inlinedAt: !5139)
!5180 = !DILocation(line: 91, column: 26, scope: !3956, inlinedAt: !5139)
!5181 = !DILocation(line: 100, column: 23, scope: !3972, inlinedAt: !5139)
!5182 = !DILocation(line: 101, column: 23, scope: !3972, inlinedAt: !5139)
!5183 = !DILocation(line: 107, column: 29, scope: !3968, inlinedAt: !5139)
!5184 = !DILocation(line: 144, column: 29, scope: !3947, inlinedAt: !5139)
!5185 = !DILocation(line: 145, column: 29, scope: !3947, inlinedAt: !5139)
!5186 = !DILocalVariable(name: "s", arg: 1, scope: !5136, file: !963, line: 187, type: !970)
!5187 = !DILocation(line: 187, column: 73, scope: !5136)
!5188 = !DILocalVariable(name: "pb", arg: 2, scope: !5136, file: !963, line: 187, type: !2645)
!5189 = !DILocation(line: 187, column: 91, scope: !5136)
!5190 = !DILocalVariable(name: "in", arg: 3, scope: !5136, file: !963, line: 187, type: !1103)
!5191 = !DILocation(line: 187, column: 108, scope: !5136)
!5192 = !DILocalVariable(name: "quant", arg: 4, scope: !5136, file: !963, line: 187, type: !1102)
!5193 = !DILocation(line: 187, column: 119, scope: !5136)
!5194 = !DILocalVariable(name: "scaled", arg: 5, scope: !5136, file: !963, line: 187, type: !1103)
!5195 = !DILocation(line: 187, column: 139, scope: !5136)
!5196 = !DILocalVariable(name: "size", arg: 6, scope: !5136, file: !963, line: 187, type: !992)
!5197 = !DILocation(line: 187, column: 151, scope: !5136)
!5198 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !5136, file: !963, line: 187, type: !992)
!5199 = !DILocation(line: 187, column: 161, scope: !5136)
!5200 = !DILocalVariable(name: "cb", arg: 8, scope: !5136, file: !963, line: 187, type: !992)
!5201 = !DILocation(line: 187, column: 176, scope: !5136)
!5202 = !DILocalVariable(name: "lambda", arg: 9, scope: !5136, file: !963, line: 187, type: !1104)
!5203 = !DILocation(line: 187, column: 192, scope: !5136)
!5204 = !DILocalVariable(name: "uplim", arg: 10, scope: !5136, file: !963, line: 187, type: !1104)
!5205 = !DILocation(line: 187, column: 212, scope: !5136)
!5206 = !DILocalVariable(name: "bits", arg: 11, scope: !5136, file: !963, line: 187, type: !1963)
!5207 = !DILocation(line: 187, column: 224, scope: !5136)
!5208 = !DILocalVariable(name: "energy", arg: 12, scope: !5136, file: !963, line: 187, type: !1102)
!5209 = !DILocation(line: 187, column: 237, scope: !5136)
!5210 = !DILocation(line: 187, column: 294, scope: !5136)
!5211 = !DILocation(line: 187, column: 297, scope: !5136)
!5212 = !DILocation(line: 187, column: 301, scope: !5136)
!5213 = !DILocation(line: 187, column: 305, scope: !5136)
!5214 = !DILocation(line: 187, column: 312, scope: !5136)
!5215 = !DILocation(line: 187, column: 320, scope: !5136)
!5216 = !DILocation(line: 187, column: 326, scope: !5136)
!5217 = !DILocation(line: 187, column: 350, scope: !5136)
!5218 = !DILocation(line: 187, column: 354, scope: !5136)
!5219 = !DILocation(line: 187, column: 362, scope: !5136)
!5220 = !DILocation(line: 187, column: 369, scope: !5136)
!5221 = !DILocation(line: 187, column: 375, scope: !5136)
!5222 = !DILocation(line: 187, column: 254, scope: !5136)
!5223 = !DILocation(line: 50, column: 29, scope: !3959, inlinedAt: !5139)
!5224 = !DILocation(line: 50, column: 27, scope: !3959, inlinedAt: !5139)
!5225 = !DILocation(line: 50, column: 39, scope: !3959, inlinedAt: !5139)
!5226 = !DILocation(line: 50, column: 45, scope: !3959, inlinedAt: !5139)
!5227 = !DILocation(line: 51, column: 40, scope: !3959, inlinedAt: !5139)
!5228 = !DILocation(line: 51, column: 21, scope: !3959, inlinedAt: !5139)
!5229 = !DILocation(line: 52, column: 42, scope: !3959, inlinedAt: !5139)
!5230 = !DILocation(line: 52, column: 23, scope: !3959, inlinedAt: !5139)
!5231 = !DILocation(line: 53, column: 47, scope: !3959, inlinedAt: !5139)
!5232 = !DILocation(line: 53, column: 45, scope: !3959, inlinedAt: !5139)
!5233 = !DILocation(line: 53, column: 57, scope: !3959, inlinedAt: !5139)
!5234 = !DILocation(line: 53, column: 63, scope: !3959, inlinedAt: !5139)
!5235 = !DILocation(line: 53, column: 22, scope: !3959, inlinedAt: !5139)
!5236 = !DILocation(line: 54, column: 44, scope: !3959, inlinedAt: !5139)
!5237 = !DILocation(line: 54, column: 43, scope: !3959, inlinedAt: !5139)
!5238 = !DILocation(line: 58, column: 21, scope: !3959, inlinedAt: !5139)
!5239 = !DILocation(line: 62, column: 9, scope: !4116, inlinedAt: !5139)
!5240 = !DILocation(line: 62, column: 17, scope: !4116, inlinedAt: !5139)
!5241 = !DILocation(line: 62, column: 20, scope: !4119, inlinedAt: !5139)
!5242 = !DILocation(line: 62, column: 29, scope: !4119, inlinedAt: !5139)
!5243 = !DILocation(line: 62, column: 32, scope: !4122, inlinedAt: !5139)
!5244 = !DILocation(line: 62, column: 9, scope: !4122, inlinedAt: !5139)
!5245 = !DILocation(line: 63, column: 16, scope: !4125, inlinedAt: !5139)
!5246 = !DILocation(line: 63, column: 14, scope: !4125, inlinedAt: !5139)
!5247 = !DILocation(line: 63, column: 21, scope: !4129, inlinedAt: !5139)
!5248 = !DILocation(line: 63, column: 25, scope: !4129, inlinedAt: !5139)
!5249 = !DILocation(line: 63, column: 23, scope: !4129, inlinedAt: !5139)
!5250 = !DILocation(line: 63, column: 9, scope: !4129, inlinedAt: !5139)
!5251 = !DILocation(line: 64, column: 24, scope: !4130, inlinedAt: !5139)
!5252 = !DILocation(line: 64, column: 21, scope: !4130, inlinedAt: !5139)
!5253 = !DILocation(line: 64, column: 30, scope: !4130, inlinedAt: !5139)
!5254 = !DILocation(line: 64, column: 27, scope: !4130, inlinedAt: !5139)
!5255 = !DILocation(line: 64, column: 26, scope: !4130, inlinedAt: !5139)
!5256 = !DILocation(line: 64, column: 18, scope: !4130, inlinedAt: !5139)
!5257 = !DILocation(line: 63, column: 32, scope: !4141, inlinedAt: !5139)
!5258 = !DILocation(line: 63, column: 9, scope: !4141, inlinedAt: !5139)
!5259 = !DILocation(line: 65, column: 13, scope: !4146, inlinedAt: !5139)
!5260 = !DILocation(line: 65, column: 13, scope: !4126, inlinedAt: !5139)
!5261 = !DILocation(line: 66, column: 14, scope: !4146, inlinedAt: !5139)
!5262 = !DILocation(line: 66, column: 19, scope: !4146, inlinedAt: !5139)
!5263 = !DILocation(line: 66, column: 13, scope: !4146, inlinedAt: !5139)
!5264 = !DILocation(line: 67, column: 13, scope: !4152, inlinedAt: !5139)
!5265 = !DILocation(line: 67, column: 13, scope: !4126, inlinedAt: !5139)
!5266 = !DILocation(line: 68, column: 23, scope: !4152, inlinedAt: !5139)
!5267 = !DILocation(line: 68, column: 14, scope: !4152, inlinedAt: !5139)
!5268 = !DILocation(line: 68, column: 21, scope: !4152, inlinedAt: !5139)
!5269 = !DILocation(line: 68, column: 13, scope: !4152, inlinedAt: !5139)
!5270 = !DILocation(line: 69, column: 13, scope: !4159, inlinedAt: !5139)
!5271 = !DILocation(line: 69, column: 13, scope: !4126, inlinedAt: !5139)
!5272 = !DILocation(line: 70, column: 20, scope: !4162, inlinedAt: !5139)
!5273 = !DILocation(line: 70, column: 18, scope: !4162, inlinedAt: !5139)
!5274 = !DILocation(line: 70, column: 25, scope: !4166, inlinedAt: !5139)
!5275 = !DILocation(line: 70, column: 29, scope: !4166, inlinedAt: !5139)
!5276 = !DILocation(line: 70, column: 27, scope: !4166, inlinedAt: !5139)
!5277 = !DILocation(line: 70, column: 13, scope: !4166, inlinedAt: !5139)
!5278 = !DILocation(line: 71, column: 24, scope: !4172, inlinedAt: !5139)
!5279 = !DILocation(line: 71, column: 22, scope: !4172, inlinedAt: !5139)
!5280 = !DILocation(line: 71, column: 29, scope: !4175, inlinedAt: !5139)
!5281 = !DILocation(line: 71, column: 33, scope: !4175, inlinedAt: !5139)
!5282 = !DILocation(line: 71, column: 31, scope: !4175, inlinedAt: !5139)
!5283 = !DILocation(line: 71, column: 17, scope: !4175, inlinedAt: !5139)
!5284 = !DILocation(line: 72, column: 25, scope: !4176, inlinedAt: !5139)
!5285 = !DILocation(line: 72, column: 27, scope: !4176, inlinedAt: !5139)
!5286 = !DILocation(line: 72, column: 26, scope: !4176, inlinedAt: !5139)
!5287 = !DILocation(line: 72, column: 21, scope: !4176, inlinedAt: !5139)
!5288 = !DILocation(line: 72, column: 30, scope: !4176, inlinedAt: !5139)
!5289 = !DILocation(line: 71, column: 39, scope: !4186, inlinedAt: !5139)
!5290 = !DILocation(line: 71, column: 17, scope: !4186, inlinedAt: !5139)
!5291 = !DILocation(line: 70, column: 40, scope: !4191, inlinedAt: !5139)
!5292 = !DILocation(line: 70, column: 37, scope: !4191, inlinedAt: !5139)
!5293 = !DILocation(line: 70, column: 13, scope: !4191, inlinedAt: !5139)
!5294 = !DILocation(line: 73, column: 9, scope: !4163, inlinedAt: !5139)
!5295 = !DILocation(line: 74, column: 16, scope: !4126, inlinedAt: !5139)
!5296 = !DILocation(line: 74, column: 23, scope: !4126, inlinedAt: !5139)
!5297 = !DILocation(line: 74, column: 21, scope: !4126, inlinedAt: !5139)
!5298 = !DILocation(line: 74, column: 9, scope: !4126, inlinedAt: !5139)
!5299 = !DILocation(line: 76, column: 10, scope: !4202, inlinedAt: !5139)
!5300 = !DILocation(line: 76, column: 9, scope: !3959, inlinedAt: !5139)
!5301 = !DILocation(line: 77, column: 9, scope: !4205, inlinedAt: !5139)
!5302 = !DILocation(line: 77, column: 12, scope: !4205, inlinedAt: !5139)
!5303 = !DILocation(line: 77, column: 22, scope: !4205, inlinedAt: !5139)
!5304 = !DILocation(line: 77, column: 25, scope: !4205, inlinedAt: !5139)
!5305 = !DILocation(line: 77, column: 33, scope: !4205, inlinedAt: !5139)
!5306 = !DILocation(line: 77, column: 37, scope: !4205, inlinedAt: !5139)
!5307 = !DILocation(line: 78, column: 18, scope: !4205, inlinedAt: !5139)
!5308 = !DILocation(line: 78, column: 21, scope: !4205, inlinedAt: !5139)
!5309 = !DILocation(line: 78, column: 16, scope: !4205, inlinedAt: !5139)
!5310 = !DILocation(line: 79, column: 5, scope: !4205, inlinedAt: !5139)
!5311 = !DILocation(line: 80, column: 5, scope: !3959, inlinedAt: !5139)
!5312 = !DILocation(line: 80, column: 8, scope: !3959, inlinedAt: !5139)
!5313 = !DILocation(line: 80, column: 20, scope: !3959, inlinedAt: !5139)
!5314 = !DILocation(line: 80, column: 23, scope: !3959, inlinedAt: !5139)
!5315 = !DILocation(line: 80, column: 31, scope: !3959, inlinedAt: !5139)
!5316 = !DILocation(line: 80, column: 35, scope: !3959, inlinedAt: !5139)
!5317 = !DILocation(line: 80, column: 43, scope: !3959, inlinedAt: !5139)
!5318 = !DILocation(line: 80, column: 50, scope: !3959, inlinedAt: !5139)
!5319 = !DILocation(line: 80, column: 49, scope: !3959, inlinedAt: !5139)
!5320 = !DILocation(line: 80, column: 77, scope: !3959, inlinedAt: !5139)
!5321 = !DILocation(line: 80, column: 63, scope: !3959, inlinedAt: !5139)
!5322 = !DILocation(line: 80, column: 82, scope: !3959, inlinedAt: !5139)
!5323 = !DILocation(line: 80, column: 87, scope: !3959, inlinedAt: !5139)
!5324 = !DILocation(line: 81, column: 9, scope: !4229, inlinedAt: !5139)
!5325 = !DILocation(line: 81, column: 9, scope: !3959, inlinedAt: !5139)
!5326 = !DILocation(line: 82, column: 13, scope: !4232, inlinedAt: !5139)
!5327 = !DILocation(line: 83, column: 5, scope: !4232, inlinedAt: !5139)
!5328 = !DILocation(line: 84, column: 29, scope: !4235, inlinedAt: !5139)
!5329 = !DILocation(line: 84, column: 15, scope: !4235, inlinedAt: !5139)
!5330 = !DILocation(line: 84, column: 13, scope: !4235, inlinedAt: !5139)
!5331 = !DILocation(line: 86, column: 12, scope: !3958, inlinedAt: !5139)
!5332 = !DILocation(line: 86, column: 10, scope: !3958, inlinedAt: !5139)
!5333 = !DILocation(line: 86, column: 17, scope: !4241, inlinedAt: !5139)
!5334 = !DILocation(line: 86, column: 21, scope: !4241, inlinedAt: !5139)
!5335 = !DILocation(line: 86, column: 19, scope: !4241, inlinedAt: !5139)
!5336 = !DILocation(line: 86, column: 5, scope: !4241, inlinedAt: !5139)
!5337 = !DILocation(line: 88, column: 23, scope: !3956, inlinedAt: !5139)
!5338 = !DILocation(line: 88, column: 26, scope: !3956, inlinedAt: !5139)
!5339 = !DILocation(line: 88, column: 35, scope: !3956, inlinedAt: !5139)
!5340 = !DILocation(line: 88, column: 33, scope: !3956, inlinedAt: !5139)
!5341 = !DILocation(line: 92, column: 16, scope: !4250, inlinedAt: !5139)
!5342 = !DILocation(line: 92, column: 14, scope: !4250, inlinedAt: !5139)
!5343 = !DILocation(line: 92, column: 21, scope: !4253, inlinedAt: !5139)
!5344 = !DILocation(line: 92, column: 25, scope: !4253, inlinedAt: !5139)
!5345 = !DILocation(line: 92, column: 23, scope: !4253, inlinedAt: !5139)
!5346 = !DILocation(line: 92, column: 9, scope: !4253, inlinedAt: !5139)
!5347 = !DILocation(line: 93, column: 36, scope: !4259, inlinedAt: !5139)
!5348 = !DILocation(line: 93, column: 23, scope: !4259, inlinedAt: !5139)
!5349 = !DILocation(line: 93, column: 20, scope: !4259, inlinedAt: !5139)
!5350 = !DILocation(line: 94, column: 30, scope: !4259, inlinedAt: !5139)
!5351 = !DILocation(line: 94, column: 23, scope: !4259, inlinedAt: !5139)
!5352 = !DILocation(line: 94, column: 35, scope: !4259, inlinedAt: !5139)
!5353 = !DILocation(line: 94, column: 33, scope: !4259, inlinedAt: !5139)
!5354 = !DILocation(line: 94, column: 20, scope: !4259, inlinedAt: !5139)
!5355 = !DILocation(line: 92, column: 31, scope: !4268, inlinedAt: !5139)
!5356 = !DILocation(line: 92, column: 9, scope: !4268, inlinedAt: !5139)
!5357 = !DILocation(line: 96, column: 46, scope: !3956, inlinedAt: !5139)
!5358 = !DILocation(line: 96, column: 19, scope: !3956, inlinedAt: !5139)
!5359 = !DILocation(line: 96, column: 40, scope: !3956, inlinedAt: !5139)
!5360 = !DILocation(line: 96, column: 42, scope: !3956, inlinedAt: !5139)
!5361 = !DILocation(line: 96, column: 17, scope: !3956, inlinedAt: !5139)
!5362 = !DILocation(line: 97, column: 46, scope: !3956, inlinedAt: !5139)
!5363 = !DILocation(line: 97, column: 53, scope: !3956, inlinedAt: !5139)
!5364 = !DILocation(line: 97, column: 52, scope: !3956, inlinedAt: !5139)
!5365 = !DILocation(line: 97, column: 16, scope: !3956, inlinedAt: !5139)
!5366 = !DILocation(line: 97, column: 40, scope: !3956, inlinedAt: !5139)
!5367 = !DILocation(line: 97, column: 42, scope: !3956, inlinedAt: !5139)
!5368 = !DILocation(line: 97, column: 13, scope: !3956, inlinedAt: !5139)
!5369 = !DILocation(line: 98, column: 13, scope: !3976, inlinedAt: !5139)
!5370 = !DILocation(line: 98, column: 13, scope: !3956, inlinedAt: !5139)
!5371 = !DILocation(line: 99, column: 20, scope: !3974, inlinedAt: !5139)
!5372 = !DILocation(line: 99, column: 18, scope: !3974, inlinedAt: !5139)
!5373 = !DILocation(line: 99, column: 25, scope: !4289, inlinedAt: !5139)
!5374 = !DILocation(line: 99, column: 29, scope: !4289, inlinedAt: !5139)
!5375 = !DILocation(line: 99, column: 27, scope: !4289, inlinedAt: !5139)
!5376 = !DILocation(line: 99, column: 13, scope: !4289, inlinedAt: !5139)
!5377 = !DILocation(line: 100, column: 36, scope: !3972, inlinedAt: !5139)
!5378 = !DILocation(line: 100, column: 38, scope: !3972, inlinedAt: !5139)
!5379 = !DILocation(line: 100, column: 37, scope: !3972, inlinedAt: !5139)
!5380 = !DILocation(line: 100, column: 33, scope: !3972, inlinedAt: !5139)
!5381 = !DILocation(line: 100, column: 27, scope: !3972, inlinedAt: !5139)
!5382 = !DILocation(line: 102, column: 21, scope: !3971, inlinedAt: !5139)
!5383 = !DILocation(line: 102, column: 28, scope: !3971, inlinedAt: !5139)
!5384 = !DILocation(line: 102, column: 35, scope: !4301, inlinedAt: !5139)
!5385 = !DILocation(line: 102, column: 31, scope: !4301, inlinedAt: !5139)
!5386 = !DILocation(line: 102, column: 38, scope: !4301, inlinedAt: !5139)
!5387 = !DILocation(line: 102, column: 21, scope: !4301, inlinedAt: !5139)
!5388 = !DILocation(line: 103, column: 25, scope: !3969, inlinedAt: !5139)
!5389 = !DILocation(line: 103, column: 30, scope: !3969, inlinedAt: !5139)
!5390 = !DILocation(line: 103, column: 27, scope: !3969, inlinedAt: !5139)
!5391 = !DILocation(line: 103, column: 25, scope: !3970, inlinedAt: !5139)
!5392 = !DILocation(line: 104, column: 37, scope: !4310, inlinedAt: !5139)
!5393 = !DILocation(line: 104, column: 35, scope: !4310, inlinedAt: !5139)
!5394 = !DILocation(line: 105, column: 33, scope: !4310, inlinedAt: !5139)
!5395 = !DILocation(line: 106, column: 21, scope: !4310, inlinedAt: !5139)
!5396 = !DILocation(line: 107, column: 56, scope: !3968, inlinedAt: !5139)
!5397 = !DILocation(line: 107, column: 59, scope: !3968, inlinedAt: !5139)
!5398 = !DILocation(line: 107, column: 62, scope: !3968, inlinedAt: !5139)
!5399 = !DILocation(line: 107, column: 50, scope: !3968, inlinedAt: !5139)
!5400 = !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !5139)
!5401 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !5142)
!5402 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !5142)
!5403 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !5142)
!5404 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !5142)
!5405 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !5142)
!5406 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !5142)
!5407 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !5142)
!5408 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !5142)
!5409 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !5142)
!5410 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !5142)
!5411 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !5142)
!5412 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !5142)
!5413 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !5142)
!5414 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !5142)
!5415 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !5142)
!5416 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !5142)
!5417 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !5142)
!5418 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !5142)
!5419 = !DILocation(line: 108, column: 37, scope: !3968, inlinedAt: !5139)
!5420 = !DILocation(line: 108, column: 45, scope: !3968, inlinedAt: !5139)
!5421 = !DILocation(line: 108, column: 39, scope: !3968, inlinedAt: !5139)
!5422 = !DILocation(line: 108, column: 38, scope: !3968, inlinedAt: !5139)
!5423 = !DILocation(line: 108, column: 48, scope: !3968, inlinedAt: !5139)
!5424 = !DILocation(line: 108, column: 47, scope: !3968, inlinedAt: !5139)
!5425 = !DILocation(line: 108, column: 35, scope: !3968, inlinedAt: !5139)
!5426 = !DILocation(line: 109, column: 57, scope: !3968, inlinedAt: !5139)
!5427 = !DILocation(line: 109, column: 59, scope: !3968, inlinedAt: !5139)
!5428 = !DILocation(line: 109, column: 42, scope: !3968, inlinedAt: !5139)
!5429 = !DILocation(line: 109, column: 40, scope: !3968, inlinedAt: !5139)
!5430 = !DILocation(line: 109, column: 63, scope: !3968, inlinedAt: !5139)
!5431 = !DILocation(line: 109, column: 66, scope: !3968, inlinedAt: !5139)
!5432 = !DILocation(line: 109, column: 70, scope: !3968, inlinedAt: !5139)
!5433 = !DILocation(line: 109, column: 33, scope: !3968, inlinedAt: !5139)
!5434 = !DILocation(line: 111, column: 17, scope: !3970, inlinedAt: !5139)
!5435 = !DILocation(line: 112, column: 37, scope: !4356, inlinedAt: !5139)
!5436 = !DILocation(line: 112, column: 33, scope: !4356, inlinedAt: !5139)
!5437 = !DILocation(line: 112, column: 40, scope: !4356, inlinedAt: !5139)
!5438 = !DILocation(line: 112, column: 39, scope: !4356, inlinedAt: !5139)
!5439 = !DILocation(line: 112, column: 31, scope: !4356, inlinedAt: !5139)
!5440 = !DILocation(line: 114, column: 22, scope: !3972, inlinedAt: !5139)
!5441 = !DILocation(line: 114, column: 26, scope: !3972, inlinedAt: !5139)
!5442 = !DILocation(line: 114, column: 24, scope: !3972, inlinedAt: !5139)
!5443 = !DILocation(line: 114, column: 20, scope: !3972, inlinedAt: !5139)
!5444 = !DILocation(line: 115, column: 21, scope: !4366, inlinedAt: !5139)
!5445 = !DILocation(line: 115, column: 21, scope: !3972, inlinedAt: !5139)
!5446 = !DILocation(line: 116, column: 35, scope: !4366, inlinedAt: !5139)
!5447 = !DILocation(line: 116, column: 37, scope: !4366, inlinedAt: !5139)
!5448 = !DILocation(line: 116, column: 36, scope: !4366, inlinedAt: !5139)
!5449 = !DILocation(line: 116, column: 32, scope: !4366, inlinedAt: !5139)
!5450 = !DILocation(line: 116, column: 40, scope: !4366, inlinedAt: !5139)
!5451 = !DILocation(line: 116, column: 47, scope: !4374, inlinedAt: !5139)
!5452 = !DILocation(line: 116, column: 32, scope: !4374, inlinedAt: !5139)
!5453 = !DILocation(line: 116, column: 60, scope: !4377, inlinedAt: !5139)
!5454 = !DILocation(line: 116, column: 59, scope: !4377, inlinedAt: !5139)
!5455 = !DILocation(line: 116, column: 32, scope: !4377, inlinedAt: !5139)
!5456 = !DILocation(line: 116, column: 32, scope: !4381, inlinedAt: !5139)
!5457 = !DILocation(line: 116, column: 25, scope: !4381, inlinedAt: !5139)
!5458 = !DILocation(line: 116, column: 27, scope: !4381, inlinedAt: !5139)
!5459 = !DILocation(line: 116, column: 26, scope: !4381, inlinedAt: !5139)
!5460 = !DILocation(line: 116, column: 21, scope: !4381, inlinedAt: !5139)
!5461 = !DILocation(line: 116, column: 30, scope: !4381, inlinedAt: !5139)
!5462 = !DILocation(line: 117, column: 25, scope: !4388, inlinedAt: !5139)
!5463 = !DILocation(line: 117, column: 21, scope: !4388, inlinedAt: !5139)
!5464 = !DILocation(line: 117, column: 28, scope: !4388, inlinedAt: !5139)
!5465 = !DILocation(line: 117, column: 21, scope: !3972, inlinedAt: !5139)
!5466 = !DILocation(line: 118, column: 28, scope: !4388, inlinedAt: !5139)
!5467 = !DILocation(line: 118, column: 21, scope: !4388, inlinedAt: !5139)
!5468 = !DILocation(line: 119, column: 28, scope: !3972, inlinedAt: !5139)
!5469 = !DILocation(line: 119, column: 38, scope: !3972, inlinedAt: !5139)
!5470 = !DILocation(line: 119, column: 37, scope: !3972, inlinedAt: !5139)
!5471 = !DILocation(line: 119, column: 25, scope: !3972, inlinedAt: !5139)
!5472 = !DILocation(line: 120, column: 23, scope: !3972, inlinedAt: !5139)
!5473 = !DILocation(line: 120, column: 26, scope: !3972, inlinedAt: !5139)
!5474 = !DILocation(line: 120, column: 25, scope: !3972, inlinedAt: !5139)
!5475 = !DILocation(line: 120, column: 20, scope: !3972, inlinedAt: !5139)
!5476 = !DILocation(line: 99, column: 35, scope: !4403, inlinedAt: !5139)
!5477 = !DILocation(line: 99, column: 13, scope: !4403, inlinedAt: !5139)
!5478 = !DILocation(line: 122, column: 9, scope: !3975, inlinedAt: !5139)
!5479 = !DILocation(line: 123, column: 20, scope: !4409, inlinedAt: !5139)
!5480 = !DILocation(line: 123, column: 18, scope: !4409, inlinedAt: !5139)
!5481 = !DILocation(line: 123, column: 25, scope: !4413, inlinedAt: !5139)
!5482 = !DILocation(line: 123, column: 29, scope: !4413, inlinedAt: !5139)
!5483 = !DILocation(line: 123, column: 27, scope: !4413, inlinedAt: !5139)
!5484 = !DILocation(line: 123, column: 13, scope: !4413, inlinedAt: !5139)
!5485 = !DILocation(line: 124, column: 33, scope: !4419, inlinedAt: !5139)
!5486 = !DILocation(line: 124, column: 29, scope: !4419, inlinedAt: !5139)
!5487 = !DILocation(line: 124, column: 36, scope: !4419, inlinedAt: !5139)
!5488 = !DILocation(line: 124, column: 35, scope: !4419, inlinedAt: !5139)
!5489 = !DILocation(line: 124, column: 27, scope: !4419, inlinedAt: !5139)
!5490 = !DILocation(line: 125, column: 28, scope: !4419, inlinedAt: !5139)
!5491 = !DILocation(line: 125, column: 38, scope: !4419, inlinedAt: !5139)
!5492 = !DILocation(line: 125, column: 37, scope: !4419, inlinedAt: !5139)
!5493 = !DILocation(line: 125, column: 25, scope: !4419, inlinedAt: !5139)
!5494 = !DILocation(line: 126, column: 21, scope: !4429, inlinedAt: !5139)
!5495 = !DILocation(line: 126, column: 21, scope: !4419, inlinedAt: !5139)
!5496 = !DILocation(line: 127, column: 32, scope: !4429, inlinedAt: !5139)
!5497 = !DILocation(line: 127, column: 25, scope: !4429, inlinedAt: !5139)
!5498 = !DILocation(line: 127, column: 27, scope: !4429, inlinedAt: !5139)
!5499 = !DILocation(line: 127, column: 26, scope: !4429, inlinedAt: !5139)
!5500 = !DILocation(line: 127, column: 21, scope: !4429, inlinedAt: !5139)
!5501 = !DILocation(line: 127, column: 30, scope: !4429, inlinedAt: !5139)
!5502 = !DILocation(line: 128, column: 27, scope: !4419, inlinedAt: !5139)
!5503 = !DILocation(line: 128, column: 29, scope: !4419, inlinedAt: !5139)
!5504 = !DILocation(line: 128, column: 28, scope: !4419, inlinedAt: !5139)
!5505 = !DILocation(line: 128, column: 24, scope: !4419, inlinedAt: !5139)
!5506 = !DILocation(line: 128, column: 34, scope: !4419, inlinedAt: !5139)
!5507 = !DILocation(line: 128, column: 32, scope: !4419, inlinedAt: !5139)
!5508 = !DILocation(line: 128, column: 49, scope: !4419, inlinedAt: !5139)
!5509 = !DILocation(line: 128, column: 51, scope: !4419, inlinedAt: !5139)
!5510 = !DILocation(line: 128, column: 50, scope: !4419, inlinedAt: !5139)
!5511 = !DILocation(line: 128, column: 46, scope: !4419, inlinedAt: !5139)
!5512 = !DILocation(line: 128, column: 56, scope: !4419, inlinedAt: !5139)
!5513 = !DILocation(line: 128, column: 54, scope: !4419, inlinedAt: !5139)
!5514 = !DILocation(line: 128, column: 44, scope: !4419, inlinedAt: !5139)
!5515 = !DILocation(line: 128, column: 20, scope: !4419, inlinedAt: !5139)
!5516 = !DILocation(line: 123, column: 35, scope: !4452, inlinedAt: !5139)
!5517 = !DILocation(line: 123, column: 13, scope: !4452, inlinedAt: !5139)
!5518 = !DILocation(line: 131, column: 17, scope: !3956, inlinedAt: !5139)
!5519 = !DILocation(line: 131, column: 22, scope: !3956, inlinedAt: !5139)
!5520 = !DILocation(line: 131, column: 20, scope: !3956, inlinedAt: !5139)
!5521 = !DILocation(line: 131, column: 31, scope: !3956, inlinedAt: !5139)
!5522 = !DILocation(line: 131, column: 29, scope: !3956, inlinedAt: !5139)
!5523 = !DILocation(line: 131, column: 14, scope: !3956, inlinedAt: !5139)
!5524 = !DILocation(line: 132, column: 20, scope: !3956, inlinedAt: !5139)
!5525 = !DILocation(line: 132, column: 17, scope: !3956, inlinedAt: !5139)
!5526 = !DILocation(line: 133, column: 13, scope: !4465, inlinedAt: !5139)
!5527 = !DILocation(line: 133, column: 21, scope: !4465, inlinedAt: !5139)
!5528 = !DILocation(line: 133, column: 18, scope: !4465, inlinedAt: !5139)
!5529 = !DILocation(line: 133, column: 13, scope: !3956, inlinedAt: !5139)
!5530 = !DILocation(line: 134, column: 20, scope: !4465, inlinedAt: !5139)
!5531 = !DILocation(line: 134, column: 13, scope: !4465, inlinedAt: !5139)
!5532 = !DILocation(line: 135, column: 13, scope: !3955, inlinedAt: !5139)
!5533 = !DILocation(line: 135, column: 13, scope: !3956, inlinedAt: !5139)
!5534 = !DILocation(line: 136, column: 22, scope: !3954, inlinedAt: !5139)
!5535 = !DILocation(line: 136, column: 53, scope: !3954, inlinedAt: !5139)
!5536 = !DILocation(line: 136, column: 26, scope: !3954, inlinedAt: !5139)
!5537 = !DILocation(line: 136, column: 47, scope: !3954, inlinedAt: !5139)
!5538 = !DILocation(line: 136, column: 49, scope: !3954, inlinedAt: !5139)
!5539 = !DILocation(line: 136, column: 90, scope: !3954, inlinedAt: !5139)
!5540 = !DILocation(line: 136, column: 62, scope: !3954, inlinedAt: !5139)
!5541 = !DILocation(line: 136, column: 84, scope: !3954, inlinedAt: !5139)
!5542 = !DILocation(line: 136, column: 86, scope: !3954, inlinedAt: !5139)
!5543 = !DILocation(line: 136, column: 13, scope: !3954, inlinedAt: !5139)
!5544 = !DILocation(line: 137, column: 17, scope: !4484, inlinedAt: !5139)
!5545 = !DILocation(line: 137, column: 17, scope: !3954, inlinedAt: !5139)
!5546 = !DILocation(line: 138, column: 24, scope: !4487, inlinedAt: !5139)
!5547 = !DILocation(line: 138, column: 22, scope: !4487, inlinedAt: !5139)
!5548 = !DILocation(line: 138, column: 29, scope: !4490, inlinedAt: !5139)
!5549 = !DILocation(line: 138, column: 33, scope: !4490, inlinedAt: !5139)
!5550 = !DILocation(line: 138, column: 31, scope: !4490, inlinedAt: !5139)
!5551 = !DILocation(line: 138, column: 17, scope: !4490, inlinedAt: !5139)
!5552 = !DILocation(line: 139, column: 55, scope: !4496, inlinedAt: !5139)
!5553 = !DILocation(line: 139, column: 62, scope: !4496, inlinedAt: !5139)
!5554 = !DILocation(line: 139, column: 61, scope: !4496, inlinedAt: !5139)
!5555 = !DILocation(line: 139, column: 66, scope: !4496, inlinedAt: !5139)
!5556 = !DILocation(line: 139, column: 65, scope: !4496, inlinedAt: !5139)
!5557 = !DILocation(line: 139, column: 25, scope: !4496, inlinedAt: !5139)
!5558 = !DILocation(line: 139, column: 49, scope: !4496, inlinedAt: !5139)
!5559 = !DILocation(line: 139, column: 51, scope: !4496, inlinedAt: !5139)
!5560 = !DILocation(line: 139, column: 69, scope: !4496, inlinedAt: !5139)
!5561 = !DILocation(line: 139, column: 25, scope: !4491, inlinedAt: !5139)
!5562 = !DILocation(line: 140, column: 34, scope: !4496, inlinedAt: !5139)
!5563 = !DILocation(line: 140, column: 44, scope: !4496, inlinedAt: !5139)
!5564 = !DILocation(line: 140, column: 46, scope: !4496, inlinedAt: !5139)
!5565 = !DILocation(line: 140, column: 45, scope: !4496, inlinedAt: !5139)
!5566 = !DILocation(line: 140, column: 41, scope: !4496, inlinedAt: !5139)
!5567 = !DILocation(line: 140, column: 49, scope: !4496, inlinedAt: !5139)
!5568 = !DILocation(line: 140, column: 25, scope: !4496, inlinedAt: !5139)
!5569 = !DILocation(line: 138, column: 39, scope: !4514, inlinedAt: !5139)
!5570 = !DILocation(line: 138, column: 17, scope: !4514, inlinedAt: !5139)
!5571 = !DILocation(line: 140, column: 55, scope: !4519, inlinedAt: !5139)
!5572 = !DILocation(line: 141, column: 17, scope: !3953, inlinedAt: !5139)
!5573 = !DILocation(line: 141, column: 17, scope: !3954, inlinedAt: !5139)
!5574 = !DILocation(line: 142, column: 24, scope: !3951, inlinedAt: !5139)
!5575 = !DILocation(line: 142, column: 22, scope: !3951, inlinedAt: !5139)
!5576 = !DILocation(line: 142, column: 29, scope: !4525, inlinedAt: !5139)
!5577 = !DILocation(line: 142, column: 31, scope: !4525, inlinedAt: !5139)
!5578 = !DILocation(line: 142, column: 17, scope: !4525, inlinedAt: !5139)
!5579 = !DILocation(line: 143, column: 55, scope: !3948, inlinedAt: !5139)
!5580 = !DILocation(line: 143, column: 61, scope: !3948, inlinedAt: !5139)
!5581 = !DILocation(line: 143, column: 64, scope: !3948, inlinedAt: !5139)
!5582 = !DILocation(line: 143, column: 63, scope: !3948, inlinedAt: !5139)
!5583 = !DILocation(line: 143, column: 25, scope: !3948, inlinedAt: !5139)
!5584 = !DILocation(line: 143, column: 49, scope: !3948, inlinedAt: !5139)
!5585 = !DILocation(line: 143, column: 51, scope: !3948, inlinedAt: !5139)
!5586 = !DILocation(line: 143, column: 67, scope: !3948, inlinedAt: !5139)
!5587 = !DILocation(line: 143, column: 25, scope: !3949, inlinedAt: !5139)
!5588 = !DILocation(line: 144, column: 68, scope: !3947, inlinedAt: !5139)
!5589 = !DILocation(line: 144, column: 70, scope: !3947, inlinedAt: !5139)
!5590 = !DILocation(line: 144, column: 69, scope: !3947, inlinedAt: !5139)
!5591 = !DILocation(line: 144, column: 65, scope: !3947, inlinedAt: !5139)
!5592 = !DILocation(line: 144, column: 59, scope: !3947, inlinedAt: !5139)
!5593 = !DILocation(line: 144, column: 75, scope: !3947, inlinedAt: !5139)
!5594 = !DILocation(line: 144, column: 78, scope: !3947, inlinedAt: !5139)
!5595 = !DILocation(line: 144, column: 53, scope: !4545, inlinedAt: !5139)
!5596 = !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !5139)
!5597 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !5138)
!5598 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !5138)
!5599 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !5138)
!5600 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !5138)
!5601 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !5138)
!5602 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !5138)
!5603 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !5138)
!5604 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !5138)
!5605 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !5138)
!5606 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !5138)
!5607 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !5138)
!5608 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !5138)
!5609 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !5138)
!5610 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !5138)
!5611 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !5138)
!5612 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !5138)
!5613 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !5138)
!5614 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !5138)
!5615 = !DILocation(line: 145, column: 56, scope: !3947, inlinedAt: !5139)
!5616 = !DILocation(line: 145, column: 61, scope: !3947, inlinedAt: !5139)
!5617 = !DILocation(line: 145, column: 41, scope: !3947, inlinedAt: !5139)
!5618 = !DILocation(line: 145, column: 39, scope: !3947, inlinedAt: !5139)
!5619 = !DILocation(line: 147, column: 34, scope: !3947, inlinedAt: !5139)
!5620 = !DILocation(line: 147, column: 38, scope: !3947, inlinedAt: !5139)
!5621 = !DILocation(line: 147, column: 42, scope: !3947, inlinedAt: !5139)
!5622 = !DILocation(line: 147, column: 46, scope: !3947, inlinedAt: !5139)
!5623 = !DILocation(line: 147, column: 58, scope: !3947, inlinedAt: !5139)
!5624 = !DILocation(line: 147, column: 62, scope: !3947, inlinedAt: !5139)
!5625 = !DILocation(line: 147, column: 66, scope: !3947, inlinedAt: !5139)
!5626 = !DILocation(line: 147, column: 54, scope: !3947, inlinedAt: !5139)
!5627 = !DILocation(line: 147, column: 72, scope: !3947, inlinedAt: !5139)
!5628 = !DILocation(line: 147, column: 25, scope: !3947, inlinedAt: !5139)
!5629 = !DILocation(line: 148, column: 35, scope: !3947, inlinedAt: !5139)
!5630 = !DILocation(line: 148, column: 39, scope: !3947, inlinedAt: !5139)
!5631 = !DILocation(line: 148, column: 44, scope: !3947, inlinedAt: !5139)
!5632 = !DILocation(line: 148, column: 25, scope: !3947, inlinedAt: !5139)
!5633 = !DILocation(line: 149, column: 21, scope: !3947, inlinedAt: !5139)
!5634 = !DILocation(line: 142, column: 37, scope: !4585, inlinedAt: !5139)
!5635 = !DILocation(line: 142, column: 17, scope: !4585, inlinedAt: !5139)
!5636 = !DILocation(line: 151, column: 13, scope: !3952, inlinedAt: !5139)
!5637 = !DILocation(line: 152, column: 9, scope: !3954, inlinedAt: !5139)
!5638 = !DILocation(line: 86, column: 32, scope: !4592, inlinedAt: !5139)
!5639 = !DILocation(line: 86, column: 29, scope: !4592, inlinedAt: !5139)
!5640 = !DILocation(line: 86, column: 5, scope: !4592, inlinedAt: !5139)
!5641 = !DILocation(line: 155, column: 9, scope: !4598, inlinedAt: !5139)
!5642 = !DILocation(line: 155, column: 9, scope: !3959, inlinedAt: !5139)
!5643 = !DILocation(line: 156, column: 17, scope: !4598, inlinedAt: !5139)
!5644 = !DILocation(line: 156, column: 10, scope: !4598, inlinedAt: !5139)
!5645 = !DILocation(line: 156, column: 15, scope: !4598, inlinedAt: !5139)
!5646 = !DILocation(line: 156, column: 9, scope: !4598, inlinedAt: !5139)
!5647 = !DILocation(line: 157, column: 9, scope: !4605, inlinedAt: !5139)
!5648 = !DILocation(line: 157, column: 9, scope: !3959, inlinedAt: !5139)
!5649 = !DILocation(line: 158, column: 19, scope: !4605, inlinedAt: !5139)
!5650 = !DILocation(line: 158, column: 10, scope: !4605, inlinedAt: !5139)
!5651 = !DILocation(line: 158, column: 17, scope: !4605, inlinedAt: !5139)
!5652 = !DILocation(line: 158, column: 9, scope: !4605, inlinedAt: !5139)
!5653 = !DILocation(line: 159, column: 12, scope: !3959, inlinedAt: !5139)
!5654 = !DILocation(line: 159, column: 5, scope: !3959, inlinedAt: !5139)
!5655 = !DILocation(line: 160, column: 1, scope: !3959, inlinedAt: !5139)
!5656 = !DILocation(line: 187, column: 247, scope: !5136)
!5657 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_SPAIR", scope: !963, file: !963, line: 188, type: !967, isLocal: true, isDefinition: true, scopeLine: 188, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!5658 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !5659)
!5659 = distinct !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !5660)
!5660 = distinct !DILocation(line: 188, column: 254, scope: !5657)
!5661 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !5659)
!5662 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !5663)
!5663 = distinct !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !5660)
!5664 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !5663)
!5665 = !DILocation(line: 42, column: 55, scope: !3959, inlinedAt: !5660)
!5666 = !DILocation(line: 43, column: 48, scope: !3959, inlinedAt: !5660)
!5667 = !DILocation(line: 43, column: 65, scope: !3959, inlinedAt: !5660)
!5668 = !DILocation(line: 43, column: 76, scope: !3959, inlinedAt: !5660)
!5669 = !DILocation(line: 44, column: 46, scope: !3959, inlinedAt: !5660)
!5670 = !DILocation(line: 44, column: 58, scope: !3959, inlinedAt: !5660)
!5671 = !DILocation(line: 44, column: 68, scope: !3959, inlinedAt: !5660)
!5672 = !DILocation(line: 45, column: 37, scope: !3959, inlinedAt: !5660)
!5673 = !DILocation(line: 45, column: 53, scope: !3959, inlinedAt: !5660)
!5674 = !DILocation(line: 45, column: 73, scope: !3959, inlinedAt: !5660)
!5675 = !DILocation(line: 46, column: 38, scope: !3959, inlinedAt: !5660)
!5676 = !DILocation(line: 46, column: 51, scope: !3959, inlinedAt: !5660)
!5677 = !DILocation(line: 46, column: 63, scope: !3959, inlinedAt: !5660)
!5678 = !DILocation(line: 46, column: 76, scope: !3959, inlinedAt: !5660)
!5679 = !DILocation(line: 47, column: 37, scope: !3959, inlinedAt: !5660)
!5680 = !DILocation(line: 47, column: 50, scope: !3959, inlinedAt: !5660)
!5681 = !DILocation(line: 47, column: 62, scope: !3959, inlinedAt: !5660)
!5682 = !DILocation(line: 47, column: 76, scope: !3959, inlinedAt: !5660)
!5683 = !DILocation(line: 48, column: 45, scope: !3959, inlinedAt: !5660)
!5684 = !DILocation(line: 50, column: 15, scope: !3959, inlinedAt: !5660)
!5685 = !DILocation(line: 51, column: 17, scope: !3959, inlinedAt: !5660)
!5686 = !DILocation(line: 52, column: 17, scope: !3959, inlinedAt: !5660)
!5687 = !DILocation(line: 53, column: 17, scope: !3959, inlinedAt: !5660)
!5688 = !DILocation(line: 54, column: 17, scope: !3959, inlinedAt: !5660)
!5689 = !DILocation(line: 55, column: 9, scope: !3959, inlinedAt: !5660)
!5690 = !DILocation(line: 55, column: 12, scope: !3959, inlinedAt: !5660)
!5691 = !DILocation(line: 56, column: 11, scope: !3959, inlinedAt: !5660)
!5692 = !DILocation(line: 57, column: 11, scope: !3959, inlinedAt: !5660)
!5693 = !DILocation(line: 58, column: 15, scope: !3959, inlinedAt: !5660)
!5694 = !DILocation(line: 59, column: 9, scope: !3959, inlinedAt: !5660)
!5695 = !DILocation(line: 60, column: 9, scope: !3959, inlinedAt: !5660)
!5696 = !DILocation(line: 87, column: 22, scope: !3956, inlinedAt: !5660)
!5697 = !DILocation(line: 88, column: 14, scope: !3956, inlinedAt: !5660)
!5698 = !DILocation(line: 89, column: 13, scope: !3956, inlinedAt: !5660)
!5699 = !DILocation(line: 90, column: 13, scope: !3956, inlinedAt: !5660)
!5700 = !DILocation(line: 91, column: 15, scope: !3956, inlinedAt: !5660)
!5701 = !DILocation(line: 91, column: 26, scope: !3956, inlinedAt: !5660)
!5702 = !DILocation(line: 100, column: 23, scope: !3972, inlinedAt: !5660)
!5703 = !DILocation(line: 101, column: 23, scope: !3972, inlinedAt: !5660)
!5704 = !DILocation(line: 107, column: 29, scope: !3968, inlinedAt: !5660)
!5705 = !DILocation(line: 144, column: 29, scope: !3947, inlinedAt: !5660)
!5706 = !DILocation(line: 145, column: 29, scope: !3947, inlinedAt: !5660)
!5707 = !DILocalVariable(name: "s", arg: 1, scope: !5657, file: !963, line: 188, type: !970)
!5708 = !DILocation(line: 188, column: 73, scope: !5657)
!5709 = !DILocalVariable(name: "pb", arg: 2, scope: !5657, file: !963, line: 188, type: !2645)
!5710 = !DILocation(line: 188, column: 91, scope: !5657)
!5711 = !DILocalVariable(name: "in", arg: 3, scope: !5657, file: !963, line: 188, type: !1103)
!5712 = !DILocation(line: 188, column: 108, scope: !5657)
!5713 = !DILocalVariable(name: "quant", arg: 4, scope: !5657, file: !963, line: 188, type: !1102)
!5714 = !DILocation(line: 188, column: 119, scope: !5657)
!5715 = !DILocalVariable(name: "scaled", arg: 5, scope: !5657, file: !963, line: 188, type: !1103)
!5716 = !DILocation(line: 188, column: 139, scope: !5657)
!5717 = !DILocalVariable(name: "size", arg: 6, scope: !5657, file: !963, line: 188, type: !992)
!5718 = !DILocation(line: 188, column: 151, scope: !5657)
!5719 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !5657, file: !963, line: 188, type: !992)
!5720 = !DILocation(line: 188, column: 161, scope: !5657)
!5721 = !DILocalVariable(name: "cb", arg: 8, scope: !5657, file: !963, line: 188, type: !992)
!5722 = !DILocation(line: 188, column: 176, scope: !5657)
!5723 = !DILocalVariable(name: "lambda", arg: 9, scope: !5657, file: !963, line: 188, type: !1104)
!5724 = !DILocation(line: 188, column: 192, scope: !5657)
!5725 = !DILocalVariable(name: "uplim", arg: 10, scope: !5657, file: !963, line: 188, type: !1104)
!5726 = !DILocation(line: 188, column: 212, scope: !5657)
!5727 = !DILocalVariable(name: "bits", arg: 11, scope: !5657, file: !963, line: 188, type: !1963)
!5728 = !DILocation(line: 188, column: 224, scope: !5657)
!5729 = !DILocalVariable(name: "energy", arg: 12, scope: !5657, file: !963, line: 188, type: !1102)
!5730 = !DILocation(line: 188, column: 237, scope: !5657)
!5731 = !DILocation(line: 188, column: 294, scope: !5657)
!5732 = !DILocation(line: 188, column: 297, scope: !5657)
!5733 = !DILocation(line: 188, column: 301, scope: !5657)
!5734 = !DILocation(line: 188, column: 305, scope: !5657)
!5735 = !DILocation(line: 188, column: 312, scope: !5657)
!5736 = !DILocation(line: 188, column: 320, scope: !5657)
!5737 = !DILocation(line: 188, column: 326, scope: !5657)
!5738 = !DILocation(line: 188, column: 350, scope: !5657)
!5739 = !DILocation(line: 188, column: 354, scope: !5657)
!5740 = !DILocation(line: 188, column: 362, scope: !5657)
!5741 = !DILocation(line: 188, column: 369, scope: !5657)
!5742 = !DILocation(line: 188, column: 375, scope: !5657)
!5743 = !DILocation(line: 188, column: 254, scope: !5657)
!5744 = !DILocation(line: 50, column: 29, scope: !3959, inlinedAt: !5660)
!5745 = !DILocation(line: 50, column: 27, scope: !3959, inlinedAt: !5660)
!5746 = !DILocation(line: 50, column: 39, scope: !3959, inlinedAt: !5660)
!5747 = !DILocation(line: 50, column: 45, scope: !3959, inlinedAt: !5660)
!5748 = !DILocation(line: 51, column: 40, scope: !3959, inlinedAt: !5660)
!5749 = !DILocation(line: 51, column: 21, scope: !3959, inlinedAt: !5660)
!5750 = !DILocation(line: 52, column: 42, scope: !3959, inlinedAt: !5660)
!5751 = !DILocation(line: 52, column: 23, scope: !3959, inlinedAt: !5660)
!5752 = !DILocation(line: 53, column: 47, scope: !3959, inlinedAt: !5660)
!5753 = !DILocation(line: 53, column: 45, scope: !3959, inlinedAt: !5660)
!5754 = !DILocation(line: 53, column: 57, scope: !3959, inlinedAt: !5660)
!5755 = !DILocation(line: 53, column: 63, scope: !3959, inlinedAt: !5660)
!5756 = !DILocation(line: 53, column: 22, scope: !3959, inlinedAt: !5660)
!5757 = !DILocation(line: 54, column: 44, scope: !3959, inlinedAt: !5660)
!5758 = !DILocation(line: 54, column: 43, scope: !3959, inlinedAt: !5660)
!5759 = !DILocation(line: 58, column: 21, scope: !3959, inlinedAt: !5660)
!5760 = !DILocation(line: 62, column: 9, scope: !4116, inlinedAt: !5660)
!5761 = !DILocation(line: 62, column: 17, scope: !4116, inlinedAt: !5660)
!5762 = !DILocation(line: 62, column: 20, scope: !4119, inlinedAt: !5660)
!5763 = !DILocation(line: 62, column: 29, scope: !4119, inlinedAt: !5660)
!5764 = !DILocation(line: 62, column: 32, scope: !4122, inlinedAt: !5660)
!5765 = !DILocation(line: 62, column: 9, scope: !4122, inlinedAt: !5660)
!5766 = !DILocation(line: 63, column: 16, scope: !4125, inlinedAt: !5660)
!5767 = !DILocation(line: 63, column: 14, scope: !4125, inlinedAt: !5660)
!5768 = !DILocation(line: 63, column: 21, scope: !4129, inlinedAt: !5660)
!5769 = !DILocation(line: 63, column: 25, scope: !4129, inlinedAt: !5660)
!5770 = !DILocation(line: 63, column: 23, scope: !4129, inlinedAt: !5660)
!5771 = !DILocation(line: 63, column: 9, scope: !4129, inlinedAt: !5660)
!5772 = !DILocation(line: 64, column: 24, scope: !4130, inlinedAt: !5660)
!5773 = !DILocation(line: 64, column: 21, scope: !4130, inlinedAt: !5660)
!5774 = !DILocation(line: 64, column: 30, scope: !4130, inlinedAt: !5660)
!5775 = !DILocation(line: 64, column: 27, scope: !4130, inlinedAt: !5660)
!5776 = !DILocation(line: 64, column: 26, scope: !4130, inlinedAt: !5660)
!5777 = !DILocation(line: 64, column: 18, scope: !4130, inlinedAt: !5660)
!5778 = !DILocation(line: 63, column: 32, scope: !4141, inlinedAt: !5660)
!5779 = !DILocation(line: 63, column: 9, scope: !4141, inlinedAt: !5660)
!5780 = !DILocation(line: 65, column: 13, scope: !4146, inlinedAt: !5660)
!5781 = !DILocation(line: 65, column: 13, scope: !4126, inlinedAt: !5660)
!5782 = !DILocation(line: 66, column: 14, scope: !4146, inlinedAt: !5660)
!5783 = !DILocation(line: 66, column: 19, scope: !4146, inlinedAt: !5660)
!5784 = !DILocation(line: 66, column: 13, scope: !4146, inlinedAt: !5660)
!5785 = !DILocation(line: 67, column: 13, scope: !4152, inlinedAt: !5660)
!5786 = !DILocation(line: 67, column: 13, scope: !4126, inlinedAt: !5660)
!5787 = !DILocation(line: 68, column: 23, scope: !4152, inlinedAt: !5660)
!5788 = !DILocation(line: 68, column: 14, scope: !4152, inlinedAt: !5660)
!5789 = !DILocation(line: 68, column: 21, scope: !4152, inlinedAt: !5660)
!5790 = !DILocation(line: 68, column: 13, scope: !4152, inlinedAt: !5660)
!5791 = !DILocation(line: 69, column: 13, scope: !4159, inlinedAt: !5660)
!5792 = !DILocation(line: 69, column: 13, scope: !4126, inlinedAt: !5660)
!5793 = !DILocation(line: 70, column: 20, scope: !4162, inlinedAt: !5660)
!5794 = !DILocation(line: 70, column: 18, scope: !4162, inlinedAt: !5660)
!5795 = !DILocation(line: 70, column: 25, scope: !4166, inlinedAt: !5660)
!5796 = !DILocation(line: 70, column: 29, scope: !4166, inlinedAt: !5660)
!5797 = !DILocation(line: 70, column: 27, scope: !4166, inlinedAt: !5660)
!5798 = !DILocation(line: 70, column: 13, scope: !4166, inlinedAt: !5660)
!5799 = !DILocation(line: 71, column: 24, scope: !4172, inlinedAt: !5660)
!5800 = !DILocation(line: 71, column: 22, scope: !4172, inlinedAt: !5660)
!5801 = !DILocation(line: 71, column: 29, scope: !4175, inlinedAt: !5660)
!5802 = !DILocation(line: 71, column: 33, scope: !4175, inlinedAt: !5660)
!5803 = !DILocation(line: 71, column: 31, scope: !4175, inlinedAt: !5660)
!5804 = !DILocation(line: 71, column: 17, scope: !4175, inlinedAt: !5660)
!5805 = !DILocation(line: 72, column: 25, scope: !4176, inlinedAt: !5660)
!5806 = !DILocation(line: 72, column: 27, scope: !4176, inlinedAt: !5660)
!5807 = !DILocation(line: 72, column: 26, scope: !4176, inlinedAt: !5660)
!5808 = !DILocation(line: 72, column: 21, scope: !4176, inlinedAt: !5660)
!5809 = !DILocation(line: 72, column: 30, scope: !4176, inlinedAt: !5660)
!5810 = !DILocation(line: 71, column: 39, scope: !4186, inlinedAt: !5660)
!5811 = !DILocation(line: 71, column: 17, scope: !4186, inlinedAt: !5660)
!5812 = !DILocation(line: 70, column: 40, scope: !4191, inlinedAt: !5660)
!5813 = !DILocation(line: 70, column: 37, scope: !4191, inlinedAt: !5660)
!5814 = !DILocation(line: 70, column: 13, scope: !4191, inlinedAt: !5660)
!5815 = !DILocation(line: 73, column: 9, scope: !4163, inlinedAt: !5660)
!5816 = !DILocation(line: 74, column: 16, scope: !4126, inlinedAt: !5660)
!5817 = !DILocation(line: 74, column: 23, scope: !4126, inlinedAt: !5660)
!5818 = !DILocation(line: 74, column: 21, scope: !4126, inlinedAt: !5660)
!5819 = !DILocation(line: 74, column: 9, scope: !4126, inlinedAt: !5660)
!5820 = !DILocation(line: 76, column: 10, scope: !4202, inlinedAt: !5660)
!5821 = !DILocation(line: 76, column: 9, scope: !3959, inlinedAt: !5660)
!5822 = !DILocation(line: 77, column: 9, scope: !4205, inlinedAt: !5660)
!5823 = !DILocation(line: 77, column: 12, scope: !4205, inlinedAt: !5660)
!5824 = !DILocation(line: 77, column: 22, scope: !4205, inlinedAt: !5660)
!5825 = !DILocation(line: 77, column: 25, scope: !4205, inlinedAt: !5660)
!5826 = !DILocation(line: 77, column: 33, scope: !4205, inlinedAt: !5660)
!5827 = !DILocation(line: 77, column: 37, scope: !4205, inlinedAt: !5660)
!5828 = !DILocation(line: 78, column: 18, scope: !4205, inlinedAt: !5660)
!5829 = !DILocation(line: 78, column: 21, scope: !4205, inlinedAt: !5660)
!5830 = !DILocation(line: 78, column: 16, scope: !4205, inlinedAt: !5660)
!5831 = !DILocation(line: 79, column: 5, scope: !4205, inlinedAt: !5660)
!5832 = !DILocation(line: 80, column: 5, scope: !3959, inlinedAt: !5660)
!5833 = !DILocation(line: 80, column: 8, scope: !3959, inlinedAt: !5660)
!5834 = !DILocation(line: 80, column: 20, scope: !3959, inlinedAt: !5660)
!5835 = !DILocation(line: 80, column: 23, scope: !3959, inlinedAt: !5660)
!5836 = !DILocation(line: 80, column: 31, scope: !3959, inlinedAt: !5660)
!5837 = !DILocation(line: 80, column: 35, scope: !3959, inlinedAt: !5660)
!5838 = !DILocation(line: 80, column: 43, scope: !3959, inlinedAt: !5660)
!5839 = !DILocation(line: 80, column: 50, scope: !3959, inlinedAt: !5660)
!5840 = !DILocation(line: 80, column: 49, scope: !3959, inlinedAt: !5660)
!5841 = !DILocation(line: 80, column: 77, scope: !3959, inlinedAt: !5660)
!5842 = !DILocation(line: 80, column: 63, scope: !3959, inlinedAt: !5660)
!5843 = !DILocation(line: 80, column: 82, scope: !3959, inlinedAt: !5660)
!5844 = !DILocation(line: 80, column: 87, scope: !3959, inlinedAt: !5660)
!5845 = !DILocation(line: 81, column: 9, scope: !4229, inlinedAt: !5660)
!5846 = !DILocation(line: 81, column: 9, scope: !3959, inlinedAt: !5660)
!5847 = !DILocation(line: 82, column: 13, scope: !4232, inlinedAt: !5660)
!5848 = !DILocation(line: 83, column: 5, scope: !4232, inlinedAt: !5660)
!5849 = !DILocation(line: 84, column: 29, scope: !4235, inlinedAt: !5660)
!5850 = !DILocation(line: 84, column: 15, scope: !4235, inlinedAt: !5660)
!5851 = !DILocation(line: 84, column: 13, scope: !4235, inlinedAt: !5660)
!5852 = !DILocation(line: 86, column: 12, scope: !3958, inlinedAt: !5660)
!5853 = !DILocation(line: 86, column: 10, scope: !3958, inlinedAt: !5660)
!5854 = !DILocation(line: 86, column: 17, scope: !4241, inlinedAt: !5660)
!5855 = !DILocation(line: 86, column: 21, scope: !4241, inlinedAt: !5660)
!5856 = !DILocation(line: 86, column: 19, scope: !4241, inlinedAt: !5660)
!5857 = !DILocation(line: 86, column: 5, scope: !4241, inlinedAt: !5660)
!5858 = !DILocation(line: 88, column: 23, scope: !3956, inlinedAt: !5660)
!5859 = !DILocation(line: 88, column: 26, scope: !3956, inlinedAt: !5660)
!5860 = !DILocation(line: 88, column: 35, scope: !3956, inlinedAt: !5660)
!5861 = !DILocation(line: 88, column: 33, scope: !3956, inlinedAt: !5660)
!5862 = !DILocation(line: 92, column: 16, scope: !4250, inlinedAt: !5660)
!5863 = !DILocation(line: 92, column: 14, scope: !4250, inlinedAt: !5660)
!5864 = !DILocation(line: 92, column: 21, scope: !4253, inlinedAt: !5660)
!5865 = !DILocation(line: 92, column: 25, scope: !4253, inlinedAt: !5660)
!5866 = !DILocation(line: 92, column: 23, scope: !4253, inlinedAt: !5660)
!5867 = !DILocation(line: 92, column: 9, scope: !4253, inlinedAt: !5660)
!5868 = !DILocation(line: 93, column: 36, scope: !4259, inlinedAt: !5660)
!5869 = !DILocation(line: 93, column: 23, scope: !4259, inlinedAt: !5660)
!5870 = !DILocation(line: 93, column: 20, scope: !4259, inlinedAt: !5660)
!5871 = !DILocation(line: 94, column: 30, scope: !4259, inlinedAt: !5660)
!5872 = !DILocation(line: 94, column: 23, scope: !4259, inlinedAt: !5660)
!5873 = !DILocation(line: 94, column: 35, scope: !4259, inlinedAt: !5660)
!5874 = !DILocation(line: 94, column: 33, scope: !4259, inlinedAt: !5660)
!5875 = !DILocation(line: 94, column: 20, scope: !4259, inlinedAt: !5660)
!5876 = !DILocation(line: 92, column: 31, scope: !4268, inlinedAt: !5660)
!5877 = !DILocation(line: 92, column: 9, scope: !4268, inlinedAt: !5660)
!5878 = !DILocation(line: 96, column: 46, scope: !3956, inlinedAt: !5660)
!5879 = !DILocation(line: 96, column: 19, scope: !3956, inlinedAt: !5660)
!5880 = !DILocation(line: 96, column: 40, scope: !3956, inlinedAt: !5660)
!5881 = !DILocation(line: 96, column: 42, scope: !3956, inlinedAt: !5660)
!5882 = !DILocation(line: 96, column: 17, scope: !3956, inlinedAt: !5660)
!5883 = !DILocation(line: 97, column: 46, scope: !3956, inlinedAt: !5660)
!5884 = !DILocation(line: 97, column: 53, scope: !3956, inlinedAt: !5660)
!5885 = !DILocation(line: 97, column: 52, scope: !3956, inlinedAt: !5660)
!5886 = !DILocation(line: 97, column: 16, scope: !3956, inlinedAt: !5660)
!5887 = !DILocation(line: 97, column: 40, scope: !3956, inlinedAt: !5660)
!5888 = !DILocation(line: 97, column: 42, scope: !3956, inlinedAt: !5660)
!5889 = !DILocation(line: 97, column: 13, scope: !3956, inlinedAt: !5660)
!5890 = !DILocation(line: 98, column: 13, scope: !3976, inlinedAt: !5660)
!5891 = !DILocation(line: 98, column: 13, scope: !3956, inlinedAt: !5660)
!5892 = !DILocation(line: 99, column: 20, scope: !3974, inlinedAt: !5660)
!5893 = !DILocation(line: 99, column: 18, scope: !3974, inlinedAt: !5660)
!5894 = !DILocation(line: 99, column: 25, scope: !4289, inlinedAt: !5660)
!5895 = !DILocation(line: 99, column: 29, scope: !4289, inlinedAt: !5660)
!5896 = !DILocation(line: 99, column: 27, scope: !4289, inlinedAt: !5660)
!5897 = !DILocation(line: 99, column: 13, scope: !4289, inlinedAt: !5660)
!5898 = !DILocation(line: 100, column: 36, scope: !3972, inlinedAt: !5660)
!5899 = !DILocation(line: 100, column: 38, scope: !3972, inlinedAt: !5660)
!5900 = !DILocation(line: 100, column: 37, scope: !3972, inlinedAt: !5660)
!5901 = !DILocation(line: 100, column: 33, scope: !3972, inlinedAt: !5660)
!5902 = !DILocation(line: 100, column: 27, scope: !3972, inlinedAt: !5660)
!5903 = !DILocation(line: 102, column: 21, scope: !3971, inlinedAt: !5660)
!5904 = !DILocation(line: 102, column: 28, scope: !3971, inlinedAt: !5660)
!5905 = !DILocation(line: 102, column: 35, scope: !4301, inlinedAt: !5660)
!5906 = !DILocation(line: 102, column: 31, scope: !4301, inlinedAt: !5660)
!5907 = !DILocation(line: 102, column: 38, scope: !4301, inlinedAt: !5660)
!5908 = !DILocation(line: 102, column: 21, scope: !4301, inlinedAt: !5660)
!5909 = !DILocation(line: 103, column: 25, scope: !3969, inlinedAt: !5660)
!5910 = !DILocation(line: 103, column: 30, scope: !3969, inlinedAt: !5660)
!5911 = !DILocation(line: 103, column: 27, scope: !3969, inlinedAt: !5660)
!5912 = !DILocation(line: 103, column: 25, scope: !3970, inlinedAt: !5660)
!5913 = !DILocation(line: 104, column: 37, scope: !4310, inlinedAt: !5660)
!5914 = !DILocation(line: 104, column: 35, scope: !4310, inlinedAt: !5660)
!5915 = !DILocation(line: 105, column: 33, scope: !4310, inlinedAt: !5660)
!5916 = !DILocation(line: 106, column: 21, scope: !4310, inlinedAt: !5660)
!5917 = !DILocation(line: 107, column: 56, scope: !3968, inlinedAt: !5660)
!5918 = !DILocation(line: 107, column: 59, scope: !3968, inlinedAt: !5660)
!5919 = !DILocation(line: 107, column: 62, scope: !3968, inlinedAt: !5660)
!5920 = !DILocation(line: 107, column: 50, scope: !3968, inlinedAt: !5660)
!5921 = !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !5660)
!5922 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !5663)
!5923 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !5663)
!5924 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !5663)
!5925 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !5663)
!5926 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !5663)
!5927 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !5663)
!5928 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !5663)
!5929 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !5663)
!5930 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !5663)
!5931 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !5663)
!5932 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !5663)
!5933 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !5663)
!5934 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !5663)
!5935 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !5663)
!5936 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !5663)
!5937 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !5663)
!5938 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !5663)
!5939 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !5663)
!5940 = !DILocation(line: 108, column: 37, scope: !3968, inlinedAt: !5660)
!5941 = !DILocation(line: 108, column: 45, scope: !3968, inlinedAt: !5660)
!5942 = !DILocation(line: 108, column: 39, scope: !3968, inlinedAt: !5660)
!5943 = !DILocation(line: 108, column: 38, scope: !3968, inlinedAt: !5660)
!5944 = !DILocation(line: 108, column: 48, scope: !3968, inlinedAt: !5660)
!5945 = !DILocation(line: 108, column: 47, scope: !3968, inlinedAt: !5660)
!5946 = !DILocation(line: 108, column: 35, scope: !3968, inlinedAt: !5660)
!5947 = !DILocation(line: 109, column: 57, scope: !3968, inlinedAt: !5660)
!5948 = !DILocation(line: 109, column: 59, scope: !3968, inlinedAt: !5660)
!5949 = !DILocation(line: 109, column: 42, scope: !3968, inlinedAt: !5660)
!5950 = !DILocation(line: 109, column: 40, scope: !3968, inlinedAt: !5660)
!5951 = !DILocation(line: 109, column: 63, scope: !3968, inlinedAt: !5660)
!5952 = !DILocation(line: 109, column: 66, scope: !3968, inlinedAt: !5660)
!5953 = !DILocation(line: 109, column: 70, scope: !3968, inlinedAt: !5660)
!5954 = !DILocation(line: 109, column: 33, scope: !3968, inlinedAt: !5660)
!5955 = !DILocation(line: 111, column: 17, scope: !3970, inlinedAt: !5660)
!5956 = !DILocation(line: 112, column: 37, scope: !4356, inlinedAt: !5660)
!5957 = !DILocation(line: 112, column: 33, scope: !4356, inlinedAt: !5660)
!5958 = !DILocation(line: 112, column: 40, scope: !4356, inlinedAt: !5660)
!5959 = !DILocation(line: 112, column: 39, scope: !4356, inlinedAt: !5660)
!5960 = !DILocation(line: 112, column: 31, scope: !4356, inlinedAt: !5660)
!5961 = !DILocation(line: 114, column: 22, scope: !3972, inlinedAt: !5660)
!5962 = !DILocation(line: 114, column: 26, scope: !3972, inlinedAt: !5660)
!5963 = !DILocation(line: 114, column: 24, scope: !3972, inlinedAt: !5660)
!5964 = !DILocation(line: 114, column: 20, scope: !3972, inlinedAt: !5660)
!5965 = !DILocation(line: 115, column: 21, scope: !4366, inlinedAt: !5660)
!5966 = !DILocation(line: 115, column: 21, scope: !3972, inlinedAt: !5660)
!5967 = !DILocation(line: 116, column: 35, scope: !4366, inlinedAt: !5660)
!5968 = !DILocation(line: 116, column: 37, scope: !4366, inlinedAt: !5660)
!5969 = !DILocation(line: 116, column: 36, scope: !4366, inlinedAt: !5660)
!5970 = !DILocation(line: 116, column: 32, scope: !4366, inlinedAt: !5660)
!5971 = !DILocation(line: 116, column: 40, scope: !4366, inlinedAt: !5660)
!5972 = !DILocation(line: 116, column: 47, scope: !4374, inlinedAt: !5660)
!5973 = !DILocation(line: 116, column: 32, scope: !4374, inlinedAt: !5660)
!5974 = !DILocation(line: 116, column: 60, scope: !4377, inlinedAt: !5660)
!5975 = !DILocation(line: 116, column: 59, scope: !4377, inlinedAt: !5660)
!5976 = !DILocation(line: 116, column: 32, scope: !4377, inlinedAt: !5660)
!5977 = !DILocation(line: 116, column: 32, scope: !4381, inlinedAt: !5660)
!5978 = !DILocation(line: 116, column: 25, scope: !4381, inlinedAt: !5660)
!5979 = !DILocation(line: 116, column: 27, scope: !4381, inlinedAt: !5660)
!5980 = !DILocation(line: 116, column: 26, scope: !4381, inlinedAt: !5660)
!5981 = !DILocation(line: 116, column: 21, scope: !4381, inlinedAt: !5660)
!5982 = !DILocation(line: 116, column: 30, scope: !4381, inlinedAt: !5660)
!5983 = !DILocation(line: 117, column: 25, scope: !4388, inlinedAt: !5660)
!5984 = !DILocation(line: 117, column: 21, scope: !4388, inlinedAt: !5660)
!5985 = !DILocation(line: 117, column: 28, scope: !4388, inlinedAt: !5660)
!5986 = !DILocation(line: 117, column: 21, scope: !3972, inlinedAt: !5660)
!5987 = !DILocation(line: 118, column: 28, scope: !4388, inlinedAt: !5660)
!5988 = !DILocation(line: 118, column: 21, scope: !4388, inlinedAt: !5660)
!5989 = !DILocation(line: 119, column: 28, scope: !3972, inlinedAt: !5660)
!5990 = !DILocation(line: 119, column: 38, scope: !3972, inlinedAt: !5660)
!5991 = !DILocation(line: 119, column: 37, scope: !3972, inlinedAt: !5660)
!5992 = !DILocation(line: 119, column: 25, scope: !3972, inlinedAt: !5660)
!5993 = !DILocation(line: 120, column: 23, scope: !3972, inlinedAt: !5660)
!5994 = !DILocation(line: 120, column: 26, scope: !3972, inlinedAt: !5660)
!5995 = !DILocation(line: 120, column: 25, scope: !3972, inlinedAt: !5660)
!5996 = !DILocation(line: 120, column: 20, scope: !3972, inlinedAt: !5660)
!5997 = !DILocation(line: 99, column: 35, scope: !4403, inlinedAt: !5660)
!5998 = !DILocation(line: 99, column: 13, scope: !4403, inlinedAt: !5660)
!5999 = !DILocation(line: 122, column: 9, scope: !3975, inlinedAt: !5660)
!6000 = !DILocation(line: 123, column: 20, scope: !4409, inlinedAt: !5660)
!6001 = !DILocation(line: 123, column: 18, scope: !4409, inlinedAt: !5660)
!6002 = !DILocation(line: 123, column: 25, scope: !4413, inlinedAt: !5660)
!6003 = !DILocation(line: 123, column: 29, scope: !4413, inlinedAt: !5660)
!6004 = !DILocation(line: 123, column: 27, scope: !4413, inlinedAt: !5660)
!6005 = !DILocation(line: 123, column: 13, scope: !4413, inlinedAt: !5660)
!6006 = !DILocation(line: 124, column: 33, scope: !4419, inlinedAt: !5660)
!6007 = !DILocation(line: 124, column: 29, scope: !4419, inlinedAt: !5660)
!6008 = !DILocation(line: 124, column: 36, scope: !4419, inlinedAt: !5660)
!6009 = !DILocation(line: 124, column: 35, scope: !4419, inlinedAt: !5660)
!6010 = !DILocation(line: 124, column: 27, scope: !4419, inlinedAt: !5660)
!6011 = !DILocation(line: 125, column: 28, scope: !4419, inlinedAt: !5660)
!6012 = !DILocation(line: 125, column: 38, scope: !4419, inlinedAt: !5660)
!6013 = !DILocation(line: 125, column: 37, scope: !4419, inlinedAt: !5660)
!6014 = !DILocation(line: 125, column: 25, scope: !4419, inlinedAt: !5660)
!6015 = !DILocation(line: 126, column: 21, scope: !4429, inlinedAt: !5660)
!6016 = !DILocation(line: 126, column: 21, scope: !4419, inlinedAt: !5660)
!6017 = !DILocation(line: 127, column: 32, scope: !4429, inlinedAt: !5660)
!6018 = !DILocation(line: 127, column: 25, scope: !4429, inlinedAt: !5660)
!6019 = !DILocation(line: 127, column: 27, scope: !4429, inlinedAt: !5660)
!6020 = !DILocation(line: 127, column: 26, scope: !4429, inlinedAt: !5660)
!6021 = !DILocation(line: 127, column: 21, scope: !4429, inlinedAt: !5660)
!6022 = !DILocation(line: 127, column: 30, scope: !4429, inlinedAt: !5660)
!6023 = !DILocation(line: 128, column: 27, scope: !4419, inlinedAt: !5660)
!6024 = !DILocation(line: 128, column: 29, scope: !4419, inlinedAt: !5660)
!6025 = !DILocation(line: 128, column: 28, scope: !4419, inlinedAt: !5660)
!6026 = !DILocation(line: 128, column: 24, scope: !4419, inlinedAt: !5660)
!6027 = !DILocation(line: 128, column: 34, scope: !4419, inlinedAt: !5660)
!6028 = !DILocation(line: 128, column: 32, scope: !4419, inlinedAt: !5660)
!6029 = !DILocation(line: 128, column: 49, scope: !4419, inlinedAt: !5660)
!6030 = !DILocation(line: 128, column: 51, scope: !4419, inlinedAt: !5660)
!6031 = !DILocation(line: 128, column: 50, scope: !4419, inlinedAt: !5660)
!6032 = !DILocation(line: 128, column: 46, scope: !4419, inlinedAt: !5660)
!6033 = !DILocation(line: 128, column: 56, scope: !4419, inlinedAt: !5660)
!6034 = !DILocation(line: 128, column: 54, scope: !4419, inlinedAt: !5660)
!6035 = !DILocation(line: 128, column: 44, scope: !4419, inlinedAt: !5660)
!6036 = !DILocation(line: 128, column: 20, scope: !4419, inlinedAt: !5660)
!6037 = !DILocation(line: 123, column: 35, scope: !4452, inlinedAt: !5660)
!6038 = !DILocation(line: 123, column: 13, scope: !4452, inlinedAt: !5660)
!6039 = !DILocation(line: 131, column: 17, scope: !3956, inlinedAt: !5660)
!6040 = !DILocation(line: 131, column: 22, scope: !3956, inlinedAt: !5660)
!6041 = !DILocation(line: 131, column: 20, scope: !3956, inlinedAt: !5660)
!6042 = !DILocation(line: 131, column: 31, scope: !3956, inlinedAt: !5660)
!6043 = !DILocation(line: 131, column: 29, scope: !3956, inlinedAt: !5660)
!6044 = !DILocation(line: 131, column: 14, scope: !3956, inlinedAt: !5660)
!6045 = !DILocation(line: 132, column: 20, scope: !3956, inlinedAt: !5660)
!6046 = !DILocation(line: 132, column: 17, scope: !3956, inlinedAt: !5660)
!6047 = !DILocation(line: 133, column: 13, scope: !4465, inlinedAt: !5660)
!6048 = !DILocation(line: 133, column: 21, scope: !4465, inlinedAt: !5660)
!6049 = !DILocation(line: 133, column: 18, scope: !4465, inlinedAt: !5660)
!6050 = !DILocation(line: 133, column: 13, scope: !3956, inlinedAt: !5660)
!6051 = !DILocation(line: 134, column: 20, scope: !4465, inlinedAt: !5660)
!6052 = !DILocation(line: 134, column: 13, scope: !4465, inlinedAt: !5660)
!6053 = !DILocation(line: 135, column: 13, scope: !3955, inlinedAt: !5660)
!6054 = !DILocation(line: 135, column: 13, scope: !3956, inlinedAt: !5660)
!6055 = !DILocation(line: 136, column: 22, scope: !3954, inlinedAt: !5660)
!6056 = !DILocation(line: 136, column: 53, scope: !3954, inlinedAt: !5660)
!6057 = !DILocation(line: 136, column: 26, scope: !3954, inlinedAt: !5660)
!6058 = !DILocation(line: 136, column: 47, scope: !3954, inlinedAt: !5660)
!6059 = !DILocation(line: 136, column: 49, scope: !3954, inlinedAt: !5660)
!6060 = !DILocation(line: 136, column: 90, scope: !3954, inlinedAt: !5660)
!6061 = !DILocation(line: 136, column: 62, scope: !3954, inlinedAt: !5660)
!6062 = !DILocation(line: 136, column: 84, scope: !3954, inlinedAt: !5660)
!6063 = !DILocation(line: 136, column: 86, scope: !3954, inlinedAt: !5660)
!6064 = !DILocation(line: 136, column: 13, scope: !3954, inlinedAt: !5660)
!6065 = !DILocation(line: 137, column: 17, scope: !4484, inlinedAt: !5660)
!6066 = !DILocation(line: 137, column: 17, scope: !3954, inlinedAt: !5660)
!6067 = !DILocation(line: 138, column: 24, scope: !4487, inlinedAt: !5660)
!6068 = !DILocation(line: 138, column: 22, scope: !4487, inlinedAt: !5660)
!6069 = !DILocation(line: 138, column: 29, scope: !4490, inlinedAt: !5660)
!6070 = !DILocation(line: 138, column: 33, scope: !4490, inlinedAt: !5660)
!6071 = !DILocation(line: 138, column: 31, scope: !4490, inlinedAt: !5660)
!6072 = !DILocation(line: 138, column: 17, scope: !4490, inlinedAt: !5660)
!6073 = !DILocation(line: 139, column: 55, scope: !4496, inlinedAt: !5660)
!6074 = !DILocation(line: 139, column: 62, scope: !4496, inlinedAt: !5660)
!6075 = !DILocation(line: 139, column: 61, scope: !4496, inlinedAt: !5660)
!6076 = !DILocation(line: 139, column: 66, scope: !4496, inlinedAt: !5660)
!6077 = !DILocation(line: 139, column: 65, scope: !4496, inlinedAt: !5660)
!6078 = !DILocation(line: 139, column: 25, scope: !4496, inlinedAt: !5660)
!6079 = !DILocation(line: 139, column: 49, scope: !4496, inlinedAt: !5660)
!6080 = !DILocation(line: 139, column: 51, scope: !4496, inlinedAt: !5660)
!6081 = !DILocation(line: 139, column: 69, scope: !4496, inlinedAt: !5660)
!6082 = !DILocation(line: 139, column: 25, scope: !4491, inlinedAt: !5660)
!6083 = !DILocation(line: 140, column: 34, scope: !4496, inlinedAt: !5660)
!6084 = !DILocation(line: 140, column: 44, scope: !4496, inlinedAt: !5660)
!6085 = !DILocation(line: 140, column: 46, scope: !4496, inlinedAt: !5660)
!6086 = !DILocation(line: 140, column: 45, scope: !4496, inlinedAt: !5660)
!6087 = !DILocation(line: 140, column: 41, scope: !4496, inlinedAt: !5660)
!6088 = !DILocation(line: 140, column: 49, scope: !4496, inlinedAt: !5660)
!6089 = !DILocation(line: 140, column: 25, scope: !4496, inlinedAt: !5660)
!6090 = !DILocation(line: 138, column: 39, scope: !4514, inlinedAt: !5660)
!6091 = !DILocation(line: 138, column: 17, scope: !4514, inlinedAt: !5660)
!6092 = !DILocation(line: 140, column: 55, scope: !4519, inlinedAt: !5660)
!6093 = !DILocation(line: 141, column: 17, scope: !3953, inlinedAt: !5660)
!6094 = !DILocation(line: 141, column: 17, scope: !3954, inlinedAt: !5660)
!6095 = !DILocation(line: 142, column: 24, scope: !3951, inlinedAt: !5660)
!6096 = !DILocation(line: 142, column: 22, scope: !3951, inlinedAt: !5660)
!6097 = !DILocation(line: 142, column: 29, scope: !4525, inlinedAt: !5660)
!6098 = !DILocation(line: 142, column: 31, scope: !4525, inlinedAt: !5660)
!6099 = !DILocation(line: 142, column: 17, scope: !4525, inlinedAt: !5660)
!6100 = !DILocation(line: 143, column: 55, scope: !3948, inlinedAt: !5660)
!6101 = !DILocation(line: 143, column: 61, scope: !3948, inlinedAt: !5660)
!6102 = !DILocation(line: 143, column: 64, scope: !3948, inlinedAt: !5660)
!6103 = !DILocation(line: 143, column: 63, scope: !3948, inlinedAt: !5660)
!6104 = !DILocation(line: 143, column: 25, scope: !3948, inlinedAt: !5660)
!6105 = !DILocation(line: 143, column: 49, scope: !3948, inlinedAt: !5660)
!6106 = !DILocation(line: 143, column: 51, scope: !3948, inlinedAt: !5660)
!6107 = !DILocation(line: 143, column: 67, scope: !3948, inlinedAt: !5660)
!6108 = !DILocation(line: 143, column: 25, scope: !3949, inlinedAt: !5660)
!6109 = !DILocation(line: 144, column: 68, scope: !3947, inlinedAt: !5660)
!6110 = !DILocation(line: 144, column: 70, scope: !3947, inlinedAt: !5660)
!6111 = !DILocation(line: 144, column: 69, scope: !3947, inlinedAt: !5660)
!6112 = !DILocation(line: 144, column: 65, scope: !3947, inlinedAt: !5660)
!6113 = !DILocation(line: 144, column: 59, scope: !3947, inlinedAt: !5660)
!6114 = !DILocation(line: 144, column: 75, scope: !3947, inlinedAt: !5660)
!6115 = !DILocation(line: 144, column: 78, scope: !3947, inlinedAt: !5660)
!6116 = !DILocation(line: 144, column: 53, scope: !4545, inlinedAt: !5660)
!6117 = !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !5660)
!6118 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !5659)
!6119 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !5659)
!6120 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !5659)
!6121 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !5659)
!6122 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !5659)
!6123 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !5659)
!6124 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !5659)
!6125 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !5659)
!6126 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !5659)
!6127 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !5659)
!6128 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !5659)
!6129 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !5659)
!6130 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !5659)
!6131 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !5659)
!6132 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !5659)
!6133 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !5659)
!6134 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !5659)
!6135 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !5659)
!6136 = !DILocation(line: 145, column: 56, scope: !3947, inlinedAt: !5660)
!6137 = !DILocation(line: 145, column: 61, scope: !3947, inlinedAt: !5660)
!6138 = !DILocation(line: 145, column: 41, scope: !3947, inlinedAt: !5660)
!6139 = !DILocation(line: 145, column: 39, scope: !3947, inlinedAt: !5660)
!6140 = !DILocation(line: 147, column: 34, scope: !3947, inlinedAt: !5660)
!6141 = !DILocation(line: 147, column: 38, scope: !3947, inlinedAt: !5660)
!6142 = !DILocation(line: 147, column: 42, scope: !3947, inlinedAt: !5660)
!6143 = !DILocation(line: 147, column: 46, scope: !3947, inlinedAt: !5660)
!6144 = !DILocation(line: 147, column: 58, scope: !3947, inlinedAt: !5660)
!6145 = !DILocation(line: 147, column: 62, scope: !3947, inlinedAt: !5660)
!6146 = !DILocation(line: 147, column: 66, scope: !3947, inlinedAt: !5660)
!6147 = !DILocation(line: 147, column: 54, scope: !3947, inlinedAt: !5660)
!6148 = !DILocation(line: 147, column: 72, scope: !3947, inlinedAt: !5660)
!6149 = !DILocation(line: 147, column: 25, scope: !3947, inlinedAt: !5660)
!6150 = !DILocation(line: 148, column: 35, scope: !3947, inlinedAt: !5660)
!6151 = !DILocation(line: 148, column: 39, scope: !3947, inlinedAt: !5660)
!6152 = !DILocation(line: 148, column: 44, scope: !3947, inlinedAt: !5660)
!6153 = !DILocation(line: 148, column: 25, scope: !3947, inlinedAt: !5660)
!6154 = !DILocation(line: 149, column: 21, scope: !3947, inlinedAt: !5660)
!6155 = !DILocation(line: 142, column: 37, scope: !4585, inlinedAt: !5660)
!6156 = !DILocation(line: 142, column: 17, scope: !4585, inlinedAt: !5660)
!6157 = !DILocation(line: 151, column: 13, scope: !3952, inlinedAt: !5660)
!6158 = !DILocation(line: 152, column: 9, scope: !3954, inlinedAt: !5660)
!6159 = !DILocation(line: 86, column: 32, scope: !4592, inlinedAt: !5660)
!6160 = !DILocation(line: 86, column: 29, scope: !4592, inlinedAt: !5660)
!6161 = !DILocation(line: 86, column: 5, scope: !4592, inlinedAt: !5660)
!6162 = !DILocation(line: 155, column: 9, scope: !4598, inlinedAt: !5660)
!6163 = !DILocation(line: 155, column: 9, scope: !3959, inlinedAt: !5660)
!6164 = !DILocation(line: 156, column: 17, scope: !4598, inlinedAt: !5660)
!6165 = !DILocation(line: 156, column: 10, scope: !4598, inlinedAt: !5660)
!6166 = !DILocation(line: 156, column: 15, scope: !4598, inlinedAt: !5660)
!6167 = !DILocation(line: 156, column: 9, scope: !4598, inlinedAt: !5660)
!6168 = !DILocation(line: 157, column: 9, scope: !4605, inlinedAt: !5660)
!6169 = !DILocation(line: 157, column: 9, scope: !3959, inlinedAt: !5660)
!6170 = !DILocation(line: 158, column: 19, scope: !4605, inlinedAt: !5660)
!6171 = !DILocation(line: 158, column: 10, scope: !4605, inlinedAt: !5660)
!6172 = !DILocation(line: 158, column: 17, scope: !4605, inlinedAt: !5660)
!6173 = !DILocation(line: 158, column: 9, scope: !4605, inlinedAt: !5660)
!6174 = !DILocation(line: 159, column: 12, scope: !3959, inlinedAt: !5660)
!6175 = !DILocation(line: 159, column: 5, scope: !3959, inlinedAt: !5660)
!6176 = !DILocation(line: 160, column: 1, scope: !3959, inlinedAt: !5660)
!6177 = !DILocation(line: 188, column: 247, scope: !5657)
!6178 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_UPAIR", scope: !963, file: !963, line: 189, type: !967, isLocal: true, isDefinition: true, scopeLine: 189, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!6179 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !6180)
!6180 = distinct !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !6181)
!6181 = distinct !DILocation(line: 189, column: 254, scope: !6178)
!6182 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !6180)
!6183 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !6184)
!6184 = distinct !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !6181)
!6185 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !6184)
!6186 = !DILocation(line: 42, column: 55, scope: !3959, inlinedAt: !6181)
!6187 = !DILocation(line: 43, column: 48, scope: !3959, inlinedAt: !6181)
!6188 = !DILocation(line: 43, column: 65, scope: !3959, inlinedAt: !6181)
!6189 = !DILocation(line: 43, column: 76, scope: !3959, inlinedAt: !6181)
!6190 = !DILocation(line: 44, column: 46, scope: !3959, inlinedAt: !6181)
!6191 = !DILocation(line: 44, column: 58, scope: !3959, inlinedAt: !6181)
!6192 = !DILocation(line: 44, column: 68, scope: !3959, inlinedAt: !6181)
!6193 = !DILocation(line: 45, column: 37, scope: !3959, inlinedAt: !6181)
!6194 = !DILocation(line: 45, column: 53, scope: !3959, inlinedAt: !6181)
!6195 = !DILocation(line: 45, column: 73, scope: !3959, inlinedAt: !6181)
!6196 = !DILocation(line: 46, column: 38, scope: !3959, inlinedAt: !6181)
!6197 = !DILocation(line: 46, column: 51, scope: !3959, inlinedAt: !6181)
!6198 = !DILocation(line: 46, column: 63, scope: !3959, inlinedAt: !6181)
!6199 = !DILocation(line: 46, column: 76, scope: !3959, inlinedAt: !6181)
!6200 = !DILocation(line: 47, column: 37, scope: !3959, inlinedAt: !6181)
!6201 = !DILocation(line: 47, column: 50, scope: !3959, inlinedAt: !6181)
!6202 = !DILocation(line: 47, column: 62, scope: !3959, inlinedAt: !6181)
!6203 = !DILocation(line: 47, column: 76, scope: !3959, inlinedAt: !6181)
!6204 = !DILocation(line: 48, column: 45, scope: !3959, inlinedAt: !6181)
!6205 = !DILocation(line: 50, column: 15, scope: !3959, inlinedAt: !6181)
!6206 = !DILocation(line: 51, column: 17, scope: !3959, inlinedAt: !6181)
!6207 = !DILocation(line: 52, column: 17, scope: !3959, inlinedAt: !6181)
!6208 = !DILocation(line: 53, column: 17, scope: !3959, inlinedAt: !6181)
!6209 = !DILocation(line: 54, column: 17, scope: !3959, inlinedAt: !6181)
!6210 = !DILocation(line: 55, column: 9, scope: !3959, inlinedAt: !6181)
!6211 = !DILocation(line: 55, column: 12, scope: !3959, inlinedAt: !6181)
!6212 = !DILocation(line: 56, column: 11, scope: !3959, inlinedAt: !6181)
!6213 = !DILocation(line: 57, column: 11, scope: !3959, inlinedAt: !6181)
!6214 = !DILocation(line: 58, column: 15, scope: !3959, inlinedAt: !6181)
!6215 = !DILocation(line: 59, column: 9, scope: !3959, inlinedAt: !6181)
!6216 = !DILocation(line: 60, column: 9, scope: !3959, inlinedAt: !6181)
!6217 = !DILocation(line: 87, column: 22, scope: !3956, inlinedAt: !6181)
!6218 = !DILocation(line: 88, column: 14, scope: !3956, inlinedAt: !6181)
!6219 = !DILocation(line: 89, column: 13, scope: !3956, inlinedAt: !6181)
!6220 = !DILocation(line: 90, column: 13, scope: !3956, inlinedAt: !6181)
!6221 = !DILocation(line: 91, column: 15, scope: !3956, inlinedAt: !6181)
!6222 = !DILocation(line: 91, column: 26, scope: !3956, inlinedAt: !6181)
!6223 = !DILocation(line: 100, column: 23, scope: !3972, inlinedAt: !6181)
!6224 = !DILocation(line: 101, column: 23, scope: !3972, inlinedAt: !6181)
!6225 = !DILocation(line: 107, column: 29, scope: !3968, inlinedAt: !6181)
!6226 = !DILocation(line: 144, column: 29, scope: !3947, inlinedAt: !6181)
!6227 = !DILocation(line: 145, column: 29, scope: !3947, inlinedAt: !6181)
!6228 = !DILocalVariable(name: "s", arg: 1, scope: !6178, file: !963, line: 189, type: !970)
!6229 = !DILocation(line: 189, column: 73, scope: !6178)
!6230 = !DILocalVariable(name: "pb", arg: 2, scope: !6178, file: !963, line: 189, type: !2645)
!6231 = !DILocation(line: 189, column: 91, scope: !6178)
!6232 = !DILocalVariable(name: "in", arg: 3, scope: !6178, file: !963, line: 189, type: !1103)
!6233 = !DILocation(line: 189, column: 108, scope: !6178)
!6234 = !DILocalVariable(name: "quant", arg: 4, scope: !6178, file: !963, line: 189, type: !1102)
!6235 = !DILocation(line: 189, column: 119, scope: !6178)
!6236 = !DILocalVariable(name: "scaled", arg: 5, scope: !6178, file: !963, line: 189, type: !1103)
!6237 = !DILocation(line: 189, column: 139, scope: !6178)
!6238 = !DILocalVariable(name: "size", arg: 6, scope: !6178, file: !963, line: 189, type: !992)
!6239 = !DILocation(line: 189, column: 151, scope: !6178)
!6240 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !6178, file: !963, line: 189, type: !992)
!6241 = !DILocation(line: 189, column: 161, scope: !6178)
!6242 = !DILocalVariable(name: "cb", arg: 8, scope: !6178, file: !963, line: 189, type: !992)
!6243 = !DILocation(line: 189, column: 176, scope: !6178)
!6244 = !DILocalVariable(name: "lambda", arg: 9, scope: !6178, file: !963, line: 189, type: !1104)
!6245 = !DILocation(line: 189, column: 192, scope: !6178)
!6246 = !DILocalVariable(name: "uplim", arg: 10, scope: !6178, file: !963, line: 189, type: !1104)
!6247 = !DILocation(line: 189, column: 212, scope: !6178)
!6248 = !DILocalVariable(name: "bits", arg: 11, scope: !6178, file: !963, line: 189, type: !1963)
!6249 = !DILocation(line: 189, column: 224, scope: !6178)
!6250 = !DILocalVariable(name: "energy", arg: 12, scope: !6178, file: !963, line: 189, type: !1102)
!6251 = !DILocation(line: 189, column: 237, scope: !6178)
!6252 = !DILocation(line: 189, column: 294, scope: !6178)
!6253 = !DILocation(line: 189, column: 297, scope: !6178)
!6254 = !DILocation(line: 189, column: 301, scope: !6178)
!6255 = !DILocation(line: 189, column: 305, scope: !6178)
!6256 = !DILocation(line: 189, column: 312, scope: !6178)
!6257 = !DILocation(line: 189, column: 320, scope: !6178)
!6258 = !DILocation(line: 189, column: 326, scope: !6178)
!6259 = !DILocation(line: 189, column: 350, scope: !6178)
!6260 = !DILocation(line: 189, column: 354, scope: !6178)
!6261 = !DILocation(line: 189, column: 362, scope: !6178)
!6262 = !DILocation(line: 189, column: 369, scope: !6178)
!6263 = !DILocation(line: 189, column: 375, scope: !6178)
!6264 = !DILocation(line: 189, column: 254, scope: !6178)
!6265 = !DILocation(line: 50, column: 29, scope: !3959, inlinedAt: !6181)
!6266 = !DILocation(line: 50, column: 27, scope: !3959, inlinedAt: !6181)
!6267 = !DILocation(line: 50, column: 39, scope: !3959, inlinedAt: !6181)
!6268 = !DILocation(line: 50, column: 45, scope: !3959, inlinedAt: !6181)
!6269 = !DILocation(line: 51, column: 40, scope: !3959, inlinedAt: !6181)
!6270 = !DILocation(line: 51, column: 21, scope: !3959, inlinedAt: !6181)
!6271 = !DILocation(line: 52, column: 42, scope: !3959, inlinedAt: !6181)
!6272 = !DILocation(line: 52, column: 23, scope: !3959, inlinedAt: !6181)
!6273 = !DILocation(line: 53, column: 47, scope: !3959, inlinedAt: !6181)
!6274 = !DILocation(line: 53, column: 45, scope: !3959, inlinedAt: !6181)
!6275 = !DILocation(line: 53, column: 57, scope: !3959, inlinedAt: !6181)
!6276 = !DILocation(line: 53, column: 63, scope: !3959, inlinedAt: !6181)
!6277 = !DILocation(line: 53, column: 22, scope: !3959, inlinedAt: !6181)
!6278 = !DILocation(line: 54, column: 44, scope: !3959, inlinedAt: !6181)
!6279 = !DILocation(line: 54, column: 43, scope: !3959, inlinedAt: !6181)
!6280 = !DILocation(line: 58, column: 21, scope: !3959, inlinedAt: !6181)
!6281 = !DILocation(line: 62, column: 9, scope: !4116, inlinedAt: !6181)
!6282 = !DILocation(line: 62, column: 17, scope: !4116, inlinedAt: !6181)
!6283 = !DILocation(line: 62, column: 20, scope: !4119, inlinedAt: !6181)
!6284 = !DILocation(line: 62, column: 29, scope: !4119, inlinedAt: !6181)
!6285 = !DILocation(line: 62, column: 32, scope: !4122, inlinedAt: !6181)
!6286 = !DILocation(line: 62, column: 9, scope: !4122, inlinedAt: !6181)
!6287 = !DILocation(line: 63, column: 16, scope: !4125, inlinedAt: !6181)
!6288 = !DILocation(line: 63, column: 14, scope: !4125, inlinedAt: !6181)
!6289 = !DILocation(line: 63, column: 21, scope: !4129, inlinedAt: !6181)
!6290 = !DILocation(line: 63, column: 25, scope: !4129, inlinedAt: !6181)
!6291 = !DILocation(line: 63, column: 23, scope: !4129, inlinedAt: !6181)
!6292 = !DILocation(line: 63, column: 9, scope: !4129, inlinedAt: !6181)
!6293 = !DILocation(line: 64, column: 24, scope: !4130, inlinedAt: !6181)
!6294 = !DILocation(line: 64, column: 21, scope: !4130, inlinedAt: !6181)
!6295 = !DILocation(line: 64, column: 30, scope: !4130, inlinedAt: !6181)
!6296 = !DILocation(line: 64, column: 27, scope: !4130, inlinedAt: !6181)
!6297 = !DILocation(line: 64, column: 26, scope: !4130, inlinedAt: !6181)
!6298 = !DILocation(line: 64, column: 18, scope: !4130, inlinedAt: !6181)
!6299 = !DILocation(line: 63, column: 32, scope: !4141, inlinedAt: !6181)
!6300 = !DILocation(line: 63, column: 9, scope: !4141, inlinedAt: !6181)
!6301 = !DILocation(line: 65, column: 13, scope: !4146, inlinedAt: !6181)
!6302 = !DILocation(line: 65, column: 13, scope: !4126, inlinedAt: !6181)
!6303 = !DILocation(line: 66, column: 14, scope: !4146, inlinedAt: !6181)
!6304 = !DILocation(line: 66, column: 19, scope: !4146, inlinedAt: !6181)
!6305 = !DILocation(line: 66, column: 13, scope: !4146, inlinedAt: !6181)
!6306 = !DILocation(line: 67, column: 13, scope: !4152, inlinedAt: !6181)
!6307 = !DILocation(line: 67, column: 13, scope: !4126, inlinedAt: !6181)
!6308 = !DILocation(line: 68, column: 23, scope: !4152, inlinedAt: !6181)
!6309 = !DILocation(line: 68, column: 14, scope: !4152, inlinedAt: !6181)
!6310 = !DILocation(line: 68, column: 21, scope: !4152, inlinedAt: !6181)
!6311 = !DILocation(line: 68, column: 13, scope: !4152, inlinedAt: !6181)
!6312 = !DILocation(line: 69, column: 13, scope: !4159, inlinedAt: !6181)
!6313 = !DILocation(line: 69, column: 13, scope: !4126, inlinedAt: !6181)
!6314 = !DILocation(line: 70, column: 20, scope: !4162, inlinedAt: !6181)
!6315 = !DILocation(line: 70, column: 18, scope: !4162, inlinedAt: !6181)
!6316 = !DILocation(line: 70, column: 25, scope: !4166, inlinedAt: !6181)
!6317 = !DILocation(line: 70, column: 29, scope: !4166, inlinedAt: !6181)
!6318 = !DILocation(line: 70, column: 27, scope: !4166, inlinedAt: !6181)
!6319 = !DILocation(line: 70, column: 13, scope: !4166, inlinedAt: !6181)
!6320 = !DILocation(line: 71, column: 24, scope: !4172, inlinedAt: !6181)
!6321 = !DILocation(line: 71, column: 22, scope: !4172, inlinedAt: !6181)
!6322 = !DILocation(line: 71, column: 29, scope: !4175, inlinedAt: !6181)
!6323 = !DILocation(line: 71, column: 33, scope: !4175, inlinedAt: !6181)
!6324 = !DILocation(line: 71, column: 31, scope: !4175, inlinedAt: !6181)
!6325 = !DILocation(line: 71, column: 17, scope: !4175, inlinedAt: !6181)
!6326 = !DILocation(line: 72, column: 25, scope: !4176, inlinedAt: !6181)
!6327 = !DILocation(line: 72, column: 27, scope: !4176, inlinedAt: !6181)
!6328 = !DILocation(line: 72, column: 26, scope: !4176, inlinedAt: !6181)
!6329 = !DILocation(line: 72, column: 21, scope: !4176, inlinedAt: !6181)
!6330 = !DILocation(line: 72, column: 30, scope: !4176, inlinedAt: !6181)
!6331 = !DILocation(line: 71, column: 39, scope: !4186, inlinedAt: !6181)
!6332 = !DILocation(line: 71, column: 17, scope: !4186, inlinedAt: !6181)
!6333 = !DILocation(line: 70, column: 40, scope: !4191, inlinedAt: !6181)
!6334 = !DILocation(line: 70, column: 37, scope: !4191, inlinedAt: !6181)
!6335 = !DILocation(line: 70, column: 13, scope: !4191, inlinedAt: !6181)
!6336 = !DILocation(line: 73, column: 9, scope: !4163, inlinedAt: !6181)
!6337 = !DILocation(line: 74, column: 16, scope: !4126, inlinedAt: !6181)
!6338 = !DILocation(line: 74, column: 23, scope: !4126, inlinedAt: !6181)
!6339 = !DILocation(line: 74, column: 21, scope: !4126, inlinedAt: !6181)
!6340 = !DILocation(line: 74, column: 9, scope: !4126, inlinedAt: !6181)
!6341 = !DILocation(line: 76, column: 10, scope: !4202, inlinedAt: !6181)
!6342 = !DILocation(line: 76, column: 9, scope: !3959, inlinedAt: !6181)
!6343 = !DILocation(line: 77, column: 9, scope: !4205, inlinedAt: !6181)
!6344 = !DILocation(line: 77, column: 12, scope: !4205, inlinedAt: !6181)
!6345 = !DILocation(line: 77, column: 22, scope: !4205, inlinedAt: !6181)
!6346 = !DILocation(line: 77, column: 25, scope: !4205, inlinedAt: !6181)
!6347 = !DILocation(line: 77, column: 33, scope: !4205, inlinedAt: !6181)
!6348 = !DILocation(line: 77, column: 37, scope: !4205, inlinedAt: !6181)
!6349 = !DILocation(line: 78, column: 18, scope: !4205, inlinedAt: !6181)
!6350 = !DILocation(line: 78, column: 21, scope: !4205, inlinedAt: !6181)
!6351 = !DILocation(line: 78, column: 16, scope: !4205, inlinedAt: !6181)
!6352 = !DILocation(line: 79, column: 5, scope: !4205, inlinedAt: !6181)
!6353 = !DILocation(line: 80, column: 5, scope: !3959, inlinedAt: !6181)
!6354 = !DILocation(line: 80, column: 8, scope: !3959, inlinedAt: !6181)
!6355 = !DILocation(line: 80, column: 20, scope: !3959, inlinedAt: !6181)
!6356 = !DILocation(line: 80, column: 23, scope: !3959, inlinedAt: !6181)
!6357 = !DILocation(line: 80, column: 31, scope: !3959, inlinedAt: !6181)
!6358 = !DILocation(line: 80, column: 35, scope: !3959, inlinedAt: !6181)
!6359 = !DILocation(line: 80, column: 43, scope: !3959, inlinedAt: !6181)
!6360 = !DILocation(line: 80, column: 50, scope: !3959, inlinedAt: !6181)
!6361 = !DILocation(line: 80, column: 49, scope: !3959, inlinedAt: !6181)
!6362 = !DILocation(line: 80, column: 77, scope: !3959, inlinedAt: !6181)
!6363 = !DILocation(line: 80, column: 63, scope: !3959, inlinedAt: !6181)
!6364 = !DILocation(line: 80, column: 82, scope: !3959, inlinedAt: !6181)
!6365 = !DILocation(line: 80, column: 87, scope: !3959, inlinedAt: !6181)
!6366 = !DILocation(line: 81, column: 9, scope: !4229, inlinedAt: !6181)
!6367 = !DILocation(line: 81, column: 9, scope: !3959, inlinedAt: !6181)
!6368 = !DILocation(line: 82, column: 13, scope: !4232, inlinedAt: !6181)
!6369 = !DILocation(line: 83, column: 5, scope: !4232, inlinedAt: !6181)
!6370 = !DILocation(line: 84, column: 29, scope: !4235, inlinedAt: !6181)
!6371 = !DILocation(line: 84, column: 15, scope: !4235, inlinedAt: !6181)
!6372 = !DILocation(line: 84, column: 13, scope: !4235, inlinedAt: !6181)
!6373 = !DILocation(line: 86, column: 12, scope: !3958, inlinedAt: !6181)
!6374 = !DILocation(line: 86, column: 10, scope: !3958, inlinedAt: !6181)
!6375 = !DILocation(line: 86, column: 17, scope: !4241, inlinedAt: !6181)
!6376 = !DILocation(line: 86, column: 21, scope: !4241, inlinedAt: !6181)
!6377 = !DILocation(line: 86, column: 19, scope: !4241, inlinedAt: !6181)
!6378 = !DILocation(line: 86, column: 5, scope: !4241, inlinedAt: !6181)
!6379 = !DILocation(line: 88, column: 23, scope: !3956, inlinedAt: !6181)
!6380 = !DILocation(line: 88, column: 26, scope: !3956, inlinedAt: !6181)
!6381 = !DILocation(line: 88, column: 35, scope: !3956, inlinedAt: !6181)
!6382 = !DILocation(line: 88, column: 33, scope: !3956, inlinedAt: !6181)
!6383 = !DILocation(line: 92, column: 16, scope: !4250, inlinedAt: !6181)
!6384 = !DILocation(line: 92, column: 14, scope: !4250, inlinedAt: !6181)
!6385 = !DILocation(line: 92, column: 21, scope: !4253, inlinedAt: !6181)
!6386 = !DILocation(line: 92, column: 25, scope: !4253, inlinedAt: !6181)
!6387 = !DILocation(line: 92, column: 23, scope: !4253, inlinedAt: !6181)
!6388 = !DILocation(line: 92, column: 9, scope: !4253, inlinedAt: !6181)
!6389 = !DILocation(line: 93, column: 36, scope: !4259, inlinedAt: !6181)
!6390 = !DILocation(line: 93, column: 23, scope: !4259, inlinedAt: !6181)
!6391 = !DILocation(line: 93, column: 20, scope: !4259, inlinedAt: !6181)
!6392 = !DILocation(line: 94, column: 30, scope: !4259, inlinedAt: !6181)
!6393 = !DILocation(line: 94, column: 23, scope: !4259, inlinedAt: !6181)
!6394 = !DILocation(line: 94, column: 35, scope: !4259, inlinedAt: !6181)
!6395 = !DILocation(line: 94, column: 33, scope: !4259, inlinedAt: !6181)
!6396 = !DILocation(line: 94, column: 20, scope: !4259, inlinedAt: !6181)
!6397 = !DILocation(line: 92, column: 31, scope: !4268, inlinedAt: !6181)
!6398 = !DILocation(line: 92, column: 9, scope: !4268, inlinedAt: !6181)
!6399 = !DILocation(line: 96, column: 46, scope: !3956, inlinedAt: !6181)
!6400 = !DILocation(line: 96, column: 19, scope: !3956, inlinedAt: !6181)
!6401 = !DILocation(line: 96, column: 40, scope: !3956, inlinedAt: !6181)
!6402 = !DILocation(line: 96, column: 42, scope: !3956, inlinedAt: !6181)
!6403 = !DILocation(line: 96, column: 17, scope: !3956, inlinedAt: !6181)
!6404 = !DILocation(line: 97, column: 46, scope: !3956, inlinedAt: !6181)
!6405 = !DILocation(line: 97, column: 53, scope: !3956, inlinedAt: !6181)
!6406 = !DILocation(line: 97, column: 52, scope: !3956, inlinedAt: !6181)
!6407 = !DILocation(line: 97, column: 16, scope: !3956, inlinedAt: !6181)
!6408 = !DILocation(line: 97, column: 40, scope: !3956, inlinedAt: !6181)
!6409 = !DILocation(line: 97, column: 42, scope: !3956, inlinedAt: !6181)
!6410 = !DILocation(line: 97, column: 13, scope: !3956, inlinedAt: !6181)
!6411 = !DILocation(line: 98, column: 13, scope: !3976, inlinedAt: !6181)
!6412 = !DILocation(line: 98, column: 13, scope: !3956, inlinedAt: !6181)
!6413 = !DILocation(line: 99, column: 20, scope: !3974, inlinedAt: !6181)
!6414 = !DILocation(line: 99, column: 18, scope: !3974, inlinedAt: !6181)
!6415 = !DILocation(line: 99, column: 25, scope: !4289, inlinedAt: !6181)
!6416 = !DILocation(line: 99, column: 29, scope: !4289, inlinedAt: !6181)
!6417 = !DILocation(line: 99, column: 27, scope: !4289, inlinedAt: !6181)
!6418 = !DILocation(line: 99, column: 13, scope: !4289, inlinedAt: !6181)
!6419 = !DILocation(line: 100, column: 36, scope: !3972, inlinedAt: !6181)
!6420 = !DILocation(line: 100, column: 38, scope: !3972, inlinedAt: !6181)
!6421 = !DILocation(line: 100, column: 37, scope: !3972, inlinedAt: !6181)
!6422 = !DILocation(line: 100, column: 33, scope: !3972, inlinedAt: !6181)
!6423 = !DILocation(line: 100, column: 27, scope: !3972, inlinedAt: !6181)
!6424 = !DILocation(line: 102, column: 21, scope: !3971, inlinedAt: !6181)
!6425 = !DILocation(line: 102, column: 28, scope: !3971, inlinedAt: !6181)
!6426 = !DILocation(line: 102, column: 35, scope: !4301, inlinedAt: !6181)
!6427 = !DILocation(line: 102, column: 31, scope: !4301, inlinedAt: !6181)
!6428 = !DILocation(line: 102, column: 38, scope: !4301, inlinedAt: !6181)
!6429 = !DILocation(line: 102, column: 21, scope: !4301, inlinedAt: !6181)
!6430 = !DILocation(line: 103, column: 25, scope: !3969, inlinedAt: !6181)
!6431 = !DILocation(line: 103, column: 30, scope: !3969, inlinedAt: !6181)
!6432 = !DILocation(line: 103, column: 27, scope: !3969, inlinedAt: !6181)
!6433 = !DILocation(line: 103, column: 25, scope: !3970, inlinedAt: !6181)
!6434 = !DILocation(line: 104, column: 37, scope: !4310, inlinedAt: !6181)
!6435 = !DILocation(line: 104, column: 35, scope: !4310, inlinedAt: !6181)
!6436 = !DILocation(line: 105, column: 33, scope: !4310, inlinedAt: !6181)
!6437 = !DILocation(line: 106, column: 21, scope: !4310, inlinedAt: !6181)
!6438 = !DILocation(line: 107, column: 56, scope: !3968, inlinedAt: !6181)
!6439 = !DILocation(line: 107, column: 59, scope: !3968, inlinedAt: !6181)
!6440 = !DILocation(line: 107, column: 62, scope: !3968, inlinedAt: !6181)
!6441 = !DILocation(line: 107, column: 50, scope: !3968, inlinedAt: !6181)
!6442 = !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !6181)
!6443 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !6184)
!6444 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !6184)
!6445 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !6184)
!6446 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !6184)
!6447 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !6184)
!6448 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !6184)
!6449 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !6184)
!6450 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !6184)
!6451 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !6184)
!6452 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !6184)
!6453 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !6184)
!6454 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !6184)
!6455 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !6184)
!6456 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !6184)
!6457 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !6184)
!6458 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !6184)
!6459 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !6184)
!6460 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !6184)
!6461 = !DILocation(line: 108, column: 37, scope: !3968, inlinedAt: !6181)
!6462 = !DILocation(line: 108, column: 45, scope: !3968, inlinedAt: !6181)
!6463 = !DILocation(line: 108, column: 39, scope: !3968, inlinedAt: !6181)
!6464 = !DILocation(line: 108, column: 38, scope: !3968, inlinedAt: !6181)
!6465 = !DILocation(line: 108, column: 48, scope: !3968, inlinedAt: !6181)
!6466 = !DILocation(line: 108, column: 47, scope: !3968, inlinedAt: !6181)
!6467 = !DILocation(line: 108, column: 35, scope: !3968, inlinedAt: !6181)
!6468 = !DILocation(line: 109, column: 57, scope: !3968, inlinedAt: !6181)
!6469 = !DILocation(line: 109, column: 59, scope: !3968, inlinedAt: !6181)
!6470 = !DILocation(line: 109, column: 42, scope: !3968, inlinedAt: !6181)
!6471 = !DILocation(line: 109, column: 40, scope: !3968, inlinedAt: !6181)
!6472 = !DILocation(line: 109, column: 63, scope: !3968, inlinedAt: !6181)
!6473 = !DILocation(line: 109, column: 66, scope: !3968, inlinedAt: !6181)
!6474 = !DILocation(line: 109, column: 70, scope: !3968, inlinedAt: !6181)
!6475 = !DILocation(line: 109, column: 33, scope: !3968, inlinedAt: !6181)
!6476 = !DILocation(line: 111, column: 17, scope: !3970, inlinedAt: !6181)
!6477 = !DILocation(line: 112, column: 37, scope: !4356, inlinedAt: !6181)
!6478 = !DILocation(line: 112, column: 33, scope: !4356, inlinedAt: !6181)
!6479 = !DILocation(line: 112, column: 40, scope: !4356, inlinedAt: !6181)
!6480 = !DILocation(line: 112, column: 39, scope: !4356, inlinedAt: !6181)
!6481 = !DILocation(line: 112, column: 31, scope: !4356, inlinedAt: !6181)
!6482 = !DILocation(line: 114, column: 22, scope: !3972, inlinedAt: !6181)
!6483 = !DILocation(line: 114, column: 26, scope: !3972, inlinedAt: !6181)
!6484 = !DILocation(line: 114, column: 24, scope: !3972, inlinedAt: !6181)
!6485 = !DILocation(line: 114, column: 20, scope: !3972, inlinedAt: !6181)
!6486 = !DILocation(line: 115, column: 21, scope: !4366, inlinedAt: !6181)
!6487 = !DILocation(line: 115, column: 21, scope: !3972, inlinedAt: !6181)
!6488 = !DILocation(line: 116, column: 35, scope: !4366, inlinedAt: !6181)
!6489 = !DILocation(line: 116, column: 37, scope: !4366, inlinedAt: !6181)
!6490 = !DILocation(line: 116, column: 36, scope: !4366, inlinedAt: !6181)
!6491 = !DILocation(line: 116, column: 32, scope: !4366, inlinedAt: !6181)
!6492 = !DILocation(line: 116, column: 40, scope: !4366, inlinedAt: !6181)
!6493 = !DILocation(line: 116, column: 47, scope: !4374, inlinedAt: !6181)
!6494 = !DILocation(line: 116, column: 32, scope: !4374, inlinedAt: !6181)
!6495 = !DILocation(line: 116, column: 60, scope: !4377, inlinedAt: !6181)
!6496 = !DILocation(line: 116, column: 59, scope: !4377, inlinedAt: !6181)
!6497 = !DILocation(line: 116, column: 32, scope: !4377, inlinedAt: !6181)
!6498 = !DILocation(line: 116, column: 32, scope: !4381, inlinedAt: !6181)
!6499 = !DILocation(line: 116, column: 25, scope: !4381, inlinedAt: !6181)
!6500 = !DILocation(line: 116, column: 27, scope: !4381, inlinedAt: !6181)
!6501 = !DILocation(line: 116, column: 26, scope: !4381, inlinedAt: !6181)
!6502 = !DILocation(line: 116, column: 21, scope: !4381, inlinedAt: !6181)
!6503 = !DILocation(line: 116, column: 30, scope: !4381, inlinedAt: !6181)
!6504 = !DILocation(line: 117, column: 25, scope: !4388, inlinedAt: !6181)
!6505 = !DILocation(line: 117, column: 21, scope: !4388, inlinedAt: !6181)
!6506 = !DILocation(line: 117, column: 28, scope: !4388, inlinedAt: !6181)
!6507 = !DILocation(line: 117, column: 21, scope: !3972, inlinedAt: !6181)
!6508 = !DILocation(line: 118, column: 28, scope: !4388, inlinedAt: !6181)
!6509 = !DILocation(line: 118, column: 21, scope: !4388, inlinedAt: !6181)
!6510 = !DILocation(line: 119, column: 28, scope: !3972, inlinedAt: !6181)
!6511 = !DILocation(line: 119, column: 38, scope: !3972, inlinedAt: !6181)
!6512 = !DILocation(line: 119, column: 37, scope: !3972, inlinedAt: !6181)
!6513 = !DILocation(line: 119, column: 25, scope: !3972, inlinedAt: !6181)
!6514 = !DILocation(line: 120, column: 23, scope: !3972, inlinedAt: !6181)
!6515 = !DILocation(line: 120, column: 26, scope: !3972, inlinedAt: !6181)
!6516 = !DILocation(line: 120, column: 25, scope: !3972, inlinedAt: !6181)
!6517 = !DILocation(line: 120, column: 20, scope: !3972, inlinedAt: !6181)
!6518 = !DILocation(line: 99, column: 35, scope: !4403, inlinedAt: !6181)
!6519 = !DILocation(line: 99, column: 13, scope: !4403, inlinedAt: !6181)
!6520 = !DILocation(line: 122, column: 9, scope: !3975, inlinedAt: !6181)
!6521 = !DILocation(line: 123, column: 20, scope: !4409, inlinedAt: !6181)
!6522 = !DILocation(line: 123, column: 18, scope: !4409, inlinedAt: !6181)
!6523 = !DILocation(line: 123, column: 25, scope: !4413, inlinedAt: !6181)
!6524 = !DILocation(line: 123, column: 29, scope: !4413, inlinedAt: !6181)
!6525 = !DILocation(line: 123, column: 27, scope: !4413, inlinedAt: !6181)
!6526 = !DILocation(line: 123, column: 13, scope: !4413, inlinedAt: !6181)
!6527 = !DILocation(line: 124, column: 33, scope: !4419, inlinedAt: !6181)
!6528 = !DILocation(line: 124, column: 29, scope: !4419, inlinedAt: !6181)
!6529 = !DILocation(line: 124, column: 36, scope: !4419, inlinedAt: !6181)
!6530 = !DILocation(line: 124, column: 35, scope: !4419, inlinedAt: !6181)
!6531 = !DILocation(line: 124, column: 27, scope: !4419, inlinedAt: !6181)
!6532 = !DILocation(line: 125, column: 28, scope: !4419, inlinedAt: !6181)
!6533 = !DILocation(line: 125, column: 38, scope: !4419, inlinedAt: !6181)
!6534 = !DILocation(line: 125, column: 37, scope: !4419, inlinedAt: !6181)
!6535 = !DILocation(line: 125, column: 25, scope: !4419, inlinedAt: !6181)
!6536 = !DILocation(line: 126, column: 21, scope: !4429, inlinedAt: !6181)
!6537 = !DILocation(line: 126, column: 21, scope: !4419, inlinedAt: !6181)
!6538 = !DILocation(line: 127, column: 32, scope: !4429, inlinedAt: !6181)
!6539 = !DILocation(line: 127, column: 25, scope: !4429, inlinedAt: !6181)
!6540 = !DILocation(line: 127, column: 27, scope: !4429, inlinedAt: !6181)
!6541 = !DILocation(line: 127, column: 26, scope: !4429, inlinedAt: !6181)
!6542 = !DILocation(line: 127, column: 21, scope: !4429, inlinedAt: !6181)
!6543 = !DILocation(line: 127, column: 30, scope: !4429, inlinedAt: !6181)
!6544 = !DILocation(line: 128, column: 27, scope: !4419, inlinedAt: !6181)
!6545 = !DILocation(line: 128, column: 29, scope: !4419, inlinedAt: !6181)
!6546 = !DILocation(line: 128, column: 28, scope: !4419, inlinedAt: !6181)
!6547 = !DILocation(line: 128, column: 24, scope: !4419, inlinedAt: !6181)
!6548 = !DILocation(line: 128, column: 34, scope: !4419, inlinedAt: !6181)
!6549 = !DILocation(line: 128, column: 32, scope: !4419, inlinedAt: !6181)
!6550 = !DILocation(line: 128, column: 49, scope: !4419, inlinedAt: !6181)
!6551 = !DILocation(line: 128, column: 51, scope: !4419, inlinedAt: !6181)
!6552 = !DILocation(line: 128, column: 50, scope: !4419, inlinedAt: !6181)
!6553 = !DILocation(line: 128, column: 46, scope: !4419, inlinedAt: !6181)
!6554 = !DILocation(line: 128, column: 56, scope: !4419, inlinedAt: !6181)
!6555 = !DILocation(line: 128, column: 54, scope: !4419, inlinedAt: !6181)
!6556 = !DILocation(line: 128, column: 44, scope: !4419, inlinedAt: !6181)
!6557 = !DILocation(line: 128, column: 20, scope: !4419, inlinedAt: !6181)
!6558 = !DILocation(line: 123, column: 35, scope: !4452, inlinedAt: !6181)
!6559 = !DILocation(line: 123, column: 13, scope: !4452, inlinedAt: !6181)
!6560 = !DILocation(line: 131, column: 17, scope: !3956, inlinedAt: !6181)
!6561 = !DILocation(line: 131, column: 22, scope: !3956, inlinedAt: !6181)
!6562 = !DILocation(line: 131, column: 20, scope: !3956, inlinedAt: !6181)
!6563 = !DILocation(line: 131, column: 31, scope: !3956, inlinedAt: !6181)
!6564 = !DILocation(line: 131, column: 29, scope: !3956, inlinedAt: !6181)
!6565 = !DILocation(line: 131, column: 14, scope: !3956, inlinedAt: !6181)
!6566 = !DILocation(line: 132, column: 20, scope: !3956, inlinedAt: !6181)
!6567 = !DILocation(line: 132, column: 17, scope: !3956, inlinedAt: !6181)
!6568 = !DILocation(line: 133, column: 13, scope: !4465, inlinedAt: !6181)
!6569 = !DILocation(line: 133, column: 21, scope: !4465, inlinedAt: !6181)
!6570 = !DILocation(line: 133, column: 18, scope: !4465, inlinedAt: !6181)
!6571 = !DILocation(line: 133, column: 13, scope: !3956, inlinedAt: !6181)
!6572 = !DILocation(line: 134, column: 20, scope: !4465, inlinedAt: !6181)
!6573 = !DILocation(line: 134, column: 13, scope: !4465, inlinedAt: !6181)
!6574 = !DILocation(line: 135, column: 13, scope: !3955, inlinedAt: !6181)
!6575 = !DILocation(line: 135, column: 13, scope: !3956, inlinedAt: !6181)
!6576 = !DILocation(line: 136, column: 22, scope: !3954, inlinedAt: !6181)
!6577 = !DILocation(line: 136, column: 53, scope: !3954, inlinedAt: !6181)
!6578 = !DILocation(line: 136, column: 26, scope: !3954, inlinedAt: !6181)
!6579 = !DILocation(line: 136, column: 47, scope: !3954, inlinedAt: !6181)
!6580 = !DILocation(line: 136, column: 49, scope: !3954, inlinedAt: !6181)
!6581 = !DILocation(line: 136, column: 90, scope: !3954, inlinedAt: !6181)
!6582 = !DILocation(line: 136, column: 62, scope: !3954, inlinedAt: !6181)
!6583 = !DILocation(line: 136, column: 84, scope: !3954, inlinedAt: !6181)
!6584 = !DILocation(line: 136, column: 86, scope: !3954, inlinedAt: !6181)
!6585 = !DILocation(line: 136, column: 13, scope: !3954, inlinedAt: !6181)
!6586 = !DILocation(line: 137, column: 17, scope: !4484, inlinedAt: !6181)
!6587 = !DILocation(line: 137, column: 17, scope: !3954, inlinedAt: !6181)
!6588 = !DILocation(line: 138, column: 24, scope: !4487, inlinedAt: !6181)
!6589 = !DILocation(line: 138, column: 22, scope: !4487, inlinedAt: !6181)
!6590 = !DILocation(line: 138, column: 29, scope: !4490, inlinedAt: !6181)
!6591 = !DILocation(line: 138, column: 33, scope: !4490, inlinedAt: !6181)
!6592 = !DILocation(line: 138, column: 31, scope: !4490, inlinedAt: !6181)
!6593 = !DILocation(line: 138, column: 17, scope: !4490, inlinedAt: !6181)
!6594 = !DILocation(line: 139, column: 55, scope: !4496, inlinedAt: !6181)
!6595 = !DILocation(line: 139, column: 62, scope: !4496, inlinedAt: !6181)
!6596 = !DILocation(line: 139, column: 61, scope: !4496, inlinedAt: !6181)
!6597 = !DILocation(line: 139, column: 66, scope: !4496, inlinedAt: !6181)
!6598 = !DILocation(line: 139, column: 65, scope: !4496, inlinedAt: !6181)
!6599 = !DILocation(line: 139, column: 25, scope: !4496, inlinedAt: !6181)
!6600 = !DILocation(line: 139, column: 49, scope: !4496, inlinedAt: !6181)
!6601 = !DILocation(line: 139, column: 51, scope: !4496, inlinedAt: !6181)
!6602 = !DILocation(line: 139, column: 69, scope: !4496, inlinedAt: !6181)
!6603 = !DILocation(line: 139, column: 25, scope: !4491, inlinedAt: !6181)
!6604 = !DILocation(line: 140, column: 34, scope: !4496, inlinedAt: !6181)
!6605 = !DILocation(line: 140, column: 44, scope: !4496, inlinedAt: !6181)
!6606 = !DILocation(line: 140, column: 46, scope: !4496, inlinedAt: !6181)
!6607 = !DILocation(line: 140, column: 45, scope: !4496, inlinedAt: !6181)
!6608 = !DILocation(line: 140, column: 41, scope: !4496, inlinedAt: !6181)
!6609 = !DILocation(line: 140, column: 49, scope: !4496, inlinedAt: !6181)
!6610 = !DILocation(line: 140, column: 25, scope: !4496, inlinedAt: !6181)
!6611 = !DILocation(line: 138, column: 39, scope: !4514, inlinedAt: !6181)
!6612 = !DILocation(line: 138, column: 17, scope: !4514, inlinedAt: !6181)
!6613 = !DILocation(line: 140, column: 55, scope: !4519, inlinedAt: !6181)
!6614 = !DILocation(line: 141, column: 17, scope: !3953, inlinedAt: !6181)
!6615 = !DILocation(line: 141, column: 17, scope: !3954, inlinedAt: !6181)
!6616 = !DILocation(line: 142, column: 24, scope: !3951, inlinedAt: !6181)
!6617 = !DILocation(line: 142, column: 22, scope: !3951, inlinedAt: !6181)
!6618 = !DILocation(line: 142, column: 29, scope: !4525, inlinedAt: !6181)
!6619 = !DILocation(line: 142, column: 31, scope: !4525, inlinedAt: !6181)
!6620 = !DILocation(line: 142, column: 17, scope: !4525, inlinedAt: !6181)
!6621 = !DILocation(line: 143, column: 55, scope: !3948, inlinedAt: !6181)
!6622 = !DILocation(line: 143, column: 61, scope: !3948, inlinedAt: !6181)
!6623 = !DILocation(line: 143, column: 64, scope: !3948, inlinedAt: !6181)
!6624 = !DILocation(line: 143, column: 63, scope: !3948, inlinedAt: !6181)
!6625 = !DILocation(line: 143, column: 25, scope: !3948, inlinedAt: !6181)
!6626 = !DILocation(line: 143, column: 49, scope: !3948, inlinedAt: !6181)
!6627 = !DILocation(line: 143, column: 51, scope: !3948, inlinedAt: !6181)
!6628 = !DILocation(line: 143, column: 67, scope: !3948, inlinedAt: !6181)
!6629 = !DILocation(line: 143, column: 25, scope: !3949, inlinedAt: !6181)
!6630 = !DILocation(line: 144, column: 68, scope: !3947, inlinedAt: !6181)
!6631 = !DILocation(line: 144, column: 70, scope: !3947, inlinedAt: !6181)
!6632 = !DILocation(line: 144, column: 69, scope: !3947, inlinedAt: !6181)
!6633 = !DILocation(line: 144, column: 65, scope: !3947, inlinedAt: !6181)
!6634 = !DILocation(line: 144, column: 59, scope: !3947, inlinedAt: !6181)
!6635 = !DILocation(line: 144, column: 75, scope: !3947, inlinedAt: !6181)
!6636 = !DILocation(line: 144, column: 78, scope: !3947, inlinedAt: !6181)
!6637 = !DILocation(line: 144, column: 53, scope: !4545, inlinedAt: !6181)
!6638 = !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !6181)
!6639 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !6180)
!6640 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !6180)
!6641 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !6180)
!6642 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !6180)
!6643 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !6180)
!6644 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !6180)
!6645 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !6180)
!6646 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !6180)
!6647 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !6180)
!6648 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !6180)
!6649 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !6180)
!6650 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !6180)
!6651 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !6180)
!6652 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !6180)
!6653 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !6180)
!6654 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !6180)
!6655 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !6180)
!6656 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !6180)
!6657 = !DILocation(line: 145, column: 56, scope: !3947, inlinedAt: !6181)
!6658 = !DILocation(line: 145, column: 61, scope: !3947, inlinedAt: !6181)
!6659 = !DILocation(line: 145, column: 41, scope: !3947, inlinedAt: !6181)
!6660 = !DILocation(line: 145, column: 39, scope: !3947, inlinedAt: !6181)
!6661 = !DILocation(line: 147, column: 34, scope: !3947, inlinedAt: !6181)
!6662 = !DILocation(line: 147, column: 38, scope: !3947, inlinedAt: !6181)
!6663 = !DILocation(line: 147, column: 42, scope: !3947, inlinedAt: !6181)
!6664 = !DILocation(line: 147, column: 46, scope: !3947, inlinedAt: !6181)
!6665 = !DILocation(line: 147, column: 58, scope: !3947, inlinedAt: !6181)
!6666 = !DILocation(line: 147, column: 62, scope: !3947, inlinedAt: !6181)
!6667 = !DILocation(line: 147, column: 66, scope: !3947, inlinedAt: !6181)
!6668 = !DILocation(line: 147, column: 54, scope: !3947, inlinedAt: !6181)
!6669 = !DILocation(line: 147, column: 72, scope: !3947, inlinedAt: !6181)
!6670 = !DILocation(line: 147, column: 25, scope: !3947, inlinedAt: !6181)
!6671 = !DILocation(line: 148, column: 35, scope: !3947, inlinedAt: !6181)
!6672 = !DILocation(line: 148, column: 39, scope: !3947, inlinedAt: !6181)
!6673 = !DILocation(line: 148, column: 44, scope: !3947, inlinedAt: !6181)
!6674 = !DILocation(line: 148, column: 25, scope: !3947, inlinedAt: !6181)
!6675 = !DILocation(line: 149, column: 21, scope: !3947, inlinedAt: !6181)
!6676 = !DILocation(line: 142, column: 37, scope: !4585, inlinedAt: !6181)
!6677 = !DILocation(line: 142, column: 17, scope: !4585, inlinedAt: !6181)
!6678 = !DILocation(line: 151, column: 13, scope: !3952, inlinedAt: !6181)
!6679 = !DILocation(line: 152, column: 9, scope: !3954, inlinedAt: !6181)
!6680 = !DILocation(line: 86, column: 32, scope: !4592, inlinedAt: !6181)
!6681 = !DILocation(line: 86, column: 29, scope: !4592, inlinedAt: !6181)
!6682 = !DILocation(line: 86, column: 5, scope: !4592, inlinedAt: !6181)
!6683 = !DILocation(line: 155, column: 9, scope: !4598, inlinedAt: !6181)
!6684 = !DILocation(line: 155, column: 9, scope: !3959, inlinedAt: !6181)
!6685 = !DILocation(line: 156, column: 17, scope: !4598, inlinedAt: !6181)
!6686 = !DILocation(line: 156, column: 10, scope: !4598, inlinedAt: !6181)
!6687 = !DILocation(line: 156, column: 15, scope: !4598, inlinedAt: !6181)
!6688 = !DILocation(line: 156, column: 9, scope: !4598, inlinedAt: !6181)
!6689 = !DILocation(line: 157, column: 9, scope: !4605, inlinedAt: !6181)
!6690 = !DILocation(line: 157, column: 9, scope: !3959, inlinedAt: !6181)
!6691 = !DILocation(line: 158, column: 19, scope: !4605, inlinedAt: !6181)
!6692 = !DILocation(line: 158, column: 10, scope: !4605, inlinedAt: !6181)
!6693 = !DILocation(line: 158, column: 17, scope: !4605, inlinedAt: !6181)
!6694 = !DILocation(line: 158, column: 9, scope: !4605, inlinedAt: !6181)
!6695 = !DILocation(line: 159, column: 12, scope: !3959, inlinedAt: !6181)
!6696 = !DILocation(line: 159, column: 5, scope: !3959, inlinedAt: !6181)
!6697 = !DILocation(line: 160, column: 1, scope: !3959, inlinedAt: !6181)
!6698 = !DILocation(line: 189, column: 247, scope: !6178)
!6699 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_ESC_RTZ", scope: !963, file: !963, line: 191, type: !967, isLocal: true, isDefinition: true, scopeLine: 191, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!6700 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !6701)
!6701 = distinct !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !6702)
!6702 = distinct !DILocation(line: 191, column: 256, scope: !6699)
!6703 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !6701)
!6704 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !6705)
!6705 = distinct !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !6702)
!6706 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !6705)
!6707 = !DILocation(line: 42, column: 55, scope: !3959, inlinedAt: !6702)
!6708 = !DILocation(line: 43, column: 48, scope: !3959, inlinedAt: !6702)
!6709 = !DILocation(line: 43, column: 65, scope: !3959, inlinedAt: !6702)
!6710 = !DILocation(line: 43, column: 76, scope: !3959, inlinedAt: !6702)
!6711 = !DILocation(line: 44, column: 46, scope: !3959, inlinedAt: !6702)
!6712 = !DILocation(line: 44, column: 58, scope: !3959, inlinedAt: !6702)
!6713 = !DILocation(line: 44, column: 68, scope: !3959, inlinedAt: !6702)
!6714 = !DILocation(line: 45, column: 37, scope: !3959, inlinedAt: !6702)
!6715 = !DILocation(line: 45, column: 53, scope: !3959, inlinedAt: !6702)
!6716 = !DILocation(line: 45, column: 73, scope: !3959, inlinedAt: !6702)
!6717 = !DILocation(line: 46, column: 38, scope: !3959, inlinedAt: !6702)
!6718 = !DILocation(line: 46, column: 51, scope: !3959, inlinedAt: !6702)
!6719 = !DILocation(line: 46, column: 63, scope: !3959, inlinedAt: !6702)
!6720 = !DILocation(line: 46, column: 76, scope: !3959, inlinedAt: !6702)
!6721 = !DILocation(line: 47, column: 37, scope: !3959, inlinedAt: !6702)
!6722 = !DILocation(line: 47, column: 50, scope: !3959, inlinedAt: !6702)
!6723 = !DILocation(line: 47, column: 62, scope: !3959, inlinedAt: !6702)
!6724 = !DILocation(line: 47, column: 76, scope: !3959, inlinedAt: !6702)
!6725 = !DILocation(line: 48, column: 45, scope: !3959, inlinedAt: !6702)
!6726 = !DILocation(line: 50, column: 15, scope: !3959, inlinedAt: !6702)
!6727 = !DILocation(line: 51, column: 17, scope: !3959, inlinedAt: !6702)
!6728 = !DILocation(line: 52, column: 17, scope: !3959, inlinedAt: !6702)
!6729 = !DILocation(line: 53, column: 17, scope: !3959, inlinedAt: !6702)
!6730 = !DILocation(line: 54, column: 17, scope: !3959, inlinedAt: !6702)
!6731 = !DILocation(line: 55, column: 9, scope: !3959, inlinedAt: !6702)
!6732 = !DILocation(line: 55, column: 12, scope: !3959, inlinedAt: !6702)
!6733 = !DILocation(line: 56, column: 11, scope: !3959, inlinedAt: !6702)
!6734 = !DILocation(line: 57, column: 11, scope: !3959, inlinedAt: !6702)
!6735 = !DILocation(line: 58, column: 15, scope: !3959, inlinedAt: !6702)
!6736 = !DILocation(line: 59, column: 9, scope: !3959, inlinedAt: !6702)
!6737 = !DILocation(line: 60, column: 9, scope: !3959, inlinedAt: !6702)
!6738 = !DILocation(line: 87, column: 22, scope: !3956, inlinedAt: !6702)
!6739 = !DILocation(line: 88, column: 14, scope: !3956, inlinedAt: !6702)
!6740 = !DILocation(line: 89, column: 13, scope: !3956, inlinedAt: !6702)
!6741 = !DILocation(line: 90, column: 13, scope: !3956, inlinedAt: !6702)
!6742 = !DILocation(line: 91, column: 15, scope: !3956, inlinedAt: !6702)
!6743 = !DILocation(line: 91, column: 26, scope: !3956, inlinedAt: !6702)
!6744 = !DILocation(line: 100, column: 23, scope: !3972, inlinedAt: !6702)
!6745 = !DILocation(line: 101, column: 23, scope: !3972, inlinedAt: !6702)
!6746 = !DILocation(line: 107, column: 29, scope: !3968, inlinedAt: !6702)
!6747 = !DILocation(line: 144, column: 29, scope: !3947, inlinedAt: !6702)
!6748 = !DILocation(line: 145, column: 29, scope: !3947, inlinedAt: !6702)
!6749 = !DILocalVariable(name: "s", arg: 1, scope: !6699, file: !963, line: 191, type: !970)
!6750 = !DILocation(line: 191, column: 75, scope: !6699)
!6751 = !DILocalVariable(name: "pb", arg: 2, scope: !6699, file: !963, line: 191, type: !2645)
!6752 = !DILocation(line: 191, column: 93, scope: !6699)
!6753 = !DILocalVariable(name: "in", arg: 3, scope: !6699, file: !963, line: 191, type: !1103)
!6754 = !DILocation(line: 191, column: 110, scope: !6699)
!6755 = !DILocalVariable(name: "quant", arg: 4, scope: !6699, file: !963, line: 191, type: !1102)
!6756 = !DILocation(line: 191, column: 121, scope: !6699)
!6757 = !DILocalVariable(name: "scaled", arg: 5, scope: !6699, file: !963, line: 191, type: !1103)
!6758 = !DILocation(line: 191, column: 141, scope: !6699)
!6759 = !DILocalVariable(name: "size", arg: 6, scope: !6699, file: !963, line: 191, type: !992)
!6760 = !DILocation(line: 191, column: 153, scope: !6699)
!6761 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !6699, file: !963, line: 191, type: !992)
!6762 = !DILocation(line: 191, column: 163, scope: !6699)
!6763 = !DILocalVariable(name: "cb", arg: 8, scope: !6699, file: !963, line: 191, type: !992)
!6764 = !DILocation(line: 191, column: 178, scope: !6699)
!6765 = !DILocalVariable(name: "lambda", arg: 9, scope: !6699, file: !963, line: 191, type: !1104)
!6766 = !DILocation(line: 191, column: 194, scope: !6699)
!6767 = !DILocalVariable(name: "uplim", arg: 10, scope: !6699, file: !963, line: 191, type: !1104)
!6768 = !DILocation(line: 191, column: 214, scope: !6699)
!6769 = !DILocalVariable(name: "bits", arg: 11, scope: !6699, file: !963, line: 191, type: !1963)
!6770 = !DILocation(line: 191, column: 226, scope: !6699)
!6771 = !DILocalVariable(name: "energy", arg: 12, scope: !6699, file: !963, line: 191, type: !1102)
!6772 = !DILocation(line: 191, column: 239, scope: !6699)
!6773 = !DILocation(line: 191, column: 296, scope: !6699)
!6774 = !DILocation(line: 191, column: 299, scope: !6699)
!6775 = !DILocation(line: 191, column: 303, scope: !6699)
!6776 = !DILocation(line: 191, column: 307, scope: !6699)
!6777 = !DILocation(line: 191, column: 314, scope: !6699)
!6778 = !DILocation(line: 191, column: 322, scope: !6699)
!6779 = !DILocation(line: 191, column: 328, scope: !6699)
!6780 = !DILocation(line: 191, column: 356, scope: !6699)
!6781 = !DILocation(line: 191, column: 364, scope: !6699)
!6782 = !DILocation(line: 191, column: 371, scope: !6699)
!6783 = !DILocation(line: 191, column: 377, scope: !6699)
!6784 = !DILocation(line: 191, column: 256, scope: !6699)
!6785 = !DILocation(line: 50, column: 29, scope: !3959, inlinedAt: !6702)
!6786 = !DILocation(line: 50, column: 27, scope: !3959, inlinedAt: !6702)
!6787 = !DILocation(line: 50, column: 39, scope: !3959, inlinedAt: !6702)
!6788 = !DILocation(line: 50, column: 45, scope: !3959, inlinedAt: !6702)
!6789 = !DILocation(line: 51, column: 40, scope: !3959, inlinedAt: !6702)
!6790 = !DILocation(line: 51, column: 21, scope: !3959, inlinedAt: !6702)
!6791 = !DILocation(line: 52, column: 42, scope: !3959, inlinedAt: !6702)
!6792 = !DILocation(line: 52, column: 23, scope: !3959, inlinedAt: !6702)
!6793 = !DILocation(line: 53, column: 47, scope: !3959, inlinedAt: !6702)
!6794 = !DILocation(line: 53, column: 45, scope: !3959, inlinedAt: !6702)
!6795 = !DILocation(line: 53, column: 57, scope: !3959, inlinedAt: !6702)
!6796 = !DILocation(line: 53, column: 63, scope: !3959, inlinedAt: !6702)
!6797 = !DILocation(line: 53, column: 22, scope: !3959, inlinedAt: !6702)
!6798 = !DILocation(line: 54, column: 44, scope: !3959, inlinedAt: !6702)
!6799 = !DILocation(line: 54, column: 43, scope: !3959, inlinedAt: !6702)
!6800 = !DILocation(line: 58, column: 21, scope: !3959, inlinedAt: !6702)
!6801 = !DILocation(line: 62, column: 9, scope: !4116, inlinedAt: !6702)
!6802 = !DILocation(line: 62, column: 17, scope: !4116, inlinedAt: !6702)
!6803 = !DILocation(line: 62, column: 20, scope: !4119, inlinedAt: !6702)
!6804 = !DILocation(line: 62, column: 29, scope: !4119, inlinedAt: !6702)
!6805 = !DILocation(line: 62, column: 32, scope: !4122, inlinedAt: !6702)
!6806 = !DILocation(line: 62, column: 9, scope: !4122, inlinedAt: !6702)
!6807 = !DILocation(line: 63, column: 16, scope: !4125, inlinedAt: !6702)
!6808 = !DILocation(line: 63, column: 14, scope: !4125, inlinedAt: !6702)
!6809 = !DILocation(line: 63, column: 21, scope: !4129, inlinedAt: !6702)
!6810 = !DILocation(line: 63, column: 25, scope: !4129, inlinedAt: !6702)
!6811 = !DILocation(line: 63, column: 23, scope: !4129, inlinedAt: !6702)
!6812 = !DILocation(line: 63, column: 9, scope: !4129, inlinedAt: !6702)
!6813 = !DILocation(line: 64, column: 24, scope: !4130, inlinedAt: !6702)
!6814 = !DILocation(line: 64, column: 21, scope: !4130, inlinedAt: !6702)
!6815 = !DILocation(line: 64, column: 30, scope: !4130, inlinedAt: !6702)
!6816 = !DILocation(line: 64, column: 27, scope: !4130, inlinedAt: !6702)
!6817 = !DILocation(line: 64, column: 26, scope: !4130, inlinedAt: !6702)
!6818 = !DILocation(line: 64, column: 18, scope: !4130, inlinedAt: !6702)
!6819 = !DILocation(line: 63, column: 32, scope: !4141, inlinedAt: !6702)
!6820 = !DILocation(line: 63, column: 9, scope: !4141, inlinedAt: !6702)
!6821 = !DILocation(line: 65, column: 13, scope: !4146, inlinedAt: !6702)
!6822 = !DILocation(line: 65, column: 13, scope: !4126, inlinedAt: !6702)
!6823 = !DILocation(line: 66, column: 14, scope: !4146, inlinedAt: !6702)
!6824 = !DILocation(line: 66, column: 19, scope: !4146, inlinedAt: !6702)
!6825 = !DILocation(line: 66, column: 13, scope: !4146, inlinedAt: !6702)
!6826 = !DILocation(line: 67, column: 13, scope: !4152, inlinedAt: !6702)
!6827 = !DILocation(line: 67, column: 13, scope: !4126, inlinedAt: !6702)
!6828 = !DILocation(line: 68, column: 23, scope: !4152, inlinedAt: !6702)
!6829 = !DILocation(line: 68, column: 14, scope: !4152, inlinedAt: !6702)
!6830 = !DILocation(line: 68, column: 21, scope: !4152, inlinedAt: !6702)
!6831 = !DILocation(line: 68, column: 13, scope: !4152, inlinedAt: !6702)
!6832 = !DILocation(line: 69, column: 13, scope: !4159, inlinedAt: !6702)
!6833 = !DILocation(line: 69, column: 13, scope: !4126, inlinedAt: !6702)
!6834 = !DILocation(line: 70, column: 20, scope: !4162, inlinedAt: !6702)
!6835 = !DILocation(line: 70, column: 18, scope: !4162, inlinedAt: !6702)
!6836 = !DILocation(line: 70, column: 25, scope: !4166, inlinedAt: !6702)
!6837 = !DILocation(line: 70, column: 29, scope: !4166, inlinedAt: !6702)
!6838 = !DILocation(line: 70, column: 27, scope: !4166, inlinedAt: !6702)
!6839 = !DILocation(line: 70, column: 13, scope: !4166, inlinedAt: !6702)
!6840 = !DILocation(line: 71, column: 24, scope: !4172, inlinedAt: !6702)
!6841 = !DILocation(line: 71, column: 22, scope: !4172, inlinedAt: !6702)
!6842 = !DILocation(line: 71, column: 29, scope: !4175, inlinedAt: !6702)
!6843 = !DILocation(line: 71, column: 33, scope: !4175, inlinedAt: !6702)
!6844 = !DILocation(line: 71, column: 31, scope: !4175, inlinedAt: !6702)
!6845 = !DILocation(line: 71, column: 17, scope: !4175, inlinedAt: !6702)
!6846 = !DILocation(line: 72, column: 25, scope: !4176, inlinedAt: !6702)
!6847 = !DILocation(line: 72, column: 27, scope: !4176, inlinedAt: !6702)
!6848 = !DILocation(line: 72, column: 26, scope: !4176, inlinedAt: !6702)
!6849 = !DILocation(line: 72, column: 21, scope: !4176, inlinedAt: !6702)
!6850 = !DILocation(line: 72, column: 30, scope: !4176, inlinedAt: !6702)
!6851 = !DILocation(line: 71, column: 39, scope: !4186, inlinedAt: !6702)
!6852 = !DILocation(line: 71, column: 17, scope: !4186, inlinedAt: !6702)
!6853 = !DILocation(line: 70, column: 40, scope: !4191, inlinedAt: !6702)
!6854 = !DILocation(line: 70, column: 37, scope: !4191, inlinedAt: !6702)
!6855 = !DILocation(line: 70, column: 13, scope: !4191, inlinedAt: !6702)
!6856 = !DILocation(line: 73, column: 9, scope: !4163, inlinedAt: !6702)
!6857 = !DILocation(line: 74, column: 16, scope: !4126, inlinedAt: !6702)
!6858 = !DILocation(line: 74, column: 23, scope: !4126, inlinedAt: !6702)
!6859 = !DILocation(line: 74, column: 21, scope: !4126, inlinedAt: !6702)
!6860 = !DILocation(line: 74, column: 9, scope: !4126, inlinedAt: !6702)
!6861 = !DILocation(line: 76, column: 10, scope: !4202, inlinedAt: !6702)
!6862 = !DILocation(line: 76, column: 9, scope: !3959, inlinedAt: !6702)
!6863 = !DILocation(line: 77, column: 9, scope: !4205, inlinedAt: !6702)
!6864 = !DILocation(line: 77, column: 12, scope: !4205, inlinedAt: !6702)
!6865 = !DILocation(line: 77, column: 22, scope: !4205, inlinedAt: !6702)
!6866 = !DILocation(line: 77, column: 25, scope: !4205, inlinedAt: !6702)
!6867 = !DILocation(line: 77, column: 33, scope: !4205, inlinedAt: !6702)
!6868 = !DILocation(line: 77, column: 37, scope: !4205, inlinedAt: !6702)
!6869 = !DILocation(line: 78, column: 18, scope: !4205, inlinedAt: !6702)
!6870 = !DILocation(line: 78, column: 21, scope: !4205, inlinedAt: !6702)
!6871 = !DILocation(line: 78, column: 16, scope: !4205, inlinedAt: !6702)
!6872 = !DILocation(line: 79, column: 5, scope: !4205, inlinedAt: !6702)
!6873 = !DILocation(line: 80, column: 5, scope: !3959, inlinedAt: !6702)
!6874 = !DILocation(line: 80, column: 8, scope: !3959, inlinedAt: !6702)
!6875 = !DILocation(line: 80, column: 20, scope: !3959, inlinedAt: !6702)
!6876 = !DILocation(line: 80, column: 23, scope: !3959, inlinedAt: !6702)
!6877 = !DILocation(line: 80, column: 31, scope: !3959, inlinedAt: !6702)
!6878 = !DILocation(line: 80, column: 35, scope: !3959, inlinedAt: !6702)
!6879 = !DILocation(line: 80, column: 43, scope: !3959, inlinedAt: !6702)
!6880 = !DILocation(line: 80, column: 50, scope: !3959, inlinedAt: !6702)
!6881 = !DILocation(line: 80, column: 49, scope: !3959, inlinedAt: !6702)
!6882 = !DILocation(line: 80, column: 77, scope: !3959, inlinedAt: !6702)
!6883 = !DILocation(line: 80, column: 63, scope: !3959, inlinedAt: !6702)
!6884 = !DILocation(line: 80, column: 82, scope: !3959, inlinedAt: !6702)
!6885 = !DILocation(line: 80, column: 87, scope: !3959, inlinedAt: !6702)
!6886 = !DILocation(line: 81, column: 9, scope: !4229, inlinedAt: !6702)
!6887 = !DILocation(line: 81, column: 9, scope: !3959, inlinedAt: !6702)
!6888 = !DILocation(line: 82, column: 13, scope: !4232, inlinedAt: !6702)
!6889 = !DILocation(line: 83, column: 5, scope: !4232, inlinedAt: !6702)
!6890 = !DILocation(line: 84, column: 29, scope: !4235, inlinedAt: !6702)
!6891 = !DILocation(line: 84, column: 15, scope: !4235, inlinedAt: !6702)
!6892 = !DILocation(line: 84, column: 13, scope: !4235, inlinedAt: !6702)
!6893 = !DILocation(line: 86, column: 12, scope: !3958, inlinedAt: !6702)
!6894 = !DILocation(line: 86, column: 10, scope: !3958, inlinedAt: !6702)
!6895 = !DILocation(line: 86, column: 17, scope: !4241, inlinedAt: !6702)
!6896 = !DILocation(line: 86, column: 21, scope: !4241, inlinedAt: !6702)
!6897 = !DILocation(line: 86, column: 19, scope: !4241, inlinedAt: !6702)
!6898 = !DILocation(line: 86, column: 5, scope: !4241, inlinedAt: !6702)
!6899 = !DILocation(line: 88, column: 23, scope: !3956, inlinedAt: !6702)
!6900 = !DILocation(line: 88, column: 26, scope: !3956, inlinedAt: !6702)
!6901 = !DILocation(line: 88, column: 35, scope: !3956, inlinedAt: !6702)
!6902 = !DILocation(line: 88, column: 33, scope: !3956, inlinedAt: !6702)
!6903 = !DILocation(line: 92, column: 16, scope: !4250, inlinedAt: !6702)
!6904 = !DILocation(line: 92, column: 14, scope: !4250, inlinedAt: !6702)
!6905 = !DILocation(line: 92, column: 21, scope: !4253, inlinedAt: !6702)
!6906 = !DILocation(line: 92, column: 25, scope: !4253, inlinedAt: !6702)
!6907 = !DILocation(line: 92, column: 23, scope: !4253, inlinedAt: !6702)
!6908 = !DILocation(line: 92, column: 9, scope: !4253, inlinedAt: !6702)
!6909 = !DILocation(line: 93, column: 36, scope: !4259, inlinedAt: !6702)
!6910 = !DILocation(line: 93, column: 23, scope: !4259, inlinedAt: !6702)
!6911 = !DILocation(line: 93, column: 20, scope: !4259, inlinedAt: !6702)
!6912 = !DILocation(line: 94, column: 30, scope: !4259, inlinedAt: !6702)
!6913 = !DILocation(line: 94, column: 23, scope: !4259, inlinedAt: !6702)
!6914 = !DILocation(line: 94, column: 35, scope: !4259, inlinedAt: !6702)
!6915 = !DILocation(line: 94, column: 33, scope: !4259, inlinedAt: !6702)
!6916 = !DILocation(line: 94, column: 20, scope: !4259, inlinedAt: !6702)
!6917 = !DILocation(line: 92, column: 31, scope: !4268, inlinedAt: !6702)
!6918 = !DILocation(line: 92, column: 9, scope: !4268, inlinedAt: !6702)
!6919 = !DILocation(line: 96, column: 46, scope: !3956, inlinedAt: !6702)
!6920 = !DILocation(line: 96, column: 19, scope: !3956, inlinedAt: !6702)
!6921 = !DILocation(line: 96, column: 40, scope: !3956, inlinedAt: !6702)
!6922 = !DILocation(line: 96, column: 42, scope: !3956, inlinedAt: !6702)
!6923 = !DILocation(line: 96, column: 17, scope: !3956, inlinedAt: !6702)
!6924 = !DILocation(line: 97, column: 46, scope: !3956, inlinedAt: !6702)
!6925 = !DILocation(line: 97, column: 53, scope: !3956, inlinedAt: !6702)
!6926 = !DILocation(line: 97, column: 52, scope: !3956, inlinedAt: !6702)
!6927 = !DILocation(line: 97, column: 16, scope: !3956, inlinedAt: !6702)
!6928 = !DILocation(line: 97, column: 40, scope: !3956, inlinedAt: !6702)
!6929 = !DILocation(line: 97, column: 42, scope: !3956, inlinedAt: !6702)
!6930 = !DILocation(line: 97, column: 13, scope: !3956, inlinedAt: !6702)
!6931 = !DILocation(line: 98, column: 13, scope: !3976, inlinedAt: !6702)
!6932 = !DILocation(line: 98, column: 13, scope: !3956, inlinedAt: !6702)
!6933 = !DILocation(line: 99, column: 20, scope: !3974, inlinedAt: !6702)
!6934 = !DILocation(line: 99, column: 18, scope: !3974, inlinedAt: !6702)
!6935 = !DILocation(line: 99, column: 25, scope: !4289, inlinedAt: !6702)
!6936 = !DILocation(line: 99, column: 29, scope: !4289, inlinedAt: !6702)
!6937 = !DILocation(line: 99, column: 27, scope: !4289, inlinedAt: !6702)
!6938 = !DILocation(line: 99, column: 13, scope: !4289, inlinedAt: !6702)
!6939 = !DILocation(line: 100, column: 36, scope: !3972, inlinedAt: !6702)
!6940 = !DILocation(line: 100, column: 38, scope: !3972, inlinedAt: !6702)
!6941 = !DILocation(line: 100, column: 37, scope: !3972, inlinedAt: !6702)
!6942 = !DILocation(line: 100, column: 33, scope: !3972, inlinedAt: !6702)
!6943 = !DILocation(line: 100, column: 27, scope: !3972, inlinedAt: !6702)
!6944 = !DILocation(line: 102, column: 21, scope: !3971, inlinedAt: !6702)
!6945 = !DILocation(line: 102, column: 28, scope: !3971, inlinedAt: !6702)
!6946 = !DILocation(line: 102, column: 35, scope: !4301, inlinedAt: !6702)
!6947 = !DILocation(line: 102, column: 31, scope: !4301, inlinedAt: !6702)
!6948 = !DILocation(line: 102, column: 38, scope: !4301, inlinedAt: !6702)
!6949 = !DILocation(line: 102, column: 21, scope: !4301, inlinedAt: !6702)
!6950 = !DILocation(line: 103, column: 25, scope: !3969, inlinedAt: !6702)
!6951 = !DILocation(line: 103, column: 30, scope: !3969, inlinedAt: !6702)
!6952 = !DILocation(line: 103, column: 27, scope: !3969, inlinedAt: !6702)
!6953 = !DILocation(line: 103, column: 25, scope: !3970, inlinedAt: !6702)
!6954 = !DILocation(line: 104, column: 37, scope: !4310, inlinedAt: !6702)
!6955 = !DILocation(line: 104, column: 35, scope: !4310, inlinedAt: !6702)
!6956 = !DILocation(line: 105, column: 33, scope: !4310, inlinedAt: !6702)
!6957 = !DILocation(line: 106, column: 21, scope: !4310, inlinedAt: !6702)
!6958 = !DILocation(line: 107, column: 56, scope: !3968, inlinedAt: !6702)
!6959 = !DILocation(line: 107, column: 59, scope: !3968, inlinedAt: !6702)
!6960 = !DILocation(line: 107, column: 62, scope: !3968, inlinedAt: !6702)
!6961 = !DILocation(line: 107, column: 50, scope: !3968, inlinedAt: !6702)
!6962 = !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !6702)
!6963 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !6705)
!6964 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !6705)
!6965 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !6705)
!6966 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !6705)
!6967 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !6705)
!6968 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !6705)
!6969 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !6705)
!6970 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !6705)
!6971 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !6705)
!6972 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !6705)
!6973 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !6705)
!6974 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !6705)
!6975 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !6705)
!6976 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !6705)
!6977 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !6705)
!6978 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !6705)
!6979 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !6705)
!6980 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !6705)
!6981 = !DILocation(line: 108, column: 37, scope: !3968, inlinedAt: !6702)
!6982 = !DILocation(line: 108, column: 45, scope: !3968, inlinedAt: !6702)
!6983 = !DILocation(line: 108, column: 39, scope: !3968, inlinedAt: !6702)
!6984 = !DILocation(line: 108, column: 38, scope: !3968, inlinedAt: !6702)
!6985 = !DILocation(line: 108, column: 48, scope: !3968, inlinedAt: !6702)
!6986 = !DILocation(line: 108, column: 47, scope: !3968, inlinedAt: !6702)
!6987 = !DILocation(line: 108, column: 35, scope: !3968, inlinedAt: !6702)
!6988 = !DILocation(line: 109, column: 57, scope: !3968, inlinedAt: !6702)
!6989 = !DILocation(line: 109, column: 59, scope: !3968, inlinedAt: !6702)
!6990 = !DILocation(line: 109, column: 42, scope: !3968, inlinedAt: !6702)
!6991 = !DILocation(line: 109, column: 40, scope: !3968, inlinedAt: !6702)
!6992 = !DILocation(line: 109, column: 63, scope: !3968, inlinedAt: !6702)
!6993 = !DILocation(line: 109, column: 66, scope: !3968, inlinedAt: !6702)
!6994 = !DILocation(line: 109, column: 70, scope: !3968, inlinedAt: !6702)
!6995 = !DILocation(line: 109, column: 33, scope: !3968, inlinedAt: !6702)
!6996 = !DILocation(line: 111, column: 17, scope: !3970, inlinedAt: !6702)
!6997 = !DILocation(line: 112, column: 37, scope: !4356, inlinedAt: !6702)
!6998 = !DILocation(line: 112, column: 33, scope: !4356, inlinedAt: !6702)
!6999 = !DILocation(line: 112, column: 40, scope: !4356, inlinedAt: !6702)
!7000 = !DILocation(line: 112, column: 39, scope: !4356, inlinedAt: !6702)
!7001 = !DILocation(line: 112, column: 31, scope: !4356, inlinedAt: !6702)
!7002 = !DILocation(line: 114, column: 22, scope: !3972, inlinedAt: !6702)
!7003 = !DILocation(line: 114, column: 26, scope: !3972, inlinedAt: !6702)
!7004 = !DILocation(line: 114, column: 24, scope: !3972, inlinedAt: !6702)
!7005 = !DILocation(line: 114, column: 20, scope: !3972, inlinedAt: !6702)
!7006 = !DILocation(line: 115, column: 21, scope: !4366, inlinedAt: !6702)
!7007 = !DILocation(line: 115, column: 21, scope: !3972, inlinedAt: !6702)
!7008 = !DILocation(line: 116, column: 35, scope: !4366, inlinedAt: !6702)
!7009 = !DILocation(line: 116, column: 37, scope: !4366, inlinedAt: !6702)
!7010 = !DILocation(line: 116, column: 36, scope: !4366, inlinedAt: !6702)
!7011 = !DILocation(line: 116, column: 32, scope: !4366, inlinedAt: !6702)
!7012 = !DILocation(line: 116, column: 40, scope: !4366, inlinedAt: !6702)
!7013 = !DILocation(line: 116, column: 47, scope: !4374, inlinedAt: !6702)
!7014 = !DILocation(line: 116, column: 32, scope: !4374, inlinedAt: !6702)
!7015 = !DILocation(line: 116, column: 60, scope: !4377, inlinedAt: !6702)
!7016 = !DILocation(line: 116, column: 59, scope: !4377, inlinedAt: !6702)
!7017 = !DILocation(line: 116, column: 32, scope: !4377, inlinedAt: !6702)
!7018 = !DILocation(line: 116, column: 32, scope: !4381, inlinedAt: !6702)
!7019 = !DILocation(line: 116, column: 25, scope: !4381, inlinedAt: !6702)
!7020 = !DILocation(line: 116, column: 27, scope: !4381, inlinedAt: !6702)
!7021 = !DILocation(line: 116, column: 26, scope: !4381, inlinedAt: !6702)
!7022 = !DILocation(line: 116, column: 21, scope: !4381, inlinedAt: !6702)
!7023 = !DILocation(line: 116, column: 30, scope: !4381, inlinedAt: !6702)
!7024 = !DILocation(line: 117, column: 25, scope: !4388, inlinedAt: !6702)
!7025 = !DILocation(line: 117, column: 21, scope: !4388, inlinedAt: !6702)
!7026 = !DILocation(line: 117, column: 28, scope: !4388, inlinedAt: !6702)
!7027 = !DILocation(line: 117, column: 21, scope: !3972, inlinedAt: !6702)
!7028 = !DILocation(line: 118, column: 28, scope: !4388, inlinedAt: !6702)
!7029 = !DILocation(line: 118, column: 21, scope: !4388, inlinedAt: !6702)
!7030 = !DILocation(line: 119, column: 28, scope: !3972, inlinedAt: !6702)
!7031 = !DILocation(line: 119, column: 38, scope: !3972, inlinedAt: !6702)
!7032 = !DILocation(line: 119, column: 37, scope: !3972, inlinedAt: !6702)
!7033 = !DILocation(line: 119, column: 25, scope: !3972, inlinedAt: !6702)
!7034 = !DILocation(line: 120, column: 23, scope: !3972, inlinedAt: !6702)
!7035 = !DILocation(line: 120, column: 26, scope: !3972, inlinedAt: !6702)
!7036 = !DILocation(line: 120, column: 25, scope: !3972, inlinedAt: !6702)
!7037 = !DILocation(line: 120, column: 20, scope: !3972, inlinedAt: !6702)
!7038 = !DILocation(line: 99, column: 35, scope: !4403, inlinedAt: !6702)
!7039 = !DILocation(line: 99, column: 13, scope: !4403, inlinedAt: !6702)
!7040 = !DILocation(line: 122, column: 9, scope: !3975, inlinedAt: !6702)
!7041 = !DILocation(line: 123, column: 20, scope: !4409, inlinedAt: !6702)
!7042 = !DILocation(line: 123, column: 18, scope: !4409, inlinedAt: !6702)
!7043 = !DILocation(line: 123, column: 25, scope: !4413, inlinedAt: !6702)
!7044 = !DILocation(line: 123, column: 29, scope: !4413, inlinedAt: !6702)
!7045 = !DILocation(line: 123, column: 27, scope: !4413, inlinedAt: !6702)
!7046 = !DILocation(line: 123, column: 13, scope: !4413, inlinedAt: !6702)
!7047 = !DILocation(line: 124, column: 33, scope: !4419, inlinedAt: !6702)
!7048 = !DILocation(line: 124, column: 29, scope: !4419, inlinedAt: !6702)
!7049 = !DILocation(line: 124, column: 36, scope: !4419, inlinedAt: !6702)
!7050 = !DILocation(line: 124, column: 35, scope: !4419, inlinedAt: !6702)
!7051 = !DILocation(line: 124, column: 27, scope: !4419, inlinedAt: !6702)
!7052 = !DILocation(line: 125, column: 28, scope: !4419, inlinedAt: !6702)
!7053 = !DILocation(line: 125, column: 38, scope: !4419, inlinedAt: !6702)
!7054 = !DILocation(line: 125, column: 37, scope: !4419, inlinedAt: !6702)
!7055 = !DILocation(line: 125, column: 25, scope: !4419, inlinedAt: !6702)
!7056 = !DILocation(line: 126, column: 21, scope: !4429, inlinedAt: !6702)
!7057 = !DILocation(line: 126, column: 21, scope: !4419, inlinedAt: !6702)
!7058 = !DILocation(line: 127, column: 32, scope: !4429, inlinedAt: !6702)
!7059 = !DILocation(line: 127, column: 25, scope: !4429, inlinedAt: !6702)
!7060 = !DILocation(line: 127, column: 27, scope: !4429, inlinedAt: !6702)
!7061 = !DILocation(line: 127, column: 26, scope: !4429, inlinedAt: !6702)
!7062 = !DILocation(line: 127, column: 21, scope: !4429, inlinedAt: !6702)
!7063 = !DILocation(line: 127, column: 30, scope: !4429, inlinedAt: !6702)
!7064 = !DILocation(line: 128, column: 27, scope: !4419, inlinedAt: !6702)
!7065 = !DILocation(line: 128, column: 29, scope: !4419, inlinedAt: !6702)
!7066 = !DILocation(line: 128, column: 28, scope: !4419, inlinedAt: !6702)
!7067 = !DILocation(line: 128, column: 24, scope: !4419, inlinedAt: !6702)
!7068 = !DILocation(line: 128, column: 34, scope: !4419, inlinedAt: !6702)
!7069 = !DILocation(line: 128, column: 32, scope: !4419, inlinedAt: !6702)
!7070 = !DILocation(line: 128, column: 49, scope: !4419, inlinedAt: !6702)
!7071 = !DILocation(line: 128, column: 51, scope: !4419, inlinedAt: !6702)
!7072 = !DILocation(line: 128, column: 50, scope: !4419, inlinedAt: !6702)
!7073 = !DILocation(line: 128, column: 46, scope: !4419, inlinedAt: !6702)
!7074 = !DILocation(line: 128, column: 56, scope: !4419, inlinedAt: !6702)
!7075 = !DILocation(line: 128, column: 54, scope: !4419, inlinedAt: !6702)
!7076 = !DILocation(line: 128, column: 44, scope: !4419, inlinedAt: !6702)
!7077 = !DILocation(line: 128, column: 20, scope: !4419, inlinedAt: !6702)
!7078 = !DILocation(line: 123, column: 35, scope: !4452, inlinedAt: !6702)
!7079 = !DILocation(line: 123, column: 13, scope: !4452, inlinedAt: !6702)
!7080 = !DILocation(line: 131, column: 17, scope: !3956, inlinedAt: !6702)
!7081 = !DILocation(line: 131, column: 22, scope: !3956, inlinedAt: !6702)
!7082 = !DILocation(line: 131, column: 20, scope: !3956, inlinedAt: !6702)
!7083 = !DILocation(line: 131, column: 31, scope: !3956, inlinedAt: !6702)
!7084 = !DILocation(line: 131, column: 29, scope: !3956, inlinedAt: !6702)
!7085 = !DILocation(line: 131, column: 14, scope: !3956, inlinedAt: !6702)
!7086 = !DILocation(line: 132, column: 20, scope: !3956, inlinedAt: !6702)
!7087 = !DILocation(line: 132, column: 17, scope: !3956, inlinedAt: !6702)
!7088 = !DILocation(line: 133, column: 13, scope: !4465, inlinedAt: !6702)
!7089 = !DILocation(line: 133, column: 21, scope: !4465, inlinedAt: !6702)
!7090 = !DILocation(line: 133, column: 18, scope: !4465, inlinedAt: !6702)
!7091 = !DILocation(line: 133, column: 13, scope: !3956, inlinedAt: !6702)
!7092 = !DILocation(line: 134, column: 20, scope: !4465, inlinedAt: !6702)
!7093 = !DILocation(line: 134, column: 13, scope: !4465, inlinedAt: !6702)
!7094 = !DILocation(line: 135, column: 13, scope: !3955, inlinedAt: !6702)
!7095 = !DILocation(line: 135, column: 13, scope: !3956, inlinedAt: !6702)
!7096 = !DILocation(line: 136, column: 22, scope: !3954, inlinedAt: !6702)
!7097 = !DILocation(line: 136, column: 53, scope: !3954, inlinedAt: !6702)
!7098 = !DILocation(line: 136, column: 26, scope: !3954, inlinedAt: !6702)
!7099 = !DILocation(line: 136, column: 47, scope: !3954, inlinedAt: !6702)
!7100 = !DILocation(line: 136, column: 49, scope: !3954, inlinedAt: !6702)
!7101 = !DILocation(line: 136, column: 90, scope: !3954, inlinedAt: !6702)
!7102 = !DILocation(line: 136, column: 62, scope: !3954, inlinedAt: !6702)
!7103 = !DILocation(line: 136, column: 84, scope: !3954, inlinedAt: !6702)
!7104 = !DILocation(line: 136, column: 86, scope: !3954, inlinedAt: !6702)
!7105 = !DILocation(line: 136, column: 13, scope: !3954, inlinedAt: !6702)
!7106 = !DILocation(line: 137, column: 17, scope: !4484, inlinedAt: !6702)
!7107 = !DILocation(line: 137, column: 17, scope: !3954, inlinedAt: !6702)
!7108 = !DILocation(line: 138, column: 24, scope: !4487, inlinedAt: !6702)
!7109 = !DILocation(line: 138, column: 22, scope: !4487, inlinedAt: !6702)
!7110 = !DILocation(line: 138, column: 29, scope: !4490, inlinedAt: !6702)
!7111 = !DILocation(line: 138, column: 33, scope: !4490, inlinedAt: !6702)
!7112 = !DILocation(line: 138, column: 31, scope: !4490, inlinedAt: !6702)
!7113 = !DILocation(line: 138, column: 17, scope: !4490, inlinedAt: !6702)
!7114 = !DILocation(line: 139, column: 55, scope: !4496, inlinedAt: !6702)
!7115 = !DILocation(line: 139, column: 62, scope: !4496, inlinedAt: !6702)
!7116 = !DILocation(line: 139, column: 61, scope: !4496, inlinedAt: !6702)
!7117 = !DILocation(line: 139, column: 66, scope: !4496, inlinedAt: !6702)
!7118 = !DILocation(line: 139, column: 65, scope: !4496, inlinedAt: !6702)
!7119 = !DILocation(line: 139, column: 25, scope: !4496, inlinedAt: !6702)
!7120 = !DILocation(line: 139, column: 49, scope: !4496, inlinedAt: !6702)
!7121 = !DILocation(line: 139, column: 51, scope: !4496, inlinedAt: !6702)
!7122 = !DILocation(line: 139, column: 69, scope: !4496, inlinedAt: !6702)
!7123 = !DILocation(line: 139, column: 25, scope: !4491, inlinedAt: !6702)
!7124 = !DILocation(line: 140, column: 34, scope: !4496, inlinedAt: !6702)
!7125 = !DILocation(line: 140, column: 44, scope: !4496, inlinedAt: !6702)
!7126 = !DILocation(line: 140, column: 46, scope: !4496, inlinedAt: !6702)
!7127 = !DILocation(line: 140, column: 45, scope: !4496, inlinedAt: !6702)
!7128 = !DILocation(line: 140, column: 41, scope: !4496, inlinedAt: !6702)
!7129 = !DILocation(line: 140, column: 49, scope: !4496, inlinedAt: !6702)
!7130 = !DILocation(line: 140, column: 25, scope: !4496, inlinedAt: !6702)
!7131 = !DILocation(line: 138, column: 39, scope: !4514, inlinedAt: !6702)
!7132 = !DILocation(line: 138, column: 17, scope: !4514, inlinedAt: !6702)
!7133 = !DILocation(line: 140, column: 55, scope: !4519, inlinedAt: !6702)
!7134 = !DILocation(line: 141, column: 17, scope: !3953, inlinedAt: !6702)
!7135 = !DILocation(line: 141, column: 17, scope: !3954, inlinedAt: !6702)
!7136 = !DILocation(line: 142, column: 24, scope: !3951, inlinedAt: !6702)
!7137 = !DILocation(line: 142, column: 22, scope: !3951, inlinedAt: !6702)
!7138 = !DILocation(line: 142, column: 29, scope: !4525, inlinedAt: !6702)
!7139 = !DILocation(line: 142, column: 31, scope: !4525, inlinedAt: !6702)
!7140 = !DILocation(line: 142, column: 17, scope: !4525, inlinedAt: !6702)
!7141 = !DILocation(line: 143, column: 55, scope: !3948, inlinedAt: !6702)
!7142 = !DILocation(line: 143, column: 61, scope: !3948, inlinedAt: !6702)
!7143 = !DILocation(line: 143, column: 64, scope: !3948, inlinedAt: !6702)
!7144 = !DILocation(line: 143, column: 63, scope: !3948, inlinedAt: !6702)
!7145 = !DILocation(line: 143, column: 25, scope: !3948, inlinedAt: !6702)
!7146 = !DILocation(line: 143, column: 49, scope: !3948, inlinedAt: !6702)
!7147 = !DILocation(line: 143, column: 51, scope: !3948, inlinedAt: !6702)
!7148 = !DILocation(line: 143, column: 67, scope: !3948, inlinedAt: !6702)
!7149 = !DILocation(line: 143, column: 25, scope: !3949, inlinedAt: !6702)
!7150 = !DILocation(line: 144, column: 68, scope: !3947, inlinedAt: !6702)
!7151 = !DILocation(line: 144, column: 70, scope: !3947, inlinedAt: !6702)
!7152 = !DILocation(line: 144, column: 69, scope: !3947, inlinedAt: !6702)
!7153 = !DILocation(line: 144, column: 65, scope: !3947, inlinedAt: !6702)
!7154 = !DILocation(line: 144, column: 59, scope: !3947, inlinedAt: !6702)
!7155 = !DILocation(line: 144, column: 75, scope: !3947, inlinedAt: !6702)
!7156 = !DILocation(line: 144, column: 78, scope: !3947, inlinedAt: !6702)
!7157 = !DILocation(line: 144, column: 53, scope: !4545, inlinedAt: !6702)
!7158 = !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !6702)
!7159 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !6701)
!7160 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !6701)
!7161 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !6701)
!7162 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !6701)
!7163 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !6701)
!7164 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !6701)
!7165 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !6701)
!7166 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !6701)
!7167 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !6701)
!7168 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !6701)
!7169 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !6701)
!7170 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !6701)
!7171 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !6701)
!7172 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !6701)
!7173 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !6701)
!7174 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !6701)
!7175 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !6701)
!7176 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !6701)
!7177 = !DILocation(line: 145, column: 56, scope: !3947, inlinedAt: !6702)
!7178 = !DILocation(line: 145, column: 61, scope: !3947, inlinedAt: !6702)
!7179 = !DILocation(line: 145, column: 41, scope: !3947, inlinedAt: !6702)
!7180 = !DILocation(line: 145, column: 39, scope: !3947, inlinedAt: !6702)
!7181 = !DILocation(line: 147, column: 34, scope: !3947, inlinedAt: !6702)
!7182 = !DILocation(line: 147, column: 38, scope: !3947, inlinedAt: !6702)
!7183 = !DILocation(line: 147, column: 42, scope: !3947, inlinedAt: !6702)
!7184 = !DILocation(line: 147, column: 46, scope: !3947, inlinedAt: !6702)
!7185 = !DILocation(line: 147, column: 58, scope: !3947, inlinedAt: !6702)
!7186 = !DILocation(line: 147, column: 62, scope: !3947, inlinedAt: !6702)
!7187 = !DILocation(line: 147, column: 66, scope: !3947, inlinedAt: !6702)
!7188 = !DILocation(line: 147, column: 54, scope: !3947, inlinedAt: !6702)
!7189 = !DILocation(line: 147, column: 72, scope: !3947, inlinedAt: !6702)
!7190 = !DILocation(line: 147, column: 25, scope: !3947, inlinedAt: !6702)
!7191 = !DILocation(line: 148, column: 35, scope: !3947, inlinedAt: !6702)
!7192 = !DILocation(line: 148, column: 39, scope: !3947, inlinedAt: !6702)
!7193 = !DILocation(line: 148, column: 44, scope: !3947, inlinedAt: !6702)
!7194 = !DILocation(line: 148, column: 25, scope: !3947, inlinedAt: !6702)
!7195 = !DILocation(line: 149, column: 21, scope: !3947, inlinedAt: !6702)
!7196 = !DILocation(line: 142, column: 37, scope: !4585, inlinedAt: !6702)
!7197 = !DILocation(line: 142, column: 17, scope: !4585, inlinedAt: !6702)
!7198 = !DILocation(line: 151, column: 13, scope: !3952, inlinedAt: !6702)
!7199 = !DILocation(line: 152, column: 9, scope: !3954, inlinedAt: !6702)
!7200 = !DILocation(line: 86, column: 32, scope: !4592, inlinedAt: !6702)
!7201 = !DILocation(line: 86, column: 29, scope: !4592, inlinedAt: !6702)
!7202 = !DILocation(line: 86, column: 5, scope: !4592, inlinedAt: !6702)
!7203 = !DILocation(line: 155, column: 9, scope: !4598, inlinedAt: !6702)
!7204 = !DILocation(line: 155, column: 9, scope: !3959, inlinedAt: !6702)
!7205 = !DILocation(line: 156, column: 17, scope: !4598, inlinedAt: !6702)
!7206 = !DILocation(line: 156, column: 10, scope: !4598, inlinedAt: !6702)
!7207 = !DILocation(line: 156, column: 15, scope: !4598, inlinedAt: !6702)
!7208 = !DILocation(line: 156, column: 9, scope: !4598, inlinedAt: !6702)
!7209 = !DILocation(line: 157, column: 9, scope: !4605, inlinedAt: !6702)
!7210 = !DILocation(line: 157, column: 9, scope: !3959, inlinedAt: !6702)
!7211 = !DILocation(line: 158, column: 19, scope: !4605, inlinedAt: !6702)
!7212 = !DILocation(line: 158, column: 10, scope: !4605, inlinedAt: !6702)
!7213 = !DILocation(line: 158, column: 17, scope: !4605, inlinedAt: !6702)
!7214 = !DILocation(line: 158, column: 9, scope: !4605, inlinedAt: !6702)
!7215 = !DILocation(line: 159, column: 12, scope: !3959, inlinedAt: !6702)
!7216 = !DILocation(line: 159, column: 5, scope: !3959, inlinedAt: !6702)
!7217 = !DILocation(line: 160, column: 1, scope: !3959, inlinedAt: !6702)
!7218 = !DILocation(line: 191, column: 249, scope: !6699)
!7219 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_NONE", scope: !963, file: !963, line: 162, type: !967, isLocal: true, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!7220 = !DILocalVariable(name: "s", arg: 1, scope: !7219, file: !963, line: 162, type: !970)
!7221 = !DILocation(line: 162, column: 78, scope: !7219)
!7222 = !DILocalVariable(name: "pb", arg: 2, scope: !7219, file: !963, line: 162, type: !2645)
!7223 = !DILocation(line: 162, column: 96, scope: !7219)
!7224 = !DILocalVariable(name: "in", arg: 3, scope: !7219, file: !963, line: 163, type: !1103)
!7225 = !DILocation(line: 163, column: 62, scope: !7219)
!7226 = !DILocalVariable(name: "quant", arg: 4, scope: !7219, file: !963, line: 163, type: !1102)
!7227 = !DILocation(line: 163, column: 73, scope: !7219)
!7228 = !DILocalVariable(name: "scaled", arg: 5, scope: !7219, file: !963, line: 163, type: !1103)
!7229 = !DILocation(line: 163, column: 93, scope: !7219)
!7230 = !DILocalVariable(name: "size", arg: 6, scope: !7219, file: !963, line: 164, type: !992)
!7231 = !DILocation(line: 164, column: 53, scope: !7219)
!7232 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !7219, file: !963, line: 164, type: !992)
!7233 = !DILocation(line: 164, column: 63, scope: !7219)
!7234 = !DILocalVariable(name: "cb", arg: 8, scope: !7219, file: !963, line: 164, type: !992)
!7235 = !DILocation(line: 164, column: 78, scope: !7219)
!7236 = !DILocalVariable(name: "lambda", arg: 9, scope: !7219, file: !963, line: 165, type: !1104)
!7237 = !DILocation(line: 165, column: 61, scope: !7219)
!7238 = !DILocalVariable(name: "uplim", arg: 10, scope: !7219, file: !963, line: 165, type: !1104)
!7239 = !DILocation(line: 165, column: 81, scope: !7219)
!7240 = !DILocalVariable(name: "bits", arg: 11, scope: !7219, file: !963, line: 166, type: !1963)
!7241 = !DILocation(line: 166, column: 54, scope: !7219)
!7242 = !DILocalVariable(name: "energy", arg: 12, scope: !7219, file: !963, line: 166, type: !1102)
!7243 = !DILocation(line: 166, column: 67, scope: !7219)
!7244 = !DILocation(line: 167, column: 5, scope: !7219)
!7245 = distinct !{!7245, !7244}
!7246 = !DILocation(line: 167, column: 22, scope: !7247)
!7247 = !DILexicalBlockFile(scope: !7248, file: !963, discriminator: 1)
!7248 = distinct !DILexicalBlock(scope: !7249, file: !963, line: 167, column: 20)
!7249 = distinct !DILexicalBlock(scope: !7250, file: !963, line: 167, column: 14)
!7250 = distinct !DILexicalBlock(scope: !7219, file: !963, line: 167, column: 8)
!7251 = !DILocation(line: 167, column: 90, scope: !7252)
!7252 = !DILexicalBlockFile(scope: !7247, file: !963, discriminator: 2)
!7253 = !DILocation(line: 167, column: 90, scope: !7247)
!7254 = !DILocation(line: 168, column: 5, scope: !7219)
!7255 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_NOISE", scope: !963, file: !963, line: 192, type: !967, isLocal: true, isDefinition: true, scopeLine: 192, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!7256 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !7257)
!7257 = distinct !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !7258)
!7258 = distinct !DILocation(line: 192, column: 254, scope: !7255)
!7259 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !7257)
!7260 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !7261)
!7261 = distinct !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !7258)
!7262 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !7261)
!7263 = !DILocation(line: 42, column: 55, scope: !3959, inlinedAt: !7258)
!7264 = !DILocation(line: 43, column: 48, scope: !3959, inlinedAt: !7258)
!7265 = !DILocation(line: 43, column: 65, scope: !3959, inlinedAt: !7258)
!7266 = !DILocation(line: 43, column: 76, scope: !3959, inlinedAt: !7258)
!7267 = !DILocation(line: 44, column: 46, scope: !3959, inlinedAt: !7258)
!7268 = !DILocation(line: 44, column: 58, scope: !3959, inlinedAt: !7258)
!7269 = !DILocation(line: 44, column: 68, scope: !3959, inlinedAt: !7258)
!7270 = !DILocation(line: 45, column: 37, scope: !3959, inlinedAt: !7258)
!7271 = !DILocation(line: 45, column: 53, scope: !3959, inlinedAt: !7258)
!7272 = !DILocation(line: 45, column: 73, scope: !3959, inlinedAt: !7258)
!7273 = !DILocation(line: 46, column: 38, scope: !3959, inlinedAt: !7258)
!7274 = !DILocation(line: 46, column: 51, scope: !3959, inlinedAt: !7258)
!7275 = !DILocation(line: 46, column: 63, scope: !3959, inlinedAt: !7258)
!7276 = !DILocation(line: 46, column: 76, scope: !3959, inlinedAt: !7258)
!7277 = !DILocation(line: 47, column: 37, scope: !3959, inlinedAt: !7258)
!7278 = !DILocation(line: 47, column: 50, scope: !3959, inlinedAt: !7258)
!7279 = !DILocation(line: 47, column: 62, scope: !3959, inlinedAt: !7258)
!7280 = !DILocation(line: 47, column: 76, scope: !3959, inlinedAt: !7258)
!7281 = !DILocation(line: 48, column: 45, scope: !3959, inlinedAt: !7258)
!7282 = !DILocation(line: 50, column: 15, scope: !3959, inlinedAt: !7258)
!7283 = !DILocation(line: 51, column: 17, scope: !3959, inlinedAt: !7258)
!7284 = !DILocation(line: 52, column: 17, scope: !3959, inlinedAt: !7258)
!7285 = !DILocation(line: 53, column: 17, scope: !3959, inlinedAt: !7258)
!7286 = !DILocation(line: 54, column: 17, scope: !3959, inlinedAt: !7258)
!7287 = !DILocation(line: 55, column: 9, scope: !3959, inlinedAt: !7258)
!7288 = !DILocation(line: 55, column: 12, scope: !3959, inlinedAt: !7258)
!7289 = !DILocation(line: 56, column: 11, scope: !3959, inlinedAt: !7258)
!7290 = !DILocation(line: 57, column: 11, scope: !3959, inlinedAt: !7258)
!7291 = !DILocation(line: 58, column: 15, scope: !3959, inlinedAt: !7258)
!7292 = !DILocation(line: 59, column: 9, scope: !3959, inlinedAt: !7258)
!7293 = !DILocation(line: 60, column: 9, scope: !3959, inlinedAt: !7258)
!7294 = !DILocation(line: 87, column: 22, scope: !3956, inlinedAt: !7258)
!7295 = !DILocation(line: 88, column: 14, scope: !3956, inlinedAt: !7258)
!7296 = !DILocation(line: 89, column: 13, scope: !3956, inlinedAt: !7258)
!7297 = !DILocation(line: 90, column: 13, scope: !3956, inlinedAt: !7258)
!7298 = !DILocation(line: 91, column: 15, scope: !3956, inlinedAt: !7258)
!7299 = !DILocation(line: 91, column: 26, scope: !3956, inlinedAt: !7258)
!7300 = !DILocation(line: 100, column: 23, scope: !3972, inlinedAt: !7258)
!7301 = !DILocation(line: 101, column: 23, scope: !3972, inlinedAt: !7258)
!7302 = !DILocation(line: 107, column: 29, scope: !3968, inlinedAt: !7258)
!7303 = !DILocation(line: 144, column: 29, scope: !3947, inlinedAt: !7258)
!7304 = !DILocation(line: 145, column: 29, scope: !3947, inlinedAt: !7258)
!7305 = !DILocalVariable(name: "s", arg: 1, scope: !7255, file: !963, line: 192, type: !970)
!7306 = !DILocation(line: 192, column: 73, scope: !7255)
!7307 = !DILocalVariable(name: "pb", arg: 2, scope: !7255, file: !963, line: 192, type: !2645)
!7308 = !DILocation(line: 192, column: 91, scope: !7255)
!7309 = !DILocalVariable(name: "in", arg: 3, scope: !7255, file: !963, line: 192, type: !1103)
!7310 = !DILocation(line: 192, column: 108, scope: !7255)
!7311 = !DILocalVariable(name: "quant", arg: 4, scope: !7255, file: !963, line: 192, type: !1102)
!7312 = !DILocation(line: 192, column: 119, scope: !7255)
!7313 = !DILocalVariable(name: "scaled", arg: 5, scope: !7255, file: !963, line: 192, type: !1103)
!7314 = !DILocation(line: 192, column: 139, scope: !7255)
!7315 = !DILocalVariable(name: "size", arg: 6, scope: !7255, file: !963, line: 192, type: !992)
!7316 = !DILocation(line: 192, column: 151, scope: !7255)
!7317 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !7255, file: !963, line: 192, type: !992)
!7318 = !DILocation(line: 192, column: 161, scope: !7255)
!7319 = !DILocalVariable(name: "cb", arg: 8, scope: !7255, file: !963, line: 192, type: !992)
!7320 = !DILocation(line: 192, column: 176, scope: !7255)
!7321 = !DILocalVariable(name: "lambda", arg: 9, scope: !7255, file: !963, line: 192, type: !1104)
!7322 = !DILocation(line: 192, column: 192, scope: !7255)
!7323 = !DILocalVariable(name: "uplim", arg: 10, scope: !7255, file: !963, line: 192, type: !1104)
!7324 = !DILocation(line: 192, column: 212, scope: !7255)
!7325 = !DILocalVariable(name: "bits", arg: 11, scope: !7255, file: !963, line: 192, type: !1963)
!7326 = !DILocation(line: 192, column: 224, scope: !7255)
!7327 = !DILocalVariable(name: "energy", arg: 12, scope: !7255, file: !963, line: 192, type: !1102)
!7328 = !DILocation(line: 192, column: 237, scope: !7255)
!7329 = !DILocation(line: 192, column: 294, scope: !7255)
!7330 = !DILocation(line: 192, column: 297, scope: !7255)
!7331 = !DILocation(line: 192, column: 301, scope: !7255)
!7332 = !DILocation(line: 192, column: 305, scope: !7255)
!7333 = !DILocation(line: 192, column: 312, scope: !7255)
!7334 = !DILocation(line: 192, column: 320, scope: !7255)
!7335 = !DILocation(line: 192, column: 326, scope: !7255)
!7336 = !DILocation(line: 192, column: 350, scope: !7255)
!7337 = !DILocation(line: 192, column: 354, scope: !7255)
!7338 = !DILocation(line: 192, column: 362, scope: !7255)
!7339 = !DILocation(line: 192, column: 369, scope: !7255)
!7340 = !DILocation(line: 192, column: 375, scope: !7255)
!7341 = !DILocation(line: 192, column: 254, scope: !7255)
!7342 = !DILocation(line: 50, column: 29, scope: !3959, inlinedAt: !7258)
!7343 = !DILocation(line: 50, column: 27, scope: !3959, inlinedAt: !7258)
!7344 = !DILocation(line: 50, column: 39, scope: !3959, inlinedAt: !7258)
!7345 = !DILocation(line: 50, column: 45, scope: !3959, inlinedAt: !7258)
!7346 = !DILocation(line: 51, column: 40, scope: !3959, inlinedAt: !7258)
!7347 = !DILocation(line: 51, column: 21, scope: !3959, inlinedAt: !7258)
!7348 = !DILocation(line: 52, column: 42, scope: !3959, inlinedAt: !7258)
!7349 = !DILocation(line: 52, column: 23, scope: !3959, inlinedAt: !7258)
!7350 = !DILocation(line: 53, column: 47, scope: !3959, inlinedAt: !7258)
!7351 = !DILocation(line: 53, column: 45, scope: !3959, inlinedAt: !7258)
!7352 = !DILocation(line: 53, column: 57, scope: !3959, inlinedAt: !7258)
!7353 = !DILocation(line: 53, column: 63, scope: !3959, inlinedAt: !7258)
!7354 = !DILocation(line: 53, column: 22, scope: !3959, inlinedAt: !7258)
!7355 = !DILocation(line: 54, column: 44, scope: !3959, inlinedAt: !7258)
!7356 = !DILocation(line: 54, column: 43, scope: !3959, inlinedAt: !7258)
!7357 = !DILocation(line: 58, column: 21, scope: !3959, inlinedAt: !7258)
!7358 = !DILocation(line: 62, column: 9, scope: !4116, inlinedAt: !7258)
!7359 = !DILocation(line: 62, column: 17, scope: !4116, inlinedAt: !7258)
!7360 = !DILocation(line: 62, column: 20, scope: !4119, inlinedAt: !7258)
!7361 = !DILocation(line: 62, column: 29, scope: !4119, inlinedAt: !7258)
!7362 = !DILocation(line: 62, column: 32, scope: !4122, inlinedAt: !7258)
!7363 = !DILocation(line: 62, column: 9, scope: !4122, inlinedAt: !7258)
!7364 = !DILocation(line: 63, column: 16, scope: !4125, inlinedAt: !7258)
!7365 = !DILocation(line: 63, column: 14, scope: !4125, inlinedAt: !7258)
!7366 = !DILocation(line: 63, column: 21, scope: !4129, inlinedAt: !7258)
!7367 = !DILocation(line: 63, column: 25, scope: !4129, inlinedAt: !7258)
!7368 = !DILocation(line: 63, column: 23, scope: !4129, inlinedAt: !7258)
!7369 = !DILocation(line: 63, column: 9, scope: !4129, inlinedAt: !7258)
!7370 = !DILocation(line: 64, column: 24, scope: !4130, inlinedAt: !7258)
!7371 = !DILocation(line: 64, column: 21, scope: !4130, inlinedAt: !7258)
!7372 = !DILocation(line: 64, column: 30, scope: !4130, inlinedAt: !7258)
!7373 = !DILocation(line: 64, column: 27, scope: !4130, inlinedAt: !7258)
!7374 = !DILocation(line: 64, column: 26, scope: !4130, inlinedAt: !7258)
!7375 = !DILocation(line: 64, column: 18, scope: !4130, inlinedAt: !7258)
!7376 = !DILocation(line: 63, column: 32, scope: !4141, inlinedAt: !7258)
!7377 = !DILocation(line: 63, column: 9, scope: !4141, inlinedAt: !7258)
!7378 = !DILocation(line: 65, column: 13, scope: !4146, inlinedAt: !7258)
!7379 = !DILocation(line: 65, column: 13, scope: !4126, inlinedAt: !7258)
!7380 = !DILocation(line: 66, column: 14, scope: !4146, inlinedAt: !7258)
!7381 = !DILocation(line: 66, column: 19, scope: !4146, inlinedAt: !7258)
!7382 = !DILocation(line: 66, column: 13, scope: !4146, inlinedAt: !7258)
!7383 = !DILocation(line: 67, column: 13, scope: !4152, inlinedAt: !7258)
!7384 = !DILocation(line: 67, column: 13, scope: !4126, inlinedAt: !7258)
!7385 = !DILocation(line: 68, column: 23, scope: !4152, inlinedAt: !7258)
!7386 = !DILocation(line: 68, column: 14, scope: !4152, inlinedAt: !7258)
!7387 = !DILocation(line: 68, column: 21, scope: !4152, inlinedAt: !7258)
!7388 = !DILocation(line: 68, column: 13, scope: !4152, inlinedAt: !7258)
!7389 = !DILocation(line: 69, column: 13, scope: !4159, inlinedAt: !7258)
!7390 = !DILocation(line: 69, column: 13, scope: !4126, inlinedAt: !7258)
!7391 = !DILocation(line: 70, column: 20, scope: !4162, inlinedAt: !7258)
!7392 = !DILocation(line: 70, column: 18, scope: !4162, inlinedAt: !7258)
!7393 = !DILocation(line: 70, column: 25, scope: !4166, inlinedAt: !7258)
!7394 = !DILocation(line: 70, column: 29, scope: !4166, inlinedAt: !7258)
!7395 = !DILocation(line: 70, column: 27, scope: !4166, inlinedAt: !7258)
!7396 = !DILocation(line: 70, column: 13, scope: !4166, inlinedAt: !7258)
!7397 = !DILocation(line: 71, column: 24, scope: !4172, inlinedAt: !7258)
!7398 = !DILocation(line: 71, column: 22, scope: !4172, inlinedAt: !7258)
!7399 = !DILocation(line: 71, column: 29, scope: !4175, inlinedAt: !7258)
!7400 = !DILocation(line: 71, column: 33, scope: !4175, inlinedAt: !7258)
!7401 = !DILocation(line: 71, column: 31, scope: !4175, inlinedAt: !7258)
!7402 = !DILocation(line: 71, column: 17, scope: !4175, inlinedAt: !7258)
!7403 = !DILocation(line: 72, column: 25, scope: !4176, inlinedAt: !7258)
!7404 = !DILocation(line: 72, column: 27, scope: !4176, inlinedAt: !7258)
!7405 = !DILocation(line: 72, column: 26, scope: !4176, inlinedAt: !7258)
!7406 = !DILocation(line: 72, column: 21, scope: !4176, inlinedAt: !7258)
!7407 = !DILocation(line: 72, column: 30, scope: !4176, inlinedAt: !7258)
!7408 = !DILocation(line: 71, column: 39, scope: !4186, inlinedAt: !7258)
!7409 = !DILocation(line: 71, column: 17, scope: !4186, inlinedAt: !7258)
!7410 = !DILocation(line: 70, column: 40, scope: !4191, inlinedAt: !7258)
!7411 = !DILocation(line: 70, column: 37, scope: !4191, inlinedAt: !7258)
!7412 = !DILocation(line: 70, column: 13, scope: !4191, inlinedAt: !7258)
!7413 = !DILocation(line: 73, column: 9, scope: !4163, inlinedAt: !7258)
!7414 = !DILocation(line: 74, column: 16, scope: !4126, inlinedAt: !7258)
!7415 = !DILocation(line: 74, column: 23, scope: !4126, inlinedAt: !7258)
!7416 = !DILocation(line: 74, column: 21, scope: !4126, inlinedAt: !7258)
!7417 = !DILocation(line: 74, column: 9, scope: !4126, inlinedAt: !7258)
!7418 = !DILocation(line: 76, column: 10, scope: !4202, inlinedAt: !7258)
!7419 = !DILocation(line: 76, column: 9, scope: !3959, inlinedAt: !7258)
!7420 = !DILocation(line: 77, column: 9, scope: !4205, inlinedAt: !7258)
!7421 = !DILocation(line: 77, column: 12, scope: !4205, inlinedAt: !7258)
!7422 = !DILocation(line: 77, column: 22, scope: !4205, inlinedAt: !7258)
!7423 = !DILocation(line: 77, column: 25, scope: !4205, inlinedAt: !7258)
!7424 = !DILocation(line: 77, column: 33, scope: !4205, inlinedAt: !7258)
!7425 = !DILocation(line: 77, column: 37, scope: !4205, inlinedAt: !7258)
!7426 = !DILocation(line: 78, column: 18, scope: !4205, inlinedAt: !7258)
!7427 = !DILocation(line: 78, column: 21, scope: !4205, inlinedAt: !7258)
!7428 = !DILocation(line: 78, column: 16, scope: !4205, inlinedAt: !7258)
!7429 = !DILocation(line: 79, column: 5, scope: !4205, inlinedAt: !7258)
!7430 = !DILocation(line: 80, column: 5, scope: !3959, inlinedAt: !7258)
!7431 = !DILocation(line: 80, column: 8, scope: !3959, inlinedAt: !7258)
!7432 = !DILocation(line: 80, column: 20, scope: !3959, inlinedAt: !7258)
!7433 = !DILocation(line: 80, column: 23, scope: !3959, inlinedAt: !7258)
!7434 = !DILocation(line: 80, column: 31, scope: !3959, inlinedAt: !7258)
!7435 = !DILocation(line: 80, column: 35, scope: !3959, inlinedAt: !7258)
!7436 = !DILocation(line: 80, column: 43, scope: !3959, inlinedAt: !7258)
!7437 = !DILocation(line: 80, column: 50, scope: !3959, inlinedAt: !7258)
!7438 = !DILocation(line: 80, column: 49, scope: !3959, inlinedAt: !7258)
!7439 = !DILocation(line: 80, column: 77, scope: !3959, inlinedAt: !7258)
!7440 = !DILocation(line: 80, column: 63, scope: !3959, inlinedAt: !7258)
!7441 = !DILocation(line: 80, column: 82, scope: !3959, inlinedAt: !7258)
!7442 = !DILocation(line: 80, column: 87, scope: !3959, inlinedAt: !7258)
!7443 = !DILocation(line: 81, column: 9, scope: !4229, inlinedAt: !7258)
!7444 = !DILocation(line: 81, column: 9, scope: !3959, inlinedAt: !7258)
!7445 = !DILocation(line: 82, column: 13, scope: !4232, inlinedAt: !7258)
!7446 = !DILocation(line: 83, column: 5, scope: !4232, inlinedAt: !7258)
!7447 = !DILocation(line: 84, column: 29, scope: !4235, inlinedAt: !7258)
!7448 = !DILocation(line: 84, column: 15, scope: !4235, inlinedAt: !7258)
!7449 = !DILocation(line: 84, column: 13, scope: !4235, inlinedAt: !7258)
!7450 = !DILocation(line: 86, column: 12, scope: !3958, inlinedAt: !7258)
!7451 = !DILocation(line: 86, column: 10, scope: !3958, inlinedAt: !7258)
!7452 = !DILocation(line: 86, column: 17, scope: !4241, inlinedAt: !7258)
!7453 = !DILocation(line: 86, column: 21, scope: !4241, inlinedAt: !7258)
!7454 = !DILocation(line: 86, column: 19, scope: !4241, inlinedAt: !7258)
!7455 = !DILocation(line: 86, column: 5, scope: !4241, inlinedAt: !7258)
!7456 = !DILocation(line: 88, column: 23, scope: !3956, inlinedAt: !7258)
!7457 = !DILocation(line: 88, column: 26, scope: !3956, inlinedAt: !7258)
!7458 = !DILocation(line: 88, column: 35, scope: !3956, inlinedAt: !7258)
!7459 = !DILocation(line: 88, column: 33, scope: !3956, inlinedAt: !7258)
!7460 = !DILocation(line: 92, column: 16, scope: !4250, inlinedAt: !7258)
!7461 = !DILocation(line: 92, column: 14, scope: !4250, inlinedAt: !7258)
!7462 = !DILocation(line: 92, column: 21, scope: !4253, inlinedAt: !7258)
!7463 = !DILocation(line: 92, column: 25, scope: !4253, inlinedAt: !7258)
!7464 = !DILocation(line: 92, column: 23, scope: !4253, inlinedAt: !7258)
!7465 = !DILocation(line: 92, column: 9, scope: !4253, inlinedAt: !7258)
!7466 = !DILocation(line: 93, column: 36, scope: !4259, inlinedAt: !7258)
!7467 = !DILocation(line: 93, column: 23, scope: !4259, inlinedAt: !7258)
!7468 = !DILocation(line: 93, column: 20, scope: !4259, inlinedAt: !7258)
!7469 = !DILocation(line: 94, column: 30, scope: !4259, inlinedAt: !7258)
!7470 = !DILocation(line: 94, column: 23, scope: !4259, inlinedAt: !7258)
!7471 = !DILocation(line: 94, column: 35, scope: !4259, inlinedAt: !7258)
!7472 = !DILocation(line: 94, column: 33, scope: !4259, inlinedAt: !7258)
!7473 = !DILocation(line: 94, column: 20, scope: !4259, inlinedAt: !7258)
!7474 = !DILocation(line: 92, column: 31, scope: !4268, inlinedAt: !7258)
!7475 = !DILocation(line: 92, column: 9, scope: !4268, inlinedAt: !7258)
!7476 = !DILocation(line: 96, column: 46, scope: !3956, inlinedAt: !7258)
!7477 = !DILocation(line: 96, column: 19, scope: !3956, inlinedAt: !7258)
!7478 = !DILocation(line: 96, column: 40, scope: !3956, inlinedAt: !7258)
!7479 = !DILocation(line: 96, column: 42, scope: !3956, inlinedAt: !7258)
!7480 = !DILocation(line: 96, column: 17, scope: !3956, inlinedAt: !7258)
!7481 = !DILocation(line: 97, column: 46, scope: !3956, inlinedAt: !7258)
!7482 = !DILocation(line: 97, column: 53, scope: !3956, inlinedAt: !7258)
!7483 = !DILocation(line: 97, column: 52, scope: !3956, inlinedAt: !7258)
!7484 = !DILocation(line: 97, column: 16, scope: !3956, inlinedAt: !7258)
!7485 = !DILocation(line: 97, column: 40, scope: !3956, inlinedAt: !7258)
!7486 = !DILocation(line: 97, column: 42, scope: !3956, inlinedAt: !7258)
!7487 = !DILocation(line: 97, column: 13, scope: !3956, inlinedAt: !7258)
!7488 = !DILocation(line: 98, column: 13, scope: !3976, inlinedAt: !7258)
!7489 = !DILocation(line: 98, column: 13, scope: !3956, inlinedAt: !7258)
!7490 = !DILocation(line: 99, column: 20, scope: !3974, inlinedAt: !7258)
!7491 = !DILocation(line: 99, column: 18, scope: !3974, inlinedAt: !7258)
!7492 = !DILocation(line: 99, column: 25, scope: !4289, inlinedAt: !7258)
!7493 = !DILocation(line: 99, column: 29, scope: !4289, inlinedAt: !7258)
!7494 = !DILocation(line: 99, column: 27, scope: !4289, inlinedAt: !7258)
!7495 = !DILocation(line: 99, column: 13, scope: !4289, inlinedAt: !7258)
!7496 = !DILocation(line: 100, column: 36, scope: !3972, inlinedAt: !7258)
!7497 = !DILocation(line: 100, column: 38, scope: !3972, inlinedAt: !7258)
!7498 = !DILocation(line: 100, column: 37, scope: !3972, inlinedAt: !7258)
!7499 = !DILocation(line: 100, column: 33, scope: !3972, inlinedAt: !7258)
!7500 = !DILocation(line: 100, column: 27, scope: !3972, inlinedAt: !7258)
!7501 = !DILocation(line: 102, column: 21, scope: !3971, inlinedAt: !7258)
!7502 = !DILocation(line: 102, column: 28, scope: !3971, inlinedAt: !7258)
!7503 = !DILocation(line: 102, column: 35, scope: !4301, inlinedAt: !7258)
!7504 = !DILocation(line: 102, column: 31, scope: !4301, inlinedAt: !7258)
!7505 = !DILocation(line: 102, column: 38, scope: !4301, inlinedAt: !7258)
!7506 = !DILocation(line: 102, column: 21, scope: !4301, inlinedAt: !7258)
!7507 = !DILocation(line: 103, column: 25, scope: !3969, inlinedAt: !7258)
!7508 = !DILocation(line: 103, column: 30, scope: !3969, inlinedAt: !7258)
!7509 = !DILocation(line: 103, column: 27, scope: !3969, inlinedAt: !7258)
!7510 = !DILocation(line: 103, column: 25, scope: !3970, inlinedAt: !7258)
!7511 = !DILocation(line: 104, column: 37, scope: !4310, inlinedAt: !7258)
!7512 = !DILocation(line: 104, column: 35, scope: !4310, inlinedAt: !7258)
!7513 = !DILocation(line: 105, column: 33, scope: !4310, inlinedAt: !7258)
!7514 = !DILocation(line: 106, column: 21, scope: !4310, inlinedAt: !7258)
!7515 = !DILocation(line: 107, column: 56, scope: !3968, inlinedAt: !7258)
!7516 = !DILocation(line: 107, column: 59, scope: !3968, inlinedAt: !7258)
!7517 = !DILocation(line: 107, column: 62, scope: !3968, inlinedAt: !7258)
!7518 = !DILocation(line: 107, column: 50, scope: !3968, inlinedAt: !7258)
!7519 = !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !7258)
!7520 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !7261)
!7521 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !7261)
!7522 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !7261)
!7523 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !7261)
!7524 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !7261)
!7525 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !7261)
!7526 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !7261)
!7527 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !7261)
!7528 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !7261)
!7529 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !7261)
!7530 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !7261)
!7531 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !7261)
!7532 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !7261)
!7533 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !7261)
!7534 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !7261)
!7535 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !7261)
!7536 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !7261)
!7537 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !7261)
!7538 = !DILocation(line: 108, column: 37, scope: !3968, inlinedAt: !7258)
!7539 = !DILocation(line: 108, column: 45, scope: !3968, inlinedAt: !7258)
!7540 = !DILocation(line: 108, column: 39, scope: !3968, inlinedAt: !7258)
!7541 = !DILocation(line: 108, column: 38, scope: !3968, inlinedAt: !7258)
!7542 = !DILocation(line: 108, column: 48, scope: !3968, inlinedAt: !7258)
!7543 = !DILocation(line: 108, column: 47, scope: !3968, inlinedAt: !7258)
!7544 = !DILocation(line: 108, column: 35, scope: !3968, inlinedAt: !7258)
!7545 = !DILocation(line: 109, column: 57, scope: !3968, inlinedAt: !7258)
!7546 = !DILocation(line: 109, column: 59, scope: !3968, inlinedAt: !7258)
!7547 = !DILocation(line: 109, column: 42, scope: !3968, inlinedAt: !7258)
!7548 = !DILocation(line: 109, column: 40, scope: !3968, inlinedAt: !7258)
!7549 = !DILocation(line: 109, column: 63, scope: !3968, inlinedAt: !7258)
!7550 = !DILocation(line: 109, column: 66, scope: !3968, inlinedAt: !7258)
!7551 = !DILocation(line: 109, column: 70, scope: !3968, inlinedAt: !7258)
!7552 = !DILocation(line: 109, column: 33, scope: !3968, inlinedAt: !7258)
!7553 = !DILocation(line: 111, column: 17, scope: !3970, inlinedAt: !7258)
!7554 = !DILocation(line: 112, column: 37, scope: !4356, inlinedAt: !7258)
!7555 = !DILocation(line: 112, column: 33, scope: !4356, inlinedAt: !7258)
!7556 = !DILocation(line: 112, column: 40, scope: !4356, inlinedAt: !7258)
!7557 = !DILocation(line: 112, column: 39, scope: !4356, inlinedAt: !7258)
!7558 = !DILocation(line: 112, column: 31, scope: !4356, inlinedAt: !7258)
!7559 = !DILocation(line: 114, column: 22, scope: !3972, inlinedAt: !7258)
!7560 = !DILocation(line: 114, column: 26, scope: !3972, inlinedAt: !7258)
!7561 = !DILocation(line: 114, column: 24, scope: !3972, inlinedAt: !7258)
!7562 = !DILocation(line: 114, column: 20, scope: !3972, inlinedAt: !7258)
!7563 = !DILocation(line: 115, column: 21, scope: !4366, inlinedAt: !7258)
!7564 = !DILocation(line: 115, column: 21, scope: !3972, inlinedAt: !7258)
!7565 = !DILocation(line: 116, column: 35, scope: !4366, inlinedAt: !7258)
!7566 = !DILocation(line: 116, column: 37, scope: !4366, inlinedAt: !7258)
!7567 = !DILocation(line: 116, column: 36, scope: !4366, inlinedAt: !7258)
!7568 = !DILocation(line: 116, column: 32, scope: !4366, inlinedAt: !7258)
!7569 = !DILocation(line: 116, column: 40, scope: !4366, inlinedAt: !7258)
!7570 = !DILocation(line: 116, column: 47, scope: !4374, inlinedAt: !7258)
!7571 = !DILocation(line: 116, column: 32, scope: !4374, inlinedAt: !7258)
!7572 = !DILocation(line: 116, column: 60, scope: !4377, inlinedAt: !7258)
!7573 = !DILocation(line: 116, column: 59, scope: !4377, inlinedAt: !7258)
!7574 = !DILocation(line: 116, column: 32, scope: !4377, inlinedAt: !7258)
!7575 = !DILocation(line: 116, column: 32, scope: !4381, inlinedAt: !7258)
!7576 = !DILocation(line: 116, column: 25, scope: !4381, inlinedAt: !7258)
!7577 = !DILocation(line: 116, column: 27, scope: !4381, inlinedAt: !7258)
!7578 = !DILocation(line: 116, column: 26, scope: !4381, inlinedAt: !7258)
!7579 = !DILocation(line: 116, column: 21, scope: !4381, inlinedAt: !7258)
!7580 = !DILocation(line: 116, column: 30, scope: !4381, inlinedAt: !7258)
!7581 = !DILocation(line: 117, column: 25, scope: !4388, inlinedAt: !7258)
!7582 = !DILocation(line: 117, column: 21, scope: !4388, inlinedAt: !7258)
!7583 = !DILocation(line: 117, column: 28, scope: !4388, inlinedAt: !7258)
!7584 = !DILocation(line: 117, column: 21, scope: !3972, inlinedAt: !7258)
!7585 = !DILocation(line: 118, column: 28, scope: !4388, inlinedAt: !7258)
!7586 = !DILocation(line: 118, column: 21, scope: !4388, inlinedAt: !7258)
!7587 = !DILocation(line: 119, column: 28, scope: !3972, inlinedAt: !7258)
!7588 = !DILocation(line: 119, column: 38, scope: !3972, inlinedAt: !7258)
!7589 = !DILocation(line: 119, column: 37, scope: !3972, inlinedAt: !7258)
!7590 = !DILocation(line: 119, column: 25, scope: !3972, inlinedAt: !7258)
!7591 = !DILocation(line: 120, column: 23, scope: !3972, inlinedAt: !7258)
!7592 = !DILocation(line: 120, column: 26, scope: !3972, inlinedAt: !7258)
!7593 = !DILocation(line: 120, column: 25, scope: !3972, inlinedAt: !7258)
!7594 = !DILocation(line: 120, column: 20, scope: !3972, inlinedAt: !7258)
!7595 = !DILocation(line: 99, column: 35, scope: !4403, inlinedAt: !7258)
!7596 = !DILocation(line: 99, column: 13, scope: !4403, inlinedAt: !7258)
!7597 = !DILocation(line: 122, column: 9, scope: !3975, inlinedAt: !7258)
!7598 = !DILocation(line: 123, column: 20, scope: !4409, inlinedAt: !7258)
!7599 = !DILocation(line: 123, column: 18, scope: !4409, inlinedAt: !7258)
!7600 = !DILocation(line: 123, column: 25, scope: !4413, inlinedAt: !7258)
!7601 = !DILocation(line: 123, column: 29, scope: !4413, inlinedAt: !7258)
!7602 = !DILocation(line: 123, column: 27, scope: !4413, inlinedAt: !7258)
!7603 = !DILocation(line: 123, column: 13, scope: !4413, inlinedAt: !7258)
!7604 = !DILocation(line: 124, column: 33, scope: !4419, inlinedAt: !7258)
!7605 = !DILocation(line: 124, column: 29, scope: !4419, inlinedAt: !7258)
!7606 = !DILocation(line: 124, column: 36, scope: !4419, inlinedAt: !7258)
!7607 = !DILocation(line: 124, column: 35, scope: !4419, inlinedAt: !7258)
!7608 = !DILocation(line: 124, column: 27, scope: !4419, inlinedAt: !7258)
!7609 = !DILocation(line: 125, column: 28, scope: !4419, inlinedAt: !7258)
!7610 = !DILocation(line: 125, column: 38, scope: !4419, inlinedAt: !7258)
!7611 = !DILocation(line: 125, column: 37, scope: !4419, inlinedAt: !7258)
!7612 = !DILocation(line: 125, column: 25, scope: !4419, inlinedAt: !7258)
!7613 = !DILocation(line: 126, column: 21, scope: !4429, inlinedAt: !7258)
!7614 = !DILocation(line: 126, column: 21, scope: !4419, inlinedAt: !7258)
!7615 = !DILocation(line: 127, column: 32, scope: !4429, inlinedAt: !7258)
!7616 = !DILocation(line: 127, column: 25, scope: !4429, inlinedAt: !7258)
!7617 = !DILocation(line: 127, column: 27, scope: !4429, inlinedAt: !7258)
!7618 = !DILocation(line: 127, column: 26, scope: !4429, inlinedAt: !7258)
!7619 = !DILocation(line: 127, column: 21, scope: !4429, inlinedAt: !7258)
!7620 = !DILocation(line: 127, column: 30, scope: !4429, inlinedAt: !7258)
!7621 = !DILocation(line: 128, column: 27, scope: !4419, inlinedAt: !7258)
!7622 = !DILocation(line: 128, column: 29, scope: !4419, inlinedAt: !7258)
!7623 = !DILocation(line: 128, column: 28, scope: !4419, inlinedAt: !7258)
!7624 = !DILocation(line: 128, column: 24, scope: !4419, inlinedAt: !7258)
!7625 = !DILocation(line: 128, column: 34, scope: !4419, inlinedAt: !7258)
!7626 = !DILocation(line: 128, column: 32, scope: !4419, inlinedAt: !7258)
!7627 = !DILocation(line: 128, column: 49, scope: !4419, inlinedAt: !7258)
!7628 = !DILocation(line: 128, column: 51, scope: !4419, inlinedAt: !7258)
!7629 = !DILocation(line: 128, column: 50, scope: !4419, inlinedAt: !7258)
!7630 = !DILocation(line: 128, column: 46, scope: !4419, inlinedAt: !7258)
!7631 = !DILocation(line: 128, column: 56, scope: !4419, inlinedAt: !7258)
!7632 = !DILocation(line: 128, column: 54, scope: !4419, inlinedAt: !7258)
!7633 = !DILocation(line: 128, column: 44, scope: !4419, inlinedAt: !7258)
!7634 = !DILocation(line: 128, column: 20, scope: !4419, inlinedAt: !7258)
!7635 = !DILocation(line: 123, column: 35, scope: !4452, inlinedAt: !7258)
!7636 = !DILocation(line: 123, column: 13, scope: !4452, inlinedAt: !7258)
!7637 = !DILocation(line: 131, column: 17, scope: !3956, inlinedAt: !7258)
!7638 = !DILocation(line: 131, column: 22, scope: !3956, inlinedAt: !7258)
!7639 = !DILocation(line: 131, column: 20, scope: !3956, inlinedAt: !7258)
!7640 = !DILocation(line: 131, column: 31, scope: !3956, inlinedAt: !7258)
!7641 = !DILocation(line: 131, column: 29, scope: !3956, inlinedAt: !7258)
!7642 = !DILocation(line: 131, column: 14, scope: !3956, inlinedAt: !7258)
!7643 = !DILocation(line: 132, column: 20, scope: !3956, inlinedAt: !7258)
!7644 = !DILocation(line: 132, column: 17, scope: !3956, inlinedAt: !7258)
!7645 = !DILocation(line: 133, column: 13, scope: !4465, inlinedAt: !7258)
!7646 = !DILocation(line: 133, column: 21, scope: !4465, inlinedAt: !7258)
!7647 = !DILocation(line: 133, column: 18, scope: !4465, inlinedAt: !7258)
!7648 = !DILocation(line: 133, column: 13, scope: !3956, inlinedAt: !7258)
!7649 = !DILocation(line: 134, column: 20, scope: !4465, inlinedAt: !7258)
!7650 = !DILocation(line: 134, column: 13, scope: !4465, inlinedAt: !7258)
!7651 = !DILocation(line: 135, column: 13, scope: !3955, inlinedAt: !7258)
!7652 = !DILocation(line: 135, column: 13, scope: !3956, inlinedAt: !7258)
!7653 = !DILocation(line: 136, column: 22, scope: !3954, inlinedAt: !7258)
!7654 = !DILocation(line: 136, column: 53, scope: !3954, inlinedAt: !7258)
!7655 = !DILocation(line: 136, column: 26, scope: !3954, inlinedAt: !7258)
!7656 = !DILocation(line: 136, column: 47, scope: !3954, inlinedAt: !7258)
!7657 = !DILocation(line: 136, column: 49, scope: !3954, inlinedAt: !7258)
!7658 = !DILocation(line: 136, column: 90, scope: !3954, inlinedAt: !7258)
!7659 = !DILocation(line: 136, column: 62, scope: !3954, inlinedAt: !7258)
!7660 = !DILocation(line: 136, column: 84, scope: !3954, inlinedAt: !7258)
!7661 = !DILocation(line: 136, column: 86, scope: !3954, inlinedAt: !7258)
!7662 = !DILocation(line: 136, column: 13, scope: !3954, inlinedAt: !7258)
!7663 = !DILocation(line: 137, column: 17, scope: !4484, inlinedAt: !7258)
!7664 = !DILocation(line: 137, column: 17, scope: !3954, inlinedAt: !7258)
!7665 = !DILocation(line: 138, column: 24, scope: !4487, inlinedAt: !7258)
!7666 = !DILocation(line: 138, column: 22, scope: !4487, inlinedAt: !7258)
!7667 = !DILocation(line: 138, column: 29, scope: !4490, inlinedAt: !7258)
!7668 = !DILocation(line: 138, column: 33, scope: !4490, inlinedAt: !7258)
!7669 = !DILocation(line: 138, column: 31, scope: !4490, inlinedAt: !7258)
!7670 = !DILocation(line: 138, column: 17, scope: !4490, inlinedAt: !7258)
!7671 = !DILocation(line: 139, column: 55, scope: !4496, inlinedAt: !7258)
!7672 = !DILocation(line: 139, column: 62, scope: !4496, inlinedAt: !7258)
!7673 = !DILocation(line: 139, column: 61, scope: !4496, inlinedAt: !7258)
!7674 = !DILocation(line: 139, column: 66, scope: !4496, inlinedAt: !7258)
!7675 = !DILocation(line: 139, column: 65, scope: !4496, inlinedAt: !7258)
!7676 = !DILocation(line: 139, column: 25, scope: !4496, inlinedAt: !7258)
!7677 = !DILocation(line: 139, column: 49, scope: !4496, inlinedAt: !7258)
!7678 = !DILocation(line: 139, column: 51, scope: !4496, inlinedAt: !7258)
!7679 = !DILocation(line: 139, column: 69, scope: !4496, inlinedAt: !7258)
!7680 = !DILocation(line: 139, column: 25, scope: !4491, inlinedAt: !7258)
!7681 = !DILocation(line: 140, column: 34, scope: !4496, inlinedAt: !7258)
!7682 = !DILocation(line: 140, column: 44, scope: !4496, inlinedAt: !7258)
!7683 = !DILocation(line: 140, column: 46, scope: !4496, inlinedAt: !7258)
!7684 = !DILocation(line: 140, column: 45, scope: !4496, inlinedAt: !7258)
!7685 = !DILocation(line: 140, column: 41, scope: !4496, inlinedAt: !7258)
!7686 = !DILocation(line: 140, column: 49, scope: !4496, inlinedAt: !7258)
!7687 = !DILocation(line: 140, column: 25, scope: !4496, inlinedAt: !7258)
!7688 = !DILocation(line: 138, column: 39, scope: !4514, inlinedAt: !7258)
!7689 = !DILocation(line: 138, column: 17, scope: !4514, inlinedAt: !7258)
!7690 = !DILocation(line: 140, column: 55, scope: !4519, inlinedAt: !7258)
!7691 = !DILocation(line: 141, column: 17, scope: !3953, inlinedAt: !7258)
!7692 = !DILocation(line: 141, column: 17, scope: !3954, inlinedAt: !7258)
!7693 = !DILocation(line: 142, column: 24, scope: !3951, inlinedAt: !7258)
!7694 = !DILocation(line: 142, column: 22, scope: !3951, inlinedAt: !7258)
!7695 = !DILocation(line: 142, column: 29, scope: !4525, inlinedAt: !7258)
!7696 = !DILocation(line: 142, column: 31, scope: !4525, inlinedAt: !7258)
!7697 = !DILocation(line: 142, column: 17, scope: !4525, inlinedAt: !7258)
!7698 = !DILocation(line: 143, column: 55, scope: !3948, inlinedAt: !7258)
!7699 = !DILocation(line: 143, column: 61, scope: !3948, inlinedAt: !7258)
!7700 = !DILocation(line: 143, column: 64, scope: !3948, inlinedAt: !7258)
!7701 = !DILocation(line: 143, column: 63, scope: !3948, inlinedAt: !7258)
!7702 = !DILocation(line: 143, column: 25, scope: !3948, inlinedAt: !7258)
!7703 = !DILocation(line: 143, column: 49, scope: !3948, inlinedAt: !7258)
!7704 = !DILocation(line: 143, column: 51, scope: !3948, inlinedAt: !7258)
!7705 = !DILocation(line: 143, column: 67, scope: !3948, inlinedAt: !7258)
!7706 = !DILocation(line: 143, column: 25, scope: !3949, inlinedAt: !7258)
!7707 = !DILocation(line: 144, column: 68, scope: !3947, inlinedAt: !7258)
!7708 = !DILocation(line: 144, column: 70, scope: !3947, inlinedAt: !7258)
!7709 = !DILocation(line: 144, column: 69, scope: !3947, inlinedAt: !7258)
!7710 = !DILocation(line: 144, column: 65, scope: !3947, inlinedAt: !7258)
!7711 = !DILocation(line: 144, column: 59, scope: !3947, inlinedAt: !7258)
!7712 = !DILocation(line: 144, column: 75, scope: !3947, inlinedAt: !7258)
!7713 = !DILocation(line: 144, column: 78, scope: !3947, inlinedAt: !7258)
!7714 = !DILocation(line: 144, column: 53, scope: !4545, inlinedAt: !7258)
!7715 = !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !7258)
!7716 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !7257)
!7717 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !7257)
!7718 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !7257)
!7719 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !7257)
!7720 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !7257)
!7721 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !7257)
!7722 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !7257)
!7723 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !7257)
!7724 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !7257)
!7725 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !7257)
!7726 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !7257)
!7727 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !7257)
!7728 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !7257)
!7729 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !7257)
!7730 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !7257)
!7731 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !7257)
!7732 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !7257)
!7733 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !7257)
!7734 = !DILocation(line: 145, column: 56, scope: !3947, inlinedAt: !7258)
!7735 = !DILocation(line: 145, column: 61, scope: !3947, inlinedAt: !7258)
!7736 = !DILocation(line: 145, column: 41, scope: !3947, inlinedAt: !7258)
!7737 = !DILocation(line: 145, column: 39, scope: !3947, inlinedAt: !7258)
!7738 = !DILocation(line: 147, column: 34, scope: !3947, inlinedAt: !7258)
!7739 = !DILocation(line: 147, column: 38, scope: !3947, inlinedAt: !7258)
!7740 = !DILocation(line: 147, column: 42, scope: !3947, inlinedAt: !7258)
!7741 = !DILocation(line: 147, column: 46, scope: !3947, inlinedAt: !7258)
!7742 = !DILocation(line: 147, column: 58, scope: !3947, inlinedAt: !7258)
!7743 = !DILocation(line: 147, column: 62, scope: !3947, inlinedAt: !7258)
!7744 = !DILocation(line: 147, column: 66, scope: !3947, inlinedAt: !7258)
!7745 = !DILocation(line: 147, column: 54, scope: !3947, inlinedAt: !7258)
!7746 = !DILocation(line: 147, column: 72, scope: !3947, inlinedAt: !7258)
!7747 = !DILocation(line: 147, column: 25, scope: !3947, inlinedAt: !7258)
!7748 = !DILocation(line: 148, column: 35, scope: !3947, inlinedAt: !7258)
!7749 = !DILocation(line: 148, column: 39, scope: !3947, inlinedAt: !7258)
!7750 = !DILocation(line: 148, column: 44, scope: !3947, inlinedAt: !7258)
!7751 = !DILocation(line: 148, column: 25, scope: !3947, inlinedAt: !7258)
!7752 = !DILocation(line: 149, column: 21, scope: !3947, inlinedAt: !7258)
!7753 = !DILocation(line: 142, column: 37, scope: !4585, inlinedAt: !7258)
!7754 = !DILocation(line: 142, column: 17, scope: !4585, inlinedAt: !7258)
!7755 = !DILocation(line: 151, column: 13, scope: !3952, inlinedAt: !7258)
!7756 = !DILocation(line: 152, column: 9, scope: !3954, inlinedAt: !7258)
!7757 = !DILocation(line: 86, column: 32, scope: !4592, inlinedAt: !7258)
!7758 = !DILocation(line: 86, column: 29, scope: !4592, inlinedAt: !7258)
!7759 = !DILocation(line: 86, column: 5, scope: !4592, inlinedAt: !7258)
!7760 = !DILocation(line: 155, column: 9, scope: !4598, inlinedAt: !7258)
!7761 = !DILocation(line: 155, column: 9, scope: !3959, inlinedAt: !7258)
!7762 = !DILocation(line: 156, column: 17, scope: !4598, inlinedAt: !7258)
!7763 = !DILocation(line: 156, column: 10, scope: !4598, inlinedAt: !7258)
!7764 = !DILocation(line: 156, column: 15, scope: !4598, inlinedAt: !7258)
!7765 = !DILocation(line: 156, column: 9, scope: !4598, inlinedAt: !7258)
!7766 = !DILocation(line: 157, column: 9, scope: !4605, inlinedAt: !7258)
!7767 = !DILocation(line: 157, column: 9, scope: !3959, inlinedAt: !7258)
!7768 = !DILocation(line: 158, column: 19, scope: !4605, inlinedAt: !7258)
!7769 = !DILocation(line: 158, column: 10, scope: !4605, inlinedAt: !7258)
!7770 = !DILocation(line: 158, column: 17, scope: !4605, inlinedAt: !7258)
!7771 = !DILocation(line: 158, column: 9, scope: !4605, inlinedAt: !7258)
!7772 = !DILocation(line: 159, column: 12, scope: !3959, inlinedAt: !7258)
!7773 = !DILocation(line: 159, column: 5, scope: !3959, inlinedAt: !7258)
!7774 = !DILocation(line: 160, column: 1, scope: !3959, inlinedAt: !7258)
!7775 = !DILocation(line: 192, column: 247, scope: !7255)
!7776 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_STEREO", scope: !963, file: !963, line: 193, type: !967, isLocal: true, isDefinition: true, scopeLine: 193, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!7777 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !7778)
!7778 = distinct !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !7779)
!7779 = distinct !DILocation(line: 193, column: 255, scope: !7776)
!7780 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !7778)
!7781 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !7782)
!7782 = distinct !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !7779)
!7783 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !7782)
!7784 = !DILocation(line: 42, column: 55, scope: !3959, inlinedAt: !7779)
!7785 = !DILocation(line: 43, column: 48, scope: !3959, inlinedAt: !7779)
!7786 = !DILocation(line: 43, column: 65, scope: !3959, inlinedAt: !7779)
!7787 = !DILocation(line: 43, column: 76, scope: !3959, inlinedAt: !7779)
!7788 = !DILocation(line: 44, column: 46, scope: !3959, inlinedAt: !7779)
!7789 = !DILocation(line: 44, column: 58, scope: !3959, inlinedAt: !7779)
!7790 = !DILocation(line: 44, column: 68, scope: !3959, inlinedAt: !7779)
!7791 = !DILocation(line: 45, column: 37, scope: !3959, inlinedAt: !7779)
!7792 = !DILocation(line: 45, column: 53, scope: !3959, inlinedAt: !7779)
!7793 = !DILocation(line: 45, column: 73, scope: !3959, inlinedAt: !7779)
!7794 = !DILocation(line: 46, column: 38, scope: !3959, inlinedAt: !7779)
!7795 = !DILocation(line: 46, column: 51, scope: !3959, inlinedAt: !7779)
!7796 = !DILocation(line: 46, column: 63, scope: !3959, inlinedAt: !7779)
!7797 = !DILocation(line: 46, column: 76, scope: !3959, inlinedAt: !7779)
!7798 = !DILocation(line: 47, column: 37, scope: !3959, inlinedAt: !7779)
!7799 = !DILocation(line: 47, column: 50, scope: !3959, inlinedAt: !7779)
!7800 = !DILocation(line: 47, column: 62, scope: !3959, inlinedAt: !7779)
!7801 = !DILocation(line: 47, column: 76, scope: !3959, inlinedAt: !7779)
!7802 = !DILocation(line: 48, column: 45, scope: !3959, inlinedAt: !7779)
!7803 = !DILocation(line: 50, column: 15, scope: !3959, inlinedAt: !7779)
!7804 = !DILocation(line: 51, column: 17, scope: !3959, inlinedAt: !7779)
!7805 = !DILocation(line: 52, column: 17, scope: !3959, inlinedAt: !7779)
!7806 = !DILocation(line: 53, column: 17, scope: !3959, inlinedAt: !7779)
!7807 = !DILocation(line: 54, column: 17, scope: !3959, inlinedAt: !7779)
!7808 = !DILocation(line: 55, column: 9, scope: !3959, inlinedAt: !7779)
!7809 = !DILocation(line: 55, column: 12, scope: !3959, inlinedAt: !7779)
!7810 = !DILocation(line: 56, column: 11, scope: !3959, inlinedAt: !7779)
!7811 = !DILocation(line: 57, column: 11, scope: !3959, inlinedAt: !7779)
!7812 = !DILocation(line: 58, column: 15, scope: !3959, inlinedAt: !7779)
!7813 = !DILocation(line: 59, column: 9, scope: !3959, inlinedAt: !7779)
!7814 = !DILocation(line: 60, column: 9, scope: !3959, inlinedAt: !7779)
!7815 = !DILocation(line: 87, column: 22, scope: !3956, inlinedAt: !7779)
!7816 = !DILocation(line: 88, column: 14, scope: !3956, inlinedAt: !7779)
!7817 = !DILocation(line: 89, column: 13, scope: !3956, inlinedAt: !7779)
!7818 = !DILocation(line: 90, column: 13, scope: !3956, inlinedAt: !7779)
!7819 = !DILocation(line: 91, column: 15, scope: !3956, inlinedAt: !7779)
!7820 = !DILocation(line: 91, column: 26, scope: !3956, inlinedAt: !7779)
!7821 = !DILocation(line: 100, column: 23, scope: !3972, inlinedAt: !7779)
!7822 = !DILocation(line: 101, column: 23, scope: !3972, inlinedAt: !7779)
!7823 = !DILocation(line: 107, column: 29, scope: !3968, inlinedAt: !7779)
!7824 = !DILocation(line: 144, column: 29, scope: !3947, inlinedAt: !7779)
!7825 = !DILocation(line: 145, column: 29, scope: !3947, inlinedAt: !7779)
!7826 = !DILocalVariable(name: "s", arg: 1, scope: !7776, file: !963, line: 193, type: !970)
!7827 = !DILocation(line: 193, column: 74, scope: !7776)
!7828 = !DILocalVariable(name: "pb", arg: 2, scope: !7776, file: !963, line: 193, type: !2645)
!7829 = !DILocation(line: 193, column: 92, scope: !7776)
!7830 = !DILocalVariable(name: "in", arg: 3, scope: !7776, file: !963, line: 193, type: !1103)
!7831 = !DILocation(line: 193, column: 109, scope: !7776)
!7832 = !DILocalVariable(name: "quant", arg: 4, scope: !7776, file: !963, line: 193, type: !1102)
!7833 = !DILocation(line: 193, column: 120, scope: !7776)
!7834 = !DILocalVariable(name: "scaled", arg: 5, scope: !7776, file: !963, line: 193, type: !1103)
!7835 = !DILocation(line: 193, column: 140, scope: !7776)
!7836 = !DILocalVariable(name: "size", arg: 6, scope: !7776, file: !963, line: 193, type: !992)
!7837 = !DILocation(line: 193, column: 152, scope: !7776)
!7838 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !7776, file: !963, line: 193, type: !992)
!7839 = !DILocation(line: 193, column: 162, scope: !7776)
!7840 = !DILocalVariable(name: "cb", arg: 8, scope: !7776, file: !963, line: 193, type: !992)
!7841 = !DILocation(line: 193, column: 177, scope: !7776)
!7842 = !DILocalVariable(name: "lambda", arg: 9, scope: !7776, file: !963, line: 193, type: !1104)
!7843 = !DILocation(line: 193, column: 193, scope: !7776)
!7844 = !DILocalVariable(name: "uplim", arg: 10, scope: !7776, file: !963, line: 193, type: !1104)
!7845 = !DILocation(line: 193, column: 213, scope: !7776)
!7846 = !DILocalVariable(name: "bits", arg: 11, scope: !7776, file: !963, line: 193, type: !1963)
!7847 = !DILocation(line: 193, column: 225, scope: !7776)
!7848 = !DILocalVariable(name: "energy", arg: 12, scope: !7776, file: !963, line: 193, type: !1102)
!7849 = !DILocation(line: 193, column: 238, scope: !7776)
!7850 = !DILocation(line: 193, column: 295, scope: !7776)
!7851 = !DILocation(line: 193, column: 298, scope: !7776)
!7852 = !DILocation(line: 193, column: 302, scope: !7776)
!7853 = !DILocation(line: 193, column: 306, scope: !7776)
!7854 = !DILocation(line: 193, column: 313, scope: !7776)
!7855 = !DILocation(line: 193, column: 321, scope: !7776)
!7856 = !DILocation(line: 193, column: 327, scope: !7776)
!7857 = !DILocation(line: 193, column: 351, scope: !7776)
!7858 = !DILocation(line: 193, column: 355, scope: !7776)
!7859 = !DILocation(line: 193, column: 363, scope: !7776)
!7860 = !DILocation(line: 193, column: 370, scope: !7776)
!7861 = !DILocation(line: 193, column: 376, scope: !7776)
!7862 = !DILocation(line: 193, column: 255, scope: !7776)
!7863 = !DILocation(line: 50, column: 29, scope: !3959, inlinedAt: !7779)
!7864 = !DILocation(line: 50, column: 27, scope: !3959, inlinedAt: !7779)
!7865 = !DILocation(line: 50, column: 39, scope: !3959, inlinedAt: !7779)
!7866 = !DILocation(line: 50, column: 45, scope: !3959, inlinedAt: !7779)
!7867 = !DILocation(line: 51, column: 40, scope: !3959, inlinedAt: !7779)
!7868 = !DILocation(line: 51, column: 21, scope: !3959, inlinedAt: !7779)
!7869 = !DILocation(line: 52, column: 42, scope: !3959, inlinedAt: !7779)
!7870 = !DILocation(line: 52, column: 23, scope: !3959, inlinedAt: !7779)
!7871 = !DILocation(line: 53, column: 47, scope: !3959, inlinedAt: !7779)
!7872 = !DILocation(line: 53, column: 45, scope: !3959, inlinedAt: !7779)
!7873 = !DILocation(line: 53, column: 57, scope: !3959, inlinedAt: !7779)
!7874 = !DILocation(line: 53, column: 63, scope: !3959, inlinedAt: !7779)
!7875 = !DILocation(line: 53, column: 22, scope: !3959, inlinedAt: !7779)
!7876 = !DILocation(line: 54, column: 44, scope: !3959, inlinedAt: !7779)
!7877 = !DILocation(line: 54, column: 43, scope: !3959, inlinedAt: !7779)
!7878 = !DILocation(line: 58, column: 21, scope: !3959, inlinedAt: !7779)
!7879 = !DILocation(line: 62, column: 9, scope: !4116, inlinedAt: !7779)
!7880 = !DILocation(line: 62, column: 17, scope: !4116, inlinedAt: !7779)
!7881 = !DILocation(line: 62, column: 20, scope: !4119, inlinedAt: !7779)
!7882 = !DILocation(line: 62, column: 29, scope: !4119, inlinedAt: !7779)
!7883 = !DILocation(line: 62, column: 32, scope: !4122, inlinedAt: !7779)
!7884 = !DILocation(line: 62, column: 9, scope: !4122, inlinedAt: !7779)
!7885 = !DILocation(line: 63, column: 16, scope: !4125, inlinedAt: !7779)
!7886 = !DILocation(line: 63, column: 14, scope: !4125, inlinedAt: !7779)
!7887 = !DILocation(line: 63, column: 21, scope: !4129, inlinedAt: !7779)
!7888 = !DILocation(line: 63, column: 25, scope: !4129, inlinedAt: !7779)
!7889 = !DILocation(line: 63, column: 23, scope: !4129, inlinedAt: !7779)
!7890 = !DILocation(line: 63, column: 9, scope: !4129, inlinedAt: !7779)
!7891 = !DILocation(line: 64, column: 24, scope: !4130, inlinedAt: !7779)
!7892 = !DILocation(line: 64, column: 21, scope: !4130, inlinedAt: !7779)
!7893 = !DILocation(line: 64, column: 30, scope: !4130, inlinedAt: !7779)
!7894 = !DILocation(line: 64, column: 27, scope: !4130, inlinedAt: !7779)
!7895 = !DILocation(line: 64, column: 26, scope: !4130, inlinedAt: !7779)
!7896 = !DILocation(line: 64, column: 18, scope: !4130, inlinedAt: !7779)
!7897 = !DILocation(line: 63, column: 32, scope: !4141, inlinedAt: !7779)
!7898 = !DILocation(line: 63, column: 9, scope: !4141, inlinedAt: !7779)
!7899 = !DILocation(line: 65, column: 13, scope: !4146, inlinedAt: !7779)
!7900 = !DILocation(line: 65, column: 13, scope: !4126, inlinedAt: !7779)
!7901 = !DILocation(line: 66, column: 14, scope: !4146, inlinedAt: !7779)
!7902 = !DILocation(line: 66, column: 19, scope: !4146, inlinedAt: !7779)
!7903 = !DILocation(line: 66, column: 13, scope: !4146, inlinedAt: !7779)
!7904 = !DILocation(line: 67, column: 13, scope: !4152, inlinedAt: !7779)
!7905 = !DILocation(line: 67, column: 13, scope: !4126, inlinedAt: !7779)
!7906 = !DILocation(line: 68, column: 23, scope: !4152, inlinedAt: !7779)
!7907 = !DILocation(line: 68, column: 14, scope: !4152, inlinedAt: !7779)
!7908 = !DILocation(line: 68, column: 21, scope: !4152, inlinedAt: !7779)
!7909 = !DILocation(line: 68, column: 13, scope: !4152, inlinedAt: !7779)
!7910 = !DILocation(line: 69, column: 13, scope: !4159, inlinedAt: !7779)
!7911 = !DILocation(line: 69, column: 13, scope: !4126, inlinedAt: !7779)
!7912 = !DILocation(line: 70, column: 20, scope: !4162, inlinedAt: !7779)
!7913 = !DILocation(line: 70, column: 18, scope: !4162, inlinedAt: !7779)
!7914 = !DILocation(line: 70, column: 25, scope: !4166, inlinedAt: !7779)
!7915 = !DILocation(line: 70, column: 29, scope: !4166, inlinedAt: !7779)
!7916 = !DILocation(line: 70, column: 27, scope: !4166, inlinedAt: !7779)
!7917 = !DILocation(line: 70, column: 13, scope: !4166, inlinedAt: !7779)
!7918 = !DILocation(line: 71, column: 24, scope: !4172, inlinedAt: !7779)
!7919 = !DILocation(line: 71, column: 22, scope: !4172, inlinedAt: !7779)
!7920 = !DILocation(line: 71, column: 29, scope: !4175, inlinedAt: !7779)
!7921 = !DILocation(line: 71, column: 33, scope: !4175, inlinedAt: !7779)
!7922 = !DILocation(line: 71, column: 31, scope: !4175, inlinedAt: !7779)
!7923 = !DILocation(line: 71, column: 17, scope: !4175, inlinedAt: !7779)
!7924 = !DILocation(line: 72, column: 25, scope: !4176, inlinedAt: !7779)
!7925 = !DILocation(line: 72, column: 27, scope: !4176, inlinedAt: !7779)
!7926 = !DILocation(line: 72, column: 26, scope: !4176, inlinedAt: !7779)
!7927 = !DILocation(line: 72, column: 21, scope: !4176, inlinedAt: !7779)
!7928 = !DILocation(line: 72, column: 30, scope: !4176, inlinedAt: !7779)
!7929 = !DILocation(line: 71, column: 39, scope: !4186, inlinedAt: !7779)
!7930 = !DILocation(line: 71, column: 17, scope: !4186, inlinedAt: !7779)
!7931 = !DILocation(line: 70, column: 40, scope: !4191, inlinedAt: !7779)
!7932 = !DILocation(line: 70, column: 37, scope: !4191, inlinedAt: !7779)
!7933 = !DILocation(line: 70, column: 13, scope: !4191, inlinedAt: !7779)
!7934 = !DILocation(line: 73, column: 9, scope: !4163, inlinedAt: !7779)
!7935 = !DILocation(line: 74, column: 16, scope: !4126, inlinedAt: !7779)
!7936 = !DILocation(line: 74, column: 23, scope: !4126, inlinedAt: !7779)
!7937 = !DILocation(line: 74, column: 21, scope: !4126, inlinedAt: !7779)
!7938 = !DILocation(line: 74, column: 9, scope: !4126, inlinedAt: !7779)
!7939 = !DILocation(line: 76, column: 10, scope: !4202, inlinedAt: !7779)
!7940 = !DILocation(line: 76, column: 9, scope: !3959, inlinedAt: !7779)
!7941 = !DILocation(line: 77, column: 9, scope: !4205, inlinedAt: !7779)
!7942 = !DILocation(line: 77, column: 12, scope: !4205, inlinedAt: !7779)
!7943 = !DILocation(line: 77, column: 22, scope: !4205, inlinedAt: !7779)
!7944 = !DILocation(line: 77, column: 25, scope: !4205, inlinedAt: !7779)
!7945 = !DILocation(line: 77, column: 33, scope: !4205, inlinedAt: !7779)
!7946 = !DILocation(line: 77, column: 37, scope: !4205, inlinedAt: !7779)
!7947 = !DILocation(line: 78, column: 18, scope: !4205, inlinedAt: !7779)
!7948 = !DILocation(line: 78, column: 21, scope: !4205, inlinedAt: !7779)
!7949 = !DILocation(line: 78, column: 16, scope: !4205, inlinedAt: !7779)
!7950 = !DILocation(line: 79, column: 5, scope: !4205, inlinedAt: !7779)
!7951 = !DILocation(line: 80, column: 5, scope: !3959, inlinedAt: !7779)
!7952 = !DILocation(line: 80, column: 8, scope: !3959, inlinedAt: !7779)
!7953 = !DILocation(line: 80, column: 20, scope: !3959, inlinedAt: !7779)
!7954 = !DILocation(line: 80, column: 23, scope: !3959, inlinedAt: !7779)
!7955 = !DILocation(line: 80, column: 31, scope: !3959, inlinedAt: !7779)
!7956 = !DILocation(line: 80, column: 35, scope: !3959, inlinedAt: !7779)
!7957 = !DILocation(line: 80, column: 43, scope: !3959, inlinedAt: !7779)
!7958 = !DILocation(line: 80, column: 50, scope: !3959, inlinedAt: !7779)
!7959 = !DILocation(line: 80, column: 49, scope: !3959, inlinedAt: !7779)
!7960 = !DILocation(line: 80, column: 77, scope: !3959, inlinedAt: !7779)
!7961 = !DILocation(line: 80, column: 63, scope: !3959, inlinedAt: !7779)
!7962 = !DILocation(line: 80, column: 82, scope: !3959, inlinedAt: !7779)
!7963 = !DILocation(line: 80, column: 87, scope: !3959, inlinedAt: !7779)
!7964 = !DILocation(line: 81, column: 9, scope: !4229, inlinedAt: !7779)
!7965 = !DILocation(line: 81, column: 9, scope: !3959, inlinedAt: !7779)
!7966 = !DILocation(line: 82, column: 13, scope: !4232, inlinedAt: !7779)
!7967 = !DILocation(line: 83, column: 5, scope: !4232, inlinedAt: !7779)
!7968 = !DILocation(line: 84, column: 29, scope: !4235, inlinedAt: !7779)
!7969 = !DILocation(line: 84, column: 15, scope: !4235, inlinedAt: !7779)
!7970 = !DILocation(line: 84, column: 13, scope: !4235, inlinedAt: !7779)
!7971 = !DILocation(line: 86, column: 12, scope: !3958, inlinedAt: !7779)
!7972 = !DILocation(line: 86, column: 10, scope: !3958, inlinedAt: !7779)
!7973 = !DILocation(line: 86, column: 17, scope: !4241, inlinedAt: !7779)
!7974 = !DILocation(line: 86, column: 21, scope: !4241, inlinedAt: !7779)
!7975 = !DILocation(line: 86, column: 19, scope: !4241, inlinedAt: !7779)
!7976 = !DILocation(line: 86, column: 5, scope: !4241, inlinedAt: !7779)
!7977 = !DILocation(line: 88, column: 23, scope: !3956, inlinedAt: !7779)
!7978 = !DILocation(line: 88, column: 26, scope: !3956, inlinedAt: !7779)
!7979 = !DILocation(line: 88, column: 35, scope: !3956, inlinedAt: !7779)
!7980 = !DILocation(line: 88, column: 33, scope: !3956, inlinedAt: !7779)
!7981 = !DILocation(line: 92, column: 16, scope: !4250, inlinedAt: !7779)
!7982 = !DILocation(line: 92, column: 14, scope: !4250, inlinedAt: !7779)
!7983 = !DILocation(line: 92, column: 21, scope: !4253, inlinedAt: !7779)
!7984 = !DILocation(line: 92, column: 25, scope: !4253, inlinedAt: !7779)
!7985 = !DILocation(line: 92, column: 23, scope: !4253, inlinedAt: !7779)
!7986 = !DILocation(line: 92, column: 9, scope: !4253, inlinedAt: !7779)
!7987 = !DILocation(line: 93, column: 36, scope: !4259, inlinedAt: !7779)
!7988 = !DILocation(line: 93, column: 23, scope: !4259, inlinedAt: !7779)
!7989 = !DILocation(line: 93, column: 20, scope: !4259, inlinedAt: !7779)
!7990 = !DILocation(line: 94, column: 30, scope: !4259, inlinedAt: !7779)
!7991 = !DILocation(line: 94, column: 23, scope: !4259, inlinedAt: !7779)
!7992 = !DILocation(line: 94, column: 35, scope: !4259, inlinedAt: !7779)
!7993 = !DILocation(line: 94, column: 33, scope: !4259, inlinedAt: !7779)
!7994 = !DILocation(line: 94, column: 20, scope: !4259, inlinedAt: !7779)
!7995 = !DILocation(line: 92, column: 31, scope: !4268, inlinedAt: !7779)
!7996 = !DILocation(line: 92, column: 9, scope: !4268, inlinedAt: !7779)
!7997 = !DILocation(line: 96, column: 46, scope: !3956, inlinedAt: !7779)
!7998 = !DILocation(line: 96, column: 19, scope: !3956, inlinedAt: !7779)
!7999 = !DILocation(line: 96, column: 40, scope: !3956, inlinedAt: !7779)
!8000 = !DILocation(line: 96, column: 42, scope: !3956, inlinedAt: !7779)
!8001 = !DILocation(line: 96, column: 17, scope: !3956, inlinedAt: !7779)
!8002 = !DILocation(line: 97, column: 46, scope: !3956, inlinedAt: !7779)
!8003 = !DILocation(line: 97, column: 53, scope: !3956, inlinedAt: !7779)
!8004 = !DILocation(line: 97, column: 52, scope: !3956, inlinedAt: !7779)
!8005 = !DILocation(line: 97, column: 16, scope: !3956, inlinedAt: !7779)
!8006 = !DILocation(line: 97, column: 40, scope: !3956, inlinedAt: !7779)
!8007 = !DILocation(line: 97, column: 42, scope: !3956, inlinedAt: !7779)
!8008 = !DILocation(line: 97, column: 13, scope: !3956, inlinedAt: !7779)
!8009 = !DILocation(line: 98, column: 13, scope: !3976, inlinedAt: !7779)
!8010 = !DILocation(line: 98, column: 13, scope: !3956, inlinedAt: !7779)
!8011 = !DILocation(line: 99, column: 20, scope: !3974, inlinedAt: !7779)
!8012 = !DILocation(line: 99, column: 18, scope: !3974, inlinedAt: !7779)
!8013 = !DILocation(line: 99, column: 25, scope: !4289, inlinedAt: !7779)
!8014 = !DILocation(line: 99, column: 29, scope: !4289, inlinedAt: !7779)
!8015 = !DILocation(line: 99, column: 27, scope: !4289, inlinedAt: !7779)
!8016 = !DILocation(line: 99, column: 13, scope: !4289, inlinedAt: !7779)
!8017 = !DILocation(line: 100, column: 36, scope: !3972, inlinedAt: !7779)
!8018 = !DILocation(line: 100, column: 38, scope: !3972, inlinedAt: !7779)
!8019 = !DILocation(line: 100, column: 37, scope: !3972, inlinedAt: !7779)
!8020 = !DILocation(line: 100, column: 33, scope: !3972, inlinedAt: !7779)
!8021 = !DILocation(line: 100, column: 27, scope: !3972, inlinedAt: !7779)
!8022 = !DILocation(line: 102, column: 21, scope: !3971, inlinedAt: !7779)
!8023 = !DILocation(line: 102, column: 28, scope: !3971, inlinedAt: !7779)
!8024 = !DILocation(line: 102, column: 35, scope: !4301, inlinedAt: !7779)
!8025 = !DILocation(line: 102, column: 31, scope: !4301, inlinedAt: !7779)
!8026 = !DILocation(line: 102, column: 38, scope: !4301, inlinedAt: !7779)
!8027 = !DILocation(line: 102, column: 21, scope: !4301, inlinedAt: !7779)
!8028 = !DILocation(line: 103, column: 25, scope: !3969, inlinedAt: !7779)
!8029 = !DILocation(line: 103, column: 30, scope: !3969, inlinedAt: !7779)
!8030 = !DILocation(line: 103, column: 27, scope: !3969, inlinedAt: !7779)
!8031 = !DILocation(line: 103, column: 25, scope: !3970, inlinedAt: !7779)
!8032 = !DILocation(line: 104, column: 37, scope: !4310, inlinedAt: !7779)
!8033 = !DILocation(line: 104, column: 35, scope: !4310, inlinedAt: !7779)
!8034 = !DILocation(line: 105, column: 33, scope: !4310, inlinedAt: !7779)
!8035 = !DILocation(line: 106, column: 21, scope: !4310, inlinedAt: !7779)
!8036 = !DILocation(line: 107, column: 56, scope: !3968, inlinedAt: !7779)
!8037 = !DILocation(line: 107, column: 59, scope: !3968, inlinedAt: !7779)
!8038 = !DILocation(line: 107, column: 62, scope: !3968, inlinedAt: !7779)
!8039 = !DILocation(line: 107, column: 50, scope: !3968, inlinedAt: !7779)
!8040 = !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !7779)
!8041 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !7782)
!8042 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !7782)
!8043 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !7782)
!8044 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !7782)
!8045 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !7782)
!8046 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !7782)
!8047 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !7782)
!8048 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !7782)
!8049 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !7782)
!8050 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !7782)
!8051 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !7782)
!8052 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !7782)
!8053 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !7782)
!8054 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !7782)
!8055 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !7782)
!8056 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !7782)
!8057 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !7782)
!8058 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !7782)
!8059 = !DILocation(line: 108, column: 37, scope: !3968, inlinedAt: !7779)
!8060 = !DILocation(line: 108, column: 45, scope: !3968, inlinedAt: !7779)
!8061 = !DILocation(line: 108, column: 39, scope: !3968, inlinedAt: !7779)
!8062 = !DILocation(line: 108, column: 38, scope: !3968, inlinedAt: !7779)
!8063 = !DILocation(line: 108, column: 48, scope: !3968, inlinedAt: !7779)
!8064 = !DILocation(line: 108, column: 47, scope: !3968, inlinedAt: !7779)
!8065 = !DILocation(line: 108, column: 35, scope: !3968, inlinedAt: !7779)
!8066 = !DILocation(line: 109, column: 57, scope: !3968, inlinedAt: !7779)
!8067 = !DILocation(line: 109, column: 59, scope: !3968, inlinedAt: !7779)
!8068 = !DILocation(line: 109, column: 42, scope: !3968, inlinedAt: !7779)
!8069 = !DILocation(line: 109, column: 40, scope: !3968, inlinedAt: !7779)
!8070 = !DILocation(line: 109, column: 63, scope: !3968, inlinedAt: !7779)
!8071 = !DILocation(line: 109, column: 66, scope: !3968, inlinedAt: !7779)
!8072 = !DILocation(line: 109, column: 70, scope: !3968, inlinedAt: !7779)
!8073 = !DILocation(line: 109, column: 33, scope: !3968, inlinedAt: !7779)
!8074 = !DILocation(line: 111, column: 17, scope: !3970, inlinedAt: !7779)
!8075 = !DILocation(line: 112, column: 37, scope: !4356, inlinedAt: !7779)
!8076 = !DILocation(line: 112, column: 33, scope: !4356, inlinedAt: !7779)
!8077 = !DILocation(line: 112, column: 40, scope: !4356, inlinedAt: !7779)
!8078 = !DILocation(line: 112, column: 39, scope: !4356, inlinedAt: !7779)
!8079 = !DILocation(line: 112, column: 31, scope: !4356, inlinedAt: !7779)
!8080 = !DILocation(line: 114, column: 22, scope: !3972, inlinedAt: !7779)
!8081 = !DILocation(line: 114, column: 26, scope: !3972, inlinedAt: !7779)
!8082 = !DILocation(line: 114, column: 24, scope: !3972, inlinedAt: !7779)
!8083 = !DILocation(line: 114, column: 20, scope: !3972, inlinedAt: !7779)
!8084 = !DILocation(line: 115, column: 21, scope: !4366, inlinedAt: !7779)
!8085 = !DILocation(line: 115, column: 21, scope: !3972, inlinedAt: !7779)
!8086 = !DILocation(line: 116, column: 35, scope: !4366, inlinedAt: !7779)
!8087 = !DILocation(line: 116, column: 37, scope: !4366, inlinedAt: !7779)
!8088 = !DILocation(line: 116, column: 36, scope: !4366, inlinedAt: !7779)
!8089 = !DILocation(line: 116, column: 32, scope: !4366, inlinedAt: !7779)
!8090 = !DILocation(line: 116, column: 40, scope: !4366, inlinedAt: !7779)
!8091 = !DILocation(line: 116, column: 47, scope: !4374, inlinedAt: !7779)
!8092 = !DILocation(line: 116, column: 32, scope: !4374, inlinedAt: !7779)
!8093 = !DILocation(line: 116, column: 60, scope: !4377, inlinedAt: !7779)
!8094 = !DILocation(line: 116, column: 59, scope: !4377, inlinedAt: !7779)
!8095 = !DILocation(line: 116, column: 32, scope: !4377, inlinedAt: !7779)
!8096 = !DILocation(line: 116, column: 32, scope: !4381, inlinedAt: !7779)
!8097 = !DILocation(line: 116, column: 25, scope: !4381, inlinedAt: !7779)
!8098 = !DILocation(line: 116, column: 27, scope: !4381, inlinedAt: !7779)
!8099 = !DILocation(line: 116, column: 26, scope: !4381, inlinedAt: !7779)
!8100 = !DILocation(line: 116, column: 21, scope: !4381, inlinedAt: !7779)
!8101 = !DILocation(line: 116, column: 30, scope: !4381, inlinedAt: !7779)
!8102 = !DILocation(line: 117, column: 25, scope: !4388, inlinedAt: !7779)
!8103 = !DILocation(line: 117, column: 21, scope: !4388, inlinedAt: !7779)
!8104 = !DILocation(line: 117, column: 28, scope: !4388, inlinedAt: !7779)
!8105 = !DILocation(line: 117, column: 21, scope: !3972, inlinedAt: !7779)
!8106 = !DILocation(line: 118, column: 28, scope: !4388, inlinedAt: !7779)
!8107 = !DILocation(line: 118, column: 21, scope: !4388, inlinedAt: !7779)
!8108 = !DILocation(line: 119, column: 28, scope: !3972, inlinedAt: !7779)
!8109 = !DILocation(line: 119, column: 38, scope: !3972, inlinedAt: !7779)
!8110 = !DILocation(line: 119, column: 37, scope: !3972, inlinedAt: !7779)
!8111 = !DILocation(line: 119, column: 25, scope: !3972, inlinedAt: !7779)
!8112 = !DILocation(line: 120, column: 23, scope: !3972, inlinedAt: !7779)
!8113 = !DILocation(line: 120, column: 26, scope: !3972, inlinedAt: !7779)
!8114 = !DILocation(line: 120, column: 25, scope: !3972, inlinedAt: !7779)
!8115 = !DILocation(line: 120, column: 20, scope: !3972, inlinedAt: !7779)
!8116 = !DILocation(line: 99, column: 35, scope: !4403, inlinedAt: !7779)
!8117 = !DILocation(line: 99, column: 13, scope: !4403, inlinedAt: !7779)
!8118 = !DILocation(line: 122, column: 9, scope: !3975, inlinedAt: !7779)
!8119 = !DILocation(line: 123, column: 20, scope: !4409, inlinedAt: !7779)
!8120 = !DILocation(line: 123, column: 18, scope: !4409, inlinedAt: !7779)
!8121 = !DILocation(line: 123, column: 25, scope: !4413, inlinedAt: !7779)
!8122 = !DILocation(line: 123, column: 29, scope: !4413, inlinedAt: !7779)
!8123 = !DILocation(line: 123, column: 27, scope: !4413, inlinedAt: !7779)
!8124 = !DILocation(line: 123, column: 13, scope: !4413, inlinedAt: !7779)
!8125 = !DILocation(line: 124, column: 33, scope: !4419, inlinedAt: !7779)
!8126 = !DILocation(line: 124, column: 29, scope: !4419, inlinedAt: !7779)
!8127 = !DILocation(line: 124, column: 36, scope: !4419, inlinedAt: !7779)
!8128 = !DILocation(line: 124, column: 35, scope: !4419, inlinedAt: !7779)
!8129 = !DILocation(line: 124, column: 27, scope: !4419, inlinedAt: !7779)
!8130 = !DILocation(line: 125, column: 28, scope: !4419, inlinedAt: !7779)
!8131 = !DILocation(line: 125, column: 38, scope: !4419, inlinedAt: !7779)
!8132 = !DILocation(line: 125, column: 37, scope: !4419, inlinedAt: !7779)
!8133 = !DILocation(line: 125, column: 25, scope: !4419, inlinedAt: !7779)
!8134 = !DILocation(line: 126, column: 21, scope: !4429, inlinedAt: !7779)
!8135 = !DILocation(line: 126, column: 21, scope: !4419, inlinedAt: !7779)
!8136 = !DILocation(line: 127, column: 32, scope: !4429, inlinedAt: !7779)
!8137 = !DILocation(line: 127, column: 25, scope: !4429, inlinedAt: !7779)
!8138 = !DILocation(line: 127, column: 27, scope: !4429, inlinedAt: !7779)
!8139 = !DILocation(line: 127, column: 26, scope: !4429, inlinedAt: !7779)
!8140 = !DILocation(line: 127, column: 21, scope: !4429, inlinedAt: !7779)
!8141 = !DILocation(line: 127, column: 30, scope: !4429, inlinedAt: !7779)
!8142 = !DILocation(line: 128, column: 27, scope: !4419, inlinedAt: !7779)
!8143 = !DILocation(line: 128, column: 29, scope: !4419, inlinedAt: !7779)
!8144 = !DILocation(line: 128, column: 28, scope: !4419, inlinedAt: !7779)
!8145 = !DILocation(line: 128, column: 24, scope: !4419, inlinedAt: !7779)
!8146 = !DILocation(line: 128, column: 34, scope: !4419, inlinedAt: !7779)
!8147 = !DILocation(line: 128, column: 32, scope: !4419, inlinedAt: !7779)
!8148 = !DILocation(line: 128, column: 49, scope: !4419, inlinedAt: !7779)
!8149 = !DILocation(line: 128, column: 51, scope: !4419, inlinedAt: !7779)
!8150 = !DILocation(line: 128, column: 50, scope: !4419, inlinedAt: !7779)
!8151 = !DILocation(line: 128, column: 46, scope: !4419, inlinedAt: !7779)
!8152 = !DILocation(line: 128, column: 56, scope: !4419, inlinedAt: !7779)
!8153 = !DILocation(line: 128, column: 54, scope: !4419, inlinedAt: !7779)
!8154 = !DILocation(line: 128, column: 44, scope: !4419, inlinedAt: !7779)
!8155 = !DILocation(line: 128, column: 20, scope: !4419, inlinedAt: !7779)
!8156 = !DILocation(line: 123, column: 35, scope: !4452, inlinedAt: !7779)
!8157 = !DILocation(line: 123, column: 13, scope: !4452, inlinedAt: !7779)
!8158 = !DILocation(line: 131, column: 17, scope: !3956, inlinedAt: !7779)
!8159 = !DILocation(line: 131, column: 22, scope: !3956, inlinedAt: !7779)
!8160 = !DILocation(line: 131, column: 20, scope: !3956, inlinedAt: !7779)
!8161 = !DILocation(line: 131, column: 31, scope: !3956, inlinedAt: !7779)
!8162 = !DILocation(line: 131, column: 29, scope: !3956, inlinedAt: !7779)
!8163 = !DILocation(line: 131, column: 14, scope: !3956, inlinedAt: !7779)
!8164 = !DILocation(line: 132, column: 20, scope: !3956, inlinedAt: !7779)
!8165 = !DILocation(line: 132, column: 17, scope: !3956, inlinedAt: !7779)
!8166 = !DILocation(line: 133, column: 13, scope: !4465, inlinedAt: !7779)
!8167 = !DILocation(line: 133, column: 21, scope: !4465, inlinedAt: !7779)
!8168 = !DILocation(line: 133, column: 18, scope: !4465, inlinedAt: !7779)
!8169 = !DILocation(line: 133, column: 13, scope: !3956, inlinedAt: !7779)
!8170 = !DILocation(line: 134, column: 20, scope: !4465, inlinedAt: !7779)
!8171 = !DILocation(line: 134, column: 13, scope: !4465, inlinedAt: !7779)
!8172 = !DILocation(line: 135, column: 13, scope: !3955, inlinedAt: !7779)
!8173 = !DILocation(line: 135, column: 13, scope: !3956, inlinedAt: !7779)
!8174 = !DILocation(line: 136, column: 22, scope: !3954, inlinedAt: !7779)
!8175 = !DILocation(line: 136, column: 53, scope: !3954, inlinedAt: !7779)
!8176 = !DILocation(line: 136, column: 26, scope: !3954, inlinedAt: !7779)
!8177 = !DILocation(line: 136, column: 47, scope: !3954, inlinedAt: !7779)
!8178 = !DILocation(line: 136, column: 49, scope: !3954, inlinedAt: !7779)
!8179 = !DILocation(line: 136, column: 90, scope: !3954, inlinedAt: !7779)
!8180 = !DILocation(line: 136, column: 62, scope: !3954, inlinedAt: !7779)
!8181 = !DILocation(line: 136, column: 84, scope: !3954, inlinedAt: !7779)
!8182 = !DILocation(line: 136, column: 86, scope: !3954, inlinedAt: !7779)
!8183 = !DILocation(line: 136, column: 13, scope: !3954, inlinedAt: !7779)
!8184 = !DILocation(line: 137, column: 17, scope: !4484, inlinedAt: !7779)
!8185 = !DILocation(line: 137, column: 17, scope: !3954, inlinedAt: !7779)
!8186 = !DILocation(line: 138, column: 24, scope: !4487, inlinedAt: !7779)
!8187 = !DILocation(line: 138, column: 22, scope: !4487, inlinedAt: !7779)
!8188 = !DILocation(line: 138, column: 29, scope: !4490, inlinedAt: !7779)
!8189 = !DILocation(line: 138, column: 33, scope: !4490, inlinedAt: !7779)
!8190 = !DILocation(line: 138, column: 31, scope: !4490, inlinedAt: !7779)
!8191 = !DILocation(line: 138, column: 17, scope: !4490, inlinedAt: !7779)
!8192 = !DILocation(line: 139, column: 55, scope: !4496, inlinedAt: !7779)
!8193 = !DILocation(line: 139, column: 62, scope: !4496, inlinedAt: !7779)
!8194 = !DILocation(line: 139, column: 61, scope: !4496, inlinedAt: !7779)
!8195 = !DILocation(line: 139, column: 66, scope: !4496, inlinedAt: !7779)
!8196 = !DILocation(line: 139, column: 65, scope: !4496, inlinedAt: !7779)
!8197 = !DILocation(line: 139, column: 25, scope: !4496, inlinedAt: !7779)
!8198 = !DILocation(line: 139, column: 49, scope: !4496, inlinedAt: !7779)
!8199 = !DILocation(line: 139, column: 51, scope: !4496, inlinedAt: !7779)
!8200 = !DILocation(line: 139, column: 69, scope: !4496, inlinedAt: !7779)
!8201 = !DILocation(line: 139, column: 25, scope: !4491, inlinedAt: !7779)
!8202 = !DILocation(line: 140, column: 34, scope: !4496, inlinedAt: !7779)
!8203 = !DILocation(line: 140, column: 44, scope: !4496, inlinedAt: !7779)
!8204 = !DILocation(line: 140, column: 46, scope: !4496, inlinedAt: !7779)
!8205 = !DILocation(line: 140, column: 45, scope: !4496, inlinedAt: !7779)
!8206 = !DILocation(line: 140, column: 41, scope: !4496, inlinedAt: !7779)
!8207 = !DILocation(line: 140, column: 49, scope: !4496, inlinedAt: !7779)
!8208 = !DILocation(line: 140, column: 25, scope: !4496, inlinedAt: !7779)
!8209 = !DILocation(line: 138, column: 39, scope: !4514, inlinedAt: !7779)
!8210 = !DILocation(line: 138, column: 17, scope: !4514, inlinedAt: !7779)
!8211 = !DILocation(line: 140, column: 55, scope: !4519, inlinedAt: !7779)
!8212 = !DILocation(line: 141, column: 17, scope: !3953, inlinedAt: !7779)
!8213 = !DILocation(line: 141, column: 17, scope: !3954, inlinedAt: !7779)
!8214 = !DILocation(line: 142, column: 24, scope: !3951, inlinedAt: !7779)
!8215 = !DILocation(line: 142, column: 22, scope: !3951, inlinedAt: !7779)
!8216 = !DILocation(line: 142, column: 29, scope: !4525, inlinedAt: !7779)
!8217 = !DILocation(line: 142, column: 31, scope: !4525, inlinedAt: !7779)
!8218 = !DILocation(line: 142, column: 17, scope: !4525, inlinedAt: !7779)
!8219 = !DILocation(line: 143, column: 55, scope: !3948, inlinedAt: !7779)
!8220 = !DILocation(line: 143, column: 61, scope: !3948, inlinedAt: !7779)
!8221 = !DILocation(line: 143, column: 64, scope: !3948, inlinedAt: !7779)
!8222 = !DILocation(line: 143, column: 63, scope: !3948, inlinedAt: !7779)
!8223 = !DILocation(line: 143, column: 25, scope: !3948, inlinedAt: !7779)
!8224 = !DILocation(line: 143, column: 49, scope: !3948, inlinedAt: !7779)
!8225 = !DILocation(line: 143, column: 51, scope: !3948, inlinedAt: !7779)
!8226 = !DILocation(line: 143, column: 67, scope: !3948, inlinedAt: !7779)
!8227 = !DILocation(line: 143, column: 25, scope: !3949, inlinedAt: !7779)
!8228 = !DILocation(line: 144, column: 68, scope: !3947, inlinedAt: !7779)
!8229 = !DILocation(line: 144, column: 70, scope: !3947, inlinedAt: !7779)
!8230 = !DILocation(line: 144, column: 69, scope: !3947, inlinedAt: !7779)
!8231 = !DILocation(line: 144, column: 65, scope: !3947, inlinedAt: !7779)
!8232 = !DILocation(line: 144, column: 59, scope: !3947, inlinedAt: !7779)
!8233 = !DILocation(line: 144, column: 75, scope: !3947, inlinedAt: !7779)
!8234 = !DILocation(line: 144, column: 78, scope: !3947, inlinedAt: !7779)
!8235 = !DILocation(line: 144, column: 53, scope: !4545, inlinedAt: !7779)
!8236 = !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !7779)
!8237 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !7778)
!8238 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !7778)
!8239 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !7778)
!8240 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !7778)
!8241 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !7778)
!8242 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !7778)
!8243 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !7778)
!8244 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !7778)
!8245 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !7778)
!8246 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !7778)
!8247 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !7778)
!8248 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !7778)
!8249 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !7778)
!8250 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !7778)
!8251 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !7778)
!8252 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !7778)
!8253 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !7778)
!8254 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !7778)
!8255 = !DILocation(line: 145, column: 56, scope: !3947, inlinedAt: !7779)
!8256 = !DILocation(line: 145, column: 61, scope: !3947, inlinedAt: !7779)
!8257 = !DILocation(line: 145, column: 41, scope: !3947, inlinedAt: !7779)
!8258 = !DILocation(line: 145, column: 39, scope: !3947, inlinedAt: !7779)
!8259 = !DILocation(line: 147, column: 34, scope: !3947, inlinedAt: !7779)
!8260 = !DILocation(line: 147, column: 38, scope: !3947, inlinedAt: !7779)
!8261 = !DILocation(line: 147, column: 42, scope: !3947, inlinedAt: !7779)
!8262 = !DILocation(line: 147, column: 46, scope: !3947, inlinedAt: !7779)
!8263 = !DILocation(line: 147, column: 58, scope: !3947, inlinedAt: !7779)
!8264 = !DILocation(line: 147, column: 62, scope: !3947, inlinedAt: !7779)
!8265 = !DILocation(line: 147, column: 66, scope: !3947, inlinedAt: !7779)
!8266 = !DILocation(line: 147, column: 54, scope: !3947, inlinedAt: !7779)
!8267 = !DILocation(line: 147, column: 72, scope: !3947, inlinedAt: !7779)
!8268 = !DILocation(line: 147, column: 25, scope: !3947, inlinedAt: !7779)
!8269 = !DILocation(line: 148, column: 35, scope: !3947, inlinedAt: !7779)
!8270 = !DILocation(line: 148, column: 39, scope: !3947, inlinedAt: !7779)
!8271 = !DILocation(line: 148, column: 44, scope: !3947, inlinedAt: !7779)
!8272 = !DILocation(line: 148, column: 25, scope: !3947, inlinedAt: !7779)
!8273 = !DILocation(line: 149, column: 21, scope: !3947, inlinedAt: !7779)
!8274 = !DILocation(line: 142, column: 37, scope: !4585, inlinedAt: !7779)
!8275 = !DILocation(line: 142, column: 17, scope: !4585, inlinedAt: !7779)
!8276 = !DILocation(line: 151, column: 13, scope: !3952, inlinedAt: !7779)
!8277 = !DILocation(line: 152, column: 9, scope: !3954, inlinedAt: !7779)
!8278 = !DILocation(line: 86, column: 32, scope: !4592, inlinedAt: !7779)
!8279 = !DILocation(line: 86, column: 29, scope: !4592, inlinedAt: !7779)
!8280 = !DILocation(line: 86, column: 5, scope: !4592, inlinedAt: !7779)
!8281 = !DILocation(line: 155, column: 9, scope: !4598, inlinedAt: !7779)
!8282 = !DILocation(line: 155, column: 9, scope: !3959, inlinedAt: !7779)
!8283 = !DILocation(line: 156, column: 17, scope: !4598, inlinedAt: !7779)
!8284 = !DILocation(line: 156, column: 10, scope: !4598, inlinedAt: !7779)
!8285 = !DILocation(line: 156, column: 15, scope: !4598, inlinedAt: !7779)
!8286 = !DILocation(line: 156, column: 9, scope: !4598, inlinedAt: !7779)
!8287 = !DILocation(line: 157, column: 9, scope: !4605, inlinedAt: !7779)
!8288 = !DILocation(line: 157, column: 9, scope: !3959, inlinedAt: !7779)
!8289 = !DILocation(line: 158, column: 19, scope: !4605, inlinedAt: !7779)
!8290 = !DILocation(line: 158, column: 10, scope: !4605, inlinedAt: !7779)
!8291 = !DILocation(line: 158, column: 17, scope: !4605, inlinedAt: !7779)
!8292 = !DILocation(line: 158, column: 9, scope: !4605, inlinedAt: !7779)
!8293 = !DILocation(line: 159, column: 12, scope: !3959, inlinedAt: !7779)
!8294 = !DILocation(line: 159, column: 5, scope: !3959, inlinedAt: !7779)
!8295 = !DILocation(line: 160, column: 1, scope: !3959, inlinedAt: !7779)
!8296 = !DILocation(line: 193, column: 248, scope: !7776)
!8297 = distinct !DISubprogram(name: "quant", scope: !3213, file: !3213, line: 59, type: !8298, isLocal: true, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!8298 = !DISubroutineType(types: !8299)
!8299 = !{!992, !969, !1104, !1104}
!8300 = !DILocalVariable(name: "coef", arg: 1, scope: !8297, file: !3213, line: 59, type: !969)
!8301 = !DILocation(line: 59, column: 31, scope: !8297)
!8302 = !DILocalVariable(name: "Q", arg: 2, scope: !8297, file: !3213, line: 59, type: !1104)
!8303 = !DILocation(line: 59, column: 49, scope: !8297)
!8304 = !DILocalVariable(name: "rounding", arg: 3, scope: !8297, file: !3213, line: 59, type: !1104)
!8305 = !DILocation(line: 59, column: 64, scope: !8297)
!8306 = !DILocalVariable(name: "a", scope: !8297, file: !3213, line: 61, type: !969)
!8307 = !DILocation(line: 61, column: 11, scope: !8297)
!8308 = !DILocation(line: 61, column: 15, scope: !8297)
!8309 = !DILocation(line: 61, column: 22, scope: !8297)
!8310 = !DILocation(line: 61, column: 20, scope: !8297)
!8311 = !DILocation(line: 62, column: 18, scope: !8297)
!8312 = !DILocation(line: 62, column: 28, scope: !8297)
!8313 = !DILocation(line: 62, column: 22, scope: !8297)
!8314 = !DILocation(line: 62, column: 20, scope: !8297)
!8315 = !DILocation(line: 62, column: 12, scope: !8316)
!8316 = !DILexicalBlockFile(scope: !8297, file: !3213, discriminator: 1)
!8317 = !DILocation(line: 62, column: 34, scope: !8297)
!8318 = !DILocation(line: 62, column: 32, scope: !8297)
!8319 = !DILocation(line: 62, column: 12, scope: !8297)
!8320 = !DILocation(line: 62, column: 5, scope: !8297)
!8321 = distinct !DISubprogram(name: "put_bits", scope: !1032, file: !1032, line: 164, type: !8322, isLocal: true, isDefinition: true, scopeLine: 165, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{null, !2645, !992, !952}
!8324 = !DILocalVariable(name: "x", arg: 1, scope: !8325, file: !8326, line: 66, type: !950)
!8325 = distinct !DISubprogram(name: "av_bswap32", scope: !8326, file: !8326, line: 66, type: !8327, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!8326 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!8327 = !DISubroutineType(types: !8328)
!8328 = !{!950, !950}
!8329 = !DILocation(line: 66, column: 98, scope: !8325, inlinedAt: !8330)
!8330 = distinct !DILocation(line: 197, column: 60, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !1032, line: 196, column: 42)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !1032, line: 196, column: 13)
!8333 = distinct !DILexicalBlock(scope: !8334, file: !1032, line: 193, column: 12)
!8334 = distinct !DILexicalBlock(scope: !8321, file: !1032, line: 190, column: 9)
!8335 = !DILocalVariable(name: "s", arg: 1, scope: !8321, file: !1032, line: 164, type: !2645)
!8336 = !DILocation(line: 164, column: 44, scope: !8321)
!8337 = !DILocalVariable(name: "n", arg: 2, scope: !8321, file: !1032, line: 164, type: !992)
!8338 = !DILocation(line: 164, column: 51, scope: !8321)
!8339 = !DILocalVariable(name: "value", arg: 3, scope: !8321, file: !1032, line: 164, type: !952)
!8340 = !DILocation(line: 164, column: 67, scope: !8321)
!8341 = !DILocalVariable(name: "bit_buf", scope: !8321, file: !1032, line: 166, type: !952)
!8342 = !DILocation(line: 166, column: 18, scope: !8321)
!8343 = !DILocalVariable(name: "bit_left", scope: !8321, file: !1032, line: 167, type: !992)
!8344 = !DILocation(line: 167, column: 9, scope: !8321)
!8345 = !DILocation(line: 171, column: 15, scope: !8321)
!8346 = !DILocation(line: 171, column: 18, scope: !8321)
!8347 = !DILocation(line: 171, column: 13, scope: !8321)
!8348 = !DILocation(line: 172, column: 16, scope: !8321)
!8349 = !DILocation(line: 172, column: 19, scope: !8321)
!8350 = !DILocation(line: 172, column: 14, scope: !8321)
!8351 = !DILocation(line: 190, column: 9, scope: !8334)
!8352 = !DILocation(line: 190, column: 13, scope: !8334)
!8353 = !DILocation(line: 190, column: 11, scope: !8334)
!8354 = !DILocation(line: 190, column: 9, scope: !8321)
!8355 = !DILocation(line: 191, column: 20, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8334, file: !1032, line: 190, column: 23)
!8357 = !DILocation(line: 191, column: 31, scope: !8356)
!8358 = !DILocation(line: 191, column: 28, scope: !8356)
!8359 = !DILocation(line: 191, column: 36, scope: !8356)
!8360 = !DILocation(line: 191, column: 34, scope: !8356)
!8361 = !DILocation(line: 191, column: 17, scope: !8356)
!8362 = !DILocation(line: 192, column: 21, scope: !8356)
!8363 = !DILocation(line: 192, column: 18, scope: !8356)
!8364 = !DILocation(line: 193, column: 5, scope: !8356)
!8365 = !DILocation(line: 194, column: 21, scope: !8333)
!8366 = !DILocation(line: 194, column: 17, scope: !8333)
!8367 = !DILocation(line: 195, column: 20, scope: !8333)
!8368 = !DILocation(line: 195, column: 30, scope: !8333)
!8369 = !DILocation(line: 195, column: 34, scope: !8333)
!8370 = !DILocation(line: 195, column: 32, scope: !8333)
!8371 = !DILocation(line: 195, column: 26, scope: !8333)
!8372 = !DILocation(line: 195, column: 17, scope: !8333)
!8373 = !DILocation(line: 196, column: 17, scope: !8332)
!8374 = !DILocation(line: 196, column: 20, scope: !8332)
!8375 = !DILocation(line: 196, column: 30, scope: !8332)
!8376 = !DILocation(line: 196, column: 33, scope: !8332)
!8377 = !DILocation(line: 196, column: 28, scope: !8332)
!8378 = !DILocation(line: 196, column: 15, scope: !8332)
!8379 = !DILocation(line: 196, column: 13, scope: !8333)
!8380 = !DILocation(line: 197, column: 71, scope: !8331)
!8381 = !DILocation(line: 197, column: 60, scope: !8331)
!8382 = !DILocation(line: 68, column: 16, scope: !8325, inlinedAt: !8330)
!8383 = !DILocation(line: 68, column: 19, scope: !8325, inlinedAt: !8330)
!8384 = !DILocation(line: 68, column: 24, scope: !8325, inlinedAt: !8330)
!8385 = !DILocation(line: 68, column: 38, scope: !8325, inlinedAt: !8330)
!8386 = !DILocation(line: 68, column: 41, scope: !8325, inlinedAt: !8330)
!8387 = !DILocation(line: 68, column: 46, scope: !8325, inlinedAt: !8330)
!8388 = !DILocation(line: 68, column: 34, scope: !8325, inlinedAt: !8330)
!8389 = !DILocation(line: 68, column: 57, scope: !8325, inlinedAt: !8330)
!8390 = !DILocation(line: 68, column: 69, scope: !8325, inlinedAt: !8330)
!8391 = !DILocation(line: 68, column: 72, scope: !8325, inlinedAt: !8330)
!8392 = !DILocation(line: 68, column: 79, scope: !8325, inlinedAt: !8330)
!8393 = !DILocation(line: 68, column: 84, scope: !8325, inlinedAt: !8330)
!8394 = !DILocation(line: 68, column: 99, scope: !8325, inlinedAt: !8330)
!8395 = !DILocation(line: 68, column: 102, scope: !8325, inlinedAt: !8330)
!8396 = !DILocation(line: 68, column: 109, scope: !8325, inlinedAt: !8330)
!8397 = !DILocation(line: 68, column: 114, scope: !8325, inlinedAt: !8330)
!8398 = !DILocation(line: 68, column: 94, scope: !8325, inlinedAt: !8330)
!8399 = !DILocation(line: 68, column: 63, scope: !8325, inlinedAt: !8330)
!8400 = !DILocation(line: 197, column: 40, scope: !8331)
!8401 = !DILocation(line: 197, column: 43, scope: !8331)
!8402 = !DILocation(line: 197, column: 54, scope: !8331)
!8403 = !DILocation(line: 197, column: 57, scope: !8331)
!8404 = !DILocation(line: 198, column: 13, scope: !8331)
!8405 = !DILocation(line: 198, column: 16, scope: !8331)
!8406 = !DILocation(line: 198, column: 24, scope: !8331)
!8407 = !DILocation(line: 199, column: 9, scope: !8331)
!8408 = !DILocation(line: 200, column: 13, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8332, file: !1032, line: 199, column: 16)
!8410 = !DILocation(line: 203, column: 26, scope: !8333)
!8411 = !DILocation(line: 203, column: 24, scope: !8333)
!8412 = !DILocation(line: 203, column: 18, scope: !8333)
!8413 = !DILocation(line: 204, column: 19, scope: !8333)
!8414 = !DILocation(line: 204, column: 17, scope: !8333)
!8415 = !DILocation(line: 208, column: 18, scope: !8321)
!8416 = !DILocation(line: 208, column: 5, scope: !8321)
!8417 = !DILocation(line: 208, column: 8, scope: !8321)
!8418 = !DILocation(line: 208, column: 16, scope: !8321)
!8419 = !DILocation(line: 209, column: 19, scope: !8321)
!8420 = !DILocation(line: 209, column: 5, scope: !8321)
!8421 = !DILocation(line: 209, column: 8, scope: !8321)
!8422 = !DILocation(line: 209, column: 17, scope: !8321)
!8423 = !DILocation(line: 210, column: 1, scope: !8321)
!8424 = distinct !DISubprogram(name: "put_sbits", scope: !1032, file: !1032, line: 240, type: !8425, isLocal: true, isDefinition: true, scopeLine: 241, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!8425 = !DISubroutineType(types: !8426)
!8426 = !{null, !2645, !992, !1181}
!8427 = !DILocalVariable(name: "a", arg: 1, scope: !8428, file: !3941, line: 241, type: !952)
!8428 = distinct !DISubprogram(name: "av_mod_uintp2_c", scope: !3941, file: !3941, line: 241, type: !8429, isLocal: true, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!8429 = !DISubroutineType(types: !8430)
!8430 = !{!952, !952, !952}
!8431 = !DILocation(line: 241, column: 103, scope: !8428, inlinedAt: !8432)
!8432 = distinct !DILocation(line: 244, column: 21, scope: !8424)
!8433 = !DILocalVariable(name: "p", arg: 2, scope: !8428, file: !3941, line: 241, type: !952)
!8434 = !DILocation(line: 241, column: 115, scope: !8428, inlinedAt: !8432)
!8435 = !DILocalVariable(name: "pb", arg: 1, scope: !8424, file: !1032, line: 240, type: !2645)
!8436 = !DILocation(line: 240, column: 45, scope: !8424)
!8437 = !DILocalVariable(name: "n", arg: 2, scope: !8424, file: !1032, line: 240, type: !992)
!8438 = !DILocation(line: 240, column: 53, scope: !8424)
!8439 = !DILocalVariable(name: "value", arg: 3, scope: !8424, file: !1032, line: 240, type: !1181)
!8440 = !DILocation(line: 240, column: 64, scope: !8424)
!8441 = !DILocation(line: 244, column: 14, scope: !8424)
!8442 = !DILocation(line: 244, column: 18, scope: !8424)
!8443 = !DILocation(line: 244, column: 37, scope: !8424)
!8444 = !DILocation(line: 244, column: 44, scope: !8424)
!8445 = !DILocation(line: 244, column: 21, scope: !8424)
!8446 = !DILocation(line: 243, column: 12, scope: !8428, inlinedAt: !8432)
!8447 = !DILocation(line: 243, column: 23, scope: !8428, inlinedAt: !8432)
!8448 = !DILocation(line: 243, column: 20, scope: !8428, inlinedAt: !8432)
!8449 = !DILocation(line: 243, column: 26, scope: !8428, inlinedAt: !8432)
!8450 = !DILocation(line: 243, column: 14, scope: !8428, inlinedAt: !8432)
!8451 = !DILocation(line: 244, column: 5, scope: !8452)
!8452 = !DILexicalBlockFile(scope: !8424, file: !1032, discriminator: 1)
!8453 = !DILocation(line: 245, column: 1, scope: !8424)
!8454 = distinct !DISubprogram(name: "quantize_and_encode_band_cost_ESC", scope: !963, file: !963, line: 190, type: !967, isLocal: true, isDefinition: true, scopeLine: 190, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !2761)
!8455 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !8456)
!8456 = distinct !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !8457)
!8457 = distinct !DILocation(line: 190, column: 252, scope: !8454)
!8458 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !8456)
!8459 = !DILocation(line: 229, column: 99, scope: !3940, inlinedAt: !8460)
!8460 = distinct !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !8457)
!8461 = !DILocation(line: 229, column: 106, scope: !3940, inlinedAt: !8460)
!8462 = !DILocation(line: 42, column: 55, scope: !3959, inlinedAt: !8457)
!8463 = !DILocation(line: 43, column: 48, scope: !3959, inlinedAt: !8457)
!8464 = !DILocation(line: 43, column: 65, scope: !3959, inlinedAt: !8457)
!8465 = !DILocation(line: 43, column: 76, scope: !3959, inlinedAt: !8457)
!8466 = !DILocation(line: 44, column: 46, scope: !3959, inlinedAt: !8457)
!8467 = !DILocation(line: 44, column: 58, scope: !3959, inlinedAt: !8457)
!8468 = !DILocation(line: 44, column: 68, scope: !3959, inlinedAt: !8457)
!8469 = !DILocation(line: 45, column: 37, scope: !3959, inlinedAt: !8457)
!8470 = !DILocation(line: 45, column: 53, scope: !3959, inlinedAt: !8457)
!8471 = !DILocation(line: 45, column: 73, scope: !3959, inlinedAt: !8457)
!8472 = !DILocation(line: 46, column: 38, scope: !3959, inlinedAt: !8457)
!8473 = !DILocation(line: 46, column: 51, scope: !3959, inlinedAt: !8457)
!8474 = !DILocation(line: 46, column: 63, scope: !3959, inlinedAt: !8457)
!8475 = !DILocation(line: 46, column: 76, scope: !3959, inlinedAt: !8457)
!8476 = !DILocation(line: 47, column: 37, scope: !3959, inlinedAt: !8457)
!8477 = !DILocation(line: 47, column: 50, scope: !3959, inlinedAt: !8457)
!8478 = !DILocation(line: 47, column: 62, scope: !3959, inlinedAt: !8457)
!8479 = !DILocation(line: 47, column: 76, scope: !3959, inlinedAt: !8457)
!8480 = !DILocation(line: 48, column: 45, scope: !3959, inlinedAt: !8457)
!8481 = !DILocation(line: 50, column: 15, scope: !3959, inlinedAt: !8457)
!8482 = !DILocation(line: 51, column: 17, scope: !3959, inlinedAt: !8457)
!8483 = !DILocation(line: 52, column: 17, scope: !3959, inlinedAt: !8457)
!8484 = !DILocation(line: 53, column: 17, scope: !3959, inlinedAt: !8457)
!8485 = !DILocation(line: 54, column: 17, scope: !3959, inlinedAt: !8457)
!8486 = !DILocation(line: 55, column: 9, scope: !3959, inlinedAt: !8457)
!8487 = !DILocation(line: 55, column: 12, scope: !3959, inlinedAt: !8457)
!8488 = !DILocation(line: 56, column: 11, scope: !3959, inlinedAt: !8457)
!8489 = !DILocation(line: 57, column: 11, scope: !3959, inlinedAt: !8457)
!8490 = !DILocation(line: 58, column: 15, scope: !3959, inlinedAt: !8457)
!8491 = !DILocation(line: 59, column: 9, scope: !3959, inlinedAt: !8457)
!8492 = !DILocation(line: 60, column: 9, scope: !3959, inlinedAt: !8457)
!8493 = !DILocation(line: 87, column: 22, scope: !3956, inlinedAt: !8457)
!8494 = !DILocation(line: 88, column: 14, scope: !3956, inlinedAt: !8457)
!8495 = !DILocation(line: 89, column: 13, scope: !3956, inlinedAt: !8457)
!8496 = !DILocation(line: 90, column: 13, scope: !3956, inlinedAt: !8457)
!8497 = !DILocation(line: 91, column: 15, scope: !3956, inlinedAt: !8457)
!8498 = !DILocation(line: 91, column: 26, scope: !3956, inlinedAt: !8457)
!8499 = !DILocation(line: 100, column: 23, scope: !3972, inlinedAt: !8457)
!8500 = !DILocation(line: 101, column: 23, scope: !3972, inlinedAt: !8457)
!8501 = !DILocation(line: 107, column: 29, scope: !3968, inlinedAt: !8457)
!8502 = !DILocation(line: 144, column: 29, scope: !3947, inlinedAt: !8457)
!8503 = !DILocation(line: 145, column: 29, scope: !3947, inlinedAt: !8457)
!8504 = !DILocalVariable(name: "s", arg: 1, scope: !8454, file: !963, line: 190, type: !970)
!8505 = !DILocation(line: 190, column: 71, scope: !8454)
!8506 = !DILocalVariable(name: "pb", arg: 2, scope: !8454, file: !963, line: 190, type: !2645)
!8507 = !DILocation(line: 190, column: 89, scope: !8454)
!8508 = !DILocalVariable(name: "in", arg: 3, scope: !8454, file: !963, line: 190, type: !1103)
!8509 = !DILocation(line: 190, column: 106, scope: !8454)
!8510 = !DILocalVariable(name: "quant", arg: 4, scope: !8454, file: !963, line: 190, type: !1102)
!8511 = !DILocation(line: 190, column: 117, scope: !8454)
!8512 = !DILocalVariable(name: "scaled", arg: 5, scope: !8454, file: !963, line: 190, type: !1103)
!8513 = !DILocation(line: 190, column: 137, scope: !8454)
!8514 = !DILocalVariable(name: "size", arg: 6, scope: !8454, file: !963, line: 190, type: !992)
!8515 = !DILocation(line: 190, column: 149, scope: !8454)
!8516 = !DILocalVariable(name: "scale_idx", arg: 7, scope: !8454, file: !963, line: 190, type: !992)
!8517 = !DILocation(line: 190, column: 159, scope: !8454)
!8518 = !DILocalVariable(name: "cb", arg: 8, scope: !8454, file: !963, line: 190, type: !992)
!8519 = !DILocation(line: 190, column: 174, scope: !8454)
!8520 = !DILocalVariable(name: "lambda", arg: 9, scope: !8454, file: !963, line: 190, type: !1104)
!8521 = !DILocation(line: 190, column: 190, scope: !8454)
!8522 = !DILocalVariable(name: "uplim", arg: 10, scope: !8454, file: !963, line: 190, type: !1104)
!8523 = !DILocation(line: 190, column: 210, scope: !8454)
!8524 = !DILocalVariable(name: "bits", arg: 11, scope: !8454, file: !963, line: 190, type: !1963)
!8525 = !DILocation(line: 190, column: 222, scope: !8454)
!8526 = !DILocalVariable(name: "energy", arg: 12, scope: !8454, file: !963, line: 190, type: !1102)
!8527 = !DILocation(line: 190, column: 235, scope: !8454)
!8528 = !DILocation(line: 190, column: 292, scope: !8454)
!8529 = !DILocation(line: 190, column: 295, scope: !8454)
!8530 = !DILocation(line: 190, column: 299, scope: !8454)
!8531 = !DILocation(line: 190, column: 303, scope: !8454)
!8532 = !DILocation(line: 190, column: 310, scope: !8454)
!8533 = !DILocation(line: 190, column: 318, scope: !8454)
!8534 = !DILocation(line: 190, column: 324, scope: !8454)
!8535 = !DILocation(line: 190, column: 352, scope: !8454)
!8536 = !DILocation(line: 190, column: 360, scope: !8454)
!8537 = !DILocation(line: 190, column: 367, scope: !8454)
!8538 = !DILocation(line: 190, column: 373, scope: !8454)
!8539 = !DILocation(line: 190, column: 252, scope: !8454)
!8540 = !DILocation(line: 50, column: 29, scope: !3959, inlinedAt: !8457)
!8541 = !DILocation(line: 50, column: 27, scope: !3959, inlinedAt: !8457)
!8542 = !DILocation(line: 50, column: 39, scope: !3959, inlinedAt: !8457)
!8543 = !DILocation(line: 50, column: 45, scope: !3959, inlinedAt: !8457)
!8544 = !DILocation(line: 51, column: 40, scope: !3959, inlinedAt: !8457)
!8545 = !DILocation(line: 51, column: 21, scope: !3959, inlinedAt: !8457)
!8546 = !DILocation(line: 52, column: 42, scope: !3959, inlinedAt: !8457)
!8547 = !DILocation(line: 52, column: 23, scope: !3959, inlinedAt: !8457)
!8548 = !DILocation(line: 53, column: 47, scope: !3959, inlinedAt: !8457)
!8549 = !DILocation(line: 53, column: 45, scope: !3959, inlinedAt: !8457)
!8550 = !DILocation(line: 53, column: 57, scope: !3959, inlinedAt: !8457)
!8551 = !DILocation(line: 53, column: 63, scope: !3959, inlinedAt: !8457)
!8552 = !DILocation(line: 53, column: 22, scope: !3959, inlinedAt: !8457)
!8553 = !DILocation(line: 54, column: 44, scope: !3959, inlinedAt: !8457)
!8554 = !DILocation(line: 54, column: 43, scope: !3959, inlinedAt: !8457)
!8555 = !DILocation(line: 58, column: 21, scope: !3959, inlinedAt: !8457)
!8556 = !DILocation(line: 62, column: 9, scope: !4116, inlinedAt: !8457)
!8557 = !DILocation(line: 62, column: 17, scope: !4116, inlinedAt: !8457)
!8558 = !DILocation(line: 62, column: 20, scope: !4119, inlinedAt: !8457)
!8559 = !DILocation(line: 62, column: 29, scope: !4119, inlinedAt: !8457)
!8560 = !DILocation(line: 62, column: 32, scope: !4122, inlinedAt: !8457)
!8561 = !DILocation(line: 62, column: 9, scope: !4122, inlinedAt: !8457)
!8562 = !DILocation(line: 63, column: 16, scope: !4125, inlinedAt: !8457)
!8563 = !DILocation(line: 63, column: 14, scope: !4125, inlinedAt: !8457)
!8564 = !DILocation(line: 63, column: 21, scope: !4129, inlinedAt: !8457)
!8565 = !DILocation(line: 63, column: 25, scope: !4129, inlinedAt: !8457)
!8566 = !DILocation(line: 63, column: 23, scope: !4129, inlinedAt: !8457)
!8567 = !DILocation(line: 63, column: 9, scope: !4129, inlinedAt: !8457)
!8568 = !DILocation(line: 64, column: 24, scope: !4130, inlinedAt: !8457)
!8569 = !DILocation(line: 64, column: 21, scope: !4130, inlinedAt: !8457)
!8570 = !DILocation(line: 64, column: 30, scope: !4130, inlinedAt: !8457)
!8571 = !DILocation(line: 64, column: 27, scope: !4130, inlinedAt: !8457)
!8572 = !DILocation(line: 64, column: 26, scope: !4130, inlinedAt: !8457)
!8573 = !DILocation(line: 64, column: 18, scope: !4130, inlinedAt: !8457)
!8574 = !DILocation(line: 63, column: 32, scope: !4141, inlinedAt: !8457)
!8575 = !DILocation(line: 63, column: 9, scope: !4141, inlinedAt: !8457)
!8576 = !DILocation(line: 65, column: 13, scope: !4146, inlinedAt: !8457)
!8577 = !DILocation(line: 65, column: 13, scope: !4126, inlinedAt: !8457)
!8578 = !DILocation(line: 66, column: 14, scope: !4146, inlinedAt: !8457)
!8579 = !DILocation(line: 66, column: 19, scope: !4146, inlinedAt: !8457)
!8580 = !DILocation(line: 66, column: 13, scope: !4146, inlinedAt: !8457)
!8581 = !DILocation(line: 67, column: 13, scope: !4152, inlinedAt: !8457)
!8582 = !DILocation(line: 67, column: 13, scope: !4126, inlinedAt: !8457)
!8583 = !DILocation(line: 68, column: 23, scope: !4152, inlinedAt: !8457)
!8584 = !DILocation(line: 68, column: 14, scope: !4152, inlinedAt: !8457)
!8585 = !DILocation(line: 68, column: 21, scope: !4152, inlinedAt: !8457)
!8586 = !DILocation(line: 68, column: 13, scope: !4152, inlinedAt: !8457)
!8587 = !DILocation(line: 69, column: 13, scope: !4159, inlinedAt: !8457)
!8588 = !DILocation(line: 69, column: 13, scope: !4126, inlinedAt: !8457)
!8589 = !DILocation(line: 70, column: 20, scope: !4162, inlinedAt: !8457)
!8590 = !DILocation(line: 70, column: 18, scope: !4162, inlinedAt: !8457)
!8591 = !DILocation(line: 70, column: 25, scope: !4166, inlinedAt: !8457)
!8592 = !DILocation(line: 70, column: 29, scope: !4166, inlinedAt: !8457)
!8593 = !DILocation(line: 70, column: 27, scope: !4166, inlinedAt: !8457)
!8594 = !DILocation(line: 70, column: 13, scope: !4166, inlinedAt: !8457)
!8595 = !DILocation(line: 71, column: 24, scope: !4172, inlinedAt: !8457)
!8596 = !DILocation(line: 71, column: 22, scope: !4172, inlinedAt: !8457)
!8597 = !DILocation(line: 71, column: 29, scope: !4175, inlinedAt: !8457)
!8598 = !DILocation(line: 71, column: 33, scope: !4175, inlinedAt: !8457)
!8599 = !DILocation(line: 71, column: 31, scope: !4175, inlinedAt: !8457)
!8600 = !DILocation(line: 71, column: 17, scope: !4175, inlinedAt: !8457)
!8601 = !DILocation(line: 72, column: 25, scope: !4176, inlinedAt: !8457)
!8602 = !DILocation(line: 72, column: 27, scope: !4176, inlinedAt: !8457)
!8603 = !DILocation(line: 72, column: 26, scope: !4176, inlinedAt: !8457)
!8604 = !DILocation(line: 72, column: 21, scope: !4176, inlinedAt: !8457)
!8605 = !DILocation(line: 72, column: 30, scope: !4176, inlinedAt: !8457)
!8606 = !DILocation(line: 71, column: 39, scope: !4186, inlinedAt: !8457)
!8607 = !DILocation(line: 71, column: 17, scope: !4186, inlinedAt: !8457)
!8608 = !DILocation(line: 70, column: 40, scope: !4191, inlinedAt: !8457)
!8609 = !DILocation(line: 70, column: 37, scope: !4191, inlinedAt: !8457)
!8610 = !DILocation(line: 70, column: 13, scope: !4191, inlinedAt: !8457)
!8611 = !DILocation(line: 73, column: 9, scope: !4163, inlinedAt: !8457)
!8612 = !DILocation(line: 74, column: 16, scope: !4126, inlinedAt: !8457)
!8613 = !DILocation(line: 74, column: 23, scope: !4126, inlinedAt: !8457)
!8614 = !DILocation(line: 74, column: 21, scope: !4126, inlinedAt: !8457)
!8615 = !DILocation(line: 74, column: 9, scope: !4126, inlinedAt: !8457)
!8616 = !DILocation(line: 76, column: 10, scope: !4202, inlinedAt: !8457)
!8617 = !DILocation(line: 76, column: 9, scope: !3959, inlinedAt: !8457)
!8618 = !DILocation(line: 77, column: 9, scope: !4205, inlinedAt: !8457)
!8619 = !DILocation(line: 77, column: 12, scope: !4205, inlinedAt: !8457)
!8620 = !DILocation(line: 77, column: 22, scope: !4205, inlinedAt: !8457)
!8621 = !DILocation(line: 77, column: 25, scope: !4205, inlinedAt: !8457)
!8622 = !DILocation(line: 77, column: 33, scope: !4205, inlinedAt: !8457)
!8623 = !DILocation(line: 77, column: 37, scope: !4205, inlinedAt: !8457)
!8624 = !DILocation(line: 78, column: 18, scope: !4205, inlinedAt: !8457)
!8625 = !DILocation(line: 78, column: 21, scope: !4205, inlinedAt: !8457)
!8626 = !DILocation(line: 78, column: 16, scope: !4205, inlinedAt: !8457)
!8627 = !DILocation(line: 79, column: 5, scope: !4205, inlinedAt: !8457)
!8628 = !DILocation(line: 80, column: 5, scope: !3959, inlinedAt: !8457)
!8629 = !DILocation(line: 80, column: 8, scope: !3959, inlinedAt: !8457)
!8630 = !DILocation(line: 80, column: 20, scope: !3959, inlinedAt: !8457)
!8631 = !DILocation(line: 80, column: 23, scope: !3959, inlinedAt: !8457)
!8632 = !DILocation(line: 80, column: 31, scope: !3959, inlinedAt: !8457)
!8633 = !DILocation(line: 80, column: 35, scope: !3959, inlinedAt: !8457)
!8634 = !DILocation(line: 80, column: 43, scope: !3959, inlinedAt: !8457)
!8635 = !DILocation(line: 80, column: 50, scope: !3959, inlinedAt: !8457)
!8636 = !DILocation(line: 80, column: 49, scope: !3959, inlinedAt: !8457)
!8637 = !DILocation(line: 80, column: 77, scope: !3959, inlinedAt: !8457)
!8638 = !DILocation(line: 80, column: 63, scope: !3959, inlinedAt: !8457)
!8639 = !DILocation(line: 80, column: 82, scope: !3959, inlinedAt: !8457)
!8640 = !DILocation(line: 80, column: 87, scope: !3959, inlinedAt: !8457)
!8641 = !DILocation(line: 81, column: 9, scope: !4229, inlinedAt: !8457)
!8642 = !DILocation(line: 81, column: 9, scope: !3959, inlinedAt: !8457)
!8643 = !DILocation(line: 82, column: 13, scope: !4232, inlinedAt: !8457)
!8644 = !DILocation(line: 83, column: 5, scope: !4232, inlinedAt: !8457)
!8645 = !DILocation(line: 84, column: 29, scope: !4235, inlinedAt: !8457)
!8646 = !DILocation(line: 84, column: 15, scope: !4235, inlinedAt: !8457)
!8647 = !DILocation(line: 84, column: 13, scope: !4235, inlinedAt: !8457)
!8648 = !DILocation(line: 86, column: 12, scope: !3958, inlinedAt: !8457)
!8649 = !DILocation(line: 86, column: 10, scope: !3958, inlinedAt: !8457)
!8650 = !DILocation(line: 86, column: 17, scope: !4241, inlinedAt: !8457)
!8651 = !DILocation(line: 86, column: 21, scope: !4241, inlinedAt: !8457)
!8652 = !DILocation(line: 86, column: 19, scope: !4241, inlinedAt: !8457)
!8653 = !DILocation(line: 86, column: 5, scope: !4241, inlinedAt: !8457)
!8654 = !DILocation(line: 88, column: 23, scope: !3956, inlinedAt: !8457)
!8655 = !DILocation(line: 88, column: 26, scope: !3956, inlinedAt: !8457)
!8656 = !DILocation(line: 88, column: 35, scope: !3956, inlinedAt: !8457)
!8657 = !DILocation(line: 88, column: 33, scope: !3956, inlinedAt: !8457)
!8658 = !DILocation(line: 92, column: 16, scope: !4250, inlinedAt: !8457)
!8659 = !DILocation(line: 92, column: 14, scope: !4250, inlinedAt: !8457)
!8660 = !DILocation(line: 92, column: 21, scope: !4253, inlinedAt: !8457)
!8661 = !DILocation(line: 92, column: 25, scope: !4253, inlinedAt: !8457)
!8662 = !DILocation(line: 92, column: 23, scope: !4253, inlinedAt: !8457)
!8663 = !DILocation(line: 92, column: 9, scope: !4253, inlinedAt: !8457)
!8664 = !DILocation(line: 93, column: 36, scope: !4259, inlinedAt: !8457)
!8665 = !DILocation(line: 93, column: 23, scope: !4259, inlinedAt: !8457)
!8666 = !DILocation(line: 93, column: 20, scope: !4259, inlinedAt: !8457)
!8667 = !DILocation(line: 94, column: 30, scope: !4259, inlinedAt: !8457)
!8668 = !DILocation(line: 94, column: 23, scope: !4259, inlinedAt: !8457)
!8669 = !DILocation(line: 94, column: 35, scope: !4259, inlinedAt: !8457)
!8670 = !DILocation(line: 94, column: 33, scope: !4259, inlinedAt: !8457)
!8671 = !DILocation(line: 94, column: 20, scope: !4259, inlinedAt: !8457)
!8672 = !DILocation(line: 92, column: 31, scope: !4268, inlinedAt: !8457)
!8673 = !DILocation(line: 92, column: 9, scope: !4268, inlinedAt: !8457)
!8674 = !DILocation(line: 96, column: 46, scope: !3956, inlinedAt: !8457)
!8675 = !DILocation(line: 96, column: 19, scope: !3956, inlinedAt: !8457)
!8676 = !DILocation(line: 96, column: 40, scope: !3956, inlinedAt: !8457)
!8677 = !DILocation(line: 96, column: 42, scope: !3956, inlinedAt: !8457)
!8678 = !DILocation(line: 96, column: 17, scope: !3956, inlinedAt: !8457)
!8679 = !DILocation(line: 97, column: 46, scope: !3956, inlinedAt: !8457)
!8680 = !DILocation(line: 97, column: 53, scope: !3956, inlinedAt: !8457)
!8681 = !DILocation(line: 97, column: 52, scope: !3956, inlinedAt: !8457)
!8682 = !DILocation(line: 97, column: 16, scope: !3956, inlinedAt: !8457)
!8683 = !DILocation(line: 97, column: 40, scope: !3956, inlinedAt: !8457)
!8684 = !DILocation(line: 97, column: 42, scope: !3956, inlinedAt: !8457)
!8685 = !DILocation(line: 97, column: 13, scope: !3956, inlinedAt: !8457)
!8686 = !DILocation(line: 98, column: 13, scope: !3976, inlinedAt: !8457)
!8687 = !DILocation(line: 98, column: 13, scope: !3956, inlinedAt: !8457)
!8688 = !DILocation(line: 99, column: 20, scope: !3974, inlinedAt: !8457)
!8689 = !DILocation(line: 99, column: 18, scope: !3974, inlinedAt: !8457)
!8690 = !DILocation(line: 99, column: 25, scope: !4289, inlinedAt: !8457)
!8691 = !DILocation(line: 99, column: 29, scope: !4289, inlinedAt: !8457)
!8692 = !DILocation(line: 99, column: 27, scope: !4289, inlinedAt: !8457)
!8693 = !DILocation(line: 99, column: 13, scope: !4289, inlinedAt: !8457)
!8694 = !DILocation(line: 100, column: 36, scope: !3972, inlinedAt: !8457)
!8695 = !DILocation(line: 100, column: 38, scope: !3972, inlinedAt: !8457)
!8696 = !DILocation(line: 100, column: 37, scope: !3972, inlinedAt: !8457)
!8697 = !DILocation(line: 100, column: 33, scope: !3972, inlinedAt: !8457)
!8698 = !DILocation(line: 100, column: 27, scope: !3972, inlinedAt: !8457)
!8699 = !DILocation(line: 102, column: 21, scope: !3971, inlinedAt: !8457)
!8700 = !DILocation(line: 102, column: 28, scope: !3971, inlinedAt: !8457)
!8701 = !DILocation(line: 102, column: 35, scope: !4301, inlinedAt: !8457)
!8702 = !DILocation(line: 102, column: 31, scope: !4301, inlinedAt: !8457)
!8703 = !DILocation(line: 102, column: 38, scope: !4301, inlinedAt: !8457)
!8704 = !DILocation(line: 102, column: 21, scope: !4301, inlinedAt: !8457)
!8705 = !DILocation(line: 103, column: 25, scope: !3969, inlinedAt: !8457)
!8706 = !DILocation(line: 103, column: 30, scope: !3969, inlinedAt: !8457)
!8707 = !DILocation(line: 103, column: 27, scope: !3969, inlinedAt: !8457)
!8708 = !DILocation(line: 103, column: 25, scope: !3970, inlinedAt: !8457)
!8709 = !DILocation(line: 104, column: 37, scope: !4310, inlinedAt: !8457)
!8710 = !DILocation(line: 104, column: 35, scope: !4310, inlinedAt: !8457)
!8711 = !DILocation(line: 105, column: 33, scope: !4310, inlinedAt: !8457)
!8712 = !DILocation(line: 106, column: 21, scope: !4310, inlinedAt: !8457)
!8713 = !DILocation(line: 107, column: 56, scope: !3968, inlinedAt: !8457)
!8714 = !DILocation(line: 107, column: 59, scope: !3968, inlinedAt: !8457)
!8715 = !DILocation(line: 107, column: 62, scope: !3968, inlinedAt: !8457)
!8716 = !DILocation(line: 107, column: 50, scope: !3968, inlinedAt: !8457)
!8717 = !DILocation(line: 107, column: 33, scope: !3967, inlinedAt: !8457)
!8718 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !8460)
!8719 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !8460)
!8720 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !8460)
!8721 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !8460)
!8722 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !8460)
!8723 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !8460)
!8724 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !8460)
!8725 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !8460)
!8726 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !8460)
!8727 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !8460)
!8728 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !8460)
!8729 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !8460)
!8730 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !8460)
!8731 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !8460)
!8732 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !8460)
!8733 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !8460)
!8734 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !8460)
!8735 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !8460)
!8736 = !DILocation(line: 108, column: 37, scope: !3968, inlinedAt: !8457)
!8737 = !DILocation(line: 108, column: 45, scope: !3968, inlinedAt: !8457)
!8738 = !DILocation(line: 108, column: 39, scope: !3968, inlinedAt: !8457)
!8739 = !DILocation(line: 108, column: 38, scope: !3968, inlinedAt: !8457)
!8740 = !DILocation(line: 108, column: 48, scope: !3968, inlinedAt: !8457)
!8741 = !DILocation(line: 108, column: 47, scope: !3968, inlinedAt: !8457)
!8742 = !DILocation(line: 108, column: 35, scope: !3968, inlinedAt: !8457)
!8743 = !DILocation(line: 109, column: 57, scope: !3968, inlinedAt: !8457)
!8744 = !DILocation(line: 109, column: 59, scope: !3968, inlinedAt: !8457)
!8745 = !DILocation(line: 109, column: 42, scope: !3968, inlinedAt: !8457)
!8746 = !DILocation(line: 109, column: 40, scope: !3968, inlinedAt: !8457)
!8747 = !DILocation(line: 109, column: 63, scope: !3968, inlinedAt: !8457)
!8748 = !DILocation(line: 109, column: 66, scope: !3968, inlinedAt: !8457)
!8749 = !DILocation(line: 109, column: 70, scope: !3968, inlinedAt: !8457)
!8750 = !DILocation(line: 109, column: 33, scope: !3968, inlinedAt: !8457)
!8751 = !DILocation(line: 111, column: 17, scope: !3970, inlinedAt: !8457)
!8752 = !DILocation(line: 112, column: 37, scope: !4356, inlinedAt: !8457)
!8753 = !DILocation(line: 112, column: 33, scope: !4356, inlinedAt: !8457)
!8754 = !DILocation(line: 112, column: 40, scope: !4356, inlinedAt: !8457)
!8755 = !DILocation(line: 112, column: 39, scope: !4356, inlinedAt: !8457)
!8756 = !DILocation(line: 112, column: 31, scope: !4356, inlinedAt: !8457)
!8757 = !DILocation(line: 114, column: 22, scope: !3972, inlinedAt: !8457)
!8758 = !DILocation(line: 114, column: 26, scope: !3972, inlinedAt: !8457)
!8759 = !DILocation(line: 114, column: 24, scope: !3972, inlinedAt: !8457)
!8760 = !DILocation(line: 114, column: 20, scope: !3972, inlinedAt: !8457)
!8761 = !DILocation(line: 115, column: 21, scope: !4366, inlinedAt: !8457)
!8762 = !DILocation(line: 115, column: 21, scope: !3972, inlinedAt: !8457)
!8763 = !DILocation(line: 116, column: 35, scope: !4366, inlinedAt: !8457)
!8764 = !DILocation(line: 116, column: 37, scope: !4366, inlinedAt: !8457)
!8765 = !DILocation(line: 116, column: 36, scope: !4366, inlinedAt: !8457)
!8766 = !DILocation(line: 116, column: 32, scope: !4366, inlinedAt: !8457)
!8767 = !DILocation(line: 116, column: 40, scope: !4366, inlinedAt: !8457)
!8768 = !DILocation(line: 116, column: 47, scope: !4374, inlinedAt: !8457)
!8769 = !DILocation(line: 116, column: 32, scope: !4374, inlinedAt: !8457)
!8770 = !DILocation(line: 116, column: 60, scope: !4377, inlinedAt: !8457)
!8771 = !DILocation(line: 116, column: 59, scope: !4377, inlinedAt: !8457)
!8772 = !DILocation(line: 116, column: 32, scope: !4377, inlinedAt: !8457)
!8773 = !DILocation(line: 116, column: 32, scope: !4381, inlinedAt: !8457)
!8774 = !DILocation(line: 116, column: 25, scope: !4381, inlinedAt: !8457)
!8775 = !DILocation(line: 116, column: 27, scope: !4381, inlinedAt: !8457)
!8776 = !DILocation(line: 116, column: 26, scope: !4381, inlinedAt: !8457)
!8777 = !DILocation(line: 116, column: 21, scope: !4381, inlinedAt: !8457)
!8778 = !DILocation(line: 116, column: 30, scope: !4381, inlinedAt: !8457)
!8779 = !DILocation(line: 117, column: 25, scope: !4388, inlinedAt: !8457)
!8780 = !DILocation(line: 117, column: 21, scope: !4388, inlinedAt: !8457)
!8781 = !DILocation(line: 117, column: 28, scope: !4388, inlinedAt: !8457)
!8782 = !DILocation(line: 117, column: 21, scope: !3972, inlinedAt: !8457)
!8783 = !DILocation(line: 118, column: 28, scope: !4388, inlinedAt: !8457)
!8784 = !DILocation(line: 118, column: 21, scope: !4388, inlinedAt: !8457)
!8785 = !DILocation(line: 119, column: 28, scope: !3972, inlinedAt: !8457)
!8786 = !DILocation(line: 119, column: 38, scope: !3972, inlinedAt: !8457)
!8787 = !DILocation(line: 119, column: 37, scope: !3972, inlinedAt: !8457)
!8788 = !DILocation(line: 119, column: 25, scope: !3972, inlinedAt: !8457)
!8789 = !DILocation(line: 120, column: 23, scope: !3972, inlinedAt: !8457)
!8790 = !DILocation(line: 120, column: 26, scope: !3972, inlinedAt: !8457)
!8791 = !DILocation(line: 120, column: 25, scope: !3972, inlinedAt: !8457)
!8792 = !DILocation(line: 120, column: 20, scope: !3972, inlinedAt: !8457)
!8793 = !DILocation(line: 99, column: 35, scope: !4403, inlinedAt: !8457)
!8794 = !DILocation(line: 99, column: 13, scope: !4403, inlinedAt: !8457)
!8795 = !DILocation(line: 122, column: 9, scope: !3975, inlinedAt: !8457)
!8796 = !DILocation(line: 123, column: 20, scope: !4409, inlinedAt: !8457)
!8797 = !DILocation(line: 123, column: 18, scope: !4409, inlinedAt: !8457)
!8798 = !DILocation(line: 123, column: 25, scope: !4413, inlinedAt: !8457)
!8799 = !DILocation(line: 123, column: 29, scope: !4413, inlinedAt: !8457)
!8800 = !DILocation(line: 123, column: 27, scope: !4413, inlinedAt: !8457)
!8801 = !DILocation(line: 123, column: 13, scope: !4413, inlinedAt: !8457)
!8802 = !DILocation(line: 124, column: 33, scope: !4419, inlinedAt: !8457)
!8803 = !DILocation(line: 124, column: 29, scope: !4419, inlinedAt: !8457)
!8804 = !DILocation(line: 124, column: 36, scope: !4419, inlinedAt: !8457)
!8805 = !DILocation(line: 124, column: 35, scope: !4419, inlinedAt: !8457)
!8806 = !DILocation(line: 124, column: 27, scope: !4419, inlinedAt: !8457)
!8807 = !DILocation(line: 125, column: 28, scope: !4419, inlinedAt: !8457)
!8808 = !DILocation(line: 125, column: 38, scope: !4419, inlinedAt: !8457)
!8809 = !DILocation(line: 125, column: 37, scope: !4419, inlinedAt: !8457)
!8810 = !DILocation(line: 125, column: 25, scope: !4419, inlinedAt: !8457)
!8811 = !DILocation(line: 126, column: 21, scope: !4429, inlinedAt: !8457)
!8812 = !DILocation(line: 126, column: 21, scope: !4419, inlinedAt: !8457)
!8813 = !DILocation(line: 127, column: 32, scope: !4429, inlinedAt: !8457)
!8814 = !DILocation(line: 127, column: 25, scope: !4429, inlinedAt: !8457)
!8815 = !DILocation(line: 127, column: 27, scope: !4429, inlinedAt: !8457)
!8816 = !DILocation(line: 127, column: 26, scope: !4429, inlinedAt: !8457)
!8817 = !DILocation(line: 127, column: 21, scope: !4429, inlinedAt: !8457)
!8818 = !DILocation(line: 127, column: 30, scope: !4429, inlinedAt: !8457)
!8819 = !DILocation(line: 128, column: 27, scope: !4419, inlinedAt: !8457)
!8820 = !DILocation(line: 128, column: 29, scope: !4419, inlinedAt: !8457)
!8821 = !DILocation(line: 128, column: 28, scope: !4419, inlinedAt: !8457)
!8822 = !DILocation(line: 128, column: 24, scope: !4419, inlinedAt: !8457)
!8823 = !DILocation(line: 128, column: 34, scope: !4419, inlinedAt: !8457)
!8824 = !DILocation(line: 128, column: 32, scope: !4419, inlinedAt: !8457)
!8825 = !DILocation(line: 128, column: 49, scope: !4419, inlinedAt: !8457)
!8826 = !DILocation(line: 128, column: 51, scope: !4419, inlinedAt: !8457)
!8827 = !DILocation(line: 128, column: 50, scope: !4419, inlinedAt: !8457)
!8828 = !DILocation(line: 128, column: 46, scope: !4419, inlinedAt: !8457)
!8829 = !DILocation(line: 128, column: 56, scope: !4419, inlinedAt: !8457)
!8830 = !DILocation(line: 128, column: 54, scope: !4419, inlinedAt: !8457)
!8831 = !DILocation(line: 128, column: 44, scope: !4419, inlinedAt: !8457)
!8832 = !DILocation(line: 128, column: 20, scope: !4419, inlinedAt: !8457)
!8833 = !DILocation(line: 123, column: 35, scope: !4452, inlinedAt: !8457)
!8834 = !DILocation(line: 123, column: 13, scope: !4452, inlinedAt: !8457)
!8835 = !DILocation(line: 131, column: 17, scope: !3956, inlinedAt: !8457)
!8836 = !DILocation(line: 131, column: 22, scope: !3956, inlinedAt: !8457)
!8837 = !DILocation(line: 131, column: 20, scope: !3956, inlinedAt: !8457)
!8838 = !DILocation(line: 131, column: 31, scope: !3956, inlinedAt: !8457)
!8839 = !DILocation(line: 131, column: 29, scope: !3956, inlinedAt: !8457)
!8840 = !DILocation(line: 131, column: 14, scope: !3956, inlinedAt: !8457)
!8841 = !DILocation(line: 132, column: 20, scope: !3956, inlinedAt: !8457)
!8842 = !DILocation(line: 132, column: 17, scope: !3956, inlinedAt: !8457)
!8843 = !DILocation(line: 133, column: 13, scope: !4465, inlinedAt: !8457)
!8844 = !DILocation(line: 133, column: 21, scope: !4465, inlinedAt: !8457)
!8845 = !DILocation(line: 133, column: 18, scope: !4465, inlinedAt: !8457)
!8846 = !DILocation(line: 133, column: 13, scope: !3956, inlinedAt: !8457)
!8847 = !DILocation(line: 134, column: 20, scope: !4465, inlinedAt: !8457)
!8848 = !DILocation(line: 134, column: 13, scope: !4465, inlinedAt: !8457)
!8849 = !DILocation(line: 135, column: 13, scope: !3955, inlinedAt: !8457)
!8850 = !DILocation(line: 135, column: 13, scope: !3956, inlinedAt: !8457)
!8851 = !DILocation(line: 136, column: 22, scope: !3954, inlinedAt: !8457)
!8852 = !DILocation(line: 136, column: 53, scope: !3954, inlinedAt: !8457)
!8853 = !DILocation(line: 136, column: 26, scope: !3954, inlinedAt: !8457)
!8854 = !DILocation(line: 136, column: 47, scope: !3954, inlinedAt: !8457)
!8855 = !DILocation(line: 136, column: 49, scope: !3954, inlinedAt: !8457)
!8856 = !DILocation(line: 136, column: 90, scope: !3954, inlinedAt: !8457)
!8857 = !DILocation(line: 136, column: 62, scope: !3954, inlinedAt: !8457)
!8858 = !DILocation(line: 136, column: 84, scope: !3954, inlinedAt: !8457)
!8859 = !DILocation(line: 136, column: 86, scope: !3954, inlinedAt: !8457)
!8860 = !DILocation(line: 136, column: 13, scope: !3954, inlinedAt: !8457)
!8861 = !DILocation(line: 137, column: 17, scope: !4484, inlinedAt: !8457)
!8862 = !DILocation(line: 137, column: 17, scope: !3954, inlinedAt: !8457)
!8863 = !DILocation(line: 138, column: 24, scope: !4487, inlinedAt: !8457)
!8864 = !DILocation(line: 138, column: 22, scope: !4487, inlinedAt: !8457)
!8865 = !DILocation(line: 138, column: 29, scope: !4490, inlinedAt: !8457)
!8866 = !DILocation(line: 138, column: 33, scope: !4490, inlinedAt: !8457)
!8867 = !DILocation(line: 138, column: 31, scope: !4490, inlinedAt: !8457)
!8868 = !DILocation(line: 138, column: 17, scope: !4490, inlinedAt: !8457)
!8869 = !DILocation(line: 139, column: 55, scope: !4496, inlinedAt: !8457)
!8870 = !DILocation(line: 139, column: 62, scope: !4496, inlinedAt: !8457)
!8871 = !DILocation(line: 139, column: 61, scope: !4496, inlinedAt: !8457)
!8872 = !DILocation(line: 139, column: 66, scope: !4496, inlinedAt: !8457)
!8873 = !DILocation(line: 139, column: 65, scope: !4496, inlinedAt: !8457)
!8874 = !DILocation(line: 139, column: 25, scope: !4496, inlinedAt: !8457)
!8875 = !DILocation(line: 139, column: 49, scope: !4496, inlinedAt: !8457)
!8876 = !DILocation(line: 139, column: 51, scope: !4496, inlinedAt: !8457)
!8877 = !DILocation(line: 139, column: 69, scope: !4496, inlinedAt: !8457)
!8878 = !DILocation(line: 139, column: 25, scope: !4491, inlinedAt: !8457)
!8879 = !DILocation(line: 140, column: 34, scope: !4496, inlinedAt: !8457)
!8880 = !DILocation(line: 140, column: 44, scope: !4496, inlinedAt: !8457)
!8881 = !DILocation(line: 140, column: 46, scope: !4496, inlinedAt: !8457)
!8882 = !DILocation(line: 140, column: 45, scope: !4496, inlinedAt: !8457)
!8883 = !DILocation(line: 140, column: 41, scope: !4496, inlinedAt: !8457)
!8884 = !DILocation(line: 140, column: 49, scope: !4496, inlinedAt: !8457)
!8885 = !DILocation(line: 140, column: 25, scope: !4496, inlinedAt: !8457)
!8886 = !DILocation(line: 138, column: 39, scope: !4514, inlinedAt: !8457)
!8887 = !DILocation(line: 138, column: 17, scope: !4514, inlinedAt: !8457)
!8888 = !DILocation(line: 140, column: 55, scope: !4519, inlinedAt: !8457)
!8889 = !DILocation(line: 141, column: 17, scope: !3953, inlinedAt: !8457)
!8890 = !DILocation(line: 141, column: 17, scope: !3954, inlinedAt: !8457)
!8891 = !DILocation(line: 142, column: 24, scope: !3951, inlinedAt: !8457)
!8892 = !DILocation(line: 142, column: 22, scope: !3951, inlinedAt: !8457)
!8893 = !DILocation(line: 142, column: 29, scope: !4525, inlinedAt: !8457)
!8894 = !DILocation(line: 142, column: 31, scope: !4525, inlinedAt: !8457)
!8895 = !DILocation(line: 142, column: 17, scope: !4525, inlinedAt: !8457)
!8896 = !DILocation(line: 143, column: 55, scope: !3948, inlinedAt: !8457)
!8897 = !DILocation(line: 143, column: 61, scope: !3948, inlinedAt: !8457)
!8898 = !DILocation(line: 143, column: 64, scope: !3948, inlinedAt: !8457)
!8899 = !DILocation(line: 143, column: 63, scope: !3948, inlinedAt: !8457)
!8900 = !DILocation(line: 143, column: 25, scope: !3948, inlinedAt: !8457)
!8901 = !DILocation(line: 143, column: 49, scope: !3948, inlinedAt: !8457)
!8902 = !DILocation(line: 143, column: 51, scope: !3948, inlinedAt: !8457)
!8903 = !DILocation(line: 143, column: 67, scope: !3948, inlinedAt: !8457)
!8904 = !DILocation(line: 143, column: 25, scope: !3949, inlinedAt: !8457)
!8905 = !DILocation(line: 144, column: 68, scope: !3947, inlinedAt: !8457)
!8906 = !DILocation(line: 144, column: 70, scope: !3947, inlinedAt: !8457)
!8907 = !DILocation(line: 144, column: 69, scope: !3947, inlinedAt: !8457)
!8908 = !DILocation(line: 144, column: 65, scope: !3947, inlinedAt: !8457)
!8909 = !DILocation(line: 144, column: 59, scope: !3947, inlinedAt: !8457)
!8910 = !DILocation(line: 144, column: 75, scope: !3947, inlinedAt: !8457)
!8911 = !DILocation(line: 144, column: 78, scope: !3947, inlinedAt: !8457)
!8912 = !DILocation(line: 144, column: 53, scope: !4545, inlinedAt: !8457)
!8913 = !DILocation(line: 144, column: 36, scope: !3946, inlinedAt: !8457)
!8914 = !DILocation(line: 231, column: 9, scope: !4320, inlinedAt: !8456)
!8915 = !DILocation(line: 231, column: 19, scope: !4320, inlinedAt: !8456)
!8916 = !DILocation(line: 231, column: 17, scope: !4320, inlinedAt: !8456)
!8917 = !DILocation(line: 231, column: 22, scope: !4320, inlinedAt: !8456)
!8918 = !DILocation(line: 231, column: 13, scope: !4320, inlinedAt: !8456)
!8919 = !DILocation(line: 231, column: 11, scope: !4320, inlinedAt: !8456)
!8920 = !DILocation(line: 231, column: 9, scope: !3940, inlinedAt: !8456)
!8921 = !DILocation(line: 231, column: 37, scope: !4328, inlinedAt: !8456)
!8922 = !DILocation(line: 231, column: 36, scope: !4328, inlinedAt: !8456)
!8923 = !DILocation(line: 231, column: 40, scope: !4328, inlinedAt: !8456)
!8924 = !DILocation(line: 231, column: 53, scope: !4328, inlinedAt: !8456)
!8925 = !DILocation(line: 231, column: 51, scope: !4328, inlinedAt: !8456)
!8926 = !DILocation(line: 231, column: 56, scope: !4328, inlinedAt: !8456)
!8927 = !DILocation(line: 231, column: 46, scope: !4328, inlinedAt: !8456)
!8928 = !DILocation(line: 231, column: 28, scope: !4328, inlinedAt: !8456)
!8929 = !DILocation(line: 232, column: 17, scope: !4320, inlinedAt: !8456)
!8930 = !DILocation(line: 232, column: 10, scope: !4320, inlinedAt: !8456)
!8931 = !DILocation(line: 233, column: 1, scope: !3940, inlinedAt: !8456)
!8932 = !DILocation(line: 145, column: 56, scope: !3947, inlinedAt: !8457)
!8933 = !DILocation(line: 145, column: 61, scope: !3947, inlinedAt: !8457)
!8934 = !DILocation(line: 145, column: 41, scope: !3947, inlinedAt: !8457)
!8935 = !DILocation(line: 145, column: 39, scope: !3947, inlinedAt: !8457)
!8936 = !DILocation(line: 147, column: 34, scope: !3947, inlinedAt: !8457)
!8937 = !DILocation(line: 147, column: 38, scope: !3947, inlinedAt: !8457)
!8938 = !DILocation(line: 147, column: 42, scope: !3947, inlinedAt: !8457)
!8939 = !DILocation(line: 147, column: 46, scope: !3947, inlinedAt: !8457)
!8940 = !DILocation(line: 147, column: 58, scope: !3947, inlinedAt: !8457)
!8941 = !DILocation(line: 147, column: 62, scope: !3947, inlinedAt: !8457)
!8942 = !DILocation(line: 147, column: 66, scope: !3947, inlinedAt: !8457)
!8943 = !DILocation(line: 147, column: 54, scope: !3947, inlinedAt: !8457)
!8944 = !DILocation(line: 147, column: 72, scope: !3947, inlinedAt: !8457)
!8945 = !DILocation(line: 147, column: 25, scope: !3947, inlinedAt: !8457)
!8946 = !DILocation(line: 148, column: 35, scope: !3947, inlinedAt: !8457)
!8947 = !DILocation(line: 148, column: 39, scope: !3947, inlinedAt: !8457)
!8948 = !DILocation(line: 148, column: 44, scope: !3947, inlinedAt: !8457)
!8949 = !DILocation(line: 148, column: 25, scope: !3947, inlinedAt: !8457)
!8950 = !DILocation(line: 149, column: 21, scope: !3947, inlinedAt: !8457)
!8951 = !DILocation(line: 142, column: 37, scope: !4585, inlinedAt: !8457)
!8952 = !DILocation(line: 142, column: 17, scope: !4585, inlinedAt: !8457)
!8953 = !DILocation(line: 151, column: 13, scope: !3952, inlinedAt: !8457)
!8954 = !DILocation(line: 152, column: 9, scope: !3954, inlinedAt: !8457)
!8955 = !DILocation(line: 86, column: 32, scope: !4592, inlinedAt: !8457)
!8956 = !DILocation(line: 86, column: 29, scope: !4592, inlinedAt: !8457)
!8957 = !DILocation(line: 86, column: 5, scope: !4592, inlinedAt: !8457)
!8958 = !DILocation(line: 155, column: 9, scope: !4598, inlinedAt: !8457)
!8959 = !DILocation(line: 155, column: 9, scope: !3959, inlinedAt: !8457)
!8960 = !DILocation(line: 156, column: 17, scope: !4598, inlinedAt: !8457)
!8961 = !DILocation(line: 156, column: 10, scope: !4598, inlinedAt: !8457)
!8962 = !DILocation(line: 156, column: 15, scope: !4598, inlinedAt: !8457)
!8963 = !DILocation(line: 156, column: 9, scope: !4598, inlinedAt: !8457)
!8964 = !DILocation(line: 157, column: 9, scope: !4605, inlinedAt: !8457)
!8965 = !DILocation(line: 157, column: 9, scope: !3959, inlinedAt: !8457)
!8966 = !DILocation(line: 158, column: 19, scope: !4605, inlinedAt: !8457)
!8967 = !DILocation(line: 158, column: 10, scope: !4605, inlinedAt: !8457)
!8968 = !DILocation(line: 158, column: 17, scope: !4605, inlinedAt: !8457)
!8969 = !DILocation(line: 158, column: 9, scope: !4605, inlinedAt: !8457)
!8970 = !DILocation(line: 159, column: 12, scope: !3959, inlinedAt: !8457)
!8971 = !DILocation(line: 159, column: 5, scope: !3959, inlinedAt: !8457)
!8972 = !DILocation(line: 160, column: 1, scope: !3959, inlinedAt: !8457)
!8973 = !DILocation(line: 190, column: 245, scope: !8454)
