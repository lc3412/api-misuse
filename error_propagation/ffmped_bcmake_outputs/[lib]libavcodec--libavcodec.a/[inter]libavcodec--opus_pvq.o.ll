; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--opus_pvq.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--opus_pvq.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CeltPVQ = type { [256 x i32], [256 x float], float (float*, i32*, i32, i32)*, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)*, [16 x i8] }
%struct.CeltFrame = type { %struct.AVCodecContext*, [4 x %struct.MDCT15Context*], %struct.AVFloatDSPContext*, [16 x i8], [2 x %struct.CeltBlock], %struct.CeltPVQ*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [21 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, [21 x i32], [21 x i32], [21 x i32], [21 x i32], [21 x i32], [12 x i8] }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.MDCT15Context = type { i32, i32, i32, i32, i32*, i32*, %struct.FFTContext, %struct.FFTComplex*, %struct.FFTComplex*, [64 x %struct.FFTComplex], void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.FFTComplex*, i64)*, void (%struct.FFTComplex*, %struct.FFTComplex*, %struct.FFTComplex*, i32*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)*, void (%struct.MDCT15Context*, float*, float*, i64)* }
%struct.FFTContext = type { i32, i32, i16*, %struct.FFTComplex*, i32, i32, float*, float*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, %struct.FFTComplex*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, void (%struct.FFTContext*, float*, float*)*, i32, i32, i32* }
%struct.FFTComplex = type { float, float }
%struct.AVFloatDSPContext = type { void (float*, float*, float*, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float, i32)*, void (double*, double*, double, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, float*, i32)*, void (float*, float*, float*, i32)*, void (float*, float*, i32)*, float (float*, float*, i32)*, void (double*, double*, double*, i32)* }
%struct.CeltBlock = type { [21 x float], [21 x float], [21 x float], [2 x [21 x float]], [21 x i8], [7 x i8], [2048 x float], [960 x float], [128 x float], [960 x float], i32, [3 x float], i32, [3 x float], i32, [3 x float], float, [12 x i8] }
%struct.OpusRangeCoder = type { %struct.GetBitContext, %struct.RawBitsContext, i32, i32, i32, [1287 x i8], i8*, i32, i32, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.RawBitsContext = type { i8*, i32, i32, i32 }

@ff_celt_bit_interleave = external constant [0 x i8], align 1
@ff_celt_cache_bits = external constant [392 x i8], align 16
@ff_celt_cache_index = external constant [105 x i16], align 16
@ff_celt_log_freq_range = external constant [0 x i8], align 1
@ff_celt_bit_deinterleave = external constant [0 x i8], align 1
@ff_celt_hadamard_order = external constant [0 x i8], align 1
@ff_celt_qn_exp2 = external constant [0 x i16], align 2
@ff_celt_pvq_u_row = external constant [15 x i32*], align 16

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_celt_pvq_init(%struct.CeltPVQ** %pvq, i32 %encode) #0 !dbg !919 {
entry:
  %retval = alloca i32, align 4
  %pvq.addr = alloca %struct.CeltPVQ**, align 8
  %encode.addr = alloca i32, align 4
  %s = alloca %struct.CeltPVQ*, align 8
  store %struct.CeltPVQ** %pvq, %struct.CeltPVQ*** %pvq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltPVQ*** %pvq.addr, metadata !1786, metadata !1787), !dbg !1788
  store i32 %encode, i32* %encode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %encode.addr, metadata !1789, metadata !1787), !dbg !1790
  call void @llvm.dbg.declare(metadata %struct.CeltPVQ** %s, metadata !1791, metadata !1787), !dbg !1792
  %call = call noalias i8* @av_malloc(i64 2080), !dbg !1793
  %0 = bitcast i8* %call to %struct.CeltPVQ*, !dbg !1793
  store %struct.CeltPVQ* %0, %struct.CeltPVQ** %s, align 8, !dbg !1792
  %1 = load %struct.CeltPVQ*, %struct.CeltPVQ** %s, align 8, !dbg !1794
  %tobool = icmp ne %struct.CeltPVQ* %1, null, !dbg !1794
  br i1 %tobool, label %if.end, label %if.then, !dbg !1796

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !1797
  br label %return, !dbg !1797

if.end:                                           ; preds = %entry
  %2 = load %struct.CeltPVQ*, %struct.CeltPVQ** %s, align 8, !dbg !1798
  %pvq_search = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %2, i32 0, i32 2, !dbg !1799
  store float (float*, i32*, i32, i32)* @ppp_pvq_search_c, float (float*, i32*, i32, i32)** %pvq_search, align 32, !dbg !1800
  %3 = load i32, i32* %encode.addr, align 4, !dbg !1801
  %tobool1 = icmp ne i32 %3, 0, !dbg !1801
  %cond = select i1 %tobool1, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)* @pvq_encode_band, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)* @pvq_decode_band, !dbg !1801
  %4 = load %struct.CeltPVQ*, %struct.CeltPVQ** %s, align 8, !dbg !1802
  %quant_band = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %4, i32 0, i32 3, !dbg !1803
  store i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)* %cond, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)** %quant_band, align 8, !dbg !1804
  %5 = load %struct.CeltPVQ*, %struct.CeltPVQ** %s, align 8, !dbg !1805
  call void @ff_opus_dsp_init_x86(%struct.CeltPVQ* %5), !dbg !1807
  %6 = load %struct.CeltPVQ*, %struct.CeltPVQ** %s, align 8, !dbg !1808
  %7 = load %struct.CeltPVQ**, %struct.CeltPVQ*** %pvq.addr, align 8, !dbg !1809
  store %struct.CeltPVQ* %6, %struct.CeltPVQ** %7, align 8, !dbg !1810
  store i32 0, i32* %retval, align 4, !dbg !1811
  br label %return, !dbg !1811

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !1812
  ret i32 %8, !dbg !1812
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare noalias i8* @av_malloc(i64) #2

; Function Attrs: nounwind uwtable
define internal float @ppp_pvq_search_c(float* %X, i32* %y, i32 %K, i32 %N) #3 !dbg !1813 {
entry:
  %X.addr = alloca float*, align 8
  %y.addr = alloca i32*, align 8
  %K.addr = alloca i32, align 4
  %N.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %y_norm = alloca i32, align 4
  %res = alloca float, align 4
  %xy_norm = alloca float, align 4
  %max_idx = alloca i32, align 4
  %phase = alloca i32, align 4
  %max_num = alloca float, align 4
  %max_den = alloca float, align 4
  %ca = alloca i32, align 4
  %y_new = alloca i32, align 4
  %xy_new = alloca float, align 4
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !1814, metadata !1787), !dbg !1815
  store i32* %y, i32** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !1816, metadata !1787), !dbg !1817
  store i32 %K, i32* %K.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %K.addr, metadata !1818, metadata !1787), !dbg !1819
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !1820, metadata !1787), !dbg !1821
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1822, metadata !1787), !dbg !1823
  call void @llvm.dbg.declare(metadata i32* %y_norm, metadata !1824, metadata !1787), !dbg !1825
  store i32 0, i32* %y_norm, align 4, !dbg !1825
  call void @llvm.dbg.declare(metadata float* %res, metadata !1826, metadata !1787), !dbg !1827
  store float 0.000000e+00, float* %res, align 4, !dbg !1827
  call void @llvm.dbg.declare(metadata float* %xy_norm, metadata !1828, metadata !1787), !dbg !1829
  store float 0.000000e+00, float* %xy_norm, align 4, !dbg !1829
  store i32 0, i32* %i, align 4, !dbg !1830
  br label %for.cond, !dbg !1832

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1833
  %1 = load i32, i32* %N.addr, align 4, !dbg !1836
  %cmp = icmp slt i32 %0, %1, !dbg !1837
  br i1 %cmp, label %for.body, label %for.end, !dbg !1838

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !1839
  %idxprom = sext i32 %2 to i64, !dbg !1840
  %3 = load float*, float** %X.addr, align 8, !dbg !1840
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !1840
  %4 = load float, float* %arrayidx, align 4, !dbg !1840
  %cmp1 = fcmp oge float %4, 0.000000e+00, !dbg !1841
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !1842

cond.true:                                        ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !1843
  %idxprom2 = sext i32 %5 to i64, !dbg !1844
  %6 = load float*, float** %X.addr, align 8, !dbg !1844
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 %idxprom2, !dbg !1844
  %7 = load float, float* %arrayidx3, align 4, !dbg !1844
  br label %cond.end, !dbg !1845

cond.false:                                       ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !1846
  %idxprom4 = sext i32 %8 to i64, !dbg !1848
  %9 = load float*, float** %X.addr, align 8, !dbg !1848
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 %idxprom4, !dbg !1848
  %10 = load float, float* %arrayidx5, align 4, !dbg !1848
  %sub = fsub float -0.000000e+00, %10, !dbg !1849
  br label %cond.end, !dbg !1850

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %7, %cond.true ], [ %sub, %cond.false ], !dbg !1851
  %11 = load float, float* %res, align 4, !dbg !1853
  %add = fadd float %11, %cond, !dbg !1853
  store float %add, float* %res, align 4, !dbg !1853
  br label %for.inc, !dbg !1854

for.inc:                                          ; preds = %cond.end
  %12 = load i32, i32* %i, align 4, !dbg !1855
  %inc = add nsw i32 %12, 1, !dbg !1855
  store i32 %inc, i32* %i, align 4, !dbg !1855
  br label %for.cond, !dbg !1856, !llvm.loop !1857

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %K.addr, align 4, !dbg !1859
  %conv = sitofp i32 %13 to float, !dbg !1859
  %14 = load float, float* %res, align 4, !dbg !1860
  %add6 = fadd float %14, 0x3E80000000000000, !dbg !1861
  %div = fdiv float %conv, %add6, !dbg !1862
  store float %div, float* %res, align 4, !dbg !1863
  store i32 0, i32* %i, align 4, !dbg !1864
  br label %for.cond7, !dbg !1866

for.cond7:                                        ; preds = %for.inc43, %for.end
  %15 = load i32, i32* %i, align 4, !dbg !1867
  %16 = load i32, i32* %N.addr, align 4, !dbg !1870
  %cmp8 = icmp slt i32 %15, %16, !dbg !1871
  br i1 %cmp8, label %for.body10, label %for.end45, !dbg !1872

for.body10:                                       ; preds = %for.cond7
  %17 = load float, float* %res, align 4, !dbg !1873
  %18 = load i32, i32* %i, align 4, !dbg !1875
  %idxprom11 = sext i32 %18 to i64, !dbg !1876
  %19 = load float*, float** %X.addr, align 8, !dbg !1876
  %arrayidx12 = getelementptr inbounds float, float* %19, i64 %idxprom11, !dbg !1876
  %20 = load float, float* %arrayidx12, align 4, !dbg !1876
  %mul = fmul float %17, %20, !dbg !1877
  %call = call i64 @lrintf(float %mul) #7, !dbg !1878
  %conv13 = trunc i64 %call to i32, !dbg !1878
  %21 = load i32, i32* %i, align 4, !dbg !1879
  %idxprom14 = sext i32 %21 to i64, !dbg !1880
  %22 = load i32*, i32** %y.addr, align 8, !dbg !1880
  %arrayidx15 = getelementptr inbounds i32, i32* %22, i64 %idxprom14, !dbg !1880
  store i32 %conv13, i32* %arrayidx15, align 4, !dbg !1881
  %23 = load i32, i32* %i, align 4, !dbg !1882
  %idxprom16 = sext i32 %23 to i64, !dbg !1883
  %24 = load i32*, i32** %y.addr, align 8, !dbg !1883
  %arrayidx17 = getelementptr inbounds i32, i32* %24, i64 %idxprom16, !dbg !1883
  %25 = load i32, i32* %arrayidx17, align 4, !dbg !1883
  %26 = load i32, i32* %i, align 4, !dbg !1884
  %idxprom18 = sext i32 %26 to i64, !dbg !1885
  %27 = load i32*, i32** %y.addr, align 8, !dbg !1885
  %arrayidx19 = getelementptr inbounds i32, i32* %27, i64 %idxprom18, !dbg !1885
  %28 = load i32, i32* %arrayidx19, align 4, !dbg !1885
  %mul20 = mul nsw i32 %25, %28, !dbg !1886
  %29 = load i32, i32* %y_norm, align 4, !dbg !1887
  %add21 = add nsw i32 %29, %mul20, !dbg !1887
  store i32 %add21, i32* %y_norm, align 4, !dbg !1887
  %30 = load i32, i32* %i, align 4, !dbg !1888
  %idxprom22 = sext i32 %30 to i64, !dbg !1889
  %31 = load i32*, i32** %y.addr, align 8, !dbg !1889
  %arrayidx23 = getelementptr inbounds i32, i32* %31, i64 %idxprom22, !dbg !1889
  %32 = load i32, i32* %arrayidx23, align 4, !dbg !1889
  %conv24 = sitofp i32 %32 to float, !dbg !1889
  %33 = load i32, i32* %i, align 4, !dbg !1890
  %idxprom25 = sext i32 %33 to i64, !dbg !1891
  %34 = load float*, float** %X.addr, align 8, !dbg !1891
  %arrayidx26 = getelementptr inbounds float, float* %34, i64 %idxprom25, !dbg !1891
  %35 = load float, float* %arrayidx26, align 4, !dbg !1891
  %mul27 = fmul float %conv24, %35, !dbg !1892
  %36 = load float, float* %xy_norm, align 4, !dbg !1893
  %add28 = fadd float %36, %mul27, !dbg !1893
  store float %add28, float* %xy_norm, align 4, !dbg !1893
  %37 = load i32, i32* %i, align 4, !dbg !1894
  %idxprom29 = sext i32 %37 to i64, !dbg !1895
  %38 = load i32*, i32** %y.addr, align 8, !dbg !1895
  %arrayidx30 = getelementptr inbounds i32, i32* %38, i64 %idxprom29, !dbg !1895
  %39 = load i32, i32* %arrayidx30, align 4, !dbg !1895
  %cmp31 = icmp sge i32 %39, 0, !dbg !1896
  br i1 %cmp31, label %cond.true33, label %cond.false36, !dbg !1897

cond.true33:                                      ; preds = %for.body10
  %40 = load i32, i32* %i, align 4, !dbg !1898
  %idxprom34 = sext i32 %40 to i64, !dbg !1900
  %41 = load i32*, i32** %y.addr, align 8, !dbg !1900
  %arrayidx35 = getelementptr inbounds i32, i32* %41, i64 %idxprom34, !dbg !1900
  %42 = load i32, i32* %arrayidx35, align 4, !dbg !1900
  br label %cond.end40, !dbg !1901

cond.false36:                                     ; preds = %for.body10
  %43 = load i32, i32* %i, align 4, !dbg !1902
  %idxprom37 = sext i32 %43 to i64, !dbg !1904
  %44 = load i32*, i32** %y.addr, align 8, !dbg !1904
  %arrayidx38 = getelementptr inbounds i32, i32* %44, i64 %idxprom37, !dbg !1904
  %45 = load i32, i32* %arrayidx38, align 4, !dbg !1904
  %sub39 = sub nsw i32 0, %45, !dbg !1905
  br label %cond.end40, !dbg !1906

cond.end40:                                       ; preds = %cond.false36, %cond.true33
  %cond41 = phi i32 [ %42, %cond.true33 ], [ %sub39, %cond.false36 ], !dbg !1907
  %46 = load i32, i32* %K.addr, align 4, !dbg !1909
  %sub42 = sub nsw i32 %46, %cond41, !dbg !1909
  store i32 %sub42, i32* %K.addr, align 4, !dbg !1909
  br label %for.inc43, !dbg !1910

for.inc43:                                        ; preds = %cond.end40
  %47 = load i32, i32* %i, align 4, !dbg !1911
  %inc44 = add nsw i32 %47, 1, !dbg !1911
  store i32 %inc44, i32* %i, align 4, !dbg !1911
  br label %for.cond7, !dbg !1913, !llvm.loop !1914

for.end45:                                        ; preds = %for.cond7
  br label %while.cond, !dbg !1916

while.cond:                                       ; preds = %for.end105, %for.end45
  %48 = load i32, i32* %K.addr, align 4, !dbg !1917
  %tobool = icmp ne i32 %48, 0, !dbg !1919
  br i1 %tobool, label %while.body, label %while.end, !dbg !1919

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %max_idx, metadata !1920, metadata !1787), !dbg !1922
  store i32 0, i32* %max_idx, align 4, !dbg !1922
  call void @llvm.dbg.declare(metadata i32* %phase, metadata !1923, metadata !1787), !dbg !1924
  %49 = load i32, i32* %K.addr, align 4, !dbg !1925
  %cmp46 = icmp sgt i32 %49, 0, !dbg !1926
  %cond48 = select i1 %cmp46, i32 1, i32 -1, !dbg !1927
  store i32 %cond48, i32* %phase, align 4, !dbg !1924
  call void @llvm.dbg.declare(metadata float* %max_num, metadata !1928, metadata !1787), !dbg !1929
  store float 0.000000e+00, float* %max_num, align 4, !dbg !1929
  call void @llvm.dbg.declare(metadata float* %max_den, metadata !1930, metadata !1787), !dbg !1931
  store float 1.000000e+00, float* %max_den, align 4, !dbg !1931
  %50 = load i32, i32* %y_norm, align 4, !dbg !1932
  %conv49 = sitofp i32 %50 to float, !dbg !1932
  %add50 = fadd float %conv49, 1.000000e+00, !dbg !1932
  %conv51 = fptosi float %add50 to i32, !dbg !1932
  store i32 %conv51, i32* %y_norm, align 4, !dbg !1932
  store i32 0, i32* %i, align 4, !dbg !1933
  br label %for.cond52, !dbg !1935

for.cond52:                                       ; preds = %for.inc103, %while.body
  %51 = load i32, i32* %i, align 4, !dbg !1936
  %52 = load i32, i32* %N.addr, align 4, !dbg !1939
  %cmp53 = icmp slt i32 %51, %52, !dbg !1940
  br i1 %cmp53, label %for.body55, label %for.end105, !dbg !1941

for.body55:                                       ; preds = %for.cond52
  call void @llvm.dbg.declare(metadata i32* %ca, metadata !1942, metadata !1787), !dbg !1944
  %53 = load i32, i32* %i, align 4, !dbg !1945
  %idxprom56 = sext i32 %53 to i64, !dbg !1946
  %54 = load i32*, i32** %y.addr, align 8, !dbg !1946
  %arrayidx57 = getelementptr inbounds i32, i32* %54, i64 %idxprom56, !dbg !1946
  %55 = load i32, i32* %arrayidx57, align 4, !dbg !1946
  %cmp58 = icmp eq i32 %55, 0, !dbg !1947
  %conv59 = zext i1 %cmp58 to i32, !dbg !1947
  %56 = load i32, i32* %phase, align 4, !dbg !1948
  %cmp60 = icmp slt i32 %56, 0, !dbg !1949
  %conv61 = zext i1 %cmp60 to i32, !dbg !1949
  %and = and i32 %conv59, %conv61, !dbg !1950
  %xor = xor i32 1, %and, !dbg !1951
  store i32 %xor, i32* %ca, align 4, !dbg !1944
  call void @llvm.dbg.declare(metadata i32* %y_new, metadata !1952, metadata !1787), !dbg !1953
  %57 = load i32, i32* %y_norm, align 4, !dbg !1954
  %58 = load i32, i32* %phase, align 4, !dbg !1955
  %mul62 = mul nsw i32 2, %58, !dbg !1956
  %59 = load i32, i32* %i, align 4, !dbg !1957
  %idxprom63 = sext i32 %59 to i64, !dbg !1958
  %60 = load i32*, i32** %y.addr, align 8, !dbg !1958
  %arrayidx64 = getelementptr inbounds i32, i32* %60, i64 %idxprom63, !dbg !1958
  %61 = load i32, i32* %arrayidx64, align 4, !dbg !1958
  %cmp65 = icmp sge i32 %61, 0, !dbg !1959
  br i1 %cmp65, label %cond.true67, label %cond.false70, !dbg !1960

cond.true67:                                      ; preds = %for.body55
  %62 = load i32, i32* %i, align 4, !dbg !1961
  %idxprom68 = sext i32 %62 to i64, !dbg !1963
  %63 = load i32*, i32** %y.addr, align 8, !dbg !1963
  %arrayidx69 = getelementptr inbounds i32, i32* %63, i64 %idxprom68, !dbg !1963
  %64 = load i32, i32* %arrayidx69, align 4, !dbg !1963
  br label %cond.end74, !dbg !1964

cond.false70:                                     ; preds = %for.body55
  %65 = load i32, i32* %i, align 4, !dbg !1965
  %idxprom71 = sext i32 %65 to i64, !dbg !1967
  %66 = load i32*, i32** %y.addr, align 8, !dbg !1967
  %arrayidx72 = getelementptr inbounds i32, i32* %66, i64 %idxprom71, !dbg !1967
  %67 = load i32, i32* %arrayidx72, align 4, !dbg !1967
  %sub73 = sub nsw i32 0, %67, !dbg !1968
  br label %cond.end74, !dbg !1969

cond.end74:                                       ; preds = %cond.false70, %cond.true67
  %cond75 = phi i32 [ %64, %cond.true67 ], [ %sub73, %cond.false70 ], !dbg !1970
  %mul76 = mul nsw i32 %mul62, %cond75, !dbg !1972
  %add77 = add nsw i32 %57, %mul76, !dbg !1973
  store i32 %add77, i32* %y_new, align 4, !dbg !1974
  call void @llvm.dbg.declare(metadata float* %xy_new, metadata !1975, metadata !1787), !dbg !1976
  %68 = load float, float* %xy_norm, align 4, !dbg !1977
  %69 = load i32, i32* %phase, align 4, !dbg !1978
  %mul78 = mul nsw i32 1, %69, !dbg !1979
  %conv79 = sitofp i32 %mul78 to float, !dbg !1980
  %70 = load i32, i32* %i, align 4, !dbg !1981
  %idxprom80 = sext i32 %70 to i64, !dbg !1982
  %71 = load float*, float** %X.addr, align 8, !dbg !1982
  %arrayidx81 = getelementptr inbounds float, float* %71, i64 %idxprom80, !dbg !1982
  %72 = load float, float* %arrayidx81, align 4, !dbg !1982
  %cmp82 = fcmp oge float %72, 0.000000e+00, !dbg !1983
  br i1 %cmp82, label %cond.true84, label %cond.false87, !dbg !1984

cond.true84:                                      ; preds = %cond.end74
  %73 = load i32, i32* %i, align 4, !dbg !1985
  %idxprom85 = sext i32 %73 to i64, !dbg !1986
  %74 = load float*, float** %X.addr, align 8, !dbg !1986
  %arrayidx86 = getelementptr inbounds float, float* %74, i64 %idxprom85, !dbg !1986
  %75 = load float, float* %arrayidx86, align 4, !dbg !1986
  br label %cond.end91, !dbg !1987

cond.false87:                                     ; preds = %cond.end74
  %76 = load i32, i32* %i, align 4, !dbg !1988
  %idxprom88 = sext i32 %76 to i64, !dbg !1989
  %77 = load float*, float** %X.addr, align 8, !dbg !1989
  %arrayidx89 = getelementptr inbounds float, float* %77, i64 %idxprom88, !dbg !1989
  %78 = load float, float* %arrayidx89, align 4, !dbg !1989
  %sub90 = fsub float -0.000000e+00, %78, !dbg !1990
  br label %cond.end91, !dbg !1991

cond.end91:                                       ; preds = %cond.false87, %cond.true84
  %cond92 = phi float [ %75, %cond.true84 ], [ %sub90, %cond.false87 ], !dbg !1992
  %mul93 = fmul float %conv79, %cond92, !dbg !1993
  %add94 = fadd float %68, %mul93, !dbg !1994
  store float %add94, float* %xy_new, align 4, !dbg !1995
  %79 = load float, float* %xy_new, align 4, !dbg !1996
  %80 = load float, float* %xy_new, align 4, !dbg !1997
  %mul95 = fmul float %79, %80, !dbg !1998
  store float %mul95, float* %xy_new, align 4, !dbg !1999
  %81 = load i32, i32* %ca, align 4, !dbg !2000
  %tobool96 = icmp ne i32 %81, 0, !dbg !2000
  br i1 %tobool96, label %land.lhs.true, label %if.end, !dbg !2002

land.lhs.true:                                    ; preds = %cond.end91
  %82 = load float, float* %max_den, align 4, !dbg !2003
  %83 = load float, float* %xy_new, align 4, !dbg !2005
  %mul97 = fmul float %82, %83, !dbg !2006
  %84 = load i32, i32* %y_new, align 4, !dbg !2007
  %conv98 = sitofp i32 %84 to float, !dbg !2007
  %85 = load float, float* %max_num, align 4, !dbg !2008
  %mul99 = fmul float %conv98, %85, !dbg !2009
  %cmp100 = fcmp ogt float %mul97, %mul99, !dbg !2010
  br i1 %cmp100, label %if.then, label %if.end, !dbg !2011

if.then:                                          ; preds = %land.lhs.true
  %86 = load i32, i32* %y_new, align 4, !dbg !2012
  %conv102 = sitofp i32 %86 to float, !dbg !2012
  store float %conv102, float* %max_den, align 4, !dbg !2014
  %87 = load float, float* %xy_new, align 4, !dbg !2015
  store float %87, float* %max_num, align 4, !dbg !2016
  %88 = load i32, i32* %i, align 4, !dbg !2017
  store i32 %88, i32* %max_idx, align 4, !dbg !2018
  br label %if.end, !dbg !2019

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end91
  br label %for.inc103, !dbg !2020

for.inc103:                                       ; preds = %if.end
  %89 = load i32, i32* %i, align 4, !dbg !2021
  %inc104 = add nsw i32 %89, 1, !dbg !2021
  store i32 %inc104, i32* %i, align 4, !dbg !2021
  br label %for.cond52, !dbg !2023, !llvm.loop !2024

for.end105:                                       ; preds = %for.cond52
  %90 = load i32, i32* %phase, align 4, !dbg !2026
  %91 = load i32, i32* %K.addr, align 4, !dbg !2027
  %sub106 = sub nsw i32 %91, %90, !dbg !2027
  store i32 %sub106, i32* %K.addr, align 4, !dbg !2027
  %92 = load i32, i32* %max_idx, align 4, !dbg !2028
  %idxprom107 = sext i32 %92 to i64, !dbg !2029
  %93 = load float*, float** %X.addr, align 8, !dbg !2029
  %arrayidx108 = getelementptr inbounds float, float* %93, i64 %idxprom107, !dbg !2029
  %94 = load float, float* %arrayidx108, align 4, !dbg !2029
  %cmp109 = fcmp ogt float %94, 0.000000e+00, !dbg !2030
  %cond111 = select i1 %cmp109, i32 1, i32 -1, !dbg !2031
  %95 = load i32, i32* %phase, align 4, !dbg !2032
  %mul112 = mul nsw i32 %95, %cond111, !dbg !2032
  store i32 %mul112, i32* %phase, align 4, !dbg !2032
  %96 = load i32, i32* %phase, align 4, !dbg !2033
  %mul113 = mul nsw i32 1, %96, !dbg !2034
  %conv114 = sitofp i32 %mul113 to float, !dbg !2035
  %97 = load i32, i32* %max_idx, align 4, !dbg !2036
  %idxprom115 = sext i32 %97 to i64, !dbg !2037
  %98 = load float*, float** %X.addr, align 8, !dbg !2037
  %arrayidx116 = getelementptr inbounds float, float* %98, i64 %idxprom115, !dbg !2037
  %99 = load float, float* %arrayidx116, align 4, !dbg !2037
  %mul117 = fmul float %conv114, %99, !dbg !2038
  %100 = load float, float* %xy_norm, align 4, !dbg !2039
  %add118 = fadd float %100, %mul117, !dbg !2039
  store float %add118, float* %xy_norm, align 4, !dbg !2039
  %101 = load i32, i32* %phase, align 4, !dbg !2040
  %mul119 = mul nsw i32 2, %101, !dbg !2041
  %102 = load i32, i32* %max_idx, align 4, !dbg !2042
  %idxprom120 = sext i32 %102 to i64, !dbg !2043
  %103 = load i32*, i32** %y.addr, align 8, !dbg !2043
  %arrayidx121 = getelementptr inbounds i32, i32* %103, i64 %idxprom120, !dbg !2043
  %104 = load i32, i32* %arrayidx121, align 4, !dbg !2043
  %mul122 = mul nsw i32 %mul119, %104, !dbg !2044
  %105 = load i32, i32* %y_norm, align 4, !dbg !2045
  %add123 = add nsw i32 %105, %mul122, !dbg !2045
  store i32 %add123, i32* %y_norm, align 4, !dbg !2045
  %106 = load i32, i32* %phase, align 4, !dbg !2046
  %107 = load i32, i32* %max_idx, align 4, !dbg !2047
  %idxprom124 = sext i32 %107 to i64, !dbg !2048
  %108 = load i32*, i32** %y.addr, align 8, !dbg !2048
  %arrayidx125 = getelementptr inbounds i32, i32* %108, i64 %idxprom124, !dbg !2048
  %109 = load i32, i32* %arrayidx125, align 4, !dbg !2049
  %add126 = add nsw i32 %109, %106, !dbg !2049
  store i32 %add126, i32* %arrayidx125, align 4, !dbg !2049
  br label %while.cond, !dbg !2050, !llvm.loop !2052

while.end:                                        ; preds = %while.cond
  %110 = load i32, i32* %y_norm, align 4, !dbg !2053
  %conv127 = sitofp i32 %110 to float, !dbg !2054
  ret float %conv127, !dbg !2055
}

; Function Attrs: nounwind uwtable
define internal i32 @pvq_encode_band(%struct.CeltPVQ* %pvq, %struct.CeltFrame* %f, %struct.OpusRangeCoder* %rc, i32 %band, float* %X, float* %Y, i32 %N, i32 %b, i32 %blocks, float* %lowband, i32 %duration, float* %lowband_out, i32 %level, float %gain, float* %lowband_scratch, i32 %fill) #3 !dbg !2056 {
entry:
  %f.addr.i771.i = alloca %struct.CeltFrame*, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltFrame** %f.addr.i771.i, metadata !2057, metadata !1787), !dbg !2061
  %X.addr.i.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr.i.i, metadata !2078, metadata !1787), !dbg !2082
  %N.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr.i.i, metadata !2084, metadata !1787), !dbg !2085
  %gain.addr.i.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %gain.addr.i.i, metadata !2086, metadata !1787), !dbg !2087
  %i.i764.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i764.i, metadata !2088, metadata !1787), !dbg !2089
  %g.i.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %g.i.i, metadata !2090, metadata !1787), !dbg !2091
  %f.addr.i.i = alloca %struct.CeltFrame*, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltFrame** %f.addr.i.i, metadata !2057, metadata !1787), !dbg !2092
  %retval.i.i = alloca i32, align 4
  %a.addr.i760.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i760.i, metadata !2097, metadata !1787), !dbg !2102
  %amin.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i.i, metadata !2107, metadata !1787), !dbg !2108
  %amax.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i.i, metadata !2109, metadata !1787), !dbg !2110
  %a.addr.i755.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i755.i, metadata !2111, metadata !1787), !dbg !2115
  %p.addr.i756.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i756.i, metadata !2119, metadata !1787), !dbg !2120
  %rc.addr.i728.i = alloca %struct.OpusRangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.OpusRangeCoder** %rc.addr.i728.i, metadata !2121, metadata !1787), !dbg !2127
  %i.i729.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i729.i, metadata !2129, metadata !1787), !dbg !2130
  %total_bits.i730.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %total_bits.i730.i, metadata !2131, metadata !1787), !dbg !2132
  %rcbuffer.i731.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rcbuffer.i731.i, metadata !2133, metadata !1787), !dbg !2134
  %range.i732.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %range.i732.i, metadata !2135, metadata !1787), !dbg !2136
  %bit.i733.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.i733.i, metadata !2137, metadata !1787), !dbg !2141
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !2111, metadata !1787), !dbg !2142
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !2119, metadata !1787), !dbg !2147
  %rc.addr.i.i = alloca %struct.OpusRangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.OpusRangeCoder** %rc.addr.i.i, metadata !2121, metadata !1787), !dbg !2148
  %i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i.i, metadata !2129, metadata !1787), !dbg !2150
  %total_bits.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %total_bits.i.i, metadata !2131, metadata !1787), !dbg !2151
  %rcbuffer.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rcbuffer.i.i, metadata !2133, metadata !1787), !dbg !2152
  %range.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %range.i.i, metadata !2135, metadata !1787), !dbg !2153
  %bit.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.i.i, metadata !2137, metadata !1787), !dbg !2154
  %retval.i = alloca i32, align 4
  %pvq.addr.i = alloca %struct.CeltPVQ*, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltPVQ** %pvq.addr.i, metadata !2155, metadata !1787), !dbg !2156
  %f.addr.i = alloca %struct.CeltFrame*, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltFrame** %f.addr.i, metadata !2157, metadata !1787), !dbg !2158
  %rc.addr.i = alloca %struct.OpusRangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.OpusRangeCoder** %rc.addr.i, metadata !2159, metadata !1787), !dbg !2160
  %band.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %band.addr.i, metadata !2161, metadata !1787), !dbg !2162
  %X.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr.i, metadata !2163, metadata !1787), !dbg !2164
  %Y.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %Y.addr.i, metadata !2165, metadata !1787), !dbg !2166
  %N.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr.i, metadata !2167, metadata !1787), !dbg !2168
  %b.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i, metadata !2169, metadata !1787), !dbg !2170
  %blocks.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %blocks.addr.i, metadata !2171, metadata !1787), !dbg !2172
  %lowband.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %lowband.addr.i, metadata !2173, metadata !1787), !dbg !2174
  %duration.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %duration.addr.i, metadata !2175, metadata !1787), !dbg !2176
  %lowband_out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %lowband_out.addr.i, metadata !2177, metadata !1787), !dbg !2178
  %level.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr.i, metadata !2179, metadata !1787), !dbg !2180
  %gain.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %gain.addr.i, metadata !2181, metadata !1787), !dbg !2182
  %lowband_scratch.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %lowband_scratch.addr.i, metadata !2183, metadata !1787), !dbg !2184
  %fill.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %fill.addr.i, metadata !2185, metadata !1787), !dbg !2186
  %quant.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %quant.addr.i, metadata !2187, metadata !1787), !dbg !2188
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !2189, metadata !1787), !dbg !2190
  %cache.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %cache.i, metadata !2191, metadata !1787), !dbg !2192
  %stereo.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %stereo.i, metadata !2193, metadata !1787), !dbg !2194
  %split.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %split.i, metadata !2195, metadata !1787), !dbg !2196
  %imid.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %imid.i, metadata !2197, metadata !1787), !dbg !2198
  %iside.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %iside.i, metadata !2199, metadata !1787), !dbg !2200
  %N0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %N0.i, metadata !2201, metadata !1787), !dbg !2202
  %N_B.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %N_B.i, metadata !2203, metadata !1787), !dbg !2204
  %N_B0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %N_B0.i, metadata !2205, metadata !1787), !dbg !2206
  %B0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %B0.i, metadata !2207, metadata !1787), !dbg !2208
  %time_divide.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %time_divide.i, metadata !2209, metadata !1787), !dbg !2210
  %recombine.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %recombine.i, metadata !2211, metadata !1787), !dbg !2212
  %inv.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %inv.i, metadata !2213, metadata !1787), !dbg !2214
  %mid.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %mid.i, metadata !2215, metadata !1787), !dbg !2216
  %side.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %side.i, metadata !2217, metadata !1787), !dbg !2218
  %longblocks.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %longblocks.i, metadata !2219, metadata !1787), !dbg !2220
  %cm.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cm.i, metadata !2221, metadata !1787), !dbg !2222
  %x.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %x.i, metadata !2223, metadata !1787), !dbg !2226
  %sign.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i, metadata !2227, metadata !1787), !dbg !2231
  %tf_change.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tf_change.i, metadata !2232, metadata !1787), !dbg !2235
  %k.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %k.i, metadata !2236, metadata !1787), !dbg !2237
  %qn.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %qn.i, metadata !2238, metadata !1787), !dbg !2239
  %itheta.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %itheta.i, metadata !2240, metadata !1787), !dbg !2241
  %mbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %mbits.i, metadata !2242, metadata !1787), !dbg !2243
  %sbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sbits.i, metadata !2244, metadata !1787), !dbg !2245
  %delta.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delta.i, metadata !2246, metadata !1787), !dbg !2247
  %qalloc.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %qalloc.i, metadata !2248, metadata !1787), !dbg !2249
  %pulse_cap.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pulse_cap.i, metadata !2250, metadata !1787), !dbg !2251
  %offset.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.i, metadata !2252, metadata !1787), !dbg !2253
  %orig_fill.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %orig_fill.i, metadata !2254, metadata !1787), !dbg !2255
  %tell.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tell.i, metadata !2256, metadata !1787), !dbg !2257
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !2258, metadata !1787), !dbg !2260
  %sign352.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign352.i, metadata !2261, metadata !1787), !dbg !2262
  %tmp.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %tmp.i, metadata !2263, metadata !1787), !dbg !2264
  %x2.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %x2.i, metadata !2265, metadata !1787), !dbg !2266
  %y2.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %y2.i, metadata !2267, metadata !1787), !dbg !2268
  %next_lowband2.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %next_lowband2.i, metadata !2269, metadata !1787), !dbg !2270
  %next_lowband_out1.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %next_lowband_out1.i, metadata !2271, metadata !1787), !dbg !2272
  %next_level.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %next_level.i, metadata !2273, metadata !1787), !dbg !2274
  %rebalance.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rebalance.i, metadata !2275, metadata !1787), !dbg !2276
  %cmt.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cmt.i, metadata !2277, metadata !1787), !dbg !2278
  %q.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q.i, metadata !2279, metadata !1787), !dbg !2280
  %curr_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curr_bits.i, metadata !2281, metadata !1787), !dbg !2282
  %cm_mask.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cm_mask.i, metadata !2283, metadata !1787), !dbg !2284
  %k672.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %k672.i, metadata !2285, metadata !1787), !dbg !2286
  %n.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %n.i, metadata !2287, metadata !1787), !dbg !2290
  %pvq.addr = alloca %struct.CeltPVQ*, align 8
  %f.addr = alloca %struct.CeltFrame*, align 8
  %rc.addr = alloca %struct.OpusRangeCoder*, align 8
  %band.addr = alloca i32, align 4
  %X.addr = alloca float*, align 8
  %Y.addr = alloca float*, align 8
  %N.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %blocks.addr = alloca i32, align 4
  %lowband.addr = alloca float*, align 8
  %duration.addr = alloca i32, align 4
  %lowband_out.addr = alloca float*, align 8
  %level.addr = alloca i32, align 4
  %gain.addr = alloca float, align 4
  %lowband_scratch.addr = alloca float*, align 8
  %fill.addr = alloca i32, align 4
  store %struct.CeltPVQ* %pvq, %struct.CeltPVQ** %pvq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltPVQ** %pvq.addr, metadata !2291, metadata !1787), !dbg !2292
  store %struct.CeltFrame* %f, %struct.CeltFrame** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltFrame** %f.addr, metadata !2293, metadata !1787), !dbg !2294
  store %struct.OpusRangeCoder* %rc, %struct.OpusRangeCoder** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OpusRangeCoder** %rc.addr, metadata !2295, metadata !1787), !dbg !2296
  store i32 %band, i32* %band.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %band.addr, metadata !2297, metadata !1787), !dbg !2298
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !2299, metadata !1787), !dbg !2300
  store float* %Y, float** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata float** %Y.addr, metadata !2301, metadata !1787), !dbg !2302
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !2303, metadata !1787), !dbg !2304
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !2305, metadata !1787), !dbg !2306
  store i32 %blocks, i32* %blocks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blocks.addr, metadata !2307, metadata !1787), !dbg !2308
  store float* %lowband, float** %lowband.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lowband.addr, metadata !2309, metadata !1787), !dbg !2310
  store i32 %duration, i32* %duration.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %duration.addr, metadata !2311, metadata !1787), !dbg !2312
  store float* %lowband_out, float** %lowband_out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lowband_out.addr, metadata !2313, metadata !1787), !dbg !2314
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !2315, metadata !1787), !dbg !2316
  store float %gain, float* %gain.addr, align 4
  call void @llvm.dbg.declare(metadata float* %gain.addr, metadata !2317, metadata !1787), !dbg !2318
  store float* %lowband_scratch, float** %lowband_scratch.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lowband_scratch.addr, metadata !2319, metadata !1787), !dbg !2320
  store i32 %fill, i32* %fill.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fill.addr, metadata !2321, metadata !1787), !dbg !2322
  %0 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr, align 8, !dbg !2323
  %1 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr, align 8, !dbg !2324
  %2 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr, align 8, !dbg !2325
  %3 = load i32, i32* %band.addr, align 4, !dbg !2326
  %4 = load float*, float** %X.addr, align 8, !dbg !2327
  %5 = load float*, float** %Y.addr, align 8, !dbg !2328
  %6 = load i32, i32* %N.addr, align 4, !dbg !2329
  %7 = load i32, i32* %b.addr, align 4, !dbg !2330
  %8 = load i32, i32* %blocks.addr, align 4, !dbg !2331
  %9 = load float*, float** %lowband.addr, align 8, !dbg !2332
  %10 = load i32, i32* %duration.addr, align 4, !dbg !2333
  %11 = load float*, float** %lowband_out.addr, align 8, !dbg !2334
  %12 = load i32, i32* %level.addr, align 4, !dbg !2335
  %13 = load float, float* %gain.addr, align 4, !dbg !2336
  %14 = load float*, float** %lowband_scratch.addr, align 8, !dbg !2337
  %15 = load i32, i32* %fill.addr, align 4, !dbg !2338
  store %struct.CeltPVQ* %0, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !2339
  store %struct.CeltFrame* %1, %struct.CeltFrame** %f.addr.i, align 8, !dbg !2339
  store %struct.OpusRangeCoder* %2, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !2339
  store i32 %3, i32* %band.addr.i, align 4, !dbg !2339
  store float* %4, float** %X.addr.i, align 8, !dbg !2339
  store float* %5, float** %Y.addr.i, align 8, !dbg !2339
  store i32 %6, i32* %N.addr.i, align 4, !dbg !2339
  store i32 %7, i32* %b.addr.i, align 4, !dbg !2339
  store i32 %8, i32* %blocks.addr.i, align 4, !dbg !2339
  store float* %9, float** %lowband.addr.i, align 8, !dbg !2339
  store i32 %10, i32* %duration.addr.i, align 4, !dbg !2339
  store float* %11, float** %lowband_out.addr.i, align 8, !dbg !2339
  store i32 %12, i32* %level.addr.i, align 4, !dbg !2339
  store float %13, float* %gain.addr.i, align 4, !dbg !2339
  store float* %14, float** %lowband_scratch.addr.i, align 8, !dbg !2339
  store i32 %15, i32* %fill.addr.i, align 4, !dbg !2339
  store i32 1, i32* %quant.addr.i, align 4, !dbg !2339
  %16 = load float*, float** %Y.addr.i, align 8, !dbg !2340
  %tobool.i = icmp ne float* %16, null, !dbg !2341
  %lnot.i = xor i1 %tobool.i, true, !dbg !2341
  %lnot.ext.i = zext i1 %tobool.i to i32, !dbg !2342
  store i32 %lnot.ext.i, i32* %stereo.i, align 4, !dbg !2194
  %17 = load i32, i32* %stereo.i, align 4, !dbg !2343
  store i32 %17, i32* %split.i, align 4, !dbg !2196
  store i32 0, i32* %imid.i, align 4, !dbg !2198
  store i32 0, i32* %iside.i, align 4, !dbg !2200
  %18 = load i32, i32* %N.addr.i, align 4, !dbg !2344
  store i32 %18, i32* %N0.i, align 4, !dbg !2202
  %19 = load i32, i32* %N.addr.i, align 4, !dbg !2345
  %20 = load i32, i32* %blocks.addr.i, align 4, !dbg !2346
  %div.i = udiv i32 %19, %20, !dbg !2347
  store i32 %div.i, i32* %N_B.i, align 4, !dbg !2204
  %21 = load i32, i32* %N_B.i, align 4, !dbg !2348
  store i32 %21, i32* %N_B0.i, align 4, !dbg !2206
  %22 = load i32, i32* %blocks.addr.i, align 4, !dbg !2349
  store i32 %22, i32* %B0.i, align 4, !dbg !2208
  store i32 0, i32* %time_divide.i, align 4, !dbg !2210
  store i32 0, i32* %recombine.i, align 4, !dbg !2212
  store i32 0, i32* %inv.i, align 4, !dbg !2214
  store float 0.000000e+00, float* %mid.i, align 4, !dbg !2216
  store float 0.000000e+00, float* %side.i, align 4, !dbg !2218
  %23 = load i32, i32* %B0.i, align 4, !dbg !2350
  %cmp.i = icmp eq i32 %23, 1, !dbg !2351
  %conv.i = zext i1 %cmp.i to i32, !dbg !2351
  store i32 %conv.i, i32* %longblocks.i, align 4, !dbg !2220
  store i32 0, i32* %cm.i, align 4, !dbg !2222
  %24 = load i32, i32* %N.addr.i, align 4, !dbg !2352
  %cmp2.i = icmp eq i32 %24, 1, !dbg !2353
  br i1 %cmp2.i, label %if.then.i, label %if.end23.i, !dbg !2354

if.then.i:                                        ; preds = %entry
  %25 = load float*, float** %X.addr.i, align 8, !dbg !2355
  store float* %25, float** %x.i, align 8, !dbg !2226
  store i32 0, i32* %i.i, align 4, !dbg !2356
  br label %for.cond.i, !dbg !2357

for.cond.i:                                       ; preds = %if.end14.i, %if.then.i
  %26 = load i32, i32* %i.i, align 4, !dbg !2358
  %27 = load i32, i32* %stereo.i, align 4, !dbg !2360
  %cmp4.i = icmp sle i32 %26, %27, !dbg !2361
  br i1 %cmp4.i, label %for.body.i, label %for.end.i, !dbg !2362

for.body.i:                                       ; preds = %for.cond.i
  store i32 0, i32* %sign.i, align 4, !dbg !2231
  %28 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !2363
  %remaining2.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %28, i32 0, i32 35, !dbg !2365
  %29 = load i32, i32* %remaining2.i, align 4, !dbg !2365
  %cmp6.i = icmp sge i32 %29, 8, !dbg !2366
  br i1 %cmp6.i, label %if.then8.i, label %if.end14.i, !dbg !2367

if.then8.i:                                       ; preds = %for.body.i
  %30 = load i32, i32* %quant.addr.i, align 4, !dbg !2368
  %tobool9.i = icmp ne i32 %30, 0, !dbg !2368
  br i1 %tobool9.i, label %if.then10.i, label %if.else.i, !dbg !2371

if.then10.i:                                      ; preds = %if.then8.i
  %31 = load float*, float** %x.i, align 8, !dbg !2372
  %32 = load float, float* %31, align 4, !dbg !2372
  %cmp11.i = fcmp olt float %32, 0.000000e+00, !dbg !2374
  %conv12.i = zext i1 %cmp11.i to i32, !dbg !2374
  store i32 %conv12.i, i32* %sign.i, align 4, !dbg !2375
  %33 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !2376
  %34 = load i32, i32* %sign.i, align 4, !dbg !2377
  call void @ff_opus_rc_put_raw(%struct.OpusRangeCoder* %33, i32 %34, i32 1) #7, !dbg !2378
  br label %if.end.i, !dbg !2379

if.else.i:                                        ; preds = %if.then8.i
  %35 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !2380
  %call.i = call i32 @ff_opus_rc_get_raw(%struct.OpusRangeCoder* %35, i32 1) #7, !dbg !2382
  store i32 %call.i, i32* %sign.i, align 4, !dbg !2383
  br label %if.end.i, !dbg !2339

if.end.i:                                         ; preds = %if.else.i, %if.then10.i
  %36 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !2384
  %remaining213.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %36, i32 0, i32 35, !dbg !2385
  %37 = load i32, i32* %remaining213.i, align 4, !dbg !2386
  %sub.i = sub nsw i32 %37, 8, !dbg !2386
  store i32 %sub.i, i32* %remaining213.i, align 4, !dbg !2386
  br label %if.end14.i, !dbg !2387

if.end14.i:                                       ; preds = %if.end.i, %for.body.i
  %38 = load i32, i32* %sign.i, align 4, !dbg !2388
  %conv15.i = sitofp i32 %38 to float, !dbg !2388
  %mul.i = fmul float 2.000000e+00, %conv15.i, !dbg !2389
  %sub16.i = fsub float 1.000000e+00, %mul.i, !dbg !2390
  %39 = load float*, float** %x.i, align 8, !dbg !2391
  store float %sub16.i, float* %39, align 4, !dbg !2392
  %40 = load float*, float** %Y.addr.i, align 8, !dbg !2393
  store float* %40, float** %x.i, align 8, !dbg !2394
  %41 = load i32, i32* %i.i, align 4, !dbg !2395
  %inc.i = add nsw i32 %41, 1, !dbg !2395
  store i32 %inc.i, i32* %i.i, align 4, !dbg !2395
  br label %for.cond.i, !dbg !2397, !llvm.loop !2398

for.end.i:                                        ; preds = %for.cond.i
  %42 = load float*, float** %lowband_out.addr.i, align 8, !dbg !2400
  %tobool18.i = icmp ne float* %42, null, !dbg !2400
  br i1 %tobool18.i, label %if.then19.i, label %if.end22.i, !dbg !2402

if.then19.i:                                      ; preds = %for.end.i
  %43 = load float*, float** %X.addr.i, align 8, !dbg !2403
  %44 = load float, float* %43, align 4, !dbg !2403
  %45 = load float*, float** %lowband_out.addr.i, align 8, !dbg !2404
  store float %44, float* %45, align 4, !dbg !2405
  br label %if.end22.i, !dbg !2404

if.end22.i:                                       ; preds = %if.then19.i, %for.end.i
  store i32 1, i32* %retval.i, align 4, !dbg !2406
  br label %quant_band_template.exit, !dbg !2406

if.end23.i:                                       ; preds = %entry
  %46 = load i32, i32* %stereo.i, align 4, !dbg !2407
  %tobool24.i = icmp ne i32 %46, 0, !dbg !2407
  br i1 %tobool24.i, label %if.end118.i, label %land.lhs.true.i, !dbg !2408

land.lhs.true.i:                                  ; preds = %if.end23.i
  %47 = load i32, i32* %level.addr.i, align 4, !dbg !2409
  %cmp25.i = icmp eq i32 %47, 0, !dbg !2411
  br i1 %cmp25.i, label %if.then27.i, label %if.end118.i, !dbg !2412

if.then27.i:                                      ; preds = %land.lhs.true.i
  %48 = load i32, i32* %band.addr.i, align 4, !dbg !2413
  %idxprom.i = sext i32 %48 to i64, !dbg !2414
  %49 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !2414
  %tf_change28.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %49, i32 0, i32 40, !dbg !2415
  %arrayidx29.i = getelementptr inbounds [21 x i32], [21 x i32]* %tf_change28.i, i64 0, i64 %idxprom.i, !dbg !2414
  %50 = load i32, i32* %arrayidx29.i, align 4, !dbg !2414
  store i32 %50, i32* %tf_change.i, align 4, !dbg !2235
  %51 = load i32, i32* %tf_change.i, align 4, !dbg !2416
  %cmp30.i = icmp sgt i32 %51, 0, !dbg !2418
  br i1 %cmp30.i, label %if.then32.i, label %if.end33.i, !dbg !2419

if.then32.i:                                      ; preds = %if.then27.i
  %52 = load i32, i32* %tf_change.i, align 4, !dbg !2420
  store i32 %52, i32* %recombine.i, align 4, !dbg !2421
  br label %if.end33.i, !dbg !2422

if.end33.i:                                       ; preds = %if.then32.i, %if.then27.i
  %53 = load float*, float** %lowband.addr.i, align 8, !dbg !2423
  %tobool34.i = icmp ne float* %53, null, !dbg !2423
  br i1 %tobool34.i, label %land.lhs.true35.i, label %if.end57.i, !dbg !2425

land.lhs.true35.i:                                ; preds = %if.end33.i
  %54 = load i32, i32* %recombine.i, align 4, !dbg !2426
  %tobool36.i = icmp ne i32 %54, 0, !dbg !2426
  br i1 %tobool36.i, label %if.then45.i, label %lor.lhs.false.i, !dbg !2427

lor.lhs.false.i:                                  ; preds = %land.lhs.true35.i
  %55 = load i32, i32* %N_B.i, align 4, !dbg !2428
  %and.i = and i32 %55, 1, !dbg !2430
  %cmp37.i = icmp eq i32 %and.i, 0, !dbg !2431
  br i1 %cmp37.i, label %land.lhs.true39.i, label %lor.lhs.false42.i, !dbg !2432

land.lhs.true39.i:                                ; preds = %lor.lhs.false.i
  %56 = load i32, i32* %tf_change.i, align 4, !dbg !2433
  %cmp40.i = icmp slt i32 %56, 0, !dbg !2435
  br i1 %cmp40.i, label %if.then45.i, label %lor.lhs.false42.i, !dbg !2436

lor.lhs.false42.i:                                ; preds = %land.lhs.true39.i, %lor.lhs.false.i
  %57 = load i32, i32* %B0.i, align 4, !dbg !2437
  %cmp43.i = icmp sgt i32 %57, 1, !dbg !2439
  br i1 %cmp43.i, label %if.then45.i, label %if.end57.i, !dbg !2440

if.then45.i:                                      ; preds = %lor.lhs.false42.i, %land.lhs.true39.i, %land.lhs.true35.i
  store i32 0, i32* %i.i, align 4, !dbg !2442
  br label %for.cond46.i, !dbg !2445

for.cond46.i:                                     ; preds = %for.body49.i, %if.then45.i
  %58 = load i32, i32* %i.i, align 4, !dbg !2446
  %59 = load i32, i32* %N.addr.i, align 4, !dbg !2449
  %cmp47.i = icmp slt i32 %58, %59, !dbg !2450
  br i1 %cmp47.i, label %for.body49.i, label %for.end56.i, !dbg !2451

for.body49.i:                                     ; preds = %for.cond46.i
  %60 = load i32, i32* %i.i, align 4, !dbg !2452
  %idxprom50.i = sext i32 %60 to i64, !dbg !2453
  %61 = load float*, float** %lowband.addr.i, align 8, !dbg !2453
  %arrayidx51.i = getelementptr inbounds float, float* %61, i64 %idxprom50.i, !dbg !2453
  %62 = load float, float* %arrayidx51.i, align 4, !dbg !2453
  %63 = load i32, i32* %i.i, align 4, !dbg !2454
  %idxprom52.i = sext i32 %63 to i64, !dbg !2455
  %64 = load float*, float** %lowband_scratch.addr.i, align 8, !dbg !2455
  %arrayidx53.i = getelementptr inbounds float, float* %64, i64 %idxprom52.i, !dbg !2455
  store float %62, float* %arrayidx53.i, align 4, !dbg !2456
  %65 = load i32, i32* %i.i, align 4, !dbg !2457
  %inc55.i = add nsw i32 %65, 1, !dbg !2457
  store i32 %inc55.i, i32* %i.i, align 4, !dbg !2457
  br label %for.cond46.i, !dbg !2459, !llvm.loop !2460

for.end56.i:                                      ; preds = %for.cond46.i
  %66 = load float*, float** %lowband_scratch.addr.i, align 8, !dbg !2462
  store float* %66, float** %lowband.addr.i, align 8, !dbg !2463
  br label %if.end57.i, !dbg !2464

if.end57.i:                                       ; preds = %for.end56.i, %lor.lhs.false42.i, %if.end33.i
  store i32 0, i32* %k.i, align 4, !dbg !2465
  br label %for.cond58.i, !dbg !2467

for.cond58.i:                                     ; preds = %if.end67.i, %if.end57.i
  %67 = load i32, i32* %k.i, align 4, !dbg !2468
  %68 = load i32, i32* %recombine.i, align 4, !dbg !2471
  %cmp59.i = icmp slt i32 %67, %68, !dbg !2472
  br i1 %cmp59.i, label %for.body61.i, label %for.end79.i, !dbg !2473

for.body61.i:                                     ; preds = %for.cond58.i
  %69 = load i32, i32* %quant.addr.i, align 4, !dbg !2474
  %tobool62.i = icmp ne i32 %69, 0, !dbg !2474
  br i1 %tobool62.i, label %if.then65.i, label %lor.lhs.false63.i, !dbg !2477

lor.lhs.false63.i:                                ; preds = %for.body61.i
  %70 = load float*, float** %lowband.addr.i, align 8, !dbg !2478
  %tobool64.i = icmp ne float* %70, null, !dbg !2478
  br i1 %tobool64.i, label %if.then65.i, label %if.end67.i, !dbg !2480

if.then65.i:                                      ; preds = %lor.lhs.false63.i, %for.body61.i
  %71 = load i32, i32* %quant.addr.i, align 4, !dbg !2481
  %tobool66.i = icmp ne i32 %71, 0, !dbg !2481
  br i1 %tobool66.i, label %cond.true.i, label %cond.false.i, !dbg !2481

cond.true.i:                                      ; preds = %if.then65.i
  %72 = load float*, float** %X.addr.i, align 8, !dbg !2482
  br label %cond.end.i, !dbg !2483

cond.false.i:                                     ; preds = %if.then65.i
  %73 = load float*, float** %lowband.addr.i, align 8, !dbg !2484
  br label %cond.end.i, !dbg !2486

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi float* [ %72, %cond.true.i ], [ %73, %cond.false.i ], !dbg !2487
  %74 = load i32, i32* %N.addr.i, align 4, !dbg !2489
  %75 = load i32, i32* %k.i, align 4, !dbg !2490
  %shr.i = ashr i32 %74, %75, !dbg !2491
  %76 = load i32, i32* %k.i, align 4, !dbg !2492
  %shl.i = shl i32 1, %76, !dbg !2493
  call void @celt_haar1(float* %cond.i, i32 %shr.i, i32 %shl.i) #7, !dbg !2494
  br label %if.end67.i, !dbg !2494

if.end67.i:                                       ; preds = %cond.end.i, %lor.lhs.false63.i
  %77 = load i32, i32* %fill.addr.i, align 4, !dbg !2495
  %and68.i = and i32 %77, 15, !dbg !2496
  %idxprom69.i = sext i32 %and68.i to i64, !dbg !2497
  %arrayidx70.i = getelementptr inbounds [0 x i8], [0 x i8]* @ff_celt_bit_interleave, i64 0, i64 %idxprom69.i, !dbg !2497
  %78 = load i8, i8* %arrayidx70.i, align 1, !dbg !2497
  %conv71.i = zext i8 %78 to i32, !dbg !2497
  %79 = load i32, i32* %fill.addr.i, align 4, !dbg !2498
  %shr72.i = ashr i32 %79, 4, !dbg !2499
  %idxprom73.i = sext i32 %shr72.i to i64, !dbg !2500
  %arrayidx74.i = getelementptr inbounds [0 x i8], [0 x i8]* @ff_celt_bit_interleave, i64 0, i64 %idxprom73.i, !dbg !2500
  %80 = load i8, i8* %arrayidx74.i, align 1, !dbg !2500
  %conv75.i = zext i8 %80 to i32, !dbg !2500
  %shl76.i = shl i32 %conv75.i, 2, !dbg !2501
  %or.i = or i32 %conv71.i, %shl76.i, !dbg !2502
  store i32 %or.i, i32* %fill.addr.i, align 4, !dbg !2503
  %81 = load i32, i32* %k.i, align 4, !dbg !2504
  %inc78.i = add nsw i32 %81, 1, !dbg !2504
  store i32 %inc78.i, i32* %k.i, align 4, !dbg !2504
  br label %for.cond58.i, !dbg !2506, !llvm.loop !2507

for.end79.i:                                      ; preds = %for.cond58.i
  %82 = load i32, i32* %recombine.i, align 4, !dbg !2509
  %83 = load i32, i32* %blocks.addr.i, align 4, !dbg !2510
  %shr80.i = lshr i32 %83, %82, !dbg !2510
  store i32 %shr80.i, i32* %blocks.addr.i, align 4, !dbg !2510
  %84 = load i32, i32* %recombine.i, align 4, !dbg !2511
  %85 = load i32, i32* %N_B.i, align 4, !dbg !2512
  %shl81.i = shl i32 %85, %84, !dbg !2512
  store i32 %shl81.i, i32* %N_B.i, align 4, !dbg !2512
  br label %while.cond.i, !dbg !2513

while.cond.i:                                     ; preds = %if.end96.i, %for.end79.i
  %86 = load i32, i32* %N_B.i, align 4, !dbg !2514
  %and82.i = and i32 %86, 1, !dbg !2515
  %cmp83.i = icmp eq i32 %and82.i, 0, !dbg !2516
  br i1 %cmp83.i, label %land.rhs.i, label %land.end.i, !dbg !2517

land.rhs.i:                                       ; preds = %while.cond.i
  %87 = load i32, i32* %tf_change.i, align 4, !dbg !2518
  %cmp85.i = icmp slt i32 %87, 0, !dbg !2520
  br label %land.end.i, !dbg !2339

land.end.i:                                       ; preds = %land.rhs.i, %while.cond.i
  %88 = phi i1 [ false, %while.cond.i ], [ %cmp85.i, %land.rhs.i ], !dbg !2339
  br i1 %88, label %while.body.i, label %while.end.i, !dbg !2521

while.body.i:                                     ; preds = %land.end.i
  %89 = load i32, i32* %quant.addr.i, align 4, !dbg !2523
  %tobool87.i = icmp ne i32 %89, 0, !dbg !2523
  br i1 %tobool87.i, label %if.then90.i, label %lor.lhs.false88.i, !dbg !2526

lor.lhs.false88.i:                                ; preds = %while.body.i
  %90 = load float*, float** %lowband.addr.i, align 8, !dbg !2527
  %tobool89.i = icmp ne float* %90, null, !dbg !2527
  br i1 %tobool89.i, label %if.then90.i, label %if.end96.i, !dbg !2529

if.then90.i:                                      ; preds = %lor.lhs.false88.i, %while.body.i
  %91 = load i32, i32* %quant.addr.i, align 4, !dbg !2530
  %tobool91.i = icmp ne i32 %91, 0, !dbg !2530
  br i1 %tobool91.i, label %cond.true92.i, label %cond.false93.i, !dbg !2530

cond.true92.i:                                    ; preds = %if.then90.i
  %92 = load float*, float** %X.addr.i, align 8, !dbg !2531
  br label %cond.end94.i, !dbg !2532

cond.false93.i:                                   ; preds = %if.then90.i
  %93 = load float*, float** %lowband.addr.i, align 8, !dbg !2533
  br label %cond.end94.i, !dbg !2535

cond.end94.i:                                     ; preds = %cond.false93.i, %cond.true92.i
  %cond95.i = phi float* [ %92, %cond.true92.i ], [ %93, %cond.false93.i ], !dbg !2536
  %94 = load i32, i32* %N_B.i, align 4, !dbg !2538
  %95 = load i32, i32* %blocks.addr.i, align 4, !dbg !2539
  call void @celt_haar1(float* %cond95.i, i32 %94, i32 %95) #7, !dbg !2540
  br label %if.end96.i, !dbg !2540

if.end96.i:                                       ; preds = %cond.end94.i, %lor.lhs.false88.i
  %96 = load i32, i32* %fill.addr.i, align 4, !dbg !2541
  %97 = load i32, i32* %blocks.addr.i, align 4, !dbg !2542
  %shl97.i = shl i32 %96, %97, !dbg !2543
  %98 = load i32, i32* %fill.addr.i, align 4, !dbg !2544
  %or98.i = or i32 %98, %shl97.i, !dbg !2544
  store i32 %or98.i, i32* %fill.addr.i, align 4, !dbg !2544
  %99 = load i32, i32* %blocks.addr.i, align 4, !dbg !2545
  %shl99.i = shl i32 %99, 1, !dbg !2545
  store i32 %shl99.i, i32* %blocks.addr.i, align 4, !dbg !2545
  %100 = load i32, i32* %N_B.i, align 4, !dbg !2546
  %shr100.i = ashr i32 %100, 1, !dbg !2546
  store i32 %shr100.i, i32* %N_B.i, align 4, !dbg !2546
  %101 = load i32, i32* %time_divide.i, align 4, !dbg !2547
  %inc101.i = add nsw i32 %101, 1, !dbg !2547
  store i32 %inc101.i, i32* %time_divide.i, align 4, !dbg !2547
  %102 = load i32, i32* %tf_change.i, align 4, !dbg !2548
  %inc102.i = add nsw i32 %102, 1, !dbg !2548
  store i32 %inc102.i, i32* %tf_change.i, align 4, !dbg !2548
  br label %while.cond.i, !dbg !2549, !llvm.loop !2551

while.end.i:                                      ; preds = %land.end.i
  %103 = load i32, i32* %blocks.addr.i, align 4, !dbg !2553
  store i32 %103, i32* %B0.i, align 4, !dbg !2554
  %104 = load i32, i32* %N_B.i, align 4, !dbg !2555
  store i32 %104, i32* %N_B0.i, align 4, !dbg !2556
  %105 = load i32, i32* %B0.i, align 4, !dbg !2557
  %cmp103.i = icmp sgt i32 %105, 1, !dbg !2559
  br i1 %cmp103.i, label %land.lhs.true105.i, label %if.end117.i, !dbg !2560

land.lhs.true105.i:                               ; preds = %while.end.i
  %106 = load i32, i32* %quant.addr.i, align 4, !dbg !2561
  %tobool106.i = icmp ne i32 %106, 0, !dbg !2561
  br i1 %tobool106.i, label %if.then109.i, label %lor.lhs.false107.i, !dbg !2563

lor.lhs.false107.i:                               ; preds = %land.lhs.true105.i
  %107 = load float*, float** %lowband.addr.i, align 8, !dbg !2564
  %tobool108.i = icmp ne float* %107, null, !dbg !2564
  br i1 %tobool108.i, label %if.then109.i, label %if.end117.i, !dbg !2566

if.then109.i:                                     ; preds = %lor.lhs.false107.i, %land.lhs.true105.i
  %108 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !2567
  %hadamard_tmp.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %108, i32 0, i32 1, !dbg !2568
  %arraydecay.i = getelementptr inbounds [256 x float], [256 x float]* %hadamard_tmp.i, i32 0, i32 0, !dbg !2567
  %109 = load i32, i32* %quant.addr.i, align 4, !dbg !2569
  %tobool110.i = icmp ne i32 %109, 0, !dbg !2569
  br i1 %tobool110.i, label %cond.true111.i, label %cond.false112.i, !dbg !2569

cond.true111.i:                                   ; preds = %if.then109.i
  %110 = load float*, float** %X.addr.i, align 8, !dbg !2570
  br label %cond.end113.i, !dbg !2571

cond.false112.i:                                  ; preds = %if.then109.i
  %111 = load float*, float** %lowband.addr.i, align 8, !dbg !2572
  br label %cond.end113.i, !dbg !2573

cond.end113.i:                                    ; preds = %cond.false112.i, %cond.true111.i
  %cond114.i = phi float* [ %110, %cond.true111.i ], [ %111, %cond.false112.i ], !dbg !2574
  %112 = load i32, i32* %N_B.i, align 4, !dbg !2576
  %113 = load i32, i32* %recombine.i, align 4, !dbg !2577
  %shr115.i = ashr i32 %112, %113, !dbg !2578
  %114 = load i32, i32* %B0.i, align 4, !dbg !2579
  %115 = load i32, i32* %recombine.i, align 4, !dbg !2580
  %shl116.i = shl i32 %114, %115, !dbg !2581
  %116 = load i32, i32* %longblocks.i, align 4, !dbg !2582
  call void @celt_deinterleave_hadamard(float* %arraydecay.i, float* %cond114.i, i32 %shr115.i, i32 %shl116.i, i32 %116) #7, !dbg !2583
  br label %if.end117.i, !dbg !2583

if.end117.i:                                      ; preds = %cond.end113.i, %lor.lhs.false107.i, %while.end.i
  br label %if.end118.i, !dbg !2584

if.end118.i:                                      ; preds = %if.end117.i, %land.lhs.true.i, %if.end23.i
  %117 = load i32, i32* %duration.addr.i, align 4, !dbg !2585
  %add.i = add nsw i32 %117, 1, !dbg !2586
  %mul119.i = mul nsw i32 %add.i, 21, !dbg !2587
  %118 = load i32, i32* %band.addr.i, align 4, !dbg !2588
  %add120.i = add nsw i32 %mul119.i, %118, !dbg !2589
  %idxprom121.i = sext i32 %add120.i to i64, !dbg !2590
  %arrayidx122.i = getelementptr inbounds [105 x i16], [105 x i16]* @ff_celt_cache_index, i64 0, i64 %idxprom121.i, !dbg !2590
  %119 = load i16, i16* %arrayidx122.i, align 2, !dbg !2590
  %conv123.i = sext i16 %119 to i32, !dbg !2590
  %idx.ext.i = sext i32 %conv123.i to i64, !dbg !2591
  %add.ptr.i = getelementptr inbounds i8, i8* getelementptr inbounds ([392 x i8], [392 x i8]* @ff_celt_cache_bits, i32 0, i32 0), i64 %idx.ext.i, !dbg !2591
  store i8* %add.ptr.i, i8** %cache.i, align 8, !dbg !2592
  %120 = load i32, i32* %stereo.i, align 4, !dbg !2593
  %tobool124.i = icmp ne i32 %120, 0, !dbg !2593
  br i1 %tobool124.i, label %if.end153.i, label %land.lhs.true125.i, !dbg !2595

land.lhs.true125.i:                               ; preds = %if.end118.i
  %121 = load i32, i32* %duration.addr.i, align 4, !dbg !2596
  %cmp126.i = icmp sge i32 %121, 0, !dbg !2598
  br i1 %cmp126.i, label %land.lhs.true128.i, label %if.end153.i, !dbg !2599

land.lhs.true128.i:                               ; preds = %land.lhs.true125.i
  %122 = load i32, i32* %b.addr.i, align 4, !dbg !2600
  %123 = load i8*, i8** %cache.i, align 8, !dbg !2602
  %124 = load i8, i8* %123, align 1, !dbg !2602
  %idxprom130.i = zext i8 %124 to i64, !dbg !2603
  %125 = load i8*, i8** %cache.i, align 8, !dbg !2603
  %arrayidx131.i = getelementptr inbounds i8, i8* %125, i64 %idxprom130.i, !dbg !2603
  %126 = load i8, i8* %arrayidx131.i, align 1, !dbg !2603
  %conv132.i = zext i8 %126 to i32, !dbg !2603
  %add133.i = add nsw i32 %conv132.i, 12, !dbg !2604
  %cmp134.i = icmp sgt i32 %122, %add133.i, !dbg !2605
  br i1 %cmp134.i, label %land.lhs.true136.i, label %if.end153.i, !dbg !2606

land.lhs.true136.i:                               ; preds = %land.lhs.true128.i
  %127 = load i32, i32* %N.addr.i, align 4, !dbg !2607
  %cmp137.i = icmp sgt i32 %127, 2, !dbg !2609
  br i1 %cmp137.i, label %if.then139.i, label %if.end153.i, !dbg !2610

if.then139.i:                                     ; preds = %land.lhs.true136.i
  %128 = load i32, i32* %N.addr.i, align 4, !dbg !2611
  %shr140.i = ashr i32 %128, 1, !dbg !2611
  store i32 %shr140.i, i32* %N.addr.i, align 4, !dbg !2611
  %129 = load float*, float** %X.addr.i, align 8, !dbg !2613
  %130 = load i32, i32* %N.addr.i, align 4, !dbg !2614
  %idx.ext141.i = sext i32 %130 to i64, !dbg !2615
  %add.ptr142.i = getelementptr inbounds float, float* %129, i64 %idx.ext141.i, !dbg !2615
  store float* %add.ptr142.i, float** %Y.addr.i, align 8, !dbg !2616
  store i32 1, i32* %split.i, align 4, !dbg !2617
  %131 = load i32, i32* %duration.addr.i, align 4, !dbg !2618
  %sub143.i = sub nsw i32 %131, 1, !dbg !2618
  store i32 %sub143.i, i32* %duration.addr.i, align 4, !dbg !2618
  %132 = load i32, i32* %blocks.addr.i, align 4, !dbg !2619
  %cmp144.i = icmp eq i32 %132, 1, !dbg !2621
  br i1 %cmp144.i, label %if.then146.i, label %if.end150.i, !dbg !2622

if.then146.i:                                     ; preds = %if.then139.i
  %133 = load i32, i32* %fill.addr.i, align 4, !dbg !2623
  %and147.i = and i32 %133, 1, !dbg !2624
  %134 = load i32, i32* %fill.addr.i, align 4, !dbg !2625
  %shl148.i = shl i32 %134, 1, !dbg !2626
  %or149.i = or i32 %and147.i, %shl148.i, !dbg !2627
  store i32 %or149.i, i32* %fill.addr.i, align 4, !dbg !2628
  br label %if.end150.i, !dbg !2629

if.end150.i:                                      ; preds = %if.then146.i, %if.then139.i
  %135 = load i32, i32* %blocks.addr.i, align 4, !dbg !2630
  %add151.i = add i32 %135, 1, !dbg !2631
  %shr152.i = lshr i32 %add151.i, 1, !dbg !2632
  store i32 %shr152.i, i32* %blocks.addr.i, align 4, !dbg !2633
  br label %if.end153.i, !dbg !2634

if.end153.i:                                      ; preds = %if.end150.i, %land.lhs.true136.i, %land.lhs.true128.i, %land.lhs.true125.i, %if.end118.i
  %136 = load i32, i32* %split.i, align 4, !dbg !2635
  %tobool154.i = icmp ne i32 %136, 0, !dbg !2635
  br i1 %tobool154.i, label %if.then155.i, label %if.else549.i, !dbg !2636

if.then155.i:                                     ; preds = %if.end153.i
  %137 = load i32, i32* %quant.addr.i, align 4, !dbg !2637
  %tobool156.i = icmp ne i32 %137, 0, !dbg !2637
  br i1 %tobool156.i, label %cond.true157.i, label %cond.false159.i, !dbg !2637

cond.true157.i:                                   ; preds = %if.then155.i
  %138 = load float*, float** %X.addr.i, align 8, !dbg !2638
  %139 = load float*, float** %Y.addr.i, align 8, !dbg !2640
  %140 = load i32, i32* %stereo.i, align 4, !dbg !2641
  %141 = load i32, i32* %N.addr.i, align 4, !dbg !2642
  %call158.i = call i32 @celt_calc_theta(float* %138, float* %139, i32 %140, i32 %141) #7, !dbg !2643
  br label %cond.end160.i, !dbg !2644

cond.false159.i:                                  ; preds = %if.then155.i
  br label %cond.end160.i, !dbg !2645

cond.end160.i:                                    ; preds = %cond.false159.i, %cond.true157.i
  %cond161.i = phi i32 [ %call158.i, %cond.true157.i ], [ 0, %cond.false159.i ], !dbg !2647
  store i32 %cond161.i, i32* %itheta.i, align 4, !dbg !2649
  %142 = load i32, i32* %band.addr.i, align 4, !dbg !2650
  %idxprom162.i = sext i32 %142 to i64, !dbg !2651
  %arrayidx163.i = getelementptr inbounds [0 x i8], [0 x i8]* @ff_celt_log_freq_range, i64 0, i64 %idxprom162.i, !dbg !2651
  %143 = load i8, i8* %arrayidx163.i, align 1, !dbg !2651
  %conv164.i = zext i8 %143 to i32, !dbg !2651
  %144 = load i32, i32* %duration.addr.i, align 4, !dbg !2652
  %mul165.i = mul nsw i32 %144, 8, !dbg !2653
  %add166.i = add nsw i32 %conv164.i, %mul165.i, !dbg !2654
  store i32 %add166.i, i32* %pulse_cap.i, align 4, !dbg !2655
  %145 = load i32, i32* %pulse_cap.i, align 4, !dbg !2656
  %shr167.i = ashr i32 %145, 1, !dbg !2657
  %146 = load i32, i32* %stereo.i, align 4, !dbg !2658
  %tobool168.i = icmp ne i32 %146, 0, !dbg !2658
  br i1 %tobool168.i, label %land.rhs169.i, label %land.end172.i, !dbg !2659

land.rhs169.i:                                    ; preds = %cond.end160.i
  %147 = load i32, i32* %N.addr.i, align 4, !dbg !2660
  %cmp170.i = icmp eq i32 %147, 2, !dbg !2661
  br label %land.end172.i, !dbg !2339

land.end172.i:                                    ; preds = %land.rhs169.i, %cond.end160.i
  %148 = phi i1 [ false, %cond.end160.i ], [ %cmp170.i, %land.rhs169.i ], !dbg !2339
  %cond173.i = select i1 %148, i32 16, i32 4, !dbg !2662
  %sub174.i = sub nsw i32 %shr167.i, %cond173.i, !dbg !2663
  store i32 %sub174.i, i32* %offset.i, align 4, !dbg !2664
  %149 = load i32, i32* %stereo.i, align 4, !dbg !2665
  %tobool175.i = icmp ne i32 %149, 0, !dbg !2665
  br i1 %tobool175.i, label %land.lhs.true176.i, label %cond.false180.i, !dbg !2666

land.lhs.true176.i:                               ; preds = %land.end172.i
  %150 = load i32, i32* %band.addr.i, align 4, !dbg !2667
  %151 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !2668
  %intensity_stereo.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %151, i32 0, i32 24, !dbg !2669
  %152 = load i32, i32* %intensity_stereo.i, align 32, !dbg !2669
  %cmp177.i = icmp sge i32 %150, %152, !dbg !2670
  br i1 %cmp177.i, label %cond.true179.i, label %cond.false180.i, !dbg !2671

cond.true179.i:                                   ; preds = %land.lhs.true176.i
  br label %cond.end182.i, !dbg !2672

cond.false180.i:                                  ; preds = %land.lhs.true176.i, %land.end172.i
  %153 = load i32, i32* %N.addr.i, align 4, !dbg !2673
  %154 = load i32, i32* %b.addr.i, align 4, !dbg !2674
  %155 = load i32, i32* %offset.i, align 4, !dbg !2675
  %156 = load i32, i32* %pulse_cap.i, align 4, !dbg !2676
  %157 = load i32, i32* %stereo.i, align 4, !dbg !2677
  %call181.i = call i32 @celt_compute_qn(i32 %153, i32 %154, i32 %155, i32 %156, i32 %157) #7, !dbg !2678
  br label %cond.end182.i, !dbg !2679

cond.end182.i:                                    ; preds = %cond.false180.i, %cond.true179.i
  %cond183.i = phi i32 [ 1, %cond.true179.i ], [ %call181.i, %cond.false180.i ], !dbg !2680
  store i32 %cond183.i, i32* %qn.i, align 4, !dbg !2682
  %158 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !2683
  store %struct.OpusRangeCoder* %158, %struct.OpusRangeCoder** %rc.addr.i.i, align 8, !dbg !2684
  %159 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i.i, align 8, !dbg !2685
  %total_bits1.i.i = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %159, i32 0, i32 4, !dbg !2686
  %160 = load i32, i32* %total_bits1.i.i, align 8, !dbg !2686
  %shl.i.i = shl i32 %160, 3, !dbg !2687
  store i32 %shl.i.i, i32* %total_bits.i.i, align 4, !dbg !2688
  %161 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i.i, align 8, !dbg !2689
  %range2.i.i = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %161, i32 0, i32 2, !dbg !2690
  %162 = load i32, i32* %range2.i.i, align 8, !dbg !2690
  %or.i.i = or i32 %162, 1, !dbg !2691
  %163 = call i32 @llvm.ctlz.i32(i32 %or.i.i, i1 true) #7, !dbg !2692
  %sub.i.i = sub nsw i32 31, %163, !dbg !2693
  %add.i.i = add nsw i32 %sub.i.i, 1, !dbg !2694
  store i32 %add.i.i, i32* %rcbuffer.i.i, align 4, !dbg !2695
  %164 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i.i, align 8, !dbg !2696
  %range3.i.i = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %164, i32 0, i32 2, !dbg !2697
  %165 = load i32, i32* %range3.i.i, align 8, !dbg !2697
  %166 = load i32, i32* %rcbuffer.i.i, align 4, !dbg !2698
  %sub4.i.i = sub i32 %166, 16, !dbg !2699
  %shr.i.i = lshr i32 %165, %sub4.i.i, !dbg !2700
  store i32 %shr.i.i, i32* %range.i.i, align 4, !dbg !2701
  store i32 0, i32* %i.i.i, align 4, !dbg !2702
  br label %for.cond.i.i, !dbg !2703

for.cond.i.i:                                     ; preds = %for.body.i.i, %cond.end182.i
  %167 = load i32, i32* %i.i.i, align 4, !dbg !2704
  %cmp.i.i = icmp ult i32 %167, 3, !dbg !2706
  br i1 %cmp.i.i, label %for.body.i.i, label %opus_rc_tell_frac.exit.i, !dbg !2707

for.body.i.i:                                     ; preds = %for.cond.i.i
  %168 = load i32, i32* %range.i.i, align 4, !dbg !2708
  %169 = load i32, i32* %range.i.i, align 4, !dbg !2709
  %mul.i.i = mul i32 %168, %169, !dbg !2710
  %shr5.i.i = lshr i32 %mul.i.i, 15, !dbg !2711
  store i32 %shr5.i.i, i32* %range.i.i, align 4, !dbg !2712
  %170 = load i32, i32* %range.i.i, align 4, !dbg !2713
  %shr6.i.i = lshr i32 %170, 16, !dbg !2714
  store i32 %shr6.i.i, i32* %bit.i.i, align 4, !dbg !2715
  %171 = load i32, i32* %rcbuffer.i.i, align 4, !dbg !2716
  %shl7.i.i = shl i32 %171, 1, !dbg !2717
  %172 = load i32, i32* %bit.i.i, align 4, !dbg !2718
  %or8.i.i = or i32 %shl7.i.i, %172, !dbg !2719
  store i32 %or8.i.i, i32* %rcbuffer.i.i, align 4, !dbg !2720
  %173 = load i32, i32* %bit.i.i, align 4, !dbg !2721
  %174 = load i32, i32* %range.i.i, align 4, !dbg !2722
  %shr9.i.i = lshr i32 %174, %173, !dbg !2722
  store i32 %shr9.i.i, i32* %range.i.i, align 4, !dbg !2722
  %175 = load i32, i32* %i.i.i, align 4, !dbg !2723
  %inc.i.i = add i32 %175, 1, !dbg !2723
  store i32 %inc.i.i, i32* %i.i.i, align 4, !dbg !2723
  br label %for.cond.i.i, !dbg !2725, !llvm.loop !2726

opus_rc_tell_frac.exit.i:                         ; preds = %for.cond.i.i
  %176 = load i32, i32* %total_bits.i.i, align 4, !dbg !2728
  %177 = load i32, i32* %rcbuffer.i.i, align 4, !dbg !2729
  %sub10.i.i = sub i32 %176, %177, !dbg !2730
  store i32 %sub10.i.i, i32* %tell.i, align 4, !dbg !2731
  %178 = load i32, i32* %qn.i, align 4, !dbg !2732
  %cmp185.i = icmp ne i32 %178, 1, !dbg !2734
  br i1 %cmp185.i, label %if.then187.i, label %if.else253.i, !dbg !2735

if.then187.i:                                     ; preds = %opus_rc_tell_frac.exit.i
  %179 = load i32, i32* %quant.addr.i, align 4, !dbg !2736
  %tobool188.i = icmp ne i32 %179, 0, !dbg !2736
  br i1 %tobool188.i, label %if.then189.i, label %if.end193.i, !dbg !2739

if.then189.i:                                     ; preds = %if.then187.i
  %180 = load i32, i32* %itheta.i, align 4, !dbg !2740
  %181 = load i32, i32* %qn.i, align 4, !dbg !2741
  %mul190.i = mul nsw i32 %180, %181, !dbg !2742
  %add191.i = add nsw i32 %mul190.i, 8192, !dbg !2743
  %shr192.i = ashr i32 %add191.i, 14, !dbg !2744
  store i32 %shr192.i, i32* %itheta.i, align 4, !dbg !2745
  br label %if.end193.i, !dbg !2746

if.end193.i:                                      ; preds = %if.then189.i, %if.then187.i
  %182 = load i32, i32* %quant.addr.i, align 4, !dbg !2747
  %tobool194.i = icmp ne i32 %182, 0, !dbg !2747
  br i1 %tobool194.i, label %if.then195.i, label %if.else230.i, !dbg !2749

if.then195.i:                                     ; preds = %if.end193.i
  %183 = load i32, i32* %stereo.i, align 4, !dbg !2750
  %tobool196.i = icmp ne i32 %183, 0, !dbg !2750
  br i1 %tobool196.i, label %land.lhs.true197.i, label %if.else202.i, !dbg !2753

land.lhs.true197.i:                               ; preds = %if.then195.i
  %184 = load i32, i32* %N.addr.i, align 4, !dbg !2754
  %cmp198.i = icmp sgt i32 %184, 2, !dbg !2756
  br i1 %cmp198.i, label %if.then200.i, label %if.else202.i, !dbg !2757

if.then200.i:                                     ; preds = %land.lhs.true197.i
  %185 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !2758
  %186 = load i32, i32* %itheta.i, align 4, !dbg !2759
  %187 = load i32, i32* %qn.i, align 4, !dbg !2760
  %div201.i = sdiv i32 %187, 2, !dbg !2761
  call void @ff_opus_rc_enc_uint_step(%struct.OpusRangeCoder* %185, i32 %186, i32 %div201.i) #7, !dbg !2762
  br label %if.end211.i, !dbg !2762

if.else202.i:                                     ; preds = %land.lhs.true197.i, %if.then195.i
  %188 = load i32, i32* %stereo.i, align 4, !dbg !2763
  %tobool203.i = icmp ne i32 %188, 0, !dbg !2763
  br i1 %tobool203.i, label %if.then207.i, label %lor.lhs.false204.i, !dbg !2765

lor.lhs.false204.i:                               ; preds = %if.else202.i
  %189 = load i32, i32* %B0.i, align 4, !dbg !2766
  %cmp205.i = icmp sgt i32 %189, 1, !dbg !2768
  br i1 %cmp205.i, label %if.then207.i, label %if.else209.i, !dbg !2769

if.then207.i:                                     ; preds = %lor.lhs.false204.i, %if.else202.i
  %190 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !2770
  %191 = load i32, i32* %itheta.i, align 4, !dbg !2771
  %192 = load i32, i32* %qn.i, align 4, !dbg !2772
  %add208.i = add nsw i32 %192, 1, !dbg !2773
  call void @ff_opus_rc_enc_uint(%struct.OpusRangeCoder* %190, i32 %191, i32 %add208.i) #7, !dbg !2774
  br label %if.end210.i, !dbg !2774

if.else209.i:                                     ; preds = %lor.lhs.false204.i
  %193 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !2775
  %194 = load i32, i32* %itheta.i, align 4, !dbg !2776
  %195 = load i32, i32* %qn.i, align 4, !dbg !2777
  call void @ff_opus_rc_enc_uint_tri(%struct.OpusRangeCoder* %193, i32 %194, i32 %195) #7, !dbg !2778
  br label %if.end210.i, !dbg !2339

if.end210.i:                                      ; preds = %if.else209.i, %if.then207.i
  br label %if.end211.i, !dbg !2339

if.end211.i:                                      ; preds = %if.end210.i, %if.then200.i
  %196 = load i32, i32* %itheta.i, align 4, !dbg !2779
  %mul212.i = mul nsw i32 %196, 16384, !dbg !2780
  %197 = load i32, i32* %qn.i, align 4, !dbg !2781
  %div213.i = sdiv i32 %mul212.i, %197, !dbg !2782
  store i32 %div213.i, i32* %itheta.i, align 4, !dbg !2783
  %198 = load i32, i32* %stereo.i, align 4, !dbg !2784
  %tobool214.i = icmp ne i32 %198, 0, !dbg !2784
  br i1 %tobool214.i, label %if.then215.i, label %if.end229.i, !dbg !2786

if.then215.i:                                     ; preds = %if.end211.i
  %199 = load i32, i32* %itheta.i, align 4, !dbg !2787
  %cmp216.i = icmp eq i32 %199, 0, !dbg !2790
  br i1 %cmp216.i, label %if.then218.i, label %if.else227.i, !dbg !2791

if.then218.i:                                     ; preds = %if.then215.i
  %200 = load float*, float** %X.addr.i, align 8, !dbg !2792
  %201 = load float*, float** %Y.addr.i, align 8, !dbg !2793
  %202 = load i32, i32* %band.addr.i, align 4, !dbg !2794
  %idxprom219.i = sext i32 %202 to i64, !dbg !2795
  %203 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !2795
  %block.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %203, i32 0, i32 4, !dbg !2796
  %arrayidx220.i = getelementptr inbounds [2 x %struct.CeltBlock], [2 x %struct.CeltBlock]* %block.i, i64 0, i64 0, !dbg !2795
  %lin_energy.i = getelementptr inbounds %struct.CeltBlock, %struct.CeltBlock* %arrayidx220.i, i32 0, i32 1, !dbg !2797
  %arrayidx221.i = getelementptr inbounds [21 x float], [21 x float]* %lin_energy.i, i64 0, i64 %idxprom219.i, !dbg !2795
  %204 = load float, float* %arrayidx221.i, align 4, !dbg !2795
  %205 = load i32, i32* %band.addr.i, align 4, !dbg !2798
  %idxprom222.i = sext i32 %205 to i64, !dbg !2799
  %206 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !2799
  %block223.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %206, i32 0, i32 4, !dbg !2800
  %arrayidx224.i = getelementptr inbounds [2 x %struct.CeltBlock], [2 x %struct.CeltBlock]* %block223.i, i64 0, i64 1, !dbg !2799
  %lin_energy225.i = getelementptr inbounds %struct.CeltBlock, %struct.CeltBlock* %arrayidx224.i, i32 0, i32 1, !dbg !2801
  %arrayidx226.i = getelementptr inbounds [21 x float], [21 x float]* %lin_energy225.i, i64 0, i64 %idxprom222.i, !dbg !2799
  %207 = load float, float* %arrayidx226.i, align 4, !dbg !2799
  %208 = load i32, i32* %N.addr.i, align 4, !dbg !2802
  call void @celt_stereo_is_decouple(float* %200, float* %201, float %204, float %207, i32 %208) #7, !dbg !2803
  br label %if.end228.i, !dbg !2803

if.else227.i:                                     ; preds = %if.then215.i
  %209 = load float*, float** %X.addr.i, align 8, !dbg !2804
  %210 = load float*, float** %Y.addr.i, align 8, !dbg !2805
  %211 = load i32, i32* %N.addr.i, align 4, !dbg !2806
  call void @celt_stereo_ms_decouple(float* %209, float* %210, i32 %211) #7, !dbg !2807
  br label %if.end228.i, !dbg !2339

if.end228.i:                                      ; preds = %if.else227.i, %if.then218.i
  br label %if.end229.i, !dbg !2808

if.end229.i:                                      ; preds = %if.end228.i, %if.end211.i
  br label %if.end252.i, !dbg !2809

if.else230.i:                                     ; preds = %if.end193.i
  %212 = load i32, i32* %stereo.i, align 4, !dbg !2810
  %tobool231.i = icmp ne i32 %212, 0, !dbg !2810
  br i1 %tobool231.i, label %land.lhs.true232.i, label %if.else238.i, !dbg !2813

land.lhs.true232.i:                               ; preds = %if.else230.i
  %213 = load i32, i32* %N.addr.i, align 4, !dbg !2814
  %cmp233.i = icmp sgt i32 %213, 2, !dbg !2816
  br i1 %cmp233.i, label %if.then235.i, label %if.else238.i, !dbg !2817

if.then235.i:                                     ; preds = %land.lhs.true232.i
  %214 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !2818
  %215 = load i32, i32* %qn.i, align 4, !dbg !2819
  %div236.i = sdiv i32 %215, 2, !dbg !2820
  %call237.i = call i32 @ff_opus_rc_dec_uint_step(%struct.OpusRangeCoder* %214, i32 %div236.i) #7, !dbg !2821
  store i32 %call237.i, i32* %itheta.i, align 4, !dbg !2822
  br label %if.end249.i, !dbg !2823

if.else238.i:                                     ; preds = %land.lhs.true232.i, %if.else230.i
  %216 = load i32, i32* %stereo.i, align 4, !dbg !2824
  %tobool239.i = icmp ne i32 %216, 0, !dbg !2824
  br i1 %tobool239.i, label %if.then243.i, label %lor.lhs.false240.i, !dbg !2826

lor.lhs.false240.i:                               ; preds = %if.else238.i
  %217 = load i32, i32* %B0.i, align 4, !dbg !2827
  %cmp241.i = icmp sgt i32 %217, 1, !dbg !2829
  br i1 %cmp241.i, label %if.then243.i, label %if.else246.i, !dbg !2830

if.then243.i:                                     ; preds = %lor.lhs.false240.i, %if.else238.i
  %218 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !2831
  %219 = load i32, i32* %qn.i, align 4, !dbg !2832
  %add244.i = add nsw i32 %219, 1, !dbg !2833
  %call245.i = call i32 @ff_opus_rc_dec_uint(%struct.OpusRangeCoder* %218, i32 %add244.i) #7, !dbg !2834
  store i32 %call245.i, i32* %itheta.i, align 4, !dbg !2835
  br label %if.end248.i, !dbg !2836

if.else246.i:                                     ; preds = %lor.lhs.false240.i
  %220 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !2837
  %221 = load i32, i32* %qn.i, align 4, !dbg !2838
  %call247.i = call i32 @ff_opus_rc_dec_uint_tri(%struct.OpusRangeCoder* %220, i32 %221) #7, !dbg !2839
  store i32 %call247.i, i32* %itheta.i, align 4, !dbg !2840
  br label %if.end248.i, !dbg !2339

if.end248.i:                                      ; preds = %if.else246.i, %if.then243.i
  br label %if.end249.i, !dbg !2339

if.end249.i:                                      ; preds = %if.end248.i, %if.then235.i
  %222 = load i32, i32* %itheta.i, align 4, !dbg !2841
  %mul250.i = mul nsw i32 %222, 16384, !dbg !2842
  %223 = load i32, i32* %qn.i, align 4, !dbg !2843
  %div251.i = sdiv i32 %mul250.i, %223, !dbg !2844
  store i32 %div251.i, i32* %itheta.i, align 4, !dbg !2845
  br label %if.end252.i, !dbg !2339

if.end252.i:                                      ; preds = %if.end249.i, %if.end229.i
  br label %if.end311.i, !dbg !2846

if.else253.i:                                     ; preds = %opus_rc_tell_frac.exit.i
  %224 = load i32, i32* %stereo.i, align 4, !dbg !2847
  %tobool254.i = icmp ne i32 %224, 0, !dbg !2847
  br i1 %tobool254.i, label %if.then255.i, label %if.end310.i, !dbg !2847

if.then255.i:                                     ; preds = %if.else253.i
  %225 = load i32, i32* %quant.addr.i, align 4, !dbg !2850
  %tobool256.i = icmp ne i32 %225, 0, !dbg !2850
  br i1 %tobool256.i, label %if.then257.i, label %if.else292.i, !dbg !2853

if.then257.i:                                     ; preds = %if.then255.i
  %226 = load i32, i32* %itheta.i, align 4, !dbg !2854
  %cmp258.i = icmp sgt i32 %226, 8192, !dbg !2856
  %conv259.i = zext i1 %cmp258.i to i32, !dbg !2856
  store i32 %conv259.i, i32* %inv.i, align 4, !dbg !2857
  %227 = load i32, i32* %inv.i, align 4, !dbg !2858
  %tobool260.i = icmp ne i32 %227, 0, !dbg !2858
  br i1 %tobool260.i, label %if.then261.i, label %if.end272.i, !dbg !2860

if.then261.i:                                     ; preds = %if.then257.i
  store i32 0, i32* %i.i, align 4, !dbg !2861
  br label %for.cond262.i, !dbg !2864

for.cond262.i:                                    ; preds = %for.body265.i, %if.then261.i
  %228 = load i32, i32* %i.i, align 4, !dbg !2865
  %229 = load i32, i32* %N.addr.i, align 4, !dbg !2868
  %cmp263.i = icmp slt i32 %228, %229, !dbg !2869
  br i1 %cmp263.i, label %for.body265.i, label %for.end271.i, !dbg !2870

for.body265.i:                                    ; preds = %for.cond262.i
  %230 = load i32, i32* %i.i, align 4, !dbg !2871
  %idxprom266.i = sext i32 %230 to i64, !dbg !2872
  %231 = load float*, float** %Y.addr.i, align 8, !dbg !2872
  %arrayidx267.i = getelementptr inbounds float, float* %231, i64 %idxprom266.i, !dbg !2872
  %232 = load float, float* %arrayidx267.i, align 4, !dbg !2873
  %mul268.i = fmul float %232, -1.000000e+00, !dbg !2873
  store float %mul268.i, float* %arrayidx267.i, align 4, !dbg !2873
  %233 = load i32, i32* %i.i, align 4, !dbg !2874
  %inc270.i = add nsw i32 %233, 1, !dbg !2874
  store i32 %inc270.i, i32* %i.i, align 4, !dbg !2874
  br label %for.cond262.i, !dbg !2876, !llvm.loop !2877

for.end271.i:                                     ; preds = %for.cond262.i
  br label %if.end272.i, !dbg !2879

if.end272.i:                                      ; preds = %for.end271.i, %if.then257.i
  %234 = load float*, float** %X.addr.i, align 8, !dbg !2880
  %235 = load float*, float** %Y.addr.i, align 8, !dbg !2881
  %236 = load i32, i32* %band.addr.i, align 4, !dbg !2882
  %idxprom273.i = sext i32 %236 to i64, !dbg !2883
  %237 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !2883
  %block274.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %237, i32 0, i32 4, !dbg !2884
  %arrayidx275.i = getelementptr inbounds [2 x %struct.CeltBlock], [2 x %struct.CeltBlock]* %block274.i, i64 0, i64 0, !dbg !2883
  %lin_energy276.i = getelementptr inbounds %struct.CeltBlock, %struct.CeltBlock* %arrayidx275.i, i32 0, i32 1, !dbg !2885
  %arrayidx277.i = getelementptr inbounds [21 x float], [21 x float]* %lin_energy276.i, i64 0, i64 %idxprom273.i, !dbg !2883
  %238 = load float, float* %arrayidx277.i, align 4, !dbg !2883
  %239 = load i32, i32* %band.addr.i, align 4, !dbg !2886
  %idxprom278.i = sext i32 %239 to i64, !dbg !2887
  %240 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !2887
  %block279.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %240, i32 0, i32 4, !dbg !2888
  %arrayidx280.i = getelementptr inbounds [2 x %struct.CeltBlock], [2 x %struct.CeltBlock]* %block279.i, i64 0, i64 1, !dbg !2887
  %lin_energy281.i = getelementptr inbounds %struct.CeltBlock, %struct.CeltBlock* %arrayidx280.i, i32 0, i32 1, !dbg !2889
  %arrayidx282.i = getelementptr inbounds [21 x float], [21 x float]* %lin_energy281.i, i64 0, i64 %idxprom278.i, !dbg !2887
  %241 = load float, float* %arrayidx282.i, align 4, !dbg !2887
  %242 = load i32, i32* %N.addr.i, align 4, !dbg !2890
  call void @celt_stereo_is_decouple(float* %234, float* %235, float %238, float %241, i32 %242) #7, !dbg !2891
  %243 = load i32, i32* %b.addr.i, align 4, !dbg !2892
  %cmp283.i = icmp sgt i32 %243, 16, !dbg !2894
  br i1 %cmp283.i, label %land.lhs.true285.i, label %if.else290.i, !dbg !2895

land.lhs.true285.i:                               ; preds = %if.end272.i
  %244 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !2896
  %remaining2286.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %244, i32 0, i32 35, !dbg !2898
  %245 = load i32, i32* %remaining2286.i, align 4, !dbg !2898
  %cmp287.i = icmp sgt i32 %245, 16, !dbg !2899
  br i1 %cmp287.i, label %if.then289.i, label %if.else290.i, !dbg !2900

if.then289.i:                                     ; preds = %land.lhs.true285.i
  %246 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !2901
  %247 = load i32, i32* %inv.i, align 4, !dbg !2903
  call void @ff_opus_rc_enc_log(%struct.OpusRangeCoder* %246, i32 %247, i32 2) #7, !dbg !2904
  br label %if.end291.i, !dbg !2905

if.else290.i:                                     ; preds = %land.lhs.true285.i, %if.end272.i
  store i32 0, i32* %inv.i, align 4, !dbg !2906
  br label %if.end291.i, !dbg !2339

if.end291.i:                                      ; preds = %if.else290.i, %if.then289.i
  br label %if.end309.i, !dbg !2908

if.else292.i:                                     ; preds = %if.then255.i
  %248 = load i32, i32* %b.addr.i, align 4, !dbg !2909
  %cmp293.i = icmp sgt i32 %248, 16, !dbg !2911
  br i1 %cmp293.i, label %land.lhs.true295.i, label %cond.false301.i, !dbg !2912

land.lhs.true295.i:                               ; preds = %if.else292.i
  %249 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !2913
  %remaining2296.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %249, i32 0, i32 35, !dbg !2915
  %250 = load i32, i32* %remaining2296.i, align 4, !dbg !2915
  %cmp297.i = icmp sgt i32 %250, 16, !dbg !2916
  br i1 %cmp297.i, label %cond.true299.i, label %cond.false301.i, !dbg !2917

cond.true299.i:                                   ; preds = %land.lhs.true295.i
  %251 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !2918
  %call300.i = call i32 @ff_opus_rc_dec_log(%struct.OpusRangeCoder* %251, i32 2) #7, !dbg !2920
  br label %cond.end302.i, !dbg !2921

cond.false301.i:                                  ; preds = %land.lhs.true295.i, %if.else292.i
  br label %cond.end302.i, !dbg !2922

cond.end302.i:                                    ; preds = %cond.false301.i, %cond.true299.i
  %cond303.i = phi i32 [ %call300.i, %cond.true299.i ], [ 0, %cond.false301.i ], !dbg !2924
  store i32 %cond303.i, i32* %inv.i, align 4, !dbg !2926
  %252 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !2927
  %apply_phase_inv.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %252, i32 0, i32 8, !dbg !2928
  %253 = load i32, i32* %apply_phase_inv.i, align 16, !dbg !2928
  %tobool304.i = icmp ne i32 %253, 0, !dbg !2927
  br i1 %tobool304.i, label %cond.true305.i, label %cond.false306.i, !dbg !2927

cond.true305.i:                                   ; preds = %cond.end302.i
  %254 = load i32, i32* %inv.i, align 4, !dbg !2929
  br label %cond.end307.i, !dbg !2930

cond.false306.i:                                  ; preds = %cond.end302.i
  br label %cond.end307.i, !dbg !2931

cond.end307.i:                                    ; preds = %cond.false306.i, %cond.true305.i
  %cond308.i = phi i32 [ %254, %cond.true305.i ], [ 0, %cond.false306.i ], !dbg !2932
  store i32 %cond308.i, i32* %inv.i, align 4, !dbg !2933
  br label %if.end309.i, !dbg !2339

if.end309.i:                                      ; preds = %cond.end307.i, %if.end291.i
  store i32 0, i32* %itheta.i, align 4, !dbg !2934
  br label %if.end310.i, !dbg !2935

if.end310.i:                                      ; preds = %if.end309.i, %if.else253.i
  br label %if.end311.i, !dbg !2339

if.end311.i:                                      ; preds = %if.end310.i, %if.end252.i
  %255 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !2936
  store %struct.OpusRangeCoder* %255, %struct.OpusRangeCoder** %rc.addr.i728.i, align 8, !dbg !2937
  %256 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i728.i, align 8, !dbg !2938
  %total_bits1.i734.i = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %256, i32 0, i32 4, !dbg !2939
  %257 = load i32, i32* %total_bits1.i734.i, align 8, !dbg !2939
  %shl.i735.i = shl i32 %257, 3, !dbg !2940
  store i32 %shl.i735.i, i32* %total_bits.i730.i, align 4, !dbg !2941
  %258 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i728.i, align 8, !dbg !2942
  %range2.i736.i = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %258, i32 0, i32 2, !dbg !2943
  %259 = load i32, i32* %range2.i736.i, align 8, !dbg !2943
  %or.i737.i = or i32 %259, 1, !dbg !2944
  %260 = call i32 @llvm.ctlz.i32(i32 %or.i737.i, i1 true) #7, !dbg !2945
  %sub.i738.i = sub nsw i32 31, %260, !dbg !2946
  %add.i739.i = add nsw i32 %sub.i738.i, 1, !dbg !2947
  store i32 %add.i739.i, i32* %rcbuffer.i731.i, align 4, !dbg !2948
  %261 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i728.i, align 8, !dbg !2949
  %range3.i740.i = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %261, i32 0, i32 2, !dbg !2950
  %262 = load i32, i32* %range3.i740.i, align 8, !dbg !2950
  %263 = load i32, i32* %rcbuffer.i731.i, align 4, !dbg !2951
  %sub4.i741.i = sub i32 %263, 16, !dbg !2952
  %shr.i742.i = lshr i32 %262, %sub4.i741.i, !dbg !2953
  store i32 %shr.i742.i, i32* %range.i732.i, align 4, !dbg !2954
  store i32 0, i32* %i.i729.i, align 4, !dbg !2955
  br label %for.cond.i744.i, !dbg !2956

for.cond.i744.i:                                  ; preds = %for.body.i751.i, %if.end311.i
  %264 = load i32, i32* %i.i729.i, align 4, !dbg !2957
  %cmp.i743.i = icmp ult i32 %264, 3, !dbg !2958
  br i1 %cmp.i743.i, label %for.body.i751.i, label %opus_rc_tell_frac.exit754.i, !dbg !2959

for.body.i751.i:                                  ; preds = %for.cond.i744.i
  %265 = load i32, i32* %range.i732.i, align 4, !dbg !2960
  %266 = load i32, i32* %range.i732.i, align 4, !dbg !2961
  %mul.i745.i = mul i32 %265, %266, !dbg !2962
  %shr5.i746.i = lshr i32 %mul.i745.i, 15, !dbg !2963
  store i32 %shr5.i746.i, i32* %range.i732.i, align 4, !dbg !2964
  %267 = load i32, i32* %range.i732.i, align 4, !dbg !2965
  %shr6.i747.i = lshr i32 %267, 16, !dbg !2966
  store i32 %shr6.i747.i, i32* %bit.i733.i, align 4, !dbg !2967
  %268 = load i32, i32* %rcbuffer.i731.i, align 4, !dbg !2968
  %shl7.i748.i = shl i32 %268, 1, !dbg !2969
  %269 = load i32, i32* %bit.i733.i, align 4, !dbg !2970
  %or8.i749.i = or i32 %shl7.i748.i, %269, !dbg !2971
  store i32 %or8.i749.i, i32* %rcbuffer.i731.i, align 4, !dbg !2972
  %270 = load i32, i32* %bit.i733.i, align 4, !dbg !2973
  %271 = load i32, i32* %range.i732.i, align 4, !dbg !2974
  %shr9.i750.i = lshr i32 %271, %270, !dbg !2974
  store i32 %shr9.i750.i, i32* %range.i732.i, align 4, !dbg !2974
  %272 = load i32, i32* %i.i729.i, align 4, !dbg !2975
  %inc.i752.i = add i32 %272, 1, !dbg !2975
  store i32 %inc.i752.i, i32* %i.i729.i, align 4, !dbg !2975
  br label %for.cond.i744.i, !dbg !2976, !llvm.loop !2726

opus_rc_tell_frac.exit754.i:                      ; preds = %for.cond.i744.i
  %273 = load i32, i32* %total_bits.i730.i, align 4, !dbg !2977
  %274 = load i32, i32* %rcbuffer.i731.i, align 4, !dbg !2978
  %sub10.i753.i = sub i32 %273, %274, !dbg !2979
  %275 = load i32, i32* %tell.i, align 4, !dbg !2980
  %sub313.i = sub i32 %sub10.i753.i, %275, !dbg !2981
  store i32 %sub313.i, i32* %qalloc.i, align 4, !dbg !2982
  %276 = load i32, i32* %qalloc.i, align 4, !dbg !2983
  %277 = load i32, i32* %b.addr.i, align 4, !dbg !2984
  %sub314.i = sub nsw i32 %277, %276, !dbg !2984
  store i32 %sub314.i, i32* %b.addr.i, align 4, !dbg !2984
  %278 = load i32, i32* %fill.addr.i, align 4, !dbg !2985
  store i32 %278, i32* %orig_fill.i, align 4, !dbg !2986
  %279 = load i32, i32* %itheta.i, align 4, !dbg !2987
  %cmp315.i = icmp eq i32 %279, 0, !dbg !2988
  br i1 %cmp315.i, label %if.then317.i, label %if.else319.i, !dbg !2989

if.then317.i:                                     ; preds = %opus_rc_tell_frac.exit754.i
  store i32 32767, i32* %imid.i, align 4, !dbg !2990
  store i32 0, i32* %iside.i, align 4, !dbg !2991
  %280 = load i32, i32* %fill.addr.i, align 4, !dbg !2992
  %281 = load i32, i32* %blocks.addr.i, align 4, !dbg !2993
  store i32 %280, i32* %a.addr.i755.i, align 4, !dbg !2994
  store i32 %281, i32* %p.addr.i756.i, align 4, !dbg !2994
  %282 = load i32, i32* %a.addr.i755.i, align 4, !dbg !2995
  %283 = load i32, i32* %p.addr.i756.i, align 4, !dbg !2996
  %shl.i757.i = shl i32 1, %283, !dbg !2997
  %sub.i758.i = sub nsw i32 %shl.i757.i, 1, !dbg !2998
  %and.i759.i = and i32 %282, %sub.i758.i, !dbg !2999
  store i32 %and.i759.i, i32* %fill.addr.i, align 4, !dbg !3000
  store i32 -16384, i32* %delta.i, align 4, !dbg !3001
  br label %if.end342.i, !dbg !3002

if.else319.i:                                     ; preds = %opus_rc_tell_frac.exit754.i
  %284 = load i32, i32* %itheta.i, align 4, !dbg !3003
  %cmp320.i = icmp eq i32 %284, 16384, !dbg !3006
  br i1 %cmp320.i, label %if.then322.i, label %if.else327.i, !dbg !3003

if.then322.i:                                     ; preds = %if.else319.i
  store i32 0, i32* %imid.i, align 4, !dbg !3007
  store i32 32767, i32* %iside.i, align 4, !dbg !3009
  %285 = load i32, i32* %blocks.addr.i, align 4, !dbg !3010
  %shl323.i = shl i32 1, %285, !dbg !3011
  %sub324.i = sub nsw i32 %shl323.i, 1, !dbg !3012
  %286 = load i32, i32* %blocks.addr.i, align 4, !dbg !3013
  %shl325.i = shl i32 %sub324.i, %286, !dbg !3014
  %287 = load i32, i32* %fill.addr.i, align 4, !dbg !3015
  %and326.i = and i32 %287, %shl325.i, !dbg !3015
  store i32 %and326.i, i32* %fill.addr.i, align 4, !dbg !3015
  store i32 16384, i32* %delta.i, align 4, !dbg !3016
  br label %if.end341.i, !dbg !3017

if.else327.i:                                     ; preds = %if.else319.i
  %288 = load i32, i32* %itheta.i, align 4, !dbg !3018
  %conv328.i = trunc i32 %288 to i16, !dbg !3018
  %call329.i = call signext i16 @celt_cos(i16 signext %conv328.i) #7, !dbg !3020
  %conv330.i = sext i16 %call329.i to i32, !dbg !3020
  store i32 %conv330.i, i32* %imid.i, align 4, !dbg !3021
  %289 = load i32, i32* %itheta.i, align 4, !dbg !3022
  %sub331.i = sub nsw i32 16384, %289, !dbg !3023
  %conv332.i = trunc i32 %sub331.i to i16, !dbg !3024
  %call333.i = call signext i16 @celt_cos(i16 signext %conv332.i) #7, !dbg !3025
  %conv334.i = sext i16 %call333.i to i32, !dbg !3025
  store i32 %conv334.i, i32* %iside.i, align 4, !dbg !3026
  %290 = load i32, i32* %N.addr.i, align 4, !dbg !3027
  %sub335.i = sub nsw i32 %290, 1, !dbg !3028
  %shl336.i = shl i32 %sub335.i, 7, !dbg !3029
  %291 = load i32, i32* %iside.i, align 4, !dbg !3030
  %292 = load i32, i32* %imid.i, align 4, !dbg !3031
  %call337.i = call i32 @celt_log2tan(i32 %291, i32 %292) #7, !dbg !3032
  %mul338.i = mul nsw i32 %shl336.i, %call337.i, !dbg !3033
  %add339.i = add nsw i32 %mul338.i, 16384, !dbg !3034
  %shr340.i = ashr i32 %add339.i, 15, !dbg !3035
  store i32 %shr340.i, i32* %delta.i, align 4, !dbg !3036
  br label %if.end341.i, !dbg !2339

if.end341.i:                                      ; preds = %if.else327.i, %if.then322.i
  br label %if.end342.i, !dbg !2339

if.end342.i:                                      ; preds = %if.end341.i, %if.then317.i
  %293 = load i32, i32* %imid.i, align 4, !dbg !3037
  %conv343.i = sitofp i32 %293 to float, !dbg !3037
  %div344.i = fdiv float %conv343.i, 3.276800e+04, !dbg !3038
  store float %div344.i, float* %mid.i, align 4, !dbg !3039
  %294 = load i32, i32* %iside.i, align 4, !dbg !3040
  %conv345.i = sitofp i32 %294 to float, !dbg !3040
  %div346.i = fdiv float %conv345.i, 3.276800e+04, !dbg !3041
  store float %div346.i, float* %side.i, align 4, !dbg !3042
  %295 = load i32, i32* %N.addr.i, align 4, !dbg !3043
  %cmp347.i = icmp eq i32 %295, 2, !dbg !3044
  br i1 %cmp347.i, label %land.lhs.true349.i, label %if.else429.i, !dbg !3045

land.lhs.true349.i:                               ; preds = %if.end342.i
  %296 = load i32, i32* %stereo.i, align 4, !dbg !3046
  %tobool350.i = icmp ne i32 %296, 0, !dbg !3046
  br i1 %tobool350.i, label %if.then351.i, label %if.else429.i, !dbg !3048

if.then351.i:                                     ; preds = %land.lhs.true349.i
  store i32 0, i32* %sign352.i, align 4, !dbg !2262
  %297 = load i32, i32* %b.addr.i, align 4, !dbg !3049
  store i32 %297, i32* %mbits.i, align 4, !dbg !3050
  %298 = load i32, i32* %itheta.i, align 4, !dbg !3051
  %cmp355.i = icmp ne i32 %298, 0, !dbg !3052
  br i1 %cmp355.i, label %land.rhs357.i, label %land.end360.i, !dbg !3053

land.rhs357.i:                                    ; preds = %if.then351.i
  %299 = load i32, i32* %itheta.i, align 4, !dbg !3054
  %cmp358.i = icmp ne i32 %299, 16384, !dbg !3056
  br label %land.end360.i, !dbg !2339

land.end360.i:                                    ; preds = %land.rhs357.i, %if.then351.i
  %300 = phi i1 [ false, %if.then351.i ], [ %cmp358.i, %land.rhs357.i ], !dbg !2339
  %cond361.i = select i1 %300, i32 8, i32 0, !dbg !3057
  store i32 %cond361.i, i32* %sbits.i, align 4, !dbg !3059
  %301 = load i32, i32* %sbits.i, align 4, !dbg !3060
  %302 = load i32, i32* %mbits.i, align 4, !dbg !3061
  %sub362.i = sub nsw i32 %302, %301, !dbg !3061
  store i32 %sub362.i, i32* %mbits.i, align 4, !dbg !3061
  %303 = load i32, i32* %itheta.i, align 4, !dbg !3062
  %cmp363.i = icmp sgt i32 %303, 8192, !dbg !3063
  %conv364.i = zext i1 %cmp363.i to i32, !dbg !3063
  store i32 %conv364.i, i32* %c.i, align 4, !dbg !3064
  %304 = load i32, i32* %qalloc.i, align 4, !dbg !3065
  %305 = load i32, i32* %sbits.i, align 4, !dbg !3066
  %add365.i = add nsw i32 %304, %305, !dbg !3067
  %306 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3068
  %remaining2366.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %306, i32 0, i32 35, !dbg !3069
  %307 = load i32, i32* %remaining2366.i, align 4, !dbg !3070
  %sub367.i = sub nsw i32 %307, %add365.i, !dbg !3070
  store i32 %sub367.i, i32* %remaining2366.i, align 4, !dbg !3070
  %308 = load i32, i32* %c.i, align 4, !dbg !3071
  %tobool368.i = icmp ne i32 %308, 0, !dbg !3071
  br i1 %tobool368.i, label %cond.true369.i, label %cond.false370.i, !dbg !3071

cond.true369.i:                                   ; preds = %land.end360.i
  %309 = load float*, float** %Y.addr.i, align 8, !dbg !3072
  br label %cond.end371.i, !dbg !3073

cond.false370.i:                                  ; preds = %land.end360.i
  %310 = load float*, float** %X.addr.i, align 8, !dbg !3074
  br label %cond.end371.i, !dbg !3075

cond.end371.i:                                    ; preds = %cond.false370.i, %cond.true369.i
  %cond372.i = phi float* [ %309, %cond.true369.i ], [ %310, %cond.false370.i ], !dbg !3076
  store float* %cond372.i, float** %x2.i, align 8, !dbg !3078
  %311 = load i32, i32* %c.i, align 4, !dbg !3079
  %tobool373.i = icmp ne i32 %311, 0, !dbg !3079
  br i1 %tobool373.i, label %cond.true374.i, label %cond.false375.i, !dbg !3079

cond.true374.i:                                   ; preds = %cond.end371.i
  %312 = load float*, float** %X.addr.i, align 8, !dbg !3080
  br label %cond.end376.i, !dbg !3081

cond.false375.i:                                  ; preds = %cond.end371.i
  %313 = load float*, float** %Y.addr.i, align 8, !dbg !3082
  br label %cond.end376.i, !dbg !3083

cond.end376.i:                                    ; preds = %cond.false375.i, %cond.true374.i
  %cond377.i = phi float* [ %312, %cond.true374.i ], [ %313, %cond.false375.i ], !dbg !3084
  store float* %cond377.i, float** %y2.i, align 8, !dbg !3085
  %314 = load i32, i32* %sbits.i, align 4, !dbg !3086
  %tobool378.i = icmp ne i32 %314, 0, !dbg !3086
  br i1 %tobool378.i, label %if.then379.i, label %if.end394.i, !dbg !3088

if.then379.i:                                     ; preds = %cond.end376.i
  %315 = load i32, i32* %quant.addr.i, align 4, !dbg !3089
  %tobool380.i = icmp ne i32 %315, 0, !dbg !3089
  br i1 %tobool380.i, label %if.then381.i, label %if.else391.i, !dbg !3092

if.then381.i:                                     ; preds = %if.then379.i
  %316 = load float*, float** %x2.i, align 8, !dbg !3093
  %317 = load float, float* %316, align 4, !dbg !3093
  %318 = load float*, float** %y2.i, align 8, !dbg !3095
  %arrayidx383.i = getelementptr inbounds float, float* %318, i64 1, !dbg !3095
  %319 = load float, float* %arrayidx383.i, align 4, !dbg !3095
  %mul384.i = fmul float %317, %319, !dbg !3096
  %320 = load float*, float** %x2.i, align 8, !dbg !3097
  %arrayidx385.i = getelementptr inbounds float, float* %320, i64 1, !dbg !3097
  %321 = load float, float* %arrayidx385.i, align 4, !dbg !3097
  %322 = load float*, float** %y2.i, align 8, !dbg !3098
  %323 = load float, float* %322, align 4, !dbg !3098
  %mul387.i = fmul float %321, %323, !dbg !3099
  %sub388.i = fsub float %mul384.i, %mul387.i, !dbg !3100
  %cmp389.i = fcmp olt float %sub388.i, 0.000000e+00, !dbg !3101
  %conv390.i = zext i1 %cmp389.i to i32, !dbg !3101
  store i32 %conv390.i, i32* %sign352.i, align 4, !dbg !3102
  %324 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !3103
  %325 = load i32, i32* %sign352.i, align 4, !dbg !3104
  call void @ff_opus_rc_put_raw(%struct.OpusRangeCoder* %324, i32 %325, i32 1) #7, !dbg !3105
  br label %if.end393.i, !dbg !3106

if.else391.i:                                     ; preds = %if.then379.i
  %326 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !3107
  %call392.i = call i32 @ff_opus_rc_get_raw(%struct.OpusRangeCoder* %326, i32 1) #7, !dbg !3109
  store i32 %call392.i, i32* %sign352.i, align 4, !dbg !3110
  br label %if.end393.i, !dbg !2339

if.end393.i:                                      ; preds = %if.else391.i, %if.then381.i
  br label %if.end394.i, !dbg !3111

if.end394.i:                                      ; preds = %if.end393.i, %cond.end376.i
  %327 = load i32, i32* %sign352.i, align 4, !dbg !3112
  %mul395.i = mul nsw i32 2, %327, !dbg !3113
  %sub396.i = sub nsw i32 1, %mul395.i, !dbg !3114
  store i32 %sub396.i, i32* %sign352.i, align 4, !dbg !3115
  %328 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3116
  %quant_band.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %328, i32 0, i32 3, !dbg !3117
  %329 = load i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)*, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)** %quant_band.i, align 8, !dbg !3117
  %330 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3118
  %331 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3119
  %332 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !3120
  %333 = load i32, i32* %band.addr.i, align 4, !dbg !3121
  %334 = load float*, float** %x2.i, align 8, !dbg !3122
  %335 = load i32, i32* %N.addr.i, align 4, !dbg !3123
  %336 = load i32, i32* %mbits.i, align 4, !dbg !3124
  %337 = load i32, i32* %blocks.addr.i, align 4, !dbg !3125
  %338 = load float*, float** %lowband.addr.i, align 8, !dbg !3126
  %339 = load i32, i32* %duration.addr.i, align 4, !dbg !3127
  %340 = load float*, float** %lowband_out.addr.i, align 8, !dbg !3128
  %341 = load i32, i32* %level.addr.i, align 4, !dbg !3129
  %342 = load float, float* %gain.addr.i, align 4, !dbg !3130
  %343 = load float*, float** %lowband_scratch.addr.i, align 8, !dbg !3131
  %344 = load i32, i32* %orig_fill.i, align 4, !dbg !3132
  %call397.i = call i32 %329(%struct.CeltPVQ* %330, %struct.CeltFrame* %331, %struct.OpusRangeCoder* %332, i32 %333, float* %334, float* null, i32 %335, i32 %336, i32 %337, float* %338, i32 %339, float* %340, i32 %341, float %342, float* %343, i32 %344) #7, !dbg !3116
  store i32 %call397.i, i32* %cm.i, align 4, !dbg !3133
  %345 = load i32, i32* %sign352.i, align 4, !dbg !3134
  %sub398.i = sub nsw i32 0, %345, !dbg !3135
  %conv399.i = sitofp i32 %sub398.i to float, !dbg !3135
  %346 = load float*, float** %x2.i, align 8, !dbg !3136
  %arrayidx400.i = getelementptr inbounds float, float* %346, i64 1, !dbg !3136
  %347 = load float, float* %arrayidx400.i, align 4, !dbg !3136
  %mul401.i = fmul float %conv399.i, %347, !dbg !3137
  %348 = load float*, float** %y2.i, align 8, !dbg !3138
  store float %mul401.i, float* %348, align 4, !dbg !3139
  %349 = load i32, i32* %sign352.i, align 4, !dbg !3140
  %conv403.i = sitofp i32 %349 to float, !dbg !3140
  %350 = load float*, float** %x2.i, align 8, !dbg !3141
  %351 = load float, float* %350, align 4, !dbg !3141
  %mul405.i = fmul float %conv403.i, %351, !dbg !3142
  %352 = load float*, float** %y2.i, align 8, !dbg !3143
  %arrayidx406.i = getelementptr inbounds float, float* %352, i64 1, !dbg !3143
  store float %mul405.i, float* %arrayidx406.i, align 4, !dbg !3144
  %353 = load float, float* %mid.i, align 4, !dbg !3145
  %354 = load float*, float** %X.addr.i, align 8, !dbg !3146
  %355 = load float, float* %354, align 4, !dbg !3147
  %mul408.i = fmul float %355, %353, !dbg !3147
  store float %mul408.i, float* %354, align 4, !dbg !3147
  %356 = load float, float* %mid.i, align 4, !dbg !3148
  %357 = load float*, float** %X.addr.i, align 8, !dbg !3149
  %arrayidx409.i = getelementptr inbounds float, float* %357, i64 1, !dbg !3149
  %358 = load float, float* %arrayidx409.i, align 4, !dbg !3150
  %mul410.i = fmul float %358, %356, !dbg !3150
  store float %mul410.i, float* %arrayidx409.i, align 4, !dbg !3150
  %359 = load float, float* %side.i, align 4, !dbg !3151
  %360 = load float*, float** %Y.addr.i, align 8, !dbg !3152
  %361 = load float, float* %360, align 4, !dbg !3153
  %mul412.i = fmul float %361, %359, !dbg !3153
  store float %mul412.i, float* %360, align 4, !dbg !3153
  %362 = load float, float* %side.i, align 4, !dbg !3154
  %363 = load float*, float** %Y.addr.i, align 8, !dbg !3155
  %arrayidx413.i = getelementptr inbounds float, float* %363, i64 1, !dbg !3155
  %364 = load float, float* %arrayidx413.i, align 4, !dbg !3156
  %mul414.i = fmul float %364, %362, !dbg !3156
  store float %mul414.i, float* %arrayidx413.i, align 4, !dbg !3156
  %365 = load float*, float** %X.addr.i, align 8, !dbg !3157
  %366 = load float, float* %365, align 4, !dbg !3157
  store float %366, float* %tmp.i, align 4, !dbg !3158
  %367 = load float, float* %tmp.i, align 4, !dbg !3159
  %368 = load float*, float** %Y.addr.i, align 8, !dbg !3160
  %369 = load float, float* %368, align 4, !dbg !3160
  %sub417.i = fsub float %367, %369, !dbg !3161
  %370 = load float*, float** %X.addr.i, align 8, !dbg !3162
  store float %sub417.i, float* %370, align 4, !dbg !3163
  %371 = load float, float* %tmp.i, align 4, !dbg !3164
  %372 = load float*, float** %Y.addr.i, align 8, !dbg !3165
  %373 = load float, float* %372, align 4, !dbg !3165
  %add420.i = fadd float %371, %373, !dbg !3166
  %374 = load float*, float** %Y.addr.i, align 8, !dbg !3167
  store float %add420.i, float* %374, align 4, !dbg !3168
  %375 = load float*, float** %X.addr.i, align 8, !dbg !3169
  %arrayidx422.i = getelementptr inbounds float, float* %375, i64 1, !dbg !3169
  %376 = load float, float* %arrayidx422.i, align 4, !dbg !3169
  store float %376, float* %tmp.i, align 4, !dbg !3170
  %377 = load float, float* %tmp.i, align 4, !dbg !3171
  %378 = load float*, float** %Y.addr.i, align 8, !dbg !3172
  %arrayidx423.i = getelementptr inbounds float, float* %378, i64 1, !dbg !3172
  %379 = load float, float* %arrayidx423.i, align 4, !dbg !3172
  %sub424.i = fsub float %377, %379, !dbg !3173
  %380 = load float*, float** %X.addr.i, align 8, !dbg !3174
  %arrayidx425.i = getelementptr inbounds float, float* %380, i64 1, !dbg !3174
  store float %sub424.i, float* %arrayidx425.i, align 4, !dbg !3175
  %381 = load float, float* %tmp.i, align 4, !dbg !3176
  %382 = load float*, float** %Y.addr.i, align 8, !dbg !3177
  %arrayidx426.i = getelementptr inbounds float, float* %382, i64 1, !dbg !3177
  %383 = load float, float* %arrayidx426.i, align 4, !dbg !3177
  %add427.i = fadd float %381, %383, !dbg !3178
  %384 = load float*, float** %Y.addr.i, align 8, !dbg !3179
  %arrayidx428.i = getelementptr inbounds float, float* %384, i64 1, !dbg !3179
  store float %add427.i, float* %arrayidx428.i, align 4, !dbg !3180
  br label %if.end548.i, !dbg !3181

if.else429.i:                                     ; preds = %land.lhs.true349.i, %if.end342.i
  store float* null, float** %next_lowband2.i, align 8, !dbg !2270
  store float* null, float** %next_lowband_out1.i, align 8, !dbg !2272
  store i32 0, i32* %next_level.i, align 4, !dbg !2274
  %385 = load i32, i32* %B0.i, align 4, !dbg !3182
  %cmp435.i = icmp sgt i32 %385, 1, !dbg !3184
  br i1 %cmp435.i, label %land.lhs.true437.i, label %if.end465.i, !dbg !3185

land.lhs.true437.i:                               ; preds = %if.else429.i
  %386 = load i32, i32* %stereo.i, align 4, !dbg !3186
  %tobool438.i = icmp ne i32 %386, 0, !dbg !3186
  br i1 %tobool438.i, label %if.end465.i, label %land.lhs.true439.i, !dbg !3188

land.lhs.true439.i:                               ; preds = %land.lhs.true437.i
  %387 = load i32, i32* %itheta.i, align 4, !dbg !3189
  %and440.i = and i32 %387, 16383, !dbg !3191
  %tobool441.i = icmp ne i32 %and440.i, 0, !dbg !3191
  br i1 %tobool441.i, label %if.then442.i, label %if.end465.i, !dbg !3192

if.then442.i:                                     ; preds = %land.lhs.true439.i
  %388 = load i32, i32* %itheta.i, align 4, !dbg !3193
  %cmp443.i = icmp sgt i32 %388, 8192, !dbg !3196
  br i1 %cmp443.i, label %if.then445.i, label %if.else449.i, !dbg !3197

if.then445.i:                                     ; preds = %if.then442.i
  %389 = load i32, i32* %delta.i, align 4, !dbg !3198
  %390 = load i32, i32* %duration.addr.i, align 4, !dbg !3199
  %sub446.i = sub nsw i32 4, %390, !dbg !3200
  %shr447.i = ashr i32 %389, %sub446.i, !dbg !3201
  %391 = load i32, i32* %delta.i, align 4, !dbg !3202
  %sub448.i = sub nsw i32 %391, %shr447.i, !dbg !3202
  store i32 %sub448.i, i32* %delta.i, align 4, !dbg !3202
  br label %if.end464.i, !dbg !3203

if.else449.i:                                     ; preds = %if.then442.i
  %392 = load i32, i32* %delta.i, align 4, !dbg !3204
  %393 = load i32, i32* %N.addr.i, align 4, !dbg !3205
  %shl450.i = shl i32 %393, 3, !dbg !3206
  %394 = load i32, i32* %duration.addr.i, align 4, !dbg !3207
  %sub451.i = sub nsw i32 5, %394, !dbg !3208
  %shr452.i = ashr i32 %shl450.i, %sub451.i, !dbg !3209
  %add453.i = add nsw i32 %392, %shr452.i, !dbg !3210
  %cmp454.i = icmp sgt i32 0, %add453.i, !dbg !3211
  br i1 %cmp454.i, label %cond.true456.i, label %cond.false461.i, !dbg !3212

cond.true456.i:                                   ; preds = %if.else449.i
  %395 = load i32, i32* %delta.i, align 4, !dbg !3213
  %396 = load i32, i32* %N.addr.i, align 4, !dbg !3215
  %shl457.i = shl i32 %396, 3, !dbg !3216
  %397 = load i32, i32* %duration.addr.i, align 4, !dbg !3217
  %sub458.i = sub nsw i32 5, %397, !dbg !3218
  %shr459.i = ashr i32 %shl457.i, %sub458.i, !dbg !3219
  %add460.i = add nsw i32 %395, %shr459.i, !dbg !3220
  br label %cond.end462.i, !dbg !3221

cond.false461.i:                                  ; preds = %if.else449.i
  br label %cond.end462.i, !dbg !3222

cond.end462.i:                                    ; preds = %cond.false461.i, %cond.true456.i
  %cond463.i = phi i32 [ %add460.i, %cond.true456.i ], [ 0, %cond.false461.i ], !dbg !3224
  store i32 %cond463.i, i32* %delta.i, align 4, !dbg !3226
  br label %if.end464.i, !dbg !2339

if.end464.i:                                      ; preds = %cond.end462.i, %if.then445.i
  br label %if.end465.i, !dbg !3227

if.end465.i:                                      ; preds = %if.end464.i, %land.lhs.true439.i, %land.lhs.true437.i, %if.else429.i
  %398 = load i32, i32* %b.addr.i, align 4, !dbg !3228
  %399 = load i32, i32* %delta.i, align 4, !dbg !3229
  %sub466.i = sub nsw i32 %398, %399, !dbg !3230
  %div467.i = sdiv i32 %sub466.i, 2, !dbg !3231
  %400 = load i32, i32* %b.addr.i, align 4, !dbg !3232
  store i32 %div467.i, i32* %a.addr.i760.i, align 4, !dbg !3233
  store i32 0, i32* %amin.addr.i.i, align 4, !dbg !3233
  store i32 %400, i32* %amax.addr.i.i, align 4, !dbg !3233
  %401 = load i32, i32* %a.addr.i760.i, align 4, !dbg !3234
  %402 = load i32, i32* %amin.addr.i.i, align 4, !dbg !3236
  %cmp.i761.i = icmp slt i32 %401, %402, !dbg !3237
  br i1 %cmp.i761.i, label %if.then.i.i, label %if.else.i.i, !dbg !3238

if.then.i.i:                                      ; preds = %if.end465.i
  %403 = load i32, i32* %amin.addr.i.i, align 4, !dbg !3239
  store i32 %403, i32* %retval.i.i, align 4, !dbg !3241
  br label %av_clip_c.exit.i, !dbg !3241

if.else.i.i:                                      ; preds = %if.end465.i
  %404 = load i32, i32* %a.addr.i760.i, align 4, !dbg !3242
  %405 = load i32, i32* %amax.addr.i.i, align 4, !dbg !3244
  %cmp1.i.i = icmp sgt i32 %404, %405, !dbg !3245
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.else3.i.i, !dbg !3246

if.then2.i.i:                                     ; preds = %if.else.i.i
  %406 = load i32, i32* %amax.addr.i.i, align 4, !dbg !3247
  store i32 %406, i32* %retval.i.i, align 4, !dbg !3249
  br label %av_clip_c.exit.i, !dbg !3249

if.else3.i.i:                                     ; preds = %if.else.i.i
  %407 = load i32, i32* %a.addr.i760.i, align 4, !dbg !3250
  store i32 %407, i32* %retval.i.i, align 4, !dbg !3251
  br label %av_clip_c.exit.i, !dbg !3251

av_clip_c.exit.i:                                 ; preds = %if.else3.i.i, %if.then2.i.i, %if.then.i.i
  %408 = load i32, i32* %retval.i.i, align 4, !dbg !3252
  store i32 %408, i32* %mbits.i, align 4, !dbg !3253
  %409 = load i32, i32* %b.addr.i, align 4, !dbg !3254
  %410 = load i32, i32* %mbits.i, align 4, !dbg !3255
  %sub469.i = sub nsw i32 %409, %410, !dbg !3256
  store i32 %sub469.i, i32* %sbits.i, align 4, !dbg !3257
  %411 = load i32, i32* %qalloc.i, align 4, !dbg !3258
  %412 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3259
  %remaining2470.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %412, i32 0, i32 35, !dbg !3260
  %413 = load i32, i32* %remaining2470.i, align 4, !dbg !3261
  %sub471.i = sub nsw i32 %413, %411, !dbg !3261
  store i32 %sub471.i, i32* %remaining2470.i, align 4, !dbg !3261
  %414 = load float*, float** %lowband.addr.i, align 8, !dbg !3262
  %tobool472.i = icmp ne float* %414, null, !dbg !3262
  br i1 %tobool472.i, label %land.lhs.true473.i, label %if.end478.i, !dbg !3264

land.lhs.true473.i:                               ; preds = %av_clip_c.exit.i
  %415 = load i32, i32* %stereo.i, align 4, !dbg !3265
  %tobool474.i = icmp ne i32 %415, 0, !dbg !3265
  br i1 %tobool474.i, label %if.end478.i, label %if.then475.i, !dbg !3267

if.then475.i:                                     ; preds = %land.lhs.true473.i
  %416 = load float*, float** %lowband.addr.i, align 8, !dbg !3268
  %417 = load i32, i32* %N.addr.i, align 4, !dbg !3269
  %idx.ext476.i = sext i32 %417 to i64, !dbg !3270
  %add.ptr477.i = getelementptr inbounds float, float* %416, i64 %idx.ext476.i, !dbg !3270
  store float* %add.ptr477.i, float** %next_lowband2.i, align 8, !dbg !3271
  br label %if.end478.i, !dbg !3272

if.end478.i:                                      ; preds = %if.then475.i, %land.lhs.true473.i, %av_clip_c.exit.i
  %418 = load i32, i32* %stereo.i, align 4, !dbg !3273
  %tobool479.i = icmp ne i32 %418, 0, !dbg !3273
  br i1 %tobool479.i, label %if.then480.i, label %if.else481.i, !dbg !3275

if.then480.i:                                     ; preds = %if.end478.i
  %419 = load float*, float** %lowband_out.addr.i, align 8, !dbg !3276
  store float* %419, float** %next_lowband_out1.i, align 8, !dbg !3277
  br label %if.end483.i, !dbg !3278

if.else481.i:                                     ; preds = %if.end478.i
  %420 = load i32, i32* %level.addr.i, align 4, !dbg !3279
  %add482.i = add nsw i32 %420, 1, !dbg !3280
  store i32 %add482.i, i32* %next_level.i, align 4, !dbg !3281
  br label %if.end483.i, !dbg !2339

if.end483.i:                                      ; preds = %if.else481.i, %if.then480.i
  %421 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3282
  %remaining2484.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %421, i32 0, i32 35, !dbg !3283
  %422 = load i32, i32* %remaining2484.i, align 4, !dbg !3283
  store i32 %422, i32* %rebalance.i, align 4, !dbg !3284
  %423 = load i32, i32* %mbits.i, align 4, !dbg !3285
  %424 = load i32, i32* %sbits.i, align 4, !dbg !3287
  %cmp485.i = icmp sge i32 %423, %424, !dbg !3288
  br i1 %cmp485.i, label %if.then487.i, label %if.else517.i, !dbg !3289

if.then487.i:                                     ; preds = %if.end483.i
  %425 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3290
  %quant_band488.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %425, i32 0, i32 3, !dbg !3292
  %426 = load i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)*, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)** %quant_band488.i, align 8, !dbg !3292
  %427 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3293
  %428 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3294
  %429 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !3295
  %430 = load i32, i32* %band.addr.i, align 4, !dbg !3296
  %431 = load float*, float** %X.addr.i, align 8, !dbg !3297
  %432 = load i32, i32* %N.addr.i, align 4, !dbg !3298
  %433 = load i32, i32* %mbits.i, align 4, !dbg !3299
  %434 = load i32, i32* %blocks.addr.i, align 4, !dbg !3300
  %435 = load float*, float** %lowband.addr.i, align 8, !dbg !3301
  %436 = load i32, i32* %duration.addr.i, align 4, !dbg !3302
  %437 = load float*, float** %next_lowband_out1.i, align 8, !dbg !3303
  %438 = load i32, i32* %next_level.i, align 4, !dbg !3304
  %439 = load i32, i32* %stereo.i, align 4, !dbg !3305
  %tobool489.i = icmp ne i32 %439, 0, !dbg !3305
  br i1 %tobool489.i, label %cond.true490.i, label %cond.false491.i, !dbg !3305

cond.true490.i:                                   ; preds = %if.then487.i
  br label %cond.end493.i, !dbg !3306

cond.false491.i:                                  ; preds = %if.then487.i
  %440 = load float, float* %gain.addr.i, align 4, !dbg !3308
  %441 = load float, float* %mid.i, align 4, !dbg !3310
  %mul492.i = fmul float %440, %441, !dbg !3311
  br label %cond.end493.i, !dbg !3312

cond.end493.i:                                    ; preds = %cond.false491.i, %cond.true490.i
  %cond494.i = phi float [ 1.000000e+00, %cond.true490.i ], [ %mul492.i, %cond.false491.i ], !dbg !3313
  %442 = load float*, float** %lowband_scratch.addr.i, align 8, !dbg !3315
  %443 = load i32, i32* %fill.addr.i, align 4, !dbg !3316
  %call495.i = call i32 %426(%struct.CeltPVQ* %427, %struct.CeltFrame* %428, %struct.OpusRangeCoder* %429, i32 %430, float* %431, float* null, i32 %432, i32 %433, i32 %434, float* %435, i32 %436, float* %437, i32 %438, float %cond494.i, float* %442, i32 %443) #7, !dbg !3317
  store i32 %call495.i, i32* %cm.i, align 4, !dbg !3318
  %444 = load i32, i32* %mbits.i, align 4, !dbg !3319
  %445 = load i32, i32* %rebalance.i, align 4, !dbg !3320
  %446 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3321
  %remaining2496.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %446, i32 0, i32 35, !dbg !3322
  %447 = load i32, i32* %remaining2496.i, align 4, !dbg !3322
  %sub497.i = sub nsw i32 %445, %447, !dbg !3323
  %sub498.i = sub nsw i32 %444, %sub497.i, !dbg !3324
  store i32 %sub498.i, i32* %rebalance.i, align 4, !dbg !3325
  %448 = load i32, i32* %rebalance.i, align 4, !dbg !3326
  %cmp499.i = icmp sgt i32 %448, 24, !dbg !3328
  br i1 %cmp499.i, label %land.lhs.true501.i, label %if.end507.i, !dbg !3329

land.lhs.true501.i:                               ; preds = %cond.end493.i
  %449 = load i32, i32* %itheta.i, align 4, !dbg !3330
  %cmp502.i = icmp ne i32 %449, 0, !dbg !3332
  br i1 %cmp502.i, label %if.then504.i, label %if.end507.i, !dbg !3333

if.then504.i:                                     ; preds = %land.lhs.true501.i
  %450 = load i32, i32* %rebalance.i, align 4, !dbg !3334
  %sub505.i = sub nsw i32 %450, 24, !dbg !3335
  %451 = load i32, i32* %sbits.i, align 4, !dbg !3336
  %add506.i = add nsw i32 %451, %sub505.i, !dbg !3336
  store i32 %add506.i, i32* %sbits.i, align 4, !dbg !3336
  br label %if.end507.i, !dbg !3337

if.end507.i:                                      ; preds = %if.then504.i, %land.lhs.true501.i, %cond.end493.i
  %452 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3338
  %quant_band508.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %452, i32 0, i32 3, !dbg !3339
  %453 = load i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)*, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)** %quant_band508.i, align 8, !dbg !3339
  %454 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3340
  %455 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3341
  %456 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !3342
  %457 = load i32, i32* %band.addr.i, align 4, !dbg !3343
  %458 = load float*, float** %Y.addr.i, align 8, !dbg !3344
  %459 = load i32, i32* %N.addr.i, align 4, !dbg !3345
  %460 = load i32, i32* %sbits.i, align 4, !dbg !3346
  %461 = load i32, i32* %blocks.addr.i, align 4, !dbg !3347
  %462 = load float*, float** %next_lowband2.i, align 8, !dbg !3348
  %463 = load i32, i32* %duration.addr.i, align 4, !dbg !3349
  %464 = load i32, i32* %next_level.i, align 4, !dbg !3350
  %465 = load float, float* %gain.addr.i, align 4, !dbg !3351
  %466 = load float, float* %side.i, align 4, !dbg !3352
  %mul509.i = fmul float %465, %466, !dbg !3353
  %467 = load i32, i32* %fill.addr.i, align 4, !dbg !3354
  %468 = load i32, i32* %blocks.addr.i, align 4, !dbg !3355
  %shr510.i = ashr i32 %467, %468, !dbg !3356
  %call511.i = call i32 %453(%struct.CeltPVQ* %454, %struct.CeltFrame* %455, %struct.OpusRangeCoder* %456, i32 %457, float* %458, float* null, i32 %459, i32 %460, i32 %461, float* %462, i32 %463, float* null, i32 %464, float %mul509.i, float* null, i32 %shr510.i) #7, !dbg !3338
  store i32 %call511.i, i32* %cmt.i, align 4, !dbg !3357
  %469 = load i32, i32* %cmt.i, align 4, !dbg !3358
  %470 = load i32, i32* %B0.i, align 4, !dbg !3359
  %shr512.i = ashr i32 %470, 1, !dbg !3360
  %471 = load i32, i32* %stereo.i, align 4, !dbg !3361
  %sub513.i = sub nsw i32 %471, 1, !dbg !3362
  %and514.i = and i32 %shr512.i, %sub513.i, !dbg !3363
  %shl515.i = shl i32 %469, %and514.i, !dbg !3364
  %472 = load i32, i32* %cm.i, align 4, !dbg !3365
  %or516.i = or i32 %472, %shl515.i, !dbg !3365
  store i32 %or516.i, i32* %cm.i, align 4, !dbg !3365
  br label %if.end547.i, !dbg !3366

if.else517.i:                                     ; preds = %if.end483.i
  %473 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3367
  %quant_band518.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %473, i32 0, i32 3, !dbg !3369
  %474 = load i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)*, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)** %quant_band518.i, align 8, !dbg !3369
  %475 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3370
  %476 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3371
  %477 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !3372
  %478 = load i32, i32* %band.addr.i, align 4, !dbg !3373
  %479 = load float*, float** %Y.addr.i, align 8, !dbg !3374
  %480 = load i32, i32* %N.addr.i, align 4, !dbg !3375
  %481 = load i32, i32* %sbits.i, align 4, !dbg !3376
  %482 = load i32, i32* %blocks.addr.i, align 4, !dbg !3377
  %483 = load float*, float** %next_lowband2.i, align 8, !dbg !3378
  %484 = load i32, i32* %duration.addr.i, align 4, !dbg !3379
  %485 = load i32, i32* %next_level.i, align 4, !dbg !3380
  %486 = load float, float* %gain.addr.i, align 4, !dbg !3381
  %487 = load float, float* %side.i, align 4, !dbg !3382
  %mul519.i = fmul float %486, %487, !dbg !3383
  %488 = load i32, i32* %fill.addr.i, align 4, !dbg !3384
  %489 = load i32, i32* %blocks.addr.i, align 4, !dbg !3385
  %shr520.i = ashr i32 %488, %489, !dbg !3386
  %call521.i = call i32 %474(%struct.CeltPVQ* %475, %struct.CeltFrame* %476, %struct.OpusRangeCoder* %477, i32 %478, float* %479, float* null, i32 %480, i32 %481, i32 %482, float* %483, i32 %484, float* null, i32 %485, float %mul519.i, float* null, i32 %shr520.i) #7, !dbg !3367
  store i32 %call521.i, i32* %cm.i, align 4, !dbg !3387
  %490 = load i32, i32* %B0.i, align 4, !dbg !3388
  %shr522.i = ashr i32 %490, 1, !dbg !3389
  %491 = load i32, i32* %stereo.i, align 4, !dbg !3390
  %sub523.i = sub nsw i32 %491, 1, !dbg !3391
  %and524.i = and i32 %shr522.i, %sub523.i, !dbg !3392
  %492 = load i32, i32* %cm.i, align 4, !dbg !3393
  %shl525.i = shl i32 %492, %and524.i, !dbg !3393
  store i32 %shl525.i, i32* %cm.i, align 4, !dbg !3393
  %493 = load i32, i32* %sbits.i, align 4, !dbg !3394
  %494 = load i32, i32* %rebalance.i, align 4, !dbg !3395
  %495 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3396
  %remaining2526.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %495, i32 0, i32 35, !dbg !3397
  %496 = load i32, i32* %remaining2526.i, align 4, !dbg !3397
  %sub527.i = sub nsw i32 %494, %496, !dbg !3398
  %sub528.i = sub nsw i32 %493, %sub527.i, !dbg !3399
  store i32 %sub528.i, i32* %rebalance.i, align 4, !dbg !3400
  %497 = load i32, i32* %rebalance.i, align 4, !dbg !3401
  %cmp529.i = icmp sgt i32 %497, 24, !dbg !3403
  br i1 %cmp529.i, label %land.lhs.true531.i, label %if.end537.i, !dbg !3404

land.lhs.true531.i:                               ; preds = %if.else517.i
  %498 = load i32, i32* %itheta.i, align 4, !dbg !3405
  %cmp532.i = icmp ne i32 %498, 16384, !dbg !3407
  br i1 %cmp532.i, label %if.then534.i, label %if.end537.i, !dbg !3408

if.then534.i:                                     ; preds = %land.lhs.true531.i
  %499 = load i32, i32* %rebalance.i, align 4, !dbg !3409
  %sub535.i = sub nsw i32 %499, 24, !dbg !3410
  %500 = load i32, i32* %mbits.i, align 4, !dbg !3411
  %add536.i = add nsw i32 %500, %sub535.i, !dbg !3411
  store i32 %add536.i, i32* %mbits.i, align 4, !dbg !3411
  br label %if.end537.i, !dbg !3412

if.end537.i:                                      ; preds = %if.then534.i, %land.lhs.true531.i, %if.else517.i
  %501 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3413
  %quant_band538.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %501, i32 0, i32 3, !dbg !3414
  %502 = load i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)*, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)** %quant_band538.i, align 8, !dbg !3414
  %503 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3415
  %504 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3416
  %505 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !3417
  %506 = load i32, i32* %band.addr.i, align 4, !dbg !3418
  %507 = load float*, float** %X.addr.i, align 8, !dbg !3419
  %508 = load i32, i32* %N.addr.i, align 4, !dbg !3420
  %509 = load i32, i32* %mbits.i, align 4, !dbg !3421
  %510 = load i32, i32* %blocks.addr.i, align 4, !dbg !3422
  %511 = load float*, float** %lowband.addr.i, align 8, !dbg !3423
  %512 = load i32, i32* %duration.addr.i, align 4, !dbg !3424
  %513 = load float*, float** %next_lowband_out1.i, align 8, !dbg !3425
  %514 = load i32, i32* %next_level.i, align 4, !dbg !3426
  %515 = load i32, i32* %stereo.i, align 4, !dbg !3427
  %tobool539.i = icmp ne i32 %515, 0, !dbg !3427
  br i1 %tobool539.i, label %cond.true540.i, label %cond.false541.i, !dbg !3427

cond.true540.i:                                   ; preds = %if.end537.i
  br label %cond.end543.i, !dbg !3428

cond.false541.i:                                  ; preds = %if.end537.i
  %516 = load float, float* %gain.addr.i, align 4, !dbg !3430
  %517 = load float, float* %mid.i, align 4, !dbg !3432
  %mul542.i = fmul float %516, %517, !dbg !3433
  br label %cond.end543.i, !dbg !3434

cond.end543.i:                                    ; preds = %cond.false541.i, %cond.true540.i
  %cond544.i = phi float [ 1.000000e+00, %cond.true540.i ], [ %mul542.i, %cond.false541.i ], !dbg !3435
  %518 = load float*, float** %lowband_scratch.addr.i, align 8, !dbg !3437
  %519 = load i32, i32* %fill.addr.i, align 4, !dbg !3438
  %call545.i = call i32 %502(%struct.CeltPVQ* %503, %struct.CeltFrame* %504, %struct.OpusRangeCoder* %505, i32 %506, float* %507, float* null, i32 %508, i32 %509, i32 %510, float* %511, i32 %512, float* %513, i32 %514, float %cond544.i, float* %518, i32 %519) #7, !dbg !3439
  %520 = load i32, i32* %cm.i, align 4, !dbg !3440
  %or546.i = or i32 %520, %call545.i, !dbg !3440
  store i32 %or546.i, i32* %cm.i, align 4, !dbg !3440
  br label %if.end547.i, !dbg !2339

if.end547.i:                                      ; preds = %cond.end543.i, %if.end507.i
  br label %if.end548.i, !dbg !2339

if.end548.i:                                      ; preds = %if.end547.i, %if.end394.i
  br label %if.end647.i, !dbg !3441

if.else549.i:                                     ; preds = %if.end153.i
  %521 = load i8*, i8** %cache.i, align 8, !dbg !3442
  %522 = load i32, i32* %b.addr.i, align 4, !dbg !3443
  %call551.i = call i32 @celt_bits2pulses(i8* %521, i32 %522) #7, !dbg !3444
  store i32 %call551.i, i32* %q.i, align 4, !dbg !2280
  %523 = load i8*, i8** %cache.i, align 8, !dbg !3445
  %524 = load i32, i32* %q.i, align 4, !dbg !3446
  %call553.i = call i32 @celt_pulses2bits(i8* %523, i32 %524) #7, !dbg !3447
  store i32 %call553.i, i32* %curr_bits.i, align 4, !dbg !2282
  %525 = load i32, i32* %curr_bits.i, align 4, !dbg !3448
  %526 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3449
  %remaining2554.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %526, i32 0, i32 35, !dbg !3450
  %527 = load i32, i32* %remaining2554.i, align 4, !dbg !3451
  %sub555.i = sub i32 %527, %525, !dbg !3451
  store i32 %sub555.i, i32* %remaining2554.i, align 4, !dbg !3451
  br label %while.cond556.i, !dbg !3452

while.cond556.i:                                  ; preds = %while.body564.i, %if.else549.i
  %528 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3453
  %remaining2557.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %528, i32 0, i32 35, !dbg !3455
  %529 = load i32, i32* %remaining2557.i, align 4, !dbg !3455
  %cmp558.i = icmp slt i32 %529, 0, !dbg !3456
  br i1 %cmp558.i, label %land.rhs560.i, label %land.end563.i, !dbg !3457

land.rhs560.i:                                    ; preds = %while.cond556.i
  %530 = load i32, i32* %q.i, align 4, !dbg !3458
  %cmp561.i = icmp ugt i32 %530, 0, !dbg !3460
  br label %land.end563.i, !dbg !2339

land.end563.i:                                    ; preds = %land.rhs560.i, %while.cond556.i
  %531 = phi i1 [ false, %while.cond556.i ], [ %cmp561.i, %land.rhs560.i ], !dbg !2339
  br i1 %531, label %while.body564.i, label %while.end570.i, !dbg !3461

while.body564.i:                                  ; preds = %land.end563.i
  %532 = load i32, i32* %curr_bits.i, align 4, !dbg !3463
  %533 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3465
  %remaining2565.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %533, i32 0, i32 35, !dbg !3466
  %534 = load i32, i32* %remaining2565.i, align 4, !dbg !3467
  %add566.i = add i32 %534, %532, !dbg !3467
  store i32 %add566.i, i32* %remaining2565.i, align 4, !dbg !3467
  %535 = load i8*, i8** %cache.i, align 8, !dbg !3468
  %536 = load i32, i32* %q.i, align 4, !dbg !3469
  %dec.i = add i32 %536, -1, !dbg !3469
  store i32 %dec.i, i32* %q.i, align 4, !dbg !3469
  %call567.i = call i32 @celt_pulses2bits(i8* %535, i32 %dec.i) #7, !dbg !3470
  store i32 %call567.i, i32* %curr_bits.i, align 4, !dbg !3471
  %537 = load i32, i32* %curr_bits.i, align 4, !dbg !3472
  %538 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3473
  %remaining2568.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %538, i32 0, i32 35, !dbg !3474
  %539 = load i32, i32* %remaining2568.i, align 4, !dbg !3475
  %sub569.i = sub i32 %539, %537, !dbg !3475
  store i32 %sub569.i, i32* %remaining2568.i, align 4, !dbg !3475
  br label %while.cond556.i, !dbg !3476, !llvm.loop !3478

while.end570.i:                                   ; preds = %land.end563.i
  %540 = load i32, i32* %q.i, align 4, !dbg !3480
  %cmp571.i = icmp ne i32 %540, 0, !dbg !3481
  br i1 %cmp571.i, label %if.then573.i, label %if.else603.i, !dbg !3482

if.then573.i:                                     ; preds = %while.end570.i
  %541 = load i32, i32* %quant.addr.i, align 4, !dbg !3483
  %tobool574.i = icmp ne i32 %541, 0, !dbg !3483
  br i1 %tobool574.i, label %if.then575.i, label %if.else588.i, !dbg !3486

if.then575.i:                                     ; preds = %if.then573.i
  %542 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !3487
  %543 = load float*, float** %X.addr.i, align 8, !dbg !3489
  %544 = load i32, i32* %N.addr.i, align 4, !dbg !3490
  %545 = load i32, i32* %q.i, align 4, !dbg !3491
  %cmp576.i = icmp ult i32 %545, 8, !dbg !3492
  br i1 %cmp576.i, label %cond.true578.i, label %cond.false579.i, !dbg !3493

cond.true578.i:                                   ; preds = %if.then575.i
  %546 = load i32, i32* %q.i, align 4, !dbg !3494
  br label %cond.end585.i, !dbg !3496

cond.false579.i:                                  ; preds = %if.then575.i
  %547 = load i32, i32* %q.i, align 4, !dbg !3497
  %and580.i = and i32 %547, 7, !dbg !3499
  %add581.i = add i32 8, %and580.i, !dbg !3500
  %548 = load i32, i32* %q.i, align 4, !dbg !3501
  %shr582.i = lshr i32 %548, 3, !dbg !3502
  %sub583.i = sub i32 %shr582.i, 1, !dbg !3503
  %shl584.i = shl i32 %add581.i, %sub583.i, !dbg !3504
  br label %cond.end585.i, !dbg !3505

cond.end585.i:                                    ; preds = %cond.false579.i, %cond.true578.i
  %cond586.i = phi i32 [ %546, %cond.true578.i ], [ %shl584.i, %cond.false579.i ], !dbg !3506
  %549 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3508
  %spread.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %549, i32 0, i32 28, !dbg !3509
  %550 = load i32, i32* %spread.i, align 16, !dbg !3509
  %551 = load i32, i32* %blocks.addr.i, align 4, !dbg !3510
  %552 = load float, float* %gain.addr.i, align 4, !dbg !3511
  %553 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3512
  %call587.i = call i32 @celt_alg_quant(%struct.OpusRangeCoder* %542, float* %543, i32 %544, i32 %cond586.i, i32 %550, i32 %551, float %552, %struct.CeltPVQ* %553) #7, !dbg !3513
  store i32 %call587.i, i32* %cm.i, align 4, !dbg !3514
  br label %if.end602.i, !dbg !3515

if.else588.i:                                     ; preds = %if.then573.i
  %554 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !3516
  %555 = load float*, float** %X.addr.i, align 8, !dbg !3518
  %556 = load i32, i32* %N.addr.i, align 4, !dbg !3519
  %557 = load i32, i32* %q.i, align 4, !dbg !3520
  %cmp589.i = icmp ult i32 %557, 8, !dbg !3521
  br i1 %cmp589.i, label %cond.true591.i, label %cond.false592.i, !dbg !3522

cond.true591.i:                                   ; preds = %if.else588.i
  %558 = load i32, i32* %q.i, align 4, !dbg !3523
  br label %cond.end598.i, !dbg !3525

cond.false592.i:                                  ; preds = %if.else588.i
  %559 = load i32, i32* %q.i, align 4, !dbg !3526
  %and593.i = and i32 %559, 7, !dbg !3528
  %add594.i = add i32 8, %and593.i, !dbg !3529
  %560 = load i32, i32* %q.i, align 4, !dbg !3530
  %shr595.i = lshr i32 %560, 3, !dbg !3531
  %sub596.i = sub i32 %shr595.i, 1, !dbg !3532
  %shl597.i = shl i32 %add594.i, %sub596.i, !dbg !3533
  br label %cond.end598.i, !dbg !3534

cond.end598.i:                                    ; preds = %cond.false592.i, %cond.true591.i
  %cond599.i = phi i32 [ %558, %cond.true591.i ], [ %shl597.i, %cond.false592.i ], !dbg !3535
  %561 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3537
  %spread600.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %561, i32 0, i32 28, !dbg !3538
  %562 = load i32, i32* %spread600.i, align 16, !dbg !3538
  %563 = load i32, i32* %blocks.addr.i, align 4, !dbg !3539
  %564 = load float, float* %gain.addr.i, align 4, !dbg !3540
  %565 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3541
  %call601.i = call i32 @celt_alg_unquant(%struct.OpusRangeCoder* %554, float* %555, i32 %556, i32 %cond599.i, i32 %562, i32 %563, float %564, %struct.CeltPVQ* %565) #7, !dbg !3542
  store i32 %call601.i, i32* %cm.i, align 4, !dbg !3543
  br label %if.end602.i, !dbg !2339

if.end602.i:                                      ; preds = %cond.end598.i, %cond.end585.i
  br label %if.end646.i, !dbg !3544

if.else603.i:                                     ; preds = %while.end570.i
  %566 = load i32, i32* %blocks.addr.i, align 4, !dbg !3545
  %shl605.i = shl i32 1, %566, !dbg !3546
  %sub606.i = sub nsw i32 %shl605.i, 1, !dbg !3547
  store i32 %sub606.i, i32* %cm_mask.i, align 4, !dbg !2284
  %567 = load i32, i32* %cm_mask.i, align 4, !dbg !3548
  %568 = load i32, i32* %fill.addr.i, align 4, !dbg !3549
  %and607.i = and i32 %568, %567, !dbg !3549
  store i32 %and607.i, i32* %fill.addr.i, align 4, !dbg !3549
  %569 = load i32, i32* %fill.addr.i, align 4, !dbg !3550
  %tobool608.i = icmp ne i32 %569, 0, !dbg !3550
  br i1 %tobool608.i, label %if.then609.i, label %if.else642.i, !dbg !3551

if.then609.i:                                     ; preds = %if.else603.i
  %570 = load float*, float** %lowband.addr.i, align 8, !dbg !3552
  %tobool610.i = icmp ne float* %570, null, !dbg !3552
  br i1 %tobool610.i, label %if.else624.i, label %if.then611.i, !dbg !3553

if.then611.i:                                     ; preds = %if.then609.i
  store i32 0, i32* %i.i, align 4, !dbg !3554
  br label %for.cond612.i, !dbg !3555

for.cond612.i:                                    ; preds = %for.body615.i, %if.then611.i
  %571 = load i32, i32* %i.i, align 4, !dbg !3556
  %572 = load i32, i32* %N.addr.i, align 4, !dbg !3558
  %cmp613.i = icmp slt i32 %571, %572, !dbg !3559
  br i1 %cmp613.i, label %for.body615.i, label %for.end623.i, !dbg !3560

for.body615.i:                                    ; preds = %for.cond612.i
  %573 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3561
  store %struct.CeltFrame* %573, %struct.CeltFrame** %f.addr.i.i, align 8, !dbg !3562
  %574 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i.i, align 8, !dbg !3563
  %seed.i.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %574, i32 0, i32 27, !dbg !3564
  %575 = load i32, i32* %seed.i.i, align 4, !dbg !3564
  %mul.i762.i = mul i32 1664525, %575, !dbg !3565
  %add.i763.i = add i32 %mul.i762.i, 1013904223, !dbg !3566
  %576 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i.i, align 8, !dbg !3567
  %seed1.i.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %576, i32 0, i32 27, !dbg !3568
  store i32 %add.i763.i, i32* %seed1.i.i, align 4, !dbg !3569
  %577 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i.i, align 8, !dbg !3570
  %seed2.i.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %577, i32 0, i32 27, !dbg !3571
  %578 = load i32, i32* %seed2.i.i, align 4, !dbg !3571
  %shr617.i = ashr i32 %578, 20, !dbg !3572
  %conv618.i = sitofp i32 %shr617.i to float, !dbg !3573
  %579 = load i32, i32* %i.i, align 4, !dbg !3574
  %idxprom619.i = sext i32 %579 to i64, !dbg !3575
  %580 = load float*, float** %X.addr.i, align 8, !dbg !3575
  %arrayidx620.i = getelementptr inbounds float, float* %580, i64 %idxprom619.i, !dbg !3575
  store float %conv618.i, float* %arrayidx620.i, align 4, !dbg !3576
  %581 = load i32, i32* %i.i, align 4, !dbg !3577
  %inc622.i = add nsw i32 %581, 1, !dbg !3577
  store i32 %inc622.i, i32* %i.i, align 4, !dbg !3577
  br label %for.cond612.i, !dbg !3579, !llvm.loop !3580

for.end623.i:                                     ; preds = %for.cond612.i
  %582 = load i32, i32* %cm_mask.i, align 4, !dbg !3582
  store i32 %582, i32* %cm.i, align 4, !dbg !3583
  br label %if.end641.i, !dbg !3584

if.else624.i:                                     ; preds = %if.then609.i
  store i32 0, i32* %i.i, align 4, !dbg !3585
  br label %for.cond625.i, !dbg !3586

for.cond625.i:                                    ; preds = %for.body628.i, %if.else624.i
  %583 = load i32, i32* %i.i, align 4, !dbg !3587
  %584 = load i32, i32* %N.addr.i, align 4, !dbg !3589
  %cmp626.i = icmp slt i32 %583, %584, !dbg !3590
  br i1 %cmp626.i, label %for.body628.i, label %for.end640.i, !dbg !3591

for.body628.i:                                    ; preds = %for.cond625.i
  %585 = load i32, i32* %i.i, align 4, !dbg !3592
  %idxprom629.i = sext i32 %585 to i64, !dbg !3593
  %586 = load float*, float** %lowband.addr.i, align 8, !dbg !3593
  %arrayidx630.i = getelementptr inbounds float, float* %586, i64 %idxprom629.i, !dbg !3593
  %587 = load float, float* %arrayidx630.i, align 4, !dbg !3593
  %588 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3594
  store %struct.CeltFrame* %588, %struct.CeltFrame** %f.addr.i771.i, align 8, !dbg !3595
  %589 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i771.i, align 8, !dbg !3596
  %seed.i772.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %589, i32 0, i32 27, !dbg !3597
  %590 = load i32, i32* %seed.i772.i, align 4, !dbg !3597
  %mul.i773.i = mul i32 1664525, %590, !dbg !3598
  %add.i774.i = add i32 %mul.i773.i, 1013904223, !dbg !3599
  %591 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i771.i, align 8, !dbg !3600
  %seed1.i775.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %591, i32 0, i32 27, !dbg !3601
  store i32 %add.i774.i, i32* %seed1.i775.i, align 4, !dbg !3602
  %592 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i771.i, align 8, !dbg !3603
  %seed2.i776.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %592, i32 0, i32 27, !dbg !3604
  %593 = load i32, i32* %seed2.i776.i, align 4, !dbg !3604
  %and632.i = and i32 %593, 32768, !dbg !3605
  %tobool633.i = icmp ne i32 %and632.i, 0, !dbg !3606
  %cond634.i = select i1 %tobool633.i, float 3.906250e-03, float -3.906250e-03, !dbg !3606
  %add635.i = fadd float %587, %cond634.i, !dbg !3607
  %594 = load i32, i32* %i.i, align 4, !dbg !3608
  %idxprom636.i = sext i32 %594 to i64, !dbg !3609
  %595 = load float*, float** %X.addr.i, align 8, !dbg !3609
  %arrayidx637.i = getelementptr inbounds float, float* %595, i64 %idxprom636.i, !dbg !3609
  store float %add635.i, float* %arrayidx637.i, align 4, !dbg !3610
  %596 = load i32, i32* %i.i, align 4, !dbg !3611
  %inc639.i = add nsw i32 %596, 1, !dbg !3611
  store i32 %inc639.i, i32* %i.i, align 4, !dbg !3611
  br label %for.cond625.i, !dbg !3613, !llvm.loop !3614

for.end640.i:                                     ; preds = %for.cond625.i
  %597 = load i32, i32* %fill.addr.i, align 4, !dbg !3616
  store i32 %597, i32* %cm.i, align 4, !dbg !3617
  br label %if.end641.i, !dbg !2339

if.end641.i:                                      ; preds = %for.end640.i, %for.end623.i
  %598 = load float*, float** %X.addr.i, align 8, !dbg !3618
  %599 = load i32, i32* %N.addr.i, align 4, !dbg !3619
  %600 = load float, float* %gain.addr.i, align 4, !dbg !3620
  store float* %598, float** %X.addr.i.i, align 8, !dbg !3621
  store i32 %599, i32* %N.addr.i.i, align 4, !dbg !3621
  store float %600, float* %gain.addr.i.i, align 4, !dbg !3621
  store float 0x3CD203AFA0000000, float* %g.i.i, align 4, !dbg !2091
  store i32 0, i32* %i.i764.i, align 4, !dbg !3622
  br label %for.cond.i766.i, !dbg !3624

for.cond.i766.i:                                  ; preds = %for.body.i769.i, %if.end641.i
  %601 = load i32, i32* %i.i764.i, align 4, !dbg !3625
  %602 = load i32, i32* %N.addr.i.i, align 4, !dbg !3628
  %cmp.i765.i = icmp slt i32 %601, %602, !dbg !3629
  br i1 %cmp.i765.i, label %for.body.i769.i, label %for.end.i.i, !dbg !3630

for.body.i769.i:                                  ; preds = %for.cond.i766.i
  %603 = load i32, i32* %i.i764.i, align 4, !dbg !3631
  %idxprom.i.i = sext i32 %603 to i64, !dbg !3632
  %604 = load float*, float** %X.addr.i.i, align 8, !dbg !3632
  %arrayidx.i.i = getelementptr inbounds float, float* %604, i64 %idxprom.i.i, !dbg !3632
  %605 = load float, float* %arrayidx.i.i, align 4, !dbg !3632
  %606 = load i32, i32* %i.i764.i, align 4, !dbg !3633
  %idxprom1.i.i = sext i32 %606 to i64, !dbg !3634
  %607 = load float*, float** %X.addr.i.i, align 8, !dbg !3634
  %arrayidx2.i.i = getelementptr inbounds float, float* %607, i64 %idxprom1.i.i, !dbg !3634
  %608 = load float, float* %arrayidx2.i.i, align 4, !dbg !3634
  %mul.i767.i = fmul float %605, %608, !dbg !3635
  %609 = load float, float* %g.i.i, align 4, !dbg !3636
  %add.i768.i = fadd float %609, %mul.i767.i, !dbg !3636
  store float %add.i768.i, float* %g.i.i, align 4, !dbg !3636
  %610 = load i32, i32* %i.i764.i, align 4, !dbg !3637
  %inc.i770.i = add nsw i32 %610, 1, !dbg !3637
  store i32 %inc.i770.i, i32* %i.i764.i, align 4, !dbg !3637
  br label %for.cond.i766.i, !dbg !3639, !llvm.loop !3640

for.end.i.i:                                      ; preds = %for.cond.i766.i
  %611 = load float, float* %gain.addr.i.i, align 4, !dbg !3642
  %612 = load float, float* %g.i.i, align 4, !dbg !3643
  %call.i.i = call float @sqrtf(float %612) #7, !dbg !3644
  %div.i.i = fdiv float %611, %call.i.i, !dbg !3645
  store float %div.i.i, float* %g.i.i, align 4, !dbg !3646
  store i32 0, i32* %i.i764.i, align 4, !dbg !3647
  br label %for.cond3.i.i, !dbg !3649

for.cond3.i.i:                                    ; preds = %for.body5.i.i, %for.end.i.i
  %613 = load i32, i32* %i.i764.i, align 4, !dbg !3650
  %614 = load i32, i32* %N.addr.i.i, align 4, !dbg !3653
  %cmp4.i.i = icmp slt i32 %613, %614, !dbg !3654
  br i1 %cmp4.i.i, label %for.body5.i.i, label %celt_renormalize_vector.exit.i, !dbg !3655

for.body5.i.i:                                    ; preds = %for.cond3.i.i
  %615 = load float, float* %g.i.i, align 4, !dbg !3656
  %616 = load i32, i32* %i.i764.i, align 4, !dbg !3657
  %idxprom6.i.i = sext i32 %616 to i64, !dbg !3658
  %617 = load float*, float** %X.addr.i.i, align 8, !dbg !3658
  %arrayidx7.i.i = getelementptr inbounds float, float* %617, i64 %idxprom6.i.i, !dbg !3658
  %618 = load float, float* %arrayidx7.i.i, align 4, !dbg !3659
  %mul8.i.i = fmul float %618, %615, !dbg !3659
  store float %mul8.i.i, float* %arrayidx7.i.i, align 4, !dbg !3659
  %619 = load i32, i32* %i.i764.i, align 4, !dbg !3660
  %inc10.i.i = add nsw i32 %619, 1, !dbg !3660
  store i32 %inc10.i.i, i32* %i.i764.i, align 4, !dbg !3660
  br label %for.cond3.i.i, !dbg !3662, !llvm.loop !3663

celt_renormalize_vector.exit.i:                   ; preds = %for.cond3.i.i
  br label %if.end645.i, !dbg !3665

if.else642.i:                                     ; preds = %if.else603.i
  %620 = load float*, float** %X.addr.i, align 8, !dbg !3666
  %621 = bitcast float* %620 to i8*, !dbg !3668
  %622 = load i32, i32* %N.addr.i, align 4, !dbg !3669
  %conv643.i = sext i32 %622 to i64, !dbg !3669
  %mul644.i = mul i64 %conv643.i, 4, !dbg !3670
  call void @llvm.memset.p0i8.i64(i8* %621, i8 0, i64 %mul644.i, i32 4, i1 false) #7, !dbg !3668
  br label %if.end645.i, !dbg !2339

if.end645.i:                                      ; preds = %if.else642.i, %celt_renormalize_vector.exit.i
  br label %if.end646.i, !dbg !2339

if.end646.i:                                      ; preds = %if.end645.i, %if.end602.i
  br label %if.end647.i, !dbg !2339

if.end647.i:                                      ; preds = %if.end646.i, %if.end548.i
  %623 = load i32, i32* %stereo.i, align 4, !dbg !3671
  %tobool648.i = icmp ne i32 %623, 0, !dbg !3671
  br i1 %tobool648.i, label %if.then649.i, label %if.else667.i, !dbg !3672

if.then649.i:                                     ; preds = %if.end647.i
  %624 = load i32, i32* %N.addr.i, align 4, !dbg !3673
  %cmp650.i = icmp sgt i32 %624, 2, !dbg !3676
  br i1 %cmp650.i, label %if.then652.i, label %if.end653.i, !dbg !3677

if.then652.i:                                     ; preds = %if.then649.i
  %625 = load float*, float** %X.addr.i, align 8, !dbg !3678
  %626 = load float*, float** %Y.addr.i, align 8, !dbg !3679
  %627 = load float, float* %mid.i, align 4, !dbg !3680
  %628 = load i32, i32* %N.addr.i, align 4, !dbg !3681
  call void @celt_stereo_merge(float* %625, float* %626, float %627, i32 %628) #7, !dbg !3682
  br label %if.end653.i, !dbg !3682

if.end653.i:                                      ; preds = %if.then652.i, %if.then649.i
  %629 = load i32, i32* %inv.i, align 4, !dbg !3683
  %tobool654.i = icmp ne i32 %629, 0, !dbg !3683
  br i1 %tobool654.i, label %if.then655.i, label %if.end666.i, !dbg !3685

if.then655.i:                                     ; preds = %if.end653.i
  store i32 0, i32* %i.i, align 4, !dbg !3686
  br label %for.cond656.i, !dbg !3689

for.cond656.i:                                    ; preds = %for.body659.i, %if.then655.i
  %630 = load i32, i32* %i.i, align 4, !dbg !3690
  %631 = load i32, i32* %N.addr.i, align 4, !dbg !3693
  %cmp657.i = icmp slt i32 %630, %631, !dbg !3694
  br i1 %cmp657.i, label %for.body659.i, label %for.end665.i, !dbg !3695

for.body659.i:                                    ; preds = %for.cond656.i
  %632 = load i32, i32* %i.i, align 4, !dbg !3696
  %idxprom660.i = sext i32 %632 to i64, !dbg !3697
  %633 = load float*, float** %Y.addr.i, align 8, !dbg !3697
  %arrayidx661.i = getelementptr inbounds float, float* %633, i64 %idxprom660.i, !dbg !3697
  %634 = load float, float* %arrayidx661.i, align 4, !dbg !3698
  %mul662.i = fmul float %634, -1.000000e+00, !dbg !3698
  store float %mul662.i, float* %arrayidx661.i, align 4, !dbg !3698
  %635 = load i32, i32* %i.i, align 4, !dbg !3699
  %inc664.i = add nsw i32 %635, 1, !dbg !3699
  store i32 %inc664.i, i32* %i.i, align 4, !dbg !3699
  br label %for.cond656.i, !dbg !3701, !llvm.loop !3702

for.end665.i:                                     ; preds = %for.cond656.i
  br label %if.end666.i, !dbg !3704

if.end666.i:                                      ; preds = %for.end665.i, %if.end653.i
  br label %if.end725.i, !dbg !3705

if.else667.i:                                     ; preds = %if.end647.i
  %636 = load i32, i32* %level.addr.i, align 4, !dbg !3706
  %cmp668.i = icmp eq i32 %636, 0, !dbg !3708
  br i1 %cmp668.i, label %if.then670.i, label %if.end724.i, !dbg !3706

if.then670.i:                                     ; preds = %if.else667.i
  %637 = load i32, i32* %B0.i, align 4, !dbg !3709
  %cmp673.i = icmp sgt i32 %637, 1, !dbg !3711
  br i1 %cmp673.i, label %if.then675.i, label %if.end680.i, !dbg !3712

if.then675.i:                                     ; preds = %if.then670.i
  %638 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3713
  %hadamard_tmp676.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %638, i32 0, i32 1, !dbg !3714
  %arraydecay677.i = getelementptr inbounds [256 x float], [256 x float]* %hadamard_tmp676.i, i32 0, i32 0, !dbg !3713
  %639 = load float*, float** %X.addr.i, align 8, !dbg !3715
  %640 = load i32, i32* %N_B.i, align 4, !dbg !3716
  %641 = load i32, i32* %recombine.i, align 4, !dbg !3717
  %shr678.i = ashr i32 %640, %641, !dbg !3718
  %642 = load i32, i32* %B0.i, align 4, !dbg !3719
  %643 = load i32, i32* %recombine.i, align 4, !dbg !3720
  %shl679.i = shl i32 %642, %643, !dbg !3721
  %644 = load i32, i32* %longblocks.i, align 4, !dbg !3722
  call void @celt_interleave_hadamard(float* %arraydecay677.i, float* %639, i32 %shr678.i, i32 %shl679.i, i32 %644) #7, !dbg !3723
  br label %if.end680.i, !dbg !3723

if.end680.i:                                      ; preds = %if.then675.i, %if.then670.i
  %645 = load i32, i32* %N_B0.i, align 4, !dbg !3724
  store i32 %645, i32* %N_B.i, align 4, !dbg !3725
  %646 = load i32, i32* %B0.i, align 4, !dbg !3726
  store i32 %646, i32* %blocks.addr.i, align 4, !dbg !3727
  store i32 0, i32* %k672.i, align 4, !dbg !3728
  br label %for.cond681.i, !dbg !3730

for.cond681.i:                                    ; preds = %for.body684.i, %if.end680.i
  %647 = load i32, i32* %k672.i, align 4, !dbg !3731
  %648 = load i32, i32* %time_divide.i, align 4, !dbg !3734
  %cmp682.i = icmp slt i32 %647, %648, !dbg !3735
  br i1 %cmp682.i, label %for.body684.i, label %for.end691.i, !dbg !3736

for.body684.i:                                    ; preds = %for.cond681.i
  %649 = load i32, i32* %blocks.addr.i, align 4, !dbg !3737
  %shr685.i = lshr i32 %649, 1, !dbg !3737
  store i32 %shr685.i, i32* %blocks.addr.i, align 4, !dbg !3737
  %650 = load i32, i32* %N_B.i, align 4, !dbg !3739
  %shl686.i = shl i32 %650, 1, !dbg !3739
  store i32 %shl686.i, i32* %N_B.i, align 4, !dbg !3739
  %651 = load i32, i32* %cm.i, align 4, !dbg !3740
  %652 = load i32, i32* %blocks.addr.i, align 4, !dbg !3741
  %shr687.i = lshr i32 %651, %652, !dbg !3742
  %653 = load i32, i32* %cm.i, align 4, !dbg !3743
  %or688.i = or i32 %653, %shr687.i, !dbg !3743
  store i32 %or688.i, i32* %cm.i, align 4, !dbg !3743
  %654 = load float*, float** %X.addr.i, align 8, !dbg !3744
  %655 = load i32, i32* %N_B.i, align 4, !dbg !3745
  %656 = load i32, i32* %blocks.addr.i, align 4, !dbg !3746
  call void @celt_haar1(float* %654, i32 %655, i32 %656) #7, !dbg !3747
  %657 = load i32, i32* %k672.i, align 4, !dbg !3748
  %inc690.i = add nsw i32 %657, 1, !dbg !3748
  store i32 %inc690.i, i32* %k672.i, align 4, !dbg !3748
  br label %for.cond681.i, !dbg !3750, !llvm.loop !3751

for.end691.i:                                     ; preds = %for.cond681.i
  store i32 0, i32* %k672.i, align 4, !dbg !3753
  br label %for.cond692.i, !dbg !3755

for.cond692.i:                                    ; preds = %for.body695.i, %for.end691.i
  %658 = load i32, i32* %k672.i, align 4, !dbg !3756
  %659 = load i32, i32* %recombine.i, align 4, !dbg !3759
  %cmp693.i = icmp slt i32 %658, %659, !dbg !3760
  br i1 %cmp693.i, label %for.body695.i, label %for.end703.i, !dbg !3761

for.body695.i:                                    ; preds = %for.cond692.i
  %660 = load i32, i32* %cm.i, align 4, !dbg !3762
  %idxprom696.i = zext i32 %660 to i64, !dbg !3764
  %arrayidx697.i = getelementptr inbounds [0 x i8], [0 x i8]* @ff_celt_bit_deinterleave, i64 0, i64 %idxprom696.i, !dbg !3764
  %661 = load i8, i8* %arrayidx697.i, align 1, !dbg !3764
  %conv698.i = zext i8 %661 to i32, !dbg !3764
  store i32 %conv698.i, i32* %cm.i, align 4, !dbg !3765
  %662 = load float*, float** %X.addr.i, align 8, !dbg !3766
  %663 = load i32, i32* %N0.i, align 4, !dbg !3767
  %664 = load i32, i32* %k672.i, align 4, !dbg !3768
  %shr699.i = lshr i32 %663, %664, !dbg !3769
  %665 = load i32, i32* %k672.i, align 4, !dbg !3770
  %shl700.i = shl i32 1, %665, !dbg !3771
  call void @celt_haar1(float* %662, i32 %shr699.i, i32 %shl700.i) #7, !dbg !3772
  %666 = load i32, i32* %k672.i, align 4, !dbg !3773
  %inc702.i = add nsw i32 %666, 1, !dbg !3773
  store i32 %inc702.i, i32* %k672.i, align 4, !dbg !3773
  br label %for.cond692.i, !dbg !3775, !llvm.loop !3776

for.end703.i:                                     ; preds = %for.cond692.i
  %667 = load i32, i32* %recombine.i, align 4, !dbg !3778
  %668 = load i32, i32* %blocks.addr.i, align 4, !dbg !3779
  %shl704.i = shl i32 %668, %667, !dbg !3779
  store i32 %shl704.i, i32* %blocks.addr.i, align 4, !dbg !3779
  %669 = load float*, float** %lowband_out.addr.i, align 8, !dbg !3780
  %tobool705.i = icmp ne float* %669, null, !dbg !3780
  br i1 %tobool705.i, label %if.then706.i, label %if.end722.i, !dbg !3781

if.then706.i:                                     ; preds = %for.end703.i
  %670 = load i32, i32* %N0.i, align 4, !dbg !3782
  %conv708.i = uitofp i32 %670 to float, !dbg !3782
  %call709.i = call float @sqrtf(float %conv708.i) #7, !dbg !3783
  store float %call709.i, float* %n.i, align 4, !dbg !2290
  store i32 0, i32* %i.i, align 4, !dbg !3784
  br label %for.cond710.i, !dbg !3786

for.cond710.i:                                    ; preds = %for.body713.i, %if.then706.i
  %671 = load i32, i32* %i.i, align 4, !dbg !3787
  %672 = load i32, i32* %N0.i, align 4, !dbg !3790
  %cmp711.i = icmp ult i32 %671, %672, !dbg !3791
  br i1 %cmp711.i, label %for.body713.i, label %for.end721.i, !dbg !3792

for.body713.i:                                    ; preds = %for.cond710.i
  %673 = load float, float* %n.i, align 4, !dbg !3793
  %674 = load i32, i32* %i.i, align 4, !dbg !3794
  %idxprom714.i = sext i32 %674 to i64, !dbg !3795
  %675 = load float*, float** %X.addr.i, align 8, !dbg !3795
  %arrayidx715.i = getelementptr inbounds float, float* %675, i64 %idxprom714.i, !dbg !3795
  %676 = load float, float* %arrayidx715.i, align 4, !dbg !3795
  %mul716.i = fmul float %673, %676, !dbg !3796
  %677 = load i32, i32* %i.i, align 4, !dbg !3797
  %idxprom717.i = sext i32 %677 to i64, !dbg !3798
  %678 = load float*, float** %lowband_out.addr.i, align 8, !dbg !3798
  %arrayidx718.i = getelementptr inbounds float, float* %678, i64 %idxprom717.i, !dbg !3798
  store float %mul716.i, float* %arrayidx718.i, align 4, !dbg !3799
  %679 = load i32, i32* %i.i, align 4, !dbg !3800
  %inc720.i = add nsw i32 %679, 1, !dbg !3800
  store i32 %inc720.i, i32* %i.i, align 4, !dbg !3800
  br label %for.cond710.i, !dbg !3802, !llvm.loop !3803

for.end721.i:                                     ; preds = %for.cond710.i
  br label %if.end722.i, !dbg !3805

if.end722.i:                                      ; preds = %for.end721.i, %for.end703.i
  %680 = load i32, i32* %cm.i, align 4, !dbg !3806
  %681 = load i32, i32* %blocks.addr.i, align 4, !dbg !3807
  store i32 %680, i32* %a.addr.i.i, align 4, !dbg !3808
  store i32 %681, i32* %p.addr.i.i, align 4, !dbg !3808
  %682 = load i32, i32* %a.addr.i.i, align 4, !dbg !3809
  %683 = load i32, i32* %p.addr.i.i, align 4, !dbg !3810
  %shl.i726.i = shl i32 1, %683, !dbg !3811
  %sub.i727.i = sub nsw i32 %shl.i726.i, 1, !dbg !3812
  %and.i.i = and i32 %682, %sub.i727.i, !dbg !3813
  store i32 %and.i.i, i32* %cm.i, align 4, !dbg !3814
  br label %if.end724.i, !dbg !3815

if.end724.i:                                      ; preds = %if.end722.i, %if.else667.i
  br label %if.end725.i, !dbg !2339

if.end725.i:                                      ; preds = %if.end724.i, %if.end666.i
  %684 = load i32, i32* %cm.i, align 4, !dbg !3816
  store i32 %684, i32* %retval.i, align 4, !dbg !3817
  br label %quant_band_template.exit, !dbg !3817

quant_band_template.exit:                         ; preds = %if.end22.i, %if.end725.i
  %685 = load i32, i32* %retval.i, align 4, !dbg !3818
  ret i32 %685, !dbg !3819
}

; Function Attrs: nounwind uwtable
define internal i32 @pvq_decode_band(%struct.CeltPVQ* %pvq, %struct.CeltFrame* %f, %struct.OpusRangeCoder* %rc, i32 %band, float* %X, float* %Y, i32 %N, i32 %b, i32 %blocks, float* %lowband, i32 %duration, float* %lowband_out, i32 %level, float %gain, float* %lowband_scratch, i32 %fill) #3 !dbg !3820 {
entry:
  %f.addr.i771.i = alloca %struct.CeltFrame*, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltFrame** %f.addr.i771.i, metadata !2057, metadata !1787), !dbg !3821
  %X.addr.i.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr.i.i, metadata !2078, metadata !1787), !dbg !3824
  %N.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr.i.i, metadata !2084, metadata !1787), !dbg !3826
  %gain.addr.i.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %gain.addr.i.i, metadata !2086, metadata !1787), !dbg !3827
  %i.i764.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i764.i, metadata !2088, metadata !1787), !dbg !3828
  %g.i.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %g.i.i, metadata !2090, metadata !1787), !dbg !3829
  %f.addr.i.i = alloca %struct.CeltFrame*, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltFrame** %f.addr.i.i, metadata !2057, metadata !1787), !dbg !3830
  %retval.i.i = alloca i32, align 4
  %a.addr.i760.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i760.i, metadata !2097, metadata !1787), !dbg !3832
  %amin.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i.i, metadata !2107, metadata !1787), !dbg !3834
  %amax.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i.i, metadata !2109, metadata !1787), !dbg !3835
  %a.addr.i755.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i755.i, metadata !2111, metadata !1787), !dbg !3836
  %p.addr.i756.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i756.i, metadata !2119, metadata !1787), !dbg !3838
  %rc.addr.i728.i = alloca %struct.OpusRangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.OpusRangeCoder** %rc.addr.i728.i, metadata !2121, metadata !1787), !dbg !3839
  %i.i729.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i729.i, metadata !2129, metadata !1787), !dbg !3841
  %total_bits.i730.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %total_bits.i730.i, metadata !2131, metadata !1787), !dbg !3842
  %rcbuffer.i731.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rcbuffer.i731.i, metadata !2133, metadata !1787), !dbg !3843
  %range.i732.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %range.i732.i, metadata !2135, metadata !1787), !dbg !3844
  %bit.i733.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.i733.i, metadata !2137, metadata !1787), !dbg !3845
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !2111, metadata !1787), !dbg !3846
  %p.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %p.addr.i.i, metadata !2119, metadata !1787), !dbg !3848
  %rc.addr.i.i = alloca %struct.OpusRangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.OpusRangeCoder** %rc.addr.i.i, metadata !2121, metadata !1787), !dbg !3849
  %i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i.i, metadata !2129, metadata !1787), !dbg !3851
  %total_bits.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %total_bits.i.i, metadata !2131, metadata !1787), !dbg !3852
  %rcbuffer.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rcbuffer.i.i, metadata !2133, metadata !1787), !dbg !3853
  %range.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %range.i.i, metadata !2135, metadata !1787), !dbg !3854
  %bit.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.i.i, metadata !2137, metadata !1787), !dbg !3855
  %retval.i = alloca i32, align 4
  %pvq.addr.i = alloca %struct.CeltPVQ*, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltPVQ** %pvq.addr.i, metadata !2155, metadata !1787), !dbg !3856
  %f.addr.i = alloca %struct.CeltFrame*, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltFrame** %f.addr.i, metadata !2157, metadata !1787), !dbg !3857
  %rc.addr.i = alloca %struct.OpusRangeCoder*, align 8
  call void @llvm.dbg.declare(metadata %struct.OpusRangeCoder** %rc.addr.i, metadata !2159, metadata !1787), !dbg !3858
  %band.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %band.addr.i, metadata !2161, metadata !1787), !dbg !3859
  %X.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr.i, metadata !2163, metadata !1787), !dbg !3860
  %Y.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %Y.addr.i, metadata !2165, metadata !1787), !dbg !3861
  %N.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr.i, metadata !2167, metadata !1787), !dbg !3862
  %b.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr.i, metadata !2169, metadata !1787), !dbg !3863
  %blocks.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %blocks.addr.i, metadata !2171, metadata !1787), !dbg !3864
  %lowband.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %lowband.addr.i, metadata !2173, metadata !1787), !dbg !3865
  %duration.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %duration.addr.i, metadata !2175, metadata !1787), !dbg !3866
  %lowband_out.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %lowband_out.addr.i, metadata !2177, metadata !1787), !dbg !3867
  %level.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr.i, metadata !2179, metadata !1787), !dbg !3868
  %gain.addr.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %gain.addr.i, metadata !2181, metadata !1787), !dbg !3869
  %lowband_scratch.addr.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %lowband_scratch.addr.i, metadata !2183, metadata !1787), !dbg !3870
  %fill.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %fill.addr.i, metadata !2185, metadata !1787), !dbg !3871
  %quant.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %quant.addr.i, metadata !2187, metadata !1787), !dbg !3872
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !2189, metadata !1787), !dbg !3873
  %cache.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %cache.i, metadata !2191, metadata !1787), !dbg !3874
  %stereo.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %stereo.i, metadata !2193, metadata !1787), !dbg !3875
  %split.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %split.i, metadata !2195, metadata !1787), !dbg !3876
  %imid.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %imid.i, metadata !2197, metadata !1787), !dbg !3877
  %iside.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %iside.i, metadata !2199, metadata !1787), !dbg !3878
  %N0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %N0.i, metadata !2201, metadata !1787), !dbg !3879
  %N_B.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %N_B.i, metadata !2203, metadata !1787), !dbg !3880
  %N_B0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %N_B0.i, metadata !2205, metadata !1787), !dbg !3881
  %B0.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %B0.i, metadata !2207, metadata !1787), !dbg !3882
  %time_divide.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %time_divide.i, metadata !2209, metadata !1787), !dbg !3883
  %recombine.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %recombine.i, metadata !2211, metadata !1787), !dbg !3884
  %inv.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %inv.i, metadata !2213, metadata !1787), !dbg !3885
  %mid.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %mid.i, metadata !2215, metadata !1787), !dbg !3886
  %side.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %side.i, metadata !2217, metadata !1787), !dbg !3887
  %longblocks.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %longblocks.i, metadata !2219, metadata !1787), !dbg !3888
  %cm.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cm.i, metadata !2221, metadata !1787), !dbg !3889
  %x.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %x.i, metadata !2223, metadata !1787), !dbg !3890
  %sign.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.i, metadata !2227, metadata !1787), !dbg !3891
  %tf_change.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tf_change.i, metadata !2232, metadata !1787), !dbg !3892
  %k.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %k.i, metadata !2236, metadata !1787), !dbg !3893
  %qn.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %qn.i, metadata !2238, metadata !1787), !dbg !3894
  %itheta.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %itheta.i, metadata !2240, metadata !1787), !dbg !3895
  %mbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %mbits.i, metadata !2242, metadata !1787), !dbg !3896
  %sbits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sbits.i, metadata !2244, metadata !1787), !dbg !3897
  %delta.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %delta.i, metadata !2246, metadata !1787), !dbg !3898
  %qalloc.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %qalloc.i, metadata !2248, metadata !1787), !dbg !3899
  %pulse_cap.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pulse_cap.i, metadata !2250, metadata !1787), !dbg !3900
  %offset.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.i, metadata !2252, metadata !1787), !dbg !3901
  %orig_fill.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %orig_fill.i, metadata !2254, metadata !1787), !dbg !3902
  %tell.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tell.i, metadata !2256, metadata !1787), !dbg !3903
  %c.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i, metadata !2258, metadata !1787), !dbg !3904
  %sign352.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sign352.i, metadata !2261, metadata !1787), !dbg !3905
  %tmp.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %tmp.i, metadata !2263, metadata !1787), !dbg !3906
  %x2.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %x2.i, metadata !2265, metadata !1787), !dbg !3907
  %y2.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %y2.i, metadata !2267, metadata !1787), !dbg !3908
  %next_lowband2.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %next_lowband2.i, metadata !2269, metadata !1787), !dbg !3909
  %next_lowband_out1.i = alloca float*, align 8
  call void @llvm.dbg.declare(metadata float** %next_lowband_out1.i, metadata !2271, metadata !1787), !dbg !3910
  %next_level.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %next_level.i, metadata !2273, metadata !1787), !dbg !3911
  %rebalance.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rebalance.i, metadata !2275, metadata !1787), !dbg !3912
  %cmt.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cmt.i, metadata !2277, metadata !1787), !dbg !3913
  %q.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %q.i, metadata !2279, metadata !1787), !dbg !3914
  %curr_bits.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %curr_bits.i, metadata !2281, metadata !1787), !dbg !3915
  %cm_mask.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cm_mask.i, metadata !2283, metadata !1787), !dbg !3916
  %k672.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %k672.i, metadata !2285, metadata !1787), !dbg !3917
  %n.i = alloca float, align 4
  call void @llvm.dbg.declare(metadata float* %n.i, metadata !2287, metadata !1787), !dbg !3918
  %pvq.addr = alloca %struct.CeltPVQ*, align 8
  %f.addr = alloca %struct.CeltFrame*, align 8
  %rc.addr = alloca %struct.OpusRangeCoder*, align 8
  %band.addr = alloca i32, align 4
  %X.addr = alloca float*, align 8
  %Y.addr = alloca float*, align 8
  %N.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %blocks.addr = alloca i32, align 4
  %lowband.addr = alloca float*, align 8
  %duration.addr = alloca i32, align 4
  %lowband_out.addr = alloca float*, align 8
  %level.addr = alloca i32, align 4
  %gain.addr = alloca float, align 4
  %lowband_scratch.addr = alloca float*, align 8
  %fill.addr = alloca i32, align 4
  store %struct.CeltPVQ* %pvq, %struct.CeltPVQ** %pvq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltPVQ** %pvq.addr, metadata !3919, metadata !1787), !dbg !3920
  store %struct.CeltFrame* %f, %struct.CeltFrame** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltFrame** %f.addr, metadata !3921, metadata !1787), !dbg !3922
  store %struct.OpusRangeCoder* %rc, %struct.OpusRangeCoder** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OpusRangeCoder** %rc.addr, metadata !3923, metadata !1787), !dbg !3924
  store i32 %band, i32* %band.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %band.addr, metadata !3925, metadata !1787), !dbg !3926
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !3927, metadata !1787), !dbg !3928
  store float* %Y, float** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata float** %Y.addr, metadata !3929, metadata !1787), !dbg !3930
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !3931, metadata !1787), !dbg !3932
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !3933, metadata !1787), !dbg !3934
  store i32 %blocks, i32* %blocks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blocks.addr, metadata !3935, metadata !1787), !dbg !3936
  store float* %lowband, float** %lowband.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lowband.addr, metadata !3937, metadata !1787), !dbg !3938
  store i32 %duration, i32* %duration.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %duration.addr, metadata !3939, metadata !1787), !dbg !3940
  store float* %lowband_out, float** %lowband_out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lowband_out.addr, metadata !3941, metadata !1787), !dbg !3942
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !3943, metadata !1787), !dbg !3944
  store float %gain, float* %gain.addr, align 4
  call void @llvm.dbg.declare(metadata float* %gain.addr, metadata !3945, metadata !1787), !dbg !3946
  store float* %lowband_scratch, float** %lowband_scratch.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lowband_scratch.addr, metadata !3947, metadata !1787), !dbg !3948
  store i32 %fill, i32* %fill.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fill.addr, metadata !3949, metadata !1787), !dbg !3950
  %0 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr, align 8, !dbg !3951
  %1 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr, align 8, !dbg !3952
  %2 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr, align 8, !dbg !3953
  %3 = load i32, i32* %band.addr, align 4, !dbg !3954
  %4 = load float*, float** %X.addr, align 8, !dbg !3955
  %5 = load float*, float** %Y.addr, align 8, !dbg !3956
  %6 = load i32, i32* %N.addr, align 4, !dbg !3957
  %7 = load i32, i32* %b.addr, align 4, !dbg !3958
  %8 = load i32, i32* %blocks.addr, align 4, !dbg !3959
  %9 = load float*, float** %lowband.addr, align 8, !dbg !3960
  %10 = load i32, i32* %duration.addr, align 4, !dbg !3961
  %11 = load float*, float** %lowband_out.addr, align 8, !dbg !3962
  %12 = load i32, i32* %level.addr, align 4, !dbg !3963
  %13 = load float, float* %gain.addr, align 4, !dbg !3964
  %14 = load float*, float** %lowband_scratch.addr, align 8, !dbg !3965
  %15 = load i32, i32* %fill.addr, align 4, !dbg !3966
  store %struct.CeltPVQ* %0, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !3967
  store %struct.CeltFrame* %1, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3967
  store %struct.OpusRangeCoder* %2, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !3967
  store i32 %3, i32* %band.addr.i, align 4, !dbg !3967
  store float* %4, float** %X.addr.i, align 8, !dbg !3967
  store float* %5, float** %Y.addr.i, align 8, !dbg !3967
  store i32 %6, i32* %N.addr.i, align 4, !dbg !3967
  store i32 %7, i32* %b.addr.i, align 4, !dbg !3967
  store i32 %8, i32* %blocks.addr.i, align 4, !dbg !3967
  store float* %9, float** %lowband.addr.i, align 8, !dbg !3967
  store i32 %10, i32* %duration.addr.i, align 4, !dbg !3967
  store float* %11, float** %lowband_out.addr.i, align 8, !dbg !3967
  store i32 %12, i32* %level.addr.i, align 4, !dbg !3967
  store float %13, float* %gain.addr.i, align 4, !dbg !3967
  store float* %14, float** %lowband_scratch.addr.i, align 8, !dbg !3967
  store i32 %15, i32* %fill.addr.i, align 4, !dbg !3967
  store i32 0, i32* %quant.addr.i, align 4, !dbg !3967
  %16 = load float*, float** %Y.addr.i, align 8, !dbg !3968
  %tobool.i = icmp ne float* %16, null, !dbg !3969
  %lnot.i = xor i1 %tobool.i, true, !dbg !3969
  %lnot.ext.i = zext i1 %tobool.i to i32, !dbg !3970
  store i32 %lnot.ext.i, i32* %stereo.i, align 4, !dbg !3875
  %17 = load i32, i32* %stereo.i, align 4, !dbg !3971
  store i32 %17, i32* %split.i, align 4, !dbg !3876
  store i32 0, i32* %imid.i, align 4, !dbg !3877
  store i32 0, i32* %iside.i, align 4, !dbg !3878
  %18 = load i32, i32* %N.addr.i, align 4, !dbg !3972
  store i32 %18, i32* %N0.i, align 4, !dbg !3879
  %19 = load i32, i32* %N.addr.i, align 4, !dbg !3973
  %20 = load i32, i32* %blocks.addr.i, align 4, !dbg !3974
  %div.i = udiv i32 %19, %20, !dbg !3975
  store i32 %div.i, i32* %N_B.i, align 4, !dbg !3880
  %21 = load i32, i32* %N_B.i, align 4, !dbg !3976
  store i32 %21, i32* %N_B0.i, align 4, !dbg !3881
  %22 = load i32, i32* %blocks.addr.i, align 4, !dbg !3977
  store i32 %22, i32* %B0.i, align 4, !dbg !3882
  store i32 0, i32* %time_divide.i, align 4, !dbg !3883
  store i32 0, i32* %recombine.i, align 4, !dbg !3884
  store i32 0, i32* %inv.i, align 4, !dbg !3885
  store float 0.000000e+00, float* %mid.i, align 4, !dbg !3886
  store float 0.000000e+00, float* %side.i, align 4, !dbg !3887
  %23 = load i32, i32* %B0.i, align 4, !dbg !3978
  %cmp.i = icmp eq i32 %23, 1, !dbg !3979
  %conv.i = zext i1 %cmp.i to i32, !dbg !3979
  store i32 %conv.i, i32* %longblocks.i, align 4, !dbg !3888
  store i32 0, i32* %cm.i, align 4, !dbg !3889
  %24 = load i32, i32* %N.addr.i, align 4, !dbg !3980
  %cmp2.i = icmp eq i32 %24, 1, !dbg !3981
  br i1 %cmp2.i, label %if.then.i, label %if.end23.i, !dbg !3982

if.then.i:                                        ; preds = %entry
  %25 = load float*, float** %X.addr.i, align 8, !dbg !3983
  store float* %25, float** %x.i, align 8, !dbg !3890
  store i32 0, i32* %i.i, align 4, !dbg !3984
  br label %for.cond.i, !dbg !3985

for.cond.i:                                       ; preds = %if.end14.i, %if.then.i
  %26 = load i32, i32* %i.i, align 4, !dbg !3986
  %27 = load i32, i32* %stereo.i, align 4, !dbg !3987
  %cmp4.i = icmp sle i32 %26, %27, !dbg !3988
  br i1 %cmp4.i, label %for.body.i, label %for.end.i, !dbg !3989

for.body.i:                                       ; preds = %for.cond.i
  store i32 0, i32* %sign.i, align 4, !dbg !3891
  %28 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !3990
  %remaining2.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %28, i32 0, i32 35, !dbg !3991
  %29 = load i32, i32* %remaining2.i, align 4, !dbg !3991
  %cmp6.i = icmp sge i32 %29, 8, !dbg !3992
  br i1 %cmp6.i, label %if.then8.i, label %if.end14.i, !dbg !3993

if.then8.i:                                       ; preds = %for.body.i
  %30 = load i32, i32* %quant.addr.i, align 4, !dbg !3994
  %tobool9.i = icmp ne i32 %30, 0, !dbg !3994
  br i1 %tobool9.i, label %if.then10.i, label %if.else.i, !dbg !3995

if.then10.i:                                      ; preds = %if.then8.i
  %31 = load float*, float** %x.i, align 8, !dbg !3996
  %32 = load float, float* %31, align 4, !dbg !3996
  %cmp11.i = fcmp olt float %32, 0.000000e+00, !dbg !3997
  %conv12.i = zext i1 %cmp11.i to i32, !dbg !3997
  store i32 %conv12.i, i32* %sign.i, align 4, !dbg !3998
  %33 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !3999
  %34 = load i32, i32* %sign.i, align 4, !dbg !4000
  call void @ff_opus_rc_put_raw(%struct.OpusRangeCoder* %33, i32 %34, i32 1) #7, !dbg !4001
  br label %if.end.i, !dbg !4002

if.else.i:                                        ; preds = %if.then8.i
  %35 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4003
  %call.i = call i32 @ff_opus_rc_get_raw(%struct.OpusRangeCoder* %35, i32 1) #7, !dbg !4004
  store i32 %call.i, i32* %sign.i, align 4, !dbg !4005
  br label %if.end.i, !dbg !3967

if.end.i:                                         ; preds = %if.else.i, %if.then10.i
  %36 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4006
  %remaining213.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %36, i32 0, i32 35, !dbg !4007
  %37 = load i32, i32* %remaining213.i, align 4, !dbg !4008
  %sub.i = sub nsw i32 %37, 8, !dbg !4008
  store i32 %sub.i, i32* %remaining213.i, align 4, !dbg !4008
  br label %if.end14.i, !dbg !4009

if.end14.i:                                       ; preds = %if.end.i, %for.body.i
  %38 = load i32, i32* %sign.i, align 4, !dbg !4010
  %conv15.i = sitofp i32 %38 to float, !dbg !4010
  %mul.i = fmul float 2.000000e+00, %conv15.i, !dbg !4011
  %sub16.i = fsub float 1.000000e+00, %mul.i, !dbg !4012
  %39 = load float*, float** %x.i, align 8, !dbg !4013
  store float %sub16.i, float* %39, align 4, !dbg !4014
  %40 = load float*, float** %Y.addr.i, align 8, !dbg !4015
  store float* %40, float** %x.i, align 8, !dbg !4016
  %41 = load i32, i32* %i.i, align 4, !dbg !4017
  %inc.i = add nsw i32 %41, 1, !dbg !4017
  store i32 %inc.i, i32* %i.i, align 4, !dbg !4017
  br label %for.cond.i, !dbg !4018, !llvm.loop !2398

for.end.i:                                        ; preds = %for.cond.i
  %42 = load float*, float** %lowband_out.addr.i, align 8, !dbg !4019
  %tobool18.i = icmp ne float* %42, null, !dbg !4019
  br i1 %tobool18.i, label %if.then19.i, label %if.end22.i, !dbg !4020

if.then19.i:                                      ; preds = %for.end.i
  %43 = load float*, float** %X.addr.i, align 8, !dbg !4021
  %44 = load float, float* %43, align 4, !dbg !4021
  %45 = load float*, float** %lowband_out.addr.i, align 8, !dbg !4022
  store float %44, float* %45, align 4, !dbg !4023
  br label %if.end22.i, !dbg !4022

if.end22.i:                                       ; preds = %if.then19.i, %for.end.i
  store i32 1, i32* %retval.i, align 4, !dbg !4024
  br label %quant_band_template.exit, !dbg !4024

if.end23.i:                                       ; preds = %entry
  %46 = load i32, i32* %stereo.i, align 4, !dbg !4025
  %tobool24.i = icmp ne i32 %46, 0, !dbg !4025
  br i1 %tobool24.i, label %if.end118.i, label %land.lhs.true.i, !dbg !4026

land.lhs.true.i:                                  ; preds = %if.end23.i
  %47 = load i32, i32* %level.addr.i, align 4, !dbg !4027
  %cmp25.i = icmp eq i32 %47, 0, !dbg !4028
  br i1 %cmp25.i, label %if.then27.i, label %if.end118.i, !dbg !4029

if.then27.i:                                      ; preds = %land.lhs.true.i
  %48 = load i32, i32* %band.addr.i, align 4, !dbg !4030
  %idxprom.i = sext i32 %48 to i64, !dbg !4031
  %49 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4031
  %tf_change28.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %49, i32 0, i32 40, !dbg !4032
  %arrayidx29.i = getelementptr inbounds [21 x i32], [21 x i32]* %tf_change28.i, i64 0, i64 %idxprom.i, !dbg !4031
  %50 = load i32, i32* %arrayidx29.i, align 4, !dbg !4031
  store i32 %50, i32* %tf_change.i, align 4, !dbg !3892
  %51 = load i32, i32* %tf_change.i, align 4, !dbg !4033
  %cmp30.i = icmp sgt i32 %51, 0, !dbg !4034
  br i1 %cmp30.i, label %if.then32.i, label %if.end33.i, !dbg !4035

if.then32.i:                                      ; preds = %if.then27.i
  %52 = load i32, i32* %tf_change.i, align 4, !dbg !4036
  store i32 %52, i32* %recombine.i, align 4, !dbg !4037
  br label %if.end33.i, !dbg !4038

if.end33.i:                                       ; preds = %if.then32.i, %if.then27.i
  %53 = load float*, float** %lowband.addr.i, align 8, !dbg !4039
  %tobool34.i = icmp ne float* %53, null, !dbg !4039
  br i1 %tobool34.i, label %land.lhs.true35.i, label %if.end57.i, !dbg !4040

land.lhs.true35.i:                                ; preds = %if.end33.i
  %54 = load i32, i32* %recombine.i, align 4, !dbg !4041
  %tobool36.i = icmp ne i32 %54, 0, !dbg !4041
  br i1 %tobool36.i, label %if.then45.i, label %lor.lhs.false.i, !dbg !4042

lor.lhs.false.i:                                  ; preds = %land.lhs.true35.i
  %55 = load i32, i32* %N_B.i, align 4, !dbg !4043
  %and.i = and i32 %55, 1, !dbg !4044
  %cmp37.i = icmp eq i32 %and.i, 0, !dbg !4045
  br i1 %cmp37.i, label %land.lhs.true39.i, label %lor.lhs.false42.i, !dbg !4046

land.lhs.true39.i:                                ; preds = %lor.lhs.false.i
  %56 = load i32, i32* %tf_change.i, align 4, !dbg !4047
  %cmp40.i = icmp slt i32 %56, 0, !dbg !4048
  br i1 %cmp40.i, label %if.then45.i, label %lor.lhs.false42.i, !dbg !4049

lor.lhs.false42.i:                                ; preds = %land.lhs.true39.i, %lor.lhs.false.i
  %57 = load i32, i32* %B0.i, align 4, !dbg !4050
  %cmp43.i = icmp sgt i32 %57, 1, !dbg !4051
  br i1 %cmp43.i, label %if.then45.i, label %if.end57.i, !dbg !4052

if.then45.i:                                      ; preds = %lor.lhs.false42.i, %land.lhs.true39.i, %land.lhs.true35.i
  store i32 0, i32* %i.i, align 4, !dbg !4053
  br label %for.cond46.i, !dbg !4054

for.cond46.i:                                     ; preds = %for.body49.i, %if.then45.i
  %58 = load i32, i32* %i.i, align 4, !dbg !4055
  %59 = load i32, i32* %N.addr.i, align 4, !dbg !4056
  %cmp47.i = icmp slt i32 %58, %59, !dbg !4057
  br i1 %cmp47.i, label %for.body49.i, label %for.end56.i, !dbg !4058

for.body49.i:                                     ; preds = %for.cond46.i
  %60 = load i32, i32* %i.i, align 4, !dbg !4059
  %idxprom50.i = sext i32 %60 to i64, !dbg !4060
  %61 = load float*, float** %lowband.addr.i, align 8, !dbg !4060
  %arrayidx51.i = getelementptr inbounds float, float* %61, i64 %idxprom50.i, !dbg !4060
  %62 = load float, float* %arrayidx51.i, align 4, !dbg !4060
  %63 = load i32, i32* %i.i, align 4, !dbg !4061
  %idxprom52.i = sext i32 %63 to i64, !dbg !4062
  %64 = load float*, float** %lowband_scratch.addr.i, align 8, !dbg !4062
  %arrayidx53.i = getelementptr inbounds float, float* %64, i64 %idxprom52.i, !dbg !4062
  store float %62, float* %arrayidx53.i, align 4, !dbg !4063
  %65 = load i32, i32* %i.i, align 4, !dbg !4064
  %inc55.i = add nsw i32 %65, 1, !dbg !4064
  store i32 %inc55.i, i32* %i.i, align 4, !dbg !4064
  br label %for.cond46.i, !dbg !4065, !llvm.loop !2460

for.end56.i:                                      ; preds = %for.cond46.i
  %66 = load float*, float** %lowband_scratch.addr.i, align 8, !dbg !4066
  store float* %66, float** %lowband.addr.i, align 8, !dbg !4067
  br label %if.end57.i, !dbg !4068

if.end57.i:                                       ; preds = %for.end56.i, %lor.lhs.false42.i, %if.end33.i
  store i32 0, i32* %k.i, align 4, !dbg !4069
  br label %for.cond58.i, !dbg !4070

for.cond58.i:                                     ; preds = %if.end67.i, %if.end57.i
  %67 = load i32, i32* %k.i, align 4, !dbg !4071
  %68 = load i32, i32* %recombine.i, align 4, !dbg !4072
  %cmp59.i = icmp slt i32 %67, %68, !dbg !4073
  br i1 %cmp59.i, label %for.body61.i, label %for.end79.i, !dbg !4074

for.body61.i:                                     ; preds = %for.cond58.i
  %69 = load i32, i32* %quant.addr.i, align 4, !dbg !4075
  %tobool62.i = icmp ne i32 %69, 0, !dbg !4075
  br i1 %tobool62.i, label %if.then65.i, label %lor.lhs.false63.i, !dbg !4076

lor.lhs.false63.i:                                ; preds = %for.body61.i
  %70 = load float*, float** %lowband.addr.i, align 8, !dbg !4077
  %tobool64.i = icmp ne float* %70, null, !dbg !4077
  br i1 %tobool64.i, label %if.then65.i, label %if.end67.i, !dbg !4078

if.then65.i:                                      ; preds = %lor.lhs.false63.i, %for.body61.i
  %71 = load i32, i32* %quant.addr.i, align 4, !dbg !4079
  %tobool66.i = icmp ne i32 %71, 0, !dbg !4079
  br i1 %tobool66.i, label %cond.true.i, label %cond.false.i, !dbg !4079

cond.true.i:                                      ; preds = %if.then65.i
  %72 = load float*, float** %X.addr.i, align 8, !dbg !4080
  br label %cond.end.i, !dbg !4081

cond.false.i:                                     ; preds = %if.then65.i
  %73 = load float*, float** %lowband.addr.i, align 8, !dbg !4082
  br label %cond.end.i, !dbg !4083

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi float* [ %72, %cond.true.i ], [ %73, %cond.false.i ], !dbg !4084
  %74 = load i32, i32* %N.addr.i, align 4, !dbg !4085
  %75 = load i32, i32* %k.i, align 4, !dbg !4086
  %shr.i = ashr i32 %74, %75, !dbg !4087
  %76 = load i32, i32* %k.i, align 4, !dbg !4088
  %shl.i = shl i32 1, %76, !dbg !4089
  call void @celt_haar1(float* %cond.i, i32 %shr.i, i32 %shl.i) #7, !dbg !4090
  br label %if.end67.i, !dbg !4090

if.end67.i:                                       ; preds = %cond.end.i, %lor.lhs.false63.i
  %77 = load i32, i32* %fill.addr.i, align 4, !dbg !4091
  %and68.i = and i32 %77, 15, !dbg !4092
  %idxprom69.i = sext i32 %and68.i to i64, !dbg !4093
  %arrayidx70.i = getelementptr inbounds [0 x i8], [0 x i8]* @ff_celt_bit_interleave, i64 0, i64 %idxprom69.i, !dbg !4093
  %78 = load i8, i8* %arrayidx70.i, align 1, !dbg !4093
  %conv71.i = zext i8 %78 to i32, !dbg !4093
  %79 = load i32, i32* %fill.addr.i, align 4, !dbg !4094
  %shr72.i = ashr i32 %79, 4, !dbg !4095
  %idxprom73.i = sext i32 %shr72.i to i64, !dbg !4096
  %arrayidx74.i = getelementptr inbounds [0 x i8], [0 x i8]* @ff_celt_bit_interleave, i64 0, i64 %idxprom73.i, !dbg !4096
  %80 = load i8, i8* %arrayidx74.i, align 1, !dbg !4096
  %conv75.i = zext i8 %80 to i32, !dbg !4096
  %shl76.i = shl i32 %conv75.i, 2, !dbg !4097
  %or.i = or i32 %conv71.i, %shl76.i, !dbg !4098
  store i32 %or.i, i32* %fill.addr.i, align 4, !dbg !4099
  %81 = load i32, i32* %k.i, align 4, !dbg !4100
  %inc78.i = add nsw i32 %81, 1, !dbg !4100
  store i32 %inc78.i, i32* %k.i, align 4, !dbg !4100
  br label %for.cond58.i, !dbg !4101, !llvm.loop !2507

for.end79.i:                                      ; preds = %for.cond58.i
  %82 = load i32, i32* %recombine.i, align 4, !dbg !4102
  %83 = load i32, i32* %blocks.addr.i, align 4, !dbg !4103
  %shr80.i = lshr i32 %83, %82, !dbg !4103
  store i32 %shr80.i, i32* %blocks.addr.i, align 4, !dbg !4103
  %84 = load i32, i32* %recombine.i, align 4, !dbg !4104
  %85 = load i32, i32* %N_B.i, align 4, !dbg !4105
  %shl81.i = shl i32 %85, %84, !dbg !4105
  store i32 %shl81.i, i32* %N_B.i, align 4, !dbg !4105
  br label %while.cond.i, !dbg !4106

while.cond.i:                                     ; preds = %if.end96.i, %for.end79.i
  %86 = load i32, i32* %N_B.i, align 4, !dbg !4107
  %and82.i = and i32 %86, 1, !dbg !4108
  %cmp83.i = icmp eq i32 %and82.i, 0, !dbg !4109
  br i1 %cmp83.i, label %land.rhs.i, label %land.end.i, !dbg !4110

land.rhs.i:                                       ; preds = %while.cond.i
  %87 = load i32, i32* %tf_change.i, align 4, !dbg !4111
  %cmp85.i = icmp slt i32 %87, 0, !dbg !4112
  br label %land.end.i, !dbg !3967

land.end.i:                                       ; preds = %land.rhs.i, %while.cond.i
  %88 = phi i1 [ false, %while.cond.i ], [ %cmp85.i, %land.rhs.i ], !dbg !3967
  br i1 %88, label %while.body.i, label %while.end.i, !dbg !4113

while.body.i:                                     ; preds = %land.end.i
  %89 = load i32, i32* %quant.addr.i, align 4, !dbg !4114
  %tobool87.i = icmp ne i32 %89, 0, !dbg !4114
  br i1 %tobool87.i, label %if.then90.i, label %lor.lhs.false88.i, !dbg !4115

lor.lhs.false88.i:                                ; preds = %while.body.i
  %90 = load float*, float** %lowband.addr.i, align 8, !dbg !4116
  %tobool89.i = icmp ne float* %90, null, !dbg !4116
  br i1 %tobool89.i, label %if.then90.i, label %if.end96.i, !dbg !4117

if.then90.i:                                      ; preds = %lor.lhs.false88.i, %while.body.i
  %91 = load i32, i32* %quant.addr.i, align 4, !dbg !4118
  %tobool91.i = icmp ne i32 %91, 0, !dbg !4118
  br i1 %tobool91.i, label %cond.true92.i, label %cond.false93.i, !dbg !4118

cond.true92.i:                                    ; preds = %if.then90.i
  %92 = load float*, float** %X.addr.i, align 8, !dbg !4119
  br label %cond.end94.i, !dbg !4120

cond.false93.i:                                   ; preds = %if.then90.i
  %93 = load float*, float** %lowband.addr.i, align 8, !dbg !4121
  br label %cond.end94.i, !dbg !4122

cond.end94.i:                                     ; preds = %cond.false93.i, %cond.true92.i
  %cond95.i = phi float* [ %92, %cond.true92.i ], [ %93, %cond.false93.i ], !dbg !4123
  %94 = load i32, i32* %N_B.i, align 4, !dbg !4124
  %95 = load i32, i32* %blocks.addr.i, align 4, !dbg !4125
  call void @celt_haar1(float* %cond95.i, i32 %94, i32 %95) #7, !dbg !4126
  br label %if.end96.i, !dbg !4126

if.end96.i:                                       ; preds = %cond.end94.i, %lor.lhs.false88.i
  %96 = load i32, i32* %fill.addr.i, align 4, !dbg !4127
  %97 = load i32, i32* %blocks.addr.i, align 4, !dbg !4128
  %shl97.i = shl i32 %96, %97, !dbg !4129
  %98 = load i32, i32* %fill.addr.i, align 4, !dbg !4130
  %or98.i = or i32 %98, %shl97.i, !dbg !4130
  store i32 %or98.i, i32* %fill.addr.i, align 4, !dbg !4130
  %99 = load i32, i32* %blocks.addr.i, align 4, !dbg !4131
  %shl99.i = shl i32 %99, 1, !dbg !4131
  store i32 %shl99.i, i32* %blocks.addr.i, align 4, !dbg !4131
  %100 = load i32, i32* %N_B.i, align 4, !dbg !4132
  %shr100.i = ashr i32 %100, 1, !dbg !4132
  store i32 %shr100.i, i32* %N_B.i, align 4, !dbg !4132
  %101 = load i32, i32* %time_divide.i, align 4, !dbg !4133
  %inc101.i = add nsw i32 %101, 1, !dbg !4133
  store i32 %inc101.i, i32* %time_divide.i, align 4, !dbg !4133
  %102 = load i32, i32* %tf_change.i, align 4, !dbg !4134
  %inc102.i = add nsw i32 %102, 1, !dbg !4134
  store i32 %inc102.i, i32* %tf_change.i, align 4, !dbg !4134
  br label %while.cond.i, !dbg !4135, !llvm.loop !2551

while.end.i:                                      ; preds = %land.end.i
  %103 = load i32, i32* %blocks.addr.i, align 4, !dbg !4136
  store i32 %103, i32* %B0.i, align 4, !dbg !4137
  %104 = load i32, i32* %N_B.i, align 4, !dbg !4138
  store i32 %104, i32* %N_B0.i, align 4, !dbg !4139
  %105 = load i32, i32* %B0.i, align 4, !dbg !4140
  %cmp103.i = icmp sgt i32 %105, 1, !dbg !4141
  br i1 %cmp103.i, label %land.lhs.true105.i, label %if.end117.i, !dbg !4142

land.lhs.true105.i:                               ; preds = %while.end.i
  %106 = load i32, i32* %quant.addr.i, align 4, !dbg !4143
  %tobool106.i = icmp ne i32 %106, 0, !dbg !4143
  br i1 %tobool106.i, label %if.then109.i, label %lor.lhs.false107.i, !dbg !4144

lor.lhs.false107.i:                               ; preds = %land.lhs.true105.i
  %107 = load float*, float** %lowband.addr.i, align 8, !dbg !4145
  %tobool108.i = icmp ne float* %107, null, !dbg !4145
  br i1 %tobool108.i, label %if.then109.i, label %if.end117.i, !dbg !4146

if.then109.i:                                     ; preds = %lor.lhs.false107.i, %land.lhs.true105.i
  %108 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !4147
  %hadamard_tmp.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %108, i32 0, i32 1, !dbg !4148
  %arraydecay.i = getelementptr inbounds [256 x float], [256 x float]* %hadamard_tmp.i, i32 0, i32 0, !dbg !4147
  %109 = load i32, i32* %quant.addr.i, align 4, !dbg !4149
  %tobool110.i = icmp ne i32 %109, 0, !dbg !4149
  br i1 %tobool110.i, label %cond.true111.i, label %cond.false112.i, !dbg !4149

cond.true111.i:                                   ; preds = %if.then109.i
  %110 = load float*, float** %X.addr.i, align 8, !dbg !4150
  br label %cond.end113.i, !dbg !4151

cond.false112.i:                                  ; preds = %if.then109.i
  %111 = load float*, float** %lowband.addr.i, align 8, !dbg !4152
  br label %cond.end113.i, !dbg !4153

cond.end113.i:                                    ; preds = %cond.false112.i, %cond.true111.i
  %cond114.i = phi float* [ %110, %cond.true111.i ], [ %111, %cond.false112.i ], !dbg !4154
  %112 = load i32, i32* %N_B.i, align 4, !dbg !4155
  %113 = load i32, i32* %recombine.i, align 4, !dbg !4156
  %shr115.i = ashr i32 %112, %113, !dbg !4157
  %114 = load i32, i32* %B0.i, align 4, !dbg !4158
  %115 = load i32, i32* %recombine.i, align 4, !dbg !4159
  %shl116.i = shl i32 %114, %115, !dbg !4160
  %116 = load i32, i32* %longblocks.i, align 4, !dbg !4161
  call void @celt_deinterleave_hadamard(float* %arraydecay.i, float* %cond114.i, i32 %shr115.i, i32 %shl116.i, i32 %116) #7, !dbg !4162
  br label %if.end117.i, !dbg !4162

if.end117.i:                                      ; preds = %cond.end113.i, %lor.lhs.false107.i, %while.end.i
  br label %if.end118.i, !dbg !4163

if.end118.i:                                      ; preds = %if.end117.i, %land.lhs.true.i, %if.end23.i
  %117 = load i32, i32* %duration.addr.i, align 4, !dbg !4164
  %add.i = add nsw i32 %117, 1, !dbg !4165
  %mul119.i = mul nsw i32 %add.i, 21, !dbg !4166
  %118 = load i32, i32* %band.addr.i, align 4, !dbg !4167
  %add120.i = add nsw i32 %mul119.i, %118, !dbg !4168
  %idxprom121.i = sext i32 %add120.i to i64, !dbg !4169
  %arrayidx122.i = getelementptr inbounds [105 x i16], [105 x i16]* @ff_celt_cache_index, i64 0, i64 %idxprom121.i, !dbg !4169
  %119 = load i16, i16* %arrayidx122.i, align 2, !dbg !4169
  %conv123.i = sext i16 %119 to i32, !dbg !4169
  %idx.ext.i = sext i32 %conv123.i to i64, !dbg !4170
  %add.ptr.i = getelementptr inbounds i8, i8* getelementptr inbounds ([392 x i8], [392 x i8]* @ff_celt_cache_bits, i32 0, i32 0), i64 %idx.ext.i, !dbg !4170
  store i8* %add.ptr.i, i8** %cache.i, align 8, !dbg !4171
  %120 = load i32, i32* %stereo.i, align 4, !dbg !4172
  %tobool124.i = icmp ne i32 %120, 0, !dbg !4172
  br i1 %tobool124.i, label %if.end153.i, label %land.lhs.true125.i, !dbg !4173

land.lhs.true125.i:                               ; preds = %if.end118.i
  %121 = load i32, i32* %duration.addr.i, align 4, !dbg !4174
  %cmp126.i = icmp sge i32 %121, 0, !dbg !4175
  br i1 %cmp126.i, label %land.lhs.true128.i, label %if.end153.i, !dbg !4176

land.lhs.true128.i:                               ; preds = %land.lhs.true125.i
  %122 = load i32, i32* %b.addr.i, align 4, !dbg !4177
  %123 = load i8*, i8** %cache.i, align 8, !dbg !4178
  %124 = load i8, i8* %123, align 1, !dbg !4178
  %idxprom130.i = zext i8 %124 to i64, !dbg !4179
  %125 = load i8*, i8** %cache.i, align 8, !dbg !4179
  %arrayidx131.i = getelementptr inbounds i8, i8* %125, i64 %idxprom130.i, !dbg !4179
  %126 = load i8, i8* %arrayidx131.i, align 1, !dbg !4179
  %conv132.i = zext i8 %126 to i32, !dbg !4179
  %add133.i = add nsw i32 %conv132.i, 12, !dbg !4180
  %cmp134.i = icmp sgt i32 %122, %add133.i, !dbg !4181
  br i1 %cmp134.i, label %land.lhs.true136.i, label %if.end153.i, !dbg !4182

land.lhs.true136.i:                               ; preds = %land.lhs.true128.i
  %127 = load i32, i32* %N.addr.i, align 4, !dbg !4183
  %cmp137.i = icmp sgt i32 %127, 2, !dbg !4184
  br i1 %cmp137.i, label %if.then139.i, label %if.end153.i, !dbg !4185

if.then139.i:                                     ; preds = %land.lhs.true136.i
  %128 = load i32, i32* %N.addr.i, align 4, !dbg !4186
  %shr140.i = ashr i32 %128, 1, !dbg !4186
  store i32 %shr140.i, i32* %N.addr.i, align 4, !dbg !4186
  %129 = load float*, float** %X.addr.i, align 8, !dbg !4187
  %130 = load i32, i32* %N.addr.i, align 4, !dbg !4188
  %idx.ext141.i = sext i32 %130 to i64, !dbg !4189
  %add.ptr142.i = getelementptr inbounds float, float* %129, i64 %idx.ext141.i, !dbg !4189
  store float* %add.ptr142.i, float** %Y.addr.i, align 8, !dbg !4190
  store i32 1, i32* %split.i, align 4, !dbg !4191
  %131 = load i32, i32* %duration.addr.i, align 4, !dbg !4192
  %sub143.i = sub nsw i32 %131, 1, !dbg !4192
  store i32 %sub143.i, i32* %duration.addr.i, align 4, !dbg !4192
  %132 = load i32, i32* %blocks.addr.i, align 4, !dbg !4193
  %cmp144.i = icmp eq i32 %132, 1, !dbg !4194
  br i1 %cmp144.i, label %if.then146.i, label %if.end150.i, !dbg !4195

if.then146.i:                                     ; preds = %if.then139.i
  %133 = load i32, i32* %fill.addr.i, align 4, !dbg !4196
  %and147.i = and i32 %133, 1, !dbg !4197
  %134 = load i32, i32* %fill.addr.i, align 4, !dbg !4198
  %shl148.i = shl i32 %134, 1, !dbg !4199
  %or149.i = or i32 %and147.i, %shl148.i, !dbg !4200
  store i32 %or149.i, i32* %fill.addr.i, align 4, !dbg !4201
  br label %if.end150.i, !dbg !4202

if.end150.i:                                      ; preds = %if.then146.i, %if.then139.i
  %135 = load i32, i32* %blocks.addr.i, align 4, !dbg !4203
  %add151.i = add i32 %135, 1, !dbg !4204
  %shr152.i = lshr i32 %add151.i, 1, !dbg !4205
  store i32 %shr152.i, i32* %blocks.addr.i, align 4, !dbg !4206
  br label %if.end153.i, !dbg !4207

if.end153.i:                                      ; preds = %if.end150.i, %land.lhs.true136.i, %land.lhs.true128.i, %land.lhs.true125.i, %if.end118.i
  %136 = load i32, i32* %split.i, align 4, !dbg !4208
  %tobool154.i = icmp ne i32 %136, 0, !dbg !4208
  br i1 %tobool154.i, label %if.then155.i, label %if.else549.i, !dbg !4209

if.then155.i:                                     ; preds = %if.end153.i
  %137 = load i32, i32* %quant.addr.i, align 4, !dbg !4210
  %tobool156.i = icmp ne i32 %137, 0, !dbg !4210
  br i1 %tobool156.i, label %cond.true157.i, label %cond.false159.i, !dbg !4210

cond.true157.i:                                   ; preds = %if.then155.i
  %138 = load float*, float** %X.addr.i, align 8, !dbg !4211
  %139 = load float*, float** %Y.addr.i, align 8, !dbg !4212
  %140 = load i32, i32* %stereo.i, align 4, !dbg !4213
  %141 = load i32, i32* %N.addr.i, align 4, !dbg !4214
  %call158.i = call i32 @celt_calc_theta(float* %138, float* %139, i32 %140, i32 %141) #7, !dbg !4215
  br label %cond.end160.i, !dbg !4216

cond.false159.i:                                  ; preds = %if.then155.i
  br label %cond.end160.i, !dbg !4217

cond.end160.i:                                    ; preds = %cond.false159.i, %cond.true157.i
  %cond161.i = phi i32 [ %call158.i, %cond.true157.i ], [ 0, %cond.false159.i ], !dbg !4218
  store i32 %cond161.i, i32* %itheta.i, align 4, !dbg !4219
  %142 = load i32, i32* %band.addr.i, align 4, !dbg !4220
  %idxprom162.i = sext i32 %142 to i64, !dbg !4221
  %arrayidx163.i = getelementptr inbounds [0 x i8], [0 x i8]* @ff_celt_log_freq_range, i64 0, i64 %idxprom162.i, !dbg !4221
  %143 = load i8, i8* %arrayidx163.i, align 1, !dbg !4221
  %conv164.i = zext i8 %143 to i32, !dbg !4221
  %144 = load i32, i32* %duration.addr.i, align 4, !dbg !4222
  %mul165.i = mul nsw i32 %144, 8, !dbg !4223
  %add166.i = add nsw i32 %conv164.i, %mul165.i, !dbg !4224
  store i32 %add166.i, i32* %pulse_cap.i, align 4, !dbg !4225
  %145 = load i32, i32* %pulse_cap.i, align 4, !dbg !4226
  %shr167.i = ashr i32 %145, 1, !dbg !4227
  %146 = load i32, i32* %stereo.i, align 4, !dbg !4228
  %tobool168.i = icmp ne i32 %146, 0, !dbg !4228
  br i1 %tobool168.i, label %land.rhs169.i, label %land.end172.i, !dbg !4229

land.rhs169.i:                                    ; preds = %cond.end160.i
  %147 = load i32, i32* %N.addr.i, align 4, !dbg !4230
  %cmp170.i = icmp eq i32 %147, 2, !dbg !4231
  br label %land.end172.i, !dbg !3967

land.end172.i:                                    ; preds = %land.rhs169.i, %cond.end160.i
  %148 = phi i1 [ false, %cond.end160.i ], [ %cmp170.i, %land.rhs169.i ], !dbg !3967
  %cond173.i = select i1 %148, i32 16, i32 4, !dbg !4232
  %sub174.i = sub nsw i32 %shr167.i, %cond173.i, !dbg !4233
  store i32 %sub174.i, i32* %offset.i, align 4, !dbg !4234
  %149 = load i32, i32* %stereo.i, align 4, !dbg !4235
  %tobool175.i = icmp ne i32 %149, 0, !dbg !4235
  br i1 %tobool175.i, label %land.lhs.true176.i, label %cond.false180.i, !dbg !4236

land.lhs.true176.i:                               ; preds = %land.end172.i
  %150 = load i32, i32* %band.addr.i, align 4, !dbg !4237
  %151 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4238
  %intensity_stereo.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %151, i32 0, i32 24, !dbg !4239
  %152 = load i32, i32* %intensity_stereo.i, align 32, !dbg !4239
  %cmp177.i = icmp sge i32 %150, %152, !dbg !4240
  br i1 %cmp177.i, label %cond.true179.i, label %cond.false180.i, !dbg !4241

cond.true179.i:                                   ; preds = %land.lhs.true176.i
  br label %cond.end182.i, !dbg !4242

cond.false180.i:                                  ; preds = %land.lhs.true176.i, %land.end172.i
  %153 = load i32, i32* %N.addr.i, align 4, !dbg !4243
  %154 = load i32, i32* %b.addr.i, align 4, !dbg !4244
  %155 = load i32, i32* %offset.i, align 4, !dbg !4245
  %156 = load i32, i32* %pulse_cap.i, align 4, !dbg !4246
  %157 = load i32, i32* %stereo.i, align 4, !dbg !4247
  %call181.i = call i32 @celt_compute_qn(i32 %153, i32 %154, i32 %155, i32 %156, i32 %157) #7, !dbg !4248
  br label %cond.end182.i, !dbg !4249

cond.end182.i:                                    ; preds = %cond.false180.i, %cond.true179.i
  %cond183.i = phi i32 [ 1, %cond.true179.i ], [ %call181.i, %cond.false180.i ], !dbg !4250
  store i32 %cond183.i, i32* %qn.i, align 4, !dbg !4251
  %158 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4252
  store %struct.OpusRangeCoder* %158, %struct.OpusRangeCoder** %rc.addr.i.i, align 8, !dbg !4253
  %159 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i.i, align 8, !dbg !4254
  %total_bits1.i.i = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %159, i32 0, i32 4, !dbg !4255
  %160 = load i32, i32* %total_bits1.i.i, align 8, !dbg !4255
  %shl.i.i = shl i32 %160, 3, !dbg !4256
  store i32 %shl.i.i, i32* %total_bits.i.i, align 4, !dbg !4257
  %161 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i.i, align 8, !dbg !4258
  %range2.i.i = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %161, i32 0, i32 2, !dbg !4259
  %162 = load i32, i32* %range2.i.i, align 8, !dbg !4259
  %or.i.i = or i32 %162, 1, !dbg !4260
  %163 = call i32 @llvm.ctlz.i32(i32 %or.i.i, i1 true) #7, !dbg !4261
  %sub.i.i = sub nsw i32 31, %163, !dbg !4262
  %add.i.i = add nsw i32 %sub.i.i, 1, !dbg !4263
  store i32 %add.i.i, i32* %rcbuffer.i.i, align 4, !dbg !4264
  %164 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i.i, align 8, !dbg !4265
  %range3.i.i = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %164, i32 0, i32 2, !dbg !4266
  %165 = load i32, i32* %range3.i.i, align 8, !dbg !4266
  %166 = load i32, i32* %rcbuffer.i.i, align 4, !dbg !4267
  %sub4.i.i = sub i32 %166, 16, !dbg !4268
  %shr.i.i = lshr i32 %165, %sub4.i.i, !dbg !4269
  store i32 %shr.i.i, i32* %range.i.i, align 4, !dbg !4270
  store i32 0, i32* %i.i.i, align 4, !dbg !4271
  br label %for.cond.i.i, !dbg !4272

for.cond.i.i:                                     ; preds = %for.body.i.i, %cond.end182.i
  %167 = load i32, i32* %i.i.i, align 4, !dbg !4273
  %cmp.i.i = icmp ult i32 %167, 3, !dbg !4274
  br i1 %cmp.i.i, label %for.body.i.i, label %opus_rc_tell_frac.exit.i, !dbg !4275

for.body.i.i:                                     ; preds = %for.cond.i.i
  %168 = load i32, i32* %range.i.i, align 4, !dbg !4276
  %169 = load i32, i32* %range.i.i, align 4, !dbg !4277
  %mul.i.i = mul i32 %168, %169, !dbg !4278
  %shr5.i.i = lshr i32 %mul.i.i, 15, !dbg !4279
  store i32 %shr5.i.i, i32* %range.i.i, align 4, !dbg !4280
  %170 = load i32, i32* %range.i.i, align 4, !dbg !4281
  %shr6.i.i = lshr i32 %170, 16, !dbg !4282
  store i32 %shr6.i.i, i32* %bit.i.i, align 4, !dbg !4283
  %171 = load i32, i32* %rcbuffer.i.i, align 4, !dbg !4284
  %shl7.i.i = shl i32 %171, 1, !dbg !4285
  %172 = load i32, i32* %bit.i.i, align 4, !dbg !4286
  %or8.i.i = or i32 %shl7.i.i, %172, !dbg !4287
  store i32 %or8.i.i, i32* %rcbuffer.i.i, align 4, !dbg !4288
  %173 = load i32, i32* %bit.i.i, align 4, !dbg !4289
  %174 = load i32, i32* %range.i.i, align 4, !dbg !4290
  %shr9.i.i = lshr i32 %174, %173, !dbg !4290
  store i32 %shr9.i.i, i32* %range.i.i, align 4, !dbg !4290
  %175 = load i32, i32* %i.i.i, align 4, !dbg !4291
  %inc.i.i = add i32 %175, 1, !dbg !4291
  store i32 %inc.i.i, i32* %i.i.i, align 4, !dbg !4291
  br label %for.cond.i.i, !dbg !4292, !llvm.loop !2726

opus_rc_tell_frac.exit.i:                         ; preds = %for.cond.i.i
  %176 = load i32, i32* %total_bits.i.i, align 4, !dbg !4293
  %177 = load i32, i32* %rcbuffer.i.i, align 4, !dbg !4294
  %sub10.i.i = sub i32 %176, %177, !dbg !4295
  store i32 %sub10.i.i, i32* %tell.i, align 4, !dbg !4296
  %178 = load i32, i32* %qn.i, align 4, !dbg !4297
  %cmp185.i = icmp ne i32 %178, 1, !dbg !4298
  br i1 %cmp185.i, label %if.then187.i, label %if.else253.i, !dbg !4299

if.then187.i:                                     ; preds = %opus_rc_tell_frac.exit.i
  %179 = load i32, i32* %quant.addr.i, align 4, !dbg !4300
  %tobool188.i = icmp ne i32 %179, 0, !dbg !4300
  br i1 %tobool188.i, label %if.then189.i, label %if.end193.i, !dbg !4301

if.then189.i:                                     ; preds = %if.then187.i
  %180 = load i32, i32* %itheta.i, align 4, !dbg !4302
  %181 = load i32, i32* %qn.i, align 4, !dbg !4303
  %mul190.i = mul nsw i32 %180, %181, !dbg !4304
  %add191.i = add nsw i32 %mul190.i, 8192, !dbg !4305
  %shr192.i = ashr i32 %add191.i, 14, !dbg !4306
  store i32 %shr192.i, i32* %itheta.i, align 4, !dbg !4307
  br label %if.end193.i, !dbg !4308

if.end193.i:                                      ; preds = %if.then189.i, %if.then187.i
  %182 = load i32, i32* %quant.addr.i, align 4, !dbg !4309
  %tobool194.i = icmp ne i32 %182, 0, !dbg !4309
  br i1 %tobool194.i, label %if.then195.i, label %if.else230.i, !dbg !4310

if.then195.i:                                     ; preds = %if.end193.i
  %183 = load i32, i32* %stereo.i, align 4, !dbg !4311
  %tobool196.i = icmp ne i32 %183, 0, !dbg !4311
  br i1 %tobool196.i, label %land.lhs.true197.i, label %if.else202.i, !dbg !4312

land.lhs.true197.i:                               ; preds = %if.then195.i
  %184 = load i32, i32* %N.addr.i, align 4, !dbg !4313
  %cmp198.i = icmp sgt i32 %184, 2, !dbg !4314
  br i1 %cmp198.i, label %if.then200.i, label %if.else202.i, !dbg !4315

if.then200.i:                                     ; preds = %land.lhs.true197.i
  %185 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4316
  %186 = load i32, i32* %itheta.i, align 4, !dbg !4317
  %187 = load i32, i32* %qn.i, align 4, !dbg !4318
  %div201.i = sdiv i32 %187, 2, !dbg !4319
  call void @ff_opus_rc_enc_uint_step(%struct.OpusRangeCoder* %185, i32 %186, i32 %div201.i) #7, !dbg !4320
  br label %if.end211.i, !dbg !4320

if.else202.i:                                     ; preds = %land.lhs.true197.i, %if.then195.i
  %188 = load i32, i32* %stereo.i, align 4, !dbg !4321
  %tobool203.i = icmp ne i32 %188, 0, !dbg !4321
  br i1 %tobool203.i, label %if.then207.i, label %lor.lhs.false204.i, !dbg !4322

lor.lhs.false204.i:                               ; preds = %if.else202.i
  %189 = load i32, i32* %B0.i, align 4, !dbg !4323
  %cmp205.i = icmp sgt i32 %189, 1, !dbg !4324
  br i1 %cmp205.i, label %if.then207.i, label %if.else209.i, !dbg !4325

if.then207.i:                                     ; preds = %lor.lhs.false204.i, %if.else202.i
  %190 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4326
  %191 = load i32, i32* %itheta.i, align 4, !dbg !4327
  %192 = load i32, i32* %qn.i, align 4, !dbg !4328
  %add208.i = add nsw i32 %192, 1, !dbg !4329
  call void @ff_opus_rc_enc_uint(%struct.OpusRangeCoder* %190, i32 %191, i32 %add208.i) #7, !dbg !4330
  br label %if.end210.i, !dbg !4330

if.else209.i:                                     ; preds = %lor.lhs.false204.i
  %193 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4331
  %194 = load i32, i32* %itheta.i, align 4, !dbg !4332
  %195 = load i32, i32* %qn.i, align 4, !dbg !4333
  call void @ff_opus_rc_enc_uint_tri(%struct.OpusRangeCoder* %193, i32 %194, i32 %195) #7, !dbg !4334
  br label %if.end210.i, !dbg !3967

if.end210.i:                                      ; preds = %if.else209.i, %if.then207.i
  br label %if.end211.i, !dbg !3967

if.end211.i:                                      ; preds = %if.end210.i, %if.then200.i
  %196 = load i32, i32* %itheta.i, align 4, !dbg !4335
  %mul212.i = mul nsw i32 %196, 16384, !dbg !4336
  %197 = load i32, i32* %qn.i, align 4, !dbg !4337
  %div213.i = sdiv i32 %mul212.i, %197, !dbg !4338
  store i32 %div213.i, i32* %itheta.i, align 4, !dbg !4339
  %198 = load i32, i32* %stereo.i, align 4, !dbg !4340
  %tobool214.i = icmp ne i32 %198, 0, !dbg !4340
  br i1 %tobool214.i, label %if.then215.i, label %if.end229.i, !dbg !4341

if.then215.i:                                     ; preds = %if.end211.i
  %199 = load i32, i32* %itheta.i, align 4, !dbg !4342
  %cmp216.i = icmp eq i32 %199, 0, !dbg !4343
  br i1 %cmp216.i, label %if.then218.i, label %if.else227.i, !dbg !4344

if.then218.i:                                     ; preds = %if.then215.i
  %200 = load float*, float** %X.addr.i, align 8, !dbg !4345
  %201 = load float*, float** %Y.addr.i, align 8, !dbg !4346
  %202 = load i32, i32* %band.addr.i, align 4, !dbg !4347
  %idxprom219.i = sext i32 %202 to i64, !dbg !4348
  %203 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4348
  %block.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %203, i32 0, i32 4, !dbg !4349
  %arrayidx220.i = getelementptr inbounds [2 x %struct.CeltBlock], [2 x %struct.CeltBlock]* %block.i, i64 0, i64 0, !dbg !4348
  %lin_energy.i = getelementptr inbounds %struct.CeltBlock, %struct.CeltBlock* %arrayidx220.i, i32 0, i32 1, !dbg !4350
  %arrayidx221.i = getelementptr inbounds [21 x float], [21 x float]* %lin_energy.i, i64 0, i64 %idxprom219.i, !dbg !4348
  %204 = load float, float* %arrayidx221.i, align 4, !dbg !4348
  %205 = load i32, i32* %band.addr.i, align 4, !dbg !4351
  %idxprom222.i = sext i32 %205 to i64, !dbg !4352
  %206 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4352
  %block223.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %206, i32 0, i32 4, !dbg !4353
  %arrayidx224.i = getelementptr inbounds [2 x %struct.CeltBlock], [2 x %struct.CeltBlock]* %block223.i, i64 0, i64 1, !dbg !4352
  %lin_energy225.i = getelementptr inbounds %struct.CeltBlock, %struct.CeltBlock* %arrayidx224.i, i32 0, i32 1, !dbg !4354
  %arrayidx226.i = getelementptr inbounds [21 x float], [21 x float]* %lin_energy225.i, i64 0, i64 %idxprom222.i, !dbg !4352
  %207 = load float, float* %arrayidx226.i, align 4, !dbg !4352
  %208 = load i32, i32* %N.addr.i, align 4, !dbg !4355
  call void @celt_stereo_is_decouple(float* %200, float* %201, float %204, float %207, i32 %208) #7, !dbg !4356
  br label %if.end228.i, !dbg !4356

if.else227.i:                                     ; preds = %if.then215.i
  %209 = load float*, float** %X.addr.i, align 8, !dbg !4357
  %210 = load float*, float** %Y.addr.i, align 8, !dbg !4358
  %211 = load i32, i32* %N.addr.i, align 4, !dbg !4359
  call void @celt_stereo_ms_decouple(float* %209, float* %210, i32 %211) #7, !dbg !4360
  br label %if.end228.i, !dbg !3967

if.end228.i:                                      ; preds = %if.else227.i, %if.then218.i
  br label %if.end229.i, !dbg !4361

if.end229.i:                                      ; preds = %if.end228.i, %if.end211.i
  br label %if.end252.i, !dbg !4362

if.else230.i:                                     ; preds = %if.end193.i
  %212 = load i32, i32* %stereo.i, align 4, !dbg !4363
  %tobool231.i = icmp ne i32 %212, 0, !dbg !4363
  br i1 %tobool231.i, label %land.lhs.true232.i, label %if.else238.i, !dbg !4364

land.lhs.true232.i:                               ; preds = %if.else230.i
  %213 = load i32, i32* %N.addr.i, align 4, !dbg !4365
  %cmp233.i = icmp sgt i32 %213, 2, !dbg !4366
  br i1 %cmp233.i, label %if.then235.i, label %if.else238.i, !dbg !4367

if.then235.i:                                     ; preds = %land.lhs.true232.i
  %214 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4368
  %215 = load i32, i32* %qn.i, align 4, !dbg !4369
  %div236.i = sdiv i32 %215, 2, !dbg !4370
  %call237.i = call i32 @ff_opus_rc_dec_uint_step(%struct.OpusRangeCoder* %214, i32 %div236.i) #7, !dbg !4371
  store i32 %call237.i, i32* %itheta.i, align 4, !dbg !4372
  br label %if.end249.i, !dbg !4373

if.else238.i:                                     ; preds = %land.lhs.true232.i, %if.else230.i
  %216 = load i32, i32* %stereo.i, align 4, !dbg !4374
  %tobool239.i = icmp ne i32 %216, 0, !dbg !4374
  br i1 %tobool239.i, label %if.then243.i, label %lor.lhs.false240.i, !dbg !4375

lor.lhs.false240.i:                               ; preds = %if.else238.i
  %217 = load i32, i32* %B0.i, align 4, !dbg !4376
  %cmp241.i = icmp sgt i32 %217, 1, !dbg !4377
  br i1 %cmp241.i, label %if.then243.i, label %if.else246.i, !dbg !4378

if.then243.i:                                     ; preds = %lor.lhs.false240.i, %if.else238.i
  %218 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4379
  %219 = load i32, i32* %qn.i, align 4, !dbg !4380
  %add244.i = add nsw i32 %219, 1, !dbg !4381
  %call245.i = call i32 @ff_opus_rc_dec_uint(%struct.OpusRangeCoder* %218, i32 %add244.i) #7, !dbg !4382
  store i32 %call245.i, i32* %itheta.i, align 4, !dbg !4383
  br label %if.end248.i, !dbg !4384

if.else246.i:                                     ; preds = %lor.lhs.false240.i
  %220 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4385
  %221 = load i32, i32* %qn.i, align 4, !dbg !4386
  %call247.i = call i32 @ff_opus_rc_dec_uint_tri(%struct.OpusRangeCoder* %220, i32 %221) #7, !dbg !4387
  store i32 %call247.i, i32* %itheta.i, align 4, !dbg !4388
  br label %if.end248.i, !dbg !3967

if.end248.i:                                      ; preds = %if.else246.i, %if.then243.i
  br label %if.end249.i, !dbg !3967

if.end249.i:                                      ; preds = %if.end248.i, %if.then235.i
  %222 = load i32, i32* %itheta.i, align 4, !dbg !4389
  %mul250.i = mul nsw i32 %222, 16384, !dbg !4390
  %223 = load i32, i32* %qn.i, align 4, !dbg !4391
  %div251.i = sdiv i32 %mul250.i, %223, !dbg !4392
  store i32 %div251.i, i32* %itheta.i, align 4, !dbg !4393
  br label %if.end252.i, !dbg !3967

if.end252.i:                                      ; preds = %if.end249.i, %if.end229.i
  br label %if.end311.i, !dbg !4394

if.else253.i:                                     ; preds = %opus_rc_tell_frac.exit.i
  %224 = load i32, i32* %stereo.i, align 4, !dbg !4395
  %tobool254.i = icmp ne i32 %224, 0, !dbg !4395
  br i1 %tobool254.i, label %if.then255.i, label %if.end310.i, !dbg !4395

if.then255.i:                                     ; preds = %if.else253.i
  %225 = load i32, i32* %quant.addr.i, align 4, !dbg !4396
  %tobool256.i = icmp ne i32 %225, 0, !dbg !4396
  br i1 %tobool256.i, label %if.then257.i, label %if.else292.i, !dbg !4397

if.then257.i:                                     ; preds = %if.then255.i
  %226 = load i32, i32* %itheta.i, align 4, !dbg !4398
  %cmp258.i = icmp sgt i32 %226, 8192, !dbg !4399
  %conv259.i = zext i1 %cmp258.i to i32, !dbg !4399
  store i32 %conv259.i, i32* %inv.i, align 4, !dbg !4400
  %227 = load i32, i32* %inv.i, align 4, !dbg !4401
  %tobool260.i = icmp ne i32 %227, 0, !dbg !4401
  br i1 %tobool260.i, label %if.then261.i, label %if.end272.i, !dbg !4402

if.then261.i:                                     ; preds = %if.then257.i
  store i32 0, i32* %i.i, align 4, !dbg !4403
  br label %for.cond262.i, !dbg !4404

for.cond262.i:                                    ; preds = %for.body265.i, %if.then261.i
  %228 = load i32, i32* %i.i, align 4, !dbg !4405
  %229 = load i32, i32* %N.addr.i, align 4, !dbg !4406
  %cmp263.i = icmp slt i32 %228, %229, !dbg !4407
  br i1 %cmp263.i, label %for.body265.i, label %for.end271.i, !dbg !4408

for.body265.i:                                    ; preds = %for.cond262.i
  %230 = load i32, i32* %i.i, align 4, !dbg !4409
  %idxprom266.i = sext i32 %230 to i64, !dbg !4410
  %231 = load float*, float** %Y.addr.i, align 8, !dbg !4410
  %arrayidx267.i = getelementptr inbounds float, float* %231, i64 %idxprom266.i, !dbg !4410
  %232 = load float, float* %arrayidx267.i, align 4, !dbg !4411
  %mul268.i = fmul float %232, -1.000000e+00, !dbg !4411
  store float %mul268.i, float* %arrayidx267.i, align 4, !dbg !4411
  %233 = load i32, i32* %i.i, align 4, !dbg !4412
  %inc270.i = add nsw i32 %233, 1, !dbg !4412
  store i32 %inc270.i, i32* %i.i, align 4, !dbg !4412
  br label %for.cond262.i, !dbg !4413, !llvm.loop !2877

for.end271.i:                                     ; preds = %for.cond262.i
  br label %if.end272.i, !dbg !4414

if.end272.i:                                      ; preds = %for.end271.i, %if.then257.i
  %234 = load float*, float** %X.addr.i, align 8, !dbg !4415
  %235 = load float*, float** %Y.addr.i, align 8, !dbg !4416
  %236 = load i32, i32* %band.addr.i, align 4, !dbg !4417
  %idxprom273.i = sext i32 %236 to i64, !dbg !4418
  %237 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4418
  %block274.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %237, i32 0, i32 4, !dbg !4419
  %arrayidx275.i = getelementptr inbounds [2 x %struct.CeltBlock], [2 x %struct.CeltBlock]* %block274.i, i64 0, i64 0, !dbg !4418
  %lin_energy276.i = getelementptr inbounds %struct.CeltBlock, %struct.CeltBlock* %arrayidx275.i, i32 0, i32 1, !dbg !4420
  %arrayidx277.i = getelementptr inbounds [21 x float], [21 x float]* %lin_energy276.i, i64 0, i64 %idxprom273.i, !dbg !4418
  %238 = load float, float* %arrayidx277.i, align 4, !dbg !4418
  %239 = load i32, i32* %band.addr.i, align 4, !dbg !4421
  %idxprom278.i = sext i32 %239 to i64, !dbg !4422
  %240 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4422
  %block279.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %240, i32 0, i32 4, !dbg !4423
  %arrayidx280.i = getelementptr inbounds [2 x %struct.CeltBlock], [2 x %struct.CeltBlock]* %block279.i, i64 0, i64 1, !dbg !4422
  %lin_energy281.i = getelementptr inbounds %struct.CeltBlock, %struct.CeltBlock* %arrayidx280.i, i32 0, i32 1, !dbg !4424
  %arrayidx282.i = getelementptr inbounds [21 x float], [21 x float]* %lin_energy281.i, i64 0, i64 %idxprom278.i, !dbg !4422
  %241 = load float, float* %arrayidx282.i, align 4, !dbg !4422
  %242 = load i32, i32* %N.addr.i, align 4, !dbg !4425
  call void @celt_stereo_is_decouple(float* %234, float* %235, float %238, float %241, i32 %242) #7, !dbg !4426
  %243 = load i32, i32* %b.addr.i, align 4, !dbg !4427
  %cmp283.i = icmp sgt i32 %243, 16, !dbg !4428
  br i1 %cmp283.i, label %land.lhs.true285.i, label %if.else290.i, !dbg !4429

land.lhs.true285.i:                               ; preds = %if.end272.i
  %244 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4430
  %remaining2286.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %244, i32 0, i32 35, !dbg !4431
  %245 = load i32, i32* %remaining2286.i, align 4, !dbg !4431
  %cmp287.i = icmp sgt i32 %245, 16, !dbg !4432
  br i1 %cmp287.i, label %if.then289.i, label %if.else290.i, !dbg !4433

if.then289.i:                                     ; preds = %land.lhs.true285.i
  %246 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4434
  %247 = load i32, i32* %inv.i, align 4, !dbg !4435
  call void @ff_opus_rc_enc_log(%struct.OpusRangeCoder* %246, i32 %247, i32 2) #7, !dbg !4436
  br label %if.end291.i, !dbg !4437

if.else290.i:                                     ; preds = %land.lhs.true285.i, %if.end272.i
  store i32 0, i32* %inv.i, align 4, !dbg !4438
  br label %if.end291.i, !dbg !3967

if.end291.i:                                      ; preds = %if.else290.i, %if.then289.i
  br label %if.end309.i, !dbg !4439

if.else292.i:                                     ; preds = %if.then255.i
  %248 = load i32, i32* %b.addr.i, align 4, !dbg !4440
  %cmp293.i = icmp sgt i32 %248, 16, !dbg !4441
  br i1 %cmp293.i, label %land.lhs.true295.i, label %cond.false301.i, !dbg !4442

land.lhs.true295.i:                               ; preds = %if.else292.i
  %249 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4443
  %remaining2296.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %249, i32 0, i32 35, !dbg !4444
  %250 = load i32, i32* %remaining2296.i, align 4, !dbg !4444
  %cmp297.i = icmp sgt i32 %250, 16, !dbg !4445
  br i1 %cmp297.i, label %cond.true299.i, label %cond.false301.i, !dbg !4446

cond.true299.i:                                   ; preds = %land.lhs.true295.i
  %251 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4447
  %call300.i = call i32 @ff_opus_rc_dec_log(%struct.OpusRangeCoder* %251, i32 2) #7, !dbg !4448
  br label %cond.end302.i, !dbg !4449

cond.false301.i:                                  ; preds = %land.lhs.true295.i, %if.else292.i
  br label %cond.end302.i, !dbg !4450

cond.end302.i:                                    ; preds = %cond.false301.i, %cond.true299.i
  %cond303.i = phi i32 [ %call300.i, %cond.true299.i ], [ 0, %cond.false301.i ], !dbg !4451
  store i32 %cond303.i, i32* %inv.i, align 4, !dbg !4452
  %252 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4453
  %apply_phase_inv.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %252, i32 0, i32 8, !dbg !4454
  %253 = load i32, i32* %apply_phase_inv.i, align 16, !dbg !4454
  %tobool304.i = icmp ne i32 %253, 0, !dbg !4453
  br i1 %tobool304.i, label %cond.true305.i, label %cond.false306.i, !dbg !4453

cond.true305.i:                                   ; preds = %cond.end302.i
  %254 = load i32, i32* %inv.i, align 4, !dbg !4455
  br label %cond.end307.i, !dbg !4456

cond.false306.i:                                  ; preds = %cond.end302.i
  br label %cond.end307.i, !dbg !4457

cond.end307.i:                                    ; preds = %cond.false306.i, %cond.true305.i
  %cond308.i = phi i32 [ %254, %cond.true305.i ], [ 0, %cond.false306.i ], !dbg !4458
  store i32 %cond308.i, i32* %inv.i, align 4, !dbg !4459
  br label %if.end309.i, !dbg !3967

if.end309.i:                                      ; preds = %cond.end307.i, %if.end291.i
  store i32 0, i32* %itheta.i, align 4, !dbg !4460
  br label %if.end310.i, !dbg !4461

if.end310.i:                                      ; preds = %if.end309.i, %if.else253.i
  br label %if.end311.i, !dbg !3967

if.end311.i:                                      ; preds = %if.end310.i, %if.end252.i
  %255 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4462
  store %struct.OpusRangeCoder* %255, %struct.OpusRangeCoder** %rc.addr.i728.i, align 8, !dbg !4463
  %256 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i728.i, align 8, !dbg !4464
  %total_bits1.i734.i = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %256, i32 0, i32 4, !dbg !4465
  %257 = load i32, i32* %total_bits1.i734.i, align 8, !dbg !4465
  %shl.i735.i = shl i32 %257, 3, !dbg !4466
  store i32 %shl.i735.i, i32* %total_bits.i730.i, align 4, !dbg !4467
  %258 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i728.i, align 8, !dbg !4468
  %range2.i736.i = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %258, i32 0, i32 2, !dbg !4469
  %259 = load i32, i32* %range2.i736.i, align 8, !dbg !4469
  %or.i737.i = or i32 %259, 1, !dbg !4470
  %260 = call i32 @llvm.ctlz.i32(i32 %or.i737.i, i1 true) #7, !dbg !4471
  %sub.i738.i = sub nsw i32 31, %260, !dbg !4472
  %add.i739.i = add nsw i32 %sub.i738.i, 1, !dbg !4473
  store i32 %add.i739.i, i32* %rcbuffer.i731.i, align 4, !dbg !4474
  %261 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i728.i, align 8, !dbg !4475
  %range3.i740.i = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %261, i32 0, i32 2, !dbg !4476
  %262 = load i32, i32* %range3.i740.i, align 8, !dbg !4476
  %263 = load i32, i32* %rcbuffer.i731.i, align 4, !dbg !4477
  %sub4.i741.i = sub i32 %263, 16, !dbg !4478
  %shr.i742.i = lshr i32 %262, %sub4.i741.i, !dbg !4479
  store i32 %shr.i742.i, i32* %range.i732.i, align 4, !dbg !4480
  store i32 0, i32* %i.i729.i, align 4, !dbg !4481
  br label %for.cond.i744.i, !dbg !4482

for.cond.i744.i:                                  ; preds = %for.body.i751.i, %if.end311.i
  %264 = load i32, i32* %i.i729.i, align 4, !dbg !4483
  %cmp.i743.i = icmp ult i32 %264, 3, !dbg !4484
  br i1 %cmp.i743.i, label %for.body.i751.i, label %opus_rc_tell_frac.exit754.i, !dbg !4485

for.body.i751.i:                                  ; preds = %for.cond.i744.i
  %265 = load i32, i32* %range.i732.i, align 4, !dbg !4486
  %266 = load i32, i32* %range.i732.i, align 4, !dbg !4487
  %mul.i745.i = mul i32 %265, %266, !dbg !4488
  %shr5.i746.i = lshr i32 %mul.i745.i, 15, !dbg !4489
  store i32 %shr5.i746.i, i32* %range.i732.i, align 4, !dbg !4490
  %267 = load i32, i32* %range.i732.i, align 4, !dbg !4491
  %shr6.i747.i = lshr i32 %267, 16, !dbg !4492
  store i32 %shr6.i747.i, i32* %bit.i733.i, align 4, !dbg !4493
  %268 = load i32, i32* %rcbuffer.i731.i, align 4, !dbg !4494
  %shl7.i748.i = shl i32 %268, 1, !dbg !4495
  %269 = load i32, i32* %bit.i733.i, align 4, !dbg !4496
  %or8.i749.i = or i32 %shl7.i748.i, %269, !dbg !4497
  store i32 %or8.i749.i, i32* %rcbuffer.i731.i, align 4, !dbg !4498
  %270 = load i32, i32* %bit.i733.i, align 4, !dbg !4499
  %271 = load i32, i32* %range.i732.i, align 4, !dbg !4500
  %shr9.i750.i = lshr i32 %271, %270, !dbg !4500
  store i32 %shr9.i750.i, i32* %range.i732.i, align 4, !dbg !4500
  %272 = load i32, i32* %i.i729.i, align 4, !dbg !4501
  %inc.i752.i = add i32 %272, 1, !dbg !4501
  store i32 %inc.i752.i, i32* %i.i729.i, align 4, !dbg !4501
  br label %for.cond.i744.i, !dbg !4502, !llvm.loop !2726

opus_rc_tell_frac.exit754.i:                      ; preds = %for.cond.i744.i
  %273 = load i32, i32* %total_bits.i730.i, align 4, !dbg !4503
  %274 = load i32, i32* %rcbuffer.i731.i, align 4, !dbg !4504
  %sub10.i753.i = sub i32 %273, %274, !dbg !4505
  %275 = load i32, i32* %tell.i, align 4, !dbg !4506
  %sub313.i = sub i32 %sub10.i753.i, %275, !dbg !4507
  store i32 %sub313.i, i32* %qalloc.i, align 4, !dbg !4508
  %276 = load i32, i32* %qalloc.i, align 4, !dbg !4509
  %277 = load i32, i32* %b.addr.i, align 4, !dbg !4510
  %sub314.i = sub nsw i32 %277, %276, !dbg !4510
  store i32 %sub314.i, i32* %b.addr.i, align 4, !dbg !4510
  %278 = load i32, i32* %fill.addr.i, align 4, !dbg !4511
  store i32 %278, i32* %orig_fill.i, align 4, !dbg !4512
  %279 = load i32, i32* %itheta.i, align 4, !dbg !4513
  %cmp315.i = icmp eq i32 %279, 0, !dbg !4514
  br i1 %cmp315.i, label %if.then317.i, label %if.else319.i, !dbg !4515

if.then317.i:                                     ; preds = %opus_rc_tell_frac.exit754.i
  store i32 32767, i32* %imid.i, align 4, !dbg !4516
  store i32 0, i32* %iside.i, align 4, !dbg !4517
  %280 = load i32, i32* %fill.addr.i, align 4, !dbg !4518
  %281 = load i32, i32* %blocks.addr.i, align 4, !dbg !4519
  store i32 %280, i32* %a.addr.i755.i, align 4, !dbg !4520
  store i32 %281, i32* %p.addr.i756.i, align 4, !dbg !4520
  %282 = load i32, i32* %a.addr.i755.i, align 4, !dbg !4521
  %283 = load i32, i32* %p.addr.i756.i, align 4, !dbg !4522
  %shl.i757.i = shl i32 1, %283, !dbg !4523
  %sub.i758.i = sub nsw i32 %shl.i757.i, 1, !dbg !4524
  %and.i759.i = and i32 %282, %sub.i758.i, !dbg !4525
  store i32 %and.i759.i, i32* %fill.addr.i, align 4, !dbg !4526
  store i32 -16384, i32* %delta.i, align 4, !dbg !4527
  br label %if.end342.i, !dbg !4528

if.else319.i:                                     ; preds = %opus_rc_tell_frac.exit754.i
  %284 = load i32, i32* %itheta.i, align 4, !dbg !4529
  %cmp320.i = icmp eq i32 %284, 16384, !dbg !4530
  br i1 %cmp320.i, label %if.then322.i, label %if.else327.i, !dbg !4529

if.then322.i:                                     ; preds = %if.else319.i
  store i32 0, i32* %imid.i, align 4, !dbg !4531
  store i32 32767, i32* %iside.i, align 4, !dbg !4532
  %285 = load i32, i32* %blocks.addr.i, align 4, !dbg !4533
  %shl323.i = shl i32 1, %285, !dbg !4534
  %sub324.i = sub nsw i32 %shl323.i, 1, !dbg !4535
  %286 = load i32, i32* %blocks.addr.i, align 4, !dbg !4536
  %shl325.i = shl i32 %sub324.i, %286, !dbg !4537
  %287 = load i32, i32* %fill.addr.i, align 4, !dbg !4538
  %and326.i = and i32 %287, %shl325.i, !dbg !4538
  store i32 %and326.i, i32* %fill.addr.i, align 4, !dbg !4538
  store i32 16384, i32* %delta.i, align 4, !dbg !4539
  br label %if.end341.i, !dbg !4540

if.else327.i:                                     ; preds = %if.else319.i
  %288 = load i32, i32* %itheta.i, align 4, !dbg !4541
  %conv328.i = trunc i32 %288 to i16, !dbg !4541
  %call329.i = call signext i16 @celt_cos(i16 signext %conv328.i) #7, !dbg !4542
  %conv330.i = sext i16 %call329.i to i32, !dbg !4542
  store i32 %conv330.i, i32* %imid.i, align 4, !dbg !4543
  %289 = load i32, i32* %itheta.i, align 4, !dbg !4544
  %sub331.i = sub nsw i32 16384, %289, !dbg !4545
  %conv332.i = trunc i32 %sub331.i to i16, !dbg !4546
  %call333.i = call signext i16 @celt_cos(i16 signext %conv332.i) #7, !dbg !4547
  %conv334.i = sext i16 %call333.i to i32, !dbg !4547
  store i32 %conv334.i, i32* %iside.i, align 4, !dbg !4548
  %290 = load i32, i32* %N.addr.i, align 4, !dbg !4549
  %sub335.i = sub nsw i32 %290, 1, !dbg !4550
  %shl336.i = shl i32 %sub335.i, 7, !dbg !4551
  %291 = load i32, i32* %iside.i, align 4, !dbg !4552
  %292 = load i32, i32* %imid.i, align 4, !dbg !4553
  %call337.i = call i32 @celt_log2tan(i32 %291, i32 %292) #7, !dbg !4554
  %mul338.i = mul nsw i32 %shl336.i, %call337.i, !dbg !4555
  %add339.i = add nsw i32 %mul338.i, 16384, !dbg !4556
  %shr340.i = ashr i32 %add339.i, 15, !dbg !4557
  store i32 %shr340.i, i32* %delta.i, align 4, !dbg !4558
  br label %if.end341.i, !dbg !3967

if.end341.i:                                      ; preds = %if.else327.i, %if.then322.i
  br label %if.end342.i, !dbg !3967

if.end342.i:                                      ; preds = %if.end341.i, %if.then317.i
  %293 = load i32, i32* %imid.i, align 4, !dbg !4559
  %conv343.i = sitofp i32 %293 to float, !dbg !4559
  %div344.i = fdiv float %conv343.i, 3.276800e+04, !dbg !4560
  store float %div344.i, float* %mid.i, align 4, !dbg !4561
  %294 = load i32, i32* %iside.i, align 4, !dbg !4562
  %conv345.i = sitofp i32 %294 to float, !dbg !4562
  %div346.i = fdiv float %conv345.i, 3.276800e+04, !dbg !4563
  store float %div346.i, float* %side.i, align 4, !dbg !4564
  %295 = load i32, i32* %N.addr.i, align 4, !dbg !4565
  %cmp347.i = icmp eq i32 %295, 2, !dbg !4566
  br i1 %cmp347.i, label %land.lhs.true349.i, label %if.else429.i, !dbg !4567

land.lhs.true349.i:                               ; preds = %if.end342.i
  %296 = load i32, i32* %stereo.i, align 4, !dbg !4568
  %tobool350.i = icmp ne i32 %296, 0, !dbg !4568
  br i1 %tobool350.i, label %if.then351.i, label %if.else429.i, !dbg !4569

if.then351.i:                                     ; preds = %land.lhs.true349.i
  store i32 0, i32* %sign352.i, align 4, !dbg !3905
  %297 = load i32, i32* %b.addr.i, align 4, !dbg !4570
  store i32 %297, i32* %mbits.i, align 4, !dbg !4571
  %298 = load i32, i32* %itheta.i, align 4, !dbg !4572
  %cmp355.i = icmp ne i32 %298, 0, !dbg !4573
  br i1 %cmp355.i, label %land.rhs357.i, label %land.end360.i, !dbg !4574

land.rhs357.i:                                    ; preds = %if.then351.i
  %299 = load i32, i32* %itheta.i, align 4, !dbg !4575
  %cmp358.i = icmp ne i32 %299, 16384, !dbg !4576
  br label %land.end360.i, !dbg !3967

land.end360.i:                                    ; preds = %land.rhs357.i, %if.then351.i
  %300 = phi i1 [ false, %if.then351.i ], [ %cmp358.i, %land.rhs357.i ], !dbg !3967
  %cond361.i = select i1 %300, i32 8, i32 0, !dbg !4577
  store i32 %cond361.i, i32* %sbits.i, align 4, !dbg !4578
  %301 = load i32, i32* %sbits.i, align 4, !dbg !4579
  %302 = load i32, i32* %mbits.i, align 4, !dbg !4580
  %sub362.i = sub nsw i32 %302, %301, !dbg !4580
  store i32 %sub362.i, i32* %mbits.i, align 4, !dbg !4580
  %303 = load i32, i32* %itheta.i, align 4, !dbg !4581
  %cmp363.i = icmp sgt i32 %303, 8192, !dbg !4582
  %conv364.i = zext i1 %cmp363.i to i32, !dbg !4582
  store i32 %conv364.i, i32* %c.i, align 4, !dbg !4583
  %304 = load i32, i32* %qalloc.i, align 4, !dbg !4584
  %305 = load i32, i32* %sbits.i, align 4, !dbg !4585
  %add365.i = add nsw i32 %304, %305, !dbg !4586
  %306 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4587
  %remaining2366.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %306, i32 0, i32 35, !dbg !4588
  %307 = load i32, i32* %remaining2366.i, align 4, !dbg !4589
  %sub367.i = sub nsw i32 %307, %add365.i, !dbg !4589
  store i32 %sub367.i, i32* %remaining2366.i, align 4, !dbg !4589
  %308 = load i32, i32* %c.i, align 4, !dbg !4590
  %tobool368.i = icmp ne i32 %308, 0, !dbg !4590
  br i1 %tobool368.i, label %cond.true369.i, label %cond.false370.i, !dbg !4590

cond.true369.i:                                   ; preds = %land.end360.i
  %309 = load float*, float** %Y.addr.i, align 8, !dbg !4591
  br label %cond.end371.i, !dbg !4592

cond.false370.i:                                  ; preds = %land.end360.i
  %310 = load float*, float** %X.addr.i, align 8, !dbg !4593
  br label %cond.end371.i, !dbg !4594

cond.end371.i:                                    ; preds = %cond.false370.i, %cond.true369.i
  %cond372.i = phi float* [ %309, %cond.true369.i ], [ %310, %cond.false370.i ], !dbg !4595
  store float* %cond372.i, float** %x2.i, align 8, !dbg !4596
  %311 = load i32, i32* %c.i, align 4, !dbg !4597
  %tobool373.i = icmp ne i32 %311, 0, !dbg !4597
  br i1 %tobool373.i, label %cond.true374.i, label %cond.false375.i, !dbg !4597

cond.true374.i:                                   ; preds = %cond.end371.i
  %312 = load float*, float** %X.addr.i, align 8, !dbg !4598
  br label %cond.end376.i, !dbg !4599

cond.false375.i:                                  ; preds = %cond.end371.i
  %313 = load float*, float** %Y.addr.i, align 8, !dbg !4600
  br label %cond.end376.i, !dbg !4601

cond.end376.i:                                    ; preds = %cond.false375.i, %cond.true374.i
  %cond377.i = phi float* [ %312, %cond.true374.i ], [ %313, %cond.false375.i ], !dbg !4602
  store float* %cond377.i, float** %y2.i, align 8, !dbg !4603
  %314 = load i32, i32* %sbits.i, align 4, !dbg !4604
  %tobool378.i = icmp ne i32 %314, 0, !dbg !4604
  br i1 %tobool378.i, label %if.then379.i, label %if.end394.i, !dbg !4605

if.then379.i:                                     ; preds = %cond.end376.i
  %315 = load i32, i32* %quant.addr.i, align 4, !dbg !4606
  %tobool380.i = icmp ne i32 %315, 0, !dbg !4606
  br i1 %tobool380.i, label %if.then381.i, label %if.else391.i, !dbg !4607

if.then381.i:                                     ; preds = %if.then379.i
  %316 = load float*, float** %x2.i, align 8, !dbg !4608
  %317 = load float, float* %316, align 4, !dbg !4608
  %318 = load float*, float** %y2.i, align 8, !dbg !4609
  %arrayidx383.i = getelementptr inbounds float, float* %318, i64 1, !dbg !4609
  %319 = load float, float* %arrayidx383.i, align 4, !dbg !4609
  %mul384.i = fmul float %317, %319, !dbg !4610
  %320 = load float*, float** %x2.i, align 8, !dbg !4611
  %arrayidx385.i = getelementptr inbounds float, float* %320, i64 1, !dbg !4611
  %321 = load float, float* %arrayidx385.i, align 4, !dbg !4611
  %322 = load float*, float** %y2.i, align 8, !dbg !4612
  %323 = load float, float* %322, align 4, !dbg !4612
  %mul387.i = fmul float %321, %323, !dbg !4613
  %sub388.i = fsub float %mul384.i, %mul387.i, !dbg !4614
  %cmp389.i = fcmp olt float %sub388.i, 0.000000e+00, !dbg !4615
  %conv390.i = zext i1 %cmp389.i to i32, !dbg !4615
  store i32 %conv390.i, i32* %sign352.i, align 4, !dbg !4616
  %324 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4617
  %325 = load i32, i32* %sign352.i, align 4, !dbg !4618
  call void @ff_opus_rc_put_raw(%struct.OpusRangeCoder* %324, i32 %325, i32 1) #7, !dbg !4619
  br label %if.end393.i, !dbg !4620

if.else391.i:                                     ; preds = %if.then379.i
  %326 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4621
  %call392.i = call i32 @ff_opus_rc_get_raw(%struct.OpusRangeCoder* %326, i32 1) #7, !dbg !4622
  store i32 %call392.i, i32* %sign352.i, align 4, !dbg !4623
  br label %if.end393.i, !dbg !3967

if.end393.i:                                      ; preds = %if.else391.i, %if.then381.i
  br label %if.end394.i, !dbg !4624

if.end394.i:                                      ; preds = %if.end393.i, %cond.end376.i
  %327 = load i32, i32* %sign352.i, align 4, !dbg !4625
  %mul395.i = mul nsw i32 2, %327, !dbg !4626
  %sub396.i = sub nsw i32 1, %mul395.i, !dbg !4627
  store i32 %sub396.i, i32* %sign352.i, align 4, !dbg !4628
  %328 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !4629
  %quant_band.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %328, i32 0, i32 3, !dbg !4630
  %329 = load i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)*, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)** %quant_band.i, align 8, !dbg !4630
  %330 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !4631
  %331 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4632
  %332 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4633
  %333 = load i32, i32* %band.addr.i, align 4, !dbg !4634
  %334 = load float*, float** %x2.i, align 8, !dbg !4635
  %335 = load i32, i32* %N.addr.i, align 4, !dbg !4636
  %336 = load i32, i32* %mbits.i, align 4, !dbg !4637
  %337 = load i32, i32* %blocks.addr.i, align 4, !dbg !4638
  %338 = load float*, float** %lowband.addr.i, align 8, !dbg !4639
  %339 = load i32, i32* %duration.addr.i, align 4, !dbg !4640
  %340 = load float*, float** %lowband_out.addr.i, align 8, !dbg !4641
  %341 = load i32, i32* %level.addr.i, align 4, !dbg !4642
  %342 = load float, float* %gain.addr.i, align 4, !dbg !4643
  %343 = load float*, float** %lowband_scratch.addr.i, align 8, !dbg !4644
  %344 = load i32, i32* %orig_fill.i, align 4, !dbg !4645
  %call397.i = call i32 %329(%struct.CeltPVQ* %330, %struct.CeltFrame* %331, %struct.OpusRangeCoder* %332, i32 %333, float* %334, float* null, i32 %335, i32 %336, i32 %337, float* %338, i32 %339, float* %340, i32 %341, float %342, float* %343, i32 %344) #7, !dbg !4629
  store i32 %call397.i, i32* %cm.i, align 4, !dbg !4646
  %345 = load i32, i32* %sign352.i, align 4, !dbg !4647
  %sub398.i = sub nsw i32 0, %345, !dbg !4648
  %conv399.i = sitofp i32 %sub398.i to float, !dbg !4648
  %346 = load float*, float** %x2.i, align 8, !dbg !4649
  %arrayidx400.i = getelementptr inbounds float, float* %346, i64 1, !dbg !4649
  %347 = load float, float* %arrayidx400.i, align 4, !dbg !4649
  %mul401.i = fmul float %conv399.i, %347, !dbg !4650
  %348 = load float*, float** %y2.i, align 8, !dbg !4651
  store float %mul401.i, float* %348, align 4, !dbg !4652
  %349 = load i32, i32* %sign352.i, align 4, !dbg !4653
  %conv403.i = sitofp i32 %349 to float, !dbg !4653
  %350 = load float*, float** %x2.i, align 8, !dbg !4654
  %351 = load float, float* %350, align 4, !dbg !4654
  %mul405.i = fmul float %conv403.i, %351, !dbg !4655
  %352 = load float*, float** %y2.i, align 8, !dbg !4656
  %arrayidx406.i = getelementptr inbounds float, float* %352, i64 1, !dbg !4656
  store float %mul405.i, float* %arrayidx406.i, align 4, !dbg !4657
  %353 = load float, float* %mid.i, align 4, !dbg !4658
  %354 = load float*, float** %X.addr.i, align 8, !dbg !4659
  %355 = load float, float* %354, align 4, !dbg !4660
  %mul408.i = fmul float %355, %353, !dbg !4660
  store float %mul408.i, float* %354, align 4, !dbg !4660
  %356 = load float, float* %mid.i, align 4, !dbg !4661
  %357 = load float*, float** %X.addr.i, align 8, !dbg !4662
  %arrayidx409.i = getelementptr inbounds float, float* %357, i64 1, !dbg !4662
  %358 = load float, float* %arrayidx409.i, align 4, !dbg !4663
  %mul410.i = fmul float %358, %356, !dbg !4663
  store float %mul410.i, float* %arrayidx409.i, align 4, !dbg !4663
  %359 = load float, float* %side.i, align 4, !dbg !4664
  %360 = load float*, float** %Y.addr.i, align 8, !dbg !4665
  %361 = load float, float* %360, align 4, !dbg !4666
  %mul412.i = fmul float %361, %359, !dbg !4666
  store float %mul412.i, float* %360, align 4, !dbg !4666
  %362 = load float, float* %side.i, align 4, !dbg !4667
  %363 = load float*, float** %Y.addr.i, align 8, !dbg !4668
  %arrayidx413.i = getelementptr inbounds float, float* %363, i64 1, !dbg !4668
  %364 = load float, float* %arrayidx413.i, align 4, !dbg !4669
  %mul414.i = fmul float %364, %362, !dbg !4669
  store float %mul414.i, float* %arrayidx413.i, align 4, !dbg !4669
  %365 = load float*, float** %X.addr.i, align 8, !dbg !4670
  %366 = load float, float* %365, align 4, !dbg !4670
  store float %366, float* %tmp.i, align 4, !dbg !4671
  %367 = load float, float* %tmp.i, align 4, !dbg !4672
  %368 = load float*, float** %Y.addr.i, align 8, !dbg !4673
  %369 = load float, float* %368, align 4, !dbg !4673
  %sub417.i = fsub float %367, %369, !dbg !4674
  %370 = load float*, float** %X.addr.i, align 8, !dbg !4675
  store float %sub417.i, float* %370, align 4, !dbg !4676
  %371 = load float, float* %tmp.i, align 4, !dbg !4677
  %372 = load float*, float** %Y.addr.i, align 8, !dbg !4678
  %373 = load float, float* %372, align 4, !dbg !4678
  %add420.i = fadd float %371, %373, !dbg !4679
  %374 = load float*, float** %Y.addr.i, align 8, !dbg !4680
  store float %add420.i, float* %374, align 4, !dbg !4681
  %375 = load float*, float** %X.addr.i, align 8, !dbg !4682
  %arrayidx422.i = getelementptr inbounds float, float* %375, i64 1, !dbg !4682
  %376 = load float, float* %arrayidx422.i, align 4, !dbg !4682
  store float %376, float* %tmp.i, align 4, !dbg !4683
  %377 = load float, float* %tmp.i, align 4, !dbg !4684
  %378 = load float*, float** %Y.addr.i, align 8, !dbg !4685
  %arrayidx423.i = getelementptr inbounds float, float* %378, i64 1, !dbg !4685
  %379 = load float, float* %arrayidx423.i, align 4, !dbg !4685
  %sub424.i = fsub float %377, %379, !dbg !4686
  %380 = load float*, float** %X.addr.i, align 8, !dbg !4687
  %arrayidx425.i = getelementptr inbounds float, float* %380, i64 1, !dbg !4687
  store float %sub424.i, float* %arrayidx425.i, align 4, !dbg !4688
  %381 = load float, float* %tmp.i, align 4, !dbg !4689
  %382 = load float*, float** %Y.addr.i, align 8, !dbg !4690
  %arrayidx426.i = getelementptr inbounds float, float* %382, i64 1, !dbg !4690
  %383 = load float, float* %arrayidx426.i, align 4, !dbg !4690
  %add427.i = fadd float %381, %383, !dbg !4691
  %384 = load float*, float** %Y.addr.i, align 8, !dbg !4692
  %arrayidx428.i = getelementptr inbounds float, float* %384, i64 1, !dbg !4692
  store float %add427.i, float* %arrayidx428.i, align 4, !dbg !4693
  br label %if.end548.i, !dbg !4694

if.else429.i:                                     ; preds = %land.lhs.true349.i, %if.end342.i
  store float* null, float** %next_lowband2.i, align 8, !dbg !3909
  store float* null, float** %next_lowband_out1.i, align 8, !dbg !3910
  store i32 0, i32* %next_level.i, align 4, !dbg !3911
  %385 = load i32, i32* %B0.i, align 4, !dbg !4695
  %cmp435.i = icmp sgt i32 %385, 1, !dbg !4696
  br i1 %cmp435.i, label %land.lhs.true437.i, label %if.end465.i, !dbg !4697

land.lhs.true437.i:                               ; preds = %if.else429.i
  %386 = load i32, i32* %stereo.i, align 4, !dbg !4698
  %tobool438.i = icmp ne i32 %386, 0, !dbg !4698
  br i1 %tobool438.i, label %if.end465.i, label %land.lhs.true439.i, !dbg !4699

land.lhs.true439.i:                               ; preds = %land.lhs.true437.i
  %387 = load i32, i32* %itheta.i, align 4, !dbg !4700
  %and440.i = and i32 %387, 16383, !dbg !4701
  %tobool441.i = icmp ne i32 %and440.i, 0, !dbg !4701
  br i1 %tobool441.i, label %if.then442.i, label %if.end465.i, !dbg !4702

if.then442.i:                                     ; preds = %land.lhs.true439.i
  %388 = load i32, i32* %itheta.i, align 4, !dbg !4703
  %cmp443.i = icmp sgt i32 %388, 8192, !dbg !4704
  br i1 %cmp443.i, label %if.then445.i, label %if.else449.i, !dbg !4705

if.then445.i:                                     ; preds = %if.then442.i
  %389 = load i32, i32* %delta.i, align 4, !dbg !4706
  %390 = load i32, i32* %duration.addr.i, align 4, !dbg !4707
  %sub446.i = sub nsw i32 4, %390, !dbg !4708
  %shr447.i = ashr i32 %389, %sub446.i, !dbg !4709
  %391 = load i32, i32* %delta.i, align 4, !dbg !4710
  %sub448.i = sub nsw i32 %391, %shr447.i, !dbg !4710
  store i32 %sub448.i, i32* %delta.i, align 4, !dbg !4710
  br label %if.end464.i, !dbg !4711

if.else449.i:                                     ; preds = %if.then442.i
  %392 = load i32, i32* %delta.i, align 4, !dbg !4712
  %393 = load i32, i32* %N.addr.i, align 4, !dbg !4713
  %shl450.i = shl i32 %393, 3, !dbg !4714
  %394 = load i32, i32* %duration.addr.i, align 4, !dbg !4715
  %sub451.i = sub nsw i32 5, %394, !dbg !4716
  %shr452.i = ashr i32 %shl450.i, %sub451.i, !dbg !4717
  %add453.i = add nsw i32 %392, %shr452.i, !dbg !4718
  %cmp454.i = icmp sgt i32 0, %add453.i, !dbg !4719
  br i1 %cmp454.i, label %cond.true456.i, label %cond.false461.i, !dbg !4720

cond.true456.i:                                   ; preds = %if.else449.i
  %395 = load i32, i32* %delta.i, align 4, !dbg !4721
  %396 = load i32, i32* %N.addr.i, align 4, !dbg !4722
  %shl457.i = shl i32 %396, 3, !dbg !4723
  %397 = load i32, i32* %duration.addr.i, align 4, !dbg !4724
  %sub458.i = sub nsw i32 5, %397, !dbg !4725
  %shr459.i = ashr i32 %shl457.i, %sub458.i, !dbg !4726
  %add460.i = add nsw i32 %395, %shr459.i, !dbg !4727
  br label %cond.end462.i, !dbg !4728

cond.false461.i:                                  ; preds = %if.else449.i
  br label %cond.end462.i, !dbg !4729

cond.end462.i:                                    ; preds = %cond.false461.i, %cond.true456.i
  %cond463.i = phi i32 [ %add460.i, %cond.true456.i ], [ 0, %cond.false461.i ], !dbg !4730
  store i32 %cond463.i, i32* %delta.i, align 4, !dbg !4731
  br label %if.end464.i, !dbg !3967

if.end464.i:                                      ; preds = %cond.end462.i, %if.then445.i
  br label %if.end465.i, !dbg !4732

if.end465.i:                                      ; preds = %if.end464.i, %land.lhs.true439.i, %land.lhs.true437.i, %if.else429.i
  %398 = load i32, i32* %b.addr.i, align 4, !dbg !4733
  %399 = load i32, i32* %delta.i, align 4, !dbg !4734
  %sub466.i = sub nsw i32 %398, %399, !dbg !4735
  %div467.i = sdiv i32 %sub466.i, 2, !dbg !4736
  %400 = load i32, i32* %b.addr.i, align 4, !dbg !4737
  store i32 %div467.i, i32* %a.addr.i760.i, align 4, !dbg !4738
  store i32 0, i32* %amin.addr.i.i, align 4, !dbg !4738
  store i32 %400, i32* %amax.addr.i.i, align 4, !dbg !4738
  %401 = load i32, i32* %a.addr.i760.i, align 4, !dbg !4739
  %402 = load i32, i32* %amin.addr.i.i, align 4, !dbg !4740
  %cmp.i761.i = icmp slt i32 %401, %402, !dbg !4741
  br i1 %cmp.i761.i, label %if.then.i.i, label %if.else.i.i, !dbg !4742

if.then.i.i:                                      ; preds = %if.end465.i
  %403 = load i32, i32* %amin.addr.i.i, align 4, !dbg !4743
  store i32 %403, i32* %retval.i.i, align 4, !dbg !4744
  br label %av_clip_c.exit.i, !dbg !4744

if.else.i.i:                                      ; preds = %if.end465.i
  %404 = load i32, i32* %a.addr.i760.i, align 4, !dbg !4745
  %405 = load i32, i32* %amax.addr.i.i, align 4, !dbg !4746
  %cmp1.i.i = icmp sgt i32 %404, %405, !dbg !4747
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.else3.i.i, !dbg !4748

if.then2.i.i:                                     ; preds = %if.else.i.i
  %406 = load i32, i32* %amax.addr.i.i, align 4, !dbg !4749
  store i32 %406, i32* %retval.i.i, align 4, !dbg !4750
  br label %av_clip_c.exit.i, !dbg !4750

if.else3.i.i:                                     ; preds = %if.else.i.i
  %407 = load i32, i32* %a.addr.i760.i, align 4, !dbg !4751
  store i32 %407, i32* %retval.i.i, align 4, !dbg !4752
  br label %av_clip_c.exit.i, !dbg !4752

av_clip_c.exit.i:                                 ; preds = %if.else3.i.i, %if.then2.i.i, %if.then.i.i
  %408 = load i32, i32* %retval.i.i, align 4, !dbg !4753
  store i32 %408, i32* %mbits.i, align 4, !dbg !4754
  %409 = load i32, i32* %b.addr.i, align 4, !dbg !4755
  %410 = load i32, i32* %mbits.i, align 4, !dbg !4756
  %sub469.i = sub nsw i32 %409, %410, !dbg !4757
  store i32 %sub469.i, i32* %sbits.i, align 4, !dbg !4758
  %411 = load i32, i32* %qalloc.i, align 4, !dbg !4759
  %412 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4760
  %remaining2470.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %412, i32 0, i32 35, !dbg !4761
  %413 = load i32, i32* %remaining2470.i, align 4, !dbg !4762
  %sub471.i = sub nsw i32 %413, %411, !dbg !4762
  store i32 %sub471.i, i32* %remaining2470.i, align 4, !dbg !4762
  %414 = load float*, float** %lowband.addr.i, align 8, !dbg !4763
  %tobool472.i = icmp ne float* %414, null, !dbg !4763
  br i1 %tobool472.i, label %land.lhs.true473.i, label %if.end478.i, !dbg !4764

land.lhs.true473.i:                               ; preds = %av_clip_c.exit.i
  %415 = load i32, i32* %stereo.i, align 4, !dbg !4765
  %tobool474.i = icmp ne i32 %415, 0, !dbg !4765
  br i1 %tobool474.i, label %if.end478.i, label %if.then475.i, !dbg !4766

if.then475.i:                                     ; preds = %land.lhs.true473.i
  %416 = load float*, float** %lowband.addr.i, align 8, !dbg !4767
  %417 = load i32, i32* %N.addr.i, align 4, !dbg !4768
  %idx.ext476.i = sext i32 %417 to i64, !dbg !4769
  %add.ptr477.i = getelementptr inbounds float, float* %416, i64 %idx.ext476.i, !dbg !4769
  store float* %add.ptr477.i, float** %next_lowband2.i, align 8, !dbg !4770
  br label %if.end478.i, !dbg !4771

if.end478.i:                                      ; preds = %if.then475.i, %land.lhs.true473.i, %av_clip_c.exit.i
  %418 = load i32, i32* %stereo.i, align 4, !dbg !4772
  %tobool479.i = icmp ne i32 %418, 0, !dbg !4772
  br i1 %tobool479.i, label %if.then480.i, label %if.else481.i, !dbg !4773

if.then480.i:                                     ; preds = %if.end478.i
  %419 = load float*, float** %lowband_out.addr.i, align 8, !dbg !4774
  store float* %419, float** %next_lowband_out1.i, align 8, !dbg !4775
  br label %if.end483.i, !dbg !4776

if.else481.i:                                     ; preds = %if.end478.i
  %420 = load i32, i32* %level.addr.i, align 4, !dbg !4777
  %add482.i = add nsw i32 %420, 1, !dbg !4778
  store i32 %add482.i, i32* %next_level.i, align 4, !dbg !4779
  br label %if.end483.i, !dbg !3967

if.end483.i:                                      ; preds = %if.else481.i, %if.then480.i
  %421 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4780
  %remaining2484.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %421, i32 0, i32 35, !dbg !4781
  %422 = load i32, i32* %remaining2484.i, align 4, !dbg !4781
  store i32 %422, i32* %rebalance.i, align 4, !dbg !4782
  %423 = load i32, i32* %mbits.i, align 4, !dbg !4783
  %424 = load i32, i32* %sbits.i, align 4, !dbg !4784
  %cmp485.i = icmp sge i32 %423, %424, !dbg !4785
  br i1 %cmp485.i, label %if.then487.i, label %if.else517.i, !dbg !4786

if.then487.i:                                     ; preds = %if.end483.i
  %425 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !4787
  %quant_band488.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %425, i32 0, i32 3, !dbg !4788
  %426 = load i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)*, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)** %quant_band488.i, align 8, !dbg !4788
  %427 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !4789
  %428 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4790
  %429 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4791
  %430 = load i32, i32* %band.addr.i, align 4, !dbg !4792
  %431 = load float*, float** %X.addr.i, align 8, !dbg !4793
  %432 = load i32, i32* %N.addr.i, align 4, !dbg !4794
  %433 = load i32, i32* %mbits.i, align 4, !dbg !4795
  %434 = load i32, i32* %blocks.addr.i, align 4, !dbg !4796
  %435 = load float*, float** %lowband.addr.i, align 8, !dbg !4797
  %436 = load i32, i32* %duration.addr.i, align 4, !dbg !4798
  %437 = load float*, float** %next_lowband_out1.i, align 8, !dbg !4799
  %438 = load i32, i32* %next_level.i, align 4, !dbg !4800
  %439 = load i32, i32* %stereo.i, align 4, !dbg !4801
  %tobool489.i = icmp ne i32 %439, 0, !dbg !4801
  br i1 %tobool489.i, label %cond.true490.i, label %cond.false491.i, !dbg !4801

cond.true490.i:                                   ; preds = %if.then487.i
  br label %cond.end493.i, !dbg !4802

cond.false491.i:                                  ; preds = %if.then487.i
  %440 = load float, float* %gain.addr.i, align 4, !dbg !4803
  %441 = load float, float* %mid.i, align 4, !dbg !4804
  %mul492.i = fmul float %440, %441, !dbg !4805
  br label %cond.end493.i, !dbg !4806

cond.end493.i:                                    ; preds = %cond.false491.i, %cond.true490.i
  %cond494.i = phi float [ 1.000000e+00, %cond.true490.i ], [ %mul492.i, %cond.false491.i ], !dbg !4807
  %442 = load float*, float** %lowband_scratch.addr.i, align 8, !dbg !4808
  %443 = load i32, i32* %fill.addr.i, align 4, !dbg !4809
  %call495.i = call i32 %426(%struct.CeltPVQ* %427, %struct.CeltFrame* %428, %struct.OpusRangeCoder* %429, i32 %430, float* %431, float* null, i32 %432, i32 %433, i32 %434, float* %435, i32 %436, float* %437, i32 %438, float %cond494.i, float* %442, i32 %443) #7, !dbg !4810
  store i32 %call495.i, i32* %cm.i, align 4, !dbg !4811
  %444 = load i32, i32* %mbits.i, align 4, !dbg !4812
  %445 = load i32, i32* %rebalance.i, align 4, !dbg !4813
  %446 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4814
  %remaining2496.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %446, i32 0, i32 35, !dbg !4815
  %447 = load i32, i32* %remaining2496.i, align 4, !dbg !4815
  %sub497.i = sub nsw i32 %445, %447, !dbg !4816
  %sub498.i = sub nsw i32 %444, %sub497.i, !dbg !4817
  store i32 %sub498.i, i32* %rebalance.i, align 4, !dbg !4818
  %448 = load i32, i32* %rebalance.i, align 4, !dbg !4819
  %cmp499.i = icmp sgt i32 %448, 24, !dbg !4820
  br i1 %cmp499.i, label %land.lhs.true501.i, label %if.end507.i, !dbg !4821

land.lhs.true501.i:                               ; preds = %cond.end493.i
  %449 = load i32, i32* %itheta.i, align 4, !dbg !4822
  %cmp502.i = icmp ne i32 %449, 0, !dbg !4823
  br i1 %cmp502.i, label %if.then504.i, label %if.end507.i, !dbg !4824

if.then504.i:                                     ; preds = %land.lhs.true501.i
  %450 = load i32, i32* %rebalance.i, align 4, !dbg !4825
  %sub505.i = sub nsw i32 %450, 24, !dbg !4826
  %451 = load i32, i32* %sbits.i, align 4, !dbg !4827
  %add506.i = add nsw i32 %451, %sub505.i, !dbg !4827
  store i32 %add506.i, i32* %sbits.i, align 4, !dbg !4827
  br label %if.end507.i, !dbg !4828

if.end507.i:                                      ; preds = %if.then504.i, %land.lhs.true501.i, %cond.end493.i
  %452 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !4829
  %quant_band508.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %452, i32 0, i32 3, !dbg !4830
  %453 = load i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)*, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)** %quant_band508.i, align 8, !dbg !4830
  %454 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !4831
  %455 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4832
  %456 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4833
  %457 = load i32, i32* %band.addr.i, align 4, !dbg !4834
  %458 = load float*, float** %Y.addr.i, align 8, !dbg !4835
  %459 = load i32, i32* %N.addr.i, align 4, !dbg !4836
  %460 = load i32, i32* %sbits.i, align 4, !dbg !4837
  %461 = load i32, i32* %blocks.addr.i, align 4, !dbg !4838
  %462 = load float*, float** %next_lowband2.i, align 8, !dbg !4839
  %463 = load i32, i32* %duration.addr.i, align 4, !dbg !4840
  %464 = load i32, i32* %next_level.i, align 4, !dbg !4841
  %465 = load float, float* %gain.addr.i, align 4, !dbg !4842
  %466 = load float, float* %side.i, align 4, !dbg !4843
  %mul509.i = fmul float %465, %466, !dbg !4844
  %467 = load i32, i32* %fill.addr.i, align 4, !dbg !4845
  %468 = load i32, i32* %blocks.addr.i, align 4, !dbg !4846
  %shr510.i = ashr i32 %467, %468, !dbg !4847
  %call511.i = call i32 %453(%struct.CeltPVQ* %454, %struct.CeltFrame* %455, %struct.OpusRangeCoder* %456, i32 %457, float* %458, float* null, i32 %459, i32 %460, i32 %461, float* %462, i32 %463, float* null, i32 %464, float %mul509.i, float* null, i32 %shr510.i) #7, !dbg !4829
  store i32 %call511.i, i32* %cmt.i, align 4, !dbg !4848
  %469 = load i32, i32* %cmt.i, align 4, !dbg !4849
  %470 = load i32, i32* %B0.i, align 4, !dbg !4850
  %shr512.i = ashr i32 %470, 1, !dbg !4851
  %471 = load i32, i32* %stereo.i, align 4, !dbg !4852
  %sub513.i = sub nsw i32 %471, 1, !dbg !4853
  %and514.i = and i32 %shr512.i, %sub513.i, !dbg !4854
  %shl515.i = shl i32 %469, %and514.i, !dbg !4855
  %472 = load i32, i32* %cm.i, align 4, !dbg !4856
  %or516.i = or i32 %472, %shl515.i, !dbg !4856
  store i32 %or516.i, i32* %cm.i, align 4, !dbg !4856
  br label %if.end547.i, !dbg !4857

if.else517.i:                                     ; preds = %if.end483.i
  %473 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !4858
  %quant_band518.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %473, i32 0, i32 3, !dbg !4859
  %474 = load i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)*, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)** %quant_band518.i, align 8, !dbg !4859
  %475 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !4860
  %476 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4861
  %477 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4862
  %478 = load i32, i32* %band.addr.i, align 4, !dbg !4863
  %479 = load float*, float** %Y.addr.i, align 8, !dbg !4864
  %480 = load i32, i32* %N.addr.i, align 4, !dbg !4865
  %481 = load i32, i32* %sbits.i, align 4, !dbg !4866
  %482 = load i32, i32* %blocks.addr.i, align 4, !dbg !4867
  %483 = load float*, float** %next_lowband2.i, align 8, !dbg !4868
  %484 = load i32, i32* %duration.addr.i, align 4, !dbg !4869
  %485 = load i32, i32* %next_level.i, align 4, !dbg !4870
  %486 = load float, float* %gain.addr.i, align 4, !dbg !4871
  %487 = load float, float* %side.i, align 4, !dbg !4872
  %mul519.i = fmul float %486, %487, !dbg !4873
  %488 = load i32, i32* %fill.addr.i, align 4, !dbg !4874
  %489 = load i32, i32* %blocks.addr.i, align 4, !dbg !4875
  %shr520.i = ashr i32 %488, %489, !dbg !4876
  %call521.i = call i32 %474(%struct.CeltPVQ* %475, %struct.CeltFrame* %476, %struct.OpusRangeCoder* %477, i32 %478, float* %479, float* null, i32 %480, i32 %481, i32 %482, float* %483, i32 %484, float* null, i32 %485, float %mul519.i, float* null, i32 %shr520.i) #7, !dbg !4858
  store i32 %call521.i, i32* %cm.i, align 4, !dbg !4877
  %490 = load i32, i32* %B0.i, align 4, !dbg !4878
  %shr522.i = ashr i32 %490, 1, !dbg !4879
  %491 = load i32, i32* %stereo.i, align 4, !dbg !4880
  %sub523.i = sub nsw i32 %491, 1, !dbg !4881
  %and524.i = and i32 %shr522.i, %sub523.i, !dbg !4882
  %492 = load i32, i32* %cm.i, align 4, !dbg !4883
  %shl525.i = shl i32 %492, %and524.i, !dbg !4883
  store i32 %shl525.i, i32* %cm.i, align 4, !dbg !4883
  %493 = load i32, i32* %sbits.i, align 4, !dbg !4884
  %494 = load i32, i32* %rebalance.i, align 4, !dbg !4885
  %495 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4886
  %remaining2526.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %495, i32 0, i32 35, !dbg !4887
  %496 = load i32, i32* %remaining2526.i, align 4, !dbg !4887
  %sub527.i = sub nsw i32 %494, %496, !dbg !4888
  %sub528.i = sub nsw i32 %493, %sub527.i, !dbg !4889
  store i32 %sub528.i, i32* %rebalance.i, align 4, !dbg !4890
  %497 = load i32, i32* %rebalance.i, align 4, !dbg !4891
  %cmp529.i = icmp sgt i32 %497, 24, !dbg !4892
  br i1 %cmp529.i, label %land.lhs.true531.i, label %if.end537.i, !dbg !4893

land.lhs.true531.i:                               ; preds = %if.else517.i
  %498 = load i32, i32* %itheta.i, align 4, !dbg !4894
  %cmp532.i = icmp ne i32 %498, 16384, !dbg !4895
  br i1 %cmp532.i, label %if.then534.i, label %if.end537.i, !dbg !4896

if.then534.i:                                     ; preds = %land.lhs.true531.i
  %499 = load i32, i32* %rebalance.i, align 4, !dbg !4897
  %sub535.i = sub nsw i32 %499, 24, !dbg !4898
  %500 = load i32, i32* %mbits.i, align 4, !dbg !4899
  %add536.i = add nsw i32 %500, %sub535.i, !dbg !4899
  store i32 %add536.i, i32* %mbits.i, align 4, !dbg !4899
  br label %if.end537.i, !dbg !4900

if.end537.i:                                      ; preds = %if.then534.i, %land.lhs.true531.i, %if.else517.i
  %501 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !4901
  %quant_band538.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %501, i32 0, i32 3, !dbg !4902
  %502 = load i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)*, i32 (%struct.CeltPVQ*, %struct.CeltFrame*, %struct.OpusRangeCoder*, i32, float*, float*, i32, i32, i32, float*, i32, float*, i32, float, float*, i32)** %quant_band538.i, align 8, !dbg !4902
  %503 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !4903
  %504 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4904
  %505 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4905
  %506 = load i32, i32* %band.addr.i, align 4, !dbg !4906
  %507 = load float*, float** %X.addr.i, align 8, !dbg !4907
  %508 = load i32, i32* %N.addr.i, align 4, !dbg !4908
  %509 = load i32, i32* %mbits.i, align 4, !dbg !4909
  %510 = load i32, i32* %blocks.addr.i, align 4, !dbg !4910
  %511 = load float*, float** %lowband.addr.i, align 8, !dbg !4911
  %512 = load i32, i32* %duration.addr.i, align 4, !dbg !4912
  %513 = load float*, float** %next_lowband_out1.i, align 8, !dbg !4913
  %514 = load i32, i32* %next_level.i, align 4, !dbg !4914
  %515 = load i32, i32* %stereo.i, align 4, !dbg !4915
  %tobool539.i = icmp ne i32 %515, 0, !dbg !4915
  br i1 %tobool539.i, label %cond.true540.i, label %cond.false541.i, !dbg !4915

cond.true540.i:                                   ; preds = %if.end537.i
  br label %cond.end543.i, !dbg !4916

cond.false541.i:                                  ; preds = %if.end537.i
  %516 = load float, float* %gain.addr.i, align 4, !dbg !4917
  %517 = load float, float* %mid.i, align 4, !dbg !4918
  %mul542.i = fmul float %516, %517, !dbg !4919
  br label %cond.end543.i, !dbg !4920

cond.end543.i:                                    ; preds = %cond.false541.i, %cond.true540.i
  %cond544.i = phi float [ 1.000000e+00, %cond.true540.i ], [ %mul542.i, %cond.false541.i ], !dbg !4921
  %518 = load float*, float** %lowband_scratch.addr.i, align 8, !dbg !4922
  %519 = load i32, i32* %fill.addr.i, align 4, !dbg !4923
  %call545.i = call i32 %502(%struct.CeltPVQ* %503, %struct.CeltFrame* %504, %struct.OpusRangeCoder* %505, i32 %506, float* %507, float* null, i32 %508, i32 %509, i32 %510, float* %511, i32 %512, float* %513, i32 %514, float %cond544.i, float* %518, i32 %519) #7, !dbg !4924
  %520 = load i32, i32* %cm.i, align 4, !dbg !4925
  %or546.i = or i32 %520, %call545.i, !dbg !4925
  store i32 %or546.i, i32* %cm.i, align 4, !dbg !4925
  br label %if.end547.i, !dbg !3967

if.end547.i:                                      ; preds = %cond.end543.i, %if.end507.i
  br label %if.end548.i, !dbg !3967

if.end548.i:                                      ; preds = %if.end547.i, %if.end394.i
  br label %if.end647.i, !dbg !4926

if.else549.i:                                     ; preds = %if.end153.i
  %521 = load i8*, i8** %cache.i, align 8, !dbg !4927
  %522 = load i32, i32* %b.addr.i, align 4, !dbg !4928
  %call551.i = call i32 @celt_bits2pulses(i8* %521, i32 %522) #7, !dbg !4929
  store i32 %call551.i, i32* %q.i, align 4, !dbg !3914
  %523 = load i8*, i8** %cache.i, align 8, !dbg !4930
  %524 = load i32, i32* %q.i, align 4, !dbg !4931
  %call553.i = call i32 @celt_pulses2bits(i8* %523, i32 %524) #7, !dbg !4932
  store i32 %call553.i, i32* %curr_bits.i, align 4, !dbg !3915
  %525 = load i32, i32* %curr_bits.i, align 4, !dbg !4933
  %526 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4934
  %remaining2554.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %526, i32 0, i32 35, !dbg !4935
  %527 = load i32, i32* %remaining2554.i, align 4, !dbg !4936
  %sub555.i = sub i32 %527, %525, !dbg !4936
  store i32 %sub555.i, i32* %remaining2554.i, align 4, !dbg !4936
  br label %while.cond556.i, !dbg !4937

while.cond556.i:                                  ; preds = %while.body564.i, %if.else549.i
  %528 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4938
  %remaining2557.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %528, i32 0, i32 35, !dbg !4939
  %529 = load i32, i32* %remaining2557.i, align 4, !dbg !4939
  %cmp558.i = icmp slt i32 %529, 0, !dbg !4940
  br i1 %cmp558.i, label %land.rhs560.i, label %land.end563.i, !dbg !4941

land.rhs560.i:                                    ; preds = %while.cond556.i
  %530 = load i32, i32* %q.i, align 4, !dbg !4942
  %cmp561.i = icmp ugt i32 %530, 0, !dbg !4943
  br label %land.end563.i, !dbg !3967

land.end563.i:                                    ; preds = %land.rhs560.i, %while.cond556.i
  %531 = phi i1 [ false, %while.cond556.i ], [ %cmp561.i, %land.rhs560.i ], !dbg !3967
  br i1 %531, label %while.body564.i, label %while.end570.i, !dbg !4944

while.body564.i:                                  ; preds = %land.end563.i
  %532 = load i32, i32* %curr_bits.i, align 4, !dbg !4945
  %533 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4946
  %remaining2565.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %533, i32 0, i32 35, !dbg !4947
  %534 = load i32, i32* %remaining2565.i, align 4, !dbg !4948
  %add566.i = add i32 %534, %532, !dbg !4948
  store i32 %add566.i, i32* %remaining2565.i, align 4, !dbg !4948
  %535 = load i8*, i8** %cache.i, align 8, !dbg !4949
  %536 = load i32, i32* %q.i, align 4, !dbg !4950
  %dec.i = add i32 %536, -1, !dbg !4950
  store i32 %dec.i, i32* %q.i, align 4, !dbg !4950
  %call567.i = call i32 @celt_pulses2bits(i8* %535, i32 %dec.i) #7, !dbg !4951
  store i32 %call567.i, i32* %curr_bits.i, align 4, !dbg !4952
  %537 = load i32, i32* %curr_bits.i, align 4, !dbg !4953
  %538 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4954
  %remaining2568.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %538, i32 0, i32 35, !dbg !4955
  %539 = load i32, i32* %remaining2568.i, align 4, !dbg !4956
  %sub569.i = sub i32 %539, %537, !dbg !4956
  store i32 %sub569.i, i32* %remaining2568.i, align 4, !dbg !4956
  br label %while.cond556.i, !dbg !4957, !llvm.loop !3478

while.end570.i:                                   ; preds = %land.end563.i
  %540 = load i32, i32* %q.i, align 4, !dbg !4958
  %cmp571.i = icmp ne i32 %540, 0, !dbg !4959
  br i1 %cmp571.i, label %if.then573.i, label %if.else603.i, !dbg !4960

if.then573.i:                                     ; preds = %while.end570.i
  %541 = load i32, i32* %quant.addr.i, align 4, !dbg !4961
  %tobool574.i = icmp ne i32 %541, 0, !dbg !4961
  br i1 %tobool574.i, label %if.then575.i, label %if.else588.i, !dbg !4962

if.then575.i:                                     ; preds = %if.then573.i
  %542 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4963
  %543 = load float*, float** %X.addr.i, align 8, !dbg !4964
  %544 = load i32, i32* %N.addr.i, align 4, !dbg !4965
  %545 = load i32, i32* %q.i, align 4, !dbg !4966
  %cmp576.i = icmp ult i32 %545, 8, !dbg !4967
  br i1 %cmp576.i, label %cond.true578.i, label %cond.false579.i, !dbg !4968

cond.true578.i:                                   ; preds = %if.then575.i
  %546 = load i32, i32* %q.i, align 4, !dbg !4969
  br label %cond.end585.i, !dbg !4970

cond.false579.i:                                  ; preds = %if.then575.i
  %547 = load i32, i32* %q.i, align 4, !dbg !4971
  %and580.i = and i32 %547, 7, !dbg !4972
  %add581.i = add i32 8, %and580.i, !dbg !4973
  %548 = load i32, i32* %q.i, align 4, !dbg !4974
  %shr582.i = lshr i32 %548, 3, !dbg !4975
  %sub583.i = sub i32 %shr582.i, 1, !dbg !4976
  %shl584.i = shl i32 %add581.i, %sub583.i, !dbg !4977
  br label %cond.end585.i, !dbg !4978

cond.end585.i:                                    ; preds = %cond.false579.i, %cond.true578.i
  %cond586.i = phi i32 [ %546, %cond.true578.i ], [ %shl584.i, %cond.false579.i ], !dbg !4979
  %549 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !4980
  %spread.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %549, i32 0, i32 28, !dbg !4981
  %550 = load i32, i32* %spread.i, align 16, !dbg !4981
  %551 = load i32, i32* %blocks.addr.i, align 4, !dbg !4982
  %552 = load float, float* %gain.addr.i, align 4, !dbg !4983
  %553 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !4984
  %call587.i = call i32 @celt_alg_quant(%struct.OpusRangeCoder* %542, float* %543, i32 %544, i32 %cond586.i, i32 %550, i32 %551, float %552, %struct.CeltPVQ* %553) #7, !dbg !4985
  store i32 %call587.i, i32* %cm.i, align 4, !dbg !4986
  br label %if.end602.i, !dbg !4987

if.else588.i:                                     ; preds = %if.then573.i
  %554 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr.i, align 8, !dbg !4988
  %555 = load float*, float** %X.addr.i, align 8, !dbg !4989
  %556 = load i32, i32* %N.addr.i, align 4, !dbg !4990
  %557 = load i32, i32* %q.i, align 4, !dbg !4991
  %cmp589.i = icmp ult i32 %557, 8, !dbg !4992
  br i1 %cmp589.i, label %cond.true591.i, label %cond.false592.i, !dbg !4993

cond.true591.i:                                   ; preds = %if.else588.i
  %558 = load i32, i32* %q.i, align 4, !dbg !4994
  br label %cond.end598.i, !dbg !4995

cond.false592.i:                                  ; preds = %if.else588.i
  %559 = load i32, i32* %q.i, align 4, !dbg !4996
  %and593.i = and i32 %559, 7, !dbg !4997
  %add594.i = add i32 8, %and593.i, !dbg !4998
  %560 = load i32, i32* %q.i, align 4, !dbg !4999
  %shr595.i = lshr i32 %560, 3, !dbg !5000
  %sub596.i = sub i32 %shr595.i, 1, !dbg !5001
  %shl597.i = shl i32 %add594.i, %sub596.i, !dbg !5002
  br label %cond.end598.i, !dbg !5003

cond.end598.i:                                    ; preds = %cond.false592.i, %cond.true591.i
  %cond599.i = phi i32 [ %558, %cond.true591.i ], [ %shl597.i, %cond.false592.i ], !dbg !5004
  %561 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !5005
  %spread600.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %561, i32 0, i32 28, !dbg !5006
  %562 = load i32, i32* %spread600.i, align 16, !dbg !5006
  %563 = load i32, i32* %blocks.addr.i, align 4, !dbg !5007
  %564 = load float, float* %gain.addr.i, align 4, !dbg !5008
  %565 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !5009
  %call601.i = call i32 @celt_alg_unquant(%struct.OpusRangeCoder* %554, float* %555, i32 %556, i32 %cond599.i, i32 %562, i32 %563, float %564, %struct.CeltPVQ* %565) #7, !dbg !5010
  store i32 %call601.i, i32* %cm.i, align 4, !dbg !5011
  br label %if.end602.i, !dbg !3967

if.end602.i:                                      ; preds = %cond.end598.i, %cond.end585.i
  br label %if.end646.i, !dbg !5012

if.else603.i:                                     ; preds = %while.end570.i
  %566 = load i32, i32* %blocks.addr.i, align 4, !dbg !5013
  %shl605.i = shl i32 1, %566, !dbg !5014
  %sub606.i = sub nsw i32 %shl605.i, 1, !dbg !5015
  store i32 %sub606.i, i32* %cm_mask.i, align 4, !dbg !3916
  %567 = load i32, i32* %cm_mask.i, align 4, !dbg !5016
  %568 = load i32, i32* %fill.addr.i, align 4, !dbg !5017
  %and607.i = and i32 %568, %567, !dbg !5017
  store i32 %and607.i, i32* %fill.addr.i, align 4, !dbg !5017
  %569 = load i32, i32* %fill.addr.i, align 4, !dbg !5018
  %tobool608.i = icmp ne i32 %569, 0, !dbg !5018
  br i1 %tobool608.i, label %if.then609.i, label %if.else642.i, !dbg !5019

if.then609.i:                                     ; preds = %if.else603.i
  %570 = load float*, float** %lowband.addr.i, align 8, !dbg !5020
  %tobool610.i = icmp ne float* %570, null, !dbg !5020
  br i1 %tobool610.i, label %if.else624.i, label %if.then611.i, !dbg !5021

if.then611.i:                                     ; preds = %if.then609.i
  store i32 0, i32* %i.i, align 4, !dbg !5022
  br label %for.cond612.i, !dbg !5023

for.cond612.i:                                    ; preds = %for.body615.i, %if.then611.i
  %571 = load i32, i32* %i.i, align 4, !dbg !5024
  %572 = load i32, i32* %N.addr.i, align 4, !dbg !5025
  %cmp613.i = icmp slt i32 %571, %572, !dbg !5026
  br i1 %cmp613.i, label %for.body615.i, label %for.end623.i, !dbg !5027

for.body615.i:                                    ; preds = %for.cond612.i
  %573 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !5028
  store %struct.CeltFrame* %573, %struct.CeltFrame** %f.addr.i.i, align 8, !dbg !5029
  %574 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i.i, align 8, !dbg !5030
  %seed.i.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %574, i32 0, i32 27, !dbg !5031
  %575 = load i32, i32* %seed.i.i, align 4, !dbg !5031
  %mul.i762.i = mul i32 1664525, %575, !dbg !5032
  %add.i763.i = add i32 %mul.i762.i, 1013904223, !dbg !5033
  %576 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i.i, align 8, !dbg !5034
  %seed1.i.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %576, i32 0, i32 27, !dbg !5035
  store i32 %add.i763.i, i32* %seed1.i.i, align 4, !dbg !5036
  %577 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i.i, align 8, !dbg !5037
  %seed2.i.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %577, i32 0, i32 27, !dbg !5038
  %578 = load i32, i32* %seed2.i.i, align 4, !dbg !5038
  %shr617.i = ashr i32 %578, 20, !dbg !5039
  %conv618.i = sitofp i32 %shr617.i to float, !dbg !5040
  %579 = load i32, i32* %i.i, align 4, !dbg !5041
  %idxprom619.i = sext i32 %579 to i64, !dbg !5042
  %580 = load float*, float** %X.addr.i, align 8, !dbg !5042
  %arrayidx620.i = getelementptr inbounds float, float* %580, i64 %idxprom619.i, !dbg !5042
  store float %conv618.i, float* %arrayidx620.i, align 4, !dbg !5043
  %581 = load i32, i32* %i.i, align 4, !dbg !5044
  %inc622.i = add nsw i32 %581, 1, !dbg !5044
  store i32 %inc622.i, i32* %i.i, align 4, !dbg !5044
  br label %for.cond612.i, !dbg !5045, !llvm.loop !3580

for.end623.i:                                     ; preds = %for.cond612.i
  %582 = load i32, i32* %cm_mask.i, align 4, !dbg !5046
  store i32 %582, i32* %cm.i, align 4, !dbg !5047
  br label %if.end641.i, !dbg !5048

if.else624.i:                                     ; preds = %if.then609.i
  store i32 0, i32* %i.i, align 4, !dbg !5049
  br label %for.cond625.i, !dbg !5050

for.cond625.i:                                    ; preds = %for.body628.i, %if.else624.i
  %583 = load i32, i32* %i.i, align 4, !dbg !5051
  %584 = load i32, i32* %N.addr.i, align 4, !dbg !5052
  %cmp626.i = icmp slt i32 %583, %584, !dbg !5053
  br i1 %cmp626.i, label %for.body628.i, label %for.end640.i, !dbg !5054

for.body628.i:                                    ; preds = %for.cond625.i
  %585 = load i32, i32* %i.i, align 4, !dbg !5055
  %idxprom629.i = sext i32 %585 to i64, !dbg !5056
  %586 = load float*, float** %lowband.addr.i, align 8, !dbg !5056
  %arrayidx630.i = getelementptr inbounds float, float* %586, i64 %idxprom629.i, !dbg !5056
  %587 = load float, float* %arrayidx630.i, align 4, !dbg !5056
  %588 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i, align 8, !dbg !5057
  store %struct.CeltFrame* %588, %struct.CeltFrame** %f.addr.i771.i, align 8, !dbg !5058
  %589 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i771.i, align 8, !dbg !5059
  %seed.i772.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %589, i32 0, i32 27, !dbg !5060
  %590 = load i32, i32* %seed.i772.i, align 4, !dbg !5060
  %mul.i773.i = mul i32 1664525, %590, !dbg !5061
  %add.i774.i = add i32 %mul.i773.i, 1013904223, !dbg !5062
  %591 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i771.i, align 8, !dbg !5063
  %seed1.i775.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %591, i32 0, i32 27, !dbg !5064
  store i32 %add.i774.i, i32* %seed1.i775.i, align 4, !dbg !5065
  %592 = load %struct.CeltFrame*, %struct.CeltFrame** %f.addr.i771.i, align 8, !dbg !5066
  %seed2.i776.i = getelementptr inbounds %struct.CeltFrame, %struct.CeltFrame* %592, i32 0, i32 27, !dbg !5067
  %593 = load i32, i32* %seed2.i776.i, align 4, !dbg !5067
  %and632.i = and i32 %593, 32768, !dbg !5068
  %tobool633.i = icmp ne i32 %and632.i, 0, !dbg !5069
  %cond634.i = select i1 %tobool633.i, float 3.906250e-03, float -3.906250e-03, !dbg !5069
  %add635.i = fadd float %587, %cond634.i, !dbg !5070
  %594 = load i32, i32* %i.i, align 4, !dbg !5071
  %idxprom636.i = sext i32 %594 to i64, !dbg !5072
  %595 = load float*, float** %X.addr.i, align 8, !dbg !5072
  %arrayidx637.i = getelementptr inbounds float, float* %595, i64 %idxprom636.i, !dbg !5072
  store float %add635.i, float* %arrayidx637.i, align 4, !dbg !5073
  %596 = load i32, i32* %i.i, align 4, !dbg !5074
  %inc639.i = add nsw i32 %596, 1, !dbg !5074
  store i32 %inc639.i, i32* %i.i, align 4, !dbg !5074
  br label %for.cond625.i, !dbg !5075, !llvm.loop !3614

for.end640.i:                                     ; preds = %for.cond625.i
  %597 = load i32, i32* %fill.addr.i, align 4, !dbg !5076
  store i32 %597, i32* %cm.i, align 4, !dbg !5077
  br label %if.end641.i, !dbg !3967

if.end641.i:                                      ; preds = %for.end640.i, %for.end623.i
  %598 = load float*, float** %X.addr.i, align 8, !dbg !5078
  %599 = load i32, i32* %N.addr.i, align 4, !dbg !5079
  %600 = load float, float* %gain.addr.i, align 4, !dbg !5080
  store float* %598, float** %X.addr.i.i, align 8, !dbg !5081
  store i32 %599, i32* %N.addr.i.i, align 4, !dbg !5081
  store float %600, float* %gain.addr.i.i, align 4, !dbg !5081
  store float 0x3CD203AFA0000000, float* %g.i.i, align 4, !dbg !3829
  store i32 0, i32* %i.i764.i, align 4, !dbg !5082
  br label %for.cond.i766.i, !dbg !5083

for.cond.i766.i:                                  ; preds = %for.body.i769.i, %if.end641.i
  %601 = load i32, i32* %i.i764.i, align 4, !dbg !5084
  %602 = load i32, i32* %N.addr.i.i, align 4, !dbg !5085
  %cmp.i765.i = icmp slt i32 %601, %602, !dbg !5086
  br i1 %cmp.i765.i, label %for.body.i769.i, label %for.end.i.i, !dbg !5087

for.body.i769.i:                                  ; preds = %for.cond.i766.i
  %603 = load i32, i32* %i.i764.i, align 4, !dbg !5088
  %idxprom.i.i = sext i32 %603 to i64, !dbg !5089
  %604 = load float*, float** %X.addr.i.i, align 8, !dbg !5089
  %arrayidx.i.i = getelementptr inbounds float, float* %604, i64 %idxprom.i.i, !dbg !5089
  %605 = load float, float* %arrayidx.i.i, align 4, !dbg !5089
  %606 = load i32, i32* %i.i764.i, align 4, !dbg !5090
  %idxprom1.i.i = sext i32 %606 to i64, !dbg !5091
  %607 = load float*, float** %X.addr.i.i, align 8, !dbg !5091
  %arrayidx2.i.i = getelementptr inbounds float, float* %607, i64 %idxprom1.i.i, !dbg !5091
  %608 = load float, float* %arrayidx2.i.i, align 4, !dbg !5091
  %mul.i767.i = fmul float %605, %608, !dbg !5092
  %609 = load float, float* %g.i.i, align 4, !dbg !5093
  %add.i768.i = fadd float %609, %mul.i767.i, !dbg !5093
  store float %add.i768.i, float* %g.i.i, align 4, !dbg !5093
  %610 = load i32, i32* %i.i764.i, align 4, !dbg !5094
  %inc.i770.i = add nsw i32 %610, 1, !dbg !5094
  store i32 %inc.i770.i, i32* %i.i764.i, align 4, !dbg !5094
  br label %for.cond.i766.i, !dbg !5095, !llvm.loop !3640

for.end.i.i:                                      ; preds = %for.cond.i766.i
  %611 = load float, float* %gain.addr.i.i, align 4, !dbg !5096
  %612 = load float, float* %g.i.i, align 4, !dbg !5097
  %call.i.i = call float @sqrtf(float %612) #7, !dbg !5098
  %div.i.i = fdiv float %611, %call.i.i, !dbg !5099
  store float %div.i.i, float* %g.i.i, align 4, !dbg !5100
  store i32 0, i32* %i.i764.i, align 4, !dbg !5101
  br label %for.cond3.i.i, !dbg !5102

for.cond3.i.i:                                    ; preds = %for.body5.i.i, %for.end.i.i
  %613 = load i32, i32* %i.i764.i, align 4, !dbg !5103
  %614 = load i32, i32* %N.addr.i.i, align 4, !dbg !5104
  %cmp4.i.i = icmp slt i32 %613, %614, !dbg !5105
  br i1 %cmp4.i.i, label %for.body5.i.i, label %celt_renormalize_vector.exit.i, !dbg !5106

for.body5.i.i:                                    ; preds = %for.cond3.i.i
  %615 = load float, float* %g.i.i, align 4, !dbg !5107
  %616 = load i32, i32* %i.i764.i, align 4, !dbg !5108
  %idxprom6.i.i = sext i32 %616 to i64, !dbg !5109
  %617 = load float*, float** %X.addr.i.i, align 8, !dbg !5109
  %arrayidx7.i.i = getelementptr inbounds float, float* %617, i64 %idxprom6.i.i, !dbg !5109
  %618 = load float, float* %arrayidx7.i.i, align 4, !dbg !5110
  %mul8.i.i = fmul float %618, %615, !dbg !5110
  store float %mul8.i.i, float* %arrayidx7.i.i, align 4, !dbg !5110
  %619 = load i32, i32* %i.i764.i, align 4, !dbg !5111
  %inc10.i.i = add nsw i32 %619, 1, !dbg !5111
  store i32 %inc10.i.i, i32* %i.i764.i, align 4, !dbg !5111
  br label %for.cond3.i.i, !dbg !5112, !llvm.loop !3663

celt_renormalize_vector.exit.i:                   ; preds = %for.cond3.i.i
  br label %if.end645.i, !dbg !5113

if.else642.i:                                     ; preds = %if.else603.i
  %620 = load float*, float** %X.addr.i, align 8, !dbg !5114
  %621 = bitcast float* %620 to i8*, !dbg !5115
  %622 = load i32, i32* %N.addr.i, align 4, !dbg !5116
  %conv643.i = sext i32 %622 to i64, !dbg !5116
  %mul644.i = mul i64 %conv643.i, 4, !dbg !5117
  call void @llvm.memset.p0i8.i64(i8* %621, i8 0, i64 %mul644.i, i32 4, i1 false) #7, !dbg !5115
  br label %if.end645.i, !dbg !3967

if.end645.i:                                      ; preds = %if.else642.i, %celt_renormalize_vector.exit.i
  br label %if.end646.i, !dbg !3967

if.end646.i:                                      ; preds = %if.end645.i, %if.end602.i
  br label %if.end647.i, !dbg !3967

if.end647.i:                                      ; preds = %if.end646.i, %if.end548.i
  %623 = load i32, i32* %stereo.i, align 4, !dbg !5118
  %tobool648.i = icmp ne i32 %623, 0, !dbg !5118
  br i1 %tobool648.i, label %if.then649.i, label %if.else667.i, !dbg !5119

if.then649.i:                                     ; preds = %if.end647.i
  %624 = load i32, i32* %N.addr.i, align 4, !dbg !5120
  %cmp650.i = icmp sgt i32 %624, 2, !dbg !5121
  br i1 %cmp650.i, label %if.then652.i, label %if.end653.i, !dbg !5122

if.then652.i:                                     ; preds = %if.then649.i
  %625 = load float*, float** %X.addr.i, align 8, !dbg !5123
  %626 = load float*, float** %Y.addr.i, align 8, !dbg !5124
  %627 = load float, float* %mid.i, align 4, !dbg !5125
  %628 = load i32, i32* %N.addr.i, align 4, !dbg !5126
  call void @celt_stereo_merge(float* %625, float* %626, float %627, i32 %628) #7, !dbg !5127
  br label %if.end653.i, !dbg !5127

if.end653.i:                                      ; preds = %if.then652.i, %if.then649.i
  %629 = load i32, i32* %inv.i, align 4, !dbg !5128
  %tobool654.i = icmp ne i32 %629, 0, !dbg !5128
  br i1 %tobool654.i, label %if.then655.i, label %if.end666.i, !dbg !5129

if.then655.i:                                     ; preds = %if.end653.i
  store i32 0, i32* %i.i, align 4, !dbg !5130
  br label %for.cond656.i, !dbg !5131

for.cond656.i:                                    ; preds = %for.body659.i, %if.then655.i
  %630 = load i32, i32* %i.i, align 4, !dbg !5132
  %631 = load i32, i32* %N.addr.i, align 4, !dbg !5133
  %cmp657.i = icmp slt i32 %630, %631, !dbg !5134
  br i1 %cmp657.i, label %for.body659.i, label %for.end665.i, !dbg !5135

for.body659.i:                                    ; preds = %for.cond656.i
  %632 = load i32, i32* %i.i, align 4, !dbg !5136
  %idxprom660.i = sext i32 %632 to i64, !dbg !5137
  %633 = load float*, float** %Y.addr.i, align 8, !dbg !5137
  %arrayidx661.i = getelementptr inbounds float, float* %633, i64 %idxprom660.i, !dbg !5137
  %634 = load float, float* %arrayidx661.i, align 4, !dbg !5138
  %mul662.i = fmul float %634, -1.000000e+00, !dbg !5138
  store float %mul662.i, float* %arrayidx661.i, align 4, !dbg !5138
  %635 = load i32, i32* %i.i, align 4, !dbg !5139
  %inc664.i = add nsw i32 %635, 1, !dbg !5139
  store i32 %inc664.i, i32* %i.i, align 4, !dbg !5139
  br label %for.cond656.i, !dbg !5140, !llvm.loop !3702

for.end665.i:                                     ; preds = %for.cond656.i
  br label %if.end666.i, !dbg !5141

if.end666.i:                                      ; preds = %for.end665.i, %if.end653.i
  br label %if.end725.i, !dbg !5142

if.else667.i:                                     ; preds = %if.end647.i
  %636 = load i32, i32* %level.addr.i, align 4, !dbg !5143
  %cmp668.i = icmp eq i32 %636, 0, !dbg !5144
  br i1 %cmp668.i, label %if.then670.i, label %if.end724.i, !dbg !5143

if.then670.i:                                     ; preds = %if.else667.i
  %637 = load i32, i32* %B0.i, align 4, !dbg !5145
  %cmp673.i = icmp sgt i32 %637, 1, !dbg !5146
  br i1 %cmp673.i, label %if.then675.i, label %if.end680.i, !dbg !5147

if.then675.i:                                     ; preds = %if.then670.i
  %638 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr.i, align 8, !dbg !5148
  %hadamard_tmp676.i = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %638, i32 0, i32 1, !dbg !5149
  %arraydecay677.i = getelementptr inbounds [256 x float], [256 x float]* %hadamard_tmp676.i, i32 0, i32 0, !dbg !5148
  %639 = load float*, float** %X.addr.i, align 8, !dbg !5150
  %640 = load i32, i32* %N_B.i, align 4, !dbg !5151
  %641 = load i32, i32* %recombine.i, align 4, !dbg !5152
  %shr678.i = ashr i32 %640, %641, !dbg !5153
  %642 = load i32, i32* %B0.i, align 4, !dbg !5154
  %643 = load i32, i32* %recombine.i, align 4, !dbg !5155
  %shl679.i = shl i32 %642, %643, !dbg !5156
  %644 = load i32, i32* %longblocks.i, align 4, !dbg !5157
  call void @celt_interleave_hadamard(float* %arraydecay677.i, float* %639, i32 %shr678.i, i32 %shl679.i, i32 %644) #7, !dbg !5158
  br label %if.end680.i, !dbg !5158

if.end680.i:                                      ; preds = %if.then675.i, %if.then670.i
  %645 = load i32, i32* %N_B0.i, align 4, !dbg !5159
  store i32 %645, i32* %N_B.i, align 4, !dbg !5160
  %646 = load i32, i32* %B0.i, align 4, !dbg !5161
  store i32 %646, i32* %blocks.addr.i, align 4, !dbg !5162
  store i32 0, i32* %k672.i, align 4, !dbg !5163
  br label %for.cond681.i, !dbg !5164

for.cond681.i:                                    ; preds = %for.body684.i, %if.end680.i
  %647 = load i32, i32* %k672.i, align 4, !dbg !5165
  %648 = load i32, i32* %time_divide.i, align 4, !dbg !5166
  %cmp682.i = icmp slt i32 %647, %648, !dbg !5167
  br i1 %cmp682.i, label %for.body684.i, label %for.end691.i, !dbg !5168

for.body684.i:                                    ; preds = %for.cond681.i
  %649 = load i32, i32* %blocks.addr.i, align 4, !dbg !5169
  %shr685.i = lshr i32 %649, 1, !dbg !5169
  store i32 %shr685.i, i32* %blocks.addr.i, align 4, !dbg !5169
  %650 = load i32, i32* %N_B.i, align 4, !dbg !5170
  %shl686.i = shl i32 %650, 1, !dbg !5170
  store i32 %shl686.i, i32* %N_B.i, align 4, !dbg !5170
  %651 = load i32, i32* %cm.i, align 4, !dbg !5171
  %652 = load i32, i32* %blocks.addr.i, align 4, !dbg !5172
  %shr687.i = lshr i32 %651, %652, !dbg !5173
  %653 = load i32, i32* %cm.i, align 4, !dbg !5174
  %or688.i = or i32 %653, %shr687.i, !dbg !5174
  store i32 %or688.i, i32* %cm.i, align 4, !dbg !5174
  %654 = load float*, float** %X.addr.i, align 8, !dbg !5175
  %655 = load i32, i32* %N_B.i, align 4, !dbg !5176
  %656 = load i32, i32* %blocks.addr.i, align 4, !dbg !5177
  call void @celt_haar1(float* %654, i32 %655, i32 %656) #7, !dbg !5178
  %657 = load i32, i32* %k672.i, align 4, !dbg !5179
  %inc690.i = add nsw i32 %657, 1, !dbg !5179
  store i32 %inc690.i, i32* %k672.i, align 4, !dbg !5179
  br label %for.cond681.i, !dbg !5180, !llvm.loop !3751

for.end691.i:                                     ; preds = %for.cond681.i
  store i32 0, i32* %k672.i, align 4, !dbg !5181
  br label %for.cond692.i, !dbg !5182

for.cond692.i:                                    ; preds = %for.body695.i, %for.end691.i
  %658 = load i32, i32* %k672.i, align 4, !dbg !5183
  %659 = load i32, i32* %recombine.i, align 4, !dbg !5184
  %cmp693.i = icmp slt i32 %658, %659, !dbg !5185
  br i1 %cmp693.i, label %for.body695.i, label %for.end703.i, !dbg !5186

for.body695.i:                                    ; preds = %for.cond692.i
  %660 = load i32, i32* %cm.i, align 4, !dbg !5187
  %idxprom696.i = zext i32 %660 to i64, !dbg !5188
  %arrayidx697.i = getelementptr inbounds [0 x i8], [0 x i8]* @ff_celt_bit_deinterleave, i64 0, i64 %idxprom696.i, !dbg !5188
  %661 = load i8, i8* %arrayidx697.i, align 1, !dbg !5188
  %conv698.i = zext i8 %661 to i32, !dbg !5188
  store i32 %conv698.i, i32* %cm.i, align 4, !dbg !5189
  %662 = load float*, float** %X.addr.i, align 8, !dbg !5190
  %663 = load i32, i32* %N0.i, align 4, !dbg !5191
  %664 = load i32, i32* %k672.i, align 4, !dbg !5192
  %shr699.i = lshr i32 %663, %664, !dbg !5193
  %665 = load i32, i32* %k672.i, align 4, !dbg !5194
  %shl700.i = shl i32 1, %665, !dbg !5195
  call void @celt_haar1(float* %662, i32 %shr699.i, i32 %shl700.i) #7, !dbg !5196
  %666 = load i32, i32* %k672.i, align 4, !dbg !5197
  %inc702.i = add nsw i32 %666, 1, !dbg !5197
  store i32 %inc702.i, i32* %k672.i, align 4, !dbg !5197
  br label %for.cond692.i, !dbg !5198, !llvm.loop !3776

for.end703.i:                                     ; preds = %for.cond692.i
  %667 = load i32, i32* %recombine.i, align 4, !dbg !5199
  %668 = load i32, i32* %blocks.addr.i, align 4, !dbg !5200
  %shl704.i = shl i32 %668, %667, !dbg !5200
  store i32 %shl704.i, i32* %blocks.addr.i, align 4, !dbg !5200
  %669 = load float*, float** %lowband_out.addr.i, align 8, !dbg !5201
  %tobool705.i = icmp ne float* %669, null, !dbg !5201
  br i1 %tobool705.i, label %if.then706.i, label %if.end722.i, !dbg !5202

if.then706.i:                                     ; preds = %for.end703.i
  %670 = load i32, i32* %N0.i, align 4, !dbg !5203
  %conv708.i = uitofp i32 %670 to float, !dbg !5203
  %call709.i = call float @sqrtf(float %conv708.i) #7, !dbg !5204
  store float %call709.i, float* %n.i, align 4, !dbg !3918
  store i32 0, i32* %i.i, align 4, !dbg !5205
  br label %for.cond710.i, !dbg !5206

for.cond710.i:                                    ; preds = %for.body713.i, %if.then706.i
  %671 = load i32, i32* %i.i, align 4, !dbg !5207
  %672 = load i32, i32* %N0.i, align 4, !dbg !5208
  %cmp711.i = icmp ult i32 %671, %672, !dbg !5209
  br i1 %cmp711.i, label %for.body713.i, label %for.end721.i, !dbg !5210

for.body713.i:                                    ; preds = %for.cond710.i
  %673 = load float, float* %n.i, align 4, !dbg !5211
  %674 = load i32, i32* %i.i, align 4, !dbg !5212
  %idxprom714.i = sext i32 %674 to i64, !dbg !5213
  %675 = load float*, float** %X.addr.i, align 8, !dbg !5213
  %arrayidx715.i = getelementptr inbounds float, float* %675, i64 %idxprom714.i, !dbg !5213
  %676 = load float, float* %arrayidx715.i, align 4, !dbg !5213
  %mul716.i = fmul float %673, %676, !dbg !5214
  %677 = load i32, i32* %i.i, align 4, !dbg !5215
  %idxprom717.i = sext i32 %677 to i64, !dbg !5216
  %678 = load float*, float** %lowband_out.addr.i, align 8, !dbg !5216
  %arrayidx718.i = getelementptr inbounds float, float* %678, i64 %idxprom717.i, !dbg !5216
  store float %mul716.i, float* %arrayidx718.i, align 4, !dbg !5217
  %679 = load i32, i32* %i.i, align 4, !dbg !5218
  %inc720.i = add nsw i32 %679, 1, !dbg !5218
  store i32 %inc720.i, i32* %i.i, align 4, !dbg !5218
  br label %for.cond710.i, !dbg !5219, !llvm.loop !3803

for.end721.i:                                     ; preds = %for.cond710.i
  br label %if.end722.i, !dbg !5220

if.end722.i:                                      ; preds = %for.end721.i, %for.end703.i
  %680 = load i32, i32* %cm.i, align 4, !dbg !5221
  %681 = load i32, i32* %blocks.addr.i, align 4, !dbg !5222
  store i32 %680, i32* %a.addr.i.i, align 4, !dbg !5223
  store i32 %681, i32* %p.addr.i.i, align 4, !dbg !5223
  %682 = load i32, i32* %a.addr.i.i, align 4, !dbg !5224
  %683 = load i32, i32* %p.addr.i.i, align 4, !dbg !5225
  %shl.i726.i = shl i32 1, %683, !dbg !5226
  %sub.i727.i = sub nsw i32 %shl.i726.i, 1, !dbg !5227
  %and.i.i = and i32 %682, %sub.i727.i, !dbg !5228
  store i32 %and.i.i, i32* %cm.i, align 4, !dbg !5229
  br label %if.end724.i, !dbg !5230

if.end724.i:                                      ; preds = %if.end722.i, %if.else667.i
  br label %if.end725.i, !dbg !3967

if.end725.i:                                      ; preds = %if.end724.i, %if.end666.i
  %684 = load i32, i32* %cm.i, align 4, !dbg !5231
  store i32 %684, i32* %retval.i, align 4, !dbg !5232
  br label %quant_band_template.exit, !dbg !5232

quant_band_template.exit:                         ; preds = %if.end22.i, %if.end725.i
  %685 = load i32, i32* %retval.i, align 4, !dbg !5233
  ret i32 %685, !dbg !5234
}

declare void @ff_opus_dsp_init_x86(%struct.CeltPVQ*) #2

; Function Attrs: cold nounwind optsize uwtable
define void @ff_celt_pvq_uninit(%struct.CeltPVQ** %pvq) #0 !dbg !5235 {
entry:
  %pvq.addr = alloca %struct.CeltPVQ**, align 8
  store %struct.CeltPVQ** %pvq, %struct.CeltPVQ*** %pvq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltPVQ*** %pvq.addr, metadata !5238, metadata !1787), !dbg !5239
  %0 = load %struct.CeltPVQ**, %struct.CeltPVQ*** %pvq.addr, align 8, !dbg !5240
  %1 = bitcast %struct.CeltPVQ** %0 to i8*, !dbg !5240
  call void @av_freep(i8* %1), !dbg !5241
  ret void, !dbg !5242
}

declare void @av_freep(i8*) #2

; Function Attrs: nounwind
declare i64 @lrintf(float) #4

declare void @ff_opus_rc_put_raw(%struct.OpusRangeCoder*, i32, i32) #2

declare i32 @ff_opus_rc_get_raw(%struct.OpusRangeCoder*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @celt_haar1(float* %X, i32 %N0, i32 %stride) #3 !dbg !5243 {
entry:
  %X.addr = alloca float*, align 8
  %N0.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x0 = alloca float, align 4
  %x1 = alloca float, align 4
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !5246, metadata !1787), !dbg !5247
  store i32 %N0, i32* %N0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N0.addr, metadata !5248, metadata !1787), !dbg !5249
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5250, metadata !1787), !dbg !5251
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5252, metadata !1787), !dbg !5253
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5254, metadata !1787), !dbg !5255
  %0 = load i32, i32* %N0.addr, align 4, !dbg !5256
  %shr = ashr i32 %0, 1, !dbg !5256
  store i32 %shr, i32* %N0.addr, align 4, !dbg !5256
  store i32 0, i32* %i, align 4, !dbg !5257
  br label %for.cond, !dbg !5259

for.cond:                                         ; preds = %for.inc30, %entry
  %1 = load i32, i32* %i, align 4, !dbg !5260
  %2 = load i32, i32* %stride.addr, align 4, !dbg !5263
  %cmp = icmp slt i32 %1, %2, !dbg !5264
  br i1 %cmp, label %for.body, label %for.end32, !dbg !5265

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !5266
  br label %for.cond1, !dbg !5269

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %j, align 4, !dbg !5270
  %4 = load i32, i32* %N0.addr, align 4, !dbg !5273
  %cmp2 = icmp slt i32 %3, %4, !dbg !5274
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !5275

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata float* %x0, metadata !5276, metadata !1787), !dbg !5278
  %5 = load i32, i32* %stride.addr, align 4, !dbg !5279
  %6 = load i32, i32* %j, align 4, !dbg !5280
  %mul = mul nsw i32 2, %6, !dbg !5281
  %add = add nsw i32 %mul, 0, !dbg !5282
  %mul4 = mul nsw i32 %5, %add, !dbg !5283
  %7 = load i32, i32* %i, align 4, !dbg !5284
  %add5 = add nsw i32 %mul4, %7, !dbg !5285
  %idxprom = sext i32 %add5 to i64, !dbg !5286
  %8 = load float*, float** %X.addr, align 8, !dbg !5286
  %arrayidx = getelementptr inbounds float, float* %8, i64 %idxprom, !dbg !5286
  %9 = load float, float* %arrayidx, align 4, !dbg !5286
  store float %9, float* %x0, align 4, !dbg !5278
  call void @llvm.dbg.declare(metadata float* %x1, metadata !5287, metadata !1787), !dbg !5288
  %10 = load i32, i32* %stride.addr, align 4, !dbg !5289
  %11 = load i32, i32* %j, align 4, !dbg !5290
  %mul6 = mul nsw i32 2, %11, !dbg !5291
  %add7 = add nsw i32 %mul6, 1, !dbg !5292
  %mul8 = mul nsw i32 %10, %add7, !dbg !5293
  %12 = load i32, i32* %i, align 4, !dbg !5294
  %add9 = add nsw i32 %mul8, %12, !dbg !5295
  %idxprom10 = sext i32 %add9 to i64, !dbg !5296
  %13 = load float*, float** %X.addr, align 8, !dbg !5296
  %arrayidx11 = getelementptr inbounds float, float* %13, i64 %idxprom10, !dbg !5296
  %14 = load float, float* %arrayidx11, align 4, !dbg !5296
  store float %14, float* %x1, align 4, !dbg !5288
  %15 = load float, float* %x0, align 4, !dbg !5297
  %16 = load float, float* %x1, align 4, !dbg !5298
  %add12 = fadd float %15, %16, !dbg !5299
  %conv = fpext float %add12 to double, !dbg !5300
  %mul13 = fmul double %conv, 0x3FE6A09E667F3BCD, !dbg !5301
  %conv14 = fptrunc double %mul13 to float, !dbg !5300
  %17 = load i32, i32* %stride.addr, align 4, !dbg !5302
  %18 = load i32, i32* %j, align 4, !dbg !5303
  %mul15 = mul nsw i32 2, %18, !dbg !5304
  %add16 = add nsw i32 %mul15, 0, !dbg !5305
  %mul17 = mul nsw i32 %17, %add16, !dbg !5306
  %19 = load i32, i32* %i, align 4, !dbg !5307
  %add18 = add nsw i32 %mul17, %19, !dbg !5308
  %idxprom19 = sext i32 %add18 to i64, !dbg !5309
  %20 = load float*, float** %X.addr, align 8, !dbg !5309
  %arrayidx20 = getelementptr inbounds float, float* %20, i64 %idxprom19, !dbg !5309
  store float %conv14, float* %arrayidx20, align 4, !dbg !5310
  %21 = load float, float* %x0, align 4, !dbg !5311
  %22 = load float, float* %x1, align 4, !dbg !5312
  %sub = fsub float %21, %22, !dbg !5313
  %conv21 = fpext float %sub to double, !dbg !5314
  %mul22 = fmul double %conv21, 0x3FE6A09E667F3BCD, !dbg !5315
  %conv23 = fptrunc double %mul22 to float, !dbg !5314
  %23 = load i32, i32* %stride.addr, align 4, !dbg !5316
  %24 = load i32, i32* %j, align 4, !dbg !5317
  %mul24 = mul nsw i32 2, %24, !dbg !5318
  %add25 = add nsw i32 %mul24, 1, !dbg !5319
  %mul26 = mul nsw i32 %23, %add25, !dbg !5320
  %25 = load i32, i32* %i, align 4, !dbg !5321
  %add27 = add nsw i32 %mul26, %25, !dbg !5322
  %idxprom28 = sext i32 %add27 to i64, !dbg !5323
  %26 = load float*, float** %X.addr, align 8, !dbg !5323
  %arrayidx29 = getelementptr inbounds float, float* %26, i64 %idxprom28, !dbg !5323
  store float %conv23, float* %arrayidx29, align 4, !dbg !5324
  br label %for.inc, !dbg !5325

for.inc:                                          ; preds = %for.body3
  %27 = load i32, i32* %j, align 4, !dbg !5326
  %inc = add nsw i32 %27, 1, !dbg !5326
  store i32 %inc, i32* %j, align 4, !dbg !5326
  br label %for.cond1, !dbg !5328, !llvm.loop !5329

for.end:                                          ; preds = %for.cond1
  br label %for.inc30, !dbg !5331

for.inc30:                                        ; preds = %for.end
  %28 = load i32, i32* %i, align 4, !dbg !5332
  %inc31 = add nsw i32 %28, 1, !dbg !5332
  store i32 %inc31, i32* %i, align 4, !dbg !5332
  br label %for.cond, !dbg !5334, !llvm.loop !5335

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !5337
}

; Function Attrs: nounwind uwtable
define internal void @celt_deinterleave_hadamard(float* %tmp, float* %X, i32 %N0, i32 %stride, i32 %hadamard) #3 !dbg !5338 {
entry:
  %tmp.addr = alloca float*, align 8
  %X.addr = alloca float*, align 8
  %N0.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %hadamard.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %N = alloca i32, align 4
  %order = alloca i8*, align 8
  store float* %tmp, float** %tmp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tmp.addr, metadata !5341, metadata !1787), !dbg !5342
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !5343, metadata !1787), !dbg !5344
  store i32 %N0, i32* %N0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N0.addr, metadata !5345, metadata !1787), !dbg !5346
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !5347, metadata !1787), !dbg !5348
  store i32 %hadamard, i32* %hadamard.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hadamard.addr, metadata !5349, metadata !1787), !dbg !5350
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5351, metadata !1787), !dbg !5352
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5353, metadata !1787), !dbg !5354
  call void @llvm.dbg.declare(metadata i32* %N, metadata !5355, metadata !1787), !dbg !5356
  %0 = load i32, i32* %N0.addr, align 4, !dbg !5357
  %1 = load i32, i32* %stride.addr, align 4, !dbg !5358
  %mul = mul nsw i32 %0, %1, !dbg !5359
  store i32 %mul, i32* %N, align 4, !dbg !5356
  call void @llvm.dbg.declare(metadata i8** %order, metadata !5360, metadata !1787), !dbg !5361
  %2 = load i32, i32* %hadamard.addr, align 4, !dbg !5362
  %tobool = icmp ne i32 %2, 0, !dbg !5362
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5362

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %stride.addr, align 4, !dbg !5363
  %sub = sub nsw i32 %3, 2, !dbg !5365
  br label %cond.end, !dbg !5366

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5367

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ 30, %cond.false ], !dbg !5369
  %idxprom = sext i32 %cond to i64, !dbg !5371
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @ff_celt_hadamard_order, i64 0, i64 %idxprom, !dbg !5371
  store i8* %arrayidx, i8** %order, align 8, !dbg !5372
  store i32 0, i32* %i, align 4, !dbg !5373
  br label %for.cond, !dbg !5375

for.cond:                                         ; preds = %for.inc17, %cond.end
  %4 = load i32, i32* %i, align 4, !dbg !5376
  %5 = load i32, i32* %stride.addr, align 4, !dbg !5379
  %cmp = icmp slt i32 %4, %5, !dbg !5380
  br i1 %cmp, label %for.body, label %for.end19, !dbg !5381

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !5382
  br label %for.cond5, !dbg !5384

for.cond5:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %j, align 4, !dbg !5385
  %7 = load i32, i32* %N0.addr, align 4, !dbg !5388
  %cmp6 = icmp slt i32 %6, %7, !dbg !5389
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !5390

for.body7:                                        ; preds = %for.cond5
  %8 = load i32, i32* %j, align 4, !dbg !5391
  %9 = load i32, i32* %stride.addr, align 4, !dbg !5392
  %mul8 = mul nsw i32 %8, %9, !dbg !5393
  %10 = load i32, i32* %i, align 4, !dbg !5394
  %add = add nsw i32 %mul8, %10, !dbg !5395
  %idxprom9 = sext i32 %add to i64, !dbg !5396
  %11 = load float*, float** %X.addr, align 8, !dbg !5396
  %arrayidx10 = getelementptr inbounds float, float* %11, i64 %idxprom9, !dbg !5396
  %12 = load float, float* %arrayidx10, align 4, !dbg !5396
  %13 = load i32, i32* %i, align 4, !dbg !5397
  %idxprom11 = sext i32 %13 to i64, !dbg !5398
  %14 = load i8*, i8** %order, align 8, !dbg !5398
  %arrayidx12 = getelementptr inbounds i8, i8* %14, i64 %idxprom11, !dbg !5398
  %15 = load i8, i8* %arrayidx12, align 1, !dbg !5398
  %conv = zext i8 %15 to i32, !dbg !5398
  %16 = load i32, i32* %N0.addr, align 4, !dbg !5399
  %mul13 = mul nsw i32 %conv, %16, !dbg !5400
  %17 = load i32, i32* %j, align 4, !dbg !5401
  %add14 = add nsw i32 %mul13, %17, !dbg !5402
  %idxprom15 = sext i32 %add14 to i64, !dbg !5403
  %18 = load float*, float** %tmp.addr, align 8, !dbg !5403
  %arrayidx16 = getelementptr inbounds float, float* %18, i64 %idxprom15, !dbg !5403
  store float %12, float* %arrayidx16, align 4, !dbg !5404
  br label %for.inc, !dbg !5403

for.inc:                                          ; preds = %for.body7
  %19 = load i32, i32* %j, align 4, !dbg !5405
  %inc = add nsw i32 %19, 1, !dbg !5405
  store i32 %inc, i32* %j, align 4, !dbg !5405
  br label %for.cond5, !dbg !5407, !llvm.loop !5408

for.end:                                          ; preds = %for.cond5
  br label %for.inc17, !dbg !5410

for.inc17:                                        ; preds = %for.end
  %20 = load i32, i32* %i, align 4, !dbg !5412
  %inc18 = add nsw i32 %20, 1, !dbg !5412
  store i32 %inc18, i32* %i, align 4, !dbg !5412
  br label %for.cond, !dbg !5414, !llvm.loop !5415

for.end19:                                        ; preds = %for.cond
  %21 = load float*, float** %X.addr, align 8, !dbg !5417
  %22 = bitcast float* %21 to i8*, !dbg !5418
  %23 = load float*, float** %tmp.addr, align 8, !dbg !5419
  %24 = bitcast float* %23 to i8*, !dbg !5418
  %25 = load i32, i32* %N, align 4, !dbg !5420
  %conv20 = sext i32 %25 to i64, !dbg !5420
  %mul21 = mul i64 %conv20, 4, !dbg !5421
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %24, i64 %mul21, i32 4, i1 false), !dbg !5418
  ret void, !dbg !5422
}

; Function Attrs: nounwind uwtable
define internal i32 @celt_calc_theta(float* %X, float* %Y, i32 %coupling, i32 %N) #3 !dbg !5423 {
entry:
  %X.addr = alloca float*, align 8
  %Y.addr = alloca float*, align 8
  %coupling.addr = alloca i32, align 4
  %N.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %e = alloca [2 x float], align 4
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !5426, metadata !1787), !dbg !5427
  store float* %Y, float** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata float** %Y.addr, metadata !5428, metadata !1787), !dbg !5429
  store i32 %coupling, i32* %coupling.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %coupling.addr, metadata !5430, metadata !1787), !dbg !5431
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !5432, metadata !1787), !dbg !5433
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5434, metadata !1787), !dbg !5435
  call void @llvm.dbg.declare(metadata [2 x float]* %e, metadata !5436, metadata !1787), !dbg !5438
  %0 = bitcast [2 x float]* %e to i8*, !dbg !5438
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 8, i32 4, i1 false), !dbg !5438
  %1 = load i32, i32* %coupling.addr, align 4, !dbg !5439
  %tobool = icmp ne i32 %1, 0, !dbg !5439
  br i1 %tobool, label %if.then, label %if.else, !dbg !5441

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !5442
  br label %for.cond, !dbg !5445

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !5446
  %3 = load i32, i32* %N.addr, align 4, !dbg !5449
  %cmp = icmp slt i32 %2, %3, !dbg !5450
  br i1 %cmp, label %for.body, label %for.end, !dbg !5451

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !5452
  %idxprom = sext i32 %4 to i64, !dbg !5454
  %5 = load float*, float** %X.addr, align 8, !dbg !5454
  %arrayidx = getelementptr inbounds float, float* %5, i64 %idxprom, !dbg !5454
  %6 = load float, float* %arrayidx, align 4, !dbg !5454
  %7 = load i32, i32* %i, align 4, !dbg !5455
  %idxprom1 = sext i32 %7 to i64, !dbg !5456
  %8 = load float*, float** %Y.addr, align 8, !dbg !5456
  %arrayidx2 = getelementptr inbounds float, float* %8, i64 %idxprom1, !dbg !5456
  %9 = load float, float* %arrayidx2, align 4, !dbg !5456
  %add = fadd float %6, %9, !dbg !5457
  %10 = load i32, i32* %i, align 4, !dbg !5458
  %idxprom3 = sext i32 %10 to i64, !dbg !5459
  %11 = load float*, float** %X.addr, align 8, !dbg !5459
  %arrayidx4 = getelementptr inbounds float, float* %11, i64 %idxprom3, !dbg !5459
  %12 = load float, float* %arrayidx4, align 4, !dbg !5459
  %13 = load i32, i32* %i, align 4, !dbg !5460
  %idxprom5 = sext i32 %13 to i64, !dbg !5461
  %14 = load float*, float** %Y.addr, align 8, !dbg !5461
  %arrayidx6 = getelementptr inbounds float, float* %14, i64 %idxprom5, !dbg !5461
  %15 = load float, float* %arrayidx6, align 4, !dbg !5461
  %add7 = fadd float %12, %15, !dbg !5462
  %mul = fmul float %add, %add7, !dbg !5463
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %e, i64 0, i64 0, !dbg !5464
  %16 = load float, float* %arrayidx8, align 4, !dbg !5465
  %add9 = fadd float %16, %mul, !dbg !5465
  store float %add9, float* %arrayidx8, align 4, !dbg !5465
  %17 = load i32, i32* %i, align 4, !dbg !5466
  %idxprom10 = sext i32 %17 to i64, !dbg !5467
  %18 = load float*, float** %X.addr, align 8, !dbg !5467
  %arrayidx11 = getelementptr inbounds float, float* %18, i64 %idxprom10, !dbg !5467
  %19 = load float, float* %arrayidx11, align 4, !dbg !5467
  %20 = load i32, i32* %i, align 4, !dbg !5468
  %idxprom12 = sext i32 %20 to i64, !dbg !5469
  %21 = load float*, float** %Y.addr, align 8, !dbg !5469
  %arrayidx13 = getelementptr inbounds float, float* %21, i64 %idxprom12, !dbg !5469
  %22 = load float, float* %arrayidx13, align 4, !dbg !5469
  %sub = fsub float %19, %22, !dbg !5470
  %23 = load i32, i32* %i, align 4, !dbg !5471
  %idxprom14 = sext i32 %23 to i64, !dbg !5472
  %24 = load float*, float** %X.addr, align 8, !dbg !5472
  %arrayidx15 = getelementptr inbounds float, float* %24, i64 %idxprom14, !dbg !5472
  %25 = load float, float* %arrayidx15, align 4, !dbg !5472
  %26 = load i32, i32* %i, align 4, !dbg !5473
  %idxprom16 = sext i32 %26 to i64, !dbg !5474
  %27 = load float*, float** %Y.addr, align 8, !dbg !5474
  %arrayidx17 = getelementptr inbounds float, float* %27, i64 %idxprom16, !dbg !5474
  %28 = load float, float* %arrayidx17, align 4, !dbg !5474
  %sub18 = fsub float %25, %28, !dbg !5475
  %mul19 = fmul float %sub, %sub18, !dbg !5476
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %e, i64 0, i64 1, !dbg !5477
  %29 = load float, float* %arrayidx20, align 4, !dbg !5478
  %add21 = fadd float %29, %mul19, !dbg !5478
  store float %add21, float* %arrayidx20, align 4, !dbg !5478
  br label %for.inc, !dbg !5479

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !5480
  %inc = add nsw i32 %30, 1, !dbg !5480
  store i32 %inc, i32* %i, align 4, !dbg !5480
  br label %for.cond, !dbg !5482, !llvm.loop !5483

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !5485

if.else:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !5486
  br label %for.cond22, !dbg !5489

for.cond22:                                       ; preds = %for.inc39, %if.else
  %31 = load i32, i32* %i, align 4, !dbg !5490
  %32 = load i32, i32* %N.addr, align 4, !dbg !5493
  %cmp23 = icmp slt i32 %31, %32, !dbg !5494
  br i1 %cmp23, label %for.body24, label %for.end41, !dbg !5495

for.body24:                                       ; preds = %for.cond22
  %33 = load i32, i32* %i, align 4, !dbg !5496
  %idxprom25 = sext i32 %33 to i64, !dbg !5498
  %34 = load float*, float** %X.addr, align 8, !dbg !5498
  %arrayidx26 = getelementptr inbounds float, float* %34, i64 %idxprom25, !dbg !5498
  %35 = load float, float* %arrayidx26, align 4, !dbg !5498
  %36 = load i32, i32* %i, align 4, !dbg !5499
  %idxprom27 = sext i32 %36 to i64, !dbg !5500
  %37 = load float*, float** %X.addr, align 8, !dbg !5500
  %arrayidx28 = getelementptr inbounds float, float* %37, i64 %idxprom27, !dbg !5500
  %38 = load float, float* %arrayidx28, align 4, !dbg !5500
  %mul29 = fmul float %35, %38, !dbg !5501
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %e, i64 0, i64 0, !dbg !5502
  %39 = load float, float* %arrayidx30, align 4, !dbg !5503
  %add31 = fadd float %39, %mul29, !dbg !5503
  store float %add31, float* %arrayidx30, align 4, !dbg !5503
  %40 = load i32, i32* %i, align 4, !dbg !5504
  %idxprom32 = sext i32 %40 to i64, !dbg !5505
  %41 = load float*, float** %Y.addr, align 8, !dbg !5505
  %arrayidx33 = getelementptr inbounds float, float* %41, i64 %idxprom32, !dbg !5505
  %42 = load float, float* %arrayidx33, align 4, !dbg !5505
  %43 = load i32, i32* %i, align 4, !dbg !5506
  %idxprom34 = sext i32 %43 to i64, !dbg !5507
  %44 = load float*, float** %Y.addr, align 8, !dbg !5507
  %arrayidx35 = getelementptr inbounds float, float* %44, i64 %idxprom34, !dbg !5507
  %45 = load float, float* %arrayidx35, align 4, !dbg !5507
  %mul36 = fmul float %42, %45, !dbg !5508
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %e, i64 0, i64 1, !dbg !5509
  %46 = load float, float* %arrayidx37, align 4, !dbg !5510
  %add38 = fadd float %46, %mul36, !dbg !5510
  store float %add38, float* %arrayidx37, align 4, !dbg !5510
  br label %for.inc39, !dbg !5511

for.inc39:                                        ; preds = %for.body24
  %47 = load i32, i32* %i, align 4, !dbg !5512
  %inc40 = add nsw i32 %47, 1, !dbg !5512
  store i32 %inc40, i32* %i, align 4, !dbg !5512
  br label %for.cond22, !dbg !5514, !llvm.loop !5515

for.end41:                                        ; preds = %for.cond22
  br label %if.end

if.end:                                           ; preds = %for.end41, %for.end
  %arrayidx42 = getelementptr inbounds [2 x float], [2 x float]* %e, i64 0, i64 1, !dbg !5517
  %48 = load float, float* %arrayidx42, align 4, !dbg !5517
  %call = call float @sqrtf(float %48) #7, !dbg !5518
  %arrayidx43 = getelementptr inbounds [2 x float], [2 x float]* %e, i64 0, i64 0, !dbg !5519
  %49 = load float, float* %arrayidx43, align 4, !dbg !5519
  %call44 = call float @sqrtf(float %49) #7, !dbg !5520
  %call45 = call float @atan2f(float %call, float %call44) #7, !dbg !5522
  %mul46 = fmul float 3.276800e+04, %call45, !dbg !5524
  %conv = fpext float %mul46 to double, !dbg !5525
  %div = fdiv double %conv, 0x400921FB54442D18, !dbg !5526
  %conv47 = fptrunc double %div to float, !dbg !5525
  %call48 = call i64 @lrintf(float %conv47) #7, !dbg !5527
  %conv49 = trunc i64 %call48 to i32, !dbg !5529
  ret i32 %conv49, !dbg !5530
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @celt_compute_qn(i32 %N, i32 %b, i32 %offset, i32 %pulse_cap, i32 %stereo) #5 !dbg !5531 {
entry:
  %N.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %pulse_cap.addr = alloca i32, align 4
  %stereo.addr = alloca i32, align 4
  %qn = alloca i32, align 4
  %qb = alloca i32, align 4
  %N2 = alloca i32, align 4
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !5534, metadata !1787), !dbg !5535
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !5536, metadata !1787), !dbg !5537
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5538, metadata !1787), !dbg !5539
  store i32 %pulse_cap, i32* %pulse_cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pulse_cap.addr, metadata !5540, metadata !1787), !dbg !5541
  store i32 %stereo, i32* %stereo.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stereo.addr, metadata !5542, metadata !1787), !dbg !5543
  call void @llvm.dbg.declare(metadata i32* %qn, metadata !5544, metadata !1787), !dbg !5545
  call void @llvm.dbg.declare(metadata i32* %qb, metadata !5546, metadata !1787), !dbg !5547
  call void @llvm.dbg.declare(metadata i32* %N2, metadata !5548, metadata !1787), !dbg !5549
  %0 = load i32, i32* %N.addr, align 4, !dbg !5550
  %mul = mul nsw i32 2, %0, !dbg !5551
  %sub = sub nsw i32 %mul, 1, !dbg !5552
  store i32 %sub, i32* %N2, align 4, !dbg !5549
  %1 = load i32, i32* %stereo.addr, align 4, !dbg !5553
  %tobool = icmp ne i32 %1, 0, !dbg !5553
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5555

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %N.addr, align 4, !dbg !5556
  %cmp = icmp eq i32 %2, 2, !dbg !5558
  br i1 %cmp, label %if.then, label %if.end, !dbg !5559

if.then:                                          ; preds = %land.lhs.true
  %3 = load i32, i32* %N2, align 4, !dbg !5560
  %dec = add nsw i32 %3, -1, !dbg !5560
  store i32 %dec, i32* %N2, align 4, !dbg !5560
  br label %if.end, !dbg !5561

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i32, i32* %b.addr, align 4, !dbg !5562
  %5 = load i32, i32* %pulse_cap.addr, align 4, !dbg !5563
  %sub1 = sub nsw i32 %4, %5, !dbg !5564
  %sub2 = sub nsw i32 %sub1, 32, !dbg !5565
  %6 = load i32, i32* %b.addr, align 4, !dbg !5566
  %7 = load i32, i32* %N2, align 4, !dbg !5567
  %8 = load i32, i32* %offset.addr, align 4, !dbg !5568
  %mul3 = mul nsw i32 %7, %8, !dbg !5569
  %add = add nsw i32 %6, %mul3, !dbg !5570
  %9 = load i32, i32* %N2, align 4, !dbg !5571
  %div = sdiv i32 %add, %9, !dbg !5572
  %cmp4 = icmp sgt i32 %sub2, %div, !dbg !5573
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !5574

cond.true:                                        ; preds = %if.end
  %10 = load i32, i32* %b.addr, align 4, !dbg !5575
  %11 = load i32, i32* %N2, align 4, !dbg !5577
  %12 = load i32, i32* %offset.addr, align 4, !dbg !5578
  %mul5 = mul nsw i32 %11, %12, !dbg !5579
  %add6 = add nsw i32 %10, %mul5, !dbg !5580
  %13 = load i32, i32* %N2, align 4, !dbg !5581
  %div7 = sdiv i32 %add6, %13, !dbg !5582
  br label %cond.end, !dbg !5583

cond.false:                                       ; preds = %if.end
  %14 = load i32, i32* %b.addr, align 4, !dbg !5584
  %15 = load i32, i32* %pulse_cap.addr, align 4, !dbg !5586
  %sub8 = sub nsw i32 %14, %15, !dbg !5587
  %sub9 = sub nsw i32 %sub8, 32, !dbg !5588
  br label %cond.end, !dbg !5589

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div7, %cond.true ], [ %sub9, %cond.false ], !dbg !5590
  %cmp10 = icmp sgt i32 %cond, 64, !dbg !5592
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !5593

cond.true11:                                      ; preds = %cond.end
  br label %cond.end28, !dbg !5594

cond.false12:                                     ; preds = %cond.end
  %16 = load i32, i32* %b.addr, align 4, !dbg !5596
  %17 = load i32, i32* %pulse_cap.addr, align 4, !dbg !5598
  %sub13 = sub nsw i32 %16, %17, !dbg !5599
  %sub14 = sub nsw i32 %sub13, 32, !dbg !5600
  %18 = load i32, i32* %b.addr, align 4, !dbg !5601
  %19 = load i32, i32* %N2, align 4, !dbg !5602
  %20 = load i32, i32* %offset.addr, align 4, !dbg !5603
  %mul15 = mul nsw i32 %19, %20, !dbg !5604
  %add16 = add nsw i32 %18, %mul15, !dbg !5605
  %21 = load i32, i32* %N2, align 4, !dbg !5606
  %div17 = sdiv i32 %add16, %21, !dbg !5607
  %cmp18 = icmp sgt i32 %sub14, %div17, !dbg !5608
  br i1 %cmp18, label %cond.true19, label %cond.false23, !dbg !5609

cond.true19:                                      ; preds = %cond.false12
  %22 = load i32, i32* %b.addr, align 4, !dbg !5610
  %23 = load i32, i32* %N2, align 4, !dbg !5612
  %24 = load i32, i32* %offset.addr, align 4, !dbg !5613
  %mul20 = mul nsw i32 %23, %24, !dbg !5614
  %add21 = add nsw i32 %22, %mul20, !dbg !5615
  %25 = load i32, i32* %N2, align 4, !dbg !5616
  %div22 = sdiv i32 %add21, %25, !dbg !5617
  br label %cond.end26, !dbg !5618

cond.false23:                                     ; preds = %cond.false12
  %26 = load i32, i32* %b.addr, align 4, !dbg !5619
  %27 = load i32, i32* %pulse_cap.addr, align 4, !dbg !5621
  %sub24 = sub nsw i32 %26, %27, !dbg !5622
  %sub25 = sub nsw i32 %sub24, 32, !dbg !5623
  br label %cond.end26, !dbg !5624

cond.end26:                                       ; preds = %cond.false23, %cond.true19
  %cond27 = phi i32 [ %div22, %cond.true19 ], [ %sub25, %cond.false23 ], !dbg !5625
  br label %cond.end28, !dbg !5627

cond.end28:                                       ; preds = %cond.end26, %cond.true11
  %cond29 = phi i32 [ 64, %cond.true11 ], [ %cond27, %cond.end26 ], !dbg !5628
  store i32 %cond29, i32* %qb, align 4, !dbg !5630
  %28 = load i32, i32* %qb, align 4, !dbg !5631
  %cmp30 = icmp slt i32 %28, 4, !dbg !5632
  br i1 %cmp30, label %cond.true31, label %cond.false32, !dbg !5633

cond.true31:                                      ; preds = %cond.end28
  br label %cond.end37, !dbg !5634

cond.false32:                                     ; preds = %cond.end28
  %29 = load i32, i32* %qb, align 4, !dbg !5635
  %and = and i32 %29, 7, !dbg !5636
  %idxprom = sext i32 %and to i64, !dbg !5637
  %arrayidx = getelementptr inbounds [0 x i16], [0 x i16]* @ff_celt_qn_exp2, i64 0, i64 %idxprom, !dbg !5637
  %30 = load i16, i16* %arrayidx, align 2, !dbg !5637
  %conv = zext i16 %30 to i32, !dbg !5637
  %31 = load i32, i32* %qb, align 4, !dbg !5638
  %shr = ashr i32 %31, 3, !dbg !5639
  %sub33 = sub nsw i32 14, %shr, !dbg !5640
  %shr34 = ashr i32 %conv, %sub33, !dbg !5641
  %add35 = add nsw i32 %shr34, 1, !dbg !5642
  %shr36 = ashr i32 %add35, 1, !dbg !5643
  %shl = shl i32 %shr36, 1, !dbg !5644
  br label %cond.end37, !dbg !5645

cond.end37:                                       ; preds = %cond.false32, %cond.true31
  %cond38 = phi i32 [ 1, %cond.true31 ], [ %shl, %cond.false32 ], !dbg !5646
  store i32 %cond38, i32* %qn, align 4, !dbg !5647
  %32 = load i32, i32* %qn, align 4, !dbg !5648
  ret i32 %32, !dbg !5649
}

declare void @ff_opus_rc_enc_uint_step(%struct.OpusRangeCoder*, i32, i32) #2

declare void @ff_opus_rc_enc_uint(%struct.OpusRangeCoder*, i32, i32) #2

declare void @ff_opus_rc_enc_uint_tri(%struct.OpusRangeCoder*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @celt_stereo_is_decouple(float* %X, float* %Y, float %e_l, float %e_r, i32 %N) #3 !dbg !5650 {
entry:
  %X.addr = alloca float*, align 8
  %Y.addr = alloca float*, align 8
  %e_l.addr = alloca float, align 4
  %e_r.addr = alloca float, align 4
  %N.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %energy_n = alloca float, align 4
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !5653, metadata !1787), !dbg !5654
  store float* %Y, float** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata float** %Y.addr, metadata !5655, metadata !1787), !dbg !5656
  store float %e_l, float* %e_l.addr, align 4
  call void @llvm.dbg.declare(metadata float* %e_l.addr, metadata !5657, metadata !1787), !dbg !5658
  store float %e_r, float* %e_r.addr, align 4
  call void @llvm.dbg.declare(metadata float* %e_r.addr, metadata !5659, metadata !1787), !dbg !5660
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !5661, metadata !1787), !dbg !5662
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5663, metadata !1787), !dbg !5664
  call void @llvm.dbg.declare(metadata float* %energy_n, metadata !5665, metadata !1787), !dbg !5666
  %0 = load float, float* %e_l.addr, align 4, !dbg !5667
  %1 = load float, float* %e_l.addr, align 4, !dbg !5668
  %mul = fmul float %0, %1, !dbg !5669
  %2 = load float, float* %e_r.addr, align 4, !dbg !5670
  %3 = load float, float* %e_r.addr, align 4, !dbg !5671
  %mul1 = fmul float %2, %3, !dbg !5672
  %add = fadd float %mul, %mul1, !dbg !5673
  %call = call float @sqrtf(float %add) #7, !dbg !5674
  %add2 = fadd float %call, 0x3E80000000000000, !dbg !5675
  %div = fdiv float 1.000000e+00, %add2, !dbg !5676
  store float %div, float* %energy_n, align 4, !dbg !5666
  %4 = load float, float* %energy_n, align 4, !dbg !5677
  %5 = load float, float* %e_l.addr, align 4, !dbg !5678
  %mul3 = fmul float %5, %4, !dbg !5678
  store float %mul3, float* %e_l.addr, align 4, !dbg !5678
  %6 = load float, float* %energy_n, align 4, !dbg !5679
  %7 = load float, float* %e_r.addr, align 4, !dbg !5680
  %mul4 = fmul float %7, %6, !dbg !5680
  store float %mul4, float* %e_r.addr, align 4, !dbg !5680
  store i32 0, i32* %i, align 4, !dbg !5681
  br label %for.cond, !dbg !5683

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !5684
  %9 = load i32, i32* %N.addr, align 4, !dbg !5687
  %cmp = icmp slt i32 %8, %9, !dbg !5688
  br i1 %cmp, label %for.body, label %for.end, !dbg !5689

for.body:                                         ; preds = %for.cond
  %10 = load float, float* %e_l.addr, align 4, !dbg !5690
  %11 = load i32, i32* %i, align 4, !dbg !5691
  %idxprom = sext i32 %11 to i64, !dbg !5692
  %12 = load float*, float** %X.addr, align 8, !dbg !5692
  %arrayidx = getelementptr inbounds float, float* %12, i64 %idxprom, !dbg !5692
  %13 = load float, float* %arrayidx, align 4, !dbg !5692
  %mul5 = fmul float %10, %13, !dbg !5693
  %14 = load float, float* %e_r.addr, align 4, !dbg !5694
  %15 = load i32, i32* %i, align 4, !dbg !5695
  %idxprom6 = sext i32 %15 to i64, !dbg !5696
  %16 = load float*, float** %Y.addr, align 8, !dbg !5696
  %arrayidx7 = getelementptr inbounds float, float* %16, i64 %idxprom6, !dbg !5696
  %17 = load float, float* %arrayidx7, align 4, !dbg !5696
  %mul8 = fmul float %14, %17, !dbg !5697
  %add9 = fadd float %mul5, %mul8, !dbg !5698
  %18 = load i32, i32* %i, align 4, !dbg !5699
  %idxprom10 = sext i32 %18 to i64, !dbg !5700
  %19 = load float*, float** %X.addr, align 8, !dbg !5700
  %arrayidx11 = getelementptr inbounds float, float* %19, i64 %idxprom10, !dbg !5700
  store float %add9, float* %arrayidx11, align 4, !dbg !5701
  br label %for.inc, !dbg !5700

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !5702
  %inc = add nsw i32 %20, 1, !dbg !5702
  store i32 %inc, i32* %i, align 4, !dbg !5702
  br label %for.cond, !dbg !5704, !llvm.loop !5705

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5707
}

; Function Attrs: nounwind uwtable
define internal void @celt_stereo_ms_decouple(float* %X, float* %Y, i32 %N) #3 !dbg !5708 {
entry:
  %X.addr = alloca float*, align 8
  %Y.addr = alloca float*, align 8
  %N.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %Xret = alloca float, align 4
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !5711, metadata !1787), !dbg !5712
  store float* %Y, float** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata float** %Y.addr, metadata !5713, metadata !1787), !dbg !5714
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !5715, metadata !1787), !dbg !5716
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5717, metadata !1787), !dbg !5718
  store i32 0, i32* %i, align 4, !dbg !5719
  br label %for.cond, !dbg !5721

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5722
  %1 = load i32, i32* %N.addr, align 4, !dbg !5725
  %cmp = icmp slt i32 %0, %1, !dbg !5726
  br i1 %cmp, label %for.body, label %for.end, !dbg !5727

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %Xret, metadata !5728, metadata !1787), !dbg !5730
  %2 = load i32, i32* %i, align 4, !dbg !5731
  %idxprom = sext i32 %2 to i64, !dbg !5732
  %3 = load float*, float** %X.addr, align 8, !dbg !5732
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !5732
  %4 = load float, float* %arrayidx, align 4, !dbg !5732
  store float %4, float* %Xret, align 4, !dbg !5730
  %5 = load i32, i32* %i, align 4, !dbg !5733
  %idxprom1 = sext i32 %5 to i64, !dbg !5734
  %6 = load float*, float** %X.addr, align 8, !dbg !5734
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 %idxprom1, !dbg !5734
  %7 = load float, float* %arrayidx2, align 4, !dbg !5734
  %8 = load i32, i32* %i, align 4, !dbg !5735
  %idxprom3 = sext i32 %8 to i64, !dbg !5736
  %9 = load float*, float** %Y.addr, align 8, !dbg !5736
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 %idxprom3, !dbg !5736
  %10 = load float, float* %arrayidx4, align 4, !dbg !5736
  %add = fadd float %7, %10, !dbg !5737
  %conv = fpext float %add to double, !dbg !5738
  %mul = fmul double %conv, 0x3FE6A09E667F3BCD, !dbg !5739
  %conv5 = fptrunc double %mul to float, !dbg !5738
  %11 = load i32, i32* %i, align 4, !dbg !5740
  %idxprom6 = sext i32 %11 to i64, !dbg !5741
  %12 = load float*, float** %X.addr, align 8, !dbg !5741
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 %idxprom6, !dbg !5741
  store float %conv5, float* %arrayidx7, align 4, !dbg !5742
  %13 = load i32, i32* %i, align 4, !dbg !5743
  %idxprom8 = sext i32 %13 to i64, !dbg !5744
  %14 = load float*, float** %Y.addr, align 8, !dbg !5744
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 %idxprom8, !dbg !5744
  %15 = load float, float* %arrayidx9, align 4, !dbg !5744
  %16 = load float, float* %Xret, align 4, !dbg !5745
  %sub = fsub float %15, %16, !dbg !5746
  %conv10 = fpext float %sub to double, !dbg !5747
  %mul11 = fmul double %conv10, 0x3FE6A09E667F3BCD, !dbg !5748
  %conv12 = fptrunc double %mul11 to float, !dbg !5747
  %17 = load i32, i32* %i, align 4, !dbg !5749
  %idxprom13 = sext i32 %17 to i64, !dbg !5750
  %18 = load float*, float** %Y.addr, align 8, !dbg !5750
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 %idxprom13, !dbg !5750
  store float %conv12, float* %arrayidx14, align 4, !dbg !5751
  br label %for.inc, !dbg !5752

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !5753
  %inc = add nsw i32 %19, 1, !dbg !5753
  store i32 %inc, i32* %i, align 4, !dbg !5753
  br label %for.cond, !dbg !5755, !llvm.loop !5756

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5758
}

declare i32 @ff_opus_rc_dec_uint_step(%struct.OpusRangeCoder*, i32) #2

declare i32 @ff_opus_rc_dec_uint(%struct.OpusRangeCoder*, i32) #2

declare i32 @ff_opus_rc_dec_uint_tri(%struct.OpusRangeCoder*, i32) #2

declare void @ff_opus_rc_enc_log(%struct.OpusRangeCoder*, i32, i32) #2

declare i32 @ff_opus_rc_dec_log(%struct.OpusRangeCoder*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal signext i16 @celt_cos(i16 signext %x) #5 !dbg !5759 {
entry:
  %x.addr = alloca i16, align 2
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !5764, metadata !1787), !dbg !5765
  %0 = load i16, i16* %x.addr, align 2, !dbg !5766
  %conv = sext i16 %0 to i32, !dbg !5767
  %1 = load i16, i16* %x.addr, align 2, !dbg !5768
  %conv1 = sext i16 %1 to i32, !dbg !5769
  %mul = mul nsw i32 %conv, %conv1, !dbg !5770
  %add = add nsw i32 %mul, 4096, !dbg !5771
  %shr = ashr i32 %add, 13, !dbg !5772
  %conv2 = trunc i32 %shr to i16, !dbg !5773
  store i16 %conv2, i16* %x.addr, align 2, !dbg !5774
  %2 = load i16, i16* %x.addr, align 2, !dbg !5775
  %conv3 = sext i16 %2 to i32, !dbg !5775
  %sub = sub nsw i32 32767, %conv3, !dbg !5776
  %3 = load i16, i16* %x.addr, align 2, !dbg !5777
  %conv4 = sext i16 %3 to i32, !dbg !5778
  %4 = load i16, i16* %x.addr, align 2, !dbg !5779
  %conv5 = sext i16 %4 to i32, !dbg !5780
  %5 = load i16, i16* %x.addr, align 2, !dbg !5781
  %conv6 = sext i16 %5 to i32, !dbg !5782
  %mul7 = mul nsw i32 -626, %conv6, !dbg !5783
  %add8 = add nsw i32 %mul7, 16384, !dbg !5784
  %shr9 = ashr i32 %add8, 15, !dbg !5785
  %add10 = add nsw i32 8277, %shr9, !dbg !5786
  %mul11 = mul nsw i32 %conv5, %add10, !dbg !5787
  %add12 = add nsw i32 %mul11, 16384, !dbg !5788
  %shr13 = ashr i32 %add12, 15, !dbg !5789
  %add14 = add nsw i32 -7651, %shr13, !dbg !5790
  %mul15 = mul nsw i32 %conv4, %add14, !dbg !5791
  %add16 = add nsw i32 %mul15, 16384, !dbg !5792
  %shr17 = ashr i32 %add16, 15, !dbg !5793
  %add18 = add nsw i32 %sub, %shr17, !dbg !5794
  %conv19 = trunc i32 %add18 to i16, !dbg !5795
  store i16 %conv19, i16* %x.addr, align 2, !dbg !5796
  %6 = load i16, i16* %x.addr, align 2, !dbg !5797
  %conv20 = sext i16 %6 to i32, !dbg !5797
  %add21 = add nsw i32 %conv20, 1, !dbg !5798
  %conv22 = trunc i32 %add21 to i16, !dbg !5797
  ret i16 %conv22, !dbg !5799
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @celt_log2tan(i32 %isin, i32 %icos) #5 !dbg !5800 {
entry:
  %isin.addr = alloca i32, align 4
  %icos.addr = alloca i32, align 4
  %lc = alloca i32, align 4
  %ls = alloca i32, align 4
  store i32 %isin, i32* %isin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %isin.addr, metadata !5803, metadata !1787), !dbg !5804
  store i32 %icos, i32* %icos.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icos.addr, metadata !5805, metadata !1787), !dbg !5806
  call void @llvm.dbg.declare(metadata i32* %lc, metadata !5807, metadata !1787), !dbg !5808
  call void @llvm.dbg.declare(metadata i32* %ls, metadata !5809, metadata !1787), !dbg !5810
  %0 = load i32, i32* %icos.addr, align 4, !dbg !5811
  %or = or i32 %0, 1, !dbg !5812
  %1 = call i32 @llvm.ctlz.i32(i32 %or, i1 true), !dbg !5813
  %sub = sub nsw i32 31, %1, !dbg !5814
  %2 = load i32, i32* %icos.addr, align 4, !dbg !5815
  %tobool = icmp ne i32 %2, 0, !dbg !5816
  %lnot = xor i1 %tobool, true, !dbg !5816
  %lnot1 = xor i1 %lnot, true, !dbg !5817
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5817
  %add = add nsw i32 %sub, %lnot.ext, !dbg !5818
  store i32 %add, i32* %lc, align 4, !dbg !5819
  %3 = load i32, i32* %isin.addr, align 4, !dbg !5820
  %or2 = or i32 %3, 1, !dbg !5821
  %4 = call i32 @llvm.ctlz.i32(i32 %or2, i1 true), !dbg !5822
  %sub3 = sub nsw i32 31, %4, !dbg !5823
  %5 = load i32, i32* %isin.addr, align 4, !dbg !5824
  %tobool4 = icmp ne i32 %5, 0, !dbg !5825
  %lnot5 = xor i1 %tobool4, true, !dbg !5825
  %lnot7 = xor i1 %lnot5, true, !dbg !5826
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !5826
  %add9 = add nsw i32 %sub3, %lnot.ext8, !dbg !5827
  store i32 %add9, i32* %ls, align 4, !dbg !5828
  %6 = load i32, i32* %lc, align 4, !dbg !5829
  %sub10 = sub nsw i32 15, %6, !dbg !5830
  %7 = load i32, i32* %icos.addr, align 4, !dbg !5831
  %shl = shl i32 %7, %sub10, !dbg !5831
  store i32 %shl, i32* %icos.addr, align 4, !dbg !5831
  %8 = load i32, i32* %ls, align 4, !dbg !5832
  %sub11 = sub nsw i32 15, %8, !dbg !5833
  %9 = load i32, i32* %isin.addr, align 4, !dbg !5834
  %shl12 = shl i32 %9, %sub11, !dbg !5834
  store i32 %shl12, i32* %isin.addr, align 4, !dbg !5834
  %10 = load i32, i32* %ls, align 4, !dbg !5835
  %shl13 = shl i32 %10, 11, !dbg !5836
  %11 = load i32, i32* %lc, align 4, !dbg !5837
  %shl14 = shl i32 %11, 11, !dbg !5838
  %sub15 = sub nsw i32 %shl13, %shl14, !dbg !5839
  %12 = load i32, i32* %isin.addr, align 4, !dbg !5840
  %13 = load i32, i32* %isin.addr, align 4, !dbg !5841
  %mul = mul nsw i32 %13, -2597, !dbg !5842
  %add16 = add nsw i32 %mul, 16384, !dbg !5843
  %shr = ashr i32 %add16, 15, !dbg !5844
  %add17 = add nsw i32 %shr, 7932, !dbg !5845
  %mul18 = mul nsw i32 %12, %add17, !dbg !5846
  %add19 = add nsw i32 %mul18, 16384, !dbg !5847
  %shr20 = ashr i32 %add19, 15, !dbg !5848
  %add21 = add nsw i32 %sub15, %shr20, !dbg !5849
  %14 = load i32, i32* %icos.addr, align 4, !dbg !5850
  %15 = load i32, i32* %icos.addr, align 4, !dbg !5851
  %mul22 = mul nsw i32 %15, -2597, !dbg !5852
  %add23 = add nsw i32 %mul22, 16384, !dbg !5853
  %shr24 = ashr i32 %add23, 15, !dbg !5854
  %add25 = add nsw i32 %shr24, 7932, !dbg !5855
  %mul26 = mul nsw i32 %14, %add25, !dbg !5856
  %add27 = add nsw i32 %mul26, 16384, !dbg !5857
  %shr28 = ashr i32 %add27, 15, !dbg !5858
  %sub29 = sub nsw i32 %add21, %shr28, !dbg !5859
  ret i32 %sub29, !dbg !5860
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @celt_bits2pulses(i8* %cache, i32 %bits) #5 !dbg !5861 {
entry:
  %cache.addr = alloca i8*, align 8
  %bits.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %low = alloca i32, align 4
  %high = alloca i32, align 4
  %center = alloca i32, align 4
  store i8* %cache, i8** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cache.addr, metadata !5864, metadata !1787), !dbg !5865
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !5866, metadata !1787), !dbg !5867
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5868, metadata !1787), !dbg !5869
  call void @llvm.dbg.declare(metadata i32* %low, metadata !5870, metadata !1787), !dbg !5871
  store i32 0, i32* %low, align 4, !dbg !5871
  call void @llvm.dbg.declare(metadata i32* %high, metadata !5872, metadata !1787), !dbg !5873
  %0 = load i8*, i8** %cache.addr, align 8, !dbg !5874
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !5874
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5874
  %conv = zext i8 %1 to i32, !dbg !5874
  store i32 %conv, i32* %high, align 4, !dbg !5875
  %2 = load i32, i32* %bits.addr, align 4, !dbg !5876
  %dec = add nsw i32 %2, -1, !dbg !5876
  store i32 %dec, i32* %bits.addr, align 4, !dbg !5876
  store i32 0, i32* %i, align 4, !dbg !5877
  br label %for.cond, !dbg !5879

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !5880
  %cmp = icmp slt i32 %3, 6, !dbg !5883
  br i1 %cmp, label %for.body, label %for.end, !dbg !5884

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %center, metadata !5885, metadata !1787), !dbg !5887
  %4 = load i32, i32* %low, align 4, !dbg !5888
  %5 = load i32, i32* %high, align 4, !dbg !5889
  %add = add nsw i32 %4, %5, !dbg !5890
  %add2 = add nsw i32 %add, 1, !dbg !5891
  %shr = ashr i32 %add2, 1, !dbg !5892
  store i32 %shr, i32* %center, align 4, !dbg !5887
  %6 = load i32, i32* %center, align 4, !dbg !5893
  %idxprom = sext i32 %6 to i64, !dbg !5895
  %7 = load i8*, i8** %cache.addr, align 8, !dbg !5895
  %arrayidx3 = getelementptr inbounds i8, i8* %7, i64 %idxprom, !dbg !5895
  %8 = load i8, i8* %arrayidx3, align 1, !dbg !5895
  %conv4 = zext i8 %8 to i32, !dbg !5895
  %9 = load i32, i32* %bits.addr, align 4, !dbg !5896
  %cmp5 = icmp sge i32 %conv4, %9, !dbg !5897
  br i1 %cmp5, label %if.then, label %if.else, !dbg !5898

if.then:                                          ; preds = %for.body
  %10 = load i32, i32* %center, align 4, !dbg !5899
  store i32 %10, i32* %high, align 4, !dbg !5900
  br label %if.end, !dbg !5901

if.else:                                          ; preds = %for.body
  %11 = load i32, i32* %center, align 4, !dbg !5902
  store i32 %11, i32* %low, align 4, !dbg !5903
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !5904

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !5905
  %inc = add nsw i32 %12, 1, !dbg !5905
  store i32 %inc, i32* %i, align 4, !dbg !5905
  br label %for.cond, !dbg !5907, !llvm.loop !5908

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %bits.addr, align 4, !dbg !5910
  %14 = load i32, i32* %low, align 4, !dbg !5911
  %cmp7 = icmp eq i32 %14, 0, !dbg !5912
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !5911

cond.true:                                        ; preds = %for.end
  br label %cond.end, !dbg !5913

cond.false:                                       ; preds = %for.end
  %15 = load i32, i32* %low, align 4, !dbg !5915
  %idxprom9 = sext i32 %15 to i64, !dbg !5917
  %16 = load i8*, i8** %cache.addr, align 8, !dbg !5917
  %arrayidx10 = getelementptr inbounds i8, i8* %16, i64 %idxprom9, !dbg !5917
  %17 = load i8, i8* %arrayidx10, align 1, !dbg !5917
  %conv11 = zext i8 %17 to i32, !dbg !5917
  br label %cond.end, !dbg !5918

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv11, %cond.false ], !dbg !5919
  %sub = sub nsw i32 %13, %cond, !dbg !5921
  %18 = load i32, i32* %high, align 4, !dbg !5922
  %idxprom12 = sext i32 %18 to i64, !dbg !5923
  %19 = load i8*, i8** %cache.addr, align 8, !dbg !5923
  %arrayidx13 = getelementptr inbounds i8, i8* %19, i64 %idxprom12, !dbg !5923
  %20 = load i8, i8* %arrayidx13, align 1, !dbg !5923
  %conv14 = zext i8 %20 to i32, !dbg !5923
  %21 = load i32, i32* %bits.addr, align 4, !dbg !5924
  %sub15 = sub nsw i32 %conv14, %21, !dbg !5925
  %cmp16 = icmp sle i32 %sub, %sub15, !dbg !5926
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !5927

cond.true18:                                      ; preds = %cond.end
  %22 = load i32, i32* %low, align 4, !dbg !5928
  br label %cond.end20, !dbg !5930

cond.false19:                                     ; preds = %cond.end
  %23 = load i32, i32* %high, align 4, !dbg !5931
  br label %cond.end20, !dbg !5933

cond.end20:                                       ; preds = %cond.false19, %cond.true18
  %cond21 = phi i32 [ %22, %cond.true18 ], [ %23, %cond.false19 ], !dbg !5934
  ret i32 %cond21, !dbg !5936
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @celt_pulses2bits(i8* %cache, i32 %pulses) #5 !dbg !5937 {
entry:
  %cache.addr = alloca i8*, align 8
  %pulses.addr = alloca i32, align 4
  store i8* %cache, i8** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cache.addr, metadata !5938, metadata !1787), !dbg !5939
  store i32 %pulses, i32* %pulses.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pulses.addr, metadata !5940, metadata !1787), !dbg !5941
  %0 = load i32, i32* %pulses.addr, align 4, !dbg !5942
  %cmp = icmp eq i32 %0, 0, !dbg !5943
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5944

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !5945

cond.false:                                       ; preds = %entry
  %1 = load i32, i32* %pulses.addr, align 4, !dbg !5947
  %idxprom = sext i32 %1 to i64, !dbg !5949
  %2 = load i8*, i8** %cache.addr, align 8, !dbg !5949
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !5949
  %3 = load i8, i8* %arrayidx, align 1, !dbg !5949
  %conv = zext i8 %3 to i32, !dbg !5949
  %add = add nsw i32 %conv, 1, !dbg !5950
  br label %cond.end, !dbg !5951

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %add, %cond.false ], !dbg !5952
  ret i32 %cond, !dbg !5954
}

; Function Attrs: nounwind uwtable
define internal i32 @celt_alg_quant(%struct.OpusRangeCoder* %rc, float* %X, i32 %N, i32 %K, i32 %spread, i32 %blocks, float %gain, %struct.CeltPVQ* %pvq) #3 !dbg !5955 {
entry:
  %rc.addr = alloca %struct.OpusRangeCoder*, align 8
  %X.addr = alloca float*, align 8
  %N.addr = alloca i32, align 4
  %K.addr = alloca i32, align 4
  %spread.addr = alloca i32, align 4
  %blocks.addr = alloca i32, align 4
  %gain.addr = alloca float, align 4
  %pvq.addr = alloca %struct.CeltPVQ*, align 8
  %y = alloca i32*, align 8
  store %struct.OpusRangeCoder* %rc, %struct.OpusRangeCoder** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OpusRangeCoder** %rc.addr, metadata !5958, metadata !1787), !dbg !5959
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !5960, metadata !1787), !dbg !5961
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !5962, metadata !1787), !dbg !5963
  store i32 %K, i32* %K.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %K.addr, metadata !5964, metadata !1787), !dbg !5965
  store i32 %spread, i32* %spread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spread.addr, metadata !5966, metadata !1787), !dbg !5967
  store i32 %blocks, i32* %blocks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blocks.addr, metadata !5968, metadata !1787), !dbg !5969
  store float %gain, float* %gain.addr, align 4
  call void @llvm.dbg.declare(metadata float* %gain.addr, metadata !5970, metadata !1787), !dbg !5971
  store %struct.CeltPVQ* %pvq, %struct.CeltPVQ** %pvq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltPVQ** %pvq.addr, metadata !5972, metadata !1787), !dbg !5973
  call void @llvm.dbg.declare(metadata i32** %y, metadata !5974, metadata !1787), !dbg !5975
  %0 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr, align 8, !dbg !5976
  %qcoeff = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %0, i32 0, i32 0, !dbg !5977
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %qcoeff, i32 0, i32 0, !dbg !5976
  store i32* %arraydecay, i32** %y, align 8, !dbg !5975
  %1 = load float*, float** %X.addr, align 8, !dbg !5978
  %2 = load i32, i32* %N.addr, align 4, !dbg !5979
  %3 = load i32, i32* %blocks.addr, align 4, !dbg !5980
  %4 = load i32, i32* %K.addr, align 4, !dbg !5981
  %5 = load i32, i32* %spread.addr, align 4, !dbg !5982
  call void @celt_exp_rotation(float* %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 1), !dbg !5983
  %6 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr, align 8, !dbg !5984
  %pvq_search = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %6, i32 0, i32 2, !dbg !5985
  %7 = load float (float*, i32*, i32, i32)*, float (float*, i32*, i32, i32)** %pvq_search, align 32, !dbg !5985
  %8 = load float*, float** %X.addr, align 8, !dbg !5986
  %9 = load i32*, i32** %y, align 8, !dbg !5987
  %10 = load i32, i32* %K.addr, align 4, !dbg !5988
  %11 = load i32, i32* %N.addr, align 4, !dbg !5989
  %call = call float %7(float* %8, i32* %9, i32 %10, i32 %11), !dbg !5984
  %call1 = call float @sqrtf(float %call) #7, !dbg !5990
  %12 = load float, float* %gain.addr, align 4, !dbg !5992
  %div = fdiv float %12, %call1, !dbg !5992
  store float %div, float* %gain.addr, align 4, !dbg !5992
  %13 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr, align 8, !dbg !5993
  %14 = load i32*, i32** %y, align 8, !dbg !5994
  %15 = load i32, i32* %N.addr, align 4, !dbg !5995
  %16 = load i32, i32* %K.addr, align 4, !dbg !5996
  call void @celt_encode_pulses(%struct.OpusRangeCoder* %13, i32* %14, i32 %15, i32 %16), !dbg !5997
  %17 = load i32*, i32** %y, align 8, !dbg !5998
  %18 = load float*, float** %X.addr, align 8, !dbg !5999
  %19 = load i32, i32* %N.addr, align 4, !dbg !6000
  %20 = load float, float* %gain.addr, align 4, !dbg !6001
  call void @celt_normalize_residual(i32* %17, float* %18, i32 %19, float %20), !dbg !6002
  %21 = load float*, float** %X.addr, align 8, !dbg !6003
  %22 = load i32, i32* %N.addr, align 4, !dbg !6004
  %23 = load i32, i32* %blocks.addr, align 4, !dbg !6005
  %24 = load i32, i32* %K.addr, align 4, !dbg !6006
  %25 = load i32, i32* %spread.addr, align 4, !dbg !6007
  call void @celt_exp_rotation(float* %21, i32 %22, i32 %23, i32 %24, i32 %25, i32 0), !dbg !6008
  %26 = load i32*, i32** %y, align 8, !dbg !6009
  %27 = load i32, i32* %N.addr, align 4, !dbg !6010
  %28 = load i32, i32* %blocks.addr, align 4, !dbg !6011
  %call2 = call i32 @celt_extract_collapse_mask(i32* %26, i32 %27, i32 %28), !dbg !6012
  ret i32 %call2, !dbg !6013
}

; Function Attrs: nounwind uwtable
define internal i32 @celt_alg_unquant(%struct.OpusRangeCoder* %rc, float* %X, i32 %N, i32 %K, i32 %spread, i32 %blocks, float %gain, %struct.CeltPVQ* %pvq) #3 !dbg !6014 {
entry:
  %rc.addr = alloca %struct.OpusRangeCoder*, align 8
  %X.addr = alloca float*, align 8
  %N.addr = alloca i32, align 4
  %K.addr = alloca i32, align 4
  %spread.addr = alloca i32, align 4
  %blocks.addr = alloca i32, align 4
  %gain.addr = alloca float, align 4
  %pvq.addr = alloca %struct.CeltPVQ*, align 8
  %y = alloca i32*, align 8
  store %struct.OpusRangeCoder* %rc, %struct.OpusRangeCoder** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OpusRangeCoder** %rc.addr, metadata !6015, metadata !1787), !dbg !6016
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !6017, metadata !1787), !dbg !6018
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !6019, metadata !1787), !dbg !6020
  store i32 %K, i32* %K.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %K.addr, metadata !6021, metadata !1787), !dbg !6022
  store i32 %spread, i32* %spread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spread.addr, metadata !6023, metadata !1787), !dbg !6024
  store i32 %blocks, i32* %blocks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blocks.addr, metadata !6025, metadata !1787), !dbg !6026
  store float %gain, float* %gain.addr, align 4
  call void @llvm.dbg.declare(metadata float* %gain.addr, metadata !6027, metadata !1787), !dbg !6028
  store %struct.CeltPVQ* %pvq, %struct.CeltPVQ** %pvq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CeltPVQ** %pvq.addr, metadata !6029, metadata !1787), !dbg !6030
  call void @llvm.dbg.declare(metadata i32** %y, metadata !6031, metadata !1787), !dbg !6032
  %0 = load %struct.CeltPVQ*, %struct.CeltPVQ** %pvq.addr, align 8, !dbg !6033
  %qcoeff = getelementptr inbounds %struct.CeltPVQ, %struct.CeltPVQ* %0, i32 0, i32 0, !dbg !6034
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %qcoeff, i32 0, i32 0, !dbg !6033
  store i32* %arraydecay, i32** %y, align 8, !dbg !6032
  %1 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr, align 8, !dbg !6035
  %2 = load i32*, i32** %y, align 8, !dbg !6036
  %3 = load i32, i32* %N.addr, align 4, !dbg !6037
  %4 = load i32, i32* %K.addr, align 4, !dbg !6038
  %call = call float @celt_decode_pulses(%struct.OpusRangeCoder* %1, i32* %2, i32 %3, i32 %4), !dbg !6039
  %call1 = call float @sqrtf(float %call) #7, !dbg !6040
  %5 = load float, float* %gain.addr, align 4, !dbg !6042
  %div = fdiv float %5, %call1, !dbg !6042
  store float %div, float* %gain.addr, align 4, !dbg !6042
  %6 = load i32*, i32** %y, align 8, !dbg !6043
  %7 = load float*, float** %X.addr, align 8, !dbg !6044
  %8 = load i32, i32* %N.addr, align 4, !dbg !6045
  %9 = load float, float* %gain.addr, align 4, !dbg !6046
  call void @celt_normalize_residual(i32* %6, float* %7, i32 %8, float %9), !dbg !6047
  %10 = load float*, float** %X.addr, align 8, !dbg !6048
  %11 = load i32, i32* %N.addr, align 4, !dbg !6049
  %12 = load i32, i32* %blocks.addr, align 4, !dbg !6050
  %13 = load i32, i32* %K.addr, align 4, !dbg !6051
  %14 = load i32, i32* %spread.addr, align 4, !dbg !6052
  call void @celt_exp_rotation(float* %10, i32 %11, i32 %12, i32 %13, i32 %14, i32 0), !dbg !6053
  %15 = load i32*, i32** %y, align 8, !dbg !6054
  %16 = load i32, i32* %N.addr, align 4, !dbg !6055
  %17 = load i32, i32* %blocks.addr, align 4, !dbg !6056
  %call2 = call i32 @celt_extract_collapse_mask(i32* %15, i32 %16, i32 %17), !dbg !6057
  ret i32 %call2, !dbg !6058
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #6

; Function Attrs: inlinehint nounwind uwtable
define internal void @celt_stereo_merge(float* %X, float* %Y, float %mid, i32 %N) #5 !dbg !6059 {
entry:
  %X.addr = alloca float*, align 8
  %Y.addr = alloca float*, align 8
  %mid.addr = alloca float, align 4
  %N.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %xp = alloca float, align 4
  %side = alloca float, align 4
  %E = alloca [2 x float], align 4
  %mid2 = alloca float, align 4
  %gain = alloca [2 x float], align 4
  %value = alloca [2 x float], align 4
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !6062, metadata !1787), !dbg !6063
  store float* %Y, float** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata float** %Y.addr, metadata !6064, metadata !1787), !dbg !6065
  store float %mid, float* %mid.addr, align 4
  call void @llvm.dbg.declare(metadata float* %mid.addr, metadata !6066, metadata !1787), !dbg !6067
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !6068, metadata !1787), !dbg !6069
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6070, metadata !1787), !dbg !6071
  call void @llvm.dbg.declare(metadata float* %xp, metadata !6072, metadata !1787), !dbg !6073
  store float 0.000000e+00, float* %xp, align 4, !dbg !6073
  call void @llvm.dbg.declare(metadata float* %side, metadata !6074, metadata !1787), !dbg !6075
  store float 0.000000e+00, float* %side, align 4, !dbg !6075
  call void @llvm.dbg.declare(metadata [2 x float]* %E, metadata !6076, metadata !1787), !dbg !6077
  call void @llvm.dbg.declare(metadata float* %mid2, metadata !6078, metadata !1787), !dbg !6079
  call void @llvm.dbg.declare(metadata [2 x float]* %gain, metadata !6080, metadata !1787), !dbg !6081
  store i32 0, i32* %i, align 4, !dbg !6082
  br label %for.cond, !dbg !6084

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6085
  %1 = load i32, i32* %N.addr, align 4, !dbg !6088
  %cmp = icmp slt i32 %0, %1, !dbg !6089
  br i1 %cmp, label %for.body, label %for.end, !dbg !6090

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !6091
  %idxprom = sext i32 %2 to i64, !dbg !6093
  %3 = load float*, float** %X.addr, align 8, !dbg !6093
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom, !dbg !6093
  %4 = load float, float* %arrayidx, align 4, !dbg !6093
  %5 = load i32, i32* %i, align 4, !dbg !6094
  %idxprom1 = sext i32 %5 to i64, !dbg !6095
  %6 = load float*, float** %Y.addr, align 8, !dbg !6095
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 %idxprom1, !dbg !6095
  %7 = load float, float* %arrayidx2, align 4, !dbg !6095
  %mul = fmul float %4, %7, !dbg !6096
  %8 = load float, float* %xp, align 4, !dbg !6097
  %add = fadd float %8, %mul, !dbg !6097
  store float %add, float* %xp, align 4, !dbg !6097
  %9 = load i32, i32* %i, align 4, !dbg !6098
  %idxprom3 = sext i32 %9 to i64, !dbg !6099
  %10 = load float*, float** %Y.addr, align 8, !dbg !6099
  %arrayidx4 = getelementptr inbounds float, float* %10, i64 %idxprom3, !dbg !6099
  %11 = load float, float* %arrayidx4, align 4, !dbg !6099
  %12 = load i32, i32* %i, align 4, !dbg !6100
  %idxprom5 = sext i32 %12 to i64, !dbg !6101
  %13 = load float*, float** %Y.addr, align 8, !dbg !6101
  %arrayidx6 = getelementptr inbounds float, float* %13, i64 %idxprom5, !dbg !6101
  %14 = load float, float* %arrayidx6, align 4, !dbg !6101
  %mul7 = fmul float %11, %14, !dbg !6102
  %15 = load float, float* %side, align 4, !dbg !6103
  %add8 = fadd float %15, %mul7, !dbg !6103
  store float %add8, float* %side, align 4, !dbg !6103
  br label %for.inc, !dbg !6104

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !6105
  %inc = add nsw i32 %16, 1, !dbg !6105
  store i32 %inc, i32* %i, align 4, !dbg !6105
  br label %for.cond, !dbg !6107, !llvm.loop !6108

for.end:                                          ; preds = %for.cond
  %17 = load float, float* %mid.addr, align 4, !dbg !6110
  %18 = load float, float* %xp, align 4, !dbg !6111
  %mul9 = fmul float %18, %17, !dbg !6111
  store float %mul9, float* %xp, align 4, !dbg !6111
  %19 = load float, float* %mid.addr, align 4, !dbg !6112
  store float %19, float* %mid2, align 4, !dbg !6113
  %20 = load float, float* %mid2, align 4, !dbg !6114
  %21 = load float, float* %mid2, align 4, !dbg !6115
  %mul10 = fmul float %20, %21, !dbg !6116
  %22 = load float, float* %side, align 4, !dbg !6117
  %add11 = fadd float %mul10, %22, !dbg !6118
  %23 = load float, float* %xp, align 4, !dbg !6119
  %mul12 = fmul float 2.000000e+00, %23, !dbg !6120
  %sub = fsub float %add11, %mul12, !dbg !6121
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* %E, i64 0, i64 0, !dbg !6122
  store float %sub, float* %arrayidx13, align 4, !dbg !6123
  %24 = load float, float* %mid2, align 4, !dbg !6124
  %25 = load float, float* %mid2, align 4, !dbg !6125
  %mul14 = fmul float %24, %25, !dbg !6126
  %26 = load float, float* %side, align 4, !dbg !6127
  %add15 = fadd float %mul14, %26, !dbg !6128
  %27 = load float, float* %xp, align 4, !dbg !6129
  %mul16 = fmul float 2.000000e+00, %27, !dbg !6130
  %add17 = fadd float %add15, %mul16, !dbg !6131
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %E, i64 0, i64 1, !dbg !6132
  store float %add17, float* %arrayidx18, align 4, !dbg !6133
  %arrayidx19 = getelementptr inbounds [2 x float], [2 x float]* %E, i64 0, i64 0, !dbg !6134
  %28 = load float, float* %arrayidx19, align 4, !dbg !6134
  %cmp20 = fcmp olt float %28, 0x3F43A92A40000000, !dbg !6136
  br i1 %cmp20, label %if.then, label %lor.lhs.false, !dbg !6137

lor.lhs.false:                                    ; preds = %for.end
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %E, i64 0, i64 1, !dbg !6138
  %29 = load float, float* %arrayidx21, align 4, !dbg !6138
  %cmp22 = fcmp olt float %29, 0x3F43A92A40000000, !dbg !6140
  br i1 %cmp22, label %if.then, label %if.end, !dbg !6141

if.then:                                          ; preds = %lor.lhs.false, %for.end
  store i32 0, i32* %i, align 4, !dbg !6142
  br label %for.cond23, !dbg !6145

for.cond23:                                       ; preds = %for.inc30, %if.then
  %30 = load i32, i32* %i, align 4, !dbg !6146
  %31 = load i32, i32* %N.addr, align 4, !dbg !6149
  %cmp24 = icmp slt i32 %30, %31, !dbg !6150
  br i1 %cmp24, label %for.body25, label %for.end32, !dbg !6151

for.body25:                                       ; preds = %for.cond23
  %32 = load i32, i32* %i, align 4, !dbg !6152
  %idxprom26 = sext i32 %32 to i64, !dbg !6153
  %33 = load float*, float** %X.addr, align 8, !dbg !6153
  %arrayidx27 = getelementptr inbounds float, float* %33, i64 %idxprom26, !dbg !6153
  %34 = load float, float* %arrayidx27, align 4, !dbg !6153
  %35 = load i32, i32* %i, align 4, !dbg !6154
  %idxprom28 = sext i32 %35 to i64, !dbg !6155
  %36 = load float*, float** %Y.addr, align 8, !dbg !6155
  %arrayidx29 = getelementptr inbounds float, float* %36, i64 %idxprom28, !dbg !6155
  store float %34, float* %arrayidx29, align 4, !dbg !6156
  br label %for.inc30, !dbg !6155

for.inc30:                                        ; preds = %for.body25
  %37 = load i32, i32* %i, align 4, !dbg !6157
  %inc31 = add nsw i32 %37, 1, !dbg !6157
  store i32 %inc31, i32* %i, align 4, !dbg !6157
  br label %for.cond23, !dbg !6159, !llvm.loop !6160

for.end32:                                        ; preds = %for.cond23
  br label %for.end65, !dbg !6162

if.end:                                           ; preds = %lor.lhs.false
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %E, i64 0, i64 0, !dbg !6163
  %38 = load float, float* %arrayidx33, align 4, !dbg !6163
  %call = call float @sqrtf(float %38) #7, !dbg !6164
  %div = fdiv float 1.000000e+00, %call, !dbg !6165
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %gain, i64 0, i64 0, !dbg !6166
  store float %div, float* %arrayidx34, align 4, !dbg !6167
  %arrayidx35 = getelementptr inbounds [2 x float], [2 x float]* %E, i64 0, i64 1, !dbg !6168
  %39 = load float, float* %arrayidx35, align 4, !dbg !6168
  %call36 = call float @sqrtf(float %39) #7, !dbg !6169
  %div37 = fdiv float 1.000000e+00, %call36, !dbg !6170
  %arrayidx38 = getelementptr inbounds [2 x float], [2 x float]* %gain, i64 0, i64 1, !dbg !6171
  store float %div37, float* %arrayidx38, align 4, !dbg !6172
  store i32 0, i32* %i, align 4, !dbg !6173
  br label %for.cond39, !dbg !6175

for.cond39:                                       ; preds = %for.inc63, %if.end
  %40 = load i32, i32* %i, align 4, !dbg !6176
  %41 = load i32, i32* %N.addr, align 4, !dbg !6179
  %cmp40 = icmp slt i32 %40, %41, !dbg !6180
  br i1 %cmp40, label %for.body41, label %for.end65, !dbg !6181

for.body41:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata [2 x float]* %value, metadata !6182, metadata !1787), !dbg !6184
  %42 = load float, float* %mid.addr, align 4, !dbg !6185
  %43 = load i32, i32* %i, align 4, !dbg !6186
  %idxprom42 = sext i32 %43 to i64, !dbg !6187
  %44 = load float*, float** %X.addr, align 8, !dbg !6187
  %arrayidx43 = getelementptr inbounds float, float* %44, i64 %idxprom42, !dbg !6187
  %45 = load float, float* %arrayidx43, align 4, !dbg !6187
  %mul44 = fmul float %42, %45, !dbg !6188
  %arrayidx45 = getelementptr inbounds [2 x float], [2 x float]* %value, i64 0, i64 0, !dbg !6189
  store float %mul44, float* %arrayidx45, align 4, !dbg !6190
  %46 = load i32, i32* %i, align 4, !dbg !6191
  %idxprom46 = sext i32 %46 to i64, !dbg !6192
  %47 = load float*, float** %Y.addr, align 8, !dbg !6192
  %arrayidx47 = getelementptr inbounds float, float* %47, i64 %idxprom46, !dbg !6192
  %48 = load float, float* %arrayidx47, align 4, !dbg !6192
  %arrayidx48 = getelementptr inbounds [2 x float], [2 x float]* %value, i64 0, i64 1, !dbg !6193
  store float %48, float* %arrayidx48, align 4, !dbg !6194
  %arrayidx49 = getelementptr inbounds [2 x float], [2 x float]* %gain, i64 0, i64 0, !dbg !6195
  %49 = load float, float* %arrayidx49, align 4, !dbg !6195
  %arrayidx50 = getelementptr inbounds [2 x float], [2 x float]* %value, i64 0, i64 0, !dbg !6196
  %50 = load float, float* %arrayidx50, align 4, !dbg !6196
  %arrayidx51 = getelementptr inbounds [2 x float], [2 x float]* %value, i64 0, i64 1, !dbg !6197
  %51 = load float, float* %arrayidx51, align 4, !dbg !6197
  %sub52 = fsub float %50, %51, !dbg !6198
  %mul53 = fmul float %49, %sub52, !dbg !6199
  %52 = load i32, i32* %i, align 4, !dbg !6200
  %idxprom54 = sext i32 %52 to i64, !dbg !6201
  %53 = load float*, float** %X.addr, align 8, !dbg !6201
  %arrayidx55 = getelementptr inbounds float, float* %53, i64 %idxprom54, !dbg !6201
  store float %mul53, float* %arrayidx55, align 4, !dbg !6202
  %arrayidx56 = getelementptr inbounds [2 x float], [2 x float]* %gain, i64 0, i64 1, !dbg !6203
  %54 = load float, float* %arrayidx56, align 4, !dbg !6203
  %arrayidx57 = getelementptr inbounds [2 x float], [2 x float]* %value, i64 0, i64 0, !dbg !6204
  %55 = load float, float* %arrayidx57, align 4, !dbg !6204
  %arrayidx58 = getelementptr inbounds [2 x float], [2 x float]* %value, i64 0, i64 1, !dbg !6205
  %56 = load float, float* %arrayidx58, align 4, !dbg !6205
  %add59 = fadd float %55, %56, !dbg !6206
  %mul60 = fmul float %54, %add59, !dbg !6207
  %57 = load i32, i32* %i, align 4, !dbg !6208
  %idxprom61 = sext i32 %57 to i64, !dbg !6209
  %58 = load float*, float** %Y.addr, align 8, !dbg !6209
  %arrayidx62 = getelementptr inbounds float, float* %58, i64 %idxprom61, !dbg !6209
  store float %mul60, float* %arrayidx62, align 4, !dbg !6210
  br label %for.inc63, !dbg !6211

for.inc63:                                        ; preds = %for.body41
  %59 = load i32, i32* %i, align 4, !dbg !6212
  %inc64 = add nsw i32 %59, 1, !dbg !6212
  store i32 %inc64, i32* %i, align 4, !dbg !6212
  br label %for.cond39, !dbg !6214, !llvm.loop !6215

for.end65:                                        ; preds = %for.end32, %for.cond39
  ret void, !dbg !6217
}

; Function Attrs: nounwind uwtable
define internal void @celt_interleave_hadamard(float* %tmp, float* %X, i32 %N0, i32 %stride, i32 %hadamard) #3 !dbg !6218 {
entry:
  %tmp.addr = alloca float*, align 8
  %X.addr = alloca float*, align 8
  %N0.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %hadamard.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %N = alloca i32, align 4
  %order = alloca i8*, align 8
  store float* %tmp, float** %tmp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tmp.addr, metadata !6219, metadata !1787), !dbg !6220
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !6221, metadata !1787), !dbg !6222
  store i32 %N0, i32* %N0.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N0.addr, metadata !6223, metadata !1787), !dbg !6224
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !6225, metadata !1787), !dbg !6226
  store i32 %hadamard, i32* %hadamard.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hadamard.addr, metadata !6227, metadata !1787), !dbg !6228
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6229, metadata !1787), !dbg !6230
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6231, metadata !1787), !dbg !6232
  call void @llvm.dbg.declare(metadata i32* %N, metadata !6233, metadata !1787), !dbg !6234
  %0 = load i32, i32* %N0.addr, align 4, !dbg !6235
  %1 = load i32, i32* %stride.addr, align 4, !dbg !6236
  %mul = mul nsw i32 %0, %1, !dbg !6237
  store i32 %mul, i32* %N, align 4, !dbg !6234
  call void @llvm.dbg.declare(metadata i8** %order, metadata !6238, metadata !1787), !dbg !6239
  %2 = load i32, i32* %hadamard.addr, align 4, !dbg !6240
  %tobool = icmp ne i32 %2, 0, !dbg !6240
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6240

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %stride.addr, align 4, !dbg !6241
  %sub = sub nsw i32 %3, 2, !dbg !6243
  br label %cond.end, !dbg !6244

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6245

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ 30, %cond.false ], !dbg !6247
  %idxprom = sext i32 %cond to i64, !dbg !6249
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @ff_celt_hadamard_order, i64 0, i64 %idxprom, !dbg !6249
  store i8* %arrayidx, i8** %order, align 8, !dbg !6250
  store i32 0, i32* %i, align 4, !dbg !6251
  br label %for.cond, !dbg !6253

for.cond:                                         ; preds = %for.inc17, %cond.end
  %4 = load i32, i32* %i, align 4, !dbg !6254
  %5 = load i32, i32* %stride.addr, align 4, !dbg !6257
  %cmp = icmp slt i32 %4, %5, !dbg !6258
  br i1 %cmp, label %for.body, label %for.end19, !dbg !6259

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6260
  br label %for.cond5, !dbg !6262

for.cond5:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %j, align 4, !dbg !6263
  %7 = load i32, i32* %N0.addr, align 4, !dbg !6266
  %cmp6 = icmp slt i32 %6, %7, !dbg !6267
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !6268

for.body7:                                        ; preds = %for.cond5
  %8 = load i32, i32* %i, align 4, !dbg !6269
  %idxprom8 = sext i32 %8 to i64, !dbg !6270
  %9 = load i8*, i8** %order, align 8, !dbg !6270
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 %idxprom8, !dbg !6270
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !6270
  %conv = zext i8 %10 to i32, !dbg !6270
  %11 = load i32, i32* %N0.addr, align 4, !dbg !6271
  %mul10 = mul nsw i32 %conv, %11, !dbg !6272
  %12 = load i32, i32* %j, align 4, !dbg !6273
  %add = add nsw i32 %mul10, %12, !dbg !6274
  %idxprom11 = sext i32 %add to i64, !dbg !6275
  %13 = load float*, float** %X.addr, align 8, !dbg !6275
  %arrayidx12 = getelementptr inbounds float, float* %13, i64 %idxprom11, !dbg !6275
  %14 = load float, float* %arrayidx12, align 4, !dbg !6275
  %15 = load i32, i32* %j, align 4, !dbg !6276
  %16 = load i32, i32* %stride.addr, align 4, !dbg !6277
  %mul13 = mul nsw i32 %15, %16, !dbg !6278
  %17 = load i32, i32* %i, align 4, !dbg !6279
  %add14 = add nsw i32 %mul13, %17, !dbg !6280
  %idxprom15 = sext i32 %add14 to i64, !dbg !6281
  %18 = load float*, float** %tmp.addr, align 8, !dbg !6281
  %arrayidx16 = getelementptr inbounds float, float* %18, i64 %idxprom15, !dbg !6281
  store float %14, float* %arrayidx16, align 4, !dbg !6282
  br label %for.inc, !dbg !6281

for.inc:                                          ; preds = %for.body7
  %19 = load i32, i32* %j, align 4, !dbg !6283
  %inc = add nsw i32 %19, 1, !dbg !6283
  store i32 %inc, i32* %j, align 4, !dbg !6283
  br label %for.cond5, !dbg !6285, !llvm.loop !6286

for.end:                                          ; preds = %for.cond5
  br label %for.inc17, !dbg !6288

for.inc17:                                        ; preds = %for.end
  %20 = load i32, i32* %i, align 4, !dbg !6290
  %inc18 = add nsw i32 %20, 1, !dbg !6290
  store i32 %inc18, i32* %i, align 4, !dbg !6290
  br label %for.cond, !dbg !6292, !llvm.loop !6293

for.end19:                                        ; preds = %for.cond
  %21 = load float*, float** %X.addr, align 8, !dbg !6295
  %22 = bitcast float* %21 to i8*, !dbg !6296
  %23 = load float*, float** %tmp.addr, align 8, !dbg !6297
  %24 = bitcast float* %23 to i8*, !dbg !6296
  %25 = load i32, i32* %N, align 4, !dbg !6298
  %conv20 = sext i32 %25 to i64, !dbg !6298
  %mul21 = mul i64 %conv20, 4, !dbg !6299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %24, i64 %mul21, i32 4, i1 false), !dbg !6296
  ret void, !dbg !6300
}

; Function Attrs: nounwind
declare float @sqrtf(float) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: nounwind
declare float @atan2f(float, float) #4

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: inlinehint nounwind uwtable
define internal void @celt_exp_rotation(float* %X, i32 %len, i32 %stride, i32 %K, i32 %spread, i32 %encode) #5 !dbg !6301 {
entry:
  %X.addr = alloca float*, align 8
  %len.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %K.addr = alloca i32, align 4
  %spread.addr = alloca i32, align 4
  %encode.addr = alloca i32, align 4
  %stride2 = alloca i32, align 4
  %c = alloca float, align 4
  %s = alloca float, align 4
  %gain = alloca float, align 4
  %theta = alloca float, align 4
  %i = alloca i32, align 4
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !6304, metadata !1787), !dbg !6305
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !6306, metadata !1787), !dbg !6307
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !6308, metadata !1787), !dbg !6309
  store i32 %K, i32* %K.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %K.addr, metadata !6310, metadata !1787), !dbg !6311
  store i32 %spread, i32* %spread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %spread.addr, metadata !6312, metadata !1787), !dbg !6313
  store i32 %encode, i32* %encode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %encode.addr, metadata !6314, metadata !1787), !dbg !6315
  call void @llvm.dbg.declare(metadata i32* %stride2, metadata !6316, metadata !1787), !dbg !6317
  store i32 0, i32* %stride2, align 4, !dbg !6317
  call void @llvm.dbg.declare(metadata float* %c, metadata !6318, metadata !1787), !dbg !6319
  call void @llvm.dbg.declare(metadata float* %s, metadata !6320, metadata !1787), !dbg !6321
  call void @llvm.dbg.declare(metadata float* %gain, metadata !6322, metadata !1787), !dbg !6323
  call void @llvm.dbg.declare(metadata float* %theta, metadata !6324, metadata !1787), !dbg !6325
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6326, metadata !1787), !dbg !6327
  %0 = load i32, i32* %K.addr, align 4, !dbg !6328
  %mul = mul i32 2, %0, !dbg !6330
  %1 = load i32, i32* %len.addr, align 4, !dbg !6331
  %cmp = icmp uge i32 %mul, %1, !dbg !6332
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6333

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %spread.addr, align 4, !dbg !6334
  %cmp1 = icmp eq i32 %2, 0, !dbg !6336
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6337

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end, !dbg !6338

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %len.addr, align 4, !dbg !6339
  %conv = uitofp i32 %3 to float, !dbg !6340
  %4 = load i32, i32* %len.addr, align 4, !dbg !6341
  %5 = load i32, i32* %spread.addr, align 4, !dbg !6342
  %mul2 = mul i32 5, %5, !dbg !6343
  %sub = sub i32 20, %mul2, !dbg !6344
  %6 = load i32, i32* %K.addr, align 4, !dbg !6345
  %mul3 = mul i32 %sub, %6, !dbg !6346
  %add = add i32 %4, %mul3, !dbg !6347
  %conv4 = uitofp i32 %add to float, !dbg !6348
  %div = fdiv float %conv, %conv4, !dbg !6349
  store float %div, float* %gain, align 4, !dbg !6350
  %7 = load float, float* %gain, align 4, !dbg !6351
  %conv5 = fpext float %7 to double, !dbg !6351
  %mul6 = fmul double 0x400921FB54442D18, %conv5, !dbg !6352
  %8 = load float, float* %gain, align 4, !dbg !6353
  %conv7 = fpext float %8 to double, !dbg !6353
  %mul8 = fmul double %mul6, %conv7, !dbg !6354
  %div9 = fdiv double %mul8, 4.000000e+00, !dbg !6355
  %conv10 = fptrunc double %div9 to float, !dbg !6356
  store float %conv10, float* %theta, align 4, !dbg !6357
  %9 = load float, float* %theta, align 4, !dbg !6358
  %call = call float @cosf(float %9) #7, !dbg !6359
  store float %call, float* %c, align 4, !dbg !6360
  %10 = load float, float* %theta, align 4, !dbg !6361
  %call11 = call float @sinf(float %10) #7, !dbg !6362
  store float %call11, float* %s, align 4, !dbg !6363
  %11 = load i32, i32* %len.addr, align 4, !dbg !6364
  %12 = load i32, i32* %stride.addr, align 4, !dbg !6366
  %shl = shl i32 %12, 3, !dbg !6367
  %cmp12 = icmp uge i32 %11, %shl, !dbg !6368
  br i1 %cmp12, label %if.then14, label %if.end21, !dbg !6369

if.then14:                                        ; preds = %if.end
  store i32 1, i32* %stride2, align 4, !dbg !6370
  br label %while.cond, !dbg !6372

while.cond:                                       ; preds = %while.body, %if.then14
  %13 = load i32, i32* %stride2, align 4, !dbg !6373
  %14 = load i32, i32* %stride2, align 4, !dbg !6375
  %mul15 = mul i32 %13, %14, !dbg !6376
  %15 = load i32, i32* %stride2, align 4, !dbg !6377
  %add16 = add i32 %mul15, %15, !dbg !6378
  %16 = load i32, i32* %stride.addr, align 4, !dbg !6379
  %mul17 = mul i32 %add16, %16, !dbg !6380
  %17 = load i32, i32* %stride.addr, align 4, !dbg !6381
  %shr = lshr i32 %17, 2, !dbg !6382
  %add18 = add i32 %mul17, %shr, !dbg !6383
  %18 = load i32, i32* %len.addr, align 4, !dbg !6384
  %cmp19 = icmp ult i32 %add18, %18, !dbg !6385
  br i1 %cmp19, label %while.body, label %while.end, !dbg !6386

while.body:                                       ; preds = %while.cond
  %19 = load i32, i32* %stride2, align 4, !dbg !6387
  %inc = add i32 %19, 1, !dbg !6387
  store i32 %inc, i32* %stride2, align 4, !dbg !6387
  br label %while.cond, !dbg !6388, !llvm.loop !6390

while.end:                                        ; preds = %while.cond
  br label %if.end21, !dbg !6391

if.end21:                                         ; preds = %while.end, %if.end
  %20 = load i32, i32* %stride.addr, align 4, !dbg !6392
  %21 = load i32, i32* %len.addr, align 4, !dbg !6393
  %div22 = udiv i32 %21, %20, !dbg !6393
  store i32 %div22, i32* %len.addr, align 4, !dbg !6393
  store i32 0, i32* %i, align 4, !dbg !6394
  br label %for.cond, !dbg !6396

for.cond:                                         ; preds = %for.inc, %if.end21
  %22 = load i32, i32* %i, align 4, !dbg !6397
  %23 = load i32, i32* %stride.addr, align 4, !dbg !6400
  %cmp23 = icmp ult i32 %22, %23, !dbg !6401
  br i1 %cmp23, label %for.body, label %for.end, !dbg !6402

for.body:                                         ; preds = %for.cond
  %24 = load i32, i32* %encode.addr, align 4, !dbg !6403
  %tobool = icmp ne i32 %24, 0, !dbg !6403
  br i1 %tobool, label %if.then25, label %if.else, !dbg !6406

if.then25:                                        ; preds = %for.body
  %25 = load float*, float** %X.addr, align 8, !dbg !6407
  %26 = load i32, i32* %i, align 4, !dbg !6409
  %27 = load i32, i32* %len.addr, align 4, !dbg !6410
  %mul26 = mul i32 %26, %27, !dbg !6411
  %idx.ext = zext i32 %mul26 to i64, !dbg !6412
  %add.ptr = getelementptr inbounds float, float* %25, i64 %idx.ext, !dbg !6412
  %28 = load i32, i32* %len.addr, align 4, !dbg !6413
  %29 = load float, float* %c, align 4, !dbg !6414
  %30 = load float, float* %s, align 4, !dbg !6415
  %sub27 = fsub float -0.000000e+00, %30, !dbg !6416
  call void @celt_exp_rotation_impl(float* %add.ptr, i32 %28, i32 1, float %29, float %sub27), !dbg !6417
  %31 = load i32, i32* %stride2, align 4, !dbg !6418
  %tobool28 = icmp ne i32 %31, 0, !dbg !6418
  br i1 %tobool28, label %if.then29, label %if.end34, !dbg !6420

if.then29:                                        ; preds = %if.then25
  %32 = load float*, float** %X.addr, align 8, !dbg !6421
  %33 = load i32, i32* %i, align 4, !dbg !6422
  %34 = load i32, i32* %len.addr, align 4, !dbg !6423
  %mul30 = mul i32 %33, %34, !dbg !6424
  %idx.ext31 = zext i32 %mul30 to i64, !dbg !6425
  %add.ptr32 = getelementptr inbounds float, float* %32, i64 %idx.ext31, !dbg !6425
  %35 = load i32, i32* %len.addr, align 4, !dbg !6426
  %36 = load i32, i32* %stride2, align 4, !dbg !6427
  %37 = load float, float* %s, align 4, !dbg !6428
  %38 = load float, float* %c, align 4, !dbg !6429
  %sub33 = fsub float -0.000000e+00, %38, !dbg !6430
  call void @celt_exp_rotation_impl(float* %add.ptr32, i32 %35, i32 %36, float %37, float %sub33), !dbg !6431
  br label %if.end34, !dbg !6431

if.end34:                                         ; preds = %if.then29, %if.then25
  br label %if.end44, !dbg !6432

if.else:                                          ; preds = %for.body
  %39 = load i32, i32* %stride2, align 4, !dbg !6433
  %tobool35 = icmp ne i32 %39, 0, !dbg !6433
  br i1 %tobool35, label %if.then36, label %if.end40, !dbg !6436

if.then36:                                        ; preds = %if.else
  %40 = load float*, float** %X.addr, align 8, !dbg !6437
  %41 = load i32, i32* %i, align 4, !dbg !6438
  %42 = load i32, i32* %len.addr, align 4, !dbg !6439
  %mul37 = mul i32 %41, %42, !dbg !6440
  %idx.ext38 = zext i32 %mul37 to i64, !dbg !6441
  %add.ptr39 = getelementptr inbounds float, float* %40, i64 %idx.ext38, !dbg !6441
  %43 = load i32, i32* %len.addr, align 4, !dbg !6442
  %44 = load i32, i32* %stride2, align 4, !dbg !6443
  %45 = load float, float* %s, align 4, !dbg !6444
  %46 = load float, float* %c, align 4, !dbg !6445
  call void @celt_exp_rotation_impl(float* %add.ptr39, i32 %43, i32 %44, float %45, float %46), !dbg !6446
  br label %if.end40, !dbg !6446

if.end40:                                         ; preds = %if.then36, %if.else
  %47 = load float*, float** %X.addr, align 8, !dbg !6447
  %48 = load i32, i32* %i, align 4, !dbg !6448
  %49 = load i32, i32* %len.addr, align 4, !dbg !6449
  %mul41 = mul i32 %48, %49, !dbg !6450
  %idx.ext42 = zext i32 %mul41 to i64, !dbg !6451
  %add.ptr43 = getelementptr inbounds float, float* %47, i64 %idx.ext42, !dbg !6451
  %50 = load i32, i32* %len.addr, align 4, !dbg !6452
  %51 = load float, float* %c, align 4, !dbg !6453
  %52 = load float, float* %s, align 4, !dbg !6454
  call void @celt_exp_rotation_impl(float* %add.ptr43, i32 %50, i32 1, float %51, float %52), !dbg !6455
  br label %if.end44

if.end44:                                         ; preds = %if.end40, %if.end34
  br label %for.inc, !dbg !6456

for.inc:                                          ; preds = %if.end44
  %53 = load i32, i32* %i, align 4, !dbg !6457
  %inc45 = add nsw i32 %53, 1, !dbg !6457
  store i32 %inc45, i32* %i, align 4, !dbg !6457
  br label %for.cond, !dbg !6459, !llvm.loop !6460

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !6462
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @celt_encode_pulses(%struct.OpusRangeCoder* %rc, i32* %y, i32 %N, i32 %K) #5 !dbg !6463 {
entry:
  %rc.addr = alloca %struct.OpusRangeCoder*, align 8
  %y.addr = alloca i32*, align 8
  %N.addr = alloca i32, align 4
  %K.addr = alloca i32, align 4
  store %struct.OpusRangeCoder* %rc, %struct.OpusRangeCoder** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OpusRangeCoder** %rc.addr, metadata !6466, metadata !1787), !dbg !6467
  store i32* %y, i32** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !6468, metadata !1787), !dbg !6469
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !6470, metadata !1787), !dbg !6471
  store i32 %K, i32* %K.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %K.addr, metadata !6472, metadata !1787), !dbg !6473
  %0 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr, align 8, !dbg !6474
  %1 = load i32, i32* %N.addr, align 4, !dbg !6475
  %2 = load i32, i32* %K.addr, align 4, !dbg !6476
  %3 = load i32*, i32** %y.addr, align 8, !dbg !6477
  %call = call i32 @celt_icwrsi(i32 %1, i32 %2, i32* %3), !dbg !6478
  %4 = load i32, i32* %N.addr, align 4, !dbg !6479
  %5 = load i32, i32* %K.addr, align 4, !dbg !6480
  %cmp = icmp ugt i32 %4, %5, !dbg !6481
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6482

cond.true:                                        ; preds = %entry
  %6 = load i32, i32* %N.addr, align 4, !dbg !6483
  br label %cond.end, !dbg !6485

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %K.addr, align 4, !dbg !6486
  br label %cond.end, !dbg !6488

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !6489
  %idxprom = zext i32 %cond to i64, !dbg !6491
  %8 = load i32, i32* %N.addr, align 4, !dbg !6492
  %9 = load i32, i32* %K.addr, align 4, !dbg !6493
  %cmp1 = icmp ugt i32 %8, %9, !dbg !6494
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !6495

cond.true2:                                       ; preds = %cond.end
  %10 = load i32, i32* %K.addr, align 4, !dbg !6496
  br label %cond.end4, !dbg !6498

cond.false3:                                      ; preds = %cond.end
  %11 = load i32, i32* %N.addr, align 4, !dbg !6499
  br label %cond.end4, !dbg !6501

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ %10, %cond.true2 ], [ %11, %cond.false3 ], !dbg !6502
  %idxprom6 = zext i32 %cond5 to i64, !dbg !6504
  %arrayidx = getelementptr inbounds [15 x i32*], [15 x i32*]* @ff_celt_pvq_u_row, i64 0, i64 %idxprom6, !dbg !6504
  %12 = load i32*, i32** %arrayidx, align 8, !dbg !6504
  %arrayidx7 = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !6504
  %13 = load i32, i32* %arrayidx7, align 4, !dbg !6504
  %14 = load i32, i32* %N.addr, align 4, !dbg !6505
  %15 = load i32, i32* %K.addr, align 4, !dbg !6506
  %add = add i32 %15, 1, !dbg !6507
  %cmp8 = icmp ugt i32 %14, %add, !dbg !6508
  br i1 %cmp8, label %cond.true9, label %cond.false10, !dbg !6509

cond.true9:                                       ; preds = %cond.end4
  %16 = load i32, i32* %N.addr, align 4, !dbg !6510
  br label %cond.end12, !dbg !6512

cond.false10:                                     ; preds = %cond.end4
  %17 = load i32, i32* %K.addr, align 4, !dbg !6513
  %add11 = add i32 %17, 1, !dbg !6515
  br label %cond.end12, !dbg !6516

cond.end12:                                       ; preds = %cond.false10, %cond.true9
  %cond13 = phi i32 [ %16, %cond.true9 ], [ %add11, %cond.false10 ], !dbg !6517
  %idxprom14 = zext i32 %cond13 to i64, !dbg !6519
  %18 = load i32, i32* %N.addr, align 4, !dbg !6520
  %19 = load i32, i32* %K.addr, align 4, !dbg !6521
  %add15 = add i32 %19, 1, !dbg !6522
  %cmp16 = icmp ugt i32 %18, %add15, !dbg !6523
  br i1 %cmp16, label %cond.true17, label %cond.false19, !dbg !6524

cond.true17:                                      ; preds = %cond.end12
  %20 = load i32, i32* %K.addr, align 4, !dbg !6525
  %add18 = add i32 %20, 1, !dbg !6527
  br label %cond.end20, !dbg !6528

cond.false19:                                     ; preds = %cond.end12
  %21 = load i32, i32* %N.addr, align 4, !dbg !6529
  br label %cond.end20, !dbg !6531

cond.end20:                                       ; preds = %cond.false19, %cond.true17
  %cond21 = phi i32 [ %add18, %cond.true17 ], [ %21, %cond.false19 ], !dbg !6532
  %idxprom22 = zext i32 %cond21 to i64, !dbg !6534
  %arrayidx23 = getelementptr inbounds [15 x i32*], [15 x i32*]* @ff_celt_pvq_u_row, i64 0, i64 %idxprom22, !dbg !6534
  %22 = load i32*, i32** %arrayidx23, align 8, !dbg !6534
  %arrayidx24 = getelementptr inbounds i32, i32* %22, i64 %idxprom14, !dbg !6534
  %23 = load i32, i32* %arrayidx24, align 4, !dbg !6534
  %add25 = add i32 %13, %23, !dbg !6535
  call void @ff_opus_rc_enc_uint(%struct.OpusRangeCoder* %0, i32 %call, i32 %add25), !dbg !6536
  ret void, !dbg !6537
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @celt_normalize_residual(i32* noalias %iy, float* noalias %X, i32 %N, float %g) #5 !dbg !6538 {
entry:
  %iy.addr = alloca i32*, align 8
  %X.addr = alloca float*, align 8
  %N.addr = alloca i32, align 4
  %g.addr = alloca float, align 4
  %i = alloca i32, align 4
  store i32* %iy, i32** %iy.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %iy.addr, metadata !6542, metadata !1787), !dbg !6543
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !6544, metadata !1787), !dbg !6545
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !6546, metadata !1787), !dbg !6547
  store float %g, float* %g.addr, align 4
  call void @llvm.dbg.declare(metadata float* %g.addr, metadata !6548, metadata !1787), !dbg !6549
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6550, metadata !1787), !dbg !6551
  store i32 0, i32* %i, align 4, !dbg !6552
  br label %for.cond, !dbg !6554

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6555
  %1 = load i32, i32* %N.addr, align 4, !dbg !6558
  %cmp = icmp slt i32 %0, %1, !dbg !6559
  br i1 %cmp, label %for.body, label %for.end, !dbg !6560

for.body:                                         ; preds = %for.cond
  %2 = load float, float* %g.addr, align 4, !dbg !6561
  %3 = load i32, i32* %i, align 4, !dbg !6562
  %idxprom = sext i32 %3 to i64, !dbg !6563
  %4 = load i32*, i32** %iy.addr, align 8, !dbg !6563
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !6563
  %5 = load i32, i32* %arrayidx, align 4, !dbg !6563
  %conv = sitofp i32 %5 to float, !dbg !6563
  %mul = fmul float %2, %conv, !dbg !6564
  %6 = load i32, i32* %i, align 4, !dbg !6565
  %idxprom1 = sext i32 %6 to i64, !dbg !6566
  %7 = load float*, float** %X.addr, align 8, !dbg !6566
  %arrayidx2 = getelementptr inbounds float, float* %7, i64 %idxprom1, !dbg !6566
  store float %mul, float* %arrayidx2, align 4, !dbg !6567
  br label %for.inc, !dbg !6566

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !6568
  %inc = add nsw i32 %8, 1, !dbg !6568
  store i32 %inc, i32* %i, align 4, !dbg !6568
  br label %for.cond, !dbg !6570, !llvm.loop !6571

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6573
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @celt_extract_collapse_mask(i32* %iy, i32 %N, i32 %B) #5 !dbg !6574 {
entry:
  %retval = alloca i32, align 4
  %iy.addr = alloca i32*, align 8
  %N.addr = alloca i32, align 4
  %B.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %N0 = alloca i32, align 4
  %collapse_mask = alloca i32, align 4
  store i32* %iy, i32** %iy.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %iy.addr, metadata !6577, metadata !1787), !dbg !6578
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !6579, metadata !1787), !dbg !6580
  store i32 %B, i32* %B.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %B.addr, metadata !6581, metadata !1787), !dbg !6582
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6583, metadata !1787), !dbg !6584
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6585, metadata !1787), !dbg !6586
  call void @llvm.dbg.declare(metadata i32* %N0, metadata !6587, metadata !1787), !dbg !6588
  %0 = load i32, i32* %N.addr, align 4, !dbg !6589
  %1 = load i32, i32* %B.addr, align 4, !dbg !6590
  %div = udiv i32 %0, %1, !dbg !6591
  store i32 %div, i32* %N0, align 4, !dbg !6588
  call void @llvm.dbg.declare(metadata i32* %collapse_mask, metadata !6592, metadata !1787), !dbg !6593
  store i32 0, i32* %collapse_mask, align 4, !dbg !6593
  %2 = load i32, i32* %B.addr, align 4, !dbg !6594
  %cmp = icmp ule i32 %2, 1, !dbg !6596
  br i1 %cmp, label %if.then, label %if.end, !dbg !6597

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !6598
  br label %return, !dbg !6598

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6599
  br label %for.cond, !dbg !6601

for.cond:                                         ; preds = %for.inc6, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !6602
  %4 = load i32, i32* %B.addr, align 4, !dbg !6605
  %cmp1 = icmp ult i32 %3, %4, !dbg !6606
  br i1 %cmp1, label %for.body, label %for.end8, !dbg !6607

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !6608
  br label %for.cond2, !dbg !6610

for.cond2:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4, !dbg !6611
  %6 = load i32, i32* %N0, align 4, !dbg !6614
  %cmp3 = icmp slt i32 %5, %6, !dbg !6615
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !6616

for.body4:                                        ; preds = %for.cond2
  %7 = load i32, i32* %i, align 4, !dbg !6617
  %8 = load i32, i32* %N0, align 4, !dbg !6618
  %mul = mul nsw i32 %7, %8, !dbg !6619
  %9 = load i32, i32* %j, align 4, !dbg !6620
  %add = add nsw i32 %mul, %9, !dbg !6621
  %idxprom = sext i32 %add to i64, !dbg !6622
  %10 = load i32*, i32** %iy.addr, align 8, !dbg !6622
  %arrayidx = getelementptr inbounds i32, i32* %10, i64 %idxprom, !dbg !6622
  %11 = load i32, i32* %arrayidx, align 4, !dbg !6622
  %tobool = icmp ne i32 %11, 0, !dbg !6623
  %lnot = xor i1 %tobool, true, !dbg !6623
  %lnot5 = xor i1 %lnot, true, !dbg !6624
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6624
  %12 = load i32, i32* %i, align 4, !dbg !6625
  %shl = shl i32 %lnot.ext, %12, !dbg !6626
  %13 = load i32, i32* %collapse_mask, align 4, !dbg !6627
  %or = or i32 %13, %shl, !dbg !6627
  store i32 %or, i32* %collapse_mask, align 4, !dbg !6627
  br label %for.inc, !dbg !6628

for.inc:                                          ; preds = %for.body4
  %14 = load i32, i32* %j, align 4, !dbg !6629
  %inc = add nsw i32 %14, 1, !dbg !6629
  store i32 %inc, i32* %j, align 4, !dbg !6629
  br label %for.cond2, !dbg !6631, !llvm.loop !6632

for.end:                                          ; preds = %for.cond2
  br label %for.inc6, !dbg !6634

for.inc6:                                         ; preds = %for.end
  %15 = load i32, i32* %i, align 4, !dbg !6636
  %inc7 = add nsw i32 %15, 1, !dbg !6636
  store i32 %inc7, i32* %i, align 4, !dbg !6636
  br label %for.cond, !dbg !6638, !llvm.loop !6639

for.end8:                                         ; preds = %for.cond
  %16 = load i32, i32* %collapse_mask, align 4, !dbg !6641
  store i32 %16, i32* %retval, align 4, !dbg !6642
  br label %return, !dbg !6642

return:                                           ; preds = %for.end8, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !6643
  ret i32 %17, !dbg !6643
}

; Function Attrs: nounwind
declare float @cosf(float) #4

; Function Attrs: nounwind
declare float @sinf(float) #4

; Function Attrs: nounwind uwtable
define internal void @celt_exp_rotation_impl(float* %X, i32 %len, i32 %stride, float %c, float %s) #3 !dbg !6644 {
entry:
  %X.addr = alloca float*, align 8
  %len.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %c.addr = alloca float, align 4
  %s.addr = alloca float, align 4
  %Xptr = alloca float*, align 8
  %i = alloca i32, align 4
  %x1 = alloca float, align 4
  %x2 = alloca float, align 4
  %x119 = alloca float, align 4
  %x221 = alloca float, align 4
  store float* %X, float** %X.addr, align 8
  call void @llvm.dbg.declare(metadata float** %X.addr, metadata !6647, metadata !1787), !dbg !6648
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !6649, metadata !1787), !dbg !6650
  store i32 %stride, i32* %stride.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stride.addr, metadata !6651, metadata !1787), !dbg !6652
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !6653, metadata !1787), !dbg !6654
  store float %s, float* %s.addr, align 4
  call void @llvm.dbg.declare(metadata float* %s.addr, metadata !6655, metadata !1787), !dbg !6656
  call void @llvm.dbg.declare(metadata float** %Xptr, metadata !6657, metadata !1787), !dbg !6658
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6659, metadata !1787), !dbg !6660
  %0 = load float*, float** %X.addr, align 8, !dbg !6661
  store float* %0, float** %Xptr, align 8, !dbg !6662
  store i32 0, i32* %i, align 4, !dbg !6663
  br label %for.cond, !dbg !6665

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !6666
  %2 = load i32, i32* %len.addr, align 4, !dbg !6669
  %3 = load i32, i32* %stride.addr, align 4, !dbg !6670
  %sub = sub i32 %2, %3, !dbg !6671
  %cmp = icmp ult i32 %1, %sub, !dbg !6672
  br i1 %cmp, label %for.body, label %for.end, !dbg !6673

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %x1, metadata !6674, metadata !1787), !dbg !6676
  %4 = load float*, float** %Xptr, align 8, !dbg !6677
  %arrayidx = getelementptr inbounds float, float* %4, i64 0, !dbg !6677
  %5 = load float, float* %arrayidx, align 4, !dbg !6677
  store float %5, float* %x1, align 4, !dbg !6676
  call void @llvm.dbg.declare(metadata float* %x2, metadata !6678, metadata !1787), !dbg !6679
  %6 = load i32, i32* %stride.addr, align 4, !dbg !6680
  %idxprom = zext i32 %6 to i64, !dbg !6681
  %7 = load float*, float** %Xptr, align 8, !dbg !6681
  %arrayidx1 = getelementptr inbounds float, float* %7, i64 %idxprom, !dbg !6681
  %8 = load float, float* %arrayidx1, align 4, !dbg !6681
  store float %8, float* %x2, align 4, !dbg !6679
  %9 = load float, float* %c.addr, align 4, !dbg !6682
  %10 = load float, float* %x2, align 4, !dbg !6683
  %mul = fmul float %9, %10, !dbg !6684
  %11 = load float, float* %s.addr, align 4, !dbg !6685
  %12 = load float, float* %x1, align 4, !dbg !6686
  %mul2 = fmul float %11, %12, !dbg !6687
  %add = fadd float %mul, %mul2, !dbg !6688
  %13 = load i32, i32* %stride.addr, align 4, !dbg !6689
  %idxprom3 = zext i32 %13 to i64, !dbg !6690
  %14 = load float*, float** %Xptr, align 8, !dbg !6690
  %arrayidx4 = getelementptr inbounds float, float* %14, i64 %idxprom3, !dbg !6690
  store float %add, float* %arrayidx4, align 4, !dbg !6691
  %15 = load float, float* %c.addr, align 4, !dbg !6692
  %16 = load float, float* %x1, align 4, !dbg !6693
  %mul5 = fmul float %15, %16, !dbg !6694
  %17 = load float, float* %s.addr, align 4, !dbg !6695
  %18 = load float, float* %x2, align 4, !dbg !6696
  %mul6 = fmul float %17, %18, !dbg !6697
  %sub7 = fsub float %mul5, %mul6, !dbg !6698
  %19 = load float*, float** %Xptr, align 8, !dbg !6699
  %incdec.ptr = getelementptr inbounds float, float* %19, i32 1, !dbg !6699
  store float* %incdec.ptr, float** %Xptr, align 8, !dbg !6699
  store float %sub7, float* %19, align 4, !dbg !6700
  br label %for.inc, !dbg !6701

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !6702
  %inc = add nsw i32 %20, 1, !dbg !6702
  store i32 %inc, i32* %i, align 4, !dbg !6702
  br label %for.cond, !dbg !6704, !llvm.loop !6705

for.end:                                          ; preds = %for.cond
  %21 = load i32, i32* %len.addr, align 4, !dbg !6707
  %22 = load i32, i32* %stride.addr, align 4, !dbg !6708
  %mul8 = mul i32 2, %22, !dbg !6709
  %sub9 = sub i32 %21, %mul8, !dbg !6710
  %sub10 = sub i32 %sub9, 1, !dbg !6711
  %idxprom11 = zext i32 %sub10 to i64, !dbg !6712
  %23 = load float*, float** %X.addr, align 8, !dbg !6712
  %arrayidx12 = getelementptr inbounds float, float* %23, i64 %idxprom11, !dbg !6712
  store float* %arrayidx12, float** %Xptr, align 8, !dbg !6713
  %24 = load i32, i32* %len.addr, align 4, !dbg !6714
  %25 = load i32, i32* %stride.addr, align 4, !dbg !6716
  %mul13 = mul i32 2, %25, !dbg !6717
  %sub14 = sub i32 %24, %mul13, !dbg !6718
  %sub15 = sub i32 %sub14, 1, !dbg !6719
  store i32 %sub15, i32* %i, align 4, !dbg !6720
  br label %for.cond16, !dbg !6721

for.cond16:                                       ; preds = %for.inc33, %for.end
  %26 = load i32, i32* %i, align 4, !dbg !6722
  %cmp17 = icmp sge i32 %26, 0, !dbg !6725
  br i1 %cmp17, label %for.body18, label %for.end34, !dbg !6726

for.body18:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata float* %x119, metadata !6727, metadata !1787), !dbg !6729
  %27 = load float*, float** %Xptr, align 8, !dbg !6730
  %arrayidx20 = getelementptr inbounds float, float* %27, i64 0, !dbg !6730
  %28 = load float, float* %arrayidx20, align 4, !dbg !6730
  store float %28, float* %x119, align 4, !dbg !6729
  call void @llvm.dbg.declare(metadata float* %x221, metadata !6731, metadata !1787), !dbg !6732
  %29 = load i32, i32* %stride.addr, align 4, !dbg !6733
  %idxprom22 = zext i32 %29 to i64, !dbg !6734
  %30 = load float*, float** %Xptr, align 8, !dbg !6734
  %arrayidx23 = getelementptr inbounds float, float* %30, i64 %idxprom22, !dbg !6734
  %31 = load float, float* %arrayidx23, align 4, !dbg !6734
  store float %31, float* %x221, align 4, !dbg !6732
  %32 = load float, float* %c.addr, align 4, !dbg !6735
  %33 = load float, float* %x221, align 4, !dbg !6736
  %mul24 = fmul float %32, %33, !dbg !6737
  %34 = load float, float* %s.addr, align 4, !dbg !6738
  %35 = load float, float* %x119, align 4, !dbg !6739
  %mul25 = fmul float %34, %35, !dbg !6740
  %add26 = fadd float %mul24, %mul25, !dbg !6741
  %36 = load i32, i32* %stride.addr, align 4, !dbg !6742
  %idxprom27 = zext i32 %36 to i64, !dbg !6743
  %37 = load float*, float** %Xptr, align 8, !dbg !6743
  %arrayidx28 = getelementptr inbounds float, float* %37, i64 %idxprom27, !dbg !6743
  store float %add26, float* %arrayidx28, align 4, !dbg !6744
  %38 = load float, float* %c.addr, align 4, !dbg !6745
  %39 = load float, float* %x119, align 4, !dbg !6746
  %mul29 = fmul float %38, %39, !dbg !6747
  %40 = load float, float* %s.addr, align 4, !dbg !6748
  %41 = load float, float* %x221, align 4, !dbg !6749
  %mul30 = fmul float %40, %41, !dbg !6750
  %sub31 = fsub float %mul29, %mul30, !dbg !6751
  %42 = load float*, float** %Xptr, align 8, !dbg !6752
  %incdec.ptr32 = getelementptr inbounds float, float* %42, i32 -1, !dbg !6752
  store float* %incdec.ptr32, float** %Xptr, align 8, !dbg !6752
  store float %sub31, float* %42, align 4, !dbg !6753
  br label %for.inc33, !dbg !6754

for.inc33:                                        ; preds = %for.body18
  %43 = load i32, i32* %i, align 4, !dbg !6755
  %dec = add nsw i32 %43, -1, !dbg !6755
  store i32 %dec, i32* %i, align 4, !dbg !6755
  br label %for.cond16, !dbg !6757, !llvm.loop !6758

for.end34:                                        ; preds = %for.cond16
  ret void, !dbg !6760
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @celt_icwrsi(i32 %N, i32 %K, i32* %y) #5 !dbg !6761 {
entry:
  %N.addr = alloca i32, align 4
  %K.addr = alloca i32, align 4
  %y.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  %sum = alloca i32, align 4
  %i_s = alloca i32, align 4
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !6764, metadata !1787), !dbg !6765
  store i32 %K, i32* %K.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %K.addr, metadata !6766, metadata !1787), !dbg !6767
  store i32* %y, i32** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !6768, metadata !1787), !dbg !6769
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6770, metadata !1787), !dbg !6771
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6772, metadata !1787), !dbg !6773
  store i32 0, i32* %idx, align 4, !dbg !6773
  call void @llvm.dbg.declare(metadata i32* %sum, metadata !6774, metadata !1787), !dbg !6775
  store i32 0, i32* %sum, align 4, !dbg !6775
  %0 = load i32, i32* %N.addr, align 4, !dbg !6776
  %sub = sub i32 %0, 1, !dbg !6778
  store i32 %sub, i32* %i, align 4, !dbg !6779
  br label %for.cond, !dbg !6780

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !6781
  %cmp = icmp sge i32 %1, 0, !dbg !6784
  br i1 %cmp, label %for.body, label %for.end, !dbg !6785

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i_s, metadata !6786, metadata !1787), !dbg !6789
  %2 = load i32, i32* %N.addr, align 4, !dbg !6790
  %3 = load i32, i32* %i, align 4, !dbg !6791
  %sub1 = sub i32 %2, %3, !dbg !6792
  %4 = load i32, i32* %sum, align 4, !dbg !6793
  %5 = load i32, i32* %i, align 4, !dbg !6794
  %idxprom = sext i32 %5 to i64, !dbg !6795
  %6 = load i32*, i32** %y.addr, align 8, !dbg !6795
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !6795
  %7 = load i32, i32* %arrayidx, align 4, !dbg !6795
  %cmp2 = icmp sge i32 %7, 0, !dbg !6796
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !6797

cond.true:                                        ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !6798
  %idxprom3 = sext i32 %8 to i64, !dbg !6800
  %9 = load i32*, i32** %y.addr, align 8, !dbg !6800
  %arrayidx4 = getelementptr inbounds i32, i32* %9, i64 %idxprom3, !dbg !6800
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !6800
  br label %cond.end, !dbg !6801

cond.false:                                       ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !6802
  %idxprom5 = sext i32 %11 to i64, !dbg !6804
  %12 = load i32*, i32** %y.addr, align 8, !dbg !6804
  %arrayidx6 = getelementptr inbounds i32, i32* %12, i64 %idxprom5, !dbg !6804
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !6804
  %sub7 = sub nsw i32 0, %13, !dbg !6805
  br label %cond.end, !dbg !6806

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %sub7, %cond.false ], !dbg !6807
  %add = add nsw i32 %4, %cond, !dbg !6809
  %add8 = add nsw i32 %add, 1, !dbg !6810
  %cmp9 = icmp ugt i32 %sub1, %add8, !dbg !6811
  br i1 %cmp9, label %cond.true10, label %cond.false12, !dbg !6812

cond.true10:                                      ; preds = %cond.end
  %14 = load i32, i32* %N.addr, align 4, !dbg !6813
  %15 = load i32, i32* %i, align 4, !dbg !6815
  %sub11 = sub i32 %14, %15, !dbg !6816
  br label %cond.end27, !dbg !6817

cond.false12:                                     ; preds = %cond.end
  %16 = load i32, i32* %sum, align 4, !dbg !6818
  %17 = load i32, i32* %i, align 4, !dbg !6820
  %idxprom13 = sext i32 %17 to i64, !dbg !6821
  %18 = load i32*, i32** %y.addr, align 8, !dbg !6821
  %arrayidx14 = getelementptr inbounds i32, i32* %18, i64 %idxprom13, !dbg !6821
  %19 = load i32, i32* %arrayidx14, align 4, !dbg !6821
  %cmp15 = icmp sge i32 %19, 0, !dbg !6822
  br i1 %cmp15, label %cond.true16, label %cond.false19, !dbg !6823

cond.true16:                                      ; preds = %cond.false12
  %20 = load i32, i32* %i, align 4, !dbg !6824
  %idxprom17 = sext i32 %20 to i64, !dbg !6826
  %21 = load i32*, i32** %y.addr, align 8, !dbg !6826
  %arrayidx18 = getelementptr inbounds i32, i32* %21, i64 %idxprom17, !dbg !6826
  %22 = load i32, i32* %arrayidx18, align 4, !dbg !6826
  br label %cond.end23, !dbg !6827

cond.false19:                                     ; preds = %cond.false12
  %23 = load i32, i32* %i, align 4, !dbg !6828
  %idxprom20 = sext i32 %23 to i64, !dbg !6830
  %24 = load i32*, i32** %y.addr, align 8, !dbg !6830
  %arrayidx21 = getelementptr inbounds i32, i32* %24, i64 %idxprom20, !dbg !6830
  %25 = load i32, i32* %arrayidx21, align 4, !dbg !6830
  %sub22 = sub nsw i32 0, %25, !dbg !6831
  br label %cond.end23, !dbg !6832

cond.end23:                                       ; preds = %cond.false19, %cond.true16
  %cond24 = phi i32 [ %22, %cond.true16 ], [ %sub22, %cond.false19 ], !dbg !6833
  %add25 = add nsw i32 %16, %cond24, !dbg !6835
  %add26 = add nsw i32 %add25, 1, !dbg !6836
  br label %cond.end27, !dbg !6837

cond.end27:                                       ; preds = %cond.end23, %cond.true10
  %cond28 = phi i32 [ %sub11, %cond.true10 ], [ %add26, %cond.end23 ], !dbg !6838
  %idxprom29 = zext i32 %cond28 to i64, !dbg !6840
  %26 = load i32, i32* %N.addr, align 4, !dbg !6841
  %27 = load i32, i32* %i, align 4, !dbg !6842
  %sub30 = sub i32 %26, %27, !dbg !6843
  %28 = load i32, i32* %sum, align 4, !dbg !6844
  %29 = load i32, i32* %i, align 4, !dbg !6845
  %idxprom31 = sext i32 %29 to i64, !dbg !6846
  %30 = load i32*, i32** %y.addr, align 8, !dbg !6846
  %arrayidx32 = getelementptr inbounds i32, i32* %30, i64 %idxprom31, !dbg !6846
  %31 = load i32, i32* %arrayidx32, align 4, !dbg !6846
  %cmp33 = icmp sge i32 %31, 0, !dbg !6847
  br i1 %cmp33, label %cond.true34, label %cond.false37, !dbg !6848

cond.true34:                                      ; preds = %cond.end27
  %32 = load i32, i32* %i, align 4, !dbg !6849
  %idxprom35 = sext i32 %32 to i64, !dbg !6851
  %33 = load i32*, i32** %y.addr, align 8, !dbg !6851
  %arrayidx36 = getelementptr inbounds i32, i32* %33, i64 %idxprom35, !dbg !6851
  %34 = load i32, i32* %arrayidx36, align 4, !dbg !6851
  br label %cond.end41, !dbg !6852

cond.false37:                                     ; preds = %cond.end27
  %35 = load i32, i32* %i, align 4, !dbg !6853
  %idxprom38 = sext i32 %35 to i64, !dbg !6855
  %36 = load i32*, i32** %y.addr, align 8, !dbg !6855
  %arrayidx39 = getelementptr inbounds i32, i32* %36, i64 %idxprom38, !dbg !6855
  %37 = load i32, i32* %arrayidx39, align 4, !dbg !6855
  %sub40 = sub nsw i32 0, %37, !dbg !6856
  br label %cond.end41, !dbg !6857

cond.end41:                                       ; preds = %cond.false37, %cond.true34
  %cond42 = phi i32 [ %34, %cond.true34 ], [ %sub40, %cond.false37 ], !dbg !6858
  %add43 = add nsw i32 %28, %cond42, !dbg !6860
  %add44 = add nsw i32 %add43, 1, !dbg !6861
  %cmp45 = icmp ugt i32 %sub30, %add44, !dbg !6862
  br i1 %cmp45, label %cond.true46, label %cond.false61, !dbg !6863

cond.true46:                                      ; preds = %cond.end41
  %38 = load i32, i32* %sum, align 4, !dbg !6864
  %39 = load i32, i32* %i, align 4, !dbg !6866
  %idxprom47 = sext i32 %39 to i64, !dbg !6867
  %40 = load i32*, i32** %y.addr, align 8, !dbg !6867
  %arrayidx48 = getelementptr inbounds i32, i32* %40, i64 %idxprom47, !dbg !6867
  %41 = load i32, i32* %arrayidx48, align 4, !dbg !6867
  %cmp49 = icmp sge i32 %41, 0, !dbg !6868
  br i1 %cmp49, label %cond.true50, label %cond.false53, !dbg !6869

cond.true50:                                      ; preds = %cond.true46
  %42 = load i32, i32* %i, align 4, !dbg !6870
  %idxprom51 = sext i32 %42 to i64, !dbg !6872
  %43 = load i32*, i32** %y.addr, align 8, !dbg !6872
  %arrayidx52 = getelementptr inbounds i32, i32* %43, i64 %idxprom51, !dbg !6872
  %44 = load i32, i32* %arrayidx52, align 4, !dbg !6872
  br label %cond.end57, !dbg !6873

cond.false53:                                     ; preds = %cond.true46
  %45 = load i32, i32* %i, align 4, !dbg !6874
  %idxprom54 = sext i32 %45 to i64, !dbg !6876
  %46 = load i32*, i32** %y.addr, align 8, !dbg !6876
  %arrayidx55 = getelementptr inbounds i32, i32* %46, i64 %idxprom54, !dbg !6876
  %47 = load i32, i32* %arrayidx55, align 4, !dbg !6876
  %sub56 = sub nsw i32 0, %47, !dbg !6877
  br label %cond.end57, !dbg !6878

cond.end57:                                       ; preds = %cond.false53, %cond.true50
  %cond58 = phi i32 [ %44, %cond.true50 ], [ %sub56, %cond.false53 ], !dbg !6879
  %add59 = add nsw i32 %38, %cond58, !dbg !6881
  %add60 = add nsw i32 %add59, 1, !dbg !6882
  br label %cond.end63, !dbg !6883

cond.false61:                                     ; preds = %cond.end41
  %48 = load i32, i32* %N.addr, align 4, !dbg !6884
  %49 = load i32, i32* %i, align 4, !dbg !6886
  %sub62 = sub i32 %48, %49, !dbg !6887
  br label %cond.end63, !dbg !6888

cond.end63:                                       ; preds = %cond.false61, %cond.end57
  %cond64 = phi i32 [ %add60, %cond.end57 ], [ %sub62, %cond.false61 ], !dbg !6889
  %idxprom65 = zext i32 %cond64 to i64, !dbg !6891
  %arrayidx66 = getelementptr inbounds [15 x i32*], [15 x i32*]* @ff_celt_pvq_u_row, i64 0, i64 %idxprom65, !dbg !6891
  %50 = load i32*, i32** %arrayidx66, align 8, !dbg !6891
  %arrayidx67 = getelementptr inbounds i32, i32* %50, i64 %idxprom29, !dbg !6891
  %51 = load i32, i32* %arrayidx67, align 4, !dbg !6891
  store i32 %51, i32* %i_s, align 4, !dbg !6892
  %52 = load i32, i32* %N.addr, align 4, !dbg !6893
  %53 = load i32, i32* %i, align 4, !dbg !6894
  %sub68 = sub i32 %52, %53, !dbg !6895
  %54 = load i32, i32* %sum, align 4, !dbg !6896
  %cmp69 = icmp ugt i32 %sub68, %54, !dbg !6897
  br i1 %cmp69, label %cond.true70, label %cond.false72, !dbg !6898

cond.true70:                                      ; preds = %cond.end63
  %55 = load i32, i32* %N.addr, align 4, !dbg !6899
  %56 = load i32, i32* %i, align 4, !dbg !6900
  %sub71 = sub i32 %55, %56, !dbg !6901
  br label %cond.end73, !dbg !6902

cond.false72:                                     ; preds = %cond.end63
  %57 = load i32, i32* %sum, align 4, !dbg !6903
  br label %cond.end73, !dbg !6904

cond.end73:                                       ; preds = %cond.false72, %cond.true70
  %cond74 = phi i32 [ %sub71, %cond.true70 ], [ %57, %cond.false72 ], !dbg !6905
  %idxprom75 = zext i32 %cond74 to i64, !dbg !6906
  %58 = load i32, i32* %N.addr, align 4, !dbg !6907
  %59 = load i32, i32* %i, align 4, !dbg !6908
  %sub76 = sub i32 %58, %59, !dbg !6909
  %60 = load i32, i32* %sum, align 4, !dbg !6910
  %cmp77 = icmp ugt i32 %sub76, %60, !dbg !6911
  br i1 %cmp77, label %cond.true78, label %cond.false79, !dbg !6912

cond.true78:                                      ; preds = %cond.end73
  %61 = load i32, i32* %sum, align 4, !dbg !6913
  br label %cond.end81, !dbg !6914

cond.false79:                                     ; preds = %cond.end73
  %62 = load i32, i32* %N.addr, align 4, !dbg !6915
  %63 = load i32, i32* %i, align 4, !dbg !6916
  %sub80 = sub i32 %62, %63, !dbg !6917
  br label %cond.end81, !dbg !6918

cond.end81:                                       ; preds = %cond.false79, %cond.true78
  %cond82 = phi i32 [ %61, %cond.true78 ], [ %sub80, %cond.false79 ], !dbg !6919
  %idxprom83 = zext i32 %cond82 to i64, !dbg !6920
  %arrayidx84 = getelementptr inbounds [15 x i32*], [15 x i32*]* @ff_celt_pvq_u_row, i64 0, i64 %idxprom83, !dbg !6920
  %64 = load i32*, i32** %arrayidx84, align 8, !dbg !6920
  %arrayidx85 = getelementptr inbounds i32, i32* %64, i64 %idxprom75, !dbg !6920
  %65 = load i32, i32* %arrayidx85, align 4, !dbg !6920
  %66 = load i32, i32* %i, align 4, !dbg !6921
  %idxprom86 = sext i32 %66 to i64, !dbg !6922
  %67 = load i32*, i32** %y.addr, align 8, !dbg !6922
  %arrayidx87 = getelementptr inbounds i32, i32* %67, i64 %idxprom86, !dbg !6922
  %68 = load i32, i32* %arrayidx87, align 4, !dbg !6922
  %cmp88 = icmp slt i32 %68, 0, !dbg !6923
  %conv = zext i1 %cmp88 to i32, !dbg !6923
  %69 = load i32, i32* %i_s, align 4, !dbg !6924
  %mul = mul i32 %conv, %69, !dbg !6925
  %add89 = add i32 %65, %mul, !dbg !6926
  %70 = load i32, i32* %idx, align 4, !dbg !6927
  %add90 = add i32 %70, %add89, !dbg !6927
  store i32 %add90, i32* %idx, align 4, !dbg !6927
  %71 = load i32, i32* %i, align 4, !dbg !6928
  %idxprom91 = sext i32 %71 to i64, !dbg !6929
  %72 = load i32*, i32** %y.addr, align 8, !dbg !6929
  %arrayidx92 = getelementptr inbounds i32, i32* %72, i64 %idxprom91, !dbg !6929
  %73 = load i32, i32* %arrayidx92, align 4, !dbg !6929
  %cmp93 = icmp sge i32 %73, 0, !dbg !6930
  br i1 %cmp93, label %cond.true95, label %cond.false98, !dbg !6931

cond.true95:                                      ; preds = %cond.end81
  %74 = load i32, i32* %i, align 4, !dbg !6932
  %idxprom96 = sext i32 %74 to i64, !dbg !6933
  %75 = load i32*, i32** %y.addr, align 8, !dbg !6933
  %arrayidx97 = getelementptr inbounds i32, i32* %75, i64 %idxprom96, !dbg !6933
  %76 = load i32, i32* %arrayidx97, align 4, !dbg !6933
  br label %cond.end102, !dbg !6934

cond.false98:                                     ; preds = %cond.end81
  %77 = load i32, i32* %i, align 4, !dbg !6935
  %idxprom99 = sext i32 %77 to i64, !dbg !6936
  %78 = load i32*, i32** %y.addr, align 8, !dbg !6936
  %arrayidx100 = getelementptr inbounds i32, i32* %78, i64 %idxprom99, !dbg !6936
  %79 = load i32, i32* %arrayidx100, align 4, !dbg !6936
  %sub101 = sub nsw i32 0, %79, !dbg !6937
  br label %cond.end102, !dbg !6938

cond.end102:                                      ; preds = %cond.false98, %cond.true95
  %cond103 = phi i32 [ %76, %cond.true95 ], [ %sub101, %cond.false98 ], !dbg !6939
  %80 = load i32, i32* %sum, align 4, !dbg !6940
  %add104 = add nsw i32 %80, %cond103, !dbg !6940
  store i32 %add104, i32* %sum, align 4, !dbg !6940
  br label %for.inc, !dbg !6941

for.inc:                                          ; preds = %cond.end102
  %81 = load i32, i32* %i, align 4, !dbg !6942
  %dec = add nsw i32 %81, -1, !dbg !6942
  store i32 %dec, i32* %i, align 4, !dbg !6942
  br label %for.cond, !dbg !6944, !llvm.loop !6945

for.end:                                          ; preds = %for.cond
  %82 = load i32, i32* %idx, align 4, !dbg !6947
  ret i32 %82, !dbg !6948
}

; Function Attrs: inlinehint nounwind uwtable
define internal float @celt_decode_pulses(%struct.OpusRangeCoder* %rc, i32* %y, i32 %N, i32 %K) #5 !dbg !6949 {
entry:
  %rc.addr = alloca %struct.OpusRangeCoder*, align 8
  %y.addr = alloca i32*, align 8
  %N.addr = alloca i32, align 4
  %K.addr = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.OpusRangeCoder* %rc, %struct.OpusRangeCoder** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OpusRangeCoder** %rc.addr, metadata !6952, metadata !1787), !dbg !6953
  store i32* %y, i32** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !6954, metadata !1787), !dbg !6955
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !6956, metadata !1787), !dbg !6957
  store i32 %K, i32* %K.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %K.addr, metadata !6958, metadata !1787), !dbg !6959
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6960, metadata !1787), !dbg !6961
  %0 = load %struct.OpusRangeCoder*, %struct.OpusRangeCoder** %rc.addr, align 8, !dbg !6962
  %1 = load i32, i32* %N.addr, align 4, !dbg !6963
  %2 = load i32, i32* %K.addr, align 4, !dbg !6964
  %cmp = icmp ugt i32 %1, %2, !dbg !6965
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6966

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %N.addr, align 4, !dbg !6967
  br label %cond.end, !dbg !6969

cond.false:                                       ; preds = %entry
  %4 = load i32, i32* %K.addr, align 4, !dbg !6970
  br label %cond.end, !dbg !6972

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ %4, %cond.false ], !dbg !6973
  %idxprom = zext i32 %cond to i64, !dbg !6975
  %5 = load i32, i32* %N.addr, align 4, !dbg !6976
  %6 = load i32, i32* %K.addr, align 4, !dbg !6977
  %cmp1 = icmp ugt i32 %5, %6, !dbg !6978
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !6979

cond.true2:                                       ; preds = %cond.end
  %7 = load i32, i32* %K.addr, align 4, !dbg !6980
  br label %cond.end4, !dbg !6982

cond.false3:                                      ; preds = %cond.end
  %8 = load i32, i32* %N.addr, align 4, !dbg !6983
  br label %cond.end4, !dbg !6985

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ %7, %cond.true2 ], [ %8, %cond.false3 ], !dbg !6986
  %idxprom6 = zext i32 %cond5 to i64, !dbg !6988
  %arrayidx = getelementptr inbounds [15 x i32*], [15 x i32*]* @ff_celt_pvq_u_row, i64 0, i64 %idxprom6, !dbg !6988
  %9 = load i32*, i32** %arrayidx, align 8, !dbg !6988
  %arrayidx7 = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !6988
  %10 = load i32, i32* %arrayidx7, align 4, !dbg !6988
  %11 = load i32, i32* %N.addr, align 4, !dbg !6989
  %12 = load i32, i32* %K.addr, align 4, !dbg !6990
  %add = add i32 %12, 1, !dbg !6991
  %cmp8 = icmp ugt i32 %11, %add, !dbg !6992
  br i1 %cmp8, label %cond.true9, label %cond.false10, !dbg !6993

cond.true9:                                       ; preds = %cond.end4
  %13 = load i32, i32* %N.addr, align 4, !dbg !6994
  br label %cond.end12, !dbg !6996

cond.false10:                                     ; preds = %cond.end4
  %14 = load i32, i32* %K.addr, align 4, !dbg !6997
  %add11 = add i32 %14, 1, !dbg !6999
  br label %cond.end12, !dbg !7000

cond.end12:                                       ; preds = %cond.false10, %cond.true9
  %cond13 = phi i32 [ %13, %cond.true9 ], [ %add11, %cond.false10 ], !dbg !7001
  %idxprom14 = zext i32 %cond13 to i64, !dbg !7003
  %15 = load i32, i32* %N.addr, align 4, !dbg !7004
  %16 = load i32, i32* %K.addr, align 4, !dbg !7005
  %add15 = add i32 %16, 1, !dbg !7006
  %cmp16 = icmp ugt i32 %15, %add15, !dbg !7007
  br i1 %cmp16, label %cond.true17, label %cond.false19, !dbg !7008

cond.true17:                                      ; preds = %cond.end12
  %17 = load i32, i32* %K.addr, align 4, !dbg !7009
  %add18 = add i32 %17, 1, !dbg !7011
  br label %cond.end20, !dbg !7012

cond.false19:                                     ; preds = %cond.end12
  %18 = load i32, i32* %N.addr, align 4, !dbg !7013
  br label %cond.end20, !dbg !7015

cond.end20:                                       ; preds = %cond.false19, %cond.true17
  %cond21 = phi i32 [ %add18, %cond.true17 ], [ %18, %cond.false19 ], !dbg !7016
  %idxprom22 = zext i32 %cond21 to i64, !dbg !7018
  %arrayidx23 = getelementptr inbounds [15 x i32*], [15 x i32*]* @ff_celt_pvq_u_row, i64 0, i64 %idxprom22, !dbg !7018
  %19 = load i32*, i32** %arrayidx23, align 8, !dbg !7018
  %arrayidx24 = getelementptr inbounds i32, i32* %19, i64 %idxprom14, !dbg !7018
  %20 = load i32, i32* %arrayidx24, align 4, !dbg !7018
  %add25 = add i32 %10, %20, !dbg !7019
  %call = call i32 @ff_opus_rc_dec_uint(%struct.OpusRangeCoder* %0, i32 %add25), !dbg !7020
  store i32 %call, i32* %idx, align 4, !dbg !7021
  %21 = load i32, i32* %N.addr, align 4, !dbg !7022
  %22 = load i32, i32* %K.addr, align 4, !dbg !7023
  %23 = load i32, i32* %idx, align 4, !dbg !7024
  %24 = load i32*, i32** %y.addr, align 8, !dbg !7025
  %call26 = call i64 @celt_cwrsi(i32 %21, i32 %22, i32 %23, i32* %24), !dbg !7026
  %conv = uitofp i64 %call26 to float, !dbg !7026
  ret float %conv, !dbg !7027
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @celt_cwrsi(i32 %N, i32 %K, i32 %i, i32* %y) #5 !dbg !7028 {
entry:
  %N.addr = alloca i32, align 4
  %K.addr = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %y.addr = alloca i32*, align 8
  %norm = alloca i64, align 8
  %q = alloca i32, align 4
  %p = alloca i32, align 4
  %s = alloca i32, align 4
  %val = alloca i32, align 4
  %k0 = alloca i32, align 4
  %row = alloca i32*, align 8
  store i32 %N, i32* %N.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %N.addr, metadata !7031, metadata !1787), !dbg !7032
  store i32 %K, i32* %K.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %K.addr, metadata !7033, metadata !1787), !dbg !7034
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7035, metadata !1787), !dbg !7036
  store i32* %y, i32** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %y.addr, metadata !7037, metadata !1787), !dbg !7038
  call void @llvm.dbg.declare(metadata i64* %norm, metadata !7039, metadata !1787), !dbg !7040
  store i64 0, i64* %norm, align 8, !dbg !7040
  call void @llvm.dbg.declare(metadata i32* %q, metadata !7041, metadata !1787), !dbg !7042
  call void @llvm.dbg.declare(metadata i32* %p, metadata !7043, metadata !1787), !dbg !7044
  call void @llvm.dbg.declare(metadata i32* %s, metadata !7045, metadata !1787), !dbg !7046
  call void @llvm.dbg.declare(metadata i32* %val, metadata !7047, metadata !1787), !dbg !7048
  call void @llvm.dbg.declare(metadata i32* %k0, metadata !7049, metadata !1787), !dbg !7050
  br label %while.cond, !dbg !7051

while.cond:                                       ; preds = %if.end71, %entry
  %0 = load i32, i32* %N.addr, align 4, !dbg !7052
  %cmp = icmp ugt i32 %0, 2, !dbg !7054
  br i1 %cmp, label %while.body, label %while.end, !dbg !7055

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %K.addr, align 4, !dbg !7056
  %2 = load i32, i32* %N.addr, align 4, !dbg !7059
  %cmp1 = icmp uge i32 %1, %2, !dbg !7060
  br i1 %cmp1, label %if.then, label %if.else29, !dbg !7061

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32** %row, metadata !7062, metadata !1787), !dbg !7065
  %3 = load i32, i32* %N.addr, align 4, !dbg !7066
  %idxprom = zext i32 %3 to i64, !dbg !7067
  %arrayidx = getelementptr inbounds [15 x i32*], [15 x i32*]* @ff_celt_pvq_u_row, i64 0, i64 %idxprom, !dbg !7067
  %4 = load i32*, i32** %arrayidx, align 8, !dbg !7067
  store i32* %4, i32** %row, align 8, !dbg !7065
  %5 = load i32, i32* %K.addr, align 4, !dbg !7068
  %add = add i32 %5, 1, !dbg !7069
  %idxprom2 = zext i32 %add to i64, !dbg !7070
  %6 = load i32*, i32** %row, align 8, !dbg !7070
  %arrayidx3 = getelementptr inbounds i32, i32* %6, i64 %idxprom2, !dbg !7070
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !7070
  store i32 %7, i32* %p, align 4, !dbg !7071
  %8 = load i32, i32* %i.addr, align 4, !dbg !7072
  %9 = load i32, i32* %p, align 4, !dbg !7073
  %cmp4 = icmp uge i32 %8, %9, !dbg !7074
  %conv = zext i1 %cmp4 to i32, !dbg !7074
  %sub = sub nsw i32 0, %conv, !dbg !7075
  store i32 %sub, i32* %s, align 4, !dbg !7076
  %10 = load i32, i32* %p, align 4, !dbg !7077
  %11 = load i32, i32* %s, align 4, !dbg !7078
  %and = and i32 %10, %11, !dbg !7079
  %12 = load i32, i32* %i.addr, align 4, !dbg !7080
  %sub5 = sub i32 %12, %and, !dbg !7080
  store i32 %sub5, i32* %i.addr, align 4, !dbg !7080
  %13 = load i32, i32* %K.addr, align 4, !dbg !7081
  store i32 %13, i32* %k0, align 4, !dbg !7082
  %14 = load i32, i32* %N.addr, align 4, !dbg !7083
  %idxprom6 = zext i32 %14 to i64, !dbg !7084
  %15 = load i32*, i32** %row, align 8, !dbg !7084
  %arrayidx7 = getelementptr inbounds i32, i32* %15, i64 %idxprom6, !dbg !7084
  %16 = load i32, i32* %arrayidx7, align 4, !dbg !7084
  store i32 %16, i32* %q, align 4, !dbg !7085
  %17 = load i32, i32* %q, align 4, !dbg !7086
  %18 = load i32, i32* %i.addr, align 4, !dbg !7088
  %cmp8 = icmp ugt i32 %17, %18, !dbg !7089
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !7090

if.then10:                                        ; preds = %if.then
  %19 = load i32, i32* %N.addr, align 4, !dbg !7091
  store i32 %19, i32* %K.addr, align 4, !dbg !7093
  br label %do.body, !dbg !7094, !llvm.loop !7095

do.body:                                          ; preds = %do.cond, %if.then10
  %20 = load i32, i32* %N.addr, align 4, !dbg !7096
  %idxprom11 = zext i32 %20 to i64, !dbg !7098
  %21 = load i32, i32* %K.addr, align 4, !dbg !7099
  %dec = add i32 %21, -1, !dbg !7099
  store i32 %dec, i32* %K.addr, align 4, !dbg !7099
  %idxprom12 = zext i32 %dec to i64, !dbg !7098
  %arrayidx13 = getelementptr inbounds [15 x i32*], [15 x i32*]* @ff_celt_pvq_u_row, i64 0, i64 %idxprom12, !dbg !7098
  %22 = load i32*, i32** %arrayidx13, align 8, !dbg !7098
  %arrayidx14 = getelementptr inbounds i32, i32* %22, i64 %idxprom11, !dbg !7098
  %23 = load i32, i32* %arrayidx14, align 4, !dbg !7098
  store i32 %23, i32* %p, align 4, !dbg !7100
  br label %do.cond, !dbg !7101

do.cond:                                          ; preds = %do.body
  %24 = load i32, i32* %p, align 4, !dbg !7102
  %25 = load i32, i32* %i.addr, align 4, !dbg !7104
  %cmp15 = icmp ugt i32 %24, %25, !dbg !7105
  br i1 %cmp15, label %do.body, label %do.end, !dbg !7106, !llvm.loop !7095

do.end:                                           ; preds = %do.cond
  br label %if.end, !dbg !7107

if.else:                                          ; preds = %if.then
  %26 = load i32, i32* %K.addr, align 4, !dbg !7108
  %idxprom17 = zext i32 %26 to i64, !dbg !7110
  %27 = load i32*, i32** %row, align 8, !dbg !7110
  %arrayidx18 = getelementptr inbounds i32, i32* %27, i64 %idxprom17, !dbg !7110
  %28 = load i32, i32* %arrayidx18, align 4, !dbg !7110
  store i32 %28, i32* %p, align 4, !dbg !7111
  br label %for.cond, !dbg !7112

for.cond:                                         ; preds = %for.inc, %if.else
  %29 = load i32, i32* %p, align 4, !dbg !7113
  %30 = load i32, i32* %i.addr, align 4, !dbg !7116
  %cmp19 = icmp ugt i32 %29, %30, !dbg !7117
  br i1 %cmp19, label %for.body, label %for.end, !dbg !7118

for.body:                                         ; preds = %for.cond
  %31 = load i32, i32* %K.addr, align 4, !dbg !7119
  %dec21 = add i32 %31, -1, !dbg !7119
  store i32 %dec21, i32* %K.addr, align 4, !dbg !7119
  br label %for.inc, !dbg !7120

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %K.addr, align 4, !dbg !7121
  %idxprom22 = zext i32 %32 to i64, !dbg !7123
  %33 = load i32*, i32** %row, align 8, !dbg !7123
  %arrayidx23 = getelementptr inbounds i32, i32* %33, i64 %idxprom22, !dbg !7123
  %34 = load i32, i32* %arrayidx23, align 4, !dbg !7123
  store i32 %34, i32* %p, align 4, !dbg !7124
  br label %for.cond, !dbg !7125, !llvm.loop !7126

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %do.end
  %35 = load i32, i32* %p, align 4, !dbg !7128
  %36 = load i32, i32* %i.addr, align 4, !dbg !7129
  %sub24 = sub i32 %36, %35, !dbg !7129
  store i32 %sub24, i32* %i.addr, align 4, !dbg !7129
  %37 = load i32, i32* %k0, align 4, !dbg !7130
  %38 = load i32, i32* %K.addr, align 4, !dbg !7131
  %sub25 = sub i32 %37, %38, !dbg !7132
  %39 = load i32, i32* %s, align 4, !dbg !7133
  %add26 = add i32 %sub25, %39, !dbg !7134
  %40 = load i32, i32* %s, align 4, !dbg !7135
  %xor = xor i32 %add26, %40, !dbg !7136
  store i32 %xor, i32* %val, align 4, !dbg !7137
  %41 = load i32, i32* %val, align 4, !dbg !7138
  %42 = load i32, i32* %val, align 4, !dbg !7139
  %mul = mul nsw i32 %41, %42, !dbg !7140
  %conv27 = sext i32 %mul to i64, !dbg !7138
  %43 = load i64, i64* %norm, align 8, !dbg !7141
  %add28 = add i64 %43, %conv27, !dbg !7141
  store i64 %add28, i64* %norm, align 8, !dbg !7141
  %44 = load i32, i32* %val, align 4, !dbg !7142
  %45 = load i32*, i32** %y.addr, align 8, !dbg !7143
  %incdec.ptr = getelementptr inbounds i32, i32* %45, i32 1, !dbg !7143
  store i32* %incdec.ptr, i32** %y.addr, align 8, !dbg !7143
  store i32 %44, i32* %45, align 4, !dbg !7144
  br label %if.end71, !dbg !7145

if.else29:                                        ; preds = %while.body
  %46 = load i32, i32* %N.addr, align 4, !dbg !7146
  %idxprom30 = zext i32 %46 to i64, !dbg !7148
  %47 = load i32, i32* %K.addr, align 4, !dbg !7149
  %idxprom31 = zext i32 %47 to i64, !dbg !7148
  %arrayidx32 = getelementptr inbounds [15 x i32*], [15 x i32*]* @ff_celt_pvq_u_row, i64 0, i64 %idxprom31, !dbg !7148
  %48 = load i32*, i32** %arrayidx32, align 8, !dbg !7148
  %arrayidx33 = getelementptr inbounds i32, i32* %48, i64 %idxprom30, !dbg !7148
  %49 = load i32, i32* %arrayidx33, align 4, !dbg !7148
  store i32 %49, i32* %p, align 4, !dbg !7150
  %50 = load i32, i32* %N.addr, align 4, !dbg !7151
  %idxprom34 = zext i32 %50 to i64, !dbg !7152
  %51 = load i32, i32* %K.addr, align 4, !dbg !7153
  %add35 = add i32 %51, 1, !dbg !7154
  %idxprom36 = zext i32 %add35 to i64, !dbg !7152
  %arrayidx37 = getelementptr inbounds [15 x i32*], [15 x i32*]* @ff_celt_pvq_u_row, i64 0, i64 %idxprom36, !dbg !7152
  %52 = load i32*, i32** %arrayidx37, align 8, !dbg !7152
  %arrayidx38 = getelementptr inbounds i32, i32* %52, i64 %idxprom34, !dbg !7152
  %53 = load i32, i32* %arrayidx38, align 4, !dbg !7152
  store i32 %53, i32* %q, align 4, !dbg !7155
  %54 = load i32, i32* %p, align 4, !dbg !7156
  %55 = load i32, i32* %i.addr, align 4, !dbg !7158
  %cmp39 = icmp ule i32 %54, %55, !dbg !7159
  br i1 %cmp39, label %land.lhs.true, label %if.else46, !dbg !7160

land.lhs.true:                                    ; preds = %if.else29
  %56 = load i32, i32* %i.addr, align 4, !dbg !7161
  %57 = load i32, i32* %q, align 4, !dbg !7163
  %cmp41 = icmp ult i32 %56, %57, !dbg !7164
  br i1 %cmp41, label %if.then43, label %if.else46, !dbg !7165

if.then43:                                        ; preds = %land.lhs.true
  %58 = load i32, i32* %p, align 4, !dbg !7166
  %59 = load i32, i32* %i.addr, align 4, !dbg !7168
  %sub44 = sub i32 %59, %58, !dbg !7168
  store i32 %sub44, i32* %i.addr, align 4, !dbg !7168
  %60 = load i32*, i32** %y.addr, align 8, !dbg !7169
  %incdec.ptr45 = getelementptr inbounds i32, i32* %60, i32 1, !dbg !7169
  store i32* %incdec.ptr45, i32** %y.addr, align 8, !dbg !7169
  store i32 0, i32* %60, align 4, !dbg !7170
  br label %if.end70, !dbg !7171

if.else46:                                        ; preds = %land.lhs.true, %if.else29
  %61 = load i32, i32* %i.addr, align 4, !dbg !7172
  %62 = load i32, i32* %q, align 4, !dbg !7174
  %cmp47 = icmp uge i32 %61, %62, !dbg !7175
  %conv48 = zext i1 %cmp47 to i32, !dbg !7175
  %sub49 = sub nsw i32 0, %conv48, !dbg !7176
  store i32 %sub49, i32* %s, align 4, !dbg !7177
  %63 = load i32, i32* %q, align 4, !dbg !7178
  %64 = load i32, i32* %s, align 4, !dbg !7179
  %and50 = and i32 %63, %64, !dbg !7180
  %65 = load i32, i32* %i.addr, align 4, !dbg !7181
  %sub51 = sub i32 %65, %and50, !dbg !7181
  store i32 %sub51, i32* %i.addr, align 4, !dbg !7181
  %66 = load i32, i32* %K.addr, align 4, !dbg !7182
  store i32 %66, i32* %k0, align 4, !dbg !7183
  br label %do.body52, !dbg !7184, !llvm.loop !7185

do.body52:                                        ; preds = %do.cond58, %if.else46
  %67 = load i32, i32* %N.addr, align 4, !dbg !7186
  %idxprom53 = zext i32 %67 to i64, !dbg !7188
  %68 = load i32, i32* %K.addr, align 4, !dbg !7189
  %dec54 = add i32 %68, -1, !dbg !7189
  store i32 %dec54, i32* %K.addr, align 4, !dbg !7189
  %idxprom55 = zext i32 %dec54 to i64, !dbg !7188
  %arrayidx56 = getelementptr inbounds [15 x i32*], [15 x i32*]* @ff_celt_pvq_u_row, i64 0, i64 %idxprom55, !dbg !7188
  %69 = load i32*, i32** %arrayidx56, align 8, !dbg !7188
  %arrayidx57 = getelementptr inbounds i32, i32* %69, i64 %idxprom53, !dbg !7188
  %70 = load i32, i32* %arrayidx57, align 4, !dbg !7188
  store i32 %70, i32* %p, align 4, !dbg !7190
  br label %do.cond58, !dbg !7191

do.cond58:                                        ; preds = %do.body52
  %71 = load i32, i32* %p, align 4, !dbg !7192
  %72 = load i32, i32* %i.addr, align 4, !dbg !7193
  %cmp59 = icmp ugt i32 %71, %72, !dbg !7194
  br i1 %cmp59, label %do.body52, label %do.end61, !dbg !7195, !llvm.loop !7185

do.end61:                                         ; preds = %do.cond58
  %73 = load i32, i32* %p, align 4, !dbg !7197
  %74 = load i32, i32* %i.addr, align 4, !dbg !7198
  %sub62 = sub i32 %74, %73, !dbg !7198
  store i32 %sub62, i32* %i.addr, align 4, !dbg !7198
  %75 = load i32, i32* %k0, align 4, !dbg !7199
  %76 = load i32, i32* %K.addr, align 4, !dbg !7200
  %sub63 = sub i32 %75, %76, !dbg !7201
  %77 = load i32, i32* %s, align 4, !dbg !7202
  %add64 = add i32 %sub63, %77, !dbg !7203
  %78 = load i32, i32* %s, align 4, !dbg !7204
  %xor65 = xor i32 %add64, %78, !dbg !7205
  store i32 %xor65, i32* %val, align 4, !dbg !7206
  %79 = load i32, i32* %val, align 4, !dbg !7207
  %80 = load i32, i32* %val, align 4, !dbg !7208
  %mul66 = mul nsw i32 %79, %80, !dbg !7209
  %conv67 = sext i32 %mul66 to i64, !dbg !7207
  %81 = load i64, i64* %norm, align 8, !dbg !7210
  %add68 = add i64 %81, %conv67, !dbg !7210
  store i64 %add68, i64* %norm, align 8, !dbg !7210
  %82 = load i32, i32* %val, align 4, !dbg !7211
  %83 = load i32*, i32** %y.addr, align 8, !dbg !7212
  %incdec.ptr69 = getelementptr inbounds i32, i32* %83, i32 1, !dbg !7212
  store i32* %incdec.ptr69, i32** %y.addr, align 8, !dbg !7212
  store i32 %82, i32* %83, align 4, !dbg !7213
  br label %if.end70

if.end70:                                         ; preds = %do.end61, %if.then43
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.end
  %84 = load i32, i32* %N.addr, align 4, !dbg !7214
  %dec72 = add i32 %84, -1, !dbg !7214
  store i32 %dec72, i32* %N.addr, align 4, !dbg !7214
  br label %while.cond, !dbg !7215, !llvm.loop !7217

while.end:                                        ; preds = %while.cond
  %85 = load i32, i32* %K.addr, align 4, !dbg !7218
  %mul73 = mul i32 2, %85, !dbg !7219
  %add74 = add i32 %mul73, 1, !dbg !7220
  store i32 %add74, i32* %p, align 4, !dbg !7221
  %86 = load i32, i32* %i.addr, align 4, !dbg !7222
  %87 = load i32, i32* %p, align 4, !dbg !7223
  %cmp75 = icmp uge i32 %86, %87, !dbg !7224
  %conv76 = zext i1 %cmp75 to i32, !dbg !7224
  %sub77 = sub nsw i32 0, %conv76, !dbg !7225
  store i32 %sub77, i32* %s, align 4, !dbg !7226
  %88 = load i32, i32* %p, align 4, !dbg !7227
  %89 = load i32, i32* %s, align 4, !dbg !7228
  %and78 = and i32 %88, %89, !dbg !7229
  %90 = load i32, i32* %i.addr, align 4, !dbg !7230
  %sub79 = sub i32 %90, %and78, !dbg !7230
  store i32 %sub79, i32* %i.addr, align 4, !dbg !7230
  %91 = load i32, i32* %K.addr, align 4, !dbg !7231
  store i32 %91, i32* %k0, align 4, !dbg !7232
  %92 = load i32, i32* %i.addr, align 4, !dbg !7233
  %add80 = add i32 %92, 1, !dbg !7234
  %div = udiv i32 %add80, 2, !dbg !7235
  store i32 %div, i32* %K.addr, align 4, !dbg !7236
  %93 = load i32, i32* %K.addr, align 4, !dbg !7237
  %tobool = icmp ne i32 %93, 0, !dbg !7237
  br i1 %tobool, label %if.then81, label %if.end85, !dbg !7239

if.then81:                                        ; preds = %while.end
  %94 = load i32, i32* %K.addr, align 4, !dbg !7240
  %mul82 = mul i32 2, %94, !dbg !7241
  %sub83 = sub i32 %mul82, 1, !dbg !7242
  %95 = load i32, i32* %i.addr, align 4, !dbg !7243
  %sub84 = sub i32 %95, %sub83, !dbg !7243
  store i32 %sub84, i32* %i.addr, align 4, !dbg !7243
  br label %if.end85, !dbg !7244

if.end85:                                         ; preds = %if.then81, %while.end
  %96 = load i32, i32* %k0, align 4, !dbg !7245
  %97 = load i32, i32* %K.addr, align 4, !dbg !7246
  %sub86 = sub i32 %96, %97, !dbg !7247
  %98 = load i32, i32* %s, align 4, !dbg !7248
  %add87 = add i32 %sub86, %98, !dbg !7249
  %99 = load i32, i32* %s, align 4, !dbg !7250
  %xor88 = xor i32 %add87, %99, !dbg !7251
  store i32 %xor88, i32* %val, align 4, !dbg !7252
  %100 = load i32, i32* %val, align 4, !dbg !7253
  %101 = load i32, i32* %val, align 4, !dbg !7254
  %mul89 = mul nsw i32 %100, %101, !dbg !7255
  %conv90 = sext i32 %mul89 to i64, !dbg !7253
  %102 = load i64, i64* %norm, align 8, !dbg !7256
  %add91 = add i64 %102, %conv90, !dbg !7256
  store i64 %add91, i64* %norm, align 8, !dbg !7256
  %103 = load i32, i32* %val, align 4, !dbg !7257
  %104 = load i32*, i32** %y.addr, align 8, !dbg !7258
  %incdec.ptr92 = getelementptr inbounds i32, i32* %104, i32 1, !dbg !7258
  store i32* %incdec.ptr92, i32** %y.addr, align 8, !dbg !7258
  store i32 %103, i32* %104, align 4, !dbg !7259
  %105 = load i32, i32* %i.addr, align 4, !dbg !7260
  %sub93 = sub i32 0, %105, !dbg !7261
  store i32 %sub93, i32* %s, align 4, !dbg !7262
  %106 = load i32, i32* %K.addr, align 4, !dbg !7263
  %107 = load i32, i32* %s, align 4, !dbg !7264
  %add94 = add i32 %106, %107, !dbg !7265
  %108 = load i32, i32* %s, align 4, !dbg !7266
  %xor95 = xor i32 %add94, %108, !dbg !7267
  store i32 %xor95, i32* %val, align 4, !dbg !7268
  %109 = load i32, i32* %val, align 4, !dbg !7269
  %110 = load i32, i32* %val, align 4, !dbg !7270
  %mul96 = mul nsw i32 %109, %110, !dbg !7271
  %conv97 = sext i32 %mul96 to i64, !dbg !7269
  %111 = load i64, i64* %norm, align 8, !dbg !7272
  %add98 = add i64 %111, %conv97, !dbg !7272
  store i64 %add98, i64* %norm, align 8, !dbg !7272
  %112 = load i32, i32* %val, align 4, !dbg !7273
  %113 = load i32*, i32** %y.addr, align 8, !dbg !7274
  store i32 %112, i32* %113, align 4, !dbg !7275
  %114 = load i64, i64* %norm, align 8, !dbg !7276
  ret i64 %114, !dbg !7277
}

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!916, !917}
!llvm.ident = !{!918}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !911)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--opus_pvq.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !24, !34, !494, !694, !711, !717, !747, !757, !781, !787, !805, !829, !848, !858, !866, !878, !887, !893, !897, !905}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 29, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!6 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!7 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!8 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!9 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!10 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!11 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!12 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!13 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!14 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!15 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!16 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!17 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!18 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!19 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!20 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!21 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!22 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!23 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !25, line: 199, size: 32, align: 32, elements: !26)
!25 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!26 = !{!27, !28, !29, !30, !31, !32, !33}
!27 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!28 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!29 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!30 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!31 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!32 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!33 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !35, line: 215, size: 32, align: 32, elements: !36)
!35 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493}
!37 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!38 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!39 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!40 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!41 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!42 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!43 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!44 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!45 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!46 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!47 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!48 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!49 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!50 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!51 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!52 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!53 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!54 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!55 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!56 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!57 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!58 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!59 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!60 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!61 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!62 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!63 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!64 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!65 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!66 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!67 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!68 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!69 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!70 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!71 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!72 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!73 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!75 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!76 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!77 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!78 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!79 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!80 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!81 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!82 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!83 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!84 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!85 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!86 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!87 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!88 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!89 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!90 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!92 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!93 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!94 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!95 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!96 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!97 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!98 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!99 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!100 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!101 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!102 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!103 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!104 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!105 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!106 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!107 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!108 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!109 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!110 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!111 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!112 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!113 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!114 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!115 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!116 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!117 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!118 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!119 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!120 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!121 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!122 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!123 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!124 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!125 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!126 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!127 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!128 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!130 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!131 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!132 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!133 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!134 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!135 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!136 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!137 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!138 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!139 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!140 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!141 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!142 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!143 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!144 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!145 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!146 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!147 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!148 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!149 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!150 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!151 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!152 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!154 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!155 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!156 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!157 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!158 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!159 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!160 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!161 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!162 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!163 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!164 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!165 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!166 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!167 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!168 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!169 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!170 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!171 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!172 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!173 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!174 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!175 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!176 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!177 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!178 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!179 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!180 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!181 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!182 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!183 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!184 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!185 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!186 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!187 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!188 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!189 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!190 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!191 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!192 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!193 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!194 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!195 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!196 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!197 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!198 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!199 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!200 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!201 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!202 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!203 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!204 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!205 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!206 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!207 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!208 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!209 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!210 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!211 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!212 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!213 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!214 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!215 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!216 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!217 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!218 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!219 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!221 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!223 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!224 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!225 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!226 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!227 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!228 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!229 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!230 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!231 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!232 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!233 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!234 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!235 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!236 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!237 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!238 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!239 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!240 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!241 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!242 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!243 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!244 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!245 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!246 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!247 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!248 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!249 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!250 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!251 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!252 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!253 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!254 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!255 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!256 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!257 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!258 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!259 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!260 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!261 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!262 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!263 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!264 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!265 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!266 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!267 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!268 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!269 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!270 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!271 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!272 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!273 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!276 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!277 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!278 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!279 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!280 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!281 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!282 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!283 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!284 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!285 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!286 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!287 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!288 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!290 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!291 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!292 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!293 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!294 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!295 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!300 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!310 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!311 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!312 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!313 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!314 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!315 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!316 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!317 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!318 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!319 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!320 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!321 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!322 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!323 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!324 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!325 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!326 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!327 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!328 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!329 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!330 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!331 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!351 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!352 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!353 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!354 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!356 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!357 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!358 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!359 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!360 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!361 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!362 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!363 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!364 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!365 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!366 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!367 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!368 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!369 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!370 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!371 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!372 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!373 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!374 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!375 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!376 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!378 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!379 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!380 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!381 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!382 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!383 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!384 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!385 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!386 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!388 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!389 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!390 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!391 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!392 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!393 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!394 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!395 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!396 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!397 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!398 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!399 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!400 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!401 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!402 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!403 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!406 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!407 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!408 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!409 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!410 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!411 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!412 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!413 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!414 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!415 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!416 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!417 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!418 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!419 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!420 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!421 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!422 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!423 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!424 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!425 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!426 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!427 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!428 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!429 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!430 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!431 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!432 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!433 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!434 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!435 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!436 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!437 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!438 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!439 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!440 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!441 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!442 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!443 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!444 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!445 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!446 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!447 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!448 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!449 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!450 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!452 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!453 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!454 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!455 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!456 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!457 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!458 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!460 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!461 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!462 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!463 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!464 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!465 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!466 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!467 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!468 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!469 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!470 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!471 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!472 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!473 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!474 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!475 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!477 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!478 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!479 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!480 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!481 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!482 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!483 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!484 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!485 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!486 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!487 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!488 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!489 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!490 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!491 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!492 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!493 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!494 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !495, line: 64, size: 32, align: 32, elements: !496)
!495 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!496 = !{!497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!497 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!498 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!499 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!500 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!501 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!502 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!503 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!504 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!505 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!506 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!507 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!508 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!509 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!510 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!511 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!512 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!513 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!514 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!515 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!516 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!517 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!518 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!519 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!520 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!521 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!522 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!523 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!524 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!525 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!526 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!527 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!529 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!530 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!531 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!532 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!533 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!534 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!535 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!536 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!537 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!540 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!541 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!542 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!543 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!544 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!545 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!546 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!547 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!548 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!549 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!550 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!552 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!553 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!555 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!556 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!557 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!558 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!559 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!562 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!563 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!564 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!565 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!566 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!567 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!574 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!575 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!576 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!577 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!578 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!579 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!580 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!582 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!583 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!596 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!597 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!598 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!599 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!600 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!601 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!602 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!603 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!604 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!605 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!606 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!607 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!608 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!609 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!610 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!611 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!615 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!616 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!617 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!618 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!619 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!620 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!621 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!622 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!623 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!624 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!625 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!626 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!627 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!628 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!629 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!630 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!631 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!632 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!633 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!637 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!640 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!641 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!642 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!643 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!644 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!645 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!646 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!648 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!649 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!650 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!651 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!652 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!653 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!654 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!655 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!660 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!661 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!662 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!663 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!664 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!665 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!666 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!667 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!668 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!669 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!670 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!671 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!672 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!673 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!674 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!675 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!676 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!677 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!678 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!679 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!680 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!681 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!682 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!683 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!684 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!685 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!686 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!689 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!690 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!691 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!692 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!693 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !695, line: 58, size: 32, align: 32, elements: !696)
!695 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!696 = !{!697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710}
!697 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!698 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!699 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!700 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!701 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!702 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!703 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!704 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!705 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!706 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!707 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!708 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!709 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!710 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !35, line: 3865, size: 32, align: 32, elements: !712)
!712 = !{!713, !714, !715, !716}
!713 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!714 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!715 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!716 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!717 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !35, line: 1175, size: 32, align: 32, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746}
!719 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!720 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!721 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!722 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!723 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!724 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!725 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!726 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!727 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!728 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!729 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!730 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!731 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!732 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!733 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!734 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!735 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!736 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!737 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!738 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!739 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!740 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!741 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!742 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!743 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!744 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!745 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!746 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !25, line: 272, size: 32, align: 32, elements: !748)
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756}
!749 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!750 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!751 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!752 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!753 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!754 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!755 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!756 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !758, line: 48, size: 32, align: 32, elements: !759)
!758 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780}
!760 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!761 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!762 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!763 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!764 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!765 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!766 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!767 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!768 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!769 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!770 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!771 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!772 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!773 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!774 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!775 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!776 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!777 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!778 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!779 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!780 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !495, line: 516, size: 32, align: 32, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!784 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!785 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!786 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!787 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !495, line: 440, size: 32, align: 32, elements: !788)
!788 = !{!789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!789 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!790 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!791 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!792 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!793 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!794 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!795 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!796 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!797 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!798 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!799 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!800 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!801 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!802 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!803 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!804 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !495, line: 464, size: 32, align: 32, elements: !806)
!806 = !{!807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828}
!807 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!808 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!809 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!810 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!811 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!812 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!813 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!814 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!815 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!816 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!817 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!818 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!819 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!820 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!821 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!822 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!823 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!824 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!825 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!826 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!827 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!828 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !495, line: 493, size: 32, align: 32, elements: !830)
!830 = !{!831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847}
!831 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!832 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!833 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!834 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!835 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!836 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!837 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!838 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!839 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!840 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!841 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!842 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!843 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!844 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!845 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!846 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!847 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !495, line: 538, size: 32, align: 32, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !856, !857}
!850 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!851 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!852 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!853 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!854 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!855 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!856 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!857 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !35, line: 1534, size: 32, align: 32, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865}
!860 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!861 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!862 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!863 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!864 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!865 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!866 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !35, line: 810, size: 32, align: 32, elements: !867)
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!868 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!869 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!870 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!871 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!872 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!873 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!874 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!875 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!876 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!877 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!878 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !35, line: 798, size: 32, align: 32, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !886}
!880 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!881 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!882 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!883 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!884 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!885 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!886 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fft_permutation_type", file: !888, line: 77, size: 32, align: 32, elements: !889)
!888 = !DIFile(filename: "libavcodec/fft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!889 = !{!890, !891, !892}
!890 = !DIEnumerator(name: "FF_FFT_PERM_DEFAULT", value: 0)
!891 = !DIEnumerator(name: "FF_FFT_PERM_SWAP_LSBS", value: 1)
!892 = !DIEnumerator(name: "FF_FFT_PERM_AVX", value: 2)
!893 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mdct_permutation_type", file: !888, line: 83, size: 32, align: 32, elements: !894)
!894 = !{!895, !896}
!895 = !DIEnumerator(name: "FF_MDCT_PERM_NONE", value: 0)
!896 = !DIEnumerator(name: "FF_MDCT_PERM_INTERLEAVE", value: 1)
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CeltBlockSize", file: !898, line: 56, size: 32, align: 32, elements: !899)
!898 = !DIFile(filename: "libavcodec/opus_celt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!899 = !{!900, !901, !902, !903, !904}
!900 = !DIEnumerator(name: "CELT_BLOCK_120", value: 0)
!901 = !DIEnumerator(name: "CELT_BLOCK_240", value: 1)
!902 = !DIEnumerator(name: "CELT_BLOCK_480", value: 2)
!903 = !DIEnumerator(name: "CELT_BLOCK_960", value: 3)
!904 = !DIEnumerator(name: "CELT_BLOCK_NB", value: 4)
!905 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "CeltSpread", file: !898, line: 49, size: 32, align: 32, elements: !906)
!906 = !{!907, !908, !909, !910}
!907 = !DIEnumerator(name: "CELT_SPREAD_NONE", value: 0)
!908 = !DIEnumerator(name: "CELT_SPREAD_LIGHT", value: 1)
!909 = !DIEnumerator(name: "CELT_SPREAD_NORMAL", value: 2)
!910 = !DIEnumerator(name: "CELT_SPREAD_AGGRESSIVE", value: 3)
!911 = !{!912, !913}
!912 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !914, line: 38, baseType: !915)
!914 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!915 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!916 = !{i32 2, !"Dwarf Version", i32 4}
!917 = !{i32 2, !"Debug Info Version", i32 3}
!918 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!919 = distinct !DISubprogram(name: "ff_celt_pvq_init", scope: !920, file: !920, line: 897, type: !921, isLocal: false, isDefinition: true, scopeLine: 898, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!920 = !DIFile(filename: "libavcodec/opus_pvq.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!921 = !DISubroutineType(types: !922)
!922 = !{!915, !923, !915}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64, align: 64)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64, align: 64)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "CeltPVQ", file: !898, line: 47, baseType: !926)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CeltPVQ", file: !927, line: 35, size: 16640, align: 256, elements: !928)
!927 = !DIFile(filename: "libavcodec/opus_pvq.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!928 = !{!929, !933, !935, !941}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "qcoeff", scope: !926, file: !927, line: 36, baseType: !930, size: 8192, align: 32)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 8192, align: 32, elements: !931)
!931 = !{!932}
!932 = !DISubrange(count: 256)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "hadamard_tmp", scope: !926, file: !927, line: 37, baseType: !934, size: 8192, align: 32, offset: 8192)
!934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 8192, align: 32, elements: !931)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "pvq_search", scope: !926, file: !927, line: 39, baseType: !936, size: 64, align: 64, offset: 16384)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64, align: 64)
!937 = !DISubroutineType(types: !938)
!938 = !{!912, !939, !940, !915, !915}
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64, align: 64)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64, align: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "quant_band", scope: !926, file: !927, line: 40, baseType: !942, size: 64, align: 64, offset: 16448)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64, align: 64)
!943 = !DISubroutineType(types: !944)
!944 = !{!945, !947, !948, !1751, !1029, !939, !939, !915, !915, !945, !939, !915, !939, !915, !912, !939, !915}
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !914, line: 51, baseType: !946)
!946 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64, align: 64)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64, align: 64)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "CeltFrame", file: !950, line: 82, baseType: !951)
!950 = !DIFile(filename: "libavcodec/opus.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CeltFrame", file: !898, line: 92, size: 275968, align: 256, elements: !952)
!952 = !{!953, !1549, !1630, !1673, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !951, file: !898, line: 94, baseType: !954, size: 64, align: 64)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64, align: 64)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !35, line: 3360, baseType: !956)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !35, line: 1556, size: 8448, align: 64, elements: !957)
!957 = !{!958, !1003, !1004, !1005, !1273, !1274, !1275, !1276, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1302, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1487, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !956, file: !35, line: 1561, baseType: !959, size: 64, align: 64)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64, align: 64)
!960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !961)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !4, line: 143, baseType: !962)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !4, line: 67, size: 640, align: 64, elements: !963)
!963 = !{!964, !968, !973, !977, !978, !979, !980, !984, !990, !992, !996}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !962, file: !4, line: 72, baseType: !965, size: 64, align: 64)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64, align: 64)
!966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !967)
!967 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !962, file: !4, line: 78, baseType: !969, size: 64, align: 64, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64, align: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{!965, !972}
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !962, file: !4, line: 85, baseType: !974, size: 64, align: 64, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64, align: 64)
!975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!976 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 85, flags: DIFlagFwdDecl)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !962, file: !4, line: 93, baseType: !915, size: 32, align: 32, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !962, file: !4, line: 99, baseType: !915, size: 32, align: 32, offset: 224)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !962, file: !4, line: 108, baseType: !915, size: 32, align: 32, offset: 256)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !962, file: !4, line: 113, baseType: !981, size: 64, align: 64, offset: 320)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64, align: 64)
!982 = !DISubroutineType(types: !983)
!983 = !{!972, !972, !972}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !962, file: !4, line: 123, baseType: !985, size: 64, align: 64, offset: 384)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64, align: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{!988, !988}
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !962)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !962, file: !4, line: 130, baseType: !991, size: 32, align: 32, offset: 448)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !4, line: 48, baseType: !3)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !962, file: !4, line: 136, baseType: !993, size: 64, align: 64, offset: 512)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64, align: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{!991, !972}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !962, file: !4, line: 142, baseType: !997, size: 64, align: 64, offset: 576)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64, align: 64)
!998 = !DISubroutineType(types: !999)
!999 = !{!915, !1000, !972, !965, !915}
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64, align: 64)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64, align: 64)
!1002 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 60, flags: DIFlagFwdDecl)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !956, file: !35, line: 1562, baseType: !915, size: 32, align: 32, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !956, file: !35, line: 1564, baseType: !24, size: 32, align: 32, offset: 96)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !956, file: !35, line: 1565, baseType: !1006, size: 64, align: 64, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64, align: 64)
!1007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1008)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !35, line: 3468, size: 1984, align: 64, elements: !1009)
!1009 = !{!1010, !1011, !1012, !1013, !1014, !1015, !1024, !1027, !1030, !1033, !1038, !1041, !1042, !1050, !1051, !1052, !1054, !1058, !1064, !1069, !1073, !1074, !1124, !1244, !1248, !1249, !1253, !1257, !1262, !1266, !1267, !1268}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1008, file: !35, line: 3475, baseType: !965, size: 64, align: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1008, file: !35, line: 3480, baseType: !965, size: 64, align: 64, offset: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1008, file: !35, line: 3481, baseType: !24, size: 32, align: 32, offset: 128)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1008, file: !35, line: 3482, baseType: !34, size: 32, align: 32, offset: 160)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1008, file: !35, line: 3487, baseType: !915, size: 32, align: 32, offset: 192)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !1008, file: !35, line: 3488, baseType: !1016, size: 64, align: 64, offset: 256)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64, align: 64)
!1017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1018)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !1019, line: 61, baseType: !1020)
!1019 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !1019, line: 58, size: 64, align: 32, elements: !1021)
!1021 = !{!1022, !1023}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1020, file: !1019, line: 59, baseType: !915, size: 32, align: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !1020, file: !1019, line: 60, baseType: !915, size: 32, align: 32, offset: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !1008, file: !35, line: 3489, baseType: !1025, size: 64, align: 64, offset: 320)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64, align: 64)
!1026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !1008, file: !35, line: 3490, baseType: !1028, size: 64, align: 64, offset: 384)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64, align: 64)
!1029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !915)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !1008, file: !35, line: 3491, baseType: !1031, size: 64, align: 64, offset: 448)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64, align: 64)
!1032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !1008, file: !35, line: 3492, baseType: !1034, size: 64, align: 64, offset: 512)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64, align: 64)
!1035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1036)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !914, line: 55, baseType: !1037)
!1037 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !1008, file: !35, line: 3493, baseType: !1039, size: 8, align: 8, offset: 576)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !914, line: 48, baseType: !1040)
!1040 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1008, file: !35, line: 3494, baseType: !959, size: 64, align: 64, offset: 640)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1008, file: !35, line: 3495, baseType: !1043, size: 64, align: 64, offset: 704)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64, align: 64)
!1044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1045)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !35, line: 3404, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !35, line: 3401, size: 128, align: 64, elements: !1047)
!1047 = !{!1048, !1049}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1046, file: !35, line: 3402, baseType: !915, size: 32, align: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1046, file: !35, line: 3403, baseType: !965, size: 64, align: 64, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !1008, file: !35, line: 3507, baseType: !965, size: 64, align: 64, offset: 768)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1008, file: !35, line: 3516, baseType: !915, size: 32, align: 32, offset: 832)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1008, file: !35, line: 3517, baseType: !1053, size: 64, align: 64, offset: 896)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64, align: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !1008, file: !35, line: 3527, baseType: !1055, size: 64, align: 64, offset: 960)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!915, !954}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !1008, file: !35, line: 3535, baseType: !1059, size: 64, align: 64, offset: 1024)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64, align: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!915, !954, !1062}
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64, align: 64)
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !1008, file: !35, line: 3541, baseType: !1065, size: 64, align: 64, offset: 1088)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64, align: 64)
!1066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1067)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !35, line: 3461, baseType: !1068)
!1068 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !35, line: 3461, flags: DIFlagFwdDecl)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !1008, file: !35, line: 3549, baseType: !1070, size: 64, align: 64, offset: 1152)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64, align: 64)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{null, !1053}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1008, file: !35, line: 3551, baseType: !1055, size: 64, align: 64, offset: 1216)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !1008, file: !35, line: 3552, baseType: !1075, size: 64, align: 64, offset: 1280)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!915, !954, !1078, !915, !1079}
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64, align: 64)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64, align: 64)
!1080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1081)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !35, line: 3920, size: 256, align: 64, elements: !1082)
!1082 = !{!1083, !1086, !1087, !1088, !1089, !1121}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1081, file: !35, line: 3921, baseType: !1084, size: 16, align: 16)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !914, line: 49, baseType: !1085)
!1085 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !1081, file: !35, line: 3922, baseType: !945, size: 32, align: 32, offset: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !1081, file: !35, line: 3923, baseType: !945, size: 32, align: 32, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !1081, file: !35, line: 3924, baseType: !946, size: 32, align: 32, offset: 96)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !1081, file: !35, line: 3925, baseType: !1090, size: 64, align: 64, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64, align: 64)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64, align: 64)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !35, line: 3918, baseType: !1093)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !35, line: 3885, size: 1600, align: 64, elements: !1094)
!1094 = !{!1095, !1096, !1097, !1098, !1099, !1100, !1110, !1114, !1116, !1117, !1119, !1120}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1093, file: !35, line: 3886, baseType: !915, size: 32, align: 32)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1093, file: !35, line: 3887, baseType: !915, size: 32, align: 32, offset: 32)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1093, file: !35, line: 3888, baseType: !915, size: 32, align: 32, offset: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1093, file: !35, line: 3889, baseType: !915, size: 32, align: 32, offset: 96)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !1093, file: !35, line: 3890, baseType: !915, size: 32, align: 32, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !1093, file: !35, line: 3897, baseType: !1101, size: 768, align: 64, offset: 192)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !35, line: 3858, baseType: !1102)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !35, line: 3853, size: 768, align: 64, elements: !1103)
!1103 = !{!1104, !1108}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1102, file: !35, line: 3855, baseType: !1105, size: 512, align: 64)
!1105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1078, size: 512, align: 64, elements: !1106)
!1106 = !{!1107}
!1107 = !DISubrange(count: 8)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1102, file: !35, line: 3857, baseType: !1109, size: 256, align: 32, offset: 512)
!1109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 256, align: 32, elements: !1106)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1093, file: !35, line: 3903, baseType: !1111, size: 256, align: 64, offset: 960)
!1111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1078, size: 256, align: 64, elements: !1112)
!1112 = !{!1113}
!1113 = !DISubrange(count: 4)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1093, file: !35, line: 3904, baseType: !1115, size: 128, align: 32, offset: 1216)
!1115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 128, align: 32, elements: !1112)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1093, file: !35, line: 3906, baseType: !711, size: 32, align: 32, offset: 1344)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1093, file: !35, line: 3908, baseType: !1118, size: 64, align: 64, offset: 1408)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64, align: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !1093, file: !35, line: 3915, baseType: !1118, size: 64, align: 64, offset: 1472)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1093, file: !35, line: 3917, baseType: !915, size: 32, align: 32, offset: 1536)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1081, file: !35, line: 3926, baseType: !1122, size: 64, align: 64, offset: 192)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !914, line: 40, baseType: !1123)
!1123 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !1008, file: !35, line: 3564, baseType: !1125, size: 64, align: 64, offset: 1344)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64, align: 64)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!915, !954, !1128, !1162, !940}
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64, align: 64)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !35, line: 1499, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !35, line: 1445, size: 704, align: 64, elements: !1131)
!1131 = !{!1132, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1158, !1159, !1160, !1161}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1130, file: !35, line: 1451, baseType: !1133, size: 64, align: 64)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64, align: 64)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1135, line: 94, baseType: !1136)
!1135 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1135, line: 81, size: 192, align: 64, elements: !1137)
!1137 = !{!1138, !1142, !1143}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1136, file: !1135, line: 82, baseType: !1139, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1135, line: 73, baseType: !1141)
!1141 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1135, line: 73, flags: DIFlagFwdDecl)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1136, file: !1135, line: 89, baseType: !1078, size: 64, align: 64, offset: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1136, file: !1135, line: 93, baseType: !915, size: 32, align: 32, offset: 128)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1130, file: !35, line: 1461, baseType: !1122, size: 64, align: 64, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1130, file: !35, line: 1467, baseType: !1122, size: 64, align: 64, offset: 128)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1130, file: !35, line: 1468, baseType: !1078, size: 64, align: 64, offset: 192)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1130, file: !35, line: 1469, baseType: !915, size: 32, align: 32, offset: 256)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1130, file: !35, line: 1470, baseType: !915, size: 32, align: 32, offset: 288)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1130, file: !35, line: 1474, baseType: !915, size: 32, align: 32, offset: 320)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1130, file: !35, line: 1479, baseType: !1151, size: 64, align: 64, offset: 384)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64, align: 64)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !35, line: 1415, baseType: !1153)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !35, line: 1411, size: 128, align: 64, elements: !1154)
!1154 = !{!1155, !1156, !1157}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1153, file: !35, line: 1412, baseType: !1078, size: 64, align: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1153, file: !35, line: 1413, baseType: !915, size: 32, align: 32, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1153, file: !35, line: 1414, baseType: !717, size: 32, align: 32, offset: 96)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1130, file: !35, line: 1480, baseType: !915, size: 32, align: 32, offset: 448)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1130, file: !35, line: 1486, baseType: !1122, size: 64, align: 64, offset: 512)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1130, file: !35, line: 1488, baseType: !1122, size: 64, align: 64, offset: 576)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1130, file: !35, line: 1497, baseType: !1122, size: 64, align: 64, offset: 640)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64, align: 64)
!1163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1164)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !758, line: 646, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !758, line: 268, size: 4288, align: 64, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1196, !1198, !1199, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1232, !1233, !1234, !1235, !1236, !1237, !1240, !1241, !1242, !1243}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1165, file: !758, line: 282, baseType: !1105, size: 512, align: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1165, file: !758, line: 299, baseType: !1109, size: 256, align: 32, offset: 512)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1165, file: !758, line: 315, baseType: !1170, size: 64, align: 64, offset: 768)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64, align: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1165, file: !758, line: 326, baseType: !915, size: 32, align: 32, offset: 832)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1165, file: !758, line: 326, baseType: !915, size: 32, align: 32, offset: 864)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1165, file: !758, line: 334, baseType: !915, size: 32, align: 32, offset: 896)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1165, file: !758, line: 341, baseType: !915, size: 32, align: 32, offset: 928)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1165, file: !758, line: 346, baseType: !915, size: 32, align: 32, offset: 960)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1165, file: !758, line: 351, baseType: !747, size: 32, align: 32, offset: 992)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1165, file: !758, line: 356, baseType: !1018, size: 64, align: 32, offset: 1024)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1165, file: !758, line: 361, baseType: !1122, size: 64, align: 64, offset: 1088)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1165, file: !758, line: 369, baseType: !1122, size: 64, align: 64, offset: 1152)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1165, file: !758, line: 377, baseType: !1122, size: 64, align: 64, offset: 1216)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1165, file: !758, line: 382, baseType: !915, size: 32, align: 32, offset: 1280)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1165, file: !758, line: 386, baseType: !915, size: 32, align: 32, offset: 1312)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1165, file: !758, line: 391, baseType: !915, size: 32, align: 32, offset: 1344)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1165, file: !758, line: 396, baseType: !972, size: 64, align: 64, offset: 1408)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1165, file: !758, line: 403, baseType: !1186, size: 512, align: 64, offset: 1472)
!1186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1036, size: 512, align: 64, elements: !1106)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1165, file: !758, line: 410, baseType: !915, size: 32, align: 32, offset: 1984)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1165, file: !758, line: 415, baseType: !915, size: 32, align: 32, offset: 2016)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1165, file: !758, line: 420, baseType: !915, size: 32, align: 32, offset: 2048)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1165, file: !758, line: 425, baseType: !915, size: 32, align: 32, offset: 2080)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1165, file: !758, line: 435, baseType: !1122, size: 64, align: 64, offset: 2112)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1165, file: !758, line: 440, baseType: !915, size: 32, align: 32, offset: 2176)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1165, file: !758, line: 445, baseType: !1036, size: 64, align: 64, offset: 2240)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1165, file: !758, line: 459, baseType: !1195, size: 512, align: 64, offset: 2304)
!1195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1133, size: 512, align: 64, elements: !1106)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1165, file: !758, line: 473, baseType: !1197, size: 64, align: 64, offset: 2816)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64, align: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1165, file: !758, line: 477, baseType: !915, size: 32, align: 32, offset: 2880)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1165, file: !758, line: 479, baseType: !1200, size: 64, align: 64, offset: 2944)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64, align: 64)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64, align: 64)
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !758, line: 207, baseType: !1203)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !758, line: 201, size: 320, align: 64, elements: !1204)
!1204 = !{!1205, !1206, !1207, !1208, !1213}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1203, file: !758, line: 202, baseType: !757, size: 32, align: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1203, file: !758, line: 203, baseType: !1078, size: 64, align: 64, offset: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1203, file: !758, line: 204, baseType: !915, size: 32, align: 32, offset: 128)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1203, file: !758, line: 205, baseType: !1209, size: 64, align: 64, offset: 192)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64, align: 64)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1211, line: 86, baseType: !1212)
!1211 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1212 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1211, line: 86, flags: DIFlagFwdDecl)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1203, file: !758, line: 206, baseType: !1133, size: 64, align: 64, offset: 256)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1165, file: !758, line: 480, baseType: !915, size: 32, align: 32, offset: 3008)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1165, file: !758, line: 505, baseType: !915, size: 32, align: 32, offset: 3040)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1165, file: !758, line: 512, baseType: !781, size: 32, align: 32, offset: 3072)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1165, file: !758, line: 514, baseType: !787, size: 32, align: 32, offset: 3104)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1165, file: !758, line: 516, baseType: !805, size: 32, align: 32, offset: 3136)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1165, file: !758, line: 523, baseType: !829, size: 32, align: 32, offset: 3168)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1165, file: !758, line: 525, baseType: !848, size: 32, align: 32, offset: 3200)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1165, file: !758, line: 532, baseType: !1122, size: 64, align: 64, offset: 3264)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1165, file: !758, line: 539, baseType: !1122, size: 64, align: 64, offset: 3328)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1165, file: !758, line: 547, baseType: !1122, size: 64, align: 64, offset: 3392)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1165, file: !758, line: 554, baseType: !1209, size: 64, align: 64, offset: 3456)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1165, file: !758, line: 563, baseType: !915, size: 32, align: 32, offset: 3520)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1165, file: !758, line: 572, baseType: !915, size: 32, align: 32, offset: 3552)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1165, file: !758, line: 581, baseType: !915, size: 32, align: 32, offset: 3584)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1165, file: !758, line: 588, baseType: !1229, size: 64, align: 64, offset: 3648)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64, align: 64)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !914, line: 36, baseType: !1231)
!1231 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1165, file: !758, line: 593, baseType: !915, size: 32, align: 32, offset: 3712)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1165, file: !758, line: 596, baseType: !915, size: 32, align: 32, offset: 3744)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1165, file: !758, line: 599, baseType: !1133, size: 64, align: 64, offset: 3776)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1165, file: !758, line: 605, baseType: !1133, size: 64, align: 64, offset: 3840)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1165, file: !758, line: 616, baseType: !1133, size: 64, align: 64, offset: 3904)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1165, file: !758, line: 626, baseType: !1238, size: 64, align: 64, offset: 3968)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1239, line: 216, baseType: !1037)
!1239 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1165, file: !758, line: 627, baseType: !1238, size: 64, align: 64, offset: 4032)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1165, file: !758, line: 628, baseType: !1238, size: 64, align: 64, offset: 4096)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1165, file: !758, line: 629, baseType: !1238, size: 64, align: 64, offset: 4160)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1165, file: !758, line: 645, baseType: !1133, size: 64, align: 64, offset: 4224)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !1008, file: !35, line: 3566, baseType: !1245, size: 64, align: 64, offset: 1408)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64, align: 64)
!1246 = !DISubroutineType(types: !1247)
!1247 = !{!915, !954, !972, !940, !1128}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1008, file: !35, line: 3567, baseType: !1055, size: 64, align: 64, offset: 1472)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !1008, file: !35, line: 3576, baseType: !1250, size: 64, align: 64, offset: 1536)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64, align: 64)
!1251 = !DISubroutineType(types: !1252)
!1252 = !{!915, !954, !1162}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !1008, file: !35, line: 3577, baseType: !1254, size: 64, align: 64, offset: 1600)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64, align: 64)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!915, !954, !1128}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !1008, file: !35, line: 3584, baseType: !1258, size: 64, align: 64, offset: 1664)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64, align: 64)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{!915, !954, !1261}
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1008, file: !35, line: 3589, baseType: !1263, size: 64, align: 64, offset: 1728)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64, align: 64)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{null, !954}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1008, file: !35, line: 3594, baseType: !915, size: 32, align: 32, offset: 1792)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1008, file: !35, line: 3600, baseType: !965, size: 64, align: 64, offset: 1856)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !1008, file: !35, line: 3609, baseType: !1269, size: 64, align: 64, offset: 1920)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64, align: 64)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64, align: 64)
!1271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1272)
!1272 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !35, line: 3609, flags: DIFlagFwdDecl)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !956, file: !35, line: 1566, baseType: !34, size: 32, align: 32, offset: 192)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !956, file: !35, line: 1581, baseType: !946, size: 32, align: 32, offset: 224)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !956, file: !35, line: 1583, baseType: !972, size: 64, align: 64, offset: 256)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !956, file: !35, line: 1591, baseType: !1277, size: 64, align: 64, offset: 320)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64, align: 64)
!1278 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !35, line: 1532, flags: DIFlagFwdDecl)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !956, file: !35, line: 1598, baseType: !972, size: 64, align: 64, offset: 384)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !956, file: !35, line: 1606, baseType: !1122, size: 64, align: 64, offset: 448)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !956, file: !35, line: 1614, baseType: !915, size: 32, align: 32, offset: 512)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !956, file: !35, line: 1622, baseType: !915, size: 32, align: 32, offset: 544)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !956, file: !35, line: 1628, baseType: !915, size: 32, align: 32, offset: 576)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !956, file: !35, line: 1636, baseType: !915, size: 32, align: 32, offset: 608)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !956, file: !35, line: 1643, baseType: !915, size: 32, align: 32, offset: 640)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !956, file: !35, line: 1657, baseType: !1078, size: 64, align: 64, offset: 704)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !956, file: !35, line: 1658, baseType: !915, size: 32, align: 32, offset: 768)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !956, file: !35, line: 1679, baseType: !1018, size: 64, align: 32, offset: 800)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !956, file: !35, line: 1688, baseType: !915, size: 32, align: 32, offset: 864)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !956, file: !35, line: 1712, baseType: !915, size: 32, align: 32, offset: 896)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !956, file: !35, line: 1729, baseType: !915, size: 32, align: 32, offset: 928)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !956, file: !35, line: 1729, baseType: !915, size: 32, align: 32, offset: 960)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !956, file: !35, line: 1744, baseType: !915, size: 32, align: 32, offset: 992)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !956, file: !35, line: 1744, baseType: !915, size: 32, align: 32, offset: 1024)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !956, file: !35, line: 1751, baseType: !915, size: 32, align: 32, offset: 1056)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !956, file: !35, line: 1766, baseType: !494, size: 32, align: 32, offset: 1088)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !956, file: !35, line: 1791, baseType: !1298, size: 64, align: 64, offset: 1152)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64, align: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{null, !1301, !1162, !940, !915, !915, !915}
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64, align: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !956, file: !35, line: 1808, baseType: !1303, size: 64, align: 64, offset: 1216)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64, align: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!494, !1301, !1025}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !956, file: !35, line: 1816, baseType: !915, size: 32, align: 32, offset: 1280)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !956, file: !35, line: 1825, baseType: !912, size: 32, align: 32, offset: 1312)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !956, file: !35, line: 1830, baseType: !915, size: 32, align: 32, offset: 1344)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !956, file: !35, line: 1838, baseType: !912, size: 32, align: 32, offset: 1376)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !956, file: !35, line: 1846, baseType: !915, size: 32, align: 32, offset: 1408)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !956, file: !35, line: 1851, baseType: !915, size: 32, align: 32, offset: 1440)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !956, file: !35, line: 1861, baseType: !912, size: 32, align: 32, offset: 1472)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !956, file: !35, line: 1868, baseType: !912, size: 32, align: 32, offset: 1504)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !956, file: !35, line: 1875, baseType: !912, size: 32, align: 32, offset: 1536)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !956, file: !35, line: 1882, baseType: !912, size: 32, align: 32, offset: 1568)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !956, file: !35, line: 1889, baseType: !912, size: 32, align: 32, offset: 1600)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !956, file: !35, line: 1896, baseType: !912, size: 32, align: 32, offset: 1632)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !956, file: !35, line: 1903, baseType: !912, size: 32, align: 32, offset: 1664)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !956, file: !35, line: 1910, baseType: !915, size: 32, align: 32, offset: 1696)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !956, file: !35, line: 1915, baseType: !915, size: 32, align: 32, offset: 1728)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !956, file: !35, line: 1926, baseType: !940, size: 64, align: 64, offset: 1792)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !956, file: !35, line: 1935, baseType: !1018, size: 64, align: 32, offset: 1856)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !956, file: !35, line: 1942, baseType: !915, size: 32, align: 32, offset: 1920)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !956, file: !35, line: 1948, baseType: !915, size: 32, align: 32, offset: 1952)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !956, file: !35, line: 1954, baseType: !915, size: 32, align: 32, offset: 1984)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !956, file: !35, line: 1960, baseType: !915, size: 32, align: 32, offset: 2016)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !956, file: !35, line: 1984, baseType: !915, size: 32, align: 32, offset: 2048)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !956, file: !35, line: 1991, baseType: !915, size: 32, align: 32, offset: 2080)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !956, file: !35, line: 1996, baseType: !915, size: 32, align: 32, offset: 2112)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !956, file: !35, line: 2004, baseType: !915, size: 32, align: 32, offset: 2144)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !956, file: !35, line: 2011, baseType: !915, size: 32, align: 32, offset: 2176)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !956, file: !35, line: 2018, baseType: !915, size: 32, align: 32, offset: 2208)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !956, file: !35, line: 2027, baseType: !915, size: 32, align: 32, offset: 2240)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !956, file: !35, line: 2034, baseType: !915, size: 32, align: 32, offset: 2272)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !956, file: !35, line: 2044, baseType: !915, size: 32, align: 32, offset: 2304)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !956, file: !35, line: 2054, baseType: !1337, size: 64, align: 64, offset: 2368)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64, align: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !956, file: !35, line: 2061, baseType: !1337, size: 64, align: 64, offset: 2432)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !956, file: !35, line: 2066, baseType: !915, size: 32, align: 32, offset: 2496)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !956, file: !35, line: 2070, baseType: !915, size: 32, align: 32, offset: 2528)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !956, file: !35, line: 2078, baseType: !915, size: 32, align: 32, offset: 2560)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !956, file: !35, line: 2085, baseType: !915, size: 32, align: 32, offset: 2592)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !956, file: !35, line: 2092, baseType: !915, size: 32, align: 32, offset: 2624)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !956, file: !35, line: 2099, baseType: !915, size: 32, align: 32, offset: 2656)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !956, file: !35, line: 2106, baseType: !915, size: 32, align: 32, offset: 2688)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !956, file: !35, line: 2113, baseType: !915, size: 32, align: 32, offset: 2720)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !956, file: !35, line: 2120, baseType: !915, size: 32, align: 32, offset: 2752)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !956, file: !35, line: 2125, baseType: !915, size: 32, align: 32, offset: 2784)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !956, file: !35, line: 2133, baseType: !915, size: 32, align: 32, offset: 2816)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !956, file: !35, line: 2140, baseType: !915, size: 32, align: 32, offset: 2848)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !956, file: !35, line: 2145, baseType: !915, size: 32, align: 32, offset: 2880)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !956, file: !35, line: 2153, baseType: !915, size: 32, align: 32, offset: 2912)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !956, file: !35, line: 2158, baseType: !915, size: 32, align: 32, offset: 2944)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !956, file: !35, line: 2166, baseType: !787, size: 32, align: 32, offset: 2976)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !956, file: !35, line: 2173, baseType: !805, size: 32, align: 32, offset: 3008)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !956, file: !35, line: 2180, baseType: !829, size: 32, align: 32, offset: 3040)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !956, file: !35, line: 2187, baseType: !781, size: 32, align: 32, offset: 3072)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !956, file: !35, line: 2194, baseType: !848, size: 32, align: 32, offset: 3104)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !956, file: !35, line: 2203, baseType: !915, size: 32, align: 32, offset: 3136)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !956, file: !35, line: 2209, baseType: !858, size: 32, align: 32, offset: 3168)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !956, file: !35, line: 2212, baseType: !915, size: 32, align: 32, offset: 3200)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !956, file: !35, line: 2213, baseType: !915, size: 32, align: 32, offset: 3232)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !956, file: !35, line: 2220, baseType: !694, size: 32, align: 32, offset: 3264)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !956, file: !35, line: 2232, baseType: !915, size: 32, align: 32, offset: 3296)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !956, file: !35, line: 2243, baseType: !915, size: 32, align: 32, offset: 3328)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !956, file: !35, line: 2249, baseType: !915, size: 32, align: 32, offset: 3360)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !956, file: !35, line: 2256, baseType: !915, size: 32, align: 32, offset: 3392)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !956, file: !35, line: 2263, baseType: !1036, size: 64, align: 64, offset: 3456)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !956, file: !35, line: 2270, baseType: !1036, size: 64, align: 64, offset: 3520)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !956, file: !35, line: 2277, baseType: !866, size: 32, align: 32, offset: 3584)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !956, file: !35, line: 2285, baseType: !694, size: 32, align: 32, offset: 3616)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !956, file: !35, line: 2367, baseType: !1373, size: 64, align: 64, offset: 3648)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64, align: 64)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!915, !1301, !1261, !915}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !956, file: !35, line: 2383, baseType: !915, size: 32, align: 32, offset: 3712)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !956, file: !35, line: 2386, baseType: !912, size: 32, align: 32, offset: 3744)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !956, file: !35, line: 2387, baseType: !912, size: 32, align: 32, offset: 3776)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !956, file: !35, line: 2394, baseType: !915, size: 32, align: 32, offset: 3808)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !956, file: !35, line: 2401, baseType: !915, size: 32, align: 32, offset: 3840)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !956, file: !35, line: 2408, baseType: !915, size: 32, align: 32, offset: 3872)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !956, file: !35, line: 2415, baseType: !915, size: 32, align: 32, offset: 3904)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !956, file: !35, line: 2422, baseType: !915, size: 32, align: 32, offset: 3936)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !956, file: !35, line: 2423, baseType: !1385, size: 64, align: 64, offset: 3968)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64, align: 64)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !35, line: 831, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !35, line: 826, size: 128, align: 32, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1387, file: !35, line: 827, baseType: !915, size: 32, align: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1387, file: !35, line: 828, baseType: !915, size: 32, align: 32, offset: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1387, file: !35, line: 829, baseType: !915, size: 32, align: 32, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1387, file: !35, line: 830, baseType: !912, size: 32, align: 32, offset: 96)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !956, file: !35, line: 2430, baseType: !1122, size: 64, align: 64, offset: 4032)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !956, file: !35, line: 2437, baseType: !1122, size: 64, align: 64, offset: 4096)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !956, file: !35, line: 2444, baseType: !912, size: 32, align: 32, offset: 4160)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !956, file: !35, line: 2451, baseType: !912, size: 32, align: 32, offset: 4192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !956, file: !35, line: 2458, baseType: !915, size: 32, align: 32, offset: 4224)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !956, file: !35, line: 2469, baseType: !915, size: 32, align: 32, offset: 4256)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !956, file: !35, line: 2475, baseType: !915, size: 32, align: 32, offset: 4288)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !956, file: !35, line: 2481, baseType: !915, size: 32, align: 32, offset: 4320)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !956, file: !35, line: 2485, baseType: !915, size: 32, align: 32, offset: 4352)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !956, file: !35, line: 2489, baseType: !915, size: 32, align: 32, offset: 4384)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !956, file: !35, line: 2493, baseType: !915, size: 32, align: 32, offset: 4416)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !956, file: !35, line: 2501, baseType: !915, size: 32, align: 32, offset: 4448)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !956, file: !35, line: 2506, baseType: !915, size: 32, align: 32, offset: 4480)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !956, file: !35, line: 2510, baseType: !915, size: 32, align: 32, offset: 4512)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !956, file: !35, line: 2514, baseType: !1122, size: 64, align: 64, offset: 4544)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !956, file: !35, line: 2528, baseType: !1409, size: 64, align: 64, offset: 4608)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64, align: 64)
!1410 = !DISubroutineType(types: !1411)
!1411 = !{null, !1301, !972, !915, !915}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !956, file: !35, line: 2534, baseType: !915, size: 32, align: 32, offset: 4672)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !956, file: !35, line: 2545, baseType: !915, size: 32, align: 32, offset: 4704)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !956, file: !35, line: 2547, baseType: !915, size: 32, align: 32, offset: 4736)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !956, file: !35, line: 2549, baseType: !915, size: 32, align: 32, offset: 4768)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !956, file: !35, line: 2551, baseType: !915, size: 32, align: 32, offset: 4800)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !956, file: !35, line: 2553, baseType: !915, size: 32, align: 32, offset: 4832)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !956, file: !35, line: 2555, baseType: !915, size: 32, align: 32, offset: 4864)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !956, file: !35, line: 2557, baseType: !915, size: 32, align: 32, offset: 4896)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !956, file: !35, line: 2559, baseType: !915, size: 32, align: 32, offset: 4928)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !956, file: !35, line: 2563, baseType: !915, size: 32, align: 32, offset: 4960)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !956, file: !35, line: 2571, baseType: !1118, size: 64, align: 64, offset: 4992)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !956, file: !35, line: 2579, baseType: !1118, size: 64, align: 64, offset: 5056)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !956, file: !35, line: 2586, baseType: !915, size: 32, align: 32, offset: 5120)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !956, file: !35, line: 2615, baseType: !915, size: 32, align: 32, offset: 5152)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !956, file: !35, line: 2627, baseType: !915, size: 32, align: 32, offset: 5184)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !956, file: !35, line: 2637, baseType: !915, size: 32, align: 32, offset: 5216)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !956, file: !35, line: 2681, baseType: !915, size: 32, align: 32, offset: 5248)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !956, file: !35, line: 2709, baseType: !1122, size: 64, align: 64, offset: 5312)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !956, file: !35, line: 2716, baseType: !1431, size: 64, align: 64, offset: 5376)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64, align: 64)
!1432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1433)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !35, line: 3636, size: 896, align: 64, elements: !1434)
!1434 = !{!1435, !1436, !1437, !1438, !1439, !1440, !1441, !1447, !1451, !1452, !1453, !1454, !1460, !1461, !1462, !1463, !1464}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1433, file: !35, line: 3642, baseType: !965, size: 64, align: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1433, file: !35, line: 3649, baseType: !24, size: 32, align: 32, offset: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1433, file: !35, line: 3656, baseType: !34, size: 32, align: 32, offset: 96)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1433, file: !35, line: 3663, baseType: !494, size: 32, align: 32, offset: 128)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1433, file: !35, line: 3669, baseType: !915, size: 32, align: 32, offset: 160)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1433, file: !35, line: 3682, baseType: !1258, size: 64, align: 64, offset: 192)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1433, file: !35, line: 3698, baseType: !1442, size: 64, align: 64, offset: 256)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64, align: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!915, !954, !1445, !945}
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64, align: 64)
!1446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1433, file: !35, line: 3712, baseType: !1448, size: 64, align: 64, offset: 320)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64, align: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!915, !954, !915, !1445, !945}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1433, file: !35, line: 3726, baseType: !1442, size: 64, align: 64, offset: 384)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1433, file: !35, line: 3737, baseType: !1055, size: 64, align: 64, offset: 448)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1433, file: !35, line: 3746, baseType: !915, size: 32, align: 32, offset: 512)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1433, file: !35, line: 3757, baseType: !1455, size: 64, align: 64, offset: 576)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64, align: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{null, !1458}
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64, align: 64)
!1459 = !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !35, line: 3617, flags: DIFlagFwdDecl)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1433, file: !35, line: 3766, baseType: !1055, size: 64, align: 64, offset: 640)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1433, file: !35, line: 3774, baseType: !1055, size: 64, align: 64, offset: 704)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1433, file: !35, line: 3780, baseType: !915, size: 32, align: 32, offset: 768)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1433, file: !35, line: 3785, baseType: !915, size: 32, align: 32, offset: 800)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1433, file: !35, line: 3795, baseType: !1465, size: 64, align: 64, offset: 832)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64, align: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!915, !954, !1133}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !956, file: !35, line: 2728, baseType: !972, size: 64, align: 64, offset: 5440)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !956, file: !35, line: 2735, baseType: !1186, size: 512, align: 64, offset: 5504)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !956, file: !35, line: 2742, baseType: !915, size: 32, align: 32, offset: 6016)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !956, file: !35, line: 2755, baseType: !915, size: 32, align: 32, offset: 6048)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !956, file: !35, line: 2776, baseType: !915, size: 32, align: 32, offset: 6080)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !956, file: !35, line: 2783, baseType: !915, size: 32, align: 32, offset: 6112)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !956, file: !35, line: 2791, baseType: !915, size: 32, align: 32, offset: 6144)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !956, file: !35, line: 2802, baseType: !1261, size: 64, align: 64, offset: 6208)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !956, file: !35, line: 2811, baseType: !915, size: 32, align: 32, offset: 6272)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !956, file: !35, line: 2821, baseType: !915, size: 32, align: 32, offset: 6304)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !956, file: !35, line: 2830, baseType: !915, size: 32, align: 32, offset: 6336)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !956, file: !35, line: 2840, baseType: !915, size: 32, align: 32, offset: 6368)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !956, file: !35, line: 2851, baseType: !1481, size: 64, align: 64, offset: 6400)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64, align: 64)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!915, !1301, !1484, !972, !940, !915, !915}
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64, align: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!915, !1301, !972}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !956, file: !35, line: 2871, baseType: !1488, size: 64, align: 64, offset: 6464)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64, align: 64)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!915, !1301, !1491, !972, !940, !915}
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64, align: 64)
!1492 = !DISubroutineType(types: !1493)
!1493 = !{!915, !1301, !972, !915, !915}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !956, file: !35, line: 2878, baseType: !915, size: 32, align: 32, offset: 6528)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !956, file: !35, line: 2885, baseType: !915, size: 32, align: 32, offset: 6560)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !956, file: !35, line: 3005, baseType: !915, size: 32, align: 32, offset: 6592)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !956, file: !35, line: 3013, baseType: !878, size: 32, align: 32, offset: 6624)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !956, file: !35, line: 3020, baseType: !878, size: 32, align: 32, offset: 6656)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !956, file: !35, line: 3027, baseType: !878, size: 32, align: 32, offset: 6688)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !956, file: !35, line: 3037, baseType: !1078, size: 64, align: 64, offset: 6720)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !956, file: !35, line: 3038, baseType: !915, size: 32, align: 32, offset: 6784)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !956, file: !35, line: 3050, baseType: !1036, size: 64, align: 64, offset: 6848)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !956, file: !35, line: 3065, baseType: !915, size: 32, align: 32, offset: 6912)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !956, file: !35, line: 3083, baseType: !915, size: 32, align: 32, offset: 6944)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !956, file: !35, line: 3092, baseType: !1018, size: 64, align: 32, offset: 6976)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !956, file: !35, line: 3099, baseType: !494, size: 32, align: 32, offset: 7040)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !956, file: !35, line: 3106, baseType: !1018, size: 64, align: 32, offset: 7072)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !956, file: !35, line: 3113, baseType: !1509, size: 64, align: 64, offset: 7168)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64, align: 64)
!1510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1511)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !35, line: 740, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !35, line: 712, size: 384, align: 64, elements: !1513)
!1513 = !{!1514, !1515, !1516, !1517, !1518, !1519, !1522}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1512, file: !35, line: 713, baseType: !34, size: 32, align: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1512, file: !35, line: 714, baseType: !24, size: 32, align: 32, offset: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1512, file: !35, line: 720, baseType: !965, size: 64, align: 64, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !1512, file: !35, line: 724, baseType: !965, size: 64, align: 64, offset: 128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !1512, file: !35, line: 728, baseType: !915, size: 32, align: 32, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !1512, file: !35, line: 734, baseType: !1520, size: 64, align: 64, offset: 256)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64, align: 64)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !965)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !1512, file: !35, line: 739, baseType: !1523, size: 64, align: 64, offset: 320)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64, align: 64)
!1524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1046)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !956, file: !35, line: 3129, baseType: !1122, size: 64, align: 64, offset: 7232)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !956, file: !35, line: 3130, baseType: !1122, size: 64, align: 64, offset: 7296)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !956, file: !35, line: 3131, baseType: !1122, size: 64, align: 64, offset: 7360)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !956, file: !35, line: 3132, baseType: !1122, size: 64, align: 64, offset: 7424)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !956, file: !35, line: 3139, baseType: !1118, size: 64, align: 64, offset: 7488)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !956, file: !35, line: 3147, baseType: !915, size: 32, align: 32, offset: 7552)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !956, file: !35, line: 3165, baseType: !915, size: 32, align: 32, offset: 7584)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !956, file: !35, line: 3172, baseType: !915, size: 32, align: 32, offset: 7616)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !956, file: !35, line: 3180, baseType: !915, size: 32, align: 32, offset: 7648)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !956, file: !35, line: 3191, baseType: !1337, size: 64, align: 64, offset: 7680)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !956, file: !35, line: 3199, baseType: !1078, size: 64, align: 64, offset: 7744)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !956, file: !35, line: 3207, baseType: !1118, size: 64, align: 64, offset: 7808)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !956, file: !35, line: 3214, baseType: !946, size: 32, align: 32, offset: 7872)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !956, file: !35, line: 3224, baseType: !1151, size: 64, align: 64, offset: 7936)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !956, file: !35, line: 3225, baseType: !915, size: 32, align: 32, offset: 8000)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !956, file: !35, line: 3249, baseType: !1133, size: 64, align: 64, offset: 8064)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !956, file: !35, line: 3256, baseType: !915, size: 32, align: 32, offset: 8128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !956, file: !35, line: 3271, baseType: !915, size: 32, align: 32, offset: 8160)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !956, file: !35, line: 3279, baseType: !1122, size: 64, align: 64, offset: 8192)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !956, file: !35, line: 3301, baseType: !1133, size: 64, align: 64, offset: 8256)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !956, file: !35, line: 3310, baseType: !915, size: 32, align: 32, offset: 8320)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !956, file: !35, line: 3337, baseType: !915, size: 32, align: 32, offset: 8352)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !956, file: !35, line: 3351, baseType: !915, size: 32, align: 32, offset: 8384)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !956, file: !35, line: 3359, baseType: !915, size: 32, align: 32, offset: 8416)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "imdct", scope: !951, file: !898, line: 95, baseType: !1550, size: 256, align: 64, offset: 64)
!1550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1551, size: 256, align: 64, elements: !1112)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64, align: 64)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDCT15Context", file: !1553, line: 54, baseType: !1554)
!1553 = !DIFile(filename: "libavcodec/mdct15.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDCT15Context", file: !1553, line: 28, size: 5632, align: 256, elements: !1555)
!1555 = !{!1556, !1557, !1558, !1559, !1560, !1561, !1562, !1607, !1608, !1609, !1613, !1618, !1622, !1629}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "fft_n", scope: !1554, file: !1553, line: 29, baseType: !915, size: 32, align: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "len2", scope: !1554, file: !1553, line: 30, baseType: !915, size: 32, align: 32, offset: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "len4", scope: !1554, file: !1553, line: 31, baseType: !915, size: 32, align: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1554, file: !1553, line: 32, baseType: !915, size: 32, align: 32, offset: 96)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "pfa_prereindex", scope: !1554, file: !1553, line: 33, baseType: !940, size: 64, align: 64, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "pfa_postreindex", scope: !1554, file: !1553, line: 34, baseType: !940, size: 64, align: 64, offset: 192)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "ptwo_fft", scope: !1554, file: !1553, line: 36, baseType: !1563, size: 896, align: 64, offset: 256)
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTContext", file: !1564, line: 41, baseType: !1565)
!1564 = !DIFile(filename: "libavcodec/avfft.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTContext", file: !888, line: 88, size: 896, align: 64, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1570, !1578, !1579, !1580, !1582, !1583, !1588, !1589, !1595, !1596, !1597, !1603, !1604, !1605}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "nbits", scope: !1565, file: !888, line: 89, baseType: !915, size: 32, align: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !1565, file: !888, line: 90, baseType: !915, size: 32, align: 32, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "revtab", scope: !1565, file: !888, line: 91, baseType: !1337, size: 64, align: 64, offset: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_buf", scope: !1565, file: !888, line: 92, baseType: !1571, size: 64, align: 64, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64, align: 64)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTComplex", file: !1564, line: 39, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFTComplex", file: !1564, line: 37, size: 64, align: 32, elements: !1574)
!1574 = !{!1575, !1577}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !1573, file: !1564, line: 38, baseType: !1576, size: 32, align: 32)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTSample", file: !1564, line: 35, baseType: !912)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1573, file: !1564, line: 38, baseType: !1576, size: 32, align: 32, offset: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_size", scope: !1565, file: !888, line: 93, baseType: !915, size: 32, align: 32, offset: 192)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_bits", scope: !1565, file: !888, line: 94, baseType: !915, size: 32, align: 32, offset: 224)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "tcos", scope: !1565, file: !888, line: 96, baseType: !1581, size: 64, align: 64, offset: 256)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64, align: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "tsin", scope: !1565, file: !888, line: 97, baseType: !1581, size: 64, align: 64, offset: 320)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permute", scope: !1565, file: !888, line: 101, baseType: !1584, size: 64, align: 64, offset: 384)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64, align: 64)
!1585 = !DISubroutineType(types: !1586)
!1586 = !{null, !1587, !1571}
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64, align: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "fft_calc", scope: !1565, file: !888, line: 106, baseType: !1584, size: 64, align: 64, offset: 448)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_calc", scope: !1565, file: !888, line: 107, baseType: !1590, size: 64, align: 64, offset: 512)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64, align: 64)
!1591 = !DISubroutineType(types: !1592)
!1592 = !{null, !1587, !1581, !1593}
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64, align: 64)
!1594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1565, file: !888, line: 108, baseType: !1590, size: 64, align: 64, offset: 576)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calc", scope: !1565, file: !888, line: 109, baseType: !1590, size: 64, align: 64, offset: 640)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_calcw", scope: !1565, file: !888, line: 110, baseType: !1598, size: 64, align: 64, offset: 704)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64, align: 64)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{null, !1587, !1601, !1593}
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64, align: 64)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "FFTDouble", file: !888, line: 43, baseType: !912)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "fft_permutation", scope: !1565, file: !888, line: 111, baseType: !887, size: 32, align: 32, offset: 768)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "mdct_permutation", scope: !1565, file: !888, line: 112, baseType: !893, size: 32, align: 32, offset: 800)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "revtab32", scope: !1565, file: !888, line: 113, baseType: !1606, size: 64, align: 64, offset: 832)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64, align: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1554, file: !1553, line: 37, baseType: !1571, size: 64, align: 64, offset: 1152)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "twiddle_exptab", scope: !1554, file: !1553, line: 38, baseType: !1571, size: 64, align: 64, offset: 1216)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "exptab", scope: !1554, file: !1553, line: 40, baseType: !1610, size: 4096, align: 32, offset: 1280)
!1610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1572, size: 4096, align: 32, elements: !1611)
!1611 = !{!1612}
!1612 = !DISubrange(count: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "fft15", scope: !1554, file: !1553, line: 43, baseType: !1614, size: 64, align: 64, offset: 5376)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64, align: 64)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{null, !1571, !1571, !1571, !1617}
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1239, line: 149, baseType: !1123)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "postreindex", scope: !1554, file: !1553, line: 46, baseType: !1619, size: 64, align: 64, offset: 5440)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64, align: 64)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{null, !1571, !1571, !1571, !940, !1617}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "mdct", scope: !1554, file: !1553, line: 49, baseType: !1623, size: 64, align: 64, offset: 5504)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64, align: 64)
!1624 = !DISubroutineType(types: !1625)
!1625 = !{null, !1626, !939, !1627, !1617}
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64, align: 64)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64, align: 64)
!1628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !912)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "imdct_half", scope: !1554, file: !1553, line: 52, baseType: !1623, size: 64, align: 64, offset: 5568)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !951, file: !898, line: 96, baseType: !1631, size: 64, align: 64, offset: 320)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64, align: 64)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFloatDSPContext", file: !1633, line: 192, baseType: !1634)
!1633 = !DIFile(filename: "./libavutil/float_dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFloatDSPContext", file: !1633, line: 24, size: 704, align: 64, elements: !1635)
!1635 = !{!1636, !1640, !1644, !1652, !1653, !1654, !1658, !1659, !1660, !1665, !1669}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul", scope: !1634, file: !1633, line: 38, baseType: !1637, size: 64, align: 64)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64, align: 64)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{null, !939, !1627, !1627, !915}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmac_scalar", scope: !1634, file: !1633, line: 54, baseType: !1641, size: 64, align: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64, align: 64)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{null, !939, !1627, !912, !915}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmac_scalar", scope: !1634, file: !1633, line: 70, baseType: !1645, size: 64, align: 64, offset: 128)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64, align: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{null, !1648, !1650, !1649, !915}
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64, align: 64)
!1649 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64, align: 64)
!1651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1649)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_scalar", scope: !1634, file: !1633, line: 85, baseType: !1641, size: 64, align: 64, offset: 192)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul_scalar", scope: !1634, file: !1633, line: 100, baseType: !1645, size: 64, align: 64, offset: 256)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_window", scope: !1634, file: !1633, line: 119, baseType: !1655, size: 64, align: 64, offset: 320)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64, align: 64)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{null, !939, !1627, !1627, !1627, !915}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_add", scope: !1634, file: !1633, line: 137, baseType: !1655, size: 64, align: 64, offset: 384)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "vector_fmul_reverse", scope: !1634, file: !1633, line: 154, baseType: !1637, size: 64, align: 64, offset: 448)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "butterflies_float", scope: !1634, file: !1633, line: 164, baseType: !1661, size: 64, align: 64, offset: 512)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64, align: 64)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{null, !1664, !1664, !915}
!1664 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !939)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "scalarproduct_float", scope: !1634, file: !1633, line: 175, baseType: !1666, size: 64, align: 64, offset: 576)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64, align: 64)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{!912, !1627, !1627, !915}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "vector_dmul", scope: !1634, file: !1633, line: 190, baseType: !1670, size: 64, align: 64, offset: 640)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64, align: 64)
!1671 = !DISubroutineType(types: !1672)
!1672 = !{null, !1648, !1650, !1650, !915}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !951, file: !898, line: 97, baseType: !1674, size: 270336, align: 256, offset: 512)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1675, size: 270336, align: 256, elements: !1713)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "CeltBlock", file: !898, line: 90, baseType: !1676)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CeltBlock", file: !898, line: 65, size: 135168, align: 256, elements: !1677)
!1677 = !{!1678, !1682, !1683, !1684, !1688, !1690, !1694, !1698, !1702, !1703, !1704, !1708, !1709, !1710, !1711, !1712}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !1676, file: !898, line: 66, baseType: !1679, size: 672, align: 32)
!1679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 672, align: 32, elements: !1680)
!1680 = !{!1681}
!1681 = !DISubrange(count: 21)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "lin_energy", scope: !1676, file: !898, line: 67, baseType: !1679, size: 672, align: 32, offset: 672)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "error_energy", scope: !1676, file: !898, line: 68, baseType: !1679, size: 672, align: 32, offset: 1344)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "prev_energy", scope: !1676, file: !898, line: 69, baseType: !1685, size: 1344, align: 32, offset: 2016)
!1685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 1344, align: 32, elements: !1686)
!1686 = !{!1687, !1681}
!1687 = !DISubrange(count: 2)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "collapse_masks", scope: !1676, file: !898, line: 71, baseType: !1689, size: 168, align: 8, offset: 3360)
!1689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 168, align: 8, elements: !1680)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1676, file: !898, line: 74, baseType: !1691, size: 65536, align: 32, offset: 3584)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 65536, align: 32, elements: !1692)
!1692 = !{!1693}
!1693 = !DISubrange(count: 2048)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "coeffs", scope: !1676, file: !898, line: 75, baseType: !1695, size: 30720, align: 32, offset: 69120)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 30720, align: 32, elements: !1696)
!1696 = !{!1697}
!1697 = !DISubrange(count: 960)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !1676, file: !898, line: 78, baseType: !1699, size: 4096, align: 32, offset: 99840)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 4096, align: 32, elements: !1700)
!1700 = !{!1701}
!1701 = !DISubrange(count: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1676, file: !898, line: 79, baseType: !1695, size: 30720, align: 32, offset: 103936)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "pf_period_new", scope: !1676, file: !898, line: 82, baseType: !915, size: 32, align: 32, offset: 134656)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "pf_gains_new", scope: !1676, file: !898, line: 83, baseType: !1705, size: 96, align: 32, offset: 134688)
!1705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 96, align: 32, elements: !1706)
!1706 = !{!1707}
!1707 = !DISubrange(count: 3)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "pf_period", scope: !1676, file: !898, line: 84, baseType: !915, size: 32, align: 32, offset: 134784)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "pf_gains", scope: !1676, file: !898, line: 85, baseType: !1705, size: 96, align: 32, offset: 134816)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "pf_period_old", scope: !1676, file: !898, line: 86, baseType: !915, size: 32, align: 32, offset: 134912)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "pf_gains_old", scope: !1676, file: !898, line: 87, baseType: !1705, size: 96, align: 32, offset: 134944)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "emph_coeff", scope: !1676, file: !898, line: 89, baseType: !912, size: 32, align: 32, offset: 135040)
!1713 = !{!1687}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "pvq", scope: !951, file: !898, line: 98, baseType: !924, size: 64, align: 64, offset: 270848)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !951, file: !898, line: 99, baseType: !915, size: 32, align: 32, offset: 270912)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "output_channels", scope: !951, file: !898, line: 100, baseType: !915, size: 32, align: 32, offset: 270944)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "apply_phase_inv", scope: !951, file: !898, line: 101, baseType: !915, size: 32, align: 32, offset: 270976)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !951, file: !898, line: 103, baseType: !897, size: 32, align: 32, offset: 271008)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "start_band", scope: !951, file: !898, line: 104, baseType: !915, size: 32, align: 32, offset: 271040)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "end_band", scope: !951, file: !898, line: 105, baseType: !915, size: 32, align: 32, offset: 271072)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "coded_bands", scope: !951, file: !898, line: 106, baseType: !915, size: 32, align: 32, offset: 271104)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "transient", scope: !951, file: !898, line: 107, baseType: !915, size: 32, align: 32, offset: 271136)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "pfilter", scope: !951, file: !898, line: 108, baseType: !915, size: 32, align: 32, offset: 271168)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "skip_band_floor", scope: !951, file: !898, line: 109, baseType: !915, size: 32, align: 32, offset: 271200)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "tf_select", scope: !951, file: !898, line: 110, baseType: !915, size: 32, align: 32, offset: 271232)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_trim", scope: !951, file: !898, line: 111, baseType: !915, size: 32, align: 32, offset: 271264)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_boost", scope: !951, file: !898, line: 112, baseType: !1728, size: 672, align: 32, offset: 271296)
!1728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 672, align: 32, elements: !1680)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !951, file: !898, line: 113, baseType: !915, size: 32, align: 32, offset: 271968)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "blocksize", scope: !951, file: !898, line: 114, baseType: !915, size: 32, align: 32, offset: 272000)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "silence", scope: !951, file: !898, line: 115, baseType: !915, size: 32, align: 32, offset: 272032)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "anticollapse_needed", scope: !951, file: !898, line: 116, baseType: !915, size: 32, align: 32, offset: 272064)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "anticollapse", scope: !951, file: !898, line: 117, baseType: !915, size: 32, align: 32, offset: 272096)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "intensity_stereo", scope: !951, file: !898, line: 118, baseType: !915, size: 32, align: 32, offset: 272128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "dual_stereo", scope: !951, file: !898, line: 119, baseType: !915, size: 32, align: 32, offset: 272160)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flushed", scope: !951, file: !898, line: 120, baseType: !915, size: 32, align: 32, offset: 272192)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !951, file: !898, line: 121, baseType: !945, size: 32, align: 32, offset: 272224)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !951, file: !898, line: 122, baseType: !905, size: 32, align: 32, offset: 272256)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "pf_octave", scope: !951, file: !898, line: 125, baseType: !915, size: 32, align: 32, offset: 272288)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "pf_period", scope: !951, file: !898, line: 126, baseType: !915, size: 32, align: 32, offset: 272320)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "pf_tapset", scope: !951, file: !898, line: 127, baseType: !915, size: 32, align: 32, offset: 272352)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pf_gain", scope: !951, file: !898, line: 128, baseType: !912, size: 32, align: 32, offset: 272384)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "framebits", scope: !951, file: !898, line: 131, baseType: !915, size: 32, align: 32, offset: 272416)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "remaining", scope: !951, file: !898, line: 132, baseType: !915, size: 32, align: 32, offset: 272448)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "remaining2", scope: !951, file: !898, line: 133, baseType: !915, size: 32, align: 32, offset: 272480)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !951, file: !898, line: 134, baseType: !1728, size: 672, align: 32, offset: 272512)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "fine_bits", scope: !951, file: !898, line: 135, baseType: !1728, size: 672, align: 32, offset: 273184)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "fine_priority", scope: !951, file: !898, line: 136, baseType: !1728, size: 672, align: 32, offset: 273856)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "pulses", scope: !951, file: !898, line: 137, baseType: !1728, size: 672, align: 32, offset: 274528)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "tf_change", scope: !951, file: !898, line: 138, baseType: !1728, size: 672, align: 32, offset: 275200)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64, align: 64)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "OpusRangeCoder", file: !1753, line: 55, baseType: !1754)
!1753 = !DIFile(filename: "libavcodec/opus_rc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OpusRangeCoder", file: !1753, line: 40, size: 11072, align: 64, elements: !1755)
!1755 = !{!1756, !1766, !1774, !1775, !1776, !1777, !1781, !1782, !1783, !1784}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1754, file: !1753, line: 41, baseType: !1757, size: 256, align: 64)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !1758, line: 70, baseType: !1759)
!1758 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !1758, line: 61, size: 256, align: 64, elements: !1760)
!1760 = !{!1761, !1762, !1763, !1764, !1765}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1759, file: !1758, line: 62, baseType: !1445, size: 64, align: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1759, file: !1758, line: 62, baseType: !1445, size: 64, align: 64, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1759, file: !1758, line: 67, baseType: !915, size: 32, align: 32, offset: 128)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1759, file: !1758, line: 68, baseType: !915, size: 32, align: 32, offset: 160)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !1759, file: !1758, line: 69, baseType: !915, size: 32, align: 32, offset: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1754, file: !1753, line: 42, baseType: !1767, size: 192, align: 64, offset: 256)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "RawBitsContext", file: !1753, line: 38, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RawBitsContext", file: !1753, line: 33, size: 192, align: 64, elements: !1769)
!1769 = !{!1770, !1771, !1772, !1773}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !1768, file: !1753, line: 34, baseType: !1445, size: 64, align: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1768, file: !1753, line: 35, baseType: !945, size: 32, align: 32, offset: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "cachelen", scope: !1768, file: !1753, line: 36, baseType: !945, size: 32, align: 32, offset: 96)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "cacheval", scope: !1768, file: !1753, line: 37, baseType: !945, size: 32, align: 32, offset: 128)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1754, file: !1753, line: 43, baseType: !945, size: 32, align: 32, offset: 448)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1754, file: !1753, line: 44, baseType: !945, size: 32, align: 32, offset: 480)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "total_bits", scope: !1754, file: !1753, line: 45, baseType: !945, size: 32, align: 32, offset: 512)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1754, file: !1753, line: 48, baseType: !1778, size: 10296, align: 8, offset: 544)
!1778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 10296, align: 8, elements: !1779)
!1779 = !{!1780}
!1780 = !DISubrange(count: 1287)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "rng_cur", scope: !1754, file: !1753, line: 49, baseType: !1078, size: 64, align: 64, offset: 10880)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !1754, file: !1753, line: 50, baseType: !915, size: 32, align: 32, offset: 10944)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !1754, file: !1753, line: 51, baseType: !915, size: 32, align: 32, offset: 10976)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "waste", scope: !1754, file: !1753, line: 54, baseType: !915, size: 32, align: 32, offset: 11008)
!1785 = !{}
!1786 = !DILocalVariable(name: "pvq", arg: 1, scope: !919, file: !920, line: 897, type: !923)
!1787 = !DIExpression()
!1788 = !DILocation(line: 897, column: 54, scope: !919)
!1789 = !DILocalVariable(name: "encode", arg: 2, scope: !919, file: !920, line: 897, type: !915)
!1790 = !DILocation(line: 897, column: 63, scope: !919)
!1791 = !DILocalVariable(name: "s", scope: !919, file: !920, line: 899, type: !924)
!1792 = !DILocation(line: 899, column: 14, scope: !919)
!1793 = !DILocation(line: 899, column: 18, scope: !919)
!1794 = !DILocation(line: 900, column: 10, scope: !1795)
!1795 = distinct !DILexicalBlock(scope: !919, file: !920, line: 900, column: 9)
!1796 = !DILocation(line: 900, column: 9, scope: !919)
!1797 = !DILocation(line: 901, column: 9, scope: !1795)
!1798 = !DILocation(line: 903, column: 5, scope: !919)
!1799 = !DILocation(line: 903, column: 8, scope: !919)
!1800 = !DILocation(line: 903, column: 19, scope: !919)
!1801 = !DILocation(line: 904, column: 21, scope: !919)
!1802 = !DILocation(line: 904, column: 5, scope: !919)
!1803 = !DILocation(line: 904, column: 8, scope: !919)
!1804 = !DILocation(line: 904, column: 19, scope: !919)
!1805 = !DILocation(line: 907, column: 30, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !919, file: !920, line: 906, column: 9)
!1807 = !DILocation(line: 907, column: 9, scope: !1806)
!1808 = !DILocation(line: 909, column: 12, scope: !919)
!1809 = !DILocation(line: 909, column: 6, scope: !919)
!1810 = !DILocation(line: 909, column: 10, scope: !919)
!1811 = !DILocation(line: 911, column: 5, scope: !919)
!1812 = !DILocation(line: 912, column: 1, scope: !919)
!1813 = distinct !DISubprogram(name: "ppp_pvq_search_c", scope: !920, file: !920, line: 366, type: !937, isLocal: true, isDefinition: true, scopeLine: 367, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!1814 = !DILocalVariable(name: "X", arg: 1, scope: !1813, file: !920, line: 366, type: !939)
!1815 = !DILocation(line: 366, column: 38, scope: !1813)
!1816 = !DILocalVariable(name: "y", arg: 2, scope: !1813, file: !920, line: 366, type: !940)
!1817 = !DILocation(line: 366, column: 46, scope: !1813)
!1818 = !DILocalVariable(name: "K", arg: 3, scope: !1813, file: !920, line: 366, type: !915)
!1819 = !DILocation(line: 366, column: 53, scope: !1813)
!1820 = !DILocalVariable(name: "N", arg: 4, scope: !1813, file: !920, line: 366, type: !915)
!1821 = !DILocation(line: 366, column: 60, scope: !1813)
!1822 = !DILocalVariable(name: "i", scope: !1813, file: !920, line: 368, type: !915)
!1823 = !DILocation(line: 368, column: 9, scope: !1813)
!1824 = !DILocalVariable(name: "y_norm", scope: !1813, file: !920, line: 368, type: !915)
!1825 = !DILocation(line: 368, column: 12, scope: !1813)
!1826 = !DILocalVariable(name: "res", scope: !1813, file: !920, line: 369, type: !912)
!1827 = !DILocation(line: 369, column: 11, scope: !1813)
!1828 = !DILocalVariable(name: "xy_norm", scope: !1813, file: !920, line: 369, type: !912)
!1829 = !DILocation(line: 369, column: 23, scope: !1813)
!1830 = !DILocation(line: 371, column: 12, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1813, file: !920, line: 371, column: 5)
!1832 = !DILocation(line: 371, column: 10, scope: !1831)
!1833 = !DILocation(line: 371, column: 17, scope: !1834)
!1834 = !DILexicalBlockFile(scope: !1835, file: !920, discriminator: 1)
!1835 = distinct !DILexicalBlock(scope: !1831, file: !920, line: 371, column: 5)
!1836 = !DILocation(line: 371, column: 21, scope: !1834)
!1837 = !DILocation(line: 371, column: 19, scope: !1834)
!1838 = !DILocation(line: 371, column: 5, scope: !1834)
!1839 = !DILocation(line: 372, column: 20, scope: !1835)
!1840 = !DILocation(line: 372, column: 18, scope: !1835)
!1841 = !DILocation(line: 372, column: 24, scope: !1835)
!1842 = !DILocation(line: 372, column: 17, scope: !1835)
!1843 = !DILocation(line: 372, column: 34, scope: !1834)
!1844 = !DILocation(line: 372, column: 32, scope: !1834)
!1845 = !DILocation(line: 372, column: 17, scope: !1834)
!1846 = !DILocation(line: 372, column: 45, scope: !1847)
!1847 = !DILexicalBlockFile(scope: !1835, file: !920, discriminator: 2)
!1848 = !DILocation(line: 372, column: 43, scope: !1847)
!1849 = !DILocation(line: 372, column: 41, scope: !1847)
!1850 = !DILocation(line: 372, column: 17, scope: !1847)
!1851 = !DILocation(line: 372, column: 17, scope: !1852)
!1852 = !DILexicalBlockFile(scope: !1835, file: !920, discriminator: 3)
!1853 = !DILocation(line: 372, column: 13, scope: !1852)
!1854 = !DILocation(line: 372, column: 9, scope: !1852)
!1855 = !DILocation(line: 371, column: 25, scope: !1847)
!1856 = !DILocation(line: 371, column: 5, scope: !1847)
!1857 = distinct !{!1857, !1858}
!1858 = !DILocation(line: 371, column: 5, scope: !1813)
!1859 = !DILocation(line: 374, column: 11, scope: !1813)
!1860 = !DILocation(line: 374, column: 14, scope: !1813)
!1861 = !DILocation(line: 374, column: 18, scope: !1813)
!1862 = !DILocation(line: 374, column: 12, scope: !1813)
!1863 = !DILocation(line: 374, column: 9, scope: !1813)
!1864 = !DILocation(line: 376, column: 12, scope: !1865)
!1865 = distinct !DILexicalBlock(scope: !1813, file: !920, line: 376, column: 5)
!1866 = !DILocation(line: 376, column: 10, scope: !1865)
!1867 = !DILocation(line: 376, column: 17, scope: !1868)
!1868 = !DILexicalBlockFile(scope: !1869, file: !920, discriminator: 1)
!1869 = distinct !DILexicalBlock(scope: !1865, file: !920, line: 376, column: 5)
!1870 = !DILocation(line: 376, column: 21, scope: !1868)
!1871 = !DILocation(line: 376, column: 19, scope: !1868)
!1872 = !DILocation(line: 376, column: 5, scope: !1868)
!1873 = !DILocation(line: 377, column: 23, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1869, file: !920, line: 376, column: 29)
!1875 = !DILocation(line: 377, column: 29, scope: !1874)
!1876 = !DILocation(line: 377, column: 27, scope: !1874)
!1877 = !DILocation(line: 377, column: 26, scope: !1874)
!1878 = !DILocation(line: 377, column: 16, scope: !1874)
!1879 = !DILocation(line: 377, column: 11, scope: !1874)
!1880 = !DILocation(line: 377, column: 9, scope: !1874)
!1881 = !DILocation(line: 377, column: 14, scope: !1874)
!1882 = !DILocation(line: 378, column: 21, scope: !1874)
!1883 = !DILocation(line: 378, column: 19, scope: !1874)
!1884 = !DILocation(line: 378, column: 26, scope: !1874)
!1885 = !DILocation(line: 378, column: 24, scope: !1874)
!1886 = !DILocation(line: 378, column: 23, scope: !1874)
!1887 = !DILocation(line: 378, column: 16, scope: !1874)
!1888 = !DILocation(line: 379, column: 22, scope: !1874)
!1889 = !DILocation(line: 379, column: 20, scope: !1874)
!1890 = !DILocation(line: 379, column: 27, scope: !1874)
!1891 = !DILocation(line: 379, column: 25, scope: !1874)
!1892 = !DILocation(line: 379, column: 24, scope: !1874)
!1893 = !DILocation(line: 379, column: 17, scope: !1874)
!1894 = !DILocation(line: 380, column: 18, scope: !1874)
!1895 = !DILocation(line: 380, column: 16, scope: !1874)
!1896 = !DILocation(line: 380, column: 22, scope: !1874)
!1897 = !DILocation(line: 380, column: 15, scope: !1874)
!1898 = !DILocation(line: 380, column: 32, scope: !1899)
!1899 = !DILexicalBlockFile(scope: !1874, file: !920, discriminator: 1)
!1900 = !DILocation(line: 380, column: 30, scope: !1899)
!1901 = !DILocation(line: 380, column: 15, scope: !1899)
!1902 = !DILocation(line: 380, column: 43, scope: !1903)
!1903 = !DILexicalBlockFile(scope: !1874, file: !920, discriminator: 2)
!1904 = !DILocation(line: 380, column: 41, scope: !1903)
!1905 = !DILocation(line: 380, column: 39, scope: !1903)
!1906 = !DILocation(line: 380, column: 15, scope: !1903)
!1907 = !DILocation(line: 380, column: 15, scope: !1908)
!1908 = !DILexicalBlockFile(scope: !1874, file: !920, discriminator: 3)
!1909 = !DILocation(line: 380, column: 11, scope: !1908)
!1910 = !DILocation(line: 381, column: 5, scope: !1874)
!1911 = !DILocation(line: 376, column: 25, scope: !1912)
!1912 = !DILexicalBlockFile(scope: !1869, file: !920, discriminator: 2)
!1913 = !DILocation(line: 376, column: 5, scope: !1912)
!1914 = distinct !{!1914, !1915}
!1915 = !DILocation(line: 376, column: 5, scope: !1813)
!1916 = !DILocation(line: 383, column: 5, scope: !1813)
!1917 = !DILocation(line: 383, column: 12, scope: !1918)
!1918 = !DILexicalBlockFile(scope: !1813, file: !920, discriminator: 1)
!1919 = !DILocation(line: 383, column: 5, scope: !1918)
!1920 = !DILocalVariable(name: "max_idx", scope: !1921, file: !920, line: 384, type: !915)
!1921 = distinct !DILexicalBlock(scope: !1813, file: !920, line: 383, column: 15)
!1922 = !DILocation(line: 384, column: 13, scope: !1921)
!1923 = !DILocalVariable(name: "phase", scope: !1921, file: !920, line: 384, type: !915)
!1924 = !DILocation(line: 384, column: 26, scope: !1921)
!1925 = !DILocation(line: 384, column: 36, scope: !1921)
!1926 = !DILocation(line: 384, column: 39, scope: !1921)
!1927 = !DILocation(line: 384, column: 35, scope: !1921)
!1928 = !DILocalVariable(name: "max_num", scope: !1921, file: !920, line: 385, type: !912)
!1929 = !DILocation(line: 385, column: 15, scope: !1921)
!1930 = !DILocalVariable(name: "max_den", scope: !1921, file: !920, line: 386, type: !912)
!1931 = !DILocation(line: 386, column: 15, scope: !1921)
!1932 = !DILocation(line: 387, column: 16, scope: !1921)
!1933 = !DILocation(line: 389, column: 16, scope: !1934)
!1934 = distinct !DILexicalBlock(scope: !1921, file: !920, line: 389, column: 9)
!1935 = !DILocation(line: 389, column: 14, scope: !1934)
!1936 = !DILocation(line: 389, column: 21, scope: !1937)
!1937 = !DILexicalBlockFile(scope: !1938, file: !920, discriminator: 1)
!1938 = distinct !DILexicalBlock(scope: !1934, file: !920, line: 389, column: 9)
!1939 = !DILocation(line: 389, column: 25, scope: !1937)
!1940 = !DILocation(line: 389, column: 23, scope: !1937)
!1941 = !DILocation(line: 389, column: 9, scope: !1937)
!1942 = !DILocalVariable(name: "ca", scope: !1943, file: !920, line: 393, type: !1029)
!1943 = distinct !DILexicalBlock(scope: !1938, file: !920, line: 389, column: 33)
!1944 = !DILocation(line: 393, column: 23, scope: !1943)
!1945 = !DILocation(line: 393, column: 36, scope: !1943)
!1946 = !DILocation(line: 393, column: 34, scope: !1943)
!1947 = !DILocation(line: 393, column: 39, scope: !1943)
!1948 = !DILocation(line: 393, column: 48, scope: !1943)
!1949 = !DILocation(line: 393, column: 54, scope: !1943)
!1950 = !DILocation(line: 393, column: 45, scope: !1943)
!1951 = !DILocation(line: 393, column: 30, scope: !1943)
!1952 = !DILocalVariable(name: "y_new", scope: !1943, file: !920, line: 394, type: !1029)
!1953 = !DILocation(line: 394, column: 23, scope: !1943)
!1954 = !DILocation(line: 394, column: 31, scope: !1943)
!1955 = !DILocation(line: 394, column: 42, scope: !1943)
!1956 = !DILocation(line: 394, column: 41, scope: !1943)
!1957 = !DILocation(line: 394, column: 52, scope: !1943)
!1958 = !DILocation(line: 394, column: 50, scope: !1943)
!1959 = !DILocation(line: 394, column: 56, scope: !1943)
!1960 = !DILocation(line: 394, column: 49, scope: !1943)
!1961 = !DILocation(line: 394, column: 66, scope: !1962)
!1962 = !DILexicalBlockFile(scope: !1943, file: !920, discriminator: 1)
!1963 = !DILocation(line: 394, column: 64, scope: !1962)
!1964 = !DILocation(line: 394, column: 49, scope: !1962)
!1965 = !DILocation(line: 394, column: 77, scope: !1966)
!1966 = !DILexicalBlockFile(scope: !1943, file: !920, discriminator: 2)
!1967 = !DILocation(line: 394, column: 75, scope: !1966)
!1968 = !DILocation(line: 394, column: 73, scope: !1966)
!1969 = !DILocation(line: 394, column: 49, scope: !1966)
!1970 = !DILocation(line: 394, column: 49, scope: !1971)
!1971 = !DILexicalBlockFile(scope: !1943, file: !920, discriminator: 3)
!1972 = !DILocation(line: 394, column: 47, scope: !1971)
!1973 = !DILocation(line: 394, column: 38, scope: !1971)
!1974 = !DILocation(line: 394, column: 23, scope: !1971)
!1975 = !DILocalVariable(name: "xy_new", scope: !1943, file: !920, line: 395, type: !912)
!1976 = !DILocation(line: 395, column: 19, scope: !1943)
!1977 = !DILocation(line: 395, column: 28, scope: !1943)
!1978 = !DILocation(line: 395, column: 40, scope: !1943)
!1979 = !DILocation(line: 395, column: 39, scope: !1943)
!1980 = !DILocation(line: 395, column: 38, scope: !1943)
!1981 = !DILocation(line: 395, column: 50, scope: !1943)
!1982 = !DILocation(line: 395, column: 48, scope: !1943)
!1983 = !DILocation(line: 395, column: 54, scope: !1943)
!1984 = !DILocation(line: 395, column: 47, scope: !1943)
!1985 = !DILocation(line: 395, column: 64, scope: !1962)
!1986 = !DILocation(line: 395, column: 62, scope: !1962)
!1987 = !DILocation(line: 395, column: 47, scope: !1962)
!1988 = !DILocation(line: 395, column: 75, scope: !1966)
!1989 = !DILocation(line: 395, column: 73, scope: !1966)
!1990 = !DILocation(line: 395, column: 71, scope: !1966)
!1991 = !DILocation(line: 395, column: 47, scope: !1966)
!1992 = !DILocation(line: 395, column: 47, scope: !1971)
!1993 = !DILocation(line: 395, column: 45, scope: !1971)
!1994 = !DILocation(line: 395, column: 36, scope: !1971)
!1995 = !DILocation(line: 395, column: 19, scope: !1971)
!1996 = !DILocation(line: 396, column: 22, scope: !1943)
!1997 = !DILocation(line: 396, column: 31, scope: !1943)
!1998 = !DILocation(line: 396, column: 29, scope: !1943)
!1999 = !DILocation(line: 396, column: 20, scope: !1943)
!2000 = !DILocation(line: 397, column: 17, scope: !2001)
!2001 = distinct !DILexicalBlock(scope: !1943, file: !920, line: 397, column: 17)
!2002 = !DILocation(line: 397, column: 20, scope: !2001)
!2003 = !DILocation(line: 397, column: 24, scope: !2004)
!2004 = !DILexicalBlockFile(scope: !2001, file: !920, discriminator: 1)
!2005 = !DILocation(line: 397, column: 32, scope: !2004)
!2006 = !DILocation(line: 397, column: 31, scope: !2004)
!2007 = !DILocation(line: 397, column: 43, scope: !2004)
!2008 = !DILocation(line: 397, column: 49, scope: !2004)
!2009 = !DILocation(line: 397, column: 48, scope: !2004)
!2010 = !DILocation(line: 397, column: 40, scope: !2004)
!2011 = !DILocation(line: 397, column: 17, scope: !2004)
!2012 = !DILocation(line: 398, column: 27, scope: !2013)
!2013 = distinct !DILexicalBlock(scope: !2001, file: !920, line: 397, column: 59)
!2014 = !DILocation(line: 398, column: 25, scope: !2013)
!2015 = !DILocation(line: 399, column: 27, scope: !2013)
!2016 = !DILocation(line: 399, column: 25, scope: !2013)
!2017 = !DILocation(line: 400, column: 27, scope: !2013)
!2018 = !DILocation(line: 400, column: 25, scope: !2013)
!2019 = !DILocation(line: 401, column: 13, scope: !2013)
!2020 = !DILocation(line: 402, column: 9, scope: !1943)
!2021 = !DILocation(line: 389, column: 29, scope: !2022)
!2022 = !DILexicalBlockFile(scope: !1938, file: !920, discriminator: 2)
!2023 = !DILocation(line: 389, column: 9, scope: !2022)
!2024 = distinct !{!2024, !2025}
!2025 = !DILocation(line: 389, column: 9, scope: !1921)
!2026 = !DILocation(line: 404, column: 14, scope: !1921)
!2027 = !DILocation(line: 404, column: 11, scope: !1921)
!2028 = !DILocation(line: 406, column: 22, scope: !1921)
!2029 = !DILocation(line: 406, column: 20, scope: !1921)
!2030 = !DILocation(line: 406, column: 32, scope: !1921)
!2031 = !DILocation(line: 406, column: 19, scope: !1921)
!2032 = !DILocation(line: 406, column: 15, scope: !1921)
!2033 = !DILocation(line: 407, column: 22, scope: !1921)
!2034 = !DILocation(line: 407, column: 21, scope: !1921)
!2035 = !DILocation(line: 407, column: 20, scope: !1921)
!2036 = !DILocation(line: 407, column: 30, scope: !1921)
!2037 = !DILocation(line: 407, column: 28, scope: !1921)
!2038 = !DILocation(line: 407, column: 27, scope: !1921)
!2039 = !DILocation(line: 407, column: 17, scope: !1921)
!2040 = !DILocation(line: 408, column: 21, scope: !1921)
!2041 = !DILocation(line: 408, column: 20, scope: !1921)
!2042 = !DILocation(line: 408, column: 29, scope: !1921)
!2043 = !DILocation(line: 408, column: 27, scope: !1921)
!2044 = !DILocation(line: 408, column: 26, scope: !1921)
!2045 = !DILocation(line: 408, column: 16, scope: !1921)
!2046 = !DILocation(line: 409, column: 23, scope: !1921)
!2047 = !DILocation(line: 409, column: 11, scope: !1921)
!2048 = !DILocation(line: 409, column: 9, scope: !1921)
!2049 = !DILocation(line: 409, column: 20, scope: !1921)
!2050 = !DILocation(line: 383, column: 5, scope: !2051)
!2051 = !DILexicalBlockFile(scope: !1813, file: !920, discriminator: 2)
!2052 = distinct !{!2052, !1916}
!2053 = !DILocation(line: 412, column: 19, scope: !1813)
!2054 = !DILocation(line: 412, column: 12, scope: !1813)
!2055 = !DILocation(line: 412, column: 5, scope: !1813)
!2056 = distinct !DISubprogram(name: "pvq_encode_band", scope: !920, file: !920, line: 887, type: !943, isLocal: true, isDefinition: true, scopeLine: 888, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!2057 = !DILocalVariable(name: "f", arg: 1, scope: !2058, file: !898, line: 142, type: !948)
!2058 = distinct !DISubprogram(name: "celt_rng", scope: !898, file: !898, line: 142, type: !2059, isLocal: true, isDefinition: true, scopeLine: 143, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!2059 = !DISubroutineType(types: !2060)
!2060 = !{!945, !948}
!2061 = !DILocation(line: 142, column: 75, scope: !2058, inlinedAt: !2062)
!2062 = distinct !DILocation(line: 822, column: 48, scope: !2063, inlinedAt: !2077)
!2063 = distinct !DILexicalBlock(scope: !2064, file: !920, line: 820, column: 45)
!2064 = distinct !DILexicalBlock(scope: !2065, file: !920, line: 820, column: 21)
!2065 = distinct !DILexicalBlock(scope: !2066, file: !920, line: 820, column: 21)
!2066 = distinct !DILexicalBlock(scope: !2067, file: !920, line: 818, column: 24)
!2067 = distinct !DILexicalBlock(scope: !2068, file: !920, line: 813, column: 21)
!2068 = distinct !DILexicalBlock(scope: !2069, file: !920, line: 812, column: 23)
!2069 = distinct !DILexicalBlock(scope: !2070, file: !920, line: 812, column: 17)
!2070 = distinct !DILexicalBlock(scope: !2071, file: !920, line: 808, column: 16)
!2071 = distinct !DILexicalBlock(scope: !2072, file: !920, line: 799, column: 13)
!2072 = distinct !DILexicalBlock(scope: !2073, file: !920, line: 786, column: 12)
!2073 = distinct !DILexicalBlock(scope: !2074, file: !920, line: 582, column: 9)
!2074 = distinct !DISubprogram(name: "quant_band_template", scope: !920, file: !920, line: 481, type: !2075, isLocal: true, isDefinition: true, scopeLine: 490, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!2075 = !DISubroutineType(types: !2076)
!2076 = !{!945, !924, !948, !1751, !1029, !939, !939, !915, !915, !945, !939, !915, !939, !915, !912, !939, !915, !915}
!2077 = distinct !DILocation(line: 890, column: 12, scope: !2056)
!2078 = !DILocalVariable(name: "X", arg: 1, scope: !2079, file: !898, line: 148, type: !939)
!2079 = distinct !DISubprogram(name: "celt_renormalize_vector", scope: !898, file: !898, line: 148, type: !2080, isLocal: true, isDefinition: true, scopeLine: 149, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{null, !939, !915, !912}
!2082 = !DILocation(line: 148, column: 82, scope: !2079, inlinedAt: !2083)
!2083 = distinct !DILocation(line: 826, column: 17, scope: !2068, inlinedAt: !2077)
!2084 = !DILocalVariable(name: "N", arg: 2, scope: !2079, file: !898, line: 148, type: !915)
!2085 = !DILocation(line: 148, column: 89, scope: !2079, inlinedAt: !2083)
!2086 = !DILocalVariable(name: "gain", arg: 3, scope: !2079, file: !898, line: 148, type: !912)
!2087 = !DILocation(line: 148, column: 98, scope: !2079, inlinedAt: !2083)
!2088 = !DILocalVariable(name: "i", scope: !2079, file: !898, line: 150, type: !915)
!2089 = !DILocation(line: 150, column: 9, scope: !2079, inlinedAt: !2083)
!2090 = !DILocalVariable(name: "g", scope: !2079, file: !898, line: 151, type: !912)
!2091 = !DILocation(line: 151, column: 11, scope: !2079, inlinedAt: !2083)
!2092 = !DILocation(line: 142, column: 75, scope: !2058, inlinedAt: !2093)
!2093 = distinct !DILocation(line: 816, column: 43, scope: !2094, inlinedAt: !2077)
!2094 = distinct !DILexicalBlock(scope: !2095, file: !920, line: 815, column: 21)
!2095 = distinct !DILexicalBlock(scope: !2096, file: !920, line: 815, column: 21)
!2096 = distinct !DILexicalBlock(scope: !2067, file: !920, line: 813, column: 31)
!2097 = !DILocalVariable(name: "a", arg: 1, scope: !2098, file: !2099, line: 127, type: !915)
!2098 = distinct !DISubprogram(name: "av_clip_c", scope: !2099, file: !2099, line: 127, type: !2100, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!2099 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!915, !915, !915, !915}
!2102 = !DILocation(line: 127, column: 87, scope: !2098, inlinedAt: !2103)
!2103 = distinct !DILocation(line: 737, column: 21, scope: !2104, inlinedAt: !2077)
!2104 = distinct !DILexicalBlock(scope: !2105, file: !920, line: 718, column: 16)
!2105 = distinct !DILexicalBlock(scope: !2106, file: !920, line: 677, column: 13)
!2106 = distinct !DILexicalBlock(scope: !2073, file: !920, line: 582, column: 16)
!2107 = !DILocalVariable(name: "amin", arg: 2, scope: !2098, file: !2099, line: 127, type: !915)
!2108 = !DILocation(line: 127, column: 94, scope: !2098, inlinedAt: !2103)
!2109 = !DILocalVariable(name: "amax", arg: 3, scope: !2098, file: !2099, line: 127, type: !915)
!2110 = !DILocation(line: 127, column: 104, scope: !2098, inlinedAt: !2103)
!2111 = !DILocalVariable(name: "a", arg: 1, scope: !2112, file: !2099, line: 241, type: !946)
!2112 = distinct !DISubprogram(name: "av_mod_uintp2_c", scope: !2099, file: !2099, line: 241, type: !2113, isLocal: true, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{!946, !946, !946}
!2115 = !DILocation(line: 241, column: 103, scope: !2112, inlinedAt: !2116)
!2116 = distinct !DILocation(line: 656, column: 20, scope: !2117, inlinedAt: !2077)
!2117 = distinct !DILexicalBlock(scope: !2118, file: !920, line: 653, column: 26)
!2118 = distinct !DILexicalBlock(scope: !2106, file: !920, line: 653, column: 13)
!2119 = !DILocalVariable(name: "p", arg: 2, scope: !2112, file: !2099, line: 241, type: !946)
!2120 = !DILocation(line: 241, column: 115, scope: !2112, inlinedAt: !2116)
!2121 = !DILocalVariable(name: "rc", arg: 1, scope: !2122, file: !1753, line: 66, type: !2125)
!2122 = distinct !DISubprogram(name: "opus_rc_tell_frac", scope: !1753, file: !1753, line: 66, type: !2123, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{!945, !2125}
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64, align: 64)
!2126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1752)
!2127 = !DILocation(line: 66, column: 95, scope: !2122, inlinedAt: !2128)
!2128 = distinct !DILocation(line: 649, column: 18, scope: !2106, inlinedAt: !2077)
!2129 = !DILocalVariable(name: "i", scope: !2122, file: !1753, line: 68, type: !945)
!2130 = !DILocation(line: 68, column: 14, scope: !2122, inlinedAt: !2128)
!2131 = !DILocalVariable(name: "total_bits", scope: !2122, file: !1753, line: 68, type: !945)
!2132 = !DILocation(line: 68, column: 17, scope: !2122, inlinedAt: !2128)
!2133 = !DILocalVariable(name: "rcbuffer", scope: !2122, file: !1753, line: 68, type: !945)
!2134 = !DILocation(line: 68, column: 29, scope: !2122, inlinedAt: !2128)
!2135 = !DILocalVariable(name: "range", scope: !2122, file: !1753, line: 68, type: !945)
!2136 = !DILocation(line: 68, column: 39, scope: !2122, inlinedAt: !2128)
!2137 = !DILocalVariable(name: "bit", scope: !2138, file: !1753, line: 75, type: !915)
!2138 = distinct !DILexicalBlock(scope: !2139, file: !1753, line: 74, column: 29)
!2139 = distinct !DILexicalBlock(scope: !2140, file: !1753, line: 74, column: 5)
!2140 = distinct !DILexicalBlock(scope: !2122, file: !1753, line: 74, column: 5)
!2141 = !DILocation(line: 75, column: 13, scope: !2138, inlinedAt: !2128)
!2142 = !DILocation(line: 241, column: 103, scope: !2112, inlinedAt: !2143)
!2143 = distinct !DILocation(line: 871, column: 14, scope: !2144, inlinedAt: !2077)
!2144 = distinct !DILexicalBlock(scope: !2145, file: !920, line: 841, column: 28)
!2145 = distinct !DILexicalBlock(scope: !2146, file: !920, line: 841, column: 16)
!2146 = distinct !DILexicalBlock(scope: !2074, file: !920, line: 834, column: 9)
!2147 = !DILocation(line: 241, column: 115, scope: !2112, inlinedAt: !2143)
!2148 = !DILocation(line: 66, column: 95, scope: !2122, inlinedAt: !2149)
!2149 = distinct !DILocation(line: 598, column: 16, scope: !2106, inlinedAt: !2077)
!2150 = !DILocation(line: 68, column: 14, scope: !2122, inlinedAt: !2149)
!2151 = !DILocation(line: 68, column: 17, scope: !2122, inlinedAt: !2149)
!2152 = !DILocation(line: 68, column: 29, scope: !2122, inlinedAt: !2149)
!2153 = !DILocation(line: 68, column: 39, scope: !2122, inlinedAt: !2149)
!2154 = !DILocation(line: 75, column: 13, scope: !2138, inlinedAt: !2149)
!2155 = !DILocalVariable(name: "pvq", arg: 1, scope: !2074, file: !920, line: 481, type: !924)
!2156 = !DILocation(line: 481, column: 84, scope: !2074, inlinedAt: !2077)
!2157 = !DILocalVariable(name: "f", arg: 2, scope: !2074, file: !920, line: 481, type: !948)
!2158 = !DILocation(line: 481, column: 100, scope: !2074, inlinedAt: !2077)
!2159 = !DILocalVariable(name: "rc", arg: 3, scope: !2074, file: !920, line: 482, type: !1751)
!2160 = !DILocation(line: 482, column: 70, scope: !2074, inlinedAt: !2077)
!2161 = !DILocalVariable(name: "band", arg: 4, scope: !2074, file: !920, line: 483, type: !1029)
!2162 = !DILocation(line: 483, column: 64, scope: !2074, inlinedAt: !2077)
!2163 = !DILocalVariable(name: "X", arg: 5, scope: !2074, file: !920, line: 483, type: !939)
!2164 = !DILocation(line: 483, column: 77, scope: !2074, inlinedAt: !2077)
!2165 = !DILocalVariable(name: "Y", arg: 6, scope: !2074, file: !920, line: 484, type: !939)
!2166 = !DILocation(line: 484, column: 61, scope: !2074, inlinedAt: !2077)
!2167 = !DILocalVariable(name: "N", arg: 7, scope: !2074, file: !920, line: 484, type: !915)
!2168 = !DILocation(line: 484, column: 68, scope: !2074, inlinedAt: !2077)
!2169 = !DILocalVariable(name: "b", arg: 8, scope: !2074, file: !920, line: 484, type: !915)
!2170 = !DILocation(line: 484, column: 75, scope: !2074, inlinedAt: !2077)
!2171 = !DILocalVariable(name: "blocks", arg: 9, scope: !2074, file: !920, line: 485, type: !945)
!2172 = !DILocation(line: 485, column: 63, scope: !2074, inlinedAt: !2077)
!2173 = !DILocalVariable(name: "lowband", arg: 10, scope: !2074, file: !920, line: 485, type: !939)
!2174 = !DILocation(line: 485, column: 78, scope: !2074, inlinedAt: !2077)
!2175 = !DILocalVariable(name: "duration", arg: 11, scope: !2074, file: !920, line: 486, type: !915)
!2176 = !DILocation(line: 486, column: 58, scope: !2074, inlinedAt: !2077)
!2177 = !DILocalVariable(name: "lowband_out", arg: 12, scope: !2074, file: !920, line: 486, type: !939)
!2178 = !DILocation(line: 486, column: 75, scope: !2074, inlinedAt: !2077)
!2179 = !DILocalVariable(name: "level", arg: 13, scope: !2074, file: !920, line: 487, type: !915)
!2180 = !DILocation(line: 487, column: 58, scope: !2074, inlinedAt: !2077)
!2181 = !DILocalVariable(name: "gain", arg: 14, scope: !2074, file: !920, line: 487, type: !912)
!2182 = !DILocation(line: 487, column: 71, scope: !2074, inlinedAt: !2077)
!2183 = !DILocalVariable(name: "lowband_scratch", arg: 15, scope: !2074, file: !920, line: 488, type: !939)
!2184 = !DILocation(line: 488, column: 61, scope: !2074, inlinedAt: !2077)
!2185 = !DILocalVariable(name: "fill", arg: 16, scope: !2074, file: !920, line: 489, type: !915)
!2186 = !DILocation(line: 489, column: 58, scope: !2074, inlinedAt: !2077)
!2187 = !DILocalVariable(name: "quant", arg: 17, scope: !2074, file: !920, line: 489, type: !915)
!2188 = !DILocation(line: 489, column: 68, scope: !2074, inlinedAt: !2077)
!2189 = !DILocalVariable(name: "i", scope: !2074, file: !920, line: 491, type: !915)
!2190 = !DILocation(line: 491, column: 9, scope: !2074, inlinedAt: !2077)
!2191 = !DILocalVariable(name: "cache", scope: !2074, file: !920, line: 492, type: !1445)
!2192 = !DILocation(line: 492, column: 20, scope: !2074, inlinedAt: !2077)
!2193 = !DILocalVariable(name: "stereo", scope: !2074, file: !920, line: 493, type: !915)
!2194 = !DILocation(line: 493, column: 9, scope: !2074, inlinedAt: !2077)
!2195 = !DILocalVariable(name: "split", scope: !2074, file: !920, line: 493, type: !915)
!2196 = !DILocation(line: 493, column: 23, scope: !2074, inlinedAt: !2077)
!2197 = !DILocalVariable(name: "imid", scope: !2074, file: !920, line: 494, type: !915)
!2198 = !DILocation(line: 494, column: 9, scope: !2074, inlinedAt: !2077)
!2199 = !DILocalVariable(name: "iside", scope: !2074, file: !920, line: 494, type: !915)
!2200 = !DILocation(line: 494, column: 19, scope: !2074, inlinedAt: !2077)
!2201 = !DILocalVariable(name: "N0", scope: !2074, file: !920, line: 495, type: !945)
!2202 = !DILocation(line: 495, column: 14, scope: !2074, inlinedAt: !2077)
!2203 = !DILocalVariable(name: "N_B", scope: !2074, file: !920, line: 496, type: !915)
!2204 = !DILocation(line: 496, column: 9, scope: !2074, inlinedAt: !2077)
!2205 = !DILocalVariable(name: "N_B0", scope: !2074, file: !920, line: 497, type: !915)
!2206 = !DILocation(line: 497, column: 9, scope: !2074, inlinedAt: !2077)
!2207 = !DILocalVariable(name: "B0", scope: !2074, file: !920, line: 498, type: !915)
!2208 = !DILocation(line: 498, column: 9, scope: !2074, inlinedAt: !2077)
!2209 = !DILocalVariable(name: "time_divide", scope: !2074, file: !920, line: 499, type: !915)
!2210 = !DILocation(line: 499, column: 9, scope: !2074, inlinedAt: !2077)
!2211 = !DILocalVariable(name: "recombine", scope: !2074, file: !920, line: 500, type: !915)
!2212 = !DILocation(line: 500, column: 9, scope: !2074, inlinedAt: !2077)
!2213 = !DILocalVariable(name: "inv", scope: !2074, file: !920, line: 501, type: !915)
!2214 = !DILocation(line: 501, column: 9, scope: !2074, inlinedAt: !2077)
!2215 = !DILocalVariable(name: "mid", scope: !2074, file: !920, line: 502, type: !912)
!2216 = !DILocation(line: 502, column: 11, scope: !2074, inlinedAt: !2077)
!2217 = !DILocalVariable(name: "side", scope: !2074, file: !920, line: 502, type: !912)
!2218 = !DILocation(line: 502, column: 20, scope: !2074, inlinedAt: !2077)
!2219 = !DILocalVariable(name: "longblocks", scope: !2074, file: !920, line: 503, type: !915)
!2220 = !DILocation(line: 503, column: 9, scope: !2074, inlinedAt: !2077)
!2221 = !DILocalVariable(name: "cm", scope: !2074, file: !920, line: 504, type: !945)
!2222 = !DILocation(line: 504, column: 14, scope: !2074, inlinedAt: !2077)
!2223 = !DILocalVariable(name: "x", scope: !2224, file: !920, line: 507, type: !939)
!2224 = distinct !DILexicalBlock(scope: !2225, file: !920, line: 506, column: 17)
!2225 = distinct !DILexicalBlock(scope: !2074, file: !920, line: 506, column: 9)
!2226 = !DILocation(line: 507, column: 16, scope: !2224, inlinedAt: !2077)
!2227 = !DILocalVariable(name: "sign", scope: !2228, file: !920, line: 509, type: !915)
!2228 = distinct !DILexicalBlock(scope: !2229, file: !920, line: 508, column: 39)
!2229 = distinct !DILexicalBlock(scope: !2230, file: !920, line: 508, column: 9)
!2230 = distinct !DILexicalBlock(scope: !2224, file: !920, line: 508, column: 9)
!2231 = !DILocation(line: 509, column: 17, scope: !2228, inlinedAt: !2077)
!2232 = !DILocalVariable(name: "tf_change", scope: !2233, file: !920, line: 528, type: !915)
!2233 = distinct !DILexicalBlock(scope: !2234, file: !920, line: 527, column: 32)
!2234 = distinct !DILexicalBlock(scope: !2074, file: !920, line: 527, column: 9)
!2235 = !DILocation(line: 528, column: 13, scope: !2233, inlinedAt: !2077)
!2236 = !DILocalVariable(name: "k", scope: !2233, file: !920, line: 529, type: !915)
!2237 = !DILocation(line: 529, column: 13, scope: !2233, inlinedAt: !2077)
!2238 = !DILocalVariable(name: "qn", scope: !2106, file: !920, line: 583, type: !915)
!2239 = !DILocation(line: 583, column: 13, scope: !2106, inlinedAt: !2077)
!2240 = !DILocalVariable(name: "itheta", scope: !2106, file: !920, line: 584, type: !915)
!2241 = !DILocation(line: 584, column: 13, scope: !2106, inlinedAt: !2077)
!2242 = !DILocalVariable(name: "mbits", scope: !2106, file: !920, line: 585, type: !915)
!2243 = !DILocation(line: 585, column: 13, scope: !2106, inlinedAt: !2077)
!2244 = !DILocalVariable(name: "sbits", scope: !2106, file: !920, line: 585, type: !915)
!2245 = !DILocation(line: 585, column: 20, scope: !2106, inlinedAt: !2077)
!2246 = !DILocalVariable(name: "delta", scope: !2106, file: !920, line: 585, type: !915)
!2247 = !DILocation(line: 585, column: 27, scope: !2106, inlinedAt: !2077)
!2248 = !DILocalVariable(name: "qalloc", scope: !2106, file: !920, line: 586, type: !915)
!2249 = !DILocation(line: 586, column: 13, scope: !2106, inlinedAt: !2077)
!2250 = !DILocalVariable(name: "pulse_cap", scope: !2106, file: !920, line: 587, type: !915)
!2251 = !DILocation(line: 587, column: 13, scope: !2106, inlinedAt: !2077)
!2252 = !DILocalVariable(name: "offset", scope: !2106, file: !920, line: 588, type: !915)
!2253 = !DILocation(line: 588, column: 13, scope: !2106, inlinedAt: !2077)
!2254 = !DILocalVariable(name: "orig_fill", scope: !2106, file: !920, line: 589, type: !915)
!2255 = !DILocation(line: 589, column: 13, scope: !2106, inlinedAt: !2077)
!2256 = !DILocalVariable(name: "tell", scope: !2106, file: !920, line: 590, type: !915)
!2257 = !DILocation(line: 590, column: 13, scope: !2106, inlinedAt: !2077)
!2258 = !DILocalVariable(name: "c", scope: !2259, file: !920, line: 678, type: !915)
!2259 = distinct !DILexicalBlock(scope: !2105, file: !920, line: 677, column: 31)
!2260 = !DILocation(line: 678, column: 17, scope: !2259, inlinedAt: !2077)
!2261 = !DILocalVariable(name: "sign", scope: !2259, file: !920, line: 679, type: !915)
!2262 = !DILocation(line: 679, column: 17, scope: !2259, inlinedAt: !2077)
!2263 = !DILocalVariable(name: "tmp", scope: !2259, file: !920, line: 680, type: !912)
!2264 = !DILocation(line: 680, column: 19, scope: !2259, inlinedAt: !2077)
!2265 = !DILocalVariable(name: "x2", scope: !2259, file: !920, line: 681, type: !939)
!2266 = !DILocation(line: 681, column: 20, scope: !2259, inlinedAt: !2077)
!2267 = !DILocalVariable(name: "y2", scope: !2259, file: !920, line: 681, type: !939)
!2268 = !DILocation(line: 681, column: 25, scope: !2259, inlinedAt: !2077)
!2269 = !DILocalVariable(name: "next_lowband2", scope: !2104, file: !920, line: 720, type: !939)
!2270 = !DILocation(line: 720, column: 20, scope: !2104, inlinedAt: !2077)
!2271 = !DILocalVariable(name: "next_lowband_out1", scope: !2104, file: !920, line: 721, type: !939)
!2272 = !DILocation(line: 721, column: 20, scope: !2104, inlinedAt: !2077)
!2273 = !DILocalVariable(name: "next_level", scope: !2104, file: !920, line: 722, type: !915)
!2274 = !DILocation(line: 722, column: 17, scope: !2104, inlinedAt: !2077)
!2275 = !DILocalVariable(name: "rebalance", scope: !2104, file: !920, line: 723, type: !915)
!2276 = !DILocation(line: 723, column: 17, scope: !2104, inlinedAt: !2077)
!2277 = !DILocalVariable(name: "cmt", scope: !2104, file: !920, line: 724, type: !945)
!2278 = !DILocation(line: 724, column: 22, scope: !2104, inlinedAt: !2077)
!2279 = !DILocalVariable(name: "q", scope: !2072, file: !920, line: 788, type: !945)
!2280 = !DILocation(line: 788, column: 18, scope: !2072, inlinedAt: !2077)
!2281 = !DILocalVariable(name: "curr_bits", scope: !2072, file: !920, line: 789, type: !945)
!2282 = !DILocation(line: 789, column: 18, scope: !2072, inlinedAt: !2077)
!2283 = !DILocalVariable(name: "cm_mask", scope: !2070, file: !920, line: 810, type: !945)
!2284 = !DILocation(line: 810, column: 22, scope: !2070, inlinedAt: !2077)
!2285 = !DILocalVariable(name: "k", scope: !2144, file: !920, line: 842, type: !915)
!2286 = !DILocation(line: 842, column: 13, scope: !2144, inlinedAt: !2077)
!2287 = !DILocalVariable(name: "n", scope: !2288, file: !920, line: 867, type: !912)
!2288 = distinct !DILexicalBlock(scope: !2289, file: !920, line: 866, column: 26)
!2289 = distinct !DILexicalBlock(scope: !2144, file: !920, line: 866, column: 13)
!2290 = !DILocation(line: 867, column: 19, scope: !2288, inlinedAt: !2077)
!2291 = !DILocalVariable(name: "pvq", arg: 1, scope: !2056, file: !920, line: 887, type: !947)
!2292 = !DILocation(line: 887, column: 51, scope: !2056)
!2293 = !DILocalVariable(name: "f", arg: 2, scope: !2056, file: !920, line: 887, type: !948)
!2294 = !DILocation(line: 887, column: 67, scope: !2056)
!2295 = !DILocalVariable(name: "rc", arg: 3, scope: !2056, file: !920, line: 887, type: !1751)
!2296 = !DILocation(line: 887, column: 86, scope: !2056)
!2297 = !DILocalVariable(name: "band", arg: 4, scope: !2056, file: !920, line: 887, type: !1029)
!2298 = !DILocation(line: 887, column: 100, scope: !2056)
!2299 = !DILocalVariable(name: "X", arg: 5, scope: !2056, file: !920, line: 887, type: !939)
!2300 = !DILocation(line: 887, column: 113, scope: !2056)
!2301 = !DILocalVariable(name: "Y", arg: 6, scope: !2056, file: !920, line: 887, type: !939)
!2302 = !DILocation(line: 887, column: 123, scope: !2056)
!2303 = !DILocalVariable(name: "N", arg: 7, scope: !2056, file: !920, line: 887, type: !915)
!2304 = !DILocation(line: 887, column: 130, scope: !2056)
!2305 = !DILocalVariable(name: "b", arg: 8, scope: !2056, file: !920, line: 887, type: !915)
!2306 = !DILocation(line: 887, column: 137, scope: !2056)
!2307 = !DILocalVariable(name: "blocks", arg: 9, scope: !2056, file: !920, line: 887, type: !945)
!2308 = !DILocation(line: 887, column: 149, scope: !2056)
!2309 = !DILocalVariable(name: "lowband", arg: 10, scope: !2056, file: !920, line: 887, type: !939)
!2310 = !DILocation(line: 887, column: 164, scope: !2056)
!2311 = !DILocalVariable(name: "duration", arg: 11, scope: !2056, file: !920, line: 887, type: !915)
!2312 = !DILocation(line: 887, column: 177, scope: !2056)
!2313 = !DILocalVariable(name: "lowband_out", arg: 12, scope: !2056, file: !920, line: 887, type: !939)
!2314 = !DILocation(line: 887, column: 194, scope: !2056)
!2315 = !DILocalVariable(name: "level", arg: 13, scope: !2056, file: !920, line: 887, type: !915)
!2316 = !DILocation(line: 887, column: 211, scope: !2056)
!2317 = !DILocalVariable(name: "gain", arg: 14, scope: !2056, file: !920, line: 887, type: !912)
!2318 = !DILocation(line: 887, column: 224, scope: !2056)
!2319 = !DILocalVariable(name: "lowband_scratch", arg: 15, scope: !2056, file: !920, line: 887, type: !939)
!2320 = !DILocation(line: 887, column: 237, scope: !2056)
!2321 = !DILocalVariable(name: "fill", arg: 16, scope: !2056, file: !920, line: 887, type: !915)
!2322 = !DILocation(line: 887, column: 258, scope: !2056)
!2323 = !DILocation(line: 890, column: 32, scope: !2056)
!2324 = !DILocation(line: 890, column: 37, scope: !2056)
!2325 = !DILocation(line: 890, column: 40, scope: !2056)
!2326 = !DILocation(line: 890, column: 44, scope: !2056)
!2327 = !DILocation(line: 890, column: 50, scope: !2056)
!2328 = !DILocation(line: 890, column: 53, scope: !2056)
!2329 = !DILocation(line: 890, column: 56, scope: !2056)
!2330 = !DILocation(line: 890, column: 59, scope: !2056)
!2331 = !DILocation(line: 890, column: 62, scope: !2056)
!2332 = !DILocation(line: 890, column: 70, scope: !2056)
!2333 = !DILocation(line: 890, column: 79, scope: !2056)
!2334 = !DILocation(line: 891, column: 32, scope: !2056)
!2335 = !DILocation(line: 891, column: 45, scope: !2056)
!2336 = !DILocation(line: 891, column: 52, scope: !2056)
!2337 = !DILocation(line: 891, column: 58, scope: !2056)
!2338 = !DILocation(line: 891, column: 75, scope: !2056)
!2339 = !DILocation(line: 890, column: 12, scope: !2056)
!2340 = !DILocation(line: 493, column: 20, scope: !2074, inlinedAt: !2077)
!2341 = !DILocation(line: 493, column: 19, scope: !2074, inlinedAt: !2077)
!2342 = !DILocation(line: 493, column: 18, scope: !2074, inlinedAt: !2077)
!2343 = !DILocation(line: 493, column: 31, scope: !2074, inlinedAt: !2077)
!2344 = !DILocation(line: 495, column: 19, scope: !2074, inlinedAt: !2077)
!2345 = !DILocation(line: 496, column: 15, scope: !2074, inlinedAt: !2077)
!2346 = !DILocation(line: 496, column: 19, scope: !2074, inlinedAt: !2077)
!2347 = !DILocation(line: 496, column: 17, scope: !2074, inlinedAt: !2077)
!2348 = !DILocation(line: 497, column: 16, scope: !2074, inlinedAt: !2077)
!2349 = !DILocation(line: 498, column: 14, scope: !2074, inlinedAt: !2077)
!2350 = !DILocation(line: 503, column: 23, scope: !2074, inlinedAt: !2077)
!2351 = !DILocation(line: 503, column: 26, scope: !2074, inlinedAt: !2077)
!2352 = !DILocation(line: 506, column: 9, scope: !2225, inlinedAt: !2077)
!2353 = !DILocation(line: 506, column: 11, scope: !2225, inlinedAt: !2077)
!2354 = !DILocation(line: 506, column: 9, scope: !2074, inlinedAt: !2077)
!2355 = !DILocation(line: 507, column: 20, scope: !2224, inlinedAt: !2077)
!2356 = !DILocation(line: 508, column: 16, scope: !2230, inlinedAt: !2077)
!2357 = !DILocation(line: 508, column: 14, scope: !2230, inlinedAt: !2077)
!2358 = !DILocation(line: 508, column: 21, scope: !2359, inlinedAt: !2077)
!2359 = !DILexicalBlockFile(scope: !2229, file: !920, discriminator: 1)
!2360 = !DILocation(line: 508, column: 26, scope: !2359, inlinedAt: !2077)
!2361 = !DILocation(line: 508, column: 23, scope: !2359, inlinedAt: !2077)
!2362 = !DILocation(line: 508, column: 9, scope: !2359, inlinedAt: !2077)
!2363 = !DILocation(line: 510, column: 17, scope: !2364, inlinedAt: !2077)
!2364 = distinct !DILexicalBlock(scope: !2228, file: !920, line: 510, column: 17)
!2365 = !DILocation(line: 510, column: 20, scope: !2364, inlinedAt: !2077)
!2366 = !DILocation(line: 510, column: 31, scope: !2364, inlinedAt: !2077)
!2367 = !DILocation(line: 510, column: 17, scope: !2228, inlinedAt: !2077)
!2368 = !DILocation(line: 511, column: 21, scope: !2369, inlinedAt: !2077)
!2369 = distinct !DILexicalBlock(scope: !2370, file: !920, line: 511, column: 21)
!2370 = distinct !DILexicalBlock(scope: !2364, file: !920, line: 510, column: 42)
!2371 = !DILocation(line: 511, column: 21, scope: !2370, inlinedAt: !2077)
!2372 = !DILocation(line: 512, column: 28, scope: !2373, inlinedAt: !2077)
!2373 = distinct !DILexicalBlock(scope: !2369, file: !920, line: 511, column: 28)
!2374 = !DILocation(line: 512, column: 33, scope: !2373, inlinedAt: !2077)
!2375 = !DILocation(line: 512, column: 26, scope: !2373, inlinedAt: !2077)
!2376 = !DILocation(line: 513, column: 40, scope: !2373, inlinedAt: !2077)
!2377 = !DILocation(line: 513, column: 44, scope: !2373, inlinedAt: !2077)
!2378 = !DILocation(line: 513, column: 21, scope: !2373, inlinedAt: !2077)
!2379 = !DILocation(line: 514, column: 17, scope: !2373, inlinedAt: !2077)
!2380 = !DILocation(line: 515, column: 47, scope: !2381, inlinedAt: !2077)
!2381 = distinct !DILexicalBlock(scope: !2369, file: !920, line: 514, column: 24)
!2382 = !DILocation(line: 515, column: 28, scope: !2381, inlinedAt: !2077)
!2383 = !DILocation(line: 515, column: 26, scope: !2381, inlinedAt: !2077)
!2384 = !DILocation(line: 517, column: 17, scope: !2370, inlinedAt: !2077)
!2385 = !DILocation(line: 517, column: 20, scope: !2370, inlinedAt: !2077)
!2386 = !DILocation(line: 517, column: 31, scope: !2370, inlinedAt: !2077)
!2387 = !DILocation(line: 518, column: 13, scope: !2370, inlinedAt: !2077)
!2388 = !DILocation(line: 519, column: 32, scope: !2228, inlinedAt: !2077)
!2389 = !DILocation(line: 519, column: 31, scope: !2228, inlinedAt: !2077)
!2390 = !DILocation(line: 519, column: 25, scope: !2228, inlinedAt: !2077)
!2391 = !DILocation(line: 519, column: 13, scope: !2228, inlinedAt: !2077)
!2392 = !DILocation(line: 519, column: 18, scope: !2228, inlinedAt: !2077)
!2393 = !DILocation(line: 520, column: 17, scope: !2228, inlinedAt: !2077)
!2394 = !DILocation(line: 520, column: 15, scope: !2228, inlinedAt: !2077)
!2395 = !DILocation(line: 508, column: 35, scope: !2396, inlinedAt: !2077)
!2396 = !DILexicalBlockFile(scope: !2229, file: !920, discriminator: 2)
!2397 = !DILocation(line: 508, column: 9, scope: !2396, inlinedAt: !2077)
!2398 = distinct !{!2398, !2399}
!2399 = !DILocation(line: 508, column: 9, scope: !2224)
!2400 = !DILocation(line: 522, column: 13, scope: !2401, inlinedAt: !2077)
!2401 = distinct !DILexicalBlock(scope: !2224, file: !920, line: 522, column: 13)
!2402 = !DILocation(line: 522, column: 13, scope: !2224, inlinedAt: !2077)
!2403 = !DILocation(line: 523, column: 30, scope: !2401, inlinedAt: !2077)
!2404 = !DILocation(line: 523, column: 13, scope: !2401, inlinedAt: !2077)
!2405 = !DILocation(line: 523, column: 28, scope: !2401, inlinedAt: !2077)
!2406 = !DILocation(line: 524, column: 9, scope: !2224, inlinedAt: !2077)
!2407 = !DILocation(line: 527, column: 10, scope: !2234, inlinedAt: !2077)
!2408 = !DILocation(line: 527, column: 17, scope: !2234, inlinedAt: !2077)
!2409 = !DILocation(line: 527, column: 20, scope: !2410, inlinedAt: !2077)
!2410 = !DILexicalBlockFile(scope: !2234, file: !920, discriminator: 1)
!2411 = !DILocation(line: 527, column: 26, scope: !2410, inlinedAt: !2077)
!2412 = !DILocation(line: 527, column: 9, scope: !2410, inlinedAt: !2077)
!2413 = !DILocation(line: 528, column: 38, scope: !2233, inlinedAt: !2077)
!2414 = !DILocation(line: 528, column: 25, scope: !2233, inlinedAt: !2077)
!2415 = !DILocation(line: 528, column: 28, scope: !2233, inlinedAt: !2077)
!2416 = !DILocation(line: 530, column: 13, scope: !2417, inlinedAt: !2077)
!2417 = distinct !DILexicalBlock(scope: !2233, file: !920, line: 530, column: 13)
!2418 = !DILocation(line: 530, column: 23, scope: !2417, inlinedAt: !2077)
!2419 = !DILocation(line: 530, column: 13, scope: !2233, inlinedAt: !2077)
!2420 = !DILocation(line: 531, column: 25, scope: !2417, inlinedAt: !2077)
!2421 = !DILocation(line: 531, column: 23, scope: !2417, inlinedAt: !2077)
!2422 = !DILocation(line: 531, column: 13, scope: !2417, inlinedAt: !2077)
!2423 = !DILocation(line: 534, column: 13, scope: !2424, inlinedAt: !2077)
!2424 = distinct !DILexicalBlock(scope: !2233, file: !920, line: 534, column: 13)
!2425 = !DILocation(line: 534, column: 21, scope: !2424, inlinedAt: !2077)
!2426 = !DILocation(line: 535, column: 14, scope: !2424, inlinedAt: !2077)
!2427 = !DILocation(line: 535, column: 24, scope: !2424, inlinedAt: !2077)
!2428 = !DILocation(line: 535, column: 29, scope: !2429, inlinedAt: !2077)
!2429 = !DILexicalBlockFile(scope: !2424, file: !920, discriminator: 1)
!2430 = !DILocation(line: 535, column: 33, scope: !2429, inlinedAt: !2077)
!2431 = !DILocation(line: 535, column: 38, scope: !2429, inlinedAt: !2077)
!2432 = !DILocation(line: 535, column: 43, scope: !2429, inlinedAt: !2077)
!2433 = !DILocation(line: 535, column: 46, scope: !2434, inlinedAt: !2077)
!2434 = !DILexicalBlockFile(scope: !2424, file: !920, discriminator: 2)
!2435 = !DILocation(line: 535, column: 56, scope: !2434, inlinedAt: !2077)
!2436 = !DILocation(line: 535, column: 61, scope: !2434, inlinedAt: !2077)
!2437 = !DILocation(line: 535, column: 64, scope: !2438, inlinedAt: !2077)
!2438 = !DILexicalBlockFile(scope: !2424, file: !920, discriminator: 3)
!2439 = !DILocation(line: 535, column: 67, scope: !2438, inlinedAt: !2077)
!2440 = !DILocation(line: 534, column: 13, scope: !2441, inlinedAt: !2077)
!2441 = !DILexicalBlockFile(scope: !2233, file: !920, discriminator: 1)
!2442 = !DILocation(line: 536, column: 20, scope: !2443, inlinedAt: !2077)
!2443 = distinct !DILexicalBlock(scope: !2444, file: !920, line: 536, column: 13)
!2444 = distinct !DILexicalBlock(scope: !2424, file: !920, line: 535, column: 73)
!2445 = !DILocation(line: 536, column: 18, scope: !2443, inlinedAt: !2077)
!2446 = !DILocation(line: 536, column: 25, scope: !2447, inlinedAt: !2077)
!2447 = !DILexicalBlockFile(scope: !2448, file: !920, discriminator: 1)
!2448 = distinct !DILexicalBlock(scope: !2443, file: !920, line: 536, column: 13)
!2449 = !DILocation(line: 536, column: 29, scope: !2447, inlinedAt: !2077)
!2450 = !DILocation(line: 536, column: 27, scope: !2447, inlinedAt: !2077)
!2451 = !DILocation(line: 536, column: 13, scope: !2447, inlinedAt: !2077)
!2452 = !DILocation(line: 537, column: 46, scope: !2448, inlinedAt: !2077)
!2453 = !DILocation(line: 537, column: 38, scope: !2448, inlinedAt: !2077)
!2454 = !DILocation(line: 537, column: 33, scope: !2448, inlinedAt: !2077)
!2455 = !DILocation(line: 537, column: 17, scope: !2448, inlinedAt: !2077)
!2456 = !DILocation(line: 537, column: 36, scope: !2448, inlinedAt: !2077)
!2457 = !DILocation(line: 536, column: 33, scope: !2458, inlinedAt: !2077)
!2458 = !DILexicalBlockFile(scope: !2448, file: !920, discriminator: 2)
!2459 = !DILocation(line: 536, column: 13, scope: !2458, inlinedAt: !2077)
!2460 = distinct !{!2460, !2461}
!2461 = !DILocation(line: 536, column: 13, scope: !2444)
!2462 = !DILocation(line: 538, column: 23, scope: !2444, inlinedAt: !2077)
!2463 = !DILocation(line: 538, column: 21, scope: !2444, inlinedAt: !2077)
!2464 = !DILocation(line: 539, column: 9, scope: !2444, inlinedAt: !2077)
!2465 = !DILocation(line: 541, column: 16, scope: !2466, inlinedAt: !2077)
!2466 = distinct !DILexicalBlock(scope: !2233, file: !920, line: 541, column: 9)
!2467 = !DILocation(line: 541, column: 14, scope: !2466, inlinedAt: !2077)
!2468 = !DILocation(line: 541, column: 21, scope: !2469, inlinedAt: !2077)
!2469 = !DILexicalBlockFile(scope: !2470, file: !920, discriminator: 1)
!2470 = distinct !DILexicalBlock(scope: !2466, file: !920, line: 541, column: 9)
!2471 = !DILocation(line: 541, column: 25, scope: !2469, inlinedAt: !2077)
!2472 = !DILocation(line: 541, column: 23, scope: !2469, inlinedAt: !2077)
!2473 = !DILocation(line: 541, column: 9, scope: !2469, inlinedAt: !2077)
!2474 = !DILocation(line: 542, column: 17, scope: !2475, inlinedAt: !2077)
!2475 = distinct !DILexicalBlock(scope: !2476, file: !920, line: 542, column: 17)
!2476 = distinct !DILexicalBlock(scope: !2470, file: !920, line: 541, column: 41)
!2477 = !DILocation(line: 542, column: 23, scope: !2475, inlinedAt: !2077)
!2478 = !DILocation(line: 542, column: 26, scope: !2479, inlinedAt: !2077)
!2479 = !DILexicalBlockFile(scope: !2475, file: !920, discriminator: 1)
!2480 = !DILocation(line: 542, column: 17, scope: !2479, inlinedAt: !2077)
!2481 = !DILocation(line: 543, column: 28, scope: !2475, inlinedAt: !2077)
!2482 = !DILocation(line: 543, column: 36, scope: !2479, inlinedAt: !2077)
!2483 = !DILocation(line: 543, column: 28, scope: !2479, inlinedAt: !2077)
!2484 = !DILocation(line: 543, column: 40, scope: !2485, inlinedAt: !2077)
!2485 = !DILexicalBlockFile(scope: !2475, file: !920, discriminator: 2)
!2486 = !DILocation(line: 543, column: 28, scope: !2485, inlinedAt: !2077)
!2487 = !DILocation(line: 543, column: 28, scope: !2488, inlinedAt: !2077)
!2488 = !DILexicalBlockFile(scope: !2475, file: !920, discriminator: 3)
!2489 = !DILocation(line: 543, column: 49, scope: !2488, inlinedAt: !2077)
!2490 = !DILocation(line: 543, column: 54, scope: !2488, inlinedAt: !2077)
!2491 = !DILocation(line: 543, column: 51, scope: !2488, inlinedAt: !2077)
!2492 = !DILocation(line: 543, column: 62, scope: !2488, inlinedAt: !2077)
!2493 = !DILocation(line: 543, column: 59, scope: !2488, inlinedAt: !2077)
!2494 = !DILocation(line: 543, column: 17, scope: !2488, inlinedAt: !2077)
!2495 = !DILocation(line: 544, column: 43, scope: !2476, inlinedAt: !2077)
!2496 = !DILocation(line: 544, column: 48, scope: !2476, inlinedAt: !2077)
!2497 = !DILocation(line: 544, column: 20, scope: !2476, inlinedAt: !2077)
!2498 = !DILocation(line: 544, column: 80, scope: !2476, inlinedAt: !2077)
!2499 = !DILocation(line: 544, column: 85, scope: !2476, inlinedAt: !2077)
!2500 = !DILocation(line: 544, column: 57, scope: !2476, inlinedAt: !2077)
!2501 = !DILocation(line: 544, column: 91, scope: !2476, inlinedAt: !2077)
!2502 = !DILocation(line: 544, column: 55, scope: !2476, inlinedAt: !2077)
!2503 = !DILocation(line: 544, column: 18, scope: !2476, inlinedAt: !2077)
!2504 = !DILocation(line: 541, column: 37, scope: !2505, inlinedAt: !2077)
!2505 = !DILexicalBlockFile(scope: !2470, file: !920, discriminator: 2)
!2506 = !DILocation(line: 541, column: 9, scope: !2505, inlinedAt: !2077)
!2507 = distinct !{!2507, !2508}
!2508 = !DILocation(line: 541, column: 9, scope: !2233)
!2509 = !DILocation(line: 546, column: 20, scope: !2233, inlinedAt: !2077)
!2510 = !DILocation(line: 546, column: 16, scope: !2233, inlinedAt: !2077)
!2511 = !DILocation(line: 547, column: 17, scope: !2233, inlinedAt: !2077)
!2512 = !DILocation(line: 547, column: 13, scope: !2233, inlinedAt: !2077)
!2513 = !DILocation(line: 550, column: 9, scope: !2233, inlinedAt: !2077)
!2514 = !DILocation(line: 550, column: 17, scope: !2441, inlinedAt: !2077)
!2515 = !DILocation(line: 550, column: 21, scope: !2441, inlinedAt: !2077)
!2516 = !DILocation(line: 550, column: 26, scope: !2441, inlinedAt: !2077)
!2517 = !DILocation(line: 550, column: 31, scope: !2441, inlinedAt: !2077)
!2518 = !DILocation(line: 550, column: 34, scope: !2519, inlinedAt: !2077)
!2519 = !DILexicalBlockFile(scope: !2233, file: !920, discriminator: 2)
!2520 = !DILocation(line: 550, column: 44, scope: !2519, inlinedAt: !2077)
!2521 = !DILocation(line: 550, column: 9, scope: !2522, inlinedAt: !2077)
!2522 = !DILexicalBlockFile(scope: !2233, file: !920, discriminator: 3)
!2523 = !DILocation(line: 551, column: 17, scope: !2524, inlinedAt: !2077)
!2524 = distinct !DILexicalBlock(scope: !2525, file: !920, line: 551, column: 17)
!2525 = distinct !DILexicalBlock(scope: !2233, file: !920, line: 550, column: 49)
!2526 = !DILocation(line: 551, column: 23, scope: !2524, inlinedAt: !2077)
!2527 = !DILocation(line: 551, column: 26, scope: !2528, inlinedAt: !2077)
!2528 = !DILexicalBlockFile(scope: !2524, file: !920, discriminator: 1)
!2529 = !DILocation(line: 551, column: 17, scope: !2528, inlinedAt: !2077)
!2530 = !DILocation(line: 552, column: 28, scope: !2524, inlinedAt: !2077)
!2531 = !DILocation(line: 552, column: 36, scope: !2528, inlinedAt: !2077)
!2532 = !DILocation(line: 552, column: 28, scope: !2528, inlinedAt: !2077)
!2533 = !DILocation(line: 552, column: 40, scope: !2534, inlinedAt: !2077)
!2534 = !DILexicalBlockFile(scope: !2524, file: !920, discriminator: 2)
!2535 = !DILocation(line: 552, column: 28, scope: !2534, inlinedAt: !2077)
!2536 = !DILocation(line: 552, column: 28, scope: !2537, inlinedAt: !2077)
!2537 = !DILexicalBlockFile(scope: !2524, file: !920, discriminator: 3)
!2538 = !DILocation(line: 552, column: 49, scope: !2537, inlinedAt: !2077)
!2539 = !DILocation(line: 552, column: 54, scope: !2537, inlinedAt: !2077)
!2540 = !DILocation(line: 552, column: 17, scope: !2537, inlinedAt: !2077)
!2541 = !DILocation(line: 553, column: 21, scope: !2525, inlinedAt: !2077)
!2542 = !DILocation(line: 553, column: 29, scope: !2525, inlinedAt: !2077)
!2543 = !DILocation(line: 553, column: 26, scope: !2525, inlinedAt: !2077)
!2544 = !DILocation(line: 553, column: 18, scope: !2525, inlinedAt: !2077)
!2545 = !DILocation(line: 554, column: 20, scope: !2525, inlinedAt: !2077)
!2546 = !DILocation(line: 555, column: 17, scope: !2525, inlinedAt: !2077)
!2547 = !DILocation(line: 556, column: 24, scope: !2525, inlinedAt: !2077)
!2548 = !DILocation(line: 557, column: 22, scope: !2525, inlinedAt: !2077)
!2549 = !DILocation(line: 550, column: 9, scope: !2550, inlinedAt: !2077)
!2550 = !DILexicalBlockFile(scope: !2233, file: !920, discriminator: 4)
!2551 = distinct !{!2551, !2552}
!2552 = !DILocation(line: 550, column: 9, scope: !2233)
!2553 = !DILocation(line: 559, column: 14, scope: !2233, inlinedAt: !2077)
!2554 = !DILocation(line: 559, column: 12, scope: !2233, inlinedAt: !2077)
!2555 = !DILocation(line: 560, column: 16, scope: !2233, inlinedAt: !2077)
!2556 = !DILocation(line: 560, column: 14, scope: !2233, inlinedAt: !2077)
!2557 = !DILocation(line: 563, column: 13, scope: !2558, inlinedAt: !2077)
!2558 = distinct !DILexicalBlock(scope: !2233, file: !920, line: 563, column: 13)
!2559 = !DILocation(line: 563, column: 16, scope: !2558, inlinedAt: !2077)
!2560 = !DILocation(line: 563, column: 20, scope: !2558, inlinedAt: !2077)
!2561 = !DILocation(line: 563, column: 24, scope: !2562, inlinedAt: !2077)
!2562 = !DILexicalBlockFile(scope: !2558, file: !920, discriminator: 1)
!2563 = !DILocation(line: 563, column: 30, scope: !2562, inlinedAt: !2077)
!2564 = !DILocation(line: 563, column: 33, scope: !2565, inlinedAt: !2077)
!2565 = !DILexicalBlockFile(scope: !2558, file: !920, discriminator: 2)
!2566 = !DILocation(line: 563, column: 13, scope: !2565, inlinedAt: !2077)
!2567 = !DILocation(line: 564, column: 40, scope: !2558, inlinedAt: !2077)
!2568 = !DILocation(line: 564, column: 45, scope: !2558, inlinedAt: !2077)
!2569 = !DILocation(line: 564, column: 59, scope: !2558, inlinedAt: !2077)
!2570 = !DILocation(line: 564, column: 67, scope: !2562, inlinedAt: !2077)
!2571 = !DILocation(line: 564, column: 59, scope: !2562, inlinedAt: !2077)
!2572 = !DILocation(line: 564, column: 71, scope: !2565, inlinedAt: !2077)
!2573 = !DILocation(line: 564, column: 59, scope: !2565, inlinedAt: !2077)
!2574 = !DILocation(line: 564, column: 59, scope: !2575, inlinedAt: !2077)
!2575 = !DILexicalBlockFile(scope: !2558, file: !920, discriminator: 3)
!2576 = !DILocation(line: 565, column: 40, scope: !2558, inlinedAt: !2077)
!2577 = !DILocation(line: 565, column: 47, scope: !2558, inlinedAt: !2077)
!2578 = !DILocation(line: 565, column: 44, scope: !2558, inlinedAt: !2077)
!2579 = !DILocation(line: 565, column: 58, scope: !2558, inlinedAt: !2077)
!2580 = !DILocation(line: 565, column: 64, scope: !2558, inlinedAt: !2077)
!2581 = !DILocation(line: 565, column: 61, scope: !2558, inlinedAt: !2077)
!2582 = !DILocation(line: 566, column: 40, scope: !2558, inlinedAt: !2077)
!2583 = !DILocation(line: 564, column: 13, scope: !2575, inlinedAt: !2077)
!2584 = !DILocation(line: 567, column: 5, scope: !2233, inlinedAt: !2077)
!2585 = !DILocation(line: 571, column: 34, scope: !2074, inlinedAt: !2077)
!2586 = !DILocation(line: 571, column: 43, scope: !2074, inlinedAt: !2077)
!2587 = !DILocation(line: 571, column: 48, scope: !2074, inlinedAt: !2077)
!2588 = !DILocation(line: 571, column: 55, scope: !2074, inlinedAt: !2077)
!2589 = !DILocation(line: 571, column: 53, scope: !2074, inlinedAt: !2077)
!2590 = !DILocation(line: 571, column: 13, scope: !2074, inlinedAt: !2077)
!2591 = !DILocation(line: 570, column: 32, scope: !2074, inlinedAt: !2077)
!2592 = !DILocation(line: 570, column: 11, scope: !2074, inlinedAt: !2077)
!2593 = !DILocation(line: 572, column: 10, scope: !2594, inlinedAt: !2077)
!2594 = distinct !DILexicalBlock(scope: !2074, file: !920, line: 572, column: 9)
!2595 = !DILocation(line: 572, column: 17, scope: !2594, inlinedAt: !2077)
!2596 = !DILocation(line: 572, column: 20, scope: !2597, inlinedAt: !2077)
!2597 = !DILexicalBlockFile(scope: !2594, file: !920, discriminator: 1)
!2598 = !DILocation(line: 572, column: 29, scope: !2597, inlinedAt: !2077)
!2599 = !DILocation(line: 572, column: 34, scope: !2597, inlinedAt: !2077)
!2600 = !DILocation(line: 572, column: 37, scope: !2601, inlinedAt: !2077)
!2601 = !DILexicalBlockFile(scope: !2594, file: !920, discriminator: 2)
!2602 = !DILocation(line: 572, column: 47, scope: !2601, inlinedAt: !2077)
!2603 = !DILocation(line: 572, column: 41, scope: !2601, inlinedAt: !2077)
!2604 = !DILocation(line: 572, column: 57, scope: !2601, inlinedAt: !2077)
!2605 = !DILocation(line: 572, column: 39, scope: !2601, inlinedAt: !2077)
!2606 = !DILocation(line: 572, column: 62, scope: !2601, inlinedAt: !2077)
!2607 = !DILocation(line: 572, column: 65, scope: !2608, inlinedAt: !2077)
!2608 = !DILexicalBlockFile(scope: !2594, file: !920, discriminator: 3)
!2609 = !DILocation(line: 572, column: 67, scope: !2608, inlinedAt: !2077)
!2610 = !DILocation(line: 572, column: 9, scope: !2608, inlinedAt: !2077)
!2611 = !DILocation(line: 573, column: 11, scope: !2612, inlinedAt: !2077)
!2612 = distinct !DILexicalBlock(scope: !2594, file: !920, line: 572, column: 72)
!2613 = !DILocation(line: 574, column: 13, scope: !2612, inlinedAt: !2077)
!2614 = !DILocation(line: 574, column: 17, scope: !2612, inlinedAt: !2077)
!2615 = !DILocation(line: 574, column: 15, scope: !2612, inlinedAt: !2077)
!2616 = !DILocation(line: 574, column: 11, scope: !2612, inlinedAt: !2077)
!2617 = !DILocation(line: 575, column: 15, scope: !2612, inlinedAt: !2077)
!2618 = !DILocation(line: 576, column: 18, scope: !2612, inlinedAt: !2077)
!2619 = !DILocation(line: 577, column: 13, scope: !2620, inlinedAt: !2077)
!2620 = distinct !DILexicalBlock(scope: !2612, file: !920, line: 577, column: 13)
!2621 = !DILocation(line: 577, column: 20, scope: !2620, inlinedAt: !2077)
!2622 = !DILocation(line: 577, column: 13, scope: !2612, inlinedAt: !2077)
!2623 = !DILocation(line: 578, column: 21, scope: !2620, inlinedAt: !2077)
!2624 = !DILocation(line: 578, column: 26, scope: !2620, inlinedAt: !2077)
!2625 = !DILocation(line: 578, column: 34, scope: !2620, inlinedAt: !2077)
!2626 = !DILocation(line: 578, column: 39, scope: !2620, inlinedAt: !2077)
!2627 = !DILocation(line: 578, column: 31, scope: !2620, inlinedAt: !2077)
!2628 = !DILocation(line: 578, column: 18, scope: !2620, inlinedAt: !2077)
!2629 = !DILocation(line: 578, column: 13, scope: !2620, inlinedAt: !2077)
!2630 = !DILocation(line: 579, column: 19, scope: !2612, inlinedAt: !2077)
!2631 = !DILocation(line: 579, column: 26, scope: !2612, inlinedAt: !2077)
!2632 = !DILocation(line: 579, column: 31, scope: !2612, inlinedAt: !2077)
!2633 = !DILocation(line: 579, column: 16, scope: !2612, inlinedAt: !2077)
!2634 = !DILocation(line: 580, column: 5, scope: !2612, inlinedAt: !2077)
!2635 = !DILocation(line: 582, column: 9, scope: !2073, inlinedAt: !2077)
!2636 = !DILocation(line: 582, column: 9, scope: !2074, inlinedAt: !2077)
!2637 = !DILocation(line: 584, column: 22, scope: !2106, inlinedAt: !2077)
!2638 = !DILocation(line: 584, column: 46, scope: !2639, inlinedAt: !2077)
!2639 = !DILexicalBlockFile(scope: !2106, file: !920, discriminator: 1)
!2640 = !DILocation(line: 584, column: 49, scope: !2639, inlinedAt: !2077)
!2641 = !DILocation(line: 584, column: 52, scope: !2639, inlinedAt: !2077)
!2642 = !DILocation(line: 584, column: 60, scope: !2639, inlinedAt: !2077)
!2643 = !DILocation(line: 584, column: 30, scope: !2639, inlinedAt: !2077)
!2644 = !DILocation(line: 584, column: 22, scope: !2639, inlinedAt: !2077)
!2645 = !DILocation(line: 584, column: 22, scope: !2646, inlinedAt: !2077)
!2646 = !DILexicalBlockFile(scope: !2106, file: !920, discriminator: 2)
!2647 = !DILocation(line: 584, column: 22, scope: !2648, inlinedAt: !2077)
!2648 = !DILexicalBlockFile(scope: !2106, file: !920, discriminator: 3)
!2649 = !DILocation(line: 584, column: 13, scope: !2648, inlinedAt: !2077)
!2650 = !DILocation(line: 593, column: 44, scope: !2106, inlinedAt: !2077)
!2651 = !DILocation(line: 593, column: 21, scope: !2106, inlinedAt: !2077)
!2652 = !DILocation(line: 593, column: 52, scope: !2106, inlinedAt: !2077)
!2653 = !DILocation(line: 593, column: 61, scope: !2106, inlinedAt: !2077)
!2654 = !DILocation(line: 593, column: 50, scope: !2106, inlinedAt: !2077)
!2655 = !DILocation(line: 593, column: 19, scope: !2106, inlinedAt: !2077)
!2656 = !DILocation(line: 594, column: 19, scope: !2106, inlinedAt: !2077)
!2657 = !DILocation(line: 594, column: 29, scope: !2106, inlinedAt: !2077)
!2658 = !DILocation(line: 594, column: 38, scope: !2106, inlinedAt: !2077)
!2659 = !DILocation(line: 594, column: 45, scope: !2106, inlinedAt: !2077)
!2660 = !DILocation(line: 594, column: 48, scope: !2639, inlinedAt: !2077)
!2661 = !DILocation(line: 594, column: 50, scope: !2639, inlinedAt: !2077)
!2662 = !DILocation(line: 594, column: 38, scope: !2646, inlinedAt: !2077)
!2663 = !DILocation(line: 594, column: 35, scope: !2646, inlinedAt: !2077)
!2664 = !DILocation(line: 594, column: 16, scope: !2646, inlinedAt: !2077)
!2665 = !DILocation(line: 596, column: 15, scope: !2106, inlinedAt: !2077)
!2666 = !DILocation(line: 596, column: 22, scope: !2106, inlinedAt: !2077)
!2667 = !DILocation(line: 596, column: 25, scope: !2639, inlinedAt: !2077)
!2668 = !DILocation(line: 596, column: 33, scope: !2639, inlinedAt: !2077)
!2669 = !DILocation(line: 596, column: 36, scope: !2639, inlinedAt: !2077)
!2670 = !DILocation(line: 596, column: 30, scope: !2639, inlinedAt: !2077)
!2671 = !DILocation(line: 596, column: 14, scope: !2639, inlinedAt: !2077)
!2672 = !DILocation(line: 596, column: 14, scope: !2646, inlinedAt: !2077)
!2673 = !DILocation(line: 597, column: 30, scope: !2106, inlinedAt: !2077)
!2674 = !DILocation(line: 597, column: 33, scope: !2106, inlinedAt: !2077)
!2675 = !DILocation(line: 597, column: 36, scope: !2106, inlinedAt: !2077)
!2676 = !DILocation(line: 597, column: 44, scope: !2106, inlinedAt: !2077)
!2677 = !DILocation(line: 597, column: 55, scope: !2106, inlinedAt: !2077)
!2678 = !DILocation(line: 597, column: 14, scope: !2106, inlinedAt: !2077)
!2679 = !DILocation(line: 596, column: 14, scope: !2648, inlinedAt: !2077)
!2680 = !DILocation(line: 596, column: 14, scope: !2681, inlinedAt: !2077)
!2681 = !DILexicalBlockFile(scope: !2106, file: !920, discriminator: 4)
!2682 = !DILocation(line: 596, column: 12, scope: !2681, inlinedAt: !2077)
!2683 = !DILocation(line: 598, column: 34, scope: !2106, inlinedAt: !2077)
!2684 = !DILocation(line: 598, column: 16, scope: !2106, inlinedAt: !2077)
!2685 = !DILocation(line: 70, column: 18, scope: !2122, inlinedAt: !2149)
!2686 = !DILocation(line: 70, column: 22, scope: !2122, inlinedAt: !2149)
!2687 = !DILocation(line: 70, column: 33, scope: !2122, inlinedAt: !2149)
!2688 = !DILocation(line: 70, column: 16, scope: !2122, inlinedAt: !2149)
!2689 = !DILocation(line: 71, column: 37, scope: !2122, inlinedAt: !2149)
!2690 = !DILocation(line: 71, column: 41, scope: !2122, inlinedAt: !2149)
!2691 = !DILocation(line: 71, column: 47, scope: !2122, inlinedAt: !2149)
!2692 = !DILocation(line: 71, column: 22, scope: !2122, inlinedAt: !2149)
!2693 = !DILocation(line: 71, column: 20, scope: !2122, inlinedAt: !2149)
!2694 = !DILocation(line: 71, column: 52, scope: !2122, inlinedAt: !2149)
!2695 = !DILocation(line: 71, column: 14, scope: !2122, inlinedAt: !2149)
!2696 = !DILocation(line: 72, column: 13, scope: !2122, inlinedAt: !2149)
!2697 = !DILocation(line: 72, column: 17, scope: !2122, inlinedAt: !2149)
!2698 = !DILocation(line: 72, column: 27, scope: !2122, inlinedAt: !2149)
!2699 = !DILocation(line: 72, column: 35, scope: !2122, inlinedAt: !2149)
!2700 = !DILocation(line: 72, column: 23, scope: !2122, inlinedAt: !2149)
!2701 = !DILocation(line: 72, column: 11, scope: !2122, inlinedAt: !2149)
!2702 = !DILocation(line: 74, column: 12, scope: !2140, inlinedAt: !2149)
!2703 = !DILocation(line: 74, column: 10, scope: !2140, inlinedAt: !2149)
!2704 = !DILocation(line: 74, column: 17, scope: !2705, inlinedAt: !2149)
!2705 = !DILexicalBlockFile(scope: !2139, file: !1753, discriminator: 1)
!2706 = !DILocation(line: 74, column: 19, scope: !2705, inlinedAt: !2149)
!2707 = !DILocation(line: 74, column: 5, scope: !2705, inlinedAt: !2149)
!2708 = !DILocation(line: 76, column: 17, scope: !2138, inlinedAt: !2149)
!2709 = !DILocation(line: 76, column: 25, scope: !2138, inlinedAt: !2149)
!2710 = !DILocation(line: 76, column: 23, scope: !2138, inlinedAt: !2149)
!2711 = !DILocation(line: 76, column: 31, scope: !2138, inlinedAt: !2149)
!2712 = !DILocation(line: 76, column: 15, scope: !2138, inlinedAt: !2149)
!2713 = !DILocation(line: 77, column: 15, scope: !2138, inlinedAt: !2149)
!2714 = !DILocation(line: 77, column: 21, scope: !2138, inlinedAt: !2149)
!2715 = !DILocation(line: 77, column: 13, scope: !2138, inlinedAt: !2149)
!2716 = !DILocation(line: 78, column: 20, scope: !2138, inlinedAt: !2149)
!2717 = !DILocation(line: 78, column: 29, scope: !2138, inlinedAt: !2149)
!2718 = !DILocation(line: 78, column: 36, scope: !2138, inlinedAt: !2149)
!2719 = !DILocation(line: 78, column: 34, scope: !2138, inlinedAt: !2149)
!2720 = !DILocation(line: 78, column: 18, scope: !2138, inlinedAt: !2149)
!2721 = !DILocation(line: 79, column: 19, scope: !2138, inlinedAt: !2149)
!2722 = !DILocation(line: 79, column: 15, scope: !2138, inlinedAt: !2149)
!2723 = !DILocation(line: 74, column: 25, scope: !2724, inlinedAt: !2149)
!2724 = !DILexicalBlockFile(scope: !2139, file: !1753, discriminator: 2)
!2725 = !DILocation(line: 74, column: 5, scope: !2724, inlinedAt: !2149)
!2726 = distinct !{!2726, !2727}
!2727 = !DILocation(line: 74, column: 5, scope: !2122)
!2728 = !DILocation(line: 82, column: 12, scope: !2122, inlinedAt: !2149)
!2729 = !DILocation(line: 82, column: 25, scope: !2122, inlinedAt: !2149)
!2730 = !DILocation(line: 82, column: 23, scope: !2122, inlinedAt: !2149)
!2731 = !DILocation(line: 598, column: 14, scope: !2106, inlinedAt: !2077)
!2732 = !DILocation(line: 599, column: 13, scope: !2733, inlinedAt: !2077)
!2733 = distinct !DILexicalBlock(scope: !2106, file: !920, line: 599, column: 13)
!2734 = !DILocation(line: 599, column: 16, scope: !2733, inlinedAt: !2077)
!2735 = !DILocation(line: 599, column: 13, scope: !2106, inlinedAt: !2077)
!2736 = !DILocation(line: 600, column: 17, scope: !2737, inlinedAt: !2077)
!2737 = distinct !DILexicalBlock(scope: !2738, file: !920, line: 600, column: 17)
!2738 = distinct !DILexicalBlock(scope: !2733, file: !920, line: 599, column: 22)
!2739 = !DILocation(line: 600, column: 17, scope: !2738, inlinedAt: !2077)
!2740 = !DILocation(line: 601, column: 27, scope: !2737, inlinedAt: !2077)
!2741 = !DILocation(line: 601, column: 34, scope: !2737, inlinedAt: !2077)
!2742 = !DILocation(line: 601, column: 33, scope: !2737, inlinedAt: !2077)
!2743 = !DILocation(line: 601, column: 37, scope: !2737, inlinedAt: !2077)
!2744 = !DILocation(line: 601, column: 45, scope: !2737, inlinedAt: !2077)
!2745 = !DILocation(line: 601, column: 24, scope: !2737, inlinedAt: !2077)
!2746 = !DILocation(line: 601, column: 17, scope: !2737, inlinedAt: !2077)
!2747 = !DILocation(line: 604, column: 17, scope: !2748, inlinedAt: !2077)
!2748 = distinct !DILexicalBlock(scope: !2738, file: !920, line: 604, column: 17)
!2749 = !DILocation(line: 604, column: 17, scope: !2738, inlinedAt: !2077)
!2750 = !DILocation(line: 605, column: 21, scope: !2751, inlinedAt: !2077)
!2751 = distinct !DILexicalBlock(scope: !2752, file: !920, line: 605, column: 21)
!2752 = distinct !DILexicalBlock(scope: !2748, file: !920, line: 604, column: 24)
!2753 = !DILocation(line: 605, column: 28, scope: !2751, inlinedAt: !2077)
!2754 = !DILocation(line: 605, column: 31, scope: !2755, inlinedAt: !2077)
!2755 = !DILexicalBlockFile(scope: !2751, file: !920, discriminator: 1)
!2756 = !DILocation(line: 605, column: 33, scope: !2755, inlinedAt: !2077)
!2757 = !DILocation(line: 605, column: 21, scope: !2755, inlinedAt: !2077)
!2758 = !DILocation(line: 606, column: 46, scope: !2751, inlinedAt: !2077)
!2759 = !DILocation(line: 606, column: 50, scope: !2751, inlinedAt: !2077)
!2760 = !DILocation(line: 606, column: 58, scope: !2751, inlinedAt: !2077)
!2761 = !DILocation(line: 606, column: 61, scope: !2751, inlinedAt: !2077)
!2762 = !DILocation(line: 606, column: 21, scope: !2751, inlinedAt: !2077)
!2763 = !DILocation(line: 607, column: 26, scope: !2764, inlinedAt: !2077)
!2764 = distinct !DILexicalBlock(scope: !2751, file: !920, line: 607, column: 26)
!2765 = !DILocation(line: 607, column: 33, scope: !2764, inlinedAt: !2077)
!2766 = !DILocation(line: 607, column: 36, scope: !2767, inlinedAt: !2077)
!2767 = !DILexicalBlockFile(scope: !2764, file: !920, discriminator: 1)
!2768 = !DILocation(line: 607, column: 39, scope: !2767, inlinedAt: !2077)
!2769 = !DILocation(line: 607, column: 26, scope: !2767, inlinedAt: !2077)
!2770 = !DILocation(line: 608, column: 41, scope: !2764, inlinedAt: !2077)
!2771 = !DILocation(line: 608, column: 45, scope: !2764, inlinedAt: !2077)
!2772 = !DILocation(line: 608, column: 53, scope: !2764, inlinedAt: !2077)
!2773 = !DILocation(line: 608, column: 56, scope: !2764, inlinedAt: !2077)
!2774 = !DILocation(line: 608, column: 21, scope: !2764, inlinedAt: !2077)
!2775 = !DILocation(line: 610, column: 45, scope: !2764, inlinedAt: !2077)
!2776 = !DILocation(line: 610, column: 49, scope: !2764, inlinedAt: !2077)
!2777 = !DILocation(line: 610, column: 57, scope: !2764, inlinedAt: !2077)
!2778 = !DILocation(line: 610, column: 21, scope: !2764, inlinedAt: !2077)
!2779 = !DILocation(line: 611, column: 26, scope: !2752, inlinedAt: !2077)
!2780 = !DILocation(line: 611, column: 33, scope: !2752, inlinedAt: !2077)
!2781 = !DILocation(line: 611, column: 43, scope: !2752, inlinedAt: !2077)
!2782 = !DILocation(line: 611, column: 41, scope: !2752, inlinedAt: !2077)
!2783 = !DILocation(line: 611, column: 24, scope: !2752, inlinedAt: !2077)
!2784 = !DILocation(line: 612, column: 21, scope: !2785, inlinedAt: !2077)
!2785 = distinct !DILexicalBlock(scope: !2752, file: !920, line: 612, column: 21)
!2786 = !DILocation(line: 612, column: 21, scope: !2752, inlinedAt: !2077)
!2787 = !DILocation(line: 613, column: 25, scope: !2788, inlinedAt: !2077)
!2788 = distinct !DILexicalBlock(scope: !2789, file: !920, line: 613, column: 25)
!2789 = distinct !DILexicalBlock(scope: !2785, file: !920, line: 612, column: 29)
!2790 = !DILocation(line: 613, column: 32, scope: !2788, inlinedAt: !2077)
!2791 = !DILocation(line: 613, column: 25, scope: !2789, inlinedAt: !2077)
!2792 = !DILocation(line: 614, column: 49, scope: !2788, inlinedAt: !2077)
!2793 = !DILocation(line: 614, column: 52, scope: !2788, inlinedAt: !2077)
!2794 = !DILocation(line: 614, column: 78, scope: !2788, inlinedAt: !2077)
!2795 = !DILocation(line: 614, column: 55, scope: !2788, inlinedAt: !2077)
!2796 = !DILocation(line: 614, column: 58, scope: !2788, inlinedAt: !2077)
!2797 = !DILocation(line: 614, column: 67, scope: !2788, inlinedAt: !2077)
!2798 = !DILocation(line: 615, column: 72, scope: !2788, inlinedAt: !2077)
!2799 = !DILocation(line: 615, column: 49, scope: !2788, inlinedAt: !2077)
!2800 = !DILocation(line: 615, column: 52, scope: !2788, inlinedAt: !2077)
!2801 = !DILocation(line: 615, column: 61, scope: !2788, inlinedAt: !2077)
!2802 = !DILocation(line: 615, column: 79, scope: !2788, inlinedAt: !2077)
!2803 = !DILocation(line: 614, column: 25, scope: !2788, inlinedAt: !2077)
!2804 = !DILocation(line: 617, column: 49, scope: !2788, inlinedAt: !2077)
!2805 = !DILocation(line: 617, column: 52, scope: !2788, inlinedAt: !2077)
!2806 = !DILocation(line: 617, column: 55, scope: !2788, inlinedAt: !2077)
!2807 = !DILocation(line: 617, column: 25, scope: !2788, inlinedAt: !2077)
!2808 = !DILocation(line: 618, column: 17, scope: !2789, inlinedAt: !2077)
!2809 = !DILocation(line: 619, column: 13, scope: !2752, inlinedAt: !2077)
!2810 = !DILocation(line: 620, column: 21, scope: !2811, inlinedAt: !2077)
!2811 = distinct !DILexicalBlock(scope: !2812, file: !920, line: 620, column: 21)
!2812 = distinct !DILexicalBlock(scope: !2748, file: !920, line: 619, column: 20)
!2813 = !DILocation(line: 620, column: 28, scope: !2811, inlinedAt: !2077)
!2814 = !DILocation(line: 620, column: 31, scope: !2815, inlinedAt: !2077)
!2815 = !DILexicalBlockFile(scope: !2811, file: !920, discriminator: 1)
!2816 = !DILocation(line: 620, column: 33, scope: !2815, inlinedAt: !2077)
!2817 = !DILocation(line: 620, column: 21, scope: !2815, inlinedAt: !2077)
!2818 = !DILocation(line: 621, column: 55, scope: !2811, inlinedAt: !2077)
!2819 = !DILocation(line: 621, column: 59, scope: !2811, inlinedAt: !2077)
!2820 = !DILocation(line: 621, column: 62, scope: !2811, inlinedAt: !2077)
!2821 = !DILocation(line: 621, column: 30, scope: !2811, inlinedAt: !2077)
!2822 = !DILocation(line: 621, column: 28, scope: !2811, inlinedAt: !2077)
!2823 = !DILocation(line: 621, column: 21, scope: !2811, inlinedAt: !2077)
!2824 = !DILocation(line: 622, column: 26, scope: !2825, inlinedAt: !2077)
!2825 = distinct !DILexicalBlock(scope: !2811, file: !920, line: 622, column: 26)
!2826 = !DILocation(line: 622, column: 33, scope: !2825, inlinedAt: !2077)
!2827 = !DILocation(line: 622, column: 36, scope: !2828, inlinedAt: !2077)
!2828 = !DILexicalBlockFile(scope: !2825, file: !920, discriminator: 1)
!2829 = !DILocation(line: 622, column: 39, scope: !2828, inlinedAt: !2077)
!2830 = !DILocation(line: 622, column: 26, scope: !2828, inlinedAt: !2077)
!2831 = !DILocation(line: 623, column: 50, scope: !2825, inlinedAt: !2077)
!2832 = !DILocation(line: 623, column: 54, scope: !2825, inlinedAt: !2077)
!2833 = !DILocation(line: 623, column: 56, scope: !2825, inlinedAt: !2077)
!2834 = !DILocation(line: 623, column: 30, scope: !2825, inlinedAt: !2077)
!2835 = !DILocation(line: 623, column: 28, scope: !2825, inlinedAt: !2077)
!2836 = !DILocation(line: 623, column: 21, scope: !2825, inlinedAt: !2077)
!2837 = !DILocation(line: 625, column: 54, scope: !2825, inlinedAt: !2077)
!2838 = !DILocation(line: 625, column: 58, scope: !2825, inlinedAt: !2077)
!2839 = !DILocation(line: 625, column: 30, scope: !2825, inlinedAt: !2077)
!2840 = !DILocation(line: 625, column: 28, scope: !2825, inlinedAt: !2077)
!2841 = !DILocation(line: 626, column: 26, scope: !2812, inlinedAt: !2077)
!2842 = !DILocation(line: 626, column: 33, scope: !2812, inlinedAt: !2077)
!2843 = !DILocation(line: 626, column: 43, scope: !2812, inlinedAt: !2077)
!2844 = !DILocation(line: 626, column: 41, scope: !2812, inlinedAt: !2077)
!2845 = !DILocation(line: 626, column: 24, scope: !2812, inlinedAt: !2077)
!2846 = !DILocation(line: 628, column: 9, scope: !2738, inlinedAt: !2077)
!2847 = !DILocation(line: 628, column: 20, scope: !2848, inlinedAt: !2077)
!2848 = !DILexicalBlockFile(scope: !2849, file: !920, discriminator: 1)
!2849 = distinct !DILexicalBlock(scope: !2733, file: !920, line: 628, column: 20)
!2850 = !DILocation(line: 629, column: 17, scope: !2851, inlinedAt: !2077)
!2851 = distinct !DILexicalBlock(scope: !2852, file: !920, line: 629, column: 17)
!2852 = distinct !DILexicalBlock(scope: !2849, file: !920, line: 628, column: 28)
!2853 = !DILocation(line: 629, column: 17, scope: !2852, inlinedAt: !2077)
!2854 = !DILocation(line: 630, column: 23, scope: !2855, inlinedAt: !2077)
!2855 = distinct !DILexicalBlock(scope: !2851, file: !920, line: 629, column: 24)
!2856 = !DILocation(line: 630, column: 30, scope: !2855, inlinedAt: !2077)
!2857 = !DILocation(line: 630, column: 21, scope: !2855, inlinedAt: !2077)
!2858 = !DILocation(line: 631, column: 22, scope: !2859, inlinedAt: !2077)
!2859 = distinct !DILexicalBlock(scope: !2855, file: !920, line: 631, column: 22)
!2860 = !DILocation(line: 631, column: 22, scope: !2855, inlinedAt: !2077)
!2861 = !DILocation(line: 632, column: 28, scope: !2862, inlinedAt: !2077)
!2862 = distinct !DILexicalBlock(scope: !2863, file: !920, line: 632, column: 21)
!2863 = distinct !DILexicalBlock(scope: !2859, file: !920, line: 631, column: 27)
!2864 = !DILocation(line: 632, column: 26, scope: !2862, inlinedAt: !2077)
!2865 = !DILocation(line: 632, column: 33, scope: !2866, inlinedAt: !2077)
!2866 = !DILexicalBlockFile(scope: !2867, file: !920, discriminator: 1)
!2867 = distinct !DILexicalBlock(scope: !2862, file: !920, line: 632, column: 21)
!2868 = !DILocation(line: 632, column: 37, scope: !2866, inlinedAt: !2077)
!2869 = !DILocation(line: 632, column: 35, scope: !2866, inlinedAt: !2077)
!2870 = !DILocation(line: 632, column: 21, scope: !2866, inlinedAt: !2077)
!2871 = !DILocation(line: 633, column: 26, scope: !2867, inlinedAt: !2077)
!2872 = !DILocation(line: 633, column: 24, scope: !2867, inlinedAt: !2077)
!2873 = !DILocation(line: 633, column: 29, scope: !2867, inlinedAt: !2077)
!2874 = !DILocation(line: 632, column: 41, scope: !2875, inlinedAt: !2077)
!2875 = !DILexicalBlockFile(scope: !2867, file: !920, discriminator: 2)
!2876 = !DILocation(line: 632, column: 21, scope: !2875, inlinedAt: !2077)
!2877 = distinct !{!2877, !2878}
!2878 = !DILocation(line: 632, column: 21, scope: !2863)
!2879 = !DILocation(line: 634, column: 18, scope: !2863, inlinedAt: !2077)
!2880 = !DILocation(line: 635, column: 42, scope: !2855, inlinedAt: !2077)
!2881 = !DILocation(line: 635, column: 45, scope: !2855, inlinedAt: !2077)
!2882 = !DILocation(line: 635, column: 71, scope: !2855, inlinedAt: !2077)
!2883 = !DILocation(line: 635, column: 48, scope: !2855, inlinedAt: !2077)
!2884 = !DILocation(line: 635, column: 51, scope: !2855, inlinedAt: !2077)
!2885 = !DILocation(line: 635, column: 60, scope: !2855, inlinedAt: !2077)
!2886 = !DILocation(line: 636, column: 65, scope: !2855, inlinedAt: !2077)
!2887 = !DILocation(line: 636, column: 42, scope: !2855, inlinedAt: !2077)
!2888 = !DILocation(line: 636, column: 45, scope: !2855, inlinedAt: !2077)
!2889 = !DILocation(line: 636, column: 54, scope: !2855, inlinedAt: !2077)
!2890 = !DILocation(line: 636, column: 72, scope: !2855, inlinedAt: !2077)
!2891 = !DILocation(line: 635, column: 18, scope: !2855, inlinedAt: !2077)
!2892 = !DILocation(line: 638, column: 21, scope: !2893, inlinedAt: !2077)
!2893 = distinct !DILexicalBlock(scope: !2855, file: !920, line: 638, column: 21)
!2894 = !DILocation(line: 638, column: 23, scope: !2893, inlinedAt: !2077)
!2895 = !DILocation(line: 638, column: 32, scope: !2893, inlinedAt: !2077)
!2896 = !DILocation(line: 638, column: 35, scope: !2897, inlinedAt: !2077)
!2897 = !DILexicalBlockFile(scope: !2893, file: !920, discriminator: 1)
!2898 = !DILocation(line: 638, column: 38, scope: !2897, inlinedAt: !2077)
!2899 = !DILocation(line: 638, column: 49, scope: !2897, inlinedAt: !2077)
!2900 = !DILocation(line: 638, column: 21, scope: !2897, inlinedAt: !2077)
!2901 = !DILocation(line: 639, column: 40, scope: !2902, inlinedAt: !2077)
!2902 = distinct !DILexicalBlock(scope: !2893, file: !920, line: 638, column: 59)
!2903 = !DILocation(line: 639, column: 44, scope: !2902, inlinedAt: !2077)
!2904 = !DILocation(line: 639, column: 21, scope: !2902, inlinedAt: !2077)
!2905 = !DILocation(line: 640, column: 17, scope: !2902, inlinedAt: !2077)
!2906 = !DILocation(line: 641, column: 25, scope: !2907, inlinedAt: !2077)
!2907 = distinct !DILexicalBlock(scope: !2893, file: !920, line: 640, column: 24)
!2908 = !DILocation(line: 643, column: 13, scope: !2855, inlinedAt: !2077)
!2909 = !DILocation(line: 644, column: 24, scope: !2910, inlinedAt: !2077)
!2910 = distinct !DILexicalBlock(scope: !2851, file: !920, line: 643, column: 20)
!2911 = !DILocation(line: 644, column: 26, scope: !2910, inlinedAt: !2077)
!2912 = !DILocation(line: 644, column: 35, scope: !2910, inlinedAt: !2077)
!2913 = !DILocation(line: 644, column: 38, scope: !2914, inlinedAt: !2077)
!2914 = !DILexicalBlockFile(scope: !2910, file: !920, discriminator: 1)
!2915 = !DILocation(line: 644, column: 41, scope: !2914, inlinedAt: !2077)
!2916 = !DILocation(line: 644, column: 52, scope: !2914, inlinedAt: !2077)
!2917 = !DILocation(line: 644, column: 23, scope: !2914, inlinedAt: !2077)
!2918 = !DILocation(line: 644, column: 83, scope: !2919, inlinedAt: !2077)
!2919 = !DILexicalBlockFile(scope: !2910, file: !920, discriminator: 2)
!2920 = !DILocation(line: 644, column: 64, scope: !2919, inlinedAt: !2077)
!2921 = !DILocation(line: 644, column: 23, scope: !2919, inlinedAt: !2077)
!2922 = !DILocation(line: 644, column: 23, scope: !2923, inlinedAt: !2077)
!2923 = !DILexicalBlockFile(scope: !2910, file: !920, discriminator: 3)
!2924 = !DILocation(line: 644, column: 23, scope: !2925, inlinedAt: !2077)
!2925 = !DILexicalBlockFile(scope: !2910, file: !920, discriminator: 4)
!2926 = !DILocation(line: 644, column: 21, scope: !2925, inlinedAt: !2077)
!2927 = !DILocation(line: 645, column: 23, scope: !2910, inlinedAt: !2077)
!2928 = !DILocation(line: 645, column: 26, scope: !2910, inlinedAt: !2077)
!2929 = !DILocation(line: 645, column: 44, scope: !2914, inlinedAt: !2077)
!2930 = !DILocation(line: 645, column: 23, scope: !2914, inlinedAt: !2077)
!2931 = !DILocation(line: 645, column: 23, scope: !2919, inlinedAt: !2077)
!2932 = !DILocation(line: 645, column: 23, scope: !2923, inlinedAt: !2077)
!2933 = !DILocation(line: 645, column: 21, scope: !2923, inlinedAt: !2077)
!2934 = !DILocation(line: 647, column: 20, scope: !2852, inlinedAt: !2077)
!2935 = !DILocation(line: 648, column: 9, scope: !2852, inlinedAt: !2077)
!2936 = !DILocation(line: 649, column: 36, scope: !2106, inlinedAt: !2077)
!2937 = !DILocation(line: 649, column: 18, scope: !2106, inlinedAt: !2077)
!2938 = !DILocation(line: 70, column: 18, scope: !2122, inlinedAt: !2128)
!2939 = !DILocation(line: 70, column: 22, scope: !2122, inlinedAt: !2128)
!2940 = !DILocation(line: 70, column: 33, scope: !2122, inlinedAt: !2128)
!2941 = !DILocation(line: 70, column: 16, scope: !2122, inlinedAt: !2128)
!2942 = !DILocation(line: 71, column: 37, scope: !2122, inlinedAt: !2128)
!2943 = !DILocation(line: 71, column: 41, scope: !2122, inlinedAt: !2128)
!2944 = !DILocation(line: 71, column: 47, scope: !2122, inlinedAt: !2128)
!2945 = !DILocation(line: 71, column: 22, scope: !2122, inlinedAt: !2128)
!2946 = !DILocation(line: 71, column: 20, scope: !2122, inlinedAt: !2128)
!2947 = !DILocation(line: 71, column: 52, scope: !2122, inlinedAt: !2128)
!2948 = !DILocation(line: 71, column: 14, scope: !2122, inlinedAt: !2128)
!2949 = !DILocation(line: 72, column: 13, scope: !2122, inlinedAt: !2128)
!2950 = !DILocation(line: 72, column: 17, scope: !2122, inlinedAt: !2128)
!2951 = !DILocation(line: 72, column: 27, scope: !2122, inlinedAt: !2128)
!2952 = !DILocation(line: 72, column: 35, scope: !2122, inlinedAt: !2128)
!2953 = !DILocation(line: 72, column: 23, scope: !2122, inlinedAt: !2128)
!2954 = !DILocation(line: 72, column: 11, scope: !2122, inlinedAt: !2128)
!2955 = !DILocation(line: 74, column: 12, scope: !2140, inlinedAt: !2128)
!2956 = !DILocation(line: 74, column: 10, scope: !2140, inlinedAt: !2128)
!2957 = !DILocation(line: 74, column: 17, scope: !2705, inlinedAt: !2128)
!2958 = !DILocation(line: 74, column: 19, scope: !2705, inlinedAt: !2128)
!2959 = !DILocation(line: 74, column: 5, scope: !2705, inlinedAt: !2128)
!2960 = !DILocation(line: 76, column: 17, scope: !2138, inlinedAt: !2128)
!2961 = !DILocation(line: 76, column: 25, scope: !2138, inlinedAt: !2128)
!2962 = !DILocation(line: 76, column: 23, scope: !2138, inlinedAt: !2128)
!2963 = !DILocation(line: 76, column: 31, scope: !2138, inlinedAt: !2128)
!2964 = !DILocation(line: 76, column: 15, scope: !2138, inlinedAt: !2128)
!2965 = !DILocation(line: 77, column: 15, scope: !2138, inlinedAt: !2128)
!2966 = !DILocation(line: 77, column: 21, scope: !2138, inlinedAt: !2128)
!2967 = !DILocation(line: 77, column: 13, scope: !2138, inlinedAt: !2128)
!2968 = !DILocation(line: 78, column: 20, scope: !2138, inlinedAt: !2128)
!2969 = !DILocation(line: 78, column: 29, scope: !2138, inlinedAt: !2128)
!2970 = !DILocation(line: 78, column: 36, scope: !2138, inlinedAt: !2128)
!2971 = !DILocation(line: 78, column: 34, scope: !2138, inlinedAt: !2128)
!2972 = !DILocation(line: 78, column: 18, scope: !2138, inlinedAt: !2128)
!2973 = !DILocation(line: 79, column: 19, scope: !2138, inlinedAt: !2128)
!2974 = !DILocation(line: 79, column: 15, scope: !2138, inlinedAt: !2128)
!2975 = !DILocation(line: 74, column: 25, scope: !2724, inlinedAt: !2128)
!2976 = !DILocation(line: 74, column: 5, scope: !2724, inlinedAt: !2128)
!2977 = !DILocation(line: 82, column: 12, scope: !2122, inlinedAt: !2128)
!2978 = !DILocation(line: 82, column: 25, scope: !2122, inlinedAt: !2128)
!2979 = !DILocation(line: 82, column: 23, scope: !2122, inlinedAt: !2128)
!2980 = !DILocation(line: 649, column: 42, scope: !2106, inlinedAt: !2077)
!2981 = !DILocation(line: 649, column: 40, scope: !2106, inlinedAt: !2077)
!2982 = !DILocation(line: 649, column: 16, scope: !2106, inlinedAt: !2077)
!2983 = !DILocation(line: 650, column: 14, scope: !2106, inlinedAt: !2077)
!2984 = !DILocation(line: 650, column: 11, scope: !2106, inlinedAt: !2077)
!2985 = !DILocation(line: 652, column: 21, scope: !2106, inlinedAt: !2077)
!2986 = !DILocation(line: 652, column: 19, scope: !2106, inlinedAt: !2077)
!2987 = !DILocation(line: 653, column: 13, scope: !2118, inlinedAt: !2077)
!2988 = !DILocation(line: 653, column: 20, scope: !2118, inlinedAt: !2077)
!2989 = !DILocation(line: 653, column: 13, scope: !2106, inlinedAt: !2077)
!2990 = !DILocation(line: 654, column: 18, scope: !2117, inlinedAt: !2077)
!2991 = !DILocation(line: 655, column: 19, scope: !2117, inlinedAt: !2077)
!2992 = !DILocation(line: 656, column: 36, scope: !2117, inlinedAt: !2077)
!2993 = !DILocation(line: 656, column: 42, scope: !2117, inlinedAt: !2077)
!2994 = !DILocation(line: 656, column: 20, scope: !2117, inlinedAt: !2077)
!2995 = !DILocation(line: 243, column: 12, scope: !2112, inlinedAt: !2116)
!2996 = !DILocation(line: 243, column: 23, scope: !2112, inlinedAt: !2116)
!2997 = !DILocation(line: 243, column: 20, scope: !2112, inlinedAt: !2116)
!2998 = !DILocation(line: 243, column: 26, scope: !2112, inlinedAt: !2116)
!2999 = !DILocation(line: 243, column: 14, scope: !2112, inlinedAt: !2116)
!3000 = !DILocation(line: 656, column: 18, scope: !2117, inlinedAt: !2077)
!3001 = !DILocation(line: 657, column: 19, scope: !2117, inlinedAt: !2077)
!3002 = !DILocation(line: 658, column: 9, scope: !2117, inlinedAt: !2077)
!3003 = !DILocation(line: 658, column: 20, scope: !3004, inlinedAt: !2077)
!3004 = !DILexicalBlockFile(scope: !3005, file: !920, discriminator: 1)
!3005 = distinct !DILexicalBlock(scope: !2118, file: !920, line: 658, column: 20)
!3006 = !DILocation(line: 658, column: 27, scope: !3004, inlinedAt: !2077)
!3007 = !DILocation(line: 659, column: 18, scope: !3008, inlinedAt: !2077)
!3008 = distinct !DILexicalBlock(scope: !3005, file: !920, line: 658, column: 37)
!3009 = !DILocation(line: 660, column: 19, scope: !3008, inlinedAt: !2077)
!3010 = !DILocation(line: 661, column: 28, scope: !3008, inlinedAt: !2077)
!3011 = !DILocation(line: 661, column: 25, scope: !3008, inlinedAt: !2077)
!3012 = !DILocation(line: 661, column: 36, scope: !3008, inlinedAt: !2077)
!3013 = !DILocation(line: 661, column: 44, scope: !3008, inlinedAt: !2077)
!3014 = !DILocation(line: 661, column: 41, scope: !3008, inlinedAt: !2077)
!3015 = !DILocation(line: 661, column: 18, scope: !3008, inlinedAt: !2077)
!3016 = !DILocation(line: 662, column: 19, scope: !3008, inlinedAt: !2077)
!3017 = !DILocation(line: 663, column: 9, scope: !3008, inlinedAt: !2077)
!3018 = !DILocation(line: 664, column: 29, scope: !3019, inlinedAt: !2077)
!3019 = distinct !DILexicalBlock(scope: !3005, file: !920, line: 663, column: 16)
!3020 = !DILocation(line: 664, column: 20, scope: !3019, inlinedAt: !2077)
!3021 = !DILocation(line: 664, column: 18, scope: !3019, inlinedAt: !2077)
!3022 = !DILocation(line: 665, column: 36, scope: !3019, inlinedAt: !2077)
!3023 = !DILocation(line: 665, column: 35, scope: !3019, inlinedAt: !2077)
!3024 = !DILocation(line: 665, column: 30, scope: !3019, inlinedAt: !2077)
!3025 = !DILocation(line: 665, column: 21, scope: !3019, inlinedAt: !2077)
!3026 = !DILocation(line: 665, column: 19, scope: !3019, inlinedAt: !2077)
!3027 = !DILocation(line: 668, column: 26, scope: !3019, inlinedAt: !2077)
!3028 = !DILocation(line: 668, column: 28, scope: !3019, inlinedAt: !2077)
!3029 = !DILocation(line: 668, column: 33, scope: !3019, inlinedAt: !2077)
!3030 = !DILocation(line: 668, column: 55, scope: !3019, inlinedAt: !2077)
!3031 = !DILocation(line: 668, column: 62, scope: !3019, inlinedAt: !2077)
!3032 = !DILocation(line: 668, column: 42, scope: !3019, inlinedAt: !2077)
!3033 = !DILocation(line: 668, column: 39, scope: !3019, inlinedAt: !2077)
!3034 = !DILocation(line: 668, column: 70, scope: !3019, inlinedAt: !2077)
!3035 = !DILocation(line: 668, column: 79, scope: !3019, inlinedAt: !2077)
!3036 = !DILocation(line: 668, column: 19, scope: !3019, inlinedAt: !2077)
!3037 = !DILocation(line: 671, column: 15, scope: !2106, inlinedAt: !2077)
!3038 = !DILocation(line: 671, column: 20, scope: !2106, inlinedAt: !2077)
!3039 = !DILocation(line: 671, column: 13, scope: !2106, inlinedAt: !2077)
!3040 = !DILocation(line: 672, column: 16, scope: !2106, inlinedAt: !2077)
!3041 = !DILocation(line: 672, column: 22, scope: !2106, inlinedAt: !2077)
!3042 = !DILocation(line: 672, column: 14, scope: !2106, inlinedAt: !2077)
!3043 = !DILocation(line: 677, column: 13, scope: !2105, inlinedAt: !2077)
!3044 = !DILocation(line: 677, column: 15, scope: !2105, inlinedAt: !2077)
!3045 = !DILocation(line: 677, column: 20, scope: !2105, inlinedAt: !2077)
!3046 = !DILocation(line: 677, column: 23, scope: !3047, inlinedAt: !2077)
!3047 = !DILexicalBlockFile(scope: !2105, file: !920, discriminator: 1)
!3048 = !DILocation(line: 677, column: 13, scope: !3047, inlinedAt: !2077)
!3049 = !DILocation(line: 682, column: 21, scope: !2259, inlinedAt: !2077)
!3050 = !DILocation(line: 682, column: 19, scope: !2259, inlinedAt: !2077)
!3051 = !DILocation(line: 684, column: 22, scope: !2259, inlinedAt: !2077)
!3052 = !DILocation(line: 684, column: 29, scope: !2259, inlinedAt: !2077)
!3053 = !DILocation(line: 684, column: 34, scope: !2259, inlinedAt: !2077)
!3054 = !DILocation(line: 684, column: 37, scope: !3055, inlinedAt: !2077)
!3055 = !DILexicalBlockFile(scope: !2259, file: !920, discriminator: 1)
!3056 = !DILocation(line: 684, column: 44, scope: !3055, inlinedAt: !2077)
!3057 = !DILocation(line: 684, column: 21, scope: !3058, inlinedAt: !2077)
!3058 = !DILexicalBlockFile(scope: !2259, file: !920, discriminator: 2)
!3059 = !DILocation(line: 684, column: 19, scope: !3058, inlinedAt: !2077)
!3060 = !DILocation(line: 685, column: 22, scope: !2259, inlinedAt: !2077)
!3061 = !DILocation(line: 685, column: 19, scope: !2259, inlinedAt: !2077)
!3062 = !DILocation(line: 686, column: 18, scope: !2259, inlinedAt: !2077)
!3063 = !DILocation(line: 686, column: 25, scope: !2259, inlinedAt: !2077)
!3064 = !DILocation(line: 686, column: 15, scope: !2259, inlinedAt: !2077)
!3065 = !DILocation(line: 687, column: 30, scope: !2259, inlinedAt: !2077)
!3066 = !DILocation(line: 687, column: 37, scope: !2259, inlinedAt: !2077)
!3067 = !DILocation(line: 687, column: 36, scope: !2259, inlinedAt: !2077)
!3068 = !DILocation(line: 687, column: 13, scope: !2259, inlinedAt: !2077)
!3069 = !DILocation(line: 687, column: 16, scope: !2259, inlinedAt: !2077)
!3070 = !DILocation(line: 687, column: 27, scope: !2259, inlinedAt: !2077)
!3071 = !DILocation(line: 689, column: 18, scope: !2259, inlinedAt: !2077)
!3072 = !DILocation(line: 689, column: 22, scope: !3055, inlinedAt: !2077)
!3073 = !DILocation(line: 689, column: 18, scope: !3055, inlinedAt: !2077)
!3074 = !DILocation(line: 689, column: 26, scope: !3058, inlinedAt: !2077)
!3075 = !DILocation(line: 689, column: 18, scope: !3058, inlinedAt: !2077)
!3076 = !DILocation(line: 689, column: 18, scope: !3077, inlinedAt: !2077)
!3077 = !DILexicalBlockFile(scope: !2259, file: !920, discriminator: 3)
!3078 = !DILocation(line: 689, column: 16, scope: !3077, inlinedAt: !2077)
!3079 = !DILocation(line: 690, column: 18, scope: !2259, inlinedAt: !2077)
!3080 = !DILocation(line: 690, column: 22, scope: !3055, inlinedAt: !2077)
!3081 = !DILocation(line: 690, column: 18, scope: !3055, inlinedAt: !2077)
!3082 = !DILocation(line: 690, column: 26, scope: !3058, inlinedAt: !2077)
!3083 = !DILocation(line: 690, column: 18, scope: !3058, inlinedAt: !2077)
!3084 = !DILocation(line: 690, column: 18, scope: !3077, inlinedAt: !2077)
!3085 = !DILocation(line: 690, column: 16, scope: !3077, inlinedAt: !2077)
!3086 = !DILocation(line: 691, column: 17, scope: !3087, inlinedAt: !2077)
!3087 = distinct !DILexicalBlock(scope: !2259, file: !920, line: 691, column: 17)
!3088 = !DILocation(line: 691, column: 17, scope: !2259, inlinedAt: !2077)
!3089 = !DILocation(line: 692, column: 21, scope: !3090, inlinedAt: !2077)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !920, line: 692, column: 21)
!3091 = distinct !DILexicalBlock(scope: !3087, file: !920, line: 691, column: 24)
!3092 = !DILocation(line: 692, column: 21, scope: !3091, inlinedAt: !2077)
!3093 = !DILocation(line: 693, column: 28, scope: !3094, inlinedAt: !2077)
!3094 = distinct !DILexicalBlock(scope: !3090, file: !920, line: 692, column: 28)
!3095 = !DILocation(line: 693, column: 34, scope: !3094, inlinedAt: !2077)
!3096 = !DILocation(line: 693, column: 33, scope: !3094, inlinedAt: !2077)
!3097 = !DILocation(line: 693, column: 42, scope: !3094, inlinedAt: !2077)
!3098 = !DILocation(line: 693, column: 48, scope: !3094, inlinedAt: !2077)
!3099 = !DILocation(line: 693, column: 47, scope: !3094, inlinedAt: !2077)
!3100 = !DILocation(line: 693, column: 40, scope: !3094, inlinedAt: !2077)
!3101 = !DILocation(line: 693, column: 54, scope: !3094, inlinedAt: !2077)
!3102 = !DILocation(line: 693, column: 26, scope: !3094, inlinedAt: !2077)
!3103 = !DILocation(line: 694, column: 40, scope: !3094, inlinedAt: !2077)
!3104 = !DILocation(line: 694, column: 44, scope: !3094, inlinedAt: !2077)
!3105 = !DILocation(line: 694, column: 21, scope: !3094, inlinedAt: !2077)
!3106 = !DILocation(line: 695, column: 17, scope: !3094, inlinedAt: !2077)
!3107 = !DILocation(line: 696, column: 47, scope: !3108, inlinedAt: !2077)
!3108 = distinct !DILexicalBlock(scope: !3090, file: !920, line: 695, column: 24)
!3109 = !DILocation(line: 696, column: 28, scope: !3108, inlinedAt: !2077)
!3110 = !DILocation(line: 696, column: 26, scope: !3108, inlinedAt: !2077)
!3111 = !DILocation(line: 698, column: 13, scope: !3091, inlinedAt: !2077)
!3112 = !DILocation(line: 699, column: 28, scope: !2259, inlinedAt: !2077)
!3113 = !DILocation(line: 699, column: 26, scope: !2259, inlinedAt: !2077)
!3114 = !DILocation(line: 699, column: 22, scope: !2259, inlinedAt: !2077)
!3115 = !DILocation(line: 699, column: 18, scope: !2259, inlinedAt: !2077)
!3116 = !DILocation(line: 702, column: 18, scope: !2259, inlinedAt: !2077)
!3117 = !DILocation(line: 702, column: 23, scope: !2259, inlinedAt: !2077)
!3118 = !DILocation(line: 702, column: 34, scope: !2259, inlinedAt: !2077)
!3119 = !DILocation(line: 702, column: 39, scope: !2259, inlinedAt: !2077)
!3120 = !DILocation(line: 702, column: 42, scope: !2259, inlinedAt: !2077)
!3121 = !DILocation(line: 702, column: 46, scope: !2259, inlinedAt: !2077)
!3122 = !DILocation(line: 702, column: 52, scope: !2259, inlinedAt: !2077)
!3123 = !DILocation(line: 702, column: 61, scope: !2259, inlinedAt: !2077)
!3124 = !DILocation(line: 702, column: 64, scope: !2259, inlinedAt: !2077)
!3125 = !DILocation(line: 702, column: 71, scope: !2259, inlinedAt: !2077)
!3126 = !DILocation(line: 702, column: 79, scope: !2259, inlinedAt: !2077)
!3127 = !DILocation(line: 702, column: 88, scope: !2259, inlinedAt: !2077)
!3128 = !DILocation(line: 703, column: 34, scope: !2259, inlinedAt: !2077)
!3129 = !DILocation(line: 703, column: 47, scope: !2259, inlinedAt: !2077)
!3130 = !DILocation(line: 703, column: 54, scope: !2259, inlinedAt: !2077)
!3131 = !DILocation(line: 703, column: 60, scope: !2259, inlinedAt: !2077)
!3132 = !DILocation(line: 703, column: 77, scope: !2259, inlinedAt: !2077)
!3133 = !DILocation(line: 702, column: 16, scope: !2259, inlinedAt: !2077)
!3134 = !DILocation(line: 706, column: 22, scope: !2259, inlinedAt: !2077)
!3135 = !DILocation(line: 706, column: 21, scope: !2259, inlinedAt: !2077)
!3136 = !DILocation(line: 706, column: 29, scope: !2259, inlinedAt: !2077)
!3137 = !DILocation(line: 706, column: 27, scope: !2259, inlinedAt: !2077)
!3138 = !DILocation(line: 706, column: 13, scope: !2259, inlinedAt: !2077)
!3139 = !DILocation(line: 706, column: 19, scope: !2259, inlinedAt: !2077)
!3140 = !DILocation(line: 707, column: 21, scope: !2259, inlinedAt: !2077)
!3141 = !DILocation(line: 707, column: 28, scope: !2259, inlinedAt: !2077)
!3142 = !DILocation(line: 707, column: 26, scope: !2259, inlinedAt: !2077)
!3143 = !DILocation(line: 707, column: 13, scope: !2259, inlinedAt: !2077)
!3144 = !DILocation(line: 707, column: 19, scope: !2259, inlinedAt: !2077)
!3145 = !DILocation(line: 708, column: 21, scope: !2259, inlinedAt: !2077)
!3146 = !DILocation(line: 708, column: 13, scope: !2259, inlinedAt: !2077)
!3147 = !DILocation(line: 708, column: 18, scope: !2259, inlinedAt: !2077)
!3148 = !DILocation(line: 709, column: 21, scope: !2259, inlinedAt: !2077)
!3149 = !DILocation(line: 709, column: 13, scope: !2259, inlinedAt: !2077)
!3150 = !DILocation(line: 709, column: 18, scope: !2259, inlinedAt: !2077)
!3151 = !DILocation(line: 710, column: 21, scope: !2259, inlinedAt: !2077)
!3152 = !DILocation(line: 710, column: 13, scope: !2259, inlinedAt: !2077)
!3153 = !DILocation(line: 710, column: 18, scope: !2259, inlinedAt: !2077)
!3154 = !DILocation(line: 711, column: 21, scope: !2259, inlinedAt: !2077)
!3155 = !DILocation(line: 711, column: 13, scope: !2259, inlinedAt: !2077)
!3156 = !DILocation(line: 711, column: 18, scope: !2259, inlinedAt: !2077)
!3157 = !DILocation(line: 712, column: 19, scope: !2259, inlinedAt: !2077)
!3158 = !DILocation(line: 712, column: 17, scope: !2259, inlinedAt: !2077)
!3159 = !DILocation(line: 713, column: 20, scope: !2259, inlinedAt: !2077)
!3160 = !DILocation(line: 713, column: 26, scope: !2259, inlinedAt: !2077)
!3161 = !DILocation(line: 713, column: 24, scope: !2259, inlinedAt: !2077)
!3162 = !DILocation(line: 713, column: 13, scope: !2259, inlinedAt: !2077)
!3163 = !DILocation(line: 713, column: 18, scope: !2259, inlinedAt: !2077)
!3164 = !DILocation(line: 714, column: 20, scope: !2259, inlinedAt: !2077)
!3165 = !DILocation(line: 714, column: 26, scope: !2259, inlinedAt: !2077)
!3166 = !DILocation(line: 714, column: 24, scope: !2259, inlinedAt: !2077)
!3167 = !DILocation(line: 714, column: 13, scope: !2259, inlinedAt: !2077)
!3168 = !DILocation(line: 714, column: 18, scope: !2259, inlinedAt: !2077)
!3169 = !DILocation(line: 715, column: 19, scope: !2259, inlinedAt: !2077)
!3170 = !DILocation(line: 715, column: 17, scope: !2259, inlinedAt: !2077)
!3171 = !DILocation(line: 716, column: 20, scope: !2259, inlinedAt: !2077)
!3172 = !DILocation(line: 716, column: 26, scope: !2259, inlinedAt: !2077)
!3173 = !DILocation(line: 716, column: 24, scope: !2259, inlinedAt: !2077)
!3174 = !DILocation(line: 716, column: 13, scope: !2259, inlinedAt: !2077)
!3175 = !DILocation(line: 716, column: 18, scope: !2259, inlinedAt: !2077)
!3176 = !DILocation(line: 717, column: 20, scope: !2259, inlinedAt: !2077)
!3177 = !DILocation(line: 717, column: 26, scope: !2259, inlinedAt: !2077)
!3178 = !DILocation(line: 717, column: 24, scope: !2259, inlinedAt: !2077)
!3179 = !DILocation(line: 717, column: 13, scope: !2259, inlinedAt: !2077)
!3180 = !DILocation(line: 717, column: 18, scope: !2259, inlinedAt: !2077)
!3181 = !DILocation(line: 718, column: 9, scope: !2259, inlinedAt: !2077)
!3182 = !DILocation(line: 728, column: 17, scope: !3183, inlinedAt: !2077)
!3183 = distinct !DILexicalBlock(scope: !2104, file: !920, line: 728, column: 17)
!3184 = !DILocation(line: 728, column: 20, scope: !3183, inlinedAt: !2077)
!3185 = !DILocation(line: 728, column: 24, scope: !3183, inlinedAt: !2077)
!3186 = !DILocation(line: 728, column: 28, scope: !3187, inlinedAt: !2077)
!3187 = !DILexicalBlockFile(scope: !3183, file: !920, discriminator: 1)
!3188 = !DILocation(line: 728, column: 35, scope: !3187, inlinedAt: !2077)
!3189 = !DILocation(line: 728, column: 39, scope: !3190, inlinedAt: !2077)
!3190 = !DILexicalBlockFile(scope: !3183, file: !920, discriminator: 2)
!3191 = !DILocation(line: 728, column: 46, scope: !3190, inlinedAt: !2077)
!3192 = !DILocation(line: 728, column: 17, scope: !3190, inlinedAt: !2077)
!3193 = !DILocation(line: 729, column: 21, scope: !3194, inlinedAt: !2077)
!3194 = distinct !DILexicalBlock(scope: !3195, file: !920, line: 729, column: 21)
!3195 = distinct !DILexicalBlock(scope: !3183, file: !920, line: 728, column: 57)
!3196 = !DILocation(line: 729, column: 28, scope: !3194, inlinedAt: !2077)
!3197 = !DILocation(line: 729, column: 21, scope: !3195, inlinedAt: !2077)
!3198 = !DILocation(line: 731, column: 30, scope: !3194, inlinedAt: !2077)
!3199 = !DILocation(line: 731, column: 44, scope: !3194, inlinedAt: !2077)
!3200 = !DILocation(line: 731, column: 42, scope: !3194, inlinedAt: !2077)
!3201 = !DILocation(line: 731, column: 36, scope: !3194, inlinedAt: !2077)
!3202 = !DILocation(line: 731, column: 27, scope: !3194, inlinedAt: !2077)
!3203 = !DILocation(line: 731, column: 21, scope: !3194, inlinedAt: !2077)
!3204 = !DILocation(line: 735, column: 37, scope: !3194, inlinedAt: !2077)
!3205 = !DILocation(line: 735, column: 46, scope: !3194, inlinedAt: !2077)
!3206 = !DILocation(line: 735, column: 48, scope: !3194, inlinedAt: !2077)
!3207 = !DILocation(line: 735, column: 61, scope: !3194, inlinedAt: !2077)
!3208 = !DILocation(line: 735, column: 59, scope: !3194, inlinedAt: !2077)
!3209 = !DILocation(line: 735, column: 53, scope: !3194, inlinedAt: !2077)
!3210 = !DILocation(line: 735, column: 43, scope: !3194, inlinedAt: !2077)
!3211 = !DILocation(line: 735, column: 34, scope: !3194, inlinedAt: !2077)
!3212 = !DILocation(line: 735, column: 30, scope: !3194, inlinedAt: !2077)
!3213 = !DILocation(line: 735, column: 76, scope: !3214, inlinedAt: !2077)
!3214 = !DILexicalBlockFile(scope: !3194, file: !920, discriminator: 1)
!3215 = !DILocation(line: 735, column: 85, scope: !3214, inlinedAt: !2077)
!3216 = !DILocation(line: 735, column: 87, scope: !3214, inlinedAt: !2077)
!3217 = !DILocation(line: 735, column: 100, scope: !3214, inlinedAt: !2077)
!3218 = !DILocation(line: 735, column: 98, scope: !3214, inlinedAt: !2077)
!3219 = !DILocation(line: 735, column: 92, scope: !3214, inlinedAt: !2077)
!3220 = !DILocation(line: 735, column: 82, scope: !3214, inlinedAt: !2077)
!3221 = !DILocation(line: 735, column: 30, scope: !3214, inlinedAt: !2077)
!3222 = !DILocation(line: 735, column: 30, scope: !3223, inlinedAt: !2077)
!3223 = !DILexicalBlockFile(scope: !3194, file: !920, discriminator: 2)
!3224 = !DILocation(line: 735, column: 30, scope: !3225, inlinedAt: !2077)
!3225 = !DILexicalBlockFile(scope: !3194, file: !920, discriminator: 3)
!3226 = !DILocation(line: 735, column: 27, scope: !3225, inlinedAt: !2077)
!3227 = !DILocation(line: 736, column: 13, scope: !3195, inlinedAt: !2077)
!3228 = !DILocation(line: 737, column: 32, scope: !2104, inlinedAt: !2077)
!3229 = !DILocation(line: 737, column: 36, scope: !2104, inlinedAt: !2077)
!3230 = !DILocation(line: 737, column: 34, scope: !2104, inlinedAt: !2077)
!3231 = !DILocation(line: 737, column: 43, scope: !2104, inlinedAt: !2077)
!3232 = !DILocation(line: 737, column: 51, scope: !2104, inlinedAt: !2077)
!3233 = !DILocation(line: 737, column: 21, scope: !2104, inlinedAt: !2077)
!3234 = !DILocation(line: 132, column: 9, scope: !3235, inlinedAt: !2103)
!3235 = distinct !DILexicalBlock(scope: !2098, file: !2099, line: 132, column: 9)
!3236 = !DILocation(line: 132, column: 13, scope: !3235, inlinedAt: !2103)
!3237 = !DILocation(line: 132, column: 11, scope: !3235, inlinedAt: !2103)
!3238 = !DILocation(line: 132, column: 9, scope: !2098, inlinedAt: !2103)
!3239 = !DILocation(line: 132, column: 26, scope: !3240, inlinedAt: !2103)
!3240 = !DILexicalBlockFile(scope: !3235, file: !2099, discriminator: 1)
!3241 = !DILocation(line: 132, column: 19, scope: !3240, inlinedAt: !2103)
!3242 = !DILocation(line: 133, column: 14, scope: !3243, inlinedAt: !2103)
!3243 = distinct !DILexicalBlock(scope: !3235, file: !2099, line: 133, column: 14)
!3244 = !DILocation(line: 133, column: 18, scope: !3243, inlinedAt: !2103)
!3245 = !DILocation(line: 133, column: 16, scope: !3243, inlinedAt: !2103)
!3246 = !DILocation(line: 133, column: 14, scope: !3235, inlinedAt: !2103)
!3247 = !DILocation(line: 133, column: 31, scope: !3248, inlinedAt: !2103)
!3248 = !DILexicalBlockFile(scope: !3243, file: !2099, discriminator: 1)
!3249 = !DILocation(line: 133, column: 24, scope: !3248, inlinedAt: !2103)
!3250 = !DILocation(line: 134, column: 17, scope: !3243, inlinedAt: !2103)
!3251 = !DILocation(line: 134, column: 10, scope: !3243, inlinedAt: !2103)
!3252 = !DILocation(line: 135, column: 1, scope: !2098, inlinedAt: !2103)
!3253 = !DILocation(line: 737, column: 19, scope: !2104, inlinedAt: !2077)
!3254 = !DILocation(line: 738, column: 21, scope: !2104, inlinedAt: !2077)
!3255 = !DILocation(line: 738, column: 25, scope: !2104, inlinedAt: !2077)
!3256 = !DILocation(line: 738, column: 23, scope: !2104, inlinedAt: !2077)
!3257 = !DILocation(line: 738, column: 19, scope: !2104, inlinedAt: !2077)
!3258 = !DILocation(line: 739, column: 30, scope: !2104, inlinedAt: !2077)
!3259 = !DILocation(line: 739, column: 13, scope: !2104, inlinedAt: !2077)
!3260 = !DILocation(line: 739, column: 16, scope: !2104, inlinedAt: !2077)
!3261 = !DILocation(line: 739, column: 27, scope: !2104, inlinedAt: !2077)
!3262 = !DILocation(line: 741, column: 17, scope: !3263, inlinedAt: !2077)
!3263 = distinct !DILexicalBlock(scope: !2104, file: !920, line: 741, column: 17)
!3264 = !DILocation(line: 741, column: 25, scope: !3263, inlinedAt: !2077)
!3265 = !DILocation(line: 741, column: 29, scope: !3266, inlinedAt: !2077)
!3266 = !DILexicalBlockFile(scope: !3263, file: !920, discriminator: 1)
!3267 = !DILocation(line: 741, column: 17, scope: !3266, inlinedAt: !2077)
!3268 = !DILocation(line: 742, column: 33, scope: !3263, inlinedAt: !2077)
!3269 = !DILocation(line: 742, column: 43, scope: !3263, inlinedAt: !2077)
!3270 = !DILocation(line: 742, column: 41, scope: !3263, inlinedAt: !2077)
!3271 = !DILocation(line: 742, column: 31, scope: !3263, inlinedAt: !2077)
!3272 = !DILocation(line: 742, column: 17, scope: !3263, inlinedAt: !2077)
!3273 = !DILocation(line: 746, column: 17, scope: !3274, inlinedAt: !2077)
!3274 = distinct !DILexicalBlock(scope: !2104, file: !920, line: 746, column: 17)
!3275 = !DILocation(line: 746, column: 17, scope: !2104, inlinedAt: !2077)
!3276 = !DILocation(line: 747, column: 37, scope: !3274, inlinedAt: !2077)
!3277 = !DILocation(line: 747, column: 35, scope: !3274, inlinedAt: !2077)
!3278 = !DILocation(line: 747, column: 17, scope: !3274, inlinedAt: !2077)
!3279 = !DILocation(line: 749, column: 30, scope: !3274, inlinedAt: !2077)
!3280 = !DILocation(line: 749, column: 36, scope: !3274, inlinedAt: !2077)
!3281 = !DILocation(line: 749, column: 28, scope: !3274, inlinedAt: !2077)
!3282 = !DILocation(line: 751, column: 25, scope: !2104, inlinedAt: !2077)
!3283 = !DILocation(line: 751, column: 28, scope: !2104, inlinedAt: !2077)
!3284 = !DILocation(line: 751, column: 23, scope: !2104, inlinedAt: !2077)
!3285 = !DILocation(line: 752, column: 17, scope: !3286, inlinedAt: !2077)
!3286 = distinct !DILexicalBlock(scope: !2104, file: !920, line: 752, column: 17)
!3287 = !DILocation(line: 752, column: 26, scope: !3286, inlinedAt: !2077)
!3288 = !DILocation(line: 752, column: 23, scope: !3286, inlinedAt: !2077)
!3289 = !DILocation(line: 752, column: 17, scope: !2104, inlinedAt: !2077)
!3290 = !DILocation(line: 755, column: 22, scope: !3291, inlinedAt: !2077)
!3291 = distinct !DILexicalBlock(scope: !3286, file: !920, line: 752, column: 33)
!3292 = !DILocation(line: 755, column: 27, scope: !3291, inlinedAt: !2077)
!3293 = !DILocation(line: 755, column: 38, scope: !3291, inlinedAt: !2077)
!3294 = !DILocation(line: 755, column: 43, scope: !3291, inlinedAt: !2077)
!3295 = !DILocation(line: 755, column: 46, scope: !3291, inlinedAt: !2077)
!3296 = !DILocation(line: 755, column: 50, scope: !3291, inlinedAt: !2077)
!3297 = !DILocation(line: 755, column: 56, scope: !3291, inlinedAt: !2077)
!3298 = !DILocation(line: 755, column: 64, scope: !3291, inlinedAt: !2077)
!3299 = !DILocation(line: 755, column: 67, scope: !3291, inlinedAt: !2077)
!3300 = !DILocation(line: 755, column: 74, scope: !3291, inlinedAt: !2077)
!3301 = !DILocation(line: 756, column: 38, scope: !3291, inlinedAt: !2077)
!3302 = !DILocation(line: 756, column: 47, scope: !3291, inlinedAt: !2077)
!3303 = !DILocation(line: 756, column: 57, scope: !3291, inlinedAt: !2077)
!3304 = !DILocation(line: 756, column: 76, scope: !3291, inlinedAt: !2077)
!3305 = !DILocation(line: 757, column: 38, scope: !3291, inlinedAt: !2077)
!3306 = !DILocation(line: 757, column: 38, scope: !3307, inlinedAt: !2077)
!3307 = !DILexicalBlockFile(scope: !3291, file: !920, discriminator: 1)
!3308 = !DILocation(line: 757, column: 55, scope: !3309, inlinedAt: !2077)
!3309 = !DILexicalBlockFile(scope: !3291, file: !920, discriminator: 2)
!3310 = !DILocation(line: 757, column: 62, scope: !3309, inlinedAt: !2077)
!3311 = !DILocation(line: 757, column: 60, scope: !3309, inlinedAt: !2077)
!3312 = !DILocation(line: 757, column: 38, scope: !3309, inlinedAt: !2077)
!3313 = !DILocation(line: 757, column: 38, scope: !3314, inlinedAt: !2077)
!3314 = !DILexicalBlockFile(scope: !3291, file: !920, discriminator: 3)
!3315 = !DILocation(line: 757, column: 68, scope: !3314, inlinedAt: !2077)
!3316 = !DILocation(line: 757, column: 85, scope: !3314, inlinedAt: !2077)
!3317 = !DILocation(line: 755, column: 22, scope: !3307, inlinedAt: !2077)
!3318 = !DILocation(line: 755, column: 20, scope: !3307, inlinedAt: !2077)
!3319 = !DILocation(line: 758, column: 29, scope: !3291, inlinedAt: !2077)
!3320 = !DILocation(line: 758, column: 38, scope: !3291, inlinedAt: !2077)
!3321 = !DILocation(line: 758, column: 50, scope: !3291, inlinedAt: !2077)
!3322 = !DILocation(line: 758, column: 53, scope: !3291, inlinedAt: !2077)
!3323 = !DILocation(line: 758, column: 48, scope: !3291, inlinedAt: !2077)
!3324 = !DILocation(line: 758, column: 35, scope: !3291, inlinedAt: !2077)
!3325 = !DILocation(line: 758, column: 27, scope: !3291, inlinedAt: !2077)
!3326 = !DILocation(line: 759, column: 21, scope: !3327, inlinedAt: !2077)
!3327 = distinct !DILexicalBlock(scope: !3291, file: !920, line: 759, column: 21)
!3328 = !DILocation(line: 759, column: 31, scope: !3327, inlinedAt: !2077)
!3329 = !DILocation(line: 759, column: 40, scope: !3327, inlinedAt: !2077)
!3330 = !DILocation(line: 759, column: 43, scope: !3331, inlinedAt: !2077)
!3331 = !DILexicalBlockFile(scope: !3327, file: !920, discriminator: 1)
!3332 = !DILocation(line: 759, column: 50, scope: !3331, inlinedAt: !2077)
!3333 = !DILocation(line: 759, column: 21, scope: !3331, inlinedAt: !2077)
!3334 = !DILocation(line: 760, column: 30, scope: !3327, inlinedAt: !2077)
!3335 = !DILocation(line: 760, column: 40, scope: !3327, inlinedAt: !2077)
!3336 = !DILocation(line: 760, column: 27, scope: !3327, inlinedAt: !2077)
!3337 = !DILocation(line: 760, column: 21, scope: !3327, inlinedAt: !2077)
!3338 = !DILocation(line: 764, column: 23, scope: !3291, inlinedAt: !2077)
!3339 = !DILocation(line: 764, column: 28, scope: !3291, inlinedAt: !2077)
!3340 = !DILocation(line: 764, column: 39, scope: !3291, inlinedAt: !2077)
!3341 = !DILocation(line: 764, column: 44, scope: !3291, inlinedAt: !2077)
!3342 = !DILocation(line: 764, column: 47, scope: !3291, inlinedAt: !2077)
!3343 = !DILocation(line: 764, column: 51, scope: !3291, inlinedAt: !2077)
!3344 = !DILocation(line: 764, column: 57, scope: !3291, inlinedAt: !2077)
!3345 = !DILocation(line: 764, column: 65, scope: !3291, inlinedAt: !2077)
!3346 = !DILocation(line: 764, column: 68, scope: !3291, inlinedAt: !2077)
!3347 = !DILocation(line: 764, column: 75, scope: !3291, inlinedAt: !2077)
!3348 = !DILocation(line: 765, column: 39, scope: !3291, inlinedAt: !2077)
!3349 = !DILocation(line: 765, column: 54, scope: !3291, inlinedAt: !2077)
!3350 = !DILocation(line: 765, column: 69, scope: !3291, inlinedAt: !2077)
!3351 = !DILocation(line: 766, column: 39, scope: !3291, inlinedAt: !2077)
!3352 = !DILocation(line: 766, column: 46, scope: !3291, inlinedAt: !2077)
!3353 = !DILocation(line: 766, column: 44, scope: !3291, inlinedAt: !2077)
!3354 = !DILocation(line: 766, column: 57, scope: !3291, inlinedAt: !2077)
!3355 = !DILocation(line: 766, column: 65, scope: !3291, inlinedAt: !2077)
!3356 = !DILocation(line: 766, column: 62, scope: !3291, inlinedAt: !2077)
!3357 = !DILocation(line: 764, column: 21, scope: !3291, inlinedAt: !2077)
!3358 = !DILocation(line: 767, column: 23, scope: !3291, inlinedAt: !2077)
!3359 = !DILocation(line: 767, column: 32, scope: !3291, inlinedAt: !2077)
!3360 = !DILocation(line: 767, column: 35, scope: !3291, inlinedAt: !2077)
!3361 = !DILocation(line: 767, column: 44, scope: !3291, inlinedAt: !2077)
!3362 = !DILocation(line: 767, column: 51, scope: !3291, inlinedAt: !2077)
!3363 = !DILocation(line: 767, column: 41, scope: !3291, inlinedAt: !2077)
!3364 = !DILocation(line: 767, column: 27, scope: !3291, inlinedAt: !2077)
!3365 = !DILocation(line: 767, column: 20, scope: !3291, inlinedAt: !2077)
!3366 = !DILocation(line: 768, column: 13, scope: !3291, inlinedAt: !2077)
!3367 = !DILocation(line: 771, column: 22, scope: !3368, inlinedAt: !2077)
!3368 = distinct !DILexicalBlock(scope: !3286, file: !920, line: 768, column: 20)
!3369 = !DILocation(line: 771, column: 27, scope: !3368, inlinedAt: !2077)
!3370 = !DILocation(line: 771, column: 38, scope: !3368, inlinedAt: !2077)
!3371 = !DILocation(line: 771, column: 43, scope: !3368, inlinedAt: !2077)
!3372 = !DILocation(line: 771, column: 46, scope: !3368, inlinedAt: !2077)
!3373 = !DILocation(line: 771, column: 50, scope: !3368, inlinedAt: !2077)
!3374 = !DILocation(line: 771, column: 56, scope: !3368, inlinedAt: !2077)
!3375 = !DILocation(line: 771, column: 64, scope: !3368, inlinedAt: !2077)
!3376 = !DILocation(line: 771, column: 67, scope: !3368, inlinedAt: !2077)
!3377 = !DILocation(line: 771, column: 74, scope: !3368, inlinedAt: !2077)
!3378 = !DILocation(line: 772, column: 38, scope: !3368, inlinedAt: !2077)
!3379 = !DILocation(line: 772, column: 53, scope: !3368, inlinedAt: !2077)
!3380 = !DILocation(line: 772, column: 68, scope: !3368, inlinedAt: !2077)
!3381 = !DILocation(line: 773, column: 38, scope: !3368, inlinedAt: !2077)
!3382 = !DILocation(line: 773, column: 45, scope: !3368, inlinedAt: !2077)
!3383 = !DILocation(line: 773, column: 43, scope: !3368, inlinedAt: !2077)
!3384 = !DILocation(line: 773, column: 56, scope: !3368, inlinedAt: !2077)
!3385 = !DILocation(line: 773, column: 64, scope: !3368, inlinedAt: !2077)
!3386 = !DILocation(line: 773, column: 61, scope: !3368, inlinedAt: !2077)
!3387 = !DILocation(line: 771, column: 20, scope: !3368, inlinedAt: !2077)
!3388 = !DILocation(line: 774, column: 26, scope: !3368, inlinedAt: !2077)
!3389 = !DILocation(line: 774, column: 29, scope: !3368, inlinedAt: !2077)
!3390 = !DILocation(line: 774, column: 38, scope: !3368, inlinedAt: !2077)
!3391 = !DILocation(line: 774, column: 45, scope: !3368, inlinedAt: !2077)
!3392 = !DILocation(line: 774, column: 35, scope: !3368, inlinedAt: !2077)
!3393 = !DILocation(line: 774, column: 20, scope: !3368, inlinedAt: !2077)
!3394 = !DILocation(line: 775, column: 29, scope: !3368, inlinedAt: !2077)
!3395 = !DILocation(line: 775, column: 38, scope: !3368, inlinedAt: !2077)
!3396 = !DILocation(line: 775, column: 50, scope: !3368, inlinedAt: !2077)
!3397 = !DILocation(line: 775, column: 53, scope: !3368, inlinedAt: !2077)
!3398 = !DILocation(line: 775, column: 48, scope: !3368, inlinedAt: !2077)
!3399 = !DILocation(line: 775, column: 35, scope: !3368, inlinedAt: !2077)
!3400 = !DILocation(line: 775, column: 27, scope: !3368, inlinedAt: !2077)
!3401 = !DILocation(line: 776, column: 21, scope: !3402, inlinedAt: !2077)
!3402 = distinct !DILexicalBlock(scope: !3368, file: !920, line: 776, column: 21)
!3403 = !DILocation(line: 776, column: 31, scope: !3402, inlinedAt: !2077)
!3404 = !DILocation(line: 776, column: 40, scope: !3402, inlinedAt: !2077)
!3405 = !DILocation(line: 776, column: 43, scope: !3406, inlinedAt: !2077)
!3406 = !DILexicalBlockFile(scope: !3402, file: !920, discriminator: 1)
!3407 = !DILocation(line: 776, column: 50, scope: !3406, inlinedAt: !2077)
!3408 = !DILocation(line: 776, column: 21, scope: !3406, inlinedAt: !2077)
!3409 = !DILocation(line: 777, column: 30, scope: !3402, inlinedAt: !2077)
!3410 = !DILocation(line: 777, column: 40, scope: !3402, inlinedAt: !2077)
!3411 = !DILocation(line: 777, column: 27, scope: !3402, inlinedAt: !2077)
!3412 = !DILocation(line: 777, column: 21, scope: !3402, inlinedAt: !2077)
!3413 = !DILocation(line: 781, column: 23, scope: !3368, inlinedAt: !2077)
!3414 = !DILocation(line: 781, column: 28, scope: !3368, inlinedAt: !2077)
!3415 = !DILocation(line: 781, column: 39, scope: !3368, inlinedAt: !2077)
!3416 = !DILocation(line: 781, column: 44, scope: !3368, inlinedAt: !2077)
!3417 = !DILocation(line: 781, column: 47, scope: !3368, inlinedAt: !2077)
!3418 = !DILocation(line: 781, column: 51, scope: !3368, inlinedAt: !2077)
!3419 = !DILocation(line: 781, column: 57, scope: !3368, inlinedAt: !2077)
!3420 = !DILocation(line: 781, column: 65, scope: !3368, inlinedAt: !2077)
!3421 = !DILocation(line: 781, column: 68, scope: !3368, inlinedAt: !2077)
!3422 = !DILocation(line: 781, column: 75, scope: !3368, inlinedAt: !2077)
!3423 = !DILocation(line: 782, column: 39, scope: !3368, inlinedAt: !2077)
!3424 = !DILocation(line: 782, column: 48, scope: !3368, inlinedAt: !2077)
!3425 = !DILocation(line: 782, column: 58, scope: !3368, inlinedAt: !2077)
!3426 = !DILocation(line: 782, column: 77, scope: !3368, inlinedAt: !2077)
!3427 = !DILocation(line: 783, column: 39, scope: !3368, inlinedAt: !2077)
!3428 = !DILocation(line: 783, column: 39, scope: !3429, inlinedAt: !2077)
!3429 = !DILexicalBlockFile(scope: !3368, file: !920, discriminator: 1)
!3430 = !DILocation(line: 783, column: 56, scope: !3431, inlinedAt: !2077)
!3431 = !DILexicalBlockFile(scope: !3368, file: !920, discriminator: 2)
!3432 = !DILocation(line: 783, column: 63, scope: !3431, inlinedAt: !2077)
!3433 = !DILocation(line: 783, column: 61, scope: !3431, inlinedAt: !2077)
!3434 = !DILocation(line: 783, column: 39, scope: !3431, inlinedAt: !2077)
!3435 = !DILocation(line: 783, column: 39, scope: !3436, inlinedAt: !2077)
!3436 = !DILexicalBlockFile(scope: !3368, file: !920, discriminator: 3)
!3437 = !DILocation(line: 783, column: 69, scope: !3436, inlinedAt: !2077)
!3438 = !DILocation(line: 783, column: 86, scope: !3436, inlinedAt: !2077)
!3439 = !DILocation(line: 781, column: 23, scope: !3429, inlinedAt: !2077)
!3440 = !DILocation(line: 781, column: 20, scope: !3429, inlinedAt: !2077)
!3441 = !DILocation(line: 786, column: 5, scope: !2106, inlinedAt: !2077)
!3442 = !DILocation(line: 788, column: 39, scope: !2072, inlinedAt: !2077)
!3443 = !DILocation(line: 788, column: 46, scope: !2072, inlinedAt: !2077)
!3444 = !DILocation(line: 788, column: 22, scope: !2072, inlinedAt: !2077)
!3445 = !DILocation(line: 789, column: 47, scope: !2072, inlinedAt: !2077)
!3446 = !DILocation(line: 789, column: 54, scope: !2072, inlinedAt: !2077)
!3447 = !DILocation(line: 789, column: 30, scope: !2072, inlinedAt: !2077)
!3448 = !DILocation(line: 790, column: 26, scope: !2072, inlinedAt: !2077)
!3449 = !DILocation(line: 790, column: 9, scope: !2072, inlinedAt: !2077)
!3450 = !DILocation(line: 790, column: 12, scope: !2072, inlinedAt: !2077)
!3451 = !DILocation(line: 790, column: 23, scope: !2072, inlinedAt: !2077)
!3452 = !DILocation(line: 793, column: 9, scope: !2072, inlinedAt: !2077)
!3453 = !DILocation(line: 793, column: 16, scope: !3454, inlinedAt: !2077)
!3454 = !DILexicalBlockFile(scope: !2072, file: !920, discriminator: 1)
!3455 = !DILocation(line: 793, column: 19, scope: !3454, inlinedAt: !2077)
!3456 = !DILocation(line: 793, column: 30, scope: !3454, inlinedAt: !2077)
!3457 = !DILocation(line: 793, column: 34, scope: !3454, inlinedAt: !2077)
!3458 = !DILocation(line: 793, column: 37, scope: !3459, inlinedAt: !2077)
!3459 = !DILexicalBlockFile(scope: !2072, file: !920, discriminator: 2)
!3460 = !DILocation(line: 793, column: 39, scope: !3459, inlinedAt: !2077)
!3461 = !DILocation(line: 793, column: 9, scope: !3462, inlinedAt: !2077)
!3462 = !DILexicalBlockFile(scope: !2072, file: !920, discriminator: 3)
!3463 = !DILocation(line: 794, column: 30, scope: !3464, inlinedAt: !2077)
!3464 = distinct !DILexicalBlock(scope: !2072, file: !920, line: 793, column: 44)
!3465 = !DILocation(line: 794, column: 13, scope: !3464, inlinedAt: !2077)
!3466 = !DILocation(line: 794, column: 16, scope: !3464, inlinedAt: !2077)
!3467 = !DILocation(line: 794, column: 27, scope: !3464, inlinedAt: !2077)
!3468 = !DILocation(line: 795, column: 42, scope: !3464, inlinedAt: !2077)
!3469 = !DILocation(line: 795, column: 49, scope: !3464, inlinedAt: !2077)
!3470 = !DILocation(line: 795, column: 25, scope: !3464, inlinedAt: !2077)
!3471 = !DILocation(line: 795, column: 23, scope: !3464, inlinedAt: !2077)
!3472 = !DILocation(line: 796, column: 30, scope: !3464, inlinedAt: !2077)
!3473 = !DILocation(line: 796, column: 13, scope: !3464, inlinedAt: !2077)
!3474 = !DILocation(line: 796, column: 16, scope: !3464, inlinedAt: !2077)
!3475 = !DILocation(line: 796, column: 27, scope: !3464, inlinedAt: !2077)
!3476 = !DILocation(line: 793, column: 9, scope: !3477, inlinedAt: !2077)
!3477 = !DILexicalBlockFile(scope: !2072, file: !920, discriminator: 4)
!3478 = distinct !{!3478, !3479}
!3479 = !DILocation(line: 793, column: 9, scope: !2072)
!3480 = !DILocation(line: 799, column: 13, scope: !2071, inlinedAt: !2077)
!3481 = !DILocation(line: 799, column: 15, scope: !2071, inlinedAt: !2077)
!3482 = !DILocation(line: 799, column: 13, scope: !2072, inlinedAt: !2077)
!3483 = !DILocation(line: 801, column: 17, scope: !3484, inlinedAt: !2077)
!3484 = distinct !DILexicalBlock(scope: !3485, file: !920, line: 801, column: 17)
!3485 = distinct !DILexicalBlock(scope: !2071, file: !920, line: 799, column: 21)
!3486 = !DILocation(line: 801, column: 17, scope: !3485, inlinedAt: !2077)
!3487 = !DILocation(line: 802, column: 37, scope: !3488, inlinedAt: !2077)
!3488 = distinct !DILexicalBlock(scope: !3484, file: !920, line: 801, column: 24)
!3489 = !DILocation(line: 802, column: 41, scope: !3488, inlinedAt: !2077)
!3490 = !DILocation(line: 802, column: 44, scope: !3488, inlinedAt: !2077)
!3491 = !DILocation(line: 802, column: 48, scope: !3488, inlinedAt: !2077)
!3492 = !DILocation(line: 802, column: 50, scope: !3488, inlinedAt: !2077)
!3493 = !DILocation(line: 802, column: 47, scope: !3488, inlinedAt: !2077)
!3494 = !DILocation(line: 802, column: 57, scope: !3495, inlinedAt: !2077)
!3495 = !DILexicalBlockFile(scope: !3488, file: !920, discriminator: 1)
!3496 = !DILocation(line: 802, column: 47, scope: !3495, inlinedAt: !2077)
!3497 = !DILocation(line: 802, column: 67, scope: !3498, inlinedAt: !2077)
!3498 = !DILexicalBlockFile(scope: !3488, file: !920, discriminator: 2)
!3499 = !DILocation(line: 802, column: 69, scope: !3498, inlinedAt: !2077)
!3500 = !DILocation(line: 802, column: 64, scope: !3498, inlinedAt: !2077)
!3501 = !DILocation(line: 802, column: 80, scope: !3498, inlinedAt: !2077)
!3502 = !DILocation(line: 802, column: 82, scope: !3498, inlinedAt: !2077)
!3503 = !DILocation(line: 802, column: 88, scope: !3498, inlinedAt: !2077)
!3504 = !DILocation(line: 802, column: 75, scope: !3498, inlinedAt: !2077)
!3505 = !DILocation(line: 802, column: 47, scope: !3498, inlinedAt: !2077)
!3506 = !DILocation(line: 802, column: 47, scope: !3507, inlinedAt: !2077)
!3507 = !DILexicalBlockFile(scope: !3488, file: !920, discriminator: 3)
!3508 = !DILocation(line: 803, column: 37, scope: !3488, inlinedAt: !2077)
!3509 = !DILocation(line: 803, column: 40, scope: !3488, inlinedAt: !2077)
!3510 = !DILocation(line: 803, column: 48, scope: !3488, inlinedAt: !2077)
!3511 = !DILocation(line: 803, column: 56, scope: !3488, inlinedAt: !2077)
!3512 = !DILocation(line: 803, column: 62, scope: !3488, inlinedAt: !2077)
!3513 = !DILocation(line: 802, column: 22, scope: !3507, inlinedAt: !2077)
!3514 = !DILocation(line: 802, column: 20, scope: !3507, inlinedAt: !2077)
!3515 = !DILocation(line: 804, column: 13, scope: !3488, inlinedAt: !2077)
!3516 = !DILocation(line: 805, column: 39, scope: !3517, inlinedAt: !2077)
!3517 = distinct !DILexicalBlock(scope: !3484, file: !920, line: 804, column: 20)
!3518 = !DILocation(line: 805, column: 43, scope: !3517, inlinedAt: !2077)
!3519 = !DILocation(line: 805, column: 46, scope: !3517, inlinedAt: !2077)
!3520 = !DILocation(line: 805, column: 50, scope: !3517, inlinedAt: !2077)
!3521 = !DILocation(line: 805, column: 52, scope: !3517, inlinedAt: !2077)
!3522 = !DILocation(line: 805, column: 49, scope: !3517, inlinedAt: !2077)
!3523 = !DILocation(line: 805, column: 59, scope: !3524, inlinedAt: !2077)
!3524 = !DILexicalBlockFile(scope: !3517, file: !920, discriminator: 1)
!3525 = !DILocation(line: 805, column: 49, scope: !3524, inlinedAt: !2077)
!3526 = !DILocation(line: 805, column: 69, scope: !3527, inlinedAt: !2077)
!3527 = !DILexicalBlockFile(scope: !3517, file: !920, discriminator: 2)
!3528 = !DILocation(line: 805, column: 71, scope: !3527, inlinedAt: !2077)
!3529 = !DILocation(line: 805, column: 66, scope: !3527, inlinedAt: !2077)
!3530 = !DILocation(line: 805, column: 82, scope: !3527, inlinedAt: !2077)
!3531 = !DILocation(line: 805, column: 84, scope: !3527, inlinedAt: !2077)
!3532 = !DILocation(line: 805, column: 90, scope: !3527, inlinedAt: !2077)
!3533 = !DILocation(line: 805, column: 77, scope: !3527, inlinedAt: !2077)
!3534 = !DILocation(line: 805, column: 49, scope: !3527, inlinedAt: !2077)
!3535 = !DILocation(line: 805, column: 49, scope: !3536, inlinedAt: !2077)
!3536 = !DILexicalBlockFile(scope: !3517, file: !920, discriminator: 3)
!3537 = !DILocation(line: 806, column: 39, scope: !3517, inlinedAt: !2077)
!3538 = !DILocation(line: 806, column: 42, scope: !3517, inlinedAt: !2077)
!3539 = !DILocation(line: 806, column: 50, scope: !3517, inlinedAt: !2077)
!3540 = !DILocation(line: 806, column: 58, scope: !3517, inlinedAt: !2077)
!3541 = !DILocation(line: 806, column: 64, scope: !3517, inlinedAt: !2077)
!3542 = !DILocation(line: 805, column: 22, scope: !3536, inlinedAt: !2077)
!3543 = !DILocation(line: 805, column: 20, scope: !3536, inlinedAt: !2077)
!3544 = !DILocation(line: 808, column: 9, scope: !3485, inlinedAt: !2077)
!3545 = !DILocation(line: 810, column: 38, scope: !2070, inlinedAt: !2077)
!3546 = !DILocation(line: 810, column: 35, scope: !2070, inlinedAt: !2077)
!3547 = !DILocation(line: 810, column: 46, scope: !2070, inlinedAt: !2077)
!3548 = !DILocation(line: 811, column: 21, scope: !2070, inlinedAt: !2077)
!3549 = !DILocation(line: 811, column: 18, scope: !2070, inlinedAt: !2077)
!3550 = !DILocation(line: 812, column: 17, scope: !2069, inlinedAt: !2077)
!3551 = !DILocation(line: 812, column: 17, scope: !2070, inlinedAt: !2077)
!3552 = !DILocation(line: 813, column: 22, scope: !2067, inlinedAt: !2077)
!3553 = !DILocation(line: 813, column: 21, scope: !2068, inlinedAt: !2077)
!3554 = !DILocation(line: 815, column: 28, scope: !2095, inlinedAt: !2077)
!3555 = !DILocation(line: 815, column: 26, scope: !2095, inlinedAt: !2077)
!3556 = !DILocation(line: 815, column: 33, scope: !3557, inlinedAt: !2077)
!3557 = !DILexicalBlockFile(scope: !2094, file: !920, discriminator: 1)
!3558 = !DILocation(line: 815, column: 37, scope: !3557, inlinedAt: !2077)
!3559 = !DILocation(line: 815, column: 35, scope: !3557, inlinedAt: !2077)
!3560 = !DILocation(line: 815, column: 21, scope: !3557, inlinedAt: !2077)
!3561 = !DILocation(line: 816, column: 52, scope: !2094, inlinedAt: !2077)
!3562 = !DILocation(line: 816, column: 43, scope: !2094, inlinedAt: !2077)
!3563 = !DILocation(line: 144, column: 25, scope: !2058, inlinedAt: !2093)
!3564 = !DILocation(line: 144, column: 28, scope: !2058, inlinedAt: !2093)
!3565 = !DILocation(line: 144, column: 23, scope: !2058, inlinedAt: !2093)
!3566 = !DILocation(line: 144, column: 33, scope: !2058, inlinedAt: !2093)
!3567 = !DILocation(line: 144, column: 5, scope: !2058, inlinedAt: !2093)
!3568 = !DILocation(line: 144, column: 8, scope: !2058, inlinedAt: !2093)
!3569 = !DILocation(line: 144, column: 13, scope: !2058, inlinedAt: !2093)
!3570 = !DILocation(line: 145, column: 12, scope: !2058, inlinedAt: !2093)
!3571 = !DILocation(line: 145, column: 15, scope: !2058, inlinedAt: !2093)
!3572 = !DILocation(line: 816, column: 56, scope: !2094, inlinedAt: !2077)
!3573 = !DILocation(line: 816, column: 32, scope: !2094, inlinedAt: !2077)
!3574 = !DILocation(line: 816, column: 27, scope: !2094, inlinedAt: !2077)
!3575 = !DILocation(line: 816, column: 25, scope: !2094, inlinedAt: !2077)
!3576 = !DILocation(line: 816, column: 30, scope: !2094, inlinedAt: !2077)
!3577 = !DILocation(line: 815, column: 41, scope: !3578, inlinedAt: !2077)
!3578 = !DILexicalBlockFile(scope: !2094, file: !920, discriminator: 2)
!3579 = !DILocation(line: 815, column: 21, scope: !3578, inlinedAt: !2077)
!3580 = distinct !{!3580, !3581}
!3581 = !DILocation(line: 815, column: 21, scope: !2096)
!3582 = !DILocation(line: 817, column: 26, scope: !2096, inlinedAt: !2077)
!3583 = !DILocation(line: 817, column: 24, scope: !2096, inlinedAt: !2077)
!3584 = !DILocation(line: 818, column: 17, scope: !2096, inlinedAt: !2077)
!3585 = !DILocation(line: 820, column: 28, scope: !2065, inlinedAt: !2077)
!3586 = !DILocation(line: 820, column: 26, scope: !2065, inlinedAt: !2077)
!3587 = !DILocation(line: 820, column: 33, scope: !3588, inlinedAt: !2077)
!3588 = !DILexicalBlockFile(scope: !2064, file: !920, discriminator: 1)
!3589 = !DILocation(line: 820, column: 37, scope: !3588, inlinedAt: !2077)
!3590 = !DILocation(line: 820, column: 35, scope: !3588, inlinedAt: !2077)
!3591 = !DILocation(line: 820, column: 21, scope: !3588, inlinedAt: !2077)
!3592 = !DILocation(line: 822, column: 40, scope: !2063, inlinedAt: !2077)
!3593 = !DILocation(line: 822, column: 32, scope: !2063, inlinedAt: !2077)
!3594 = !DILocation(line: 822, column: 57, scope: !2063, inlinedAt: !2077)
!3595 = !DILocation(line: 822, column: 48, scope: !2063, inlinedAt: !2077)
!3596 = !DILocation(line: 144, column: 25, scope: !2058, inlinedAt: !2062)
!3597 = !DILocation(line: 144, column: 28, scope: !2058, inlinedAt: !2062)
!3598 = !DILocation(line: 144, column: 23, scope: !2058, inlinedAt: !2062)
!3599 = !DILocation(line: 144, column: 33, scope: !2058, inlinedAt: !2062)
!3600 = !DILocation(line: 144, column: 5, scope: !2058, inlinedAt: !2062)
!3601 = !DILocation(line: 144, column: 8, scope: !2058, inlinedAt: !2062)
!3602 = !DILocation(line: 144, column: 13, scope: !2058, inlinedAt: !2062)
!3603 = !DILocation(line: 145, column: 12, scope: !2058, inlinedAt: !2062)
!3604 = !DILocation(line: 145, column: 15, scope: !2058, inlinedAt: !2062)
!3605 = !DILocation(line: 822, column: 61, scope: !2063, inlinedAt: !2077)
!3606 = !DILocation(line: 822, column: 46, scope: !2063, inlinedAt: !2077)
!3607 = !DILocation(line: 822, column: 43, scope: !2063, inlinedAt: !2077)
!3608 = !DILocation(line: 822, column: 27, scope: !2063, inlinedAt: !2077)
!3609 = !DILocation(line: 822, column: 25, scope: !2063, inlinedAt: !2077)
!3610 = !DILocation(line: 822, column: 30, scope: !2063, inlinedAt: !2077)
!3611 = !DILocation(line: 820, column: 41, scope: !3612, inlinedAt: !2077)
!3612 = !DILexicalBlockFile(scope: !2064, file: !920, discriminator: 2)
!3613 = !DILocation(line: 820, column: 21, scope: !3612, inlinedAt: !2077)
!3614 = distinct !{!3614, !3615}
!3615 = !DILocation(line: 820, column: 21, scope: !2066)
!3616 = !DILocation(line: 824, column: 26, scope: !2066, inlinedAt: !2077)
!3617 = !DILocation(line: 824, column: 24, scope: !2066, inlinedAt: !2077)
!3618 = !DILocation(line: 826, column: 41, scope: !2068, inlinedAt: !2077)
!3619 = !DILocation(line: 826, column: 44, scope: !2068, inlinedAt: !2077)
!3620 = !DILocation(line: 826, column: 47, scope: !2068, inlinedAt: !2077)
!3621 = !DILocation(line: 826, column: 17, scope: !2068, inlinedAt: !2077)
!3622 = !DILocation(line: 152, column: 12, scope: !3623, inlinedAt: !2083)
!3623 = distinct !DILexicalBlock(scope: !2079, file: !898, line: 152, column: 5)
!3624 = !DILocation(line: 152, column: 10, scope: !3623, inlinedAt: !2083)
!3625 = !DILocation(line: 152, column: 17, scope: !3626, inlinedAt: !2083)
!3626 = !DILexicalBlockFile(scope: !3627, file: !898, discriminator: 1)
!3627 = distinct !DILexicalBlock(scope: !3623, file: !898, line: 152, column: 5)
!3628 = !DILocation(line: 152, column: 21, scope: !3626, inlinedAt: !2083)
!3629 = !DILocation(line: 152, column: 19, scope: !3626, inlinedAt: !2083)
!3630 = !DILocation(line: 152, column: 5, scope: !3626, inlinedAt: !2083)
!3631 = !DILocation(line: 153, column: 16, scope: !3627, inlinedAt: !2083)
!3632 = !DILocation(line: 153, column: 14, scope: !3627, inlinedAt: !2083)
!3633 = !DILocation(line: 153, column: 23, scope: !3627, inlinedAt: !2083)
!3634 = !DILocation(line: 153, column: 21, scope: !3627, inlinedAt: !2083)
!3635 = !DILocation(line: 153, column: 19, scope: !3627, inlinedAt: !2083)
!3636 = !DILocation(line: 153, column: 11, scope: !3627, inlinedAt: !2083)
!3637 = !DILocation(line: 152, column: 25, scope: !3638, inlinedAt: !2083)
!3638 = !DILexicalBlockFile(scope: !3627, file: !898, discriminator: 2)
!3639 = !DILocation(line: 152, column: 5, scope: !3638, inlinedAt: !2083)
!3640 = distinct !{!3640, !3641}
!3641 = !DILocation(line: 152, column: 5, scope: !2079)
!3642 = !DILocation(line: 154, column: 9, scope: !2079, inlinedAt: !2083)
!3643 = !DILocation(line: 154, column: 22, scope: !2079, inlinedAt: !2083)
!3644 = !DILocation(line: 154, column: 16, scope: !2079, inlinedAt: !2083)
!3645 = !DILocation(line: 154, column: 14, scope: !2079, inlinedAt: !2083)
!3646 = !DILocation(line: 154, column: 7, scope: !2079, inlinedAt: !2083)
!3647 = !DILocation(line: 156, column: 12, scope: !3648, inlinedAt: !2083)
!3648 = distinct !DILexicalBlock(scope: !2079, file: !898, line: 156, column: 5)
!3649 = !DILocation(line: 156, column: 10, scope: !3648, inlinedAt: !2083)
!3650 = !DILocation(line: 156, column: 17, scope: !3651, inlinedAt: !2083)
!3651 = !DILexicalBlockFile(scope: !3652, file: !898, discriminator: 1)
!3652 = distinct !DILexicalBlock(scope: !3648, file: !898, line: 156, column: 5)
!3653 = !DILocation(line: 156, column: 21, scope: !3651, inlinedAt: !2083)
!3654 = !DILocation(line: 156, column: 19, scope: !3651, inlinedAt: !2083)
!3655 = !DILocation(line: 156, column: 5, scope: !3651, inlinedAt: !2083)
!3656 = !DILocation(line: 157, column: 17, scope: !3652, inlinedAt: !2083)
!3657 = !DILocation(line: 157, column: 11, scope: !3652, inlinedAt: !2083)
!3658 = !DILocation(line: 157, column: 9, scope: !3652, inlinedAt: !2083)
!3659 = !DILocation(line: 157, column: 14, scope: !3652, inlinedAt: !2083)
!3660 = !DILocation(line: 156, column: 25, scope: !3661, inlinedAt: !2083)
!3661 = !DILexicalBlockFile(scope: !3652, file: !898, discriminator: 2)
!3662 = !DILocation(line: 156, column: 5, scope: !3661, inlinedAt: !2083)
!3663 = distinct !{!3663, !3664}
!3664 = !DILocation(line: 156, column: 5, scope: !2079)
!3665 = !DILocation(line: 827, column: 13, scope: !2068, inlinedAt: !2077)
!3666 = !DILocation(line: 828, column: 24, scope: !3667, inlinedAt: !2077)
!3667 = distinct !DILexicalBlock(scope: !2069, file: !920, line: 827, column: 20)
!3668 = !DILocation(line: 828, column: 17, scope: !3667, inlinedAt: !2077)
!3669 = !DILocation(line: 828, column: 30, scope: !3667, inlinedAt: !2077)
!3670 = !DILocation(line: 828, column: 31, scope: !3667, inlinedAt: !2077)
!3671 = !DILocation(line: 834, column: 9, scope: !2146, inlinedAt: !2077)
!3672 = !DILocation(line: 834, column: 9, scope: !2074, inlinedAt: !2077)
!3673 = !DILocation(line: 835, column: 13, scope: !3674, inlinedAt: !2077)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !920, line: 835, column: 13)
!3675 = distinct !DILexicalBlock(scope: !2146, file: !920, line: 834, column: 17)
!3676 = !DILocation(line: 835, column: 15, scope: !3674, inlinedAt: !2077)
!3677 = !DILocation(line: 835, column: 13, scope: !3675, inlinedAt: !2077)
!3678 = !DILocation(line: 836, column: 31, scope: !3674, inlinedAt: !2077)
!3679 = !DILocation(line: 836, column: 34, scope: !3674, inlinedAt: !2077)
!3680 = !DILocation(line: 836, column: 37, scope: !3674, inlinedAt: !2077)
!3681 = !DILocation(line: 836, column: 42, scope: !3674, inlinedAt: !2077)
!3682 = !DILocation(line: 836, column: 13, scope: !3674, inlinedAt: !2077)
!3683 = !DILocation(line: 837, column: 13, scope: !3684, inlinedAt: !2077)
!3684 = distinct !DILexicalBlock(scope: !3675, file: !920, line: 837, column: 13)
!3685 = !DILocation(line: 837, column: 13, scope: !3675, inlinedAt: !2077)
!3686 = !DILocation(line: 838, column: 20, scope: !3687, inlinedAt: !2077)
!3687 = distinct !DILexicalBlock(scope: !3688, file: !920, line: 838, column: 13)
!3688 = distinct !DILexicalBlock(scope: !3684, file: !920, line: 837, column: 18)
!3689 = !DILocation(line: 838, column: 18, scope: !3687, inlinedAt: !2077)
!3690 = !DILocation(line: 838, column: 25, scope: !3691, inlinedAt: !2077)
!3691 = !DILexicalBlockFile(scope: !3692, file: !920, discriminator: 1)
!3692 = distinct !DILexicalBlock(scope: !3687, file: !920, line: 838, column: 13)
!3693 = !DILocation(line: 838, column: 29, scope: !3691, inlinedAt: !2077)
!3694 = !DILocation(line: 838, column: 27, scope: !3691, inlinedAt: !2077)
!3695 = !DILocation(line: 838, column: 13, scope: !3691, inlinedAt: !2077)
!3696 = !DILocation(line: 839, column: 19, scope: !3692, inlinedAt: !2077)
!3697 = !DILocation(line: 839, column: 17, scope: !3692, inlinedAt: !2077)
!3698 = !DILocation(line: 839, column: 22, scope: !3692, inlinedAt: !2077)
!3699 = !DILocation(line: 838, column: 33, scope: !3700, inlinedAt: !2077)
!3700 = !DILexicalBlockFile(scope: !3692, file: !920, discriminator: 2)
!3701 = !DILocation(line: 838, column: 13, scope: !3700, inlinedAt: !2077)
!3702 = distinct !{!3702, !3703}
!3703 = !DILocation(line: 838, column: 13, scope: !3688)
!3704 = !DILocation(line: 840, column: 9, scope: !3688, inlinedAt: !2077)
!3705 = !DILocation(line: 841, column: 5, scope: !3675, inlinedAt: !2077)
!3706 = !DILocation(line: 841, column: 16, scope: !3707, inlinedAt: !2077)
!3707 = !DILexicalBlockFile(scope: !2145, file: !920, discriminator: 1)
!3708 = !DILocation(line: 841, column: 22, scope: !3707, inlinedAt: !2077)
!3709 = !DILocation(line: 845, column: 13, scope: !3710, inlinedAt: !2077)
!3710 = distinct !DILexicalBlock(scope: !2144, file: !920, line: 845, column: 13)
!3711 = !DILocation(line: 845, column: 16, scope: !3710, inlinedAt: !2077)
!3712 = !DILocation(line: 845, column: 13, scope: !2144, inlinedAt: !2077)
!3713 = !DILocation(line: 846, column: 38, scope: !3710, inlinedAt: !2077)
!3714 = !DILocation(line: 846, column: 43, scope: !3710, inlinedAt: !2077)
!3715 = !DILocation(line: 846, column: 57, scope: !3710, inlinedAt: !2077)
!3716 = !DILocation(line: 846, column: 60, scope: !3710, inlinedAt: !2077)
!3717 = !DILocation(line: 846, column: 67, scope: !3710, inlinedAt: !2077)
!3718 = !DILocation(line: 846, column: 64, scope: !3710, inlinedAt: !2077)
!3719 = !DILocation(line: 847, column: 38, scope: !3710, inlinedAt: !2077)
!3720 = !DILocation(line: 847, column: 44, scope: !3710, inlinedAt: !2077)
!3721 = !DILocation(line: 847, column: 41, scope: !3710, inlinedAt: !2077)
!3722 = !DILocation(line: 847, column: 55, scope: !3710, inlinedAt: !2077)
!3723 = !DILocation(line: 846, column: 13, scope: !3710, inlinedAt: !2077)
!3724 = !DILocation(line: 850, column: 15, scope: !2144, inlinedAt: !2077)
!3725 = !DILocation(line: 850, column: 13, scope: !2144, inlinedAt: !2077)
!3726 = !DILocation(line: 851, column: 18, scope: !2144, inlinedAt: !2077)
!3727 = !DILocation(line: 851, column: 16, scope: !2144, inlinedAt: !2077)
!3728 = !DILocation(line: 852, column: 16, scope: !3729, inlinedAt: !2077)
!3729 = distinct !DILexicalBlock(scope: !2144, file: !920, line: 852, column: 9)
!3730 = !DILocation(line: 852, column: 14, scope: !3729, inlinedAt: !2077)
!3731 = !DILocation(line: 852, column: 21, scope: !3732, inlinedAt: !2077)
!3732 = !DILexicalBlockFile(scope: !3733, file: !920, discriminator: 1)
!3733 = distinct !DILexicalBlock(scope: !3729, file: !920, line: 852, column: 9)
!3734 = !DILocation(line: 852, column: 25, scope: !3732, inlinedAt: !2077)
!3735 = !DILocation(line: 852, column: 23, scope: !3732, inlinedAt: !2077)
!3736 = !DILocation(line: 852, column: 9, scope: !3732, inlinedAt: !2077)
!3737 = !DILocation(line: 853, column: 20, scope: !3738, inlinedAt: !2077)
!3738 = distinct !DILexicalBlock(scope: !3733, file: !920, line: 852, column: 43)
!3739 = !DILocation(line: 854, column: 17, scope: !3738, inlinedAt: !2077)
!3740 = !DILocation(line: 855, column: 19, scope: !3738, inlinedAt: !2077)
!3741 = !DILocation(line: 855, column: 25, scope: !3738, inlinedAt: !2077)
!3742 = !DILocation(line: 855, column: 22, scope: !3738, inlinedAt: !2077)
!3743 = !DILocation(line: 855, column: 16, scope: !3738, inlinedAt: !2077)
!3744 = !DILocation(line: 856, column: 24, scope: !3738, inlinedAt: !2077)
!3745 = !DILocation(line: 856, column: 27, scope: !3738, inlinedAt: !2077)
!3746 = !DILocation(line: 856, column: 32, scope: !3738, inlinedAt: !2077)
!3747 = !DILocation(line: 856, column: 13, scope: !3738, inlinedAt: !2077)
!3748 = !DILocation(line: 852, column: 39, scope: !3749, inlinedAt: !2077)
!3749 = !DILexicalBlockFile(scope: !3733, file: !920, discriminator: 2)
!3750 = !DILocation(line: 852, column: 9, scope: !3749, inlinedAt: !2077)
!3751 = distinct !{!3751, !3752}
!3752 = !DILocation(line: 852, column: 9, scope: !2144)
!3753 = !DILocation(line: 859, column: 16, scope: !3754, inlinedAt: !2077)
!3754 = distinct !DILexicalBlock(scope: !2144, file: !920, line: 859, column: 9)
!3755 = !DILocation(line: 859, column: 14, scope: !3754, inlinedAt: !2077)
!3756 = !DILocation(line: 859, column: 21, scope: !3757, inlinedAt: !2077)
!3757 = !DILexicalBlockFile(scope: !3758, file: !920, discriminator: 1)
!3758 = distinct !DILexicalBlock(scope: !3754, file: !920, line: 859, column: 9)
!3759 = !DILocation(line: 859, column: 25, scope: !3757, inlinedAt: !2077)
!3760 = !DILocation(line: 859, column: 23, scope: !3757, inlinedAt: !2077)
!3761 = !DILocation(line: 859, column: 9, scope: !3757, inlinedAt: !2077)
!3762 = !DILocation(line: 860, column: 43, scope: !3763, inlinedAt: !2077)
!3763 = distinct !DILexicalBlock(scope: !3758, file: !920, line: 859, column: 41)
!3764 = !DILocation(line: 860, column: 18, scope: !3763, inlinedAt: !2077)
!3765 = !DILocation(line: 860, column: 16, scope: !3763, inlinedAt: !2077)
!3766 = !DILocation(line: 861, column: 24, scope: !3763, inlinedAt: !2077)
!3767 = !DILocation(line: 861, column: 27, scope: !3763, inlinedAt: !2077)
!3768 = !DILocation(line: 861, column: 31, scope: !3763, inlinedAt: !2077)
!3769 = !DILocation(line: 861, column: 29, scope: !3763, inlinedAt: !2077)
!3770 = !DILocation(line: 861, column: 37, scope: !3763, inlinedAt: !2077)
!3771 = !DILocation(line: 861, column: 35, scope: !3763, inlinedAt: !2077)
!3772 = !DILocation(line: 861, column: 13, scope: !3763, inlinedAt: !2077)
!3773 = !DILocation(line: 859, column: 37, scope: !3774, inlinedAt: !2077)
!3774 = !DILexicalBlockFile(scope: !3758, file: !920, discriminator: 2)
!3775 = !DILocation(line: 859, column: 9, scope: !3774, inlinedAt: !2077)
!3776 = distinct !{!3776, !3777}
!3777 = !DILocation(line: 859, column: 9, scope: !2144)
!3778 = !DILocation(line: 863, column: 20, scope: !2144, inlinedAt: !2077)
!3779 = !DILocation(line: 863, column: 16, scope: !2144, inlinedAt: !2077)
!3780 = !DILocation(line: 866, column: 13, scope: !2289, inlinedAt: !2077)
!3781 = !DILocation(line: 866, column: 13, scope: !2144, inlinedAt: !2077)
!3782 = !DILocation(line: 867, column: 29, scope: !2288, inlinedAt: !2077)
!3783 = !DILocation(line: 867, column: 23, scope: !2288, inlinedAt: !2077)
!3784 = !DILocation(line: 868, column: 20, scope: !3785, inlinedAt: !2077)
!3785 = distinct !DILexicalBlock(scope: !2288, file: !920, line: 868, column: 13)
!3786 = !DILocation(line: 868, column: 18, scope: !3785, inlinedAt: !2077)
!3787 = !DILocation(line: 868, column: 25, scope: !3788, inlinedAt: !2077)
!3788 = !DILexicalBlockFile(scope: !3789, file: !920, discriminator: 1)
!3789 = distinct !DILexicalBlock(scope: !3785, file: !920, line: 868, column: 13)
!3790 = !DILocation(line: 868, column: 29, scope: !3788, inlinedAt: !2077)
!3791 = !DILocation(line: 868, column: 27, scope: !3788, inlinedAt: !2077)
!3792 = !DILocation(line: 868, column: 13, scope: !3788, inlinedAt: !2077)
!3793 = !DILocation(line: 869, column: 34, scope: !3789, inlinedAt: !2077)
!3794 = !DILocation(line: 869, column: 40, scope: !3789, inlinedAt: !2077)
!3795 = !DILocation(line: 869, column: 38, scope: !3789, inlinedAt: !2077)
!3796 = !DILocation(line: 869, column: 36, scope: !3789, inlinedAt: !2077)
!3797 = !DILocation(line: 869, column: 29, scope: !3789, inlinedAt: !2077)
!3798 = !DILocation(line: 869, column: 17, scope: !3789, inlinedAt: !2077)
!3799 = !DILocation(line: 869, column: 32, scope: !3789, inlinedAt: !2077)
!3800 = !DILocation(line: 868, column: 34, scope: !3801, inlinedAt: !2077)
!3801 = !DILexicalBlockFile(scope: !3789, file: !920, discriminator: 2)
!3802 = !DILocation(line: 868, column: 13, scope: !3801, inlinedAt: !2077)
!3803 = distinct !{!3803, !3804}
!3804 = !DILocation(line: 868, column: 13, scope: !2288)
!3805 = !DILocation(line: 870, column: 9, scope: !2288, inlinedAt: !2077)
!3806 = !DILocation(line: 871, column: 30, scope: !2144, inlinedAt: !2077)
!3807 = !DILocation(line: 871, column: 34, scope: !2144, inlinedAt: !2077)
!3808 = !DILocation(line: 871, column: 14, scope: !2144, inlinedAt: !2077)
!3809 = !DILocation(line: 243, column: 12, scope: !2112, inlinedAt: !2143)
!3810 = !DILocation(line: 243, column: 23, scope: !2112, inlinedAt: !2143)
!3811 = !DILocation(line: 243, column: 20, scope: !2112, inlinedAt: !2143)
!3812 = !DILocation(line: 243, column: 26, scope: !2112, inlinedAt: !2143)
!3813 = !DILocation(line: 243, column: 14, scope: !2112, inlinedAt: !2143)
!3814 = !DILocation(line: 871, column: 12, scope: !2144, inlinedAt: !2077)
!3815 = !DILocation(line: 872, column: 5, scope: !2144, inlinedAt: !2077)
!3816 = !DILocation(line: 874, column: 12, scope: !2074, inlinedAt: !2077)
!3817 = !DILocation(line: 874, column: 5, scope: !2074, inlinedAt: !2077)
!3818 = !DILocation(line: 875, column: 1, scope: !2074, inlinedAt: !2077)
!3819 = !DILocation(line: 890, column: 5, scope: !2056)
!3820 = distinct !DISubprogram(name: "pvq_decode_band", scope: !920, file: !920, line: 877, type: !943, isLocal: true, isDefinition: true, scopeLine: 878, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!3821 = !DILocation(line: 142, column: 75, scope: !2058, inlinedAt: !3822)
!3822 = distinct !DILocation(line: 822, column: 48, scope: !2063, inlinedAt: !3823)
!3823 = distinct !DILocation(line: 880, column: 12, scope: !3820)
!3824 = !DILocation(line: 148, column: 82, scope: !2079, inlinedAt: !3825)
!3825 = distinct !DILocation(line: 826, column: 17, scope: !2068, inlinedAt: !3823)
!3826 = !DILocation(line: 148, column: 89, scope: !2079, inlinedAt: !3825)
!3827 = !DILocation(line: 148, column: 98, scope: !2079, inlinedAt: !3825)
!3828 = !DILocation(line: 150, column: 9, scope: !2079, inlinedAt: !3825)
!3829 = !DILocation(line: 151, column: 11, scope: !2079, inlinedAt: !3825)
!3830 = !DILocation(line: 142, column: 75, scope: !2058, inlinedAt: !3831)
!3831 = distinct !DILocation(line: 816, column: 43, scope: !2094, inlinedAt: !3823)
!3832 = !DILocation(line: 127, column: 87, scope: !2098, inlinedAt: !3833)
!3833 = distinct !DILocation(line: 737, column: 21, scope: !2104, inlinedAt: !3823)
!3834 = !DILocation(line: 127, column: 94, scope: !2098, inlinedAt: !3833)
!3835 = !DILocation(line: 127, column: 104, scope: !2098, inlinedAt: !3833)
!3836 = !DILocation(line: 241, column: 103, scope: !2112, inlinedAt: !3837)
!3837 = distinct !DILocation(line: 656, column: 20, scope: !2117, inlinedAt: !3823)
!3838 = !DILocation(line: 241, column: 115, scope: !2112, inlinedAt: !3837)
!3839 = !DILocation(line: 66, column: 95, scope: !2122, inlinedAt: !3840)
!3840 = distinct !DILocation(line: 649, column: 18, scope: !2106, inlinedAt: !3823)
!3841 = !DILocation(line: 68, column: 14, scope: !2122, inlinedAt: !3840)
!3842 = !DILocation(line: 68, column: 17, scope: !2122, inlinedAt: !3840)
!3843 = !DILocation(line: 68, column: 29, scope: !2122, inlinedAt: !3840)
!3844 = !DILocation(line: 68, column: 39, scope: !2122, inlinedAt: !3840)
!3845 = !DILocation(line: 75, column: 13, scope: !2138, inlinedAt: !3840)
!3846 = !DILocation(line: 241, column: 103, scope: !2112, inlinedAt: !3847)
!3847 = distinct !DILocation(line: 871, column: 14, scope: !2144, inlinedAt: !3823)
!3848 = !DILocation(line: 241, column: 115, scope: !2112, inlinedAt: !3847)
!3849 = !DILocation(line: 66, column: 95, scope: !2122, inlinedAt: !3850)
!3850 = distinct !DILocation(line: 598, column: 16, scope: !2106, inlinedAt: !3823)
!3851 = !DILocation(line: 68, column: 14, scope: !2122, inlinedAt: !3850)
!3852 = !DILocation(line: 68, column: 17, scope: !2122, inlinedAt: !3850)
!3853 = !DILocation(line: 68, column: 29, scope: !2122, inlinedAt: !3850)
!3854 = !DILocation(line: 68, column: 39, scope: !2122, inlinedAt: !3850)
!3855 = !DILocation(line: 75, column: 13, scope: !2138, inlinedAt: !3850)
!3856 = !DILocation(line: 481, column: 84, scope: !2074, inlinedAt: !3823)
!3857 = !DILocation(line: 481, column: 100, scope: !2074, inlinedAt: !3823)
!3858 = !DILocation(line: 482, column: 70, scope: !2074, inlinedAt: !3823)
!3859 = !DILocation(line: 483, column: 64, scope: !2074, inlinedAt: !3823)
!3860 = !DILocation(line: 483, column: 77, scope: !2074, inlinedAt: !3823)
!3861 = !DILocation(line: 484, column: 61, scope: !2074, inlinedAt: !3823)
!3862 = !DILocation(line: 484, column: 68, scope: !2074, inlinedAt: !3823)
!3863 = !DILocation(line: 484, column: 75, scope: !2074, inlinedAt: !3823)
!3864 = !DILocation(line: 485, column: 63, scope: !2074, inlinedAt: !3823)
!3865 = !DILocation(line: 485, column: 78, scope: !2074, inlinedAt: !3823)
!3866 = !DILocation(line: 486, column: 58, scope: !2074, inlinedAt: !3823)
!3867 = !DILocation(line: 486, column: 75, scope: !2074, inlinedAt: !3823)
!3868 = !DILocation(line: 487, column: 58, scope: !2074, inlinedAt: !3823)
!3869 = !DILocation(line: 487, column: 71, scope: !2074, inlinedAt: !3823)
!3870 = !DILocation(line: 488, column: 61, scope: !2074, inlinedAt: !3823)
!3871 = !DILocation(line: 489, column: 58, scope: !2074, inlinedAt: !3823)
!3872 = !DILocation(line: 489, column: 68, scope: !2074, inlinedAt: !3823)
!3873 = !DILocation(line: 491, column: 9, scope: !2074, inlinedAt: !3823)
!3874 = !DILocation(line: 492, column: 20, scope: !2074, inlinedAt: !3823)
!3875 = !DILocation(line: 493, column: 9, scope: !2074, inlinedAt: !3823)
!3876 = !DILocation(line: 493, column: 23, scope: !2074, inlinedAt: !3823)
!3877 = !DILocation(line: 494, column: 9, scope: !2074, inlinedAt: !3823)
!3878 = !DILocation(line: 494, column: 19, scope: !2074, inlinedAt: !3823)
!3879 = !DILocation(line: 495, column: 14, scope: !2074, inlinedAt: !3823)
!3880 = !DILocation(line: 496, column: 9, scope: !2074, inlinedAt: !3823)
!3881 = !DILocation(line: 497, column: 9, scope: !2074, inlinedAt: !3823)
!3882 = !DILocation(line: 498, column: 9, scope: !2074, inlinedAt: !3823)
!3883 = !DILocation(line: 499, column: 9, scope: !2074, inlinedAt: !3823)
!3884 = !DILocation(line: 500, column: 9, scope: !2074, inlinedAt: !3823)
!3885 = !DILocation(line: 501, column: 9, scope: !2074, inlinedAt: !3823)
!3886 = !DILocation(line: 502, column: 11, scope: !2074, inlinedAt: !3823)
!3887 = !DILocation(line: 502, column: 20, scope: !2074, inlinedAt: !3823)
!3888 = !DILocation(line: 503, column: 9, scope: !2074, inlinedAt: !3823)
!3889 = !DILocation(line: 504, column: 14, scope: !2074, inlinedAt: !3823)
!3890 = !DILocation(line: 507, column: 16, scope: !2224, inlinedAt: !3823)
!3891 = !DILocation(line: 509, column: 17, scope: !2228, inlinedAt: !3823)
!3892 = !DILocation(line: 528, column: 13, scope: !2233, inlinedAt: !3823)
!3893 = !DILocation(line: 529, column: 13, scope: !2233, inlinedAt: !3823)
!3894 = !DILocation(line: 583, column: 13, scope: !2106, inlinedAt: !3823)
!3895 = !DILocation(line: 584, column: 13, scope: !2106, inlinedAt: !3823)
!3896 = !DILocation(line: 585, column: 13, scope: !2106, inlinedAt: !3823)
!3897 = !DILocation(line: 585, column: 20, scope: !2106, inlinedAt: !3823)
!3898 = !DILocation(line: 585, column: 27, scope: !2106, inlinedAt: !3823)
!3899 = !DILocation(line: 586, column: 13, scope: !2106, inlinedAt: !3823)
!3900 = !DILocation(line: 587, column: 13, scope: !2106, inlinedAt: !3823)
!3901 = !DILocation(line: 588, column: 13, scope: !2106, inlinedAt: !3823)
!3902 = !DILocation(line: 589, column: 13, scope: !2106, inlinedAt: !3823)
!3903 = !DILocation(line: 590, column: 13, scope: !2106, inlinedAt: !3823)
!3904 = !DILocation(line: 678, column: 17, scope: !2259, inlinedAt: !3823)
!3905 = !DILocation(line: 679, column: 17, scope: !2259, inlinedAt: !3823)
!3906 = !DILocation(line: 680, column: 19, scope: !2259, inlinedAt: !3823)
!3907 = !DILocation(line: 681, column: 20, scope: !2259, inlinedAt: !3823)
!3908 = !DILocation(line: 681, column: 25, scope: !2259, inlinedAt: !3823)
!3909 = !DILocation(line: 720, column: 20, scope: !2104, inlinedAt: !3823)
!3910 = !DILocation(line: 721, column: 20, scope: !2104, inlinedAt: !3823)
!3911 = !DILocation(line: 722, column: 17, scope: !2104, inlinedAt: !3823)
!3912 = !DILocation(line: 723, column: 17, scope: !2104, inlinedAt: !3823)
!3913 = !DILocation(line: 724, column: 22, scope: !2104, inlinedAt: !3823)
!3914 = !DILocation(line: 788, column: 18, scope: !2072, inlinedAt: !3823)
!3915 = !DILocation(line: 789, column: 18, scope: !2072, inlinedAt: !3823)
!3916 = !DILocation(line: 810, column: 22, scope: !2070, inlinedAt: !3823)
!3917 = !DILocation(line: 842, column: 13, scope: !2144, inlinedAt: !3823)
!3918 = !DILocation(line: 867, column: 19, scope: !2288, inlinedAt: !3823)
!3919 = !DILocalVariable(name: "pvq", arg: 1, scope: !3820, file: !920, line: 877, type: !947)
!3920 = !DILocation(line: 877, column: 51, scope: !3820)
!3921 = !DILocalVariable(name: "f", arg: 2, scope: !3820, file: !920, line: 877, type: !948)
!3922 = !DILocation(line: 877, column: 67, scope: !3820)
!3923 = !DILocalVariable(name: "rc", arg: 3, scope: !3820, file: !920, line: 877, type: !1751)
!3924 = !DILocation(line: 877, column: 86, scope: !3820)
!3925 = !DILocalVariable(name: "band", arg: 4, scope: !3820, file: !920, line: 877, type: !1029)
!3926 = !DILocation(line: 877, column: 100, scope: !3820)
!3927 = !DILocalVariable(name: "X", arg: 5, scope: !3820, file: !920, line: 877, type: !939)
!3928 = !DILocation(line: 877, column: 113, scope: !3820)
!3929 = !DILocalVariable(name: "Y", arg: 6, scope: !3820, file: !920, line: 877, type: !939)
!3930 = !DILocation(line: 877, column: 123, scope: !3820)
!3931 = !DILocalVariable(name: "N", arg: 7, scope: !3820, file: !920, line: 877, type: !915)
!3932 = !DILocation(line: 877, column: 130, scope: !3820)
!3933 = !DILocalVariable(name: "b", arg: 8, scope: !3820, file: !920, line: 877, type: !915)
!3934 = !DILocation(line: 877, column: 137, scope: !3820)
!3935 = !DILocalVariable(name: "blocks", arg: 9, scope: !3820, file: !920, line: 877, type: !945)
!3936 = !DILocation(line: 877, column: 149, scope: !3820)
!3937 = !DILocalVariable(name: "lowband", arg: 10, scope: !3820, file: !920, line: 877, type: !939)
!3938 = !DILocation(line: 877, column: 164, scope: !3820)
!3939 = !DILocalVariable(name: "duration", arg: 11, scope: !3820, file: !920, line: 877, type: !915)
!3940 = !DILocation(line: 877, column: 177, scope: !3820)
!3941 = !DILocalVariable(name: "lowband_out", arg: 12, scope: !3820, file: !920, line: 877, type: !939)
!3942 = !DILocation(line: 877, column: 194, scope: !3820)
!3943 = !DILocalVariable(name: "level", arg: 13, scope: !3820, file: !920, line: 877, type: !915)
!3944 = !DILocation(line: 877, column: 211, scope: !3820)
!3945 = !DILocalVariable(name: "gain", arg: 14, scope: !3820, file: !920, line: 877, type: !912)
!3946 = !DILocation(line: 877, column: 224, scope: !3820)
!3947 = !DILocalVariable(name: "lowband_scratch", arg: 15, scope: !3820, file: !920, line: 877, type: !939)
!3948 = !DILocation(line: 877, column: 237, scope: !3820)
!3949 = !DILocalVariable(name: "fill", arg: 16, scope: !3820, file: !920, line: 877, type: !915)
!3950 = !DILocation(line: 877, column: 258, scope: !3820)
!3951 = !DILocation(line: 880, column: 32, scope: !3820)
!3952 = !DILocation(line: 880, column: 37, scope: !3820)
!3953 = !DILocation(line: 880, column: 40, scope: !3820)
!3954 = !DILocation(line: 880, column: 44, scope: !3820)
!3955 = !DILocation(line: 880, column: 50, scope: !3820)
!3956 = !DILocation(line: 880, column: 53, scope: !3820)
!3957 = !DILocation(line: 880, column: 56, scope: !3820)
!3958 = !DILocation(line: 880, column: 59, scope: !3820)
!3959 = !DILocation(line: 880, column: 62, scope: !3820)
!3960 = !DILocation(line: 880, column: 70, scope: !3820)
!3961 = !DILocation(line: 880, column: 79, scope: !3820)
!3962 = !DILocation(line: 881, column: 32, scope: !3820)
!3963 = !DILocation(line: 881, column: 45, scope: !3820)
!3964 = !DILocation(line: 881, column: 52, scope: !3820)
!3965 = !DILocation(line: 881, column: 58, scope: !3820)
!3966 = !DILocation(line: 881, column: 75, scope: !3820)
!3967 = !DILocation(line: 880, column: 12, scope: !3820)
!3968 = !DILocation(line: 493, column: 20, scope: !2074, inlinedAt: !3823)
!3969 = !DILocation(line: 493, column: 19, scope: !2074, inlinedAt: !3823)
!3970 = !DILocation(line: 493, column: 18, scope: !2074, inlinedAt: !3823)
!3971 = !DILocation(line: 493, column: 31, scope: !2074, inlinedAt: !3823)
!3972 = !DILocation(line: 495, column: 19, scope: !2074, inlinedAt: !3823)
!3973 = !DILocation(line: 496, column: 15, scope: !2074, inlinedAt: !3823)
!3974 = !DILocation(line: 496, column: 19, scope: !2074, inlinedAt: !3823)
!3975 = !DILocation(line: 496, column: 17, scope: !2074, inlinedAt: !3823)
!3976 = !DILocation(line: 497, column: 16, scope: !2074, inlinedAt: !3823)
!3977 = !DILocation(line: 498, column: 14, scope: !2074, inlinedAt: !3823)
!3978 = !DILocation(line: 503, column: 23, scope: !2074, inlinedAt: !3823)
!3979 = !DILocation(line: 503, column: 26, scope: !2074, inlinedAt: !3823)
!3980 = !DILocation(line: 506, column: 9, scope: !2225, inlinedAt: !3823)
!3981 = !DILocation(line: 506, column: 11, scope: !2225, inlinedAt: !3823)
!3982 = !DILocation(line: 506, column: 9, scope: !2074, inlinedAt: !3823)
!3983 = !DILocation(line: 507, column: 20, scope: !2224, inlinedAt: !3823)
!3984 = !DILocation(line: 508, column: 16, scope: !2230, inlinedAt: !3823)
!3985 = !DILocation(line: 508, column: 14, scope: !2230, inlinedAt: !3823)
!3986 = !DILocation(line: 508, column: 21, scope: !2359, inlinedAt: !3823)
!3987 = !DILocation(line: 508, column: 26, scope: !2359, inlinedAt: !3823)
!3988 = !DILocation(line: 508, column: 23, scope: !2359, inlinedAt: !3823)
!3989 = !DILocation(line: 508, column: 9, scope: !2359, inlinedAt: !3823)
!3990 = !DILocation(line: 510, column: 17, scope: !2364, inlinedAt: !3823)
!3991 = !DILocation(line: 510, column: 20, scope: !2364, inlinedAt: !3823)
!3992 = !DILocation(line: 510, column: 31, scope: !2364, inlinedAt: !3823)
!3993 = !DILocation(line: 510, column: 17, scope: !2228, inlinedAt: !3823)
!3994 = !DILocation(line: 511, column: 21, scope: !2369, inlinedAt: !3823)
!3995 = !DILocation(line: 511, column: 21, scope: !2370, inlinedAt: !3823)
!3996 = !DILocation(line: 512, column: 28, scope: !2373, inlinedAt: !3823)
!3997 = !DILocation(line: 512, column: 33, scope: !2373, inlinedAt: !3823)
!3998 = !DILocation(line: 512, column: 26, scope: !2373, inlinedAt: !3823)
!3999 = !DILocation(line: 513, column: 40, scope: !2373, inlinedAt: !3823)
!4000 = !DILocation(line: 513, column: 44, scope: !2373, inlinedAt: !3823)
!4001 = !DILocation(line: 513, column: 21, scope: !2373, inlinedAt: !3823)
!4002 = !DILocation(line: 514, column: 17, scope: !2373, inlinedAt: !3823)
!4003 = !DILocation(line: 515, column: 47, scope: !2381, inlinedAt: !3823)
!4004 = !DILocation(line: 515, column: 28, scope: !2381, inlinedAt: !3823)
!4005 = !DILocation(line: 515, column: 26, scope: !2381, inlinedAt: !3823)
!4006 = !DILocation(line: 517, column: 17, scope: !2370, inlinedAt: !3823)
!4007 = !DILocation(line: 517, column: 20, scope: !2370, inlinedAt: !3823)
!4008 = !DILocation(line: 517, column: 31, scope: !2370, inlinedAt: !3823)
!4009 = !DILocation(line: 518, column: 13, scope: !2370, inlinedAt: !3823)
!4010 = !DILocation(line: 519, column: 32, scope: !2228, inlinedAt: !3823)
!4011 = !DILocation(line: 519, column: 31, scope: !2228, inlinedAt: !3823)
!4012 = !DILocation(line: 519, column: 25, scope: !2228, inlinedAt: !3823)
!4013 = !DILocation(line: 519, column: 13, scope: !2228, inlinedAt: !3823)
!4014 = !DILocation(line: 519, column: 18, scope: !2228, inlinedAt: !3823)
!4015 = !DILocation(line: 520, column: 17, scope: !2228, inlinedAt: !3823)
!4016 = !DILocation(line: 520, column: 15, scope: !2228, inlinedAt: !3823)
!4017 = !DILocation(line: 508, column: 35, scope: !2396, inlinedAt: !3823)
!4018 = !DILocation(line: 508, column: 9, scope: !2396, inlinedAt: !3823)
!4019 = !DILocation(line: 522, column: 13, scope: !2401, inlinedAt: !3823)
!4020 = !DILocation(line: 522, column: 13, scope: !2224, inlinedAt: !3823)
!4021 = !DILocation(line: 523, column: 30, scope: !2401, inlinedAt: !3823)
!4022 = !DILocation(line: 523, column: 13, scope: !2401, inlinedAt: !3823)
!4023 = !DILocation(line: 523, column: 28, scope: !2401, inlinedAt: !3823)
!4024 = !DILocation(line: 524, column: 9, scope: !2224, inlinedAt: !3823)
!4025 = !DILocation(line: 527, column: 10, scope: !2234, inlinedAt: !3823)
!4026 = !DILocation(line: 527, column: 17, scope: !2234, inlinedAt: !3823)
!4027 = !DILocation(line: 527, column: 20, scope: !2410, inlinedAt: !3823)
!4028 = !DILocation(line: 527, column: 26, scope: !2410, inlinedAt: !3823)
!4029 = !DILocation(line: 527, column: 9, scope: !2410, inlinedAt: !3823)
!4030 = !DILocation(line: 528, column: 38, scope: !2233, inlinedAt: !3823)
!4031 = !DILocation(line: 528, column: 25, scope: !2233, inlinedAt: !3823)
!4032 = !DILocation(line: 528, column: 28, scope: !2233, inlinedAt: !3823)
!4033 = !DILocation(line: 530, column: 13, scope: !2417, inlinedAt: !3823)
!4034 = !DILocation(line: 530, column: 23, scope: !2417, inlinedAt: !3823)
!4035 = !DILocation(line: 530, column: 13, scope: !2233, inlinedAt: !3823)
!4036 = !DILocation(line: 531, column: 25, scope: !2417, inlinedAt: !3823)
!4037 = !DILocation(line: 531, column: 23, scope: !2417, inlinedAt: !3823)
!4038 = !DILocation(line: 531, column: 13, scope: !2417, inlinedAt: !3823)
!4039 = !DILocation(line: 534, column: 13, scope: !2424, inlinedAt: !3823)
!4040 = !DILocation(line: 534, column: 21, scope: !2424, inlinedAt: !3823)
!4041 = !DILocation(line: 535, column: 14, scope: !2424, inlinedAt: !3823)
!4042 = !DILocation(line: 535, column: 24, scope: !2424, inlinedAt: !3823)
!4043 = !DILocation(line: 535, column: 29, scope: !2429, inlinedAt: !3823)
!4044 = !DILocation(line: 535, column: 33, scope: !2429, inlinedAt: !3823)
!4045 = !DILocation(line: 535, column: 38, scope: !2429, inlinedAt: !3823)
!4046 = !DILocation(line: 535, column: 43, scope: !2429, inlinedAt: !3823)
!4047 = !DILocation(line: 535, column: 46, scope: !2434, inlinedAt: !3823)
!4048 = !DILocation(line: 535, column: 56, scope: !2434, inlinedAt: !3823)
!4049 = !DILocation(line: 535, column: 61, scope: !2434, inlinedAt: !3823)
!4050 = !DILocation(line: 535, column: 64, scope: !2438, inlinedAt: !3823)
!4051 = !DILocation(line: 535, column: 67, scope: !2438, inlinedAt: !3823)
!4052 = !DILocation(line: 534, column: 13, scope: !2441, inlinedAt: !3823)
!4053 = !DILocation(line: 536, column: 20, scope: !2443, inlinedAt: !3823)
!4054 = !DILocation(line: 536, column: 18, scope: !2443, inlinedAt: !3823)
!4055 = !DILocation(line: 536, column: 25, scope: !2447, inlinedAt: !3823)
!4056 = !DILocation(line: 536, column: 29, scope: !2447, inlinedAt: !3823)
!4057 = !DILocation(line: 536, column: 27, scope: !2447, inlinedAt: !3823)
!4058 = !DILocation(line: 536, column: 13, scope: !2447, inlinedAt: !3823)
!4059 = !DILocation(line: 537, column: 46, scope: !2448, inlinedAt: !3823)
!4060 = !DILocation(line: 537, column: 38, scope: !2448, inlinedAt: !3823)
!4061 = !DILocation(line: 537, column: 33, scope: !2448, inlinedAt: !3823)
!4062 = !DILocation(line: 537, column: 17, scope: !2448, inlinedAt: !3823)
!4063 = !DILocation(line: 537, column: 36, scope: !2448, inlinedAt: !3823)
!4064 = !DILocation(line: 536, column: 33, scope: !2458, inlinedAt: !3823)
!4065 = !DILocation(line: 536, column: 13, scope: !2458, inlinedAt: !3823)
!4066 = !DILocation(line: 538, column: 23, scope: !2444, inlinedAt: !3823)
!4067 = !DILocation(line: 538, column: 21, scope: !2444, inlinedAt: !3823)
!4068 = !DILocation(line: 539, column: 9, scope: !2444, inlinedAt: !3823)
!4069 = !DILocation(line: 541, column: 16, scope: !2466, inlinedAt: !3823)
!4070 = !DILocation(line: 541, column: 14, scope: !2466, inlinedAt: !3823)
!4071 = !DILocation(line: 541, column: 21, scope: !2469, inlinedAt: !3823)
!4072 = !DILocation(line: 541, column: 25, scope: !2469, inlinedAt: !3823)
!4073 = !DILocation(line: 541, column: 23, scope: !2469, inlinedAt: !3823)
!4074 = !DILocation(line: 541, column: 9, scope: !2469, inlinedAt: !3823)
!4075 = !DILocation(line: 542, column: 17, scope: !2475, inlinedAt: !3823)
!4076 = !DILocation(line: 542, column: 23, scope: !2475, inlinedAt: !3823)
!4077 = !DILocation(line: 542, column: 26, scope: !2479, inlinedAt: !3823)
!4078 = !DILocation(line: 542, column: 17, scope: !2479, inlinedAt: !3823)
!4079 = !DILocation(line: 543, column: 28, scope: !2475, inlinedAt: !3823)
!4080 = !DILocation(line: 543, column: 36, scope: !2479, inlinedAt: !3823)
!4081 = !DILocation(line: 543, column: 28, scope: !2479, inlinedAt: !3823)
!4082 = !DILocation(line: 543, column: 40, scope: !2485, inlinedAt: !3823)
!4083 = !DILocation(line: 543, column: 28, scope: !2485, inlinedAt: !3823)
!4084 = !DILocation(line: 543, column: 28, scope: !2488, inlinedAt: !3823)
!4085 = !DILocation(line: 543, column: 49, scope: !2488, inlinedAt: !3823)
!4086 = !DILocation(line: 543, column: 54, scope: !2488, inlinedAt: !3823)
!4087 = !DILocation(line: 543, column: 51, scope: !2488, inlinedAt: !3823)
!4088 = !DILocation(line: 543, column: 62, scope: !2488, inlinedAt: !3823)
!4089 = !DILocation(line: 543, column: 59, scope: !2488, inlinedAt: !3823)
!4090 = !DILocation(line: 543, column: 17, scope: !2488, inlinedAt: !3823)
!4091 = !DILocation(line: 544, column: 43, scope: !2476, inlinedAt: !3823)
!4092 = !DILocation(line: 544, column: 48, scope: !2476, inlinedAt: !3823)
!4093 = !DILocation(line: 544, column: 20, scope: !2476, inlinedAt: !3823)
!4094 = !DILocation(line: 544, column: 80, scope: !2476, inlinedAt: !3823)
!4095 = !DILocation(line: 544, column: 85, scope: !2476, inlinedAt: !3823)
!4096 = !DILocation(line: 544, column: 57, scope: !2476, inlinedAt: !3823)
!4097 = !DILocation(line: 544, column: 91, scope: !2476, inlinedAt: !3823)
!4098 = !DILocation(line: 544, column: 55, scope: !2476, inlinedAt: !3823)
!4099 = !DILocation(line: 544, column: 18, scope: !2476, inlinedAt: !3823)
!4100 = !DILocation(line: 541, column: 37, scope: !2505, inlinedAt: !3823)
!4101 = !DILocation(line: 541, column: 9, scope: !2505, inlinedAt: !3823)
!4102 = !DILocation(line: 546, column: 20, scope: !2233, inlinedAt: !3823)
!4103 = !DILocation(line: 546, column: 16, scope: !2233, inlinedAt: !3823)
!4104 = !DILocation(line: 547, column: 17, scope: !2233, inlinedAt: !3823)
!4105 = !DILocation(line: 547, column: 13, scope: !2233, inlinedAt: !3823)
!4106 = !DILocation(line: 550, column: 9, scope: !2233, inlinedAt: !3823)
!4107 = !DILocation(line: 550, column: 17, scope: !2441, inlinedAt: !3823)
!4108 = !DILocation(line: 550, column: 21, scope: !2441, inlinedAt: !3823)
!4109 = !DILocation(line: 550, column: 26, scope: !2441, inlinedAt: !3823)
!4110 = !DILocation(line: 550, column: 31, scope: !2441, inlinedAt: !3823)
!4111 = !DILocation(line: 550, column: 34, scope: !2519, inlinedAt: !3823)
!4112 = !DILocation(line: 550, column: 44, scope: !2519, inlinedAt: !3823)
!4113 = !DILocation(line: 550, column: 9, scope: !2522, inlinedAt: !3823)
!4114 = !DILocation(line: 551, column: 17, scope: !2524, inlinedAt: !3823)
!4115 = !DILocation(line: 551, column: 23, scope: !2524, inlinedAt: !3823)
!4116 = !DILocation(line: 551, column: 26, scope: !2528, inlinedAt: !3823)
!4117 = !DILocation(line: 551, column: 17, scope: !2528, inlinedAt: !3823)
!4118 = !DILocation(line: 552, column: 28, scope: !2524, inlinedAt: !3823)
!4119 = !DILocation(line: 552, column: 36, scope: !2528, inlinedAt: !3823)
!4120 = !DILocation(line: 552, column: 28, scope: !2528, inlinedAt: !3823)
!4121 = !DILocation(line: 552, column: 40, scope: !2534, inlinedAt: !3823)
!4122 = !DILocation(line: 552, column: 28, scope: !2534, inlinedAt: !3823)
!4123 = !DILocation(line: 552, column: 28, scope: !2537, inlinedAt: !3823)
!4124 = !DILocation(line: 552, column: 49, scope: !2537, inlinedAt: !3823)
!4125 = !DILocation(line: 552, column: 54, scope: !2537, inlinedAt: !3823)
!4126 = !DILocation(line: 552, column: 17, scope: !2537, inlinedAt: !3823)
!4127 = !DILocation(line: 553, column: 21, scope: !2525, inlinedAt: !3823)
!4128 = !DILocation(line: 553, column: 29, scope: !2525, inlinedAt: !3823)
!4129 = !DILocation(line: 553, column: 26, scope: !2525, inlinedAt: !3823)
!4130 = !DILocation(line: 553, column: 18, scope: !2525, inlinedAt: !3823)
!4131 = !DILocation(line: 554, column: 20, scope: !2525, inlinedAt: !3823)
!4132 = !DILocation(line: 555, column: 17, scope: !2525, inlinedAt: !3823)
!4133 = !DILocation(line: 556, column: 24, scope: !2525, inlinedAt: !3823)
!4134 = !DILocation(line: 557, column: 22, scope: !2525, inlinedAt: !3823)
!4135 = !DILocation(line: 550, column: 9, scope: !2550, inlinedAt: !3823)
!4136 = !DILocation(line: 559, column: 14, scope: !2233, inlinedAt: !3823)
!4137 = !DILocation(line: 559, column: 12, scope: !2233, inlinedAt: !3823)
!4138 = !DILocation(line: 560, column: 16, scope: !2233, inlinedAt: !3823)
!4139 = !DILocation(line: 560, column: 14, scope: !2233, inlinedAt: !3823)
!4140 = !DILocation(line: 563, column: 13, scope: !2558, inlinedAt: !3823)
!4141 = !DILocation(line: 563, column: 16, scope: !2558, inlinedAt: !3823)
!4142 = !DILocation(line: 563, column: 20, scope: !2558, inlinedAt: !3823)
!4143 = !DILocation(line: 563, column: 24, scope: !2562, inlinedAt: !3823)
!4144 = !DILocation(line: 563, column: 30, scope: !2562, inlinedAt: !3823)
!4145 = !DILocation(line: 563, column: 33, scope: !2565, inlinedAt: !3823)
!4146 = !DILocation(line: 563, column: 13, scope: !2565, inlinedAt: !3823)
!4147 = !DILocation(line: 564, column: 40, scope: !2558, inlinedAt: !3823)
!4148 = !DILocation(line: 564, column: 45, scope: !2558, inlinedAt: !3823)
!4149 = !DILocation(line: 564, column: 59, scope: !2558, inlinedAt: !3823)
!4150 = !DILocation(line: 564, column: 67, scope: !2562, inlinedAt: !3823)
!4151 = !DILocation(line: 564, column: 59, scope: !2562, inlinedAt: !3823)
!4152 = !DILocation(line: 564, column: 71, scope: !2565, inlinedAt: !3823)
!4153 = !DILocation(line: 564, column: 59, scope: !2565, inlinedAt: !3823)
!4154 = !DILocation(line: 564, column: 59, scope: !2575, inlinedAt: !3823)
!4155 = !DILocation(line: 565, column: 40, scope: !2558, inlinedAt: !3823)
!4156 = !DILocation(line: 565, column: 47, scope: !2558, inlinedAt: !3823)
!4157 = !DILocation(line: 565, column: 44, scope: !2558, inlinedAt: !3823)
!4158 = !DILocation(line: 565, column: 58, scope: !2558, inlinedAt: !3823)
!4159 = !DILocation(line: 565, column: 64, scope: !2558, inlinedAt: !3823)
!4160 = !DILocation(line: 565, column: 61, scope: !2558, inlinedAt: !3823)
!4161 = !DILocation(line: 566, column: 40, scope: !2558, inlinedAt: !3823)
!4162 = !DILocation(line: 564, column: 13, scope: !2575, inlinedAt: !3823)
!4163 = !DILocation(line: 567, column: 5, scope: !2233, inlinedAt: !3823)
!4164 = !DILocation(line: 571, column: 34, scope: !2074, inlinedAt: !3823)
!4165 = !DILocation(line: 571, column: 43, scope: !2074, inlinedAt: !3823)
!4166 = !DILocation(line: 571, column: 48, scope: !2074, inlinedAt: !3823)
!4167 = !DILocation(line: 571, column: 55, scope: !2074, inlinedAt: !3823)
!4168 = !DILocation(line: 571, column: 53, scope: !2074, inlinedAt: !3823)
!4169 = !DILocation(line: 571, column: 13, scope: !2074, inlinedAt: !3823)
!4170 = !DILocation(line: 570, column: 32, scope: !2074, inlinedAt: !3823)
!4171 = !DILocation(line: 570, column: 11, scope: !2074, inlinedAt: !3823)
!4172 = !DILocation(line: 572, column: 10, scope: !2594, inlinedAt: !3823)
!4173 = !DILocation(line: 572, column: 17, scope: !2594, inlinedAt: !3823)
!4174 = !DILocation(line: 572, column: 20, scope: !2597, inlinedAt: !3823)
!4175 = !DILocation(line: 572, column: 29, scope: !2597, inlinedAt: !3823)
!4176 = !DILocation(line: 572, column: 34, scope: !2597, inlinedAt: !3823)
!4177 = !DILocation(line: 572, column: 37, scope: !2601, inlinedAt: !3823)
!4178 = !DILocation(line: 572, column: 47, scope: !2601, inlinedAt: !3823)
!4179 = !DILocation(line: 572, column: 41, scope: !2601, inlinedAt: !3823)
!4180 = !DILocation(line: 572, column: 57, scope: !2601, inlinedAt: !3823)
!4181 = !DILocation(line: 572, column: 39, scope: !2601, inlinedAt: !3823)
!4182 = !DILocation(line: 572, column: 62, scope: !2601, inlinedAt: !3823)
!4183 = !DILocation(line: 572, column: 65, scope: !2608, inlinedAt: !3823)
!4184 = !DILocation(line: 572, column: 67, scope: !2608, inlinedAt: !3823)
!4185 = !DILocation(line: 572, column: 9, scope: !2608, inlinedAt: !3823)
!4186 = !DILocation(line: 573, column: 11, scope: !2612, inlinedAt: !3823)
!4187 = !DILocation(line: 574, column: 13, scope: !2612, inlinedAt: !3823)
!4188 = !DILocation(line: 574, column: 17, scope: !2612, inlinedAt: !3823)
!4189 = !DILocation(line: 574, column: 15, scope: !2612, inlinedAt: !3823)
!4190 = !DILocation(line: 574, column: 11, scope: !2612, inlinedAt: !3823)
!4191 = !DILocation(line: 575, column: 15, scope: !2612, inlinedAt: !3823)
!4192 = !DILocation(line: 576, column: 18, scope: !2612, inlinedAt: !3823)
!4193 = !DILocation(line: 577, column: 13, scope: !2620, inlinedAt: !3823)
!4194 = !DILocation(line: 577, column: 20, scope: !2620, inlinedAt: !3823)
!4195 = !DILocation(line: 577, column: 13, scope: !2612, inlinedAt: !3823)
!4196 = !DILocation(line: 578, column: 21, scope: !2620, inlinedAt: !3823)
!4197 = !DILocation(line: 578, column: 26, scope: !2620, inlinedAt: !3823)
!4198 = !DILocation(line: 578, column: 34, scope: !2620, inlinedAt: !3823)
!4199 = !DILocation(line: 578, column: 39, scope: !2620, inlinedAt: !3823)
!4200 = !DILocation(line: 578, column: 31, scope: !2620, inlinedAt: !3823)
!4201 = !DILocation(line: 578, column: 18, scope: !2620, inlinedAt: !3823)
!4202 = !DILocation(line: 578, column: 13, scope: !2620, inlinedAt: !3823)
!4203 = !DILocation(line: 579, column: 19, scope: !2612, inlinedAt: !3823)
!4204 = !DILocation(line: 579, column: 26, scope: !2612, inlinedAt: !3823)
!4205 = !DILocation(line: 579, column: 31, scope: !2612, inlinedAt: !3823)
!4206 = !DILocation(line: 579, column: 16, scope: !2612, inlinedAt: !3823)
!4207 = !DILocation(line: 580, column: 5, scope: !2612, inlinedAt: !3823)
!4208 = !DILocation(line: 582, column: 9, scope: !2073, inlinedAt: !3823)
!4209 = !DILocation(line: 582, column: 9, scope: !2074, inlinedAt: !3823)
!4210 = !DILocation(line: 584, column: 22, scope: !2106, inlinedAt: !3823)
!4211 = !DILocation(line: 584, column: 46, scope: !2639, inlinedAt: !3823)
!4212 = !DILocation(line: 584, column: 49, scope: !2639, inlinedAt: !3823)
!4213 = !DILocation(line: 584, column: 52, scope: !2639, inlinedAt: !3823)
!4214 = !DILocation(line: 584, column: 60, scope: !2639, inlinedAt: !3823)
!4215 = !DILocation(line: 584, column: 30, scope: !2639, inlinedAt: !3823)
!4216 = !DILocation(line: 584, column: 22, scope: !2639, inlinedAt: !3823)
!4217 = !DILocation(line: 584, column: 22, scope: !2646, inlinedAt: !3823)
!4218 = !DILocation(line: 584, column: 22, scope: !2648, inlinedAt: !3823)
!4219 = !DILocation(line: 584, column: 13, scope: !2648, inlinedAt: !3823)
!4220 = !DILocation(line: 593, column: 44, scope: !2106, inlinedAt: !3823)
!4221 = !DILocation(line: 593, column: 21, scope: !2106, inlinedAt: !3823)
!4222 = !DILocation(line: 593, column: 52, scope: !2106, inlinedAt: !3823)
!4223 = !DILocation(line: 593, column: 61, scope: !2106, inlinedAt: !3823)
!4224 = !DILocation(line: 593, column: 50, scope: !2106, inlinedAt: !3823)
!4225 = !DILocation(line: 593, column: 19, scope: !2106, inlinedAt: !3823)
!4226 = !DILocation(line: 594, column: 19, scope: !2106, inlinedAt: !3823)
!4227 = !DILocation(line: 594, column: 29, scope: !2106, inlinedAt: !3823)
!4228 = !DILocation(line: 594, column: 38, scope: !2106, inlinedAt: !3823)
!4229 = !DILocation(line: 594, column: 45, scope: !2106, inlinedAt: !3823)
!4230 = !DILocation(line: 594, column: 48, scope: !2639, inlinedAt: !3823)
!4231 = !DILocation(line: 594, column: 50, scope: !2639, inlinedAt: !3823)
!4232 = !DILocation(line: 594, column: 38, scope: !2646, inlinedAt: !3823)
!4233 = !DILocation(line: 594, column: 35, scope: !2646, inlinedAt: !3823)
!4234 = !DILocation(line: 594, column: 16, scope: !2646, inlinedAt: !3823)
!4235 = !DILocation(line: 596, column: 15, scope: !2106, inlinedAt: !3823)
!4236 = !DILocation(line: 596, column: 22, scope: !2106, inlinedAt: !3823)
!4237 = !DILocation(line: 596, column: 25, scope: !2639, inlinedAt: !3823)
!4238 = !DILocation(line: 596, column: 33, scope: !2639, inlinedAt: !3823)
!4239 = !DILocation(line: 596, column: 36, scope: !2639, inlinedAt: !3823)
!4240 = !DILocation(line: 596, column: 30, scope: !2639, inlinedAt: !3823)
!4241 = !DILocation(line: 596, column: 14, scope: !2639, inlinedAt: !3823)
!4242 = !DILocation(line: 596, column: 14, scope: !2646, inlinedAt: !3823)
!4243 = !DILocation(line: 597, column: 30, scope: !2106, inlinedAt: !3823)
!4244 = !DILocation(line: 597, column: 33, scope: !2106, inlinedAt: !3823)
!4245 = !DILocation(line: 597, column: 36, scope: !2106, inlinedAt: !3823)
!4246 = !DILocation(line: 597, column: 44, scope: !2106, inlinedAt: !3823)
!4247 = !DILocation(line: 597, column: 55, scope: !2106, inlinedAt: !3823)
!4248 = !DILocation(line: 597, column: 14, scope: !2106, inlinedAt: !3823)
!4249 = !DILocation(line: 596, column: 14, scope: !2648, inlinedAt: !3823)
!4250 = !DILocation(line: 596, column: 14, scope: !2681, inlinedAt: !3823)
!4251 = !DILocation(line: 596, column: 12, scope: !2681, inlinedAt: !3823)
!4252 = !DILocation(line: 598, column: 34, scope: !2106, inlinedAt: !3823)
!4253 = !DILocation(line: 598, column: 16, scope: !2106, inlinedAt: !3823)
!4254 = !DILocation(line: 70, column: 18, scope: !2122, inlinedAt: !3850)
!4255 = !DILocation(line: 70, column: 22, scope: !2122, inlinedAt: !3850)
!4256 = !DILocation(line: 70, column: 33, scope: !2122, inlinedAt: !3850)
!4257 = !DILocation(line: 70, column: 16, scope: !2122, inlinedAt: !3850)
!4258 = !DILocation(line: 71, column: 37, scope: !2122, inlinedAt: !3850)
!4259 = !DILocation(line: 71, column: 41, scope: !2122, inlinedAt: !3850)
!4260 = !DILocation(line: 71, column: 47, scope: !2122, inlinedAt: !3850)
!4261 = !DILocation(line: 71, column: 22, scope: !2122, inlinedAt: !3850)
!4262 = !DILocation(line: 71, column: 20, scope: !2122, inlinedAt: !3850)
!4263 = !DILocation(line: 71, column: 52, scope: !2122, inlinedAt: !3850)
!4264 = !DILocation(line: 71, column: 14, scope: !2122, inlinedAt: !3850)
!4265 = !DILocation(line: 72, column: 13, scope: !2122, inlinedAt: !3850)
!4266 = !DILocation(line: 72, column: 17, scope: !2122, inlinedAt: !3850)
!4267 = !DILocation(line: 72, column: 27, scope: !2122, inlinedAt: !3850)
!4268 = !DILocation(line: 72, column: 35, scope: !2122, inlinedAt: !3850)
!4269 = !DILocation(line: 72, column: 23, scope: !2122, inlinedAt: !3850)
!4270 = !DILocation(line: 72, column: 11, scope: !2122, inlinedAt: !3850)
!4271 = !DILocation(line: 74, column: 12, scope: !2140, inlinedAt: !3850)
!4272 = !DILocation(line: 74, column: 10, scope: !2140, inlinedAt: !3850)
!4273 = !DILocation(line: 74, column: 17, scope: !2705, inlinedAt: !3850)
!4274 = !DILocation(line: 74, column: 19, scope: !2705, inlinedAt: !3850)
!4275 = !DILocation(line: 74, column: 5, scope: !2705, inlinedAt: !3850)
!4276 = !DILocation(line: 76, column: 17, scope: !2138, inlinedAt: !3850)
!4277 = !DILocation(line: 76, column: 25, scope: !2138, inlinedAt: !3850)
!4278 = !DILocation(line: 76, column: 23, scope: !2138, inlinedAt: !3850)
!4279 = !DILocation(line: 76, column: 31, scope: !2138, inlinedAt: !3850)
!4280 = !DILocation(line: 76, column: 15, scope: !2138, inlinedAt: !3850)
!4281 = !DILocation(line: 77, column: 15, scope: !2138, inlinedAt: !3850)
!4282 = !DILocation(line: 77, column: 21, scope: !2138, inlinedAt: !3850)
!4283 = !DILocation(line: 77, column: 13, scope: !2138, inlinedAt: !3850)
!4284 = !DILocation(line: 78, column: 20, scope: !2138, inlinedAt: !3850)
!4285 = !DILocation(line: 78, column: 29, scope: !2138, inlinedAt: !3850)
!4286 = !DILocation(line: 78, column: 36, scope: !2138, inlinedAt: !3850)
!4287 = !DILocation(line: 78, column: 34, scope: !2138, inlinedAt: !3850)
!4288 = !DILocation(line: 78, column: 18, scope: !2138, inlinedAt: !3850)
!4289 = !DILocation(line: 79, column: 19, scope: !2138, inlinedAt: !3850)
!4290 = !DILocation(line: 79, column: 15, scope: !2138, inlinedAt: !3850)
!4291 = !DILocation(line: 74, column: 25, scope: !2724, inlinedAt: !3850)
!4292 = !DILocation(line: 74, column: 5, scope: !2724, inlinedAt: !3850)
!4293 = !DILocation(line: 82, column: 12, scope: !2122, inlinedAt: !3850)
!4294 = !DILocation(line: 82, column: 25, scope: !2122, inlinedAt: !3850)
!4295 = !DILocation(line: 82, column: 23, scope: !2122, inlinedAt: !3850)
!4296 = !DILocation(line: 598, column: 14, scope: !2106, inlinedAt: !3823)
!4297 = !DILocation(line: 599, column: 13, scope: !2733, inlinedAt: !3823)
!4298 = !DILocation(line: 599, column: 16, scope: !2733, inlinedAt: !3823)
!4299 = !DILocation(line: 599, column: 13, scope: !2106, inlinedAt: !3823)
!4300 = !DILocation(line: 600, column: 17, scope: !2737, inlinedAt: !3823)
!4301 = !DILocation(line: 600, column: 17, scope: !2738, inlinedAt: !3823)
!4302 = !DILocation(line: 601, column: 27, scope: !2737, inlinedAt: !3823)
!4303 = !DILocation(line: 601, column: 34, scope: !2737, inlinedAt: !3823)
!4304 = !DILocation(line: 601, column: 33, scope: !2737, inlinedAt: !3823)
!4305 = !DILocation(line: 601, column: 37, scope: !2737, inlinedAt: !3823)
!4306 = !DILocation(line: 601, column: 45, scope: !2737, inlinedAt: !3823)
!4307 = !DILocation(line: 601, column: 24, scope: !2737, inlinedAt: !3823)
!4308 = !DILocation(line: 601, column: 17, scope: !2737, inlinedAt: !3823)
!4309 = !DILocation(line: 604, column: 17, scope: !2748, inlinedAt: !3823)
!4310 = !DILocation(line: 604, column: 17, scope: !2738, inlinedAt: !3823)
!4311 = !DILocation(line: 605, column: 21, scope: !2751, inlinedAt: !3823)
!4312 = !DILocation(line: 605, column: 28, scope: !2751, inlinedAt: !3823)
!4313 = !DILocation(line: 605, column: 31, scope: !2755, inlinedAt: !3823)
!4314 = !DILocation(line: 605, column: 33, scope: !2755, inlinedAt: !3823)
!4315 = !DILocation(line: 605, column: 21, scope: !2755, inlinedAt: !3823)
!4316 = !DILocation(line: 606, column: 46, scope: !2751, inlinedAt: !3823)
!4317 = !DILocation(line: 606, column: 50, scope: !2751, inlinedAt: !3823)
!4318 = !DILocation(line: 606, column: 58, scope: !2751, inlinedAt: !3823)
!4319 = !DILocation(line: 606, column: 61, scope: !2751, inlinedAt: !3823)
!4320 = !DILocation(line: 606, column: 21, scope: !2751, inlinedAt: !3823)
!4321 = !DILocation(line: 607, column: 26, scope: !2764, inlinedAt: !3823)
!4322 = !DILocation(line: 607, column: 33, scope: !2764, inlinedAt: !3823)
!4323 = !DILocation(line: 607, column: 36, scope: !2767, inlinedAt: !3823)
!4324 = !DILocation(line: 607, column: 39, scope: !2767, inlinedAt: !3823)
!4325 = !DILocation(line: 607, column: 26, scope: !2767, inlinedAt: !3823)
!4326 = !DILocation(line: 608, column: 41, scope: !2764, inlinedAt: !3823)
!4327 = !DILocation(line: 608, column: 45, scope: !2764, inlinedAt: !3823)
!4328 = !DILocation(line: 608, column: 53, scope: !2764, inlinedAt: !3823)
!4329 = !DILocation(line: 608, column: 56, scope: !2764, inlinedAt: !3823)
!4330 = !DILocation(line: 608, column: 21, scope: !2764, inlinedAt: !3823)
!4331 = !DILocation(line: 610, column: 45, scope: !2764, inlinedAt: !3823)
!4332 = !DILocation(line: 610, column: 49, scope: !2764, inlinedAt: !3823)
!4333 = !DILocation(line: 610, column: 57, scope: !2764, inlinedAt: !3823)
!4334 = !DILocation(line: 610, column: 21, scope: !2764, inlinedAt: !3823)
!4335 = !DILocation(line: 611, column: 26, scope: !2752, inlinedAt: !3823)
!4336 = !DILocation(line: 611, column: 33, scope: !2752, inlinedAt: !3823)
!4337 = !DILocation(line: 611, column: 43, scope: !2752, inlinedAt: !3823)
!4338 = !DILocation(line: 611, column: 41, scope: !2752, inlinedAt: !3823)
!4339 = !DILocation(line: 611, column: 24, scope: !2752, inlinedAt: !3823)
!4340 = !DILocation(line: 612, column: 21, scope: !2785, inlinedAt: !3823)
!4341 = !DILocation(line: 612, column: 21, scope: !2752, inlinedAt: !3823)
!4342 = !DILocation(line: 613, column: 25, scope: !2788, inlinedAt: !3823)
!4343 = !DILocation(line: 613, column: 32, scope: !2788, inlinedAt: !3823)
!4344 = !DILocation(line: 613, column: 25, scope: !2789, inlinedAt: !3823)
!4345 = !DILocation(line: 614, column: 49, scope: !2788, inlinedAt: !3823)
!4346 = !DILocation(line: 614, column: 52, scope: !2788, inlinedAt: !3823)
!4347 = !DILocation(line: 614, column: 78, scope: !2788, inlinedAt: !3823)
!4348 = !DILocation(line: 614, column: 55, scope: !2788, inlinedAt: !3823)
!4349 = !DILocation(line: 614, column: 58, scope: !2788, inlinedAt: !3823)
!4350 = !DILocation(line: 614, column: 67, scope: !2788, inlinedAt: !3823)
!4351 = !DILocation(line: 615, column: 72, scope: !2788, inlinedAt: !3823)
!4352 = !DILocation(line: 615, column: 49, scope: !2788, inlinedAt: !3823)
!4353 = !DILocation(line: 615, column: 52, scope: !2788, inlinedAt: !3823)
!4354 = !DILocation(line: 615, column: 61, scope: !2788, inlinedAt: !3823)
!4355 = !DILocation(line: 615, column: 79, scope: !2788, inlinedAt: !3823)
!4356 = !DILocation(line: 614, column: 25, scope: !2788, inlinedAt: !3823)
!4357 = !DILocation(line: 617, column: 49, scope: !2788, inlinedAt: !3823)
!4358 = !DILocation(line: 617, column: 52, scope: !2788, inlinedAt: !3823)
!4359 = !DILocation(line: 617, column: 55, scope: !2788, inlinedAt: !3823)
!4360 = !DILocation(line: 617, column: 25, scope: !2788, inlinedAt: !3823)
!4361 = !DILocation(line: 618, column: 17, scope: !2789, inlinedAt: !3823)
!4362 = !DILocation(line: 619, column: 13, scope: !2752, inlinedAt: !3823)
!4363 = !DILocation(line: 620, column: 21, scope: !2811, inlinedAt: !3823)
!4364 = !DILocation(line: 620, column: 28, scope: !2811, inlinedAt: !3823)
!4365 = !DILocation(line: 620, column: 31, scope: !2815, inlinedAt: !3823)
!4366 = !DILocation(line: 620, column: 33, scope: !2815, inlinedAt: !3823)
!4367 = !DILocation(line: 620, column: 21, scope: !2815, inlinedAt: !3823)
!4368 = !DILocation(line: 621, column: 55, scope: !2811, inlinedAt: !3823)
!4369 = !DILocation(line: 621, column: 59, scope: !2811, inlinedAt: !3823)
!4370 = !DILocation(line: 621, column: 62, scope: !2811, inlinedAt: !3823)
!4371 = !DILocation(line: 621, column: 30, scope: !2811, inlinedAt: !3823)
!4372 = !DILocation(line: 621, column: 28, scope: !2811, inlinedAt: !3823)
!4373 = !DILocation(line: 621, column: 21, scope: !2811, inlinedAt: !3823)
!4374 = !DILocation(line: 622, column: 26, scope: !2825, inlinedAt: !3823)
!4375 = !DILocation(line: 622, column: 33, scope: !2825, inlinedAt: !3823)
!4376 = !DILocation(line: 622, column: 36, scope: !2828, inlinedAt: !3823)
!4377 = !DILocation(line: 622, column: 39, scope: !2828, inlinedAt: !3823)
!4378 = !DILocation(line: 622, column: 26, scope: !2828, inlinedAt: !3823)
!4379 = !DILocation(line: 623, column: 50, scope: !2825, inlinedAt: !3823)
!4380 = !DILocation(line: 623, column: 54, scope: !2825, inlinedAt: !3823)
!4381 = !DILocation(line: 623, column: 56, scope: !2825, inlinedAt: !3823)
!4382 = !DILocation(line: 623, column: 30, scope: !2825, inlinedAt: !3823)
!4383 = !DILocation(line: 623, column: 28, scope: !2825, inlinedAt: !3823)
!4384 = !DILocation(line: 623, column: 21, scope: !2825, inlinedAt: !3823)
!4385 = !DILocation(line: 625, column: 54, scope: !2825, inlinedAt: !3823)
!4386 = !DILocation(line: 625, column: 58, scope: !2825, inlinedAt: !3823)
!4387 = !DILocation(line: 625, column: 30, scope: !2825, inlinedAt: !3823)
!4388 = !DILocation(line: 625, column: 28, scope: !2825, inlinedAt: !3823)
!4389 = !DILocation(line: 626, column: 26, scope: !2812, inlinedAt: !3823)
!4390 = !DILocation(line: 626, column: 33, scope: !2812, inlinedAt: !3823)
!4391 = !DILocation(line: 626, column: 43, scope: !2812, inlinedAt: !3823)
!4392 = !DILocation(line: 626, column: 41, scope: !2812, inlinedAt: !3823)
!4393 = !DILocation(line: 626, column: 24, scope: !2812, inlinedAt: !3823)
!4394 = !DILocation(line: 628, column: 9, scope: !2738, inlinedAt: !3823)
!4395 = !DILocation(line: 628, column: 20, scope: !2848, inlinedAt: !3823)
!4396 = !DILocation(line: 629, column: 17, scope: !2851, inlinedAt: !3823)
!4397 = !DILocation(line: 629, column: 17, scope: !2852, inlinedAt: !3823)
!4398 = !DILocation(line: 630, column: 23, scope: !2855, inlinedAt: !3823)
!4399 = !DILocation(line: 630, column: 30, scope: !2855, inlinedAt: !3823)
!4400 = !DILocation(line: 630, column: 21, scope: !2855, inlinedAt: !3823)
!4401 = !DILocation(line: 631, column: 22, scope: !2859, inlinedAt: !3823)
!4402 = !DILocation(line: 631, column: 22, scope: !2855, inlinedAt: !3823)
!4403 = !DILocation(line: 632, column: 28, scope: !2862, inlinedAt: !3823)
!4404 = !DILocation(line: 632, column: 26, scope: !2862, inlinedAt: !3823)
!4405 = !DILocation(line: 632, column: 33, scope: !2866, inlinedAt: !3823)
!4406 = !DILocation(line: 632, column: 37, scope: !2866, inlinedAt: !3823)
!4407 = !DILocation(line: 632, column: 35, scope: !2866, inlinedAt: !3823)
!4408 = !DILocation(line: 632, column: 21, scope: !2866, inlinedAt: !3823)
!4409 = !DILocation(line: 633, column: 26, scope: !2867, inlinedAt: !3823)
!4410 = !DILocation(line: 633, column: 24, scope: !2867, inlinedAt: !3823)
!4411 = !DILocation(line: 633, column: 29, scope: !2867, inlinedAt: !3823)
!4412 = !DILocation(line: 632, column: 41, scope: !2875, inlinedAt: !3823)
!4413 = !DILocation(line: 632, column: 21, scope: !2875, inlinedAt: !3823)
!4414 = !DILocation(line: 634, column: 18, scope: !2863, inlinedAt: !3823)
!4415 = !DILocation(line: 635, column: 42, scope: !2855, inlinedAt: !3823)
!4416 = !DILocation(line: 635, column: 45, scope: !2855, inlinedAt: !3823)
!4417 = !DILocation(line: 635, column: 71, scope: !2855, inlinedAt: !3823)
!4418 = !DILocation(line: 635, column: 48, scope: !2855, inlinedAt: !3823)
!4419 = !DILocation(line: 635, column: 51, scope: !2855, inlinedAt: !3823)
!4420 = !DILocation(line: 635, column: 60, scope: !2855, inlinedAt: !3823)
!4421 = !DILocation(line: 636, column: 65, scope: !2855, inlinedAt: !3823)
!4422 = !DILocation(line: 636, column: 42, scope: !2855, inlinedAt: !3823)
!4423 = !DILocation(line: 636, column: 45, scope: !2855, inlinedAt: !3823)
!4424 = !DILocation(line: 636, column: 54, scope: !2855, inlinedAt: !3823)
!4425 = !DILocation(line: 636, column: 72, scope: !2855, inlinedAt: !3823)
!4426 = !DILocation(line: 635, column: 18, scope: !2855, inlinedAt: !3823)
!4427 = !DILocation(line: 638, column: 21, scope: !2893, inlinedAt: !3823)
!4428 = !DILocation(line: 638, column: 23, scope: !2893, inlinedAt: !3823)
!4429 = !DILocation(line: 638, column: 32, scope: !2893, inlinedAt: !3823)
!4430 = !DILocation(line: 638, column: 35, scope: !2897, inlinedAt: !3823)
!4431 = !DILocation(line: 638, column: 38, scope: !2897, inlinedAt: !3823)
!4432 = !DILocation(line: 638, column: 49, scope: !2897, inlinedAt: !3823)
!4433 = !DILocation(line: 638, column: 21, scope: !2897, inlinedAt: !3823)
!4434 = !DILocation(line: 639, column: 40, scope: !2902, inlinedAt: !3823)
!4435 = !DILocation(line: 639, column: 44, scope: !2902, inlinedAt: !3823)
!4436 = !DILocation(line: 639, column: 21, scope: !2902, inlinedAt: !3823)
!4437 = !DILocation(line: 640, column: 17, scope: !2902, inlinedAt: !3823)
!4438 = !DILocation(line: 641, column: 25, scope: !2907, inlinedAt: !3823)
!4439 = !DILocation(line: 643, column: 13, scope: !2855, inlinedAt: !3823)
!4440 = !DILocation(line: 644, column: 24, scope: !2910, inlinedAt: !3823)
!4441 = !DILocation(line: 644, column: 26, scope: !2910, inlinedAt: !3823)
!4442 = !DILocation(line: 644, column: 35, scope: !2910, inlinedAt: !3823)
!4443 = !DILocation(line: 644, column: 38, scope: !2914, inlinedAt: !3823)
!4444 = !DILocation(line: 644, column: 41, scope: !2914, inlinedAt: !3823)
!4445 = !DILocation(line: 644, column: 52, scope: !2914, inlinedAt: !3823)
!4446 = !DILocation(line: 644, column: 23, scope: !2914, inlinedAt: !3823)
!4447 = !DILocation(line: 644, column: 83, scope: !2919, inlinedAt: !3823)
!4448 = !DILocation(line: 644, column: 64, scope: !2919, inlinedAt: !3823)
!4449 = !DILocation(line: 644, column: 23, scope: !2919, inlinedAt: !3823)
!4450 = !DILocation(line: 644, column: 23, scope: !2923, inlinedAt: !3823)
!4451 = !DILocation(line: 644, column: 23, scope: !2925, inlinedAt: !3823)
!4452 = !DILocation(line: 644, column: 21, scope: !2925, inlinedAt: !3823)
!4453 = !DILocation(line: 645, column: 23, scope: !2910, inlinedAt: !3823)
!4454 = !DILocation(line: 645, column: 26, scope: !2910, inlinedAt: !3823)
!4455 = !DILocation(line: 645, column: 44, scope: !2914, inlinedAt: !3823)
!4456 = !DILocation(line: 645, column: 23, scope: !2914, inlinedAt: !3823)
!4457 = !DILocation(line: 645, column: 23, scope: !2919, inlinedAt: !3823)
!4458 = !DILocation(line: 645, column: 23, scope: !2923, inlinedAt: !3823)
!4459 = !DILocation(line: 645, column: 21, scope: !2923, inlinedAt: !3823)
!4460 = !DILocation(line: 647, column: 20, scope: !2852, inlinedAt: !3823)
!4461 = !DILocation(line: 648, column: 9, scope: !2852, inlinedAt: !3823)
!4462 = !DILocation(line: 649, column: 36, scope: !2106, inlinedAt: !3823)
!4463 = !DILocation(line: 649, column: 18, scope: !2106, inlinedAt: !3823)
!4464 = !DILocation(line: 70, column: 18, scope: !2122, inlinedAt: !3840)
!4465 = !DILocation(line: 70, column: 22, scope: !2122, inlinedAt: !3840)
!4466 = !DILocation(line: 70, column: 33, scope: !2122, inlinedAt: !3840)
!4467 = !DILocation(line: 70, column: 16, scope: !2122, inlinedAt: !3840)
!4468 = !DILocation(line: 71, column: 37, scope: !2122, inlinedAt: !3840)
!4469 = !DILocation(line: 71, column: 41, scope: !2122, inlinedAt: !3840)
!4470 = !DILocation(line: 71, column: 47, scope: !2122, inlinedAt: !3840)
!4471 = !DILocation(line: 71, column: 22, scope: !2122, inlinedAt: !3840)
!4472 = !DILocation(line: 71, column: 20, scope: !2122, inlinedAt: !3840)
!4473 = !DILocation(line: 71, column: 52, scope: !2122, inlinedAt: !3840)
!4474 = !DILocation(line: 71, column: 14, scope: !2122, inlinedAt: !3840)
!4475 = !DILocation(line: 72, column: 13, scope: !2122, inlinedAt: !3840)
!4476 = !DILocation(line: 72, column: 17, scope: !2122, inlinedAt: !3840)
!4477 = !DILocation(line: 72, column: 27, scope: !2122, inlinedAt: !3840)
!4478 = !DILocation(line: 72, column: 35, scope: !2122, inlinedAt: !3840)
!4479 = !DILocation(line: 72, column: 23, scope: !2122, inlinedAt: !3840)
!4480 = !DILocation(line: 72, column: 11, scope: !2122, inlinedAt: !3840)
!4481 = !DILocation(line: 74, column: 12, scope: !2140, inlinedAt: !3840)
!4482 = !DILocation(line: 74, column: 10, scope: !2140, inlinedAt: !3840)
!4483 = !DILocation(line: 74, column: 17, scope: !2705, inlinedAt: !3840)
!4484 = !DILocation(line: 74, column: 19, scope: !2705, inlinedAt: !3840)
!4485 = !DILocation(line: 74, column: 5, scope: !2705, inlinedAt: !3840)
!4486 = !DILocation(line: 76, column: 17, scope: !2138, inlinedAt: !3840)
!4487 = !DILocation(line: 76, column: 25, scope: !2138, inlinedAt: !3840)
!4488 = !DILocation(line: 76, column: 23, scope: !2138, inlinedAt: !3840)
!4489 = !DILocation(line: 76, column: 31, scope: !2138, inlinedAt: !3840)
!4490 = !DILocation(line: 76, column: 15, scope: !2138, inlinedAt: !3840)
!4491 = !DILocation(line: 77, column: 15, scope: !2138, inlinedAt: !3840)
!4492 = !DILocation(line: 77, column: 21, scope: !2138, inlinedAt: !3840)
!4493 = !DILocation(line: 77, column: 13, scope: !2138, inlinedAt: !3840)
!4494 = !DILocation(line: 78, column: 20, scope: !2138, inlinedAt: !3840)
!4495 = !DILocation(line: 78, column: 29, scope: !2138, inlinedAt: !3840)
!4496 = !DILocation(line: 78, column: 36, scope: !2138, inlinedAt: !3840)
!4497 = !DILocation(line: 78, column: 34, scope: !2138, inlinedAt: !3840)
!4498 = !DILocation(line: 78, column: 18, scope: !2138, inlinedAt: !3840)
!4499 = !DILocation(line: 79, column: 19, scope: !2138, inlinedAt: !3840)
!4500 = !DILocation(line: 79, column: 15, scope: !2138, inlinedAt: !3840)
!4501 = !DILocation(line: 74, column: 25, scope: !2724, inlinedAt: !3840)
!4502 = !DILocation(line: 74, column: 5, scope: !2724, inlinedAt: !3840)
!4503 = !DILocation(line: 82, column: 12, scope: !2122, inlinedAt: !3840)
!4504 = !DILocation(line: 82, column: 25, scope: !2122, inlinedAt: !3840)
!4505 = !DILocation(line: 82, column: 23, scope: !2122, inlinedAt: !3840)
!4506 = !DILocation(line: 649, column: 42, scope: !2106, inlinedAt: !3823)
!4507 = !DILocation(line: 649, column: 40, scope: !2106, inlinedAt: !3823)
!4508 = !DILocation(line: 649, column: 16, scope: !2106, inlinedAt: !3823)
!4509 = !DILocation(line: 650, column: 14, scope: !2106, inlinedAt: !3823)
!4510 = !DILocation(line: 650, column: 11, scope: !2106, inlinedAt: !3823)
!4511 = !DILocation(line: 652, column: 21, scope: !2106, inlinedAt: !3823)
!4512 = !DILocation(line: 652, column: 19, scope: !2106, inlinedAt: !3823)
!4513 = !DILocation(line: 653, column: 13, scope: !2118, inlinedAt: !3823)
!4514 = !DILocation(line: 653, column: 20, scope: !2118, inlinedAt: !3823)
!4515 = !DILocation(line: 653, column: 13, scope: !2106, inlinedAt: !3823)
!4516 = !DILocation(line: 654, column: 18, scope: !2117, inlinedAt: !3823)
!4517 = !DILocation(line: 655, column: 19, scope: !2117, inlinedAt: !3823)
!4518 = !DILocation(line: 656, column: 36, scope: !2117, inlinedAt: !3823)
!4519 = !DILocation(line: 656, column: 42, scope: !2117, inlinedAt: !3823)
!4520 = !DILocation(line: 656, column: 20, scope: !2117, inlinedAt: !3823)
!4521 = !DILocation(line: 243, column: 12, scope: !2112, inlinedAt: !3837)
!4522 = !DILocation(line: 243, column: 23, scope: !2112, inlinedAt: !3837)
!4523 = !DILocation(line: 243, column: 20, scope: !2112, inlinedAt: !3837)
!4524 = !DILocation(line: 243, column: 26, scope: !2112, inlinedAt: !3837)
!4525 = !DILocation(line: 243, column: 14, scope: !2112, inlinedAt: !3837)
!4526 = !DILocation(line: 656, column: 18, scope: !2117, inlinedAt: !3823)
!4527 = !DILocation(line: 657, column: 19, scope: !2117, inlinedAt: !3823)
!4528 = !DILocation(line: 658, column: 9, scope: !2117, inlinedAt: !3823)
!4529 = !DILocation(line: 658, column: 20, scope: !3004, inlinedAt: !3823)
!4530 = !DILocation(line: 658, column: 27, scope: !3004, inlinedAt: !3823)
!4531 = !DILocation(line: 659, column: 18, scope: !3008, inlinedAt: !3823)
!4532 = !DILocation(line: 660, column: 19, scope: !3008, inlinedAt: !3823)
!4533 = !DILocation(line: 661, column: 28, scope: !3008, inlinedAt: !3823)
!4534 = !DILocation(line: 661, column: 25, scope: !3008, inlinedAt: !3823)
!4535 = !DILocation(line: 661, column: 36, scope: !3008, inlinedAt: !3823)
!4536 = !DILocation(line: 661, column: 44, scope: !3008, inlinedAt: !3823)
!4537 = !DILocation(line: 661, column: 41, scope: !3008, inlinedAt: !3823)
!4538 = !DILocation(line: 661, column: 18, scope: !3008, inlinedAt: !3823)
!4539 = !DILocation(line: 662, column: 19, scope: !3008, inlinedAt: !3823)
!4540 = !DILocation(line: 663, column: 9, scope: !3008, inlinedAt: !3823)
!4541 = !DILocation(line: 664, column: 29, scope: !3019, inlinedAt: !3823)
!4542 = !DILocation(line: 664, column: 20, scope: !3019, inlinedAt: !3823)
!4543 = !DILocation(line: 664, column: 18, scope: !3019, inlinedAt: !3823)
!4544 = !DILocation(line: 665, column: 36, scope: !3019, inlinedAt: !3823)
!4545 = !DILocation(line: 665, column: 35, scope: !3019, inlinedAt: !3823)
!4546 = !DILocation(line: 665, column: 30, scope: !3019, inlinedAt: !3823)
!4547 = !DILocation(line: 665, column: 21, scope: !3019, inlinedAt: !3823)
!4548 = !DILocation(line: 665, column: 19, scope: !3019, inlinedAt: !3823)
!4549 = !DILocation(line: 668, column: 26, scope: !3019, inlinedAt: !3823)
!4550 = !DILocation(line: 668, column: 28, scope: !3019, inlinedAt: !3823)
!4551 = !DILocation(line: 668, column: 33, scope: !3019, inlinedAt: !3823)
!4552 = !DILocation(line: 668, column: 55, scope: !3019, inlinedAt: !3823)
!4553 = !DILocation(line: 668, column: 62, scope: !3019, inlinedAt: !3823)
!4554 = !DILocation(line: 668, column: 42, scope: !3019, inlinedAt: !3823)
!4555 = !DILocation(line: 668, column: 39, scope: !3019, inlinedAt: !3823)
!4556 = !DILocation(line: 668, column: 70, scope: !3019, inlinedAt: !3823)
!4557 = !DILocation(line: 668, column: 79, scope: !3019, inlinedAt: !3823)
!4558 = !DILocation(line: 668, column: 19, scope: !3019, inlinedAt: !3823)
!4559 = !DILocation(line: 671, column: 15, scope: !2106, inlinedAt: !3823)
!4560 = !DILocation(line: 671, column: 20, scope: !2106, inlinedAt: !3823)
!4561 = !DILocation(line: 671, column: 13, scope: !2106, inlinedAt: !3823)
!4562 = !DILocation(line: 672, column: 16, scope: !2106, inlinedAt: !3823)
!4563 = !DILocation(line: 672, column: 22, scope: !2106, inlinedAt: !3823)
!4564 = !DILocation(line: 672, column: 14, scope: !2106, inlinedAt: !3823)
!4565 = !DILocation(line: 677, column: 13, scope: !2105, inlinedAt: !3823)
!4566 = !DILocation(line: 677, column: 15, scope: !2105, inlinedAt: !3823)
!4567 = !DILocation(line: 677, column: 20, scope: !2105, inlinedAt: !3823)
!4568 = !DILocation(line: 677, column: 23, scope: !3047, inlinedAt: !3823)
!4569 = !DILocation(line: 677, column: 13, scope: !3047, inlinedAt: !3823)
!4570 = !DILocation(line: 682, column: 21, scope: !2259, inlinedAt: !3823)
!4571 = !DILocation(line: 682, column: 19, scope: !2259, inlinedAt: !3823)
!4572 = !DILocation(line: 684, column: 22, scope: !2259, inlinedAt: !3823)
!4573 = !DILocation(line: 684, column: 29, scope: !2259, inlinedAt: !3823)
!4574 = !DILocation(line: 684, column: 34, scope: !2259, inlinedAt: !3823)
!4575 = !DILocation(line: 684, column: 37, scope: !3055, inlinedAt: !3823)
!4576 = !DILocation(line: 684, column: 44, scope: !3055, inlinedAt: !3823)
!4577 = !DILocation(line: 684, column: 21, scope: !3058, inlinedAt: !3823)
!4578 = !DILocation(line: 684, column: 19, scope: !3058, inlinedAt: !3823)
!4579 = !DILocation(line: 685, column: 22, scope: !2259, inlinedAt: !3823)
!4580 = !DILocation(line: 685, column: 19, scope: !2259, inlinedAt: !3823)
!4581 = !DILocation(line: 686, column: 18, scope: !2259, inlinedAt: !3823)
!4582 = !DILocation(line: 686, column: 25, scope: !2259, inlinedAt: !3823)
!4583 = !DILocation(line: 686, column: 15, scope: !2259, inlinedAt: !3823)
!4584 = !DILocation(line: 687, column: 30, scope: !2259, inlinedAt: !3823)
!4585 = !DILocation(line: 687, column: 37, scope: !2259, inlinedAt: !3823)
!4586 = !DILocation(line: 687, column: 36, scope: !2259, inlinedAt: !3823)
!4587 = !DILocation(line: 687, column: 13, scope: !2259, inlinedAt: !3823)
!4588 = !DILocation(line: 687, column: 16, scope: !2259, inlinedAt: !3823)
!4589 = !DILocation(line: 687, column: 27, scope: !2259, inlinedAt: !3823)
!4590 = !DILocation(line: 689, column: 18, scope: !2259, inlinedAt: !3823)
!4591 = !DILocation(line: 689, column: 22, scope: !3055, inlinedAt: !3823)
!4592 = !DILocation(line: 689, column: 18, scope: !3055, inlinedAt: !3823)
!4593 = !DILocation(line: 689, column: 26, scope: !3058, inlinedAt: !3823)
!4594 = !DILocation(line: 689, column: 18, scope: !3058, inlinedAt: !3823)
!4595 = !DILocation(line: 689, column: 18, scope: !3077, inlinedAt: !3823)
!4596 = !DILocation(line: 689, column: 16, scope: !3077, inlinedAt: !3823)
!4597 = !DILocation(line: 690, column: 18, scope: !2259, inlinedAt: !3823)
!4598 = !DILocation(line: 690, column: 22, scope: !3055, inlinedAt: !3823)
!4599 = !DILocation(line: 690, column: 18, scope: !3055, inlinedAt: !3823)
!4600 = !DILocation(line: 690, column: 26, scope: !3058, inlinedAt: !3823)
!4601 = !DILocation(line: 690, column: 18, scope: !3058, inlinedAt: !3823)
!4602 = !DILocation(line: 690, column: 18, scope: !3077, inlinedAt: !3823)
!4603 = !DILocation(line: 690, column: 16, scope: !3077, inlinedAt: !3823)
!4604 = !DILocation(line: 691, column: 17, scope: !3087, inlinedAt: !3823)
!4605 = !DILocation(line: 691, column: 17, scope: !2259, inlinedAt: !3823)
!4606 = !DILocation(line: 692, column: 21, scope: !3090, inlinedAt: !3823)
!4607 = !DILocation(line: 692, column: 21, scope: !3091, inlinedAt: !3823)
!4608 = !DILocation(line: 693, column: 28, scope: !3094, inlinedAt: !3823)
!4609 = !DILocation(line: 693, column: 34, scope: !3094, inlinedAt: !3823)
!4610 = !DILocation(line: 693, column: 33, scope: !3094, inlinedAt: !3823)
!4611 = !DILocation(line: 693, column: 42, scope: !3094, inlinedAt: !3823)
!4612 = !DILocation(line: 693, column: 48, scope: !3094, inlinedAt: !3823)
!4613 = !DILocation(line: 693, column: 47, scope: !3094, inlinedAt: !3823)
!4614 = !DILocation(line: 693, column: 40, scope: !3094, inlinedAt: !3823)
!4615 = !DILocation(line: 693, column: 54, scope: !3094, inlinedAt: !3823)
!4616 = !DILocation(line: 693, column: 26, scope: !3094, inlinedAt: !3823)
!4617 = !DILocation(line: 694, column: 40, scope: !3094, inlinedAt: !3823)
!4618 = !DILocation(line: 694, column: 44, scope: !3094, inlinedAt: !3823)
!4619 = !DILocation(line: 694, column: 21, scope: !3094, inlinedAt: !3823)
!4620 = !DILocation(line: 695, column: 17, scope: !3094, inlinedAt: !3823)
!4621 = !DILocation(line: 696, column: 47, scope: !3108, inlinedAt: !3823)
!4622 = !DILocation(line: 696, column: 28, scope: !3108, inlinedAt: !3823)
!4623 = !DILocation(line: 696, column: 26, scope: !3108, inlinedAt: !3823)
!4624 = !DILocation(line: 698, column: 13, scope: !3091, inlinedAt: !3823)
!4625 = !DILocation(line: 699, column: 28, scope: !2259, inlinedAt: !3823)
!4626 = !DILocation(line: 699, column: 26, scope: !2259, inlinedAt: !3823)
!4627 = !DILocation(line: 699, column: 22, scope: !2259, inlinedAt: !3823)
!4628 = !DILocation(line: 699, column: 18, scope: !2259, inlinedAt: !3823)
!4629 = !DILocation(line: 702, column: 18, scope: !2259, inlinedAt: !3823)
!4630 = !DILocation(line: 702, column: 23, scope: !2259, inlinedAt: !3823)
!4631 = !DILocation(line: 702, column: 34, scope: !2259, inlinedAt: !3823)
!4632 = !DILocation(line: 702, column: 39, scope: !2259, inlinedAt: !3823)
!4633 = !DILocation(line: 702, column: 42, scope: !2259, inlinedAt: !3823)
!4634 = !DILocation(line: 702, column: 46, scope: !2259, inlinedAt: !3823)
!4635 = !DILocation(line: 702, column: 52, scope: !2259, inlinedAt: !3823)
!4636 = !DILocation(line: 702, column: 61, scope: !2259, inlinedAt: !3823)
!4637 = !DILocation(line: 702, column: 64, scope: !2259, inlinedAt: !3823)
!4638 = !DILocation(line: 702, column: 71, scope: !2259, inlinedAt: !3823)
!4639 = !DILocation(line: 702, column: 79, scope: !2259, inlinedAt: !3823)
!4640 = !DILocation(line: 702, column: 88, scope: !2259, inlinedAt: !3823)
!4641 = !DILocation(line: 703, column: 34, scope: !2259, inlinedAt: !3823)
!4642 = !DILocation(line: 703, column: 47, scope: !2259, inlinedAt: !3823)
!4643 = !DILocation(line: 703, column: 54, scope: !2259, inlinedAt: !3823)
!4644 = !DILocation(line: 703, column: 60, scope: !2259, inlinedAt: !3823)
!4645 = !DILocation(line: 703, column: 77, scope: !2259, inlinedAt: !3823)
!4646 = !DILocation(line: 702, column: 16, scope: !2259, inlinedAt: !3823)
!4647 = !DILocation(line: 706, column: 22, scope: !2259, inlinedAt: !3823)
!4648 = !DILocation(line: 706, column: 21, scope: !2259, inlinedAt: !3823)
!4649 = !DILocation(line: 706, column: 29, scope: !2259, inlinedAt: !3823)
!4650 = !DILocation(line: 706, column: 27, scope: !2259, inlinedAt: !3823)
!4651 = !DILocation(line: 706, column: 13, scope: !2259, inlinedAt: !3823)
!4652 = !DILocation(line: 706, column: 19, scope: !2259, inlinedAt: !3823)
!4653 = !DILocation(line: 707, column: 21, scope: !2259, inlinedAt: !3823)
!4654 = !DILocation(line: 707, column: 28, scope: !2259, inlinedAt: !3823)
!4655 = !DILocation(line: 707, column: 26, scope: !2259, inlinedAt: !3823)
!4656 = !DILocation(line: 707, column: 13, scope: !2259, inlinedAt: !3823)
!4657 = !DILocation(line: 707, column: 19, scope: !2259, inlinedAt: !3823)
!4658 = !DILocation(line: 708, column: 21, scope: !2259, inlinedAt: !3823)
!4659 = !DILocation(line: 708, column: 13, scope: !2259, inlinedAt: !3823)
!4660 = !DILocation(line: 708, column: 18, scope: !2259, inlinedAt: !3823)
!4661 = !DILocation(line: 709, column: 21, scope: !2259, inlinedAt: !3823)
!4662 = !DILocation(line: 709, column: 13, scope: !2259, inlinedAt: !3823)
!4663 = !DILocation(line: 709, column: 18, scope: !2259, inlinedAt: !3823)
!4664 = !DILocation(line: 710, column: 21, scope: !2259, inlinedAt: !3823)
!4665 = !DILocation(line: 710, column: 13, scope: !2259, inlinedAt: !3823)
!4666 = !DILocation(line: 710, column: 18, scope: !2259, inlinedAt: !3823)
!4667 = !DILocation(line: 711, column: 21, scope: !2259, inlinedAt: !3823)
!4668 = !DILocation(line: 711, column: 13, scope: !2259, inlinedAt: !3823)
!4669 = !DILocation(line: 711, column: 18, scope: !2259, inlinedAt: !3823)
!4670 = !DILocation(line: 712, column: 19, scope: !2259, inlinedAt: !3823)
!4671 = !DILocation(line: 712, column: 17, scope: !2259, inlinedAt: !3823)
!4672 = !DILocation(line: 713, column: 20, scope: !2259, inlinedAt: !3823)
!4673 = !DILocation(line: 713, column: 26, scope: !2259, inlinedAt: !3823)
!4674 = !DILocation(line: 713, column: 24, scope: !2259, inlinedAt: !3823)
!4675 = !DILocation(line: 713, column: 13, scope: !2259, inlinedAt: !3823)
!4676 = !DILocation(line: 713, column: 18, scope: !2259, inlinedAt: !3823)
!4677 = !DILocation(line: 714, column: 20, scope: !2259, inlinedAt: !3823)
!4678 = !DILocation(line: 714, column: 26, scope: !2259, inlinedAt: !3823)
!4679 = !DILocation(line: 714, column: 24, scope: !2259, inlinedAt: !3823)
!4680 = !DILocation(line: 714, column: 13, scope: !2259, inlinedAt: !3823)
!4681 = !DILocation(line: 714, column: 18, scope: !2259, inlinedAt: !3823)
!4682 = !DILocation(line: 715, column: 19, scope: !2259, inlinedAt: !3823)
!4683 = !DILocation(line: 715, column: 17, scope: !2259, inlinedAt: !3823)
!4684 = !DILocation(line: 716, column: 20, scope: !2259, inlinedAt: !3823)
!4685 = !DILocation(line: 716, column: 26, scope: !2259, inlinedAt: !3823)
!4686 = !DILocation(line: 716, column: 24, scope: !2259, inlinedAt: !3823)
!4687 = !DILocation(line: 716, column: 13, scope: !2259, inlinedAt: !3823)
!4688 = !DILocation(line: 716, column: 18, scope: !2259, inlinedAt: !3823)
!4689 = !DILocation(line: 717, column: 20, scope: !2259, inlinedAt: !3823)
!4690 = !DILocation(line: 717, column: 26, scope: !2259, inlinedAt: !3823)
!4691 = !DILocation(line: 717, column: 24, scope: !2259, inlinedAt: !3823)
!4692 = !DILocation(line: 717, column: 13, scope: !2259, inlinedAt: !3823)
!4693 = !DILocation(line: 717, column: 18, scope: !2259, inlinedAt: !3823)
!4694 = !DILocation(line: 718, column: 9, scope: !2259, inlinedAt: !3823)
!4695 = !DILocation(line: 728, column: 17, scope: !3183, inlinedAt: !3823)
!4696 = !DILocation(line: 728, column: 20, scope: !3183, inlinedAt: !3823)
!4697 = !DILocation(line: 728, column: 24, scope: !3183, inlinedAt: !3823)
!4698 = !DILocation(line: 728, column: 28, scope: !3187, inlinedAt: !3823)
!4699 = !DILocation(line: 728, column: 35, scope: !3187, inlinedAt: !3823)
!4700 = !DILocation(line: 728, column: 39, scope: !3190, inlinedAt: !3823)
!4701 = !DILocation(line: 728, column: 46, scope: !3190, inlinedAt: !3823)
!4702 = !DILocation(line: 728, column: 17, scope: !3190, inlinedAt: !3823)
!4703 = !DILocation(line: 729, column: 21, scope: !3194, inlinedAt: !3823)
!4704 = !DILocation(line: 729, column: 28, scope: !3194, inlinedAt: !3823)
!4705 = !DILocation(line: 729, column: 21, scope: !3195, inlinedAt: !3823)
!4706 = !DILocation(line: 731, column: 30, scope: !3194, inlinedAt: !3823)
!4707 = !DILocation(line: 731, column: 44, scope: !3194, inlinedAt: !3823)
!4708 = !DILocation(line: 731, column: 42, scope: !3194, inlinedAt: !3823)
!4709 = !DILocation(line: 731, column: 36, scope: !3194, inlinedAt: !3823)
!4710 = !DILocation(line: 731, column: 27, scope: !3194, inlinedAt: !3823)
!4711 = !DILocation(line: 731, column: 21, scope: !3194, inlinedAt: !3823)
!4712 = !DILocation(line: 735, column: 37, scope: !3194, inlinedAt: !3823)
!4713 = !DILocation(line: 735, column: 46, scope: !3194, inlinedAt: !3823)
!4714 = !DILocation(line: 735, column: 48, scope: !3194, inlinedAt: !3823)
!4715 = !DILocation(line: 735, column: 61, scope: !3194, inlinedAt: !3823)
!4716 = !DILocation(line: 735, column: 59, scope: !3194, inlinedAt: !3823)
!4717 = !DILocation(line: 735, column: 53, scope: !3194, inlinedAt: !3823)
!4718 = !DILocation(line: 735, column: 43, scope: !3194, inlinedAt: !3823)
!4719 = !DILocation(line: 735, column: 34, scope: !3194, inlinedAt: !3823)
!4720 = !DILocation(line: 735, column: 30, scope: !3194, inlinedAt: !3823)
!4721 = !DILocation(line: 735, column: 76, scope: !3214, inlinedAt: !3823)
!4722 = !DILocation(line: 735, column: 85, scope: !3214, inlinedAt: !3823)
!4723 = !DILocation(line: 735, column: 87, scope: !3214, inlinedAt: !3823)
!4724 = !DILocation(line: 735, column: 100, scope: !3214, inlinedAt: !3823)
!4725 = !DILocation(line: 735, column: 98, scope: !3214, inlinedAt: !3823)
!4726 = !DILocation(line: 735, column: 92, scope: !3214, inlinedAt: !3823)
!4727 = !DILocation(line: 735, column: 82, scope: !3214, inlinedAt: !3823)
!4728 = !DILocation(line: 735, column: 30, scope: !3214, inlinedAt: !3823)
!4729 = !DILocation(line: 735, column: 30, scope: !3223, inlinedAt: !3823)
!4730 = !DILocation(line: 735, column: 30, scope: !3225, inlinedAt: !3823)
!4731 = !DILocation(line: 735, column: 27, scope: !3225, inlinedAt: !3823)
!4732 = !DILocation(line: 736, column: 13, scope: !3195, inlinedAt: !3823)
!4733 = !DILocation(line: 737, column: 32, scope: !2104, inlinedAt: !3823)
!4734 = !DILocation(line: 737, column: 36, scope: !2104, inlinedAt: !3823)
!4735 = !DILocation(line: 737, column: 34, scope: !2104, inlinedAt: !3823)
!4736 = !DILocation(line: 737, column: 43, scope: !2104, inlinedAt: !3823)
!4737 = !DILocation(line: 737, column: 51, scope: !2104, inlinedAt: !3823)
!4738 = !DILocation(line: 737, column: 21, scope: !2104, inlinedAt: !3823)
!4739 = !DILocation(line: 132, column: 9, scope: !3235, inlinedAt: !3833)
!4740 = !DILocation(line: 132, column: 13, scope: !3235, inlinedAt: !3833)
!4741 = !DILocation(line: 132, column: 11, scope: !3235, inlinedAt: !3833)
!4742 = !DILocation(line: 132, column: 9, scope: !2098, inlinedAt: !3833)
!4743 = !DILocation(line: 132, column: 26, scope: !3240, inlinedAt: !3833)
!4744 = !DILocation(line: 132, column: 19, scope: !3240, inlinedAt: !3833)
!4745 = !DILocation(line: 133, column: 14, scope: !3243, inlinedAt: !3833)
!4746 = !DILocation(line: 133, column: 18, scope: !3243, inlinedAt: !3833)
!4747 = !DILocation(line: 133, column: 16, scope: !3243, inlinedAt: !3833)
!4748 = !DILocation(line: 133, column: 14, scope: !3235, inlinedAt: !3833)
!4749 = !DILocation(line: 133, column: 31, scope: !3248, inlinedAt: !3833)
!4750 = !DILocation(line: 133, column: 24, scope: !3248, inlinedAt: !3833)
!4751 = !DILocation(line: 134, column: 17, scope: !3243, inlinedAt: !3833)
!4752 = !DILocation(line: 134, column: 10, scope: !3243, inlinedAt: !3833)
!4753 = !DILocation(line: 135, column: 1, scope: !2098, inlinedAt: !3833)
!4754 = !DILocation(line: 737, column: 19, scope: !2104, inlinedAt: !3823)
!4755 = !DILocation(line: 738, column: 21, scope: !2104, inlinedAt: !3823)
!4756 = !DILocation(line: 738, column: 25, scope: !2104, inlinedAt: !3823)
!4757 = !DILocation(line: 738, column: 23, scope: !2104, inlinedAt: !3823)
!4758 = !DILocation(line: 738, column: 19, scope: !2104, inlinedAt: !3823)
!4759 = !DILocation(line: 739, column: 30, scope: !2104, inlinedAt: !3823)
!4760 = !DILocation(line: 739, column: 13, scope: !2104, inlinedAt: !3823)
!4761 = !DILocation(line: 739, column: 16, scope: !2104, inlinedAt: !3823)
!4762 = !DILocation(line: 739, column: 27, scope: !2104, inlinedAt: !3823)
!4763 = !DILocation(line: 741, column: 17, scope: !3263, inlinedAt: !3823)
!4764 = !DILocation(line: 741, column: 25, scope: !3263, inlinedAt: !3823)
!4765 = !DILocation(line: 741, column: 29, scope: !3266, inlinedAt: !3823)
!4766 = !DILocation(line: 741, column: 17, scope: !3266, inlinedAt: !3823)
!4767 = !DILocation(line: 742, column: 33, scope: !3263, inlinedAt: !3823)
!4768 = !DILocation(line: 742, column: 43, scope: !3263, inlinedAt: !3823)
!4769 = !DILocation(line: 742, column: 41, scope: !3263, inlinedAt: !3823)
!4770 = !DILocation(line: 742, column: 31, scope: !3263, inlinedAt: !3823)
!4771 = !DILocation(line: 742, column: 17, scope: !3263, inlinedAt: !3823)
!4772 = !DILocation(line: 746, column: 17, scope: !3274, inlinedAt: !3823)
!4773 = !DILocation(line: 746, column: 17, scope: !2104, inlinedAt: !3823)
!4774 = !DILocation(line: 747, column: 37, scope: !3274, inlinedAt: !3823)
!4775 = !DILocation(line: 747, column: 35, scope: !3274, inlinedAt: !3823)
!4776 = !DILocation(line: 747, column: 17, scope: !3274, inlinedAt: !3823)
!4777 = !DILocation(line: 749, column: 30, scope: !3274, inlinedAt: !3823)
!4778 = !DILocation(line: 749, column: 36, scope: !3274, inlinedAt: !3823)
!4779 = !DILocation(line: 749, column: 28, scope: !3274, inlinedAt: !3823)
!4780 = !DILocation(line: 751, column: 25, scope: !2104, inlinedAt: !3823)
!4781 = !DILocation(line: 751, column: 28, scope: !2104, inlinedAt: !3823)
!4782 = !DILocation(line: 751, column: 23, scope: !2104, inlinedAt: !3823)
!4783 = !DILocation(line: 752, column: 17, scope: !3286, inlinedAt: !3823)
!4784 = !DILocation(line: 752, column: 26, scope: !3286, inlinedAt: !3823)
!4785 = !DILocation(line: 752, column: 23, scope: !3286, inlinedAt: !3823)
!4786 = !DILocation(line: 752, column: 17, scope: !2104, inlinedAt: !3823)
!4787 = !DILocation(line: 755, column: 22, scope: !3291, inlinedAt: !3823)
!4788 = !DILocation(line: 755, column: 27, scope: !3291, inlinedAt: !3823)
!4789 = !DILocation(line: 755, column: 38, scope: !3291, inlinedAt: !3823)
!4790 = !DILocation(line: 755, column: 43, scope: !3291, inlinedAt: !3823)
!4791 = !DILocation(line: 755, column: 46, scope: !3291, inlinedAt: !3823)
!4792 = !DILocation(line: 755, column: 50, scope: !3291, inlinedAt: !3823)
!4793 = !DILocation(line: 755, column: 56, scope: !3291, inlinedAt: !3823)
!4794 = !DILocation(line: 755, column: 64, scope: !3291, inlinedAt: !3823)
!4795 = !DILocation(line: 755, column: 67, scope: !3291, inlinedAt: !3823)
!4796 = !DILocation(line: 755, column: 74, scope: !3291, inlinedAt: !3823)
!4797 = !DILocation(line: 756, column: 38, scope: !3291, inlinedAt: !3823)
!4798 = !DILocation(line: 756, column: 47, scope: !3291, inlinedAt: !3823)
!4799 = !DILocation(line: 756, column: 57, scope: !3291, inlinedAt: !3823)
!4800 = !DILocation(line: 756, column: 76, scope: !3291, inlinedAt: !3823)
!4801 = !DILocation(line: 757, column: 38, scope: !3291, inlinedAt: !3823)
!4802 = !DILocation(line: 757, column: 38, scope: !3307, inlinedAt: !3823)
!4803 = !DILocation(line: 757, column: 55, scope: !3309, inlinedAt: !3823)
!4804 = !DILocation(line: 757, column: 62, scope: !3309, inlinedAt: !3823)
!4805 = !DILocation(line: 757, column: 60, scope: !3309, inlinedAt: !3823)
!4806 = !DILocation(line: 757, column: 38, scope: !3309, inlinedAt: !3823)
!4807 = !DILocation(line: 757, column: 38, scope: !3314, inlinedAt: !3823)
!4808 = !DILocation(line: 757, column: 68, scope: !3314, inlinedAt: !3823)
!4809 = !DILocation(line: 757, column: 85, scope: !3314, inlinedAt: !3823)
!4810 = !DILocation(line: 755, column: 22, scope: !3307, inlinedAt: !3823)
!4811 = !DILocation(line: 755, column: 20, scope: !3307, inlinedAt: !3823)
!4812 = !DILocation(line: 758, column: 29, scope: !3291, inlinedAt: !3823)
!4813 = !DILocation(line: 758, column: 38, scope: !3291, inlinedAt: !3823)
!4814 = !DILocation(line: 758, column: 50, scope: !3291, inlinedAt: !3823)
!4815 = !DILocation(line: 758, column: 53, scope: !3291, inlinedAt: !3823)
!4816 = !DILocation(line: 758, column: 48, scope: !3291, inlinedAt: !3823)
!4817 = !DILocation(line: 758, column: 35, scope: !3291, inlinedAt: !3823)
!4818 = !DILocation(line: 758, column: 27, scope: !3291, inlinedAt: !3823)
!4819 = !DILocation(line: 759, column: 21, scope: !3327, inlinedAt: !3823)
!4820 = !DILocation(line: 759, column: 31, scope: !3327, inlinedAt: !3823)
!4821 = !DILocation(line: 759, column: 40, scope: !3327, inlinedAt: !3823)
!4822 = !DILocation(line: 759, column: 43, scope: !3331, inlinedAt: !3823)
!4823 = !DILocation(line: 759, column: 50, scope: !3331, inlinedAt: !3823)
!4824 = !DILocation(line: 759, column: 21, scope: !3331, inlinedAt: !3823)
!4825 = !DILocation(line: 760, column: 30, scope: !3327, inlinedAt: !3823)
!4826 = !DILocation(line: 760, column: 40, scope: !3327, inlinedAt: !3823)
!4827 = !DILocation(line: 760, column: 27, scope: !3327, inlinedAt: !3823)
!4828 = !DILocation(line: 760, column: 21, scope: !3327, inlinedAt: !3823)
!4829 = !DILocation(line: 764, column: 23, scope: !3291, inlinedAt: !3823)
!4830 = !DILocation(line: 764, column: 28, scope: !3291, inlinedAt: !3823)
!4831 = !DILocation(line: 764, column: 39, scope: !3291, inlinedAt: !3823)
!4832 = !DILocation(line: 764, column: 44, scope: !3291, inlinedAt: !3823)
!4833 = !DILocation(line: 764, column: 47, scope: !3291, inlinedAt: !3823)
!4834 = !DILocation(line: 764, column: 51, scope: !3291, inlinedAt: !3823)
!4835 = !DILocation(line: 764, column: 57, scope: !3291, inlinedAt: !3823)
!4836 = !DILocation(line: 764, column: 65, scope: !3291, inlinedAt: !3823)
!4837 = !DILocation(line: 764, column: 68, scope: !3291, inlinedAt: !3823)
!4838 = !DILocation(line: 764, column: 75, scope: !3291, inlinedAt: !3823)
!4839 = !DILocation(line: 765, column: 39, scope: !3291, inlinedAt: !3823)
!4840 = !DILocation(line: 765, column: 54, scope: !3291, inlinedAt: !3823)
!4841 = !DILocation(line: 765, column: 69, scope: !3291, inlinedAt: !3823)
!4842 = !DILocation(line: 766, column: 39, scope: !3291, inlinedAt: !3823)
!4843 = !DILocation(line: 766, column: 46, scope: !3291, inlinedAt: !3823)
!4844 = !DILocation(line: 766, column: 44, scope: !3291, inlinedAt: !3823)
!4845 = !DILocation(line: 766, column: 57, scope: !3291, inlinedAt: !3823)
!4846 = !DILocation(line: 766, column: 65, scope: !3291, inlinedAt: !3823)
!4847 = !DILocation(line: 766, column: 62, scope: !3291, inlinedAt: !3823)
!4848 = !DILocation(line: 764, column: 21, scope: !3291, inlinedAt: !3823)
!4849 = !DILocation(line: 767, column: 23, scope: !3291, inlinedAt: !3823)
!4850 = !DILocation(line: 767, column: 32, scope: !3291, inlinedAt: !3823)
!4851 = !DILocation(line: 767, column: 35, scope: !3291, inlinedAt: !3823)
!4852 = !DILocation(line: 767, column: 44, scope: !3291, inlinedAt: !3823)
!4853 = !DILocation(line: 767, column: 51, scope: !3291, inlinedAt: !3823)
!4854 = !DILocation(line: 767, column: 41, scope: !3291, inlinedAt: !3823)
!4855 = !DILocation(line: 767, column: 27, scope: !3291, inlinedAt: !3823)
!4856 = !DILocation(line: 767, column: 20, scope: !3291, inlinedAt: !3823)
!4857 = !DILocation(line: 768, column: 13, scope: !3291, inlinedAt: !3823)
!4858 = !DILocation(line: 771, column: 22, scope: !3368, inlinedAt: !3823)
!4859 = !DILocation(line: 771, column: 27, scope: !3368, inlinedAt: !3823)
!4860 = !DILocation(line: 771, column: 38, scope: !3368, inlinedAt: !3823)
!4861 = !DILocation(line: 771, column: 43, scope: !3368, inlinedAt: !3823)
!4862 = !DILocation(line: 771, column: 46, scope: !3368, inlinedAt: !3823)
!4863 = !DILocation(line: 771, column: 50, scope: !3368, inlinedAt: !3823)
!4864 = !DILocation(line: 771, column: 56, scope: !3368, inlinedAt: !3823)
!4865 = !DILocation(line: 771, column: 64, scope: !3368, inlinedAt: !3823)
!4866 = !DILocation(line: 771, column: 67, scope: !3368, inlinedAt: !3823)
!4867 = !DILocation(line: 771, column: 74, scope: !3368, inlinedAt: !3823)
!4868 = !DILocation(line: 772, column: 38, scope: !3368, inlinedAt: !3823)
!4869 = !DILocation(line: 772, column: 53, scope: !3368, inlinedAt: !3823)
!4870 = !DILocation(line: 772, column: 68, scope: !3368, inlinedAt: !3823)
!4871 = !DILocation(line: 773, column: 38, scope: !3368, inlinedAt: !3823)
!4872 = !DILocation(line: 773, column: 45, scope: !3368, inlinedAt: !3823)
!4873 = !DILocation(line: 773, column: 43, scope: !3368, inlinedAt: !3823)
!4874 = !DILocation(line: 773, column: 56, scope: !3368, inlinedAt: !3823)
!4875 = !DILocation(line: 773, column: 64, scope: !3368, inlinedAt: !3823)
!4876 = !DILocation(line: 773, column: 61, scope: !3368, inlinedAt: !3823)
!4877 = !DILocation(line: 771, column: 20, scope: !3368, inlinedAt: !3823)
!4878 = !DILocation(line: 774, column: 26, scope: !3368, inlinedAt: !3823)
!4879 = !DILocation(line: 774, column: 29, scope: !3368, inlinedAt: !3823)
!4880 = !DILocation(line: 774, column: 38, scope: !3368, inlinedAt: !3823)
!4881 = !DILocation(line: 774, column: 45, scope: !3368, inlinedAt: !3823)
!4882 = !DILocation(line: 774, column: 35, scope: !3368, inlinedAt: !3823)
!4883 = !DILocation(line: 774, column: 20, scope: !3368, inlinedAt: !3823)
!4884 = !DILocation(line: 775, column: 29, scope: !3368, inlinedAt: !3823)
!4885 = !DILocation(line: 775, column: 38, scope: !3368, inlinedAt: !3823)
!4886 = !DILocation(line: 775, column: 50, scope: !3368, inlinedAt: !3823)
!4887 = !DILocation(line: 775, column: 53, scope: !3368, inlinedAt: !3823)
!4888 = !DILocation(line: 775, column: 48, scope: !3368, inlinedAt: !3823)
!4889 = !DILocation(line: 775, column: 35, scope: !3368, inlinedAt: !3823)
!4890 = !DILocation(line: 775, column: 27, scope: !3368, inlinedAt: !3823)
!4891 = !DILocation(line: 776, column: 21, scope: !3402, inlinedAt: !3823)
!4892 = !DILocation(line: 776, column: 31, scope: !3402, inlinedAt: !3823)
!4893 = !DILocation(line: 776, column: 40, scope: !3402, inlinedAt: !3823)
!4894 = !DILocation(line: 776, column: 43, scope: !3406, inlinedAt: !3823)
!4895 = !DILocation(line: 776, column: 50, scope: !3406, inlinedAt: !3823)
!4896 = !DILocation(line: 776, column: 21, scope: !3406, inlinedAt: !3823)
!4897 = !DILocation(line: 777, column: 30, scope: !3402, inlinedAt: !3823)
!4898 = !DILocation(line: 777, column: 40, scope: !3402, inlinedAt: !3823)
!4899 = !DILocation(line: 777, column: 27, scope: !3402, inlinedAt: !3823)
!4900 = !DILocation(line: 777, column: 21, scope: !3402, inlinedAt: !3823)
!4901 = !DILocation(line: 781, column: 23, scope: !3368, inlinedAt: !3823)
!4902 = !DILocation(line: 781, column: 28, scope: !3368, inlinedAt: !3823)
!4903 = !DILocation(line: 781, column: 39, scope: !3368, inlinedAt: !3823)
!4904 = !DILocation(line: 781, column: 44, scope: !3368, inlinedAt: !3823)
!4905 = !DILocation(line: 781, column: 47, scope: !3368, inlinedAt: !3823)
!4906 = !DILocation(line: 781, column: 51, scope: !3368, inlinedAt: !3823)
!4907 = !DILocation(line: 781, column: 57, scope: !3368, inlinedAt: !3823)
!4908 = !DILocation(line: 781, column: 65, scope: !3368, inlinedAt: !3823)
!4909 = !DILocation(line: 781, column: 68, scope: !3368, inlinedAt: !3823)
!4910 = !DILocation(line: 781, column: 75, scope: !3368, inlinedAt: !3823)
!4911 = !DILocation(line: 782, column: 39, scope: !3368, inlinedAt: !3823)
!4912 = !DILocation(line: 782, column: 48, scope: !3368, inlinedAt: !3823)
!4913 = !DILocation(line: 782, column: 58, scope: !3368, inlinedAt: !3823)
!4914 = !DILocation(line: 782, column: 77, scope: !3368, inlinedAt: !3823)
!4915 = !DILocation(line: 783, column: 39, scope: !3368, inlinedAt: !3823)
!4916 = !DILocation(line: 783, column: 39, scope: !3429, inlinedAt: !3823)
!4917 = !DILocation(line: 783, column: 56, scope: !3431, inlinedAt: !3823)
!4918 = !DILocation(line: 783, column: 63, scope: !3431, inlinedAt: !3823)
!4919 = !DILocation(line: 783, column: 61, scope: !3431, inlinedAt: !3823)
!4920 = !DILocation(line: 783, column: 39, scope: !3431, inlinedAt: !3823)
!4921 = !DILocation(line: 783, column: 39, scope: !3436, inlinedAt: !3823)
!4922 = !DILocation(line: 783, column: 69, scope: !3436, inlinedAt: !3823)
!4923 = !DILocation(line: 783, column: 86, scope: !3436, inlinedAt: !3823)
!4924 = !DILocation(line: 781, column: 23, scope: !3429, inlinedAt: !3823)
!4925 = !DILocation(line: 781, column: 20, scope: !3429, inlinedAt: !3823)
!4926 = !DILocation(line: 786, column: 5, scope: !2106, inlinedAt: !3823)
!4927 = !DILocation(line: 788, column: 39, scope: !2072, inlinedAt: !3823)
!4928 = !DILocation(line: 788, column: 46, scope: !2072, inlinedAt: !3823)
!4929 = !DILocation(line: 788, column: 22, scope: !2072, inlinedAt: !3823)
!4930 = !DILocation(line: 789, column: 47, scope: !2072, inlinedAt: !3823)
!4931 = !DILocation(line: 789, column: 54, scope: !2072, inlinedAt: !3823)
!4932 = !DILocation(line: 789, column: 30, scope: !2072, inlinedAt: !3823)
!4933 = !DILocation(line: 790, column: 26, scope: !2072, inlinedAt: !3823)
!4934 = !DILocation(line: 790, column: 9, scope: !2072, inlinedAt: !3823)
!4935 = !DILocation(line: 790, column: 12, scope: !2072, inlinedAt: !3823)
!4936 = !DILocation(line: 790, column: 23, scope: !2072, inlinedAt: !3823)
!4937 = !DILocation(line: 793, column: 9, scope: !2072, inlinedAt: !3823)
!4938 = !DILocation(line: 793, column: 16, scope: !3454, inlinedAt: !3823)
!4939 = !DILocation(line: 793, column: 19, scope: !3454, inlinedAt: !3823)
!4940 = !DILocation(line: 793, column: 30, scope: !3454, inlinedAt: !3823)
!4941 = !DILocation(line: 793, column: 34, scope: !3454, inlinedAt: !3823)
!4942 = !DILocation(line: 793, column: 37, scope: !3459, inlinedAt: !3823)
!4943 = !DILocation(line: 793, column: 39, scope: !3459, inlinedAt: !3823)
!4944 = !DILocation(line: 793, column: 9, scope: !3462, inlinedAt: !3823)
!4945 = !DILocation(line: 794, column: 30, scope: !3464, inlinedAt: !3823)
!4946 = !DILocation(line: 794, column: 13, scope: !3464, inlinedAt: !3823)
!4947 = !DILocation(line: 794, column: 16, scope: !3464, inlinedAt: !3823)
!4948 = !DILocation(line: 794, column: 27, scope: !3464, inlinedAt: !3823)
!4949 = !DILocation(line: 795, column: 42, scope: !3464, inlinedAt: !3823)
!4950 = !DILocation(line: 795, column: 49, scope: !3464, inlinedAt: !3823)
!4951 = !DILocation(line: 795, column: 25, scope: !3464, inlinedAt: !3823)
!4952 = !DILocation(line: 795, column: 23, scope: !3464, inlinedAt: !3823)
!4953 = !DILocation(line: 796, column: 30, scope: !3464, inlinedAt: !3823)
!4954 = !DILocation(line: 796, column: 13, scope: !3464, inlinedAt: !3823)
!4955 = !DILocation(line: 796, column: 16, scope: !3464, inlinedAt: !3823)
!4956 = !DILocation(line: 796, column: 27, scope: !3464, inlinedAt: !3823)
!4957 = !DILocation(line: 793, column: 9, scope: !3477, inlinedAt: !3823)
!4958 = !DILocation(line: 799, column: 13, scope: !2071, inlinedAt: !3823)
!4959 = !DILocation(line: 799, column: 15, scope: !2071, inlinedAt: !3823)
!4960 = !DILocation(line: 799, column: 13, scope: !2072, inlinedAt: !3823)
!4961 = !DILocation(line: 801, column: 17, scope: !3484, inlinedAt: !3823)
!4962 = !DILocation(line: 801, column: 17, scope: !3485, inlinedAt: !3823)
!4963 = !DILocation(line: 802, column: 37, scope: !3488, inlinedAt: !3823)
!4964 = !DILocation(line: 802, column: 41, scope: !3488, inlinedAt: !3823)
!4965 = !DILocation(line: 802, column: 44, scope: !3488, inlinedAt: !3823)
!4966 = !DILocation(line: 802, column: 48, scope: !3488, inlinedAt: !3823)
!4967 = !DILocation(line: 802, column: 50, scope: !3488, inlinedAt: !3823)
!4968 = !DILocation(line: 802, column: 47, scope: !3488, inlinedAt: !3823)
!4969 = !DILocation(line: 802, column: 57, scope: !3495, inlinedAt: !3823)
!4970 = !DILocation(line: 802, column: 47, scope: !3495, inlinedAt: !3823)
!4971 = !DILocation(line: 802, column: 67, scope: !3498, inlinedAt: !3823)
!4972 = !DILocation(line: 802, column: 69, scope: !3498, inlinedAt: !3823)
!4973 = !DILocation(line: 802, column: 64, scope: !3498, inlinedAt: !3823)
!4974 = !DILocation(line: 802, column: 80, scope: !3498, inlinedAt: !3823)
!4975 = !DILocation(line: 802, column: 82, scope: !3498, inlinedAt: !3823)
!4976 = !DILocation(line: 802, column: 88, scope: !3498, inlinedAt: !3823)
!4977 = !DILocation(line: 802, column: 75, scope: !3498, inlinedAt: !3823)
!4978 = !DILocation(line: 802, column: 47, scope: !3498, inlinedAt: !3823)
!4979 = !DILocation(line: 802, column: 47, scope: !3507, inlinedAt: !3823)
!4980 = !DILocation(line: 803, column: 37, scope: !3488, inlinedAt: !3823)
!4981 = !DILocation(line: 803, column: 40, scope: !3488, inlinedAt: !3823)
!4982 = !DILocation(line: 803, column: 48, scope: !3488, inlinedAt: !3823)
!4983 = !DILocation(line: 803, column: 56, scope: !3488, inlinedAt: !3823)
!4984 = !DILocation(line: 803, column: 62, scope: !3488, inlinedAt: !3823)
!4985 = !DILocation(line: 802, column: 22, scope: !3507, inlinedAt: !3823)
!4986 = !DILocation(line: 802, column: 20, scope: !3507, inlinedAt: !3823)
!4987 = !DILocation(line: 804, column: 13, scope: !3488, inlinedAt: !3823)
!4988 = !DILocation(line: 805, column: 39, scope: !3517, inlinedAt: !3823)
!4989 = !DILocation(line: 805, column: 43, scope: !3517, inlinedAt: !3823)
!4990 = !DILocation(line: 805, column: 46, scope: !3517, inlinedAt: !3823)
!4991 = !DILocation(line: 805, column: 50, scope: !3517, inlinedAt: !3823)
!4992 = !DILocation(line: 805, column: 52, scope: !3517, inlinedAt: !3823)
!4993 = !DILocation(line: 805, column: 49, scope: !3517, inlinedAt: !3823)
!4994 = !DILocation(line: 805, column: 59, scope: !3524, inlinedAt: !3823)
!4995 = !DILocation(line: 805, column: 49, scope: !3524, inlinedAt: !3823)
!4996 = !DILocation(line: 805, column: 69, scope: !3527, inlinedAt: !3823)
!4997 = !DILocation(line: 805, column: 71, scope: !3527, inlinedAt: !3823)
!4998 = !DILocation(line: 805, column: 66, scope: !3527, inlinedAt: !3823)
!4999 = !DILocation(line: 805, column: 82, scope: !3527, inlinedAt: !3823)
!5000 = !DILocation(line: 805, column: 84, scope: !3527, inlinedAt: !3823)
!5001 = !DILocation(line: 805, column: 90, scope: !3527, inlinedAt: !3823)
!5002 = !DILocation(line: 805, column: 77, scope: !3527, inlinedAt: !3823)
!5003 = !DILocation(line: 805, column: 49, scope: !3527, inlinedAt: !3823)
!5004 = !DILocation(line: 805, column: 49, scope: !3536, inlinedAt: !3823)
!5005 = !DILocation(line: 806, column: 39, scope: !3517, inlinedAt: !3823)
!5006 = !DILocation(line: 806, column: 42, scope: !3517, inlinedAt: !3823)
!5007 = !DILocation(line: 806, column: 50, scope: !3517, inlinedAt: !3823)
!5008 = !DILocation(line: 806, column: 58, scope: !3517, inlinedAt: !3823)
!5009 = !DILocation(line: 806, column: 64, scope: !3517, inlinedAt: !3823)
!5010 = !DILocation(line: 805, column: 22, scope: !3536, inlinedAt: !3823)
!5011 = !DILocation(line: 805, column: 20, scope: !3536, inlinedAt: !3823)
!5012 = !DILocation(line: 808, column: 9, scope: !3485, inlinedAt: !3823)
!5013 = !DILocation(line: 810, column: 38, scope: !2070, inlinedAt: !3823)
!5014 = !DILocation(line: 810, column: 35, scope: !2070, inlinedAt: !3823)
!5015 = !DILocation(line: 810, column: 46, scope: !2070, inlinedAt: !3823)
!5016 = !DILocation(line: 811, column: 21, scope: !2070, inlinedAt: !3823)
!5017 = !DILocation(line: 811, column: 18, scope: !2070, inlinedAt: !3823)
!5018 = !DILocation(line: 812, column: 17, scope: !2069, inlinedAt: !3823)
!5019 = !DILocation(line: 812, column: 17, scope: !2070, inlinedAt: !3823)
!5020 = !DILocation(line: 813, column: 22, scope: !2067, inlinedAt: !3823)
!5021 = !DILocation(line: 813, column: 21, scope: !2068, inlinedAt: !3823)
!5022 = !DILocation(line: 815, column: 28, scope: !2095, inlinedAt: !3823)
!5023 = !DILocation(line: 815, column: 26, scope: !2095, inlinedAt: !3823)
!5024 = !DILocation(line: 815, column: 33, scope: !3557, inlinedAt: !3823)
!5025 = !DILocation(line: 815, column: 37, scope: !3557, inlinedAt: !3823)
!5026 = !DILocation(line: 815, column: 35, scope: !3557, inlinedAt: !3823)
!5027 = !DILocation(line: 815, column: 21, scope: !3557, inlinedAt: !3823)
!5028 = !DILocation(line: 816, column: 52, scope: !2094, inlinedAt: !3823)
!5029 = !DILocation(line: 816, column: 43, scope: !2094, inlinedAt: !3823)
!5030 = !DILocation(line: 144, column: 25, scope: !2058, inlinedAt: !3831)
!5031 = !DILocation(line: 144, column: 28, scope: !2058, inlinedAt: !3831)
!5032 = !DILocation(line: 144, column: 23, scope: !2058, inlinedAt: !3831)
!5033 = !DILocation(line: 144, column: 33, scope: !2058, inlinedAt: !3831)
!5034 = !DILocation(line: 144, column: 5, scope: !2058, inlinedAt: !3831)
!5035 = !DILocation(line: 144, column: 8, scope: !2058, inlinedAt: !3831)
!5036 = !DILocation(line: 144, column: 13, scope: !2058, inlinedAt: !3831)
!5037 = !DILocation(line: 145, column: 12, scope: !2058, inlinedAt: !3831)
!5038 = !DILocation(line: 145, column: 15, scope: !2058, inlinedAt: !3831)
!5039 = !DILocation(line: 816, column: 56, scope: !2094, inlinedAt: !3823)
!5040 = !DILocation(line: 816, column: 32, scope: !2094, inlinedAt: !3823)
!5041 = !DILocation(line: 816, column: 27, scope: !2094, inlinedAt: !3823)
!5042 = !DILocation(line: 816, column: 25, scope: !2094, inlinedAt: !3823)
!5043 = !DILocation(line: 816, column: 30, scope: !2094, inlinedAt: !3823)
!5044 = !DILocation(line: 815, column: 41, scope: !3578, inlinedAt: !3823)
!5045 = !DILocation(line: 815, column: 21, scope: !3578, inlinedAt: !3823)
!5046 = !DILocation(line: 817, column: 26, scope: !2096, inlinedAt: !3823)
!5047 = !DILocation(line: 817, column: 24, scope: !2096, inlinedAt: !3823)
!5048 = !DILocation(line: 818, column: 17, scope: !2096, inlinedAt: !3823)
!5049 = !DILocation(line: 820, column: 28, scope: !2065, inlinedAt: !3823)
!5050 = !DILocation(line: 820, column: 26, scope: !2065, inlinedAt: !3823)
!5051 = !DILocation(line: 820, column: 33, scope: !3588, inlinedAt: !3823)
!5052 = !DILocation(line: 820, column: 37, scope: !3588, inlinedAt: !3823)
!5053 = !DILocation(line: 820, column: 35, scope: !3588, inlinedAt: !3823)
!5054 = !DILocation(line: 820, column: 21, scope: !3588, inlinedAt: !3823)
!5055 = !DILocation(line: 822, column: 40, scope: !2063, inlinedAt: !3823)
!5056 = !DILocation(line: 822, column: 32, scope: !2063, inlinedAt: !3823)
!5057 = !DILocation(line: 822, column: 57, scope: !2063, inlinedAt: !3823)
!5058 = !DILocation(line: 822, column: 48, scope: !2063, inlinedAt: !3823)
!5059 = !DILocation(line: 144, column: 25, scope: !2058, inlinedAt: !3822)
!5060 = !DILocation(line: 144, column: 28, scope: !2058, inlinedAt: !3822)
!5061 = !DILocation(line: 144, column: 23, scope: !2058, inlinedAt: !3822)
!5062 = !DILocation(line: 144, column: 33, scope: !2058, inlinedAt: !3822)
!5063 = !DILocation(line: 144, column: 5, scope: !2058, inlinedAt: !3822)
!5064 = !DILocation(line: 144, column: 8, scope: !2058, inlinedAt: !3822)
!5065 = !DILocation(line: 144, column: 13, scope: !2058, inlinedAt: !3822)
!5066 = !DILocation(line: 145, column: 12, scope: !2058, inlinedAt: !3822)
!5067 = !DILocation(line: 145, column: 15, scope: !2058, inlinedAt: !3822)
!5068 = !DILocation(line: 822, column: 61, scope: !2063, inlinedAt: !3823)
!5069 = !DILocation(line: 822, column: 46, scope: !2063, inlinedAt: !3823)
!5070 = !DILocation(line: 822, column: 43, scope: !2063, inlinedAt: !3823)
!5071 = !DILocation(line: 822, column: 27, scope: !2063, inlinedAt: !3823)
!5072 = !DILocation(line: 822, column: 25, scope: !2063, inlinedAt: !3823)
!5073 = !DILocation(line: 822, column: 30, scope: !2063, inlinedAt: !3823)
!5074 = !DILocation(line: 820, column: 41, scope: !3612, inlinedAt: !3823)
!5075 = !DILocation(line: 820, column: 21, scope: !3612, inlinedAt: !3823)
!5076 = !DILocation(line: 824, column: 26, scope: !2066, inlinedAt: !3823)
!5077 = !DILocation(line: 824, column: 24, scope: !2066, inlinedAt: !3823)
!5078 = !DILocation(line: 826, column: 41, scope: !2068, inlinedAt: !3823)
!5079 = !DILocation(line: 826, column: 44, scope: !2068, inlinedAt: !3823)
!5080 = !DILocation(line: 826, column: 47, scope: !2068, inlinedAt: !3823)
!5081 = !DILocation(line: 826, column: 17, scope: !2068, inlinedAt: !3823)
!5082 = !DILocation(line: 152, column: 12, scope: !3623, inlinedAt: !3825)
!5083 = !DILocation(line: 152, column: 10, scope: !3623, inlinedAt: !3825)
!5084 = !DILocation(line: 152, column: 17, scope: !3626, inlinedAt: !3825)
!5085 = !DILocation(line: 152, column: 21, scope: !3626, inlinedAt: !3825)
!5086 = !DILocation(line: 152, column: 19, scope: !3626, inlinedAt: !3825)
!5087 = !DILocation(line: 152, column: 5, scope: !3626, inlinedAt: !3825)
!5088 = !DILocation(line: 153, column: 16, scope: !3627, inlinedAt: !3825)
!5089 = !DILocation(line: 153, column: 14, scope: !3627, inlinedAt: !3825)
!5090 = !DILocation(line: 153, column: 23, scope: !3627, inlinedAt: !3825)
!5091 = !DILocation(line: 153, column: 21, scope: !3627, inlinedAt: !3825)
!5092 = !DILocation(line: 153, column: 19, scope: !3627, inlinedAt: !3825)
!5093 = !DILocation(line: 153, column: 11, scope: !3627, inlinedAt: !3825)
!5094 = !DILocation(line: 152, column: 25, scope: !3638, inlinedAt: !3825)
!5095 = !DILocation(line: 152, column: 5, scope: !3638, inlinedAt: !3825)
!5096 = !DILocation(line: 154, column: 9, scope: !2079, inlinedAt: !3825)
!5097 = !DILocation(line: 154, column: 22, scope: !2079, inlinedAt: !3825)
!5098 = !DILocation(line: 154, column: 16, scope: !2079, inlinedAt: !3825)
!5099 = !DILocation(line: 154, column: 14, scope: !2079, inlinedAt: !3825)
!5100 = !DILocation(line: 154, column: 7, scope: !2079, inlinedAt: !3825)
!5101 = !DILocation(line: 156, column: 12, scope: !3648, inlinedAt: !3825)
!5102 = !DILocation(line: 156, column: 10, scope: !3648, inlinedAt: !3825)
!5103 = !DILocation(line: 156, column: 17, scope: !3651, inlinedAt: !3825)
!5104 = !DILocation(line: 156, column: 21, scope: !3651, inlinedAt: !3825)
!5105 = !DILocation(line: 156, column: 19, scope: !3651, inlinedAt: !3825)
!5106 = !DILocation(line: 156, column: 5, scope: !3651, inlinedAt: !3825)
!5107 = !DILocation(line: 157, column: 17, scope: !3652, inlinedAt: !3825)
!5108 = !DILocation(line: 157, column: 11, scope: !3652, inlinedAt: !3825)
!5109 = !DILocation(line: 157, column: 9, scope: !3652, inlinedAt: !3825)
!5110 = !DILocation(line: 157, column: 14, scope: !3652, inlinedAt: !3825)
!5111 = !DILocation(line: 156, column: 25, scope: !3661, inlinedAt: !3825)
!5112 = !DILocation(line: 156, column: 5, scope: !3661, inlinedAt: !3825)
!5113 = !DILocation(line: 827, column: 13, scope: !2068, inlinedAt: !3823)
!5114 = !DILocation(line: 828, column: 24, scope: !3667, inlinedAt: !3823)
!5115 = !DILocation(line: 828, column: 17, scope: !3667, inlinedAt: !3823)
!5116 = !DILocation(line: 828, column: 30, scope: !3667, inlinedAt: !3823)
!5117 = !DILocation(line: 828, column: 31, scope: !3667, inlinedAt: !3823)
!5118 = !DILocation(line: 834, column: 9, scope: !2146, inlinedAt: !3823)
!5119 = !DILocation(line: 834, column: 9, scope: !2074, inlinedAt: !3823)
!5120 = !DILocation(line: 835, column: 13, scope: !3674, inlinedAt: !3823)
!5121 = !DILocation(line: 835, column: 15, scope: !3674, inlinedAt: !3823)
!5122 = !DILocation(line: 835, column: 13, scope: !3675, inlinedAt: !3823)
!5123 = !DILocation(line: 836, column: 31, scope: !3674, inlinedAt: !3823)
!5124 = !DILocation(line: 836, column: 34, scope: !3674, inlinedAt: !3823)
!5125 = !DILocation(line: 836, column: 37, scope: !3674, inlinedAt: !3823)
!5126 = !DILocation(line: 836, column: 42, scope: !3674, inlinedAt: !3823)
!5127 = !DILocation(line: 836, column: 13, scope: !3674, inlinedAt: !3823)
!5128 = !DILocation(line: 837, column: 13, scope: !3684, inlinedAt: !3823)
!5129 = !DILocation(line: 837, column: 13, scope: !3675, inlinedAt: !3823)
!5130 = !DILocation(line: 838, column: 20, scope: !3687, inlinedAt: !3823)
!5131 = !DILocation(line: 838, column: 18, scope: !3687, inlinedAt: !3823)
!5132 = !DILocation(line: 838, column: 25, scope: !3691, inlinedAt: !3823)
!5133 = !DILocation(line: 838, column: 29, scope: !3691, inlinedAt: !3823)
!5134 = !DILocation(line: 838, column: 27, scope: !3691, inlinedAt: !3823)
!5135 = !DILocation(line: 838, column: 13, scope: !3691, inlinedAt: !3823)
!5136 = !DILocation(line: 839, column: 19, scope: !3692, inlinedAt: !3823)
!5137 = !DILocation(line: 839, column: 17, scope: !3692, inlinedAt: !3823)
!5138 = !DILocation(line: 839, column: 22, scope: !3692, inlinedAt: !3823)
!5139 = !DILocation(line: 838, column: 33, scope: !3700, inlinedAt: !3823)
!5140 = !DILocation(line: 838, column: 13, scope: !3700, inlinedAt: !3823)
!5141 = !DILocation(line: 840, column: 9, scope: !3688, inlinedAt: !3823)
!5142 = !DILocation(line: 841, column: 5, scope: !3675, inlinedAt: !3823)
!5143 = !DILocation(line: 841, column: 16, scope: !3707, inlinedAt: !3823)
!5144 = !DILocation(line: 841, column: 22, scope: !3707, inlinedAt: !3823)
!5145 = !DILocation(line: 845, column: 13, scope: !3710, inlinedAt: !3823)
!5146 = !DILocation(line: 845, column: 16, scope: !3710, inlinedAt: !3823)
!5147 = !DILocation(line: 845, column: 13, scope: !2144, inlinedAt: !3823)
!5148 = !DILocation(line: 846, column: 38, scope: !3710, inlinedAt: !3823)
!5149 = !DILocation(line: 846, column: 43, scope: !3710, inlinedAt: !3823)
!5150 = !DILocation(line: 846, column: 57, scope: !3710, inlinedAt: !3823)
!5151 = !DILocation(line: 846, column: 60, scope: !3710, inlinedAt: !3823)
!5152 = !DILocation(line: 846, column: 67, scope: !3710, inlinedAt: !3823)
!5153 = !DILocation(line: 846, column: 64, scope: !3710, inlinedAt: !3823)
!5154 = !DILocation(line: 847, column: 38, scope: !3710, inlinedAt: !3823)
!5155 = !DILocation(line: 847, column: 44, scope: !3710, inlinedAt: !3823)
!5156 = !DILocation(line: 847, column: 41, scope: !3710, inlinedAt: !3823)
!5157 = !DILocation(line: 847, column: 55, scope: !3710, inlinedAt: !3823)
!5158 = !DILocation(line: 846, column: 13, scope: !3710, inlinedAt: !3823)
!5159 = !DILocation(line: 850, column: 15, scope: !2144, inlinedAt: !3823)
!5160 = !DILocation(line: 850, column: 13, scope: !2144, inlinedAt: !3823)
!5161 = !DILocation(line: 851, column: 18, scope: !2144, inlinedAt: !3823)
!5162 = !DILocation(line: 851, column: 16, scope: !2144, inlinedAt: !3823)
!5163 = !DILocation(line: 852, column: 16, scope: !3729, inlinedAt: !3823)
!5164 = !DILocation(line: 852, column: 14, scope: !3729, inlinedAt: !3823)
!5165 = !DILocation(line: 852, column: 21, scope: !3732, inlinedAt: !3823)
!5166 = !DILocation(line: 852, column: 25, scope: !3732, inlinedAt: !3823)
!5167 = !DILocation(line: 852, column: 23, scope: !3732, inlinedAt: !3823)
!5168 = !DILocation(line: 852, column: 9, scope: !3732, inlinedAt: !3823)
!5169 = !DILocation(line: 853, column: 20, scope: !3738, inlinedAt: !3823)
!5170 = !DILocation(line: 854, column: 17, scope: !3738, inlinedAt: !3823)
!5171 = !DILocation(line: 855, column: 19, scope: !3738, inlinedAt: !3823)
!5172 = !DILocation(line: 855, column: 25, scope: !3738, inlinedAt: !3823)
!5173 = !DILocation(line: 855, column: 22, scope: !3738, inlinedAt: !3823)
!5174 = !DILocation(line: 855, column: 16, scope: !3738, inlinedAt: !3823)
!5175 = !DILocation(line: 856, column: 24, scope: !3738, inlinedAt: !3823)
!5176 = !DILocation(line: 856, column: 27, scope: !3738, inlinedAt: !3823)
!5177 = !DILocation(line: 856, column: 32, scope: !3738, inlinedAt: !3823)
!5178 = !DILocation(line: 856, column: 13, scope: !3738, inlinedAt: !3823)
!5179 = !DILocation(line: 852, column: 39, scope: !3749, inlinedAt: !3823)
!5180 = !DILocation(line: 852, column: 9, scope: !3749, inlinedAt: !3823)
!5181 = !DILocation(line: 859, column: 16, scope: !3754, inlinedAt: !3823)
!5182 = !DILocation(line: 859, column: 14, scope: !3754, inlinedAt: !3823)
!5183 = !DILocation(line: 859, column: 21, scope: !3757, inlinedAt: !3823)
!5184 = !DILocation(line: 859, column: 25, scope: !3757, inlinedAt: !3823)
!5185 = !DILocation(line: 859, column: 23, scope: !3757, inlinedAt: !3823)
!5186 = !DILocation(line: 859, column: 9, scope: !3757, inlinedAt: !3823)
!5187 = !DILocation(line: 860, column: 43, scope: !3763, inlinedAt: !3823)
!5188 = !DILocation(line: 860, column: 18, scope: !3763, inlinedAt: !3823)
!5189 = !DILocation(line: 860, column: 16, scope: !3763, inlinedAt: !3823)
!5190 = !DILocation(line: 861, column: 24, scope: !3763, inlinedAt: !3823)
!5191 = !DILocation(line: 861, column: 27, scope: !3763, inlinedAt: !3823)
!5192 = !DILocation(line: 861, column: 31, scope: !3763, inlinedAt: !3823)
!5193 = !DILocation(line: 861, column: 29, scope: !3763, inlinedAt: !3823)
!5194 = !DILocation(line: 861, column: 37, scope: !3763, inlinedAt: !3823)
!5195 = !DILocation(line: 861, column: 35, scope: !3763, inlinedAt: !3823)
!5196 = !DILocation(line: 861, column: 13, scope: !3763, inlinedAt: !3823)
!5197 = !DILocation(line: 859, column: 37, scope: !3774, inlinedAt: !3823)
!5198 = !DILocation(line: 859, column: 9, scope: !3774, inlinedAt: !3823)
!5199 = !DILocation(line: 863, column: 20, scope: !2144, inlinedAt: !3823)
!5200 = !DILocation(line: 863, column: 16, scope: !2144, inlinedAt: !3823)
!5201 = !DILocation(line: 866, column: 13, scope: !2289, inlinedAt: !3823)
!5202 = !DILocation(line: 866, column: 13, scope: !2144, inlinedAt: !3823)
!5203 = !DILocation(line: 867, column: 29, scope: !2288, inlinedAt: !3823)
!5204 = !DILocation(line: 867, column: 23, scope: !2288, inlinedAt: !3823)
!5205 = !DILocation(line: 868, column: 20, scope: !3785, inlinedAt: !3823)
!5206 = !DILocation(line: 868, column: 18, scope: !3785, inlinedAt: !3823)
!5207 = !DILocation(line: 868, column: 25, scope: !3788, inlinedAt: !3823)
!5208 = !DILocation(line: 868, column: 29, scope: !3788, inlinedAt: !3823)
!5209 = !DILocation(line: 868, column: 27, scope: !3788, inlinedAt: !3823)
!5210 = !DILocation(line: 868, column: 13, scope: !3788, inlinedAt: !3823)
!5211 = !DILocation(line: 869, column: 34, scope: !3789, inlinedAt: !3823)
!5212 = !DILocation(line: 869, column: 40, scope: !3789, inlinedAt: !3823)
!5213 = !DILocation(line: 869, column: 38, scope: !3789, inlinedAt: !3823)
!5214 = !DILocation(line: 869, column: 36, scope: !3789, inlinedAt: !3823)
!5215 = !DILocation(line: 869, column: 29, scope: !3789, inlinedAt: !3823)
!5216 = !DILocation(line: 869, column: 17, scope: !3789, inlinedAt: !3823)
!5217 = !DILocation(line: 869, column: 32, scope: !3789, inlinedAt: !3823)
!5218 = !DILocation(line: 868, column: 34, scope: !3801, inlinedAt: !3823)
!5219 = !DILocation(line: 868, column: 13, scope: !3801, inlinedAt: !3823)
!5220 = !DILocation(line: 870, column: 9, scope: !2288, inlinedAt: !3823)
!5221 = !DILocation(line: 871, column: 30, scope: !2144, inlinedAt: !3823)
!5222 = !DILocation(line: 871, column: 34, scope: !2144, inlinedAt: !3823)
!5223 = !DILocation(line: 871, column: 14, scope: !2144, inlinedAt: !3823)
!5224 = !DILocation(line: 243, column: 12, scope: !2112, inlinedAt: !3847)
!5225 = !DILocation(line: 243, column: 23, scope: !2112, inlinedAt: !3847)
!5226 = !DILocation(line: 243, column: 20, scope: !2112, inlinedAt: !3847)
!5227 = !DILocation(line: 243, column: 26, scope: !2112, inlinedAt: !3847)
!5228 = !DILocation(line: 243, column: 14, scope: !2112, inlinedAt: !3847)
!5229 = !DILocation(line: 871, column: 12, scope: !2144, inlinedAt: !3823)
!5230 = !DILocation(line: 872, column: 5, scope: !2144, inlinedAt: !3823)
!5231 = !DILocation(line: 874, column: 12, scope: !2074, inlinedAt: !3823)
!5232 = !DILocation(line: 874, column: 5, scope: !2074, inlinedAt: !3823)
!5233 = !DILocation(line: 875, column: 1, scope: !2074, inlinedAt: !3823)
!5234 = !DILocation(line: 880, column: 5, scope: !3820)
!5235 = distinct !DISubprogram(name: "ff_celt_pvq_uninit", scope: !920, file: !920, line: 914, type: !5236, isLocal: false, isDefinition: true, scopeLine: 915, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!5236 = !DISubroutineType(types: !5237)
!5237 = !{null, !923}
!5238 = !DILocalVariable(name: "pvq", arg: 1, scope: !5235, file: !920, line: 914, type: !923)
!5239 = !DILocation(line: 914, column: 57, scope: !5235)
!5240 = !DILocation(line: 916, column: 14, scope: !5235)
!5241 = !DILocation(line: 916, column: 5, scope: !5235)
!5242 = !DILocation(line: 917, column: 1, scope: !5235)
!5243 = distinct !DISubprogram(name: "celt_haar1", scope: !920, file: !920, line: 225, type: !5244, isLocal: true, isDefinition: true, scopeLine: 226, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!5244 = !DISubroutineType(types: !5245)
!5245 = !{null, !939, !915, !915}
!5246 = !DILocalVariable(name: "X", arg: 1, scope: !5243, file: !920, line: 225, type: !939)
!5247 = !DILocation(line: 225, column: 31, scope: !5243)
!5248 = !DILocalVariable(name: "N0", arg: 2, scope: !5243, file: !920, line: 225, type: !915)
!5249 = !DILocation(line: 225, column: 38, scope: !5243)
!5250 = !DILocalVariable(name: "stride", arg: 3, scope: !5243, file: !920, line: 225, type: !915)
!5251 = !DILocation(line: 225, column: 46, scope: !5243)
!5252 = !DILocalVariable(name: "i", scope: !5243, file: !920, line: 227, type: !915)
!5253 = !DILocation(line: 227, column: 9, scope: !5243)
!5254 = !DILocalVariable(name: "j", scope: !5243, file: !920, line: 227, type: !915)
!5255 = !DILocation(line: 227, column: 12, scope: !5243)
!5256 = !DILocation(line: 228, column: 8, scope: !5243)
!5257 = !DILocation(line: 229, column: 12, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5243, file: !920, line: 229, column: 5)
!5259 = !DILocation(line: 229, column: 10, scope: !5258)
!5260 = !DILocation(line: 229, column: 17, scope: !5261)
!5261 = !DILexicalBlockFile(scope: !5262, file: !920, discriminator: 1)
!5262 = distinct !DILexicalBlock(scope: !5258, file: !920, line: 229, column: 5)
!5263 = !DILocation(line: 229, column: 21, scope: !5261)
!5264 = !DILocation(line: 229, column: 19, scope: !5261)
!5265 = !DILocation(line: 229, column: 5, scope: !5261)
!5266 = !DILocation(line: 230, column: 16, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5268, file: !920, line: 230, column: 9)
!5268 = distinct !DILexicalBlock(scope: !5262, file: !920, line: 229, column: 34)
!5269 = !DILocation(line: 230, column: 14, scope: !5267)
!5270 = !DILocation(line: 230, column: 21, scope: !5271)
!5271 = !DILexicalBlockFile(scope: !5272, file: !920, discriminator: 1)
!5272 = distinct !DILexicalBlock(scope: !5267, file: !920, line: 230, column: 9)
!5273 = !DILocation(line: 230, column: 25, scope: !5271)
!5274 = !DILocation(line: 230, column: 23, scope: !5271)
!5275 = !DILocation(line: 230, column: 9, scope: !5271)
!5276 = !DILocalVariable(name: "x0", scope: !5277, file: !920, line: 231, type: !912)
!5277 = distinct !DILexicalBlock(scope: !5272, file: !920, line: 230, column: 34)
!5278 = !DILocation(line: 231, column: 19, scope: !5277)
!5279 = !DILocation(line: 231, column: 26, scope: !5277)
!5280 = !DILocation(line: 231, column: 40, scope: !5277)
!5281 = !DILocation(line: 231, column: 38, scope: !5277)
!5282 = !DILocation(line: 231, column: 42, scope: !5277)
!5283 = !DILocation(line: 231, column: 33, scope: !5277)
!5284 = !DILocation(line: 231, column: 49, scope: !5277)
!5285 = !DILocation(line: 231, column: 47, scope: !5277)
!5286 = !DILocation(line: 231, column: 24, scope: !5277)
!5287 = !DILocalVariable(name: "x1", scope: !5277, file: !920, line: 232, type: !912)
!5288 = !DILocation(line: 232, column: 19, scope: !5277)
!5289 = !DILocation(line: 232, column: 26, scope: !5277)
!5290 = !DILocation(line: 232, column: 40, scope: !5277)
!5291 = !DILocation(line: 232, column: 38, scope: !5277)
!5292 = !DILocation(line: 232, column: 42, scope: !5277)
!5293 = !DILocation(line: 232, column: 33, scope: !5277)
!5294 = !DILocation(line: 232, column: 49, scope: !5277)
!5295 = !DILocation(line: 232, column: 47, scope: !5277)
!5296 = !DILocation(line: 232, column: 24, scope: !5277)
!5297 = !DILocation(line: 233, column: 44, scope: !5277)
!5298 = !DILocation(line: 233, column: 49, scope: !5277)
!5299 = !DILocation(line: 233, column: 47, scope: !5277)
!5300 = !DILocation(line: 233, column: 43, scope: !5277)
!5301 = !DILocation(line: 233, column: 53, scope: !5277)
!5302 = !DILocation(line: 233, column: 15, scope: !5277)
!5303 = !DILocation(line: 233, column: 29, scope: !5277)
!5304 = !DILocation(line: 233, column: 27, scope: !5277)
!5305 = !DILocation(line: 233, column: 31, scope: !5277)
!5306 = !DILocation(line: 233, column: 22, scope: !5277)
!5307 = !DILocation(line: 233, column: 38, scope: !5277)
!5308 = !DILocation(line: 233, column: 36, scope: !5277)
!5309 = !DILocation(line: 233, column: 13, scope: !5277)
!5310 = !DILocation(line: 233, column: 41, scope: !5277)
!5311 = !DILocation(line: 234, column: 44, scope: !5277)
!5312 = !DILocation(line: 234, column: 49, scope: !5277)
!5313 = !DILocation(line: 234, column: 47, scope: !5277)
!5314 = !DILocation(line: 234, column: 43, scope: !5277)
!5315 = !DILocation(line: 234, column: 53, scope: !5277)
!5316 = !DILocation(line: 234, column: 15, scope: !5277)
!5317 = !DILocation(line: 234, column: 29, scope: !5277)
!5318 = !DILocation(line: 234, column: 27, scope: !5277)
!5319 = !DILocation(line: 234, column: 31, scope: !5277)
!5320 = !DILocation(line: 234, column: 22, scope: !5277)
!5321 = !DILocation(line: 234, column: 38, scope: !5277)
!5322 = !DILocation(line: 234, column: 36, scope: !5277)
!5323 = !DILocation(line: 234, column: 13, scope: !5277)
!5324 = !DILocation(line: 234, column: 41, scope: !5277)
!5325 = !DILocation(line: 235, column: 9, scope: !5277)
!5326 = !DILocation(line: 230, column: 30, scope: !5327)
!5327 = !DILexicalBlockFile(scope: !5272, file: !920, discriminator: 2)
!5328 = !DILocation(line: 230, column: 9, scope: !5327)
!5329 = distinct !{!5329, !5330}
!5330 = !DILocation(line: 230, column: 9, scope: !5268)
!5331 = !DILocation(line: 236, column: 5, scope: !5268)
!5332 = !DILocation(line: 229, column: 30, scope: !5333)
!5333 = !DILexicalBlockFile(scope: !5262, file: !920, discriminator: 2)
!5334 = !DILocation(line: 229, column: 5, scope: !5333)
!5335 = distinct !{!5335, !5336}
!5336 = !DILocation(line: 229, column: 5, scope: !5243)
!5337 = !DILocation(line: 237, column: 1, scope: !5243)
!5338 = distinct !DISubprogram(name: "celt_deinterleave_hadamard", scope: !920, file: !920, line: 212, type: !5339, isLocal: true, isDefinition: true, scopeLine: 214, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!5339 = !DISubroutineType(types: !5340)
!5340 = !{null, !939, !939, !915, !915, !915}
!5341 = !DILocalVariable(name: "tmp", arg: 1, scope: !5338, file: !920, line: 212, type: !939)
!5342 = !DILocation(line: 212, column: 47, scope: !5338)
!5343 = !DILocalVariable(name: "X", arg: 2, scope: !5338, file: !920, line: 212, type: !939)
!5344 = !DILocation(line: 212, column: 59, scope: !5338)
!5345 = !DILocalVariable(name: "N0", arg: 3, scope: !5338, file: !920, line: 212, type: !915)
!5346 = !DILocation(line: 212, column: 66, scope: !5338)
!5347 = !DILocalVariable(name: "stride", arg: 4, scope: !5338, file: !920, line: 213, type: !915)
!5348 = !DILocation(line: 213, column: 44, scope: !5338)
!5349 = !DILocalVariable(name: "hadamard", arg: 5, scope: !5338, file: !920, line: 213, type: !915)
!5350 = !DILocation(line: 213, column: 56, scope: !5338)
!5351 = !DILocalVariable(name: "i", scope: !5338, file: !920, line: 215, type: !915)
!5352 = !DILocation(line: 215, column: 9, scope: !5338)
!5353 = !DILocalVariable(name: "j", scope: !5338, file: !920, line: 215, type: !915)
!5354 = !DILocation(line: 215, column: 12, scope: !5338)
!5355 = !DILocalVariable(name: "N", scope: !5338, file: !920, line: 215, type: !915)
!5356 = !DILocation(line: 215, column: 15, scope: !5338)
!5357 = !DILocation(line: 215, column: 19, scope: !5338)
!5358 = !DILocation(line: 215, column: 22, scope: !5338)
!5359 = !DILocation(line: 215, column: 21, scope: !5338)
!5360 = !DILocalVariable(name: "order", scope: !5338, file: !920, line: 216, type: !1445)
!5361 = !DILocation(line: 216, column: 20, scope: !5338)
!5362 = !DILocation(line: 216, column: 52, scope: !5338)
!5363 = !DILocation(line: 216, column: 63, scope: !5364)
!5364 = !DILexicalBlockFile(scope: !5338, file: !920, discriminator: 1)
!5365 = !DILocation(line: 216, column: 70, scope: !5364)
!5366 = !DILocation(line: 216, column: 52, scope: !5364)
!5367 = !DILocation(line: 216, column: 52, scope: !5368)
!5368 = !DILexicalBlockFile(scope: !5338, file: !920, discriminator: 2)
!5369 = !DILocation(line: 216, column: 52, scope: !5370)
!5370 = !DILexicalBlockFile(scope: !5338, file: !920, discriminator: 3)
!5371 = !DILocation(line: 216, column: 29, scope: !5370)
!5372 = !DILocation(line: 216, column: 20, scope: !5370)
!5373 = !DILocation(line: 218, column: 12, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5338, file: !920, line: 218, column: 5)
!5375 = !DILocation(line: 218, column: 10, scope: !5374)
!5376 = !DILocation(line: 218, column: 17, scope: !5377)
!5377 = !DILexicalBlockFile(scope: !5378, file: !920, discriminator: 1)
!5378 = distinct !DILexicalBlock(scope: !5374, file: !920, line: 218, column: 5)
!5379 = !DILocation(line: 218, column: 21, scope: !5377)
!5380 = !DILocation(line: 218, column: 19, scope: !5377)
!5381 = !DILocation(line: 218, column: 5, scope: !5377)
!5382 = !DILocation(line: 219, column: 16, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5378, file: !920, line: 219, column: 9)
!5384 = !DILocation(line: 219, column: 14, scope: !5383)
!5385 = !DILocation(line: 219, column: 21, scope: !5386)
!5386 = !DILexicalBlockFile(scope: !5387, file: !920, discriminator: 1)
!5387 = distinct !DILexicalBlock(scope: !5383, file: !920, line: 219, column: 9)
!5388 = !DILocation(line: 219, column: 25, scope: !5386)
!5389 = !DILocation(line: 219, column: 23, scope: !5386)
!5390 = !DILocation(line: 219, column: 9, scope: !5386)
!5391 = !DILocation(line: 220, column: 36, scope: !5387)
!5392 = !DILocation(line: 220, column: 38, scope: !5387)
!5393 = !DILocation(line: 220, column: 37, scope: !5387)
!5394 = !DILocation(line: 220, column: 45, scope: !5387)
!5395 = !DILocation(line: 220, column: 44, scope: !5387)
!5396 = !DILocation(line: 220, column: 34, scope: !5387)
!5397 = !DILocation(line: 220, column: 23, scope: !5387)
!5398 = !DILocation(line: 220, column: 17, scope: !5387)
!5399 = !DILocation(line: 220, column: 26, scope: !5387)
!5400 = !DILocation(line: 220, column: 25, scope: !5387)
!5401 = !DILocation(line: 220, column: 29, scope: !5387)
!5402 = !DILocation(line: 220, column: 28, scope: !5387)
!5403 = !DILocation(line: 220, column: 13, scope: !5387)
!5404 = !DILocation(line: 220, column: 32, scope: !5387)
!5405 = !DILocation(line: 219, column: 30, scope: !5406)
!5406 = !DILexicalBlockFile(scope: !5387, file: !920, discriminator: 2)
!5407 = !DILocation(line: 219, column: 9, scope: !5406)
!5408 = distinct !{!5408, !5409}
!5409 = !DILocation(line: 219, column: 9, scope: !5378)
!5410 = !DILocation(line: 220, column: 46, scope: !5411)
!5411 = !DILexicalBlockFile(scope: !5383, file: !920, discriminator: 1)
!5412 = !DILocation(line: 218, column: 30, scope: !5413)
!5413 = !DILexicalBlockFile(scope: !5378, file: !920, discriminator: 2)
!5414 = !DILocation(line: 218, column: 5, scope: !5413)
!5415 = distinct !{!5415, !5416}
!5416 = !DILocation(line: 218, column: 5, scope: !5338)
!5417 = !DILocation(line: 222, column: 12, scope: !5338)
!5418 = !DILocation(line: 222, column: 5, scope: !5338)
!5419 = !DILocation(line: 222, column: 15, scope: !5338)
!5420 = !DILocation(line: 222, column: 20, scope: !5338)
!5421 = !DILocation(line: 222, column: 21, scope: !5338)
!5422 = !DILocation(line: 223, column: 1, scope: !5338)
!5423 = distinct !DISubprogram(name: "celt_calc_theta", scope: !920, file: !920, line: 443, type: !5424, isLocal: true, isDefinition: true, scopeLine: 444, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!5424 = !DISubroutineType(types: !5425)
!5425 = !{!915, !1627, !1627, !915, !915}
!5426 = !DILocalVariable(name: "X", arg: 1, scope: !5423, file: !920, line: 443, type: !1627)
!5427 = !DILocation(line: 443, column: 41, scope: !5423)
!5428 = !DILocalVariable(name: "Y", arg: 2, scope: !5423, file: !920, line: 443, type: !1627)
!5429 = !DILocation(line: 443, column: 57, scope: !5423)
!5430 = !DILocalVariable(name: "coupling", arg: 3, scope: !5423, file: !920, line: 443, type: !915)
!5431 = !DILocation(line: 443, column: 64, scope: !5423)
!5432 = !DILocalVariable(name: "N", arg: 4, scope: !5423, file: !920, line: 443, type: !915)
!5433 = !DILocation(line: 443, column: 78, scope: !5423)
!5434 = !DILocalVariable(name: "i", scope: !5423, file: !920, line: 445, type: !915)
!5435 = !DILocation(line: 445, column: 9, scope: !5423)
!5436 = !DILocalVariable(name: "e", scope: !5423, file: !920, line: 446, type: !5437)
!5437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !912, size: 64, align: 32, elements: !1713)
!5438 = !DILocation(line: 446, column: 11, scope: !5423)
!5439 = !DILocation(line: 447, column: 9, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5423, file: !920, line: 447, column: 9)
!5441 = !DILocation(line: 447, column: 9, scope: !5423)
!5442 = !DILocation(line: 448, column: 16, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5444, file: !920, line: 448, column: 9)
!5444 = distinct !DILexicalBlock(scope: !5440, file: !920, line: 447, column: 19)
!5445 = !DILocation(line: 448, column: 14, scope: !5443)
!5446 = !DILocation(line: 448, column: 21, scope: !5447)
!5447 = !DILexicalBlockFile(scope: !5448, file: !920, discriminator: 1)
!5448 = distinct !DILexicalBlock(scope: !5443, file: !920, line: 448, column: 9)
!5449 = !DILocation(line: 448, column: 25, scope: !5447)
!5450 = !DILocation(line: 448, column: 23, scope: !5447)
!5451 = !DILocation(line: 448, column: 9, scope: !5447)
!5452 = !DILocation(line: 449, column: 24, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5448, file: !920, line: 448, column: 33)
!5454 = !DILocation(line: 449, column: 22, scope: !5453)
!5455 = !DILocation(line: 449, column: 31, scope: !5453)
!5456 = !DILocation(line: 449, column: 29, scope: !5453)
!5457 = !DILocation(line: 449, column: 27, scope: !5453)
!5458 = !DILocation(line: 449, column: 38, scope: !5453)
!5459 = !DILocation(line: 449, column: 36, scope: !5453)
!5460 = !DILocation(line: 449, column: 45, scope: !5453)
!5461 = !DILocation(line: 449, column: 43, scope: !5453)
!5462 = !DILocation(line: 449, column: 41, scope: !5453)
!5463 = !DILocation(line: 449, column: 34, scope: !5453)
!5464 = !DILocation(line: 449, column: 13, scope: !5453)
!5465 = !DILocation(line: 449, column: 18, scope: !5453)
!5466 = !DILocation(line: 450, column: 24, scope: !5453)
!5467 = !DILocation(line: 450, column: 22, scope: !5453)
!5468 = !DILocation(line: 450, column: 31, scope: !5453)
!5469 = !DILocation(line: 450, column: 29, scope: !5453)
!5470 = !DILocation(line: 450, column: 27, scope: !5453)
!5471 = !DILocation(line: 450, column: 38, scope: !5453)
!5472 = !DILocation(line: 450, column: 36, scope: !5453)
!5473 = !DILocation(line: 450, column: 45, scope: !5453)
!5474 = !DILocation(line: 450, column: 43, scope: !5453)
!5475 = !DILocation(line: 450, column: 41, scope: !5453)
!5476 = !DILocation(line: 450, column: 34, scope: !5453)
!5477 = !DILocation(line: 450, column: 13, scope: !5453)
!5478 = !DILocation(line: 450, column: 18, scope: !5453)
!5479 = !DILocation(line: 451, column: 9, scope: !5453)
!5480 = !DILocation(line: 448, column: 29, scope: !5481)
!5481 = !DILexicalBlockFile(scope: !5448, file: !920, discriminator: 2)
!5482 = !DILocation(line: 448, column: 9, scope: !5481)
!5483 = distinct !{!5483, !5484}
!5484 = !DILocation(line: 448, column: 9, scope: !5444)
!5485 = !DILocation(line: 452, column: 5, scope: !5444)
!5486 = !DILocation(line: 453, column: 16, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !920, line: 453, column: 9)
!5488 = distinct !DILexicalBlock(scope: !5440, file: !920, line: 452, column: 12)
!5489 = !DILocation(line: 453, column: 14, scope: !5487)
!5490 = !DILocation(line: 453, column: 21, scope: !5491)
!5491 = !DILexicalBlockFile(scope: !5492, file: !920, discriminator: 1)
!5492 = distinct !DILexicalBlock(scope: !5487, file: !920, line: 453, column: 9)
!5493 = !DILocation(line: 453, column: 25, scope: !5491)
!5494 = !DILocation(line: 453, column: 23, scope: !5491)
!5495 = !DILocation(line: 453, column: 9, scope: !5491)
!5496 = !DILocation(line: 454, column: 23, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5492, file: !920, line: 453, column: 33)
!5498 = !DILocation(line: 454, column: 21, scope: !5497)
!5499 = !DILocation(line: 454, column: 28, scope: !5497)
!5500 = !DILocation(line: 454, column: 26, scope: !5497)
!5501 = !DILocation(line: 454, column: 25, scope: !5497)
!5502 = !DILocation(line: 454, column: 13, scope: !5497)
!5503 = !DILocation(line: 454, column: 18, scope: !5497)
!5504 = !DILocation(line: 455, column: 23, scope: !5497)
!5505 = !DILocation(line: 455, column: 21, scope: !5497)
!5506 = !DILocation(line: 455, column: 28, scope: !5497)
!5507 = !DILocation(line: 455, column: 26, scope: !5497)
!5508 = !DILocation(line: 455, column: 25, scope: !5497)
!5509 = !DILocation(line: 455, column: 13, scope: !5497)
!5510 = !DILocation(line: 455, column: 18, scope: !5497)
!5511 = !DILocation(line: 456, column: 9, scope: !5497)
!5512 = !DILocation(line: 453, column: 29, scope: !5513)
!5513 = !DILexicalBlockFile(scope: !5492, file: !920, discriminator: 2)
!5514 = !DILocation(line: 453, column: 9, scope: !5513)
!5515 = distinct !{!5515, !5516}
!5516 = !DILocation(line: 453, column: 9, scope: !5488)
!5517 = !DILocation(line: 458, column: 41, scope: !5423)
!5518 = !DILocation(line: 458, column: 35, scope: !5423)
!5519 = !DILocation(line: 458, column: 54, scope: !5423)
!5520 = !DILocation(line: 458, column: 48, scope: !5521)
!5521 = !DILexicalBlockFile(scope: !5423, file: !920, discriminator: 1)
!5522 = !DILocation(line: 458, column: 28, scope: !5523)
!5523 = !DILexicalBlockFile(scope: !5423, file: !920, discriminator: 2)
!5524 = !DILocation(line: 458, column: 27, scope: !5423)
!5525 = !DILocation(line: 458, column: 19, scope: !5423)
!5526 = !DILocation(line: 458, column: 60, scope: !5423)
!5527 = !DILocation(line: 458, column: 12, scope: !5528)
!5528 = !DILexicalBlockFile(scope: !5423, file: !920, discriminator: 3)
!5529 = !DILocation(line: 458, column: 12, scope: !5423)
!5530 = !DILocation(line: 458, column: 5, scope: !5423)
!5531 = distinct !DISubprogram(name: "celt_compute_qn", scope: !920, file: !920, line: 239, type: !5532, isLocal: true, isDefinition: true, scopeLine: 241, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!5532 = !DISubroutineType(types: !5533)
!5533 = !{!915, !915, !915, !915, !915, !915}
!5534 = !DILocalVariable(name: "N", arg: 1, scope: !5531, file: !920, line: 239, type: !915)
!5535 = !DILocation(line: 239, column: 39, scope: !5531)
!5536 = !DILocalVariable(name: "b", arg: 2, scope: !5531, file: !920, line: 239, type: !915)
!5537 = !DILocation(line: 239, column: 46, scope: !5531)
!5538 = !DILocalVariable(name: "offset", arg: 3, scope: !5531, file: !920, line: 239, type: !915)
!5539 = !DILocation(line: 239, column: 53, scope: !5531)
!5540 = !DILocalVariable(name: "pulse_cap", arg: 4, scope: !5531, file: !920, line: 239, type: !915)
!5541 = !DILocation(line: 239, column: 65, scope: !5531)
!5542 = !DILocalVariable(name: "stereo", arg: 5, scope: !5531, file: !920, line: 240, type: !915)
!5543 = !DILocation(line: 240, column: 39, scope: !5531)
!5544 = !DILocalVariable(name: "qn", scope: !5531, file: !920, line: 242, type: !915)
!5545 = !DILocation(line: 242, column: 9, scope: !5531)
!5546 = !DILocalVariable(name: "qb", scope: !5531, file: !920, line: 242, type: !915)
!5547 = !DILocation(line: 242, column: 13, scope: !5531)
!5548 = !DILocalVariable(name: "N2", scope: !5531, file: !920, line: 243, type: !915)
!5549 = !DILocation(line: 243, column: 9, scope: !5531)
!5550 = !DILocation(line: 243, column: 18, scope: !5531)
!5551 = !DILocation(line: 243, column: 16, scope: !5531)
!5552 = !DILocation(line: 243, column: 20, scope: !5531)
!5553 = !DILocation(line: 244, column: 9, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5531, file: !920, line: 244, column: 9)
!5555 = !DILocation(line: 244, column: 16, scope: !5554)
!5556 = !DILocation(line: 244, column: 19, scope: !5557)
!5557 = !DILexicalBlockFile(scope: !5554, file: !920, discriminator: 1)
!5558 = !DILocation(line: 244, column: 21, scope: !5557)
!5559 = !DILocation(line: 244, column: 9, scope: !5557)
!5560 = !DILocation(line: 245, column: 11, scope: !5554)
!5561 = !DILocation(line: 245, column: 9, scope: !5554)
!5562 = !DILocation(line: 250, column: 14, scope: !5531)
!5563 = !DILocation(line: 250, column: 18, scope: !5531)
!5564 = !DILocation(line: 250, column: 16, scope: !5531)
!5565 = !DILocation(line: 250, column: 28, scope: !5531)
!5566 = !DILocation(line: 250, column: 44, scope: !5531)
!5567 = !DILocation(line: 250, column: 48, scope: !5531)
!5568 = !DILocation(line: 250, column: 53, scope: !5531)
!5569 = !DILocation(line: 250, column: 51, scope: !5531)
!5570 = !DILocation(line: 250, column: 46, scope: !5531)
!5571 = !DILocation(line: 250, column: 63, scope: !5531)
!5572 = !DILocation(line: 250, column: 61, scope: !5531)
!5573 = !DILocation(line: 250, column: 40, scope: !5531)
!5574 = !DILocation(line: 250, column: 13, scope: !5531)
!5575 = !DILocation(line: 250, column: 71, scope: !5576)
!5576 = !DILexicalBlockFile(scope: !5531, file: !920, discriminator: 1)
!5577 = !DILocation(line: 250, column: 75, scope: !5576)
!5578 = !DILocation(line: 250, column: 80, scope: !5576)
!5579 = !DILocation(line: 250, column: 78, scope: !5576)
!5580 = !DILocation(line: 250, column: 73, scope: !5576)
!5581 = !DILocation(line: 250, column: 90, scope: !5576)
!5582 = !DILocation(line: 250, column: 88, scope: !5576)
!5583 = !DILocation(line: 250, column: 13, scope: !5576)
!5584 = !DILocation(line: 250, column: 97, scope: !5585)
!5585 = !DILexicalBlockFile(scope: !5531, file: !920, discriminator: 2)
!5586 = !DILocation(line: 250, column: 101, scope: !5585)
!5587 = !DILocation(line: 250, column: 99, scope: !5585)
!5588 = !DILocation(line: 250, column: 111, scope: !5585)
!5589 = !DILocation(line: 250, column: 13, scope: !5585)
!5590 = !DILocation(line: 250, column: 13, scope: !5591)
!5591 = !DILexicalBlockFile(scope: !5531, file: !920, discriminator: 3)
!5592 = !DILocation(line: 250, column: 125, scope: !5591)
!5593 = !DILocation(line: 250, column: 11, scope: !5591)
!5594 = !DILocation(line: 250, column: 11, scope: !5595)
!5595 = !DILexicalBlockFile(scope: !5531, file: !920, discriminator: 4)
!5596 = !DILocation(line: 250, column: 152, scope: !5597)
!5597 = !DILexicalBlockFile(scope: !5531, file: !920, discriminator: 5)
!5598 = !DILocation(line: 250, column: 156, scope: !5597)
!5599 = !DILocation(line: 250, column: 154, scope: !5597)
!5600 = !DILocation(line: 250, column: 166, scope: !5597)
!5601 = !DILocation(line: 250, column: 182, scope: !5597)
!5602 = !DILocation(line: 250, column: 186, scope: !5597)
!5603 = !DILocation(line: 250, column: 191, scope: !5597)
!5604 = !DILocation(line: 250, column: 189, scope: !5597)
!5605 = !DILocation(line: 250, column: 184, scope: !5597)
!5606 = !DILocation(line: 250, column: 201, scope: !5597)
!5607 = !DILocation(line: 250, column: 199, scope: !5597)
!5608 = !DILocation(line: 250, column: 178, scope: !5597)
!5609 = !DILocation(line: 250, column: 151, scope: !5597)
!5610 = !DILocation(line: 250, column: 209, scope: !5611)
!5611 = !DILexicalBlockFile(scope: !5531, file: !920, discriminator: 6)
!5612 = !DILocation(line: 250, column: 213, scope: !5611)
!5613 = !DILocation(line: 250, column: 218, scope: !5611)
!5614 = !DILocation(line: 250, column: 216, scope: !5611)
!5615 = !DILocation(line: 250, column: 211, scope: !5611)
!5616 = !DILocation(line: 250, column: 228, scope: !5611)
!5617 = !DILocation(line: 250, column: 226, scope: !5611)
!5618 = !DILocation(line: 250, column: 151, scope: !5611)
!5619 = !DILocation(line: 250, column: 235, scope: !5620)
!5620 = !DILexicalBlockFile(scope: !5531, file: !920, discriminator: 7)
!5621 = !DILocation(line: 250, column: 239, scope: !5620)
!5622 = !DILocation(line: 250, column: 237, scope: !5620)
!5623 = !DILocation(line: 250, column: 249, scope: !5620)
!5624 = !DILocation(line: 250, column: 151, scope: !5620)
!5625 = !DILocation(line: 250, column: 151, scope: !5626)
!5626 = !DILexicalBlockFile(scope: !5531, file: !920, discriminator: 8)
!5627 = !DILocation(line: 250, column: 11, scope: !5626)
!5628 = !DILocation(line: 250, column: 11, scope: !5629)
!5629 = !DILexicalBlockFile(scope: !5531, file: !920, discriminator: 9)
!5630 = !DILocation(line: 250, column: 8, scope: !5629)
!5631 = !DILocation(line: 251, column: 11, scope: !5531)
!5632 = !DILocation(line: 251, column: 14, scope: !5531)
!5633 = !DILocation(line: 251, column: 10, scope: !5531)
!5634 = !DILocation(line: 251, column: 10, scope: !5576)
!5635 = !DILocation(line: 251, column: 55, scope: !5585)
!5636 = !DILocation(line: 251, column: 58, scope: !5585)
!5637 = !DILocation(line: 251, column: 39, scope: !5585)
!5638 = !DILocation(line: 251, column: 75, scope: !5585)
!5639 = !DILocation(line: 251, column: 78, scope: !5585)
!5640 = !DILocation(line: 251, column: 72, scope: !5585)
!5641 = !DILocation(line: 251, column: 65, scope: !5585)
!5642 = !DILocation(line: 251, column: 86, scope: !5585)
!5643 = !DILocation(line: 251, column: 91, scope: !5585)
!5644 = !DILocation(line: 251, column: 96, scope: !5585)
!5645 = !DILocation(line: 251, column: 10, scope: !5585)
!5646 = !DILocation(line: 251, column: 10, scope: !5591)
!5647 = !DILocation(line: 251, column: 8, scope: !5591)
!5648 = !DILocation(line: 252, column: 12, scope: !5531)
!5649 = !DILocation(line: 252, column: 5, scope: !5531)
!5650 = distinct !DISubprogram(name: "celt_stereo_is_decouple", scope: !920, file: !920, line: 461, type: !5651, isLocal: true, isDefinition: true, scopeLine: 462, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!5651 = !DISubroutineType(types: !5652)
!5652 = !{null, !939, !939, !912, !912, !915}
!5653 = !DILocalVariable(name: "X", arg: 1, scope: !5650, file: !920, line: 461, type: !939)
!5654 = !DILocation(line: 461, column: 44, scope: !5650)
!5655 = !DILocalVariable(name: "Y", arg: 2, scope: !5650, file: !920, line: 461, type: !939)
!5656 = !DILocation(line: 461, column: 54, scope: !5650)
!5657 = !DILocalVariable(name: "e_l", arg: 3, scope: !5650, file: !920, line: 461, type: !912)
!5658 = !DILocation(line: 461, column: 63, scope: !5650)
!5659 = !DILocalVariable(name: "e_r", arg: 4, scope: !5650, file: !920, line: 461, type: !912)
!5660 = !DILocation(line: 461, column: 74, scope: !5650)
!5661 = !DILocalVariable(name: "N", arg: 5, scope: !5650, file: !920, line: 461, type: !915)
!5662 = !DILocation(line: 461, column: 83, scope: !5650)
!5663 = !DILocalVariable(name: "i", scope: !5650, file: !920, line: 463, type: !915)
!5664 = !DILocation(line: 463, column: 9, scope: !5650)
!5665 = !DILocalVariable(name: "energy_n", scope: !5650, file: !920, line: 464, type: !1628)
!5666 = !DILocation(line: 464, column: 17, scope: !5650)
!5667 = !DILocation(line: 464, column: 40, scope: !5650)
!5668 = !DILocation(line: 464, column: 44, scope: !5650)
!5669 = !DILocation(line: 464, column: 43, scope: !5650)
!5670 = !DILocation(line: 464, column: 50, scope: !5650)
!5671 = !DILocation(line: 464, column: 54, scope: !5650)
!5672 = !DILocation(line: 464, column: 53, scope: !5650)
!5673 = !DILocation(line: 464, column: 48, scope: !5650)
!5674 = !DILocation(line: 464, column: 34, scope: !5650)
!5675 = !DILocation(line: 464, column: 59, scope: !5650)
!5676 = !DILocation(line: 464, column: 32, scope: !5650)
!5677 = !DILocation(line: 465, column: 12, scope: !5650)
!5678 = !DILocation(line: 465, column: 9, scope: !5650)
!5679 = !DILocation(line: 466, column: 12, scope: !5650)
!5680 = !DILocation(line: 466, column: 9, scope: !5650)
!5681 = !DILocation(line: 467, column: 12, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5650, file: !920, line: 467, column: 5)
!5683 = !DILocation(line: 467, column: 10, scope: !5682)
!5684 = !DILocation(line: 467, column: 17, scope: !5685)
!5685 = !DILexicalBlockFile(scope: !5686, file: !920, discriminator: 1)
!5686 = distinct !DILexicalBlock(scope: !5682, file: !920, line: 467, column: 5)
!5687 = !DILocation(line: 467, column: 21, scope: !5685)
!5688 = !DILocation(line: 467, column: 19, scope: !5685)
!5689 = !DILocation(line: 467, column: 5, scope: !5685)
!5690 = !DILocation(line: 468, column: 16, scope: !5686)
!5691 = !DILocation(line: 468, column: 22, scope: !5686)
!5692 = !DILocation(line: 468, column: 20, scope: !5686)
!5693 = !DILocation(line: 468, column: 19, scope: !5686)
!5694 = !DILocation(line: 468, column: 27, scope: !5686)
!5695 = !DILocation(line: 468, column: 33, scope: !5686)
!5696 = !DILocation(line: 468, column: 31, scope: !5686)
!5697 = !DILocation(line: 468, column: 30, scope: !5686)
!5698 = !DILocation(line: 468, column: 25, scope: !5686)
!5699 = !DILocation(line: 468, column: 11, scope: !5686)
!5700 = !DILocation(line: 468, column: 9, scope: !5686)
!5701 = !DILocation(line: 468, column: 14, scope: !5686)
!5702 = !DILocation(line: 467, column: 25, scope: !5703)
!5703 = !DILexicalBlockFile(scope: !5686, file: !920, discriminator: 2)
!5704 = !DILocation(line: 467, column: 5, scope: !5703)
!5705 = distinct !{!5705, !5706}
!5706 = !DILocation(line: 467, column: 5, scope: !5650)
!5707 = !DILocation(line: 469, column: 1, scope: !5650)
!5708 = distinct !DISubprogram(name: "celt_stereo_ms_decouple", scope: !920, file: !920, line: 471, type: !5709, isLocal: true, isDefinition: true, scopeLine: 472, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!5709 = !DISubroutineType(types: !5710)
!5710 = !{null, !939, !939, !915}
!5711 = !DILocalVariable(name: "X", arg: 1, scope: !5708, file: !920, line: 471, type: !939)
!5712 = !DILocation(line: 471, column: 44, scope: !5708)
!5713 = !DILocalVariable(name: "Y", arg: 2, scope: !5708, file: !920, line: 471, type: !939)
!5714 = !DILocation(line: 471, column: 54, scope: !5708)
!5715 = !DILocalVariable(name: "N", arg: 3, scope: !5708, file: !920, line: 471, type: !915)
!5716 = !DILocation(line: 471, column: 61, scope: !5708)
!5717 = !DILocalVariable(name: "i", scope: !5708, file: !920, line: 473, type: !915)
!5718 = !DILocation(line: 473, column: 9, scope: !5708)
!5719 = !DILocation(line: 474, column: 12, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5708, file: !920, line: 474, column: 5)
!5721 = !DILocation(line: 474, column: 10, scope: !5720)
!5722 = !DILocation(line: 474, column: 17, scope: !5723)
!5723 = !DILexicalBlockFile(scope: !5724, file: !920, discriminator: 1)
!5724 = distinct !DILexicalBlock(scope: !5720, file: !920, line: 474, column: 5)
!5725 = !DILocation(line: 474, column: 21, scope: !5723)
!5726 = !DILocation(line: 474, column: 19, scope: !5723)
!5727 = !DILocation(line: 474, column: 5, scope: !5723)
!5728 = !DILocalVariable(name: "Xret", scope: !5729, file: !920, line: 475, type: !1628)
!5729 = distinct !DILexicalBlock(scope: !5724, file: !920, line: 474, column: 29)
!5730 = !DILocation(line: 475, column: 21, scope: !5729)
!5731 = !DILocation(line: 475, column: 30, scope: !5729)
!5732 = !DILocation(line: 475, column: 28, scope: !5729)
!5733 = !DILocation(line: 476, column: 19, scope: !5729)
!5734 = !DILocation(line: 476, column: 17, scope: !5729)
!5735 = !DILocation(line: 476, column: 26, scope: !5729)
!5736 = !DILocation(line: 476, column: 24, scope: !5729)
!5737 = !DILocation(line: 476, column: 22, scope: !5729)
!5738 = !DILocation(line: 476, column: 16, scope: !5729)
!5739 = !DILocation(line: 476, column: 29, scope: !5729)
!5740 = !DILocation(line: 476, column: 11, scope: !5729)
!5741 = !DILocation(line: 476, column: 9, scope: !5729)
!5742 = !DILocation(line: 476, column: 14, scope: !5729)
!5743 = !DILocation(line: 477, column: 19, scope: !5729)
!5744 = !DILocation(line: 477, column: 17, scope: !5729)
!5745 = !DILocation(line: 477, column: 24, scope: !5729)
!5746 = !DILocation(line: 477, column: 22, scope: !5729)
!5747 = !DILocation(line: 477, column: 16, scope: !5729)
!5748 = !DILocation(line: 477, column: 29, scope: !5729)
!5749 = !DILocation(line: 477, column: 11, scope: !5729)
!5750 = !DILocation(line: 477, column: 9, scope: !5729)
!5751 = !DILocation(line: 477, column: 14, scope: !5729)
!5752 = !DILocation(line: 478, column: 5, scope: !5729)
!5753 = !DILocation(line: 474, column: 25, scope: !5754)
!5754 = !DILexicalBlockFile(scope: !5724, file: !920, discriminator: 2)
!5755 = !DILocation(line: 474, column: 5, scope: !5754)
!5756 = distinct !{!5756, !5757}
!5757 = !DILocation(line: 474, column: 5, scope: !5708)
!5758 = !DILocation(line: 479, column: 1, scope: !5708)
!5759 = distinct !DISubprogram(name: "celt_cos", scope: !920, file: !920, line: 32, type: !5760, isLocal: true, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!5760 = !DISubroutineType(types: !5761)
!5761 = !{!5762, !5762}
!5762 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !914, line: 37, baseType: !5763)
!5763 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!5764 = !DILocalVariable(name: "x", arg: 1, scope: !5759, file: !920, line: 32, type: !5762)
!5765 = !DILocation(line: 32, column: 40, scope: !5759)
!5766 = !DILocation(line: 34, column: 12, scope: !5759)
!5767 = !DILocation(line: 34, column: 11, scope: !5759)
!5768 = !DILocation(line: 34, column: 18, scope: !5759)
!5769 = !DILocation(line: 34, column: 17, scope: !5759)
!5770 = !DILocation(line: 34, column: 15, scope: !5759)
!5771 = !DILocation(line: 34, column: 22, scope: !5759)
!5772 = !DILocation(line: 34, column: 30, scope: !5759)
!5773 = !DILocation(line: 34, column: 9, scope: !5759)
!5774 = !DILocation(line: 34, column: 7, scope: !5759)
!5775 = !DILocation(line: 35, column: 16, scope: !5759)
!5776 = !DILocation(line: 35, column: 15, scope: !5759)
!5777 = !DILocation(line: 35, column: 25, scope: !5759)
!5778 = !DILocation(line: 35, column: 24, scope: !5759)
!5779 = !DILocation(line: 35, column: 44, scope: !5759)
!5780 = !DILocation(line: 35, column: 43, scope: !5759)
!5781 = !DILocation(line: 35, column: 71, scope: !5759)
!5782 = !DILocation(line: 35, column: 70, scope: !5759)
!5783 = !DILocation(line: 35, column: 68, scope: !5759)
!5784 = !DILocation(line: 35, column: 75, scope: !5759)
!5785 = !DILocation(line: 35, column: 84, scope: !5759)
!5786 = !DILocation(line: 35, column: 56, scope: !5759)
!5787 = !DILocation(line: 35, column: 47, scope: !5759)
!5788 = !DILocation(line: 35, column: 94, scope: !5759)
!5789 = !DILocation(line: 35, column: 103, scope: !5759)
!5790 = !DILocation(line: 35, column: 38, scope: !5759)
!5791 = !DILocation(line: 35, column: 28, scope: !5759)
!5792 = !DILocation(line: 35, column: 113, scope: !5759)
!5793 = !DILocation(line: 35, column: 122, scope: !5759)
!5794 = !DILocation(line: 35, column: 19, scope: !5759)
!5795 = !DILocation(line: 35, column: 9, scope: !5759)
!5796 = !DILocation(line: 35, column: 7, scope: !5759)
!5797 = !DILocation(line: 36, column: 12, scope: !5759)
!5798 = !DILocation(line: 36, column: 14, scope: !5759)
!5799 = !DILocation(line: 36, column: 5, scope: !5759)
!5800 = distinct !DISubprogram(name: "celt_log2tan", scope: !920, file: !920, line: 39, type: !5801, isLocal: true, isDefinition: true, scopeLine: 40, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!5801 = !DISubroutineType(types: !5802)
!5802 = !{!915, !915, !915}
!5803 = !DILocalVariable(name: "isin", arg: 1, scope: !5800, file: !920, line: 39, type: !915)
!5804 = !DILocation(line: 39, column: 36, scope: !5800)
!5805 = !DILocalVariable(name: "icos", arg: 2, scope: !5800, file: !920, line: 39, type: !915)
!5806 = !DILocation(line: 39, column: 46, scope: !5800)
!5807 = !DILocalVariable(name: "lc", scope: !5800, file: !920, line: 41, type: !915)
!5808 = !DILocation(line: 41, column: 9, scope: !5800)
!5809 = !DILocalVariable(name: "ls", scope: !5800, file: !920, line: 41, type: !915)
!5810 = !DILocation(line: 41, column: 13, scope: !5800)
!5811 = !DILocation(line: 42, column: 32, scope: !5800)
!5812 = !DILocation(line: 42, column: 37, scope: !5800)
!5813 = !DILocation(line: 42, column: 17, scope: !5800)
!5814 = !DILocation(line: 42, column: 15, scope: !5800)
!5815 = !DILocation(line: 42, column: 47, scope: !5800)
!5816 = !DILocation(line: 42, column: 45, scope: !5800)
!5817 = !DILocation(line: 42, column: 44, scope: !5800)
!5818 = !DILocation(line: 42, column: 42, scope: !5800)
!5819 = !DILocation(line: 42, column: 8, scope: !5800)
!5820 = !DILocation(line: 43, column: 32, scope: !5800)
!5821 = !DILocation(line: 43, column: 37, scope: !5800)
!5822 = !DILocation(line: 43, column: 17, scope: !5800)
!5823 = !DILocation(line: 43, column: 15, scope: !5800)
!5824 = !DILocation(line: 43, column: 47, scope: !5800)
!5825 = !DILocation(line: 43, column: 45, scope: !5800)
!5826 = !DILocation(line: 43, column: 44, scope: !5800)
!5827 = !DILocation(line: 43, column: 42, scope: !5800)
!5828 = !DILocation(line: 43, column: 8, scope: !5800)
!5829 = !DILocation(line: 44, column: 19, scope: !5800)
!5830 = !DILocation(line: 44, column: 17, scope: !5800)
!5831 = !DILocation(line: 44, column: 10, scope: !5800)
!5832 = !DILocation(line: 45, column: 19, scope: !5800)
!5833 = !DILocation(line: 45, column: 17, scope: !5800)
!5834 = !DILocation(line: 45, column: 10, scope: !5800)
!5835 = !DILocation(line: 46, column: 13, scope: !5800)
!5836 = !DILocation(line: 46, column: 16, scope: !5800)
!5837 = !DILocation(line: 46, column: 26, scope: !5800)
!5838 = !DILocation(line: 46, column: 29, scope: !5800)
!5839 = !DILocation(line: 46, column: 23, scope: !5800)
!5840 = !DILocation(line: 47, column: 16, scope: !5800)
!5841 = !DILocation(line: 47, column: 29, scope: !5800)
!5842 = !DILocation(line: 47, column: 35, scope: !5800)
!5843 = !DILocation(line: 47, column: 46, scope: !5800)
!5844 = !DILocation(line: 47, column: 55, scope: !5800)
!5845 = !DILocation(line: 47, column: 62, scope: !5800)
!5846 = !DILocation(line: 47, column: 22, scope: !5800)
!5847 = !DILocation(line: 47, column: 71, scope: !5800)
!5848 = !DILocation(line: 47, column: 80, scope: !5800)
!5849 = !DILocation(line: 46, column: 36, scope: !5800)
!5850 = !DILocation(line: 48, column: 16, scope: !5800)
!5851 = !DILocation(line: 48, column: 29, scope: !5800)
!5852 = !DILocation(line: 48, column: 35, scope: !5800)
!5853 = !DILocation(line: 48, column: 46, scope: !5800)
!5854 = !DILocation(line: 48, column: 55, scope: !5800)
!5855 = !DILocation(line: 48, column: 62, scope: !5800)
!5856 = !DILocation(line: 48, column: 22, scope: !5800)
!5857 = !DILocation(line: 48, column: 71, scope: !5800)
!5858 = !DILocation(line: 48, column: 80, scope: !5800)
!5859 = !DILocation(line: 47, column: 87, scope: !5800)
!5860 = !DILocation(line: 46, column: 5, scope: !5800)
!5861 = distinct !DISubprogram(name: "celt_bits2pulses", scope: !920, file: !920, line: 51, type: !5862, isLocal: true, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!5862 = !DISubroutineType(types: !5863)
!5863 = !{!915, !1445, !915}
!5864 = !DILocalVariable(name: "cache", arg: 1, scope: !5861, file: !920, line: 51, type: !1445)
!5865 = !DILocation(line: 51, column: 51, scope: !5861)
!5866 = !DILocalVariable(name: "bits", arg: 2, scope: !5861, file: !920, line: 51, type: !915)
!5867 = !DILocation(line: 51, column: 62, scope: !5861)
!5868 = !DILocalVariable(name: "i", scope: !5861, file: !920, line: 54, type: !915)
!5869 = !DILocation(line: 54, column: 9, scope: !5861)
!5870 = !DILocalVariable(name: "low", scope: !5861, file: !920, line: 54, type: !915)
!5871 = !DILocation(line: 54, column: 12, scope: !5861)
!5872 = !DILocalVariable(name: "high", scope: !5861, file: !920, line: 54, type: !915)
!5873 = !DILocation(line: 54, column: 21, scope: !5861)
!5874 = !DILocation(line: 56, column: 12, scope: !5861)
!5875 = !DILocation(line: 56, column: 10, scope: !5861)
!5876 = !DILocation(line: 57, column: 9, scope: !5861)
!5877 = !DILocation(line: 59, column: 12, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5861, file: !920, line: 59, column: 5)
!5879 = !DILocation(line: 59, column: 10, scope: !5878)
!5880 = !DILocation(line: 59, column: 17, scope: !5881)
!5881 = !DILexicalBlockFile(scope: !5882, file: !920, discriminator: 1)
!5882 = distinct !DILexicalBlock(scope: !5878, file: !920, line: 59, column: 5)
!5883 = !DILocation(line: 59, column: 19, scope: !5881)
!5884 = !DILocation(line: 59, column: 5, scope: !5881)
!5885 = !DILocalVariable(name: "center", scope: !5886, file: !920, line: 60, type: !915)
!5886 = distinct !DILexicalBlock(scope: !5882, file: !920, line: 59, column: 29)
!5887 = !DILocation(line: 60, column: 13, scope: !5886)
!5888 = !DILocation(line: 60, column: 23, scope: !5886)
!5889 = !DILocation(line: 60, column: 29, scope: !5886)
!5890 = !DILocation(line: 60, column: 27, scope: !5886)
!5891 = !DILocation(line: 60, column: 34, scope: !5886)
!5892 = !DILocation(line: 60, column: 39, scope: !5886)
!5893 = !DILocation(line: 61, column: 19, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5886, file: !920, line: 61, column: 13)
!5895 = !DILocation(line: 61, column: 13, scope: !5894)
!5896 = !DILocation(line: 61, column: 30, scope: !5894)
!5897 = !DILocation(line: 61, column: 27, scope: !5894)
!5898 = !DILocation(line: 61, column: 13, scope: !5886)
!5899 = !DILocation(line: 62, column: 20, scope: !5894)
!5900 = !DILocation(line: 62, column: 18, scope: !5894)
!5901 = !DILocation(line: 62, column: 13, scope: !5894)
!5902 = !DILocation(line: 64, column: 19, scope: !5894)
!5903 = !DILocation(line: 64, column: 17, scope: !5894)
!5904 = !DILocation(line: 65, column: 5, scope: !5886)
!5905 = !DILocation(line: 59, column: 25, scope: !5906)
!5906 = !DILexicalBlockFile(scope: !5882, file: !920, discriminator: 2)
!5907 = !DILocation(line: 59, column: 5, scope: !5906)
!5908 = distinct !{!5908, !5909}
!5909 = !DILocation(line: 59, column: 5, scope: !5861)
!5910 = !DILocation(line: 67, column: 13, scope: !5861)
!5911 = !DILocation(line: 67, column: 21, scope: !5861)
!5912 = !DILocation(line: 67, column: 25, scope: !5861)
!5913 = !DILocation(line: 67, column: 21, scope: !5914)
!5914 = !DILexicalBlockFile(scope: !5861, file: !920, discriminator: 1)
!5915 = !DILocation(line: 67, column: 43, scope: !5916)
!5916 = !DILexicalBlockFile(scope: !5861, file: !920, discriminator: 2)
!5917 = !DILocation(line: 67, column: 37, scope: !5916)
!5918 = !DILocation(line: 67, column: 21, scope: !5916)
!5919 = !DILocation(line: 67, column: 21, scope: !5920)
!5920 = !DILexicalBlockFile(scope: !5861, file: !920, discriminator: 3)
!5921 = !DILocation(line: 67, column: 18, scope: !5920)
!5922 = !DILocation(line: 67, column: 58, scope: !5920)
!5923 = !DILocation(line: 67, column: 52, scope: !5920)
!5924 = !DILocation(line: 67, column: 66, scope: !5920)
!5925 = !DILocation(line: 67, column: 64, scope: !5920)
!5926 = !DILocation(line: 67, column: 49, scope: !5920)
!5927 = !DILocation(line: 67, column: 12, scope: !5920)
!5928 = !DILocation(line: 67, column: 74, scope: !5929)
!5929 = !DILexicalBlockFile(scope: !5861, file: !920, discriminator: 4)
!5930 = !DILocation(line: 67, column: 12, scope: !5929)
!5931 = !DILocation(line: 67, column: 80, scope: !5932)
!5932 = !DILexicalBlockFile(scope: !5861, file: !920, discriminator: 5)
!5933 = !DILocation(line: 67, column: 12, scope: !5932)
!5934 = !DILocation(line: 67, column: 12, scope: !5935)
!5935 = !DILexicalBlockFile(scope: !5861, file: !920, discriminator: 6)
!5936 = !DILocation(line: 67, column: 5, scope: !5935)
!5937 = distinct !DISubprogram(name: "celt_pulses2bits", scope: !920, file: !920, line: 70, type: !5862, isLocal: true, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!5938 = !DILocalVariable(name: "cache", arg: 1, scope: !5937, file: !920, line: 70, type: !1445)
!5939 = !DILocation(line: 70, column: 51, scope: !5937)
!5940 = !DILocalVariable(name: "pulses", arg: 2, scope: !5937, file: !920, line: 70, type: !915)
!5941 = !DILocation(line: 70, column: 62, scope: !5937)
!5942 = !DILocation(line: 73, column: 12, scope: !5937)
!5943 = !DILocation(line: 73, column: 19, scope: !5937)
!5944 = !DILocation(line: 73, column: 11, scope: !5937)
!5945 = !DILocation(line: 73, column: 11, scope: !5946)
!5946 = !DILexicalBlockFile(scope: !5937, file: !920, discriminator: 1)
!5947 = !DILocation(line: 73, column: 37, scope: !5948)
!5948 = !DILexicalBlockFile(scope: !5937, file: !920, discriminator: 2)
!5949 = !DILocation(line: 73, column: 31, scope: !5948)
!5950 = !DILocation(line: 73, column: 45, scope: !5948)
!5951 = !DILocation(line: 73, column: 11, scope: !5948)
!5952 = !DILocation(line: 73, column: 11, scope: !5953)
!5953 = !DILexicalBlockFile(scope: !5937, file: !920, discriminator: 3)
!5954 = !DILocation(line: 73, column: 4, scope: !5953)
!5955 = distinct !DISubprogram(name: "celt_alg_quant", scope: !920, file: !920, line: 415, type: !5956, isLocal: true, isDefinition: true, scopeLine: 418, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!5956 = !DISubroutineType(types: !5957)
!5957 = !{!945, !1751, !939, !945, !945, !905, !945, !912, !924}
!5958 = !DILocalVariable(name: "rc", arg: 1, scope: !5955, file: !920, line: 415, type: !1751)
!5959 = !DILocation(line: 415, column: 48, scope: !5955)
!5960 = !DILocalVariable(name: "X", arg: 2, scope: !5955, file: !920, line: 415, type: !939)
!5961 = !DILocation(line: 415, column: 59, scope: !5955)
!5962 = !DILocalVariable(name: "N", arg: 3, scope: !5955, file: !920, line: 415, type: !945)
!5963 = !DILocation(line: 415, column: 71, scope: !5955)
!5964 = !DILocalVariable(name: "K", arg: 4, scope: !5955, file: !920, line: 415, type: !945)
!5965 = !DILocation(line: 415, column: 83, scope: !5955)
!5966 = !DILocalVariable(name: "spread", arg: 5, scope: !5955, file: !920, line: 416, type: !905)
!5967 = !DILocation(line: 416, column: 48, scope: !5955)
!5968 = !DILocalVariable(name: "blocks", arg: 6, scope: !5955, file: !920, line: 416, type: !945)
!5969 = !DILocation(line: 416, column: 65, scope: !5955)
!5970 = !DILocalVariable(name: "gain", arg: 7, scope: !5955, file: !920, line: 416, type: !912)
!5971 = !DILocation(line: 416, column: 79, scope: !5955)
!5972 = !DILocalVariable(name: "pvq", arg: 8, scope: !5955, file: !920, line: 417, type: !924)
!5973 = !DILocation(line: 417, column: 41, scope: !5955)
!5974 = !DILocalVariable(name: "y", scope: !5955, file: !920, line: 419, type: !940)
!5975 = !DILocation(line: 419, column: 10, scope: !5955)
!5976 = !DILocation(line: 419, column: 14, scope: !5955)
!5977 = !DILocation(line: 419, column: 19, scope: !5955)
!5978 = !DILocation(line: 421, column: 23, scope: !5955)
!5979 = !DILocation(line: 421, column: 26, scope: !5955)
!5980 = !DILocation(line: 421, column: 29, scope: !5955)
!5981 = !DILocation(line: 421, column: 37, scope: !5955)
!5982 = !DILocation(line: 421, column: 40, scope: !5955)
!5983 = !DILocation(line: 421, column: 5, scope: !5955)
!5984 = !DILocation(line: 422, column: 19, scope: !5955)
!5985 = !DILocation(line: 422, column: 24, scope: !5955)
!5986 = !DILocation(line: 422, column: 35, scope: !5955)
!5987 = !DILocation(line: 422, column: 38, scope: !5955)
!5988 = !DILocation(line: 422, column: 41, scope: !5955)
!5989 = !DILocation(line: 422, column: 44, scope: !5955)
!5990 = !DILocation(line: 422, column: 13, scope: !5991)
!5991 = !DILexicalBlockFile(scope: !5955, file: !920, discriminator: 1)
!5992 = !DILocation(line: 422, column: 10, scope: !5955)
!5993 = !DILocation(line: 423, column: 24, scope: !5955)
!5994 = !DILocation(line: 423, column: 28, scope: !5955)
!5995 = !DILocation(line: 423, column: 31, scope: !5955)
!5996 = !DILocation(line: 423, column: 34, scope: !5955)
!5997 = !DILocation(line: 423, column: 5, scope: !5955)
!5998 = !DILocation(line: 424, column: 29, scope: !5955)
!5999 = !DILocation(line: 424, column: 32, scope: !5955)
!6000 = !DILocation(line: 424, column: 35, scope: !5955)
!6001 = !DILocation(line: 424, column: 38, scope: !5955)
!6002 = !DILocation(line: 424, column: 5, scope: !5955)
!6003 = !DILocation(line: 425, column: 23, scope: !5955)
!6004 = !DILocation(line: 425, column: 26, scope: !5955)
!6005 = !DILocation(line: 425, column: 29, scope: !5955)
!6006 = !DILocation(line: 425, column: 37, scope: !5955)
!6007 = !DILocation(line: 425, column: 40, scope: !5955)
!6008 = !DILocation(line: 425, column: 5, scope: !5955)
!6009 = !DILocation(line: 426, column: 39, scope: !5955)
!6010 = !DILocation(line: 426, column: 42, scope: !5955)
!6011 = !DILocation(line: 426, column: 45, scope: !5955)
!6012 = !DILocation(line: 426, column: 12, scope: !5955)
!6013 = !DILocation(line: 426, column: 5, scope: !5955)
!6014 = distinct !DISubprogram(name: "celt_alg_unquant", scope: !920, file: !920, line: 431, type: !5956, isLocal: true, isDefinition: true, scopeLine: 434, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!6015 = !DILocalVariable(name: "rc", arg: 1, scope: !6014, file: !920, line: 431, type: !1751)
!6016 = !DILocation(line: 431, column: 50, scope: !6014)
!6017 = !DILocalVariable(name: "X", arg: 2, scope: !6014, file: !920, line: 431, type: !939)
!6018 = !DILocation(line: 431, column: 61, scope: !6014)
!6019 = !DILocalVariable(name: "N", arg: 3, scope: !6014, file: !920, line: 431, type: !945)
!6020 = !DILocation(line: 431, column: 73, scope: !6014)
!6021 = !DILocalVariable(name: "K", arg: 4, scope: !6014, file: !920, line: 431, type: !945)
!6022 = !DILocation(line: 431, column: 85, scope: !6014)
!6023 = !DILocalVariable(name: "spread", arg: 5, scope: !6014, file: !920, line: 432, type: !905)
!6024 = !DILocation(line: 432, column: 50, scope: !6014)
!6025 = !DILocalVariable(name: "blocks", arg: 6, scope: !6014, file: !920, line: 432, type: !945)
!6026 = !DILocation(line: 432, column: 67, scope: !6014)
!6027 = !DILocalVariable(name: "gain", arg: 7, scope: !6014, file: !920, line: 432, type: !912)
!6028 = !DILocation(line: 432, column: 81, scope: !6014)
!6029 = !DILocalVariable(name: "pvq", arg: 8, scope: !6014, file: !920, line: 433, type: !924)
!6030 = !DILocation(line: 433, column: 43, scope: !6014)
!6031 = !DILocalVariable(name: "y", scope: !6014, file: !920, line: 435, type: !940)
!6032 = !DILocation(line: 435, column: 10, scope: !6014)
!6033 = !DILocation(line: 435, column: 14, scope: !6014)
!6034 = !DILocation(line: 435, column: 19, scope: !6014)
!6035 = !DILocation(line: 437, column: 38, scope: !6014)
!6036 = !DILocation(line: 437, column: 42, scope: !6014)
!6037 = !DILocation(line: 437, column: 45, scope: !6014)
!6038 = !DILocation(line: 437, column: 48, scope: !6014)
!6039 = !DILocation(line: 437, column: 19, scope: !6014)
!6040 = !DILocation(line: 437, column: 13, scope: !6041)
!6041 = !DILexicalBlockFile(scope: !6014, file: !920, discriminator: 1)
!6042 = !DILocation(line: 437, column: 10, scope: !6014)
!6043 = !DILocation(line: 438, column: 29, scope: !6014)
!6044 = !DILocation(line: 438, column: 32, scope: !6014)
!6045 = !DILocation(line: 438, column: 35, scope: !6014)
!6046 = !DILocation(line: 438, column: 38, scope: !6014)
!6047 = !DILocation(line: 438, column: 5, scope: !6014)
!6048 = !DILocation(line: 439, column: 23, scope: !6014)
!6049 = !DILocation(line: 439, column: 26, scope: !6014)
!6050 = !DILocation(line: 439, column: 29, scope: !6014)
!6051 = !DILocation(line: 439, column: 37, scope: !6014)
!6052 = !DILocation(line: 439, column: 40, scope: !6014)
!6053 = !DILocation(line: 439, column: 5, scope: !6014)
!6054 = !DILocation(line: 440, column: 39, scope: !6014)
!6055 = !DILocation(line: 440, column: 42, scope: !6014)
!6056 = !DILocation(line: 440, column: 45, scope: !6014)
!6057 = !DILocation(line: 440, column: 12, scope: !6014)
!6058 = !DILocation(line: 440, column: 5, scope: !6014)
!6059 = distinct !DISubprogram(name: "celt_stereo_merge", scope: !920, file: !920, line: 161, type: !6060, isLocal: true, isDefinition: true, scopeLine: 162, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!6060 = !DISubroutineType(types: !6061)
!6061 = !{null, !939, !939, !912, !915}
!6062 = !DILocalVariable(name: "X", arg: 1, scope: !6059, file: !920, line: 161, type: !939)
!6063 = !DILocation(line: 161, column: 45, scope: !6059)
!6064 = !DILocalVariable(name: "Y", arg: 2, scope: !6059, file: !920, line: 161, type: !939)
!6065 = !DILocation(line: 161, column: 55, scope: !6059)
!6066 = !DILocalVariable(name: "mid", arg: 3, scope: !6059, file: !920, line: 161, type: !912)
!6067 = !DILocation(line: 161, column: 64, scope: !6059)
!6068 = !DILocalVariable(name: "N", arg: 4, scope: !6059, file: !920, line: 161, type: !915)
!6069 = !DILocation(line: 161, column: 73, scope: !6059)
!6070 = !DILocalVariable(name: "i", scope: !6059, file: !920, line: 163, type: !915)
!6071 = !DILocation(line: 163, column: 9, scope: !6059)
!6072 = !DILocalVariable(name: "xp", scope: !6059, file: !920, line: 164, type: !912)
!6073 = !DILocation(line: 164, column: 11, scope: !6059)
!6074 = !DILocalVariable(name: "side", scope: !6059, file: !920, line: 164, type: !912)
!6075 = !DILocation(line: 164, column: 19, scope: !6059)
!6076 = !DILocalVariable(name: "E", scope: !6059, file: !920, line: 165, type: !5437)
!6077 = !DILocation(line: 165, column: 11, scope: !6059)
!6078 = !DILocalVariable(name: "mid2", scope: !6059, file: !920, line: 166, type: !912)
!6079 = !DILocation(line: 166, column: 11, scope: !6059)
!6080 = !DILocalVariable(name: "gain", scope: !6059, file: !920, line: 167, type: !5437)
!6081 = !DILocation(line: 167, column: 11, scope: !6059)
!6082 = !DILocation(line: 170, column: 12, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6059, file: !920, line: 170, column: 5)
!6084 = !DILocation(line: 170, column: 10, scope: !6083)
!6085 = !DILocation(line: 170, column: 17, scope: !6086)
!6086 = !DILexicalBlockFile(scope: !6087, file: !920, discriminator: 1)
!6087 = distinct !DILexicalBlock(scope: !6083, file: !920, line: 170, column: 5)
!6088 = !DILocation(line: 170, column: 21, scope: !6086)
!6089 = !DILocation(line: 170, column: 19, scope: !6086)
!6090 = !DILocation(line: 170, column: 5, scope: !6086)
!6091 = !DILocation(line: 171, column: 17, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6087, file: !920, line: 170, column: 29)
!6093 = !DILocation(line: 171, column: 15, scope: !6092)
!6094 = !DILocation(line: 171, column: 24, scope: !6092)
!6095 = !DILocation(line: 171, column: 22, scope: !6092)
!6096 = !DILocation(line: 171, column: 20, scope: !6092)
!6097 = !DILocation(line: 171, column: 12, scope: !6092)
!6098 = !DILocation(line: 172, column: 19, scope: !6092)
!6099 = !DILocation(line: 172, column: 17, scope: !6092)
!6100 = !DILocation(line: 172, column: 26, scope: !6092)
!6101 = !DILocation(line: 172, column: 24, scope: !6092)
!6102 = !DILocation(line: 172, column: 22, scope: !6092)
!6103 = !DILocation(line: 172, column: 14, scope: !6092)
!6104 = !DILocation(line: 173, column: 5, scope: !6092)
!6105 = !DILocation(line: 170, column: 25, scope: !6106)
!6106 = !DILexicalBlockFile(scope: !6087, file: !920, discriminator: 2)
!6107 = !DILocation(line: 170, column: 5, scope: !6106)
!6108 = distinct !{!6108, !6109}
!6109 = !DILocation(line: 170, column: 5, scope: !6059)
!6110 = !DILocation(line: 176, column: 11, scope: !6059)
!6111 = !DILocation(line: 176, column: 8, scope: !6059)
!6112 = !DILocation(line: 177, column: 12, scope: !6059)
!6113 = !DILocation(line: 177, column: 10, scope: !6059)
!6114 = !DILocation(line: 178, column: 12, scope: !6059)
!6115 = !DILocation(line: 178, column: 19, scope: !6059)
!6116 = !DILocation(line: 178, column: 17, scope: !6059)
!6117 = !DILocation(line: 178, column: 26, scope: !6059)
!6118 = !DILocation(line: 178, column: 24, scope: !6059)
!6119 = !DILocation(line: 178, column: 37, scope: !6059)
!6120 = !DILocation(line: 178, column: 35, scope: !6059)
!6121 = !DILocation(line: 178, column: 31, scope: !6059)
!6122 = !DILocation(line: 178, column: 5, scope: !6059)
!6123 = !DILocation(line: 178, column: 10, scope: !6059)
!6124 = !DILocation(line: 179, column: 12, scope: !6059)
!6125 = !DILocation(line: 179, column: 19, scope: !6059)
!6126 = !DILocation(line: 179, column: 17, scope: !6059)
!6127 = !DILocation(line: 179, column: 26, scope: !6059)
!6128 = !DILocation(line: 179, column: 24, scope: !6059)
!6129 = !DILocation(line: 179, column: 37, scope: !6059)
!6130 = !DILocation(line: 179, column: 35, scope: !6059)
!6131 = !DILocation(line: 179, column: 31, scope: !6059)
!6132 = !DILocation(line: 179, column: 5, scope: !6059)
!6133 = !DILocation(line: 179, column: 10, scope: !6059)
!6134 = !DILocation(line: 180, column: 9, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6059, file: !920, line: 180, column: 9)
!6136 = !DILocation(line: 180, column: 14, scope: !6135)
!6137 = !DILocation(line: 180, column: 22, scope: !6135)
!6138 = !DILocation(line: 180, column: 25, scope: !6139)
!6139 = !DILexicalBlockFile(scope: !6135, file: !920, discriminator: 1)
!6140 = !DILocation(line: 180, column: 30, scope: !6139)
!6141 = !DILocation(line: 180, column: 9, scope: !6139)
!6142 = !DILocation(line: 181, column: 16, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6144, file: !920, line: 181, column: 9)
!6144 = distinct !DILexicalBlock(scope: !6135, file: !920, line: 180, column: 39)
!6145 = !DILocation(line: 181, column: 14, scope: !6143)
!6146 = !DILocation(line: 181, column: 21, scope: !6147)
!6147 = !DILexicalBlockFile(scope: !6148, file: !920, discriminator: 1)
!6148 = distinct !DILexicalBlock(scope: !6143, file: !920, line: 181, column: 9)
!6149 = !DILocation(line: 181, column: 25, scope: !6147)
!6150 = !DILocation(line: 181, column: 23, scope: !6147)
!6151 = !DILocation(line: 181, column: 9, scope: !6147)
!6152 = !DILocation(line: 182, column: 22, scope: !6148)
!6153 = !DILocation(line: 182, column: 20, scope: !6148)
!6154 = !DILocation(line: 182, column: 15, scope: !6148)
!6155 = !DILocation(line: 182, column: 13, scope: !6148)
!6156 = !DILocation(line: 182, column: 18, scope: !6148)
!6157 = !DILocation(line: 181, column: 29, scope: !6158)
!6158 = !DILexicalBlockFile(scope: !6148, file: !920, discriminator: 2)
!6159 = !DILocation(line: 181, column: 9, scope: !6158)
!6160 = distinct !{!6160, !6161}
!6161 = !DILocation(line: 181, column: 9, scope: !6144)
!6162 = !DILocation(line: 183, column: 9, scope: !6144)
!6163 = !DILocation(line: 186, column: 28, scope: !6059)
!6164 = !DILocation(line: 186, column: 22, scope: !6059)
!6165 = !DILocation(line: 186, column: 20, scope: !6059)
!6166 = !DILocation(line: 186, column: 5, scope: !6059)
!6167 = !DILocation(line: 186, column: 13, scope: !6059)
!6168 = !DILocation(line: 187, column: 28, scope: !6059)
!6169 = !DILocation(line: 187, column: 22, scope: !6059)
!6170 = !DILocation(line: 187, column: 20, scope: !6059)
!6171 = !DILocation(line: 187, column: 5, scope: !6059)
!6172 = !DILocation(line: 187, column: 13, scope: !6059)
!6173 = !DILocation(line: 189, column: 12, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6059, file: !920, line: 189, column: 5)
!6175 = !DILocation(line: 189, column: 10, scope: !6174)
!6176 = !DILocation(line: 189, column: 17, scope: !6177)
!6177 = !DILexicalBlockFile(scope: !6178, file: !920, discriminator: 1)
!6178 = distinct !DILexicalBlock(scope: !6174, file: !920, line: 189, column: 5)
!6179 = !DILocation(line: 189, column: 21, scope: !6177)
!6180 = !DILocation(line: 189, column: 19, scope: !6177)
!6181 = !DILocation(line: 189, column: 5, scope: !6177)
!6182 = !DILocalVariable(name: "value", scope: !6183, file: !920, line: 190, type: !5437)
!6183 = distinct !DILexicalBlock(scope: !6178, file: !920, line: 189, column: 29)
!6184 = !DILocation(line: 190, column: 15, scope: !6183)
!6185 = !DILocation(line: 192, column: 20, scope: !6183)
!6186 = !DILocation(line: 192, column: 28, scope: !6183)
!6187 = !DILocation(line: 192, column: 26, scope: !6183)
!6188 = !DILocation(line: 192, column: 24, scope: !6183)
!6189 = !DILocation(line: 192, column: 9, scope: !6183)
!6190 = !DILocation(line: 192, column: 18, scope: !6183)
!6191 = !DILocation(line: 193, column: 22, scope: !6183)
!6192 = !DILocation(line: 193, column: 20, scope: !6183)
!6193 = !DILocation(line: 193, column: 9, scope: !6183)
!6194 = !DILocation(line: 193, column: 18, scope: !6183)
!6195 = !DILocation(line: 194, column: 16, scope: !6183)
!6196 = !DILocation(line: 194, column: 27, scope: !6183)
!6197 = !DILocation(line: 194, column: 38, scope: !6183)
!6198 = !DILocation(line: 194, column: 36, scope: !6183)
!6199 = !DILocation(line: 194, column: 24, scope: !6183)
!6200 = !DILocation(line: 194, column: 11, scope: !6183)
!6201 = !DILocation(line: 194, column: 9, scope: !6183)
!6202 = !DILocation(line: 194, column: 14, scope: !6183)
!6203 = !DILocation(line: 195, column: 16, scope: !6183)
!6204 = !DILocation(line: 195, column: 27, scope: !6183)
!6205 = !DILocation(line: 195, column: 38, scope: !6183)
!6206 = !DILocation(line: 195, column: 36, scope: !6183)
!6207 = !DILocation(line: 195, column: 24, scope: !6183)
!6208 = !DILocation(line: 195, column: 11, scope: !6183)
!6209 = !DILocation(line: 195, column: 9, scope: !6183)
!6210 = !DILocation(line: 195, column: 14, scope: !6183)
!6211 = !DILocation(line: 196, column: 5, scope: !6183)
!6212 = !DILocation(line: 189, column: 25, scope: !6213)
!6213 = !DILexicalBlockFile(scope: !6178, file: !920, discriminator: 2)
!6214 = !DILocation(line: 189, column: 5, scope: !6213)
!6215 = distinct !{!6215, !6216}
!6216 = !DILocation(line: 189, column: 5, scope: !6059)
!6217 = !DILocation(line: 197, column: 1, scope: !6059)
!6218 = distinct !DISubprogram(name: "celt_interleave_hadamard", scope: !920, file: !920, line: 199, type: !5339, isLocal: true, isDefinition: true, scopeLine: 201, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!6219 = !DILocalVariable(name: "tmp", arg: 1, scope: !6218, file: !920, line: 199, type: !939)
!6220 = !DILocation(line: 199, column: 45, scope: !6218)
!6221 = !DILocalVariable(name: "X", arg: 2, scope: !6218, file: !920, line: 199, type: !939)
!6222 = !DILocation(line: 199, column: 57, scope: !6218)
!6223 = !DILocalVariable(name: "N0", arg: 3, scope: !6218, file: !920, line: 199, type: !915)
!6224 = !DILocation(line: 199, column: 64, scope: !6218)
!6225 = !DILocalVariable(name: "stride", arg: 4, scope: !6218, file: !920, line: 200, type: !915)
!6226 = !DILocation(line: 200, column: 42, scope: !6218)
!6227 = !DILocalVariable(name: "hadamard", arg: 5, scope: !6218, file: !920, line: 200, type: !915)
!6228 = !DILocation(line: 200, column: 54, scope: !6218)
!6229 = !DILocalVariable(name: "i", scope: !6218, file: !920, line: 202, type: !915)
!6230 = !DILocation(line: 202, column: 9, scope: !6218)
!6231 = !DILocalVariable(name: "j", scope: !6218, file: !920, line: 202, type: !915)
!6232 = !DILocation(line: 202, column: 12, scope: !6218)
!6233 = !DILocalVariable(name: "N", scope: !6218, file: !920, line: 202, type: !915)
!6234 = !DILocation(line: 202, column: 15, scope: !6218)
!6235 = !DILocation(line: 202, column: 19, scope: !6218)
!6236 = !DILocation(line: 202, column: 22, scope: !6218)
!6237 = !DILocation(line: 202, column: 21, scope: !6218)
!6238 = !DILocalVariable(name: "order", scope: !6218, file: !920, line: 203, type: !1445)
!6239 = !DILocation(line: 203, column: 20, scope: !6218)
!6240 = !DILocation(line: 203, column: 52, scope: !6218)
!6241 = !DILocation(line: 203, column: 63, scope: !6242)
!6242 = !DILexicalBlockFile(scope: !6218, file: !920, discriminator: 1)
!6243 = !DILocation(line: 203, column: 70, scope: !6242)
!6244 = !DILocation(line: 203, column: 52, scope: !6242)
!6245 = !DILocation(line: 203, column: 52, scope: !6246)
!6246 = !DILexicalBlockFile(scope: !6218, file: !920, discriminator: 2)
!6247 = !DILocation(line: 203, column: 52, scope: !6248)
!6248 = !DILexicalBlockFile(scope: !6218, file: !920, discriminator: 3)
!6249 = !DILocation(line: 203, column: 29, scope: !6248)
!6250 = !DILocation(line: 203, column: 20, scope: !6248)
!6251 = !DILocation(line: 205, column: 12, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6218, file: !920, line: 205, column: 5)
!6253 = !DILocation(line: 205, column: 10, scope: !6252)
!6254 = !DILocation(line: 205, column: 17, scope: !6255)
!6255 = !DILexicalBlockFile(scope: !6256, file: !920, discriminator: 1)
!6256 = distinct !DILexicalBlock(scope: !6252, file: !920, line: 205, column: 5)
!6257 = !DILocation(line: 205, column: 21, scope: !6255)
!6258 = !DILocation(line: 205, column: 19, scope: !6255)
!6259 = !DILocation(line: 205, column: 5, scope: !6255)
!6260 = !DILocation(line: 206, column: 16, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6256, file: !920, line: 206, column: 9)
!6262 = !DILocation(line: 206, column: 14, scope: !6261)
!6263 = !DILocation(line: 206, column: 21, scope: !6264)
!6264 = !DILexicalBlockFile(scope: !6265, file: !920, discriminator: 1)
!6265 = distinct !DILexicalBlock(scope: !6261, file: !920, line: 206, column: 9)
!6266 = !DILocation(line: 206, column: 25, scope: !6264)
!6267 = !DILocation(line: 206, column: 23, scope: !6264)
!6268 = !DILocation(line: 206, column: 9, scope: !6264)
!6269 = !DILocation(line: 207, column: 39, scope: !6265)
!6270 = !DILocation(line: 207, column: 33, scope: !6265)
!6271 = !DILocation(line: 207, column: 42, scope: !6265)
!6272 = !DILocation(line: 207, column: 41, scope: !6265)
!6273 = !DILocation(line: 207, column: 45, scope: !6265)
!6274 = !DILocation(line: 207, column: 44, scope: !6265)
!6275 = !DILocation(line: 207, column: 31, scope: !6265)
!6276 = !DILocation(line: 207, column: 17, scope: !6265)
!6277 = !DILocation(line: 207, column: 19, scope: !6265)
!6278 = !DILocation(line: 207, column: 18, scope: !6265)
!6279 = !DILocation(line: 207, column: 26, scope: !6265)
!6280 = !DILocation(line: 207, column: 25, scope: !6265)
!6281 = !DILocation(line: 207, column: 13, scope: !6265)
!6282 = !DILocation(line: 207, column: 29, scope: !6265)
!6283 = !DILocation(line: 206, column: 30, scope: !6284)
!6284 = !DILexicalBlockFile(scope: !6265, file: !920, discriminator: 2)
!6285 = !DILocation(line: 206, column: 9, scope: !6284)
!6286 = distinct !{!6286, !6287}
!6287 = !DILocation(line: 206, column: 9, scope: !6256)
!6288 = !DILocation(line: 207, column: 46, scope: !6289)
!6289 = !DILexicalBlockFile(scope: !6261, file: !920, discriminator: 1)
!6290 = !DILocation(line: 205, column: 30, scope: !6291)
!6291 = !DILexicalBlockFile(scope: !6256, file: !920, discriminator: 2)
!6292 = !DILocation(line: 205, column: 5, scope: !6291)
!6293 = distinct !{!6293, !6294}
!6294 = !DILocation(line: 205, column: 5, scope: !6218)
!6295 = !DILocation(line: 209, column: 12, scope: !6218)
!6296 = !DILocation(line: 209, column: 5, scope: !6218)
!6297 = !DILocation(line: 209, column: 15, scope: !6218)
!6298 = !DILocation(line: 209, column: 20, scope: !6218)
!6299 = !DILocation(line: 209, column: 21, scope: !6218)
!6300 = !DILocation(line: 210, column: 1, scope: !6218)
!6301 = distinct !DISubprogram(name: "celt_exp_rotation", scope: !920, file: !920, line: 107, type: !6302, isLocal: true, isDefinition: true, scopeLine: 110, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!6302 = !DISubroutineType(types: !6303)
!6303 = !{null, !939, !945, !945, !945, !905, !1029}
!6304 = !DILocalVariable(name: "X", arg: 1, scope: !6301, file: !920, line: 107, type: !939)
!6305 = !DILocation(line: 107, column: 45, scope: !6301)
!6306 = !DILocalVariable(name: "len", arg: 2, scope: !6301, file: !920, line: 107, type: !945)
!6307 = !DILocation(line: 107, column: 57, scope: !6301)
!6308 = !DILocalVariable(name: "stride", arg: 3, scope: !6301, file: !920, line: 108, type: !945)
!6309 = !DILocation(line: 108, column: 47, scope: !6301)
!6310 = !DILocalVariable(name: "K", arg: 4, scope: !6301, file: !920, line: 108, type: !945)
!6311 = !DILocation(line: 108, column: 64, scope: !6301)
!6312 = !DILocalVariable(name: "spread", arg: 5, scope: !6301, file: !920, line: 109, type: !905)
!6313 = !DILocation(line: 109, column: 54, scope: !6301)
!6314 = !DILocalVariable(name: "encode", arg: 6, scope: !6301, file: !920, line: 109, type: !1029)
!6315 = !DILocation(line: 109, column: 72, scope: !6301)
!6316 = !DILocalVariable(name: "stride2", scope: !6301, file: !920, line: 111, type: !945)
!6317 = !DILocation(line: 111, column: 14, scope: !6301)
!6318 = !DILocalVariable(name: "c", scope: !6301, file: !920, line: 112, type: !912)
!6319 = !DILocation(line: 112, column: 11, scope: !6301)
!6320 = !DILocalVariable(name: "s", scope: !6301, file: !920, line: 112, type: !912)
!6321 = !DILocation(line: 112, column: 14, scope: !6301)
!6322 = !DILocalVariable(name: "gain", scope: !6301, file: !920, line: 113, type: !912)
!6323 = !DILocation(line: 113, column: 11, scope: !6301)
!6324 = !DILocalVariable(name: "theta", scope: !6301, file: !920, line: 113, type: !912)
!6325 = !DILocation(line: 113, column: 17, scope: !6301)
!6326 = !DILocalVariable(name: "i", scope: !6301, file: !920, line: 114, type: !915)
!6327 = !DILocation(line: 114, column: 9, scope: !6301)
!6328 = !DILocation(line: 116, column: 11, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6301, file: !920, line: 116, column: 9)
!6330 = !DILocation(line: 116, column: 10, scope: !6329)
!6331 = !DILocation(line: 116, column: 16, scope: !6329)
!6332 = !DILocation(line: 116, column: 13, scope: !6329)
!6333 = !DILocation(line: 116, column: 20, scope: !6329)
!6334 = !DILocation(line: 116, column: 23, scope: !6335)
!6335 = !DILexicalBlockFile(scope: !6329, file: !920, discriminator: 1)
!6336 = !DILocation(line: 116, column: 30, scope: !6335)
!6337 = !DILocation(line: 116, column: 9, scope: !6335)
!6338 = !DILocation(line: 117, column: 9, scope: !6329)
!6339 = !DILocation(line: 119, column: 19, scope: !6301)
!6340 = !DILocation(line: 119, column: 12, scope: !6301)
!6341 = !DILocation(line: 119, column: 26, scope: !6301)
!6342 = !DILocation(line: 119, column: 40, scope: !6301)
!6343 = !DILocation(line: 119, column: 39, scope: !6301)
!6344 = !DILocation(line: 119, column: 36, scope: !6301)
!6345 = !DILocation(line: 119, column: 50, scope: !6301)
!6346 = !DILocation(line: 119, column: 48, scope: !6301)
!6347 = !DILocation(line: 119, column: 30, scope: !6301)
!6348 = !DILocation(line: 119, column: 25, scope: !6301)
!6349 = !DILocation(line: 119, column: 23, scope: !6301)
!6350 = !DILocation(line: 119, column: 10, scope: !6301)
!6351 = !DILocation(line: 120, column: 19, scope: !6301)
!6352 = !DILocation(line: 120, column: 17, scope: !6301)
!6353 = !DILocation(line: 120, column: 26, scope: !6301)
!6354 = !DILocation(line: 120, column: 24, scope: !6301)
!6355 = !DILocation(line: 120, column: 31, scope: !6301)
!6356 = !DILocation(line: 120, column: 12, scope: !6301)
!6357 = !DILocation(line: 120, column: 11, scope: !6301)
!6358 = !DILocation(line: 122, column: 14, scope: !6301)
!6359 = !DILocation(line: 122, column: 9, scope: !6301)
!6360 = !DILocation(line: 122, column: 7, scope: !6301)
!6361 = !DILocation(line: 123, column: 14, scope: !6301)
!6362 = !DILocation(line: 123, column: 9, scope: !6301)
!6363 = !DILocation(line: 123, column: 7, scope: !6301)
!6364 = !DILocation(line: 125, column: 9, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6301, file: !920, line: 125, column: 9)
!6366 = !DILocation(line: 125, column: 16, scope: !6365)
!6367 = !DILocation(line: 125, column: 23, scope: !6365)
!6368 = !DILocation(line: 125, column: 13, scope: !6365)
!6369 = !DILocation(line: 125, column: 9, scope: !6301)
!6370 = !DILocation(line: 126, column: 17, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6365, file: !920, line: 125, column: 29)
!6372 = !DILocation(line: 129, column: 9, scope: !6371)
!6373 = !DILocation(line: 129, column: 17, scope: !6374)
!6374 = !DILexicalBlockFile(scope: !6371, file: !920, discriminator: 1)
!6375 = !DILocation(line: 129, column: 27, scope: !6374)
!6376 = !DILocation(line: 129, column: 25, scope: !6374)
!6377 = !DILocation(line: 129, column: 37, scope: !6374)
!6378 = !DILocation(line: 129, column: 35, scope: !6374)
!6379 = !DILocation(line: 129, column: 48, scope: !6374)
!6380 = !DILocation(line: 129, column: 46, scope: !6374)
!6381 = !DILocation(line: 129, column: 58, scope: !6374)
!6382 = !DILocation(line: 129, column: 65, scope: !6374)
!6383 = !DILocation(line: 129, column: 55, scope: !6374)
!6384 = !DILocation(line: 129, column: 73, scope: !6374)
!6385 = !DILocation(line: 129, column: 71, scope: !6374)
!6386 = !DILocation(line: 129, column: 9, scope: !6374)
!6387 = !DILocation(line: 130, column: 20, scope: !6371)
!6388 = !DILocation(line: 129, column: 9, scope: !6389)
!6389 = !DILexicalBlockFile(scope: !6371, file: !920, discriminator: 2)
!6390 = distinct !{!6390, !6372}
!6391 = !DILocation(line: 131, column: 5, scope: !6371)
!6392 = !DILocation(line: 133, column: 12, scope: !6301)
!6393 = !DILocation(line: 133, column: 9, scope: !6301)
!6394 = !DILocation(line: 134, column: 12, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6301, file: !920, line: 134, column: 5)
!6396 = !DILocation(line: 134, column: 10, scope: !6395)
!6397 = !DILocation(line: 134, column: 17, scope: !6398)
!6398 = !DILexicalBlockFile(scope: !6399, file: !920, discriminator: 1)
!6399 = distinct !DILexicalBlock(scope: !6395, file: !920, line: 134, column: 5)
!6400 = !DILocation(line: 134, column: 21, scope: !6398)
!6401 = !DILocation(line: 134, column: 19, scope: !6398)
!6402 = !DILocation(line: 134, column: 5, scope: !6398)
!6403 = !DILocation(line: 135, column: 13, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6405, file: !920, line: 135, column: 13)
!6405 = distinct !DILexicalBlock(scope: !6399, file: !920, line: 134, column: 34)
!6406 = !DILocation(line: 135, column: 13, scope: !6405)
!6407 = !DILocation(line: 136, column: 36, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6404, file: !920, line: 135, column: 21)
!6409 = !DILocation(line: 136, column: 40, scope: !6408)
!6410 = !DILocation(line: 136, column: 44, scope: !6408)
!6411 = !DILocation(line: 136, column: 42, scope: !6408)
!6412 = !DILocation(line: 136, column: 38, scope: !6408)
!6413 = !DILocation(line: 136, column: 49, scope: !6408)
!6414 = !DILocation(line: 136, column: 57, scope: !6408)
!6415 = !DILocation(line: 136, column: 61, scope: !6408)
!6416 = !DILocation(line: 136, column: 60, scope: !6408)
!6417 = !DILocation(line: 136, column: 13, scope: !6408)
!6418 = !DILocation(line: 137, column: 17, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6408, file: !920, line: 137, column: 17)
!6420 = !DILocation(line: 137, column: 17, scope: !6408)
!6421 = !DILocation(line: 138, column: 40, scope: !6419)
!6422 = !DILocation(line: 138, column: 44, scope: !6419)
!6423 = !DILocation(line: 138, column: 48, scope: !6419)
!6424 = !DILocation(line: 138, column: 46, scope: !6419)
!6425 = !DILocation(line: 138, column: 42, scope: !6419)
!6426 = !DILocation(line: 138, column: 53, scope: !6419)
!6427 = !DILocation(line: 138, column: 58, scope: !6419)
!6428 = !DILocation(line: 138, column: 67, scope: !6419)
!6429 = !DILocation(line: 138, column: 71, scope: !6419)
!6430 = !DILocation(line: 138, column: 70, scope: !6419)
!6431 = !DILocation(line: 138, column: 17, scope: !6419)
!6432 = !DILocation(line: 139, column: 9, scope: !6408)
!6433 = !DILocation(line: 140, column: 17, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6435, file: !920, line: 140, column: 17)
!6435 = distinct !DILexicalBlock(scope: !6404, file: !920, line: 139, column: 16)
!6436 = !DILocation(line: 140, column: 17, scope: !6435)
!6437 = !DILocation(line: 141, column: 40, scope: !6434)
!6438 = !DILocation(line: 141, column: 44, scope: !6434)
!6439 = !DILocation(line: 141, column: 48, scope: !6434)
!6440 = !DILocation(line: 141, column: 46, scope: !6434)
!6441 = !DILocation(line: 141, column: 42, scope: !6434)
!6442 = !DILocation(line: 141, column: 53, scope: !6434)
!6443 = !DILocation(line: 141, column: 58, scope: !6434)
!6444 = !DILocation(line: 141, column: 67, scope: !6434)
!6445 = !DILocation(line: 141, column: 70, scope: !6434)
!6446 = !DILocation(line: 141, column: 17, scope: !6434)
!6447 = !DILocation(line: 142, column: 36, scope: !6435)
!6448 = !DILocation(line: 142, column: 40, scope: !6435)
!6449 = !DILocation(line: 142, column: 44, scope: !6435)
!6450 = !DILocation(line: 142, column: 42, scope: !6435)
!6451 = !DILocation(line: 142, column: 38, scope: !6435)
!6452 = !DILocation(line: 142, column: 49, scope: !6435)
!6453 = !DILocation(line: 142, column: 57, scope: !6435)
!6454 = !DILocation(line: 142, column: 60, scope: !6435)
!6455 = !DILocation(line: 142, column: 13, scope: !6435)
!6456 = !DILocation(line: 144, column: 5, scope: !6405)
!6457 = !DILocation(line: 134, column: 30, scope: !6458)
!6458 = !DILexicalBlockFile(scope: !6399, file: !920, discriminator: 2)
!6459 = !DILocation(line: 134, column: 5, scope: !6458)
!6460 = distinct !{!6460, !6461}
!6461 = !DILocation(line: 134, column: 5, scope: !6301)
!6462 = !DILocation(line: 145, column: 1, scope: !6301)
!6463 = distinct !DISubprogram(name: "celt_encode_pulses", scope: !920, file: !920, line: 351, type: !6464, isLocal: true, isDefinition: true, scopeLine: 352, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!6464 = !DISubroutineType(types: !6465)
!6465 = !{null, !1751, !940, !945, !945}
!6466 = !DILocalVariable(name: "rc", arg: 1, scope: !6463, file: !920, line: 351, type: !1751)
!6467 = !DILocation(line: 351, column: 55, scope: !6463)
!6468 = !DILocalVariable(name: "y", arg: 2, scope: !6463, file: !920, line: 351, type: !940)
!6469 = !DILocation(line: 351, column: 64, scope: !6463)
!6470 = !DILocalVariable(name: "N", arg: 3, scope: !6463, file: !920, line: 351, type: !945)
!6471 = !DILocation(line: 351, column: 76, scope: !6463)
!6472 = !DILocalVariable(name: "K", arg: 4, scope: !6463, file: !920, line: 351, type: !945)
!6473 = !DILocation(line: 351, column: 88, scope: !6463)
!6474 = !DILocation(line: 353, column: 25, scope: !6463)
!6475 = !DILocation(line: 353, column: 41, scope: !6463)
!6476 = !DILocation(line: 353, column: 44, scope: !6463)
!6477 = !DILocation(line: 353, column: 47, scope: !6463)
!6478 = !DILocation(line: 353, column: 29, scope: !6463)
!6479 = !DILocation(line: 353, column: 98, scope: !6463)
!6480 = !DILocation(line: 353, column: 104, scope: !6463)
!6481 = !DILocation(line: 353, column: 101, scope: !6463)
!6482 = !DILocation(line: 353, column: 97, scope: !6463)
!6483 = !DILocation(line: 353, column: 110, scope: !6484)
!6484 = !DILexicalBlockFile(scope: !6463, file: !920, discriminator: 1)
!6485 = !DILocation(line: 353, column: 97, scope: !6484)
!6486 = !DILocation(line: 353, column: 116, scope: !6487)
!6487 = !DILexicalBlockFile(scope: !6463, file: !920, discriminator: 2)
!6488 = !DILocation(line: 353, column: 97, scope: !6487)
!6489 = !DILocation(line: 353, column: 97, scope: !6490)
!6490 = !DILexicalBlockFile(scope: !6463, file: !920, discriminator: 3)
!6491 = !DILocation(line: 353, column: 53, scope: !6490)
!6492 = !DILocation(line: 353, column: 73, scope: !6490)
!6493 = !DILocation(line: 353, column: 79, scope: !6490)
!6494 = !DILocation(line: 353, column: 76, scope: !6490)
!6495 = !DILocation(line: 353, column: 72, scope: !6490)
!6496 = !DILocation(line: 353, column: 85, scope: !6497)
!6497 = !DILexicalBlockFile(scope: !6463, file: !920, discriminator: 4)
!6498 = !DILocation(line: 353, column: 72, scope: !6497)
!6499 = !DILocation(line: 353, column: 91, scope: !6500)
!6500 = !DILexicalBlockFile(scope: !6463, file: !920, discriminator: 5)
!6501 = !DILocation(line: 353, column: 72, scope: !6500)
!6502 = !DILocation(line: 353, column: 72, scope: !6503)
!6503 = !DILexicalBlockFile(scope: !6463, file: !920, discriminator: 6)
!6504 = !DILocation(line: 353, column: 53, scope: !6503)
!6505 = !DILocation(line: 353, column: 182, scope: !6503)
!6506 = !DILocation(line: 353, column: 189, scope: !6503)
!6507 = !DILocation(line: 353, column: 192, scope: !6503)
!6508 = !DILocation(line: 353, column: 185, scope: !6503)
!6509 = !DILocation(line: 353, column: 181, scope: !6503)
!6510 = !DILocation(line: 353, column: 200, scope: !6511)
!6511 = !DILexicalBlockFile(scope: !6463, file: !920, discriminator: 7)
!6512 = !DILocation(line: 353, column: 181, scope: !6511)
!6513 = !DILocation(line: 353, column: 207, scope: !6514)
!6514 = !DILexicalBlockFile(scope: !6463, file: !920, discriminator: 8)
!6515 = !DILocation(line: 353, column: 210, scope: !6514)
!6516 = !DILocation(line: 353, column: 181, scope: !6514)
!6517 = !DILocation(line: 353, column: 181, scope: !6518)
!6518 = !DILexicalBlockFile(scope: !6463, file: !920, discriminator: 9)
!6519 = !DILocation(line: 353, column: 125, scope: !6518)
!6520 = !DILocation(line: 353, column: 145, scope: !6518)
!6521 = !DILocation(line: 353, column: 152, scope: !6518)
!6522 = !DILocation(line: 353, column: 155, scope: !6518)
!6523 = !DILocation(line: 353, column: 148, scope: !6518)
!6524 = !DILocation(line: 353, column: 144, scope: !6518)
!6525 = !DILocation(line: 353, column: 164, scope: !6526)
!6526 = !DILexicalBlockFile(scope: !6463, file: !920, discriminator: 10)
!6527 = !DILocation(line: 353, column: 167, scope: !6526)
!6528 = !DILocation(line: 353, column: 144, scope: !6526)
!6529 = !DILocation(line: 353, column: 175, scope: !6530)
!6530 = !DILexicalBlockFile(scope: !6463, file: !920, discriminator: 11)
!6531 = !DILocation(line: 353, column: 144, scope: !6530)
!6532 = !DILocation(line: 353, column: 144, scope: !6533)
!6533 = !DILexicalBlockFile(scope: !6463, file: !920, discriminator: 12)
!6534 = !DILocation(line: 353, column: 125, scope: !6533)
!6535 = !DILocation(line: 353, column: 122, scope: !6533)
!6536 = !DILocation(line: 353, column: 5, scope: !6533)
!6537 = !DILocation(line: 354, column: 1, scope: !6463)
!6538 = distinct !DISubprogram(name: "celt_normalize_residual", scope: !920, file: !920, line: 76, type: !6539, isLocal: true, isDefinition: true, scopeLine: 78, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{null, !6541, !1664, !915, !912}
!6541 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1028)
!6542 = !DILocalVariable(name: "iy", arg: 1, scope: !6538, file: !920, line: 76, type: !6541)
!6543 = !DILocation(line: 76, column: 65, scope: !6538)
!6544 = !DILocalVariable(name: "X", arg: 2, scope: !6538, file: !920, line: 76, type: !1664)
!6545 = !DILocation(line: 76, column: 86, scope: !6538)
!6546 = !DILocalVariable(name: "N", arg: 3, scope: !6538, file: !920, line: 77, type: !915)
!6547 = !DILocation(line: 77, column: 48, scope: !6538)
!6548 = !DILocalVariable(name: "g", arg: 4, scope: !6538, file: !920, line: 77, type: !912)
!6549 = !DILocation(line: 77, column: 57, scope: !6538)
!6550 = !DILocalVariable(name: "i", scope: !6538, file: !920, line: 79, type: !915)
!6551 = !DILocation(line: 79, column: 9, scope: !6538)
!6552 = !DILocation(line: 80, column: 12, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6538, file: !920, line: 80, column: 5)
!6554 = !DILocation(line: 80, column: 10, scope: !6553)
!6555 = !DILocation(line: 80, column: 17, scope: !6556)
!6556 = !DILexicalBlockFile(scope: !6557, file: !920, discriminator: 1)
!6557 = distinct !DILexicalBlock(scope: !6553, file: !920, line: 80, column: 5)
!6558 = !DILocation(line: 80, column: 21, scope: !6556)
!6559 = !DILocation(line: 80, column: 19, scope: !6556)
!6560 = !DILocation(line: 80, column: 5, scope: !6556)
!6561 = !DILocation(line: 81, column: 16, scope: !6557)
!6562 = !DILocation(line: 81, column: 23, scope: !6557)
!6563 = !DILocation(line: 81, column: 20, scope: !6557)
!6564 = !DILocation(line: 81, column: 18, scope: !6557)
!6565 = !DILocation(line: 81, column: 11, scope: !6557)
!6566 = !DILocation(line: 81, column: 9, scope: !6557)
!6567 = !DILocation(line: 81, column: 14, scope: !6557)
!6568 = !DILocation(line: 80, column: 25, scope: !6569)
!6569 = !DILexicalBlockFile(scope: !6557, file: !920, discriminator: 2)
!6570 = !DILocation(line: 80, column: 5, scope: !6569)
!6571 = distinct !{!6571, !6572}
!6572 = !DILocation(line: 80, column: 5, scope: !6538)
!6573 = !DILocation(line: 82, column: 1, scope: !6538)
!6574 = distinct !DISubprogram(name: "celt_extract_collapse_mask", scope: !920, file: !920, line: 147, type: !6575, isLocal: true, isDefinition: true, scopeLine: 148, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!6575 = !DISubroutineType(types: !6576)
!6576 = !{!945, !1028, !945, !945}
!6577 = !DILocalVariable(name: "iy", arg: 1, scope: !6574, file: !920, line: 147, type: !1028)
!6578 = !DILocation(line: 147, column: 62, scope: !6574)
!6579 = !DILocalVariable(name: "N", arg: 2, scope: !6574, file: !920, line: 147, type: !945)
!6580 = !DILocation(line: 147, column: 75, scope: !6574)
!6581 = !DILocalVariable(name: "B", arg: 3, scope: !6574, file: !920, line: 147, type: !945)
!6582 = !DILocation(line: 147, column: 87, scope: !6574)
!6583 = !DILocalVariable(name: "i", scope: !6574, file: !920, line: 149, type: !915)
!6584 = !DILocation(line: 149, column: 9, scope: !6574)
!6585 = !DILocalVariable(name: "j", scope: !6574, file: !920, line: 149, type: !915)
!6586 = !DILocation(line: 149, column: 12, scope: !6574)
!6587 = !DILocalVariable(name: "N0", scope: !6574, file: !920, line: 149, type: !915)
!6588 = !DILocation(line: 149, column: 15, scope: !6574)
!6589 = !DILocation(line: 149, column: 20, scope: !6574)
!6590 = !DILocation(line: 149, column: 24, scope: !6574)
!6591 = !DILocation(line: 149, column: 22, scope: !6574)
!6592 = !DILocalVariable(name: "collapse_mask", scope: !6574, file: !920, line: 150, type: !945)
!6593 = !DILocation(line: 150, column: 14, scope: !6574)
!6594 = !DILocation(line: 152, column: 9, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6574, file: !920, line: 152, column: 9)
!6596 = !DILocation(line: 152, column: 11, scope: !6595)
!6597 = !DILocation(line: 152, column: 9, scope: !6574)
!6598 = !DILocation(line: 153, column: 9, scope: !6595)
!6599 = !DILocation(line: 155, column: 12, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6574, file: !920, line: 155, column: 5)
!6601 = !DILocation(line: 155, column: 10, scope: !6600)
!6602 = !DILocation(line: 155, column: 17, scope: !6603)
!6603 = !DILexicalBlockFile(scope: !6604, file: !920, discriminator: 1)
!6604 = distinct !DILexicalBlock(scope: !6600, file: !920, line: 155, column: 5)
!6605 = !DILocation(line: 155, column: 21, scope: !6603)
!6606 = !DILocation(line: 155, column: 19, scope: !6603)
!6607 = !DILocation(line: 155, column: 5, scope: !6603)
!6608 = !DILocation(line: 156, column: 16, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6604, file: !920, line: 156, column: 9)
!6610 = !DILocation(line: 156, column: 14, scope: !6609)
!6611 = !DILocation(line: 156, column: 21, scope: !6612)
!6612 = !DILexicalBlockFile(scope: !6613, file: !920, discriminator: 1)
!6613 = distinct !DILexicalBlock(scope: !6609, file: !920, line: 156, column: 9)
!6614 = !DILocation(line: 156, column: 25, scope: !6612)
!6615 = !DILocation(line: 156, column: 23, scope: !6612)
!6616 = !DILocation(line: 156, column: 9, scope: !6612)
!6617 = !DILocation(line: 157, column: 36, scope: !6613)
!6618 = !DILocation(line: 157, column: 38, scope: !6613)
!6619 = !DILocation(line: 157, column: 37, scope: !6613)
!6620 = !DILocation(line: 157, column: 41, scope: !6613)
!6621 = !DILocation(line: 157, column: 40, scope: !6613)
!6622 = !DILocation(line: 157, column: 33, scope: !6613)
!6623 = !DILocation(line: 157, column: 32, scope: !6613)
!6624 = !DILocation(line: 157, column: 31, scope: !6613)
!6625 = !DILocation(line: 157, column: 48, scope: !6613)
!6626 = !DILocation(line: 157, column: 45, scope: !6613)
!6627 = !DILocation(line: 157, column: 27, scope: !6613)
!6628 = !DILocation(line: 157, column: 13, scope: !6613)
!6629 = !DILocation(line: 156, column: 30, scope: !6630)
!6630 = !DILexicalBlockFile(scope: !6613, file: !920, discriminator: 2)
!6631 = !DILocation(line: 156, column: 9, scope: !6630)
!6632 = distinct !{!6632, !6633}
!6633 = !DILocation(line: 156, column: 9, scope: !6604)
!6634 = !DILocation(line: 157, column: 48, scope: !6635)
!6635 = !DILexicalBlockFile(scope: !6609, file: !920, discriminator: 1)
!6636 = !DILocation(line: 155, column: 25, scope: !6637)
!6637 = !DILexicalBlockFile(scope: !6604, file: !920, discriminator: 2)
!6638 = !DILocation(line: 155, column: 5, scope: !6637)
!6639 = distinct !{!6639, !6640}
!6640 = !DILocation(line: 155, column: 5, scope: !6574)
!6641 = !DILocation(line: 158, column: 12, scope: !6574)
!6642 = !DILocation(line: 158, column: 5, scope: !6574)
!6643 = !DILocation(line: 159, column: 1, scope: !6574)
!6644 = distinct !DISubprogram(name: "celt_exp_rotation_impl", scope: !920, file: !920, line: 84, type: !6645, isLocal: true, isDefinition: true, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!6645 = !DISubroutineType(types: !6646)
!6646 = !{null, !939, !945, !945, !912, !912}
!6647 = !DILocalVariable(name: "X", arg: 1, scope: !6644, file: !920, line: 84, type: !939)
!6648 = !DILocation(line: 84, column: 43, scope: !6644)
!6649 = !DILocalVariable(name: "len", arg: 2, scope: !6644, file: !920, line: 84, type: !945)
!6650 = !DILocation(line: 84, column: 55, scope: !6644)
!6651 = !DILocalVariable(name: "stride", arg: 3, scope: !6644, file: !920, line: 84, type: !945)
!6652 = !DILocation(line: 84, column: 69, scope: !6644)
!6653 = !DILocalVariable(name: "c", arg: 4, scope: !6644, file: !920, line: 85, type: !912)
!6654 = !DILocation(line: 85, column: 42, scope: !6644)
!6655 = !DILocalVariable(name: "s", arg: 5, scope: !6644, file: !920, line: 85, type: !912)
!6656 = !DILocation(line: 85, column: 51, scope: !6644)
!6657 = !DILocalVariable(name: "Xptr", scope: !6644, file: !920, line: 87, type: !939)
!6658 = !DILocation(line: 87, column: 12, scope: !6644)
!6659 = !DILocalVariable(name: "i", scope: !6644, file: !920, line: 88, type: !915)
!6660 = !DILocation(line: 88, column: 9, scope: !6644)
!6661 = !DILocation(line: 90, column: 12, scope: !6644)
!6662 = !DILocation(line: 90, column: 10, scope: !6644)
!6663 = !DILocation(line: 91, column: 12, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6644, file: !920, line: 91, column: 5)
!6665 = !DILocation(line: 91, column: 10, scope: !6664)
!6666 = !DILocation(line: 91, column: 17, scope: !6667)
!6667 = !DILexicalBlockFile(scope: !6668, file: !920, discriminator: 1)
!6668 = distinct !DILexicalBlock(scope: !6664, file: !920, line: 91, column: 5)
!6669 = !DILocation(line: 91, column: 21, scope: !6667)
!6670 = !DILocation(line: 91, column: 27, scope: !6667)
!6671 = !DILocation(line: 91, column: 25, scope: !6667)
!6672 = !DILocation(line: 91, column: 19, scope: !6667)
!6673 = !DILocation(line: 91, column: 5, scope: !6667)
!6674 = !DILocalVariable(name: "x1", scope: !6675, file: !920, line: 92, type: !912)
!6675 = distinct !DILexicalBlock(scope: !6668, file: !920, line: 91, column: 40)
!6676 = !DILocation(line: 92, column: 15, scope: !6675)
!6677 = !DILocation(line: 92, column: 20, scope: !6675)
!6678 = !DILocalVariable(name: "x2", scope: !6675, file: !920, line: 93, type: !912)
!6679 = !DILocation(line: 93, column: 15, scope: !6675)
!6680 = !DILocation(line: 93, column: 25, scope: !6675)
!6681 = !DILocation(line: 93, column: 20, scope: !6675)
!6682 = !DILocation(line: 94, column: 24, scope: !6675)
!6683 = !DILocation(line: 94, column: 28, scope: !6675)
!6684 = !DILocation(line: 94, column: 26, scope: !6675)
!6685 = !DILocation(line: 94, column: 33, scope: !6675)
!6686 = !DILocation(line: 94, column: 37, scope: !6675)
!6687 = !DILocation(line: 94, column: 35, scope: !6675)
!6688 = !DILocation(line: 94, column: 31, scope: !6675)
!6689 = !DILocation(line: 94, column: 14, scope: !6675)
!6690 = !DILocation(line: 94, column: 9, scope: !6675)
!6691 = !DILocation(line: 94, column: 22, scope: !6675)
!6692 = !DILocation(line: 95, column: 19, scope: !6675)
!6693 = !DILocation(line: 95, column: 23, scope: !6675)
!6694 = !DILocation(line: 95, column: 21, scope: !6675)
!6695 = !DILocation(line: 95, column: 28, scope: !6675)
!6696 = !DILocation(line: 95, column: 32, scope: !6675)
!6697 = !DILocation(line: 95, column: 30, scope: !6675)
!6698 = !DILocation(line: 95, column: 26, scope: !6675)
!6699 = !DILocation(line: 95, column: 14, scope: !6675)
!6700 = !DILocation(line: 95, column: 17, scope: !6675)
!6701 = !DILocation(line: 96, column: 5, scope: !6675)
!6702 = !DILocation(line: 91, column: 36, scope: !6703)
!6703 = !DILexicalBlockFile(scope: !6668, file: !920, discriminator: 2)
!6704 = !DILocation(line: 91, column: 5, scope: !6703)
!6705 = distinct !{!6705, !6706}
!6706 = !DILocation(line: 91, column: 5, scope: !6644)
!6707 = !DILocation(line: 98, column: 15, scope: !6644)
!6708 = !DILocation(line: 98, column: 25, scope: !6644)
!6709 = !DILocation(line: 98, column: 23, scope: !6644)
!6710 = !DILocation(line: 98, column: 19, scope: !6644)
!6711 = !DILocation(line: 98, column: 32, scope: !6644)
!6712 = !DILocation(line: 98, column: 13, scope: !6644)
!6713 = !DILocation(line: 98, column: 10, scope: !6644)
!6714 = !DILocation(line: 99, column: 14, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6644, file: !920, line: 99, column: 5)
!6716 = !DILocation(line: 99, column: 24, scope: !6715)
!6717 = !DILocation(line: 99, column: 22, scope: !6715)
!6718 = !DILocation(line: 99, column: 18, scope: !6715)
!6719 = !DILocation(line: 99, column: 31, scope: !6715)
!6720 = !DILocation(line: 99, column: 12, scope: !6715)
!6721 = !DILocation(line: 99, column: 10, scope: !6715)
!6722 = !DILocation(line: 99, column: 36, scope: !6723)
!6723 = !DILexicalBlockFile(scope: !6724, file: !920, discriminator: 1)
!6724 = distinct !DILexicalBlock(scope: !6715, file: !920, line: 99, column: 5)
!6725 = !DILocation(line: 99, column: 38, scope: !6723)
!6726 = !DILocation(line: 99, column: 5, scope: !6723)
!6727 = !DILocalVariable(name: "x1", scope: !6728, file: !920, line: 100, type: !912)
!6728 = distinct !DILexicalBlock(scope: !6724, file: !920, line: 99, column: 49)
!6729 = !DILocation(line: 100, column: 15, scope: !6728)
!6730 = !DILocation(line: 100, column: 20, scope: !6728)
!6731 = !DILocalVariable(name: "x2", scope: !6728, file: !920, line: 101, type: !912)
!6732 = !DILocation(line: 101, column: 15, scope: !6728)
!6733 = !DILocation(line: 101, column: 25, scope: !6728)
!6734 = !DILocation(line: 101, column: 20, scope: !6728)
!6735 = !DILocation(line: 102, column: 24, scope: !6728)
!6736 = !DILocation(line: 102, column: 28, scope: !6728)
!6737 = !DILocation(line: 102, column: 26, scope: !6728)
!6738 = !DILocation(line: 102, column: 33, scope: !6728)
!6739 = !DILocation(line: 102, column: 37, scope: !6728)
!6740 = !DILocation(line: 102, column: 35, scope: !6728)
!6741 = !DILocation(line: 102, column: 31, scope: !6728)
!6742 = !DILocation(line: 102, column: 14, scope: !6728)
!6743 = !DILocation(line: 102, column: 9, scope: !6728)
!6744 = !DILocation(line: 102, column: 22, scope: !6728)
!6745 = !DILocation(line: 103, column: 19, scope: !6728)
!6746 = !DILocation(line: 103, column: 23, scope: !6728)
!6747 = !DILocation(line: 103, column: 21, scope: !6728)
!6748 = !DILocation(line: 103, column: 28, scope: !6728)
!6749 = !DILocation(line: 103, column: 32, scope: !6728)
!6750 = !DILocation(line: 103, column: 30, scope: !6728)
!6751 = !DILocation(line: 103, column: 26, scope: !6728)
!6752 = !DILocation(line: 103, column: 14, scope: !6728)
!6753 = !DILocation(line: 103, column: 17, scope: !6728)
!6754 = !DILocation(line: 104, column: 5, scope: !6728)
!6755 = !DILocation(line: 99, column: 45, scope: !6756)
!6756 = !DILexicalBlockFile(scope: !6724, file: !920, discriminator: 2)
!6757 = !DILocation(line: 99, column: 5, scope: !6756)
!6758 = distinct !{!6758, !6759}
!6759 = !DILocation(line: 99, column: 5, scope: !6644)
!6760 = !DILocation(line: 105, column: 1, scope: !6644)
!6761 = distinct !DISubprogram(name: "celt_icwrsi", scope: !920, file: !920, line: 256, type: !6762, isLocal: true, isDefinition: true, scopeLine: 257, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!6762 = !DISubroutineType(types: !6763)
!6763 = !{!945, !945, !945, !1028}
!6764 = !DILocalVariable(name: "N", arg: 1, scope: !6761, file: !920, line: 256, type: !945)
!6765 = !DILocation(line: 256, column: 45, scope: !6761)
!6766 = !DILocalVariable(name: "K", arg: 2, scope: !6761, file: !920, line: 256, type: !945)
!6767 = !DILocation(line: 256, column: 57, scope: !6761)
!6768 = !DILocalVariable(name: "y", arg: 3, scope: !6761, file: !920, line: 256, type: !1028)
!6769 = !DILocation(line: 256, column: 71, scope: !6761)
!6770 = !DILocalVariable(name: "i", scope: !6761, file: !920, line: 258, type: !915)
!6771 = !DILocation(line: 258, column: 9, scope: !6761)
!6772 = !DILocalVariable(name: "idx", scope: !6761, file: !920, line: 258, type: !915)
!6773 = !DILocation(line: 258, column: 12, scope: !6761)
!6774 = !DILocalVariable(name: "sum", scope: !6761, file: !920, line: 258, type: !915)
!6775 = !DILocation(line: 258, column: 21, scope: !6761)
!6776 = !DILocation(line: 259, column: 14, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6761, file: !920, line: 259, column: 5)
!6778 = !DILocation(line: 259, column: 16, scope: !6777)
!6779 = !DILocation(line: 259, column: 12, scope: !6777)
!6780 = !DILocation(line: 259, column: 10, scope: !6777)
!6781 = !DILocation(line: 259, column: 21, scope: !6782)
!6782 = !DILexicalBlockFile(scope: !6783, file: !920, discriminator: 1)
!6783 = distinct !DILexicalBlock(scope: !6777, file: !920, line: 259, column: 5)
!6784 = !DILocation(line: 259, column: 23, scope: !6782)
!6785 = !DILocation(line: 259, column: 5, scope: !6782)
!6786 = !DILocalVariable(name: "i_s", scope: !6787, file: !920, line: 260, type: !6788)
!6787 = distinct !DILexicalBlock(scope: !6783, file: !920, line: 259, column: 34)
!6788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!6789 = !DILocation(line: 260, column: 24, scope: !6787)
!6790 = !DILocation(line: 260, column: 170, scope: !6787)
!6791 = !DILocation(line: 260, column: 174, scope: !6787)
!6792 = !DILocation(line: 260, column: 172, scope: !6787)
!6793 = !DILocation(line: 260, column: 180, scope: !6787)
!6794 = !DILocation(line: 260, column: 190, scope: !6787)
!6795 = !DILocation(line: 260, column: 188, scope: !6787)
!6796 = !DILocation(line: 260, column: 194, scope: !6787)
!6797 = !DILocation(line: 260, column: 187, scope: !6787)
!6798 = !DILocation(line: 260, column: 204, scope: !6799)
!6799 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 1)
!6800 = !DILocation(line: 260, column: 202, scope: !6799)
!6801 = !DILocation(line: 260, column: 187, scope: !6799)
!6802 = !DILocation(line: 260, column: 215, scope: !6803)
!6803 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 2)
!6804 = !DILocation(line: 260, column: 213, scope: !6803)
!6805 = !DILocation(line: 260, column: 211, scope: !6803)
!6806 = !DILocation(line: 260, column: 187, scope: !6803)
!6807 = !DILocation(line: 260, column: 187, scope: !6808)
!6808 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 3)
!6809 = !DILocation(line: 260, column: 184, scope: !6808)
!6810 = !DILocation(line: 260, column: 221, scope: !6808)
!6811 = !DILocation(line: 260, column: 177, scope: !6808)
!6812 = !DILocation(line: 260, column: 169, scope: !6808)
!6813 = !DILocation(line: 260, column: 229, scope: !6814)
!6814 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 4)
!6815 = !DILocation(line: 260, column: 233, scope: !6814)
!6816 = !DILocation(line: 260, column: 231, scope: !6814)
!6817 = !DILocation(line: 260, column: 169, scope: !6814)
!6818 = !DILocation(line: 260, column: 239, scope: !6819)
!6819 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 5)
!6820 = !DILocation(line: 260, column: 249, scope: !6819)
!6821 = !DILocation(line: 260, column: 247, scope: !6819)
!6822 = !DILocation(line: 260, column: 253, scope: !6819)
!6823 = !DILocation(line: 260, column: 246, scope: !6819)
!6824 = !DILocation(line: 260, column: 263, scope: !6825)
!6825 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 6)
!6826 = !DILocation(line: 260, column: 261, scope: !6825)
!6827 = !DILocation(line: 260, column: 246, scope: !6825)
!6828 = !DILocation(line: 260, column: 274, scope: !6829)
!6829 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 7)
!6830 = !DILocation(line: 260, column: 272, scope: !6829)
!6831 = !DILocation(line: 260, column: 270, scope: !6829)
!6832 = !DILocation(line: 260, column: 246, scope: !6829)
!6833 = !DILocation(line: 260, column: 246, scope: !6834)
!6834 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 8)
!6835 = !DILocation(line: 260, column: 243, scope: !6834)
!6836 = !DILocation(line: 260, column: 280, scope: !6834)
!6837 = !DILocation(line: 260, column: 169, scope: !6834)
!6838 = !DILocation(line: 260, column: 169, scope: !6839)
!6839 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 9)
!6840 = !DILocation(line: 260, column: 31, scope: !6839)
!6841 = !DILocation(line: 260, column: 51, scope: !6839)
!6842 = !DILocation(line: 260, column: 55, scope: !6839)
!6843 = !DILocation(line: 260, column: 53, scope: !6839)
!6844 = !DILocation(line: 260, column: 61, scope: !6839)
!6845 = !DILocation(line: 260, column: 71, scope: !6839)
!6846 = !DILocation(line: 260, column: 69, scope: !6839)
!6847 = !DILocation(line: 260, column: 75, scope: !6839)
!6848 = !DILocation(line: 260, column: 68, scope: !6839)
!6849 = !DILocation(line: 260, column: 85, scope: !6850)
!6850 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 10)
!6851 = !DILocation(line: 260, column: 83, scope: !6850)
!6852 = !DILocation(line: 260, column: 68, scope: !6850)
!6853 = !DILocation(line: 260, column: 96, scope: !6854)
!6854 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 11)
!6855 = !DILocation(line: 260, column: 94, scope: !6854)
!6856 = !DILocation(line: 260, column: 92, scope: !6854)
!6857 = !DILocation(line: 260, column: 68, scope: !6854)
!6858 = !DILocation(line: 260, column: 68, scope: !6859)
!6859 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 12)
!6860 = !DILocation(line: 260, column: 65, scope: !6859)
!6861 = !DILocation(line: 260, column: 102, scope: !6859)
!6862 = !DILocation(line: 260, column: 58, scope: !6859)
!6863 = !DILocation(line: 260, column: 50, scope: !6859)
!6864 = !DILocation(line: 260, column: 110, scope: !6865)
!6865 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 13)
!6866 = !DILocation(line: 260, column: 120, scope: !6865)
!6867 = !DILocation(line: 260, column: 118, scope: !6865)
!6868 = !DILocation(line: 260, column: 124, scope: !6865)
!6869 = !DILocation(line: 260, column: 117, scope: !6865)
!6870 = !DILocation(line: 260, column: 134, scope: !6871)
!6871 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 14)
!6872 = !DILocation(line: 260, column: 132, scope: !6871)
!6873 = !DILocation(line: 260, column: 117, scope: !6871)
!6874 = !DILocation(line: 260, column: 145, scope: !6875)
!6875 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 15)
!6876 = !DILocation(line: 260, column: 143, scope: !6875)
!6877 = !DILocation(line: 260, column: 141, scope: !6875)
!6878 = !DILocation(line: 260, column: 117, scope: !6875)
!6879 = !DILocation(line: 260, column: 117, scope: !6880)
!6880 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 16)
!6881 = !DILocation(line: 260, column: 114, scope: !6880)
!6882 = !DILocation(line: 260, column: 151, scope: !6880)
!6883 = !DILocation(line: 260, column: 50, scope: !6880)
!6884 = !DILocation(line: 260, column: 159, scope: !6885)
!6885 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 17)
!6886 = !DILocation(line: 260, column: 163, scope: !6885)
!6887 = !DILocation(line: 260, column: 161, scope: !6885)
!6888 = !DILocation(line: 260, column: 50, scope: !6885)
!6889 = !DILocation(line: 260, column: 50, scope: !6890)
!6890 = !DILexicalBlockFile(scope: !6787, file: !920, discriminator: 18)
!6891 = !DILocation(line: 260, column: 31, scope: !6890)
!6892 = !DILocation(line: 260, column: 24, scope: !6890)
!6893 = !DILocation(line: 261, column: 74, scope: !6787)
!6894 = !DILocation(line: 261, column: 78, scope: !6787)
!6895 = !DILocation(line: 261, column: 76, scope: !6787)
!6896 = !DILocation(line: 261, column: 84, scope: !6787)
!6897 = !DILocation(line: 261, column: 81, scope: !6787)
!6898 = !DILocation(line: 261, column: 73, scope: !6787)
!6899 = !DILocation(line: 261, column: 92, scope: !6799)
!6900 = !DILocation(line: 261, column: 96, scope: !6799)
!6901 = !DILocation(line: 261, column: 94, scope: !6799)
!6902 = !DILocation(line: 261, column: 73, scope: !6799)
!6903 = !DILocation(line: 261, column: 102, scope: !6803)
!6904 = !DILocation(line: 261, column: 73, scope: !6803)
!6905 = !DILocation(line: 261, column: 73, scope: !6808)
!6906 = !DILocation(line: 261, column: 17, scope: !6808)
!6907 = !DILocation(line: 261, column: 37, scope: !6808)
!6908 = !DILocation(line: 261, column: 41, scope: !6808)
!6909 = !DILocation(line: 261, column: 39, scope: !6808)
!6910 = !DILocation(line: 261, column: 47, scope: !6808)
!6911 = !DILocation(line: 261, column: 44, scope: !6808)
!6912 = !DILocation(line: 261, column: 36, scope: !6808)
!6913 = !DILocation(line: 261, column: 55, scope: !6814)
!6914 = !DILocation(line: 261, column: 36, scope: !6814)
!6915 = !DILocation(line: 261, column: 63, scope: !6819)
!6916 = !DILocation(line: 261, column: 67, scope: !6819)
!6917 = !DILocation(line: 261, column: 65, scope: !6819)
!6918 = !DILocation(line: 261, column: 36, scope: !6819)
!6919 = !DILocation(line: 261, column: 36, scope: !6825)
!6920 = !DILocation(line: 261, column: 17, scope: !6825)
!6921 = !DILocation(line: 261, column: 115, scope: !6825)
!6922 = !DILocation(line: 261, column: 113, scope: !6825)
!6923 = !DILocation(line: 261, column: 118, scope: !6825)
!6924 = !DILocation(line: 261, column: 123, scope: !6825)
!6925 = !DILocation(line: 261, column: 122, scope: !6825)
!6926 = !DILocation(line: 261, column: 110, scope: !6825)
!6927 = !DILocation(line: 261, column: 13, scope: !6825)
!6928 = !DILocation(line: 262, column: 20, scope: !6787)
!6929 = !DILocation(line: 262, column: 18, scope: !6787)
!6930 = !DILocation(line: 262, column: 24, scope: !6787)
!6931 = !DILocation(line: 262, column: 17, scope: !6787)
!6932 = !DILocation(line: 262, column: 34, scope: !6799)
!6933 = !DILocation(line: 262, column: 32, scope: !6799)
!6934 = !DILocation(line: 262, column: 17, scope: !6799)
!6935 = !DILocation(line: 262, column: 45, scope: !6803)
!6936 = !DILocation(line: 262, column: 43, scope: !6803)
!6937 = !DILocation(line: 262, column: 41, scope: !6803)
!6938 = !DILocation(line: 262, column: 17, scope: !6803)
!6939 = !DILocation(line: 262, column: 17, scope: !6808)
!6940 = !DILocation(line: 262, column: 13, scope: !6808)
!6941 = !DILocation(line: 263, column: 5, scope: !6787)
!6942 = !DILocation(line: 259, column: 30, scope: !6943)
!6943 = !DILexicalBlockFile(scope: !6783, file: !920, discriminator: 2)
!6944 = !DILocation(line: 259, column: 5, scope: !6943)
!6945 = distinct !{!6945, !6946}
!6946 = !DILocation(line: 259, column: 5, scope: !6761)
!6947 = !DILocation(line: 264, column: 12, scope: !6761)
!6948 = !DILocation(line: 264, column: 5, scope: !6761)
!6949 = distinct !DISubprogram(name: "celt_decode_pulses", scope: !920, file: !920, line: 356, type: !6950, isLocal: true, isDefinition: true, scopeLine: 357, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{!912, !1751, !940, !945, !945}
!6952 = !DILocalVariable(name: "rc", arg: 1, scope: !6949, file: !920, line: 356, type: !1751)
!6953 = !DILocation(line: 356, column: 56, scope: !6949)
!6954 = !DILocalVariable(name: "y", arg: 2, scope: !6949, file: !920, line: 356, type: !940)
!6955 = !DILocation(line: 356, column: 65, scope: !6949)
!6956 = !DILocalVariable(name: "N", arg: 3, scope: !6949, file: !920, line: 356, type: !945)
!6957 = !DILocation(line: 356, column: 77, scope: !6949)
!6958 = !DILocalVariable(name: "K", arg: 4, scope: !6949, file: !920, line: 356, type: !945)
!6959 = !DILocation(line: 356, column: 89, scope: !6949)
!6960 = !DILocalVariable(name: "idx", scope: !6949, file: !920, line: 358, type: !6788)
!6961 = !DILocation(line: 358, column: 20, scope: !6949)
!6962 = !DILocation(line: 358, column: 46, scope: !6949)
!6963 = !DILocation(line: 358, column: 97, scope: !6949)
!6964 = !DILocation(line: 358, column: 103, scope: !6949)
!6965 = !DILocation(line: 358, column: 100, scope: !6949)
!6966 = !DILocation(line: 358, column: 96, scope: !6949)
!6967 = !DILocation(line: 358, column: 109, scope: !6968)
!6968 = !DILexicalBlockFile(scope: !6949, file: !920, discriminator: 1)
!6969 = !DILocation(line: 358, column: 96, scope: !6968)
!6970 = !DILocation(line: 358, column: 115, scope: !6971)
!6971 = !DILexicalBlockFile(scope: !6949, file: !920, discriminator: 2)
!6972 = !DILocation(line: 358, column: 96, scope: !6971)
!6973 = !DILocation(line: 358, column: 96, scope: !6974)
!6974 = !DILexicalBlockFile(scope: !6949, file: !920, discriminator: 3)
!6975 = !DILocation(line: 358, column: 52, scope: !6974)
!6976 = !DILocation(line: 358, column: 72, scope: !6974)
!6977 = !DILocation(line: 358, column: 78, scope: !6974)
!6978 = !DILocation(line: 358, column: 75, scope: !6974)
!6979 = !DILocation(line: 358, column: 71, scope: !6974)
!6980 = !DILocation(line: 358, column: 84, scope: !6981)
!6981 = !DILexicalBlockFile(scope: !6949, file: !920, discriminator: 4)
!6982 = !DILocation(line: 358, column: 71, scope: !6981)
!6983 = !DILocation(line: 358, column: 90, scope: !6984)
!6984 = !DILexicalBlockFile(scope: !6949, file: !920, discriminator: 5)
!6985 = !DILocation(line: 358, column: 71, scope: !6984)
!6986 = !DILocation(line: 358, column: 71, scope: !6987)
!6987 = !DILexicalBlockFile(scope: !6949, file: !920, discriminator: 6)
!6988 = !DILocation(line: 358, column: 52, scope: !6987)
!6989 = !DILocation(line: 358, column: 181, scope: !6987)
!6990 = !DILocation(line: 358, column: 188, scope: !6987)
!6991 = !DILocation(line: 358, column: 191, scope: !6987)
!6992 = !DILocation(line: 358, column: 184, scope: !6987)
!6993 = !DILocation(line: 358, column: 180, scope: !6987)
!6994 = !DILocation(line: 358, column: 199, scope: !6995)
!6995 = !DILexicalBlockFile(scope: !6949, file: !920, discriminator: 7)
!6996 = !DILocation(line: 358, column: 180, scope: !6995)
!6997 = !DILocation(line: 358, column: 206, scope: !6998)
!6998 = !DILexicalBlockFile(scope: !6949, file: !920, discriminator: 8)
!6999 = !DILocation(line: 358, column: 209, scope: !6998)
!7000 = !DILocation(line: 358, column: 180, scope: !6998)
!7001 = !DILocation(line: 358, column: 180, scope: !7002)
!7002 = !DILexicalBlockFile(scope: !6949, file: !920, discriminator: 9)
!7003 = !DILocation(line: 358, column: 124, scope: !7002)
!7004 = !DILocation(line: 358, column: 144, scope: !7002)
!7005 = !DILocation(line: 358, column: 151, scope: !7002)
!7006 = !DILocation(line: 358, column: 154, scope: !7002)
!7007 = !DILocation(line: 358, column: 147, scope: !7002)
!7008 = !DILocation(line: 358, column: 143, scope: !7002)
!7009 = !DILocation(line: 358, column: 163, scope: !7010)
!7010 = !DILexicalBlockFile(scope: !6949, file: !920, discriminator: 10)
!7011 = !DILocation(line: 358, column: 166, scope: !7010)
!7012 = !DILocation(line: 358, column: 143, scope: !7010)
!7013 = !DILocation(line: 358, column: 174, scope: !7014)
!7014 = !DILexicalBlockFile(scope: !6949, file: !920, discriminator: 11)
!7015 = !DILocation(line: 358, column: 143, scope: !7014)
!7016 = !DILocation(line: 358, column: 143, scope: !7017)
!7017 = !DILexicalBlockFile(scope: !6949, file: !920, discriminator: 12)
!7018 = !DILocation(line: 358, column: 124, scope: !7017)
!7019 = !DILocation(line: 358, column: 121, scope: !7017)
!7020 = !DILocation(line: 358, column: 26, scope: !7017)
!7021 = !DILocation(line: 358, column: 20, scope: !7017)
!7022 = !DILocation(line: 359, column: 23, scope: !6949)
!7023 = !DILocation(line: 359, column: 26, scope: !6949)
!7024 = !DILocation(line: 359, column: 29, scope: !6949)
!7025 = !DILocation(line: 359, column: 34, scope: !6949)
!7026 = !DILocation(line: 359, column: 12, scope: !6949)
!7027 = !DILocation(line: 359, column: 5, scope: !6949)
!7028 = distinct !DISubprogram(name: "celt_cwrsi", scope: !920, file: !920, line: 268, type: !7029, isLocal: true, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !1785)
!7029 = !DISubroutineType(types: !7030)
!7030 = !{!1036, !945, !945, !945, !940}
!7031 = !DILocalVariable(name: "N", arg: 1, scope: !7028, file: !920, line: 268, type: !945)
!7032 = !DILocation(line: 268, column: 44, scope: !7028)
!7033 = !DILocalVariable(name: "K", arg: 2, scope: !7028, file: !920, line: 268, type: !945)
!7034 = !DILocation(line: 268, column: 56, scope: !7028)
!7035 = !DILocalVariable(name: "i", arg: 3, scope: !7028, file: !920, line: 268, type: !945)
!7036 = !DILocation(line: 268, column: 68, scope: !7028)
!7037 = !DILocalVariable(name: "y", arg: 4, scope: !7028, file: !920, line: 268, type: !940)
!7038 = !DILocation(line: 268, column: 76, scope: !7028)
!7039 = !DILocalVariable(name: "norm", scope: !7028, file: !920, line: 270, type: !1036)
!7040 = !DILocation(line: 270, column: 14, scope: !7028)
!7041 = !DILocalVariable(name: "q", scope: !7028, file: !920, line: 271, type: !945)
!7042 = !DILocation(line: 271, column: 14, scope: !7028)
!7043 = !DILocalVariable(name: "p", scope: !7028, file: !920, line: 271, type: !945)
!7044 = !DILocation(line: 271, column: 17, scope: !7028)
!7045 = !DILocalVariable(name: "s", scope: !7028, file: !920, line: 272, type: !915)
!7046 = !DILocation(line: 272, column: 9, scope: !7028)
!7047 = !DILocalVariable(name: "val", scope: !7028, file: !920, line: 272, type: !915)
!7048 = !DILocation(line: 272, column: 12, scope: !7028)
!7049 = !DILocalVariable(name: "k0", scope: !7028, file: !920, line: 273, type: !915)
!7050 = !DILocation(line: 273, column: 9, scope: !7028)
!7051 = !DILocation(line: 275, column: 5, scope: !7028)
!7052 = !DILocation(line: 275, column: 12, scope: !7053)
!7053 = !DILexicalBlockFile(scope: !7028, file: !920, discriminator: 1)
!7054 = !DILocation(line: 275, column: 14, scope: !7053)
!7055 = !DILocation(line: 275, column: 5, scope: !7053)
!7056 = !DILocation(line: 277, column: 13, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !920, line: 277, column: 13)
!7058 = distinct !DILexicalBlock(scope: !7028, file: !920, line: 275, column: 19)
!7059 = !DILocation(line: 277, column: 18, scope: !7057)
!7060 = !DILocation(line: 277, column: 15, scope: !7057)
!7061 = !DILocation(line: 277, column: 13, scope: !7058)
!7062 = !DILocalVariable(name: "row", scope: !7063, file: !920, line: 278, type: !7064)
!7063 = distinct !DILexicalBlock(scope: !7057, file: !920, line: 277, column: 21)
!7064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6788, size: 64, align: 64)
!7065 = !DILocation(line: 278, column: 29, scope: !7063)
!7066 = !DILocation(line: 278, column: 53, scope: !7063)
!7067 = !DILocation(line: 278, column: 35, scope: !7063)
!7068 = !DILocation(line: 281, column: 21, scope: !7063)
!7069 = !DILocation(line: 281, column: 23, scope: !7063)
!7070 = !DILocation(line: 281, column: 17, scope: !7063)
!7071 = !DILocation(line: 281, column: 15, scope: !7063)
!7072 = !DILocation(line: 282, column: 19, scope: !7063)
!7073 = !DILocation(line: 282, column: 24, scope: !7063)
!7074 = !DILocation(line: 282, column: 21, scope: !7063)
!7075 = !DILocation(line: 282, column: 17, scope: !7063)
!7076 = !DILocation(line: 282, column: 15, scope: !7063)
!7077 = !DILocation(line: 283, column: 18, scope: !7063)
!7078 = !DILocation(line: 283, column: 22, scope: !7063)
!7079 = !DILocation(line: 283, column: 20, scope: !7063)
!7080 = !DILocation(line: 283, column: 15, scope: !7063)
!7081 = !DILocation(line: 286, column: 18, scope: !7063)
!7082 = !DILocation(line: 286, column: 16, scope: !7063)
!7083 = !DILocation(line: 287, column: 21, scope: !7063)
!7084 = !DILocation(line: 287, column: 17, scope: !7063)
!7085 = !DILocation(line: 287, column: 15, scope: !7063)
!7086 = !DILocation(line: 288, column: 17, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7063, file: !920, line: 288, column: 17)
!7088 = !DILocation(line: 288, column: 21, scope: !7087)
!7089 = !DILocation(line: 288, column: 19, scope: !7087)
!7090 = !DILocation(line: 288, column: 17, scope: !7063)
!7091 = !DILocation(line: 289, column: 21, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7087, file: !920, line: 288, column: 24)
!7093 = !DILocation(line: 289, column: 19, scope: !7092)
!7094 = !DILocation(line: 290, column: 17, scope: !7092)
!7095 = distinct !{!7095, !7094}
!7096 = !DILocation(line: 291, column: 48, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7092, file: !920, line: 290, column: 20)
!7098 = !DILocation(line: 291, column: 25, scope: !7097)
!7099 = !DILocation(line: 291, column: 43, scope: !7097)
!7100 = !DILocation(line: 291, column: 23, scope: !7097)
!7101 = !DILocation(line: 292, column: 17, scope: !7097)
!7102 = !DILocation(line: 292, column: 26, scope: !7103)
!7103 = !DILexicalBlockFile(scope: !7092, file: !920, discriminator: 1)
!7104 = !DILocation(line: 292, column: 30, scope: !7103)
!7105 = !DILocation(line: 292, column: 28, scope: !7103)
!7106 = !DILocation(line: 292, column: 17, scope: !7103)
!7107 = !DILocation(line: 293, column: 13, scope: !7092)
!7108 = !DILocation(line: 294, column: 30, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7087, file: !920, line: 294, column: 17)
!7110 = !DILocation(line: 294, column: 26, scope: !7109)
!7111 = !DILocation(line: 294, column: 24, scope: !7109)
!7112 = !DILocation(line: 294, column: 22, scope: !7109)
!7113 = !DILocation(line: 294, column: 34, scope: !7114)
!7114 = !DILexicalBlockFile(scope: !7115, file: !920, discriminator: 1)
!7115 = distinct !DILexicalBlock(scope: !7109, file: !920, line: 294, column: 17)
!7116 = !DILocation(line: 294, column: 38, scope: !7114)
!7117 = !DILocation(line: 294, column: 36, scope: !7114)
!7118 = !DILocation(line: 294, column: 17, scope: !7114)
!7119 = !DILocation(line: 295, column: 22, scope: !7115)
!7120 = !DILocation(line: 295, column: 21, scope: !7115)
!7121 = !DILocation(line: 294, column: 49, scope: !7122)
!7122 = !DILexicalBlockFile(scope: !7115, file: !920, discriminator: 2)
!7123 = !DILocation(line: 294, column: 45, scope: !7122)
!7124 = !DILocation(line: 294, column: 43, scope: !7122)
!7125 = !DILocation(line: 294, column: 17, scope: !7122)
!7126 = distinct !{!7126, !7127}
!7127 = !DILocation(line: 294, column: 17, scope: !7087)
!7128 = !DILocation(line: 297, column: 18, scope: !7063)
!7129 = !DILocation(line: 297, column: 15, scope: !7063)
!7130 = !DILocation(line: 298, column: 20, scope: !7063)
!7131 = !DILocation(line: 298, column: 25, scope: !7063)
!7132 = !DILocation(line: 298, column: 23, scope: !7063)
!7133 = !DILocation(line: 298, column: 29, scope: !7063)
!7134 = !DILocation(line: 298, column: 27, scope: !7063)
!7135 = !DILocation(line: 298, column: 34, scope: !7063)
!7136 = !DILocation(line: 298, column: 32, scope: !7063)
!7137 = !DILocation(line: 298, column: 17, scope: !7063)
!7138 = !DILocation(line: 299, column: 21, scope: !7063)
!7139 = !DILocation(line: 299, column: 27, scope: !7063)
!7140 = !DILocation(line: 299, column: 25, scope: !7063)
!7141 = !DILocation(line: 299, column: 18, scope: !7063)
!7142 = !DILocation(line: 300, column: 20, scope: !7063)
!7143 = !DILocation(line: 300, column: 15, scope: !7063)
!7144 = !DILocation(line: 300, column: 18, scope: !7063)
!7145 = !DILocation(line: 301, column: 9, scope: !7063)
!7146 = !DILocation(line: 303, column: 39, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7057, file: !920, line: 301, column: 16)
!7148 = !DILocation(line: 303, column: 17, scope: !7147)
!7149 = !DILocation(line: 303, column: 35, scope: !7147)
!7150 = !DILocation(line: 303, column: 15, scope: !7147)
!7151 = !DILocation(line: 304, column: 42, scope: !7147)
!7152 = !DILocation(line: 304, column: 17, scope: !7147)
!7153 = !DILocation(line: 304, column: 35, scope: !7147)
!7154 = !DILocation(line: 304, column: 37, scope: !7147)
!7155 = !DILocation(line: 304, column: 15, scope: !7147)
!7156 = !DILocation(line: 306, column: 17, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7147, file: !920, line: 306, column: 17)
!7158 = !DILocation(line: 306, column: 22, scope: !7157)
!7159 = !DILocation(line: 306, column: 19, scope: !7157)
!7160 = !DILocation(line: 306, column: 24, scope: !7157)
!7161 = !DILocation(line: 306, column: 27, scope: !7162)
!7162 = !DILexicalBlockFile(scope: !7157, file: !920, discriminator: 1)
!7163 = !DILocation(line: 306, column: 31, scope: !7162)
!7164 = !DILocation(line: 306, column: 29, scope: !7162)
!7165 = !DILocation(line: 306, column: 17, scope: !7162)
!7166 = !DILocation(line: 307, column: 22, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7157, file: !920, line: 306, column: 34)
!7168 = !DILocation(line: 307, column: 19, scope: !7167)
!7169 = !DILocation(line: 308, column: 19, scope: !7167)
!7170 = !DILocation(line: 308, column: 22, scope: !7167)
!7171 = !DILocation(line: 309, column: 13, scope: !7167)
!7172 = !DILocation(line: 311, column: 23, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7157, file: !920, line: 309, column: 20)
!7174 = !DILocation(line: 311, column: 28, scope: !7173)
!7175 = !DILocation(line: 311, column: 25, scope: !7173)
!7176 = !DILocation(line: 311, column: 21, scope: !7173)
!7177 = !DILocation(line: 311, column: 19, scope: !7173)
!7178 = !DILocation(line: 312, column: 22, scope: !7173)
!7179 = !DILocation(line: 312, column: 26, scope: !7173)
!7180 = !DILocation(line: 312, column: 24, scope: !7173)
!7181 = !DILocation(line: 312, column: 19, scope: !7173)
!7182 = !DILocation(line: 315, column: 22, scope: !7173)
!7183 = !DILocation(line: 315, column: 20, scope: !7173)
!7184 = !DILocation(line: 316, column: 17, scope: !7173)
!7185 = distinct !{!7185, !7184}
!7186 = !DILocation(line: 316, column: 47, scope: !7187)
!7187 = !DILexicalBlockFile(scope: !7173, file: !920, discriminator: 1)
!7188 = !DILocation(line: 316, column: 24, scope: !7187)
!7189 = !DILocation(line: 316, column: 42, scope: !7187)
!7190 = !DILocation(line: 316, column: 22, scope: !7187)
!7191 = !DILocation(line: 316, column: 20, scope: !7187)
!7192 = !DILocation(line: 317, column: 24, scope: !7173)
!7193 = !DILocation(line: 317, column: 28, scope: !7173)
!7194 = !DILocation(line: 317, column: 26, scope: !7173)
!7195 = !DILocation(line: 316, column: 20, scope: !7196)
!7196 = !DILexicalBlockFile(scope: !7173, file: !920, discriminator: 2)
!7197 = !DILocation(line: 319, column: 22, scope: !7173)
!7198 = !DILocation(line: 319, column: 19, scope: !7173)
!7199 = !DILocation(line: 320, column: 24, scope: !7173)
!7200 = !DILocation(line: 320, column: 29, scope: !7173)
!7201 = !DILocation(line: 320, column: 27, scope: !7173)
!7202 = !DILocation(line: 320, column: 33, scope: !7173)
!7203 = !DILocation(line: 320, column: 31, scope: !7173)
!7204 = !DILocation(line: 320, column: 38, scope: !7173)
!7205 = !DILocation(line: 320, column: 36, scope: !7173)
!7206 = !DILocation(line: 320, column: 21, scope: !7173)
!7207 = !DILocation(line: 321, column: 25, scope: !7173)
!7208 = !DILocation(line: 321, column: 31, scope: !7173)
!7209 = !DILocation(line: 321, column: 29, scope: !7173)
!7210 = !DILocation(line: 321, column: 22, scope: !7173)
!7211 = !DILocation(line: 322, column: 24, scope: !7173)
!7212 = !DILocation(line: 322, column: 19, scope: !7173)
!7213 = !DILocation(line: 322, column: 22, scope: !7173)
!7214 = !DILocation(line: 325, column: 10, scope: !7058)
!7215 = !DILocation(line: 275, column: 5, scope: !7216)
!7216 = !DILexicalBlockFile(scope: !7028, file: !920, discriminator: 2)
!7217 = distinct !{!7217, !7051}
!7218 = !DILocation(line: 329, column: 13, scope: !7028)
!7219 = !DILocation(line: 329, column: 11, scope: !7028)
!7220 = !DILocation(line: 329, column: 15, scope: !7028)
!7221 = !DILocation(line: 329, column: 7, scope: !7028)
!7222 = !DILocation(line: 330, column: 11, scope: !7028)
!7223 = !DILocation(line: 330, column: 16, scope: !7028)
!7224 = !DILocation(line: 330, column: 13, scope: !7028)
!7225 = !DILocation(line: 330, column: 9, scope: !7028)
!7226 = !DILocation(line: 330, column: 7, scope: !7028)
!7227 = !DILocation(line: 331, column: 10, scope: !7028)
!7228 = !DILocation(line: 331, column: 14, scope: !7028)
!7229 = !DILocation(line: 331, column: 12, scope: !7028)
!7230 = !DILocation(line: 331, column: 7, scope: !7028)
!7231 = !DILocation(line: 332, column: 10, scope: !7028)
!7232 = !DILocation(line: 332, column: 8, scope: !7028)
!7233 = !DILocation(line: 333, column: 10, scope: !7028)
!7234 = !DILocation(line: 333, column: 12, scope: !7028)
!7235 = !DILocation(line: 333, column: 17, scope: !7028)
!7236 = !DILocation(line: 333, column: 7, scope: !7028)
!7237 = !DILocation(line: 335, column: 9, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7028, file: !920, line: 335, column: 9)
!7239 = !DILocation(line: 335, column: 9, scope: !7028)
!7240 = !DILocation(line: 336, column: 18, scope: !7238)
!7241 = !DILocation(line: 336, column: 16, scope: !7238)
!7242 = !DILocation(line: 336, column: 20, scope: !7238)
!7243 = !DILocation(line: 336, column: 11, scope: !7238)
!7244 = !DILocation(line: 336, column: 9, scope: !7238)
!7245 = !DILocation(line: 338, column: 12, scope: !7028)
!7246 = !DILocation(line: 338, column: 17, scope: !7028)
!7247 = !DILocation(line: 338, column: 15, scope: !7028)
!7248 = !DILocation(line: 338, column: 21, scope: !7028)
!7249 = !DILocation(line: 338, column: 19, scope: !7028)
!7250 = !DILocation(line: 338, column: 26, scope: !7028)
!7251 = !DILocation(line: 338, column: 24, scope: !7028)
!7252 = !DILocation(line: 338, column: 9, scope: !7028)
!7253 = !DILocation(line: 339, column: 13, scope: !7028)
!7254 = !DILocation(line: 339, column: 19, scope: !7028)
!7255 = !DILocation(line: 339, column: 17, scope: !7028)
!7256 = !DILocation(line: 339, column: 10, scope: !7028)
!7257 = !DILocation(line: 340, column: 12, scope: !7028)
!7258 = !DILocation(line: 340, column: 7, scope: !7028)
!7259 = !DILocation(line: 340, column: 10, scope: !7028)
!7260 = !DILocation(line: 343, column: 10, scope: !7028)
!7261 = !DILocation(line: 343, column: 9, scope: !7028)
!7262 = !DILocation(line: 343, column: 7, scope: !7028)
!7263 = !DILocation(line: 344, column: 12, scope: !7028)
!7264 = !DILocation(line: 344, column: 16, scope: !7028)
!7265 = !DILocation(line: 344, column: 14, scope: !7028)
!7266 = !DILocation(line: 344, column: 21, scope: !7028)
!7267 = !DILocation(line: 344, column: 19, scope: !7028)
!7268 = !DILocation(line: 344, column: 9, scope: !7028)
!7269 = !DILocation(line: 345, column: 13, scope: !7028)
!7270 = !DILocation(line: 345, column: 19, scope: !7028)
!7271 = !DILocation(line: 345, column: 17, scope: !7028)
!7272 = !DILocation(line: 345, column: 10, scope: !7028)
!7273 = !DILocation(line: 346, column: 10, scope: !7028)
!7274 = !DILocation(line: 346, column: 6, scope: !7028)
!7275 = !DILocation(line: 346, column: 8, scope: !7028)
!7276 = !DILocation(line: 348, column: 12, scope: !7028)
!7277 = !DILocation(line: 348, column: 5, scope: !7028)
