; ModuleID = '/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--vc1dec.o.i'
source_filename = "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--vc1dec.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.AVProfile = type { i32, i8* }
%struct.AVCodecHWConfigInternal = type { %struct.AVCodecHWConfig, %struct.AVHWAccel* }
%struct.AVCodecHWConfig = type { i32, i32, i32 }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.MpegEncContext = type { %struct.AVClass*, i32, i32, i32, [12 x i32], i32, %struct.ScanTable, %struct.ScanTable, %struct.ScanTable, %struct.ScanTable, %struct.AVCodecContext*, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, %struct.Picture*, %struct.Picture**, %struct.Picture**, i64, i64, i64, %struct.PutBitContext, i32, i32, [32 x %struct.MpegEncContext*], i32, %struct.Picture, %struct.Picture, %struct.Picture, %struct.Picture, %struct.Picture*, %struct.Picture*, %struct.Picture*, [3 x i32], i16*, [3 x i16*], i8*, i8*, i8*, i8*, i8*, [16 x i16]*, [3 x [16 x i16]*], i32, i8*, i8*, i8*, i8*, %struct.ScratchpadContext, i32, i32, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.AVRational, [5 x i32], i32, i32, i32, %struct.BlockDSPContext, %struct.FDCTDSPContext, %struct.H264ChromaContext, %struct.HpelDSPContext, %struct.IDCTDSPContext, %struct.MECmpContext, %struct.MpegVideoDSPContext, %struct.MpegvideoEncDSPContext, %struct.PixblockDSPContext, %struct.QpelDSPContext, %struct.VideoDSPContext, %struct.H263DSPContext, i32, i32, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x [2 x [2 x i16]*]], [2 x [2 x [2 x [2 x i16]*]]], [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x i16]*, [2 x [2 x [2 x i16]*]], [2 x [2 x [2 x [2 x i16]*]]], [2 x i8*], [2 x [2 x i8*]], i32, i32, i32, i32, i32, [2 x [4 x [2 x i32]]], [2 x [2 x i32]], [2 x [2 x [2 x i32]]], i8*, [2 x [64 x i16]], %struct.MotionEstContext, i32, i32, i32, i32, i32, i16*, [6 x i32], [6 x i32], [3 x i8*], i32*, [64 x i16], [64 x i16], [64 x i16], [64 x i16], i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, [12 x i32], [64 x i32]*, [64 x i32]*, [64 x i32]*, [2 x [64 x i16]]*, [2 x [64 x i16]]*, [2 x [64 x i16]]*, [64 x i32]*, [2 x i32], [64 x i16]*, i64, i32, i32, i32, %struct.RateControlContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.GetBitContext, i32, i32, %struct.ParseContext, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i16, i16, i16, i16, i32, [2 x [2 x i32]], [2 x [2 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.PutBitContext, %struct.PutBitContext, i32, i32, i32, i8*, i32, i32, i32, [3 x i32], %struct.MJpegContext*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x [65 x [65 x [2 x i32]]]]*, i32, i32, %struct.GetBitContext, i32, i32, i8*, i32, [2 x [2 x i32]], i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i8*, %struct.AVTimecode, i8*, i32, i32, [12 x [64 x i16]*], [64 x i16]*, [12 x [64 x i16]]*, i32 (%struct.MpegEncContext*, [64 x i16]*)*, [12 x [64 x i32]]*, i32, [3 x [256 x i16]]*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, void (%struct.MpegEncContext*, i16*, i32, i32)*, i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)*, i32 (%struct.MpegEncContext*, i16*, i32, i32, i32*)*, void (%struct.MpegEncContext*, i16*)*, i32, i32, float, float, i32, float, float, float, i32, i32, i32, i8*, float*, float*, i32, %struct.ERContext, i32, [18 x %struct.AVFrame*], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ScanTable = type { i8*, [64 x i8], [64 x i8] }
%struct.Picture = type { %struct.AVFrame*, %struct.ThreadFrame, %struct.AVBufferRef*, i8*, [2 x %struct.AVBufferRef*], [2 x [2 x i16]*], %struct.AVBufferRef*, i32*, %struct.AVBufferRef*, i8*, [2 x %struct.AVBufferRef*], [2 x i8*], %struct.AVBufferRef*, i16*, %struct.AVBufferRef*, i16*, i32, i32, %struct.AVBufferRef*, i8*, %struct.AVBufferRef*, i8*, i32, i64, i64, i32, i32, i32, i32, [8 x i64] }
%struct.ThreadFrame = type { %struct.AVFrame*, [2 x %struct.AVCodecContext*], %struct.AVBufferRef* }
%struct.ScratchpadContext = type { i8*, i8*, i8*, i8* }
%struct.BlockDSPContext = type { void (i16*)*, void (i16*)*, [2 x void (i8*, i8, i64, i32)*] }
%struct.FDCTDSPContext = type { void (i16*)*, void (i16*)* }
%struct.H264ChromaContext = type { [4 x void (i8*, i8*, i64, i32, i32, i32)*], [4 x void (i8*, i8*, i64, i32, i32, i32)*] }
%struct.HpelDSPContext = type { [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x [4 x void (i8*, i8*, i64, i32)*]], [4 x void (i8*, i8*, i64, i32)*] }
%struct.IDCTDSPContext = type { void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*, i8*, i64)*, void (i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, [64 x i8], i32, i32 }
%struct.MECmpContext = type { i32 (i16*)*, [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*], [2 x [4 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*]], [6 x i32 (%struct.MpegEncContext*, i8*, i8*, i64, i32)*] }
%struct.MpegVideoDSPContext = type { void (i8*, i8*, i32, i32, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)* }
%struct.MpegvideoEncDSPContext = type { i32 (i16*, i16*, i16*, i32)*, void (i16*, i16*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, [4 x void (i8*, i32, i8*, i32, i32, i32)*], void (i8*, i32, i32, i32, i32, i32, i32)* }
%struct.PixblockDSPContext = type { void (i16*, i8*, i64)*, void (i16*, i8*, i8*, i64)*, void (i16*, i8*, i8*, i64)* }
%struct.QpelDSPContext = type { [2 x [16 x void (i8*, i8*, i64)*]], [2 x [16 x void (i8*, i8*, i64)*]], [2 x [16 x void (i8*, i8*, i64)*]] }
%struct.VideoDSPContext = type { void (i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32)*, void (i8*, i64, i32)* }
%struct.H263DSPContext = type { void (i8*, i32, i32)*, void (i8*, i32, i32)* }
%struct.MotionEstContext = type { %struct.AVCodecContext*, i32, [4 x [2 x i32]], [4 x [2 x i32]], i8*, i8*, [2 x i8*], i8*, i32, i32*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x [4 x i8*]], [4 x [4 x i8*]], i32, i32, i64, i64, i32, [4 x void (i8*, i8*, i64, i32)*]*, [4 x void (i8*, i8*, i64, i32)*]*, [16 x void (i8*, i8*, i64)*]*, [16 x void (i8*, i8*, i64)*]*, [16385 x i8]*, i8*, i32 (%struct.MpegEncContext*, i32*, i32*, i32, i32, i32, i32, i32)* }
%struct.RateControlContext = type { i32, %struct.RateControlEntry*, double, [5 x %struct.Predictor], double, double, double, double, double, [5 x double], i64, i64, [5 x i64], [5 x i64], [5 x i64], [5 x i64], [5 x i32], i32, i8*, float, i32, %struct.AVExpr* }
%struct.RateControlEntry = type { i32, float, i32, i32, i32, i32, i32, i64, i32, float, i64, i64, i32, i32, i32, i32 }
%struct.Predictor = type { double, double, double }
%struct.AVExpr = type opaque
%struct.ParseContext = type { i8*, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.PutBitContext = type { i32, i32, i8*, i8*, i8*, i32 }
%struct.MJpegContext = type opaque
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.AVTimecode = type { i32, i32, %struct.AVRational, i32 }
%struct.ERContext = type { %struct.AVCodecContext*, %struct.MECmpContext, i32, i32*, i32, i32, i32, i64, i64, i32, i32, i8*, i8*, [3 x i16*], i8*, i8*, [2 x [4 x [2 x i32]]], %struct.ERPicture, %struct.ERPicture, %struct.ERPicture, [2 x %struct.AVBufferRef*], [2 x %struct.AVBufferRef*], i16, i16, i32, i32, i32, void (i8*, i32, i32, i32, [2 x [4 x [2 x i32]]]*, i32, i32, i32, i32)*, i8* }
%struct.ERPicture = type { %struct.AVFrame*, %struct.ThreadFrame*, [2 x [2 x i16]*], [2 x i8*], i32*, i32 }
%struct.VC1Context = type { %struct.MpegEncContext, %struct.IntraX8Context, %struct.H264ChromaContext, %struct.VC1DSPContext, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, i8, i8, [4 x [64 x i8]], i32, i32, i8*, i8*, i8, i8, i8, i8, i32, i32, i32, i8, i32*, i32*, i32, i32, i32, i32, i32, i8*, [3 x i8*], i8, i8, i16, i8, i8, i32, i8, i8, %struct.VLC*, i32, i8*, i8*, i8*, i32, i32, i32, i32, [2 x [256 x i8]], [2 x [256 x i8]], [2 x [256 x i8]], [2 x [256 x i8]], [2 x [256 x i8]], [2 x [256 x i8]], [256 x i8]*, [256 x i8]*, i32, i32*, i32, i32, i32, i32, i8, i8, i32, i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i32, i8, i8, i8*, i32, i8*, i32, i8, i16*, i16*, i8*, i8, i8, i8, i8, i8, i32, i32, i8, i8, %struct.VLC*, %struct.VLC*, %struct.VLC*, %struct.VLC*, i8, i8, i8*, i32, [64 x i8], i8*, i8*, i8*, [2 x i8*], i8*, [2 x i8*], i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, [2 x [2 x i8*]], i32, i32, i32, [6 x [64 x i16]]*, i32, i32, i32, i32, i32, i32*, i32*, i8*, i8*, [2 x i16]*, [2 x i16]*, i8, i8, i8, i32, i32, i32 }
%struct.IntraX8Context = type { [4 x %struct.VLC*], %struct.VLC*, [3 x %struct.VLC*], i32, i8*, [3 x %struct.ScanTable], %struct.WMV2DSPContext, [64 x i8], %struct.AVCodecContext*, i32*, [64 x i16]*, %struct.IntraX8DSPContext, %struct.IDCTDSPContext, %struct.BlockDSPContext, i32, i32, i32, i32, %struct.AVFrame*, %struct.GetBitContext*, i32, i32, i32, [3 x i8*], [42 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.WMV2DSPContext = type { void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, [8 x void (i8*, i8*, i64)*], i32 }
%struct.IntraX8DSPContext = type { void (i8*, i64, i32)*, void (i8*, i64, i32)*, [12 x void (i8*, i8*, i64)*], void (i8*, i8*, i64, i32*, i32*, i32)* }
%struct.VC1DSPContext = type { void (i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, void (i8*, i64, i16*)*, void (i8*, i32)*, void (i8*, i32)*, void (i16*, i16*)*, void (i16*, i16*, i32, i32, i32)*, void (i8*, i32, i32)*, void (i8*, i32, i32)*, void (i8*, i32, i32)*, void (i8*, i32, i32)*, void (i8*, i32, i32)*, void (i8*, i32, i32)*, [2 x [16 x void (i8*, i8*, i64, i32)*]], [2 x [16 x void (i8*, i8*, i64, i32)*]], [3 x void (i8*, i8*, i64, i32, i32, i32)*], [3 x void (i8*, i8*, i64, i32, i32, i32)*], void (i8*, i8*, i32, i32, i32)*, void (i8*, i8*, i8*, i32, i32)*, void (i8*, i8*, i8*, i32, i32)*, void (i8*, i8*, i8*, i32, i8*, i32, i32)*, void (i8*, i8*, i8*, i32, i8*, i8*, i32, i32, i32)*, i32 (i8*, i32)* }
%struct.VLC = type { i32, [2 x i16]*, i32, i32 }
%union.unaligned_32 = type { i32 }
%struct.anon = type { i8*, %struct.GetBitContext, i32, i8*, i32 }
%struct.SpriteData = type { [2 x [7 x i32]], i32, i32, i32, i32, [15 x i32], [10 x i32] }

@ff_wmv1_scantable = external constant [4 x [64 x i8]], align 16
@ff_vc1_adv_interlaced_8x8_zz = external constant [64 x i8], align 16
@.str = private unnamed_addr constant [4 x i8] c"vc1\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"SMPTE VC-1\00", align 1
@vc1_hwaccel_pixfmt_list_420 = internal constant [2 x i32] [i32 0, i32 -1], align 4
@ff_vc1_profiles = external constant [0 x %struct.AVProfile], align 8
@.compoundliteral = internal global [1 x %struct.AVCodecHWConfigInternal*] zeroinitializer, align 8
@ff_vc1_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), i32 0, i32 70, i32 34, %struct.AVRational* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @vc1_hwaccel_pixfmt_list_420, i32 0, i32 0), i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* getelementptr inbounds ([0 x %struct.AVProfile], [0 x %struct.AVProfile]* @ff_vc1_profiles, i32 0, i32 0), i8* null, i32 16992, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @vc1_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @vc1_decode_frame, i32 (%struct.AVCodecContext*)* @ff_vc1_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @ff_mpeg_flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** getelementptr inbounds ([1 x %struct.AVCodecHWConfigInternal*], [1 x %struct.AVCodecHWConfigInternal*]* @.compoundliteral, i32 0, i32 0) }, align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"wmv3\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"Windows Media Video 9\00", align 1
@.compoundliteral.4 = internal global [1 x %struct.AVCodecHWConfigInternal*] zeroinitializer, align 8
@ff_wmv3_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0), i32 0, i32 71, i32 34, %struct.AVRational* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @vc1_hwaccel_pixfmt_list_420, i32 0, i32 0), i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* getelementptr inbounds ([0 x %struct.AVProfile], [0 x %struct.AVProfile]* @ff_vc1_profiles, i32 0, i32 0), i8* null, i32 16992, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @vc1_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @vc1_decode_frame, i32 (%struct.AVCodecContext*)* @ff_vc1_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @ff_mpeg_flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** getelementptr inbounds ([1 x %struct.AVCodecHWConfigInternal*], [1 x %struct.AVCodecHWConfigInternal*]* @.compoundliteral.4, i32 0, i32 0) }, align 8
@.str.5 = private unnamed_addr constant [10 x i8] c"wmv3image\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"Windows Media Video 9 Image\00", align 1
@.compoundliteral.7 = internal constant [2 x i32] [i32 0, i32 -1], align 4
@ff_wmv3image_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 0, i32 150, i32 2, %struct.AVRational* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral.7, i32 0, i32 0), i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 16992, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @vc1_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @vc1_decode_frame, i32 (%struct.AVCodecContext*)* @ff_vc1_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @vc1_sprite_flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.8 = private unnamed_addr constant [9 x i8] c"vc1image\00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"Windows Media Video 9 Image v2\00", align 1
@.compoundliteral.10 = internal constant [2 x i32] [i32 0, i32 -1], align 4
@ff_vc1image_decoder = global %struct.AVCodec { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i32 0, i32 0), i32 0, i32 151, i32 2, %struct.AVRational* null, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.compoundliteral.10, i32 0, i32 0), i32* null, i32* null, i64* null, i8 0, %struct.AVClass* null, %struct.AVProfile* null, i8* null, i32 16992, %struct.AVCodec* null, i32 (%struct.AVCodecContext*)* null, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)* null, %struct.AVCodecDefault* null, void (%struct.AVCodec*)* null, i32 (%struct.AVCodecContext*)* @vc1_decode_init, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)* null, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)* @vc1_decode_frame, i32 (%struct.AVCodecContext*)* @ff_vc1_decode_end, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, i32 (%struct.AVCodecContext*, %struct.AVPacket*)* null, i32 (%struct.AVCodecContext*, %struct.AVFrame*)* null, void (%struct.AVCodecContext*)* @vc1_sprite_flush, i32 0, i8* null, %struct.AVCodecHWConfigInternal** null }, align 8
@.str.11 = private unnamed_addr constant [37 x i8] c"Extra data: %i bits left, value: %X\0A\00", align 1
@.str.12 = private unnamed_addr constant [26 x i8] c"Read %i bits in overflow\0A\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"Extradata size too small: %i\0A\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"Incomplete extradata\0A\00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c"odd sprites support\00", align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"Error in WVC1 interlaced frame\0A\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"pict_type: %c\0A\00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"Sprite decoder: expected I-frame\0A\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"image too short\0A\00", align 1
@.str.20 = private unnamed_addr constant [43 x i8] c"Skipping B frame without reference frames\0A\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"Slice header damaged\0A\00", align 1
@.str.22 = private unnamed_addr constant [39 x i8] c"parsing header for second field failed\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"mb_height > 0\00", align 1
@.str.25 = private unnamed_addr constant [20 x i8] c"libavcodec/vc1dec.c\00", align 1
@.str.26 = private unnamed_addr constant [52 x i8] c"Slice %d starts beyond picture boundary (%d >= %d)\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"(s->mb_height & 1) == 0\00", align 1
@.str.28 = private unnamed_addr constant [22 x i8] c"Field header damaged\0A\00", align 1
@.str.29 = private unnamed_addr constant [35 x i8] c"first field slice count too large\0A\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"end mb y %d %d invalid\0A\00", align 1
@.str.31 = private unnamed_addr constant [19 x i8] c"missing cbpcy_vlc\0A\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"Got no sprites\0A\00", align 1
@.str.33 = private unnamed_addr constant [32 x i8] c"Need two sprites, only got one\0A\00", align 1
@.str.34 = private unnamed_addr constant [31 x i8] c"Non-zero rotation coefficients\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"S2:\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"S1:\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c" %d.%.3d\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.39 = private unnamed_addr constant [21 x i8] c"Effect: %d; params: \00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c" %d.%.2d\00", align 1
@.str.41 = private unnamed_addr constant [28 x i8] c"Too many effect parameters\0A\00", align 1
@.str.42 = private unnamed_addr constant [18 x i8] c"Effect params 2: \00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"Effect flag set\0A\00", align 1
@.str.44 = private unnamed_addr constant [16 x i8] c"Buffer overrun\0A\00", align 1
@.str.45 = private unnamed_addr constant [23 x i8] c"Buffer not fully read\0A\00", align 1
@vc1_draw_sprites.sr_cache = private unnamed_addr constant [2 x [2 x i32]] [[2 x i32] [i32 -1, i32 -1], [2 x i32] [i32 -1, i32 -1]], align 16

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_vc1_decode_init_alloc_tables(%struct.VC1Context* %v) #0 !dbg !2652 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca %struct.VC1Context*, align 8
  %s = alloca %struct.MpegEncContext*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %mb_height = alloca i32, align 4
  store %struct.VC1Context* %v, %struct.VC1Context** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC1Context** %v.addr, metadata !3011, metadata !3012), !dbg !3013
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s, metadata !3014, metadata !3012), !dbg !3016
  %0 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3017
  %s1 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %0, i32 0, i32 0, !dbg !3018
  store %struct.MpegEncContext* %s1, %struct.MpegEncContext** %s, align 8, !dbg !3016
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3019, metadata !3012), !dbg !3020
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3021, metadata !3012), !dbg !3022
  store i32 -12, i32* %ret, align 4, !dbg !3022
  call void @llvm.dbg.declare(metadata i32* %mb_height, metadata !3023, metadata !3012), !dbg !3024
  %1 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3025
  %mb_height2 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1, i32 0, i32 36, !dbg !3026
  %2 = load i32, i32* %mb_height2, align 8, !dbg !3026
  %add = add nsw i32 %2, 2, !dbg !3027
  %sub = sub nsw i32 %add, 1, !dbg !3028
  %and = and i32 %sub, -2, !dbg !3029
  store i32 %and, i32* %mb_height, align 4, !dbg !3024
  %3 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3030
  %mb_stride = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %3, i32 0, i32 37, !dbg !3031
  %4 = load i32, i32* %mb_stride, align 4, !dbg !3031
  %5 = load i32, i32* %mb_height, align 4, !dbg !3032
  %mul = mul nsw i32 %4, %5, !dbg !3033
  %conv = sext i32 %mul to i64, !dbg !3030
  %call = call noalias i8* @av_malloc(i64 %conv), !dbg !3034
  %6 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3035
  %mv_type_mb_plane = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %6, i32 0, i32 80, !dbg !3036
  store i8* %call, i8** %mv_type_mb_plane, align 8, !dbg !3037
  %7 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3038
  %mb_stride3 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %7, i32 0, i32 37, !dbg !3039
  %8 = load i32, i32* %mb_stride3, align 4, !dbg !3039
  %9 = load i32, i32* %mb_height, align 4, !dbg !3040
  %mul4 = mul nsw i32 %8, %9, !dbg !3041
  %conv5 = sext i32 %mul4 to i64, !dbg !3038
  %call6 = call noalias i8* @av_malloc(i64 %conv5), !dbg !3042
  %10 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3043
  %direct_mb_plane = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %10, i32 0, i32 81, !dbg !3044
  store i8* %call6, i8** %direct_mb_plane, align 8, !dbg !3045
  %11 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3046
  %mb_stride7 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %11, i32 0, i32 37, !dbg !3047
  %12 = load i32, i32* %mb_stride7, align 4, !dbg !3047
  %13 = load i32, i32* %mb_height, align 4, !dbg !3048
  %mul8 = mul nsw i32 %12, %13, !dbg !3049
  %conv9 = sext i32 %mul8 to i64, !dbg !3046
  %call10 = call noalias i8* @av_malloc(i64 %conv9), !dbg !3050
  %14 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3051
  %forward_mb_plane = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %14, i32 0, i32 82, !dbg !3052
  store i8* %call10, i8** %forward_mb_plane, align 8, !dbg !3053
  %15 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3054
  %mb_stride11 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %15, i32 0, i32 37, !dbg !3055
  %16 = load i32, i32* %mb_stride11, align 4, !dbg !3055
  %17 = load i32, i32* %mb_height, align 4, !dbg !3056
  %mul12 = mul nsw i32 %16, %17, !dbg !3057
  %conv13 = sext i32 %mul12 to i64, !dbg !3054
  %call14 = call noalias i8* @av_mallocz(i64 %conv13), !dbg !3058
  %18 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3059
  %fieldtx_plane = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %18, i32 0, i32 141, !dbg !3060
  store i8* %call14, i8** %fieldtx_plane, align 8, !dbg !3061
  %19 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3062
  %mb_stride15 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %19, i32 0, i32 37, !dbg !3063
  %20 = load i32, i32* %mb_stride15, align 4, !dbg !3063
  %21 = load i32, i32* %mb_height, align 4, !dbg !3064
  %mul16 = mul nsw i32 %20, %21, !dbg !3065
  %conv17 = sext i32 %mul16 to i64, !dbg !3062
  %call18 = call noalias i8* @av_malloc(i64 %conv17), !dbg !3066
  %22 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3067
  %acpred_plane = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %22, i32 0, i32 118, !dbg !3068
  store i8* %call18, i8** %acpred_plane, align 8, !dbg !3069
  %23 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3070
  %mb_stride19 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %23, i32 0, i32 37, !dbg !3071
  %24 = load i32, i32* %mb_stride19, align 4, !dbg !3071
  %25 = load i32, i32* %mb_height, align 4, !dbg !3072
  %mul20 = mul nsw i32 %24, %25, !dbg !3073
  %conv21 = sext i32 %mul20 to i64, !dbg !3070
  %call22 = call noalias i8* @av_malloc(i64 %conv21), !dbg !3074
  %26 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3075
  %over_flags_plane = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %26, i32 0, i32 120, !dbg !3076
  store i8* %call22, i8** %over_flags_plane, align 8, !dbg !3077
  %27 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3078
  %mv_type_mb_plane23 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %27, i32 0, i32 80, !dbg !3080
  %28 = load i8*, i8** %mv_type_mb_plane23, align 8, !dbg !3080
  %tobool = icmp ne i8* %28, null, !dbg !3078
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3081

lor.lhs.false:                                    ; preds = %entry
  %29 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3082
  %direct_mb_plane24 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %29, i32 0, i32 81, !dbg !3084
  %30 = load i8*, i8** %direct_mb_plane24, align 8, !dbg !3084
  %tobool25 = icmp ne i8* %30, null, !dbg !3082
  br i1 %tobool25, label %lor.lhs.false26, label %if.then, !dbg !3085

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %31 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3086
  %forward_mb_plane27 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %31, i32 0, i32 82, !dbg !3088
  %32 = load i8*, i8** %forward_mb_plane27, align 8, !dbg !3088
  %tobool28 = icmp ne i8* %32, null, !dbg !3086
  br i1 %tobool28, label %lor.lhs.false29, label %if.then, !dbg !3089

lor.lhs.false29:                                  ; preds = %lor.lhs.false26
  %33 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3090
  %fieldtx_plane30 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %33, i32 0, i32 141, !dbg !3091
  %34 = load i8*, i8** %fieldtx_plane30, align 8, !dbg !3091
  %tobool31 = icmp ne i8* %34, null, !dbg !3090
  br i1 %tobool31, label %lor.lhs.false32, label %if.then, !dbg !3092

lor.lhs.false32:                                  ; preds = %lor.lhs.false29
  %35 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3093
  %acpred_plane33 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %35, i32 0, i32 118, !dbg !3094
  %36 = load i8*, i8** %acpred_plane33, align 8, !dbg !3094
  %tobool34 = icmp ne i8* %36, null, !dbg !3093
  br i1 %tobool34, label %lor.lhs.false35, label %if.then, !dbg !3095

lor.lhs.false35:                                  ; preds = %lor.lhs.false32
  %37 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3096
  %over_flags_plane36 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %37, i32 0, i32 120, !dbg !3097
  %38 = load i8*, i8** %over_flags_plane36, align 8, !dbg !3097
  %tobool37 = icmp ne i8* %38, null, !dbg !3096
  br i1 %tobool37, label %if.end, label %if.then, !dbg !3098

if.then:                                          ; preds = %lor.lhs.false35, %lor.lhs.false32, %lor.lhs.false29, %lor.lhs.false26, %lor.lhs.false, %entry
  br label %error, !dbg !3100

if.end:                                           ; preds = %lor.lhs.false35
  %39 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3101
  %mb_width = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %39, i32 0, i32 35, !dbg !3102
  %40 = load i32, i32* %mb_width, align 4, !dbg !3102
  %add38 = add nsw i32 %40, 2, !dbg !3103
  %41 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3104
  %n_allocated_blks = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %41, i32 0, i32 184, !dbg !3105
  store i32 %add38, i32* %n_allocated_blks, align 8, !dbg !3106
  %42 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3107
  %n_allocated_blks39 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %42, i32 0, i32 184, !dbg !3108
  %43 = load i32, i32* %n_allocated_blks39, align 8, !dbg !3108
  %conv40 = sext i32 %43 to i64, !dbg !3107
  %mul41 = mul i64 768, %conv40, !dbg !3109
  %call42 = call noalias i8* @av_malloc(i64 %mul41), !dbg !3110
  %44 = bitcast i8* %call42 to [6 x [64 x i16]]*, !dbg !3110
  %45 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3111
  %block = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %45, i32 0, i32 183, !dbg !3112
  store [6 x [64 x i16]]* %44, [6 x [64 x i16]]** %block, align 8, !dbg !3113
  %46 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3114
  %mb_stride43 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %46, i32 0, i32 37, !dbg !3115
  %47 = load i32, i32* %mb_stride43, align 4, !dbg !3115
  %conv44 = sext i32 %47 to i64, !dbg !3114
  %mul45 = mul i64 12, %conv44, !dbg !3116
  %call46 = call noalias i8* @av_malloc(i64 %mul45), !dbg !3117
  %48 = bitcast i8* %call46 to i32*, !dbg !3117
  %49 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3118
  %cbp_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %49, i32 0, i32 189, !dbg !3119
  store i32* %48, i32** %cbp_base, align 8, !dbg !3120
  %50 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3121
  %block47 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %50, i32 0, i32 183, !dbg !3123
  %51 = load [6 x [64 x i16]]*, [6 x [64 x i16]]** %block47, align 8, !dbg !3123
  %tobool48 = icmp ne [6 x [64 x i16]]* %51, null, !dbg !3121
  br i1 %tobool48, label %lor.lhs.false49, label %if.then52, !dbg !3124

lor.lhs.false49:                                  ; preds = %if.end
  %52 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3125
  %cbp_base50 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %52, i32 0, i32 189, !dbg !3127
  %53 = load i32*, i32** %cbp_base50, align 8, !dbg !3127
  %tobool51 = icmp ne i32* %53, null, !dbg !3125
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !3128

if.then52:                                        ; preds = %lor.lhs.false49, %if.end
  br label %error, !dbg !3129

if.end53:                                         ; preds = %lor.lhs.false49
  %54 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3130
  %cbp_base54 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %54, i32 0, i32 189, !dbg !3131
  %55 = load i32*, i32** %cbp_base54, align 8, !dbg !3131
  %56 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3132
  %mb_stride55 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %56, i32 0, i32 37, !dbg !3133
  %57 = load i32, i32* %mb_stride55, align 4, !dbg !3133
  %mul56 = mul nsw i32 2, %57, !dbg !3134
  %idx.ext = sext i32 %mul56 to i64, !dbg !3135
  %add.ptr = getelementptr inbounds i32, i32* %55, i64 %idx.ext, !dbg !3135
  %58 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3136
  %cbp = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %58, i32 0, i32 190, !dbg !3137
  store i32* %add.ptr, i32** %cbp, align 8, !dbg !3138
  %59 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3139
  %mb_stride57 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %59, i32 0, i32 37, !dbg !3140
  %60 = load i32, i32* %mb_stride57, align 4, !dbg !3140
  %conv58 = sext i32 %60 to i64, !dbg !3139
  %mul59 = mul i64 12, %conv58, !dbg !3141
  %call60 = call noalias i8* @av_malloc(i64 %mul59), !dbg !3142
  %61 = bitcast i8* %call60 to i32*, !dbg !3142
  %62 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3143
  %ttblk_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %62, i32 0, i32 61, !dbg !3144
  store i32* %61, i32** %ttblk_base, align 8, !dbg !3145
  %63 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3146
  %ttblk_base61 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %63, i32 0, i32 61, !dbg !3148
  %64 = load i32*, i32** %ttblk_base61, align 8, !dbg !3148
  %tobool62 = icmp ne i32* %64, null, !dbg !3146
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !3149

if.then63:                                        ; preds = %if.end53
  br label %error, !dbg !3150

if.end64:                                         ; preds = %if.end53
  %65 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3151
  %ttblk_base65 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %65, i32 0, i32 61, !dbg !3152
  %66 = load i32*, i32** %ttblk_base65, align 8, !dbg !3152
  %67 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3153
  %mb_stride66 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %67, i32 0, i32 37, !dbg !3154
  %68 = load i32, i32* %mb_stride66, align 4, !dbg !3154
  %mul67 = mul nsw i32 2, %68, !dbg !3155
  %idx.ext68 = sext i32 %mul67 to i64, !dbg !3156
  %add.ptr69 = getelementptr inbounds i32, i32* %66, i64 %idx.ext68, !dbg !3156
  %69 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3157
  %ttblk = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %69, i32 0, i32 62, !dbg !3158
  store i32* %add.ptr69, i32** %ttblk, align 8, !dbg !3159
  %70 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3160
  %mb_stride70 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %70, i32 0, i32 37, !dbg !3161
  %71 = load i32, i32* %mb_stride70, align 4, !dbg !3161
  %conv71 = sext i32 %71 to i64, !dbg !3160
  %mul72 = mul i64 3, %conv71, !dbg !3162
  %call73 = call noalias i8* @av_mallocz(i64 %mul72), !dbg !3163
  %72 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3164
  %is_intra_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %72, i32 0, i32 191, !dbg !3165
  store i8* %call73, i8** %is_intra_base, align 8, !dbg !3166
  %73 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3167
  %is_intra_base74 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %73, i32 0, i32 191, !dbg !3169
  %74 = load i8*, i8** %is_intra_base74, align 8, !dbg !3169
  %tobool75 = icmp ne i8* %74, null, !dbg !3167
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !3170

if.then76:                                        ; preds = %if.end64
  br label %error, !dbg !3171

if.end77:                                         ; preds = %if.end64
  %75 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3172
  %is_intra_base78 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %75, i32 0, i32 191, !dbg !3173
  %76 = load i8*, i8** %is_intra_base78, align 8, !dbg !3173
  %77 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3174
  %mb_stride79 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %77, i32 0, i32 37, !dbg !3175
  %78 = load i32, i32* %mb_stride79, align 4, !dbg !3175
  %mul80 = mul nsw i32 2, %78, !dbg !3176
  %idx.ext81 = sext i32 %mul80 to i64, !dbg !3177
  %add.ptr82 = getelementptr inbounds i8, i8* %76, i64 %idx.ext81, !dbg !3177
  %79 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3178
  %is_intra = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %79, i32 0, i32 192, !dbg !3179
  store i8* %add.ptr82, i8** %is_intra, align 8, !dbg !3180
  %80 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3181
  %mb_stride83 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %80, i32 0, i32 37, !dbg !3182
  %81 = load i32, i32* %mb_stride83, align 4, !dbg !3182
  %conv84 = sext i32 %81 to i64, !dbg !3181
  %mul85 = mul i64 12, %conv84, !dbg !3183
  %call86 = call noalias i8* @av_mallocz(i64 %mul85), !dbg !3184
  %82 = bitcast i8* %call86 to [2 x i16]*, !dbg !3184
  %83 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3185
  %luma_mv_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %83, i32 0, i32 193, !dbg !3186
  store [2 x i16]* %82, [2 x i16]** %luma_mv_base, align 8, !dbg !3187
  %84 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3188
  %luma_mv_base87 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %84, i32 0, i32 193, !dbg !3190
  %85 = load [2 x i16]*, [2 x i16]** %luma_mv_base87, align 8, !dbg !3190
  %tobool88 = icmp ne [2 x i16]* %85, null, !dbg !3188
  br i1 %tobool88, label %if.end90, label %if.then89, !dbg !3191

if.then89:                                        ; preds = %if.end77
  br label %error, !dbg !3192

if.end90:                                         ; preds = %if.end77
  %86 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3193
  %luma_mv_base91 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %86, i32 0, i32 193, !dbg !3194
  %87 = load [2 x i16]*, [2 x i16]** %luma_mv_base91, align 8, !dbg !3194
  %88 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3195
  %mb_stride92 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %88, i32 0, i32 37, !dbg !3196
  %89 = load i32, i32* %mb_stride92, align 4, !dbg !3196
  %mul93 = mul nsw i32 2, %89, !dbg !3197
  %idx.ext94 = sext i32 %mul93 to i64, !dbg !3198
  %add.ptr95 = getelementptr inbounds [2 x i16], [2 x i16]* %87, i64 %idx.ext94, !dbg !3198
  %90 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3199
  %luma_mv = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %90, i32 0, i32 194, !dbg !3200
  store [2 x i16]* %add.ptr95, [2 x i16]** %luma_mv, align 8, !dbg !3201
  %91 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3202
  %b8_stride = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %91, i32 0, i32 38, !dbg !3203
  %92 = load i32, i32* %b8_stride, align 8, !dbg !3203
  %93 = load i32, i32* %mb_height, align 4, !dbg !3204
  %mul96 = mul nsw i32 %93, 2, !dbg !3205
  %add97 = add nsw i32 %mul96, 1, !dbg !3206
  %mul98 = mul nsw i32 %92, %add97, !dbg !3207
  %94 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3208
  %mb_stride99 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %94, i32 0, i32 37, !dbg !3209
  %95 = load i32, i32* %mb_stride99, align 4, !dbg !3209
  %96 = load i32, i32* %mb_height, align 4, !dbg !3210
  %add100 = add nsw i32 %96, 1, !dbg !3211
  %mul101 = mul nsw i32 %95, %add100, !dbg !3212
  %mul102 = mul nsw i32 %mul101, 2, !dbg !3213
  %add103 = add nsw i32 %mul98, %mul102, !dbg !3214
  %conv104 = sext i32 %add103 to i64, !dbg !3202
  %call105 = call noalias i8* @av_malloc(i64 %conv104), !dbg !3215
  %97 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3216
  %mb_type_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %97, i32 0, i32 68, !dbg !3217
  store i8* %call105, i8** %mb_type_base, align 8, !dbg !3218
  %98 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3219
  %mb_type_base106 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %98, i32 0, i32 68, !dbg !3221
  %99 = load i8*, i8** %mb_type_base106, align 8, !dbg !3221
  %tobool107 = icmp ne i8* %99, null, !dbg !3219
  br i1 %tobool107, label %if.end109, label %if.then108, !dbg !3222

if.then108:                                       ; preds = %if.end90
  br label %error, !dbg !3223

if.end109:                                        ; preds = %if.end90
  %100 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3224
  %mb_type_base110 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %100, i32 0, i32 68, !dbg !3225
  %101 = load i8*, i8** %mb_type_base110, align 8, !dbg !3225
  %102 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3226
  %b8_stride111 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %102, i32 0, i32 38, !dbg !3227
  %103 = load i32, i32* %b8_stride111, align 8, !dbg !3227
  %idx.ext112 = sext i32 %103 to i64, !dbg !3228
  %add.ptr113 = getelementptr inbounds i8, i8* %101, i64 %idx.ext112, !dbg !3228
  %add.ptr114 = getelementptr inbounds i8, i8* %add.ptr113, i64 1, !dbg !3229
  %104 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3230
  %mb_type = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %104, i32 0, i32 69, !dbg !3231
  %arrayidx = getelementptr inbounds [3 x i8*], [3 x i8*]* %mb_type, i64 0, i64 0, !dbg !3230
  store i8* %add.ptr114, i8** %arrayidx, align 8, !dbg !3232
  %105 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3233
  %mb_type_base115 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %105, i32 0, i32 68, !dbg !3234
  %106 = load i8*, i8** %mb_type_base115, align 8, !dbg !3234
  %107 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3235
  %b8_stride116 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %107, i32 0, i32 38, !dbg !3236
  %108 = load i32, i32* %b8_stride116, align 8, !dbg !3236
  %109 = load i32, i32* %mb_height, align 4, !dbg !3237
  %mul117 = mul nsw i32 %109, 2, !dbg !3238
  %add118 = add nsw i32 %mul117, 1, !dbg !3239
  %mul119 = mul nsw i32 %108, %add118, !dbg !3240
  %idx.ext120 = sext i32 %mul119 to i64, !dbg !3241
  %add.ptr121 = getelementptr inbounds i8, i8* %106, i64 %idx.ext120, !dbg !3241
  %110 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3242
  %mb_stride122 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %110, i32 0, i32 37, !dbg !3243
  %111 = load i32, i32* %mb_stride122, align 4, !dbg !3243
  %idx.ext123 = sext i32 %111 to i64, !dbg !3244
  %add.ptr124 = getelementptr inbounds i8, i8* %add.ptr121, i64 %idx.ext123, !dbg !3244
  %add.ptr125 = getelementptr inbounds i8, i8* %add.ptr124, i64 1, !dbg !3245
  %112 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3246
  %mb_type126 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %112, i32 0, i32 69, !dbg !3247
  %arrayidx127 = getelementptr inbounds [3 x i8*], [3 x i8*]* %mb_type126, i64 0, i64 1, !dbg !3246
  store i8* %add.ptr125, i8** %arrayidx127, align 8, !dbg !3248
  %113 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3249
  %mb_type128 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %113, i32 0, i32 69, !dbg !3250
  %arrayidx129 = getelementptr inbounds [3 x i8*], [3 x i8*]* %mb_type128, i64 0, i64 1, !dbg !3249
  %114 = load i8*, i8** %arrayidx129, align 8, !dbg !3249
  %115 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3251
  %mb_stride130 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %115, i32 0, i32 37, !dbg !3252
  %116 = load i32, i32* %mb_stride130, align 4, !dbg !3252
  %117 = load i32, i32* %mb_height, align 4, !dbg !3253
  %add131 = add nsw i32 %117, 1, !dbg !3254
  %mul132 = mul nsw i32 %116, %add131, !dbg !3255
  %idx.ext133 = sext i32 %mul132 to i64, !dbg !3256
  %add.ptr134 = getelementptr inbounds i8, i8* %114, i64 %idx.ext133, !dbg !3256
  %118 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3257
  %mb_type135 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %118, i32 0, i32 69, !dbg !3258
  %arrayidx136 = getelementptr inbounds [3 x i8*], [3 x i8*]* %mb_type135, i64 0, i64 2, !dbg !3257
  store i8* %add.ptr134, i8** %arrayidx136, align 8, !dbg !3259
  %119 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3260
  %b8_stride137 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %119, i32 0, i32 38, !dbg !3261
  %120 = load i32, i32* %b8_stride137, align 8, !dbg !3261
  %121 = load i32, i32* %mb_height, align 4, !dbg !3262
  %mul138 = mul nsw i32 %121, 2, !dbg !3263
  %add139 = add nsw i32 %mul138, 1, !dbg !3264
  %mul140 = mul nsw i32 %120, %add139, !dbg !3265
  %122 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3266
  %mb_stride141 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %122, i32 0, i32 37, !dbg !3267
  %123 = load i32, i32* %mb_stride141, align 4, !dbg !3267
  %124 = load i32, i32* %mb_height, align 4, !dbg !3268
  %add142 = add nsw i32 %124, 1, !dbg !3269
  %mul143 = mul nsw i32 %123, %add142, !dbg !3270
  %mul144 = mul nsw i32 %mul143, 2, !dbg !3271
  %add145 = add nsw i32 %mul140, %mul144, !dbg !3272
  %conv146 = sext i32 %add145 to i64, !dbg !3260
  %call147 = call noalias i8* @av_mallocz(i64 %conv146), !dbg !3273
  %125 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3274
  %blk_mv_type_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %125, i32 0, i32 144, !dbg !3275
  store i8* %call147, i8** %blk_mv_type_base, align 8, !dbg !3276
  %126 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3277
  %blk_mv_type_base148 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %126, i32 0, i32 144, !dbg !3279
  %127 = load i8*, i8** %blk_mv_type_base148, align 8, !dbg !3279
  %tobool149 = icmp ne i8* %127, null, !dbg !3277
  br i1 %tobool149, label %if.end151, label %if.then150, !dbg !3280

if.then150:                                       ; preds = %if.end109
  br label %error, !dbg !3281

if.end151:                                        ; preds = %if.end109
  %128 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3282
  %blk_mv_type_base152 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %128, i32 0, i32 144, !dbg !3283
  %129 = load i8*, i8** %blk_mv_type_base152, align 8, !dbg !3283
  %130 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3284
  %b8_stride153 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %130, i32 0, i32 38, !dbg !3285
  %131 = load i32, i32* %b8_stride153, align 8, !dbg !3285
  %idx.ext154 = sext i32 %131 to i64, !dbg !3286
  %add.ptr155 = getelementptr inbounds i8, i8* %129, i64 %idx.ext154, !dbg !3286
  %add.ptr156 = getelementptr inbounds i8, i8* %add.ptr155, i64 1, !dbg !3287
  %132 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3288
  %blk_mv_type = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %132, i32 0, i32 145, !dbg !3289
  store i8* %add.ptr156, i8** %blk_mv_type, align 8, !dbg !3290
  %133 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3291
  %b8_stride157 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %133, i32 0, i32 38, !dbg !3292
  %134 = load i32, i32* %b8_stride157, align 8, !dbg !3292
  %135 = load i32, i32* %mb_height, align 4, !dbg !3293
  %mul158 = mul nsw i32 %135, 2, !dbg !3294
  %add159 = add nsw i32 %mul158, 1, !dbg !3295
  %mul160 = mul nsw i32 %134, %add159, !dbg !3296
  %136 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3297
  %mb_stride161 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %136, i32 0, i32 37, !dbg !3298
  %137 = load i32, i32* %mb_stride161, align 4, !dbg !3298
  %138 = load i32, i32* %mb_height, align 4, !dbg !3299
  %add162 = add nsw i32 %138, 1, !dbg !3300
  %mul163 = mul nsw i32 %137, %add162, !dbg !3301
  %mul164 = mul nsw i32 %mul163, 2, !dbg !3302
  %add165 = add nsw i32 %mul160, %mul164, !dbg !3303
  %mul166 = mul nsw i32 2, %add165, !dbg !3304
  %conv167 = sext i32 %mul166 to i64, !dbg !3305
  %call168 = call noalias i8* @av_mallocz(i64 %conv167), !dbg !3306
  %139 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3307
  %mv_f_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %139, i32 0, i32 146, !dbg !3308
  store i8* %call168, i8** %mv_f_base, align 8, !dbg !3309
  %140 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3310
  %mv_f_base169 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %140, i32 0, i32 146, !dbg !3312
  %141 = load i8*, i8** %mv_f_base169, align 8, !dbg !3312
  %tobool170 = icmp ne i8* %141, null, !dbg !3310
  br i1 %tobool170, label %if.end172, label %if.then171, !dbg !3313

if.then171:                                       ; preds = %if.end151
  br label %error, !dbg !3314

if.end172:                                        ; preds = %if.end151
  %142 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3315
  %mv_f_base173 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %142, i32 0, i32 146, !dbg !3316
  %143 = load i8*, i8** %mv_f_base173, align 8, !dbg !3316
  %144 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3317
  %b8_stride174 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %144, i32 0, i32 38, !dbg !3318
  %145 = load i32, i32* %b8_stride174, align 8, !dbg !3318
  %idx.ext175 = sext i32 %145 to i64, !dbg !3319
  %add.ptr176 = getelementptr inbounds i8, i8* %143, i64 %idx.ext175, !dbg !3319
  %add.ptr177 = getelementptr inbounds i8, i8* %add.ptr176, i64 1, !dbg !3320
  %146 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3321
  %mv_f = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %146, i32 0, i32 147, !dbg !3322
  %arrayidx178 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f, i64 0, i64 0, !dbg !3321
  store i8* %add.ptr177, i8** %arrayidx178, align 8, !dbg !3323
  %147 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3324
  %mv_f179 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %147, i32 0, i32 147, !dbg !3325
  %arrayidx180 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f179, i64 0, i64 0, !dbg !3324
  %148 = load i8*, i8** %arrayidx180, align 8, !dbg !3324
  %149 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3326
  %b8_stride181 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %149, i32 0, i32 38, !dbg !3327
  %150 = load i32, i32* %b8_stride181, align 8, !dbg !3327
  %151 = load i32, i32* %mb_height, align 4, !dbg !3328
  %mul182 = mul nsw i32 %151, 2, !dbg !3329
  %add183 = add nsw i32 %mul182, 1, !dbg !3330
  %mul184 = mul nsw i32 %150, %add183, !dbg !3331
  %152 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3332
  %mb_stride185 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %152, i32 0, i32 37, !dbg !3333
  %153 = load i32, i32* %mb_stride185, align 4, !dbg !3333
  %154 = load i32, i32* %mb_height, align 4, !dbg !3334
  %add186 = add nsw i32 %154, 1, !dbg !3335
  %mul187 = mul nsw i32 %153, %add186, !dbg !3336
  %mul188 = mul nsw i32 %mul187, 2, !dbg !3337
  %add189 = add nsw i32 %mul184, %mul188, !dbg !3338
  %idx.ext190 = sext i32 %add189 to i64, !dbg !3339
  %add.ptr191 = getelementptr inbounds i8, i8* %148, i64 %idx.ext190, !dbg !3339
  %155 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3340
  %mv_f192 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %155, i32 0, i32 147, !dbg !3341
  %arrayidx193 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f192, i64 0, i64 1, !dbg !3340
  store i8* %add.ptr191, i8** %arrayidx193, align 8, !dbg !3342
  %156 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3343
  %b8_stride194 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %156, i32 0, i32 38, !dbg !3344
  %157 = load i32, i32* %b8_stride194, align 8, !dbg !3344
  %158 = load i32, i32* %mb_height, align 4, !dbg !3345
  %mul195 = mul nsw i32 %158, 2, !dbg !3346
  %add196 = add nsw i32 %mul195, 1, !dbg !3347
  %mul197 = mul nsw i32 %157, %add196, !dbg !3348
  %159 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3349
  %mb_stride198 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %159, i32 0, i32 37, !dbg !3350
  %160 = load i32, i32* %mb_stride198, align 4, !dbg !3350
  %161 = load i32, i32* %mb_height, align 4, !dbg !3351
  %add199 = add nsw i32 %161, 1, !dbg !3352
  %mul200 = mul nsw i32 %160, %add199, !dbg !3353
  %mul201 = mul nsw i32 %mul200, 2, !dbg !3354
  %add202 = add nsw i32 %mul197, %mul201, !dbg !3355
  %mul203 = mul nsw i32 2, %add202, !dbg !3356
  %conv204 = sext i32 %mul203 to i64, !dbg !3357
  %call205 = call noalias i8* @av_mallocz(i64 %conv204), !dbg !3358
  %162 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3359
  %mv_f_next_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %162, i32 0, i32 148, !dbg !3360
  store i8* %call205, i8** %mv_f_next_base, align 8, !dbg !3361
  %163 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3362
  %mv_f_next_base206 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %163, i32 0, i32 148, !dbg !3364
  %164 = load i8*, i8** %mv_f_next_base206, align 8, !dbg !3364
  %tobool207 = icmp ne i8* %164, null, !dbg !3362
  br i1 %tobool207, label %if.end209, label %if.then208, !dbg !3365

if.then208:                                       ; preds = %if.end172
  br label %error, !dbg !3366

if.end209:                                        ; preds = %if.end172
  %165 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3367
  %mv_f_next_base210 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %165, i32 0, i32 148, !dbg !3368
  %166 = load i8*, i8** %mv_f_next_base210, align 8, !dbg !3368
  %167 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3369
  %b8_stride211 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %167, i32 0, i32 38, !dbg !3370
  %168 = load i32, i32* %b8_stride211, align 8, !dbg !3370
  %idx.ext212 = sext i32 %168 to i64, !dbg !3371
  %add.ptr213 = getelementptr inbounds i8, i8* %166, i64 %idx.ext212, !dbg !3371
  %add.ptr214 = getelementptr inbounds i8, i8* %add.ptr213, i64 1, !dbg !3372
  %169 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3373
  %mv_f_next = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %169, i32 0, i32 149, !dbg !3374
  %arrayidx215 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f_next, i64 0, i64 0, !dbg !3373
  store i8* %add.ptr214, i8** %arrayidx215, align 8, !dbg !3375
  %170 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3376
  %mv_f_next216 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %170, i32 0, i32 149, !dbg !3377
  %arrayidx217 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f_next216, i64 0, i64 0, !dbg !3376
  %171 = load i8*, i8** %arrayidx217, align 8, !dbg !3376
  %172 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3378
  %b8_stride218 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %172, i32 0, i32 38, !dbg !3379
  %173 = load i32, i32* %b8_stride218, align 8, !dbg !3379
  %174 = load i32, i32* %mb_height, align 4, !dbg !3380
  %mul219 = mul nsw i32 %174, 2, !dbg !3381
  %add220 = add nsw i32 %mul219, 1, !dbg !3382
  %mul221 = mul nsw i32 %173, %add220, !dbg !3383
  %175 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3384
  %mb_stride222 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %175, i32 0, i32 37, !dbg !3385
  %176 = load i32, i32* %mb_stride222, align 4, !dbg !3385
  %177 = load i32, i32* %mb_height, align 4, !dbg !3386
  %add223 = add nsw i32 %177, 1, !dbg !3387
  %mul224 = mul nsw i32 %176, %add223, !dbg !3388
  %mul225 = mul nsw i32 %mul224, 2, !dbg !3389
  %add226 = add nsw i32 %mul221, %mul225, !dbg !3390
  %idx.ext227 = sext i32 %add226 to i64, !dbg !3391
  %add.ptr228 = getelementptr inbounds i8, i8* %171, i64 %idx.ext227, !dbg !3391
  %178 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3392
  %mv_f_next229 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %178, i32 0, i32 149, !dbg !3393
  %arrayidx230 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f_next229, i64 0, i64 1, !dbg !3392
  store i8* %add.ptr228, i8** %arrayidx230, align 8, !dbg !3394
  %179 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3395
  %avctx = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %179, i32 0, i32 10, !dbg !3397
  %180 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !3397
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %180, i32 0, i32 4, !dbg !3398
  %181 = load i32, i32* %codec_id, align 8, !dbg !3398
  %cmp = icmp eq i32 %181, 150, !dbg !3399
  br i1 %cmp, label %if.then237, label %lor.lhs.false232, !dbg !3400

lor.lhs.false232:                                 ; preds = %if.end209
  %182 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3401
  %avctx233 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %182, i32 0, i32 10, !dbg !3403
  %183 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx233, align 8, !dbg !3403
  %codec_id234 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %183, i32 0, i32 4, !dbg !3404
  %184 = load i32, i32* %codec_id234, align 8, !dbg !3404
  %cmp235 = icmp eq i32 %184, 151, !dbg !3405
  br i1 %cmp235, label %if.then237, label %if.end249, !dbg !3406

if.then237:                                       ; preds = %lor.lhs.false232, %if.end209
  store i32 0, i32* %i, align 4, !dbg !3407
  br label %for.cond, !dbg !3410

for.cond:                                         ; preds = %for.inc, %if.then237
  %185 = load i32, i32* %i, align 4, !dbg !3411
  %cmp238 = icmp slt i32 %185, 4, !dbg !3414
  br i1 %cmp238, label %for.body, label %for.end, !dbg !3415

for.body:                                         ; preds = %for.cond
  %186 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3416
  %output_width = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %186, i32 0, i32 175, !dbg !3418
  %187 = load i32, i32* %output_width, align 8, !dbg !3418
  %conv240 = sext i32 %187 to i64, !dbg !3416
  %call241 = call noalias i8* @av_malloc(i64 %conv240), !dbg !3419
  %188 = load i32, i32* %i, align 4, !dbg !3420
  %and242 = and i32 %188, 1, !dbg !3421
  %idxprom = sext i32 %and242 to i64, !dbg !3422
  %189 = load i32, i32* %i, align 4, !dbg !3423
  %shr = ashr i32 %189, 1, !dbg !3424
  %idxprom243 = sext i32 %shr to i64, !dbg !3422
  %190 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3422
  %sr_rows = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %190, i32 0, i32 179, !dbg !3425
  %arrayidx244 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %sr_rows, i64 0, i64 %idxprom243, !dbg !3422
  %arrayidx245 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx244, i64 0, i64 %idxprom, !dbg !3422
  store i8* %call241, i8** %arrayidx245, align 8, !dbg !3426
  %tobool246 = icmp ne i8* %call241, null, !dbg !3426
  br i1 %tobool246, label %if.end248, label %if.then247, !dbg !3427

if.then247:                                       ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !3428
  br label %return, !dbg !3428

if.end248:                                        ; preds = %for.body
  br label %for.inc, !dbg !3429

for.inc:                                          ; preds = %if.end248
  %191 = load i32, i32* %i, align 4, !dbg !3431
  %inc = add nsw i32 %191, 1, !dbg !3431
  store i32 %inc, i32* %i, align 4, !dbg !3431
  br label %for.cond, !dbg !3433, !llvm.loop !3434

for.end:                                          ; preds = %for.cond
  br label %if.end249, !dbg !3436

if.end249:                                        ; preds = %for.end, %lor.lhs.false232
  %192 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3437
  %avctx250 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %192, i32 0, i32 10, !dbg !3438
  %193 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx250, align 8, !dbg !3438
  %194 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3439
  %x8 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %194, i32 0, i32 1, !dbg !3440
  %195 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3441
  %idsp = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %195, i32 0, i32 101, !dbg !3442
  %196 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3443
  %block251 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %196, i32 0, i32 303, !dbg !3444
  %197 = load [64 x i16]*, [64 x i16]** %block251, align 8, !dbg !3444
  %198 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3445
  %block_last_index = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %198, i32 0, i32 4, !dbg !3446
  %arraydecay = getelementptr inbounds [12 x i32], [12 x i32]* %block_last_index, i32 0, i32 0, !dbg !3445
  %199 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3447
  %mb_width252 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %199, i32 0, i32 35, !dbg !3448
  %200 = load i32, i32* %mb_width252, align 4, !dbg !3448
  %201 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3449
  %mb_height253 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %201, i32 0, i32 36, !dbg !3450
  %202 = load i32, i32* %mb_height253, align 8, !dbg !3450
  %call254 = call i32 @ff_intrax8_common_init(%struct.AVCodecContext* %193, %struct.IntraX8Context* %x8, %struct.IDCTDSPContext* %idsp, [64 x i16]* %197, i32* %arraydecay, i32 %200, i32 %202), !dbg !3451
  store i32 %call254, i32* %ret, align 4, !dbg !3452
  %203 = load i32, i32* %ret, align 4, !dbg !3453
  %cmp255 = icmp slt i32 %203, 0, !dbg !3455
  br i1 %cmp255, label %if.then257, label %if.end258, !dbg !3456

if.then257:                                       ; preds = %if.end249
  br label %error, !dbg !3457

if.end258:                                        ; preds = %if.end249
  store i32 0, i32* %retval, align 4, !dbg !3458
  br label %return, !dbg !3458

error:                                            ; preds = %if.then257, %if.then208, %if.then171, %if.then150, %if.then108, %if.then89, %if.then76, %if.then63, %if.then52, %if.then
  %204 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !3459
  %avctx259 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %204, i32 0, i32 10, !dbg !3460
  %205 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx259, align 8, !dbg !3460
  %call260 = call i32 @ff_vc1_decode_end(%struct.AVCodecContext* %205), !dbg !3461
  %206 = load i32, i32* %ret, align 4, !dbg !3462
  store i32 %206, i32* %retval, align 4, !dbg !3463
  br label %return, !dbg !3463

return:                                           ; preds = %error, %if.end258, %if.then247
  %207 = load i32, i32* %retval, align 4, !dbg !3464
  ret i32 %207, !dbg !3464
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare noalias i8* @av_malloc(i64) #2

declare noalias i8* @av_mallocz(i64) #2

declare i32 @ff_intrax8_common_init(%struct.AVCodecContext*, %struct.IntraX8Context*, %struct.IDCTDSPContext*, [64 x i16]*, i32*, i32, i32) #2

; Function Attrs: cold nounwind optsize uwtable
define i32 @ff_vc1_decode_end(%struct.AVCodecContext* %avctx) #0 !dbg !3465 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %v = alloca %struct.VC1Context*, align 8
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3466, metadata !3012), !dbg !3467
  call void @llvm.dbg.declare(metadata %struct.VC1Context** %v, metadata !3468, metadata !3012), !dbg !3469
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3470
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3471
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3471
  %2 = bitcast i8* %1 to %struct.VC1Context*, !dbg !3470
  store %struct.VC1Context* %2, %struct.VC1Context** %v, align 8, !dbg !3469
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3472, metadata !3012), !dbg !3473
  %3 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3474
  %sprite_output_frame = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %3, i32 0, i32 174, !dbg !3475
  call void @av_frame_free(%struct.AVFrame** %sprite_output_frame), !dbg !3476
  store i32 0, i32* %i, align 4, !dbg !3477
  br label %for.cond, !dbg !3479

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !3480
  %cmp = icmp slt i32 %4, 4, !dbg !3483
  br i1 %cmp, label %for.body, label %for.end, !dbg !3484

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !3485
  %and = and i32 %5, 1, !dbg !3486
  %idxprom = sext i32 %and to i64, !dbg !3487
  %6 = load i32, i32* %i, align 4, !dbg !3488
  %shr = ashr i32 %6, 1, !dbg !3489
  %idxprom1 = sext i32 %shr to i64, !dbg !3487
  %7 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3487
  %sr_rows = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %7, i32 0, i32 179, !dbg !3490
  %arrayidx = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %sr_rows, i64 0, i64 %idxprom1, !dbg !3487
  %arrayidx2 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx, i64 0, i64 %idxprom, !dbg !3487
  %8 = bitcast i8** %arrayidx2 to i8*, !dbg !3491
  call void @av_freep(i8* %8), !dbg !3492
  br label %for.inc, !dbg !3492

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !3493
  %inc = add nsw i32 %9, 1, !dbg !3493
  store i32 %inc, i32* %i, align 4, !dbg !3493
  br label %for.cond, !dbg !3495, !llvm.loop !3496

for.end:                                          ; preds = %for.cond
  %10 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3498
  %hrd_rate = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %10, i32 0, i32 123, !dbg !3499
  %11 = bitcast i16** %hrd_rate to i8*, !dbg !3500
  call void @av_freep(i8* %11), !dbg !3501
  %12 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3502
  %hrd_buffer = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %12, i32 0, i32 124, !dbg !3503
  %13 = bitcast i16** %hrd_buffer to i8*, !dbg !3504
  call void @av_freep(i8* %13), !dbg !3505
  %14 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3506
  %s = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %14, i32 0, i32 0, !dbg !3507
  call void @ff_mpv_common_end(%struct.MpegEncContext* %s), !dbg !3508
  %15 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3509
  %mv_type_mb_plane = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %15, i32 0, i32 80, !dbg !3510
  %16 = bitcast i8** %mv_type_mb_plane to i8*, !dbg !3511
  call void @av_freep(i8* %16), !dbg !3512
  %17 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3513
  %direct_mb_plane = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %17, i32 0, i32 81, !dbg !3514
  %18 = bitcast i8** %direct_mb_plane to i8*, !dbg !3515
  call void @av_freep(i8* %18), !dbg !3516
  %19 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3517
  %forward_mb_plane = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %19, i32 0, i32 82, !dbg !3518
  %20 = bitcast i8** %forward_mb_plane to i8*, !dbg !3519
  call void @av_freep(i8* %20), !dbg !3520
  %21 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3521
  %fieldtx_plane = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %21, i32 0, i32 141, !dbg !3522
  %22 = bitcast i8** %fieldtx_plane to i8*, !dbg !3523
  call void @av_freep(i8* %22), !dbg !3524
  %23 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3525
  %acpred_plane = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %23, i32 0, i32 118, !dbg !3526
  %24 = bitcast i8** %acpred_plane to i8*, !dbg !3527
  call void @av_freep(i8* %24), !dbg !3528
  %25 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3529
  %over_flags_plane = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %25, i32 0, i32 120, !dbg !3530
  %26 = bitcast i8** %over_flags_plane to i8*, !dbg !3531
  call void @av_freep(i8* %26), !dbg !3532
  %27 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3533
  %mb_type_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %27, i32 0, i32 68, !dbg !3534
  %28 = bitcast i8** %mb_type_base to i8*, !dbg !3535
  call void @av_freep(i8* %28), !dbg !3536
  %29 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3537
  %blk_mv_type_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %29, i32 0, i32 144, !dbg !3538
  %30 = bitcast i8** %blk_mv_type_base to i8*, !dbg !3539
  call void @av_freep(i8* %30), !dbg !3540
  %31 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3541
  %mv_f_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %31, i32 0, i32 146, !dbg !3542
  %32 = bitcast i8** %mv_f_base to i8*, !dbg !3543
  call void @av_freep(i8* %32), !dbg !3544
  %33 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3545
  %mv_f_next_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %33, i32 0, i32 148, !dbg !3546
  %34 = bitcast i8** %mv_f_next_base to i8*, !dbg !3547
  call void @av_freep(i8* %34), !dbg !3548
  %35 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3549
  %block = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %35, i32 0, i32 183, !dbg !3550
  %36 = bitcast [6 x [64 x i16]]** %block to i8*, !dbg !3551
  call void @av_freep(i8* %36), !dbg !3552
  %37 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3553
  %cbp_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %37, i32 0, i32 189, !dbg !3554
  %38 = bitcast i32** %cbp_base to i8*, !dbg !3555
  call void @av_freep(i8* %38), !dbg !3556
  %39 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3557
  %ttblk_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %39, i32 0, i32 61, !dbg !3558
  %40 = bitcast i32** %ttblk_base to i8*, !dbg !3559
  call void @av_freep(i8* %40), !dbg !3560
  %41 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3561
  %is_intra_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %41, i32 0, i32 191, !dbg !3562
  %42 = bitcast i8** %is_intra_base to i8*, !dbg !3563
  call void @av_freep(i8* %42), !dbg !3564
  %43 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3565
  %luma_mv_base = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %43, i32 0, i32 193, !dbg !3566
  %44 = bitcast [2 x i16]** %luma_mv_base to i8*, !dbg !3567
  call void @av_freep(i8* %44), !dbg !3568
  %45 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3569
  %x8 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %45, i32 0, i32 1, !dbg !3570
  call void @ff_intrax8_common_end(%struct.IntraX8Context* %x8), !dbg !3571
  ret i32 0, !dbg !3572
}

; Function Attrs: cold nounwind optsize uwtable
define void @ff_vc1_init_transposed_scantables(%struct.VC1Context* %v) #0 !dbg !3573 {
entry:
  %v.addr = alloca %struct.VC1Context*, align 8
  %i = alloca i32, align 4
  store %struct.VC1Context* %v, %struct.VC1Context** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC1Context** %v.addr, metadata !3576, metadata !3012), !dbg !3577
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3578, metadata !3012), !dbg !3579
  store i32 0, i32* %i, align 4, !dbg !3580
  br label %for.cond, !dbg !3582

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !3583
  %cmp = icmp slt i32 %0, 64, !dbg !3586
  br i1 %cmp, label %for.body, label %for.end, !dbg !3587

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !3588
  %idxprom = sext i32 %1 to i64, !dbg !3590
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds ([4 x [64 x i8]], [4 x [64 x i8]]* @ff_wmv1_scantable, i64 0, i64 0), i64 0, i64 %idxprom, !dbg !3590
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3590
  %conv = zext i8 %2 to i32, !dbg !3591
  %shr = ashr i32 %conv, 3, !dbg !3592
  %3 = load i32, i32* %i, align 4, !dbg !3593
  %idxprom1 = sext i32 %3 to i64, !dbg !3594
  %arrayidx2 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds ([4 x [64 x i8]], [4 x [64 x i8]]* @ff_wmv1_scantable, i64 0, i64 0), i64 0, i64 %idxprom1, !dbg !3594
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !3594
  %conv3 = zext i8 %4 to i32, !dbg !3595
  %and = and i32 %conv3, 7, !dbg !3596
  %shl = shl i32 %and, 3, !dbg !3597
  %or = or i32 %shr, %shl, !dbg !3598
  %conv4 = trunc i32 %or to i8, !dbg !3599
  %5 = load i32, i32* %i, align 4, !dbg !3600
  %idxprom5 = sext i32 %5 to i64, !dbg !3601
  %6 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3601
  %zz_8x8 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %6, i32 0, i32 48, !dbg !3602
  %arrayidx6 = getelementptr inbounds [4 x [64 x i8]], [4 x [64 x i8]]* %zz_8x8, i64 0, i64 0, !dbg !3601
  %arrayidx7 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx6, i64 0, i64 %idxprom5, !dbg !3601
  store i8 %conv4, i8* %arrayidx7, align 1, !dbg !3603
  %7 = load i32, i32* %i, align 4, !dbg !3604
  %idxprom8 = sext i32 %7 to i64, !dbg !3605
  %arrayidx9 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds ([4 x [64 x i8]], [4 x [64 x i8]]* @ff_wmv1_scantable, i64 0, i64 1), i64 0, i64 %idxprom8, !dbg !3605
  %8 = load i8, i8* %arrayidx9, align 1, !dbg !3605
  %conv10 = zext i8 %8 to i32, !dbg !3606
  %shr11 = ashr i32 %conv10, 3, !dbg !3607
  %9 = load i32, i32* %i, align 4, !dbg !3608
  %idxprom12 = sext i32 %9 to i64, !dbg !3609
  %arrayidx13 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds ([4 x [64 x i8]], [4 x [64 x i8]]* @ff_wmv1_scantable, i64 0, i64 1), i64 0, i64 %idxprom12, !dbg !3609
  %10 = load i8, i8* %arrayidx13, align 1, !dbg !3609
  %conv14 = zext i8 %10 to i32, !dbg !3610
  %and15 = and i32 %conv14, 7, !dbg !3611
  %shl16 = shl i32 %and15, 3, !dbg !3612
  %or17 = or i32 %shr11, %shl16, !dbg !3613
  %conv18 = trunc i32 %or17 to i8, !dbg !3614
  %11 = load i32, i32* %i, align 4, !dbg !3615
  %idxprom19 = sext i32 %11 to i64, !dbg !3616
  %12 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3616
  %zz_8x820 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %12, i32 0, i32 48, !dbg !3617
  %arrayidx21 = getelementptr inbounds [4 x [64 x i8]], [4 x [64 x i8]]* %zz_8x820, i64 0, i64 1, !dbg !3616
  %arrayidx22 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx21, i64 0, i64 %idxprom19, !dbg !3616
  store i8 %conv18, i8* %arrayidx22, align 1, !dbg !3618
  %13 = load i32, i32* %i, align 4, !dbg !3619
  %idxprom23 = sext i32 %13 to i64, !dbg !3620
  %arrayidx24 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds ([4 x [64 x i8]], [4 x [64 x i8]]* @ff_wmv1_scantable, i64 0, i64 2), i64 0, i64 %idxprom23, !dbg !3620
  %14 = load i8, i8* %arrayidx24, align 1, !dbg !3620
  %conv25 = zext i8 %14 to i32, !dbg !3621
  %shr26 = ashr i32 %conv25, 3, !dbg !3622
  %15 = load i32, i32* %i, align 4, !dbg !3623
  %idxprom27 = sext i32 %15 to i64, !dbg !3624
  %arrayidx28 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds ([4 x [64 x i8]], [4 x [64 x i8]]* @ff_wmv1_scantable, i64 0, i64 2), i64 0, i64 %idxprom27, !dbg !3624
  %16 = load i8, i8* %arrayidx28, align 1, !dbg !3624
  %conv29 = zext i8 %16 to i32, !dbg !3625
  %and30 = and i32 %conv29, 7, !dbg !3626
  %shl31 = shl i32 %and30, 3, !dbg !3627
  %or32 = or i32 %shr26, %shl31, !dbg !3628
  %conv33 = trunc i32 %or32 to i8, !dbg !3629
  %17 = load i32, i32* %i, align 4, !dbg !3630
  %idxprom34 = sext i32 %17 to i64, !dbg !3631
  %18 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3631
  %zz_8x835 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %18, i32 0, i32 48, !dbg !3632
  %arrayidx36 = getelementptr inbounds [4 x [64 x i8]], [4 x [64 x i8]]* %zz_8x835, i64 0, i64 2, !dbg !3631
  %arrayidx37 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx36, i64 0, i64 %idxprom34, !dbg !3631
  store i8 %conv33, i8* %arrayidx37, align 1, !dbg !3633
  %19 = load i32, i32* %i, align 4, !dbg !3634
  %idxprom38 = sext i32 %19 to i64, !dbg !3635
  %arrayidx39 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds ([4 x [64 x i8]], [4 x [64 x i8]]* @ff_wmv1_scantable, i64 0, i64 3), i64 0, i64 %idxprom38, !dbg !3635
  %20 = load i8, i8* %arrayidx39, align 1, !dbg !3635
  %conv40 = zext i8 %20 to i32, !dbg !3636
  %shr41 = ashr i32 %conv40, 3, !dbg !3637
  %21 = load i32, i32* %i, align 4, !dbg !3638
  %idxprom42 = sext i32 %21 to i64, !dbg !3639
  %arrayidx43 = getelementptr inbounds [64 x i8], [64 x i8]* getelementptr inbounds ([4 x [64 x i8]], [4 x [64 x i8]]* @ff_wmv1_scantable, i64 0, i64 3), i64 0, i64 %idxprom42, !dbg !3639
  %22 = load i8, i8* %arrayidx43, align 1, !dbg !3639
  %conv44 = zext i8 %22 to i32, !dbg !3640
  %and45 = and i32 %conv44, 7, !dbg !3641
  %shl46 = shl i32 %and45, 3, !dbg !3642
  %or47 = or i32 %shr41, %shl46, !dbg !3643
  %conv48 = trunc i32 %or47 to i8, !dbg !3644
  %23 = load i32, i32* %i, align 4, !dbg !3645
  %idxprom49 = sext i32 %23 to i64, !dbg !3646
  %24 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3646
  %zz_8x850 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %24, i32 0, i32 48, !dbg !3647
  %arrayidx51 = getelementptr inbounds [4 x [64 x i8]], [4 x [64 x i8]]* %zz_8x850, i64 0, i64 3, !dbg !3646
  %arrayidx52 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx51, i64 0, i64 %idxprom49, !dbg !3646
  store i8 %conv48, i8* %arrayidx52, align 1, !dbg !3648
  %25 = load i32, i32* %i, align 4, !dbg !3649
  %idxprom53 = sext i32 %25 to i64, !dbg !3650
  %arrayidx54 = getelementptr inbounds [64 x i8], [64 x i8]* @ff_vc1_adv_interlaced_8x8_zz, i64 0, i64 %idxprom53, !dbg !3650
  %26 = load i8, i8* %arrayidx54, align 1, !dbg !3650
  %conv55 = zext i8 %26 to i32, !dbg !3651
  %shr56 = ashr i32 %conv55, 3, !dbg !3652
  %27 = load i32, i32* %i, align 4, !dbg !3653
  %idxprom57 = sext i32 %27 to i64, !dbg !3654
  %arrayidx58 = getelementptr inbounds [64 x i8], [64 x i8]* @ff_vc1_adv_interlaced_8x8_zz, i64 0, i64 %idxprom57, !dbg !3654
  %28 = load i8, i8* %arrayidx58, align 1, !dbg !3654
  %conv59 = zext i8 %28 to i32, !dbg !3655
  %and60 = and i32 %conv59, 7, !dbg !3656
  %shl61 = shl i32 %and60, 3, !dbg !3657
  %or62 = or i32 %shr56, %shl61, !dbg !3658
  %conv63 = trunc i32 %or62 to i8, !dbg !3659
  %29 = load i32, i32* %i, align 4, !dbg !3660
  %idxprom64 = sext i32 %29 to i64, !dbg !3661
  %30 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3661
  %zzi_8x8 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %30, i32 0, i32 143, !dbg !3662
  %arrayidx65 = getelementptr inbounds [64 x i8], [64 x i8]* %zzi_8x8, i64 0, i64 %idxprom64, !dbg !3661
  store i8 %conv63, i8* %arrayidx65, align 1, !dbg !3663
  br label %for.inc, !dbg !3664

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !3665
  %inc = add nsw i32 %31, 1, !dbg !3665
  store i32 %inc, i32* %i, align 4, !dbg !3665
  br label %for.cond, !dbg !3667, !llvm.loop !3668

for.end:                                          ; preds = %for.cond
  %32 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3670
  %left_blk_sh = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %32, i32 0, i32 49, !dbg !3671
  store i32 0, i32* %left_blk_sh, align 8, !dbg !3672
  %33 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !3673
  %top_blk_sh = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %33, i32 0, i32 50, !dbg !3674
  store i32 3, i32* %top_blk_sh, align 4, !dbg !3675
  ret void, !dbg !3676
}

declare void @av_frame_free(%struct.AVFrame**) #2

declare void @av_freep(i8*) #2

declare void @ff_mpv_common_end(%struct.MpegEncContext*) #2

declare void @ff_intrax8_common_end(%struct.IntraX8Context*) #2

; Function Attrs: cold nounwind optsize uwtable
define internal i32 @vc1_decode_init(%struct.AVCodecContext* %avctx) #0 !dbg !3677 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3678, metadata !3012), !dbg !3683
  %retval.i212 = alloca i32, align 4
  %src.addr.i213 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i213, metadata !3690, metadata !3012), !dbg !3694
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3696, metadata !3012), !dbg !3697
  %dst.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr.i, metadata !3698, metadata !3012), !dbg !3699
  %dsize.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dsize.i, metadata !3700, metadata !3012), !dbg !3701
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3702, metadata !3012), !dbg !3703
  %retval.i195 = alloca i8*, align 8
  %src.addr.i196 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i196, metadata !3704, metadata !3012), !dbg !3708
  %end.addr.i197 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr.i197, metadata !3710, metadata !3012), !dbg !3711
  %mrk.i198 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %mrk.i198, metadata !3712, metadata !3012), !dbg !3715
  %retval.i = alloca i8*, align 8
  %src.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i, metadata !3704, metadata !3012), !dbg !3716
  %end.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr.i, metadata !3710, metadata !3012), !dbg !3718
  %mrk.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %mrk.i, metadata !3712, metadata !3012), !dbg !3719
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %v = alloca %struct.VC1Context*, align 8
  %s = alloca %struct.MpegEncContext*, align 8
  %gb = alloca %struct.GetBitContext, align 8
  %ret = alloca i32, align 4
  %count = alloca i32, align 4
  %start = alloca i8*, align 8
  %end = alloca i8*, align 8
  %next = alloca i8*, align 8
  %size = alloca i32, align 4
  %buf2_size = alloca i32, align 4
  %buf2 = alloca i8*, align 8
  %seq_initialized = alloca i32, align 4
  %ep_initialized = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !3720, metadata !3012), !dbg !3721
  call void @llvm.dbg.declare(metadata %struct.VC1Context** %v, metadata !3722, metadata !3012), !dbg !3723
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3724
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !3725
  %1 = load i8*, i8** %priv_data, align 8, !dbg !3725
  %2 = bitcast i8* %1 to %struct.VC1Context*, !dbg !3724
  store %struct.VC1Context* %2, %struct.VC1Context** %v, align 8, !dbg !3723
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s, metadata !3726, metadata !3012), !dbg !3727
  %3 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3728
  %s1 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %3, i32 0, i32 0, !dbg !3729
  store %struct.MpegEncContext* %s1, %struct.MpegEncContext** %s, align 8, !dbg !3727
  call void @llvm.dbg.declare(metadata %struct.GetBitContext* %gb, metadata !3730, metadata !3012), !dbg !3731
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3732, metadata !3012), !dbg !3733
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3734
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 20, !dbg !3735
  %5 = load i32, i32* %width, align 4, !dbg !3735
  %6 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3736
  %output_width = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %6, i32 0, i32 175, !dbg !3737
  store i32 %5, i32* %output_width, align 8, !dbg !3738
  %7 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3739
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %7, i32 0, i32 21, !dbg !3740
  %8 = load i32, i32* %height, align 8, !dbg !3740
  %9 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3741
  %output_height = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %9, i32 0, i32 176, !dbg !3742
  store i32 %8, i32* %output_height, align 4, !dbg !3743
  %10 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3744
  %extradata_size = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %10, i32 0, i32 16, !dbg !3746
  %11 = load i32, i32* %extradata_size, align 8, !dbg !3746
  %tobool = icmp ne i32 %11, 0, !dbg !3744
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !3747

lor.lhs.false:                                    ; preds = %entry
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3748
  %extradata = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %12, i32 0, i32 15, !dbg !3750
  %13 = load i8*, i8** %extradata, align 8, !dbg !3750
  %tobool2 = icmp ne i8* %13, null, !dbg !3748
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3751

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !3752
  br label %return, !dbg !3752

if.end:                                           ; preds = %lor.lhs.false
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3753
  %15 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3754
  %s3 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %15, i32 0, i32 0, !dbg !3755
  %avctx4 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s3, i32 0, i32 10, !dbg !3756
  store %struct.AVCodecContext* %14, %struct.AVCodecContext** %avctx4, align 8, !dbg !3757
  %16 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3758
  %call = call i32 @ff_vc1_init_common(%struct.VC1Context* %16), !dbg !3760
  store i32 %call, i32* %ret, align 4, !dbg !3761
  %cmp = icmp slt i32 %call, 0, !dbg !3762
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !3763

if.then5:                                         ; preds = %if.end
  %17 = load i32, i32* %ret, align 4, !dbg !3764
  store i32 %17, i32* %retval, align 4, !dbg !3765
  br label %return, !dbg !3765

if.end6:                                          ; preds = %if.end
  %18 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3766
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %18, i32 0, i32 4, !dbg !3767
  %19 = load i32, i32* %codec_id, align 8, !dbg !3767
  %cmp7 = icmp eq i32 %19, 71, !dbg !3768
  br i1 %cmp7, label %if.then11, label %lor.lhs.false8, !dbg !3769

lor.lhs.false8:                                   ; preds = %if.end6
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3770
  %codec_id9 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %20, i32 0, i32 4, !dbg !3772
  %21 = load i32, i32* %codec_id9, align 8, !dbg !3772
  %cmp10 = icmp eq i32 %21, 150, !dbg !3773
  br i1 %cmp10, label %if.then11, label %if.else31, !dbg !3774

if.then11:                                        ; preds = %lor.lhs.false8, %if.end6
  call void @llvm.dbg.declare(metadata i32* %count, metadata !3775, metadata !3012), !dbg !3777
  store i32 0, i32* %count, align 4, !dbg !3777
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3778
  %extradata12 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %22, i32 0, i32 15, !dbg !3779
  %23 = load i8*, i8** %extradata12, align 8, !dbg !3779
  %24 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3780
  %extradata_size13 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %24, i32 0, i32 16, !dbg !3781
  %25 = load i32, i32* %extradata_size13, align 8, !dbg !3781
  %mul = mul nsw i32 %25, 8, !dbg !3782
  %call14 = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %23, i32 %mul), !dbg !3783
  %26 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3784
  %27 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !3786
  %call15 = call i32 @ff_vc1_decode_sequence_header(%struct.AVCodecContext* %26, %struct.VC1Context* %27, %struct.GetBitContext* %gb), !dbg !3787
  store i32 %call15, i32* %ret, align 4, !dbg !3788
  %cmp16 = icmp slt i32 %call15, 0, !dbg !3789
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !3790

if.then17:                                        ; preds = %if.then11
  %28 = load i32, i32* %ret, align 4, !dbg !3791
  store i32 %28, i32* %retval, align 4, !dbg !3792
  br label %return, !dbg !3792

if.end18:                                         ; preds = %if.then11
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3793
  %extradata_size19 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %29, i32 0, i32 16, !dbg !3794
  %30 = load i32, i32* %extradata_size19, align 8, !dbg !3794
  %mul20 = mul nsw i32 %30, 8, !dbg !3795
  %call21 = call i32 @get_bits_count(%struct.GetBitContext* %gb), !dbg !3796
  %sub = sub nsw i32 %mul20, %call21, !dbg !3797
  store i32 %sub, i32* %count, align 4, !dbg !3798
  %31 = load i32, i32* %count, align 4, !dbg !3799
  %cmp22 = icmp sgt i32 %31, 0, !dbg !3801
  br i1 %cmp22, label %if.then23, label %if.else, !dbg !3802

if.then23:                                        ; preds = %if.end18
  %32 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3803
  %33 = bitcast %struct.AVCodecContext* %32 to i8*, !dbg !3803
  %34 = load i32, i32* %count, align 4, !dbg !3805
  %35 = load i32, i32* %count, align 4, !dbg !3806
  %cmp24 = icmp sgt i32 %35, 32, !dbg !3807
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !3808

cond.true:                                        ; preds = %if.then23
  br label %cond.end, !dbg !3809

cond.false:                                       ; preds = %if.then23
  %36 = load i32, i32* %count, align 4, !dbg !3811
  br label %cond.end, !dbg !3813

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 32, %cond.true ], [ %36, %cond.false ], !dbg !3814
  %call25 = call i32 @get_bits_long(%struct.GetBitContext* %gb, i32 %cond), !dbg !3816
  call void (i8*, i32, i8*, ...) @av_log(i8* %33, i32 32, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i32 0, i32 0), i32 %34, i32 %call25), !dbg !3817
  br label %if.end30, !dbg !3818

if.else:                                          ; preds = %if.end18
  %37 = load i32, i32* %count, align 4, !dbg !3819
  %cmp26 = icmp slt i32 %37, 0, !dbg !3822
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !3819

if.then27:                                        ; preds = %if.else
  %38 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3823
  %39 = bitcast %struct.AVCodecContext* %38 to i8*, !dbg !3823
  %40 = load i32, i32* %count, align 4, !dbg !3825
  %sub28 = sub nsw i32 0, %40, !dbg !3826
  call void (i8*, i32, i8*, ...) @av_log(i8* %39, i32 32, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i32 0, i32 0), i32 %sub28), !dbg !3827
  br label %if.end29, !dbg !3828

if.end29:                                         ; preds = %if.then27, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %cond.end
  br label %if.end80, !dbg !3829

if.else31:                                        ; preds = %lor.lhs.false8
  call void @llvm.dbg.declare(metadata i8** %start, metadata !3830, metadata !3012), !dbg !3831
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3832
  %extradata32 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i32 0, i32 15, !dbg !3833
  %42 = load i8*, i8** %extradata32, align 8, !dbg !3833
  store i8* %42, i8** %start, align 8, !dbg !3831
  call void @llvm.dbg.declare(metadata i8** %end, metadata !3834, metadata !3012), !dbg !3835
  %43 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3836
  %extradata33 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %43, i32 0, i32 15, !dbg !3837
  %44 = load i8*, i8** %extradata33, align 8, !dbg !3837
  %45 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3838
  %extradata_size34 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %45, i32 0, i32 16, !dbg !3839
  %46 = load i32, i32* %extradata_size34, align 8, !dbg !3839
  %idx.ext = sext i32 %46 to i64, !dbg !3840
  %add.ptr = getelementptr inbounds i8, i8* %44, i64 %idx.ext, !dbg !3840
  store i8* %add.ptr, i8** %end, align 8, !dbg !3835
  call void @llvm.dbg.declare(metadata i8** %next, metadata !3841, metadata !3012), !dbg !3842
  call void @llvm.dbg.declare(metadata i32* %size, metadata !3843, metadata !3012), !dbg !3844
  call void @llvm.dbg.declare(metadata i32* %buf2_size, metadata !3845, metadata !3012), !dbg !3846
  call void @llvm.dbg.declare(metadata i8** %buf2, metadata !3847, metadata !3012), !dbg !3848
  store i8* null, i8** %buf2, align 8, !dbg !3848
  call void @llvm.dbg.declare(metadata i32* %seq_initialized, metadata !3849, metadata !3012), !dbg !3850
  store i32 0, i32* %seq_initialized, align 4, !dbg !3850
  call void @llvm.dbg.declare(metadata i32* %ep_initialized, metadata !3851, metadata !3012), !dbg !3852
  store i32 0, i32* %ep_initialized, align 4, !dbg !3852
  %47 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3853
  %extradata_size35 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %47, i32 0, i32 16, !dbg !3855
  %48 = load i32, i32* %extradata_size35, align 8, !dbg !3855
  %cmp36 = icmp slt i32 %48, 16, !dbg !3856
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !3857

if.then37:                                        ; preds = %if.else31
  %49 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3858
  %50 = bitcast %struct.AVCodecContext* %49 to i8*, !dbg !3858
  %51 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3860
  %extradata_size38 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %51, i32 0, i32 16, !dbg !3861
  %52 = load i32, i32* %extradata_size38, align 8, !dbg !3861
  call void (i8*, i32, i8*, ...) @av_log(i8* %50, i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i32 0, i32 0), i32 %52), !dbg !3862
  store i32 -1, i32* %retval, align 4, !dbg !3863
  br label %return, !dbg !3863

if.end39:                                         ; preds = %if.else31
  %53 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !3864
  %extradata_size40 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %53, i32 0, i32 16, !dbg !3865
  %54 = load i32, i32* %extradata_size40, align 8, !dbg !3865
  %add = add nsw i32 %54, 64, !dbg !3866
  %conv = sext i32 %add to i64, !dbg !3864
  %call41 = call noalias i8* @av_mallocz(i64 %conv), !dbg !3867
  store i8* %call41, i8** %buf2, align 8, !dbg !3868
  %55 = load i8*, i8** %buf2, align 8, !dbg !3869
  %tobool42 = icmp ne i8* %55, null, !dbg !3869
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !3871

if.then43:                                        ; preds = %if.end39
  store i32 -12, i32* %retval, align 4, !dbg !3872
  br label %return, !dbg !3872

if.end44:                                         ; preds = %if.end39
  %56 = load i8*, i8** %start, align 8, !dbg !3873
  %57 = load i8*, i8** %end, align 8, !dbg !3874
  store i8* %56, i8** %src.addr.i, align 8, !dbg !3875
  store i8* %57, i8** %end.addr.i, align 8, !dbg !3875
  %58 = load i8*, i8** %end.addr.i, align 8, !dbg !3876
  %59 = load i8*, i8** %src.addr.i, align 8, !dbg !3877
  %sub.ptr.lhs.cast.i = ptrtoint i8* %58 to i64, !dbg !3878
  %sub.ptr.rhs.cast.i = ptrtoint i8* %59 to i64, !dbg !3878
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !3878
  %cmp.i = icmp sge i64 %sub.ptr.sub.i, 4, !dbg !3879
  br i1 %cmp.i, label %if.then.i, label %if.end3.i, !dbg !3880

if.then.i:                                        ; preds = %if.end44
  store i32 -1, i32* %mrk.i, align 4, !dbg !3719
  %60 = load i8*, i8** %src.addr.i, align 8, !dbg !3881
  %61 = load i8*, i8** %end.addr.i, align 8, !dbg !3882
  %call.i = call i8* @avpriv_find_start_code(i8* %60, i8* %61, i32* %mrk.i) #8, !dbg !3883
  store i8* %call.i, i8** %src.addr.i, align 8, !dbg !3884
  %62 = load i32, i32* %mrk.i, align 4, !dbg !3885
  %and.i = and i32 %62, -256, !dbg !3887
  %cmp1.i = icmp eq i32 %and.i, 256, !dbg !3888
  br i1 %cmp1.i, label %if.then2.i, label %if.end.i, !dbg !3889

if.then2.i:                                       ; preds = %if.then.i
  %63 = load i8*, i8** %src.addr.i, align 8, !dbg !3890
  %add.ptr.i = getelementptr inbounds i8, i8* %63, i64 -4, !dbg !3891
  store i8* %add.ptr.i, i8** %retval.i, align 8, !dbg !3892
  br label %find_next_marker.exit, !dbg !3892

if.end.i:                                         ; preds = %if.then.i
  br label %if.end3.i, !dbg !3893

if.end3.i:                                        ; preds = %if.end.i, %if.end44
  %64 = load i8*, i8** %end.addr.i, align 8, !dbg !3894
  store i8* %64, i8** %retval.i, align 8, !dbg !3895
  br label %find_next_marker.exit, !dbg !3895

find_next_marker.exit:                            ; preds = %if.then2.i, %if.end3.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !3896
  store i8* %65, i8** %start, align 8, !dbg !3897
  %66 = load i8*, i8** %start, align 8, !dbg !3898
  store i8* %66, i8** %next, align 8, !dbg !3899
  br label %for.cond, !dbg !3900

for.cond:                                         ; preds = %for.inc, %find_next_marker.exit
  %67 = load i8*, i8** %next, align 8, !dbg !3901
  %68 = load i8*, i8** %end, align 8, !dbg !3903
  %cmp46 = icmp ult i8* %67, %68, !dbg !3904
  br i1 %cmp46, label %for.body, label %for.end, !dbg !3905

for.body:                                         ; preds = %for.cond
  %69 = load i8*, i8** %start, align 8, !dbg !3906
  %add.ptr48 = getelementptr inbounds i8, i8* %69, i64 4, !dbg !3907
  %70 = load i8*, i8** %end, align 8, !dbg !3908
  store i8* %add.ptr48, i8** %src.addr.i196, align 8, !dbg !3909
  store i8* %70, i8** %end.addr.i197, align 8, !dbg !3909
  %71 = load i8*, i8** %end.addr.i197, align 8, !dbg !3910
  %72 = load i8*, i8** %src.addr.i196, align 8, !dbg !3911
  %sub.ptr.lhs.cast.i199 = ptrtoint i8* %71 to i64, !dbg !3912
  %sub.ptr.rhs.cast.i200 = ptrtoint i8* %72 to i64, !dbg !3912
  %sub.ptr.sub.i201 = sub i64 %sub.ptr.lhs.cast.i199, %sub.ptr.rhs.cast.i200, !dbg !3912
  %cmp.i202 = icmp sge i64 %sub.ptr.sub.i201, 4, !dbg !3913
  br i1 %cmp.i202, label %if.then.i206, label %if.end3.i210, !dbg !3914

if.then.i206:                                     ; preds = %for.body
  store i32 -1, i32* %mrk.i198, align 4, !dbg !3715
  %73 = load i8*, i8** %src.addr.i196, align 8, !dbg !3915
  %74 = load i8*, i8** %end.addr.i197, align 8, !dbg !3916
  %call.i203 = call i8* @avpriv_find_start_code(i8* %73, i8* %74, i32* %mrk.i198) #8, !dbg !3917
  store i8* %call.i203, i8** %src.addr.i196, align 8, !dbg !3918
  %75 = load i32, i32* %mrk.i198, align 4, !dbg !3919
  %and.i204 = and i32 %75, -256, !dbg !3920
  %cmp1.i205 = icmp eq i32 %and.i204, 256, !dbg !3921
  br i1 %cmp1.i205, label %if.then2.i208, label %if.end.i209, !dbg !3922

if.then2.i208:                                    ; preds = %if.then.i206
  %76 = load i8*, i8** %src.addr.i196, align 8, !dbg !3923
  %add.ptr.i207 = getelementptr inbounds i8, i8* %76, i64 -4, !dbg !3924
  store i8* %add.ptr.i207, i8** %retval.i195, align 8, !dbg !3925
  br label %find_next_marker.exit211, !dbg !3925

if.end.i209:                                      ; preds = %if.then.i206
  br label %if.end3.i210, !dbg !3926

if.end3.i210:                                     ; preds = %if.end.i209, %for.body
  %77 = load i8*, i8** %end.addr.i197, align 8, !dbg !3927
  store i8* %77, i8** %retval.i195, align 8, !dbg !3928
  br label %find_next_marker.exit211, !dbg !3928

find_next_marker.exit211:                         ; preds = %if.then2.i208, %if.end3.i210
  %78 = load i8*, i8** %retval.i195, align 8, !dbg !3929
  store i8* %78, i8** %next, align 8, !dbg !3930
  %79 = load i8*, i8** %next, align 8, !dbg !3931
  %80 = load i8*, i8** %start, align 8, !dbg !3932
  %sub.ptr.lhs.cast = ptrtoint i8* %79 to i64, !dbg !3933
  %sub.ptr.rhs.cast = ptrtoint i8* %80 to i64, !dbg !3933
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3933
  %sub50 = sub nsw i64 %sub.ptr.sub, 4, !dbg !3934
  %conv51 = trunc i64 %sub50 to i32, !dbg !3931
  store i32 %conv51, i32* %size, align 4, !dbg !3935
  %81 = load i32, i32* %size, align 4, !dbg !3936
  %cmp52 = icmp sle i32 %81, 0, !dbg !3938
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !3939

if.then54:                                        ; preds = %find_next_marker.exit211
  br label %for.inc, !dbg !3940

if.end55:                                         ; preds = %find_next_marker.exit211
  %82 = load i8*, i8** %start, align 8, !dbg !3941
  %add.ptr56 = getelementptr inbounds i8, i8* %82, i64 4, !dbg !3942
  %83 = load i32, i32* %size, align 4, !dbg !3943
  %84 = load i8*, i8** %buf2, align 8, !dbg !3944
  store i8* %add.ptr56, i8** %src.addr.i213, align 8, !dbg !3945
  store i32 %83, i32* %size.addr.i, align 4, !dbg !3945
  store i8* %84, i8** %dst.addr.i, align 8, !dbg !3945
  store i32 0, i32* %dsize.i, align 4, !dbg !3701
  %85 = load i32, i32* %size.addr.i, align 4, !dbg !3946
  %cmp.i214 = icmp slt i32 %85, 4, !dbg !3948
  br i1 %cmp.i214, label %if.then.i215, label %if.end.i217, !dbg !3949

if.then.i215:                                     ; preds = %if.end55
  store i32 0, i32* %dsize.i, align 4, !dbg !3950
  br label %for.cond.i, !dbg !3953

for.cond.i:                                       ; preds = %for.body.i, %if.then.i215
  %86 = load i32, i32* %dsize.i, align 4, !dbg !3954
  %87 = load i32, i32* %size.addr.i, align 4, !dbg !3957
  %cmp1.i216 = icmp slt i32 %86, %87, !dbg !3958
  br i1 %cmp1.i216, label %for.body.i, label %for.end.i, !dbg !3959

for.body.i:                                       ; preds = %for.cond.i
  %88 = load i8*, i8** %src.addr.i213, align 8, !dbg !3960
  %incdec.ptr.i = getelementptr inbounds i8, i8* %88, i32 1, !dbg !3960
  store i8* %incdec.ptr.i, i8** %src.addr.i213, align 8, !dbg !3960
  %89 = load i8, i8* %88, align 1, !dbg !3961
  %90 = load i8*, i8** %dst.addr.i, align 8, !dbg !3962
  %incdec.ptr2.i = getelementptr inbounds i8, i8* %90, i32 1, !dbg !3962
  store i8* %incdec.ptr2.i, i8** %dst.addr.i, align 8, !dbg !3962
  store i8 %89, i8* %90, align 1, !dbg !3963
  %91 = load i32, i32* %dsize.i, align 4, !dbg !3964
  %inc.i = add nsw i32 %91, 1, !dbg !3964
  store i32 %inc.i, i32* %dsize.i, align 4, !dbg !3964
  br label %for.cond.i, !dbg !3966, !llvm.loop !3967

for.end.i:                                        ; preds = %for.cond.i
  %92 = load i32, i32* %size.addr.i, align 4, !dbg !3969
  store i32 %92, i32* %retval.i212, align 4, !dbg !3970
  br label %vc1_unescape_buffer.exit, !dbg !3970

if.end.i217:                                      ; preds = %if.end55
  store i32 0, i32* %i.i, align 4, !dbg !3971
  br label %for.cond3.i, !dbg !3973

for.cond3.i:                                      ; preds = %if.end32.i, %if.end.i217
  %93 = load i32, i32* %i.i, align 4, !dbg !3974
  %94 = load i32, i32* %size.addr.i, align 4, !dbg !3977
  %cmp4.i = icmp slt i32 %93, %94, !dbg !3978
  br i1 %cmp4.i, label %for.body5.i, label %for.end36.i, !dbg !3979

for.body5.i:                                      ; preds = %for.cond3.i
  %95 = load i8*, i8** %src.addr.i213, align 8, !dbg !3980
  %96 = load i8, i8* %95, align 1, !dbg !3980
  %conv.i = zext i8 %96 to i32, !dbg !3980
  %cmp6.i = icmp eq i32 %conv.i, 3, !dbg !3983
  br i1 %cmp6.i, label %land.lhs.true.i, label %if.else.i, !dbg !3984

land.lhs.true.i:                                  ; preds = %for.body5.i
  %97 = load i32, i32* %i.i, align 4, !dbg !3985
  %cmp8.i = icmp sge i32 %97, 2, !dbg !3987
  br i1 %cmp8.i, label %land.lhs.true10.i, label %if.else.i, !dbg !3988

land.lhs.true10.i:                                ; preds = %land.lhs.true.i
  %98 = load i8*, i8** %src.addr.i213, align 8, !dbg !3989
  %arrayidx11.i = getelementptr inbounds i8, i8* %98, i64 -1, !dbg !3989
  %99 = load i8, i8* %arrayidx11.i, align 1, !dbg !3989
  %tobool.i = icmp ne i8 %99, 0, !dbg !3989
  br i1 %tobool.i, label %if.else.i, label %land.lhs.true12.i, !dbg !3991

land.lhs.true12.i:                                ; preds = %land.lhs.true10.i
  %100 = load i8*, i8** %src.addr.i213, align 8, !dbg !3992
  %arrayidx13.i = getelementptr inbounds i8, i8* %100, i64 -2, !dbg !3992
  %101 = load i8, i8* %arrayidx13.i, align 1, !dbg !3992
  %tobool14.i = icmp ne i8 %101, 0, !dbg !3992
  br i1 %tobool14.i, label %if.else.i, label %land.lhs.true15.i, !dbg !3994

land.lhs.true15.i:                                ; preds = %land.lhs.true12.i
  %102 = load i32, i32* %i.i, align 4, !dbg !3995
  %103 = load i32, i32* %size.addr.i, align 4, !dbg !3997
  %sub.i = sub nsw i32 %103, 1, !dbg !3998
  %cmp16.i = icmp slt i32 %102, %sub.i, !dbg !3999
  br i1 %cmp16.i, label %land.lhs.true18.i, label %if.else.i, !dbg !4000

land.lhs.true18.i:                                ; preds = %land.lhs.true15.i
  %104 = load i8*, i8** %src.addr.i213, align 8, !dbg !4001
  %arrayidx19.i = getelementptr inbounds i8, i8* %104, i64 1, !dbg !4001
  %105 = load i8, i8* %arrayidx19.i, align 1, !dbg !4001
  %conv20.i = zext i8 %105 to i32, !dbg !4001
  %cmp21.i = icmp slt i32 %conv20.i, 4, !dbg !4003
  br i1 %cmp21.i, label %if.then23.i, label %if.else.i, !dbg !4004

if.then23.i:                                      ; preds = %land.lhs.true18.i
  %106 = load i8*, i8** %src.addr.i213, align 8, !dbg !4005
  %arrayidx24.i = getelementptr inbounds i8, i8* %106, i64 1, !dbg !4005
  %107 = load i8, i8* %arrayidx24.i, align 1, !dbg !4005
  %108 = load i32, i32* %dsize.i, align 4, !dbg !4007
  %inc25.i = add nsw i32 %108, 1, !dbg !4007
  store i32 %inc25.i, i32* %dsize.i, align 4, !dbg !4007
  %idxprom.i = sext i32 %108 to i64, !dbg !4008
  %109 = load i8*, i8** %dst.addr.i, align 8, !dbg !4008
  %arrayidx26.i = getelementptr inbounds i8, i8* %109, i64 %idxprom.i, !dbg !4008
  store i8 %107, i8* %arrayidx26.i, align 1, !dbg !4009
  %110 = load i8*, i8** %src.addr.i213, align 8, !dbg !4010
  %incdec.ptr27.i = getelementptr inbounds i8, i8* %110, i32 1, !dbg !4010
  store i8* %incdec.ptr27.i, i8** %src.addr.i213, align 8, !dbg !4010
  %111 = load i32, i32* %i.i, align 4, !dbg !4011
  %inc28.i = add nsw i32 %111, 1, !dbg !4011
  store i32 %inc28.i, i32* %i.i, align 4, !dbg !4011
  br label %if.end32.i, !dbg !4012

if.else.i:                                        ; preds = %land.lhs.true18.i, %land.lhs.true15.i, %land.lhs.true12.i, %land.lhs.true10.i, %land.lhs.true.i, %for.body5.i
  %112 = load i8*, i8** %src.addr.i213, align 8, !dbg !4013
  %113 = load i8, i8* %112, align 1, !dbg !4014
  %114 = load i32, i32* %dsize.i, align 4, !dbg !4015
  %inc29.i = add nsw i32 %114, 1, !dbg !4015
  store i32 %inc29.i, i32* %dsize.i, align 4, !dbg !4015
  %idxprom30.i = sext i32 %114 to i64, !dbg !4016
  %115 = load i8*, i8** %dst.addr.i, align 8, !dbg !4016
  %arrayidx31.i = getelementptr inbounds i8, i8* %115, i64 %idxprom30.i, !dbg !4016
  store i8 %113, i8* %arrayidx31.i, align 1, !dbg !4017
  br label %if.end32.i, !dbg !3945

if.end32.i:                                       ; preds = %if.else.i, %if.then23.i
  %116 = load i32, i32* %i.i, align 4, !dbg !4018
  %inc34.i = add nsw i32 %116, 1, !dbg !4018
  store i32 %inc34.i, i32* %i.i, align 4, !dbg !4018
  %117 = load i8*, i8** %src.addr.i213, align 8, !dbg !4020
  %incdec.ptr35.i = getelementptr inbounds i8, i8* %117, i32 1, !dbg !4020
  store i8* %incdec.ptr35.i, i8** %src.addr.i213, align 8, !dbg !4020
  br label %for.cond3.i, !dbg !4021, !llvm.loop !4022

for.end36.i:                                      ; preds = %for.cond3.i
  %118 = load i32, i32* %dsize.i, align 4, !dbg !4024
  store i32 %118, i32* %retval.i212, align 4, !dbg !4025
  br label %vc1_unescape_buffer.exit, !dbg !4025

vc1_unescape_buffer.exit:                         ; preds = %for.end.i, %for.end36.i
  %119 = load i32, i32* %retval.i212, align 4, !dbg !4026
  store i32 %119, i32* %buf2_size, align 4, !dbg !4027
  %120 = load i8*, i8** %buf2, align 8, !dbg !4028
  %121 = load i32, i32* %buf2_size, align 4, !dbg !4029
  %mul58 = mul nsw i32 %121, 8, !dbg !4030
  %call59 = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %120, i32 %mul58), !dbg !4031
  %122 = load i8*, i8** %start, align 8, !dbg !4032
  %123 = bitcast i8* %122 to %union.unaligned_32*, !dbg !4033
  %l = bitcast %union.unaligned_32* %123 to i32*, !dbg !4033
  %124 = load i32, i32* %l, align 1, !dbg !4033
  store i32 %124, i32* %x.addr.i, align 4, !dbg !4034
  %125 = load i32, i32* %x.addr.i, align 4, !dbg !4035
  %shl.i = shl i32 %125, 8, !dbg !4036
  %and.i218 = and i32 %shl.i, 65280, !dbg !4037
  %126 = load i32, i32* %x.addr.i, align 4, !dbg !4038
  %shr.i = lshr i32 %126, 8, !dbg !4039
  %and1.i = and i32 %shr.i, 255, !dbg !4040
  %or.i = or i32 %and.i218, %and1.i, !dbg !4041
  %shl2.i = shl i32 %or.i, 16, !dbg !4042
  %127 = load i32, i32* %x.addr.i, align 4, !dbg !4043
  %shr3.i = lshr i32 %127, 16, !dbg !4044
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4045
  %and5.i = and i32 %shl4.i, 65280, !dbg !4046
  %128 = load i32, i32* %x.addr.i, align 4, !dbg !4047
  %shr6.i = lshr i32 %128, 16, !dbg !4048
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4049
  %and8.i = and i32 %shr7.i, 255, !dbg !4050
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4051
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4052
  switch i32 %or10.i, label %sw.epilog [
    i32 271, label %sw.bb
    i32 270, label %sw.bb66
  ], !dbg !4053

sw.bb:                                            ; preds = %vc1_unescape_buffer.exit
  %129 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4054
  %130 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4057
  %call61 = call i32 @ff_vc1_decode_sequence_header(%struct.AVCodecContext* %129, %struct.VC1Context* %130, %struct.GetBitContext* %gb), !dbg !4058
  store i32 %call61, i32* %ret, align 4, !dbg !4059
  %cmp62 = icmp slt i32 %call61, 0, !dbg !4060
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !4061

if.then64:                                        ; preds = %sw.bb
  %131 = load i8*, i8** %buf2, align 8, !dbg !4062
  call void @av_free(i8* %131), !dbg !4064
  %132 = load i32, i32* %ret, align 4, !dbg !4065
  store i32 %132, i32* %retval, align 4, !dbg !4066
  br label %return, !dbg !4066

if.end65:                                         ; preds = %sw.bb
  store i32 1, i32* %seq_initialized, align 4, !dbg !4067
  br label %sw.epilog, !dbg !4068

sw.bb66:                                          ; preds = %vc1_unescape_buffer.exit
  %133 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4069
  %134 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4071
  %call67 = call i32 @ff_vc1_decode_entry_point(%struct.AVCodecContext* %133, %struct.VC1Context* %134, %struct.GetBitContext* %gb), !dbg !4072
  store i32 %call67, i32* %ret, align 4, !dbg !4073
  %cmp68 = icmp slt i32 %call67, 0, !dbg !4074
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !4075

if.then70:                                        ; preds = %sw.bb66
  %135 = load i8*, i8** %buf2, align 8, !dbg !4076
  call void @av_free(i8* %135), !dbg !4078
  %136 = load i32, i32* %ret, align 4, !dbg !4079
  store i32 %136, i32* %retval, align 4, !dbg !4080
  br label %return, !dbg !4080

if.end71:                                         ; preds = %sw.bb66
  store i32 1, i32* %ep_initialized, align 4, !dbg !4081
  br label %sw.epilog, !dbg !4082

sw.epilog:                                        ; preds = %vc1_unescape_buffer.exit, %if.end71, %if.end65
  br label %for.inc, !dbg !4083

for.inc:                                          ; preds = %sw.epilog, %if.then54
  %137 = load i8*, i8** %next, align 8, !dbg !4084
  store i8* %137, i8** %start, align 8, !dbg !4086
  br label %for.cond, !dbg !4087, !llvm.loop !4088

for.end:                                          ; preds = %for.cond
  %138 = load i8*, i8** %buf2, align 8, !dbg !4089
  call void @av_free(i8* %138), !dbg !4090
  %139 = load i32, i32* %seq_initialized, align 4, !dbg !4091
  %tobool72 = icmp ne i32 %139, 0, !dbg !4091
  br i1 %tobool72, label %lor.lhs.false73, label %if.then75, !dbg !4093

lor.lhs.false73:                                  ; preds = %for.end
  %140 = load i32, i32* %ep_initialized, align 4, !dbg !4094
  %tobool74 = icmp ne i32 %140, 0, !dbg !4094
  br i1 %tobool74, label %if.end76, label %if.then75, !dbg !4096

if.then75:                                        ; preds = %lor.lhs.false73, %for.end
  %141 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4097
  %142 = bitcast %struct.AVCodecContext* %141 to i8*, !dbg !4097
  call void (i8*, i32, i8*, ...) @av_log(i8* %142, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i32 0, i32 0)), !dbg !4099
  store i32 -1, i32* %retval, align 4, !dbg !4100
  br label %return, !dbg !4100

if.end76:                                         ; preds = %lor.lhs.false73
  %143 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4101
  %codec_id77 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %143, i32 0, i32 4, !dbg !4102
  %144 = load i32, i32* %codec_id77, align 8, !dbg !4102
  %cmp78 = icmp eq i32 %144, 151, !dbg !4103
  %conv79 = zext i1 %cmp78 to i32, !dbg !4103
  %145 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4104
  %res_sprite = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %145, i32 0, i32 5, !dbg !4105
  store i32 %conv79, i32* %res_sprite, align 4, !dbg !4106
  br label %if.end80

if.end80:                                         ; preds = %if.end76, %if.end30
  %146 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4107
  %profile = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %146, i32 0, i32 28, !dbg !4108
  %147 = load i32, i32* %profile, align 8, !dbg !4108
  %148 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4109
  %profile81 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %148, i32 0, i32 153, !dbg !4110
  store i32 %147, i32* %profile81, align 4, !dbg !4111
  %149 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4112
  %profile82 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %149, i32 0, i32 28, !dbg !4114
  %150 = load i32, i32* %profile82, align 8, !dbg !4114
  %cmp83 = icmp eq i32 %150, 3, !dbg !4115
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !4116

if.then85:                                        ; preds = %if.end80
  %151 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4117
  %level = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %151, i32 0, i32 14, !dbg !4118
  %152 = load i32, i32* %level, align 8, !dbg !4118
  %153 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4119
  %level86 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %153, i32 0, i32 154, !dbg !4120
  store i32 %152, i32* %level86, align 8, !dbg !4121
  br label %if.end87, !dbg !4119

if.end87:                                         ; preds = %if.then85, %if.end80
  %154 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4122
  %155 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4124
  %codec = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %155, i32 0, i32 3, !dbg !4125
  %156 = load %struct.AVCodec*, %struct.AVCodec** %codec, align 8, !dbg !4125
  %pix_fmts = getelementptr inbounds %struct.AVCodec, %struct.AVCodec* %156, i32 0, i32 6, !dbg !4126
  %157 = load i32*, i32** %pix_fmts, align 8, !dbg !4126
  %call88 = call i32 @ff_get_format(%struct.AVCodecContext* %154, i32* %157), !dbg !4127
  %158 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4128
  %pix_fmt = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %158, i32 0, i32 25, !dbg !4129
  store i32 %call88, i32* %pix_fmt, align 8, !dbg !4130
  %159 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4131
  %call89 = call i32 @ff_msmpeg4_decode_init(%struct.AVCodecContext* %159), !dbg !4133
  store i32 %call89, i32* %ret, align 4, !dbg !4134
  %cmp90 = icmp slt i32 %call89, 0, !dbg !4135
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !4136

if.then92:                                        ; preds = %if.end87
  %160 = load i32, i32* %ret, align 4, !dbg !4137
  store i32 %160, i32* %retval, align 4, !dbg !4138
  br label %return, !dbg !4138

if.end93:                                         ; preds = %if.end87
  %161 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4139
  %call94 = call i32 @ff_vc1_decode_init_alloc_tables(%struct.VC1Context* %161), !dbg !4141
  store i32 %call94, i32* %ret, align 4, !dbg !4142
  %cmp95 = icmp slt i32 %call94, 0, !dbg !4143
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !4144

if.then97:                                        ; preds = %if.end93
  %162 = load i32, i32* %ret, align 4, !dbg !4145
  store i32 %162, i32* %retval, align 4, !dbg !4146
  br label %return, !dbg !4146

if.end98:                                         ; preds = %if.end93
  %163 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4147
  %call99 = call i32 @ff_vc1_decode_end(%struct.AVCodecContext* %163), !dbg !4148
  %164 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !4149
  %bdsp = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %164, i32 0, i32 97, !dbg !4150
  %165 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4151
  call void @ff_blockdsp_init(%struct.BlockDSPContext* %bdsp, %struct.AVCodecContext* %165), !dbg !4152
  %166 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4153
  %h264chroma = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %166, i32 0, i32 2, !dbg !4154
  call void @ff_h264chroma_init(%struct.H264ChromaContext* %h264chroma, i32 8), !dbg !4155
  %167 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !4156
  %qdsp = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %167, i32 0, i32 106, !dbg !4157
  call void @ff_qpeldsp_init(%struct.QpelDSPContext* %qdsp), !dbg !4158
  %call100 = call %struct.AVFrame* @av_frame_alloc(), !dbg !4159
  %168 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4160
  %sprite_output_frame = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %168, i32 0, i32 174, !dbg !4161
  store %struct.AVFrame* %call100, %struct.AVFrame** %sprite_output_frame, align 8, !dbg !4162
  %169 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4163
  %sprite_output_frame101 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %169, i32 0, i32 174, !dbg !4165
  %170 = load %struct.AVFrame*, %struct.AVFrame** %sprite_output_frame101, align 8, !dbg !4165
  %tobool102 = icmp ne %struct.AVFrame* %170, null, !dbg !4163
  br i1 %tobool102, label %if.end104, label %if.then103, !dbg !4166

if.then103:                                       ; preds = %if.end98
  store i32 -12, i32* %retval, align 4, !dbg !4167
  br label %return, !dbg !4167

if.end104:                                        ; preds = %if.end98
  %171 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4168
  %max_b_frames = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %171, i32 0, i32 28, !dbg !4169
  %172 = load i32, i32* %max_b_frames, align 8, !dbg !4169
  %tobool105 = icmp ne i32 %172, 0, !dbg !4170
  %lnot = xor i1 %tobool105, true, !dbg !4170
  %lnot106 = xor i1 %lnot, true, !dbg !4171
  %lnot.ext = zext i1 %lnot106 to i32, !dbg !4171
  %173 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4172
  %has_b_frames = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %173, i32 0, i32 32, !dbg !4173
  store i32 %lnot.ext, i32* %has_b_frames, align 8, !dbg !4174
  %174 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4175
  %color_prim = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %174, i32 0, i32 23, !dbg !4177
  %175 = load i32, i32* %color_prim, align 4, !dbg !4177
  %cmp107 = icmp eq i32 %175, 1, !dbg !4178
  br i1 %cmp107, label %if.then117, label %lor.lhs.false109, !dbg !4179

lor.lhs.false109:                                 ; preds = %if.end104
  %176 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4180
  %color_prim110 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %176, i32 0, i32 23, !dbg !4182
  %177 = load i32, i32* %color_prim110, align 4, !dbg !4182
  %cmp111 = icmp eq i32 %177, 5, !dbg !4183
  br i1 %cmp111, label %if.then117, label %lor.lhs.false113, !dbg !4184

lor.lhs.false113:                                 ; preds = %lor.lhs.false109
  %178 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4185
  %color_prim114 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %178, i32 0, i32 23, !dbg !4187
  %179 = load i32, i32* %color_prim114, align 4, !dbg !4187
  %cmp115 = icmp eq i32 %179, 6, !dbg !4188
  br i1 %cmp115, label %if.then117, label %if.end119, !dbg !4189

if.then117:                                       ; preds = %lor.lhs.false113, %lor.lhs.false109, %if.end104
  %180 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4190
  %color_prim118 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %180, i32 0, i32 23, !dbg !4191
  %181 = load i32, i32* %color_prim118, align 4, !dbg !4191
  %182 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4192
  %color_primaries = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %182, i32 0, i32 75, !dbg !4193
  store i32 %181, i32* %color_primaries, align 4, !dbg !4194
  br label %if.end119, !dbg !4192

if.end119:                                        ; preds = %if.then117, %lor.lhs.false113
  %183 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4195
  %transfer_char = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %183, i32 0, i32 24, !dbg !4197
  %184 = load i32, i32* %transfer_char, align 8, !dbg !4197
  %cmp120 = icmp eq i32 %184, 1, !dbg !4198
  br i1 %cmp120, label %if.then126, label %lor.lhs.false122, !dbg !4199

lor.lhs.false122:                                 ; preds = %if.end119
  %185 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4200
  %transfer_char123 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %185, i32 0, i32 24, !dbg !4202
  %186 = load i32, i32* %transfer_char123, align 8, !dbg !4202
  %cmp124 = icmp eq i32 %186, 7, !dbg !4203
  br i1 %cmp124, label %if.then126, label %if.end128, !dbg !4204

if.then126:                                       ; preds = %lor.lhs.false122, %if.end119
  %187 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4205
  %transfer_char127 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %187, i32 0, i32 24, !dbg !4206
  %188 = load i32, i32* %transfer_char127, align 8, !dbg !4206
  %189 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4207
  %color_trc = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %189, i32 0, i32 76, !dbg !4208
  store i32 %188, i32* %color_trc, align 8, !dbg !4209
  br label %if.end128, !dbg !4207

if.end128:                                        ; preds = %if.then126, %lor.lhs.false122
  %190 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4210
  %matrix_coef = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %190, i32 0, i32 25, !dbg !4212
  %191 = load i32, i32* %matrix_coef, align 4, !dbg !4212
  %cmp129 = icmp eq i32 %191, 1, !dbg !4213
  br i1 %cmp129, label %if.then139, label %lor.lhs.false131, !dbg !4214

lor.lhs.false131:                                 ; preds = %if.end128
  %192 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4215
  %matrix_coef132 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %192, i32 0, i32 25, !dbg !4217
  %193 = load i32, i32* %matrix_coef132, align 4, !dbg !4217
  %cmp133 = icmp eq i32 %193, 6, !dbg !4218
  br i1 %cmp133, label %if.then139, label %lor.lhs.false135, !dbg !4219

lor.lhs.false135:                                 ; preds = %lor.lhs.false131
  %194 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4220
  %matrix_coef136 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %194, i32 0, i32 25, !dbg !4222
  %195 = load i32, i32* %matrix_coef136, align 4, !dbg !4222
  %cmp137 = icmp eq i32 %195, 7, !dbg !4223
  br i1 %cmp137, label %if.then139, label %if.end141, !dbg !4224

if.then139:                                       ; preds = %lor.lhs.false135, %lor.lhs.false131, %if.end128
  %196 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4225
  %matrix_coef140 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %196, i32 0, i32 25, !dbg !4226
  %197 = load i32, i32* %matrix_coef140, align 4, !dbg !4226
  %198 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4227
  %colorspace = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %198, i32 0, i32 77, !dbg !4228
  store i32 %197, i32* %colorspace, align 4, !dbg !4229
  br label %if.end141, !dbg !4227

if.end141:                                        ; preds = %if.then139, %lor.lhs.false135
  %199 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4230
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %199, i32 0, i32 22, !dbg !4231
  %200 = load i32, i32* %coded_width, align 4, !dbg !4231
  %add142 = add nsw i32 %200, 15, !dbg !4232
  %shr = ashr i32 %add142, 4, !dbg !4233
  %201 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !4234
  %mb_width = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %201, i32 0, i32 35, !dbg !4235
  store i32 %shr, i32* %mb_width, align 4, !dbg !4236
  %202 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4237
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %202, i32 0, i32 23, !dbg !4238
  %203 = load i32, i32* %coded_height, align 8, !dbg !4238
  %add143 = add nsw i32 %203, 15, !dbg !4239
  %shr144 = ashr i32 %add143, 4, !dbg !4240
  %204 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !4241
  %mb_height = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %204, i32 0, i32 36, !dbg !4242
  store i32 %shr144, i32* %mb_height, align 8, !dbg !4243
  %205 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4244
  %profile145 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %205, i32 0, i32 28, !dbg !4246
  %206 = load i32, i32* %profile145, align 8, !dbg !4246
  %cmp146 = icmp eq i32 %206, 3, !dbg !4247
  br i1 %cmp146, label %if.then150, label %lor.lhs.false148, !dbg !4248

lor.lhs.false148:                                 ; preds = %if.end141
  %207 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4249
  %res_fasttx = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %207, i32 0, i32 9, !dbg !4251
  %208 = load i32, i32* %res_fasttx, align 4, !dbg !4251
  %tobool149 = icmp ne i32 %208, 0, !dbg !4249
  br i1 %tobool149, label %if.then150, label %if.else151, !dbg !4252

if.then150:                                       ; preds = %lor.lhs.false148, %if.end141
  %209 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4253
  call void @ff_vc1_init_transposed_scantables(%struct.VC1Context* %209), !dbg !4255
  br label %if.end152, !dbg !4256

if.else151:                                       ; preds = %lor.lhs.false148
  %210 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4257
  %zz_8x8 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %210, i32 0, i32 48, !dbg !4259
  %arraydecay = getelementptr inbounds [4 x [64 x i8]], [4 x [64 x i8]]* %zz_8x8, i32 0, i32 0, !dbg !4260
  %211 = bitcast [64 x i8]* %arraydecay to i8*, !dbg !4260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %211, i8* getelementptr inbounds ([4 x [64 x i8]], [4 x [64 x i8]]* @ff_wmv1_scantable, i32 0, i32 0, i32 0), i64 256, i32 2, i1 false), !dbg !4260
  %212 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4261
  %left_blk_sh = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %212, i32 0, i32 49, !dbg !4262
  store i32 3, i32* %left_blk_sh, align 8, !dbg !4263
  %213 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4264
  %top_blk_sh = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %213, i32 0, i32 50, !dbg !4265
  store i32 0, i32* %top_blk_sh, align 4, !dbg !4266
  br label %if.end152

if.end152:                                        ; preds = %if.else151, %if.then150
  %214 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4267
  %codec_id153 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %214, i32 0, i32 4, !dbg !4269
  %215 = load i32, i32* %codec_id153, align 8, !dbg !4269
  %cmp154 = icmp eq i32 %215, 150, !dbg !4270
  br i1 %cmp154, label %if.then160, label %lor.lhs.false156, !dbg !4271

lor.lhs.false156:                                 ; preds = %if.end152
  %216 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4272
  %codec_id157 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %216, i32 0, i32 4, !dbg !4274
  %217 = load i32, i32* %codec_id157, align 8, !dbg !4274
  %cmp158 = icmp eq i32 %217, 151, !dbg !4275
  br i1 %cmp158, label %if.then160, label %if.end194, !dbg !4276

if.then160:                                       ; preds = %lor.lhs.false156, %if.end152
  %218 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4277
  %coded_width161 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %218, i32 0, i32 22, !dbg !4279
  %219 = load i32, i32* %coded_width161, align 4, !dbg !4279
  %220 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4280
  %sprite_width = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %220, i32 0, i32 177, !dbg !4281
  store i32 %219, i32* %sprite_width, align 8, !dbg !4282
  %221 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4283
  %coded_height162 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %221, i32 0, i32 23, !dbg !4284
  %222 = load i32, i32* %coded_height162, align 8, !dbg !4284
  %223 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4285
  %sprite_height = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %223, i32 0, i32 178, !dbg !4286
  store i32 %222, i32* %sprite_height, align 4, !dbg !4287
  %224 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4288
  %output_width163 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %224, i32 0, i32 175, !dbg !4289
  %225 = load i32, i32* %output_width163, align 8, !dbg !4289
  %226 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4290
  %width164 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %226, i32 0, i32 20, !dbg !4291
  store i32 %225, i32* %width164, align 4, !dbg !4292
  %227 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4293
  %coded_width165 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %227, i32 0, i32 22, !dbg !4294
  store i32 %225, i32* %coded_width165, align 4, !dbg !4295
  %228 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4296
  %output_height166 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %228, i32 0, i32 176, !dbg !4297
  %229 = load i32, i32* %output_height166, align 4, !dbg !4297
  %230 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4298
  %height167 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %230, i32 0, i32 21, !dbg !4299
  store i32 %229, i32* %height167, align 8, !dbg !4300
  %231 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4301
  %coded_height168 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %231, i32 0, i32 23, !dbg !4302
  store i32 %229, i32* %coded_height168, align 8, !dbg !4303
  %232 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4304
  %sprite_width169 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %232, i32 0, i32 177, !dbg !4306
  %233 = load i32, i32* %sprite_width169, align 8, !dbg !4306
  %cmp170 = icmp sgt i32 %233, 16384, !dbg !4307
  br i1 %cmp170, label %if.then184, label %lor.lhs.false172, !dbg !4308

lor.lhs.false172:                                 ; preds = %if.then160
  %234 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4309
  %sprite_height173 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %234, i32 0, i32 178, !dbg !4310
  %235 = load i32, i32* %sprite_height173, align 4, !dbg !4310
  %cmp174 = icmp sgt i32 %235, 16384, !dbg !4311
  br i1 %cmp174, label %if.then184, label %lor.lhs.false176, !dbg !4312

lor.lhs.false176:                                 ; preds = %lor.lhs.false172
  %236 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4313
  %output_width177 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %236, i32 0, i32 175, !dbg !4314
  %237 = load i32, i32* %output_width177, align 8, !dbg !4314
  %cmp178 = icmp sgt i32 %237, 16384, !dbg !4315
  br i1 %cmp178, label %if.then184, label %lor.lhs.false180, !dbg !4316

lor.lhs.false180:                                 ; preds = %lor.lhs.false176
  %238 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4317
  %output_height181 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %238, i32 0, i32 176, !dbg !4318
  %239 = load i32, i32* %output_height181, align 4, !dbg !4318
  %cmp182 = icmp sgt i32 %239, 16384, !dbg !4319
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !4320

if.then184:                                       ; preds = %lor.lhs.false180, %lor.lhs.false176, %lor.lhs.false172, %if.then160
  store i32 -1, i32* %retval, align 4, !dbg !4322
  br label %return, !dbg !4322

if.end185:                                        ; preds = %lor.lhs.false180
  %240 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4324
  %sprite_width186 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %240, i32 0, i32 177, !dbg !4326
  %241 = load i32, i32* %sprite_width186, align 8, !dbg !4326
  %and = and i32 %241, 1, !dbg !4327
  %tobool187 = icmp ne i32 %and, 0, !dbg !4327
  br i1 %tobool187, label %if.then192, label %lor.lhs.false188, !dbg !4328

lor.lhs.false188:                                 ; preds = %if.end185
  %242 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4329
  %sprite_height189 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %242, i32 0, i32 178, !dbg !4331
  %243 = load i32, i32* %sprite_height189, align 4, !dbg !4331
  %and190 = and i32 %243, 1, !dbg !4332
  %tobool191 = icmp ne i32 %and190, 0, !dbg !4332
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !4333

if.then192:                                       ; preds = %lor.lhs.false188, %if.end185
  %244 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4334
  %245 = bitcast %struct.AVCodecContext* %244 to i8*, !dbg !4334
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %245, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i32 0, i32 0)), !dbg !4336
  store i32 -1163346256, i32* %retval, align 4, !dbg !4337
  br label %return, !dbg !4337

if.end193:                                        ; preds = %lor.lhs.false188
  br label %if.end194, !dbg !4338

if.end194:                                        ; preds = %if.end193, %lor.lhs.false156
  store i32 0, i32* %retval, align 4, !dbg !4339
  br label %return, !dbg !4339

return:                                           ; preds = %if.end194, %if.then192, %if.then184, %if.then103, %if.then97, %if.then92, %if.then75, %if.then70, %if.then64, %if.then43, %if.then37, %if.then17, %if.then5, %if.then
  %246 = load i32, i32* %retval, align 4, !dbg !4340
  ret i32 %246, !dbg !4340
}

; Function Attrs: nounwind uwtable
define internal i32 @vc1_decode_frame(%struct.AVCodecContext* %avctx, i8* %data, i32* %got_frame, %struct.AVPacket* %avpkt) #3 !dbg !4341 {
entry:
  %retval.i1518 = alloca i32, align 4
  %src.addr.i1519 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i1519, metadata !3690, metadata !3012), !dbg !4342
  %size.addr.i1520 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i1520, metadata !3696, metadata !3012), !dbg !4349
  %dst.addr.i1521 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr.i1521, metadata !3698, metadata !3012), !dbg !4350
  %dsize.i1522 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dsize.i1522, metadata !3700, metadata !3012), !dbg !4351
  %i.i1523 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i1523, metadata !3702, metadata !3012), !dbg !4352
  %retval.i1466 = alloca i32, align 4
  %src.addr.i1467 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i1467, metadata !3690, metadata !3012), !dbg !4353
  %size.addr.i1468 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i1468, metadata !3696, metadata !3012), !dbg !4356
  %dst.addr.i1469 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr.i1469, metadata !3698, metadata !3012), !dbg !4357
  %dsize.i1470 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dsize.i1470, metadata !3700, metadata !3012), !dbg !4358
  %i.i1471 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i1471, metadata !3702, metadata !3012), !dbg !4359
  %retval.i1414 = alloca i32, align 4
  %src.addr.i1415 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i1415, metadata !3690, metadata !3012), !dbg !4360
  %size.addr.i1416 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i1416, metadata !3696, metadata !3012), !dbg !4364
  %dst.addr.i1417 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr.i1417, metadata !3698, metadata !3012), !dbg !4365
  %dsize.i1418 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dsize.i1418, metadata !3700, metadata !3012), !dbg !4366
  %i.i1419 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i1419, metadata !3702, metadata !3012), !dbg !4367
  %x.addr.i1399 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i1399, metadata !3678, metadata !3012), !dbg !4368
  %retval.i1382 = alloca i8*, align 8
  %src.addr.i1383 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i1383, metadata !3704, metadata !3012), !dbg !4371
  %end.addr.i1384 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr.i1384, metadata !3710, metadata !3012), !dbg !4373
  %mrk.i1385 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %mrk.i1385, metadata !3712, metadata !3012), !dbg !4374
  %retval.i1330 = alloca i32, align 4
  %src.addr.i1331 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i1331, metadata !3690, metadata !3012), !dbg !4375
  %size.addr.i1332 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i1332, metadata !3696, metadata !3012), !dbg !4383
  %dst.addr.i1333 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr.i1333, metadata !3698, metadata !3012), !dbg !4384
  %dsize.i1334 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dsize.i1334, metadata !3700, metadata !3012), !dbg !4385
  %i.i1335 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i1335, metadata !3702, metadata !3012), !dbg !4386
  %retval.i1278 = alloca i32, align 4
  %src.addr.i1279 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i1279, metadata !3690, metadata !3012), !dbg !4387
  %size.addr.i1280 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i1280, metadata !3696, metadata !3012), !dbg !4389
  %dst.addr.i1281 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr.i1281, metadata !3698, metadata !3012), !dbg !4390
  %dsize.i1282 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dsize.i1282, metadata !3700, metadata !3012), !dbg !4391
  %i.i1283 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i1283, metadata !3702, metadata !3012), !dbg !4392
  %retval.i1226 = alloca i32, align 4
  %src.addr.i1227 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i1227, metadata !3690, metadata !3012), !dbg !4393
  %size.addr.i1228 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i1228, metadata !3696, metadata !3012), !dbg !4396
  %dst.addr.i1229 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr.i1229, metadata !3698, metadata !3012), !dbg !4397
  %dsize.i1230 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dsize.i1230, metadata !3700, metadata !3012), !dbg !4398
  %i.i1231 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i1231, metadata !3702, metadata !3012), !dbg !4399
  %retval.i1220 = alloca i32, align 4
  %src.addr.i1221 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i1221, metadata !3690, metadata !3012), !dbg !4400
  %size.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr.i, metadata !3696, metadata !3012), !dbg !4402
  %dst.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr.i, metadata !3698, metadata !3012), !dbg !4403
  %dsize.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %dsize.i, metadata !3700, metadata !3012), !dbg !4404
  %i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.i, metadata !3702, metadata !3012), !dbg !4405
  %x.addr.i1205 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i1205, metadata !3678, metadata !3012), !dbg !4406
  %retval.i = alloca i8*, align 8
  %src.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr.i, metadata !3704, metadata !3012), !dbg !4408
  %end.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr.i, metadata !3710, metadata !3012), !dbg !4410
  %mrk.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %mrk.i, metadata !3712, metadata !3012), !dbg !4411
  %x.addr.i1189 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i1189, metadata !3678, metadata !3012), !dbg !4412
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3678, metadata !3012), !dbg !4414
  %retval = alloca i32, align 4
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %data.addr = alloca i8*, align 8
  %got_frame.addr = alloca i32*, align 8
  %avpkt.addr = alloca %struct.AVPacket*, align 8
  %buf = alloca i8*, align 8
  %buf_size = alloca i32, align 4
  %n_slices = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %v = alloca %struct.VC1Context*, align 8
  %s = alloca %struct.MpegEncContext*, align 8
  %pict = alloca %struct.AVFrame*, align 8
  %buf2 = alloca i8*, align 8
  %buf_start = alloca i8*, align 8
  %buf_start_second_field = alloca i8*, align 8
  %mb_height = alloca i32, align 4
  %n_slices1 = alloca i32, align 4
  %slices = alloca %struct.anon*, align 8
  %tmp = alloca %struct.anon*, align 8
  %buf_size2 = alloca i32, align 4
  %start = alloca i8*, align 8
  %end = alloca i8*, align 8
  %next = alloca i8*, align 8
  %size40 = alloca i32, align 4
  %buf_size3 = alloca i32, align 4
  %buf_size3108 = alloca i32, align 4
  %divider = alloca i8*, align 8
  %buf_size3165 = alloca i32, align 4
  %header_ret = alloca i32, align 4
  %SWAP_tmp = alloca i8*, align 8
  %SWAP_tmp1082 = alloca i8*, align 8
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !4418, metadata !3012), !dbg !4419
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4420, metadata !3012), !dbg !4421
  store i32* %got_frame, i32** %got_frame.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %got_frame.addr, metadata !4422, metadata !3012), !dbg !4423
  store %struct.AVPacket* %avpkt, %struct.AVPacket** %avpkt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVPacket** %avpkt.addr, metadata !4424, metadata !3012), !dbg !4425
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !4426, metadata !3012), !dbg !4427
  %0 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !4428
  %data1 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %0, i32 0, i32 3, !dbg !4429
  %1 = load i8*, i8** %data1, align 8, !dbg !4429
  store i8* %1, i8** %buf, align 8, !dbg !4427
  call void @llvm.dbg.declare(metadata i32* %buf_size, metadata !4430, metadata !3012), !dbg !4431
  %2 = load %struct.AVPacket*, %struct.AVPacket** %avpkt.addr, align 8, !dbg !4432
  %size = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %2, i32 0, i32 4, !dbg !4433
  %3 = load i32, i32* %size, align 8, !dbg !4433
  store i32 %3, i32* %buf_size, align 4, !dbg !4431
  call void @llvm.dbg.declare(metadata i32* %n_slices, metadata !4434, metadata !3012), !dbg !4435
  store i32 0, i32* %n_slices, align 4, !dbg !4435
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4436, metadata !3012), !dbg !4437
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4438, metadata !3012), !dbg !4439
  call void @llvm.dbg.declare(metadata %struct.VC1Context** %v, metadata !4440, metadata !3012), !dbg !4441
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4442
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %4, i32 0, i32 6, !dbg !4443
  %5 = load i8*, i8** %priv_data, align 8, !dbg !4443
  %6 = bitcast i8* %5 to %struct.VC1Context*, !dbg !4442
  store %struct.VC1Context* %6, %struct.VC1Context** %v, align 8, !dbg !4441
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s, metadata !4444, metadata !3012), !dbg !4445
  %7 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4446
  %s2 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %7, i32 0, i32 0, !dbg !4447
  store %struct.MpegEncContext* %s2, %struct.MpegEncContext** %s, align 8, !dbg !4445
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %pict, metadata !4448, metadata !3012), !dbg !4449
  %8 = load i8*, i8** %data.addr, align 8, !dbg !4450
  %9 = bitcast i8* %8 to %struct.AVFrame*, !dbg !4450
  store %struct.AVFrame* %9, %struct.AVFrame** %pict, align 8, !dbg !4449
  call void @llvm.dbg.declare(metadata i8** %buf2, metadata !4451, metadata !3012), !dbg !4452
  store i8* null, i8** %buf2, align 8, !dbg !4452
  call void @llvm.dbg.declare(metadata i8** %buf_start, metadata !4453, metadata !3012), !dbg !4454
  %10 = load i8*, i8** %buf, align 8, !dbg !4455
  store i8* %10, i8** %buf_start, align 8, !dbg !4454
  call void @llvm.dbg.declare(metadata i8** %buf_start_second_field, metadata !4456, metadata !3012), !dbg !4457
  store i8* null, i8** %buf_start_second_field, align 8, !dbg !4457
  call void @llvm.dbg.declare(metadata i32* %mb_height, metadata !4458, metadata !3012), !dbg !4459
  call void @llvm.dbg.declare(metadata i32* %n_slices1, metadata !4460, metadata !3012), !dbg !4461
  store i32 -1, i32* %n_slices1, align 4, !dbg !4461
  call void @llvm.dbg.declare(metadata %struct.anon** %slices, metadata !4462, metadata !3012), !dbg !4471
  store %struct.anon* null, %struct.anon** %slices, align 8, !dbg !4471
  call void @llvm.dbg.declare(metadata %struct.anon** %tmp, metadata !4472, metadata !3012), !dbg !4473
  %11 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4474
  %second_field = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %11, i32 0, i32 152, !dbg !4475
  store i32 0, i32* %second_field, align 8, !dbg !4476
  %12 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !4477
  %avctx3 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %12, i32 0, i32 10, !dbg !4479
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx3, align 8, !dbg !4479
  %flags = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %13, i32 0, i32 13, !dbg !4480
  %14 = load i32, i32* %flags, align 4, !dbg !4480
  %and = and i32 %14, 524288, !dbg !4481
  %tobool = icmp ne i32 %and, 0, !dbg !4481
  br i1 %tobool, label %if.then, label %if.end, !dbg !4482

if.then:                                          ; preds = %entry
  %15 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !4483
  %low_delay = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %15, i32 0, i32 235, !dbg !4484
  store i32 1, i32* %low_delay, align 8, !dbg !4485
  br label %if.end, !dbg !4483

if.end:                                           ; preds = %if.then, %entry
  %16 = load i32, i32* %buf_size, align 4, !dbg !4486
  %cmp = icmp eq i32 %16, 0, !dbg !4487
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !4488

lor.lhs.false:                                    ; preds = %if.end
  %17 = load i32, i32* %buf_size, align 4, !dbg !4489
  %cmp4 = icmp eq i32 %17, 4, !dbg !4491
  br i1 %cmp4, label %land.lhs.true, label %if.end19, !dbg !4492

land.lhs.true:                                    ; preds = %lor.lhs.false
  %18 = load i8*, i8** %buf, align 8, !dbg !4493
  %19 = bitcast i8* %18 to %union.unaligned_32*, !dbg !4494
  %l = bitcast %union.unaligned_32* %19 to i32*, !dbg !4494
  %20 = load i32, i32* %l, align 1, !dbg !4494
  store i32 %20, i32* %x.addr.i, align 4, !dbg !4495
  %21 = load i32, i32* %x.addr.i, align 4, !dbg !4496
  %shl.i = shl i32 %21, 8, !dbg !4497
  %and.i = and i32 %shl.i, 65280, !dbg !4498
  %22 = load i32, i32* %x.addr.i, align 4, !dbg !4499
  %shr.i = lshr i32 %22, 8, !dbg !4500
  %and1.i = and i32 %shr.i, 255, !dbg !4501
  %or.i = or i32 %and.i, %and1.i, !dbg !4502
  %shl2.i = shl i32 %or.i, 16, !dbg !4503
  %23 = load i32, i32* %x.addr.i, align 4, !dbg !4504
  %shr3.i = lshr i32 %23, 16, !dbg !4505
  %shl4.i = shl i32 %shr3.i, 8, !dbg !4506
  %and5.i = and i32 %shl4.i, 65280, !dbg !4507
  %24 = load i32, i32* %x.addr.i, align 4, !dbg !4508
  %shr6.i = lshr i32 %24, 16, !dbg !4509
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !4510
  %and8.i = and i32 %shr7.i, 255, !dbg !4511
  %or9.i = or i32 %and5.i, %and8.i, !dbg !4512
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !4513
  %cmp5 = icmp eq i32 %or10.i, 266, !dbg !4514
  br i1 %cmp5, label %if.then6, label %if.end19, !dbg !4515

if.then6:                                         ; preds = %land.lhs.true, %if.end
  %25 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !4516
  %low_delay7 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %25, i32 0, i32 235, !dbg !4519
  %26 = load i32, i32* %low_delay7, align 8, !dbg !4519
  %cmp8 = icmp eq i32 %26, 0, !dbg !4520
  br i1 %cmp8, label %land.lhs.true9, label %if.end18, !dbg !4521

land.lhs.true9:                                   ; preds = %if.then6
  %27 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !4522
  %next_picture_ptr = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %27, i32 0, i32 60, !dbg !4524
  %28 = load %struct.Picture*, %struct.Picture** %next_picture_ptr, align 8, !dbg !4524
  %tobool10 = icmp ne %struct.Picture* %28, null, !dbg !4522
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !4525

if.then11:                                        ; preds = %land.lhs.true9
  %29 = load %struct.AVFrame*, %struct.AVFrame** %pict, align 8, !dbg !4526
  %30 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !4529
  %next_picture_ptr12 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %30, i32 0, i32 60, !dbg !4530
  %31 = load %struct.Picture*, %struct.Picture** %next_picture_ptr12, align 8, !dbg !4530
  %f = getelementptr inbounds %struct.Picture, %struct.Picture* %31, i32 0, i32 0, !dbg !4531
  %32 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !4531
  %call13 = call i32 @av_frame_ref(%struct.AVFrame* %29, %struct.AVFrame* %32), !dbg !4532
  store i32 %call13, i32* %ret, align 4, !dbg !4533
  %cmp14 = icmp slt i32 %call13, 0, !dbg !4534
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !4535

if.then15:                                        ; preds = %if.then11
  %33 = load i32, i32* %ret, align 4, !dbg !4536
  store i32 %33, i32* %retval, align 4, !dbg !4537
  br label %return, !dbg !4537

if.end16:                                         ; preds = %if.then11
  %34 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !4538
  %next_picture_ptr17 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %34, i32 0, i32 60, !dbg !4539
  store %struct.Picture* null, %struct.Picture** %next_picture_ptr17, align 8, !dbg !4540
  %35 = load i32*, i32** %got_frame.addr, align 8, !dbg !4541
  store i32 1, i32* %35, align 4, !dbg !4542
  br label %if.end18, !dbg !4543

if.end18:                                         ; preds = %if.end16, %land.lhs.true9, %if.then6
  %36 = load i32, i32* %buf_size, align 4, !dbg !4544
  store i32 %36, i32* %retval, align 4, !dbg !4545
  br label %return, !dbg !4545

if.end19:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %37 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4546
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %37, i32 0, i32 4, !dbg !4547
  %38 = load i32, i32* %codec_id, align 8, !dbg !4547
  %cmp20 = icmp eq i32 %38, 70, !dbg !4548
  br i1 %cmp20, label %if.then24, label %lor.lhs.false21, !dbg !4549

lor.lhs.false21:                                  ; preds = %if.end19
  %39 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4550
  %codec_id22 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %39, i32 0, i32 4, !dbg !4552
  %40 = load i32, i32* %codec_id22, align 8, !dbg !4552
  %cmp23 = icmp eq i32 %40, 151, !dbg !4553
  br i1 %cmp23, label %if.then24, label %if.else255, !dbg !4554

if.then24:                                        ; preds = %lor.lhs.false21, %if.end19
  call void @llvm.dbg.declare(metadata i32* %buf_size2, metadata !4555, metadata !3012), !dbg !4556
  store i32 0, i32* %buf_size2, align 4, !dbg !4556
  %41 = load i32, i32* %buf_size, align 4, !dbg !4557
  %add = add nsw i32 %41, 64, !dbg !4558
  %conv = sext i32 %add to i64, !dbg !4557
  %call26 = call noalias i8* @av_mallocz(i64 %conv), !dbg !4559
  store i8* %call26, i8** %buf2, align 8, !dbg !4560
  %42 = load i8*, i8** %buf2, align 8, !dbg !4561
  %tobool27 = icmp ne i8* %42, null, !dbg !4561
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !4563

if.then28:                                        ; preds = %if.then24
  store i32 -12, i32* %retval, align 4, !dbg !4564
  br label %return, !dbg !4564

if.end29:                                         ; preds = %if.then24
  %43 = load i8*, i8** %buf, align 8, !dbg !4565
  %44 = bitcast i8* %43 to %union.unaligned_32*, !dbg !4566
  %l30 = bitcast %union.unaligned_32* %44 to i32*, !dbg !4566
  %45 = load i32, i32* %l30, align 1, !dbg !4566
  store i32 %45, i32* %x.addr.i1189, align 4, !dbg !4567
  %46 = load i32, i32* %x.addr.i1189, align 4, !dbg !4568
  %shl.i1190 = shl i32 %46, 8, !dbg !4569
  %and.i1191 = and i32 %shl.i1190, 65280, !dbg !4570
  %47 = load i32, i32* %x.addr.i1189, align 4, !dbg !4571
  %shr.i1192 = lshr i32 %47, 8, !dbg !4572
  %and1.i1193 = and i32 %shr.i1192, 255, !dbg !4573
  %or.i1194 = or i32 %and.i1191, %and1.i1193, !dbg !4574
  %shl2.i1195 = shl i32 %or.i1194, 16, !dbg !4575
  %48 = load i32, i32* %x.addr.i1189, align 4, !dbg !4576
  %shr3.i1196 = lshr i32 %48, 16, !dbg !4577
  %shl4.i1197 = shl i32 %shr3.i1196, 8, !dbg !4578
  %and5.i1198 = and i32 %shl4.i1197, 65280, !dbg !4579
  %49 = load i32, i32* %x.addr.i1189, align 4, !dbg !4580
  %shr6.i1199 = lshr i32 %49, 16, !dbg !4581
  %shr7.i1200 = lshr i32 %shr6.i1199, 8, !dbg !4582
  %and8.i1201 = and i32 %shr7.i1200, 255, !dbg !4583
  %or9.i1202 = or i32 %and5.i1198, %and8.i1201, !dbg !4584
  %or10.i1203 = or i32 %shl2.i1195, %or9.i1202, !dbg !4585
  %and32 = and i32 %or10.i1203, -256, !dbg !4586
  %cmp33 = icmp eq i32 %and32, 256, !dbg !4587
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !4588

if.then35:                                        ; preds = %if.end29
  call void @llvm.dbg.declare(metadata i8** %start, metadata !4589, metadata !3012), !dbg !4590
  call void @llvm.dbg.declare(metadata i8** %end, metadata !4591, metadata !3012), !dbg !4592
  call void @llvm.dbg.declare(metadata i8** %next, metadata !4593, metadata !3012), !dbg !4594
  call void @llvm.dbg.declare(metadata i32* %size40, metadata !4595, metadata !3012), !dbg !4596
  %50 = load i8*, i8** %buf, align 8, !dbg !4597
  store i8* %50, i8** %next, align 8, !dbg !4598
  %51 = load i8*, i8** %buf, align 8, !dbg !4599
  store i8* %51, i8** %start, align 8, !dbg !4600
  %52 = load i8*, i8** %buf, align 8, !dbg !4601
  %53 = load i32, i32* %buf_size, align 4, !dbg !4602
  %idx.ext = sext i32 %53 to i64, !dbg !4603
  %add.ptr = getelementptr inbounds i8, i8* %52, i64 %idx.ext, !dbg !4603
  store i8* %add.ptr, i8** %end, align 8, !dbg !4604
  br label %for.cond, !dbg !4605

for.cond:                                         ; preds = %for.inc, %if.then35
  %54 = load i8*, i8** %next, align 8, !dbg !4606
  %55 = load i8*, i8** %end, align 8, !dbg !4608
  %cmp41 = icmp ult i8* %54, %55, !dbg !4609
  br i1 %cmp41, label %for.body, label %for.end, !dbg !4610

for.body:                                         ; preds = %for.cond
  %56 = load i8*, i8** %start, align 8, !dbg !4611
  %add.ptr43 = getelementptr inbounds i8, i8* %56, i64 4, !dbg !4612
  %57 = load i8*, i8** %end, align 8, !dbg !4613
  store i8* %add.ptr43, i8** %src.addr.i, align 8, !dbg !4614
  store i8* %57, i8** %end.addr.i, align 8, !dbg !4614
  %58 = load i8*, i8** %end.addr.i, align 8, !dbg !4615
  %59 = load i8*, i8** %src.addr.i, align 8, !dbg !4616
  %sub.ptr.lhs.cast.i = ptrtoint i8* %58 to i64, !dbg !4617
  %sub.ptr.rhs.cast.i = ptrtoint i8* %59 to i64, !dbg !4617
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i, !dbg !4617
  %cmp.i = icmp sge i64 %sub.ptr.sub.i, 4, !dbg !4618
  br i1 %cmp.i, label %if.then.i, label %if.end3.i, !dbg !4619

if.then.i:                                        ; preds = %for.body
  store i32 -1, i32* %mrk.i, align 4, !dbg !4411
  %60 = load i8*, i8** %src.addr.i, align 8, !dbg !4620
  %61 = load i8*, i8** %end.addr.i, align 8, !dbg !4621
  %call.i = call i8* @avpriv_find_start_code(i8* %60, i8* %61, i32* %mrk.i) #8, !dbg !4622
  store i8* %call.i, i8** %src.addr.i, align 8, !dbg !4623
  %62 = load i32, i32* %mrk.i, align 4, !dbg !4624
  %and.i1204 = and i32 %62, -256, !dbg !4625
  %cmp1.i = icmp eq i32 %and.i1204, 256, !dbg !4626
  br i1 %cmp1.i, label %if.then2.i, label %if.end.i, !dbg !4627

if.then2.i:                                       ; preds = %if.then.i
  %63 = load i8*, i8** %src.addr.i, align 8, !dbg !4628
  %add.ptr.i = getelementptr inbounds i8, i8* %63, i64 -4, !dbg !4629
  store i8* %add.ptr.i, i8** %retval.i, align 8, !dbg !4630
  br label %find_next_marker.exit, !dbg !4630

if.end.i:                                         ; preds = %if.then.i
  br label %if.end3.i, !dbg !4631

if.end3.i:                                        ; preds = %if.end.i, %for.body
  %64 = load i8*, i8** %end.addr.i, align 8, !dbg !4632
  store i8* %64, i8** %retval.i, align 8, !dbg !4633
  br label %find_next_marker.exit, !dbg !4633

find_next_marker.exit:                            ; preds = %if.then2.i, %if.end3.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !4634
  store i8* %65, i8** %next, align 8, !dbg !4635
  %66 = load i8*, i8** %next, align 8, !dbg !4636
  %67 = load i8*, i8** %start, align 8, !dbg !4637
  %sub.ptr.lhs.cast = ptrtoint i8* %66 to i64, !dbg !4638
  %sub.ptr.rhs.cast = ptrtoint i8* %67 to i64, !dbg !4638
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4638
  %sub = sub nsw i64 %sub.ptr.sub, 4, !dbg !4639
  %conv45 = trunc i64 %sub to i32, !dbg !4636
  store i32 %conv45, i32* %size40, align 4, !dbg !4640
  %68 = load i32, i32* %size40, align 4, !dbg !4641
  %cmp46 = icmp sle i32 %68, 0, !dbg !4643
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !4644

if.then48:                                        ; preds = %find_next_marker.exit
  br label %for.inc, !dbg !4645

if.end49:                                         ; preds = %find_next_marker.exit
  %69 = load i8*, i8** %start, align 8, !dbg !4647
  %70 = bitcast i8* %69 to %union.unaligned_32*, !dbg !4648
  %l50 = bitcast %union.unaligned_32* %70 to i32*, !dbg !4648
  %71 = load i32, i32* %l50, align 1, !dbg !4648
  store i32 %71, i32* %x.addr.i1205, align 4, !dbg !4649
  %72 = load i32, i32* %x.addr.i1205, align 4, !dbg !4650
  %shl.i1206 = shl i32 %72, 8, !dbg !4651
  %and.i1207 = and i32 %shl.i1206, 65280, !dbg !4652
  %73 = load i32, i32* %x.addr.i1205, align 4, !dbg !4653
  %shr.i1208 = lshr i32 %73, 8, !dbg !4654
  %and1.i1209 = and i32 %shr.i1208, 255, !dbg !4655
  %or.i1210 = or i32 %and.i1207, %and1.i1209, !dbg !4656
  %shl2.i1211 = shl i32 %or.i1210, 16, !dbg !4657
  %74 = load i32, i32* %x.addr.i1205, align 4, !dbg !4658
  %shr3.i1212 = lshr i32 %74, 16, !dbg !4659
  %shl4.i1213 = shl i32 %shr3.i1212, 8, !dbg !4660
  %and5.i1214 = and i32 %shl4.i1213, 65280, !dbg !4661
  %75 = load i32, i32* %x.addr.i1205, align 4, !dbg !4662
  %shr6.i1215 = lshr i32 %75, 16, !dbg !4663
  %shr7.i1216 = lshr i32 %shr6.i1215, 8, !dbg !4664
  %and8.i1217 = and i32 %shr7.i1216, 255, !dbg !4665
  %or9.i1218 = or i32 %and5.i1214, %and8.i1217, !dbg !4666
  %or10.i1219 = or i32 %shl2.i1211, %or9.i1218, !dbg !4667
  switch i32 %or10.i1219, label %sw.epilog [
    i32 269, label %sw.bb
    i32 268, label %sw.bb57
    i32 270, label %sw.bb99
    i32 267, label %sw.bb106
  ], !dbg !4668

sw.bb:                                            ; preds = %if.end49
  %76 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4669
  %hwaccel = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %76, i32 0, i32 137, !dbg !4671
  %77 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel, align 8, !dbg !4671
  %tobool52 = icmp ne %struct.AVHWAccel* %77, null, !dbg !4669
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !4672

if.then53:                                        ; preds = %sw.bb
  %78 = load i8*, i8** %start, align 8, !dbg !4673
  store i8* %78, i8** %buf_start, align 8, !dbg !4674
  br label %if.end54, !dbg !4675

if.end54:                                         ; preds = %if.then53, %sw.bb
  %79 = load i8*, i8** %start, align 8, !dbg !4676
  %add.ptr55 = getelementptr inbounds i8, i8* %79, i64 4, !dbg !4677
  %80 = load i32, i32* %size40, align 4, !dbg !4678
  %81 = load i8*, i8** %buf2, align 8, !dbg !4679
  store i8* %add.ptr55, i8** %src.addr.i1221, align 8, !dbg !4680
  store i32 %80, i32* %size.addr.i, align 4, !dbg !4680
  store i8* %81, i8** %dst.addr.i, align 8, !dbg !4680
  store i32 0, i32* %dsize.i, align 4, !dbg !4404
  %82 = load i32, i32* %size.addr.i, align 4, !dbg !4681
  %cmp.i1222 = icmp slt i32 %82, 4, !dbg !4682
  br i1 %cmp.i1222, label %if.then.i1223, label %if.end.i1225, !dbg !4683

if.then.i1223:                                    ; preds = %if.end54
  store i32 0, i32* %dsize.i, align 4, !dbg !4684
  br label %for.cond.i, !dbg !4685

for.cond.i:                                       ; preds = %for.body.i, %if.then.i1223
  %83 = load i32, i32* %dsize.i, align 4, !dbg !4686
  %84 = load i32, i32* %size.addr.i, align 4, !dbg !4687
  %cmp1.i1224 = icmp slt i32 %83, %84, !dbg !4688
  br i1 %cmp1.i1224, label %for.body.i, label %for.end.i, !dbg !4689

for.body.i:                                       ; preds = %for.cond.i
  %85 = load i8*, i8** %src.addr.i1221, align 8, !dbg !4690
  %incdec.ptr.i = getelementptr inbounds i8, i8* %85, i32 1, !dbg !4690
  store i8* %incdec.ptr.i, i8** %src.addr.i1221, align 8, !dbg !4690
  %86 = load i8, i8* %85, align 1, !dbg !4691
  %87 = load i8*, i8** %dst.addr.i, align 8, !dbg !4692
  %incdec.ptr2.i = getelementptr inbounds i8, i8* %87, i32 1, !dbg !4692
  store i8* %incdec.ptr2.i, i8** %dst.addr.i, align 8, !dbg !4692
  store i8 %86, i8* %87, align 1, !dbg !4693
  %88 = load i32, i32* %dsize.i, align 4, !dbg !4694
  %inc.i = add nsw i32 %88, 1, !dbg !4694
  store i32 %inc.i, i32* %dsize.i, align 4, !dbg !4694
  br label %for.cond.i, !dbg !4695, !llvm.loop !3967

for.end.i:                                        ; preds = %for.cond.i
  %89 = load i32, i32* %size.addr.i, align 4, !dbg !4696
  store i32 %89, i32* %retval.i1220, align 4, !dbg !4697
  br label %vc1_unescape_buffer.exit, !dbg !4697

if.end.i1225:                                     ; preds = %if.end54
  store i32 0, i32* %i.i, align 4, !dbg !4698
  br label %for.cond3.i, !dbg !4699

for.cond3.i:                                      ; preds = %if.end32.i, %if.end.i1225
  %90 = load i32, i32* %i.i, align 4, !dbg !4700
  %91 = load i32, i32* %size.addr.i, align 4, !dbg !4701
  %cmp4.i = icmp slt i32 %90, %91, !dbg !4702
  br i1 %cmp4.i, label %for.body5.i, label %for.end36.i, !dbg !4703

for.body5.i:                                      ; preds = %for.cond3.i
  %92 = load i8*, i8** %src.addr.i1221, align 8, !dbg !4704
  %93 = load i8, i8* %92, align 1, !dbg !4704
  %conv.i = zext i8 %93 to i32, !dbg !4704
  %cmp6.i = icmp eq i32 %conv.i, 3, !dbg !4705
  br i1 %cmp6.i, label %land.lhs.true.i, label %if.else.i, !dbg !4706

land.lhs.true.i:                                  ; preds = %for.body5.i
  %94 = load i32, i32* %i.i, align 4, !dbg !4707
  %cmp8.i = icmp sge i32 %94, 2, !dbg !4708
  br i1 %cmp8.i, label %land.lhs.true10.i, label %if.else.i, !dbg !4709

land.lhs.true10.i:                                ; preds = %land.lhs.true.i
  %95 = load i8*, i8** %src.addr.i1221, align 8, !dbg !4710
  %arrayidx11.i = getelementptr inbounds i8, i8* %95, i64 -1, !dbg !4710
  %96 = load i8, i8* %arrayidx11.i, align 1, !dbg !4710
  %tobool.i = icmp ne i8 %96, 0, !dbg !4710
  br i1 %tobool.i, label %if.else.i, label %land.lhs.true12.i, !dbg !4711

land.lhs.true12.i:                                ; preds = %land.lhs.true10.i
  %97 = load i8*, i8** %src.addr.i1221, align 8, !dbg !4712
  %arrayidx13.i = getelementptr inbounds i8, i8* %97, i64 -2, !dbg !4712
  %98 = load i8, i8* %arrayidx13.i, align 1, !dbg !4712
  %tobool14.i = icmp ne i8 %98, 0, !dbg !4712
  br i1 %tobool14.i, label %if.else.i, label %land.lhs.true15.i, !dbg !4713

land.lhs.true15.i:                                ; preds = %land.lhs.true12.i
  %99 = load i32, i32* %i.i, align 4, !dbg !4714
  %100 = load i32, i32* %size.addr.i, align 4, !dbg !4715
  %sub.i = sub nsw i32 %100, 1, !dbg !4716
  %cmp16.i = icmp slt i32 %99, %sub.i, !dbg !4717
  br i1 %cmp16.i, label %land.lhs.true18.i, label %if.else.i, !dbg !4718

land.lhs.true18.i:                                ; preds = %land.lhs.true15.i
  %101 = load i8*, i8** %src.addr.i1221, align 8, !dbg !4719
  %arrayidx19.i = getelementptr inbounds i8, i8* %101, i64 1, !dbg !4719
  %102 = load i8, i8* %arrayidx19.i, align 1, !dbg !4719
  %conv20.i = zext i8 %102 to i32, !dbg !4719
  %cmp21.i = icmp slt i32 %conv20.i, 4, !dbg !4720
  br i1 %cmp21.i, label %if.then23.i, label %if.else.i, !dbg !4721

if.then23.i:                                      ; preds = %land.lhs.true18.i
  %103 = load i8*, i8** %src.addr.i1221, align 8, !dbg !4722
  %arrayidx24.i = getelementptr inbounds i8, i8* %103, i64 1, !dbg !4722
  %104 = load i8, i8* %arrayidx24.i, align 1, !dbg !4722
  %105 = load i32, i32* %dsize.i, align 4, !dbg !4723
  %inc25.i = add nsw i32 %105, 1, !dbg !4723
  store i32 %inc25.i, i32* %dsize.i, align 4, !dbg !4723
  %idxprom.i = sext i32 %105 to i64, !dbg !4724
  %106 = load i8*, i8** %dst.addr.i, align 8, !dbg !4724
  %arrayidx26.i = getelementptr inbounds i8, i8* %106, i64 %idxprom.i, !dbg !4724
  store i8 %104, i8* %arrayidx26.i, align 1, !dbg !4725
  %107 = load i8*, i8** %src.addr.i1221, align 8, !dbg !4726
  %incdec.ptr27.i = getelementptr inbounds i8, i8* %107, i32 1, !dbg !4726
  store i8* %incdec.ptr27.i, i8** %src.addr.i1221, align 8, !dbg !4726
  %108 = load i32, i32* %i.i, align 4, !dbg !4727
  %inc28.i = add nsw i32 %108, 1, !dbg !4727
  store i32 %inc28.i, i32* %i.i, align 4, !dbg !4727
  br label %if.end32.i, !dbg !4728

if.else.i:                                        ; preds = %land.lhs.true18.i, %land.lhs.true15.i, %land.lhs.true12.i, %land.lhs.true10.i, %land.lhs.true.i, %for.body5.i
  %109 = load i8*, i8** %src.addr.i1221, align 8, !dbg !4729
  %110 = load i8, i8* %109, align 1, !dbg !4730
  %111 = load i32, i32* %dsize.i, align 4, !dbg !4731
  %inc29.i = add nsw i32 %111, 1, !dbg !4731
  store i32 %inc29.i, i32* %dsize.i, align 4, !dbg !4731
  %idxprom30.i = sext i32 %111 to i64, !dbg !4732
  %112 = load i8*, i8** %dst.addr.i, align 8, !dbg !4732
  %arrayidx31.i = getelementptr inbounds i8, i8* %112, i64 %idxprom30.i, !dbg !4732
  store i8 %110, i8* %arrayidx31.i, align 1, !dbg !4733
  br label %if.end32.i, !dbg !4680

if.end32.i:                                       ; preds = %if.else.i, %if.then23.i
  %113 = load i32, i32* %i.i, align 4, !dbg !4734
  %inc34.i = add nsw i32 %113, 1, !dbg !4734
  store i32 %inc34.i, i32* %i.i, align 4, !dbg !4734
  %114 = load i8*, i8** %src.addr.i1221, align 8, !dbg !4735
  %incdec.ptr35.i = getelementptr inbounds i8, i8* %114, i32 1, !dbg !4735
  store i8* %incdec.ptr35.i, i8** %src.addr.i1221, align 8, !dbg !4735
  br label %for.cond3.i, !dbg !4736, !llvm.loop !4022

for.end36.i:                                      ; preds = %for.cond3.i
  %115 = load i32, i32* %dsize.i, align 4, !dbg !4737
  store i32 %115, i32* %retval.i1220, align 4, !dbg !4738
  br label %vc1_unescape_buffer.exit, !dbg !4738

vc1_unescape_buffer.exit:                         ; preds = %for.end.i, %for.end36.i
  %116 = load i32, i32* %retval.i1220, align 4, !dbg !4739
  store i32 %116, i32* %buf_size2, align 4, !dbg !4740
  br label %sw.epilog, !dbg !4741

sw.bb57:                                          ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %buf_size3, metadata !4742, metadata !3012), !dbg !4743
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4744
  %hwaccel59 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %117, i32 0, i32 137, !dbg !4746
  %118 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel59, align 8, !dbg !4746
  %tobool60 = icmp ne %struct.AVHWAccel* %118, null, !dbg !4744
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !4747

if.then61:                                        ; preds = %sw.bb57
  %119 = load i8*, i8** %start, align 8, !dbg !4748
  store i8* %119, i8** %buf_start_second_field, align 8, !dbg !4749
  br label %if.end62, !dbg !4750

if.end62:                                         ; preds = %if.then61, %sw.bb57
  %120 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !4751
  %121 = bitcast %struct.anon* %120 to i8*, !dbg !4751
  %122 = load i32, i32* %n_slices, align 4, !dbg !4752
  %add63 = add nsw i32 %122, 1, !dbg !4753
  %conv64 = sext i32 %add63 to i64, !dbg !4754
  %call65 = call i8* @av_realloc_array(i8* %121, i64 64, i64 %conv64), !dbg !4755
  %123 = bitcast i8* %call65 to %struct.anon*, !dbg !4755
  store %struct.anon* %123, %struct.anon** %tmp, align 8, !dbg !4756
  %124 = load %struct.anon*, %struct.anon** %tmp, align 8, !dbg !4757
  %tobool66 = icmp ne %struct.anon* %124, null, !dbg !4757
  br i1 %tobool66, label %if.end68, label %if.then67, !dbg !4759

if.then67:                                        ; preds = %if.end62
  store i32 -12, i32* %ret, align 4, !dbg !4760
  br label %err, !dbg !4762

if.end68:                                         ; preds = %if.end62
  %125 = load %struct.anon*, %struct.anon** %tmp, align 8, !dbg !4763
  store %struct.anon* %125, %struct.anon** %slices, align 8, !dbg !4764
  %126 = load i32, i32* %buf_size, align 4, !dbg !4765
  %add69 = add nsw i32 %126, 64, !dbg !4766
  %conv70 = sext i32 %add69 to i64, !dbg !4765
  %call71 = call noalias i8* @av_mallocz(i64 %conv70), !dbg !4767
  %127 = load i32, i32* %n_slices, align 4, !dbg !4768
  %idxprom = sext i32 %127 to i64, !dbg !4769
  %128 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !4769
  %arrayidx = getelementptr inbounds %struct.anon, %struct.anon* %128, i64 %idxprom, !dbg !4769
  %buf72 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 0, !dbg !4770
  store i8* %call71, i8** %buf72, align 8, !dbg !4771
  %129 = load i32, i32* %n_slices, align 4, !dbg !4772
  %idxprom73 = sext i32 %129 to i64, !dbg !4774
  %130 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !4774
  %arrayidx74 = getelementptr inbounds %struct.anon, %struct.anon* %130, i64 %idxprom73, !dbg !4774
  %buf75 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx74, i32 0, i32 0, !dbg !4775
  %131 = load i8*, i8** %buf75, align 8, !dbg !4775
  %tobool76 = icmp ne i8* %131, null, !dbg !4774
  br i1 %tobool76, label %if.end78, label %if.then77, !dbg !4776

if.then77:                                        ; preds = %if.end68
  store i32 -12, i32* %ret, align 4, !dbg !4777
  br label %err, !dbg !4779

if.end78:                                         ; preds = %if.end68
  %132 = load i8*, i8** %start, align 8, !dbg !4780
  %add.ptr79 = getelementptr inbounds i8, i8* %132, i64 4, !dbg !4781
  %133 = load i32, i32* %size40, align 4, !dbg !4782
  %134 = load i32, i32* %n_slices, align 4, !dbg !4783
  %idxprom80 = sext i32 %134 to i64, !dbg !4784
  %135 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !4784
  %arrayidx81 = getelementptr inbounds %struct.anon, %struct.anon* %135, i64 %idxprom80, !dbg !4784
  %buf82 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx81, i32 0, i32 0, !dbg !4785
  %136 = load i8*, i8** %buf82, align 8, !dbg !4785
  store i8* %add.ptr79, i8** %src.addr.i1227, align 8, !dbg !4786
  store i32 %133, i32* %size.addr.i1228, align 4, !dbg !4786
  store i8* %136, i8** %dst.addr.i1229, align 8, !dbg !4786
  store i32 0, i32* %dsize.i1230, align 4, !dbg !4398
  %137 = load i32, i32* %size.addr.i1228, align 4, !dbg !4787
  %cmp.i1232 = icmp slt i32 %137, 4, !dbg !4788
  br i1 %cmp.i1232, label %if.then.i1233, label %if.end.i1241, !dbg !4789

if.then.i1233:                                    ; preds = %if.end78
  store i32 0, i32* %dsize.i1230, align 4, !dbg !4790
  br label %for.cond.i1235, !dbg !4791

for.cond.i1235:                                   ; preds = %for.body.i1238, %if.then.i1233
  %138 = load i32, i32* %dsize.i1230, align 4, !dbg !4792
  %139 = load i32, i32* %size.addr.i1228, align 4, !dbg !4793
  %cmp1.i1234 = icmp slt i32 %138, %139, !dbg !4794
  br i1 %cmp1.i1234, label %for.body.i1238, label %for.end.i1240, !dbg !4795

for.body.i1238:                                   ; preds = %for.cond.i1235
  %140 = load i8*, i8** %src.addr.i1227, align 8, !dbg !4796
  %incdec.ptr.i1236 = getelementptr inbounds i8, i8* %140, i32 1, !dbg !4796
  store i8* %incdec.ptr.i1236, i8** %src.addr.i1227, align 8, !dbg !4796
  %141 = load i8, i8* %140, align 1, !dbg !4797
  %142 = load i8*, i8** %dst.addr.i1229, align 8, !dbg !4798
  %incdec.ptr2.i1237 = getelementptr inbounds i8, i8* %142, i32 1, !dbg !4798
  store i8* %incdec.ptr2.i1237, i8** %dst.addr.i1229, align 8, !dbg !4798
  store i8 %141, i8* %142, align 1, !dbg !4799
  %143 = load i32, i32* %dsize.i1230, align 4, !dbg !4800
  %inc.i1239 = add nsw i32 %143, 1, !dbg !4800
  store i32 %inc.i1239, i32* %dsize.i1230, align 4, !dbg !4800
  br label %for.cond.i1235, !dbg !4801, !llvm.loop !3967

for.end.i1240:                                    ; preds = %for.cond.i1235
  %144 = load i32, i32* %size.addr.i1228, align 4, !dbg !4802
  store i32 %144, i32* %retval.i1226, align 4, !dbg !4803
  br label %vc1_unescape_buffer.exit1277, !dbg !4803

if.end.i1241:                                     ; preds = %if.end78
  store i32 0, i32* %i.i1231, align 4, !dbg !4804
  br label %for.cond3.i1243, !dbg !4805

for.cond3.i1243:                                  ; preds = %if.end32.i1273, %if.end.i1241
  %145 = load i32, i32* %i.i1231, align 4, !dbg !4806
  %146 = load i32, i32* %size.addr.i1228, align 4, !dbg !4807
  %cmp4.i1242 = icmp slt i32 %145, %146, !dbg !4808
  br i1 %cmp4.i1242, label %for.body5.i1246, label %for.end36.i1276, !dbg !4809

for.body5.i1246:                                  ; preds = %for.cond3.i1243
  %147 = load i8*, i8** %src.addr.i1227, align 8, !dbg !4810
  %148 = load i8, i8* %147, align 1, !dbg !4810
  %conv.i1244 = zext i8 %148 to i32, !dbg !4810
  %cmp6.i1245 = icmp eq i32 %conv.i1244, 3, !dbg !4811
  br i1 %cmp6.i1245, label %land.lhs.true.i1248, label %if.else.i1272, !dbg !4812

land.lhs.true.i1248:                              ; preds = %for.body5.i1246
  %149 = load i32, i32* %i.i1231, align 4, !dbg !4813
  %cmp8.i1247 = icmp sge i32 %149, 2, !dbg !4814
  br i1 %cmp8.i1247, label %land.lhs.true10.i1251, label %if.else.i1272, !dbg !4815

land.lhs.true10.i1251:                            ; preds = %land.lhs.true.i1248
  %150 = load i8*, i8** %src.addr.i1227, align 8, !dbg !4816
  %arrayidx11.i1249 = getelementptr inbounds i8, i8* %150, i64 -1, !dbg !4816
  %151 = load i8, i8* %arrayidx11.i1249, align 1, !dbg !4816
  %tobool.i1250 = icmp ne i8 %151, 0, !dbg !4816
  br i1 %tobool.i1250, label %if.else.i1272, label %land.lhs.true12.i1254, !dbg !4817

land.lhs.true12.i1254:                            ; preds = %land.lhs.true10.i1251
  %152 = load i8*, i8** %src.addr.i1227, align 8, !dbg !4818
  %arrayidx13.i1252 = getelementptr inbounds i8, i8* %152, i64 -2, !dbg !4818
  %153 = load i8, i8* %arrayidx13.i1252, align 1, !dbg !4818
  %tobool14.i1253 = icmp ne i8 %153, 0, !dbg !4818
  br i1 %tobool14.i1253, label %if.else.i1272, label %land.lhs.true15.i1257, !dbg !4819

land.lhs.true15.i1257:                            ; preds = %land.lhs.true12.i1254
  %154 = load i32, i32* %i.i1231, align 4, !dbg !4820
  %155 = load i32, i32* %size.addr.i1228, align 4, !dbg !4821
  %sub.i1255 = sub nsw i32 %155, 1, !dbg !4822
  %cmp16.i1256 = icmp slt i32 %154, %sub.i1255, !dbg !4823
  br i1 %cmp16.i1256, label %land.lhs.true18.i1261, label %if.else.i1272, !dbg !4824

land.lhs.true18.i1261:                            ; preds = %land.lhs.true15.i1257
  %156 = load i8*, i8** %src.addr.i1227, align 8, !dbg !4825
  %arrayidx19.i1258 = getelementptr inbounds i8, i8* %156, i64 1, !dbg !4825
  %157 = load i8, i8* %arrayidx19.i1258, align 1, !dbg !4825
  %conv20.i1259 = zext i8 %157 to i32, !dbg !4825
  %cmp21.i1260 = icmp slt i32 %conv20.i1259, 4, !dbg !4826
  br i1 %cmp21.i1260, label %if.then23.i1268, label %if.else.i1272, !dbg !4827

if.then23.i1268:                                  ; preds = %land.lhs.true18.i1261
  %158 = load i8*, i8** %src.addr.i1227, align 8, !dbg !4828
  %arrayidx24.i1262 = getelementptr inbounds i8, i8* %158, i64 1, !dbg !4828
  %159 = load i8, i8* %arrayidx24.i1262, align 1, !dbg !4828
  %160 = load i32, i32* %dsize.i1230, align 4, !dbg !4829
  %inc25.i1263 = add nsw i32 %160, 1, !dbg !4829
  store i32 %inc25.i1263, i32* %dsize.i1230, align 4, !dbg !4829
  %idxprom.i1264 = sext i32 %160 to i64, !dbg !4830
  %161 = load i8*, i8** %dst.addr.i1229, align 8, !dbg !4830
  %arrayidx26.i1265 = getelementptr inbounds i8, i8* %161, i64 %idxprom.i1264, !dbg !4830
  store i8 %159, i8* %arrayidx26.i1265, align 1, !dbg !4831
  %162 = load i8*, i8** %src.addr.i1227, align 8, !dbg !4832
  %incdec.ptr27.i1266 = getelementptr inbounds i8, i8* %162, i32 1, !dbg !4832
  store i8* %incdec.ptr27.i1266, i8** %src.addr.i1227, align 8, !dbg !4832
  %163 = load i32, i32* %i.i1231, align 4, !dbg !4833
  %inc28.i1267 = add nsw i32 %163, 1, !dbg !4833
  store i32 %inc28.i1267, i32* %i.i1231, align 4, !dbg !4833
  br label %if.end32.i1273, !dbg !4834

if.else.i1272:                                    ; preds = %land.lhs.true18.i1261, %land.lhs.true15.i1257, %land.lhs.true12.i1254, %land.lhs.true10.i1251, %land.lhs.true.i1248, %for.body5.i1246
  %164 = load i8*, i8** %src.addr.i1227, align 8, !dbg !4835
  %165 = load i8, i8* %164, align 1, !dbg !4836
  %166 = load i32, i32* %dsize.i1230, align 4, !dbg !4837
  %inc29.i1269 = add nsw i32 %166, 1, !dbg !4837
  store i32 %inc29.i1269, i32* %dsize.i1230, align 4, !dbg !4837
  %idxprom30.i1270 = sext i32 %166 to i64, !dbg !4838
  %167 = load i8*, i8** %dst.addr.i1229, align 8, !dbg !4838
  %arrayidx31.i1271 = getelementptr inbounds i8, i8* %167, i64 %idxprom30.i1270, !dbg !4838
  store i8 %165, i8* %arrayidx31.i1271, align 1, !dbg !4839
  br label %if.end32.i1273, !dbg !4786

if.end32.i1273:                                   ; preds = %if.else.i1272, %if.then23.i1268
  %168 = load i32, i32* %i.i1231, align 4, !dbg !4840
  %inc34.i1274 = add nsw i32 %168, 1, !dbg !4840
  store i32 %inc34.i1274, i32* %i.i1231, align 4, !dbg !4840
  %169 = load i8*, i8** %src.addr.i1227, align 8, !dbg !4841
  %incdec.ptr35.i1275 = getelementptr inbounds i8, i8* %169, i32 1, !dbg !4841
  store i8* %incdec.ptr35.i1275, i8** %src.addr.i1227, align 8, !dbg !4841
  br label %for.cond3.i1243, !dbg !4842, !llvm.loop !4022

for.end36.i1276:                                  ; preds = %for.cond3.i1243
  %170 = load i32, i32* %dsize.i1230, align 4, !dbg !4843
  store i32 %170, i32* %retval.i1226, align 4, !dbg !4844
  br label %vc1_unescape_buffer.exit1277, !dbg !4844

vc1_unescape_buffer.exit1277:                     ; preds = %for.end.i1240, %for.end36.i1276
  %171 = load i32, i32* %retval.i1226, align 4, !dbg !4845
  store i32 %171, i32* %buf_size3, align 4, !dbg !4846
  %172 = load i32, i32* %n_slices, align 4, !dbg !4847
  %idxprom84 = sext i32 %172 to i64, !dbg !4848
  %173 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !4848
  %arrayidx85 = getelementptr inbounds %struct.anon, %struct.anon* %173, i64 %idxprom84, !dbg !4848
  %gb = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx85, i32 0, i32 1, !dbg !4849
  %174 = load i32, i32* %n_slices, align 4, !dbg !4850
  %idxprom86 = sext i32 %174 to i64, !dbg !4851
  %175 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !4851
  %arrayidx87 = getelementptr inbounds %struct.anon, %struct.anon* %175, i64 %idxprom86, !dbg !4851
  %buf88 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx87, i32 0, i32 0, !dbg !4852
  %176 = load i8*, i8** %buf88, align 8, !dbg !4852
  %177 = load i32, i32* %buf_size3, align 4, !dbg !4853
  %shl = shl i32 %177, 3, !dbg !4854
  %call89 = call i32 @init_get_bits(%struct.GetBitContext* %gb, i8* %176, i32 %shl), !dbg !4855
  %178 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4856
  %coded_height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %178, i32 0, i32 23, !dbg !4857
  %179 = load i32, i32* %coded_height, align 8, !dbg !4857
  %add90 = add nsw i32 %179, 31, !dbg !4858
  %shr = ashr i32 %add90, 5, !dbg !4859
  %180 = load i32, i32* %n_slices, align 4, !dbg !4860
  %idxprom91 = sext i32 %180 to i64, !dbg !4861
  %181 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !4861
  %arrayidx92 = getelementptr inbounds %struct.anon, %struct.anon* %181, i64 %idxprom91, !dbg !4861
  %mby_start = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx92, i32 0, i32 2, !dbg !4862
  store i32 %shr, i32* %mby_start, align 8, !dbg !4863
  %182 = load i8*, i8** %start, align 8, !dbg !4864
  %183 = load i32, i32* %n_slices, align 4, !dbg !4865
  %idxprom93 = sext i32 %183 to i64, !dbg !4866
  %184 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !4866
  %arrayidx94 = getelementptr inbounds %struct.anon, %struct.anon* %184, i64 %idxprom93, !dbg !4866
  %rawbuf = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx94, i32 0, i32 3, !dbg !4867
  store i8* %182, i8** %rawbuf, align 8, !dbg !4868
  %185 = load i32, i32* %size40, align 4, !dbg !4869
  %add95 = add nsw i32 %185, 4, !dbg !4870
  %186 = load i32, i32* %n_slices, align 4, !dbg !4871
  %idxprom96 = sext i32 %186 to i64, !dbg !4872
  %187 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !4872
  %arrayidx97 = getelementptr inbounds %struct.anon, %struct.anon* %187, i64 %idxprom96, !dbg !4872
  %raw_size = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx97, i32 0, i32 4, !dbg !4873
  store i32 %add95, i32* %raw_size, align 8, !dbg !4874
  %188 = load i32, i32* %n_slices, align 4, !dbg !4875
  %sub98 = sub nsw i32 %188, 1, !dbg !4876
  store i32 %sub98, i32* %n_slices1, align 4, !dbg !4877
  %189 = load i32, i32* %n_slices, align 4, !dbg !4878
  %inc = add nsw i32 %189, 1, !dbg !4878
  store i32 %inc, i32* %n_slices, align 4, !dbg !4878
  br label %sw.epilog, !dbg !4879

sw.bb99:                                          ; preds = %if.end49
  %190 = load i8*, i8** %start, align 8, !dbg !4880
  %add.ptr100 = getelementptr inbounds i8, i8* %190, i64 4, !dbg !4881
  %191 = load i32, i32* %size40, align 4, !dbg !4882
  %192 = load i8*, i8** %buf2, align 8, !dbg !4883
  store i8* %add.ptr100, i8** %src.addr.i1279, align 8, !dbg !4884
  store i32 %191, i32* %size.addr.i1280, align 4, !dbg !4884
  store i8* %192, i8** %dst.addr.i1281, align 8, !dbg !4884
  store i32 0, i32* %dsize.i1282, align 4, !dbg !4391
  %193 = load i32, i32* %size.addr.i1280, align 4, !dbg !4885
  %cmp.i1284 = icmp slt i32 %193, 4, !dbg !4886
  br i1 %cmp.i1284, label %if.then.i1285, label %if.end.i1293, !dbg !4887

if.then.i1285:                                    ; preds = %sw.bb99
  store i32 0, i32* %dsize.i1282, align 4, !dbg !4888
  br label %for.cond.i1287, !dbg !4889

for.cond.i1287:                                   ; preds = %for.body.i1290, %if.then.i1285
  %194 = load i32, i32* %dsize.i1282, align 4, !dbg !4890
  %195 = load i32, i32* %size.addr.i1280, align 4, !dbg !4891
  %cmp1.i1286 = icmp slt i32 %194, %195, !dbg !4892
  br i1 %cmp1.i1286, label %for.body.i1290, label %for.end.i1292, !dbg !4893

for.body.i1290:                                   ; preds = %for.cond.i1287
  %196 = load i8*, i8** %src.addr.i1279, align 8, !dbg !4894
  %incdec.ptr.i1288 = getelementptr inbounds i8, i8* %196, i32 1, !dbg !4894
  store i8* %incdec.ptr.i1288, i8** %src.addr.i1279, align 8, !dbg !4894
  %197 = load i8, i8* %196, align 1, !dbg !4895
  %198 = load i8*, i8** %dst.addr.i1281, align 8, !dbg !4896
  %incdec.ptr2.i1289 = getelementptr inbounds i8, i8* %198, i32 1, !dbg !4896
  store i8* %incdec.ptr2.i1289, i8** %dst.addr.i1281, align 8, !dbg !4896
  store i8 %197, i8* %198, align 1, !dbg !4897
  %199 = load i32, i32* %dsize.i1282, align 4, !dbg !4898
  %inc.i1291 = add nsw i32 %199, 1, !dbg !4898
  store i32 %inc.i1291, i32* %dsize.i1282, align 4, !dbg !4898
  br label %for.cond.i1287, !dbg !4899, !llvm.loop !3967

for.end.i1292:                                    ; preds = %for.cond.i1287
  %200 = load i32, i32* %size.addr.i1280, align 4, !dbg !4900
  store i32 %200, i32* %retval.i1278, align 4, !dbg !4901
  br label %vc1_unescape_buffer.exit1329, !dbg !4901

if.end.i1293:                                     ; preds = %sw.bb99
  store i32 0, i32* %i.i1283, align 4, !dbg !4902
  br label %for.cond3.i1295, !dbg !4903

for.cond3.i1295:                                  ; preds = %if.end32.i1325, %if.end.i1293
  %201 = load i32, i32* %i.i1283, align 4, !dbg !4904
  %202 = load i32, i32* %size.addr.i1280, align 4, !dbg !4905
  %cmp4.i1294 = icmp slt i32 %201, %202, !dbg !4906
  br i1 %cmp4.i1294, label %for.body5.i1298, label %for.end36.i1328, !dbg !4907

for.body5.i1298:                                  ; preds = %for.cond3.i1295
  %203 = load i8*, i8** %src.addr.i1279, align 8, !dbg !4908
  %204 = load i8, i8* %203, align 1, !dbg !4908
  %conv.i1296 = zext i8 %204 to i32, !dbg !4908
  %cmp6.i1297 = icmp eq i32 %conv.i1296, 3, !dbg !4909
  br i1 %cmp6.i1297, label %land.lhs.true.i1300, label %if.else.i1324, !dbg !4910

land.lhs.true.i1300:                              ; preds = %for.body5.i1298
  %205 = load i32, i32* %i.i1283, align 4, !dbg !4911
  %cmp8.i1299 = icmp sge i32 %205, 2, !dbg !4912
  br i1 %cmp8.i1299, label %land.lhs.true10.i1303, label %if.else.i1324, !dbg !4913

land.lhs.true10.i1303:                            ; preds = %land.lhs.true.i1300
  %206 = load i8*, i8** %src.addr.i1279, align 8, !dbg !4914
  %arrayidx11.i1301 = getelementptr inbounds i8, i8* %206, i64 -1, !dbg !4914
  %207 = load i8, i8* %arrayidx11.i1301, align 1, !dbg !4914
  %tobool.i1302 = icmp ne i8 %207, 0, !dbg !4914
  br i1 %tobool.i1302, label %if.else.i1324, label %land.lhs.true12.i1306, !dbg !4915

land.lhs.true12.i1306:                            ; preds = %land.lhs.true10.i1303
  %208 = load i8*, i8** %src.addr.i1279, align 8, !dbg !4916
  %arrayidx13.i1304 = getelementptr inbounds i8, i8* %208, i64 -2, !dbg !4916
  %209 = load i8, i8* %arrayidx13.i1304, align 1, !dbg !4916
  %tobool14.i1305 = icmp ne i8 %209, 0, !dbg !4916
  br i1 %tobool14.i1305, label %if.else.i1324, label %land.lhs.true15.i1309, !dbg !4917

land.lhs.true15.i1309:                            ; preds = %land.lhs.true12.i1306
  %210 = load i32, i32* %i.i1283, align 4, !dbg !4918
  %211 = load i32, i32* %size.addr.i1280, align 4, !dbg !4919
  %sub.i1307 = sub nsw i32 %211, 1, !dbg !4920
  %cmp16.i1308 = icmp slt i32 %210, %sub.i1307, !dbg !4921
  br i1 %cmp16.i1308, label %land.lhs.true18.i1313, label %if.else.i1324, !dbg !4922

land.lhs.true18.i1313:                            ; preds = %land.lhs.true15.i1309
  %212 = load i8*, i8** %src.addr.i1279, align 8, !dbg !4923
  %arrayidx19.i1310 = getelementptr inbounds i8, i8* %212, i64 1, !dbg !4923
  %213 = load i8, i8* %arrayidx19.i1310, align 1, !dbg !4923
  %conv20.i1311 = zext i8 %213 to i32, !dbg !4923
  %cmp21.i1312 = icmp slt i32 %conv20.i1311, 4, !dbg !4924
  br i1 %cmp21.i1312, label %if.then23.i1320, label %if.else.i1324, !dbg !4925

if.then23.i1320:                                  ; preds = %land.lhs.true18.i1313
  %214 = load i8*, i8** %src.addr.i1279, align 8, !dbg !4926
  %arrayidx24.i1314 = getelementptr inbounds i8, i8* %214, i64 1, !dbg !4926
  %215 = load i8, i8* %arrayidx24.i1314, align 1, !dbg !4926
  %216 = load i32, i32* %dsize.i1282, align 4, !dbg !4927
  %inc25.i1315 = add nsw i32 %216, 1, !dbg !4927
  store i32 %inc25.i1315, i32* %dsize.i1282, align 4, !dbg !4927
  %idxprom.i1316 = sext i32 %216 to i64, !dbg !4928
  %217 = load i8*, i8** %dst.addr.i1281, align 8, !dbg !4928
  %arrayidx26.i1317 = getelementptr inbounds i8, i8* %217, i64 %idxprom.i1316, !dbg !4928
  store i8 %215, i8* %arrayidx26.i1317, align 1, !dbg !4929
  %218 = load i8*, i8** %src.addr.i1279, align 8, !dbg !4930
  %incdec.ptr27.i1318 = getelementptr inbounds i8, i8* %218, i32 1, !dbg !4930
  store i8* %incdec.ptr27.i1318, i8** %src.addr.i1279, align 8, !dbg !4930
  %219 = load i32, i32* %i.i1283, align 4, !dbg !4931
  %inc28.i1319 = add nsw i32 %219, 1, !dbg !4931
  store i32 %inc28.i1319, i32* %i.i1283, align 4, !dbg !4931
  br label %if.end32.i1325, !dbg !4932

if.else.i1324:                                    ; preds = %land.lhs.true18.i1313, %land.lhs.true15.i1309, %land.lhs.true12.i1306, %land.lhs.true10.i1303, %land.lhs.true.i1300, %for.body5.i1298
  %220 = load i8*, i8** %src.addr.i1279, align 8, !dbg !4933
  %221 = load i8, i8* %220, align 1, !dbg !4934
  %222 = load i32, i32* %dsize.i1282, align 4, !dbg !4935
  %inc29.i1321 = add nsw i32 %222, 1, !dbg !4935
  store i32 %inc29.i1321, i32* %dsize.i1282, align 4, !dbg !4935
  %idxprom30.i1322 = sext i32 %222 to i64, !dbg !4936
  %223 = load i8*, i8** %dst.addr.i1281, align 8, !dbg !4936
  %arrayidx31.i1323 = getelementptr inbounds i8, i8* %223, i64 %idxprom30.i1322, !dbg !4936
  store i8 %221, i8* %arrayidx31.i1323, align 1, !dbg !4937
  br label %if.end32.i1325, !dbg !4884

if.end32.i1325:                                   ; preds = %if.else.i1324, %if.then23.i1320
  %224 = load i32, i32* %i.i1283, align 4, !dbg !4938
  %inc34.i1326 = add nsw i32 %224, 1, !dbg !4938
  store i32 %inc34.i1326, i32* %i.i1283, align 4, !dbg !4938
  %225 = load i8*, i8** %src.addr.i1279, align 8, !dbg !4939
  %incdec.ptr35.i1327 = getelementptr inbounds i8, i8* %225, i32 1, !dbg !4939
  store i8* %incdec.ptr35.i1327, i8** %src.addr.i1279, align 8, !dbg !4939
  br label %for.cond3.i1295, !dbg !4940, !llvm.loop !4022

for.end36.i1328:                                  ; preds = %for.cond3.i1295
  %226 = load i32, i32* %dsize.i1282, align 4, !dbg !4941
  store i32 %226, i32* %retval.i1278, align 4, !dbg !4942
  br label %vc1_unescape_buffer.exit1329, !dbg !4942

vc1_unescape_buffer.exit1329:                     ; preds = %for.end.i1292, %for.end36.i1328
  %227 = load i32, i32* %retval.i1278, align 4, !dbg !4943
  store i32 %227, i32* %buf_size2, align 4, !dbg !4944
  %228 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !4945
  %gb102 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %228, i32 0, i32 266, !dbg !4946
  %229 = load i8*, i8** %buf2, align 8, !dbg !4947
  %230 = load i32, i32* %buf_size2, align 4, !dbg !4948
  %mul = mul nsw i32 %230, 8, !dbg !4949
  %call103 = call i32 @init_get_bits(%struct.GetBitContext* %gb102, i8* %229, i32 %mul), !dbg !4950
  %231 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !4951
  %232 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !4952
  %233 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !4953
  %gb104 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %233, i32 0, i32 266, !dbg !4954
  %call105 = call i32 @ff_vc1_decode_entry_point(%struct.AVCodecContext* %231, %struct.VC1Context* %232, %struct.GetBitContext* %gb104), !dbg !4955
  br label %sw.epilog, !dbg !4956

sw.bb106:                                         ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i32* %buf_size3108, metadata !4957, metadata !3012), !dbg !4958
  %234 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !4959
  %235 = bitcast %struct.anon* %234 to i8*, !dbg !4959
  %236 = load i32, i32* %n_slices, align 4, !dbg !4960
  %add109 = add nsw i32 %236, 1, !dbg !4961
  %conv110 = sext i32 %add109 to i64, !dbg !4962
  %call111 = call i8* @av_realloc_array(i8* %235, i64 64, i64 %conv110), !dbg !4963
  %237 = bitcast i8* %call111 to %struct.anon*, !dbg !4963
  store %struct.anon* %237, %struct.anon** %tmp, align 8, !dbg !4964
  %238 = load %struct.anon*, %struct.anon** %tmp, align 8, !dbg !4965
  %tobool112 = icmp ne %struct.anon* %238, null, !dbg !4965
  br i1 %tobool112, label %if.end114, label %if.then113, !dbg !4967

if.then113:                                       ; preds = %sw.bb106
  store i32 -12, i32* %ret, align 4, !dbg !4968
  br label %err, !dbg !4970

if.end114:                                        ; preds = %sw.bb106
  %239 = load %struct.anon*, %struct.anon** %tmp, align 8, !dbg !4971
  store %struct.anon* %239, %struct.anon** %slices, align 8, !dbg !4972
  %240 = load i32, i32* %buf_size, align 4, !dbg !4973
  %add115 = add nsw i32 %240, 64, !dbg !4974
  %conv116 = sext i32 %add115 to i64, !dbg !4973
  %call117 = call noalias i8* @av_mallocz(i64 %conv116), !dbg !4975
  %241 = load i32, i32* %n_slices, align 4, !dbg !4976
  %idxprom118 = sext i32 %241 to i64, !dbg !4977
  %242 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !4977
  %arrayidx119 = getelementptr inbounds %struct.anon, %struct.anon* %242, i64 %idxprom118, !dbg !4977
  %buf120 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx119, i32 0, i32 0, !dbg !4978
  store i8* %call117, i8** %buf120, align 8, !dbg !4979
  %243 = load i32, i32* %n_slices, align 4, !dbg !4980
  %idxprom121 = sext i32 %243 to i64, !dbg !4982
  %244 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !4982
  %arrayidx122 = getelementptr inbounds %struct.anon, %struct.anon* %244, i64 %idxprom121, !dbg !4982
  %buf123 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx122, i32 0, i32 0, !dbg !4983
  %245 = load i8*, i8** %buf123, align 8, !dbg !4983
  %tobool124 = icmp ne i8* %245, null, !dbg !4982
  br i1 %tobool124, label %if.end126, label %if.then125, !dbg !4984

if.then125:                                       ; preds = %if.end114
  store i32 -12, i32* %ret, align 4, !dbg !4985
  br label %err, !dbg !4987

if.end126:                                        ; preds = %if.end114
  %246 = load i8*, i8** %start, align 8, !dbg !4988
  %add.ptr127 = getelementptr inbounds i8, i8* %246, i64 4, !dbg !4989
  %247 = load i32, i32* %size40, align 4, !dbg !4990
  %248 = load i32, i32* %n_slices, align 4, !dbg !4991
  %idxprom128 = sext i32 %248 to i64, !dbg !4992
  %249 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !4992
  %arrayidx129 = getelementptr inbounds %struct.anon, %struct.anon* %249, i64 %idxprom128, !dbg !4992
  %buf130 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx129, i32 0, i32 0, !dbg !4993
  %250 = load i8*, i8** %buf130, align 8, !dbg !4993
  store i8* %add.ptr127, i8** %src.addr.i1331, align 8, !dbg !4994
  store i32 %247, i32* %size.addr.i1332, align 4, !dbg !4994
  store i8* %250, i8** %dst.addr.i1333, align 8, !dbg !4994
  store i32 0, i32* %dsize.i1334, align 4, !dbg !4385
  %251 = load i32, i32* %size.addr.i1332, align 4, !dbg !4995
  %cmp.i1336 = icmp slt i32 %251, 4, !dbg !4996
  br i1 %cmp.i1336, label %if.then.i1337, label %if.end.i1345, !dbg !4997

if.then.i1337:                                    ; preds = %if.end126
  store i32 0, i32* %dsize.i1334, align 4, !dbg !4998
  br label %for.cond.i1339, !dbg !4999

for.cond.i1339:                                   ; preds = %for.body.i1342, %if.then.i1337
  %252 = load i32, i32* %dsize.i1334, align 4, !dbg !5000
  %253 = load i32, i32* %size.addr.i1332, align 4, !dbg !5001
  %cmp1.i1338 = icmp slt i32 %252, %253, !dbg !5002
  br i1 %cmp1.i1338, label %for.body.i1342, label %for.end.i1344, !dbg !5003

for.body.i1342:                                   ; preds = %for.cond.i1339
  %254 = load i8*, i8** %src.addr.i1331, align 8, !dbg !5004
  %incdec.ptr.i1340 = getelementptr inbounds i8, i8* %254, i32 1, !dbg !5004
  store i8* %incdec.ptr.i1340, i8** %src.addr.i1331, align 8, !dbg !5004
  %255 = load i8, i8* %254, align 1, !dbg !5005
  %256 = load i8*, i8** %dst.addr.i1333, align 8, !dbg !5006
  %incdec.ptr2.i1341 = getelementptr inbounds i8, i8* %256, i32 1, !dbg !5006
  store i8* %incdec.ptr2.i1341, i8** %dst.addr.i1333, align 8, !dbg !5006
  store i8 %255, i8* %256, align 1, !dbg !5007
  %257 = load i32, i32* %dsize.i1334, align 4, !dbg !5008
  %inc.i1343 = add nsw i32 %257, 1, !dbg !5008
  store i32 %inc.i1343, i32* %dsize.i1334, align 4, !dbg !5008
  br label %for.cond.i1339, !dbg !5009, !llvm.loop !3967

for.end.i1344:                                    ; preds = %for.cond.i1339
  %258 = load i32, i32* %size.addr.i1332, align 4, !dbg !5010
  store i32 %258, i32* %retval.i1330, align 4, !dbg !5011
  br label %vc1_unescape_buffer.exit1381, !dbg !5011

if.end.i1345:                                     ; preds = %if.end126
  store i32 0, i32* %i.i1335, align 4, !dbg !5012
  br label %for.cond3.i1347, !dbg !5013

for.cond3.i1347:                                  ; preds = %if.end32.i1377, %if.end.i1345
  %259 = load i32, i32* %i.i1335, align 4, !dbg !5014
  %260 = load i32, i32* %size.addr.i1332, align 4, !dbg !5015
  %cmp4.i1346 = icmp slt i32 %259, %260, !dbg !5016
  br i1 %cmp4.i1346, label %for.body5.i1350, label %for.end36.i1380, !dbg !5017

for.body5.i1350:                                  ; preds = %for.cond3.i1347
  %261 = load i8*, i8** %src.addr.i1331, align 8, !dbg !5018
  %262 = load i8, i8* %261, align 1, !dbg !5018
  %conv.i1348 = zext i8 %262 to i32, !dbg !5018
  %cmp6.i1349 = icmp eq i32 %conv.i1348, 3, !dbg !5019
  br i1 %cmp6.i1349, label %land.lhs.true.i1352, label %if.else.i1376, !dbg !5020

land.lhs.true.i1352:                              ; preds = %for.body5.i1350
  %263 = load i32, i32* %i.i1335, align 4, !dbg !5021
  %cmp8.i1351 = icmp sge i32 %263, 2, !dbg !5022
  br i1 %cmp8.i1351, label %land.lhs.true10.i1355, label %if.else.i1376, !dbg !5023

land.lhs.true10.i1355:                            ; preds = %land.lhs.true.i1352
  %264 = load i8*, i8** %src.addr.i1331, align 8, !dbg !5024
  %arrayidx11.i1353 = getelementptr inbounds i8, i8* %264, i64 -1, !dbg !5024
  %265 = load i8, i8* %arrayidx11.i1353, align 1, !dbg !5024
  %tobool.i1354 = icmp ne i8 %265, 0, !dbg !5024
  br i1 %tobool.i1354, label %if.else.i1376, label %land.lhs.true12.i1358, !dbg !5025

land.lhs.true12.i1358:                            ; preds = %land.lhs.true10.i1355
  %266 = load i8*, i8** %src.addr.i1331, align 8, !dbg !5026
  %arrayidx13.i1356 = getelementptr inbounds i8, i8* %266, i64 -2, !dbg !5026
  %267 = load i8, i8* %arrayidx13.i1356, align 1, !dbg !5026
  %tobool14.i1357 = icmp ne i8 %267, 0, !dbg !5026
  br i1 %tobool14.i1357, label %if.else.i1376, label %land.lhs.true15.i1361, !dbg !5027

land.lhs.true15.i1361:                            ; preds = %land.lhs.true12.i1358
  %268 = load i32, i32* %i.i1335, align 4, !dbg !5028
  %269 = load i32, i32* %size.addr.i1332, align 4, !dbg !5029
  %sub.i1359 = sub nsw i32 %269, 1, !dbg !5030
  %cmp16.i1360 = icmp slt i32 %268, %sub.i1359, !dbg !5031
  br i1 %cmp16.i1360, label %land.lhs.true18.i1365, label %if.else.i1376, !dbg !5032

land.lhs.true18.i1365:                            ; preds = %land.lhs.true15.i1361
  %270 = load i8*, i8** %src.addr.i1331, align 8, !dbg !5033
  %arrayidx19.i1362 = getelementptr inbounds i8, i8* %270, i64 1, !dbg !5033
  %271 = load i8, i8* %arrayidx19.i1362, align 1, !dbg !5033
  %conv20.i1363 = zext i8 %271 to i32, !dbg !5033
  %cmp21.i1364 = icmp slt i32 %conv20.i1363, 4, !dbg !5034
  br i1 %cmp21.i1364, label %if.then23.i1372, label %if.else.i1376, !dbg !5035

if.then23.i1372:                                  ; preds = %land.lhs.true18.i1365
  %272 = load i8*, i8** %src.addr.i1331, align 8, !dbg !5036
  %arrayidx24.i1366 = getelementptr inbounds i8, i8* %272, i64 1, !dbg !5036
  %273 = load i8, i8* %arrayidx24.i1366, align 1, !dbg !5036
  %274 = load i32, i32* %dsize.i1334, align 4, !dbg !5037
  %inc25.i1367 = add nsw i32 %274, 1, !dbg !5037
  store i32 %inc25.i1367, i32* %dsize.i1334, align 4, !dbg !5037
  %idxprom.i1368 = sext i32 %274 to i64, !dbg !5038
  %275 = load i8*, i8** %dst.addr.i1333, align 8, !dbg !5038
  %arrayidx26.i1369 = getelementptr inbounds i8, i8* %275, i64 %idxprom.i1368, !dbg !5038
  store i8 %273, i8* %arrayidx26.i1369, align 1, !dbg !5039
  %276 = load i8*, i8** %src.addr.i1331, align 8, !dbg !5040
  %incdec.ptr27.i1370 = getelementptr inbounds i8, i8* %276, i32 1, !dbg !5040
  store i8* %incdec.ptr27.i1370, i8** %src.addr.i1331, align 8, !dbg !5040
  %277 = load i32, i32* %i.i1335, align 4, !dbg !5041
  %inc28.i1371 = add nsw i32 %277, 1, !dbg !5041
  store i32 %inc28.i1371, i32* %i.i1335, align 4, !dbg !5041
  br label %if.end32.i1377, !dbg !5042

if.else.i1376:                                    ; preds = %land.lhs.true18.i1365, %land.lhs.true15.i1361, %land.lhs.true12.i1358, %land.lhs.true10.i1355, %land.lhs.true.i1352, %for.body5.i1350
  %278 = load i8*, i8** %src.addr.i1331, align 8, !dbg !5043
  %279 = load i8, i8* %278, align 1, !dbg !5044
  %280 = load i32, i32* %dsize.i1334, align 4, !dbg !5045
  %inc29.i1373 = add nsw i32 %280, 1, !dbg !5045
  store i32 %inc29.i1373, i32* %dsize.i1334, align 4, !dbg !5045
  %idxprom30.i1374 = sext i32 %280 to i64, !dbg !5046
  %281 = load i8*, i8** %dst.addr.i1333, align 8, !dbg !5046
  %arrayidx31.i1375 = getelementptr inbounds i8, i8* %281, i64 %idxprom30.i1374, !dbg !5046
  store i8 %279, i8* %arrayidx31.i1375, align 1, !dbg !5047
  br label %if.end32.i1377, !dbg !4994

if.end32.i1377:                                   ; preds = %if.else.i1376, %if.then23.i1372
  %282 = load i32, i32* %i.i1335, align 4, !dbg !5048
  %inc34.i1378 = add nsw i32 %282, 1, !dbg !5048
  store i32 %inc34.i1378, i32* %i.i1335, align 4, !dbg !5048
  %283 = load i8*, i8** %src.addr.i1331, align 8, !dbg !5049
  %incdec.ptr35.i1379 = getelementptr inbounds i8, i8* %283, i32 1, !dbg !5049
  store i8* %incdec.ptr35.i1379, i8** %src.addr.i1331, align 8, !dbg !5049
  br label %for.cond3.i1347, !dbg !5050, !llvm.loop !4022

for.end36.i1380:                                  ; preds = %for.cond3.i1347
  %284 = load i32, i32* %dsize.i1334, align 4, !dbg !5051
  store i32 %284, i32* %retval.i1330, align 4, !dbg !5052
  br label %vc1_unescape_buffer.exit1381, !dbg !5052

vc1_unescape_buffer.exit1381:                     ; preds = %for.end.i1344, %for.end36.i1380
  %285 = load i32, i32* %retval.i1330, align 4, !dbg !5053
  store i32 %285, i32* %buf_size3108, align 4, !dbg !5054
  %286 = load i32, i32* %n_slices, align 4, !dbg !5055
  %idxprom132 = sext i32 %286 to i64, !dbg !5056
  %287 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5056
  %arrayidx133 = getelementptr inbounds %struct.anon, %struct.anon* %287, i64 %idxprom132, !dbg !5056
  %gb134 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx133, i32 0, i32 1, !dbg !5057
  %288 = load i32, i32* %n_slices, align 4, !dbg !5058
  %idxprom135 = sext i32 %288 to i64, !dbg !5059
  %289 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5059
  %arrayidx136 = getelementptr inbounds %struct.anon, %struct.anon* %289, i64 %idxprom135, !dbg !5059
  %buf137 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx136, i32 0, i32 0, !dbg !5060
  %290 = load i8*, i8** %buf137, align 8, !dbg !5060
  %291 = load i32, i32* %buf_size3108, align 4, !dbg !5061
  %shl138 = shl i32 %291, 3, !dbg !5062
  %call139 = call i32 @init_get_bits(%struct.GetBitContext* %gb134, i8* %290, i32 %shl138), !dbg !5063
  %292 = load i32, i32* %n_slices, align 4, !dbg !5064
  %idxprom140 = sext i32 %292 to i64, !dbg !5065
  %293 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5065
  %arrayidx141 = getelementptr inbounds %struct.anon, %struct.anon* %293, i64 %idxprom140, !dbg !5065
  %gb142 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx141, i32 0, i32 1, !dbg !5066
  %call143 = call i32 @get_bits(%struct.GetBitContext* %gb142, i32 9), !dbg !5067
  %294 = load i32, i32* %n_slices, align 4, !dbg !5068
  %idxprom144 = sext i32 %294 to i64, !dbg !5069
  %295 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5069
  %arrayidx145 = getelementptr inbounds %struct.anon, %struct.anon* %295, i64 %idxprom144, !dbg !5069
  %mby_start146 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx145, i32 0, i32 2, !dbg !5070
  store i32 %call143, i32* %mby_start146, align 8, !dbg !5071
  %296 = load i8*, i8** %start, align 8, !dbg !5072
  %297 = load i32, i32* %n_slices, align 4, !dbg !5073
  %idxprom147 = sext i32 %297 to i64, !dbg !5074
  %298 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5074
  %arrayidx148 = getelementptr inbounds %struct.anon, %struct.anon* %298, i64 %idxprom147, !dbg !5074
  %rawbuf149 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx148, i32 0, i32 3, !dbg !5075
  store i8* %296, i8** %rawbuf149, align 8, !dbg !5076
  %299 = load i32, i32* %size40, align 4, !dbg !5077
  %add150 = add nsw i32 %299, 4, !dbg !5078
  %300 = load i32, i32* %n_slices, align 4, !dbg !5079
  %idxprom151 = sext i32 %300 to i64, !dbg !5080
  %301 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5080
  %arrayidx152 = getelementptr inbounds %struct.anon, %struct.anon* %301, i64 %idxprom151, !dbg !5080
  %raw_size153 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx152, i32 0, i32 4, !dbg !5081
  store i32 %add150, i32* %raw_size153, align 8, !dbg !5082
  %302 = load i32, i32* %n_slices, align 4, !dbg !5083
  %inc154 = add nsw i32 %302, 1, !dbg !5083
  store i32 %inc154, i32* %n_slices, align 4, !dbg !5083
  br label %sw.epilog, !dbg !5084

sw.epilog:                                        ; preds = %if.end49, %vc1_unescape_buffer.exit1381, %vc1_unescape_buffer.exit1329, %vc1_unescape_buffer.exit1277, %vc1_unescape_buffer.exit
  br label %for.inc, !dbg !5085

for.inc:                                          ; preds = %sw.epilog, %if.then48
  %303 = load i8*, i8** %next, align 8, !dbg !5086
  store i8* %303, i8** %start, align 8, !dbg !5088
  br label %for.cond, !dbg !5089, !llvm.loop !5090

for.end:                                          ; preds = %for.cond
  br label %if.end251, !dbg !5092

if.else:                                          ; preds = %if.end29
  %304 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5093
  %interlace = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %304, i32 0, i32 18, !dbg !5095
  %305 = load i32, i32* %interlace, align 8, !dbg !5095
  %tobool155 = icmp ne i32 %305, 0, !dbg !5093
  br i1 %tobool155, label %land.lhs.true156, label %if.else248, !dbg !5096

land.lhs.true156:                                 ; preds = %if.else
  %306 = load i8*, i8** %buf, align 8, !dbg !5097
  %arrayidx157 = getelementptr inbounds i8, i8* %306, i64 0, !dbg !5097
  %307 = load i8, i8* %arrayidx157, align 1, !dbg !5097
  %conv158 = zext i8 %307 to i32, !dbg !5097
  %and159 = and i32 %conv158, 192, !dbg !5099
  %cmp160 = icmp eq i32 %and159, 192, !dbg !5100
  br i1 %cmp160, label %if.then162, label %if.else248, !dbg !5101

if.then162:                                       ; preds = %land.lhs.true156
  call void @llvm.dbg.declare(metadata i8** %divider, metadata !5102, metadata !3012), !dbg !5103
  call void @llvm.dbg.declare(metadata i32* %buf_size3165, metadata !5104, metadata !3012), !dbg !5105
  %308 = load i8*, i8** %buf, align 8, !dbg !5106
  %309 = load i8*, i8** %buf, align 8, !dbg !5107
  %310 = load i32, i32* %buf_size, align 4, !dbg !5108
  %idx.ext166 = sext i32 %310 to i64, !dbg !5109
  %add.ptr167 = getelementptr inbounds i8, i8* %309, i64 %idx.ext166, !dbg !5109
  store i8* %308, i8** %src.addr.i1383, align 8, !dbg !5110
  store i8* %add.ptr167, i8** %end.addr.i1384, align 8, !dbg !5110
  %311 = load i8*, i8** %end.addr.i1384, align 8, !dbg !5111
  %312 = load i8*, i8** %src.addr.i1383, align 8, !dbg !5112
  %sub.ptr.lhs.cast.i1386 = ptrtoint i8* %311 to i64, !dbg !5113
  %sub.ptr.rhs.cast.i1387 = ptrtoint i8* %312 to i64, !dbg !5113
  %sub.ptr.sub.i1388 = sub i64 %sub.ptr.lhs.cast.i1386, %sub.ptr.rhs.cast.i1387, !dbg !5113
  %cmp.i1389 = icmp sge i64 %sub.ptr.sub.i1388, 4, !dbg !5114
  br i1 %cmp.i1389, label %if.then.i1393, label %if.end3.i1397, !dbg !5115

if.then.i1393:                                    ; preds = %if.then162
  store i32 -1, i32* %mrk.i1385, align 4, !dbg !4374
  %313 = load i8*, i8** %src.addr.i1383, align 8, !dbg !5116
  %314 = load i8*, i8** %end.addr.i1384, align 8, !dbg !5117
  %call.i1390 = call i8* @avpriv_find_start_code(i8* %313, i8* %314, i32* %mrk.i1385) #8, !dbg !5118
  store i8* %call.i1390, i8** %src.addr.i1383, align 8, !dbg !5119
  %315 = load i32, i32* %mrk.i1385, align 4, !dbg !5120
  %and.i1391 = and i32 %315, -256, !dbg !5121
  %cmp1.i1392 = icmp eq i32 %and.i1391, 256, !dbg !5122
  br i1 %cmp1.i1392, label %if.then2.i1395, label %if.end.i1396, !dbg !5123

if.then2.i1395:                                   ; preds = %if.then.i1393
  %316 = load i8*, i8** %src.addr.i1383, align 8, !dbg !5124
  %add.ptr.i1394 = getelementptr inbounds i8, i8* %316, i64 -4, !dbg !5125
  store i8* %add.ptr.i1394, i8** %retval.i1382, align 8, !dbg !5126
  br label %find_next_marker.exit1398, !dbg !5126

if.end.i1396:                                     ; preds = %if.then.i1393
  br label %if.end3.i1397, !dbg !5127

if.end3.i1397:                                    ; preds = %if.end.i1396, %if.then162
  %317 = load i8*, i8** %end.addr.i1384, align 8, !dbg !5128
  store i8* %317, i8** %retval.i1382, align 8, !dbg !5129
  br label %find_next_marker.exit1398, !dbg !5129

find_next_marker.exit1398:                        ; preds = %if.then2.i1395, %if.end3.i1397
  %318 = load i8*, i8** %retval.i1382, align 8, !dbg !5130
  store i8* %318, i8** %divider, align 8, !dbg !5131
  %319 = load i8*, i8** %divider, align 8, !dbg !5132
  %320 = load i8*, i8** %buf, align 8, !dbg !5133
  %321 = load i32, i32* %buf_size, align 4, !dbg !5134
  %idx.ext169 = sext i32 %321 to i64, !dbg !5135
  %add.ptr170 = getelementptr inbounds i8, i8* %320, i64 %idx.ext169, !dbg !5135
  %cmp171 = icmp eq i8* %319, %add.ptr170, !dbg !5136
  br i1 %cmp171, label %if.then178, label %lor.lhs.false173, !dbg !5137

lor.lhs.false173:                                 ; preds = %find_next_marker.exit1398
  %322 = load i8*, i8** %divider, align 8, !dbg !5138
  %323 = bitcast i8* %322 to %union.unaligned_32*, !dbg !5139
  %l174 = bitcast %union.unaligned_32* %323 to i32*, !dbg !5139
  %324 = load i32, i32* %l174, align 1, !dbg !5139
  store i32 %324, i32* %x.addr.i1399, align 4, !dbg !5140
  %325 = load i32, i32* %x.addr.i1399, align 4, !dbg !5141
  %shl.i1400 = shl i32 %325, 8, !dbg !5142
  %and.i1401 = and i32 %shl.i1400, 65280, !dbg !5143
  %326 = load i32, i32* %x.addr.i1399, align 4, !dbg !5144
  %shr.i1402 = lshr i32 %326, 8, !dbg !5145
  %and1.i1403 = and i32 %shr.i1402, 255, !dbg !5146
  %or.i1404 = or i32 %and.i1401, %and1.i1403, !dbg !5147
  %shl2.i1405 = shl i32 %or.i1404, 16, !dbg !5148
  %327 = load i32, i32* %x.addr.i1399, align 4, !dbg !5149
  %shr3.i1406 = lshr i32 %327, 16, !dbg !5150
  %shl4.i1407 = shl i32 %shr3.i1406, 8, !dbg !5151
  %and5.i1408 = and i32 %shl4.i1407, 65280, !dbg !5152
  %328 = load i32, i32* %x.addr.i1399, align 4, !dbg !5153
  %shr6.i1409 = lshr i32 %328, 16, !dbg !5154
  %shr7.i1410 = lshr i32 %shr6.i1409, 8, !dbg !5155
  %and8.i1411 = and i32 %shr7.i1410, 255, !dbg !5156
  %or9.i1412 = or i32 %and5.i1408, %and8.i1411, !dbg !5157
  %or10.i1413 = or i32 %shl2.i1405, %or9.i1412, !dbg !5158
  %cmp176 = icmp ne i32 %or10.i1413, 268, !dbg !5159
  br i1 %cmp176, label %if.then178, label %if.else179, !dbg !5160

if.then178:                                       ; preds = %lor.lhs.false173, %find_next_marker.exit1398
  %329 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5161
  %330 = bitcast %struct.AVCodecContext* %329 to i8*, !dbg !5161
  call void (i8*, i32, i8*, ...) @av_log(i8* %330, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i32 0, i32 0)), !dbg !5163
  store i32 -1094995529, i32* %ret, align 4, !dbg !5164
  br label %err, !dbg !5165

if.else179:                                       ; preds = %lor.lhs.false173
  %331 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5166
  %hwaccel180 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %331, i32 0, i32 137, !dbg !5168
  %332 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel180, align 8, !dbg !5168
  %tobool181 = icmp ne %struct.AVHWAccel* %332, null, !dbg !5166
  br i1 %tobool181, label %if.then182, label %if.end183, !dbg !5169

if.then182:                                       ; preds = %if.else179
  %333 = load i8*, i8** %divider, align 8, !dbg !5170
  store i8* %333, i8** %buf_start_second_field, align 8, !dbg !5171
  br label %if.end183, !dbg !5172

if.end183:                                        ; preds = %if.then182, %if.else179
  %334 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5173
  %335 = bitcast %struct.anon* %334 to i8*, !dbg !5173
  %336 = load i32, i32* %n_slices, align 4, !dbg !5174
  %add184 = add nsw i32 %336, 1, !dbg !5175
  %conv185 = sext i32 %add184 to i64, !dbg !5176
  %call186 = call i8* @av_realloc_array(i8* %335, i64 64, i64 %conv185), !dbg !5177
  %337 = bitcast i8* %call186 to %struct.anon*, !dbg !5177
  store %struct.anon* %337, %struct.anon** %tmp, align 8, !dbg !5178
  %338 = load %struct.anon*, %struct.anon** %tmp, align 8, !dbg !5179
  %tobool187 = icmp ne %struct.anon* %338, null, !dbg !5179
  br i1 %tobool187, label %if.end189, label %if.then188, !dbg !5181

if.then188:                                       ; preds = %if.end183
  store i32 -12, i32* %ret, align 4, !dbg !5182
  br label %err, !dbg !5184

if.end189:                                        ; preds = %if.end183
  %339 = load %struct.anon*, %struct.anon** %tmp, align 8, !dbg !5185
  store %struct.anon* %339, %struct.anon** %slices, align 8, !dbg !5186
  %340 = load i32, i32* %buf_size, align 4, !dbg !5187
  %add190 = add nsw i32 %340, 64, !dbg !5188
  %conv191 = sext i32 %add190 to i64, !dbg !5187
  %call192 = call noalias i8* @av_mallocz(i64 %conv191), !dbg !5189
  %341 = load i32, i32* %n_slices, align 4, !dbg !5190
  %idxprom193 = sext i32 %341 to i64, !dbg !5191
  %342 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5191
  %arrayidx194 = getelementptr inbounds %struct.anon, %struct.anon* %342, i64 %idxprom193, !dbg !5191
  %buf195 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx194, i32 0, i32 0, !dbg !5192
  store i8* %call192, i8** %buf195, align 8, !dbg !5193
  %343 = load i32, i32* %n_slices, align 4, !dbg !5194
  %idxprom196 = sext i32 %343 to i64, !dbg !5196
  %344 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5196
  %arrayidx197 = getelementptr inbounds %struct.anon, %struct.anon* %344, i64 %idxprom196, !dbg !5196
  %buf198 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx197, i32 0, i32 0, !dbg !5197
  %345 = load i8*, i8** %buf198, align 8, !dbg !5197
  %tobool199 = icmp ne i8* %345, null, !dbg !5196
  br i1 %tobool199, label %if.end201, label %if.then200, !dbg !5198

if.then200:                                       ; preds = %if.end189
  store i32 -12, i32* %ret, align 4, !dbg !5199
  br label %err, !dbg !5201

if.end201:                                        ; preds = %if.end189
  %346 = load i8*, i8** %divider, align 8, !dbg !5202
  %add.ptr202 = getelementptr inbounds i8, i8* %346, i64 4, !dbg !5203
  %347 = load i8*, i8** %buf, align 8, !dbg !5204
  %348 = load i32, i32* %buf_size, align 4, !dbg !5205
  %idx.ext203 = sext i32 %348 to i64, !dbg !5206
  %add.ptr204 = getelementptr inbounds i8, i8* %347, i64 %idx.ext203, !dbg !5206
  %349 = load i8*, i8** %divider, align 8, !dbg !5207
  %sub.ptr.lhs.cast205 = ptrtoint i8* %add.ptr204 to i64, !dbg !5208
  %sub.ptr.rhs.cast206 = ptrtoint i8* %349 to i64, !dbg !5208
  %sub.ptr.sub207 = sub i64 %sub.ptr.lhs.cast205, %sub.ptr.rhs.cast206, !dbg !5208
  %sub208 = sub nsw i64 %sub.ptr.sub207, 4, !dbg !5209
  %conv209 = trunc i64 %sub208 to i32, !dbg !5204
  %350 = load i32, i32* %n_slices, align 4, !dbg !5210
  %idxprom210 = sext i32 %350 to i64, !dbg !5211
  %351 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5211
  %arrayidx211 = getelementptr inbounds %struct.anon, %struct.anon* %351, i64 %idxprom210, !dbg !5211
  %buf212 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx211, i32 0, i32 0, !dbg !5212
  %352 = load i8*, i8** %buf212, align 8, !dbg !5212
  store i8* %add.ptr202, i8** %src.addr.i1415, align 8, !dbg !5213
  store i32 %conv209, i32* %size.addr.i1416, align 4, !dbg !5213
  store i8* %352, i8** %dst.addr.i1417, align 8, !dbg !5213
  store i32 0, i32* %dsize.i1418, align 4, !dbg !4366
  %353 = load i32, i32* %size.addr.i1416, align 4, !dbg !5214
  %cmp.i1420 = icmp slt i32 %353, 4, !dbg !5215
  br i1 %cmp.i1420, label %if.then.i1421, label %if.end.i1429, !dbg !5216

if.then.i1421:                                    ; preds = %if.end201
  store i32 0, i32* %dsize.i1418, align 4, !dbg !5217
  br label %for.cond.i1423, !dbg !5218

for.cond.i1423:                                   ; preds = %for.body.i1426, %if.then.i1421
  %354 = load i32, i32* %dsize.i1418, align 4, !dbg !5219
  %355 = load i32, i32* %size.addr.i1416, align 4, !dbg !5220
  %cmp1.i1422 = icmp slt i32 %354, %355, !dbg !5221
  br i1 %cmp1.i1422, label %for.body.i1426, label %for.end.i1428, !dbg !5222

for.body.i1426:                                   ; preds = %for.cond.i1423
  %356 = load i8*, i8** %src.addr.i1415, align 8, !dbg !5223
  %incdec.ptr.i1424 = getelementptr inbounds i8, i8* %356, i32 1, !dbg !5223
  store i8* %incdec.ptr.i1424, i8** %src.addr.i1415, align 8, !dbg !5223
  %357 = load i8, i8* %356, align 1, !dbg !5224
  %358 = load i8*, i8** %dst.addr.i1417, align 8, !dbg !5225
  %incdec.ptr2.i1425 = getelementptr inbounds i8, i8* %358, i32 1, !dbg !5225
  store i8* %incdec.ptr2.i1425, i8** %dst.addr.i1417, align 8, !dbg !5225
  store i8 %357, i8* %358, align 1, !dbg !5226
  %359 = load i32, i32* %dsize.i1418, align 4, !dbg !5227
  %inc.i1427 = add nsw i32 %359, 1, !dbg !5227
  store i32 %inc.i1427, i32* %dsize.i1418, align 4, !dbg !5227
  br label %for.cond.i1423, !dbg !5228, !llvm.loop !3967

for.end.i1428:                                    ; preds = %for.cond.i1423
  %360 = load i32, i32* %size.addr.i1416, align 4, !dbg !5229
  store i32 %360, i32* %retval.i1414, align 4, !dbg !5230
  br label %vc1_unescape_buffer.exit1465, !dbg !5230

if.end.i1429:                                     ; preds = %if.end201
  store i32 0, i32* %i.i1419, align 4, !dbg !5231
  br label %for.cond3.i1431, !dbg !5232

for.cond3.i1431:                                  ; preds = %if.end32.i1461, %if.end.i1429
  %361 = load i32, i32* %i.i1419, align 4, !dbg !5233
  %362 = load i32, i32* %size.addr.i1416, align 4, !dbg !5234
  %cmp4.i1430 = icmp slt i32 %361, %362, !dbg !5235
  br i1 %cmp4.i1430, label %for.body5.i1434, label %for.end36.i1464, !dbg !5236

for.body5.i1434:                                  ; preds = %for.cond3.i1431
  %363 = load i8*, i8** %src.addr.i1415, align 8, !dbg !5237
  %364 = load i8, i8* %363, align 1, !dbg !5237
  %conv.i1432 = zext i8 %364 to i32, !dbg !5237
  %cmp6.i1433 = icmp eq i32 %conv.i1432, 3, !dbg !5238
  br i1 %cmp6.i1433, label %land.lhs.true.i1436, label %if.else.i1460, !dbg !5239

land.lhs.true.i1436:                              ; preds = %for.body5.i1434
  %365 = load i32, i32* %i.i1419, align 4, !dbg !5240
  %cmp8.i1435 = icmp sge i32 %365, 2, !dbg !5241
  br i1 %cmp8.i1435, label %land.lhs.true10.i1439, label %if.else.i1460, !dbg !5242

land.lhs.true10.i1439:                            ; preds = %land.lhs.true.i1436
  %366 = load i8*, i8** %src.addr.i1415, align 8, !dbg !5243
  %arrayidx11.i1437 = getelementptr inbounds i8, i8* %366, i64 -1, !dbg !5243
  %367 = load i8, i8* %arrayidx11.i1437, align 1, !dbg !5243
  %tobool.i1438 = icmp ne i8 %367, 0, !dbg !5243
  br i1 %tobool.i1438, label %if.else.i1460, label %land.lhs.true12.i1442, !dbg !5244

land.lhs.true12.i1442:                            ; preds = %land.lhs.true10.i1439
  %368 = load i8*, i8** %src.addr.i1415, align 8, !dbg !5245
  %arrayidx13.i1440 = getelementptr inbounds i8, i8* %368, i64 -2, !dbg !5245
  %369 = load i8, i8* %arrayidx13.i1440, align 1, !dbg !5245
  %tobool14.i1441 = icmp ne i8 %369, 0, !dbg !5245
  br i1 %tobool14.i1441, label %if.else.i1460, label %land.lhs.true15.i1445, !dbg !5246

land.lhs.true15.i1445:                            ; preds = %land.lhs.true12.i1442
  %370 = load i32, i32* %i.i1419, align 4, !dbg !5247
  %371 = load i32, i32* %size.addr.i1416, align 4, !dbg !5248
  %sub.i1443 = sub nsw i32 %371, 1, !dbg !5249
  %cmp16.i1444 = icmp slt i32 %370, %sub.i1443, !dbg !5250
  br i1 %cmp16.i1444, label %land.lhs.true18.i1449, label %if.else.i1460, !dbg !5251

land.lhs.true18.i1449:                            ; preds = %land.lhs.true15.i1445
  %372 = load i8*, i8** %src.addr.i1415, align 8, !dbg !5252
  %arrayidx19.i1446 = getelementptr inbounds i8, i8* %372, i64 1, !dbg !5252
  %373 = load i8, i8* %arrayidx19.i1446, align 1, !dbg !5252
  %conv20.i1447 = zext i8 %373 to i32, !dbg !5252
  %cmp21.i1448 = icmp slt i32 %conv20.i1447, 4, !dbg !5253
  br i1 %cmp21.i1448, label %if.then23.i1456, label %if.else.i1460, !dbg !5254

if.then23.i1456:                                  ; preds = %land.lhs.true18.i1449
  %374 = load i8*, i8** %src.addr.i1415, align 8, !dbg !5255
  %arrayidx24.i1450 = getelementptr inbounds i8, i8* %374, i64 1, !dbg !5255
  %375 = load i8, i8* %arrayidx24.i1450, align 1, !dbg !5255
  %376 = load i32, i32* %dsize.i1418, align 4, !dbg !5256
  %inc25.i1451 = add nsw i32 %376, 1, !dbg !5256
  store i32 %inc25.i1451, i32* %dsize.i1418, align 4, !dbg !5256
  %idxprom.i1452 = sext i32 %376 to i64, !dbg !5257
  %377 = load i8*, i8** %dst.addr.i1417, align 8, !dbg !5257
  %arrayidx26.i1453 = getelementptr inbounds i8, i8* %377, i64 %idxprom.i1452, !dbg !5257
  store i8 %375, i8* %arrayidx26.i1453, align 1, !dbg !5258
  %378 = load i8*, i8** %src.addr.i1415, align 8, !dbg !5259
  %incdec.ptr27.i1454 = getelementptr inbounds i8, i8* %378, i32 1, !dbg !5259
  store i8* %incdec.ptr27.i1454, i8** %src.addr.i1415, align 8, !dbg !5259
  %379 = load i32, i32* %i.i1419, align 4, !dbg !5260
  %inc28.i1455 = add nsw i32 %379, 1, !dbg !5260
  store i32 %inc28.i1455, i32* %i.i1419, align 4, !dbg !5260
  br label %if.end32.i1461, !dbg !5261

if.else.i1460:                                    ; preds = %land.lhs.true18.i1449, %land.lhs.true15.i1445, %land.lhs.true12.i1442, %land.lhs.true10.i1439, %land.lhs.true.i1436, %for.body5.i1434
  %380 = load i8*, i8** %src.addr.i1415, align 8, !dbg !5262
  %381 = load i8, i8* %380, align 1, !dbg !5263
  %382 = load i32, i32* %dsize.i1418, align 4, !dbg !5264
  %inc29.i1457 = add nsw i32 %382, 1, !dbg !5264
  store i32 %inc29.i1457, i32* %dsize.i1418, align 4, !dbg !5264
  %idxprom30.i1458 = sext i32 %382 to i64, !dbg !5265
  %383 = load i8*, i8** %dst.addr.i1417, align 8, !dbg !5265
  %arrayidx31.i1459 = getelementptr inbounds i8, i8* %383, i64 %idxprom30.i1458, !dbg !5265
  store i8 %381, i8* %arrayidx31.i1459, align 1, !dbg !5266
  br label %if.end32.i1461, !dbg !5213

if.end32.i1461:                                   ; preds = %if.else.i1460, %if.then23.i1456
  %384 = load i32, i32* %i.i1419, align 4, !dbg !5267
  %inc34.i1462 = add nsw i32 %384, 1, !dbg !5267
  store i32 %inc34.i1462, i32* %i.i1419, align 4, !dbg !5267
  %385 = load i8*, i8** %src.addr.i1415, align 8, !dbg !5268
  %incdec.ptr35.i1463 = getelementptr inbounds i8, i8* %385, i32 1, !dbg !5268
  store i8* %incdec.ptr35.i1463, i8** %src.addr.i1415, align 8, !dbg !5268
  br label %for.cond3.i1431, !dbg !5269, !llvm.loop !4022

for.end36.i1464:                                  ; preds = %for.cond3.i1431
  %386 = load i32, i32* %dsize.i1418, align 4, !dbg !5270
  store i32 %386, i32* %retval.i1414, align 4, !dbg !5271
  br label %vc1_unescape_buffer.exit1465, !dbg !5271

vc1_unescape_buffer.exit1465:                     ; preds = %for.end.i1428, %for.end36.i1464
  %387 = load i32, i32* %retval.i1414, align 4, !dbg !5272
  store i32 %387, i32* %buf_size3165, align 4, !dbg !5273
  %388 = load i32, i32* %n_slices, align 4, !dbg !5274
  %idxprom214 = sext i32 %388 to i64, !dbg !5275
  %389 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5275
  %arrayidx215 = getelementptr inbounds %struct.anon, %struct.anon* %389, i64 %idxprom214, !dbg !5275
  %gb216 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx215, i32 0, i32 1, !dbg !5276
  %390 = load i32, i32* %n_slices, align 4, !dbg !5277
  %idxprom217 = sext i32 %390 to i64, !dbg !5278
  %391 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5278
  %arrayidx218 = getelementptr inbounds %struct.anon, %struct.anon* %391, i64 %idxprom217, !dbg !5278
  %buf219 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx218, i32 0, i32 0, !dbg !5279
  %392 = load i8*, i8** %buf219, align 8, !dbg !5279
  %393 = load i32, i32* %buf_size3165, align 4, !dbg !5280
  %shl220 = shl i32 %393, 3, !dbg !5281
  %call221 = call i32 @init_get_bits(%struct.GetBitContext* %gb216, i8* %392, i32 %shl220), !dbg !5282
  %394 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5283
  %mb_height222 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %394, i32 0, i32 36, !dbg !5284
  %395 = load i32, i32* %mb_height222, align 8, !dbg !5284
  %add223 = add nsw i32 %395, 1, !dbg !5285
  %shr224 = ashr i32 %add223, 1, !dbg !5286
  %396 = load i32, i32* %n_slices, align 4, !dbg !5287
  %idxprom225 = sext i32 %396 to i64, !dbg !5288
  %397 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5288
  %arrayidx226 = getelementptr inbounds %struct.anon, %struct.anon* %397, i64 %idxprom225, !dbg !5288
  %mby_start227 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx226, i32 0, i32 2, !dbg !5289
  store i32 %shr224, i32* %mby_start227, align 8, !dbg !5290
  %398 = load i8*, i8** %divider, align 8, !dbg !5291
  %399 = load i32, i32* %n_slices, align 4, !dbg !5292
  %idxprom228 = sext i32 %399 to i64, !dbg !5293
  %400 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5293
  %arrayidx229 = getelementptr inbounds %struct.anon, %struct.anon* %400, i64 %idxprom228, !dbg !5293
  %rawbuf230 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx229, i32 0, i32 3, !dbg !5294
  store i8* %398, i8** %rawbuf230, align 8, !dbg !5295
  %401 = load i8*, i8** %buf, align 8, !dbg !5296
  %402 = load i32, i32* %buf_size, align 4, !dbg !5297
  %idx.ext231 = sext i32 %402 to i64, !dbg !5298
  %add.ptr232 = getelementptr inbounds i8, i8* %401, i64 %idx.ext231, !dbg !5298
  %403 = load i8*, i8** %divider, align 8, !dbg !5299
  %sub.ptr.lhs.cast233 = ptrtoint i8* %add.ptr232 to i64, !dbg !5300
  %sub.ptr.rhs.cast234 = ptrtoint i8* %403 to i64, !dbg !5300
  %sub.ptr.sub235 = sub i64 %sub.ptr.lhs.cast233, %sub.ptr.rhs.cast234, !dbg !5300
  %conv236 = trunc i64 %sub.ptr.sub235 to i32, !dbg !5296
  %404 = load i32, i32* %n_slices, align 4, !dbg !5301
  %idxprom237 = sext i32 %404 to i64, !dbg !5302
  %405 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5302
  %arrayidx238 = getelementptr inbounds %struct.anon, %struct.anon* %405, i64 %idxprom237, !dbg !5302
  %raw_size239 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx238, i32 0, i32 4, !dbg !5303
  store i32 %conv236, i32* %raw_size239, align 8, !dbg !5304
  %406 = load i32, i32* %n_slices, align 4, !dbg !5305
  %sub240 = sub nsw i32 %406, 1, !dbg !5306
  store i32 %sub240, i32* %n_slices1, align 4, !dbg !5307
  %407 = load i32, i32* %n_slices, align 4, !dbg !5308
  %inc241 = add nsw i32 %407, 1, !dbg !5308
  store i32 %inc241, i32* %n_slices, align 4, !dbg !5308
  br label %if.end242

if.end242:                                        ; preds = %vc1_unescape_buffer.exit1465
  %408 = load i8*, i8** %buf, align 8, !dbg !5309
  %409 = load i8*, i8** %divider, align 8, !dbg !5310
  %410 = load i8*, i8** %buf, align 8, !dbg !5311
  %sub.ptr.lhs.cast243 = ptrtoint i8* %409 to i64, !dbg !5312
  %sub.ptr.rhs.cast244 = ptrtoint i8* %410 to i64, !dbg !5312
  %sub.ptr.sub245 = sub i64 %sub.ptr.lhs.cast243, %sub.ptr.rhs.cast244, !dbg !5312
  %conv246 = trunc i64 %sub.ptr.sub245 to i32, !dbg !5310
  %411 = load i8*, i8** %buf2, align 8, !dbg !5313
  store i8* %408, i8** %src.addr.i1467, align 8, !dbg !5314
  store i32 %conv246, i32* %size.addr.i1468, align 4, !dbg !5314
  store i8* %411, i8** %dst.addr.i1469, align 8, !dbg !5314
  store i32 0, i32* %dsize.i1470, align 4, !dbg !4358
  %412 = load i32, i32* %size.addr.i1468, align 4, !dbg !5315
  %cmp.i1472 = icmp slt i32 %412, 4, !dbg !5316
  br i1 %cmp.i1472, label %if.then.i1473, label %if.end.i1481, !dbg !5317

if.then.i1473:                                    ; preds = %if.end242
  store i32 0, i32* %dsize.i1470, align 4, !dbg !5318
  br label %for.cond.i1475, !dbg !5319

for.cond.i1475:                                   ; preds = %for.body.i1478, %if.then.i1473
  %413 = load i32, i32* %dsize.i1470, align 4, !dbg !5320
  %414 = load i32, i32* %size.addr.i1468, align 4, !dbg !5321
  %cmp1.i1474 = icmp slt i32 %413, %414, !dbg !5322
  br i1 %cmp1.i1474, label %for.body.i1478, label %for.end.i1480, !dbg !5323

for.body.i1478:                                   ; preds = %for.cond.i1475
  %415 = load i8*, i8** %src.addr.i1467, align 8, !dbg !5324
  %incdec.ptr.i1476 = getelementptr inbounds i8, i8* %415, i32 1, !dbg !5324
  store i8* %incdec.ptr.i1476, i8** %src.addr.i1467, align 8, !dbg !5324
  %416 = load i8, i8* %415, align 1, !dbg !5325
  %417 = load i8*, i8** %dst.addr.i1469, align 8, !dbg !5326
  %incdec.ptr2.i1477 = getelementptr inbounds i8, i8* %417, i32 1, !dbg !5326
  store i8* %incdec.ptr2.i1477, i8** %dst.addr.i1469, align 8, !dbg !5326
  store i8 %416, i8* %417, align 1, !dbg !5327
  %418 = load i32, i32* %dsize.i1470, align 4, !dbg !5328
  %inc.i1479 = add nsw i32 %418, 1, !dbg !5328
  store i32 %inc.i1479, i32* %dsize.i1470, align 4, !dbg !5328
  br label %for.cond.i1475, !dbg !5329, !llvm.loop !3967

for.end.i1480:                                    ; preds = %for.cond.i1475
  %419 = load i32, i32* %size.addr.i1468, align 4, !dbg !5330
  store i32 %419, i32* %retval.i1466, align 4, !dbg !5331
  br label %vc1_unescape_buffer.exit1517, !dbg !5331

if.end.i1481:                                     ; preds = %if.end242
  store i32 0, i32* %i.i1471, align 4, !dbg !5332
  br label %for.cond3.i1483, !dbg !5333

for.cond3.i1483:                                  ; preds = %if.end32.i1513, %if.end.i1481
  %420 = load i32, i32* %i.i1471, align 4, !dbg !5334
  %421 = load i32, i32* %size.addr.i1468, align 4, !dbg !5335
  %cmp4.i1482 = icmp slt i32 %420, %421, !dbg !5336
  br i1 %cmp4.i1482, label %for.body5.i1486, label %for.end36.i1516, !dbg !5337

for.body5.i1486:                                  ; preds = %for.cond3.i1483
  %422 = load i8*, i8** %src.addr.i1467, align 8, !dbg !5338
  %423 = load i8, i8* %422, align 1, !dbg !5338
  %conv.i1484 = zext i8 %423 to i32, !dbg !5338
  %cmp6.i1485 = icmp eq i32 %conv.i1484, 3, !dbg !5339
  br i1 %cmp6.i1485, label %land.lhs.true.i1488, label %if.else.i1512, !dbg !5340

land.lhs.true.i1488:                              ; preds = %for.body5.i1486
  %424 = load i32, i32* %i.i1471, align 4, !dbg !5341
  %cmp8.i1487 = icmp sge i32 %424, 2, !dbg !5342
  br i1 %cmp8.i1487, label %land.lhs.true10.i1491, label %if.else.i1512, !dbg !5343

land.lhs.true10.i1491:                            ; preds = %land.lhs.true.i1488
  %425 = load i8*, i8** %src.addr.i1467, align 8, !dbg !5344
  %arrayidx11.i1489 = getelementptr inbounds i8, i8* %425, i64 -1, !dbg !5344
  %426 = load i8, i8* %arrayidx11.i1489, align 1, !dbg !5344
  %tobool.i1490 = icmp ne i8 %426, 0, !dbg !5344
  br i1 %tobool.i1490, label %if.else.i1512, label %land.lhs.true12.i1494, !dbg !5345

land.lhs.true12.i1494:                            ; preds = %land.lhs.true10.i1491
  %427 = load i8*, i8** %src.addr.i1467, align 8, !dbg !5346
  %arrayidx13.i1492 = getelementptr inbounds i8, i8* %427, i64 -2, !dbg !5346
  %428 = load i8, i8* %arrayidx13.i1492, align 1, !dbg !5346
  %tobool14.i1493 = icmp ne i8 %428, 0, !dbg !5346
  br i1 %tobool14.i1493, label %if.else.i1512, label %land.lhs.true15.i1497, !dbg !5347

land.lhs.true15.i1497:                            ; preds = %land.lhs.true12.i1494
  %429 = load i32, i32* %i.i1471, align 4, !dbg !5348
  %430 = load i32, i32* %size.addr.i1468, align 4, !dbg !5349
  %sub.i1495 = sub nsw i32 %430, 1, !dbg !5350
  %cmp16.i1496 = icmp slt i32 %429, %sub.i1495, !dbg !5351
  br i1 %cmp16.i1496, label %land.lhs.true18.i1501, label %if.else.i1512, !dbg !5352

land.lhs.true18.i1501:                            ; preds = %land.lhs.true15.i1497
  %431 = load i8*, i8** %src.addr.i1467, align 8, !dbg !5353
  %arrayidx19.i1498 = getelementptr inbounds i8, i8* %431, i64 1, !dbg !5353
  %432 = load i8, i8* %arrayidx19.i1498, align 1, !dbg !5353
  %conv20.i1499 = zext i8 %432 to i32, !dbg !5353
  %cmp21.i1500 = icmp slt i32 %conv20.i1499, 4, !dbg !5354
  br i1 %cmp21.i1500, label %if.then23.i1508, label %if.else.i1512, !dbg !5355

if.then23.i1508:                                  ; preds = %land.lhs.true18.i1501
  %433 = load i8*, i8** %src.addr.i1467, align 8, !dbg !5356
  %arrayidx24.i1502 = getelementptr inbounds i8, i8* %433, i64 1, !dbg !5356
  %434 = load i8, i8* %arrayidx24.i1502, align 1, !dbg !5356
  %435 = load i32, i32* %dsize.i1470, align 4, !dbg !5357
  %inc25.i1503 = add nsw i32 %435, 1, !dbg !5357
  store i32 %inc25.i1503, i32* %dsize.i1470, align 4, !dbg !5357
  %idxprom.i1504 = sext i32 %435 to i64, !dbg !5358
  %436 = load i8*, i8** %dst.addr.i1469, align 8, !dbg !5358
  %arrayidx26.i1505 = getelementptr inbounds i8, i8* %436, i64 %idxprom.i1504, !dbg !5358
  store i8 %434, i8* %arrayidx26.i1505, align 1, !dbg !5359
  %437 = load i8*, i8** %src.addr.i1467, align 8, !dbg !5360
  %incdec.ptr27.i1506 = getelementptr inbounds i8, i8* %437, i32 1, !dbg !5360
  store i8* %incdec.ptr27.i1506, i8** %src.addr.i1467, align 8, !dbg !5360
  %438 = load i32, i32* %i.i1471, align 4, !dbg !5361
  %inc28.i1507 = add nsw i32 %438, 1, !dbg !5361
  store i32 %inc28.i1507, i32* %i.i1471, align 4, !dbg !5361
  br label %if.end32.i1513, !dbg !5362

if.else.i1512:                                    ; preds = %land.lhs.true18.i1501, %land.lhs.true15.i1497, %land.lhs.true12.i1494, %land.lhs.true10.i1491, %land.lhs.true.i1488, %for.body5.i1486
  %439 = load i8*, i8** %src.addr.i1467, align 8, !dbg !5363
  %440 = load i8, i8* %439, align 1, !dbg !5364
  %441 = load i32, i32* %dsize.i1470, align 4, !dbg !5365
  %inc29.i1509 = add nsw i32 %441, 1, !dbg !5365
  store i32 %inc29.i1509, i32* %dsize.i1470, align 4, !dbg !5365
  %idxprom30.i1510 = sext i32 %441 to i64, !dbg !5366
  %442 = load i8*, i8** %dst.addr.i1469, align 8, !dbg !5366
  %arrayidx31.i1511 = getelementptr inbounds i8, i8* %442, i64 %idxprom30.i1510, !dbg !5366
  store i8 %440, i8* %arrayidx31.i1511, align 1, !dbg !5367
  br label %if.end32.i1513, !dbg !5314

if.end32.i1513:                                   ; preds = %if.else.i1512, %if.then23.i1508
  %443 = load i32, i32* %i.i1471, align 4, !dbg !5368
  %inc34.i1514 = add nsw i32 %443, 1, !dbg !5368
  store i32 %inc34.i1514, i32* %i.i1471, align 4, !dbg !5368
  %444 = load i8*, i8** %src.addr.i1467, align 8, !dbg !5369
  %incdec.ptr35.i1515 = getelementptr inbounds i8, i8* %444, i32 1, !dbg !5369
  store i8* %incdec.ptr35.i1515, i8** %src.addr.i1467, align 8, !dbg !5369
  br label %for.cond3.i1483, !dbg !5370, !llvm.loop !4022

for.end36.i1516:                                  ; preds = %for.cond3.i1483
  %445 = load i32, i32* %dsize.i1470, align 4, !dbg !5371
  store i32 %445, i32* %retval.i1466, align 4, !dbg !5372
  br label %vc1_unescape_buffer.exit1517, !dbg !5372

vc1_unescape_buffer.exit1517:                     ; preds = %for.end.i1480, %for.end36.i1516
  %446 = load i32, i32* %retval.i1466, align 4, !dbg !5373
  store i32 %446, i32* %buf_size2, align 4, !dbg !5374
  br label %if.end250, !dbg !5375

if.else248:                                       ; preds = %land.lhs.true156, %if.else
  %447 = load i8*, i8** %buf, align 8, !dbg !5376
  %448 = load i32, i32* %buf_size, align 4, !dbg !5377
  %449 = load i8*, i8** %buf2, align 8, !dbg !5378
  store i8* %447, i8** %src.addr.i1519, align 8, !dbg !5379
  store i32 %448, i32* %size.addr.i1520, align 4, !dbg !5379
  store i8* %449, i8** %dst.addr.i1521, align 8, !dbg !5379
  store i32 0, i32* %dsize.i1522, align 4, !dbg !4351
  %450 = load i32, i32* %size.addr.i1520, align 4, !dbg !5380
  %cmp.i1524 = icmp slt i32 %450, 4, !dbg !5381
  br i1 %cmp.i1524, label %if.then.i1525, label %if.end.i1533, !dbg !5382

if.then.i1525:                                    ; preds = %if.else248
  store i32 0, i32* %dsize.i1522, align 4, !dbg !5383
  br label %for.cond.i1527, !dbg !5384

for.cond.i1527:                                   ; preds = %for.body.i1530, %if.then.i1525
  %451 = load i32, i32* %dsize.i1522, align 4, !dbg !5385
  %452 = load i32, i32* %size.addr.i1520, align 4, !dbg !5386
  %cmp1.i1526 = icmp slt i32 %451, %452, !dbg !5387
  br i1 %cmp1.i1526, label %for.body.i1530, label %for.end.i1532, !dbg !5388

for.body.i1530:                                   ; preds = %for.cond.i1527
  %453 = load i8*, i8** %src.addr.i1519, align 8, !dbg !5389
  %incdec.ptr.i1528 = getelementptr inbounds i8, i8* %453, i32 1, !dbg !5389
  store i8* %incdec.ptr.i1528, i8** %src.addr.i1519, align 8, !dbg !5389
  %454 = load i8, i8* %453, align 1, !dbg !5390
  %455 = load i8*, i8** %dst.addr.i1521, align 8, !dbg !5391
  %incdec.ptr2.i1529 = getelementptr inbounds i8, i8* %455, i32 1, !dbg !5391
  store i8* %incdec.ptr2.i1529, i8** %dst.addr.i1521, align 8, !dbg !5391
  store i8 %454, i8* %455, align 1, !dbg !5392
  %456 = load i32, i32* %dsize.i1522, align 4, !dbg !5393
  %inc.i1531 = add nsw i32 %456, 1, !dbg !5393
  store i32 %inc.i1531, i32* %dsize.i1522, align 4, !dbg !5393
  br label %for.cond.i1527, !dbg !5394, !llvm.loop !3967

for.end.i1532:                                    ; preds = %for.cond.i1527
  %457 = load i32, i32* %size.addr.i1520, align 4, !dbg !5395
  store i32 %457, i32* %retval.i1518, align 4, !dbg !5396
  br label %vc1_unescape_buffer.exit1569, !dbg !5396

if.end.i1533:                                     ; preds = %if.else248
  store i32 0, i32* %i.i1523, align 4, !dbg !5397
  br label %for.cond3.i1535, !dbg !5398

for.cond3.i1535:                                  ; preds = %if.end32.i1565, %if.end.i1533
  %458 = load i32, i32* %i.i1523, align 4, !dbg !5399
  %459 = load i32, i32* %size.addr.i1520, align 4, !dbg !5400
  %cmp4.i1534 = icmp slt i32 %458, %459, !dbg !5401
  br i1 %cmp4.i1534, label %for.body5.i1538, label %for.end36.i1568, !dbg !5402

for.body5.i1538:                                  ; preds = %for.cond3.i1535
  %460 = load i8*, i8** %src.addr.i1519, align 8, !dbg !5403
  %461 = load i8, i8* %460, align 1, !dbg !5403
  %conv.i1536 = zext i8 %461 to i32, !dbg !5403
  %cmp6.i1537 = icmp eq i32 %conv.i1536, 3, !dbg !5404
  br i1 %cmp6.i1537, label %land.lhs.true.i1540, label %if.else.i1564, !dbg !5405

land.lhs.true.i1540:                              ; preds = %for.body5.i1538
  %462 = load i32, i32* %i.i1523, align 4, !dbg !5406
  %cmp8.i1539 = icmp sge i32 %462, 2, !dbg !5407
  br i1 %cmp8.i1539, label %land.lhs.true10.i1543, label %if.else.i1564, !dbg !5408

land.lhs.true10.i1543:                            ; preds = %land.lhs.true.i1540
  %463 = load i8*, i8** %src.addr.i1519, align 8, !dbg !5409
  %arrayidx11.i1541 = getelementptr inbounds i8, i8* %463, i64 -1, !dbg !5409
  %464 = load i8, i8* %arrayidx11.i1541, align 1, !dbg !5409
  %tobool.i1542 = icmp ne i8 %464, 0, !dbg !5409
  br i1 %tobool.i1542, label %if.else.i1564, label %land.lhs.true12.i1546, !dbg !5410

land.lhs.true12.i1546:                            ; preds = %land.lhs.true10.i1543
  %465 = load i8*, i8** %src.addr.i1519, align 8, !dbg !5411
  %arrayidx13.i1544 = getelementptr inbounds i8, i8* %465, i64 -2, !dbg !5411
  %466 = load i8, i8* %arrayidx13.i1544, align 1, !dbg !5411
  %tobool14.i1545 = icmp ne i8 %466, 0, !dbg !5411
  br i1 %tobool14.i1545, label %if.else.i1564, label %land.lhs.true15.i1549, !dbg !5412

land.lhs.true15.i1549:                            ; preds = %land.lhs.true12.i1546
  %467 = load i32, i32* %i.i1523, align 4, !dbg !5413
  %468 = load i32, i32* %size.addr.i1520, align 4, !dbg !5414
  %sub.i1547 = sub nsw i32 %468, 1, !dbg !5415
  %cmp16.i1548 = icmp slt i32 %467, %sub.i1547, !dbg !5416
  br i1 %cmp16.i1548, label %land.lhs.true18.i1553, label %if.else.i1564, !dbg !5417

land.lhs.true18.i1553:                            ; preds = %land.lhs.true15.i1549
  %469 = load i8*, i8** %src.addr.i1519, align 8, !dbg !5418
  %arrayidx19.i1550 = getelementptr inbounds i8, i8* %469, i64 1, !dbg !5418
  %470 = load i8, i8* %arrayidx19.i1550, align 1, !dbg !5418
  %conv20.i1551 = zext i8 %470 to i32, !dbg !5418
  %cmp21.i1552 = icmp slt i32 %conv20.i1551, 4, !dbg !5419
  br i1 %cmp21.i1552, label %if.then23.i1560, label %if.else.i1564, !dbg !5420

if.then23.i1560:                                  ; preds = %land.lhs.true18.i1553
  %471 = load i8*, i8** %src.addr.i1519, align 8, !dbg !5421
  %arrayidx24.i1554 = getelementptr inbounds i8, i8* %471, i64 1, !dbg !5421
  %472 = load i8, i8* %arrayidx24.i1554, align 1, !dbg !5421
  %473 = load i32, i32* %dsize.i1522, align 4, !dbg !5422
  %inc25.i1555 = add nsw i32 %473, 1, !dbg !5422
  store i32 %inc25.i1555, i32* %dsize.i1522, align 4, !dbg !5422
  %idxprom.i1556 = sext i32 %473 to i64, !dbg !5423
  %474 = load i8*, i8** %dst.addr.i1521, align 8, !dbg !5423
  %arrayidx26.i1557 = getelementptr inbounds i8, i8* %474, i64 %idxprom.i1556, !dbg !5423
  store i8 %472, i8* %arrayidx26.i1557, align 1, !dbg !5424
  %475 = load i8*, i8** %src.addr.i1519, align 8, !dbg !5425
  %incdec.ptr27.i1558 = getelementptr inbounds i8, i8* %475, i32 1, !dbg !5425
  store i8* %incdec.ptr27.i1558, i8** %src.addr.i1519, align 8, !dbg !5425
  %476 = load i32, i32* %i.i1523, align 4, !dbg !5426
  %inc28.i1559 = add nsw i32 %476, 1, !dbg !5426
  store i32 %inc28.i1559, i32* %i.i1523, align 4, !dbg !5426
  br label %if.end32.i1565, !dbg !5427

if.else.i1564:                                    ; preds = %land.lhs.true18.i1553, %land.lhs.true15.i1549, %land.lhs.true12.i1546, %land.lhs.true10.i1543, %land.lhs.true.i1540, %for.body5.i1538
  %477 = load i8*, i8** %src.addr.i1519, align 8, !dbg !5428
  %478 = load i8, i8* %477, align 1, !dbg !5429
  %479 = load i32, i32* %dsize.i1522, align 4, !dbg !5430
  %inc29.i1561 = add nsw i32 %479, 1, !dbg !5430
  store i32 %inc29.i1561, i32* %dsize.i1522, align 4, !dbg !5430
  %idxprom30.i1562 = sext i32 %479 to i64, !dbg !5431
  %480 = load i8*, i8** %dst.addr.i1521, align 8, !dbg !5431
  %arrayidx31.i1563 = getelementptr inbounds i8, i8* %480, i64 %idxprom30.i1562, !dbg !5431
  store i8 %478, i8* %arrayidx31.i1563, align 1, !dbg !5432
  br label %if.end32.i1565, !dbg !5379

if.end32.i1565:                                   ; preds = %if.else.i1564, %if.then23.i1560
  %481 = load i32, i32* %i.i1523, align 4, !dbg !5433
  %inc34.i1566 = add nsw i32 %481, 1, !dbg !5433
  store i32 %inc34.i1566, i32* %i.i1523, align 4, !dbg !5433
  %482 = load i8*, i8** %src.addr.i1519, align 8, !dbg !5434
  %incdec.ptr35.i1567 = getelementptr inbounds i8, i8* %482, i32 1, !dbg !5434
  store i8* %incdec.ptr35.i1567, i8** %src.addr.i1519, align 8, !dbg !5434
  br label %for.cond3.i1535, !dbg !5435, !llvm.loop !4022

for.end36.i1568:                                  ; preds = %for.cond3.i1535
  %483 = load i32, i32* %dsize.i1522, align 4, !dbg !5436
  store i32 %483, i32* %retval.i1518, align 4, !dbg !5437
  br label %vc1_unescape_buffer.exit1569, !dbg !5437

vc1_unescape_buffer.exit1569:                     ; preds = %for.end.i1532, %for.end36.i1568
  %484 = load i32, i32* %retval.i1518, align 4, !dbg !5438
  store i32 %484, i32* %buf_size2, align 4, !dbg !5439
  br label %if.end250

if.end250:                                        ; preds = %vc1_unescape_buffer.exit1569, %vc1_unescape_buffer.exit1517
  br label %if.end251

if.end251:                                        ; preds = %if.end250, %for.end
  %485 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5440
  %gb252 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %485, i32 0, i32 266, !dbg !5441
  %486 = load i8*, i8** %buf2, align 8, !dbg !5442
  %487 = load i32, i32* %buf_size2, align 4, !dbg !5443
  %mul253 = mul nsw i32 %487, 8, !dbg !5444
  %call254 = call i32 @init_get_bits(%struct.GetBitContext* %gb252, i8* %486, i32 %mul253), !dbg !5445
  br label %if.end259, !dbg !5446

if.else255:                                       ; preds = %lor.lhs.false21
  %488 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5447
  %gb256 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %488, i32 0, i32 266, !dbg !5448
  %489 = load i8*, i8** %buf, align 8, !dbg !5449
  %490 = load i32, i32* %buf_size, align 4, !dbg !5450
  %mul257 = mul nsw i32 %490, 8, !dbg !5451
  %call258 = call i32 @init_get_bits(%struct.GetBitContext* %gb256, i8* %489, i32 %mul257), !dbg !5452
  br label %if.end259

if.end259:                                        ; preds = %if.else255, %if.end251
  %491 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5453
  %res_sprite = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %491, i32 0, i32 5, !dbg !5455
  %492 = load i32, i32* %res_sprite, align 4, !dbg !5455
  %tobool260 = icmp ne i32 %492, 0, !dbg !5453
  br i1 %tobool260, label %if.then261, label %if.end282, !dbg !5456

if.then261:                                       ; preds = %if.end259
  %493 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5457
  %gb262 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %493, i32 0, i32 266, !dbg !5459
  %call263 = call i32 @get_bits1(%struct.GetBitContext* %gb262), !dbg !5460
  %tobool264 = icmp ne i32 %call263, 0, !dbg !5461
  %lnot = xor i1 %tobool264, true, !dbg !5461
  %lnot.ext = zext i1 %lnot to i32, !dbg !5461
  %494 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5462
  %new_sprite = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %494, i32 0, i32 172, !dbg !5463
  store i32 %lnot.ext, i32* %new_sprite, align 4, !dbg !5464
  %495 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5465
  %gb265 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %495, i32 0, i32 266, !dbg !5466
  %call266 = call i32 @get_bits1(%struct.GetBitContext* %gb265), !dbg !5467
  %496 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5468
  %two_sprites = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %496, i32 0, i32 173, !dbg !5469
  store i32 %call266, i32* %two_sprites, align 8, !dbg !5470
  %497 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5471
  %codec_id267 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %497, i32 0, i32 4, !dbg !5473
  %498 = load i32, i32* %codec_id267, align 8, !dbg !5473
  %cmp268 = icmp eq i32 %498, 150, !dbg !5474
  br i1 %cmp268, label %if.then274, label %lor.lhs.false270, !dbg !5475

lor.lhs.false270:                                 ; preds = %if.then261
  %499 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5476
  %codec_id271 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %499, i32 0, i32 4, !dbg !5478
  %500 = load i32, i32* %codec_id271, align 8, !dbg !5478
  %cmp272 = icmp eq i32 %500, 151, !dbg !5479
  br i1 %cmp272, label %if.then274, label %if.end281, !dbg !5480

if.then274:                                       ; preds = %lor.lhs.false270, %if.then261
  %501 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5481
  %new_sprite275 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %501, i32 0, i32 172, !dbg !5484
  %502 = load i32, i32* %new_sprite275, align 4, !dbg !5484
  %tobool276 = icmp ne i32 %502, 0, !dbg !5481
  br i1 %tobool276, label %if.then277, label %if.else279, !dbg !5485

if.then277:                                       ; preds = %if.then274
  %503 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5486
  %sprite_width = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %503, i32 0, i32 177, !dbg !5488
  %504 = load i32, i32* %sprite_width, align 8, !dbg !5488
  %505 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5489
  %coded_width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %505, i32 0, i32 22, !dbg !5490
  store i32 %504, i32* %coded_width, align 4, !dbg !5491
  %506 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5492
  %width = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %506, i32 0, i32 20, !dbg !5493
  store i32 %504, i32* %width, align 4, !dbg !5494
  %507 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5495
  %sprite_height = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %507, i32 0, i32 178, !dbg !5496
  %508 = load i32, i32* %sprite_height, align 4, !dbg !5496
  %509 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5497
  %coded_height278 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %509, i32 0, i32 23, !dbg !5498
  store i32 %508, i32* %coded_height278, align 8, !dbg !5499
  %510 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5500
  %height = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %510, i32 0, i32 21, !dbg !5501
  store i32 %508, i32* %height, align 8, !dbg !5502
  br label %if.end280, !dbg !5503

if.else279:                                       ; preds = %if.then274
  br label %image, !dbg !5504

if.end280:                                        ; preds = %if.then277
  br label %if.end281, !dbg !5506

if.end281:                                        ; preds = %if.end280, %lor.lhs.false270
  br label %if.end282, !dbg !5507

if.end282:                                        ; preds = %if.end281, %if.end259
  %511 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5508
  %context_initialized = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %511, i32 0, i32 30, !dbg !5510
  %512 = load i32, i32* %context_initialized, align 8, !dbg !5510
  %tobool283 = icmp ne i32 %512, 0, !dbg !5508
  br i1 %tobool283, label %land.lhs.true284, label %if.end296, !dbg !5511

land.lhs.true284:                                 ; preds = %if.end282
  %513 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5512
  %width285 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %513, i32 0, i32 11, !dbg !5513
  %514 = load i32, i32* %width285, align 8, !dbg !5513
  %515 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5514
  %coded_width286 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %515, i32 0, i32 22, !dbg !5515
  %516 = load i32, i32* %coded_width286, align 4, !dbg !5515
  %cmp287 = icmp ne i32 %514, %516, !dbg !5516
  br i1 %cmp287, label %if.then294, label %lor.lhs.false289, !dbg !5517

lor.lhs.false289:                                 ; preds = %land.lhs.true284
  %517 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5518
  %height290 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %517, i32 0, i32 12, !dbg !5519
  %518 = load i32, i32* %height290, align 4, !dbg !5519
  %519 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5520
  %coded_height291 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %519, i32 0, i32 23, !dbg !5521
  %520 = load i32, i32* %coded_height291, align 8, !dbg !5521
  %cmp292 = icmp ne i32 %518, %520, !dbg !5522
  br i1 %cmp292, label %if.then294, label %if.end296, !dbg !5523

if.then294:                                       ; preds = %lor.lhs.false289, %land.lhs.true284
  %521 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5525
  %call295 = call i32 @ff_vc1_decode_end(%struct.AVCodecContext* %521), !dbg !5527
  br label %if.end296, !dbg !5528

if.end296:                                        ; preds = %if.then294, %lor.lhs.false289, %if.end282
  %522 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5529
  %context_initialized297 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %522, i32 0, i32 30, !dbg !5531
  %523 = load i32, i32* %context_initialized297, align 8, !dbg !5531
  %tobool298 = icmp ne i32 %523, 0, !dbg !5529
  br i1 %tobool298, label %if.end329, label %if.then299, !dbg !5532

if.then299:                                       ; preds = %if.end296
  %524 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5533
  %call300 = call i32 @ff_msmpeg4_decode_init(%struct.AVCodecContext* %524), !dbg !5536
  store i32 %call300, i32* %ret, align 4, !dbg !5537
  %cmp301 = icmp slt i32 %call300, 0, !dbg !5538
  br i1 %cmp301, label %if.then303, label %if.end304, !dbg !5539

if.then303:                                       ; preds = %if.then299
  br label %err, !dbg !5540

if.end304:                                        ; preds = %if.then299
  %525 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5541
  %call305 = call i32 @ff_vc1_decode_init_alloc_tables(%struct.VC1Context* %525), !dbg !5543
  store i32 %call305, i32* %ret, align 4, !dbg !5544
  %cmp306 = icmp slt i32 %call305, 0, !dbg !5545
  br i1 %cmp306, label %if.then308, label %if.end309, !dbg !5546

if.then308:                                       ; preds = %if.end304
  %526 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5547
  call void @ff_mpv_common_end(%struct.MpegEncContext* %526), !dbg !5549
  br label %err, !dbg !5550

if.end309:                                        ; preds = %if.end304
  %527 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5551
  %has_b_frames = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %527, i32 0, i32 32, !dbg !5552
  %528 = load i32, i32* %has_b_frames, align 8, !dbg !5552
  %tobool310 = icmp ne i32 %528, 0, !dbg !5551
  br i1 %tobool310, label %lor.rhs, label %lor.end, !dbg !5553

lor.rhs:                                          ; preds = %if.end309
  %529 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5554
  %res_sprite311 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %529, i32 0, i32 5, !dbg !5556
  %530 = load i32, i32* %res_sprite311, align 4, !dbg !5556
  %tobool312 = icmp ne i32 %530, 0, !dbg !5557
  br label %lor.end, !dbg !5557

lor.end:                                          ; preds = %lor.rhs, %if.end309
  %531 = phi i1 [ true, %if.end309 ], [ %tobool312, %lor.rhs ]
  %lor.ext = zext i1 %531 to i32, !dbg !5558
  %532 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5560
  %low_delay313 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %532, i32 0, i32 235, !dbg !5561
  store i32 %lor.ext, i32* %low_delay313, align 8, !dbg !5562
  %533 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5563
  %profile = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %533, i32 0, i32 28, !dbg !5565
  %534 = load i32, i32* %profile, align 8, !dbg !5565
  %cmp314 = icmp eq i32 %534, 3, !dbg !5566
  br i1 %cmp314, label %if.then316, label %if.end328, !dbg !5567

if.then316:                                       ; preds = %lor.end
  %535 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5568
  %coded_width317 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %535, i32 0, i32 22, !dbg !5571
  %536 = load i32, i32* %coded_width317, align 4, !dbg !5571
  %cmp318 = icmp sle i32 %536, 1, !dbg !5572
  br i1 %cmp318, label %if.then324, label %lor.lhs.false320, !dbg !5573

lor.lhs.false320:                                 ; preds = %if.then316
  %537 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5574
  %coded_height321 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %537, i32 0, i32 23, !dbg !5576
  %538 = load i32, i32* %coded_height321, align 8, !dbg !5576
  %cmp322 = icmp sle i32 %538, 1, !dbg !5577
  br i1 %cmp322, label %if.then324, label %if.end325, !dbg !5578

if.then324:                                       ; preds = %lor.lhs.false320, %if.then316
  store i32 -1094995529, i32* %ret, align 4, !dbg !5579
  br label %err, !dbg !5581

if.end325:                                        ; preds = %lor.lhs.false320
  %539 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5582
  %coded_width326 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %539, i32 0, i32 22, !dbg !5583
  %540 = load i32, i32* %coded_width326, align 4, !dbg !5583
  %541 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5584
  %h_edge_pos = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %541, i32 0, i32 39, !dbg !5585
  store i32 %540, i32* %h_edge_pos, align 4, !dbg !5586
  %542 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5587
  %coded_height327 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %542, i32 0, i32 23, !dbg !5588
  %543 = load i32, i32* %coded_height327, align 8, !dbg !5588
  %544 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5589
  %v_edge_pos = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %544, i32 0, i32 40, !dbg !5590
  store i32 %543, i32* %v_edge_pos, align 8, !dbg !5591
  br label %if.end328, !dbg !5592

if.end328:                                        ; preds = %if.end325, %lor.end
  br label %if.end329, !dbg !5593

if.end329:                                        ; preds = %if.end328, %if.end296
  %545 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5594
  %pic_header_flag = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %545, i32 0, i32 166, !dbg !5595
  store i32 0, i32* %pic_header_flag, align 4, !dbg !5596
  %546 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5597
  %first_pic_header_flag = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %546, i32 0, i32 165, !dbg !5598
  store i32 1, i32* %first_pic_header_flag, align 8, !dbg !5599
  %547 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5600
  %profile330 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %547, i32 0, i32 28, !dbg !5602
  %548 = load i32, i32* %profile330, align 8, !dbg !5602
  %cmp331 = icmp slt i32 %548, 3, !dbg !5603
  br i1 %cmp331, label %if.then333, label %if.else340, !dbg !5604

if.then333:                                       ; preds = %if.end329
  %549 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5605
  %550 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5608
  %gb334 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %550, i32 0, i32 266, !dbg !5609
  %call335 = call i32 @ff_vc1_parse_frame_header(%struct.VC1Context* %549, %struct.GetBitContext* %gb334), !dbg !5610
  store i32 %call335, i32* %ret, align 4, !dbg !5611
  %cmp336 = icmp slt i32 %call335, 0, !dbg !5612
  br i1 %cmp336, label %if.then338, label %if.end339, !dbg !5613

if.then338:                                       ; preds = %if.then333
  br label %err, !dbg !5614

if.end339:                                        ; preds = %if.then333
  br label %if.end347, !dbg !5616

if.else340:                                       ; preds = %if.end329
  %551 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5617
  %552 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5620
  %gb341 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %552, i32 0, i32 266, !dbg !5621
  %call342 = call i32 @ff_vc1_parse_frame_header_adv(%struct.VC1Context* %551, %struct.GetBitContext* %gb341), !dbg !5622
  store i32 %call342, i32* %ret, align 4, !dbg !5623
  %cmp343 = icmp slt i32 %call342, 0, !dbg !5624
  br i1 %cmp343, label %if.then345, label %if.end346, !dbg !5625

if.then345:                                       ; preds = %if.else340
  br label %err, !dbg !5626

if.end346:                                        ; preds = %if.else340
  br label %if.end347

if.end347:                                        ; preds = %if.end346, %if.end339
  %553 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5628
  %first_pic_header_flag348 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %553, i32 0, i32 165, !dbg !5629
  store i32 0, i32* %first_pic_header_flag348, align 8, !dbg !5630
  %554 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5631
  %debug = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %554, i32 0, i32 134, !dbg !5633
  %555 = load i32, i32* %debug, align 4, !dbg !5633
  %and349 = and i32 %555, 1, !dbg !5634
  %tobool350 = icmp ne i32 %and349, 0, !dbg !5634
  br i1 %tobool350, label %if.then351, label %if.end356, !dbg !5635

if.then351:                                       ; preds = %if.end347
  %556 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5636
  %s352 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %556, i32 0, i32 0, !dbg !5637
  %avctx353 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s352, i32 0, i32 10, !dbg !5638
  %557 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx353, align 8, !dbg !5638
  %558 = bitcast %struct.AVCodecContext* %557 to i8*, !dbg !5636
  %559 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5639
  %pict_type = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %559, i32 0, i32 86, !dbg !5640
  %560 = load i32, i32* %pict_type, align 4, !dbg !5640
  %call354 = call signext i8 @av_get_picture_type_char(i32 %560), !dbg !5641
  %conv355 = sext i8 %call354 to i32, !dbg !5641
  call void (i8*, i32, i8*, ...) @av_log(i8* %558, i32 48, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i32 %conv355), !dbg !5642
  br label %if.end356, !dbg !5644

if.end356:                                        ; preds = %if.then351, %if.end347
  %561 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5645
  %codec_id357 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %561, i32 0, i32 4, !dbg !5647
  %562 = load i32, i32* %codec_id357, align 8, !dbg !5647
  %cmp358 = icmp eq i32 %562, 150, !dbg !5648
  br i1 %cmp358, label %land.lhs.true364, label %lor.lhs.false360, !dbg !5649

lor.lhs.false360:                                 ; preds = %if.end356
  %563 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5650
  %codec_id361 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %563, i32 0, i32 4, !dbg !5652
  %564 = load i32, i32* %codec_id361, align 8, !dbg !5652
  %cmp362 = icmp eq i32 %564, 151, !dbg !5653
  br i1 %cmp362, label %land.lhs.true364, label %if.end371, !dbg !5654

land.lhs.true364:                                 ; preds = %lor.lhs.false360, %if.end356
  %565 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5655
  %pict_type365 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %565, i32 0, i32 86, !dbg !5656
  %566 = load i32, i32* %pict_type365, align 4, !dbg !5656
  %cmp366 = icmp ne i32 %566, 1, !dbg !5657
  br i1 %cmp366, label %if.then368, label %if.end371, !dbg !5658

if.then368:                                       ; preds = %land.lhs.true364
  %567 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5660
  %s369 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %567, i32 0, i32 0, !dbg !5662
  %avctx370 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s369, i32 0, i32 10, !dbg !5663
  %568 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx370, align 8, !dbg !5663
  %569 = bitcast %struct.AVCodecContext* %568 to i8*, !dbg !5660
  call void (i8*, i32, i8*, ...) @av_log(i8* %569, i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i32 0, i32 0)), !dbg !5664
  store i32 -1094995529, i32* %ret, align 4, !dbg !5665
  br label %err, !dbg !5666

if.end371:                                        ; preds = %land.lhs.true364, %lor.lhs.false360
  %570 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5667
  %mb_height372 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %570, i32 0, i32 36, !dbg !5669
  %571 = load i32, i32* %mb_height372, align 8, !dbg !5669
  %572 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5670
  %field_mode = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %572, i32 0, i32 150, !dbg !5671
  %573 = load i32, i32* %field_mode, align 8, !dbg !5671
  %shr373 = ashr i32 %571, %573, !dbg !5672
  %cmp374 = icmp eq i32 %shr373, 0, !dbg !5673
  br i1 %cmp374, label %if.then376, label %if.end379, !dbg !5674

if.then376:                                       ; preds = %if.end371
  %574 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5675
  %s377 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %574, i32 0, i32 0, !dbg !5677
  %avctx378 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s377, i32 0, i32 10, !dbg !5678
  %575 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx378, align 8, !dbg !5678
  %576 = bitcast %struct.AVCodecContext* %575 to i8*, !dbg !5675
  call void (i8*, i32, i8*, ...) @av_log(i8* %576, i32 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i32 0, i32 0)), !dbg !5679
  store i32 -1094995529, i32* %ret, align 4, !dbg !5680
  br label %err, !dbg !5681

if.end379:                                        ; preds = %if.end371
  %577 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5682
  %pict_type380 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %577, i32 0, i32 86, !dbg !5683
  %578 = load i32, i32* %pict_type380, align 4, !dbg !5683
  %579 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5684
  %current_picture = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %579, i32 0, i32 58, !dbg !5685
  %f381 = getelementptr inbounds %struct.Picture, %struct.Picture* %current_picture, i32 0, i32 0, !dbg !5686
  %580 = load %struct.AVFrame*, %struct.AVFrame** %f381, align 8, !dbg !5686
  %pict_type382 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %580, i32 0, i32 8, !dbg !5687
  store i32 %578, i32* %pict_type382, align 4, !dbg !5688
  %581 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5689
  %pict_type383 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %581, i32 0, i32 86, !dbg !5690
  %582 = load i32, i32* %pict_type383, align 4, !dbg !5690
  %cmp384 = icmp eq i32 %582, 1, !dbg !5691
  %conv385 = zext i1 %cmp384 to i32, !dbg !5691
  %583 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5692
  %current_picture386 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %583, i32 0, i32 58, !dbg !5693
  %f387 = getelementptr inbounds %struct.Picture, %struct.Picture* %current_picture386, i32 0, i32 0, !dbg !5694
  %584 = load %struct.AVFrame*, %struct.AVFrame** %f387, align 8, !dbg !5694
  %key_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %584, i32 0, i32 7, !dbg !5695
  store i32 %conv385, i32* %key_frame, align 8, !dbg !5696
  %585 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5697
  %last_picture_ptr = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %585, i32 0, i32 59, !dbg !5699
  %586 = load %struct.Picture*, %struct.Picture** %last_picture_ptr, align 8, !dbg !5699
  %tobool388 = icmp ne %struct.Picture* %586, null, !dbg !5697
  br i1 %tobool388, label %if.end398, label %land.lhs.true389, !dbg !5700

land.lhs.true389:                                 ; preds = %if.end379
  %587 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5701
  %pict_type390 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %587, i32 0, i32 86, !dbg !5703
  %588 = load i32, i32* %pict_type390, align 4, !dbg !5703
  %cmp391 = icmp eq i32 %588, 3, !dbg !5704
  br i1 %cmp391, label %if.then395, label %lor.lhs.false393, !dbg !5705

lor.lhs.false393:                                 ; preds = %land.lhs.true389
  %589 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5706
  %droppable = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %589, i32 0, i32 90, !dbg !5708
  %590 = load i32, i32* %droppable, align 4, !dbg !5708
  %tobool394 = icmp ne i32 %590, 0, !dbg !5706
  br i1 %tobool394, label %if.then395, label %if.end398, !dbg !5709

if.then395:                                       ; preds = %lor.lhs.false393, %land.lhs.true389
  %591 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5710
  %s396 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %591, i32 0, i32 0, !dbg !5712
  %avctx397 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s396, i32 0, i32 10, !dbg !5713
  %592 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx397, align 8, !dbg !5713
  %593 = bitcast %struct.AVCodecContext* %592 to i8*, !dbg !5710
  call void (i8*, i32, i8*, ...) @av_log(i8* %593, i32 48, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.20, i32 0, i32 0)), !dbg !5714
  br label %end1168, !dbg !5715

if.end398:                                        ; preds = %lor.lhs.false393, %if.end379
  %594 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5716
  %skip_frame = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %594, i32 0, i32 157, !dbg !5718
  %595 = load i32, i32* %skip_frame, align 4, !dbg !5718
  %cmp399 = icmp sge i32 %595, 8, !dbg !5719
  br i1 %cmp399, label %land.lhs.true401, label %lor.lhs.false405, !dbg !5720

land.lhs.true401:                                 ; preds = %if.end398
  %596 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5721
  %pict_type402 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %596, i32 0, i32 86, !dbg !5723
  %597 = load i32, i32* %pict_type402, align 4, !dbg !5723
  %cmp403 = icmp eq i32 %597, 3, !dbg !5724
  br i1 %cmp403, label %if.then417, label %lor.lhs.false405, !dbg !5725

lor.lhs.false405:                                 ; preds = %land.lhs.true401, %if.end398
  %598 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5726
  %skip_frame406 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %598, i32 0, i32 157, !dbg !5727
  %599 = load i32, i32* %skip_frame406, align 4, !dbg !5727
  %cmp407 = icmp sge i32 %599, 32, !dbg !5728
  br i1 %cmp407, label %land.lhs.true409, label %lor.lhs.false413, !dbg !5729

land.lhs.true409:                                 ; preds = %lor.lhs.false405
  %600 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5730
  %pict_type410 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %600, i32 0, i32 86, !dbg !5731
  %601 = load i32, i32* %pict_type410, align 4, !dbg !5731
  %cmp411 = icmp ne i32 %601, 1, !dbg !5732
  br i1 %cmp411, label %if.then417, label %lor.lhs.false413, !dbg !5733

lor.lhs.false413:                                 ; preds = %land.lhs.true409, %lor.lhs.false405
  %602 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5734
  %skip_frame414 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %602, i32 0, i32 157, !dbg !5735
  %603 = load i32, i32* %skip_frame414, align 4, !dbg !5735
  %cmp415 = icmp sge i32 %603, 48, !dbg !5736
  br i1 %cmp415, label %if.then417, label %if.end418, !dbg !5737

if.then417:                                       ; preds = %lor.lhs.false413, %land.lhs.true409, %land.lhs.true401
  br label %end1168, !dbg !5738

if.end418:                                        ; preds = %lor.lhs.false413
  %604 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5740
  %next_p_frame_damaged = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %604, i32 0, i32 196, !dbg !5742
  %605 = load i32, i32* %next_p_frame_damaged, align 4, !dbg !5742
  %tobool419 = icmp ne i32 %605, 0, !dbg !5740
  br i1 %tobool419, label %if.then420, label %if.end428, !dbg !5743

if.then420:                                       ; preds = %if.end418
  %606 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5744
  %pict_type421 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %606, i32 0, i32 86, !dbg !5747
  %607 = load i32, i32* %pict_type421, align 4, !dbg !5747
  %cmp422 = icmp eq i32 %607, 3, !dbg !5748
  br i1 %cmp422, label %if.then424, label %if.else425, !dbg !5749

if.then424:                                       ; preds = %if.then420
  br label %end1168, !dbg !5750

if.else425:                                       ; preds = %if.then420
  %608 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5751
  %next_p_frame_damaged426 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %608, i32 0, i32 196, !dbg !5752
  store i32 0, i32* %next_p_frame_damaged426, align 4, !dbg !5753
  br label %if.end427

if.end427:                                        ; preds = %if.else425
  br label %if.end428, !dbg !5754

if.end428:                                        ; preds = %if.end427, %if.end418
  %609 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5755
  %610 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5757
  %call429 = call i32 @ff_mpv_frame_start(%struct.MpegEncContext* %609, %struct.AVCodecContext* %610), !dbg !5758
  store i32 %call429, i32* %ret, align 4, !dbg !5759
  %cmp430 = icmp slt i32 %call429, 0, !dbg !5760
  br i1 %cmp430, label %if.then432, label %if.end433, !dbg !5761

if.then432:                                       ; preds = %if.end428
  br label %err, !dbg !5762

if.end433:                                        ; preds = %if.end428
  %611 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5764
  %field_mode434 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %611, i32 0, i32 150, !dbg !5765
  %612 = load i32, i32* %field_mode434, align 8, !dbg !5765
  %613 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5766
  %s435 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %613, i32 0, i32 0, !dbg !5767
  %current_picture_ptr = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s435, i32 0, i32 61, !dbg !5768
  %614 = load %struct.Picture*, %struct.Picture** %current_picture_ptr, align 8, !dbg !5768
  %field_picture = getelementptr inbounds %struct.Picture, %struct.Picture* %614, i32 0, i32 22, !dbg !5769
  store i32 %612, i32* %field_picture, align 8, !dbg !5770
  %615 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5771
  %fcm = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %615, i32 0, i32 103, !dbg !5772
  %616 = load i32, i32* %fcm, align 4, !dbg !5772
  %cmp436 = icmp ne i32 %616, 0, !dbg !5773
  %conv437 = zext i1 %cmp436 to i32, !dbg !5773
  %617 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5774
  %s438 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %617, i32 0, i32 0, !dbg !5775
  %current_picture_ptr439 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s438, i32 0, i32 61, !dbg !5776
  %618 = load %struct.Picture*, %struct.Picture** %current_picture_ptr439, align 8, !dbg !5776
  %f440 = getelementptr inbounds %struct.Picture, %struct.Picture* %618, i32 0, i32 0, !dbg !5777
  %619 = load %struct.AVFrame*, %struct.AVFrame** %f440, align 8, !dbg !5777
  %interlaced_frame = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %619, i32 0, i32 19, !dbg !5778
  store i32 %conv437, i32* %interlaced_frame, align 4, !dbg !5779
  %620 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5780
  %tff = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %620, i32 0, i32 107, !dbg !5781
  %621 = load i8, i8* %tff, align 1, !dbg !5781
  %conv441 = zext i8 %621 to i32, !dbg !5780
  %622 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5782
  %s442 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %622, i32 0, i32 0, !dbg !5783
  %current_picture_ptr443 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s442, i32 0, i32 61, !dbg !5784
  %623 = load %struct.Picture*, %struct.Picture** %current_picture_ptr443, align 8, !dbg !5784
  %f444 = getelementptr inbounds %struct.Picture, %struct.Picture* %623, i32 0, i32 0, !dbg !5785
  %624 = load %struct.AVFrame*, %struct.AVFrame** %f444, align 8, !dbg !5785
  %top_field_first = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %624, i32 0, i32 20, !dbg !5786
  store i32 %conv441, i32* %top_field_first, align 8, !dbg !5787
  %625 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5788
  %current_picture_ptr445 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %625, i32 0, i32 61, !dbg !5789
  %626 = load %struct.Picture*, %struct.Picture** %current_picture_ptr445, align 8, !dbg !5789
  %f446 = getelementptr inbounds %struct.Picture, %struct.Picture* %626, i32 0, i32 0, !dbg !5790
  %627 = load %struct.AVFrame*, %struct.AVFrame** %f446, align 8, !dbg !5790
  %repeat_pict = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %627, i32 0, i32 18, !dbg !5791
  store i32 0, i32* %repeat_pict, align 8, !dbg !5792
  %628 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5793
  %rff = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %628, i32 0, i32 108, !dbg !5795
  %629 = load i8, i8* %rff, align 4, !dbg !5795
  %tobool447 = icmp ne i8 %629, 0, !dbg !5793
  br i1 %tobool447, label %if.then448, label %if.else452, !dbg !5796

if.then448:                                       ; preds = %if.end433
  %630 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5797
  %current_picture_ptr449 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %630, i32 0, i32 61, !dbg !5799
  %631 = load %struct.Picture*, %struct.Picture** %current_picture_ptr449, align 8, !dbg !5799
  %f450 = getelementptr inbounds %struct.Picture, %struct.Picture* %631, i32 0, i32 0, !dbg !5800
  %632 = load %struct.AVFrame*, %struct.AVFrame** %f450, align 8, !dbg !5800
  %repeat_pict451 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %632, i32 0, i32 18, !dbg !5801
  store i32 1, i32* %repeat_pict451, align 8, !dbg !5802
  br label %if.end462, !dbg !5803

if.else452:                                       ; preds = %if.end433
  %633 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5804
  %rptfrm = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %633, i32 0, i32 106, !dbg !5807
  %634 = load i8, i8* %rptfrm, align 2, !dbg !5807
  %tobool453 = icmp ne i8 %634, 0, !dbg !5804
  br i1 %tobool453, label %if.then454, label %if.end461, !dbg !5804

if.then454:                                       ; preds = %if.else452
  %635 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5808
  %rptfrm455 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %635, i32 0, i32 106, !dbg !5810
  %636 = load i8, i8* %rptfrm455, align 2, !dbg !5810
  %conv456 = zext i8 %636 to i32, !dbg !5808
  %mul457 = mul nsw i32 %conv456, 2, !dbg !5811
  %637 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5812
  %current_picture_ptr458 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %637, i32 0, i32 61, !dbg !5813
  %638 = load %struct.Picture*, %struct.Picture** %current_picture_ptr458, align 8, !dbg !5813
  %f459 = getelementptr inbounds %struct.Picture, %struct.Picture* %638, i32 0, i32 0, !dbg !5814
  %639 = load %struct.AVFrame*, %struct.AVFrame** %f459, align 8, !dbg !5814
  %repeat_pict460 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %639, i32 0, i32 18, !dbg !5815
  store i32 %mul457, i32* %repeat_pict460, align 8, !dbg !5816
  br label %if.end461, !dbg !5817

if.end461:                                        ; preds = %if.then454, %if.else452
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %if.then448
  %640 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5818
  %qdsp = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %640, i32 0, i32 106, !dbg !5819
  %put_qpel_pixels_tab = getelementptr inbounds %struct.QpelDSPContext, %struct.QpelDSPContext* %qdsp, i32 0, i32 0, !dbg !5820
  %arraydecay = getelementptr inbounds [2 x [16 x void (i8*, i8*, i64)*]], [2 x [16 x void (i8*, i8*, i64)*]]* %put_qpel_pixels_tab, i32 0, i32 0, !dbg !5818
  %641 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5821
  %me = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %641, i32 0, i32 139, !dbg !5822
  %qpel_put = getelementptr inbounds %struct.MotionEstContext, %struct.MotionEstContext* %me, i32 0, i32 36, !dbg !5823
  store [16 x void (i8*, i8*, i64)*]* %arraydecay, [16 x void (i8*, i8*, i64)*]** %qpel_put, align 8, !dbg !5824
  %642 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5825
  %qdsp463 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %642, i32 0, i32 106, !dbg !5826
  %avg_qpel_pixels_tab = getelementptr inbounds %struct.QpelDSPContext, %struct.QpelDSPContext* %qdsp463, i32 0, i32 1, !dbg !5827
  %arraydecay464 = getelementptr inbounds [2 x [16 x void (i8*, i8*, i64)*]], [2 x [16 x void (i8*, i8*, i64)*]]* %avg_qpel_pixels_tab, i32 0, i32 0, !dbg !5825
  %643 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5828
  %me465 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %643, i32 0, i32 139, !dbg !5829
  %qpel_avg = getelementptr inbounds %struct.MotionEstContext, %struct.MotionEstContext* %me465, i32 0, i32 37, !dbg !5830
  store [16 x void (i8*, i8*, i64)*]* %arraydecay464, [16 x void (i8*, i8*, i64)*]** %qpel_avg, align 8, !dbg !5831
  %644 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5832
  %hwaccel466 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %644, i32 0, i32 137, !dbg !5834
  %645 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel466, align 8, !dbg !5834
  %tobool467 = icmp ne %struct.AVHWAccel* %645, null, !dbg !5832
  br i1 %tobool467, label %if.then468, label %if.else802, !dbg !5835

if.then468:                                       ; preds = %if.end462
  %646 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5836
  %mb_y = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %646, i32 0, i32 142, !dbg !5838
  store i32 0, i32* %mb_y, align 8, !dbg !5839
  %647 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5840
  %field_mode469 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %647, i32 0, i32 150, !dbg !5842
  %648 = load i32, i32* %field_mode469, align 8, !dbg !5842
  %tobool470 = icmp ne i32 %648, 0, !dbg !5840
  br i1 %tobool470, label %land.lhs.true471, label %if.else700, !dbg !5843

land.lhs.true471:                                 ; preds = %if.then468
  %649 = load i8*, i8** %buf_start_second_field, align 8, !dbg !5844
  %tobool472 = icmp ne i8* %649, null, !dbg !5844
  br i1 %tobool472, label %if.then473, label %if.else700, !dbg !5846

if.then473:                                       ; preds = %land.lhs.true471
  %650 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5847
  %tff474 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %650, i32 0, i32 107, !dbg !5849
  %651 = load i8, i8* %tff474, align 1, !dbg !5849
  %conv475 = zext i8 %651 to i32, !dbg !5847
  %sub476 = sub nsw i32 2, %conv475, !dbg !5850
  %652 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5851
  %picture_structure = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %652, i32 0, i32 272, !dbg !5852
  store i32 %sub476, i32* %picture_structure, align 4, !dbg !5853
  %653 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5854
  %hwaccel477 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %653, i32 0, i32 137, !dbg !5856
  %654 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel477, align 8, !dbg !5856
  %start_frame = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %654, i32 0, i32 6, !dbg !5857
  %655 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %start_frame, align 8, !dbg !5857
  %656 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5858
  %657 = load i8*, i8** %buf_start, align 8, !dbg !5859
  %658 = load i8*, i8** %buf_start_second_field, align 8, !dbg !5860
  %659 = load i8*, i8** %buf_start, align 8, !dbg !5861
  %sub.ptr.lhs.cast478 = ptrtoint i8* %658 to i64, !dbg !5862
  %sub.ptr.rhs.cast479 = ptrtoint i8* %659 to i64, !dbg !5862
  %sub.ptr.sub480 = sub i64 %sub.ptr.lhs.cast478, %sub.ptr.rhs.cast479, !dbg !5862
  %conv481 = trunc i64 %sub.ptr.sub480 to i32, !dbg !5860
  %call482 = call i32 %655(%struct.AVCodecContext* %656, i8* %657, i32 %conv481), !dbg !5854
  store i32 %call482, i32* %ret, align 4, !dbg !5863
  %cmp483 = icmp slt i32 %call482, 0, !dbg !5864
  br i1 %cmp483, label %if.then485, label %if.end486, !dbg !5865

if.then485:                                       ; preds = %if.then473
  br label %err, !dbg !5866

if.end486:                                        ; preds = %if.then473
  %660 = load i32, i32* %n_slices1, align 4, !dbg !5867
  %cmp487 = icmp eq i32 %660, -1, !dbg !5869
  br i1 %cmp487, label %if.then489, label %if.else500, !dbg !5870

if.then489:                                       ; preds = %if.end486
  %661 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5871
  %hwaccel490 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %661, i32 0, i32 137, !dbg !5874
  %662 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel490, align 8, !dbg !5874
  %decode_slice = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %662, i32 0, i32 8, !dbg !5875
  %663 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %decode_slice, align 8, !dbg !5875
  %664 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5876
  %665 = load i8*, i8** %buf_start, align 8, !dbg !5877
  %666 = load i8*, i8** %buf_start_second_field, align 8, !dbg !5878
  %667 = load i8*, i8** %buf_start, align 8, !dbg !5879
  %sub.ptr.lhs.cast491 = ptrtoint i8* %666 to i64, !dbg !5880
  %sub.ptr.rhs.cast492 = ptrtoint i8* %667 to i64, !dbg !5880
  %sub.ptr.sub493 = sub i64 %sub.ptr.lhs.cast491, %sub.ptr.rhs.cast492, !dbg !5880
  %conv494 = trunc i64 %sub.ptr.sub493 to i32, !dbg !5878
  %call495 = call i32 %663(%struct.AVCodecContext* %664, i8* %665, i32 %conv494), !dbg !5871
  store i32 %call495, i32* %ret, align 4, !dbg !5881
  %cmp496 = icmp slt i32 %call495, 0, !dbg !5882
  br i1 %cmp496, label %if.then498, label %if.end499, !dbg !5883

if.then498:                                       ; preds = %if.then489
  br label %err, !dbg !5884

if.end499:                                        ; preds = %if.then489
  br label %if.end562, !dbg !5885

if.else500:                                       ; preds = %if.end486
  %668 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5886
  %hwaccel501 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %668, i32 0, i32 137, !dbg !5889
  %669 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel501, align 8, !dbg !5889
  %decode_slice502 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %669, i32 0, i32 8, !dbg !5890
  %670 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %decode_slice502, align 8, !dbg !5890
  %671 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5891
  %672 = load i8*, i8** %buf_start, align 8, !dbg !5892
  %673 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5893
  %arrayidx503 = getelementptr inbounds %struct.anon, %struct.anon* %673, i64 0, !dbg !5893
  %rawbuf504 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx503, i32 0, i32 3, !dbg !5894
  %674 = load i8*, i8** %rawbuf504, align 8, !dbg !5894
  %675 = load i8*, i8** %buf_start, align 8, !dbg !5895
  %sub.ptr.lhs.cast505 = ptrtoint i8* %674 to i64, !dbg !5896
  %sub.ptr.rhs.cast506 = ptrtoint i8* %675 to i64, !dbg !5896
  %sub.ptr.sub507 = sub i64 %sub.ptr.lhs.cast505, %sub.ptr.rhs.cast506, !dbg !5896
  %conv508 = trunc i64 %sub.ptr.sub507 to i32, !dbg !5893
  %call509 = call i32 %670(%struct.AVCodecContext* %671, i8* %672, i32 %conv508), !dbg !5886
  store i32 %call509, i32* %ret, align 4, !dbg !5897
  %cmp510 = icmp slt i32 %call509, 0, !dbg !5898
  br i1 %cmp510, label %if.then512, label %if.end513, !dbg !5899

if.then512:                                       ; preds = %if.else500
  br label %err, !dbg !5900

if.end513:                                        ; preds = %if.else500
  store i32 0, i32* %i, align 4, !dbg !5901
  br label %for.cond514, !dbg !5903

for.cond514:                                      ; preds = %for.inc559, %if.end513
  %676 = load i32, i32* %i, align 4, !dbg !5904
  %677 = load i32, i32* %n_slices1, align 4, !dbg !5907
  %add515 = add nsw i32 %677, 1, !dbg !5908
  %cmp516 = icmp slt i32 %676, %add515, !dbg !5909
  br i1 %cmp516, label %for.body518, label %for.end561, !dbg !5910

for.body518:                                      ; preds = %for.cond514
  %678 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5911
  %gb519 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %678, i32 0, i32 266, !dbg !5913
  %679 = load i32, i32* %i, align 4, !dbg !5914
  %idxprom520 = sext i32 %679 to i64, !dbg !5915
  %680 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5915
  %arrayidx521 = getelementptr inbounds %struct.anon, %struct.anon* %680, i64 %idxprom520, !dbg !5915
  %gb522 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx521, i32 0, i32 1, !dbg !5916
  %681 = bitcast %struct.GetBitContext* %gb519 to i8*, !dbg !5916
  %682 = bitcast %struct.GetBitContext* %gb522 to i8*, !dbg !5916
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %681, i8* %682, i64 32, i32 8, i1 false), !dbg !5916
  %683 = load i32, i32* %i, align 4, !dbg !5917
  %idxprom523 = sext i32 %683 to i64, !dbg !5918
  %684 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5918
  %arrayidx524 = getelementptr inbounds %struct.anon, %struct.anon* %684, i64 %idxprom523, !dbg !5918
  %mby_start525 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx524, i32 0, i32 2, !dbg !5919
  %685 = load i32, i32* %mby_start525, align 8, !dbg !5919
  %686 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5920
  %mb_y526 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %686, i32 0, i32 142, !dbg !5921
  store i32 %685, i32* %mb_y526, align 8, !dbg !5922
  %687 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5923
  %gb527 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %687, i32 0, i32 266, !dbg !5924
  %call528 = call i32 @get_bits1(%struct.GetBitContext* %gb527), !dbg !5925
  %688 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5926
  %pic_header_flag529 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %688, i32 0, i32 166, !dbg !5927
  store i32 %call528, i32* %pic_header_flag529, align 4, !dbg !5928
  %689 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5929
  %pic_header_flag530 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %689, i32 0, i32 166, !dbg !5931
  %690 = load i32, i32* %pic_header_flag530, align 4, !dbg !5931
  %tobool531 = icmp ne i32 %690, 0, !dbg !5929
  br i1 %tobool531, label %if.then532, label %if.end545, !dbg !5932

if.then532:                                       ; preds = %for.body518
  %691 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5933
  %692 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5936
  %gb533 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %692, i32 0, i32 266, !dbg !5937
  %call534 = call i32 @ff_vc1_parse_frame_header_adv(%struct.VC1Context* %691, %struct.GetBitContext* %gb533), !dbg !5938
  %cmp535 = icmp slt i32 %call534, 0, !dbg !5939
  br i1 %cmp535, label %if.then537, label %if.end544, !dbg !5940

if.then537:                                       ; preds = %if.then532
  %693 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5941
  %s538 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %693, i32 0, i32 0, !dbg !5943
  %avctx539 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s538, i32 0, i32 10, !dbg !5944
  %694 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx539, align 8, !dbg !5944
  %695 = bitcast %struct.AVCodecContext* %694 to i8*, !dbg !5941
  call void (i8*, i32, i8*, ...) @av_log(i8* %695, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i32 0, i32 0)), !dbg !5945
  store i32 -1094995529, i32* %ret, align 4, !dbg !5946
  %696 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5947
  %err_recognition = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %696, i32 0, i32 135, !dbg !5949
  %697 = load i32, i32* %err_recognition, align 8, !dbg !5949
  %and540 = and i32 %697, 8, !dbg !5950
  %tobool541 = icmp ne i32 %and540, 0, !dbg !5950
  br i1 %tobool541, label %if.then542, label %if.end543, !dbg !5951

if.then542:                                       ; preds = %if.then537
  br label %err, !dbg !5952

if.end543:                                        ; preds = %if.then537
  br label %for.inc559, !dbg !5953

if.end544:                                        ; preds = %if.then532
  br label %if.end545, !dbg !5954

if.end545:                                        ; preds = %if.end544, %for.body518
  %698 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5955
  %hwaccel546 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %698, i32 0, i32 137, !dbg !5957
  %699 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel546, align 8, !dbg !5957
  %decode_slice547 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %699, i32 0, i32 8, !dbg !5958
  %700 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %decode_slice547, align 8, !dbg !5958
  %701 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5959
  %702 = load i32, i32* %i, align 4, !dbg !5960
  %idxprom548 = sext i32 %702 to i64, !dbg !5961
  %703 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5961
  %arrayidx549 = getelementptr inbounds %struct.anon, %struct.anon* %703, i64 %idxprom548, !dbg !5961
  %rawbuf550 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx549, i32 0, i32 3, !dbg !5962
  %704 = load i8*, i8** %rawbuf550, align 8, !dbg !5962
  %705 = load i32, i32* %i, align 4, !dbg !5963
  %idxprom551 = sext i32 %705 to i64, !dbg !5964
  %706 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5964
  %arrayidx552 = getelementptr inbounds %struct.anon, %struct.anon* %706, i64 %idxprom551, !dbg !5964
  %raw_size553 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx552, i32 0, i32 4, !dbg !5965
  %707 = load i32, i32* %raw_size553, align 8, !dbg !5965
  %call554 = call i32 %700(%struct.AVCodecContext* %701, i8* %704, i32 %707), !dbg !5955
  store i32 %call554, i32* %ret, align 4, !dbg !5966
  %cmp555 = icmp slt i32 %call554, 0, !dbg !5967
  br i1 %cmp555, label %if.then557, label %if.end558, !dbg !5968

if.then557:                                       ; preds = %if.end545
  br label %err, !dbg !5969

if.end558:                                        ; preds = %if.end545
  br label %for.inc559, !dbg !5970

for.inc559:                                       ; preds = %if.end558, %if.end543
  %708 = load i32, i32* %i, align 4, !dbg !5971
  %inc560 = add nsw i32 %708, 1, !dbg !5971
  store i32 %inc560, i32* %i, align 4, !dbg !5971
  br label %for.cond514, !dbg !5973, !llvm.loop !5974

for.end561:                                       ; preds = %for.cond514
  br label %if.end562

if.end562:                                        ; preds = %for.end561, %if.end499
  %709 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5976
  %hwaccel563 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %709, i32 0, i32 137, !dbg !5978
  %710 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel563, align 8, !dbg !5978
  %end_frame = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %710, i32 0, i32 9, !dbg !5979
  %711 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %end_frame, align 8, !dbg !5979
  %712 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !5980
  %call564 = call i32 %711(%struct.AVCodecContext* %712), !dbg !5976
  store i32 %call564, i32* %ret, align 4, !dbg !5981
  %cmp565 = icmp slt i32 %call564, 0, !dbg !5982
  br i1 %cmp565, label %if.then567, label %if.end568, !dbg !5983

if.then567:                                       ; preds = %if.end562
  br label %err, !dbg !5984

if.end568:                                        ; preds = %if.end562
  %713 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5985
  %gb569 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %713, i32 0, i32 266, !dbg !5986
  %714 = load i32, i32* %n_slices1, align 4, !dbg !5987
  %add570 = add nsw i32 %714, 1, !dbg !5988
  %idxprom571 = sext i32 %add570 to i64, !dbg !5989
  %715 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5989
  %arrayidx572 = getelementptr inbounds %struct.anon, %struct.anon* %715, i64 %idxprom571, !dbg !5989
  %gb573 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx572, i32 0, i32 1, !dbg !5990
  %716 = bitcast %struct.GetBitContext* %gb569 to i8*, !dbg !5990
  %717 = bitcast %struct.GetBitContext* %gb573 to i8*, !dbg !5990
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %716, i8* %717, i64 32, i32 8, i1 false), !dbg !5990
  %718 = load i32, i32* %n_slices1, align 4, !dbg !5991
  %add574 = add nsw i32 %718, 1, !dbg !5992
  %idxprom575 = sext i32 %add574 to i64, !dbg !5993
  %719 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !5993
  %arrayidx576 = getelementptr inbounds %struct.anon, %struct.anon* %719, i64 %idxprom575, !dbg !5993
  %mby_start577 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx576, i32 0, i32 2, !dbg !5994
  %720 = load i32, i32* %mby_start577, align 8, !dbg !5994
  %721 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !5995
  %mb_y578 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %721, i32 0, i32 142, !dbg !5996
  store i32 %720, i32* %mb_y578, align 8, !dbg !5997
  %722 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !5998
  %tff579 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %722, i32 0, i32 107, !dbg !5999
  %723 = load i8, i8* %tff579, align 1, !dbg !5999
  %conv580 = zext i8 %723 to i32, !dbg !5998
  %add581 = add nsw i32 1, %conv580, !dbg !6000
  %724 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6001
  %picture_structure582 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %724, i32 0, i32 272, !dbg !6002
  store i32 %add581, i32* %picture_structure582, align 4, !dbg !6003
  %725 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6004
  %second_field583 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %725, i32 0, i32 152, !dbg !6005
  store i32 1, i32* %second_field583, align 8, !dbg !6006
  %726 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6007
  %pic_header_flag584 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %726, i32 0, i32 166, !dbg !6008
  store i32 0, i32* %pic_header_flag584, align 4, !dbg !6009
  %727 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6010
  %728 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6012
  %gb585 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %728, i32 0, i32 266, !dbg !6013
  %call586 = call i32 @ff_vc1_parse_frame_header_adv(%struct.VC1Context* %727, %struct.GetBitContext* %gb585), !dbg !6014
  %cmp587 = icmp slt i32 %call586, 0, !dbg !6015
  br i1 %cmp587, label %if.then589, label %if.end590, !dbg !6016

if.then589:                                       ; preds = %if.end568
  %729 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6017
  %730 = bitcast %struct.AVCodecContext* %729 to i8*, !dbg !6017
  call void (i8*, i32, i8*, ...) @av_log(i8* %730, i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i32 0, i32 0)), !dbg !6019
  store i32 -1094995529, i32* %ret, align 4, !dbg !6020
  br label %err, !dbg !6021

if.end590:                                        ; preds = %if.end568
  %731 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6022
  %s591 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %731, i32 0, i32 0, !dbg !6023
  %pict_type592 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s591, i32 0, i32 86, !dbg !6024
  %732 = load i32, i32* %pict_type592, align 4, !dbg !6024
  %733 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6025
  %s593 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %733, i32 0, i32 0, !dbg !6026
  %current_picture_ptr594 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s593, i32 0, i32 61, !dbg !6027
  %734 = load %struct.Picture*, %struct.Picture** %current_picture_ptr594, align 8, !dbg !6027
  %f595 = getelementptr inbounds %struct.Picture, %struct.Picture* %734, i32 0, i32 0, !dbg !6028
  %735 = load %struct.AVFrame*, %struct.AVFrame** %f595, align 8, !dbg !6028
  %pict_type596 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %735, i32 0, i32 8, !dbg !6029
  store i32 %732, i32* %pict_type596, align 4, !dbg !6030
  %736 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6031
  %hwaccel597 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %736, i32 0, i32 137, !dbg !6033
  %737 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel597, align 8, !dbg !6033
  %start_frame598 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %737, i32 0, i32 6, !dbg !6034
  %738 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %start_frame598, align 8, !dbg !6034
  %739 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6035
  %740 = load i8*, i8** %buf_start_second_field, align 8, !dbg !6036
  %741 = load i8*, i8** %buf, align 8, !dbg !6037
  %742 = load i32, i32* %buf_size, align 4, !dbg !6038
  %idx.ext599 = sext i32 %742 to i64, !dbg !6039
  %add.ptr600 = getelementptr inbounds i8, i8* %741, i64 %idx.ext599, !dbg !6039
  %743 = load i8*, i8** %buf_start_second_field, align 8, !dbg !6040
  %sub.ptr.lhs.cast601 = ptrtoint i8* %add.ptr600 to i64, !dbg !6041
  %sub.ptr.rhs.cast602 = ptrtoint i8* %743 to i64, !dbg !6041
  %sub.ptr.sub603 = sub i64 %sub.ptr.lhs.cast601, %sub.ptr.rhs.cast602, !dbg !6041
  %conv604 = trunc i64 %sub.ptr.sub603 to i32, !dbg !6042
  %call605 = call i32 %738(%struct.AVCodecContext* %739, i8* %740, i32 %conv604), !dbg !6031
  store i32 %call605, i32* %ret, align 4, !dbg !6043
  %cmp606 = icmp slt i32 %call605, 0, !dbg !6044
  br i1 %cmp606, label %if.then608, label %if.end609, !dbg !6045

if.then608:                                       ; preds = %if.end590
  br label %err, !dbg !6046

if.end609:                                        ; preds = %if.end590
  %744 = load i32, i32* %n_slices, align 4, !dbg !6047
  %745 = load i32, i32* %n_slices1, align 4, !dbg !6049
  %sub610 = sub nsw i32 %744, %745, !dbg !6050
  %cmp611 = icmp eq i32 %sub610, 2, !dbg !6051
  br i1 %cmp611, label %if.then613, label %if.else627, !dbg !6052

if.then613:                                       ; preds = %if.end609
  %746 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6053
  %hwaccel614 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %746, i32 0, i32 137, !dbg !6056
  %747 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel614, align 8, !dbg !6056
  %decode_slice615 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %747, i32 0, i32 8, !dbg !6057
  %748 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %decode_slice615, align 8, !dbg !6057
  %749 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6058
  %750 = load i8*, i8** %buf_start_second_field, align 8, !dbg !6059
  %751 = load i8*, i8** %buf, align 8, !dbg !6060
  %752 = load i32, i32* %buf_size, align 4, !dbg !6061
  %idx.ext616 = sext i32 %752 to i64, !dbg !6062
  %add.ptr617 = getelementptr inbounds i8, i8* %751, i64 %idx.ext616, !dbg !6062
  %753 = load i8*, i8** %buf_start_second_field, align 8, !dbg !6063
  %sub.ptr.lhs.cast618 = ptrtoint i8* %add.ptr617 to i64, !dbg !6064
  %sub.ptr.rhs.cast619 = ptrtoint i8* %753 to i64, !dbg !6064
  %sub.ptr.sub620 = sub i64 %sub.ptr.lhs.cast618, %sub.ptr.rhs.cast619, !dbg !6064
  %conv621 = trunc i64 %sub.ptr.sub620 to i32, !dbg !6065
  %call622 = call i32 %748(%struct.AVCodecContext* %749, i8* %750, i32 %conv621), !dbg !6053
  store i32 %call622, i32* %ret, align 4, !dbg !6066
  %cmp623 = icmp slt i32 %call622, 0, !dbg !6067
  br i1 %cmp623, label %if.then625, label %if.end626, !dbg !6068

if.then625:                                       ; preds = %if.then613
  br label %err, !dbg !6069

if.end626:                                        ; preds = %if.then613
  br label %if.end692, !dbg !6070

if.else627:                                       ; preds = %if.end609
  %754 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6071
  %hwaccel628 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %754, i32 0, i32 137, !dbg !6074
  %755 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel628, align 8, !dbg !6074
  %decode_slice629 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %755, i32 0, i32 8, !dbg !6075
  %756 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %decode_slice629, align 8, !dbg !6075
  %757 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6076
  %758 = load i8*, i8** %buf_start_second_field, align 8, !dbg !6077
  %759 = load i32, i32* %n_slices1, align 4, !dbg !6078
  %add630 = add nsw i32 %759, 2, !dbg !6079
  %idxprom631 = sext i32 %add630 to i64, !dbg !6080
  %760 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6080
  %arrayidx632 = getelementptr inbounds %struct.anon, %struct.anon* %760, i64 %idxprom631, !dbg !6080
  %rawbuf633 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx632, i32 0, i32 3, !dbg !6081
  %761 = load i8*, i8** %rawbuf633, align 8, !dbg !6081
  %762 = load i8*, i8** %buf_start_second_field, align 8, !dbg !6082
  %sub.ptr.lhs.cast634 = ptrtoint i8* %761 to i64, !dbg !6083
  %sub.ptr.rhs.cast635 = ptrtoint i8* %762 to i64, !dbg !6083
  %sub.ptr.sub636 = sub i64 %sub.ptr.lhs.cast634, %sub.ptr.rhs.cast635, !dbg !6083
  %conv637 = trunc i64 %sub.ptr.sub636 to i32, !dbg !6080
  %call638 = call i32 %756(%struct.AVCodecContext* %757, i8* %758, i32 %conv637), !dbg !6071
  store i32 %call638, i32* %ret, align 4, !dbg !6084
  %cmp639 = icmp slt i32 %call638, 0, !dbg !6085
  br i1 %cmp639, label %if.then641, label %if.end642, !dbg !6086

if.then641:                                       ; preds = %if.else627
  br label %err, !dbg !6087

if.end642:                                        ; preds = %if.else627
  %763 = load i32, i32* %n_slices1, align 4, !dbg !6088
  %add643 = add nsw i32 %763, 2, !dbg !6090
  store i32 %add643, i32* %i, align 4, !dbg !6091
  br label %for.cond644, !dbg !6092

for.cond644:                                      ; preds = %for.inc689, %if.end642
  %764 = load i32, i32* %i, align 4, !dbg !6093
  %765 = load i32, i32* %n_slices, align 4, !dbg !6096
  %cmp645 = icmp slt i32 %764, %765, !dbg !6097
  br i1 %cmp645, label %for.body647, label %for.end691, !dbg !6098

for.body647:                                      ; preds = %for.cond644
  %766 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6099
  %gb648 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %766, i32 0, i32 266, !dbg !6101
  %767 = load i32, i32* %i, align 4, !dbg !6102
  %idxprom649 = sext i32 %767 to i64, !dbg !6103
  %768 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6103
  %arrayidx650 = getelementptr inbounds %struct.anon, %struct.anon* %768, i64 %idxprom649, !dbg !6103
  %gb651 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx650, i32 0, i32 1, !dbg !6104
  %769 = bitcast %struct.GetBitContext* %gb648 to i8*, !dbg !6104
  %770 = bitcast %struct.GetBitContext* %gb651 to i8*, !dbg !6104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %769, i8* %770, i64 32, i32 8, i1 false), !dbg !6104
  %771 = load i32, i32* %i, align 4, !dbg !6105
  %idxprom652 = sext i32 %771 to i64, !dbg !6106
  %772 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6106
  %arrayidx653 = getelementptr inbounds %struct.anon, %struct.anon* %772, i64 %idxprom652, !dbg !6106
  %mby_start654 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx653, i32 0, i32 2, !dbg !6107
  %773 = load i32, i32* %mby_start654, align 8, !dbg !6107
  %774 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6108
  %mb_y655 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %774, i32 0, i32 142, !dbg !6109
  store i32 %773, i32* %mb_y655, align 8, !dbg !6110
  %775 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6111
  %gb656 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %775, i32 0, i32 266, !dbg !6112
  %call657 = call i32 @get_bits1(%struct.GetBitContext* %gb656), !dbg !6113
  %776 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6114
  %pic_header_flag658 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %776, i32 0, i32 166, !dbg !6115
  store i32 %call657, i32* %pic_header_flag658, align 4, !dbg !6116
  %777 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6117
  %pic_header_flag659 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %777, i32 0, i32 166, !dbg !6119
  %778 = load i32, i32* %pic_header_flag659, align 4, !dbg !6119
  %tobool660 = icmp ne i32 %778, 0, !dbg !6117
  br i1 %tobool660, label %if.then661, label %if.end675, !dbg !6120

if.then661:                                       ; preds = %for.body647
  %779 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6121
  %780 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6124
  %gb662 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %780, i32 0, i32 266, !dbg !6125
  %call663 = call i32 @ff_vc1_parse_frame_header_adv(%struct.VC1Context* %779, %struct.GetBitContext* %gb662), !dbg !6126
  %cmp664 = icmp slt i32 %call663, 0, !dbg !6127
  br i1 %cmp664, label %if.then666, label %if.end674, !dbg !6128

if.then666:                                       ; preds = %if.then661
  %781 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6129
  %s667 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %781, i32 0, i32 0, !dbg !6131
  %avctx668 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s667, i32 0, i32 10, !dbg !6132
  %782 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx668, align 8, !dbg !6132
  %783 = bitcast %struct.AVCodecContext* %782 to i8*, !dbg !6129
  call void (i8*, i32, i8*, ...) @av_log(i8* %783, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i32 0, i32 0)), !dbg !6133
  store i32 -1094995529, i32* %ret, align 4, !dbg !6134
  %784 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6135
  %err_recognition669 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %784, i32 0, i32 135, !dbg !6137
  %785 = load i32, i32* %err_recognition669, align 8, !dbg !6137
  %and670 = and i32 %785, 8, !dbg !6138
  %tobool671 = icmp ne i32 %and670, 0, !dbg !6138
  br i1 %tobool671, label %if.then672, label %if.end673, !dbg !6139

if.then672:                                       ; preds = %if.then666
  br label %err, !dbg !6140

if.end673:                                        ; preds = %if.then666
  br label %for.inc689, !dbg !6141

if.end674:                                        ; preds = %if.then661
  br label %if.end675, !dbg !6142

if.end675:                                        ; preds = %if.end674, %for.body647
  %786 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6143
  %hwaccel676 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %786, i32 0, i32 137, !dbg !6145
  %787 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel676, align 8, !dbg !6145
  %decode_slice677 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %787, i32 0, i32 8, !dbg !6146
  %788 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %decode_slice677, align 8, !dbg !6146
  %789 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6147
  %790 = load i32, i32* %i, align 4, !dbg !6148
  %idxprom678 = sext i32 %790 to i64, !dbg !6149
  %791 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6149
  %arrayidx679 = getelementptr inbounds %struct.anon, %struct.anon* %791, i64 %idxprom678, !dbg !6149
  %rawbuf680 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx679, i32 0, i32 3, !dbg !6150
  %792 = load i8*, i8** %rawbuf680, align 8, !dbg !6150
  %793 = load i32, i32* %i, align 4, !dbg !6151
  %idxprom681 = sext i32 %793 to i64, !dbg !6152
  %794 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6152
  %arrayidx682 = getelementptr inbounds %struct.anon, %struct.anon* %794, i64 %idxprom681, !dbg !6152
  %raw_size683 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx682, i32 0, i32 4, !dbg !6153
  %795 = load i32, i32* %raw_size683, align 8, !dbg !6153
  %call684 = call i32 %788(%struct.AVCodecContext* %789, i8* %792, i32 %795), !dbg !6143
  store i32 %call684, i32* %ret, align 4, !dbg !6154
  %cmp685 = icmp slt i32 %call684, 0, !dbg !6155
  br i1 %cmp685, label %if.then687, label %if.end688, !dbg !6156

if.then687:                                       ; preds = %if.end675
  br label %err, !dbg !6157

if.end688:                                        ; preds = %if.end675
  br label %for.inc689, !dbg !6158

for.inc689:                                       ; preds = %if.end688, %if.end673
  %796 = load i32, i32* %i, align 4, !dbg !6159
  %inc690 = add nsw i32 %796, 1, !dbg !6159
  store i32 %inc690, i32* %i, align 4, !dbg !6159
  br label %for.cond644, !dbg !6161, !llvm.loop !6162

for.end691:                                       ; preds = %for.cond644
  br label %if.end692

if.end692:                                        ; preds = %for.end691, %if.end626
  %797 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6164
  %hwaccel693 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %797, i32 0, i32 137, !dbg !6166
  %798 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel693, align 8, !dbg !6166
  %end_frame694 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %798, i32 0, i32 9, !dbg !6167
  %799 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %end_frame694, align 8, !dbg !6167
  %800 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6168
  %call695 = call i32 %799(%struct.AVCodecContext* %800), !dbg !6164
  store i32 %call695, i32* %ret, align 4, !dbg !6169
  %cmp696 = icmp slt i32 %call695, 0, !dbg !6170
  br i1 %cmp696, label %if.then698, label %if.end699, !dbg !6171

if.then698:                                       ; preds = %if.end692
  br label %err, !dbg !6172

if.end699:                                        ; preds = %if.end692
  br label %if.end801, !dbg !6173

if.else700:                                       ; preds = %land.lhs.true471, %if.then468
  %801 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6174
  %picture_structure701 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %801, i32 0, i32 272, !dbg !6176
  store i32 3, i32* %picture_structure701, align 4, !dbg !6177
  %802 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6178
  %hwaccel702 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %802, i32 0, i32 137, !dbg !6180
  %803 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel702, align 8, !dbg !6180
  %start_frame703 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %803, i32 0, i32 6, !dbg !6181
  %804 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %start_frame703, align 8, !dbg !6181
  %805 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6182
  %806 = load i8*, i8** %buf_start, align 8, !dbg !6183
  %807 = load i8*, i8** %buf, align 8, !dbg !6184
  %808 = load i32, i32* %buf_size, align 4, !dbg !6185
  %idx.ext704 = sext i32 %808 to i64, !dbg !6186
  %add.ptr705 = getelementptr inbounds i8, i8* %807, i64 %idx.ext704, !dbg !6186
  %809 = load i8*, i8** %buf_start, align 8, !dbg !6187
  %sub.ptr.lhs.cast706 = ptrtoint i8* %add.ptr705 to i64, !dbg !6188
  %sub.ptr.rhs.cast707 = ptrtoint i8* %809 to i64, !dbg !6188
  %sub.ptr.sub708 = sub i64 %sub.ptr.lhs.cast706, %sub.ptr.rhs.cast707, !dbg !6188
  %conv709 = trunc i64 %sub.ptr.sub708 to i32, !dbg !6189
  %call710 = call i32 %804(%struct.AVCodecContext* %805, i8* %806, i32 %conv709), !dbg !6178
  store i32 %call710, i32* %ret, align 4, !dbg !6190
  %cmp711 = icmp slt i32 %call710, 0, !dbg !6191
  br i1 %cmp711, label %if.then713, label %if.end714, !dbg !6192

if.then713:                                       ; preds = %if.else700
  br label %err, !dbg !6193

if.end714:                                        ; preds = %if.else700
  %810 = load i32, i32* %n_slices, align 4, !dbg !6194
  %cmp715 = icmp eq i32 %810, 0, !dbg !6196
  br i1 %cmp715, label %if.then717, label %if.else731, !dbg !6197

if.then717:                                       ; preds = %if.end714
  %811 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6198
  %hwaccel718 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %811, i32 0, i32 137, !dbg !6201
  %812 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel718, align 8, !dbg !6201
  %decode_slice719 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %812, i32 0, i32 8, !dbg !6202
  %813 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %decode_slice719, align 8, !dbg !6202
  %814 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6203
  %815 = load i8*, i8** %buf_start, align 8, !dbg !6204
  %816 = load i8*, i8** %buf, align 8, !dbg !6205
  %817 = load i32, i32* %buf_size, align 4, !dbg !6206
  %idx.ext720 = sext i32 %817 to i64, !dbg !6207
  %add.ptr721 = getelementptr inbounds i8, i8* %816, i64 %idx.ext720, !dbg !6207
  %818 = load i8*, i8** %buf_start, align 8, !dbg !6208
  %sub.ptr.lhs.cast722 = ptrtoint i8* %add.ptr721 to i64, !dbg !6209
  %sub.ptr.rhs.cast723 = ptrtoint i8* %818 to i64, !dbg !6209
  %sub.ptr.sub724 = sub i64 %sub.ptr.lhs.cast722, %sub.ptr.rhs.cast723, !dbg !6209
  %conv725 = trunc i64 %sub.ptr.sub724 to i32, !dbg !6210
  %call726 = call i32 %813(%struct.AVCodecContext* %814, i8* %815, i32 %conv725), !dbg !6198
  store i32 %call726, i32* %ret, align 4, !dbg !6211
  %cmp727 = icmp slt i32 %call726, 0, !dbg !6212
  br i1 %cmp727, label %if.then729, label %if.end730, !dbg !6213

if.then729:                                       ; preds = %if.then717
  br label %err, !dbg !6214

if.end730:                                        ; preds = %if.then717
  br label %if.end793, !dbg !6215

if.else731:                                       ; preds = %if.end714
  %819 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6216
  %hwaccel732 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %819, i32 0, i32 137, !dbg !6219
  %820 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel732, align 8, !dbg !6219
  %decode_slice733 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %820, i32 0, i32 8, !dbg !6220
  %821 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %decode_slice733, align 8, !dbg !6220
  %822 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6221
  %823 = load i8*, i8** %buf_start, align 8, !dbg !6222
  %824 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6223
  %arrayidx734 = getelementptr inbounds %struct.anon, %struct.anon* %824, i64 0, !dbg !6223
  %rawbuf735 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx734, i32 0, i32 3, !dbg !6224
  %825 = load i8*, i8** %rawbuf735, align 8, !dbg !6224
  %826 = load i8*, i8** %buf_start, align 8, !dbg !6225
  %sub.ptr.lhs.cast736 = ptrtoint i8* %825 to i64, !dbg !6226
  %sub.ptr.rhs.cast737 = ptrtoint i8* %826 to i64, !dbg !6226
  %sub.ptr.sub738 = sub i64 %sub.ptr.lhs.cast736, %sub.ptr.rhs.cast737, !dbg !6226
  %conv739 = trunc i64 %sub.ptr.sub738 to i32, !dbg !6223
  %call740 = call i32 %821(%struct.AVCodecContext* %822, i8* %823, i32 %conv739), !dbg !6216
  store i32 %call740, i32* %ret, align 4, !dbg !6227
  %cmp741 = icmp slt i32 %call740, 0, !dbg !6228
  br i1 %cmp741, label %if.then743, label %if.end744, !dbg !6229

if.then743:                                       ; preds = %if.else731
  br label %err, !dbg !6230

if.end744:                                        ; preds = %if.else731
  store i32 0, i32* %i, align 4, !dbg !6231
  br label %for.cond745, !dbg !6233

for.cond745:                                      ; preds = %for.inc790, %if.end744
  %827 = load i32, i32* %i, align 4, !dbg !6234
  %828 = load i32, i32* %n_slices, align 4, !dbg !6237
  %cmp746 = icmp slt i32 %827, %828, !dbg !6238
  br i1 %cmp746, label %for.body748, label %for.end792, !dbg !6239

for.body748:                                      ; preds = %for.cond745
  %829 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6240
  %gb749 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %829, i32 0, i32 266, !dbg !6242
  %830 = load i32, i32* %i, align 4, !dbg !6243
  %idxprom750 = sext i32 %830 to i64, !dbg !6244
  %831 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6244
  %arrayidx751 = getelementptr inbounds %struct.anon, %struct.anon* %831, i64 %idxprom750, !dbg !6244
  %gb752 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx751, i32 0, i32 1, !dbg !6245
  %832 = bitcast %struct.GetBitContext* %gb749 to i8*, !dbg !6245
  %833 = bitcast %struct.GetBitContext* %gb752 to i8*, !dbg !6245
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %832, i8* %833, i64 32, i32 8, i1 false), !dbg !6245
  %834 = load i32, i32* %i, align 4, !dbg !6246
  %idxprom753 = sext i32 %834 to i64, !dbg !6247
  %835 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6247
  %arrayidx754 = getelementptr inbounds %struct.anon, %struct.anon* %835, i64 %idxprom753, !dbg !6247
  %mby_start755 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx754, i32 0, i32 2, !dbg !6248
  %836 = load i32, i32* %mby_start755, align 8, !dbg !6248
  %837 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6249
  %mb_y756 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %837, i32 0, i32 142, !dbg !6250
  store i32 %836, i32* %mb_y756, align 8, !dbg !6251
  %838 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6252
  %gb757 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %838, i32 0, i32 266, !dbg !6253
  %call758 = call i32 @get_bits1(%struct.GetBitContext* %gb757), !dbg !6254
  %839 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6255
  %pic_header_flag759 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %839, i32 0, i32 166, !dbg !6256
  store i32 %call758, i32* %pic_header_flag759, align 4, !dbg !6257
  %840 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6258
  %pic_header_flag760 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %840, i32 0, i32 166, !dbg !6260
  %841 = load i32, i32* %pic_header_flag760, align 4, !dbg !6260
  %tobool761 = icmp ne i32 %841, 0, !dbg !6258
  br i1 %tobool761, label %if.then762, label %if.end776, !dbg !6261

if.then762:                                       ; preds = %for.body748
  %842 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6262
  %843 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6265
  %gb763 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %843, i32 0, i32 266, !dbg !6266
  %call764 = call i32 @ff_vc1_parse_frame_header_adv(%struct.VC1Context* %842, %struct.GetBitContext* %gb763), !dbg !6267
  %cmp765 = icmp slt i32 %call764, 0, !dbg !6268
  br i1 %cmp765, label %if.then767, label %if.end775, !dbg !6269

if.then767:                                       ; preds = %if.then762
  %844 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6270
  %s768 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %844, i32 0, i32 0, !dbg !6272
  %avctx769 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s768, i32 0, i32 10, !dbg !6273
  %845 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx769, align 8, !dbg !6273
  %846 = bitcast %struct.AVCodecContext* %845 to i8*, !dbg !6270
  call void (i8*, i32, i8*, ...) @av_log(i8* %846, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i32 0, i32 0)), !dbg !6274
  store i32 -1094995529, i32* %ret, align 4, !dbg !6275
  %847 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6276
  %err_recognition770 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %847, i32 0, i32 135, !dbg !6278
  %848 = load i32, i32* %err_recognition770, align 8, !dbg !6278
  %and771 = and i32 %848, 8, !dbg !6279
  %tobool772 = icmp ne i32 %and771, 0, !dbg !6279
  br i1 %tobool772, label %if.then773, label %if.end774, !dbg !6280

if.then773:                                       ; preds = %if.then767
  br label %err, !dbg !6281

if.end774:                                        ; preds = %if.then767
  br label %for.inc790, !dbg !6282

if.end775:                                        ; preds = %if.then762
  br label %if.end776, !dbg !6283

if.end776:                                        ; preds = %if.end775, %for.body748
  %849 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6284
  %hwaccel777 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %849, i32 0, i32 137, !dbg !6286
  %850 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel777, align 8, !dbg !6286
  %decode_slice778 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %850, i32 0, i32 8, !dbg !6287
  %851 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %decode_slice778, align 8, !dbg !6287
  %852 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6288
  %853 = load i32, i32* %i, align 4, !dbg !6289
  %idxprom779 = sext i32 %853 to i64, !dbg !6290
  %854 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6290
  %arrayidx780 = getelementptr inbounds %struct.anon, %struct.anon* %854, i64 %idxprom779, !dbg !6290
  %rawbuf781 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx780, i32 0, i32 3, !dbg !6291
  %855 = load i8*, i8** %rawbuf781, align 8, !dbg !6291
  %856 = load i32, i32* %i, align 4, !dbg !6292
  %idxprom782 = sext i32 %856 to i64, !dbg !6293
  %857 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6293
  %arrayidx783 = getelementptr inbounds %struct.anon, %struct.anon* %857, i64 %idxprom782, !dbg !6293
  %raw_size784 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx783, i32 0, i32 4, !dbg !6294
  %858 = load i32, i32* %raw_size784, align 8, !dbg !6294
  %call785 = call i32 %851(%struct.AVCodecContext* %852, i8* %855, i32 %858), !dbg !6284
  store i32 %call785, i32* %ret, align 4, !dbg !6295
  %cmp786 = icmp slt i32 %call785, 0, !dbg !6296
  br i1 %cmp786, label %if.then788, label %if.end789, !dbg !6297

if.then788:                                       ; preds = %if.end776
  br label %err, !dbg !6298

if.end789:                                        ; preds = %if.end776
  br label %for.inc790, !dbg !6299

for.inc790:                                       ; preds = %if.end789, %if.end774
  %859 = load i32, i32* %i, align 4, !dbg !6300
  %inc791 = add nsw i32 %859, 1, !dbg !6300
  store i32 %inc791, i32* %i, align 4, !dbg !6300
  br label %for.cond745, !dbg !6302, !llvm.loop !6303

for.end792:                                       ; preds = %for.cond745
  br label %if.end793

if.end793:                                        ; preds = %for.end792, %if.end730
  %860 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6305
  %hwaccel794 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %860, i32 0, i32 137, !dbg !6307
  %861 = load %struct.AVHWAccel*, %struct.AVHWAccel** %hwaccel794, align 8, !dbg !6307
  %end_frame795 = getelementptr inbounds %struct.AVHWAccel, %struct.AVHWAccel* %861, i32 0, i32 9, !dbg !6308
  %862 = load i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)** %end_frame795, align 8, !dbg !6308
  %863 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6309
  %call796 = call i32 %862(%struct.AVCodecContext* %863), !dbg !6305
  store i32 %call796, i32* %ret, align 4, !dbg !6310
  %cmp797 = icmp slt i32 %call796, 0, !dbg !6311
  br i1 %cmp797, label %if.then799, label %if.end800, !dbg !6312

if.then799:                                       ; preds = %if.end793
  br label %err, !dbg !6313

if.end800:                                        ; preds = %if.end793
  br label %if.end801

if.end801:                                        ; preds = %if.end800, %if.end699
  br label %if.end1108, !dbg !6314

if.else802:                                       ; preds = %if.end462
  call void @llvm.dbg.declare(metadata i32* %header_ret, metadata !6315, metadata !3012), !dbg !6317
  store i32 0, i32* %header_ret, align 4, !dbg !6317
  %864 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6318
  call void @ff_mpeg_er_frame_start(%struct.MpegEncContext* %864), !dbg !6319
  %865 = load i32, i32* %buf_size, align 4, !dbg !6320
  %mul804 = mul nsw i32 %865, 8, !dbg !6321
  %866 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6322
  %bits = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %866, i32 0, i32 4, !dbg !6323
  store i32 %mul804, i32* %bits, align 8, !dbg !6324
  %867 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6325
  %mb_width = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %867, i32 0, i32 35, !dbg !6326
  %868 = load i32, i32* %mb_width, align 4, !dbg !6326
  %869 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6327
  %end_mb_x = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %869, i32 0, i32 198, !dbg !6328
  store i32 %868, i32* %end_mb_x, align 4, !dbg !6329
  %870 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6330
  %field_mode805 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %870, i32 0, i32 150, !dbg !6332
  %871 = load i32, i32* %field_mode805, align 8, !dbg !6332
  %tobool806 = icmp ne i32 %871, 0, !dbg !6330
  br i1 %tobool806, label %if.then807, label %if.end825, !dbg !6333

if.then807:                                       ; preds = %if.else802
  %872 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6334
  %current_picture808 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %872, i32 0, i32 58, !dbg !6336
  %f809 = getelementptr inbounds %struct.Picture, %struct.Picture* %current_picture808, i32 0, i32 0, !dbg !6337
  %873 = load %struct.AVFrame*, %struct.AVFrame** %f809, align 8, !dbg !6337
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %873, i32 0, i32 1, !dbg !6338
  %arrayidx810 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 0, !dbg !6334
  %874 = load i32, i32* %arrayidx810, align 8, !dbg !6339
  %shl811 = shl i32 %874, 1, !dbg !6339
  store i32 %shl811, i32* %arrayidx810, align 8, !dbg !6339
  %875 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6340
  %current_picture812 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %875, i32 0, i32 58, !dbg !6341
  %f813 = getelementptr inbounds %struct.Picture, %struct.Picture* %current_picture812, i32 0, i32 0, !dbg !6342
  %876 = load %struct.AVFrame*, %struct.AVFrame** %f813, align 8, !dbg !6342
  %linesize814 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %876, i32 0, i32 1, !dbg !6343
  %arrayidx815 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize814, i64 0, i64 1, !dbg !6340
  %877 = load i32, i32* %arrayidx815, align 4, !dbg !6344
  %shl816 = shl i32 %877, 1, !dbg !6344
  store i32 %shl816, i32* %arrayidx815, align 4, !dbg !6344
  %878 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6345
  %current_picture817 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %878, i32 0, i32 58, !dbg !6346
  %f818 = getelementptr inbounds %struct.Picture, %struct.Picture* %current_picture817, i32 0, i32 0, !dbg !6347
  %879 = load %struct.AVFrame*, %struct.AVFrame** %f818, align 8, !dbg !6347
  %linesize819 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %879, i32 0, i32 1, !dbg !6348
  %arrayidx820 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize819, i64 0, i64 2, !dbg !6345
  %880 = load i32, i32* %arrayidx820, align 8, !dbg !6349
  %shl821 = shl i32 %880, 1, !dbg !6349
  store i32 %shl821, i32* %arrayidx820, align 8, !dbg !6349
  %881 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6350
  %linesize822 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %881, i32 0, i32 42, !dbg !6351
  %882 = load i64, i64* %linesize822, align 8, !dbg !6352
  %shl823 = shl i64 %882, 1, !dbg !6352
  store i64 %shl823, i64* %linesize822, align 8, !dbg !6352
  %883 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6353
  %uvlinesize = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %883, i32 0, i32 43, !dbg !6354
  %884 = load i64, i64* %uvlinesize, align 8, !dbg !6355
  %shl824 = shl i64 %884, 1, !dbg !6355
  store i64 %shl824, i64* %uvlinesize, align 8, !dbg !6355
  br label %if.end825, !dbg !6356

if.end825:                                        ; preds = %if.then807, %if.else802
  %885 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6357
  %mb_height826 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %885, i32 0, i32 36, !dbg !6358
  %886 = load i32, i32* %mb_height826, align 8, !dbg !6358
  %887 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6359
  %field_mode827 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %887, i32 0, i32 150, !dbg !6360
  %888 = load i32, i32* %field_mode827, align 8, !dbg !6360
  %shr828 = ashr i32 %886, %888, !dbg !6361
  store i32 %shr828, i32* %mb_height, align 4, !dbg !6362
  br label %do.body, !dbg !6363, !llvm.loop !6364

do.body:                                          ; preds = %if.end825
  %889 = load i32, i32* %mb_height, align 4, !dbg !6365
  %cmp829 = icmp sgt i32 %889, 0, !dbg !6369
  br i1 %cmp829, label %if.end832, label %if.then831, !dbg !6370

if.then831:                                       ; preds = %do.body
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i32 0, i32 0), i32 1035), !dbg !6371
  call void @abort() #9, !dbg !6374
  unreachable, !dbg !6376

if.end832:                                        ; preds = %do.body
  br label %do.end, !dbg !6377

do.end:                                           ; preds = %if.end832
  store i32 0, i32* %i, align 4, !dbg !6379
  br label %for.cond833, !dbg !6381

for.cond833:                                      ; preds = %for.inc1035, %do.end
  %890 = load i32, i32* %i, align 4, !dbg !6382
  %891 = load i32, i32* %n_slices, align 4, !dbg !6385
  %cmp834 = icmp sle i32 %890, %891, !dbg !6386
  br i1 %cmp834, label %for.body836, label %for.end1037, !dbg !6387

for.body836:                                      ; preds = %for.cond833
  %892 = load i32, i32* %i, align 4, !dbg !6388
  %cmp837 = icmp sgt i32 %892, 0, !dbg !6391
  br i1 %cmp837, label %land.lhs.true839, label %if.else873, !dbg !6392

land.lhs.true839:                                 ; preds = %for.body836
  %893 = load i32, i32* %i, align 4, !dbg !6393
  %sub840 = sub nsw i32 %893, 1, !dbg !6395
  %idxprom841 = sext i32 %sub840 to i64, !dbg !6396
  %894 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6396
  %arrayidx842 = getelementptr inbounds %struct.anon, %struct.anon* %894, i64 %idxprom841, !dbg !6396
  %mby_start843 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx842, i32 0, i32 2, !dbg !6397
  %895 = load i32, i32* %mby_start843, align 8, !dbg !6397
  %896 = load i32, i32* %mb_height, align 4, !dbg !6398
  %cmp844 = icmp sge i32 %895, %896, !dbg !6399
  br i1 %cmp844, label %if.then846, label %if.else873, !dbg !6400

if.then846:                                       ; preds = %land.lhs.true839
  %897 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6401
  %field_mode847 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %897, i32 0, i32 150, !dbg !6404
  %898 = load i32, i32* %field_mode847, align 8, !dbg !6404
  %cmp848 = icmp sle i32 %898, 0, !dbg !6405
  br i1 %cmp848, label %if.then850, label %if.end857, !dbg !6406

if.then850:                                       ; preds = %if.then846
  %899 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6407
  %s851 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %899, i32 0, i32 0, !dbg !6409
  %avctx852 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s851, i32 0, i32 10, !dbg !6410
  %900 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx852, align 8, !dbg !6410
  %901 = bitcast %struct.AVCodecContext* %900 to i8*, !dbg !6407
  %902 = load i32, i32* %i, align 4, !dbg !6411
  %903 = load i32, i32* %i, align 4, !dbg !6412
  %sub853 = sub nsw i32 %903, 1, !dbg !6413
  %idxprom854 = sext i32 %sub853 to i64, !dbg !6414
  %904 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6414
  %arrayidx855 = getelementptr inbounds %struct.anon, %struct.anon* %904, i64 %idxprom854, !dbg !6414
  %mby_start856 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx855, i32 0, i32 2, !dbg !6415
  %905 = load i32, i32* %mby_start856, align 8, !dbg !6415
  %906 = load i32, i32* %mb_height, align 4, !dbg !6416
  call void (i8*, i32, i8*, ...) @av_log(i8* %901, i32 16, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.26, i32 0, i32 0), i32 %902, i32 %905, i32 %906), !dbg !6417
  br label %for.inc1035, !dbg !6418

if.end857:                                        ; preds = %if.then846
  %907 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6419
  %second_field858 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %907, i32 0, i32 152, !dbg !6420
  store i32 1, i32* %second_field858, align 8, !dbg !6421
  br label %do.body859, !dbg !6422, !llvm.loop !6423

do.body859:                                       ; preds = %if.end857
  %908 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6424
  %mb_height860 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %908, i32 0, i32 36, !dbg !6428
  %909 = load i32, i32* %mb_height860, align 8, !dbg !6428
  %and861 = and i32 %909, 1, !dbg !6429
  %cmp862 = icmp eq i32 %and861, 0, !dbg !6430
  br i1 %cmp862, label %if.end865, label %if.then864, !dbg !6431

if.then864:                                       ; preds = %do.body859
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i32 0, i32 0), i32 1046), !dbg !6432
  call void @abort() #9, !dbg !6435
  unreachable, !dbg !6437

if.end865:                                        ; preds = %do.body859
  br label %do.end866, !dbg !6438

do.end866:                                        ; preds = %if.end865
  %910 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6440
  %b8_stride = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %910, i32 0, i32 38, !dbg !6441
  %911 = load i32, i32* %b8_stride, align 8, !dbg !6441
  %912 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6442
  %mb_height867 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %912, i32 0, i32 36, !dbg !6443
  %913 = load i32, i32* %mb_height867, align 8, !dbg !6443
  %and868 = and i32 %913, -2, !dbg !6444
  %mul869 = mul nsw i32 %911, %and868, !dbg !6445
  %914 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6446
  %blocks_off = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %914, i32 0, i32 159, !dbg !6447
  store i32 %mul869, i32* %blocks_off, align 8, !dbg !6448
  %915 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6449
  %mb_stride = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %915, i32 0, i32 37, !dbg !6450
  %916 = load i32, i32* %mb_stride, align 4, !dbg !6450
  %917 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6451
  %mb_height870 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %917, i32 0, i32 36, !dbg !6452
  %918 = load i32, i32* %mb_height870, align 8, !dbg !6452
  %mul871 = mul nsw i32 %916, %918, !dbg !6453
  %shr872 = ashr i32 %mul871, 1, !dbg !6454
  %919 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6455
  %mb_off = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %919, i32 0, i32 160, !dbg !6456
  store i32 %shr872, i32* %mb_off, align 4, !dbg !6457
  br label %if.end877, !dbg !6458

if.else873:                                       ; preds = %land.lhs.true839, %for.body836
  %920 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6459
  %second_field874 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %920, i32 0, i32 152, !dbg !6461
  store i32 0, i32* %second_field874, align 8, !dbg !6462
  %921 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6463
  %blocks_off875 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %921, i32 0, i32 159, !dbg !6464
  store i32 0, i32* %blocks_off875, align 8, !dbg !6465
  %922 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6466
  %mb_off876 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %922, i32 0, i32 160, !dbg !6467
  store i32 0, i32* %mb_off876, align 4, !dbg !6468
  br label %if.end877

if.end877:                                        ; preds = %if.else873, %do.end866
  %923 = load i32, i32* %i, align 4, !dbg !6469
  %tobool878 = icmp ne i32 %923, 0, !dbg !6469
  br i1 %tobool878, label %if.then879, label %if.end922, !dbg !6471

if.then879:                                       ; preds = %if.end877
  %924 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6472
  %pic_header_flag880 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %924, i32 0, i32 166, !dbg !6474
  store i32 0, i32* %pic_header_flag880, align 4, !dbg !6475
  %925 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6476
  %field_mode881 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %925, i32 0, i32 150, !dbg !6478
  %926 = load i32, i32* %field_mode881, align 8, !dbg !6478
  %tobool882 = icmp ne i32 %926, 0, !dbg !6476
  br i1 %tobool882, label %land.lhs.true883, label %if.else901, !dbg !6479

land.lhs.true883:                                 ; preds = %if.then879
  %927 = load i32, i32* %i, align 4, !dbg !6480
  %928 = load i32, i32* %n_slices1, align 4, !dbg !6482
  %add884 = add nsw i32 %928, 2, !dbg !6483
  %cmp885 = icmp eq i32 %927, %add884, !dbg !6484
  br i1 %cmp885, label %if.then887, label %if.else901, !dbg !6485

if.then887:                                       ; preds = %land.lhs.true883
  %929 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6486
  %930 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6489
  %gb888 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %930, i32 0, i32 266, !dbg !6490
  %call889 = call i32 @ff_vc1_parse_frame_header_adv(%struct.VC1Context* %929, %struct.GetBitContext* %gb888), !dbg !6491
  store i32 %call889, i32* %header_ret, align 4, !dbg !6492
  %cmp890 = icmp slt i32 %call889, 0, !dbg !6493
  br i1 %cmp890, label %if.then892, label %if.end900, !dbg !6494

if.then892:                                       ; preds = %if.then887
  %931 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6495
  %s893 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %931, i32 0, i32 0, !dbg !6497
  %avctx894 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s893, i32 0, i32 10, !dbg !6498
  %932 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx894, align 8, !dbg !6498
  %933 = bitcast %struct.AVCodecContext* %932 to i8*, !dbg !6495
  call void (i8*, i32, i8*, ...) @av_log(i8* %933, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28, i32 0, i32 0)), !dbg !6499
  store i32 -1094995529, i32* %ret, align 4, !dbg !6500
  %934 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6501
  %err_recognition895 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %934, i32 0, i32 135, !dbg !6503
  %935 = load i32, i32* %err_recognition895, align 8, !dbg !6503
  %and896 = and i32 %935, 8, !dbg !6504
  %tobool897 = icmp ne i32 %and896, 0, !dbg !6504
  br i1 %tobool897, label %if.then898, label %if.end899, !dbg !6505

if.then898:                                       ; preds = %if.then892
  br label %err, !dbg !6506

if.end899:                                        ; preds = %if.then892
  br label %for.inc1035, !dbg !6507

if.end900:                                        ; preds = %if.then887
  br label %if.end921, !dbg !6508

if.else901:                                       ; preds = %land.lhs.true883, %if.then879
  %936 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6509
  %gb902 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %936, i32 0, i32 266, !dbg !6512
  %call903 = call i32 @get_bits1(%struct.GetBitContext* %gb902), !dbg !6513
  %tobool904 = icmp ne i32 %call903, 0, !dbg !6513
  br i1 %tobool904, label %if.then905, label %if.end920, !dbg !6513

if.then905:                                       ; preds = %if.else901
  %937 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6514
  %pic_header_flag906 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %937, i32 0, i32 166, !dbg !6516
  store i32 1, i32* %pic_header_flag906, align 4, !dbg !6517
  %938 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6518
  %939 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6520
  %gb907 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %939, i32 0, i32 266, !dbg !6521
  %call908 = call i32 @ff_vc1_parse_frame_header_adv(%struct.VC1Context* %938, %struct.GetBitContext* %gb907), !dbg !6522
  store i32 %call908, i32* %header_ret, align 4, !dbg !6523
  %cmp909 = icmp slt i32 %call908, 0, !dbg !6524
  br i1 %cmp909, label %if.then911, label %if.end919, !dbg !6525

if.then911:                                       ; preds = %if.then905
  %940 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6526
  %s912 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %940, i32 0, i32 0, !dbg !6528
  %avctx913 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s912, i32 0, i32 10, !dbg !6529
  %941 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx913, align 8, !dbg !6529
  %942 = bitcast %struct.AVCodecContext* %941 to i8*, !dbg !6526
  call void (i8*, i32, i8*, ...) @av_log(i8* %942, i32 16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i32 0, i32 0)), !dbg !6530
  store i32 -1094995529, i32* %ret, align 4, !dbg !6531
  %943 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6532
  %err_recognition914 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %943, i32 0, i32 135, !dbg !6534
  %944 = load i32, i32* %err_recognition914, align 8, !dbg !6534
  %and915 = and i32 %944, 8, !dbg !6535
  %tobool916 = icmp ne i32 %and915, 0, !dbg !6535
  br i1 %tobool916, label %if.then917, label %if.end918, !dbg !6536

if.then917:                                       ; preds = %if.then911
  br label %err, !dbg !6537

if.end918:                                        ; preds = %if.then911
  br label %for.inc1035, !dbg !6538

if.end919:                                        ; preds = %if.then905
  br label %if.end920, !dbg !6539

if.end920:                                        ; preds = %if.end919, %if.else901
  br label %if.end921

if.end921:                                        ; preds = %if.end920, %if.end900
  br label %if.end922, !dbg !6540

if.end922:                                        ; preds = %if.end921, %if.end877
  %945 = load i32, i32* %header_ret, align 4, !dbg !6541
  %cmp923 = icmp slt i32 %945, 0, !dbg !6543
  br i1 %cmp923, label %if.then925, label %if.end926, !dbg !6544

if.then925:                                       ; preds = %if.end922
  br label %for.inc1035, !dbg !6545

if.end926:                                        ; preds = %if.end922
  %946 = load i32, i32* %i, align 4, !dbg !6546
  %cmp927 = icmp eq i32 %946, 0, !dbg !6547
  br i1 %cmp927, label %cond.true, label %cond.false, !dbg !6548

cond.true:                                        ; preds = %if.end926
  br label %cond.end942, !dbg !6549

cond.false:                                       ; preds = %if.end926
  %947 = load i32, i32* %i, align 4, !dbg !6551
  %sub929 = sub nsw i32 %947, 1, !dbg !6553
  %idxprom930 = sext i32 %sub929 to i64, !dbg !6554
  %948 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6554
  %arrayidx931 = getelementptr inbounds %struct.anon, %struct.anon* %948, i64 %idxprom930, !dbg !6554
  %mby_start932 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx931, i32 0, i32 2, !dbg !6555
  %949 = load i32, i32* %mby_start932, align 8, !dbg !6555
  %950 = load i32, i32* %mb_height, align 4, !dbg !6556
  %rem = srem i32 %949, %950, !dbg !6557
  %cmp933 = icmp sgt i32 0, %rem, !dbg !6558
  br i1 %cmp933, label %cond.true935, label %cond.false936, !dbg !6559

cond.true935:                                     ; preds = %cond.false
  br label %cond.end, !dbg !6560

cond.false936:                                    ; preds = %cond.false
  %951 = load i32, i32* %i, align 4, !dbg !6562
  %sub937 = sub nsw i32 %951, 1, !dbg !6564
  %idxprom938 = sext i32 %sub937 to i64, !dbg !6565
  %952 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6565
  %arrayidx939 = getelementptr inbounds %struct.anon, %struct.anon* %952, i64 %idxprom938, !dbg !6565
  %mby_start940 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx939, i32 0, i32 2, !dbg !6566
  %953 = load i32, i32* %mby_start940, align 8, !dbg !6566
  %954 = load i32, i32* %mb_height, align 4, !dbg !6567
  %rem941 = srem i32 %953, %954, !dbg !6568
  br label %cond.end, !dbg !6569

cond.end:                                         ; preds = %cond.false936, %cond.true935
  %cond = phi i32 [ 0, %cond.true935 ], [ %rem941, %cond.false936 ], !dbg !6570
  br label %cond.end942, !dbg !6572

cond.end942:                                      ; preds = %cond.end, %cond.true
  %cond943 = phi i32 [ 0, %cond.true ], [ %cond, %cond.end ], !dbg !6573
  %955 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6575
  %start_mb_y = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %955, i32 0, i32 51, !dbg !6576
  store i32 %cond943, i32* %start_mb_y, align 8, !dbg !6577
  %956 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6578
  %field_mode944 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %956, i32 0, i32 150, !dbg !6580
  %957 = load i32, i32* %field_mode944, align 8, !dbg !6580
  %tobool945 = icmp ne i32 %957, 0, !dbg !6578
  br i1 %tobool945, label %lor.lhs.false946, label %if.then949, !dbg !6581

lor.lhs.false946:                                 ; preds = %cond.end942
  %958 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6582
  %second_field947 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %958, i32 0, i32 152, !dbg !6584
  %959 = load i32, i32* %second_field947, align 8, !dbg !6584
  %tobool948 = icmp ne i32 %959, 0, !dbg !6582
  br i1 %tobool948, label %if.then949, label %if.else970, !dbg !6585

if.then949:                                       ; preds = %lor.lhs.false946, %cond.end942
  %960 = load i32, i32* %i, align 4, !dbg !6586
  %961 = load i32, i32* %n_slices, align 4, !dbg !6587
  %cmp950 = icmp eq i32 %960, %961, !dbg !6588
  br i1 %cmp950, label %cond.true952, label %cond.false953, !dbg !6589

cond.true952:                                     ; preds = %if.then949
  %962 = load i32, i32* %mb_height, align 4, !dbg !6590
  br label %cond.end968, !dbg !6591

cond.false953:                                    ; preds = %if.then949
  %963 = load i32, i32* %mb_height, align 4, !dbg !6592
  %964 = load i32, i32* %i, align 4, !dbg !6594
  %idxprom954 = sext i32 %964 to i64, !dbg !6595
  %965 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6595
  %arrayidx955 = getelementptr inbounds %struct.anon, %struct.anon* %965, i64 %idxprom954, !dbg !6595
  %mby_start956 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx955, i32 0, i32 2, !dbg !6596
  %966 = load i32, i32* %mby_start956, align 8, !dbg !6596
  %967 = load i32, i32* %mb_height, align 4, !dbg !6597
  %rem957 = srem i32 %966, %967, !dbg !6598
  %cmp958 = icmp sgt i32 %963, %rem957, !dbg !6599
  br i1 %cmp958, label %cond.true960, label %cond.false965, !dbg !6600

cond.true960:                                     ; preds = %cond.false953
  %968 = load i32, i32* %i, align 4, !dbg !6601
  %idxprom961 = sext i32 %968 to i64, !dbg !6603
  %969 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6603
  %arrayidx962 = getelementptr inbounds %struct.anon, %struct.anon* %969, i64 %idxprom961, !dbg !6603
  %mby_start963 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx962, i32 0, i32 2, !dbg !6604
  %970 = load i32, i32* %mby_start963, align 8, !dbg !6604
  %971 = load i32, i32* %mb_height, align 4, !dbg !6605
  %rem964 = srem i32 %970, %971, !dbg !6606
  br label %cond.end966, !dbg !6607

cond.false965:                                    ; preds = %cond.false953
  %972 = load i32, i32* %mb_height, align 4, !dbg !6608
  br label %cond.end966, !dbg !6610

cond.end966:                                      ; preds = %cond.false965, %cond.true960
  %cond967 = phi i32 [ %rem964, %cond.true960 ], [ %972, %cond.false965 ], !dbg !6611
  br label %cond.end968, !dbg !6613

cond.end968:                                      ; preds = %cond.end966, %cond.true952
  %cond969 = phi i32 [ %962, %cond.true952 ], [ %cond967, %cond.end966 ], !dbg !6614
  %973 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6616
  %end_mb_y = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %973, i32 0, i32 52, !dbg !6617
  store i32 %cond969, i32* %end_mb_y, align 4, !dbg !6618
  br label %if.end999, !dbg !6616

if.else970:                                       ; preds = %lor.lhs.false946
  %974 = load i32, i32* %i, align 4, !dbg !6619
  %975 = load i32, i32* %n_slices, align 4, !dbg !6622
  %cmp971 = icmp sge i32 %974, %975, !dbg !6623
  br i1 %cmp971, label %if.then973, label %if.end976, !dbg !6624

if.then973:                                       ; preds = %if.else970
  %976 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6625
  %s974 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %976, i32 0, i32 0, !dbg !6627
  %avctx975 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s974, i32 0, i32 10, !dbg !6628
  %977 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx975, align 8, !dbg !6628
  %978 = bitcast %struct.AVCodecContext* %977 to i8*, !dbg !6625
  call void (i8*, i32, i8*, ...) @av_log(i8* %978, i32 16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29, i32 0, i32 0)), !dbg !6629
  br label %for.inc1035, !dbg !6630

if.end976:                                        ; preds = %if.else970
  %979 = load i32, i32* %i, align 4, !dbg !6631
  %980 = load i32, i32* %n_slices1, align 4, !dbg !6632
  %add977 = add nsw i32 %980, 1, !dbg !6633
  %cmp978 = icmp eq i32 %979, %add977, !dbg !6634
  br i1 %cmp978, label %cond.true980, label %cond.false981, !dbg !6635

cond.true980:                                     ; preds = %if.end976
  %981 = load i32, i32* %mb_height, align 4, !dbg !6636
  br label %cond.end996, !dbg !6638

cond.false981:                                    ; preds = %if.end976
  %982 = load i32, i32* %mb_height, align 4, !dbg !6639
  %983 = load i32, i32* %i, align 4, !dbg !6641
  %idxprom982 = sext i32 %983 to i64, !dbg !6642
  %984 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6642
  %arrayidx983 = getelementptr inbounds %struct.anon, %struct.anon* %984, i64 %idxprom982, !dbg !6642
  %mby_start984 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx983, i32 0, i32 2, !dbg !6643
  %985 = load i32, i32* %mby_start984, align 8, !dbg !6643
  %986 = load i32, i32* %mb_height, align 4, !dbg !6644
  %rem985 = srem i32 %985, %986, !dbg !6645
  %cmp986 = icmp sgt i32 %982, %rem985, !dbg !6646
  br i1 %cmp986, label %cond.true988, label %cond.false993, !dbg !6647

cond.true988:                                     ; preds = %cond.false981
  %987 = load i32, i32* %i, align 4, !dbg !6648
  %idxprom989 = sext i32 %987 to i64, !dbg !6650
  %988 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6650
  %arrayidx990 = getelementptr inbounds %struct.anon, %struct.anon* %988, i64 %idxprom989, !dbg !6650
  %mby_start991 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx990, i32 0, i32 2, !dbg !6651
  %989 = load i32, i32* %mby_start991, align 8, !dbg !6651
  %990 = load i32, i32* %mb_height, align 4, !dbg !6652
  %rem992 = srem i32 %989, %990, !dbg !6653
  br label %cond.end994, !dbg !6654

cond.false993:                                    ; preds = %cond.false981
  %991 = load i32, i32* %mb_height, align 4, !dbg !6655
  br label %cond.end994, !dbg !6657

cond.end994:                                      ; preds = %cond.false993, %cond.true988
  %cond995 = phi i32 [ %rem992, %cond.true988 ], [ %991, %cond.false993 ], !dbg !6658
  br label %cond.end996, !dbg !6660

cond.end996:                                      ; preds = %cond.end994, %cond.true980
  %cond997 = phi i32 [ %981, %cond.true980 ], [ %cond995, %cond.end994 ], !dbg !6661
  %992 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6663
  %end_mb_y998 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %992, i32 0, i32 52, !dbg !6664
  store i32 %cond997, i32* %end_mb_y998, align 4, !dbg !6665
  br label %if.end999

if.end999:                                        ; preds = %cond.end996, %cond.end968
  %993 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6666
  %end_mb_y1000 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %993, i32 0, i32 52, !dbg !6668
  %994 = load i32, i32* %end_mb_y1000, align 4, !dbg !6668
  %995 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6669
  %start_mb_y1001 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %995, i32 0, i32 51, !dbg !6670
  %996 = load i32, i32* %start_mb_y1001, align 8, !dbg !6670
  %cmp1002 = icmp sle i32 %994, %996, !dbg !6671
  br i1 %cmp1002, label %if.then1004, label %if.end1009, !dbg !6672

if.then1004:                                      ; preds = %if.end999
  %997 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6673
  %s1005 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %997, i32 0, i32 0, !dbg !6675
  %avctx1006 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s1005, i32 0, i32 10, !dbg !6676
  %998 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1006, align 8, !dbg !6676
  %999 = bitcast %struct.AVCodecContext* %998 to i8*, !dbg !6673
  %1000 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6677
  %end_mb_y1007 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1000, i32 0, i32 52, !dbg !6678
  %1001 = load i32, i32* %end_mb_y1007, align 4, !dbg !6678
  %1002 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6679
  %start_mb_y1008 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1002, i32 0, i32 51, !dbg !6680
  %1003 = load i32, i32* %start_mb_y1008, align 8, !dbg !6680
  call void (i8*, i32, i8*, ...) @av_log(i8* %999, i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i32 0, i32 0), i32 %1001, i32 %1003), !dbg !6681
  br label %for.inc1035, !dbg !6682

if.end1009:                                       ; preds = %if.end999
  %1004 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6683
  %pict_type1010 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1004, i32 0, i32 86, !dbg !6685
  %1005 = load i32, i32* %pict_type1010, align 4, !dbg !6685
  %cmp1011 = icmp eq i32 %1005, 2, !dbg !6686
  br i1 %cmp1011, label %land.lhs.true1013, label %lor.lhs.false1015, !dbg !6687

land.lhs.true1013:                                ; preds = %if.end1009
  %1006 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6688
  %p_frame_skipped = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1006, i32 0, i32 180, !dbg !6690
  %1007 = load i32, i32* %p_frame_skipped, align 8, !dbg !6690
  %tobool1014 = icmp ne i32 %1007, 0, !dbg !6688
  br i1 %tobool1014, label %lor.lhs.false1015, label %land.lhs.true1021, !dbg !6691

lor.lhs.false1015:                                ; preds = %land.lhs.true1013, %if.end1009
  %1008 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6692
  %pict_type1016 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1008, i32 0, i32 86, !dbg !6693
  %1009 = load i32, i32* %pict_type1016, align 4, !dbg !6693
  %cmp1017 = icmp eq i32 %1009, 3, !dbg !6694
  br i1 %cmp1017, label %land.lhs.true1019, label %if.end1026, !dbg !6695

land.lhs.true1019:                                ; preds = %lor.lhs.false1015
  %1010 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6696
  %bi_type = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1010, i32 0, i32 181, !dbg !6697
  %1011 = load i32, i32* %bi_type, align 4, !dbg !6697
  %tobool1020 = icmp ne i32 %1011, 0, !dbg !6696
  br i1 %tobool1020, label %if.end1026, label %land.lhs.true1021, !dbg !6698

land.lhs.true1021:                                ; preds = %land.lhs.true1019, %land.lhs.true1013
  %1012 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6699
  %cbpcy_vlc = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1012, i32 0, i32 78, !dbg !6700
  %1013 = load %struct.VLC*, %struct.VLC** %cbpcy_vlc, align 8, !dbg !6700
  %tobool1022 = icmp ne %struct.VLC* %1013, null, !dbg !6699
  br i1 %tobool1022, label %if.end1026, label %if.then1023, !dbg !6701

if.then1023:                                      ; preds = %land.lhs.true1021
  %1014 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6702
  %s1024 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1014, i32 0, i32 0, !dbg !6704
  %avctx1025 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s1024, i32 0, i32 10, !dbg !6705
  %1015 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1025, align 8, !dbg !6705
  %1016 = bitcast %struct.AVCodecContext* %1015 to i8*, !dbg !6702
  call void (i8*, i32, i8*, ...) @av_log(i8* %1016, i32 16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i32 0, i32 0)), !dbg !6706
  br label %for.inc1035, !dbg !6707

if.end1026:                                       ; preds = %land.lhs.true1021, %land.lhs.true1019, %lor.lhs.false1015
  %1017 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6708
  call void @ff_vc1_decode_blocks(%struct.VC1Context* %1017), !dbg !6709
  %1018 = load i32, i32* %i, align 4, !dbg !6710
  %1019 = load i32, i32* %n_slices, align 4, !dbg !6712
  %cmp1027 = icmp ne i32 %1018, %1019, !dbg !6713
  br i1 %cmp1027, label %if.then1029, label %if.end1034, !dbg !6714

if.then1029:                                      ; preds = %if.end1026
  %1020 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6715
  %gb1030 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1020, i32 0, i32 266, !dbg !6716
  %1021 = load i32, i32* %i, align 4, !dbg !6717
  %idxprom1031 = sext i32 %1021 to i64, !dbg !6718
  %1022 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6718
  %arrayidx1032 = getelementptr inbounds %struct.anon, %struct.anon* %1022, i64 %idxprom1031, !dbg !6718
  %gb1033 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx1032, i32 0, i32 1, !dbg !6719
  %1023 = bitcast %struct.GetBitContext* %gb1030 to i8*, !dbg !6719
  %1024 = bitcast %struct.GetBitContext* %gb1033 to i8*, !dbg !6719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1023, i8* %1024, i64 32, i32 8, i1 false), !dbg !6719
  br label %if.end1034, !dbg !6715

if.end1034:                                       ; preds = %if.then1029, %if.end1026
  br label %for.inc1035, !dbg !6720

for.inc1035:                                      ; preds = %if.end1034, %if.then1023, %if.then1004, %if.then973, %if.then925, %if.end918, %if.end899, %if.then850
  %1025 = load i32, i32* %i, align 4, !dbg !6721
  %inc1036 = add nsw i32 %1025, 1, !dbg !6721
  store i32 %inc1036, i32* %i, align 4, !dbg !6721
  br label %for.cond833, !dbg !6723, !llvm.loop !6724

for.end1037:                                      ; preds = %for.cond833
  %1026 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6726
  %field_mode1038 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1026, i32 0, i32 150, !dbg !6728
  %1027 = load i32, i32* %field_mode1038, align 8, !dbg !6728
  %tobool1039 = icmp ne i32 %1027, 0, !dbg !6726
  br i1 %tobool1039, label %if.then1040, label %if.end1093, !dbg !6729

if.then1040:                                      ; preds = %for.end1037
  %1028 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6730
  %second_field1041 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1028, i32 0, i32 152, !dbg !6732
  store i32 0, i32* %second_field1041, align 8, !dbg !6733
  %1029 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6734
  %current_picture1042 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1029, i32 0, i32 58, !dbg !6735
  %f1043 = getelementptr inbounds %struct.Picture, %struct.Picture* %current_picture1042, i32 0, i32 0, !dbg !6736
  %1030 = load %struct.AVFrame*, %struct.AVFrame** %f1043, align 8, !dbg !6736
  %linesize1044 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %1030, i32 0, i32 1, !dbg !6737
  %arrayidx1045 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize1044, i64 0, i64 0, !dbg !6734
  %1031 = load i32, i32* %arrayidx1045, align 8, !dbg !6738
  %shr1046 = ashr i32 %1031, 1, !dbg !6738
  store i32 %shr1046, i32* %arrayidx1045, align 8, !dbg !6738
  %1032 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6739
  %current_picture1047 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1032, i32 0, i32 58, !dbg !6740
  %f1048 = getelementptr inbounds %struct.Picture, %struct.Picture* %current_picture1047, i32 0, i32 0, !dbg !6741
  %1033 = load %struct.AVFrame*, %struct.AVFrame** %f1048, align 8, !dbg !6741
  %linesize1049 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %1033, i32 0, i32 1, !dbg !6742
  %arrayidx1050 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize1049, i64 0, i64 1, !dbg !6739
  %1034 = load i32, i32* %arrayidx1050, align 4, !dbg !6743
  %shr1051 = ashr i32 %1034, 1, !dbg !6743
  store i32 %shr1051, i32* %arrayidx1050, align 4, !dbg !6743
  %1035 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6744
  %current_picture1052 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1035, i32 0, i32 58, !dbg !6745
  %f1053 = getelementptr inbounds %struct.Picture, %struct.Picture* %current_picture1052, i32 0, i32 0, !dbg !6746
  %1036 = load %struct.AVFrame*, %struct.AVFrame** %f1053, align 8, !dbg !6746
  %linesize1054 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %1036, i32 0, i32 1, !dbg !6747
  %arrayidx1055 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize1054, i64 0, i64 2, !dbg !6744
  %1037 = load i32, i32* %arrayidx1055, align 8, !dbg !6748
  %shr1056 = ashr i32 %1037, 1, !dbg !6748
  store i32 %shr1056, i32* %arrayidx1055, align 8, !dbg !6748
  %1038 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6749
  %linesize1057 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1038, i32 0, i32 42, !dbg !6750
  %1039 = load i64, i64* %linesize1057, align 8, !dbg !6751
  %shr1058 = ashr i64 %1039, 1, !dbg !6751
  store i64 %shr1058, i64* %linesize1057, align 8, !dbg !6751
  %1040 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6752
  %uvlinesize1059 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1040, i32 0, i32 43, !dbg !6753
  %1041 = load i64, i64* %uvlinesize1059, align 8, !dbg !6754
  %shr1060 = ashr i64 %1041, 1, !dbg !6754
  store i64 %shr1060, i64* %uvlinesize1059, align 8, !dbg !6754
  %1042 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6755
  %s1061 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1042, i32 0, i32 0, !dbg !6757
  %pict_type1062 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s1061, i32 0, i32 86, !dbg !6758
  %1043 = load i32, i32* %pict_type1062, align 4, !dbg !6758
  %cmp1063 = icmp ne i32 %1043, 7, !dbg !6759
  br i1 %cmp1063, label %land.lhs.true1065, label %if.end1092, !dbg !6760

land.lhs.true1065:                                ; preds = %if.then1040
  %1044 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6761
  %s1066 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1044, i32 0, i32 0, !dbg !6763
  %pict_type1067 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s1066, i32 0, i32 86, !dbg !6764
  %1045 = load i32, i32* %pict_type1067, align 4, !dbg !6764
  %cmp1068 = icmp ne i32 %1045, 3, !dbg !6765
  br i1 %cmp1068, label %if.then1070, label %if.end1092, !dbg !6766

if.then1070:                                      ; preds = %land.lhs.true1065
  br label %do.body1071, !dbg !6767, !llvm.loop !6769

do.body1071:                                      ; preds = %if.then1070
  call void @llvm.dbg.declare(metadata i8** %SWAP_tmp, metadata !6770, metadata !3012), !dbg !6772
  %1046 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6773
  %mv_f = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1046, i32 0, i32 147, !dbg !6775
  %arrayidx1073 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f, i64 0, i64 0, !dbg !6773
  %1047 = load i8*, i8** %arrayidx1073, align 8, !dbg !6773
  store i8* %1047, i8** %SWAP_tmp, align 8, !dbg !6776
  %1048 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6777
  %mv_f_next = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1048, i32 0, i32 149, !dbg !6778
  %arrayidx1074 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f_next, i64 0, i64 0, !dbg !6777
  %1049 = load i8*, i8** %arrayidx1074, align 8, !dbg !6777
  %1050 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6779
  %mv_f1075 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1050, i32 0, i32 147, !dbg !6780
  %arrayidx1076 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f1075, i64 0, i64 0, !dbg !6779
  store i8* %1049, i8** %arrayidx1076, align 8, !dbg !6781
  %1051 = load i8*, i8** %SWAP_tmp, align 8, !dbg !6782
  %1052 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6783
  %mv_f_next1077 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1052, i32 0, i32 149, !dbg !6784
  %arrayidx1078 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f_next1077, i64 0, i64 0, !dbg !6783
  store i8* %1051, i8** %arrayidx1078, align 8, !dbg !6785
  br label %do.end1079, !dbg !6786

do.end1079:                                       ; preds = %do.body1071
  br label %do.body1080, !dbg !6787, !llvm.loop !6788

do.body1080:                                      ; preds = %do.end1079
  call void @llvm.dbg.declare(metadata i8** %SWAP_tmp1082, metadata !6789, metadata !3012), !dbg !6791
  %1053 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6792
  %mv_f1083 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1053, i32 0, i32 147, !dbg !6794
  %arrayidx1084 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f1083, i64 0, i64 1, !dbg !6792
  %1054 = load i8*, i8** %arrayidx1084, align 8, !dbg !6792
  store i8* %1054, i8** %SWAP_tmp1082, align 8, !dbg !6795
  %1055 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6796
  %mv_f_next1085 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1055, i32 0, i32 149, !dbg !6797
  %arrayidx1086 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f_next1085, i64 0, i64 1, !dbg !6796
  %1056 = load i8*, i8** %arrayidx1086, align 8, !dbg !6796
  %1057 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6798
  %mv_f1087 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1057, i32 0, i32 147, !dbg !6799
  %arrayidx1088 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f1087, i64 0, i64 1, !dbg !6798
  store i8* %1056, i8** %arrayidx1088, align 8, !dbg !6800
  %1058 = load i8*, i8** %SWAP_tmp1082, align 8, !dbg !6801
  %1059 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6802
  %mv_f_next1089 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1059, i32 0, i32 149, !dbg !6803
  %arrayidx1090 = getelementptr inbounds [2 x i8*], [2 x i8*]* %mv_f_next1089, i64 0, i64 1, !dbg !6802
  store i8* %1058, i8** %arrayidx1090, align 8, !dbg !6804
  br label %do.end1091, !dbg !6805

do.end1091:                                       ; preds = %do.body1080
  br label %if.end1092, !dbg !6806

if.end1092:                                       ; preds = %do.end1091, %land.lhs.true1065, %if.then1040
  br label %if.end1093, !dbg !6807

if.end1093:                                       ; preds = %if.end1092, %for.end1037
  br label %do.body1094, !dbg !6808, !llvm.loop !6809

do.body1094:                                      ; preds = %if.end1093
  br label %do.end1095, !dbg !6810

do.end1095:                                       ; preds = %do.body1094
  %1060 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6813
  %er = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1060, i32 0, i32 335, !dbg !6815
  %error_occurred = getelementptr inbounds %struct.ERContext, %struct.ERContext* %er, i32 0, i32 10, !dbg !6816
  %1061 = load i32, i32* %error_occurred, align 4, !dbg !6816
  %tobool1096 = icmp ne i32 %1061, 0, !dbg !6813
  br i1 %tobool1096, label %land.lhs.true1097, label %if.end1102, !dbg !6817

land.lhs.true1097:                                ; preds = %do.end1095
  %1062 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6818
  %pict_type1098 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1062, i32 0, i32 86, !dbg !6820
  %1063 = load i32, i32* %pict_type1098, align 4, !dbg !6820
  %cmp1099 = icmp eq i32 %1063, 3, !dbg !6821
  br i1 %cmp1099, label %if.then1101, label %if.end1102, !dbg !6822

if.then1101:                                      ; preds = %land.lhs.true1097
  store i32 -1094995529, i32* %ret, align 4, !dbg !6823
  br label %err, !dbg !6825

if.end1102:                                       ; preds = %land.lhs.true1097, %do.end1095
  %1064 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6826
  %field_mode1103 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1064, i32 0, i32 150, !dbg !6828
  %1065 = load i32, i32* %field_mode1103, align 8, !dbg !6828
  %tobool1104 = icmp ne i32 %1065, 0, !dbg !6826
  br i1 %tobool1104, label %if.end1107, label %if.then1105, !dbg !6829

if.then1105:                                      ; preds = %if.end1102
  %1066 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6830
  %er1106 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1066, i32 0, i32 335, !dbg !6831
  call void @ff_er_frame_end(%struct.ERContext* %er1106), !dbg !6832
  br label %if.end1107, !dbg !6832

if.end1107:                                       ; preds = %if.then1105, %if.end1102
  br label %if.end1108

if.end1108:                                       ; preds = %if.end1107, %if.end801
  %1067 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6833
  call void @ff_mpv_frame_end(%struct.MpegEncContext* %1067), !dbg !6834
  %1068 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6835
  %codec_id1109 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1068, i32 0, i32 4, !dbg !6837
  %1069 = load i32, i32* %codec_id1109, align 8, !dbg !6837
  %cmp1110 = icmp eq i32 %1069, 150, !dbg !6838
  br i1 %cmp1110, label %if.then1116, label %lor.lhs.false1112, !dbg !6839

lor.lhs.false1112:                                ; preds = %if.end1108
  %1070 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6840
  %codec_id1113 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1070, i32 0, i32 4, !dbg !6842
  %1071 = load i32, i32* %codec_id1113, align 8, !dbg !6842
  %cmp1114 = icmp eq i32 %1071, 151, !dbg !6843
  br i1 %cmp1114, label %if.then1116, label %if.else1137, !dbg !6844

if.then1116:                                      ; preds = %lor.lhs.false1112, %if.end1108
  br label %image, !dbg !6845

image:                                            ; preds = %if.then1116, %if.else279
  %1072 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6847
  %output_width = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1072, i32 0, i32 175, !dbg !6849
  %1073 = load i32, i32* %output_width, align 8, !dbg !6849
  %1074 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6850
  %coded_width1117 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1074, i32 0, i32 22, !dbg !6851
  store i32 %1073, i32* %coded_width1117, align 4, !dbg !6852
  %1075 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6853
  %width1118 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1075, i32 0, i32 20, !dbg !6854
  store i32 %1073, i32* %width1118, align 4, !dbg !6855
  %1076 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6856
  %output_height = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1076, i32 0, i32 176, !dbg !6857
  %1077 = load i32, i32* %output_height, align 4, !dbg !6857
  %1078 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6858
  %coded_height1119 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1078, i32 0, i32 23, !dbg !6859
  store i32 %1077, i32* %coded_height1119, align 8, !dbg !6860
  %1079 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6861
  %height1120 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1079, i32 0, i32 21, !dbg !6862
  store i32 %1077, i32* %height1120, align 8, !dbg !6863
  %1080 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6864
  %skip_frame1121 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1080, i32 0, i32 157, !dbg !6866
  %1081 = load i32, i32* %skip_frame1121, align 4, !dbg !6866
  %cmp1122 = icmp sge i32 %1081, 8, !dbg !6867
  br i1 %cmp1122, label %if.then1124, label %if.end1125, !dbg !6868

if.then1124:                                      ; preds = %image
  br label %end1168, !dbg !6869

if.end1125:                                       ; preds = %image
  %1082 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6870
  %1083 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6872
  %gb1126 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1083, i32 0, i32 266, !dbg !6873
  %call1127 = call i32 @vc1_decode_sprites(%struct.VC1Context* %1082, %struct.GetBitContext* %gb1126), !dbg !6874
  store i32 %call1127, i32* %ret, align 4, !dbg !6875
  %cmp1128 = icmp slt i32 %call1127, 0, !dbg !6876
  br i1 %cmp1128, label %if.then1130, label %if.end1131, !dbg !6877

if.then1130:                                      ; preds = %if.end1125
  br label %err, !dbg !6878

if.end1131:                                       ; preds = %if.end1125
  %1084 = load %struct.AVFrame*, %struct.AVFrame** %pict, align 8, !dbg !6879
  %1085 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !6881
  %sprite_output_frame = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1085, i32 0, i32 174, !dbg !6882
  %1086 = load %struct.AVFrame*, %struct.AVFrame** %sprite_output_frame, align 8, !dbg !6882
  %call1132 = call i32 @av_frame_ref(%struct.AVFrame* %1084, %struct.AVFrame* %1086), !dbg !6883
  store i32 %call1132, i32* %ret, align 4, !dbg !6884
  %cmp1133 = icmp slt i32 %call1132, 0, !dbg !6885
  br i1 %cmp1133, label %if.then1135, label %if.end1136, !dbg !6886

if.then1135:                                      ; preds = %if.end1131
  br label %err, !dbg !6887

if.end1136:                                       ; preds = %if.end1131
  %1087 = load i32*, i32** %got_frame.addr, align 8, !dbg !6888
  store i32 1, i32* %1087, align 4, !dbg !6889
  br label %if.end1167, !dbg !6890

if.else1137:                                      ; preds = %lor.lhs.false1112
  %1088 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6891
  %pict_type1138 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1088, i32 0, i32 86, !dbg !6894
  %1089 = load i32, i32* %pict_type1138, align 4, !dbg !6894
  %cmp1139 = icmp eq i32 %1089, 3, !dbg !6895
  br i1 %cmp1139, label %if.then1144, label %lor.lhs.false1141, !dbg !6896

lor.lhs.false1141:                                ; preds = %if.else1137
  %1090 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6897
  %low_delay1142 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1090, i32 0, i32 235, !dbg !6899
  %1091 = load i32, i32* %low_delay1142, align 8, !dbg !6899
  %tobool1143 = icmp ne i32 %1091, 0, !dbg !6897
  br i1 %tobool1143, label %if.then1144, label %if.else1153, !dbg !6900

if.then1144:                                      ; preds = %lor.lhs.false1141, %if.else1137
  %1092 = load %struct.AVFrame*, %struct.AVFrame** %pict, align 8, !dbg !6901
  %1093 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6904
  %current_picture_ptr1145 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1093, i32 0, i32 61, !dbg !6905
  %1094 = load %struct.Picture*, %struct.Picture** %current_picture_ptr1145, align 8, !dbg !6905
  %f1146 = getelementptr inbounds %struct.Picture, %struct.Picture* %1094, i32 0, i32 0, !dbg !6906
  %1095 = load %struct.AVFrame*, %struct.AVFrame** %f1146, align 8, !dbg !6906
  %call1147 = call i32 @av_frame_ref(%struct.AVFrame* %1092, %struct.AVFrame* %1095), !dbg !6907
  store i32 %call1147, i32* %ret, align 4, !dbg !6908
  %cmp1148 = icmp slt i32 %call1147, 0, !dbg !6909
  br i1 %cmp1148, label %if.then1150, label %if.end1151, !dbg !6910

if.then1150:                                      ; preds = %if.then1144
  br label %err, !dbg !6911

if.end1151:                                       ; preds = %if.then1144
  %1096 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6912
  %1097 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6913
  %current_picture_ptr1152 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1097, i32 0, i32 61, !dbg !6914
  %1098 = load %struct.Picture*, %struct.Picture** %current_picture_ptr1152, align 8, !dbg !6914
  %1099 = load %struct.AVFrame*, %struct.AVFrame** %pict, align 8, !dbg !6915
  call void @ff_print_debug_info(%struct.MpegEncContext* %1096, %struct.Picture* %1098, %struct.AVFrame* %1099), !dbg !6916
  %1100 = load i32*, i32** %got_frame.addr, align 8, !dbg !6917
  store i32 1, i32* %1100, align 4, !dbg !6918
  br label %if.end1166, !dbg !6919

if.else1153:                                      ; preds = %lor.lhs.false1141
  %1101 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6920
  %last_picture_ptr1154 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1101, i32 0, i32 59, !dbg !6923
  %1102 = load %struct.Picture*, %struct.Picture** %last_picture_ptr1154, align 8, !dbg !6923
  %tobool1155 = icmp ne %struct.Picture* %1102, null, !dbg !6920
  br i1 %tobool1155, label %if.then1156, label %if.end1165, !dbg !6920

if.then1156:                                      ; preds = %if.else1153
  %1103 = load %struct.AVFrame*, %struct.AVFrame** %pict, align 8, !dbg !6924
  %1104 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6927
  %last_picture_ptr1157 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1104, i32 0, i32 59, !dbg !6928
  %1105 = load %struct.Picture*, %struct.Picture** %last_picture_ptr1157, align 8, !dbg !6928
  %f1158 = getelementptr inbounds %struct.Picture, %struct.Picture* %1105, i32 0, i32 0, !dbg !6929
  %1106 = load %struct.AVFrame*, %struct.AVFrame** %f1158, align 8, !dbg !6929
  %call1159 = call i32 @av_frame_ref(%struct.AVFrame* %1103, %struct.AVFrame* %1106), !dbg !6930
  store i32 %call1159, i32* %ret, align 4, !dbg !6931
  %cmp1160 = icmp slt i32 %call1159, 0, !dbg !6932
  br i1 %cmp1160, label %if.then1162, label %if.end1163, !dbg !6933

if.then1162:                                      ; preds = %if.then1156
  br label %err, !dbg !6934

if.end1163:                                       ; preds = %if.then1156
  %1107 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6935
  %1108 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !6936
  %last_picture_ptr1164 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1108, i32 0, i32 59, !dbg !6937
  %1109 = load %struct.Picture*, %struct.Picture** %last_picture_ptr1164, align 8, !dbg !6937
  %1110 = load %struct.AVFrame*, %struct.AVFrame** %pict, align 8, !dbg !6938
  call void @ff_print_debug_info(%struct.MpegEncContext* %1107, %struct.Picture* %1109, %struct.AVFrame* %1110), !dbg !6939
  %1111 = load i32*, i32** %got_frame.addr, align 8, !dbg !6940
  store i32 1, i32* %1111, align 4, !dbg !6941
  br label %if.end1165, !dbg !6942

if.end1165:                                       ; preds = %if.end1163, %if.else1153
  br label %if.end1166

if.end1166:                                       ; preds = %if.end1165, %if.end1151
  br label %if.end1167

if.end1167:                                       ; preds = %if.end1166, %if.end1136
  br label %end1168, !dbg !6943

end1168:                                          ; preds = %if.end1167, %if.then1124, %if.then424, %if.then417, %if.then395
  %1112 = load i8*, i8** %buf2, align 8, !dbg !6945
  call void @av_free(i8* %1112), !dbg !6946
  store i32 0, i32* %i, align 4, !dbg !6947
  br label %for.cond1169, !dbg !6949

for.cond1169:                                     ; preds = %for.inc1176, %end1168
  %1113 = load i32, i32* %i, align 4, !dbg !6950
  %1114 = load i32, i32* %n_slices, align 4, !dbg !6953
  %cmp1170 = icmp slt i32 %1113, %1114, !dbg !6954
  br i1 %cmp1170, label %for.body1172, label %for.end1178, !dbg !6955

for.body1172:                                     ; preds = %for.cond1169
  %1115 = load i32, i32* %i, align 4, !dbg !6956
  %idxprom1173 = sext i32 %1115 to i64, !dbg !6957
  %1116 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6957
  %arrayidx1174 = getelementptr inbounds %struct.anon, %struct.anon* %1116, i64 %idxprom1173, !dbg !6957
  %buf1175 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx1174, i32 0, i32 0, !dbg !6958
  %1117 = load i8*, i8** %buf1175, align 8, !dbg !6958
  call void @av_free(i8* %1117), !dbg !6959
  br label %for.inc1176, !dbg !6959

for.inc1176:                                      ; preds = %for.body1172
  %1118 = load i32, i32* %i, align 4, !dbg !6960
  %inc1177 = add nsw i32 %1118, 1, !dbg !6960
  store i32 %inc1177, i32* %i, align 4, !dbg !6960
  br label %for.cond1169, !dbg !6962, !llvm.loop !6963

for.end1178:                                      ; preds = %for.cond1169
  %1119 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6965
  %1120 = bitcast %struct.anon* %1119 to i8*, !dbg !6965
  call void @av_free(i8* %1120), !dbg !6966
  %1121 = load i32, i32* %buf_size, align 4, !dbg !6967
  store i32 %1121, i32* %retval, align 4, !dbg !6968
  br label %return, !dbg !6968

err:                                              ; preds = %if.then1162, %if.then1150, %if.then1135, %if.then1130, %if.then1101, %if.then917, %if.then898, %if.then799, %if.then788, %if.then773, %if.then743, %if.then729, %if.then713, %if.then698, %if.then687, %if.then672, %if.then641, %if.then625, %if.then608, %if.then589, %if.then567, %if.then557, %if.then542, %if.then512, %if.then498, %if.then485, %if.then432, %if.then376, %if.then368, %if.then345, %if.then338, %if.then324, %if.then308, %if.then303, %if.then200, %if.then188, %if.then178, %if.then125, %if.then113, %if.then77, %if.then67
  %1122 = load i8*, i8** %buf2, align 8, !dbg !6969
  call void @av_free(i8* %1122), !dbg !6970
  store i32 0, i32* %i, align 4, !dbg !6971
  br label %for.cond1179, !dbg !6973

for.cond1179:                                     ; preds = %for.inc1186, %err
  %1123 = load i32, i32* %i, align 4, !dbg !6974
  %1124 = load i32, i32* %n_slices, align 4, !dbg !6977
  %cmp1180 = icmp slt i32 %1123, %1124, !dbg !6978
  br i1 %cmp1180, label %for.body1182, label %for.end1188, !dbg !6979

for.body1182:                                     ; preds = %for.cond1179
  %1125 = load i32, i32* %i, align 4, !dbg !6980
  %idxprom1183 = sext i32 %1125 to i64, !dbg !6981
  %1126 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6981
  %arrayidx1184 = getelementptr inbounds %struct.anon, %struct.anon* %1126, i64 %idxprom1183, !dbg !6981
  %buf1185 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx1184, i32 0, i32 0, !dbg !6982
  %1127 = load i8*, i8** %buf1185, align 8, !dbg !6982
  call void @av_free(i8* %1127), !dbg !6983
  br label %for.inc1186, !dbg !6983

for.inc1186:                                      ; preds = %for.body1182
  %1128 = load i32, i32* %i, align 4, !dbg !6984
  %inc1187 = add nsw i32 %1128, 1, !dbg !6984
  store i32 %inc1187, i32* %i, align 4, !dbg !6984
  br label %for.cond1179, !dbg !6986, !llvm.loop !6987

for.end1188:                                      ; preds = %for.cond1179
  %1129 = load %struct.anon*, %struct.anon** %slices, align 8, !dbg !6989
  %1130 = bitcast %struct.anon* %1129 to i8*, !dbg !6989
  call void @av_free(i8* %1130), !dbg !6990
  %1131 = load i32, i32* %ret, align 4, !dbg !6991
  store i32 %1131, i32* %retval, align 4, !dbg !6992
  br label %return, !dbg !6992

return:                                           ; preds = %for.end1188, %for.end1178, %if.then28, %if.end18, %if.then15
  %1132 = load i32, i32* %retval, align 4, !dbg !6993
  ret i32 %1132, !dbg !6993
}

declare void @ff_mpeg_flush(%struct.AVCodecContext*) #2

; Function Attrs: nounwind uwtable
define internal void @vc1_sprite_flush(%struct.AVCodecContext* %avctx) #3 !dbg !6994 {
entry:
  %avctx.addr = alloca %struct.AVCodecContext*, align 8
  %v = alloca %struct.VC1Context*, align 8
  %s = alloca %struct.MpegEncContext*, align 8
  %f = alloca %struct.AVFrame*, align 8
  %plane = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.AVCodecContext* %avctx, %struct.AVCodecContext** %avctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx.addr, metadata !6995, metadata !3012), !dbg !6996
  call void @llvm.dbg.declare(metadata %struct.VC1Context** %v, metadata !6997, metadata !3012), !dbg !6998
  %0 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx.addr, align 8, !dbg !6999
  %priv_data = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %0, i32 0, i32 6, !dbg !7000
  %1 = load i8*, i8** %priv_data, align 8, !dbg !7000
  %2 = bitcast i8* %1 to %struct.VC1Context*, !dbg !6999
  store %struct.VC1Context* %2, %struct.VC1Context** %v, align 8, !dbg !6998
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s, metadata !7001, metadata !3012), !dbg !7002
  %3 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !7003
  %s1 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %3, i32 0, i32 0, !dbg !7004
  store %struct.MpegEncContext* %s1, %struct.MpegEncContext** %s, align 8, !dbg !7002
  call void @llvm.dbg.declare(metadata %struct.AVFrame** %f, metadata !7005, metadata !3012), !dbg !7006
  %4 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !7007
  %current_picture = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %4, i32 0, i32 58, !dbg !7008
  %f2 = getelementptr inbounds %struct.Picture, %struct.Picture* %current_picture, i32 0, i32 0, !dbg !7009
  %5 = load %struct.AVFrame*, %struct.AVFrame** %f2, align 8, !dbg !7009
  store %struct.AVFrame* %5, %struct.AVFrame** %f, align 8, !dbg !7006
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !7010, metadata !3012), !dbg !7011
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7012, metadata !3012), !dbg !7013
  %6 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !7014
  %tobool = icmp ne %struct.AVFrame* %6, null, !dbg !7014
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7016

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !7017
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %7, i32 0, i32 0, !dbg !7019
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !7017
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !7017
  %tobool3 = icmp ne i8* %8, null, !dbg !7017
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7020

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %plane, align 4, !dbg !7021
  br label %for.cond, !dbg !7023

for.cond:                                         ; preds = %for.inc17, %if.then
  %9 = load i32, i32* %plane, align 4, !dbg !7024
  %cmp = icmp slt i32 %9, 3, !dbg !7027
  br i1 %cmp, label %for.body, label %for.end19, !dbg !7028

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7029
  br label %for.cond4, !dbg !7031

for.cond4:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !7032
  %11 = load %struct.VC1Context*, %struct.VC1Context** %v, align 8, !dbg !7035
  %sprite_height = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %11, i32 0, i32 178, !dbg !7036
  %12 = load i32, i32* %sprite_height, align 4, !dbg !7036
  %13 = load i32, i32* %plane, align 4, !dbg !7037
  %tobool5 = icmp ne i32 %13, 0, !dbg !7038
  %lnot = xor i1 %tobool5, true, !dbg !7038
  %lnot6 = xor i1 %lnot, true, !dbg !7039
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !7039
  %shr = ashr i32 %12, %lnot.ext, !dbg !7040
  %cmp7 = icmp slt i32 %10, %shr, !dbg !7041
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !7042

for.body8:                                        ; preds = %for.cond4
  %14 = load i32, i32* %plane, align 4, !dbg !7043
  %idxprom = sext i32 %14 to i64, !dbg !7044
  %15 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !7044
  %data9 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %15, i32 0, i32 0, !dbg !7045
  %arrayidx10 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data9, i64 0, i64 %idxprom, !dbg !7044
  %16 = load i8*, i8** %arrayidx10, align 8, !dbg !7044
  %17 = load i32, i32* %i, align 4, !dbg !7046
  %18 = load i32, i32* %plane, align 4, !dbg !7047
  %idxprom11 = sext i32 %18 to i64, !dbg !7048
  %19 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !7048
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %19, i32 0, i32 1, !dbg !7049
  %arrayidx12 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom11, !dbg !7048
  %20 = load i32, i32* %arrayidx12, align 4, !dbg !7048
  %mul = mul nsw i32 %17, %20, !dbg !7050
  %idx.ext = sext i32 %mul to i64, !dbg !7051
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %idx.ext, !dbg !7051
  %21 = load i32, i32* %plane, align 4, !dbg !7052
  %tobool13 = icmp ne i32 %21, 0, !dbg !7052
  %cond = select i1 %tobool13, i32 128, i32 0, !dbg !7052
  %22 = trunc i32 %cond to i8, !dbg !7053
  %23 = load i32, i32* %plane, align 4, !dbg !7054
  %idxprom14 = sext i32 %23 to i64, !dbg !7055
  %24 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !7055
  %linesize15 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %24, i32 0, i32 1, !dbg !7056
  %arrayidx16 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize15, i64 0, i64 %idxprom14, !dbg !7055
  %25 = load i32, i32* %arrayidx16, align 4, !dbg !7055
  %conv = sext i32 %25 to i64, !dbg !7055
  call void @llvm.memset.p0i8.i64(i8* %add.ptr, i8 %22, i64 %conv, i32 1, i1 false), !dbg !7053
  br label %for.inc, !dbg !7053

for.inc:                                          ; preds = %for.body8
  %26 = load i32, i32* %i, align 4, !dbg !7057
  %inc = add nsw i32 %26, 1, !dbg !7057
  store i32 %inc, i32* %i, align 4, !dbg !7057
  br label %for.cond4, !dbg !7059, !llvm.loop !7060

for.end:                                          ; preds = %for.cond4
  br label %for.inc17, !dbg !7062

for.inc17:                                        ; preds = %for.end
  %27 = load i32, i32* %plane, align 4, !dbg !7064
  %inc18 = add nsw i32 %27, 1, !dbg !7064
  store i32 %inc18, i32* %plane, align 4, !dbg !7064
  br label %for.cond, !dbg !7066, !llvm.loop !7067

for.end19:                                        ; preds = %for.cond
  br label %if.end, !dbg !7069

if.end:                                           ; preds = %for.end19, %land.lhs.true, %entry
  ret void, !dbg !7071
}

declare i32 @ff_vc1_init_common(%struct.VC1Context*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_get_bits(%struct.GetBitContext* %s, i8* %buffer, i32 %bit_size) #4 !dbg !7072 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %buffer.addr = alloca i8*, align 8
  %bit_size.addr = alloca i32, align 4
  %buffer_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7075, metadata !3012), !dbg !7076
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7077, metadata !3012), !dbg !7078
  store i32 %bit_size, i32* %bit_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_size.addr, metadata !7079, metadata !3012), !dbg !7080
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !7081, metadata !3012), !dbg !7082
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7083, metadata !3012), !dbg !7084
  store i32 0, i32* %ret, align 4, !dbg !7084
  %0 = load i32, i32* %bit_size.addr, align 4, !dbg !7085
  %cmp = icmp sge i32 %0, 2147483135, !dbg !7087
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7088

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %bit_size.addr, align 4, !dbg !7089
  %cmp1 = icmp slt i32 %1, 0, !dbg !7091
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !7092

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !7093
  %tobool = icmp ne i8* %2, null, !dbg !7093
  br i1 %tobool, label %if.end, label %if.then, !dbg !7095

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %bit_size.addr, align 4, !dbg !7096
  store i8* null, i8** %buffer.addr, align 8, !dbg !7098
  store i32 -1094995529, i32* %ret, align 4, !dbg !7099
  br label %if.end, !dbg !7100

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* %bit_size.addr, align 4, !dbg !7101
  %add = add nsw i32 %3, 7, !dbg !7102
  %shr = ashr i32 %add, 3, !dbg !7103
  store i32 %shr, i32* %buffer_size, align 4, !dbg !7104
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !7105
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7106
  %buffer3 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %5, i32 0, i32 0, !dbg !7107
  store i8* %4, i8** %buffer3, align 8, !dbg !7108
  %6 = load i32, i32* %bit_size.addr, align 4, !dbg !7109
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7110
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %7, i32 0, i32 3, !dbg !7111
  store i32 %6, i32* %size_in_bits, align 4, !dbg !7112
  %8 = load i32, i32* %bit_size.addr, align 4, !dbg !7113
  %add4 = add nsw i32 %8, 8, !dbg !7114
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7115
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 4, !dbg !7116
  store i32 %add4, i32* %size_in_bits_plus8, align 8, !dbg !7117
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !7118
  %11 = load i32, i32* %buffer_size, align 4, !dbg !7119
  %idx.ext = sext i32 %11 to i64, !dbg !7120
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !7120
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7121
  %buffer_end = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %12, i32 0, i32 1, !dbg !7122
  store i8* %add.ptr, i8** %buffer_end, align 8, !dbg !7123
  %13 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7124
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %13, i32 0, i32 2, !dbg !7125
  store i32 0, i32* %index, align 8, !dbg !7126
  %14 = load i32, i32* %ret, align 4, !dbg !7127
  ret i32 %14, !dbg !7128
}

declare i32 @ff_vc1_decode_sequence_header(%struct.AVCodecContext*, %struct.VC1Context*, %struct.GetBitContext*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_count(%struct.GetBitContext* %s) #4 !dbg !7129 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7134, metadata !3012), !dbg !7135
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7136
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7137
  %1 = load i32, i32* %index, align 8, !dbg !7137
  ret i32 %1, !dbg !7138
}

declare void @av_log(i8*, i32, i8*, ...) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits_long(%struct.GetBitContext* %s, i32 %n) #4 !dbg !7139 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7142, metadata !3012), !dbg !7143
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7144, metadata !3012), !dbg !7145
  %0 = load i32, i32* %n.addr, align 4, !dbg !7146
  %tobool = icmp ne i32 %0, 0, !dbg !7146
  br i1 %tobool, label %if.else, label %if.then, !dbg !7148

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7149
  br label %return, !dbg !7149

if.else:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !7151
  %cmp = icmp sle i32 %1, 25, !dbg !7153
  br i1 %cmp, label %if.then1, label %if.else2, !dbg !7154

if.then1:                                         ; preds = %if.else
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7155
  %3 = load i32, i32* %n.addr, align 4, !dbg !7157
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 %3), !dbg !7158
  store i32 %call, i32* %retval, align 4, !dbg !7159
  br label %return, !dbg !7159

if.else2:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7160, metadata !3012), !dbg !7162
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7163
  %call3 = call i32 @get_bits(%struct.GetBitContext* %4, i32 16), !dbg !7164
  %5 = load i32, i32* %n.addr, align 4, !dbg !7165
  %sub = sub nsw i32 %5, 16, !dbg !7166
  %shl = shl i32 %call3, %sub, !dbg !7167
  store i32 %shl, i32* %ret, align 4, !dbg !7162
  %6 = load i32, i32* %ret, align 4, !dbg !7168
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7169
  %8 = load i32, i32* %n.addr, align 4, !dbg !7170
  %sub4 = sub nsw i32 %8, 16, !dbg !7171
  %call5 = call i32 @get_bits(%struct.GetBitContext* %7, i32 %sub4), !dbg !7172
  %or = or i32 %6, %call5, !dbg !7173
  store i32 %or, i32* %retval, align 4, !dbg !7174
  br label %return, !dbg !7174

return:                                           ; preds = %if.else2, %if.then1, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7175
  ret i32 %9, !dbg !7175
}

declare void @av_free(i8*) #2

declare i32 @ff_vc1_decode_entry_point(%struct.AVCodecContext*, %struct.VC1Context*, %struct.GetBitContext*) #2

declare i32 @ff_get_format(%struct.AVCodecContext*, i32*) #2

declare i32 @ff_msmpeg4_decode_init(%struct.AVCodecContext*) #2

declare void @ff_blockdsp_init(%struct.BlockDSPContext*, %struct.AVCodecContext*) #2

declare void @ff_h264chroma_init(%struct.H264ChromaContext*, i32) #2

declare void @ff_qpeldsp_init(%struct.QpelDSPContext*) #2

declare %struct.AVFrame* @av_frame_alloc() #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

declare void @avpriv_request_sample(i8*, i8*, ...) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !7176 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !3678, metadata !3012), !dbg !7177
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7179, metadata !3012), !dbg !7180
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !7181, metadata !3012), !dbg !7182
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !7183, metadata !3012), !dbg !7184
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !7185, metadata !3012), !dbg !7186
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7187
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7188
  %1 = load i32, i32* %index, align 8, !dbg !7188
  store i32 %1, i32* %re_index, align 4, !dbg !7186
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !7189, metadata !3012), !dbg !7190
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !7191, metadata !3012), !dbg !7192
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7193
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !7194
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7194
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !7192
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7195
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %4, i32 0, i32 0, !dbg !7196
  %5 = load i8*, i8** %buffer, align 8, !dbg !7196
  %6 = load i32, i32* %re_index, align 4, !dbg !7197
  %shr = lshr i32 %6, 3, !dbg !7198
  %idx.ext = zext i32 %shr to i64, !dbg !7199
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext, !dbg !7199
  %7 = bitcast i8* %add.ptr to %union.unaligned_32*, !dbg !7200
  %l = bitcast %union.unaligned_32* %7 to i32*, !dbg !7200
  %8 = load i32, i32* %l, align 1, !dbg !7200
  store i32 %8, i32* %x.addr.i, align 4, !dbg !7201
  %9 = load i32, i32* %x.addr.i, align 4, !dbg !7202
  %shl.i = shl i32 %9, 8, !dbg !7203
  %and.i = and i32 %shl.i, 65280, !dbg !7204
  %10 = load i32, i32* %x.addr.i, align 4, !dbg !7205
  %shr.i = lshr i32 %10, 8, !dbg !7206
  %and1.i = and i32 %shr.i, 255, !dbg !7207
  %or.i = or i32 %and.i, %and1.i, !dbg !7208
  %shl2.i = shl i32 %or.i, 16, !dbg !7209
  %11 = load i32, i32* %x.addr.i, align 4, !dbg !7210
  %shr3.i = lshr i32 %11, 16, !dbg !7211
  %shl4.i = shl i32 %shr3.i, 8, !dbg !7212
  %and5.i = and i32 %shl4.i, 65280, !dbg !7213
  %12 = load i32, i32* %x.addr.i, align 4, !dbg !7214
  %shr6.i = lshr i32 %12, 16, !dbg !7215
  %shr7.i = lshr i32 %shr6.i, 8, !dbg !7216
  %and8.i = and i32 %shr7.i, 255, !dbg !7217
  %or9.i = or i32 %and5.i, %and8.i, !dbg !7218
  %or10.i = or i32 %shl2.i, %or9.i, !dbg !7219
  %13 = load i32, i32* %re_index, align 4, !dbg !7220
  %and = and i32 %13, 7, !dbg !7221
  %shl = shl i32 %or10.i, %and, !dbg !7222
  store i32 %shl, i32* %re_cache, align 4, !dbg !7223
  %14 = load i32, i32* %re_cache, align 4, !dbg !7224
  %15 = load i32, i32* %n.addr, align 4, !dbg !7225
  %conv = trunc i32 %15 to i8, !dbg !7225
  %call4 = call i32 @NEG_USR32(i32 %14, i8 signext %conv), !dbg !7226
  store i32 %call4, i32* %tmp, align 4, !dbg !7227
  %16 = load i32, i32* %re_size_plus8, align 4, !dbg !7228
  %17 = load i32, i32* %re_index, align 4, !dbg !7229
  %18 = load i32, i32* %n.addr, align 4, !dbg !7230
  %add = add i32 %17, %18, !dbg !7231
  %cmp = icmp ugt i32 %16, %add, !dbg !7232
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7233

cond.true:                                        ; preds = %entry
  %19 = load i32, i32* %re_index, align 4, !dbg !7234
  %20 = load i32, i32* %n.addr, align 4, !dbg !7236
  %add6 = add i32 %19, %20, !dbg !7237
  br label %cond.end, !dbg !7238

cond.false:                                       ; preds = %entry
  %21 = load i32, i32* %re_size_plus8, align 4, !dbg !7239
  br label %cond.end, !dbg !7241

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add6, %cond.true ], [ %21, %cond.false ], !dbg !7242
  store i32 %cond, i32* %re_index, align 4, !dbg !7244
  %22 = load i32, i32* %re_index, align 4, !dbg !7245
  %23 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7246
  %index7 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %23, i32 0, i32 2, !dbg !7247
  store i32 %22, i32* %index7, align 8, !dbg !7248
  %24 = load i32, i32* %tmp, align 4, !dbg !7249
  ret i32 %24, !dbg !7250
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @NEG_USR32(i32 %a, i8 signext %s) #4 !dbg !7251 {
entry:
  %a.addr = alloca i32, align 4
  %s.addr = alloca i8, align 1
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !7255, metadata !3012), !dbg !7256
  store i8 %s, i8* %s.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %s.addr, metadata !7257, metadata !3012), !dbg !7258
  %0 = load i32, i32* %a.addr, align 4, !dbg !7259
  %1 = load i8, i8* %s.addr, align 1, !dbg !7260
  %conv = sext i8 %1 to i32, !dbg !7260
  %sub = sub nsw i32 0, %conv, !dbg !7261
  %conv1 = trunc i32 %sub to i8, !dbg !7262
  %2 = call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 %conv1, i32 %0) #1, !dbg !7259, !srcloc !7263
  store i32 %2, i32* %a.addr, align 4, !dbg !7259
  %3 = load i32, i32* %a.addr, align 4, !dbg !7264
  ret i32 %3, !dbg !7265
}

declare i8* @avpriv_find_start_code(i8*, i8*, i32*) #2

declare i32 @av_frame_ref(%struct.AVFrame*, %struct.AVFrame*) #2

declare i8* @av_realloc_array(i8*, i64, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_bits1(%struct.GetBitContext* %s) #4 !dbg !7266 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %index = alloca i32, align 4
  %result = alloca i8, align 1
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !7269, metadata !3012), !dbg !7270
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7271, metadata !3012), !dbg !7272
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7273
  %index1 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !7274
  %1 = load i32, i32* %index1, align 8, !dbg !7274
  store i32 %1, i32* %index, align 4, !dbg !7272
  call void @llvm.dbg.declare(metadata i8* %result, metadata !7275, metadata !3012), !dbg !7276
  %2 = load i32, i32* %index, align 4, !dbg !7277
  %shr = lshr i32 %2, 3, !dbg !7278
  %idxprom = zext i32 %shr to i64, !dbg !7279
  %3 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7279
  %buffer = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %3, i32 0, i32 0, !dbg !7280
  %4 = load i8*, i8** %buffer, align 8, !dbg !7280
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !7279
  %5 = load i8, i8* %arrayidx, align 1, !dbg !7279
  store i8 %5, i8* %result, align 1, !dbg !7276
  %6 = load i32, i32* %index, align 4, !dbg !7281
  %and = and i32 %6, 7, !dbg !7282
  %7 = load i8, i8* %result, align 1, !dbg !7283
  %conv = zext i8 %7 to i32, !dbg !7283
  %shl = shl i32 %conv, %and, !dbg !7283
  %conv2 = trunc i32 %shl to i8, !dbg !7283
  store i8 %conv2, i8* %result, align 1, !dbg !7283
  %8 = load i8, i8* %result, align 1, !dbg !7284
  %conv3 = zext i8 %8 to i32, !dbg !7284
  %shr4 = ashr i32 %conv3, 7, !dbg !7284
  %conv5 = trunc i32 %shr4 to i8, !dbg !7284
  store i8 %conv5, i8* %result, align 1, !dbg !7284
  %9 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7285
  %index6 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %9, i32 0, i32 2, !dbg !7287
  %10 = load i32, i32* %index6, align 8, !dbg !7287
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7288
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 4, !dbg !7289
  %12 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !7289
  %cmp = icmp slt i32 %10, %12, !dbg !7290
  br i1 %cmp, label %if.then, label %if.end, !dbg !7291

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %index, align 4, !dbg !7292
  %inc = add i32 %13, 1, !dbg !7292
  store i32 %inc, i32* %index, align 4, !dbg !7292
  br label %if.end, !dbg !7293

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %index, align 4, !dbg !7294
  %15 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !7295
  %index8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %15, i32 0, i32 2, !dbg !7296
  store i32 %14, i32* %index8, align 8, !dbg !7297
  %16 = load i8, i8* %result, align 1, !dbg !7298
  %conv9 = zext i8 %16 to i32, !dbg !7298
  ret i32 %conv9, !dbg !7299
}

declare i32 @ff_vc1_parse_frame_header(%struct.VC1Context*, %struct.GetBitContext*) #2

declare i32 @ff_vc1_parse_frame_header_adv(%struct.VC1Context*, %struct.GetBitContext*) #2

declare signext i8 @av_get_picture_type_char(i32) #2

declare i32 @ff_mpv_frame_start(%struct.MpegEncContext*, %struct.AVCodecContext*) #2

declare void @ff_mpeg_er_frame_start(%struct.MpegEncContext*) #2

; Function Attrs: noreturn nounwind
declare void @abort() #6

declare void @ff_vc1_decode_blocks(%struct.VC1Context*) #2

declare void @ff_er_frame_end(%struct.ERContext*) #2

declare void @ff_mpv_frame_end(%struct.MpegEncContext*) #2

; Function Attrs: nounwind uwtable
define internal i32 @vc1_decode_sprites(%struct.VC1Context* %v, %struct.GetBitContext* %gb) #3 !dbg !7300 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca %struct.VC1Context*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %ret = alloca i32, align 4
  %s = alloca %struct.MpegEncContext*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %sd = alloca %struct.SpriteData, align 4
  store %struct.VC1Context* %v, %struct.VC1Context** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC1Context** %v.addr, metadata !7303, metadata !3012), !dbg !7304
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7305, metadata !3012), !dbg !7306
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7307, metadata !3012), !dbg !7308
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s, metadata !7309, metadata !3012), !dbg !7310
  %0 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7311
  %s1 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %0, i32 0, i32 0, !dbg !7312
  store %struct.MpegEncContext* %s1, %struct.MpegEncContext** %s, align 8, !dbg !7310
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !7313, metadata !3012), !dbg !7314
  %1 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !7315
  %avctx2 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %1, i32 0, i32 10, !dbg !7316
  %2 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx2, align 8, !dbg !7316
  store %struct.AVCodecContext* %2, %struct.AVCodecContext** %avctx, align 8, !dbg !7314
  call void @llvm.dbg.declare(metadata %struct.SpriteData* %sd, metadata !7317, metadata !3012), !dbg !7337
  %3 = bitcast %struct.SpriteData* %sd to i8*, !dbg !7338
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 172, i32 4, i1 false), !dbg !7338
  %4 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7339
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7340
  %call = call i32 @vc1_parse_sprites(%struct.VC1Context* %4, %struct.GetBitContext* %5, %struct.SpriteData* %sd), !dbg !7341
  store i32 %call, i32* %ret, align 4, !dbg !7342
  %6 = load i32, i32* %ret, align 4, !dbg !7343
  %cmp = icmp slt i32 %6, 0, !dbg !7345
  br i1 %cmp, label %if.then, label %if.end, !dbg !7346

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %ret, align 4, !dbg !7347
  store i32 %7, i32* %retval, align 4, !dbg !7348
  br label %return, !dbg !7348

if.end:                                           ; preds = %entry
  %8 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !7349
  %current_picture = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %8, i32 0, i32 58, !dbg !7351
  %f = getelementptr inbounds %struct.Picture, %struct.Picture* %current_picture, i32 0, i32 0, !dbg !7352
  %9 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !7352
  %tobool = icmp ne %struct.AVFrame* %9, null, !dbg !7349
  br i1 %tobool, label %lor.lhs.false, label %if.then6, !dbg !7353

lor.lhs.false:                                    ; preds = %if.end
  %10 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !7354
  %current_picture3 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %10, i32 0, i32 58, !dbg !7356
  %f4 = getelementptr inbounds %struct.Picture, %struct.Picture* %current_picture3, i32 0, i32 0, !dbg !7357
  %11 = load %struct.AVFrame*, %struct.AVFrame** %f4, align 8, !dbg !7357
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %11, i32 0, i32 0, !dbg !7358
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 0, !dbg !7354
  %12 = load i8*, i8** %arrayidx, align 8, !dbg !7354
  %tobool5 = icmp ne i8* %12, null, !dbg !7354
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !7359

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  %13 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7360
  %14 = bitcast %struct.AVCodecContext* %13 to i8*, !dbg !7360
  call void (i8*, i32, i8*, ...) @av_log(i8* %14, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i32 0, i32 0)), !dbg !7362
  store i32 -1313558101, i32* %retval, align 4, !dbg !7363
  br label %return, !dbg !7363

if.end7:                                          ; preds = %lor.lhs.false
  %15 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7364
  %two_sprites = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %15, i32 0, i32 173, !dbg !7366
  %16 = load i32, i32* %two_sprites, align 8, !dbg !7366
  %tobool8 = icmp ne i32 %16, 0, !dbg !7364
  br i1 %tobool8, label %land.lhs.true, label %if.end17, !dbg !7367

land.lhs.true:                                    ; preds = %if.end7
  %17 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !7368
  %last_picture_ptr = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %17, i32 0, i32 59, !dbg !7370
  %18 = load %struct.Picture*, %struct.Picture** %last_picture_ptr, align 8, !dbg !7370
  %tobool9 = icmp ne %struct.Picture* %18, null, !dbg !7368
  br i1 %tobool9, label %lor.lhs.false10, label %if.then15, !dbg !7371

lor.lhs.false10:                                  ; preds = %land.lhs.true
  %19 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !7372
  %last_picture = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %19, i32 0, i32 55, !dbg !7374
  %f11 = getelementptr inbounds %struct.Picture, %struct.Picture* %last_picture, i32 0, i32 0, !dbg !7375
  %20 = load %struct.AVFrame*, %struct.AVFrame** %f11, align 8, !dbg !7375
  %data12 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %20, i32 0, i32 0, !dbg !7376
  %arrayidx13 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data12, i64 0, i64 0, !dbg !7372
  %21 = load i8*, i8** %arrayidx13, align 8, !dbg !7372
  %tobool14 = icmp ne i8* %21, null, !dbg !7372
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !7377

if.then15:                                        ; preds = %lor.lhs.false10, %land.lhs.true
  %22 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7378
  %23 = bitcast %struct.AVCodecContext* %22 to i8*, !dbg !7378
  call void (i8*, i32, i8*, ...) @av_log(i8* %23, i32 24, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.33, i32 0, i32 0)), !dbg !7380
  %24 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7381
  %two_sprites16 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %24, i32 0, i32 173, !dbg !7382
  store i32 0, i32* %two_sprites16, align 8, !dbg !7383
  br label %if.end17, !dbg !7384

if.end17:                                         ; preds = %if.then15, %lor.lhs.false10, %if.end7
  %25 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7385
  %sprite_output_frame = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %25, i32 0, i32 174, !dbg !7386
  %26 = load %struct.AVFrame*, %struct.AVFrame** %sprite_output_frame, align 8, !dbg !7386
  call void @av_frame_unref(%struct.AVFrame* %26), !dbg !7387
  %27 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7388
  %28 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7390
  %sprite_output_frame18 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %28, i32 0, i32 174, !dbg !7391
  %29 = load %struct.AVFrame*, %struct.AVFrame** %sprite_output_frame18, align 8, !dbg !7391
  %call19 = call i32 @ff_get_buffer(%struct.AVCodecContext* %27, %struct.AVFrame* %29, i32 0), !dbg !7392
  store i32 %call19, i32* %ret, align 4, !dbg !7393
  %cmp20 = icmp slt i32 %call19, 0, !dbg !7394
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !7395

if.then21:                                        ; preds = %if.end17
  %30 = load i32, i32* %ret, align 4, !dbg !7396
  store i32 %30, i32* %retval, align 4, !dbg !7397
  br label %return, !dbg !7397

if.end22:                                         ; preds = %if.end17
  %31 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7398
  call void @vc1_draw_sprites(%struct.VC1Context* %31, %struct.SpriteData* %sd), !dbg !7399
  store i32 0, i32* %retval, align 4, !dbg !7400
  br label %return, !dbg !7400

return:                                           ; preds = %if.end22, %if.then21, %if.then6, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !7401
  ret i32 %32, !dbg !7401
}

declare void @ff_print_debug_info(%struct.MpegEncContext*, %struct.Picture*, %struct.AVFrame*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: nounwind uwtable
define internal i32 @vc1_parse_sprites(%struct.VC1Context* %v, %struct.GetBitContext* %gb, %struct.SpriteData* %sd) #3 !dbg !7402 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca %struct.VC1Context*, align 8
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %sd.addr = alloca %struct.SpriteData*, align 8
  %avctx = alloca %struct.AVCodecContext*, align 8
  %sprite = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.VC1Context* %v, %struct.VC1Context** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC1Context** %v.addr, metadata !7406, metadata !3012), !dbg !7407
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !7408, metadata !3012), !dbg !7409
  store %struct.SpriteData* %sd, %struct.SpriteData** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpriteData** %sd.addr, metadata !7410, metadata !3012), !dbg !7411
  call void @llvm.dbg.declare(metadata %struct.AVCodecContext** %avctx, metadata !7412, metadata !3012), !dbg !7413
  %0 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7414
  %s = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %0, i32 0, i32 0, !dbg !7415
  %avctx1 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %s, i32 0, i32 10, !dbg !7416
  %1 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx1, align 8, !dbg !7416
  store %struct.AVCodecContext* %1, %struct.AVCodecContext** %avctx, align 8, !dbg !7413
  call void @llvm.dbg.declare(metadata i32* %sprite, metadata !7417, metadata !3012), !dbg !7418
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7419, metadata !3012), !dbg !7420
  store i32 0, i32* %sprite, align 4, !dbg !7421
  br label %for.cond, !dbg !7423

for.cond:                                         ; preds = %for.inc26, %entry
  %2 = load i32, i32* %sprite, align 4, !dbg !7424
  %3 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7427
  %two_sprites = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %3, i32 0, i32 173, !dbg !7428
  %4 = load i32, i32* %two_sprites, align 8, !dbg !7428
  %cmp = icmp sle i32 %2, %4, !dbg !7429
  br i1 %cmp, label %for.body, label %for.end28, !dbg !7430

for.body:                                         ; preds = %for.cond
  %5 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7431
  %6 = load i32, i32* %sprite, align 4, !dbg !7433
  %idxprom = sext i32 %6 to i64, !dbg !7434
  %7 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7434
  %coefs = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %7, i32 0, i32 0, !dbg !7435
  %arrayidx = getelementptr inbounds [2 x [7 x i32]], [2 x [7 x i32]]* %coefs, i64 0, i64 %idxprom, !dbg !7434
  %arraydecay = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx, i32 0, i32 0, !dbg !7434
  call void @vc1_sprite_parse_transform(%struct.GetBitContext* %5, i32* %arraydecay), !dbg !7436
  %8 = load i32, i32* %sprite, align 4, !dbg !7437
  %idxprom2 = sext i32 %8 to i64, !dbg !7439
  %9 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7439
  %coefs3 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %9, i32 0, i32 0, !dbg !7440
  %arrayidx4 = getelementptr inbounds [2 x [7 x i32]], [2 x [7 x i32]]* %coefs3, i64 0, i64 %idxprom2, !dbg !7439
  %arrayidx5 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx4, i64 0, i64 1, !dbg !7439
  %10 = load i32, i32* %arrayidx5, align 4, !dbg !7439
  %tobool = icmp ne i32 %10, 0, !dbg !7439
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7441

lor.lhs.false:                                    ; preds = %for.body
  %11 = load i32, i32* %sprite, align 4, !dbg !7442
  %idxprom6 = sext i32 %11 to i64, !dbg !7444
  %12 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7444
  %coefs7 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %12, i32 0, i32 0, !dbg !7445
  %arrayidx8 = getelementptr inbounds [2 x [7 x i32]], [2 x [7 x i32]]* %coefs7, i64 0, i64 %idxprom6, !dbg !7444
  %arrayidx9 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx8, i64 0, i64 3, !dbg !7444
  %13 = load i32, i32* %arrayidx9, align 4, !dbg !7444
  %tobool10 = icmp ne i32 %13, 0, !dbg !7444
  br i1 %tobool10, label %if.then, label %if.end, !dbg !7446

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7447
  %15 = bitcast %struct.AVCodecContext* %14 to i8*, !dbg !7447
  call void (i8*, i8*, ...) @avpriv_request_sample(i8* %15, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i32 0, i32 0)), !dbg !7448
  br label %if.end, !dbg !7448

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %16 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7449
  %17 = bitcast %struct.AVCodecContext* %16 to i8*, !dbg !7449
  %18 = load i32, i32* %sprite, align 4, !dbg !7450
  %tobool11 = icmp ne i32 %18, 0, !dbg !7450
  %cond = select i1 %tobool11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0), !dbg !7450
  call void (i8*, i32, i8*, ...) @av_log(i8* %17, i32 48, i8* %cond), !dbg !7451
  store i32 0, i32* %i, align 4, !dbg !7452
  br label %for.cond12, !dbg !7454

for.cond12:                                       ; preds = %for.inc, %if.end
  %19 = load i32, i32* %i, align 4, !dbg !7455
  %cmp13 = icmp slt i32 %19, 7, !dbg !7458
  br i1 %cmp13, label %for.body14, label %for.end, !dbg !7459

for.body14:                                       ; preds = %for.cond12
  %20 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7460
  %21 = bitcast %struct.AVCodecContext* %20 to i8*, !dbg !7460
  %22 = load i32, i32* %i, align 4, !dbg !7461
  %idxprom15 = sext i32 %22 to i64, !dbg !7462
  %23 = load i32, i32* %sprite, align 4, !dbg !7463
  %idxprom16 = sext i32 %23 to i64, !dbg !7462
  %24 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7462
  %coefs17 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %24, i32 0, i32 0, !dbg !7464
  %arrayidx18 = getelementptr inbounds [2 x [7 x i32]], [2 x [7 x i32]]* %coefs17, i64 0, i64 %idxprom16, !dbg !7462
  %arrayidx19 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx18, i64 0, i64 %idxprom15, !dbg !7462
  %25 = load i32, i32* %arrayidx19, align 4, !dbg !7462
  %div = sdiv i32 %25, 65536, !dbg !7465
  %26 = load i32, i32* %i, align 4, !dbg !7466
  %idxprom20 = sext i32 %26 to i64, !dbg !7467
  %27 = load i32, i32* %sprite, align 4, !dbg !7468
  %idxprom21 = sext i32 %27 to i64, !dbg !7467
  %28 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7467
  %coefs22 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %28, i32 0, i32 0, !dbg !7469
  %arrayidx23 = getelementptr inbounds [2 x [7 x i32]], [2 x [7 x i32]]* %coefs22, i64 0, i64 %idxprom21, !dbg !7467
  %arrayidx24 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx23, i64 0, i64 %idxprom20, !dbg !7467
  %29 = load i32, i32* %arrayidx24, align 4, !dbg !7467
  %call = call i32 @abs(i32 %29) #1, !dbg !7470
  %and = and i32 %call, 65535, !dbg !7471
  %mul = mul nsw i32 %and, 1000, !dbg !7472
  %div25 = sdiv i32 %mul, 65536, !dbg !7473
  call void (i8*, i32, i8*, ...) @av_log(i8* %21, i32 48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i32 0, i32 0), i32 %div, i32 %div25), !dbg !7474
  br label %for.inc, !dbg !7474

for.inc:                                          ; preds = %for.body14
  %30 = load i32, i32* %i, align 4, !dbg !7475
  %inc = add nsw i32 %30, 1, !dbg !7475
  store i32 %inc, i32* %i, align 4, !dbg !7475
  br label %for.cond12, !dbg !7477, !llvm.loop !7478

for.end:                                          ; preds = %for.cond12
  %31 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7480
  %32 = bitcast %struct.AVCodecContext* %31 to i8*, !dbg !7480
  call void (i8*, i32, i8*, ...) @av_log(i8* %32, i32 48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0)), !dbg !7481
  br label %for.inc26, !dbg !7482

for.inc26:                                        ; preds = %for.end
  %33 = load i32, i32* %sprite, align 4, !dbg !7483
  %inc27 = add nsw i32 %33, 1, !dbg !7483
  store i32 %inc27, i32* %sprite, align 4, !dbg !7483
  br label %for.cond, !dbg !7485, !llvm.loop !7486

for.end28:                                        ; preds = %for.cond
  %34 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7488
  call void @skip_bits(%struct.GetBitContext* %34, i32 2), !dbg !7489
  %35 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7490
  %call29 = call i32 @get_bits_long(%struct.GetBitContext* %35, i32 30), !dbg !7492
  %36 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7493
  %effect_type = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %36, i32 0, i32 1, !dbg !7494
  store i32 %call29, i32* %effect_type, align 4, !dbg !7495
  %tobool30 = icmp ne i32 %call29, 0, !dbg !7495
  br i1 %tobool30, label %if.then31, label %if.end106, !dbg !7496

if.then31:                                        ; preds = %for.end28
  %37 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7497
  %call32 = call i32 @get_bits(%struct.GetBitContext* %37, i32 4), !dbg !7499
  %38 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7500
  %effect_pcount1 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %38, i32 0, i32 3, !dbg !7501
  store i32 %call32, i32* %effect_pcount1, align 4, !dbg !7502
  switch i32 %call32, label %sw.default [
    i32 7, label %sw.bb
    i32 14, label %sw.bb34
  ], !dbg !7503

sw.bb:                                            ; preds = %if.then31
  %39 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7504
  %40 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7506
  %effect_params1 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %40, i32 0, i32 5, !dbg !7507
  %arraydecay33 = getelementptr inbounds [15 x i32], [15 x i32]* %effect_params1, i32 0, i32 0, !dbg !7506
  call void @vc1_sprite_parse_transform(%struct.GetBitContext* %39, i32* %arraydecay33), !dbg !7508
  br label %sw.epilog, !dbg !7509

sw.bb34:                                          ; preds = %if.then31
  %41 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7510
  %42 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7511
  %effect_params135 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %42, i32 0, i32 5, !dbg !7512
  %arraydecay36 = getelementptr inbounds [15 x i32], [15 x i32]* %effect_params135, i32 0, i32 0, !dbg !7511
  call void @vc1_sprite_parse_transform(%struct.GetBitContext* %41, i32* %arraydecay36), !dbg !7513
  %43 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7514
  %44 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7515
  %effect_params137 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %44, i32 0, i32 5, !dbg !7516
  %arraydecay38 = getelementptr inbounds [15 x i32], [15 x i32]* %effect_params137, i32 0, i32 0, !dbg !7515
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay38, i64 7, !dbg !7517
  call void @vc1_sprite_parse_transform(%struct.GetBitContext* %43, i32* %add.ptr), !dbg !7518
  br label %sw.epilog, !dbg !7519

sw.default:                                       ; preds = %if.then31
  store i32 0, i32* %i, align 4, !dbg !7520
  br label %for.cond39, !dbg !7522

for.cond39:                                       ; preds = %for.inc47, %sw.default
  %45 = load i32, i32* %i, align 4, !dbg !7523
  %46 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7526
  %effect_pcount140 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %46, i32 0, i32 3, !dbg !7527
  %47 = load i32, i32* %effect_pcount140, align 4, !dbg !7527
  %cmp41 = icmp slt i32 %45, %47, !dbg !7528
  br i1 %cmp41, label %for.body42, label %for.end49, !dbg !7529

for.body42:                                       ; preds = %for.cond39
  %48 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7530
  %call43 = call i32 @get_fp_val(%struct.GetBitContext* %48), !dbg !7531
  %49 = load i32, i32* %i, align 4, !dbg !7532
  %idxprom44 = sext i32 %49 to i64, !dbg !7533
  %50 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7533
  %effect_params145 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %50, i32 0, i32 5, !dbg !7534
  %arrayidx46 = getelementptr inbounds [15 x i32], [15 x i32]* %effect_params145, i64 0, i64 %idxprom44, !dbg !7533
  store i32 %call43, i32* %arrayidx46, align 4, !dbg !7535
  br label %for.inc47, !dbg !7533

for.inc47:                                        ; preds = %for.body42
  %51 = load i32, i32* %i, align 4, !dbg !7536
  %inc48 = add nsw i32 %51, 1, !dbg !7536
  store i32 %inc48, i32* %i, align 4, !dbg !7536
  br label %for.cond39, !dbg !7538, !llvm.loop !7539

for.end49:                                        ; preds = %for.cond39
  br label %sw.epilog, !dbg !7541

sw.epilog:                                        ; preds = %for.end49, %sw.bb34, %sw.bb
  %52 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7542
  %effect_type50 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %52, i32 0, i32 1, !dbg !7544
  %53 = load i32, i32* %effect_type50, align 4, !dbg !7544
  %cmp51 = icmp ne i32 %53, 13, !dbg !7545
  br i1 %cmp51, label %if.then59, label %lor.lhs.false52, !dbg !7546

lor.lhs.false52:                                  ; preds = %sw.epilog
  %54 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7547
  %effect_params153 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %54, i32 0, i32 5, !dbg !7549
  %arrayidx54 = getelementptr inbounds [15 x i32], [15 x i32]* %effect_params153, i64 0, i64 0, !dbg !7547
  %55 = load i32, i32* %arrayidx54, align 4, !dbg !7547
  %56 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7550
  %coefs55 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %56, i32 0, i32 0, !dbg !7551
  %arrayidx56 = getelementptr inbounds [2 x [7 x i32]], [2 x [7 x i32]]* %coefs55, i64 0, i64 0, !dbg !7550
  %arrayidx57 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx56, i64 0, i64 6, !dbg !7550
  %57 = load i32, i32* %arrayidx57, align 4, !dbg !7550
  %cmp58 = icmp ne i32 %55, %57, !dbg !7552
  br i1 %cmp58, label %if.then59, label %if.end79, !dbg !7553

if.then59:                                        ; preds = %lor.lhs.false52, %sw.epilog
  %58 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7554
  %59 = bitcast %struct.AVCodecContext* %58 to i8*, !dbg !7554
  %60 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7556
  %effect_type60 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %60, i32 0, i32 1, !dbg !7557
  %61 = load i32, i32* %effect_type60, align 4, !dbg !7557
  call void (i8*, i32, i8*, ...) @av_log(i8* %59, i32 48, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.39, i32 0, i32 0), i32 %61), !dbg !7558
  store i32 0, i32* %i, align 4, !dbg !7559
  br label %for.cond61, !dbg !7561

for.cond61:                                       ; preds = %for.inc76, %if.then59
  %62 = load i32, i32* %i, align 4, !dbg !7562
  %63 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7565
  %effect_pcount162 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %63, i32 0, i32 3, !dbg !7566
  %64 = load i32, i32* %effect_pcount162, align 4, !dbg !7566
  %cmp63 = icmp slt i32 %62, %64, !dbg !7567
  br i1 %cmp63, label %for.body64, label %for.end78, !dbg !7568

for.body64:                                       ; preds = %for.cond61
  %65 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7569
  %66 = bitcast %struct.AVCodecContext* %65 to i8*, !dbg !7569
  %67 = load i32, i32* %i, align 4, !dbg !7570
  %idxprom65 = sext i32 %67 to i64, !dbg !7571
  %68 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7571
  %effect_params166 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %68, i32 0, i32 5, !dbg !7572
  %arrayidx67 = getelementptr inbounds [15 x i32], [15 x i32]* %effect_params166, i64 0, i64 %idxprom65, !dbg !7571
  %69 = load i32, i32* %arrayidx67, align 4, !dbg !7571
  %div68 = sdiv i32 %69, 65536, !dbg !7573
  %70 = load i32, i32* %i, align 4, !dbg !7574
  %idxprom69 = sext i32 %70 to i64, !dbg !7575
  %71 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7575
  %effect_params170 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %71, i32 0, i32 5, !dbg !7576
  %arrayidx71 = getelementptr inbounds [15 x i32], [15 x i32]* %effect_params170, i64 0, i64 %idxprom69, !dbg !7575
  %72 = load i32, i32* %arrayidx71, align 4, !dbg !7575
  %call72 = call i32 @abs(i32 %72) #1, !dbg !7577
  %and73 = and i32 %call72, 65535, !dbg !7578
  %mul74 = mul nsw i32 %and73, 1000, !dbg !7579
  %div75 = sdiv i32 %mul74, 65536, !dbg !7580
  call void (i8*, i32, i8*, ...) @av_log(i8* %66, i32 48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), i32 %div68, i32 %div75), !dbg !7581
  br label %for.inc76, !dbg !7581

for.inc76:                                        ; preds = %for.body64
  %73 = load i32, i32* %i, align 4, !dbg !7582
  %inc77 = add nsw i32 %73, 1, !dbg !7582
  store i32 %inc77, i32* %i, align 4, !dbg !7582
  br label %for.cond61, !dbg !7584, !llvm.loop !7585

for.end78:                                        ; preds = %for.cond61
  %74 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7587
  %75 = bitcast %struct.AVCodecContext* %74 to i8*, !dbg !7587
  call void (i8*, i32, i8*, ...) @av_log(i8* %75, i32 48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0)), !dbg !7588
  br label %if.end79, !dbg !7589

if.end79:                                         ; preds = %for.end78, %lor.lhs.false52
  %76 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7590
  %call80 = call i32 @get_bits(%struct.GetBitContext* %76, i32 16), !dbg !7591
  %77 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7592
  %effect_pcount2 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %77, i32 0, i32 4, !dbg !7593
  store i32 %call80, i32* %effect_pcount2, align 4, !dbg !7594
  %78 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7595
  %effect_pcount281 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %78, i32 0, i32 4, !dbg !7597
  %79 = load i32, i32* %effect_pcount281, align 4, !dbg !7597
  %cmp82 = icmp sgt i32 %79, 10, !dbg !7598
  br i1 %cmp82, label %if.then83, label %if.else, !dbg !7599

if.then83:                                        ; preds = %if.end79
  %80 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7600
  %81 = bitcast %struct.AVCodecContext* %80 to i8*, !dbg !7600
  call void (i8*, i32, i8*, ...) @av_log(i8* %81, i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.41, i32 0, i32 0)), !dbg !7602
  store i32 -1094995529, i32* %retval, align 4, !dbg !7603
  br label %return, !dbg !7603

if.else:                                          ; preds = %if.end79
  %82 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7604
  %effect_pcount284 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %82, i32 0, i32 4, !dbg !7606
  %83 = load i32, i32* %effect_pcount284, align 4, !dbg !7606
  %tobool85 = icmp ne i32 %83, 0, !dbg !7604
  br i1 %tobool85, label %if.then86, label %if.end104, !dbg !7607

if.then86:                                        ; preds = %if.else
  store i32 -1, i32* %i, align 4, !dbg !7608
  %84 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7610
  %85 = bitcast %struct.AVCodecContext* %84 to i8*, !dbg !7610
  call void (i8*, i32, i8*, ...) @av_log(i8* %85, i32 48, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i32 0, i32 0)), !dbg !7611
  br label %while.cond, !dbg !7612

while.cond:                                       ; preds = %while.body, %if.then86
  %86 = load i32, i32* %i, align 4, !dbg !7613
  %inc87 = add nsw i32 %86, 1, !dbg !7613
  store i32 %inc87, i32* %i, align 4, !dbg !7613
  %87 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7615
  %effect_pcount288 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %87, i32 0, i32 4, !dbg !7616
  %88 = load i32, i32* %effect_pcount288, align 4, !dbg !7616
  %cmp89 = icmp slt i32 %inc87, %88, !dbg !7617
  br i1 %cmp89, label %while.body, label %while.end, !dbg !7618

while.body:                                       ; preds = %while.cond
  %89 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7619
  %call90 = call i32 @get_fp_val(%struct.GetBitContext* %89), !dbg !7621
  %90 = load i32, i32* %i, align 4, !dbg !7622
  %idxprom91 = sext i32 %90 to i64, !dbg !7623
  %91 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7623
  %effect_params2 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %91, i32 0, i32 6, !dbg !7624
  %arrayidx92 = getelementptr inbounds [10 x i32], [10 x i32]* %effect_params2, i64 0, i64 %idxprom91, !dbg !7623
  store i32 %call90, i32* %arrayidx92, align 4, !dbg !7625
  %92 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7626
  %93 = bitcast %struct.AVCodecContext* %92 to i8*, !dbg !7626
  %94 = load i32, i32* %i, align 4, !dbg !7627
  %idxprom93 = sext i32 %94 to i64, !dbg !7628
  %95 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7628
  %effect_params294 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %95, i32 0, i32 6, !dbg !7629
  %arrayidx95 = getelementptr inbounds [10 x i32], [10 x i32]* %effect_params294, i64 0, i64 %idxprom93, !dbg !7628
  %96 = load i32, i32* %arrayidx95, align 4, !dbg !7628
  %div96 = sdiv i32 %96, 65536, !dbg !7630
  %97 = load i32, i32* %i, align 4, !dbg !7631
  %idxprom97 = sext i32 %97 to i64, !dbg !7632
  %98 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7632
  %effect_params298 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %98, i32 0, i32 6, !dbg !7633
  %arrayidx99 = getelementptr inbounds [10 x i32], [10 x i32]* %effect_params298, i64 0, i64 %idxprom97, !dbg !7632
  %99 = load i32, i32* %arrayidx99, align 4, !dbg !7632
  %call100 = call i32 @abs(i32 %99) #1, !dbg !7634
  %and101 = and i32 %call100, 65535, !dbg !7635
  %mul102 = mul nsw i32 %and101, 1000, !dbg !7636
  %div103 = sdiv i32 %mul102, 65536, !dbg !7637
  call void (i8*, i32, i8*, ...) @av_log(i8* %93, i32 48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), i32 %div96, i32 %div103), !dbg !7638
  br label %while.cond, !dbg !7639, !llvm.loop !7641

while.end:                                        ; preds = %while.cond
  %100 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7642
  %101 = bitcast %struct.AVCodecContext* %100 to i8*, !dbg !7642
  call void (i8*, i32, i8*, ...) @av_log(i8* %101, i32 48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0)), !dbg !7643
  br label %if.end104, !dbg !7644

if.end104:                                        ; preds = %while.end, %if.else
  br label %if.end105

if.end105:                                        ; preds = %if.end104
  br label %if.end106, !dbg !7645

if.end106:                                        ; preds = %if.end105, %for.end28
  %102 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7646
  %call107 = call i32 @get_bits1(%struct.GetBitContext* %102), !dbg !7648
  %103 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7649
  %effect_flag = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %103, i32 0, i32 2, !dbg !7650
  store i32 %call107, i32* %effect_flag, align 4, !dbg !7651
  %tobool108 = icmp ne i32 %call107, 0, !dbg !7651
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !7652

if.then109:                                       ; preds = %if.end106
  %104 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7653
  %105 = bitcast %struct.AVCodecContext* %104 to i8*, !dbg !7653
  call void (i8*, i32, i8*, ...) @av_log(i8* %105, i32 48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i32 0, i32 0)), !dbg !7654
  br label %if.end110, !dbg !7654

if.end110:                                        ; preds = %if.then109, %if.end106
  %106 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7655
  %call111 = call i32 @get_bits_count(%struct.GetBitContext* %106), !dbg !7657
  %107 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7658
  %size_in_bits = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %107, i32 0, i32 3, !dbg !7659
  %108 = load i32, i32* %size_in_bits, align 4, !dbg !7659
  %109 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7660
  %codec_id = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %109, i32 0, i32 4, !dbg !7661
  %110 = load i32, i32* %codec_id, align 8, !dbg !7661
  %cmp112 = icmp eq i32 %110, 150, !dbg !7662
  %cond113 = select i1 %cmp112, i32 64, i32 0, !dbg !7660
  %add = add nsw i32 %108, %cond113, !dbg !7663
  %cmp114 = icmp sge i32 %call111, %add, !dbg !7664
  br i1 %cmp114, label %if.then115, label %if.end116, !dbg !7665

if.then115:                                       ; preds = %if.end110
  %111 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7666
  %112 = bitcast %struct.AVCodecContext* %111 to i8*, !dbg !7666
  call void (i8*, i32, i8*, ...) @av_log(i8* %112, i32 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i32 0, i32 0)), !dbg !7668
  store i32 -1094995529, i32* %retval, align 4, !dbg !7669
  br label %return, !dbg !7669

if.end116:                                        ; preds = %if.end110
  %113 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7670
  %call117 = call i32 @get_bits_count(%struct.GetBitContext* %113), !dbg !7672
  %114 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !7673
  %size_in_bits118 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %114, i32 0, i32 3, !dbg !7674
  %115 = load i32, i32* %size_in_bits118, align 4, !dbg !7674
  %sub = sub nsw i32 %115, 8, !dbg !7675
  %cmp119 = icmp slt i32 %call117, %sub, !dbg !7676
  br i1 %cmp119, label %if.then120, label %if.end121, !dbg !7677

if.then120:                                       ; preds = %if.end116
  %116 = load %struct.AVCodecContext*, %struct.AVCodecContext** %avctx, align 8, !dbg !7678
  %117 = bitcast %struct.AVCodecContext* %116 to i8*, !dbg !7678
  call void (i8*, i32, i8*, ...) @av_log(i8* %117, i32 24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i32 0, i32 0)), !dbg !7679
  br label %if.end121, !dbg !7679

if.end121:                                        ; preds = %if.then120, %if.end116
  store i32 0, i32* %retval, align 4, !dbg !7680
  br label %return, !dbg !7680

return:                                           ; preds = %if.end121, %if.then115, %if.then83
  %118 = load i32, i32* %retval, align 4, !dbg !7681
  ret i32 %118, !dbg !7681
}

declare void @av_frame_unref(%struct.AVFrame*) #2

declare i32 @ff_get_buffer(%struct.AVCodecContext*, %struct.AVFrame*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @vc1_draw_sprites(%struct.VC1Context* %v, %struct.SpriteData* %sd) #3 !dbg !7682 {
entry:
  %retval.i403 = alloca i16, align 2
  %a.addr.i404 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i404, metadata !7685, metadata !3012), !dbg !7690
  %retval.i392 = alloca i32, align 4
  %a.addr.i393 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i393, metadata !7692, metadata !3012), !dbg !7696
  %amin.addr.i394 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i394, metadata !7701, metadata !3012), !dbg !7702
  %amax.addr.i395 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i395, metadata !7703, metadata !3012), !dbg !7704
  %retval.i381 = alloca i32, align 4
  %a.addr.i382 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i382, metadata !7692, metadata !3012), !dbg !7705
  %amin.addr.i383 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i383, metadata !7701, metadata !3012), !dbg !7707
  %amax.addr.i384 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i384, metadata !7703, metadata !3012), !dbg !7708
  %retval.i370 = alloca i32, align 4
  %a.addr.i371 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i371, metadata !7692, metadata !3012), !dbg !7709
  %amin.addr.i372 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i372, metadata !7701, metadata !3012), !dbg !7712
  %amax.addr.i373 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i373, metadata !7703, metadata !3012), !dbg !7713
  %retval.i = alloca i32, align 4
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !7692, metadata !3012), !dbg !7714
  %amin.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amin.addr.i, metadata !7701, metadata !3012), !dbg !7716
  %amax.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %amax.addr.i, metadata !7703, metadata !3012), !dbg !7717
  %v.addr = alloca %struct.VC1Context*, align 8
  %sd.addr = alloca %struct.SpriteData*, align 8
  %i = alloca i32, align 4
  %plane = alloca i32, align 4
  %row = alloca i32, align 4
  %sprite = alloca i32, align 4
  %sr_cache = alloca [2 x [2 x i32]], align 16
  %src_h = alloca [2 x [2 x i8*]], align 16
  %xoff = alloca [2 x i32], align 4
  %xadv = alloca [2 x i32], align 4
  %yoff = alloca [2 x i32], align 4
  %yadv = alloca [2 x i32], align 4
  %alpha = alloca i32, align 4
  %ysub = alloca [2 x i32], align 4
  %s = alloca %struct.MpegEncContext*, align 8
  %width = alloca i32, align 4
  %dst = alloca i8*, align 8
  %iplane = alloca i8*, align 8
  %iline = alloca i32, align 4
  %ycoord = alloca i32, align 4
  %yline = alloca i32, align 4
  %next_line = alloca i32, align 4
  %SWAP_tmp = alloca i8*, align 8
  %SWAP_tmp199 = alloca i32, align 4
  store %struct.VC1Context* %v, %struct.VC1Context** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VC1Context** %v.addr, metadata !7718, metadata !3012), !dbg !7719
  store %struct.SpriteData* %sd, %struct.SpriteData** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SpriteData** %sd.addr, metadata !7720, metadata !3012), !dbg !7721
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7722, metadata !3012), !dbg !7723
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !7724, metadata !3012), !dbg !7725
  call void @llvm.dbg.declare(metadata i32* %row, metadata !7726, metadata !3012), !dbg !7727
  call void @llvm.dbg.declare(metadata i32* %sprite, metadata !7728, metadata !3012), !dbg !7729
  call void @llvm.dbg.declare(metadata [2 x [2 x i32]]* %sr_cache, metadata !7730, metadata !3012), !dbg !7731
  %0 = bitcast [2 x [2 x i32]]* %sr_cache to i8*, !dbg !7731
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([2 x [2 x i32]]* @vc1_draw_sprites.sr_cache to i8*), i64 16, i32 16, i1 false), !dbg !7731
  call void @llvm.dbg.declare(metadata [2 x [2 x i8*]]* %src_h, metadata !7732, metadata !3012), !dbg !7733
  call void @llvm.dbg.declare(metadata [2 x i32]* %xoff, metadata !7734, metadata !3012), !dbg !7735
  call void @llvm.dbg.declare(metadata [2 x i32]* %xadv, metadata !7736, metadata !3012), !dbg !7737
  call void @llvm.dbg.declare(metadata [2 x i32]* %yoff, metadata !7738, metadata !3012), !dbg !7739
  call void @llvm.dbg.declare(metadata [2 x i32]* %yadv, metadata !7740, metadata !3012), !dbg !7741
  call void @llvm.dbg.declare(metadata i32* %alpha, metadata !7742, metadata !3012), !dbg !7743
  call void @llvm.dbg.declare(metadata [2 x i32]* %ysub, metadata !7744, metadata !3012), !dbg !7745
  call void @llvm.dbg.declare(metadata %struct.MpegEncContext** %s, metadata !7746, metadata !3012), !dbg !7747
  %1 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7748
  %s1 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %1, i32 0, i32 0, !dbg !7749
  store %struct.MpegEncContext* %s1, %struct.MpegEncContext** %s, align 8, !dbg !7747
  store i32 0, i32* %i, align 4, !dbg !7750
  br label %for.cond, !dbg !7751

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !7752
  %3 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7754
  %two_sprites = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %3, i32 0, i32 173, !dbg !7755
  %4 = load i32, i32* %two_sprites, align 8, !dbg !7755
  %cmp = icmp sle i32 %2, %4, !dbg !7756
  br i1 %cmp, label %for.body, label %for.end, !dbg !7757

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !7758
  %idxprom = sext i32 %5 to i64, !dbg !7759
  %6 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7759
  %coefs = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %6, i32 0, i32 0, !dbg !7760
  %arrayidx = getelementptr inbounds [2 x [7 x i32]], [2 x [7 x i32]]* %coefs, i64 0, i64 %idxprom, !dbg !7759
  %arrayidx2 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx, i64 0, i64 2, !dbg !7759
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !7759
  %8 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7761
  %sprite_width = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %8, i32 0, i32 177, !dbg !7762
  %9 = load i32, i32* %sprite_width, align 8, !dbg !7762
  %sub = sub nsw i32 %9, 1, !dbg !7763
  %shl = shl i32 %sub, 16, !dbg !7764
  store i32 %7, i32* %a.addr.i, align 4, !dbg !7765
  store i32 0, i32* %amin.addr.i, align 4, !dbg !7765
  store i32 %shl, i32* %amax.addr.i, align 4, !dbg !7765
  %10 = load i32, i32* %a.addr.i, align 4, !dbg !7766
  %11 = load i32, i32* %amin.addr.i, align 4, !dbg !7768
  %cmp.i = icmp slt i32 %10, %11, !dbg !7769
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !7770

if.then.i:                                        ; preds = %for.body
  %12 = load i32, i32* %amin.addr.i, align 4, !dbg !7771
  store i32 %12, i32* %retval.i, align 4, !dbg !7773
  br label %av_clip_c.exit, !dbg !7773

if.else.i:                                        ; preds = %for.body
  %13 = load i32, i32* %a.addr.i, align 4, !dbg !7774
  %14 = load i32, i32* %amax.addr.i, align 4, !dbg !7776
  %cmp1.i = icmp sgt i32 %13, %14, !dbg !7777
  br i1 %cmp1.i, label %if.then2.i, label %if.else3.i, !dbg !7778

if.then2.i:                                       ; preds = %if.else.i
  %15 = load i32, i32* %amax.addr.i, align 4, !dbg !7779
  store i32 %15, i32* %retval.i, align 4, !dbg !7781
  br label %av_clip_c.exit, !dbg !7781

if.else3.i:                                       ; preds = %if.else.i
  %16 = load i32, i32* %a.addr.i, align 4, !dbg !7782
  store i32 %16, i32* %retval.i, align 4, !dbg !7783
  br label %av_clip_c.exit, !dbg !7783

av_clip_c.exit:                                   ; preds = %if.then.i, %if.then2.i, %if.else3.i
  %17 = load i32, i32* %retval.i, align 4, !dbg !7784
  %18 = load i32, i32* %i, align 4, !dbg !7785
  %idxprom3 = sext i32 %18 to i64, !dbg !7786
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %xoff, i64 0, i64 %idxprom3, !dbg !7786
  store i32 %17, i32* %arrayidx4, align 4, !dbg !7787
  %19 = load i32, i32* %i, align 4, !dbg !7788
  %idxprom5 = sext i32 %19 to i64, !dbg !7789
  %20 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7789
  %coefs6 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %20, i32 0, i32 0, !dbg !7790
  %arrayidx7 = getelementptr inbounds [2 x [7 x i32]], [2 x [7 x i32]]* %coefs6, i64 0, i64 %idxprom5, !dbg !7789
  %arrayidx8 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx7, i64 0, i64 0, !dbg !7789
  %21 = load i32, i32* %arrayidx8, align 4, !dbg !7789
  %22 = load i32, i32* %i, align 4, !dbg !7791
  %idxprom9 = sext i32 %22 to i64, !dbg !7792
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %xadv, i64 0, i64 %idxprom9, !dbg !7792
  store i32 %21, i32* %arrayidx10, align 4, !dbg !7793
  %23 = load i32, i32* %i, align 4, !dbg !7794
  %idxprom11 = sext i32 %23 to i64, !dbg !7795
  %arrayidx12 = getelementptr inbounds [2 x i32], [2 x i32]* %xadv, i64 0, i64 %idxprom11, !dbg !7795
  %24 = load i32, i32* %arrayidx12, align 4, !dbg !7795
  %cmp13 = icmp ne i32 %24, 65536, !dbg !7796
  br i1 %cmp13, label %if.then, label %lor.lhs.false, !dbg !7797

lor.lhs.false:                                    ; preds = %av_clip_c.exit
  %25 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7798
  %sprite_width14 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %25, i32 0, i32 177, !dbg !7800
  %26 = load i32, i32* %sprite_width14, align 8, !dbg !7800
  %shl15 = shl i32 %26, 16, !dbg !7801
  %27 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7802
  %output_width = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %27, i32 0, i32 175, !dbg !7803
  %28 = load i32, i32* %output_width, align 8, !dbg !7803
  %shl16 = shl i32 %28, 16, !dbg !7804
  %sub17 = sub nsw i32 %shl15, %shl16, !dbg !7805
  %29 = load i32, i32* %i, align 4, !dbg !7806
  %idxprom18 = sext i32 %29 to i64, !dbg !7807
  %arrayidx19 = getelementptr inbounds [2 x i32], [2 x i32]* %xoff, i64 0, i64 %idxprom18, !dbg !7807
  %30 = load i32, i32* %arrayidx19, align 4, !dbg !7807
  %sub20 = sub nsw i32 %sub17, %30, !dbg !7808
  %tobool = icmp ne i32 %sub20, 0, !dbg !7808
  br i1 %tobool, label %if.then, label %if.end, !dbg !7809

if.then:                                          ; preds = %lor.lhs.false, %av_clip_c.exit
  %31 = load i32, i32* %i, align 4, !dbg !7810
  %idxprom21 = sext i32 %31 to i64, !dbg !7811
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %xadv, i64 0, i64 %idxprom21, !dbg !7811
  %32 = load i32, i32* %arrayidx22, align 4, !dbg !7811
  %33 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7812
  %sprite_width23 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %33, i32 0, i32 177, !dbg !7813
  %34 = load i32, i32* %sprite_width23, align 8, !dbg !7813
  %shl24 = shl i32 %34, 16, !dbg !7814
  %35 = load i32, i32* %i, align 4, !dbg !7815
  %idxprom25 = sext i32 %35 to i64, !dbg !7816
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %xoff, i64 0, i64 %idxprom25, !dbg !7816
  %36 = load i32, i32* %arrayidx26, align 4, !dbg !7816
  %sub27 = sub nsw i32 %shl24, %36, !dbg !7817
  %sub28 = sub nsw i32 %sub27, 1, !dbg !7818
  %37 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7819
  %output_width29 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %37, i32 0, i32 175, !dbg !7820
  %38 = load i32, i32* %output_width29, align 8, !dbg !7820
  %div = sdiv i32 %sub28, %38, !dbg !7821
  store i32 %32, i32* %a.addr.i371, align 4, !dbg !7822
  store i32 0, i32* %amin.addr.i372, align 4, !dbg !7822
  store i32 %div, i32* %amax.addr.i373, align 4, !dbg !7822
  %39 = load i32, i32* %a.addr.i371, align 4, !dbg !7823
  %40 = load i32, i32* %amin.addr.i372, align 4, !dbg !7824
  %cmp.i374 = icmp slt i32 %39, %40, !dbg !7825
  br i1 %cmp.i374, label %if.then.i375, label %if.else.i377, !dbg !7826

if.then.i375:                                     ; preds = %if.then
  %41 = load i32, i32* %amin.addr.i372, align 4, !dbg !7827
  store i32 %41, i32* %retval.i370, align 4, !dbg !7828
  br label %av_clip_c.exit380, !dbg !7828

if.else.i377:                                     ; preds = %if.then
  %42 = load i32, i32* %a.addr.i371, align 4, !dbg !7829
  %43 = load i32, i32* %amax.addr.i373, align 4, !dbg !7830
  %cmp1.i376 = icmp sgt i32 %42, %43, !dbg !7831
  br i1 %cmp1.i376, label %if.then2.i378, label %if.else3.i379, !dbg !7832

if.then2.i378:                                    ; preds = %if.else.i377
  %44 = load i32, i32* %amax.addr.i373, align 4, !dbg !7833
  store i32 %44, i32* %retval.i370, align 4, !dbg !7834
  br label %av_clip_c.exit380, !dbg !7834

if.else3.i379:                                    ; preds = %if.else.i377
  %45 = load i32, i32* %a.addr.i371, align 4, !dbg !7835
  store i32 %45, i32* %retval.i370, align 4, !dbg !7836
  br label %av_clip_c.exit380, !dbg !7836

av_clip_c.exit380:                                ; preds = %if.then.i375, %if.then2.i378, %if.else3.i379
  %46 = load i32, i32* %retval.i370, align 4, !dbg !7837
  %47 = load i32, i32* %i, align 4, !dbg !7838
  %idxprom31 = sext i32 %47 to i64, !dbg !7839
  %arrayidx32 = getelementptr inbounds [2 x i32], [2 x i32]* %xadv, i64 0, i64 %idxprom31, !dbg !7839
  store i32 %46, i32* %arrayidx32, align 4, !dbg !7840
  br label %if.end, !dbg !7839

if.end:                                           ; preds = %av_clip_c.exit380, %lor.lhs.false
  %48 = load i32, i32* %i, align 4, !dbg !7841
  %idxprom33 = sext i32 %48 to i64, !dbg !7842
  %49 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7842
  %coefs34 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %49, i32 0, i32 0, !dbg !7843
  %arrayidx35 = getelementptr inbounds [2 x [7 x i32]], [2 x [7 x i32]]* %coefs34, i64 0, i64 %idxprom33, !dbg !7842
  %arrayidx36 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx35, i64 0, i64 5, !dbg !7842
  %50 = load i32, i32* %arrayidx36, align 4, !dbg !7842
  %51 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7844
  %sprite_height = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %51, i32 0, i32 178, !dbg !7845
  %52 = load i32, i32* %sprite_height, align 4, !dbg !7845
  %sub37 = sub nsw i32 %52, 1, !dbg !7846
  %shl38 = shl i32 %sub37, 16, !dbg !7847
  store i32 %50, i32* %a.addr.i382, align 4, !dbg !7848
  store i32 0, i32* %amin.addr.i383, align 4, !dbg !7848
  store i32 %shl38, i32* %amax.addr.i384, align 4, !dbg !7848
  %53 = load i32, i32* %a.addr.i382, align 4, !dbg !7849
  %54 = load i32, i32* %amin.addr.i383, align 4, !dbg !7850
  %cmp.i385 = icmp slt i32 %53, %54, !dbg !7851
  br i1 %cmp.i385, label %if.then.i386, label %if.else.i388, !dbg !7852

if.then.i386:                                     ; preds = %if.end
  %55 = load i32, i32* %amin.addr.i383, align 4, !dbg !7853
  store i32 %55, i32* %retval.i381, align 4, !dbg !7854
  br label %av_clip_c.exit391, !dbg !7854

if.else.i388:                                     ; preds = %if.end
  %56 = load i32, i32* %a.addr.i382, align 4, !dbg !7855
  %57 = load i32, i32* %amax.addr.i384, align 4, !dbg !7856
  %cmp1.i387 = icmp sgt i32 %56, %57, !dbg !7857
  br i1 %cmp1.i387, label %if.then2.i389, label %if.else3.i390, !dbg !7858

if.then2.i389:                                    ; preds = %if.else.i388
  %58 = load i32, i32* %amax.addr.i384, align 4, !dbg !7859
  store i32 %58, i32* %retval.i381, align 4, !dbg !7860
  br label %av_clip_c.exit391, !dbg !7860

if.else3.i390:                                    ; preds = %if.else.i388
  %59 = load i32, i32* %a.addr.i382, align 4, !dbg !7861
  store i32 %59, i32* %retval.i381, align 4, !dbg !7862
  br label %av_clip_c.exit391, !dbg !7862

av_clip_c.exit391:                                ; preds = %if.then.i386, %if.then2.i389, %if.else3.i390
  %60 = load i32, i32* %retval.i381, align 4, !dbg !7863
  %61 = load i32, i32* %i, align 4, !dbg !7864
  %idxprom40 = sext i32 %61 to i64, !dbg !7865
  %arrayidx41 = getelementptr inbounds [2 x i32], [2 x i32]* %yoff, i64 0, i64 %idxprom40, !dbg !7865
  store i32 %60, i32* %arrayidx41, align 4, !dbg !7866
  %62 = load i32, i32* %i, align 4, !dbg !7867
  %idxprom42 = sext i32 %62 to i64, !dbg !7868
  %63 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7868
  %coefs43 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %63, i32 0, i32 0, !dbg !7869
  %arrayidx44 = getelementptr inbounds [2 x [7 x i32]], [2 x [7 x i32]]* %coefs43, i64 0, i64 %idxprom42, !dbg !7868
  %arrayidx45 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx44, i64 0, i64 4, !dbg !7868
  %64 = load i32, i32* %arrayidx45, align 4, !dbg !7868
  %65 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7870
  %sprite_height46 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %65, i32 0, i32 178, !dbg !7871
  %66 = load i32, i32* %sprite_height46, align 4, !dbg !7871
  %shl47 = shl i32 %66, 16, !dbg !7872
  %67 = load i32, i32* %i, align 4, !dbg !7873
  %idxprom48 = sext i32 %67 to i64, !dbg !7874
  %arrayidx49 = getelementptr inbounds [2 x i32], [2 x i32]* %yoff, i64 0, i64 %idxprom48, !dbg !7874
  %68 = load i32, i32* %arrayidx49, align 4, !dbg !7874
  %sub50 = sub nsw i32 %shl47, %68, !dbg !7875
  %69 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7876
  %output_height = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %69, i32 0, i32 176, !dbg !7877
  %70 = load i32, i32* %output_height, align 4, !dbg !7877
  %div51 = sdiv i32 %sub50, %70, !dbg !7878
  store i32 %64, i32* %a.addr.i393, align 4, !dbg !7879
  store i32 0, i32* %amin.addr.i394, align 4, !dbg !7879
  store i32 %div51, i32* %amax.addr.i395, align 4, !dbg !7879
  %71 = load i32, i32* %a.addr.i393, align 4, !dbg !7880
  %72 = load i32, i32* %amin.addr.i394, align 4, !dbg !7881
  %cmp.i396 = icmp slt i32 %71, %72, !dbg !7882
  br i1 %cmp.i396, label %if.then.i397, label %if.else.i399, !dbg !7883

if.then.i397:                                     ; preds = %av_clip_c.exit391
  %73 = load i32, i32* %amin.addr.i394, align 4, !dbg !7884
  store i32 %73, i32* %retval.i392, align 4, !dbg !7885
  br label %av_clip_c.exit402, !dbg !7885

if.else.i399:                                     ; preds = %av_clip_c.exit391
  %74 = load i32, i32* %a.addr.i393, align 4, !dbg !7886
  %75 = load i32, i32* %amax.addr.i395, align 4, !dbg !7887
  %cmp1.i398 = icmp sgt i32 %74, %75, !dbg !7888
  br i1 %cmp1.i398, label %if.then2.i400, label %if.else3.i401, !dbg !7889

if.then2.i400:                                    ; preds = %if.else.i399
  %76 = load i32, i32* %amax.addr.i395, align 4, !dbg !7890
  store i32 %76, i32* %retval.i392, align 4, !dbg !7891
  br label %av_clip_c.exit402, !dbg !7891

if.else3.i401:                                    ; preds = %if.else.i399
  %77 = load i32, i32* %a.addr.i393, align 4, !dbg !7892
  store i32 %77, i32* %retval.i392, align 4, !dbg !7893
  br label %av_clip_c.exit402, !dbg !7893

av_clip_c.exit402:                                ; preds = %if.then.i397, %if.then2.i400, %if.else3.i401
  %78 = load i32, i32* %retval.i392, align 4, !dbg !7894
  %79 = load i32, i32* %i, align 4, !dbg !7895
  %idxprom53 = sext i32 %79 to i64, !dbg !7896
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* %yadv, i64 0, i64 %idxprom53, !dbg !7896
  store i32 %78, i32* %arrayidx54, align 4, !dbg !7897
  br label %for.inc, !dbg !7898

for.inc:                                          ; preds = %av_clip_c.exit402
  %80 = load i32, i32* %i, align 4, !dbg !7899
  %inc = add nsw i32 %80, 1, !dbg !7899
  store i32 %inc, i32* %i, align 4, !dbg !7899
  br label %for.cond, !dbg !7901, !llvm.loop !7902

for.end:                                          ; preds = %for.cond
  %81 = load %struct.SpriteData*, %struct.SpriteData** %sd.addr, align 8, !dbg !7904
  %coefs55 = getelementptr inbounds %struct.SpriteData, %struct.SpriteData* %81, i32 0, i32 0, !dbg !7905
  %arrayidx56 = getelementptr inbounds [2 x [7 x i32]], [2 x [7 x i32]]* %coefs55, i64 0, i64 1, !dbg !7904
  %arrayidx57 = getelementptr inbounds [7 x i32], [7 x i32]* %arrayidx56, i64 0, i64 6, !dbg !7904
  %82 = load i32, i32* %arrayidx57, align 4, !dbg !7904
  store i32 %82, i32* %a.addr.i404, align 4, !dbg !7906
  %83 = load i32, i32* %a.addr.i404, align 4, !dbg !7907
  %and.i = and i32 %83, -65536, !dbg !7909
  %tobool.i = icmp ne i32 %and.i, 0, !dbg !7909
  br i1 %tobool.i, label %if.then.i405, label %if.else.i406, !dbg !7910

if.then.i405:                                     ; preds = %for.end
  %84 = load i32, i32* %a.addr.i404, align 4, !dbg !7911
  %neg.i = xor i32 %84, -1, !dbg !7913
  %shr.i = ashr i32 %neg.i, 31, !dbg !7914
  %conv.i = trunc i32 %shr.i to i16, !dbg !7915
  store i16 %conv.i, i16* %retval.i403, align 2, !dbg !7916
  br label %av_clip_uint16_c.exit, !dbg !7916

if.else.i406:                                     ; preds = %for.end
  %85 = load i32, i32* %a.addr.i404, align 4, !dbg !7917
  %conv1.i = trunc i32 %85 to i16, !dbg !7917
  store i16 %conv1.i, i16* %retval.i403, align 2, !dbg !7918
  br label %av_clip_uint16_c.exit, !dbg !7918

av_clip_uint16_c.exit:                            ; preds = %if.then.i405, %if.else.i406
  %86 = load i16, i16* %retval.i403, align 2, !dbg !7919
  %conv = zext i16 %86 to i32, !dbg !7906
  store i32 %conv, i32* %alpha, align 4, !dbg !7920
  store i32 0, i32* %plane, align 4, !dbg !7921
  br label %for.cond59, !dbg !7923

for.cond59:                                       ; preds = %for.inc367, %av_clip_uint16_c.exit
  %87 = load i32, i32* %plane, align 4, !dbg !7924
  %cmp60 = icmp slt i32 %87, 3, !dbg !7927
  br i1 %cmp60, label %for.body62, label %for.end369, !dbg !7928

for.body62:                                       ; preds = %for.cond59
  call void @llvm.dbg.declare(metadata i32* %width, metadata !7929, metadata !3012), !dbg !7931
  %88 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7932
  %output_width63 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %88, i32 0, i32 175, !dbg !7933
  %89 = load i32, i32* %output_width63, align 8, !dbg !7933
  %90 = load i32, i32* %plane, align 4, !dbg !7934
  %tobool64 = icmp ne i32 %90, 0, !dbg !7935
  %lnot = xor i1 %tobool64, true, !dbg !7935
  %lnot65 = xor i1 %lnot, true, !dbg !7936
  %lnot.ext = zext i1 %lnot65 to i32, !dbg !7936
  %shr = ashr i32 %89, %lnot.ext, !dbg !7937
  store i32 %shr, i32* %width, align 4, !dbg !7931
  store i32 0, i32* %row, align 4, !dbg !7938
  br label %for.cond66, !dbg !7940

for.cond66:                                       ; preds = %for.inc347, %for.body62
  %91 = load i32, i32* %row, align 4, !dbg !7941
  %92 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7944
  %output_height67 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %92, i32 0, i32 176, !dbg !7945
  %93 = load i32, i32* %output_height67, align 4, !dbg !7945
  %94 = load i32, i32* %plane, align 4, !dbg !7946
  %tobool68 = icmp ne i32 %94, 0, !dbg !7947
  %lnot69 = xor i1 %tobool68, true, !dbg !7947
  %lnot71 = xor i1 %lnot69, true, !dbg !7948
  %lnot.ext72 = zext i1 %lnot71 to i32, !dbg !7948
  %shr73 = ashr i32 %93, %lnot.ext72, !dbg !7949
  %cmp74 = icmp slt i32 %91, %shr73, !dbg !7950
  br i1 %cmp74, label %for.body76, label %for.end349, !dbg !7951

for.body76:                                       ; preds = %for.cond66
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !7952, metadata !3012), !dbg !7954
  %95 = load i32, i32* %plane, align 4, !dbg !7955
  %idxprom77 = sext i32 %95 to i64, !dbg !7956
  %96 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7956
  %sprite_output_frame = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %96, i32 0, i32 174, !dbg !7957
  %97 = load %struct.AVFrame*, %struct.AVFrame** %sprite_output_frame, align 8, !dbg !7957
  %data = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %97, i32 0, i32 0, !dbg !7958
  %arrayidx78 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data, i64 0, i64 %idxprom77, !dbg !7956
  %98 = load i8*, i8** %arrayidx78, align 8, !dbg !7956
  %99 = load i32, i32* %plane, align 4, !dbg !7959
  %idxprom79 = sext i32 %99 to i64, !dbg !7960
  %100 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7960
  %sprite_output_frame80 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %100, i32 0, i32 174, !dbg !7961
  %101 = load %struct.AVFrame*, %struct.AVFrame** %sprite_output_frame80, align 8, !dbg !7961
  %linesize = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %101, i32 0, i32 1, !dbg !7962
  %arrayidx81 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize, i64 0, i64 %idxprom79, !dbg !7960
  %102 = load i32, i32* %arrayidx81, align 4, !dbg !7960
  %103 = load i32, i32* %row, align 4, !dbg !7963
  %mul = mul nsw i32 %102, %103, !dbg !7964
  %idx.ext = sext i32 %mul to i64, !dbg !7965
  %add.ptr = getelementptr inbounds i8, i8* %98, i64 %idx.ext, !dbg !7965
  store i8* %add.ptr, i8** %dst, align 8, !dbg !7954
  store i32 0, i32* %sprite, align 4, !dbg !7966
  br label %for.cond82, !dbg !7968

for.cond82:                                       ; preds = %for.inc273, %for.body76
  %104 = load i32, i32* %sprite, align 4, !dbg !7969
  %105 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !7972
  %two_sprites83 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %105, i32 0, i32 173, !dbg !7973
  %106 = load i32, i32* %two_sprites83, align 8, !dbg !7973
  %cmp84 = icmp sle i32 %104, %106, !dbg !7974
  br i1 %cmp84, label %for.body86, label %for.end275, !dbg !7975

for.body86:                                       ; preds = %for.cond82
  call void @llvm.dbg.declare(metadata i8** %iplane, metadata !7976, metadata !3012), !dbg !7978
  %107 = load i32, i32* %plane, align 4, !dbg !7979
  %idxprom87 = sext i32 %107 to i64, !dbg !7980
  %108 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !7980
  %current_picture = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %108, i32 0, i32 58, !dbg !7981
  %f = getelementptr inbounds %struct.Picture, %struct.Picture* %current_picture, i32 0, i32 0, !dbg !7982
  %109 = load %struct.AVFrame*, %struct.AVFrame** %f, align 8, !dbg !7982
  %data88 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %109, i32 0, i32 0, !dbg !7983
  %arrayidx89 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data88, i64 0, i64 %idxprom87, !dbg !7980
  %110 = load i8*, i8** %arrayidx89, align 8, !dbg !7980
  store i8* %110, i8** %iplane, align 8, !dbg !7978
  call void @llvm.dbg.declare(metadata i32* %iline, metadata !7984, metadata !3012), !dbg !7985
  %111 = load i32, i32* %plane, align 4, !dbg !7986
  %idxprom90 = sext i32 %111 to i64, !dbg !7987
  %112 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !7987
  %current_picture91 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %112, i32 0, i32 58, !dbg !7988
  %f92 = getelementptr inbounds %struct.Picture, %struct.Picture* %current_picture91, i32 0, i32 0, !dbg !7989
  %113 = load %struct.AVFrame*, %struct.AVFrame** %f92, align 8, !dbg !7989
  %linesize93 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %113, i32 0, i32 1, !dbg !7990
  %arrayidx94 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize93, i64 0, i64 %idxprom90, !dbg !7987
  %114 = load i32, i32* %arrayidx94, align 4, !dbg !7987
  store i32 %114, i32* %iline, align 4, !dbg !7985
  call void @llvm.dbg.declare(metadata i32* %ycoord, metadata !7991, metadata !3012), !dbg !7992
  %115 = load i32, i32* %sprite, align 4, !dbg !7993
  %idxprom95 = sext i32 %115 to i64, !dbg !7994
  %arrayidx96 = getelementptr inbounds [2 x i32], [2 x i32]* %yoff, i64 0, i64 %idxprom95, !dbg !7994
  %116 = load i32, i32* %arrayidx96, align 4, !dbg !7994
  %117 = load i32, i32* %sprite, align 4, !dbg !7995
  %idxprom97 = sext i32 %117 to i64, !dbg !7996
  %arrayidx98 = getelementptr inbounds [2 x i32], [2 x i32]* %yadv, i64 0, i64 %idxprom97, !dbg !7996
  %118 = load i32, i32* %arrayidx98, align 4, !dbg !7996
  %119 = load i32, i32* %row, align 4, !dbg !7997
  %mul99 = mul nsw i32 %118, %119, !dbg !7998
  %add = add nsw i32 %116, %mul99, !dbg !7999
  store i32 %add, i32* %ycoord, align 4, !dbg !7992
  call void @llvm.dbg.declare(metadata i32* %yline, metadata !8000, metadata !3012), !dbg !8001
  %120 = load i32, i32* %ycoord, align 4, !dbg !8002
  %shr100 = ashr i32 %120, 16, !dbg !8003
  store i32 %shr100, i32* %yline, align 4, !dbg !8001
  call void @llvm.dbg.declare(metadata i32* %next_line, metadata !8004, metadata !3012), !dbg !8005
  %121 = load i32, i32* %ycoord, align 4, !dbg !8006
  %and = and i32 %121, 65535, !dbg !8007
  %122 = load i32, i32* %sprite, align 4, !dbg !8008
  %idxprom101 = sext i32 %122 to i64, !dbg !8009
  %arrayidx102 = getelementptr inbounds [2 x i32], [2 x i32]* %ysub, i64 0, i64 %idxprom101, !dbg !8009
  store i32 %and, i32* %arrayidx102, align 4, !dbg !8010
  %123 = load i32, i32* %sprite, align 4, !dbg !8011
  %tobool103 = icmp ne i32 %123, 0, !dbg !8011
  br i1 %tobool103, label %if.then104, label %if.end114, !dbg !8013

if.then104:                                       ; preds = %for.body86
  %124 = load i32, i32* %plane, align 4, !dbg !8014
  %idxprom105 = sext i32 %124 to i64, !dbg !8016
  %125 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !8016
  %last_picture = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %125, i32 0, i32 55, !dbg !8017
  %f106 = getelementptr inbounds %struct.Picture, %struct.Picture* %last_picture, i32 0, i32 0, !dbg !8018
  %126 = load %struct.AVFrame*, %struct.AVFrame** %f106, align 8, !dbg !8018
  %data107 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %126, i32 0, i32 0, !dbg !8019
  %arrayidx108 = getelementptr inbounds [8 x i8*], [8 x i8*]* %data107, i64 0, i64 %idxprom105, !dbg !8016
  %127 = load i8*, i8** %arrayidx108, align 8, !dbg !8016
  store i8* %127, i8** %iplane, align 8, !dbg !8020
  %128 = load i32, i32* %plane, align 4, !dbg !8021
  %idxprom109 = sext i32 %128 to i64, !dbg !8022
  %129 = load %struct.MpegEncContext*, %struct.MpegEncContext** %s, align 8, !dbg !8022
  %last_picture110 = getelementptr inbounds %struct.MpegEncContext, %struct.MpegEncContext* %129, i32 0, i32 55, !dbg !8023
  %f111 = getelementptr inbounds %struct.Picture, %struct.Picture* %last_picture110, i32 0, i32 0, !dbg !8024
  %130 = load %struct.AVFrame*, %struct.AVFrame** %f111, align 8, !dbg !8024
  %linesize112 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %130, i32 0, i32 1, !dbg !8025
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %linesize112, i64 0, i64 %idxprom109, !dbg !8022
  %131 = load i32, i32* %arrayidx113, align 4, !dbg !8022
  store i32 %131, i32* %iline, align 4, !dbg !8026
  br label %if.end114, !dbg !8027

if.end114:                                        ; preds = %if.then104, %for.body86
  %132 = load i32, i32* %yline, align 4, !dbg !8028
  %add115 = add nsw i32 %132, 1, !dbg !8029
  %133 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8030
  %sprite_height116 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %133, i32 0, i32 178, !dbg !8031
  %134 = load i32, i32* %sprite_height116, align 4, !dbg !8031
  %135 = load i32, i32* %plane, align 4, !dbg !8032
  %tobool117 = icmp ne i32 %135, 0, !dbg !8033
  %lnot118 = xor i1 %tobool117, true, !dbg !8033
  %lnot120 = xor i1 %lnot118, true, !dbg !8034
  %lnot.ext121 = zext i1 %lnot120 to i32, !dbg !8034
  %shr122 = ashr i32 %134, %lnot.ext121, !dbg !8035
  %sub123 = sub nsw i32 %shr122, 1, !dbg !8036
  %cmp124 = icmp sgt i32 %add115, %sub123, !dbg !8037
  br i1 %cmp124, label %cond.true, label %cond.false, !dbg !8038

cond.true:                                        ; preds = %if.end114
  %136 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8039
  %sprite_height126 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %136, i32 0, i32 178, !dbg !8041
  %137 = load i32, i32* %sprite_height126, align 4, !dbg !8041
  %138 = load i32, i32* %plane, align 4, !dbg !8042
  %tobool127 = icmp ne i32 %138, 0, !dbg !8043
  %lnot128 = xor i1 %tobool127, true, !dbg !8043
  %lnot130 = xor i1 %lnot128, true, !dbg !8044
  %lnot.ext131 = zext i1 %lnot130 to i32, !dbg !8044
  %shr132 = ashr i32 %137, %lnot.ext131, !dbg !8045
  %sub133 = sub nsw i32 %shr132, 1, !dbg !8046
  br label %cond.end, !dbg !8047

cond.false:                                       ; preds = %if.end114
  %139 = load i32, i32* %yline, align 4, !dbg !8048
  %add134 = add nsw i32 %139, 1, !dbg !8050
  br label %cond.end, !dbg !8051

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub133, %cond.true ], [ %add134, %cond.false ], !dbg !8052
  %140 = load i32, i32* %iline, align 4, !dbg !8054
  %mul135 = mul nsw i32 %cond, %140, !dbg !8055
  store i32 %mul135, i32* %next_line, align 4, !dbg !8056
  %141 = load i32, i32* %sprite, align 4, !dbg !8057
  %idxprom136 = sext i32 %141 to i64, !dbg !8059
  %arrayidx137 = getelementptr inbounds [2 x i32], [2 x i32]* %xoff, i64 0, i64 %idxprom136, !dbg !8059
  %142 = load i32, i32* %arrayidx137, align 4, !dbg !8059
  %and138 = and i32 %142, 65535, !dbg !8060
  %tobool139 = icmp ne i32 %and138, 0, !dbg !8060
  br i1 %tobool139, label %if.else, label %land.lhs.true, !dbg !8061

land.lhs.true:                                    ; preds = %cond.end
  %143 = load i32, i32* %sprite, align 4, !dbg !8062
  %idxprom140 = sext i32 %143 to i64, !dbg !8064
  %arrayidx141 = getelementptr inbounds [2 x i32], [2 x i32]* %xadv, i64 0, i64 %idxprom140, !dbg !8064
  %144 = load i32, i32* %arrayidx141, align 4, !dbg !8064
  %cmp142 = icmp eq i32 %144, 65536, !dbg !8065
  br i1 %cmp142, label %if.then144, label %if.else, !dbg !8066

if.then144:                                       ; preds = %land.lhs.true
  %145 = load i8*, i8** %iplane, align 8, !dbg !8067
  %146 = load i32, i32* %sprite, align 4, !dbg !8069
  %idxprom145 = sext i32 %146 to i64, !dbg !8070
  %arrayidx146 = getelementptr inbounds [2 x i32], [2 x i32]* %xoff, i64 0, i64 %idxprom145, !dbg !8070
  %147 = load i32, i32* %arrayidx146, align 4, !dbg !8070
  %shr147 = ashr i32 %147, 16, !dbg !8071
  %idx.ext148 = sext i32 %shr147 to i64, !dbg !8072
  %add.ptr149 = getelementptr inbounds i8, i8* %145, i64 %idx.ext148, !dbg !8072
  %148 = load i32, i32* %yline, align 4, !dbg !8073
  %149 = load i32, i32* %iline, align 4, !dbg !8074
  %mul150 = mul nsw i32 %148, %149, !dbg !8075
  %idx.ext151 = sext i32 %mul150 to i64, !dbg !8076
  %add.ptr152 = getelementptr inbounds i8, i8* %add.ptr149, i64 %idx.ext151, !dbg !8076
  %150 = load i32, i32* %sprite, align 4, !dbg !8077
  %idxprom153 = sext i32 %150 to i64, !dbg !8078
  %arrayidx154 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 %idxprom153, !dbg !8078
  %arrayidx155 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx154, i64 0, i64 0, !dbg !8078
  store i8* %add.ptr152, i8** %arrayidx155, align 16, !dbg !8079
  %151 = load i32, i32* %sprite, align 4, !dbg !8080
  %idxprom156 = sext i32 %151 to i64, !dbg !8082
  %arrayidx157 = getelementptr inbounds [2 x i32], [2 x i32]* %ysub, i64 0, i64 %idxprom156, !dbg !8082
  %152 = load i32, i32* %arrayidx157, align 4, !dbg !8082
  %tobool158 = icmp ne i32 %152, 0, !dbg !8082
  br i1 %tobool158, label %if.then159, label %if.end170, !dbg !8083

if.then159:                                       ; preds = %if.then144
  %153 = load i8*, i8** %iplane, align 8, !dbg !8084
  %154 = load i32, i32* %sprite, align 4, !dbg !8085
  %idxprom160 = sext i32 %154 to i64, !dbg !8086
  %arrayidx161 = getelementptr inbounds [2 x i32], [2 x i32]* %xoff, i64 0, i64 %idxprom160, !dbg !8086
  %155 = load i32, i32* %arrayidx161, align 4, !dbg !8086
  %shr162 = ashr i32 %155, 16, !dbg !8087
  %idx.ext163 = sext i32 %shr162 to i64, !dbg !8088
  %add.ptr164 = getelementptr inbounds i8, i8* %153, i64 %idx.ext163, !dbg !8088
  %156 = load i32, i32* %next_line, align 4, !dbg !8089
  %idx.ext165 = sext i32 %156 to i64, !dbg !8090
  %add.ptr166 = getelementptr inbounds i8, i8* %add.ptr164, i64 %idx.ext165, !dbg !8090
  %157 = load i32, i32* %sprite, align 4, !dbg !8091
  %idxprom167 = sext i32 %157 to i64, !dbg !8092
  %arrayidx168 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 %idxprom167, !dbg !8092
  %arrayidx169 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx168, i64 0, i64 1, !dbg !8092
  store i8* %add.ptr166, i8** %arrayidx169, align 8, !dbg !8093
  br label %if.end170, !dbg !8092

if.end170:                                        ; preds = %if.then159, %if.then144
  br label %if.end272, !dbg !8094

if.else:                                          ; preds = %land.lhs.true, %cond.end
  %158 = load i32, i32* %sprite, align 4, !dbg !8095
  %idxprom171 = sext i32 %158 to i64, !dbg !8098
  %arrayidx172 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %sr_cache, i64 0, i64 %idxprom171, !dbg !8098
  %arrayidx173 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx172, i64 0, i64 0, !dbg !8098
  %159 = load i32, i32* %arrayidx173, align 8, !dbg !8098
  %160 = load i32, i32* %yline, align 4, !dbg !8099
  %cmp174 = icmp ne i32 %159, %160, !dbg !8100
  br i1 %cmp174, label %if.then176, label %if.end229, !dbg !8101

if.then176:                                       ; preds = %if.else
  %161 = load i32, i32* %sprite, align 4, !dbg !8102
  %idxprom177 = sext i32 %161 to i64, !dbg !8105
  %arrayidx178 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %sr_cache, i64 0, i64 %idxprom177, !dbg !8105
  %arrayidx179 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx178, i64 0, i64 1, !dbg !8105
  %162 = load i32, i32* %arrayidx179, align 4, !dbg !8105
  %163 = load i32, i32* %yline, align 4, !dbg !8106
  %cmp180 = icmp eq i32 %162, %163, !dbg !8107
  br i1 %cmp180, label %if.then182, label %if.else213, !dbg !8108

if.then182:                                       ; preds = %if.then176
  br label %do.body, !dbg !8109, !llvm.loop !8111

do.body:                                          ; preds = %if.then182
  call void @llvm.dbg.declare(metadata i8** %SWAP_tmp, metadata !8112, metadata !3012), !dbg !8114
  %164 = load i32, i32* %sprite, align 4, !dbg !8115
  %idxprom183 = sext i32 %164 to i64, !dbg !8117
  %165 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8117
  %sr_rows = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %165, i32 0, i32 179, !dbg !8118
  %arrayidx184 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %sr_rows, i64 0, i64 %idxprom183, !dbg !8117
  %arrayidx185 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx184, i64 0, i64 1, !dbg !8117
  %166 = load i8*, i8** %arrayidx185, align 8, !dbg !8117
  store i8* %166, i8** %SWAP_tmp, align 8, !dbg !8119
  %167 = load i32, i32* %sprite, align 4, !dbg !8120
  %idxprom186 = sext i32 %167 to i64, !dbg !8121
  %168 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8121
  %sr_rows187 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %168, i32 0, i32 179, !dbg !8122
  %arrayidx188 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %sr_rows187, i64 0, i64 %idxprom186, !dbg !8121
  %arrayidx189 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx188, i64 0, i64 0, !dbg !8121
  %169 = load i8*, i8** %arrayidx189, align 8, !dbg !8121
  %170 = load i32, i32* %sprite, align 4, !dbg !8123
  %idxprom190 = sext i32 %170 to i64, !dbg !8124
  %171 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8124
  %sr_rows191 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %171, i32 0, i32 179, !dbg !8125
  %arrayidx192 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %sr_rows191, i64 0, i64 %idxprom190, !dbg !8124
  %arrayidx193 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx192, i64 0, i64 1, !dbg !8124
  store i8* %169, i8** %arrayidx193, align 8, !dbg !8126
  %172 = load i8*, i8** %SWAP_tmp, align 8, !dbg !8127
  %173 = load i32, i32* %sprite, align 4, !dbg !8128
  %idxprom194 = sext i32 %173 to i64, !dbg !8129
  %174 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8129
  %sr_rows195 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %174, i32 0, i32 179, !dbg !8130
  %arrayidx196 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %sr_rows195, i64 0, i64 %idxprom194, !dbg !8129
  %arrayidx197 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx196, i64 0, i64 0, !dbg !8129
  store i8* %172, i8** %arrayidx197, align 8, !dbg !8131
  br label %do.end, !dbg !8132

do.end:                                           ; preds = %do.body
  br label %do.body198, !dbg !8133, !llvm.loop !8134

do.body198:                                       ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %SWAP_tmp199, metadata !8135, metadata !3012), !dbg !8137
  %175 = load i32, i32* %sprite, align 4, !dbg !8138
  %idxprom200 = sext i32 %175 to i64, !dbg !8140
  %arrayidx201 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %sr_cache, i64 0, i64 %idxprom200, !dbg !8140
  %arrayidx202 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx201, i64 0, i64 1, !dbg !8140
  %176 = load i32, i32* %arrayidx202, align 4, !dbg !8140
  store i32 %176, i32* %SWAP_tmp199, align 4, !dbg !8141
  %177 = load i32, i32* %sprite, align 4, !dbg !8142
  %idxprom203 = sext i32 %177 to i64, !dbg !8143
  %arrayidx204 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %sr_cache, i64 0, i64 %idxprom203, !dbg !8143
  %arrayidx205 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx204, i64 0, i64 0, !dbg !8143
  %178 = load i32, i32* %arrayidx205, align 8, !dbg !8143
  %179 = load i32, i32* %sprite, align 4, !dbg !8144
  %idxprom206 = sext i32 %179 to i64, !dbg !8145
  %arrayidx207 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %sr_cache, i64 0, i64 %idxprom206, !dbg !8145
  %arrayidx208 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx207, i64 0, i64 1, !dbg !8145
  store i32 %178, i32* %arrayidx208, align 4, !dbg !8146
  %180 = load i32, i32* %SWAP_tmp199, align 4, !dbg !8147
  %181 = load i32, i32* %sprite, align 4, !dbg !8148
  %idxprom209 = sext i32 %181 to i64, !dbg !8149
  %arrayidx210 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %sr_cache, i64 0, i64 %idxprom209, !dbg !8149
  %arrayidx211 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx210, i64 0, i64 0, !dbg !8149
  store i32 %180, i32* %arrayidx211, align 8, !dbg !8150
  br label %do.end212, !dbg !8151

do.end212:                                        ; preds = %do.body198
  br label %if.end228, !dbg !8152

if.else213:                                       ; preds = %if.then176
  %182 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8153
  %vc1dsp = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %182, i32 0, i32 3, !dbg !8155
  %sprite_h = getelementptr inbounds %struct.VC1DSPContext, %struct.VC1DSPContext* %vc1dsp, i32 0, i32 22, !dbg !8156
  %183 = load void (i8*, i8*, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32)** %sprite_h, align 8, !dbg !8156
  %184 = load i32, i32* %sprite, align 4, !dbg !8157
  %idxprom214 = sext i32 %184 to i64, !dbg !8158
  %185 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8158
  %sr_rows215 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %185, i32 0, i32 179, !dbg !8159
  %arrayidx216 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %sr_rows215, i64 0, i64 %idxprom214, !dbg !8158
  %arrayidx217 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx216, i64 0, i64 0, !dbg !8158
  %186 = load i8*, i8** %arrayidx217, align 8, !dbg !8158
  %187 = load i8*, i8** %iplane, align 8, !dbg !8160
  %188 = load i32, i32* %yline, align 4, !dbg !8161
  %189 = load i32, i32* %iline, align 4, !dbg !8162
  %mul218 = mul nsw i32 %188, %189, !dbg !8163
  %idx.ext219 = sext i32 %mul218 to i64, !dbg !8164
  %add.ptr220 = getelementptr inbounds i8, i8* %187, i64 %idx.ext219, !dbg !8164
  %190 = load i32, i32* %sprite, align 4, !dbg !8165
  %idxprom221 = sext i32 %190 to i64, !dbg !8166
  %arrayidx222 = getelementptr inbounds [2 x i32], [2 x i32]* %xoff, i64 0, i64 %idxprom221, !dbg !8166
  %191 = load i32, i32* %arrayidx222, align 4, !dbg !8166
  %192 = load i32, i32* %sprite, align 4, !dbg !8167
  %idxprom223 = sext i32 %192 to i64, !dbg !8168
  %arrayidx224 = getelementptr inbounds [2 x i32], [2 x i32]* %xadv, i64 0, i64 %idxprom223, !dbg !8168
  %193 = load i32, i32* %arrayidx224, align 4, !dbg !8168
  %194 = load i32, i32* %width, align 4, !dbg !8169
  call void %183(i8* %186, i8* %add.ptr220, i32 %191, i32 %193, i32 %194), !dbg !8153
  %195 = load i32, i32* %yline, align 4, !dbg !8170
  %196 = load i32, i32* %sprite, align 4, !dbg !8171
  %idxprom225 = sext i32 %196 to i64, !dbg !8172
  %arrayidx226 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %sr_cache, i64 0, i64 %idxprom225, !dbg !8172
  %arrayidx227 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx226, i64 0, i64 0, !dbg !8172
  store i32 %195, i32* %arrayidx227, align 8, !dbg !8173
  br label %if.end228

if.end228:                                        ; preds = %if.else213, %do.end212
  br label %if.end229, !dbg !8174

if.end229:                                        ; preds = %if.end228, %if.else
  %197 = load i32, i32* %sprite, align 4, !dbg !8175
  %idxprom230 = sext i32 %197 to i64, !dbg !8177
  %arrayidx231 = getelementptr inbounds [2 x i32], [2 x i32]* %ysub, i64 0, i64 %idxprom230, !dbg !8177
  %198 = load i32, i32* %arrayidx231, align 4, !dbg !8177
  %tobool232 = icmp ne i32 %198, 0, !dbg !8177
  br i1 %tobool232, label %land.lhs.true233, label %if.end257, !dbg !8178

land.lhs.true233:                                 ; preds = %if.end229
  %199 = load i32, i32* %sprite, align 4, !dbg !8179
  %idxprom234 = sext i32 %199 to i64, !dbg !8181
  %arrayidx235 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %sr_cache, i64 0, i64 %idxprom234, !dbg !8181
  %arrayidx236 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx235, i64 0, i64 1, !dbg !8181
  %200 = load i32, i32* %arrayidx236, align 4, !dbg !8181
  %201 = load i32, i32* %yline, align 4, !dbg !8182
  %add237 = add nsw i32 %201, 1, !dbg !8183
  %cmp238 = icmp ne i32 %200, %add237, !dbg !8184
  br i1 %cmp238, label %if.then240, label %if.end257, !dbg !8185

if.then240:                                       ; preds = %land.lhs.true233
  %202 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8186
  %vc1dsp241 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %202, i32 0, i32 3, !dbg !8188
  %sprite_h242 = getelementptr inbounds %struct.VC1DSPContext, %struct.VC1DSPContext* %vc1dsp241, i32 0, i32 22, !dbg !8189
  %203 = load void (i8*, i8*, i32, i32, i32)*, void (i8*, i8*, i32, i32, i32)** %sprite_h242, align 8, !dbg !8189
  %204 = load i32, i32* %sprite, align 4, !dbg !8190
  %idxprom243 = sext i32 %204 to i64, !dbg !8191
  %205 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8191
  %sr_rows244 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %205, i32 0, i32 179, !dbg !8192
  %arrayidx245 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %sr_rows244, i64 0, i64 %idxprom243, !dbg !8191
  %arrayidx246 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx245, i64 0, i64 1, !dbg !8191
  %206 = load i8*, i8** %arrayidx246, align 8, !dbg !8191
  %207 = load i8*, i8** %iplane, align 8, !dbg !8193
  %208 = load i32, i32* %next_line, align 4, !dbg !8194
  %idx.ext247 = sext i32 %208 to i64, !dbg !8195
  %add.ptr248 = getelementptr inbounds i8, i8* %207, i64 %idx.ext247, !dbg !8195
  %209 = load i32, i32* %sprite, align 4, !dbg !8196
  %idxprom249 = sext i32 %209 to i64, !dbg !8197
  %arrayidx250 = getelementptr inbounds [2 x i32], [2 x i32]* %xoff, i64 0, i64 %idxprom249, !dbg !8197
  %210 = load i32, i32* %arrayidx250, align 4, !dbg !8197
  %211 = load i32, i32* %sprite, align 4, !dbg !8198
  %idxprom251 = sext i32 %211 to i64, !dbg !8199
  %arrayidx252 = getelementptr inbounds [2 x i32], [2 x i32]* %xadv, i64 0, i64 %idxprom251, !dbg !8199
  %212 = load i32, i32* %arrayidx252, align 4, !dbg !8199
  %213 = load i32, i32* %width, align 4, !dbg !8200
  call void %203(i8* %206, i8* %add.ptr248, i32 %210, i32 %212, i32 %213), !dbg !8186
  %214 = load i32, i32* %yline, align 4, !dbg !8201
  %add253 = add nsw i32 %214, 1, !dbg !8202
  %215 = load i32, i32* %sprite, align 4, !dbg !8203
  %idxprom254 = sext i32 %215 to i64, !dbg !8204
  %arrayidx255 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %sr_cache, i64 0, i64 %idxprom254, !dbg !8204
  %arrayidx256 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx255, i64 0, i64 1, !dbg !8204
  store i32 %add253, i32* %arrayidx256, align 4, !dbg !8205
  br label %if.end257, !dbg !8206

if.end257:                                        ; preds = %if.then240, %land.lhs.true233, %if.end229
  %216 = load i32, i32* %sprite, align 4, !dbg !8207
  %idxprom258 = sext i32 %216 to i64, !dbg !8208
  %217 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8208
  %sr_rows259 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %217, i32 0, i32 179, !dbg !8209
  %arrayidx260 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %sr_rows259, i64 0, i64 %idxprom258, !dbg !8208
  %arrayidx261 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx260, i64 0, i64 0, !dbg !8208
  %218 = load i8*, i8** %arrayidx261, align 8, !dbg !8208
  %219 = load i32, i32* %sprite, align 4, !dbg !8210
  %idxprom262 = sext i32 %219 to i64, !dbg !8211
  %arrayidx263 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 %idxprom262, !dbg !8211
  %arrayidx264 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx263, i64 0, i64 0, !dbg !8211
  store i8* %218, i8** %arrayidx264, align 16, !dbg !8212
  %220 = load i32, i32* %sprite, align 4, !dbg !8213
  %idxprom265 = sext i32 %220 to i64, !dbg !8214
  %221 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8214
  %sr_rows266 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %221, i32 0, i32 179, !dbg !8215
  %arrayidx267 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %sr_rows266, i64 0, i64 %idxprom265, !dbg !8214
  %arrayidx268 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx267, i64 0, i64 1, !dbg !8214
  %222 = load i8*, i8** %arrayidx268, align 8, !dbg !8214
  %223 = load i32, i32* %sprite, align 4, !dbg !8216
  %idxprom269 = sext i32 %223 to i64, !dbg !8217
  %arrayidx270 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 %idxprom269, !dbg !8217
  %arrayidx271 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx270, i64 0, i64 1, !dbg !8217
  store i8* %222, i8** %arrayidx271, align 8, !dbg !8218
  br label %if.end272

if.end272:                                        ; preds = %if.end257, %if.end170
  br label %for.inc273, !dbg !8219

for.inc273:                                       ; preds = %if.end272
  %224 = load i32, i32* %sprite, align 4, !dbg !8220
  %inc274 = add nsw i32 %224, 1, !dbg !8220
  store i32 %inc274, i32* %sprite, align 4, !dbg !8220
  br label %for.cond82, !dbg !8222, !llvm.loop !8223

for.end275:                                       ; preds = %for.cond82
  %225 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8225
  %two_sprites276 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %225, i32 0, i32 173, !dbg !8227
  %226 = load i32, i32* %two_sprites276, align 8, !dbg !8227
  %tobool277 = icmp ne i32 %226, 0, !dbg !8225
  br i1 %tobool277, label %if.else293, label %if.then278, !dbg !8228

if.then278:                                       ; preds = %for.end275
  %arrayidx279 = getelementptr inbounds [2 x i32], [2 x i32]* %ysub, i64 0, i64 0, !dbg !8229
  %227 = load i32, i32* %arrayidx279, align 4, !dbg !8229
  %tobool280 = icmp ne i32 %227, 0, !dbg !8229
  br i1 %tobool280, label %if.then281, label %if.else288, !dbg !8232

if.then281:                                       ; preds = %if.then278
  %228 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8233
  %vc1dsp282 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %228, i32 0, i32 3, !dbg !8235
  %sprite_v_single = getelementptr inbounds %struct.VC1DSPContext, %struct.VC1DSPContext* %vc1dsp282, i32 0, i32 23, !dbg !8236
  %229 = load void (i8*, i8*, i8*, i32, i32)*, void (i8*, i8*, i8*, i32, i32)** %sprite_v_single, align 8, !dbg !8236
  %230 = load i8*, i8** %dst, align 8, !dbg !8237
  %arrayidx283 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 0, !dbg !8238
  %arrayidx284 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx283, i64 0, i64 0, !dbg !8238
  %231 = load i8*, i8** %arrayidx284, align 16, !dbg !8238
  %arrayidx285 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 0, !dbg !8239
  %arrayidx286 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx285, i64 0, i64 1, !dbg !8239
  %232 = load i8*, i8** %arrayidx286, align 8, !dbg !8239
  %arrayidx287 = getelementptr inbounds [2 x i32], [2 x i32]* %ysub, i64 0, i64 0, !dbg !8240
  %233 = load i32, i32* %arrayidx287, align 4, !dbg !8240
  %234 = load i32, i32* %width, align 4, !dbg !8241
  call void %229(i8* %230, i8* %231, i8* %232, i32 %233, i32 %234), !dbg !8233
  br label %if.end292, !dbg !8242

if.else288:                                       ; preds = %if.then278
  %235 = load i8*, i8** %dst, align 8, !dbg !8243
  %arrayidx289 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 0, !dbg !8245
  %arrayidx290 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx289, i64 0, i64 0, !dbg !8245
  %236 = load i8*, i8** %arrayidx290, align 16, !dbg !8245
  %237 = load i32, i32* %width, align 4, !dbg !8246
  %conv291 = sext i32 %237 to i64, !dbg !8246
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %235, i8* %236, i64 %conv291, i32 1, i1 false), !dbg !8247
  br label %if.end292

if.end292:                                        ; preds = %if.else288, %if.then281
  br label %if.end346, !dbg !8248

if.else293:                                       ; preds = %for.end275
  %arrayidx294 = getelementptr inbounds [2 x i32], [2 x i32]* %ysub, i64 0, i64 0, !dbg !8249
  %238 = load i32, i32* %arrayidx294, align 4, !dbg !8249
  %tobool295 = icmp ne i32 %238, 0, !dbg !8249
  br i1 %tobool295, label %land.lhs.true296, label %if.else311, !dbg !8252

land.lhs.true296:                                 ; preds = %if.else293
  %arrayidx297 = getelementptr inbounds [2 x i32], [2 x i32]* %ysub, i64 0, i64 1, !dbg !8253
  %239 = load i32, i32* %arrayidx297, align 4, !dbg !8253
  %tobool298 = icmp ne i32 %239, 0, !dbg !8253
  br i1 %tobool298, label %if.then299, label %if.else311, !dbg !8255

if.then299:                                       ; preds = %land.lhs.true296
  %240 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8256
  %vc1dsp300 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %240, i32 0, i32 3, !dbg !8258
  %sprite_v_double_twoscale = getelementptr inbounds %struct.VC1DSPContext, %struct.VC1DSPContext* %vc1dsp300, i32 0, i32 26, !dbg !8259
  %241 = load void (i8*, i8*, i8*, i32, i8*, i8*, i32, i32, i32)*, void (i8*, i8*, i8*, i32, i8*, i8*, i32, i32, i32)** %sprite_v_double_twoscale, align 8, !dbg !8259
  %242 = load i8*, i8** %dst, align 8, !dbg !8260
  %arrayidx301 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 0, !dbg !8261
  %arrayidx302 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx301, i64 0, i64 0, !dbg !8261
  %243 = load i8*, i8** %arrayidx302, align 16, !dbg !8261
  %arrayidx303 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 0, !dbg !8262
  %arrayidx304 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx303, i64 0, i64 1, !dbg !8262
  %244 = load i8*, i8** %arrayidx304, align 8, !dbg !8262
  %arrayidx305 = getelementptr inbounds [2 x i32], [2 x i32]* %ysub, i64 0, i64 0, !dbg !8263
  %245 = load i32, i32* %arrayidx305, align 4, !dbg !8263
  %arrayidx306 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 1, !dbg !8264
  %arrayidx307 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx306, i64 0, i64 0, !dbg !8264
  %246 = load i8*, i8** %arrayidx307, align 16, !dbg !8264
  %arrayidx308 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 1, !dbg !8265
  %arrayidx309 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx308, i64 0, i64 1, !dbg !8265
  %247 = load i8*, i8** %arrayidx309, align 8, !dbg !8265
  %arrayidx310 = getelementptr inbounds [2 x i32], [2 x i32]* %ysub, i64 0, i64 1, !dbg !8266
  %248 = load i32, i32* %arrayidx310, align 4, !dbg !8266
  %249 = load i32, i32* %alpha, align 4, !dbg !8267
  %250 = load i32, i32* %width, align 4, !dbg !8268
  call void %241(i8* %242, i8* %243, i8* %244, i32 %245, i8* %246, i8* %247, i32 %248, i32 %249, i32 %250), !dbg !8256
  br label %if.end345, !dbg !8269

if.else311:                                       ; preds = %land.lhs.true296, %if.else293
  %arrayidx312 = getelementptr inbounds [2 x i32], [2 x i32]* %ysub, i64 0, i64 0, !dbg !8270
  %251 = load i32, i32* %arrayidx312, align 4, !dbg !8270
  %tobool313 = icmp ne i32 %251, 0, !dbg !8270
  br i1 %tobool313, label %if.then314, label %if.else323, !dbg !8270

if.then314:                                       ; preds = %if.else311
  %252 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8273
  %vc1dsp315 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %252, i32 0, i32 3, !dbg !8275
  %sprite_v_double_onescale = getelementptr inbounds %struct.VC1DSPContext, %struct.VC1DSPContext* %vc1dsp315, i32 0, i32 25, !dbg !8276
  %253 = load void (i8*, i8*, i8*, i32, i8*, i32, i32)*, void (i8*, i8*, i8*, i32, i8*, i32, i32)** %sprite_v_double_onescale, align 8, !dbg !8276
  %254 = load i8*, i8** %dst, align 8, !dbg !8277
  %arrayidx316 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 0, !dbg !8278
  %arrayidx317 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx316, i64 0, i64 0, !dbg !8278
  %255 = load i8*, i8** %arrayidx317, align 16, !dbg !8278
  %arrayidx318 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 0, !dbg !8279
  %arrayidx319 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx318, i64 0, i64 1, !dbg !8279
  %256 = load i8*, i8** %arrayidx319, align 8, !dbg !8279
  %arrayidx320 = getelementptr inbounds [2 x i32], [2 x i32]* %ysub, i64 0, i64 0, !dbg !8280
  %257 = load i32, i32* %arrayidx320, align 4, !dbg !8280
  %arrayidx321 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 1, !dbg !8281
  %arrayidx322 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx321, i64 0, i64 0, !dbg !8281
  %258 = load i8*, i8** %arrayidx322, align 16, !dbg !8281
  %259 = load i32, i32* %alpha, align 4, !dbg !8282
  %260 = load i32, i32* %width, align 4, !dbg !8283
  call void %253(i8* %254, i8* %255, i8* %256, i32 %257, i8* %258, i32 %259, i32 %260), !dbg !8273
  br label %if.end344, !dbg !8284

if.else323:                                       ; preds = %if.else311
  %arrayidx324 = getelementptr inbounds [2 x i32], [2 x i32]* %ysub, i64 0, i64 1, !dbg !8285
  %261 = load i32, i32* %arrayidx324, align 4, !dbg !8285
  %tobool325 = icmp ne i32 %261, 0, !dbg !8285
  br i1 %tobool325, label %if.then326, label %if.else337, !dbg !8285

if.then326:                                       ; preds = %if.else323
  %262 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8288
  %vc1dsp327 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %262, i32 0, i32 3, !dbg !8290
  %sprite_v_double_onescale328 = getelementptr inbounds %struct.VC1DSPContext, %struct.VC1DSPContext* %vc1dsp327, i32 0, i32 25, !dbg !8291
  %263 = load void (i8*, i8*, i8*, i32, i8*, i32, i32)*, void (i8*, i8*, i8*, i32, i8*, i32, i32)** %sprite_v_double_onescale328, align 8, !dbg !8291
  %264 = load i8*, i8** %dst, align 8, !dbg !8292
  %arrayidx329 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 1, !dbg !8293
  %arrayidx330 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx329, i64 0, i64 0, !dbg !8293
  %265 = load i8*, i8** %arrayidx330, align 16, !dbg !8293
  %arrayidx331 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 1, !dbg !8294
  %arrayidx332 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx331, i64 0, i64 1, !dbg !8294
  %266 = load i8*, i8** %arrayidx332, align 8, !dbg !8294
  %arrayidx333 = getelementptr inbounds [2 x i32], [2 x i32]* %ysub, i64 0, i64 1, !dbg !8295
  %267 = load i32, i32* %arrayidx333, align 4, !dbg !8295
  %arrayidx334 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 0, !dbg !8296
  %arrayidx335 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx334, i64 0, i64 0, !dbg !8296
  %268 = load i8*, i8** %arrayidx335, align 16, !dbg !8296
  %269 = load i32, i32* %alpha, align 4, !dbg !8297
  %sub336 = sub nsw i32 65535, %269, !dbg !8298
  %270 = load i32, i32* %width, align 4, !dbg !8299
  call void %263(i8* %264, i8* %265, i8* %266, i32 %267, i8* %268, i32 %sub336, i32 %270), !dbg !8288
  br label %if.end343, !dbg !8300

if.else337:                                       ; preds = %if.else323
  %271 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8301
  %vc1dsp338 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %271, i32 0, i32 3, !dbg !8303
  %sprite_v_double_noscale = getelementptr inbounds %struct.VC1DSPContext, %struct.VC1DSPContext* %vc1dsp338, i32 0, i32 24, !dbg !8304
  %272 = load void (i8*, i8*, i8*, i32, i32)*, void (i8*, i8*, i8*, i32, i32)** %sprite_v_double_noscale, align 8, !dbg !8304
  %273 = load i8*, i8** %dst, align 8, !dbg !8305
  %arrayidx339 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 0, !dbg !8306
  %arrayidx340 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx339, i64 0, i64 0, !dbg !8306
  %274 = load i8*, i8** %arrayidx340, align 16, !dbg !8306
  %arrayidx341 = getelementptr inbounds [2 x [2 x i8*]], [2 x [2 x i8*]]* %src_h, i64 0, i64 1, !dbg !8307
  %arrayidx342 = getelementptr inbounds [2 x i8*], [2 x i8*]* %arrayidx341, i64 0, i64 0, !dbg !8307
  %275 = load i8*, i8** %arrayidx342, align 16, !dbg !8307
  %276 = load i32, i32* %alpha, align 4, !dbg !8308
  %277 = load i32, i32* %width, align 4, !dbg !8309
  call void %272(i8* %273, i8* %274, i8* %275, i32 %276, i32 %277), !dbg !8301
  br label %if.end343

if.end343:                                        ; preds = %if.else337, %if.then326
  br label %if.end344

if.end344:                                        ; preds = %if.end343, %if.then314
  br label %if.end345

if.end345:                                        ; preds = %if.end344, %if.then299
  br label %if.end346

if.end346:                                        ; preds = %if.end345, %if.end292
  br label %for.inc347, !dbg !8310

for.inc347:                                       ; preds = %if.end346
  %278 = load i32, i32* %row, align 4, !dbg !8311
  %inc348 = add nsw i32 %278, 1, !dbg !8311
  store i32 %inc348, i32* %row, align 4, !dbg !8311
  br label %for.cond66, !dbg !8313, !llvm.loop !8314

for.end349:                                       ; preds = %for.cond66
  %279 = load i32, i32* %plane, align 4, !dbg !8316
  %tobool350 = icmp ne i32 %279, 0, !dbg !8316
  br i1 %tobool350, label %if.end366, label %if.then351, !dbg !8318

if.then351:                                       ; preds = %for.end349
  store i32 0, i32* %i, align 4, !dbg !8319
  br label %for.cond352, !dbg !8322

for.cond352:                                      ; preds = %for.inc363, %if.then351
  %280 = load i32, i32* %i, align 4, !dbg !8323
  %281 = load %struct.VC1Context*, %struct.VC1Context** %v.addr, align 8, !dbg !8326
  %two_sprites353 = getelementptr inbounds %struct.VC1Context, %struct.VC1Context* %281, i32 0, i32 173, !dbg !8327
  %282 = load i32, i32* %two_sprites353, align 8, !dbg !8327
  %cmp354 = icmp sle i32 %280, %282, !dbg !8328
  br i1 %cmp354, label %for.body356, label %for.end365, !dbg !8329

for.body356:                                      ; preds = %for.cond352
  %283 = load i32, i32* %i, align 4, !dbg !8330
  %idxprom357 = sext i32 %283 to i64, !dbg !8332
  %arrayidx358 = getelementptr inbounds [2 x i32], [2 x i32]* %xoff, i64 0, i64 %idxprom357, !dbg !8332
  %284 = load i32, i32* %arrayidx358, align 4, !dbg !8333
  %shr359 = ashr i32 %284, 1, !dbg !8333
  store i32 %shr359, i32* %arrayidx358, align 4, !dbg !8333
  %285 = load i32, i32* %i, align 4, !dbg !8334
  %idxprom360 = sext i32 %285 to i64, !dbg !8335
  %arrayidx361 = getelementptr inbounds [2 x i32], [2 x i32]* %yoff, i64 0, i64 %idxprom360, !dbg !8335
  %286 = load i32, i32* %arrayidx361, align 4, !dbg !8336
  %shr362 = ashr i32 %286, 1, !dbg !8336
  store i32 %shr362, i32* %arrayidx361, align 4, !dbg !8336
  br label %for.inc363, !dbg !8337

for.inc363:                                       ; preds = %for.body356
  %287 = load i32, i32* %i, align 4, !dbg !8338
  %inc364 = add nsw i32 %287, 1, !dbg !8338
  store i32 %inc364, i32* %i, align 4, !dbg !8338
  br label %for.cond352, !dbg !8340, !llvm.loop !8341

for.end365:                                       ; preds = %for.cond352
  br label %if.end366, !dbg !8343

if.end366:                                        ; preds = %for.end365, %for.end349
  br label %for.inc367, !dbg !8344

for.inc367:                                       ; preds = %if.end366
  %288 = load i32, i32* %plane, align 4, !dbg !8345
  %inc368 = add nsw i32 %288, 1, !dbg !8345
  store i32 %inc368, i32* %plane, align 4, !dbg !8345
  br label %for.cond59, !dbg !8347, !llvm.loop !8348

for.end369:                                       ; preds = %for.cond59
  ret void, !dbg !8350
}

; Function Attrs: nounwind uwtable
define internal void @vc1_sprite_parse_transform(%struct.GetBitContext* %gb, i32* %c) #3 !dbg !8351 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  %c.addr = alloca i32*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8354, metadata !3012), !dbg !8355
  store i32* %c, i32** %c.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %c.addr, metadata !8356, metadata !3012), !dbg !8357
  %0 = load i32*, i32** %c.addr, align 8, !dbg !8358
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 3, !dbg !8358
  store i32 0, i32* %arrayidx, align 4, !dbg !8359
  %1 = load i32*, i32** %c.addr, align 8, !dbg !8360
  %arrayidx1 = getelementptr inbounds i32, i32* %1, i64 1, !dbg !8360
  store i32 0, i32* %arrayidx1, align 4, !dbg !8361
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8362
  %call = call i32 @get_bits(%struct.GetBitContext* %2, i32 2), !dbg !8363
  switch i32 %call, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %sw.bb12
    i32 3, label %sw.bb19
  ], !dbg !8364

sw.bb:                                            ; preds = %entry
  %3 = load i32*, i32** %c.addr, align 8, !dbg !8365
  %arrayidx2 = getelementptr inbounds i32, i32* %3, i64 0, !dbg !8365
  store i32 65536, i32* %arrayidx2, align 4, !dbg !8367
  %4 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8368
  %call3 = call i32 @get_fp_val(%struct.GetBitContext* %4), !dbg !8369
  %5 = load i32*, i32** %c.addr, align 8, !dbg !8370
  %arrayidx4 = getelementptr inbounds i32, i32* %5, i64 2, !dbg !8370
  store i32 %call3, i32* %arrayidx4, align 4, !dbg !8371
  %6 = load i32*, i32** %c.addr, align 8, !dbg !8372
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 4, !dbg !8372
  store i32 65536, i32* %arrayidx5, align 4, !dbg !8373
  br label %sw.epilog, !dbg !8374

sw.bb6:                                           ; preds = %entry
  %7 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8375
  %call7 = call i32 @get_fp_val(%struct.GetBitContext* %7), !dbg !8376
  %8 = load i32*, i32** %c.addr, align 8, !dbg !8377
  %arrayidx8 = getelementptr inbounds i32, i32* %8, i64 4, !dbg !8377
  store i32 %call7, i32* %arrayidx8, align 4, !dbg !8378
  %9 = load i32*, i32** %c.addr, align 8, !dbg !8379
  %arrayidx9 = getelementptr inbounds i32, i32* %9, i64 0, !dbg !8379
  store i32 %call7, i32* %arrayidx9, align 4, !dbg !8380
  %10 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8381
  %call10 = call i32 @get_fp_val(%struct.GetBitContext* %10), !dbg !8382
  %11 = load i32*, i32** %c.addr, align 8, !dbg !8383
  %arrayidx11 = getelementptr inbounds i32, i32* %11, i64 2, !dbg !8383
  store i32 %call10, i32* %arrayidx11, align 4, !dbg !8384
  br label %sw.epilog, !dbg !8385

sw.bb12:                                          ; preds = %entry
  %12 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8386
  %call13 = call i32 @get_fp_val(%struct.GetBitContext* %12), !dbg !8387
  %13 = load i32*, i32** %c.addr, align 8, !dbg !8388
  %arrayidx14 = getelementptr inbounds i32, i32* %13, i64 0, !dbg !8388
  store i32 %call13, i32* %arrayidx14, align 4, !dbg !8389
  %14 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8390
  %call15 = call i32 @get_fp_val(%struct.GetBitContext* %14), !dbg !8391
  %15 = load i32*, i32** %c.addr, align 8, !dbg !8392
  %arrayidx16 = getelementptr inbounds i32, i32* %15, i64 2, !dbg !8392
  store i32 %call15, i32* %arrayidx16, align 4, !dbg !8393
  %16 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8394
  %call17 = call i32 @get_fp_val(%struct.GetBitContext* %16), !dbg !8395
  %17 = load i32*, i32** %c.addr, align 8, !dbg !8396
  %arrayidx18 = getelementptr inbounds i32, i32* %17, i64 4, !dbg !8396
  store i32 %call17, i32* %arrayidx18, align 4, !dbg !8397
  br label %sw.epilog, !dbg !8398

sw.bb19:                                          ; preds = %entry
  %18 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8399
  %call20 = call i32 @get_fp_val(%struct.GetBitContext* %18), !dbg !8400
  %19 = load i32*, i32** %c.addr, align 8, !dbg !8401
  %arrayidx21 = getelementptr inbounds i32, i32* %19, i64 0, !dbg !8401
  store i32 %call20, i32* %arrayidx21, align 4, !dbg !8402
  %20 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8403
  %call22 = call i32 @get_fp_val(%struct.GetBitContext* %20), !dbg !8404
  %21 = load i32*, i32** %c.addr, align 8, !dbg !8405
  %arrayidx23 = getelementptr inbounds i32, i32* %21, i64 1, !dbg !8405
  store i32 %call22, i32* %arrayidx23, align 4, !dbg !8406
  %22 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8407
  %call24 = call i32 @get_fp_val(%struct.GetBitContext* %22), !dbg !8408
  %23 = load i32*, i32** %c.addr, align 8, !dbg !8409
  %arrayidx25 = getelementptr inbounds i32, i32* %23, i64 2, !dbg !8409
  store i32 %call24, i32* %arrayidx25, align 4, !dbg !8410
  %24 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8411
  %call26 = call i32 @get_fp_val(%struct.GetBitContext* %24), !dbg !8412
  %25 = load i32*, i32** %c.addr, align 8, !dbg !8413
  %arrayidx27 = getelementptr inbounds i32, i32* %25, i64 3, !dbg !8413
  store i32 %call26, i32* %arrayidx27, align 4, !dbg !8414
  %26 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8415
  %call28 = call i32 @get_fp_val(%struct.GetBitContext* %26), !dbg !8416
  %27 = load i32*, i32** %c.addr, align 8, !dbg !8417
  %arrayidx29 = getelementptr inbounds i32, i32* %27, i64 4, !dbg !8417
  store i32 %call28, i32* %arrayidx29, align 4, !dbg !8418
  br label %sw.epilog, !dbg !8419

sw.epilog:                                        ; preds = %entry, %sw.bb19, %sw.bb12, %sw.bb6, %sw.bb
  %28 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8420
  %call30 = call i32 @get_fp_val(%struct.GetBitContext* %28), !dbg !8421
  %29 = load i32*, i32** %c.addr, align 8, !dbg !8422
  %arrayidx31 = getelementptr inbounds i32, i32* %29, i64 5, !dbg !8422
  store i32 %call30, i32* %arrayidx31, align 4, !dbg !8423
  %30 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8424
  %call32 = call i32 @get_bits1(%struct.GetBitContext* %30), !dbg !8426
  %tobool = icmp ne i32 %call32, 0, !dbg !8426
  br i1 %tobool, label %if.then, label %if.else, !dbg !8427

if.then:                                          ; preds = %sw.epilog
  %31 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8428
  %call33 = call i32 @get_fp_val(%struct.GetBitContext* %31), !dbg !8429
  %32 = load i32*, i32** %c.addr, align 8, !dbg !8430
  %arrayidx34 = getelementptr inbounds i32, i32* %32, i64 6, !dbg !8430
  store i32 %call33, i32* %arrayidx34, align 4, !dbg !8431
  br label %if.end, !dbg !8430

if.else:                                          ; preds = %sw.epilog
  %33 = load i32*, i32** %c.addr, align 8, !dbg !8432
  %arrayidx35 = getelementptr inbounds i32, i32* %33, i64 6, !dbg !8432
  store i32 65536, i32* %arrayidx35, align 4, !dbg !8433
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8434
}

; Function Attrs: nounwind readnone
declare i32 @abs(i32) #7

; Function Attrs: inlinehint nounwind uwtable
define internal void @skip_bits(%struct.GetBitContext* %s, i32 %n) #4 !dbg !8435 {
entry:
  %s.addr = alloca %struct.GetBitContext*, align 8
  %n.addr = alloca i32, align 4
  %re_index = alloca i32, align 4
  %re_cache = alloca i32, align 4
  %re_size_plus8 = alloca i32, align 4
  store %struct.GetBitContext* %s, %struct.GetBitContext** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %s.addr, metadata !8438, metadata !3012), !dbg !8439
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8440, metadata !3012), !dbg !8441
  call void @llvm.dbg.declare(metadata i32* %re_index, metadata !8442, metadata !3012), !dbg !8443
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8444
  %index = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %0, i32 0, i32 2, !dbg !8445
  %1 = load i32, i32* %index, align 8, !dbg !8445
  store i32 %1, i32* %re_index, align 4, !dbg !8443
  call void @llvm.dbg.declare(metadata i32* %re_cache, metadata !8446, metadata !3012), !dbg !8447
  call void @llvm.dbg.declare(metadata i32* %re_size_plus8, metadata !8448, metadata !3012), !dbg !8449
  %2 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8450
  %size_in_bits_plus8 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %2, i32 0, i32 4, !dbg !8451
  %3 = load i32, i32* %size_in_bits_plus8, align 8, !dbg !8451
  store i32 %3, i32* %re_size_plus8, align 4, !dbg !8449
  %4 = load i32, i32* %re_size_plus8, align 4, !dbg !8452
  %5 = load i32, i32* %re_index, align 4, !dbg !8453
  %6 = load i32, i32* %n.addr, align 4, !dbg !8454
  %add = add i32 %5, %6, !dbg !8455
  %cmp = icmp ugt i32 %4, %add, !dbg !8456
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8457

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %re_index, align 4, !dbg !8458
  %8 = load i32, i32* %n.addr, align 4, !dbg !8460
  %add1 = add i32 %7, %8, !dbg !8461
  br label %cond.end, !dbg !8462

cond.false:                                       ; preds = %entry
  %9 = load i32, i32* %re_size_plus8, align 4, !dbg !8463
  br label %cond.end, !dbg !8465

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add1, %cond.true ], [ %9, %cond.false ], !dbg !8466
  store i32 %cond, i32* %re_index, align 4, !dbg !8468
  %10 = load i32, i32* %re_index, align 4, !dbg !8469
  %11 = load %struct.GetBitContext*, %struct.GetBitContext** %s.addr, align 8, !dbg !8470
  %index2 = getelementptr inbounds %struct.GetBitContext, %struct.GetBitContext* %11, i32 0, i32 2, !dbg !8471
  store i32 %10, i32* %index2, align 8, !dbg !8472
  ret void, !dbg !8473
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_fp_val(%struct.GetBitContext* %gb) #4 !dbg !8474 {
entry:
  %gb.addr = alloca %struct.GetBitContext*, align 8
  store %struct.GetBitContext* %gb, %struct.GetBitContext** %gb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GetBitContext** %gb.addr, metadata !8477, metadata !3012), !dbg !8478
  %0 = load %struct.GetBitContext*, %struct.GetBitContext** %gb.addr, align 8, !dbg !8479
  %call = call i32 @get_bits_long(%struct.GetBitContext* %0, i32 30), !dbg !8480
  %sub = sub i32 %call, 536870912, !dbg !8481
  %shl = shl i32 %sub, 1, !dbg !8482
  ret i32 %shl, !dbg !8483
}

attributes #0 = { cold nounwind optsize uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2649, !2650}
!llvm.ident = !{!2651}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !961, globals: !975)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a/[inter]libavcodec--vc1dec.o.i", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2 = !{!3, !25, !46, !56, !516, !716, !733, !739, !769, !779, !803, !809, !827, !851, !870, !880, !894, !902, !914, !923, !930, !939, !945, !952}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVOptionType", file: !4, line: 221, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./libavutil/opt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24}
!6 = !DIEnumerator(name: "AV_OPT_TYPE_FLAGS", value: 0)
!7 = !DIEnumerator(name: "AV_OPT_TYPE_INT", value: 1)
!8 = !DIEnumerator(name: "AV_OPT_TYPE_INT64", value: 2)
!9 = !DIEnumerator(name: "AV_OPT_TYPE_DOUBLE", value: 3)
!10 = !DIEnumerator(name: "AV_OPT_TYPE_FLOAT", value: 4)
!11 = !DIEnumerator(name: "AV_OPT_TYPE_STRING", value: 5)
!12 = !DIEnumerator(name: "AV_OPT_TYPE_RATIONAL", value: 6)
!13 = !DIEnumerator(name: "AV_OPT_TYPE_BINARY", value: 7)
!14 = !DIEnumerator(name: "AV_OPT_TYPE_DICT", value: 8)
!15 = !DIEnumerator(name: "AV_OPT_TYPE_UINT64", value: 9)
!16 = !DIEnumerator(name: "AV_OPT_TYPE_CONST", value: 10)
!17 = !DIEnumerator(name: "AV_OPT_TYPE_IMAGE_SIZE", value: 11)
!18 = !DIEnumerator(name: "AV_OPT_TYPE_PIXEL_FMT", value: 12)
!19 = !DIEnumerator(name: "AV_OPT_TYPE_SAMPLE_FMT", value: 13)
!20 = !DIEnumerator(name: "AV_OPT_TYPE_VIDEO_RATE", value: 14)
!21 = !DIEnumerator(name: "AV_OPT_TYPE_DURATION", value: 15)
!22 = !DIEnumerator(name: "AV_OPT_TYPE_COLOR", value: 16)
!23 = !DIEnumerator(name: "AV_OPT_TYPE_CHANNEL_LAYOUT", value: 17)
!24 = !DIEnumerator(name: "AV_OPT_TYPE_BOOL", value: 18)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 29, size: 32, align: 32, elements: !27)
!26 = !DIFile(filename: "./libavutil/log.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!27 = !{!28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!28 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NA", value: 0)
!29 = !DIEnumerator(name: "AV_CLASS_CATEGORY_INPUT", value: 1)
!30 = !DIEnumerator(name: "AV_CLASS_CATEGORY_OUTPUT", value: 2)
!31 = !DIEnumerator(name: "AV_CLASS_CATEGORY_MUXER", value: 3)
!32 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEMUXER", value: 4)
!33 = !DIEnumerator(name: "AV_CLASS_CATEGORY_ENCODER", value: 5)
!34 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DECODER", value: 6)
!35 = !DIEnumerator(name: "AV_CLASS_CATEGORY_FILTER", value: 7)
!36 = !DIEnumerator(name: "AV_CLASS_CATEGORY_BITSTREAM_FILTER", value: 8)
!37 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWSCALER", value: 9)
!38 = !DIEnumerator(name: "AV_CLASS_CATEGORY_SWRESAMPLER", value: 10)
!39 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT", value: 40)
!40 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT", value: 41)
!41 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT", value: 42)
!42 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT", value: 43)
!43 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_OUTPUT", value: 44)
!44 = !DIEnumerator(name: "AV_CLASS_CATEGORY_DEVICE_INPUT", value: 45)
!45 = !DIEnumerator(name: "AV_CLASS_CATEGORY_NB", value: 46)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVMediaType", file: !47, line: 199, size: 32, align: 32, elements: !48)
!47 = !DIFile(filename: "./libavutil/avutil.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!48 = !{!49, !50, !51, !52, !53, !54, !55}
!49 = !DIEnumerator(name: "AVMEDIA_TYPE_UNKNOWN", value: -1)
!50 = !DIEnumerator(name: "AVMEDIA_TYPE_VIDEO", value: 0)
!51 = !DIEnumerator(name: "AVMEDIA_TYPE_AUDIO", value: 1)
!52 = !DIEnumerator(name: "AVMEDIA_TYPE_DATA", value: 2)
!53 = !DIEnumerator(name: "AVMEDIA_TYPE_SUBTITLE", value: 3)
!54 = !DIEnumerator(name: "AVMEDIA_TYPE_ATTACHMENT", value: 4)
!55 = !DIEnumerator(name: "AVMEDIA_TYPE_NB", value: 5)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVCodecID", file: !57, line: 215, size: 32, align: 32, elements: !58)
!57 = !DIFile(filename: "libavcodec/avcodec.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!58 = !{!59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515}
!59 = !DIEnumerator(name: "AV_CODEC_ID_NONE", value: 0)
!60 = !DIEnumerator(name: "AV_CODEC_ID_MPEG1VIDEO", value: 1)
!61 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2VIDEO", value: 2)
!62 = !DIEnumerator(name: "AV_CODEC_ID_H261", value: 3)
!63 = !DIEnumerator(name: "AV_CODEC_ID_H263", value: 4)
!64 = !DIEnumerator(name: "AV_CODEC_ID_RV10", value: 5)
!65 = !DIEnumerator(name: "AV_CODEC_ID_RV20", value: 6)
!66 = !DIEnumerator(name: "AV_CODEC_ID_MJPEG", value: 7)
!67 = !DIEnumerator(name: "AV_CODEC_ID_MJPEGB", value: 8)
!68 = !DIEnumerator(name: "AV_CODEC_ID_LJPEG", value: 9)
!69 = !DIEnumerator(name: "AV_CODEC_ID_SP5X", value: 10)
!70 = !DIEnumerator(name: "AV_CODEC_ID_JPEGLS", value: 11)
!71 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4", value: 12)
!72 = !DIEnumerator(name: "AV_CODEC_ID_RAWVIDEO", value: 13)
!73 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V1", value: 14)
!74 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V2", value: 15)
!75 = !DIEnumerator(name: "AV_CODEC_ID_MSMPEG4V3", value: 16)
!76 = !DIEnumerator(name: "AV_CODEC_ID_WMV1", value: 17)
!77 = !DIEnumerator(name: "AV_CODEC_ID_WMV2", value: 18)
!78 = !DIEnumerator(name: "AV_CODEC_ID_H263P", value: 19)
!79 = !DIEnumerator(name: "AV_CODEC_ID_H263I", value: 20)
!80 = !DIEnumerator(name: "AV_CODEC_ID_FLV1", value: 21)
!81 = !DIEnumerator(name: "AV_CODEC_ID_SVQ1", value: 22)
!82 = !DIEnumerator(name: "AV_CODEC_ID_SVQ3", value: 23)
!83 = !DIEnumerator(name: "AV_CODEC_ID_DVVIDEO", value: 24)
!84 = !DIEnumerator(name: "AV_CODEC_ID_HUFFYUV", value: 25)
!85 = !DIEnumerator(name: "AV_CODEC_ID_CYUV", value: 26)
!86 = !DIEnumerator(name: "AV_CODEC_ID_H264", value: 27)
!87 = !DIEnumerator(name: "AV_CODEC_ID_INDEO3", value: 28)
!88 = !DIEnumerator(name: "AV_CODEC_ID_VP3", value: 29)
!89 = !DIEnumerator(name: "AV_CODEC_ID_THEORA", value: 30)
!90 = !DIEnumerator(name: "AV_CODEC_ID_ASV1", value: 31)
!91 = !DIEnumerator(name: "AV_CODEC_ID_ASV2", value: 32)
!92 = !DIEnumerator(name: "AV_CODEC_ID_FFV1", value: 33)
!93 = !DIEnumerator(name: "AV_CODEC_ID_4XM", value: 34)
!94 = !DIEnumerator(name: "AV_CODEC_ID_VCR1", value: 35)
!95 = !DIEnumerator(name: "AV_CODEC_ID_CLJR", value: 36)
!96 = !DIEnumerator(name: "AV_CODEC_ID_MDEC", value: 37)
!97 = !DIEnumerator(name: "AV_CODEC_ID_ROQ", value: 38)
!98 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_VIDEO", value: 39)
!99 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC3", value: 40)
!100 = !DIEnumerator(name: "AV_CODEC_ID_XAN_WC4", value: 41)
!101 = !DIEnumerator(name: "AV_CODEC_ID_RPZA", value: 42)
!102 = !DIEnumerator(name: "AV_CODEC_ID_CINEPAK", value: 43)
!103 = !DIEnumerator(name: "AV_CODEC_ID_WS_VQA", value: 44)
!104 = !DIEnumerator(name: "AV_CODEC_ID_MSRLE", value: 45)
!105 = !DIEnumerator(name: "AV_CODEC_ID_MSVIDEO1", value: 46)
!106 = !DIEnumerator(name: "AV_CODEC_ID_IDCIN", value: 47)
!107 = !DIEnumerator(name: "AV_CODEC_ID_8BPS", value: 48)
!108 = !DIEnumerator(name: "AV_CODEC_ID_SMC", value: 49)
!109 = !DIEnumerator(name: "AV_CODEC_ID_FLIC", value: 50)
!110 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION1", value: 51)
!111 = !DIEnumerator(name: "AV_CODEC_ID_VMDVIDEO", value: 52)
!112 = !DIEnumerator(name: "AV_CODEC_ID_MSZH", value: 53)
!113 = !DIEnumerator(name: "AV_CODEC_ID_ZLIB", value: 54)
!114 = !DIEnumerator(name: "AV_CODEC_ID_QTRLE", value: 55)
!115 = !DIEnumerator(name: "AV_CODEC_ID_TSCC", value: 56)
!116 = !DIEnumerator(name: "AV_CODEC_ID_ULTI", value: 57)
!117 = !DIEnumerator(name: "AV_CODEC_ID_QDRAW", value: 58)
!118 = !DIEnumerator(name: "AV_CODEC_ID_VIXL", value: 59)
!119 = !DIEnumerator(name: "AV_CODEC_ID_QPEG", value: 60)
!120 = !DIEnumerator(name: "AV_CODEC_ID_PNG", value: 61)
!121 = !DIEnumerator(name: "AV_CODEC_ID_PPM", value: 62)
!122 = !DIEnumerator(name: "AV_CODEC_ID_PBM", value: 63)
!123 = !DIEnumerator(name: "AV_CODEC_ID_PGM", value: 64)
!124 = !DIEnumerator(name: "AV_CODEC_ID_PGMYUV", value: 65)
!125 = !DIEnumerator(name: "AV_CODEC_ID_PAM", value: 66)
!126 = !DIEnumerator(name: "AV_CODEC_ID_FFVHUFF", value: 67)
!127 = !DIEnumerator(name: "AV_CODEC_ID_RV30", value: 68)
!128 = !DIEnumerator(name: "AV_CODEC_ID_RV40", value: 69)
!129 = !DIEnumerator(name: "AV_CODEC_ID_VC1", value: 70)
!130 = !DIEnumerator(name: "AV_CODEC_ID_WMV3", value: 71)
!131 = !DIEnumerator(name: "AV_CODEC_ID_LOCO", value: 72)
!132 = !DIEnumerator(name: "AV_CODEC_ID_WNV1", value: 73)
!133 = !DIEnumerator(name: "AV_CODEC_ID_AASC", value: 74)
!134 = !DIEnumerator(name: "AV_CODEC_ID_INDEO2", value: 75)
!135 = !DIEnumerator(name: "AV_CODEC_ID_FRAPS", value: 76)
!136 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2", value: 77)
!137 = !DIEnumerator(name: "AV_CODEC_ID_BMP", value: 78)
!138 = !DIEnumerator(name: "AV_CODEC_ID_CSCD", value: 79)
!139 = !DIEnumerator(name: "AV_CODEC_ID_MMVIDEO", value: 80)
!140 = !DIEnumerator(name: "AV_CODEC_ID_ZMBV", value: 81)
!141 = !DIEnumerator(name: "AV_CODEC_ID_AVS", value: 82)
!142 = !DIEnumerator(name: "AV_CODEC_ID_SMACKVIDEO", value: 83)
!143 = !DIEnumerator(name: "AV_CODEC_ID_NUV", value: 84)
!144 = !DIEnumerator(name: "AV_CODEC_ID_KMVC", value: 85)
!145 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV", value: 86)
!146 = !DIEnumerator(name: "AV_CODEC_ID_CAVS", value: 87)
!147 = !DIEnumerator(name: "AV_CODEC_ID_JPEG2000", value: 88)
!148 = !DIEnumerator(name: "AV_CODEC_ID_VMNC", value: 89)
!149 = !DIEnumerator(name: "AV_CODEC_ID_VP5", value: 90)
!150 = !DIEnumerator(name: "AV_CODEC_ID_VP6", value: 91)
!151 = !DIEnumerator(name: "AV_CODEC_ID_VP6F", value: 92)
!152 = !DIEnumerator(name: "AV_CODEC_ID_TARGA", value: 93)
!153 = !DIEnumerator(name: "AV_CODEC_ID_DSICINVIDEO", value: 94)
!154 = !DIEnumerator(name: "AV_CODEC_ID_TIERTEXSEQVIDEO", value: 95)
!155 = !DIEnumerator(name: "AV_CODEC_ID_TIFF", value: 96)
!156 = !DIEnumerator(name: "AV_CODEC_ID_GIF", value: 97)
!157 = !DIEnumerator(name: "AV_CODEC_ID_DXA", value: 98)
!158 = !DIEnumerator(name: "AV_CODEC_ID_DNXHD", value: 99)
!159 = !DIEnumerator(name: "AV_CODEC_ID_THP", value: 100)
!160 = !DIEnumerator(name: "AV_CODEC_ID_SGI", value: 101)
!161 = !DIEnumerator(name: "AV_CODEC_ID_C93", value: 102)
!162 = !DIEnumerator(name: "AV_CODEC_ID_BETHSOFTVID", value: 103)
!163 = !DIEnumerator(name: "AV_CODEC_ID_PTX", value: 104)
!164 = !DIEnumerator(name: "AV_CODEC_ID_TXD", value: 105)
!165 = !DIEnumerator(name: "AV_CODEC_ID_VP6A", value: 106)
!166 = !DIEnumerator(name: "AV_CODEC_ID_AMV", value: 107)
!167 = !DIEnumerator(name: "AV_CODEC_ID_VB", value: 108)
!168 = !DIEnumerator(name: "AV_CODEC_ID_PCX", value: 109)
!169 = !DIEnumerator(name: "AV_CODEC_ID_SUNRAST", value: 110)
!170 = !DIEnumerator(name: "AV_CODEC_ID_INDEO4", value: 111)
!171 = !DIEnumerator(name: "AV_CODEC_ID_INDEO5", value: 112)
!172 = !DIEnumerator(name: "AV_CODEC_ID_MIMIC", value: 113)
!173 = !DIEnumerator(name: "AV_CODEC_ID_RL2", value: 114)
!174 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE124", value: 115)
!175 = !DIEnumerator(name: "AV_CODEC_ID_DIRAC", value: 116)
!176 = !DIEnumerator(name: "AV_CODEC_ID_BFI", value: 117)
!177 = !DIEnumerator(name: "AV_CODEC_ID_CMV", value: 118)
!178 = !DIEnumerator(name: "AV_CODEC_ID_MOTIONPIXELS", value: 119)
!179 = !DIEnumerator(name: "AV_CODEC_ID_TGV", value: 120)
!180 = !DIEnumerator(name: "AV_CODEC_ID_TGQ", value: 121)
!181 = !DIEnumerator(name: "AV_CODEC_ID_TQI", value: 122)
!182 = !DIEnumerator(name: "AV_CODEC_ID_AURA", value: 123)
!183 = !DIEnumerator(name: "AV_CODEC_ID_AURA2", value: 124)
!184 = !DIEnumerator(name: "AV_CODEC_ID_V210X", value: 125)
!185 = !DIEnumerator(name: "AV_CODEC_ID_TMV", value: 126)
!186 = !DIEnumerator(name: "AV_CODEC_ID_V210", value: 127)
!187 = !DIEnumerator(name: "AV_CODEC_ID_DPX", value: 128)
!188 = !DIEnumerator(name: "AV_CODEC_ID_MAD", value: 129)
!189 = !DIEnumerator(name: "AV_CODEC_ID_FRWU", value: 130)
!190 = !DIEnumerator(name: "AV_CODEC_ID_FLASHSV2", value: 131)
!191 = !DIEnumerator(name: "AV_CODEC_ID_CDGRAPHICS", value: 132)
!192 = !DIEnumerator(name: "AV_CODEC_ID_R210", value: 133)
!193 = !DIEnumerator(name: "AV_CODEC_ID_ANM", value: 134)
!194 = !DIEnumerator(name: "AV_CODEC_ID_BINKVIDEO", value: 135)
!195 = !DIEnumerator(name: "AV_CODEC_ID_IFF_ILBM", value: 136)
!196 = !DIEnumerator(name: "AV_CODEC_ID_KGV1", value: 137)
!197 = !DIEnumerator(name: "AV_CODEC_ID_YOP", value: 138)
!198 = !DIEnumerator(name: "AV_CODEC_ID_VP8", value: 139)
!199 = !DIEnumerator(name: "AV_CODEC_ID_PICTOR", value: 140)
!200 = !DIEnumerator(name: "AV_CODEC_ID_ANSI", value: 141)
!201 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI", value: 142)
!202 = !DIEnumerator(name: "AV_CODEC_ID_A64_MULTI5", value: 143)
!203 = !DIEnumerator(name: "AV_CODEC_ID_R10K", value: 144)
!204 = !DIEnumerator(name: "AV_CODEC_ID_MXPEG", value: 145)
!205 = !DIEnumerator(name: "AV_CODEC_ID_LAGARITH", value: 146)
!206 = !DIEnumerator(name: "AV_CODEC_ID_PRORES", value: 147)
!207 = !DIEnumerator(name: "AV_CODEC_ID_JV", value: 148)
!208 = !DIEnumerator(name: "AV_CODEC_ID_DFA", value: 149)
!209 = !DIEnumerator(name: "AV_CODEC_ID_WMV3IMAGE", value: 150)
!210 = !DIEnumerator(name: "AV_CODEC_ID_VC1IMAGE", value: 151)
!211 = !DIEnumerator(name: "AV_CODEC_ID_UTVIDEO", value: 152)
!212 = !DIEnumerator(name: "AV_CODEC_ID_BMV_VIDEO", value: 153)
!213 = !DIEnumerator(name: "AV_CODEC_ID_VBLE", value: 154)
!214 = !DIEnumerator(name: "AV_CODEC_ID_DXTORY", value: 155)
!215 = !DIEnumerator(name: "AV_CODEC_ID_V410", value: 156)
!216 = !DIEnumerator(name: "AV_CODEC_ID_XWD", value: 157)
!217 = !DIEnumerator(name: "AV_CODEC_ID_CDXL", value: 158)
!218 = !DIEnumerator(name: "AV_CODEC_ID_XBM", value: 159)
!219 = !DIEnumerator(name: "AV_CODEC_ID_ZEROCODEC", value: 160)
!220 = !DIEnumerator(name: "AV_CODEC_ID_MSS1", value: 161)
!221 = !DIEnumerator(name: "AV_CODEC_ID_MSA1", value: 162)
!222 = !DIEnumerator(name: "AV_CODEC_ID_TSCC2", value: 163)
!223 = !DIEnumerator(name: "AV_CODEC_ID_MTS2", value: 164)
!224 = !DIEnumerator(name: "AV_CODEC_ID_CLLC", value: 165)
!225 = !DIEnumerator(name: "AV_CODEC_ID_MSS2", value: 166)
!226 = !DIEnumerator(name: "AV_CODEC_ID_VP9", value: 167)
!227 = !DIEnumerator(name: "AV_CODEC_ID_AIC", value: 168)
!228 = !DIEnumerator(name: "AV_CODEC_ID_ESCAPE130", value: 169)
!229 = !DIEnumerator(name: "AV_CODEC_ID_G2M", value: 170)
!230 = !DIEnumerator(name: "AV_CODEC_ID_WEBP", value: 171)
!231 = !DIEnumerator(name: "AV_CODEC_ID_HNM4_VIDEO", value: 172)
!232 = !DIEnumerator(name: "AV_CODEC_ID_HEVC", value: 173)
!233 = !DIEnumerator(name: "AV_CODEC_ID_FIC", value: 174)
!234 = !DIEnumerator(name: "AV_CODEC_ID_ALIAS_PIX", value: 175)
!235 = !DIEnumerator(name: "AV_CODEC_ID_BRENDER_PIX", value: 176)
!236 = !DIEnumerator(name: "AV_CODEC_ID_PAF_VIDEO", value: 177)
!237 = !DIEnumerator(name: "AV_CODEC_ID_EXR", value: 178)
!238 = !DIEnumerator(name: "AV_CODEC_ID_VP7", value: 179)
!239 = !DIEnumerator(name: "AV_CODEC_ID_SANM", value: 180)
!240 = !DIEnumerator(name: "AV_CODEC_ID_SGIRLE", value: 181)
!241 = !DIEnumerator(name: "AV_CODEC_ID_MVC1", value: 182)
!242 = !DIEnumerator(name: "AV_CODEC_ID_MVC2", value: 183)
!243 = !DIEnumerator(name: "AV_CODEC_ID_HQX", value: 184)
!244 = !DIEnumerator(name: "AV_CODEC_ID_TDSC", value: 185)
!245 = !DIEnumerator(name: "AV_CODEC_ID_HQ_HQA", value: 186)
!246 = !DIEnumerator(name: "AV_CODEC_ID_HAP", value: 187)
!247 = !DIEnumerator(name: "AV_CODEC_ID_DDS", value: 188)
!248 = !DIEnumerator(name: "AV_CODEC_ID_DXV", value: 189)
!249 = !DIEnumerator(name: "AV_CODEC_ID_SCREENPRESSO", value: 190)
!250 = !DIEnumerator(name: "AV_CODEC_ID_RSCC", value: 191)
!251 = !DIEnumerator(name: "AV_CODEC_ID_AVS2", value: 192)
!252 = !DIEnumerator(name: "AV_CODEC_ID_Y41P", value: 32768)
!253 = !DIEnumerator(name: "AV_CODEC_ID_AVRP", value: 32769)
!254 = !DIEnumerator(name: "AV_CODEC_ID_012V", value: 32770)
!255 = !DIEnumerator(name: "AV_CODEC_ID_AVUI", value: 32771)
!256 = !DIEnumerator(name: "AV_CODEC_ID_AYUV", value: 32772)
!257 = !DIEnumerator(name: "AV_CODEC_ID_TARGA_Y216", value: 32773)
!258 = !DIEnumerator(name: "AV_CODEC_ID_V308", value: 32774)
!259 = !DIEnumerator(name: "AV_CODEC_ID_V408", value: 32775)
!260 = !DIEnumerator(name: "AV_CODEC_ID_YUV4", value: 32776)
!261 = !DIEnumerator(name: "AV_CODEC_ID_AVRN", value: 32777)
!262 = !DIEnumerator(name: "AV_CODEC_ID_CPIA", value: 32778)
!263 = !DIEnumerator(name: "AV_CODEC_ID_XFACE", value: 32779)
!264 = !DIEnumerator(name: "AV_CODEC_ID_SNOW", value: 32780)
!265 = !DIEnumerator(name: "AV_CODEC_ID_SMVJPEG", value: 32781)
!266 = !DIEnumerator(name: "AV_CODEC_ID_APNG", value: 32782)
!267 = !DIEnumerator(name: "AV_CODEC_ID_DAALA", value: 32783)
!268 = !DIEnumerator(name: "AV_CODEC_ID_CFHD", value: 32784)
!269 = !DIEnumerator(name: "AV_CODEC_ID_TRUEMOTION2RT", value: 32785)
!270 = !DIEnumerator(name: "AV_CODEC_ID_M101", value: 32786)
!271 = !DIEnumerator(name: "AV_CODEC_ID_MAGICYUV", value: 32787)
!272 = !DIEnumerator(name: "AV_CODEC_ID_SHEERVIDEO", value: 32788)
!273 = !DIEnumerator(name: "AV_CODEC_ID_YLC", value: 32789)
!274 = !DIEnumerator(name: "AV_CODEC_ID_PSD", value: 32790)
!275 = !DIEnumerator(name: "AV_CODEC_ID_PIXLET", value: 32791)
!276 = !DIEnumerator(name: "AV_CODEC_ID_SPEEDHQ", value: 32792)
!277 = !DIEnumerator(name: "AV_CODEC_ID_FMVC", value: 32793)
!278 = !DIEnumerator(name: "AV_CODEC_ID_SCPR", value: 32794)
!279 = !DIEnumerator(name: "AV_CODEC_ID_CLEARVIDEO", value: 32795)
!280 = !DIEnumerator(name: "AV_CODEC_ID_XPM", value: 32796)
!281 = !DIEnumerator(name: "AV_CODEC_ID_AV1", value: 32797)
!282 = !DIEnumerator(name: "AV_CODEC_ID_BITPACKED", value: 32798)
!283 = !DIEnumerator(name: "AV_CODEC_ID_MSCC", value: 32799)
!284 = !DIEnumerator(name: "AV_CODEC_ID_SRGC", value: 32800)
!285 = !DIEnumerator(name: "AV_CODEC_ID_SVG", value: 32801)
!286 = !DIEnumerator(name: "AV_CODEC_ID_GDV", value: 32802)
!287 = !DIEnumerator(name: "AV_CODEC_ID_FITS", value: 32803)
!288 = !DIEnumerator(name: "AV_CODEC_ID_IMM4", value: 32804)
!289 = !DIEnumerator(name: "AV_CODEC_ID_PROSUMER", value: 32805)
!290 = !DIEnumerator(name: "AV_CODEC_ID_MWSC", value: 32806)
!291 = !DIEnumerator(name: "AV_CODEC_ID_WCMV", value: 32807)
!292 = !DIEnumerator(name: "AV_CODEC_ID_RASC", value: 32808)
!293 = !DIEnumerator(name: "AV_CODEC_ID_HYMT", value: 32809)
!294 = !DIEnumerator(name: "AV_CODEC_ID_ARBC", value: 32810)
!295 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_AUDIO", value: 65536)
!296 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE", value: 65536)
!297 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE", value: 65537)
!298 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16LE", value: 65538)
!299 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U16BE", value: 65539)
!300 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8", value: 65540)
!301 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U8", value: 65541)
!302 = !DIEnumerator(name: "AV_CODEC_ID_PCM_MULAW", value: 65542)
!303 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ALAW", value: 65543)
!304 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE", value: 65544)
!305 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32BE", value: 65545)
!306 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32LE", value: 65546)
!307 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U32BE", value: 65547)
!308 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE", value: 65548)
!309 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24BE", value: 65549)
!310 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24LE", value: 65550)
!311 = !DIEnumerator(name: "AV_CODEC_ID_PCM_U24BE", value: 65551)
!312 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24DAUD", value: 65552)
!313 = !DIEnumerator(name: "AV_CODEC_ID_PCM_ZORK", value: 65553)
!314 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16LE_PLANAR", value: 65554)
!315 = !DIEnumerator(name: "AV_CODEC_ID_PCM_DVD", value: 65555)
!316 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32BE", value: 65556)
!317 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F32LE", value: 65557)
!318 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64BE", value: 65558)
!319 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F64LE", value: 65559)
!320 = !DIEnumerator(name: "AV_CODEC_ID_PCM_BLURAY", value: 65560)
!321 = !DIEnumerator(name: "AV_CODEC_ID_PCM_LXF", value: 65561)
!322 = !DIEnumerator(name: "AV_CODEC_ID_S302M", value: 65562)
!323 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S8_PLANAR", value: 65563)
!324 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S24LE_PLANAR", value: 65564)
!325 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S32LE_PLANAR", value: 65565)
!326 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S16BE_PLANAR", value: 65566)
!327 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64LE", value: 67584)
!328 = !DIEnumerator(name: "AV_CODEC_ID_PCM_S64BE", value: 67585)
!329 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F16LE", value: 67586)
!330 = !DIEnumerator(name: "AV_CODEC_ID_PCM_F24LE", value: 67587)
!331 = !DIEnumerator(name: "AV_CODEC_ID_PCM_VIDC", value: 67588)
!332 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_QT", value: 69632)
!333 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WAV", value: 69633)
!334 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK3", value: 69634)
!335 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DK4", value: 69635)
!336 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_WS", value: 69636)
!337 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_SMJPEG", value: 69637)
!338 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MS", value: 69638)
!339 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_4XM", value: 69639)
!340 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_XA", value: 69640)
!341 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_ADX", value: 69641)
!342 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA", value: 69642)
!343 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726", value: 69643)
!344 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_CT", value: 69644)
!345 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SWF", value: 69645)
!346 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_YAMAHA", value: 69646)
!347 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_4", value: 69647)
!348 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_3", value: 69648)
!349 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_SBPRO_2", value: 69649)
!350 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP", value: 69650)
!351 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_AMV", value: 69651)
!352 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R1", value: 69652)
!353 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R3", value: 69653)
!354 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_R2", value: 69654)
!355 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_SEAD", value: 69655)
!356 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_EA_EACS", value: 69656)
!357 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_XAS", value: 69657)
!358 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_EA_MAXIS_XA", value: 69658)
!359 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_ISS", value: 69659)
!360 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G722", value: 69660)
!361 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_APC", value: 69661)
!362 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_VIMA", value: 69662)
!363 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AFC", value: 71680)
!364 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_OKI", value: 71681)
!365 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_DTK", value: 71682)
!366 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_RAD", value: 71683)
!367 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_G726LE", value: 71684)
!368 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_THP_LE", value: 71685)
!369 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_PSX", value: 71686)
!370 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_AICA", value: 71687)
!371 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_IMA_DAT4", value: 71688)
!372 = !DIEnumerator(name: "AV_CODEC_ID_ADPCM_MTAF", value: 71689)
!373 = !DIEnumerator(name: "AV_CODEC_ID_AMR_NB", value: 73728)
!374 = !DIEnumerator(name: "AV_CODEC_ID_AMR_WB", value: 73729)
!375 = !DIEnumerator(name: "AV_CODEC_ID_RA_144", value: 77824)
!376 = !DIEnumerator(name: "AV_CODEC_ID_RA_288", value: 77825)
!377 = !DIEnumerator(name: "AV_CODEC_ID_ROQ_DPCM", value: 81920)
!378 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_DPCM", value: 81921)
!379 = !DIEnumerator(name: "AV_CODEC_ID_XAN_DPCM", value: 81922)
!380 = !DIEnumerator(name: "AV_CODEC_ID_SOL_DPCM", value: 81923)
!381 = !DIEnumerator(name: "AV_CODEC_ID_SDX2_DPCM", value: 83968)
!382 = !DIEnumerator(name: "AV_CODEC_ID_GREMLIN_DPCM", value: 83969)
!383 = !DIEnumerator(name: "AV_CODEC_ID_MP2", value: 86016)
!384 = !DIEnumerator(name: "AV_CODEC_ID_MP3", value: 86017)
!385 = !DIEnumerator(name: "AV_CODEC_ID_AAC", value: 86018)
!386 = !DIEnumerator(name: "AV_CODEC_ID_AC3", value: 86019)
!387 = !DIEnumerator(name: "AV_CODEC_ID_DTS", value: 86020)
!388 = !DIEnumerator(name: "AV_CODEC_ID_VORBIS", value: 86021)
!389 = !DIEnumerator(name: "AV_CODEC_ID_DVAUDIO", value: 86022)
!390 = !DIEnumerator(name: "AV_CODEC_ID_WMAV1", value: 86023)
!391 = !DIEnumerator(name: "AV_CODEC_ID_WMAV2", value: 86024)
!392 = !DIEnumerator(name: "AV_CODEC_ID_MACE3", value: 86025)
!393 = !DIEnumerator(name: "AV_CODEC_ID_MACE6", value: 86026)
!394 = !DIEnumerator(name: "AV_CODEC_ID_VMDAUDIO", value: 86027)
!395 = !DIEnumerator(name: "AV_CODEC_ID_FLAC", value: 86028)
!396 = !DIEnumerator(name: "AV_CODEC_ID_MP3ADU", value: 86029)
!397 = !DIEnumerator(name: "AV_CODEC_ID_MP3ON4", value: 86030)
!398 = !DIEnumerator(name: "AV_CODEC_ID_SHORTEN", value: 86031)
!399 = !DIEnumerator(name: "AV_CODEC_ID_ALAC", value: 86032)
!400 = !DIEnumerator(name: "AV_CODEC_ID_WESTWOOD_SND1", value: 86033)
!401 = !DIEnumerator(name: "AV_CODEC_ID_GSM", value: 86034)
!402 = !DIEnumerator(name: "AV_CODEC_ID_QDM2", value: 86035)
!403 = !DIEnumerator(name: "AV_CODEC_ID_COOK", value: 86036)
!404 = !DIEnumerator(name: "AV_CODEC_ID_TRUESPEECH", value: 86037)
!405 = !DIEnumerator(name: "AV_CODEC_ID_TTA", value: 86038)
!406 = !DIEnumerator(name: "AV_CODEC_ID_SMACKAUDIO", value: 86039)
!407 = !DIEnumerator(name: "AV_CODEC_ID_QCELP", value: 86040)
!408 = !DIEnumerator(name: "AV_CODEC_ID_WAVPACK", value: 86041)
!409 = !DIEnumerator(name: "AV_CODEC_ID_DSICINAUDIO", value: 86042)
!410 = !DIEnumerator(name: "AV_CODEC_ID_IMC", value: 86043)
!411 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK7", value: 86044)
!412 = !DIEnumerator(name: "AV_CODEC_ID_MLP", value: 86045)
!413 = !DIEnumerator(name: "AV_CODEC_ID_GSM_MS", value: 86046)
!414 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3", value: 86047)
!415 = !DIEnumerator(name: "AV_CODEC_ID_APE", value: 86048)
!416 = !DIEnumerator(name: "AV_CODEC_ID_NELLYMOSER", value: 86049)
!417 = !DIEnumerator(name: "AV_CODEC_ID_MUSEPACK8", value: 86050)
!418 = !DIEnumerator(name: "AV_CODEC_ID_SPEEX", value: 86051)
!419 = !DIEnumerator(name: "AV_CODEC_ID_WMAVOICE", value: 86052)
!420 = !DIEnumerator(name: "AV_CODEC_ID_WMAPRO", value: 86053)
!421 = !DIEnumerator(name: "AV_CODEC_ID_WMALOSSLESS", value: 86054)
!422 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3P", value: 86055)
!423 = !DIEnumerator(name: "AV_CODEC_ID_EAC3", value: 86056)
!424 = !DIEnumerator(name: "AV_CODEC_ID_SIPR", value: 86057)
!425 = !DIEnumerator(name: "AV_CODEC_ID_MP1", value: 86058)
!426 = !DIEnumerator(name: "AV_CODEC_ID_TWINVQ", value: 86059)
!427 = !DIEnumerator(name: "AV_CODEC_ID_TRUEHD", value: 86060)
!428 = !DIEnumerator(name: "AV_CODEC_ID_MP4ALS", value: 86061)
!429 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC1", value: 86062)
!430 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_RDFT", value: 86063)
!431 = !DIEnumerator(name: "AV_CODEC_ID_BINKAUDIO_DCT", value: 86064)
!432 = !DIEnumerator(name: "AV_CODEC_ID_AAC_LATM", value: 86065)
!433 = !DIEnumerator(name: "AV_CODEC_ID_QDMC", value: 86066)
!434 = !DIEnumerator(name: "AV_CODEC_ID_CELT", value: 86067)
!435 = !DIEnumerator(name: "AV_CODEC_ID_G723_1", value: 86068)
!436 = !DIEnumerator(name: "AV_CODEC_ID_G729", value: 86069)
!437 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_EXP", value: 86070)
!438 = !DIEnumerator(name: "AV_CODEC_ID_8SVX_FIB", value: 86071)
!439 = !DIEnumerator(name: "AV_CODEC_ID_BMV_AUDIO", value: 86072)
!440 = !DIEnumerator(name: "AV_CODEC_ID_RALF", value: 86073)
!441 = !DIEnumerator(name: "AV_CODEC_ID_IAC", value: 86074)
!442 = !DIEnumerator(name: "AV_CODEC_ID_ILBC", value: 86075)
!443 = !DIEnumerator(name: "AV_CODEC_ID_OPUS", value: 86076)
!444 = !DIEnumerator(name: "AV_CODEC_ID_COMFORT_NOISE", value: 86077)
!445 = !DIEnumerator(name: "AV_CODEC_ID_TAK", value: 86078)
!446 = !DIEnumerator(name: "AV_CODEC_ID_METASOUND", value: 86079)
!447 = !DIEnumerator(name: "AV_CODEC_ID_PAF_AUDIO", value: 86080)
!448 = !DIEnumerator(name: "AV_CODEC_ID_ON2AVC", value: 86081)
!449 = !DIEnumerator(name: "AV_CODEC_ID_DSS_SP", value: 86082)
!450 = !DIEnumerator(name: "AV_CODEC_ID_CODEC2", value: 86083)
!451 = !DIEnumerator(name: "AV_CODEC_ID_FFWAVESYNTH", value: 88064)
!452 = !DIEnumerator(name: "AV_CODEC_ID_SONIC", value: 88065)
!453 = !DIEnumerator(name: "AV_CODEC_ID_SONIC_LS", value: 88066)
!454 = !DIEnumerator(name: "AV_CODEC_ID_EVRC", value: 88067)
!455 = !DIEnumerator(name: "AV_CODEC_ID_SMV", value: 88068)
!456 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF", value: 88069)
!457 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF", value: 88070)
!458 = !DIEnumerator(name: "AV_CODEC_ID_DSD_LSBF_PLANAR", value: 88071)
!459 = !DIEnumerator(name: "AV_CODEC_ID_DSD_MSBF_PLANAR", value: 88072)
!460 = !DIEnumerator(name: "AV_CODEC_ID_4GV", value: 88073)
!461 = !DIEnumerator(name: "AV_CODEC_ID_INTERPLAY_ACM", value: 88074)
!462 = !DIEnumerator(name: "AV_CODEC_ID_XMA1", value: 88075)
!463 = !DIEnumerator(name: "AV_CODEC_ID_XMA2", value: 88076)
!464 = !DIEnumerator(name: "AV_CODEC_ID_DST", value: 88077)
!465 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3AL", value: 88078)
!466 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC3PAL", value: 88079)
!467 = !DIEnumerator(name: "AV_CODEC_ID_DOLBY_E", value: 88080)
!468 = !DIEnumerator(name: "AV_CODEC_ID_APTX", value: 88081)
!469 = !DIEnumerator(name: "AV_CODEC_ID_APTX_HD", value: 88082)
!470 = !DIEnumerator(name: "AV_CODEC_ID_SBC", value: 88083)
!471 = !DIEnumerator(name: "AV_CODEC_ID_ATRAC9", value: 88084)
!472 = !DIEnumerator(name: "AV_CODEC_ID_HCOM", value: 88085)
!473 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_SUBTITLE", value: 94208)
!474 = !DIEnumerator(name: "AV_CODEC_ID_DVD_SUBTITLE", value: 94208)
!475 = !DIEnumerator(name: "AV_CODEC_ID_DVB_SUBTITLE", value: 94209)
!476 = !DIEnumerator(name: "AV_CODEC_ID_TEXT", value: 94210)
!477 = !DIEnumerator(name: "AV_CODEC_ID_XSUB", value: 94211)
!478 = !DIEnumerator(name: "AV_CODEC_ID_SSA", value: 94212)
!479 = !DIEnumerator(name: "AV_CODEC_ID_MOV_TEXT", value: 94213)
!480 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_PGS_SUBTITLE", value: 94214)
!481 = !DIEnumerator(name: "AV_CODEC_ID_DVB_TELETEXT", value: 94215)
!482 = !DIEnumerator(name: "AV_CODEC_ID_SRT", value: 94216)
!483 = !DIEnumerator(name: "AV_CODEC_ID_MICRODVD", value: 96256)
!484 = !DIEnumerator(name: "AV_CODEC_ID_EIA_608", value: 96257)
!485 = !DIEnumerator(name: "AV_CODEC_ID_JACOSUB", value: 96258)
!486 = !DIEnumerator(name: "AV_CODEC_ID_SAMI", value: 96259)
!487 = !DIEnumerator(name: "AV_CODEC_ID_REALTEXT", value: 96260)
!488 = !DIEnumerator(name: "AV_CODEC_ID_STL", value: 96261)
!489 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER1", value: 96262)
!490 = !DIEnumerator(name: "AV_CODEC_ID_SUBVIEWER", value: 96263)
!491 = !DIEnumerator(name: "AV_CODEC_ID_SUBRIP", value: 96264)
!492 = !DIEnumerator(name: "AV_CODEC_ID_WEBVTT", value: 96265)
!493 = !DIEnumerator(name: "AV_CODEC_ID_MPL2", value: 96266)
!494 = !DIEnumerator(name: "AV_CODEC_ID_VPLAYER", value: 96267)
!495 = !DIEnumerator(name: "AV_CODEC_ID_PJS", value: 96268)
!496 = !DIEnumerator(name: "AV_CODEC_ID_ASS", value: 96269)
!497 = !DIEnumerator(name: "AV_CODEC_ID_HDMV_TEXT_SUBTITLE", value: 96270)
!498 = !DIEnumerator(name: "AV_CODEC_ID_TTML", value: 96271)
!499 = !DIEnumerator(name: "AV_CODEC_ID_ARIB_CAPTION", value: 96272)
!500 = !DIEnumerator(name: "AV_CODEC_ID_FIRST_UNKNOWN", value: 98304)
!501 = !DIEnumerator(name: "AV_CODEC_ID_TTF", value: 98304)
!502 = !DIEnumerator(name: "AV_CODEC_ID_SCTE_35", value: 98305)
!503 = !DIEnumerator(name: "AV_CODEC_ID_BINTEXT", value: 100352)
!504 = !DIEnumerator(name: "AV_CODEC_ID_XBIN", value: 100353)
!505 = !DIEnumerator(name: "AV_CODEC_ID_IDF", value: 100354)
!506 = !DIEnumerator(name: "AV_CODEC_ID_OTF", value: 100355)
!507 = !DIEnumerator(name: "AV_CODEC_ID_SMPTE_KLV", value: 100356)
!508 = !DIEnumerator(name: "AV_CODEC_ID_DVD_NAV", value: 100357)
!509 = !DIEnumerator(name: "AV_CODEC_ID_TIMED_ID3", value: 100358)
!510 = !DIEnumerator(name: "AV_CODEC_ID_BIN_DATA", value: 100359)
!511 = !DIEnumerator(name: "AV_CODEC_ID_PROBE", value: 102400)
!512 = !DIEnumerator(name: "AV_CODEC_ID_MPEG2TS", value: 131072)
!513 = !DIEnumerator(name: "AV_CODEC_ID_MPEG4SYSTEMS", value: 131073)
!514 = !DIEnumerator(name: "AV_CODEC_ID_FFMETADATA", value: 135168)
!515 = !DIEnumerator(name: "AV_CODEC_ID_WRAPPED_AVFRAME", value: 135169)
!516 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPixelFormat", file: !517, line: 64, size: 32, align: 32, elements: !518)
!517 = !DIFile(filename: "./libavutil/pixfmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!518 = !{!519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715}
!519 = !DIEnumerator(name: "AV_PIX_FMT_NONE", value: -1)
!520 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P", value: 0)
!521 = !DIEnumerator(name: "AV_PIX_FMT_YUYV422", value: 1)
!522 = !DIEnumerator(name: "AV_PIX_FMT_RGB24", value: 2)
!523 = !DIEnumerator(name: "AV_PIX_FMT_BGR24", value: 3)
!524 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P", value: 4)
!525 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P", value: 5)
!526 = !DIEnumerator(name: "AV_PIX_FMT_YUV410P", value: 6)
!527 = !DIEnumerator(name: "AV_PIX_FMT_YUV411P", value: 7)
!528 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8", value: 8)
!529 = !DIEnumerator(name: "AV_PIX_FMT_MONOWHITE", value: 9)
!530 = !DIEnumerator(name: "AV_PIX_FMT_MONOBLACK", value: 10)
!531 = !DIEnumerator(name: "AV_PIX_FMT_PAL8", value: 11)
!532 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ420P", value: 12)
!533 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ422P", value: 13)
!534 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ444P", value: 14)
!535 = !DIEnumerator(name: "AV_PIX_FMT_UYVY422", value: 15)
!536 = !DIEnumerator(name: "AV_PIX_FMT_UYYVYY411", value: 16)
!537 = !DIEnumerator(name: "AV_PIX_FMT_BGR8", value: 17)
!538 = !DIEnumerator(name: "AV_PIX_FMT_BGR4", value: 18)
!539 = !DIEnumerator(name: "AV_PIX_FMT_BGR4_BYTE", value: 19)
!540 = !DIEnumerator(name: "AV_PIX_FMT_RGB8", value: 20)
!541 = !DIEnumerator(name: "AV_PIX_FMT_RGB4", value: 21)
!542 = !DIEnumerator(name: "AV_PIX_FMT_RGB4_BYTE", value: 22)
!543 = !DIEnumerator(name: "AV_PIX_FMT_NV12", value: 23)
!544 = !DIEnumerator(name: "AV_PIX_FMT_NV21", value: 24)
!545 = !DIEnumerator(name: "AV_PIX_FMT_ARGB", value: 25)
!546 = !DIEnumerator(name: "AV_PIX_FMT_RGBA", value: 26)
!547 = !DIEnumerator(name: "AV_PIX_FMT_ABGR", value: 27)
!548 = !DIEnumerator(name: "AV_PIX_FMT_BGRA", value: 28)
!549 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16BE", value: 29)
!550 = !DIEnumerator(name: "AV_PIX_FMT_GRAY16LE", value: 30)
!551 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P", value: 31)
!552 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ440P", value: 32)
!553 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P", value: 33)
!554 = !DIEnumerator(name: "AV_PIX_FMT_RGB48BE", value: 34)
!555 = !DIEnumerator(name: "AV_PIX_FMT_RGB48LE", value: 35)
!556 = !DIEnumerator(name: "AV_PIX_FMT_RGB565BE", value: 36)
!557 = !DIEnumerator(name: "AV_PIX_FMT_RGB565LE", value: 37)
!558 = !DIEnumerator(name: "AV_PIX_FMT_RGB555BE", value: 38)
!559 = !DIEnumerator(name: "AV_PIX_FMT_RGB555LE", value: 39)
!560 = !DIEnumerator(name: "AV_PIX_FMT_BGR565BE", value: 40)
!561 = !DIEnumerator(name: "AV_PIX_FMT_BGR565LE", value: 41)
!562 = !DIEnumerator(name: "AV_PIX_FMT_BGR555BE", value: 42)
!563 = !DIEnumerator(name: "AV_PIX_FMT_BGR555LE", value: 43)
!564 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_MOCO", value: 44)
!565 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_IDCT", value: 45)
!566 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI_VLD", value: 46)
!567 = !DIEnumerator(name: "AV_PIX_FMT_VAAPI", value: 46)
!568 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16LE", value: 47)
!569 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P16BE", value: 48)
!570 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16LE", value: 49)
!571 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P16BE", value: 50)
!572 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16LE", value: 51)
!573 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P16BE", value: 52)
!574 = !DIEnumerator(name: "AV_PIX_FMT_DXVA2_VLD", value: 53)
!575 = !DIEnumerator(name: "AV_PIX_FMT_RGB444LE", value: 54)
!576 = !DIEnumerator(name: "AV_PIX_FMT_RGB444BE", value: 55)
!577 = !DIEnumerator(name: "AV_PIX_FMT_BGR444LE", value: 56)
!578 = !DIEnumerator(name: "AV_PIX_FMT_BGR444BE", value: 57)
!579 = !DIEnumerator(name: "AV_PIX_FMT_YA8", value: 58)
!580 = !DIEnumerator(name: "AV_PIX_FMT_Y400A", value: 58)
!581 = !DIEnumerator(name: "AV_PIX_FMT_GRAY8A", value: 58)
!582 = !DIEnumerator(name: "AV_PIX_FMT_BGR48BE", value: 59)
!583 = !DIEnumerator(name: "AV_PIX_FMT_BGR48LE", value: 60)
!584 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9BE", value: 61)
!585 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P9LE", value: 62)
!586 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10BE", value: 63)
!587 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P10LE", value: 64)
!588 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10BE", value: 65)
!589 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P10LE", value: 66)
!590 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9BE", value: 67)
!591 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P9LE", value: 68)
!592 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10BE", value: 69)
!593 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P10LE", value: 70)
!594 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9BE", value: 71)
!595 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P9LE", value: 72)
!596 = !DIEnumerator(name: "AV_PIX_FMT_GBRP", value: 73)
!597 = !DIEnumerator(name: "AV_PIX_FMT_GBR24P", value: 73)
!598 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9BE", value: 74)
!599 = !DIEnumerator(name: "AV_PIX_FMT_GBRP9LE", value: 75)
!600 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10BE", value: 76)
!601 = !DIEnumerator(name: "AV_PIX_FMT_GBRP10LE", value: 77)
!602 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16BE", value: 78)
!603 = !DIEnumerator(name: "AV_PIX_FMT_GBRP16LE", value: 79)
!604 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P", value: 80)
!605 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P", value: 81)
!606 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9BE", value: 82)
!607 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P9LE", value: 83)
!608 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9BE", value: 84)
!609 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P9LE", value: 85)
!610 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9BE", value: 86)
!611 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P9LE", value: 87)
!612 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10BE", value: 88)
!613 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P10LE", value: 89)
!614 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10BE", value: 90)
!615 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P10LE", value: 91)
!616 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10BE", value: 92)
!617 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P10LE", value: 93)
!618 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16BE", value: 94)
!619 = !DIEnumerator(name: "AV_PIX_FMT_YUVA420P16LE", value: 95)
!620 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16BE", value: 96)
!621 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P16LE", value: 97)
!622 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16BE", value: 98)
!623 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P16LE", value: 99)
!624 = !DIEnumerator(name: "AV_PIX_FMT_VDPAU", value: 100)
!625 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12LE", value: 101)
!626 = !DIEnumerator(name: "AV_PIX_FMT_XYZ12BE", value: 102)
!627 = !DIEnumerator(name: "AV_PIX_FMT_NV16", value: 103)
!628 = !DIEnumerator(name: "AV_PIX_FMT_NV20LE", value: 104)
!629 = !DIEnumerator(name: "AV_PIX_FMT_NV20BE", value: 105)
!630 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64BE", value: 106)
!631 = !DIEnumerator(name: "AV_PIX_FMT_RGBA64LE", value: 107)
!632 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64BE", value: 108)
!633 = !DIEnumerator(name: "AV_PIX_FMT_BGRA64LE", value: 109)
!634 = !DIEnumerator(name: "AV_PIX_FMT_YVYU422", value: 110)
!635 = !DIEnumerator(name: "AV_PIX_FMT_YA16BE", value: 111)
!636 = !DIEnumerator(name: "AV_PIX_FMT_YA16LE", value: 112)
!637 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP", value: 113)
!638 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16BE", value: 114)
!639 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP16LE", value: 115)
!640 = !DIEnumerator(name: "AV_PIX_FMT_QSV", value: 116)
!641 = !DIEnumerator(name: "AV_PIX_FMT_MMAL", value: 117)
!642 = !DIEnumerator(name: "AV_PIX_FMT_D3D11VA_VLD", value: 118)
!643 = !DIEnumerator(name: "AV_PIX_FMT_CUDA", value: 119)
!644 = !DIEnumerator(name: "AV_PIX_FMT_0RGB", value: 120)
!645 = !DIEnumerator(name: "AV_PIX_FMT_RGB0", value: 121)
!646 = !DIEnumerator(name: "AV_PIX_FMT_0BGR", value: 122)
!647 = !DIEnumerator(name: "AV_PIX_FMT_BGR0", value: 123)
!648 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12BE", value: 124)
!649 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P12LE", value: 125)
!650 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14BE", value: 126)
!651 = !DIEnumerator(name: "AV_PIX_FMT_YUV420P14LE", value: 127)
!652 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12BE", value: 128)
!653 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P12LE", value: 129)
!654 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14BE", value: 130)
!655 = !DIEnumerator(name: "AV_PIX_FMT_YUV422P14LE", value: 131)
!656 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12BE", value: 132)
!657 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P12LE", value: 133)
!658 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14BE", value: 134)
!659 = !DIEnumerator(name: "AV_PIX_FMT_YUV444P14LE", value: 135)
!660 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12BE", value: 136)
!661 = !DIEnumerator(name: "AV_PIX_FMT_GBRP12LE", value: 137)
!662 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14BE", value: 138)
!663 = !DIEnumerator(name: "AV_PIX_FMT_GBRP14LE", value: 139)
!664 = !DIEnumerator(name: "AV_PIX_FMT_YUVJ411P", value: 140)
!665 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR8", value: 141)
!666 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB8", value: 142)
!667 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG8", value: 143)
!668 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG8", value: 144)
!669 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16LE", value: 145)
!670 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_BGGR16BE", value: 146)
!671 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16LE", value: 147)
!672 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_RGGB16BE", value: 148)
!673 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16LE", value: 149)
!674 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GBRG16BE", value: 150)
!675 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16LE", value: 151)
!676 = !DIEnumerator(name: "AV_PIX_FMT_BAYER_GRBG16BE", value: 152)
!677 = !DIEnumerator(name: "AV_PIX_FMT_XVMC", value: 153)
!678 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10LE", value: 154)
!679 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P10BE", value: 155)
!680 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12LE", value: 156)
!681 = !DIEnumerator(name: "AV_PIX_FMT_YUV440P12BE", value: 157)
!682 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64LE", value: 158)
!683 = !DIEnumerator(name: "AV_PIX_FMT_AYUV64BE", value: 159)
!684 = !DIEnumerator(name: "AV_PIX_FMT_VIDEOTOOLBOX", value: 160)
!685 = !DIEnumerator(name: "AV_PIX_FMT_P010LE", value: 161)
!686 = !DIEnumerator(name: "AV_PIX_FMT_P010BE", value: 162)
!687 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12BE", value: 163)
!688 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP12LE", value: 164)
!689 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10BE", value: 165)
!690 = !DIEnumerator(name: "AV_PIX_FMT_GBRAP10LE", value: 166)
!691 = !DIEnumerator(name: "AV_PIX_FMT_MEDIACODEC", value: 167)
!692 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12BE", value: 168)
!693 = !DIEnumerator(name: "AV_PIX_FMT_GRAY12LE", value: 169)
!694 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10BE", value: 170)
!695 = !DIEnumerator(name: "AV_PIX_FMT_GRAY10LE", value: 171)
!696 = !DIEnumerator(name: "AV_PIX_FMT_P016LE", value: 172)
!697 = !DIEnumerator(name: "AV_PIX_FMT_P016BE", value: 173)
!698 = !DIEnumerator(name: "AV_PIX_FMT_D3D11", value: 174)
!699 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9BE", value: 175)
!700 = !DIEnumerator(name: "AV_PIX_FMT_GRAY9LE", value: 176)
!701 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32BE", value: 177)
!702 = !DIEnumerator(name: "AV_PIX_FMT_GBRPF32LE", value: 178)
!703 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32BE", value: 179)
!704 = !DIEnumerator(name: "AV_PIX_FMT_GBRAPF32LE", value: 180)
!705 = !DIEnumerator(name: "AV_PIX_FMT_DRM_PRIME", value: 181)
!706 = !DIEnumerator(name: "AV_PIX_FMT_OPENCL", value: 182)
!707 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14BE", value: 183)
!708 = !DIEnumerator(name: "AV_PIX_FMT_GRAY14LE", value: 184)
!709 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32BE", value: 185)
!710 = !DIEnumerator(name: "AV_PIX_FMT_GRAYF32LE", value: 186)
!711 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12BE", value: 187)
!712 = !DIEnumerator(name: "AV_PIX_FMT_YUVA422P12LE", value: 188)
!713 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12BE", value: 189)
!714 = !DIEnumerator(name: "AV_PIX_FMT_YUVA444P12LE", value: 190)
!715 = !DIEnumerator(name: "AV_PIX_FMT_NB", value: 191)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSampleFormat", file: !717, line: 58, size: 32, align: 32, elements: !718)
!717 = !DIFile(filename: "./libavutil/samplefmt.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!718 = !{!719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732}
!719 = !DIEnumerator(name: "AV_SAMPLE_FMT_NONE", value: -1)
!720 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8", value: 0)
!721 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16", value: 1)
!722 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32", value: 2)
!723 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLT", value: 3)
!724 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBL", value: 4)
!725 = !DIEnumerator(name: "AV_SAMPLE_FMT_U8P", value: 5)
!726 = !DIEnumerator(name: "AV_SAMPLE_FMT_S16P", value: 6)
!727 = !DIEnumerator(name: "AV_SAMPLE_FMT_S32P", value: 7)
!728 = !DIEnumerator(name: "AV_SAMPLE_FMT_FLTP", value: 8)
!729 = !DIEnumerator(name: "AV_SAMPLE_FMT_DBLP", value: 9)
!730 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64", value: 10)
!731 = !DIEnumerator(name: "AV_SAMPLE_FMT_S64P", value: 11)
!732 = !DIEnumerator(name: "AV_SAMPLE_FMT_NB", value: 12)
!733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVSubtitleType", file: !57, line: 3865, size: 32, align: 32, elements: !734)
!734 = !{!735, !736, !737, !738}
!735 = !DIEnumerator(name: "SUBTITLE_NONE", value: 0)
!736 = !DIEnumerator(name: "SUBTITLE_BITMAP", value: 1)
!737 = !DIEnumerator(name: "SUBTITLE_TEXT", value: 2)
!738 = !DIEnumerator(name: "SUBTITLE_ASS", value: 3)
!739 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPacketSideDataType", file: !57, line: 1175, size: 32, align: 32, elements: !740)
!740 = !{!741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!741 = !DIEnumerator(name: "AV_PKT_DATA_PALETTE", value: 0)
!742 = !DIEnumerator(name: "AV_PKT_DATA_NEW_EXTRADATA", value: 1)
!743 = !DIEnumerator(name: "AV_PKT_DATA_PARAM_CHANGE", value: 2)
!744 = !DIEnumerator(name: "AV_PKT_DATA_H263_MB_INFO", value: 3)
!745 = !DIEnumerator(name: "AV_PKT_DATA_REPLAYGAIN", value: 4)
!746 = !DIEnumerator(name: "AV_PKT_DATA_DISPLAYMATRIX", value: 5)
!747 = !DIEnumerator(name: "AV_PKT_DATA_STEREO3D", value: 6)
!748 = !DIEnumerator(name: "AV_PKT_DATA_AUDIO_SERVICE_TYPE", value: 7)
!749 = !DIEnumerator(name: "AV_PKT_DATA_QUALITY_STATS", value: 8)
!750 = !DIEnumerator(name: "AV_PKT_DATA_FALLBACK_TRACK", value: 9)
!751 = !DIEnumerator(name: "AV_PKT_DATA_CPB_PROPERTIES", value: 10)
!752 = !DIEnumerator(name: "AV_PKT_DATA_SKIP_SAMPLES", value: 11)
!753 = !DIEnumerator(name: "AV_PKT_DATA_JP_DUALMONO", value: 12)
!754 = !DIEnumerator(name: "AV_PKT_DATA_STRINGS_METADATA", value: 13)
!755 = !DIEnumerator(name: "AV_PKT_DATA_SUBTITLE_POSITION", value: 14)
!756 = !DIEnumerator(name: "AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL", value: 15)
!757 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_IDENTIFIER", value: 16)
!758 = !DIEnumerator(name: "AV_PKT_DATA_WEBVTT_SETTINGS", value: 17)
!759 = !DIEnumerator(name: "AV_PKT_DATA_METADATA_UPDATE", value: 18)
!760 = !DIEnumerator(name: "AV_PKT_DATA_MPEGTS_STREAM_ID", value: 19)
!761 = !DIEnumerator(name: "AV_PKT_DATA_MASTERING_DISPLAY_METADATA", value: 20)
!762 = !DIEnumerator(name: "AV_PKT_DATA_SPHERICAL", value: 21)
!763 = !DIEnumerator(name: "AV_PKT_DATA_CONTENT_LIGHT_LEVEL", value: 22)
!764 = !DIEnumerator(name: "AV_PKT_DATA_A53_CC", value: 23)
!765 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INIT_INFO", value: 24)
!766 = !DIEnumerator(name: "AV_PKT_DATA_ENCRYPTION_INFO", value: 25)
!767 = !DIEnumerator(name: "AV_PKT_DATA_AFD", value: 26)
!768 = !DIEnumerator(name: "AV_PKT_DATA_NB", value: 27)
!769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVPictureType", file: !47, line: 272, size: 32, align: 32, elements: !770)
!770 = !{!771, !772, !773, !774, !775, !776, !777, !778}
!771 = !DIEnumerator(name: "AV_PICTURE_TYPE_NONE", value: 0)
!772 = !DIEnumerator(name: "AV_PICTURE_TYPE_I", value: 1)
!773 = !DIEnumerator(name: "AV_PICTURE_TYPE_P", value: 2)
!774 = !DIEnumerator(name: "AV_PICTURE_TYPE_B", value: 3)
!775 = !DIEnumerator(name: "AV_PICTURE_TYPE_S", value: 4)
!776 = !DIEnumerator(name: "AV_PICTURE_TYPE_SI", value: 5)
!777 = !DIEnumerator(name: "AV_PICTURE_TYPE_SP", value: 6)
!778 = !DIEnumerator(name: "AV_PICTURE_TYPE_BI", value: 7)
!779 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFrameSideDataType", file: !780, line: 48, size: 32, align: 32, elements: !781)
!780 = !DIFile(filename: "./libavutil/frame.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!781 = !{!782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802}
!782 = !DIEnumerator(name: "AV_FRAME_DATA_PANSCAN", value: 0)
!783 = !DIEnumerator(name: "AV_FRAME_DATA_A53_CC", value: 1)
!784 = !DIEnumerator(name: "AV_FRAME_DATA_STEREO3D", value: 2)
!785 = !DIEnumerator(name: "AV_FRAME_DATA_MATRIXENCODING", value: 3)
!786 = !DIEnumerator(name: "AV_FRAME_DATA_DOWNMIX_INFO", value: 4)
!787 = !DIEnumerator(name: "AV_FRAME_DATA_REPLAYGAIN", value: 5)
!788 = !DIEnumerator(name: "AV_FRAME_DATA_DISPLAYMATRIX", value: 6)
!789 = !DIEnumerator(name: "AV_FRAME_DATA_AFD", value: 7)
!790 = !DIEnumerator(name: "AV_FRAME_DATA_MOTION_VECTORS", value: 8)
!791 = !DIEnumerator(name: "AV_FRAME_DATA_SKIP_SAMPLES", value: 9)
!792 = !DIEnumerator(name: "AV_FRAME_DATA_AUDIO_SERVICE_TYPE", value: 10)
!793 = !DIEnumerator(name: "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA", value: 11)
!794 = !DIEnumerator(name: "AV_FRAME_DATA_GOP_TIMECODE", value: 12)
!795 = !DIEnumerator(name: "AV_FRAME_DATA_SPHERICAL", value: 13)
!796 = !DIEnumerator(name: "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL", value: 14)
!797 = !DIEnumerator(name: "AV_FRAME_DATA_ICC_PROFILE", value: 15)
!798 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_PROPERTIES", value: 16)
!799 = !DIEnumerator(name: "AV_FRAME_DATA_QP_TABLE_DATA", value: 17)
!800 = !DIEnumerator(name: "AV_FRAME_DATA_S12M_TIMECODE", value: 18)
!801 = !DIEnumerator(name: "AV_FRAME_DATA_DYNAMIC_HDR_PLUS", value: 19)
!802 = !DIEnumerator(name: "AV_FRAME_DATA_REGIONS_OF_INTEREST", value: 20)
!803 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorRange", file: !517, line: 516, size: 32, align: 32, elements: !804)
!804 = !{!805, !806, !807, !808}
!805 = !DIEnumerator(name: "AVCOL_RANGE_UNSPECIFIED", value: 0)
!806 = !DIEnumerator(name: "AVCOL_RANGE_MPEG", value: 1)
!807 = !DIEnumerator(name: "AVCOL_RANGE_JPEG", value: 2)
!808 = !DIEnumerator(name: "AVCOL_RANGE_NB", value: 3)
!809 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorPrimaries", file: !517, line: 440, size: 32, align: 32, elements: !810)
!810 = !{!811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826}
!811 = !DIEnumerator(name: "AVCOL_PRI_RESERVED0", value: 0)
!812 = !DIEnumerator(name: "AVCOL_PRI_BT709", value: 1)
!813 = !DIEnumerator(name: "AVCOL_PRI_UNSPECIFIED", value: 2)
!814 = !DIEnumerator(name: "AVCOL_PRI_RESERVED", value: 3)
!815 = !DIEnumerator(name: "AVCOL_PRI_BT470M", value: 4)
!816 = !DIEnumerator(name: "AVCOL_PRI_BT470BG", value: 5)
!817 = !DIEnumerator(name: "AVCOL_PRI_SMPTE170M", value: 6)
!818 = !DIEnumerator(name: "AVCOL_PRI_SMPTE240M", value: 7)
!819 = !DIEnumerator(name: "AVCOL_PRI_FILM", value: 8)
!820 = !DIEnumerator(name: "AVCOL_PRI_BT2020", value: 9)
!821 = !DIEnumerator(name: "AVCOL_PRI_SMPTE428", value: 10)
!822 = !DIEnumerator(name: "AVCOL_PRI_SMPTEST428_1", value: 10)
!823 = !DIEnumerator(name: "AVCOL_PRI_SMPTE431", value: 11)
!824 = !DIEnumerator(name: "AVCOL_PRI_SMPTE432", value: 12)
!825 = !DIEnumerator(name: "AVCOL_PRI_JEDEC_P22", value: 22)
!826 = !DIEnumerator(name: "AVCOL_PRI_NB", value: 23)
!827 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorTransferCharacteristic", file: !517, line: 464, size: 32, align: 32, elements: !828)
!828 = !{!829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850}
!829 = !DIEnumerator(name: "AVCOL_TRC_RESERVED0", value: 0)
!830 = !DIEnumerator(name: "AVCOL_TRC_BT709", value: 1)
!831 = !DIEnumerator(name: "AVCOL_TRC_UNSPECIFIED", value: 2)
!832 = !DIEnumerator(name: "AVCOL_TRC_RESERVED", value: 3)
!833 = !DIEnumerator(name: "AVCOL_TRC_GAMMA22", value: 4)
!834 = !DIEnumerator(name: "AVCOL_TRC_GAMMA28", value: 5)
!835 = !DIEnumerator(name: "AVCOL_TRC_SMPTE170M", value: 6)
!836 = !DIEnumerator(name: "AVCOL_TRC_SMPTE240M", value: 7)
!837 = !DIEnumerator(name: "AVCOL_TRC_LINEAR", value: 8)
!838 = !DIEnumerator(name: "AVCOL_TRC_LOG", value: 9)
!839 = !DIEnumerator(name: "AVCOL_TRC_LOG_SQRT", value: 10)
!840 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_4", value: 11)
!841 = !DIEnumerator(name: "AVCOL_TRC_BT1361_ECG", value: 12)
!842 = !DIEnumerator(name: "AVCOL_TRC_IEC61966_2_1", value: 13)
!843 = !DIEnumerator(name: "AVCOL_TRC_BT2020_10", value: 14)
!844 = !DIEnumerator(name: "AVCOL_TRC_BT2020_12", value: 15)
!845 = !DIEnumerator(name: "AVCOL_TRC_SMPTE2084", value: 16)
!846 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST2084", value: 16)
!847 = !DIEnumerator(name: "AVCOL_TRC_SMPTE428", value: 17)
!848 = !DIEnumerator(name: "AVCOL_TRC_SMPTEST428_1", value: 17)
!849 = !DIEnumerator(name: "AVCOL_TRC_ARIB_STD_B67", value: 18)
!850 = !DIEnumerator(name: "AVCOL_TRC_NB", value: 19)
!851 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVColorSpace", file: !517, line: 493, size: 32, align: 32, elements: !852)
!852 = !{!853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869}
!853 = !DIEnumerator(name: "AVCOL_SPC_RGB", value: 0)
!854 = !DIEnumerator(name: "AVCOL_SPC_BT709", value: 1)
!855 = !DIEnumerator(name: "AVCOL_SPC_UNSPECIFIED", value: 2)
!856 = !DIEnumerator(name: "AVCOL_SPC_RESERVED", value: 3)
!857 = !DIEnumerator(name: "AVCOL_SPC_FCC", value: 4)
!858 = !DIEnumerator(name: "AVCOL_SPC_BT470BG", value: 5)
!859 = !DIEnumerator(name: "AVCOL_SPC_SMPTE170M", value: 6)
!860 = !DIEnumerator(name: "AVCOL_SPC_SMPTE240M", value: 7)
!861 = !DIEnumerator(name: "AVCOL_SPC_YCGCO", value: 8)
!862 = !DIEnumerator(name: "AVCOL_SPC_YCOCG", value: 8)
!863 = !DIEnumerator(name: "AVCOL_SPC_BT2020_NCL", value: 9)
!864 = !DIEnumerator(name: "AVCOL_SPC_BT2020_CL", value: 10)
!865 = !DIEnumerator(name: "AVCOL_SPC_SMPTE2085", value: 11)
!866 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_NCL", value: 12)
!867 = !DIEnumerator(name: "AVCOL_SPC_CHROMA_DERIVED_CL", value: 13)
!868 = !DIEnumerator(name: "AVCOL_SPC_ICTCP", value: 14)
!869 = !DIEnumerator(name: "AVCOL_SPC_NB", value: 15)
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVChromaLocation", file: !517, line: 538, size: 32, align: 32, elements: !871)
!871 = !{!872, !873, !874, !875, !876, !877, !878, !879}
!872 = !DIEnumerator(name: "AVCHROMA_LOC_UNSPECIFIED", value: 0)
!873 = !DIEnumerator(name: "AVCHROMA_LOC_LEFT", value: 1)
!874 = !DIEnumerator(name: "AVCHROMA_LOC_CENTER", value: 2)
!875 = !DIEnumerator(name: "AVCHROMA_LOC_TOPLEFT", value: 3)
!876 = !DIEnumerator(name: "AVCHROMA_LOC_TOP", value: 4)
!877 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOMLEFT", value: 5)
!878 = !DIEnumerator(name: "AVCHROMA_LOC_BOTTOM", value: 6)
!879 = !DIEnumerator(name: "AVCHROMA_LOC_NB", value: 7)
!880 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVHWDeviceType", file: !881, line: 27, size: 32, align: 32, elements: !882)
!881 = !DIFile(filename: "./libavutil/hwcontext.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!882 = !{!883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893}
!883 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_NONE", value: 0)
!884 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VDPAU", value: 1)
!885 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_CUDA", value: 2)
!886 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VAAPI", value: 3)
!887 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_DXVA2", value: 4)
!888 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_QSV", value: 5)
!889 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_VIDEOTOOLBOX", value: 6)
!890 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_D3D11VA", value: 7)
!891 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_DRM", value: 8)
!892 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_OPENCL", value: 9)
!893 = !DIEnumerator(name: "AV_HWDEVICE_TYPE_MEDIACODEC", value: 10)
!894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVFieldOrder", file: !57, line: 1534, size: 32, align: 32, elements: !895)
!895 = !{!896, !897, !898, !899, !900, !901}
!896 = !DIEnumerator(name: "AV_FIELD_UNKNOWN", value: 0)
!897 = !DIEnumerator(name: "AV_FIELD_PROGRESSIVE", value: 1)
!898 = !DIEnumerator(name: "AV_FIELD_TT", value: 2)
!899 = !DIEnumerator(name: "AV_FIELD_BB", value: 3)
!900 = !DIEnumerator(name: "AV_FIELD_TB", value: 4)
!901 = !DIEnumerator(name: "AV_FIELD_BT", value: 5)
!902 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVAudioServiceType", file: !57, line: 810, size: 32, align: 32, elements: !903)
!903 = !{!904, !905, !906, !907, !908, !909, !910, !911, !912, !913}
!904 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_MAIN", value: 0)
!905 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EFFECTS", value: 1)
!906 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED", value: 2)
!907 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED", value: 3)
!908 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_DIALOGUE", value: 4)
!909 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_COMMENTARY", value: 5)
!910 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_EMERGENCY", value: 6)
!911 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_VOICE_OVER", value: 7)
!912 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_KARAOKE", value: 8)
!913 = !DIEnumerator(name: "AV_AUDIO_SERVICE_TYPE_NB", value: 9)
!914 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "AVDiscard", file: !57, line: 798, size: 32, align: 32, elements: !915)
!915 = !{!916, !917, !918, !919, !920, !921, !922}
!916 = !DIEnumerator(name: "AVDISCARD_NONE", value: -16)
!917 = !DIEnumerator(name: "AVDISCARD_DEFAULT", value: 0)
!918 = !DIEnumerator(name: "AVDISCARD_NONREF", value: 8)
!919 = !DIEnumerator(name: "AVDISCARD_BIDIR", value: 16)
!920 = !DIEnumerator(name: "AVDISCARD_NONINTRA", value: 24)
!921 = !DIEnumerator(name: "AVDISCARD_NONKEY", value: 32)
!922 = !DIEnumerator(name: "AVDISCARD_ALL", value: 48)
!923 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OutputFormat", file: !924, line: 123, size: 32, align: 32, elements: !925)
!924 = !DIFile(filename: "libavcodec/mpegutils.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!925 = !{!926, !927, !928, !929}
!926 = !DIEnumerator(name: "FMT_MPEG1", value: 0)
!927 = !DIEnumerator(name: "FMT_H261", value: 1)
!928 = !DIEnumerator(name: "FMT_H263", value: 2)
!929 = !DIEnumerator(name: "FMT_MJPEG", value: 3)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "idct_permutation_type", file: !931, line: 37, size: 32, align: 32, elements: !932)
!931 = !DIFile(filename: "libavcodec/idctdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!932 = !{!933, !934, !935, !936, !937, !938}
!933 = !DIEnumerator(name: "FF_IDCT_PERM_NONE", value: 0)
!934 = !DIEnumerator(name: "FF_IDCT_PERM_LIBMPEG2", value: 1)
!935 = !DIEnumerator(name: "FF_IDCT_PERM_SIMPLE", value: 2)
!936 = !DIEnumerator(name: "FF_IDCT_PERM_TRANSPOSE", value: 3)
!937 = !DIEnumerator(name: "FF_IDCT_PERM_PARTTRANS", value: 4)
!938 = !DIEnumerator(name: "FF_IDCT_PERM_SSE2", value: 5)
!939 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FrameCodingMode", file: !940, line: 148, size: 32, align: 32, elements: !941)
!940 = !DIFile(filename: "libavcodec/vc1.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!941 = !{!942, !943, !944}
!942 = !DIEnumerator(name: "PROGRESSIVE", value: 0)
!943 = !DIEnumerator(name: "ILACE_FRAME", value: 1)
!944 = !DIEnumerator(name: "ILACE_FIELD", value: 2)
!945 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Profile", file: !946, line: 48, size: 32, align: 32, elements: !947)
!946 = !DIFile(filename: "libavcodec/vc1_common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!947 = !{!948, !949, !950, !951}
!948 = !DIEnumerator(name: "PROFILE_SIMPLE", value: 0)
!949 = !DIEnumerator(name: "PROFILE_MAIN", value: 1)
!950 = !DIEnumerator(name: "PROFILE_COMPLEX", value: 2)
!951 = !DIEnumerator(name: "PROFILE_ADVANCED", value: 3)
!952 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "VC1Code", file: !946, line: 33, size: 32, align: 32, elements: !953)
!953 = !{!954, !955, !956, !957, !958, !959, !960}
!954 = !DIEnumerator(name: "VC1_CODE_RES0", value: 256)
!955 = !DIEnumerator(name: "VC1_CODE_ENDOFSEQ", value: 266)
!956 = !DIEnumerator(name: "VC1_CODE_SLICE", value: 267)
!957 = !DIEnumerator(name: "VC1_CODE_FIELD", value: 268)
!958 = !DIEnumerator(name: "VC1_CODE_FRAME", value: 269)
!959 = !DIEnumerator(name: "VC1_CODE_ENTRYPOINT", value: 270)
!960 = !DIEnumerator(name: "VC1_CODE_SEQHDR", value: 271)
!961 = !{!962, !971, !970, !972, !974}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64, align: 64)
!963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !964)
!964 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "unaligned_32", file: !965, line: 221, size: 32, align: 8, elements: !966)
!965 = !DIFile(filename: "./libavutil/intreadwrite.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!966 = !{!967}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !964, file: !965, line: 221, baseType: !968, size: 32, align: 32)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !969, line: 51, baseType: !970)
!969 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!970 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!971 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !969, line: 48, baseType: !973)
!973 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!975 = !{!976, !2644, !2645, !2646, !2647}
!976 = distinct !DIGlobalVariable(name: "ff_vc1_decoder", scope: !0, file: !977, line: 1191, type: !978, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_vc1_decoder)
!977 = !DIFile(filename: "libavcodec/vc1dec.c", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodec", file: !57, line: 3610, baseType: !979)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodec", file: !57, line: 3468, size: 1984, align: 64, elements: !980)
!980 = !{!981, !985, !986, !987, !988, !989, !998, !1001, !1004, !1007, !1012, !1013, !1088, !1096, !1097, !1098, !1100, !2546, !2552, !2560, !2564, !2565, !2602, !2606, !2610, !2611, !2615, !2619, !2620, !2624, !2625, !2626}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !979, file: !57, line: 3475, baseType: !982, size: 64, align: 64)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64, align: 64)
!983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!984 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !979, file: !57, line: 3480, baseType: !982, size: 64, align: 64, offset: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !979, file: !57, line: 3481, baseType: !46, size: 32, align: 32, offset: 128)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !979, file: !57, line: 3482, baseType: !56, size: 32, align: 32, offset: 160)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !979, file: !57, line: 3487, baseType: !971, size: 32, align: 32, offset: 192)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "supported_framerates", scope: !979, file: !57, line: 3488, baseType: !990, size: 64, align: 64, offset: 256)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64, align: 64)
!991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !992)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVRational", file: !993, line: 61, baseType: !994)
!993 = !DIFile(filename: "./libavutil/rational.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVRational", file: !993, line: 58, size: 64, align: 32, elements: !995)
!995 = !{!996, !997}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !994, file: !993, line: 59, baseType: !971, size: 32, align: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !994, file: !993, line: 60, baseType: !971, size: 32, align: 32, offset: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmts", scope: !979, file: !57, line: 3489, baseType: !999, size: 64, align: 64, offset: 320)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64, align: 64)
!1000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "supported_samplerates", scope: !979, file: !57, line: 3490, baseType: !1002, size: 64, align: 64, offset: 384)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64, align: 64)
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !971)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmts", scope: !979, file: !57, line: 3491, baseType: !1005, size: 64, align: 64, offset: 448)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64, align: 64)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layouts", scope: !979, file: !57, line: 3492, baseType: !1008, size: 64, align: 64, offset: 512)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64, align: 64)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !969, line: 55, baseType: !1011)
!1011 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "max_lowres", scope: !979, file: !57, line: 3493, baseType: !972, size: 8, align: 8, offset: 576)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !979, file: !57, line: 3494, baseType: !1014, size: 64, align: 64, offset: 640)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64, align: 64)
!1015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1016)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClass", file: !26, line: 143, baseType: !1017)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVClass", file: !26, line: 67, size: 640, align: 64, elements: !1018)
!1018 = !{!1019, !1020, !1024, !1047, !1048, !1049, !1050, !1054, !1060, !1062, !1066}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "class_name", scope: !1017, file: !26, line: 72, baseType: !982, size: 64, align: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "item_name", scope: !1017, file: !26, line: 78, baseType: !1021, size: 64, align: 64, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64, align: 64)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!982, !974}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "option", scope: !1017, file: !26, line: 85, baseType: !1025, size: 64, align: 64, offset: 128)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64, align: 64)
!1026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1027)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOption", file: !4, line: 246, size: 512, align: 64, elements: !1028)
!1028 = !{!1029, !1030, !1031, !1032, !1033, !1043, !1044, !1045, !1046}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1027, file: !4, line: 247, baseType: !982, size: 64, align: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !1027, file: !4, line: 253, baseType: !982, size: 64, align: 64, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1027, file: !4, line: 259, baseType: !971, size: 32, align: 32, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1027, file: !4, line: 260, baseType: !3, size: 32, align: 32, offset: 160)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "default_val", scope: !1027, file: !4, line: 271, baseType: !1034, size: 64, align: 64, offset: 192)
!1034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1027, file: !4, line: 265, size: 64, align: 64, elements: !1035)
!1035 = !{!1036, !1039, !1041, !1042}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "i64", scope: !1034, file: !4, line: 266, baseType: !1037, size: 64, align: 64)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !969, line: 40, baseType: !1038)
!1038 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !1034, file: !4, line: 267, baseType: !1040, size: 64, align: 64)
!1040 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1034, file: !4, line: 268, baseType: !982, size: 64, align: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1034, file: !4, line: 270, baseType: !992, size: 64, align: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1027, file: !4, line: 272, baseType: !1040, size: 64, align: 64, offset: 256)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1027, file: !4, line: 273, baseType: !1040, size: 64, align: 64, offset: 320)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1027, file: !4, line: 275, baseType: !971, size: 32, align: 32, offset: 384)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1027, file: !4, line: 300, baseType: !982, size: 64, align: 64, offset: 448)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1017, file: !26, line: 93, baseType: !971, size: 32, align: 32, offset: 192)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset_offset", scope: !1017, file: !26, line: 99, baseType: !971, size: 32, align: 32, offset: 224)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "parent_log_context_offset", scope: !1017, file: !26, line: 108, baseType: !971, size: 32, align: 32, offset: 256)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "child_next", scope: !1017, file: !26, line: 113, baseType: !1051, size: 64, align: 64, offset: 320)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64, align: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!974, !974, !974}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "child_class_next", scope: !1017, file: !26, line: 123, baseType: !1055, size: 64, align: 64, offset: 384)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64, align: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!1058, !1058}
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64, align: 64)
!1059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !1017, file: !26, line: 130, baseType: !1061, size: 32, align: 32, offset: 448)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVClassCategory", file: !26, line: 48, baseType: !25)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "get_category", scope: !1017, file: !26, line: 136, baseType: !1063, size: 64, align: 64, offset: 512)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64, align: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!1061, !974}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "query_ranges", scope: !1017, file: !26, line: 142, baseType: !1067, size: 64, align: 64, offset: 576)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64, align: 64)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{!971, !1070, !974, !982, !971}
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64, align: 64)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64, align: 64)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRanges", file: !4, line: 329, size: 128, align: 64, elements: !1073)
!1073 = !{!1074, !1086, !1087}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1072, file: !4, line: 360, baseType: !1075, size: 64, align: 64)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64, align: 64)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64, align: 64)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVOptionRange", file: !4, line: 324, baseType: !1078)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVOptionRange", file: !4, line: 306, size: 384, align: 64, elements: !1079)
!1079 = !{!1080, !1081, !1082, !1083, !1084, !1085}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1078, file: !4, line: 307, baseType: !982, size: 64, align: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "value_min", scope: !1078, file: !4, line: 313, baseType: !1040, size: 64, align: 64, offset: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "value_max", scope: !1078, file: !4, line: 313, baseType: !1040, size: 64, align: 64, offset: 128)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "component_min", scope: !1078, file: !4, line: 318, baseType: !1040, size: 64, align: 64, offset: 192)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "component_max", scope: !1078, file: !4, line: 318, baseType: !1040, size: 64, align: 64, offset: 256)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "is_range", scope: !1078, file: !4, line: 323, baseType: !971, size: 32, align: 32, offset: 320)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "nb_ranges", scope: !1072, file: !4, line: 364, baseType: !971, size: 32, align: 32, offset: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "nb_components", scope: !1072, file: !4, line: 368, baseType: !971, size: 32, align: 32, offset: 96)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !979, file: !57, line: 3495, baseType: !1089, size: 64, align: 64, offset: 704)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64, align: 64)
!1090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1091)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVProfile", file: !57, line: 3404, baseType: !1092)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVProfile", file: !57, line: 3401, size: 128, align: 64, elements: !1093)
!1093 = !{!1094, !1095}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1092, file: !57, line: 3402, baseType: !971, size: 32, align: 32)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1092, file: !57, line: 3403, baseType: !982, size: 64, align: 64, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "wrapper_name", scope: !979, file: !57, line: 3507, baseType: !982, size: 64, align: 64, offset: 768)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !979, file: !57, line: 3516, baseType: !971, size: 32, align: 32, offset: 832)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !979, file: !57, line: 3517, baseType: !1099, size: 64, align: 64, offset: 896)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread_copy", scope: !979, file: !57, line: 3527, baseType: !1101, size: 64, align: 64, offset: 960)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64, align: 64)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!971, !1104}
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64, align: 64)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecContext", file: !57, line: 3360, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecContext", file: !57, line: 1556, size: 8448, align: 64, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1111, !1114, !1115, !1116, !1117, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1397, !1401, !1402, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2484, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1106, file: !57, line: 1561, baseType: !1014, size: 64, align: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "log_level_offset", scope: !1106, file: !57, line: 1562, baseType: !971, size: 32, align: 32, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1106, file: !57, line: 1564, baseType: !46, size: 32, align: 32, offset: 96)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1106, file: !57, line: 1565, baseType: !1112, size: 64, align: 64, offset: 128)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64, align: 64)
!1113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !979)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1106, file: !57, line: 1566, baseType: !56, size: 32, align: 32, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1106, file: !57, line: 1581, baseType: !970, size: 32, align: 32, offset: 224)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1106, file: !57, line: 1583, baseType: !974, size: 64, align: 64, offset: 256)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1106, file: !57, line: 1591, baseType: !1118, size: 64, align: 64, offset: 320)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64, align: 64)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecInternal", file: !1120, line: 129, size: 1664, align: 64, elements: !1121)
!1120 = !DIFile(filename: "libavcodec/internal.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1121 = !{!1122, !1123, !1124, !1125, !1223, !1244, !1245, !1274, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1119, file: !1120, line: 136, baseType: !971, size: 32, align: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_progress", scope: !1119, file: !1120, line: 151, baseType: !971, size: 32, align: 32, offset: 32)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "last_audio_frame", scope: !1119, file: !1120, line: 157, baseType: !971, size: 32, align: 32, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "to_free", scope: !1119, file: !1120, line: 159, baseType: !1126, size: 64, align: 64, offset: 128)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64, align: 64)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrame", file: !780, line: 646, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrame", file: !780, line: 268, size: 4288, align: 64, elements: !1129)
!1129 = !{!1130, !1135, !1137, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1175, !1177, !1178, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1211, !1212, !1213, !1214, !1215, !1216, !1219, !1220, !1221, !1222}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1128, file: !780, line: 282, baseType: !1131, size: 512, align: 64)
!1131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1132, size: 512, align: 64, elements: !1133)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64, align: 64)
!1133 = !{!1134}
!1134 = !DISubrange(count: 8)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1128, file: !780, line: 299, baseType: !1136, size: 256, align: 32, offset: 512)
!1136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 256, align: 32, elements: !1133)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "extended_data", scope: !1128, file: !780, line: 315, baseType: !1138, size: 64, align: 64, offset: 768)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1128, file: !780, line: 326, baseType: !971, size: 32, align: 32, offset: 832)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1128, file: !780, line: 326, baseType: !971, size: 32, align: 32, offset: 864)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "nb_samples", scope: !1128, file: !780, line: 334, baseType: !971, size: 32, align: 32, offset: 896)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1128, file: !780, line: 341, baseType: !971, size: 32, align: 32, offset: 928)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "key_frame", scope: !1128, file: !780, line: 346, baseType: !971, size: 32, align: 32, offset: 960)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1128, file: !780, line: 351, baseType: !769, size: 32, align: 32, offset: 992)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1128, file: !780, line: 356, baseType: !992, size: 64, align: 32, offset: 1024)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1128, file: !780, line: 361, baseType: !1037, size: 64, align: 64, offset: 1088)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pts", scope: !1128, file: !780, line: 369, baseType: !1037, size: 64, align: 64, offset: 1152)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_dts", scope: !1128, file: !780, line: 377, baseType: !1037, size: 64, align: 64, offset: 1216)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1128, file: !780, line: 382, baseType: !971, size: 32, align: 32, offset: 1280)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "display_picture_number", scope: !1128, file: !780, line: 386, baseType: !971, size: 32, align: 32, offset: 1312)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1128, file: !780, line: 391, baseType: !971, size: 32, align: 32, offset: 1344)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1128, file: !780, line: 396, baseType: !974, size: 64, align: 64, offset: 1408)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1128, file: !780, line: 403, baseType: !1154, size: 512, align: 64, offset: 1472)
!1154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 512, align: 64, elements: !1133)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_pict", scope: !1128, file: !780, line: 410, baseType: !971, size: 32, align: 32, offset: 1984)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_frame", scope: !1128, file: !780, line: 415, baseType: !971, size: 32, align: 32, offset: 2016)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1128, file: !780, line: 420, baseType: !971, size: 32, align: 32, offset: 2048)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "palette_has_changed", scope: !1128, file: !780, line: 425, baseType: !971, size: 32, align: 32, offset: 2080)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1128, file: !780, line: 435, baseType: !1037, size: 64, align: 64, offset: 2112)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1128, file: !780, line: 440, baseType: !971, size: 32, align: 32, offset: 2176)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1128, file: !780, line: 445, baseType: !1010, size: 64, align: 64, offset: 2240)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1128, file: !780, line: 459, baseType: !1163, size: 512, align: 64, offset: 2304)
!1163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1164, size: 512, align: 64, elements: !1133)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64, align: 64)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferRef", file: !1166, line: 94, baseType: !1167)
!1166 = !DIFile(filename: "./libavutil/buffer.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferRef", file: !1166, line: 81, size: 192, align: 64, elements: !1168)
!1168 = !{!1169, !1173, !1174}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1167, file: !1166, line: 82, baseType: !1170, size: 64, align: 64)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64, align: 64)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBuffer", file: !1166, line: 73, baseType: !1172)
!1172 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBuffer", file: !1166, line: 73, flags: DIFlagFwdDecl)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1167, file: !1166, line: 89, baseType: !1132, size: 64, align: 64, offset: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1167, file: !1166, line: 93, baseType: !971, size: 32, align: 32, offset: 128)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "extended_buf", scope: !1128, file: !780, line: 473, baseType: !1176, size: 64, align: 64, offset: 2816)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "nb_extended_buf", scope: !1128, file: !780, line: 477, baseType: !971, size: 32, align: 32, offset: 2880)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1128, file: !780, line: 479, baseType: !1179, size: 64, align: 64, offset: 2944)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64, align: 64)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVFrameSideData", file: !780, line: 207, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVFrameSideData", file: !780, line: 201, size: 320, align: 64, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187, !1192}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1182, file: !780, line: 202, baseType: !779, size: 32, align: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1182, file: !780, line: 203, baseType: !1132, size: 64, align: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1182, file: !780, line: 204, baseType: !971, size: 32, align: 32, offset: 128)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1182, file: !780, line: 205, baseType: !1188, size: 64, align: 64, offset: 192)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64, align: 64)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVDictionary", file: !1190, line: 86, baseType: !1191)
!1190 = !DIFile(filename: "./libavutil/dict.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1191 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVDictionary", file: !1190, line: 86, flags: DIFlagFwdDecl)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1182, file: !780, line: 206, baseType: !1164, size: 64, align: 64, offset: 256)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "nb_side_data", scope: !1128, file: !780, line: 480, baseType: !971, size: 32, align: 32, offset: 3008)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1128, file: !780, line: 505, baseType: !971, size: 32, align: 32, offset: 3040)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1128, file: !780, line: 512, baseType: !803, size: 32, align: 32, offset: 3072)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1128, file: !780, line: 514, baseType: !809, size: 32, align: 32, offset: 3104)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1128, file: !780, line: 516, baseType: !827, size: 32, align: 32, offset: 3136)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1128, file: !780, line: 523, baseType: !851, size: 32, align: 32, offset: 3168)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1128, file: !780, line: 525, baseType: !870, size: 32, align: 32, offset: 3200)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "best_effort_timestamp", scope: !1128, file: !780, line: 532, baseType: !1037, size: 64, align: 64, offset: 3264)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_pos", scope: !1128, file: !780, line: 539, baseType: !1037, size: 64, align: 64, offset: 3328)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_duration", scope: !1128, file: !780, line: 547, baseType: !1037, size: 64, align: 64, offset: 3392)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !1128, file: !780, line: 554, baseType: !1188, size: 64, align: 64, offset: 3456)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "decode_error_flags", scope: !1128, file: !780, line: 563, baseType: !971, size: 32, align: 32, offset: 3520)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1128, file: !780, line: 572, baseType: !971, size: 32, align: 32, offset: 3552)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_size", scope: !1128, file: !780, line: 581, baseType: !971, size: 32, align: 32, offset: 3584)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1128, file: !780, line: 588, baseType: !1208, size: 64, align: 64, offset: 3648)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64, align: 64)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !969, line: 36, baseType: !1210)
!1210 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "qstride", scope: !1128, file: !780, line: 593, baseType: !971, size: 32, align: 32, offset: 3712)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_type", scope: !1128, file: !780, line: 596, baseType: !971, size: 32, align: 32, offset: 3744)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "qp_table_buf", scope: !1128, file: !780, line: 599, baseType: !1164, size: 64, align: 64, offset: 3776)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1128, file: !780, line: 605, baseType: !1164, size: 64, align: 64, offset: 3840)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "opaque_ref", scope: !1128, file: !780, line: 616, baseType: !1164, size: 64, align: 64, offset: 3904)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "crop_top", scope: !1128, file: !780, line: 626, baseType: !1217, size: 64, align: 64, offset: 3968)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1218, line: 216, baseType: !1011)
!1218 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "crop_bottom", scope: !1128, file: !780, line: 627, baseType: !1217, size: 64, align: 64, offset: 4032)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "crop_left", scope: !1128, file: !780, line: 628, baseType: !1217, size: 64, align: 64, offset: 4096)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "crop_right", scope: !1128, file: !780, line: 629, baseType: !1217, size: 64, align: 64, offset: 4160)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "private_ref", scope: !1128, file: !780, line: 645, baseType: !1164, size: 64, align: 64, offset: 4224)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1119, file: !1120, line: 161, baseType: !1224, size: 64, align: 64, offset: 192)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64, align: 64)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "FramePool", file: !1120, line: 117, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FramePool", file: !1120, line: 100, size: 832, align: 64, elements: !1227)
!1227 = !{!1228, !1235, !1236, !1237, !1238, !1239, !1241, !1242, !1243}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "pools", scope: !1226, file: !1120, line: 105, baseType: !1229, size: 256, align: 64)
!1229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1230, size: 256, align: 64, elements: !1233)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64, align: 64)
!1231 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBufferPool", file: !1166, line: 238, baseType: !1232)
!1232 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBufferPool", file: !1166, line: 238, flags: DIFlagFwdDecl)
!1233 = !{!1234}
!1234 = !DISubrange(count: 4)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1226, file: !1120, line: 110, baseType: !971, size: 32, align: 32, offset: 256)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1226, file: !1120, line: 111, baseType: !971, size: 32, align: 32, offset: 288)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1226, file: !1120, line: 111, baseType: !971, size: 32, align: 32, offset: 320)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "stride_align", scope: !1226, file: !1120, line: 112, baseType: !1136, size: 256, align: 32, offset: 352)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1226, file: !1120, line: 113, baseType: !1240, size: 128, align: 32, offset: 608)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 128, align: 32, elements: !1233)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1226, file: !1120, line: 114, baseType: !971, size: 32, align: 32, offset: 736)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1226, file: !1120, line: 115, baseType: !971, size: 32, align: 32, offset: 768)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !1226, file: !1120, line: 116, baseType: !971, size: 32, align: 32, offset: 800)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ctx", scope: !1119, file: !1120, line: 163, baseType: !974, size: 64, align: 64, offset: 256)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1119, file: !1120, line: 165, baseType: !1246, size: 128, align: 64, offset: 320)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeSimpleContext", file: !1120, line: 122, baseType: !1247)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeSimpleContext", file: !1120, line: 119, size: 128, align: 64, elements: !1248)
!1248 = !{!1249, !1273}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "in_pkt", scope: !1247, file: !1120, line: 120, baseType: !1250, size: 64, align: 64)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64, align: 64)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacket", file: !57, line: 1499, baseType: !1252)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacket", file: !57, line: 1445, size: 704, align: 64, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1269, !1270, !1271, !1272}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1252, file: !57, line: 1451, baseType: !1164, size: 64, align: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !1252, file: !57, line: 1461, baseType: !1037, size: 64, align: 64, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "dts", scope: !1252, file: !57, line: 1467, baseType: !1037, size: 64, align: 64, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1252, file: !57, line: 1468, baseType: !1132, size: 64, align: 64, offset: 192)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1252, file: !57, line: 1469, baseType: !971, size: 32, align: 32, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "stream_index", scope: !1252, file: !57, line: 1470, baseType: !971, size: 32, align: 32, offset: 288)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1252, file: !57, line: 1474, baseType: !971, size: 32, align: 32, offset: 320)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "side_data", scope: !1252, file: !57, line: 1479, baseType: !1262, size: 64, align: 64, offset: 384)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64, align: 64)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPacketSideData", file: !57, line: 1415, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPacketSideData", file: !57, line: 1411, size: 128, align: 64, elements: !1265)
!1265 = !{!1266, !1267, !1268}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1264, file: !57, line: 1412, baseType: !1132, size: 64, align: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1264, file: !57, line: 1413, baseType: !971, size: 32, align: 32, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1264, file: !57, line: 1414, baseType: !739, size: 32, align: 32, offset: 96)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_elems", scope: !1252, file: !57, line: 1480, baseType: !971, size: 32, align: 32, offset: 448)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1252, file: !57, line: 1486, baseType: !1037, size: 64, align: 64, offset: 512)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1252, file: !57, line: 1488, baseType: !1037, size: 64, align: 64, offset: 576)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "convergence_duration", scope: !1252, file: !57, line: 1497, baseType: !1037, size: 64, align: 64, offset: 640)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "out_frame", scope: !1247, file: !1120, line: 121, baseType: !1126, size: 64, align: 64, offset: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1119, file: !1120, line: 166, baseType: !1275, size: 128, align: 64, offset: 448)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecodeFilterContext", file: !1120, line: 127, baseType: !1276)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecodeFilterContext", file: !1120, line: 124, size: 128, align: 64, elements: !1277)
!1277 = !{!1278, !1351}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !1276, file: !1120, line: 125, baseType: !1279, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64, align: 64)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64, align: 64)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFContext", file: !57, line: 5794, baseType: !1282)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFContext", file: !57, line: 5747, size: 512, align: 64, elements: !1283)
!1283 = !{!1284, !1285, !1309, !1313, !1314, !1348, !1349, !1350}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "av_class", scope: !1282, file: !57, line: 5751, baseType: !1014, size: 64, align: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1282, file: !57, line: 5756, baseType: !1286, size: 64, align: 64, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64, align: 64)
!1287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1288)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVBitStreamFilter", file: !57, line: 5796, size: 512, align: 64, elements: !1289)
!1289 = !{!1290, !1291, !1294, !1295, !1296, !1300, !1304, !1308}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1288, file: !57, line: 5797, baseType: !982, size: 64, align: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "codec_ids", scope: !1288, file: !57, line: 5804, baseType: !1292, size: 64, align: 64, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64, align: 64)
!1293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !56)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "priv_class", scope: !1288, file: !57, line: 5815, baseType: !1014, size: 64, align: 64, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1288, file: !57, line: 5825, baseType: !971, size: 32, align: 32, offset: 192)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1288, file: !57, line: 5826, baseType: !1297, size: 64, align: 64, offset: 256)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64, align: 64)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{!971, !1280}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1288, file: !57, line: 5827, baseType: !1301, size: 64, align: 64, offset: 320)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64, align: 64)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!971, !1280, !1250}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1288, file: !57, line: 5828, baseType: !1305, size: 64, align: 64, offset: 384)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64, align: 64)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{null, !1280}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1288, file: !57, line: 5829, baseType: !1305, size: 64, align: 64, offset: 448)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1282, file: !57, line: 5762, baseType: !1310, size: 64, align: 64, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64, align: 64)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVBSFInternal", file: !57, line: 5735, baseType: !1312)
!1312 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVBSFInternal", file: !57, line: 5735, flags: DIFlagFwdDecl)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data", scope: !1282, file: !57, line: 5768, baseType: !974, size: 64, align: 64, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "par_in", scope: !1282, file: !57, line: 5775, baseType: !1315, size: 64, align: 64, offset: 256)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64, align: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecParameters", file: !57, line: 4085, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecParameters", file: !57, line: 3936, size: 1152, align: 64, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "codec_type", scope: !1317, file: !57, line: 3940, baseType: !46, size: 32, align: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1317, file: !57, line: 3944, baseType: !56, size: 32, align: 32, offset: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1317, file: !57, line: 3948, baseType: !968, size: 32, align: 32, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1317, file: !57, line: 3958, baseType: !1132, size: 64, align: 64, offset: 128)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1317, file: !57, line: 3962, baseType: !971, size: 32, align: 32, offset: 192)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1317, file: !57, line: 3968, baseType: !971, size: 32, align: 32, offset: 224)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1317, file: !57, line: 3973, baseType: !1037, size: 64, align: 64, offset: 256)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1317, file: !57, line: 3986, baseType: !971, size: 32, align: 32, offset: 320)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1317, file: !57, line: 3999, baseType: !971, size: 32, align: 32, offset: 352)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1317, file: !57, line: 4004, baseType: !971, size: 32, align: 32, offset: 384)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1317, file: !57, line: 4005, baseType: !971, size: 32, align: 32, offset: 416)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1317, file: !57, line: 4010, baseType: !971, size: 32, align: 32, offset: 448)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1317, file: !57, line: 4011, baseType: !971, size: 32, align: 32, offset: 480)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1317, file: !57, line: 4020, baseType: !992, size: 64, align: 32, offset: 512)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1317, file: !57, line: 4025, baseType: !894, size: 32, align: 32, offset: 576)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1317, file: !57, line: 4030, baseType: !803, size: 32, align: 32, offset: 608)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1317, file: !57, line: 4031, baseType: !809, size: 32, align: 32, offset: 640)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1317, file: !57, line: 4032, baseType: !827, size: 32, align: 32, offset: 672)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "color_space", scope: !1317, file: !57, line: 4033, baseType: !851, size: 32, align: 32, offset: 704)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_location", scope: !1317, file: !57, line: 4034, baseType: !870, size: 32, align: 32, offset: 736)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "video_delay", scope: !1317, file: !57, line: 4039, baseType: !971, size: 32, align: 32, offset: 768)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1317, file: !57, line: 4046, baseType: !1010, size: 64, align: 64, offset: 832)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1317, file: !57, line: 4050, baseType: !971, size: 32, align: 32, offset: 896)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1317, file: !57, line: 4054, baseType: !971, size: 32, align: 32, offset: 928)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1317, file: !57, line: 4061, baseType: !971, size: 32, align: 32, offset: 960)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1317, file: !57, line: 4065, baseType: !971, size: 32, align: 32, offset: 992)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1317, file: !57, line: 4073, baseType: !971, size: 32, align: 32, offset: 1024)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1317, file: !57, line: 4080, baseType: !971, size: 32, align: 32, offset: 1056)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1317, file: !57, line: 4084, baseType: !971, size: 32, align: 32, offset: 1088)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "par_out", scope: !1282, file: !57, line: 5781, baseType: !1315, size: 64, align: 64, offset: 320)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_in", scope: !1282, file: !57, line: 5787, baseType: !992, size: 64, align: 32, offset: 384)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "time_base_out", scope: !1282, file: !57, line: 5793, baseType: !992, size: 64, align: 32, offset: 448)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "nb_bsfs", scope: !1276, file: !1120, line: 126, baseType: !971, size: 32, align: 32, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "last_pkt_props", scope: !1119, file: !1120, line: 172, baseType: !1250, size: 64, align: 64, offset: 576)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer", scope: !1119, file: !1120, line: 177, baseType: !1132, size: 64, align: 64, offset: 640)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "byte_buffer_size", scope: !1119, file: !1120, line: 178, baseType: !970, size: 32, align: 32, offset: 704)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "frame_thread_encoder", scope: !1119, file: !1120, line: 180, baseType: !974, size: 64, align: 64, offset: 768)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples", scope: !1119, file: !1120, line: 185, baseType: !971, size: 32, align: 32, offset: 832)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_data", scope: !1119, file: !1120, line: 190, baseType: !974, size: 64, align: 64, offset: 896)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "draining", scope: !1119, file: !1120, line: 195, baseType: !971, size: 32, align: 32, offset: 960)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt", scope: !1119, file: !1120, line: 200, baseType: !1250, size: 64, align: 64, offset: 1024)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_pkt_valid", scope: !1119, file: !1120, line: 201, baseType: !971, size: 32, align: 32, offset: 1088)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_frame", scope: !1119, file: !1120, line: 202, baseType: !1126, size: 64, align: 64, offset: 1152)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "draining_done", scope: !1119, file: !1120, line: 203, baseType: !971, size: 32, align: 32, offset: 1216)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode", scope: !1119, file: !1120, line: 205, baseType: !971, size: 32, align: 32, offset: 1248)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_warned", scope: !1119, file: !1120, line: 206, baseType: !971, size: 32, align: 32, offset: 1280)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_consumed", scope: !1119, file: !1120, line: 209, baseType: !1217, size: 64, align: 64, offset: 1344)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_partial_size", scope: !1119, file: !1120, line: 212, baseType: !1217, size: 64, align: 64, offset: 1408)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "compat_decode_frame", scope: !1119, file: !1120, line: 213, baseType: !1126, size: 64, align: 64, offset: 1472)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "showed_multi_packet_warning", scope: !1119, file: !1120, line: 215, baseType: !971, size: 32, align: 32, offset: 1536)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "skip_samples_multiplier", scope: !1119, file: !1120, line: 217, baseType: !971, size: 32, align: 32, offset: 1568)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "nb_draining_errors", scope: !1119, file: !1120, line: 220, baseType: !971, size: 32, align: 32, offset: 1600)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !1106, file: !57, line: 1598, baseType: !974, size: 64, align: 64, offset: 384)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1106, file: !57, line: 1606, baseType: !1037, size: 64, align: 64, offset: 448)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_tolerance", scope: !1106, file: !57, line: 1614, baseType: !971, size: 32, align: 32, offset: 512)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "global_quality", scope: !1106, file: !57, line: 1622, baseType: !971, size: 32, align: 32, offset: 544)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "compression_level", scope: !1106, file: !57, line: 1628, baseType: !971, size: 32, align: 32, offset: 576)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1106, file: !57, line: 1636, baseType: !971, size: 32, align: 32, offset: 608)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "flags2", scope: !1106, file: !57, line: 1643, baseType: !971, size: 32, align: 32, offset: 640)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1106, file: !57, line: 1657, baseType: !1132, size: 64, align: 64, offset: 704)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "extradata_size", scope: !1106, file: !57, line: 1658, baseType: !971, size: 32, align: 32, offset: 768)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1106, file: !57, line: 1679, baseType: !992, size: 64, align: 32, offset: 800)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_frame", scope: !1106, file: !57, line: 1688, baseType: !971, size: 32, align: 32, offset: 864)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !1106, file: !57, line: 1712, baseType: !971, size: 32, align: 32, offset: 896)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1106, file: !57, line: 1729, baseType: !971, size: 32, align: 32, offset: 928)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1106, file: !57, line: 1729, baseType: !971, size: 32, align: 32, offset: 960)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "coded_width", scope: !1106, file: !57, line: 1744, baseType: !971, size: 32, align: 32, offset: 992)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "coded_height", scope: !1106, file: !57, line: 1744, baseType: !971, size: 32, align: 32, offset: 1024)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1106, file: !57, line: 1751, baseType: !971, size: 32, align: 32, offset: 1056)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1106, file: !57, line: 1766, baseType: !516, size: 32, align: 32, offset: 1088)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "draw_horiz_band", scope: !1106, file: !57, line: 1791, baseType: !1390, size: 64, align: 64, offset: 1152)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64, align: 64)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{null, !1393, !1394, !1396, !971, !971, !971}
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64, align: 64)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64, align: 64)
!1395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1127)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64, align: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "get_format", scope: !1106, file: !57, line: 1808, baseType: !1398, size: 64, align: 64, offset: 1216)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64, align: 64)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!516, !1393, !999}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1106, file: !57, line: 1816, baseType: !971, size: 32, align: 32, offset: 1280)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_factor", scope: !1106, file: !57, line: 1825, baseType: !1403, size: 32, align: 32, offset: 1312)
!1403 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1106, file: !57, line: 1830, baseType: !971, size: 32, align: 32, offset: 1344)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "b_quant_offset", scope: !1106, file: !57, line: 1838, baseType: !1403, size: 32, align: 32, offset: 1376)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "has_b_frames", scope: !1106, file: !57, line: 1846, baseType: !971, size: 32, align: 32, offset: 1408)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1106, file: !57, line: 1851, baseType: !971, size: 32, align: 32, offset: 1440)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_factor", scope: !1106, file: !57, line: 1861, baseType: !1403, size: 32, align: 32, offset: 1472)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "i_quant_offset", scope: !1106, file: !57, line: 1868, baseType: !1403, size: 32, align: 32, offset: 1504)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "lumi_masking", scope: !1106, file: !57, line: 1875, baseType: !1403, size: 32, align: 32, offset: 1536)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "temporal_cplx_masking", scope: !1106, file: !57, line: 1882, baseType: !1403, size: 32, align: 32, offset: 1568)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_cplx_masking", scope: !1106, file: !57, line: 1889, baseType: !1403, size: 32, align: 32, offset: 1600)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "p_masking", scope: !1106, file: !57, line: 1896, baseType: !1403, size: 32, align: 32, offset: 1632)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "dark_masking", scope: !1106, file: !57, line: 1903, baseType: !1403, size: 32, align: 32, offset: 1664)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "slice_count", scope: !1106, file: !57, line: 1910, baseType: !971, size: 32, align: 32, offset: 1696)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_method", scope: !1106, file: !57, line: 1915, baseType: !971, size: 32, align: 32, offset: 1728)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "slice_offset", scope: !1106, file: !57, line: 1926, baseType: !1396, size: 64, align: 64, offset: 1792)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "sample_aspect_ratio", scope: !1106, file: !57, line: 1935, baseType: !992, size: 64, align: 32, offset: 1856)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1106, file: !57, line: 1942, baseType: !971, size: 32, align: 32, offset: 1920)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1106, file: !57, line: 1948, baseType: !971, size: 32, align: 32, offset: 1952)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1106, file: !57, line: 1954, baseType: !971, size: 32, align: 32, offset: 1984)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1106, file: !57, line: 1960, baseType: !971, size: 32, align: 32, offset: 2016)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !1106, file: !57, line: 1984, baseType: !971, size: 32, align: 32, offset: 2048)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "last_predictor_count", scope: !1106, file: !57, line: 1991, baseType: !971, size: 32, align: 32, offset: 2080)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "pre_me", scope: !1106, file: !57, line: 1996, baseType: !971, size: 32, align: 32, offset: 2112)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1106, file: !57, line: 2004, baseType: !971, size: 32, align: 32, offset: 2144)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "pre_dia_size", scope: !1106, file: !57, line: 2011, baseType: !971, size: 32, align: 32, offset: 2176)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "me_subpel_quality", scope: !1106, file: !57, line: 2018, baseType: !971, size: 32, align: 32, offset: 2208)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "me_range", scope: !1106, file: !57, line: 2027, baseType: !971, size: 32, align: 32, offset: 2240)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "slice_flags", scope: !1106, file: !57, line: 2034, baseType: !971, size: 32, align: 32, offset: 2272)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "mb_decision", scope: !1106, file: !57, line: 2044, baseType: !971, size: 32, align: 32, offset: 2304)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1106, file: !57, line: 2054, baseType: !1433, size: 64, align: 64, offset: 2368)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64, align: 64)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !969, line: 49, baseType: !1435)
!1435 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1106, file: !57, line: 2061, baseType: !1433, size: 64, align: 64, offset: 2432)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1106, file: !57, line: 2066, baseType: !971, size: 32, align: 32, offset: 2496)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1106, file: !57, line: 2070, baseType: !971, size: 32, align: 32, offset: 2528)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1106, file: !57, line: 2078, baseType: !971, size: 32, align: 32, offset: 2560)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "skip_top", scope: !1106, file: !57, line: 2085, baseType: !971, size: 32, align: 32, offset: 2592)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bottom", scope: !1106, file: !57, line: 2092, baseType: !971, size: 32, align: 32, offset: 2624)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmin", scope: !1106, file: !57, line: 2099, baseType: !971, size: 32, align: 32, offset: 2656)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "mb_lmax", scope: !1106, file: !57, line: 2106, baseType: !971, size: 32, align: 32, offset: 2688)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1106, file: !57, line: 2113, baseType: !971, size: 32, align: 32, offset: 2720)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "bidir_refine", scope: !1106, file: !57, line: 2120, baseType: !971, size: 32, align: 32, offset: 2752)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1106, file: !57, line: 2125, baseType: !971, size: 32, align: 32, offset: 2784)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "keyint_min", scope: !1106, file: !57, line: 2133, baseType: !971, size: 32, align: 32, offset: 2816)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1106, file: !57, line: 2140, baseType: !971, size: 32, align: 32, offset: 2848)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "chromaoffset", scope: !1106, file: !57, line: 2145, baseType: !971, size: 32, align: 32, offset: 2880)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "mv0_threshold", scope: !1106, file: !57, line: 2153, baseType: !971, size: 32, align: 32, offset: 2912)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1106, file: !57, line: 2158, baseType: !971, size: 32, align: 32, offset: 2944)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "color_primaries", scope: !1106, file: !57, line: 2166, baseType: !809, size: 32, align: 32, offset: 2976)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "color_trc", scope: !1106, file: !57, line: 2173, baseType: !827, size: 32, align: 32, offset: 3008)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1106, file: !57, line: 2180, baseType: !851, size: 32, align: 32, offset: 3040)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !1106, file: !57, line: 2187, baseType: !803, size: 32, align: 32, offset: 3072)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_sample_location", scope: !1106, file: !57, line: 2194, baseType: !870, size: 32, align: 32, offset: 3104)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "slices", scope: !1106, file: !57, line: 2203, baseType: !971, size: 32, align: 32, offset: 3136)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "field_order", scope: !1106, file: !57, line: 2209, baseType: !894, size: 32, align: 32, offset: 3168)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "sample_rate", scope: !1106, file: !57, line: 2212, baseType: !971, size: 32, align: 32, offset: 3200)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1106, file: !57, line: 2213, baseType: !971, size: 32, align: 32, offset: 3232)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "sample_fmt", scope: !1106, file: !57, line: 2220, baseType: !716, size: 32, align: 32, offset: 3264)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !1106, file: !57, line: 2232, baseType: !971, size: 32, align: 32, offset: 3296)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "frame_number", scope: !1106, file: !57, line: 2243, baseType: !971, size: 32, align: 32, offset: 3328)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "block_align", scope: !1106, file: !57, line: 2249, baseType: !971, size: 32, align: 32, offset: 3360)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "cutoff", scope: !1106, file: !57, line: 2256, baseType: !971, size: 32, align: 32, offset: 3392)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "channel_layout", scope: !1106, file: !57, line: 2263, baseType: !1010, size: 64, align: 64, offset: 3456)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "request_channel_layout", scope: !1106, file: !57, line: 2270, baseType: !1010, size: 64, align: 64, offset: 3520)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "audio_service_type", scope: !1106, file: !57, line: 2277, baseType: !902, size: 32, align: 32, offset: 3584)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "request_sample_fmt", scope: !1106, file: !57, line: 2285, baseType: !716, size: 32, align: 32, offset: 3616)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "get_buffer2", scope: !1106, file: !57, line: 2367, baseType: !1471, size: 64, align: 64, offset: 3648)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64, align: 64)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!971, !1393, !1126, !971}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_frames", scope: !1106, file: !57, line: 2383, baseType: !971, size: 32, align: 32, offset: 3712)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "qcompress", scope: !1106, file: !57, line: 2386, baseType: !1403, size: 32, align: 32, offset: 3744)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "qblur", scope: !1106, file: !57, line: 2387, baseType: !1403, size: 32, align: 32, offset: 3776)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "qmin", scope: !1106, file: !57, line: 2394, baseType: !971, size: 32, align: 32, offset: 3808)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "qmax", scope: !1106, file: !57, line: 2401, baseType: !971, size: 32, align: 32, offset: 3840)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "max_qdiff", scope: !1106, file: !57, line: 2408, baseType: !971, size: 32, align: 32, offset: 3872)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1106, file: !57, line: 2415, baseType: !971, size: 32, align: 32, offset: 3904)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override_count", scope: !1106, file: !57, line: 2422, baseType: !971, size: 32, align: 32, offset: 3936)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "rc_override", scope: !1106, file: !57, line: 2423, baseType: !1483, size: 64, align: 64, offset: 3968)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64, align: 64)
!1484 = !DIDerivedType(tag: DW_TAG_typedef, name: "RcOverride", file: !57, line: 831, baseType: !1485)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RcOverride", file: !57, line: 826, size: 128, align: 32, elements: !1486)
!1486 = !{!1487, !1488, !1489, !1490}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1485, file: !57, line: 827, baseType: !971, size: 32, align: 32)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1485, file: !57, line: 828, baseType: !971, size: 32, align: 32, offset: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1485, file: !57, line: 829, baseType: !971, size: 32, align: 32, offset: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "quality_factor", scope: !1485, file: !57, line: 830, baseType: !1403, size: 32, align: 32, offset: 96)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1106, file: !57, line: 2430, baseType: !1037, size: 64, align: 64, offset: 4032)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1106, file: !57, line: 2437, baseType: !1037, size: 64, align: 64, offset: 4096)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_available_vbv_use", scope: !1106, file: !57, line: 2444, baseType: !1403, size: 32, align: 32, offset: 4160)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_vbv_overflow_use", scope: !1106, file: !57, line: 2451, baseType: !1403, size: 32, align: 32, offset: 4192)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_buffer_occupancy", scope: !1106, file: !57, line: 2458, baseType: !971, size: 32, align: 32, offset: 4224)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "coder_type", scope: !1106, file: !57, line: 2469, baseType: !971, size: 32, align: 32, offset: 4256)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "context_model", scope: !1106, file: !57, line: 2475, baseType: !971, size: 32, align: 32, offset: 4288)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1106, file: !57, line: 2481, baseType: !971, size: 32, align: 32, offset: 4320)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1106, file: !57, line: 2485, baseType: !971, size: 32, align: 32, offset: 4352)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1106, file: !57, line: 2489, baseType: !971, size: 32, align: 32, offset: 4384)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1106, file: !57, line: 2493, baseType: !971, size: 32, align: 32, offset: 4416)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "trellis", scope: !1106, file: !57, line: 2501, baseType: !971, size: 32, align: 32, offset: 4448)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "min_prediction_order", scope: !1106, file: !57, line: 2506, baseType: !971, size: 32, align: 32, offset: 4480)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "max_prediction_order", scope: !1106, file: !57, line: 2510, baseType: !971, size: 32, align: 32, offset: 4512)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1106, file: !57, line: 2514, baseType: !1037, size: 64, align: 64, offset: 4544)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_callback", scope: !1106, file: !57, line: 2528, baseType: !1507, size: 64, align: 64, offset: 4608)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64, align: 64)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{null, !1393, !974, !971, !971}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1106, file: !57, line: 2534, baseType: !971, size: 32, align: 32, offset: 4672)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1106, file: !57, line: 2545, baseType: !971, size: 32, align: 32, offset: 4704)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1106, file: !57, line: 2547, baseType: !971, size: 32, align: 32, offset: 4736)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1106, file: !57, line: 2549, baseType: !971, size: 32, align: 32, offset: 4768)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1106, file: !57, line: 2551, baseType: !971, size: 32, align: 32, offset: 4800)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1106, file: !57, line: 2553, baseType: !971, size: 32, align: 32, offset: 4832)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "p_count", scope: !1106, file: !57, line: 2555, baseType: !971, size: 32, align: 32, offset: 4864)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1106, file: !57, line: 2557, baseType: !971, size: 32, align: 32, offset: 4896)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1106, file: !57, line: 2559, baseType: !971, size: 32, align: 32, offset: 4928)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1106, file: !57, line: 2563, baseType: !971, size: 32, align: 32, offset: 4960)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "stats_out", scope: !1106, file: !57, line: 2571, baseType: !1521, size: 64, align: 64, offset: 4992)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64, align: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "stats_in", scope: !1106, file: !57, line: 2579, baseType: !1521, size: 64, align: 64, offset: 5056)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1106, file: !57, line: 2586, baseType: !971, size: 32, align: 32, offset: 5120)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1106, file: !57, line: 2615, baseType: !971, size: 32, align: 32, offset: 5152)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "error_concealment", scope: !1106, file: !57, line: 2627, baseType: !971, size: 32, align: 32, offset: 5184)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1106, file: !57, line: 2637, baseType: !971, size: 32, align: 32, offset: 5216)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "err_recognition", scope: !1106, file: !57, line: 2681, baseType: !971, size: 32, align: 32, offset: 5248)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_opaque", scope: !1106, file: !57, line: 2709, baseType: !1037, size: 64, align: 64, offset: 5312)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !1106, file: !57, line: 2716, baseType: !1530, size: 64, align: 64, offset: 5376)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64, align: 64)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1532)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVHWAccel", file: !57, line: 3636, size: 896, align: 64, elements: !1533)
!1533 = !{!1534, !1535, !1536, !1537, !1538, !1539, !1543, !1549, !1553, !1554, !1555, !1556, !2457, !2458, !2459, !2460, !2461}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1532, file: !57, line: 3642, baseType: !982, size: 64, align: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1532, file: !57, line: 3649, baseType: !46, size: 32, align: 32, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1532, file: !57, line: 3656, baseType: !56, size: 32, align: 32, offset: 96)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !1532, file: !57, line: 3663, baseType: !516, size: 32, align: 32, offset: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1532, file: !57, line: 3669, baseType: !971, size: 32, align: 32, offset: 160)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_frame", scope: !1532, file: !57, line: 3682, baseType: !1540, size: 64, align: 64, offset: 192)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64, align: 64)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!971, !1104, !1126}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1532, file: !57, line: 3698, baseType: !1544, size: 64, align: 64, offset: 256)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64, align: 64)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!971, !1104, !1547, !968}
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64, align: 64)
!1548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !972)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "decode_params", scope: !1532, file: !57, line: 3712, baseType: !1550, size: 64, align: 64, offset: 320)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64, align: 64)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!971, !1104, !971, !1547, !968}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "decode_slice", scope: !1532, file: !57, line: 3726, baseType: !1544, size: 64, align: 64, offset: 384)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1532, file: !57, line: 3737, baseType: !1101, size: 64, align: 64, offset: 448)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "frame_priv_data_size", scope: !1532, file: !57, line: 3746, baseType: !971, size: 32, align: 32, offset: 512)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1532, file: !57, line: 3757, baseType: !1557, size: 64, align: 64, offset: 576)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64, align: 64)
!1558 = !DISubroutineType(types: !1559)
!1559 = !{null, !1560}
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64, align: 64)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MpegEncContext", file: !1562, line: 81, size: 86208, align: 64, elements: !1563)
!1562 = !DIFile(filename: "libavcodec/mpegvideo.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1563 = !{!1564, !1566, !1567, !1568, !1569, !1573, !1574, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1621, !1622, !1677, !1679, !1680, !1681, !1682, !1683, !1694, !1695, !1696, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1712, !1714, !1716, !1717, !1718, !1719, !1720, !1721, !1726, !1728, !1729, !1730, !1731, !1732, !1733, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1760, !1761, !1762, !1763, !1779, !1786, !1798, !1814, !1836, !1876, !1889, !1916, !1931, !1945, !1958, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1979, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1992, !1994, !1995, !1996, !1997, !1998, !1999, !2002, !2004, !2006, !2007, !2010, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2077, !2078, !2080, !2081, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2103, !2104, !2105, !2108, !2109, !2110, !2111, !2113, !2115, !2116, !2117, !2118, !2119, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2201, !2202, !2203, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2332, !2333, !2334, !2335, !2339, !2340, !2344, !2348, !2352, !2353, !2358, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2373, !2374, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2392, !2393, !2394, !2444, !2445, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1561, file: !1562, line: 82, baseType: !1565, size: 64, align: 64)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64, align: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "y_dc_scale", scope: !1561, file: !1562, line: 84, baseType: !971, size: 32, align: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "c_dc_scale", scope: !1561, file: !1562, line: 84, baseType: !971, size: 32, align: 32, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "ac_pred", scope: !1561, file: !1562, line: 85, baseType: !971, size: 32, align: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "block_last_index", scope: !1561, file: !1562, line: 86, baseType: !1570, size: 384, align: 32, offset: 160)
!1570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 384, align: 32, elements: !1571)
!1571 = !{!1572}
!1572 = !DISubrange(count: 12)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "h263_aic", scope: !1561, file: !1562, line: 87, baseType: !971, size: 32, align: 32, offset: 544)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "inter_scantable", scope: !1561, file: !1562, line: 90, baseType: !1575, size: 1088, align: 64, offset: 576)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScanTable", file: !931, line: 35, baseType: !1576)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScanTable", file: !931, line: 31, size: 1088, align: 64, elements: !1577)
!1577 = !{!1578, !1579, !1583}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "scantable", scope: !1576, file: !931, line: 32, baseType: !1547, size: 64, align: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "permutated", scope: !1576, file: !931, line: 33, baseType: !1580, size: 512, align: 8, offset: 64)
!1580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 512, align: 8, elements: !1581)
!1581 = !{!1582}
!1582 = !DISubrange(count: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "raster_end", scope: !1576, file: !931, line: 34, baseType: !1580, size: 512, align: 8, offset: 576)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "intra_scantable", scope: !1561, file: !1562, line: 91, baseType: !1575, size: 1088, align: 64, offset: 1664)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "intra_h_scantable", scope: !1561, file: !1562, line: 92, baseType: !1575, size: 1088, align: 64, offset: 2752)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "intra_v_scantable", scope: !1561, file: !1562, line: 93, baseType: !1575, size: 1088, align: 64, offset: 3840)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !1561, file: !1562, line: 98, baseType: !1393, size: 64, align: 64, offset: 4928)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1561, file: !1562, line: 100, baseType: !971, size: 32, align: 32, offset: 4992)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1561, file: !1562, line: 100, baseType: !971, size: 32, align: 32, offset: 5024)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1561, file: !1562, line: 101, baseType: !971, size: 32, align: 32, offset: 5056)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "intra_only", scope: !1561, file: !1562, line: 102, baseType: !971, size: 32, align: 32, offset: 5088)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate", scope: !1561, file: !1562, line: 103, baseType: !1037, size: 64, align: 64, offset: 5120)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "out_format", scope: !1561, file: !1562, line: 104, baseType: !923, size: 32, align: 32, offset: 5184)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "h263_pred", scope: !1561, file: !1562, line: 105, baseType: !971, size: 32, align: 32, offset: 5216)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "pb_frame", scope: !1561, file: !1562, line: 106, baseType: !971, size: 32, align: 32, offset: 5248)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "h263_plus", scope: !1561, file: !1562, line: 109, baseType: !971, size: 32, align: 32, offset: 5280)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "h263_flv", scope: !1561, file: !1562, line: 110, baseType: !971, size: 32, align: 32, offset: 5312)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "codec_id", scope: !1561, file: !1562, line: 112, baseType: !56, size: 32, align: 32, offset: 5344)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_qscale", scope: !1561, file: !1562, line: 113, baseType: !971, size: 32, align: 32, offset: 5376)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !1561, file: !1562, line: 114, baseType: !971, size: 32, align: 32, offset: 5408)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "max_b_frames", scope: !1561, file: !1562, line: 115, baseType: !971, size: 32, align: 32, offset: 5440)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "luma_elim_threshold", scope: !1561, file: !1562, line: 116, baseType: !971, size: 32, align: 32, offset: 5472)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_elim_threshold", scope: !1561, file: !1562, line: 117, baseType: !971, size: 32, align: 32, offset: 5504)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "strict_std_compliance", scope: !1561, file: !1562, line: 118, baseType: !971, size: 32, align: 32, offset: 5536)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "workaround_bugs", scope: !1561, file: !1562, line: 119, baseType: !971, size: 32, align: 32, offset: 5568)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "codec_tag", scope: !1561, file: !1562, line: 120, baseType: !971, size: 32, align: 32, offset: 5600)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "context_initialized", scope: !1561, file: !1562, line: 124, baseType: !971, size: 32, align: 32, offset: 5632)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "input_picture_number", scope: !1561, file: !1562, line: 125, baseType: !971, size: 32, align: 32, offset: 5664)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "coded_picture_number", scope: !1561, file: !1562, line: 126, baseType: !971, size: 32, align: 32, offset: 5696)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "picture_number", scope: !1561, file: !1562, line: 127, baseType: !971, size: 32, align: 32, offset: 5728)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "picture_in_gop_number", scope: !1561, file: !1562, line: 128, baseType: !971, size: 32, align: 32, offset: 5760)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "mb_width", scope: !1561, file: !1562, line: 129, baseType: !971, size: 32, align: 32, offset: 5792)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "mb_height", scope: !1561, file: !1562, line: 129, baseType: !971, size: 32, align: 32, offset: 5824)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "mb_stride", scope: !1561, file: !1562, line: 130, baseType: !971, size: 32, align: 32, offset: 5856)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "b8_stride", scope: !1561, file: !1562, line: 131, baseType: !971, size: 32, align: 32, offset: 5888)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "h_edge_pos", scope: !1561, file: !1562, line: 132, baseType: !971, size: 32, align: 32, offset: 5920)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "v_edge_pos", scope: !1561, file: !1562, line: 132, baseType: !971, size: 32, align: 32, offset: 5952)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "mb_num", scope: !1561, file: !1562, line: 133, baseType: !971, size: 32, align: 32, offset: 5984)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !1561, file: !1562, line: 134, baseType: !1620, size: 64, align: 64, offset: 6016)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1218, line: 149, baseType: !1038)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "uvlinesize", scope: !1561, file: !1562, line: 135, baseType: !1620, size: 64, align: 64, offset: 6080)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "picture", scope: !1561, file: !1562, line: 136, baseType: !1623, size: 64, align: 64, offset: 6144)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64, align: 64)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "Picture", file: !1625, line: 91, baseType: !1626)
!1625 = !DIFile(filename: "libavcodec/mpegpicture.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Picture", file: !1625, line: 45, size: 2624, align: 64, elements: !1627)
!1627 = !{!1628, !1630, !1641, !1642, !1643, !1645, !1651, !1652, !1654, !1655, !1656, !1657, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1626, file: !1625, line: 46, baseType: !1629, size: 64, align: 64)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64, align: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !1626, file: !1625, line: 47, baseType: !1631, size: 256, align: 64, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadFrame", file: !1632, line: 40, baseType: !1633)
!1632 = !DIFile(filename: "libavcodec/thread.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThreadFrame", file: !1632, line: 34, size: 256, align: 64, elements: !1634)
!1634 = !{!1635, !1636, !1640}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1633, file: !1632, line: 35, baseType: !1126, size: 64, align: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1633, file: !1632, line: 36, baseType: !1637, size: 128, align: 64, offset: 64)
!1637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1104, size: 128, align: 64, elements: !1638)
!1638 = !{!1639}
!1639 = !DISubrange(count: 2)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1633, file: !1632, line: 39, baseType: !1164, size: 64, align: 64, offset: 192)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table_buf", scope: !1626, file: !1625, line: 49, baseType: !1164, size: 64, align: 64, offset: 320)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_table", scope: !1626, file: !1625, line: 50, baseType: !1208, size: 64, align: 64, offset: 384)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val_buf", scope: !1626, file: !1625, line: 52, baseType: !1644, size: 128, align: 64, offset: 448)
!1644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1164, size: 128, align: 64, elements: !1638)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val", scope: !1626, file: !1625, line: 53, baseType: !1646, size: 128, align: 64, offset: 576)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 128, align: 64, elements: !1638)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64, align: 64)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 32, align: 16, elements: !1638)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !969, line: 37, baseType: !1650)
!1650 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type_buf", scope: !1626, file: !1625, line: 55, baseType: !1164, size: 64, align: 64, offset: 704)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !1626, file: !1625, line: 56, baseType: !1653, size: 64, align: 64, offset: 768)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64, align: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table_buf", scope: !1626, file: !1625, line: 58, baseType: !1164, size: 64, align: 64, offset: 832)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table", scope: !1626, file: !1625, line: 59, baseType: !1132, size: 64, align: 64, offset: 896)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index_buf", scope: !1626, file: !1625, line: 61, baseType: !1644, size: 128, align: 64, offset: 960)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index", scope: !1626, file: !1625, line: 62, baseType: !1658, size: 128, align: 64, offset: 1088)
!1658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1208, size: 128, align: 64, elements: !1638)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_buf", scope: !1626, file: !1625, line: 64, baseType: !1164, size: 64, align: 64, offset: 1216)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var", scope: !1626, file: !1625, line: 65, baseType: !1433, size: 64, align: 64, offset: 1280)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_buf", scope: !1626, file: !1625, line: 67, baseType: !1164, size: 64, align: 64, offset: 1344)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var", scope: !1626, file: !1625, line: 68, baseType: !1433, size: 64, align: 64, offset: 1408)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mb_width", scope: !1626, file: !1625, line: 70, baseType: !971, size: 32, align: 32, offset: 1472)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mb_height", scope: !1626, file: !1625, line: 71, baseType: !971, size: 32, align: 32, offset: 1504)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "mb_mean_buf", scope: !1626, file: !1625, line: 73, baseType: !1164, size: 64, align: 64, offset: 1536)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "mb_mean", scope: !1626, file: !1625, line: 74, baseType: !1132, size: 64, align: 64, offset: 1600)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_priv_buf", scope: !1626, file: !1625, line: 76, baseType: !1164, size: 64, align: 64, offset: 1664)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_picture_private", scope: !1626, file: !1625, line: 77, baseType: !974, size: 64, align: 64, offset: 1728)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "field_picture", scope: !1626, file: !1625, line: 79, baseType: !971, size: 32, align: 32, offset: 1792)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_sum", scope: !1626, file: !1625, line: 81, baseType: !1037, size: 64, align: 64, offset: 1856)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_sum", scope: !1626, file: !1625, line: 82, baseType: !1037, size: 64, align: 64, offset: 1920)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_score", scope: !1626, file: !1625, line: 84, baseType: !971, size: 32, align: 32, offset: 1984)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "needs_realloc", scope: !1626, file: !1625, line: 85, baseType: !971, size: 32, align: 32, offset: 2016)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !1626, file: !1625, line: 87, baseType: !971, size: 32, align: 32, offset: 2048)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1626, file: !1625, line: 88, baseType: !971, size: 32, align: 32, offset: 2080)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "encoding_error", scope: !1626, file: !1625, line: 90, baseType: !1154, size: 512, align: 64, offset: 2112)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "input_picture", scope: !1561, file: !1562, line: 137, baseType: !1678, size: 64, align: 64, offset: 6208)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64, align: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_input_picture", scope: !1561, file: !1562, line: 138, baseType: !1678, size: 64, align: 64, offset: 6272)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "user_specified_pts", scope: !1561, file: !1562, line: 140, baseType: !1037, size: 64, align: 64, offset: 6336)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "dts_delta", scope: !1561, file: !1562, line: 144, baseType: !1037, size: 64, align: 64, offset: 6400)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "reordered_pts", scope: !1561, file: !1562, line: 148, baseType: !1037, size: 64, align: 64, offset: 6464)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !1561, file: !1562, line: 151, baseType: !1684, size: 320, align: 64, offset: 6528)
!1684 = !DIDerivedType(tag: DW_TAG_typedef, name: "PutBitContext", file: !1685, line: 40, baseType: !1686)
!1685 = !DIFile(filename: "libavcodec/put_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PutBitContext", file: !1685, line: 35, size: 320, align: 64, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691, !1692, !1693}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "bit_buf", scope: !1686, file: !1685, line: 36, baseType: !968, size: 32, align: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "bit_left", scope: !1686, file: !1685, line: 37, baseType: !971, size: 32, align: 32, offset: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1686, file: !1685, line: 38, baseType: !1132, size: 64, align: 64, offset: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ptr", scope: !1686, file: !1685, line: 38, baseType: !1132, size: 64, align: 64, offset: 128)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "buf_end", scope: !1686, file: !1685, line: 38, baseType: !1132, size: 64, align: 64, offset: 192)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !1686, file: !1685, line: 39, baseType: !971, size: 32, align: 32, offset: 256)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "start_mb_y", scope: !1561, file: !1562, line: 153, baseType: !971, size: 32, align: 32, offset: 6848)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "end_mb_y", scope: !1561, file: !1562, line: 154, baseType: !971, size: 32, align: 32, offset: 6880)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "thread_context", scope: !1561, file: !1562, line: 155, baseType: !1697, size: 2048, align: 64, offset: 6912)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1560, size: 2048, align: 64, elements: !1698)
!1698 = !{!1699}
!1699 = !DISubrange(count: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "slice_context_count", scope: !1561, file: !1562, line: 156, baseType: !971, size: 32, align: 32, offset: 8960)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "last_picture", scope: !1561, file: !1562, line: 162, baseType: !1624, size: 2624, align: 64, offset: 9024)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "next_picture", scope: !1561, file: !1562, line: 168, baseType: !1624, size: 2624, align: 64, offset: 11648)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "new_picture", scope: !1561, file: !1562, line: 174, baseType: !1624, size: 2624, align: 64, offset: 14272)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "current_picture", scope: !1561, file: !1562, line: 180, baseType: !1624, size: 2624, align: 64, offset: 16896)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "last_picture_ptr", scope: !1561, file: !1562, line: 182, baseType: !1623, size: 64, align: 64, offset: 19520)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "next_picture_ptr", scope: !1561, file: !1562, line: 183, baseType: !1623, size: 64, align: 64, offset: 19584)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "current_picture_ptr", scope: !1561, file: !1562, line: 184, baseType: !1623, size: 64, align: 64, offset: 19648)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "last_dc", scope: !1561, file: !1562, line: 185, baseType: !1709, size: 96, align: 32, offset: 19712)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 96, align: 32, elements: !1710)
!1710 = !{!1711}
!1711 = !DISubrange(count: 3)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "dc_val_base", scope: !1561, file: !1562, line: 186, baseType: !1713, size: 64, align: 64, offset: 19840)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64, align: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "dc_val", scope: !1561, file: !1562, line: 187, baseType: !1715, size: 192, align: 64, offset: 19904)
!1715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1713, size: 192, align: 64, elements: !1710)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "y_dc_scale_table", scope: !1561, file: !1562, line: 188, baseType: !1547, size: 64, align: 64, offset: 20096)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "c_dc_scale_table", scope: !1561, file: !1562, line: 189, baseType: !1547, size: 64, align: 64, offset: 20160)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qscale_table", scope: !1561, file: !1562, line: 190, baseType: !1547, size: 64, align: 64, offset: 20224)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "coded_block_base", scope: !1561, file: !1562, line: 191, baseType: !1132, size: 64, align: 64, offset: 20288)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "coded_block", scope: !1561, file: !1562, line: 192, baseType: !1132, size: 64, align: 64, offset: 20352)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ac_val_base", scope: !1561, file: !1562, line: 193, baseType: !1722, size: 64, align: 64, offset: 20416)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64, align: 64)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 256, align: 16, elements: !1724)
!1724 = !{!1725}
!1725 = !DISubrange(count: 16)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "ac_val", scope: !1561, file: !1562, line: 194, baseType: !1727, size: 192, align: 64, offset: 20480)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1722, size: 192, align: 64, elements: !1710)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "mb_skipped", scope: !1561, file: !1562, line: 195, baseType: !971, size: 32, align: 32, offset: 20672)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table", scope: !1561, file: !1562, line: 196, baseType: !1132, size: 64, align: 64, offset: 20736)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "mbintra_table", scope: !1561, file: !1562, line: 198, baseType: !1132, size: 64, align: 64, offset: 20800)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "cbp_table", scope: !1561, file: !1562, line: 199, baseType: !1132, size: 64, align: 64, offset: 20864)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "pred_dir_table", scope: !1561, file: !1562, line: 200, baseType: !1132, size: 64, align: 64, offset: 20928)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "sc", scope: !1561, file: !1562, line: 202, baseType: !1734, size: 256, align: 64, offset: 20992)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScratchpadContext", file: !1625, line: 40, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScratchpadContext", file: !1625, line: 35, size: 256, align: 64, elements: !1736)
!1736 = !{!1737, !1738, !1739, !1740}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "edge_emu_buffer", scope: !1735, file: !1625, line: 36, baseType: !1132, size: 64, align: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "rd_scratchpad", scope: !1735, file: !1625, line: 37, baseType: !1132, size: 64, align: 64, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "obmc_scratchpad", scope: !1735, file: !1625, line: 38, baseType: !1132, size: 64, align: 64, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "b_scratchpad", scope: !1735, file: !1625, line: 39, baseType: !1132, size: 64, align: 64, offset: 192)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !1561, file: !1562, line: 204, baseType: !971, size: 32, align: 32, offset: 21248)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qscale", scope: !1561, file: !1562, line: 205, baseType: !971, size: 32, align: 32, offset: 21280)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "lambda", scope: !1561, file: !1562, line: 206, baseType: !970, size: 32, align: 32, offset: 21312)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "lambda2", scope: !1561, file: !1562, line: 207, baseType: !970, size: 32, align: 32, offset: 21344)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "lambda_table", scope: !1561, file: !1562, line: 208, baseType: !1396, size: 64, align: 64, offset: 21376)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "adaptive_quant", scope: !1561, file: !1562, line: 209, baseType: !971, size: 32, align: 32, offset: 21440)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "dquant", scope: !1561, file: !1562, line: 210, baseType: !971, size: 32, align: 32, offset: 21472)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "closed_gop", scope: !1561, file: !1562, line: 211, baseType: !971, size: 32, align: 32, offset: 21504)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !1561, file: !1562, line: 212, baseType: !971, size: 32, align: 32, offset: 21536)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1561, file: !1562, line: 213, baseType: !971, size: 32, align: 32, offset: 21568)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "last_pict_type", scope: !1561, file: !1562, line: 214, baseType: !971, size: 32, align: 32, offset: 21600)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "last_non_b_pict_type", scope: !1561, file: !1562, line: 215, baseType: !971, size: 32, align: 32, offset: 21632)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "droppable", scope: !1561, file: !1562, line: 216, baseType: !971, size: 32, align: 32, offset: 21664)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "frame_rate_index", scope: !1561, file: !1562, line: 217, baseType: !971, size: 32, align: 32, offset: 21696)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg2_frame_rate_ext", scope: !1561, file: !1562, line: 218, baseType: !992, size: 64, align: 32, offset: 21728)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "last_lambda_for", scope: !1561, file: !1562, line: 219, baseType: !1757, size: 160, align: 32, offset: 21792)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 160, align: 32, elements: !1758)
!1758 = !{!1759}
!1759 = !DISubrange(count: 5)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "skipdct", scope: !1561, file: !1562, line: 220, baseType: !971, size: 32, align: 32, offset: 21952)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "unrestricted_mv", scope: !1561, file: !1562, line: 223, baseType: !971, size: 32, align: 32, offset: 21984)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "h263_long_vectors", scope: !1561, file: !1562, line: 224, baseType: !971, size: 32, align: 32, offset: 22016)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !1561, file: !1562, line: 226, baseType: !1764, size: 256, align: 64, offset: 22080)
!1764 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockDSPContext", file: !1765, line: 40, baseType: !1766)
!1765 = !DIFile(filename: "libavcodec/blockdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BlockDSPContext", file: !1765, line: 35, size: 256, align: 64, elements: !1767)
!1767 = !{!1768, !1772, !1773}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "clear_block", scope: !1766, file: !1765, line: 36, baseType: !1769, size: 64, align: 64)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64, align: 64)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{null, !1713}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "clear_blocks", scope: !1766, file: !1765, line: 37, baseType: !1769, size: 64, align: 64, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "fill_block_tab", scope: !1766, file: !1765, line: 39, baseType: !1774, size: 128, align: 64, offset: 128)
!1774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1775, size: 128, align: 64, elements: !1638)
!1775 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_fill_func", file: !1765, line: 32, baseType: !1776)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64, align: 64)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{null, !1132, !972, !1620, !971}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "fdsp", scope: !1561, file: !1562, line: 227, baseType: !1780, size: 128, align: 64, offset: 22336)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "FDCTDSPContext", file: !1781, line: 29, baseType: !1782)
!1781 = !DIFile(filename: "libavcodec/fdctdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FDCTDSPContext", file: !1781, line: 26, size: 128, align: 64, elements: !1783)
!1783 = !{!1784, !1785}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "fdct", scope: !1782, file: !1781, line: 27, baseType: !1769, size: 64, align: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "fdct248", scope: !1782, file: !1781, line: 28, baseType: !1769, size: 64, align: 64, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "h264chroma", scope: !1561, file: !1562, line: 228, baseType: !1787, size: 512, align: 64, offset: 22464)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "H264ChromaContext", file: !1788, line: 30, baseType: !1789)
!1788 = !DIFile(filename: "libavcodec/h264chroma.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H264ChromaContext", file: !1788, line: 27, size: 512, align: 64, elements: !1790)
!1790 = !{!1791, !1797}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "put_h264_chroma_pixels_tab", scope: !1789, file: !1788, line: 28, baseType: !1792, size: 256, align: 64)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1793, size: 256, align: 64, elements: !1233)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "h264_chroma_mc_func", file: !1788, line: 25, baseType: !1794)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64, align: 64)
!1795 = !DISubroutineType(types: !1796)
!1796 = !{null, !1132, !1132, !1620, !971, !971, !971}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "avg_h264_chroma_pixels_tab", scope: !1789, file: !1788, line: 29, baseType: !1792, size: 256, align: 64, offset: 256)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "hdsp", scope: !1561, file: !1562, line: 229, baseType: !1799, size: 3328, align: 64, offset: 22976)
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "HpelDSPContext", file: !1800, line: 95, baseType: !1801)
!1800 = !DIFile(filename: "libavcodec/hpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HpelDSPContext", file: !1800, line: 45, size: 3328, align: 64, elements: !1802)
!1802 = !{!1803, !1810, !1811, !1812}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_tab", scope: !1801, file: !1800, line: 56, baseType: !1804, size: 1024, align: 64)
!1804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1805, size: 1024, align: 64, elements: !1809)
!1805 = !DIDerivedType(tag: DW_TAG_typedef, name: "op_pixels_func", file: !1800, line: 38, baseType: !1806)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64, align: 64)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{null, !1132, !1547, !1620, !971}
!1809 = !{!1234, !1234}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "avg_pixels_tab", scope: !1801, file: !1800, line: 68, baseType: !1804, size: 1024, align: 64, offset: 1024)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_pixels_tab", scope: !1801, file: !1800, line: 82, baseType: !1804, size: 1024, align: 64, offset: 2048)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "avg_no_rnd_pixels_tab", scope: !1801, file: !1800, line: 94, baseType: !1813, size: 256, align: 64, offset: 3072)
!1813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1805, size: 256, align: 64, elements: !1233)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "idsp", scope: !1561, file: !1562, line: 230, baseType: !1815, size: 960, align: 64, offset: 26304)
!1815 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDCTDSPContext", file: !931, line: 100, baseType: !1816)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDCTDSPContext", file: !931, line: 53, size: 960, align: 64, elements: !1817)
!1817 = !{!1818, !1825, !1826, !1827, !1828, !1832, !1833, !1834, !1835}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "put_pixels_clamped", scope: !1816, file: !931, line: 55, baseType: !1819, size: 64, align: 64)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64, align: 64)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{null, !1822, !1824, !1620}
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64, align: 64)
!1823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1649)
!1824 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1132)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "put_signed_pixels_clamped", scope: !1816, file: !931, line: 58, baseType: !1819, size: 64, align: 64, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "add_pixels_clamped", scope: !1816, file: !931, line: 61, baseType: !1819, size: 64, align: 64, offset: 128)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "idct", scope: !1816, file: !931, line: 65, baseType: !1769, size: 64, align: 64, offset: 192)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "idct_put", scope: !1816, file: !931, line: 72, baseType: !1829, size: 64, align: 64, offset: 256)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64, align: 64)
!1830 = !DISubroutineType(types: !1831)
!1831 = !{null, !1132, !1620, !1713}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "idct_add", scope: !1816, file: !931, line: 79, baseType: !1829, size: 64, align: 64, offset: 320)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "idct_permutation", scope: !1816, file: !931, line: 96, baseType: !1580, size: 512, align: 8, offset: 384)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "perm_type", scope: !1816, file: !931, line: 97, baseType: !930, size: 32, align: 32, offset: 896)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg4_studio_profile", scope: !1816, file: !931, line: 99, baseType: !971, size: 32, align: 32, offset: 928)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "mecc", scope: !1561, file: !1562, line: 231, baseType: !1837, size: 8640, align: 64, offset: 27264)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "MECmpContext", file: !1838, line: 80, baseType: !1839)
!1838 = !DIFile(filename: "libavcodec/me_cmp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MECmpContext", file: !1838, line: 53, size: 8640, align: 64, elements: !1840)
!1840 = !{!1841, !1845, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1875}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "sum_abs_dctelem", scope: !1839, file: !1838, line: 54, baseType: !1842, size: 64, align: 64)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64, align: 64)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!971, !1713}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "sad", scope: !1839, file: !1838, line: 56, baseType: !1846, size: 384, align: 64, offset: 64)
!1846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1847, size: 384, align: 64, elements: !1851)
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "me_cmp_func", file: !1838, line: 48, baseType: !1848)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64, align: 64)
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!971, !1560, !1132, !1132, !1620, !971}
!1851 = !{!1852}
!1852 = !DISubrange(count: 6)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "sse", scope: !1839, file: !1838, line: 57, baseType: !1846, size: 384, align: 64, offset: 448)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "hadamard8_diff", scope: !1839, file: !1838, line: 58, baseType: !1846, size: 384, align: 64, offset: 832)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "dct_sad", scope: !1839, file: !1838, line: 59, baseType: !1846, size: 384, align: 64, offset: 1216)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "quant_psnr", scope: !1839, file: !1838, line: 60, baseType: !1846, size: 384, align: 64, offset: 1600)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "bit", scope: !1839, file: !1838, line: 61, baseType: !1846, size: 384, align: 64, offset: 1984)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "rd", scope: !1839, file: !1838, line: 62, baseType: !1846, size: 384, align: 64, offset: 2368)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "vsad", scope: !1839, file: !1838, line: 63, baseType: !1846, size: 384, align: 64, offset: 2752)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "vsse", scope: !1839, file: !1838, line: 64, baseType: !1846, size: 384, align: 64, offset: 3136)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "nsse", scope: !1839, file: !1838, line: 65, baseType: !1846, size: 384, align: 64, offset: 3520)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "w53", scope: !1839, file: !1838, line: 66, baseType: !1846, size: 384, align: 64, offset: 3904)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "w97", scope: !1839, file: !1838, line: 67, baseType: !1846, size: 384, align: 64, offset: 4288)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "dct_max", scope: !1839, file: !1838, line: 68, baseType: !1846, size: 384, align: 64, offset: 4672)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "dct264_sad", scope: !1839, file: !1838, line: 69, baseType: !1846, size: 384, align: 64, offset: 5056)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre_cmp", scope: !1839, file: !1838, line: 71, baseType: !1846, size: 384, align: 64, offset: 5440)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "me_cmp", scope: !1839, file: !1838, line: 72, baseType: !1846, size: 384, align: 64, offset: 5824)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "me_sub_cmp", scope: !1839, file: !1838, line: 73, baseType: !1846, size: 384, align: 64, offset: 6208)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "mb_cmp", scope: !1839, file: !1838, line: 74, baseType: !1846, size: 384, align: 64, offset: 6592)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "ildct_cmp", scope: !1839, file: !1838, line: 75, baseType: !1846, size: 384, align: 64, offset: 6976)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1839, file: !1838, line: 76, baseType: !1846, size: 384, align: 64, offset: 7360)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "pix_abs", scope: !1839, file: !1838, line: 78, baseType: !1873, size: 512, align: 64, offset: 7744)
!1873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1847, size: 512, align: 64, elements: !1874)
!1874 = !{!1639, !1234}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "median_sad", scope: !1839, file: !1838, line: 79, baseType: !1846, size: 384, align: 64, offset: 8256)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "mdsp", scope: !1561, file: !1562, line: 232, baseType: !1877, size: 128, align: 64, offset: 35904)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "MpegVideoDSPContext", file: !1878, line: 41, baseType: !1879)
!1878 = !DIFile(filename: "libavcodec/mpegvideodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MpegVideoDSPContext", file: !1878, line: 28, size: 128, align: 64, elements: !1880)
!1880 = !{!1881, !1885}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "gmc1", scope: !1879, file: !1878, line: 32, baseType: !1882, size: 64, align: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64, align: 64)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{null, !1132, !1132, !971, !971, !971, !971, !971}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "gmc", scope: !1879, file: !1878, line: 37, baseType: !1886, size: 64, align: 64, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64, align: 64)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{null, !1132, !1132, !971, !971, !971, !971, !971, !971, !971, !971, !971, !971, !971, !971}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "mpvencdsp", scope: !1561, file: !1562, line: 233, baseType: !1890, size: 576, align: 64, offset: 36032)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "MpegvideoEncDSPContext", file: !1891, line: 45, baseType: !1892)
!1891 = !DIFile(filename: "libavcodec/mpegvideoencdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MpegvideoEncDSPContext", file: !1891, line: 32, size: 576, align: 64, elements: !1893)
!1893 = !{!1894, !1898, !1902, !1906, !1907, !1912}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "try_8x8basis", scope: !1892, file: !1891, line: 33, baseType: !1895, size: 64, align: 64)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64, align: 64)
!1896 = !DISubroutineType(types: !1897)
!1897 = !{!971, !1713, !1713, !1713, !971}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "add_8x8basis", scope: !1892, file: !1891, line: 35, baseType: !1899, size: 64, align: 64, offset: 64)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64, align: 64)
!1900 = !DISubroutineType(types: !1901)
!1901 = !{null, !1713, !1713, !971}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "pix_sum", scope: !1892, file: !1891, line: 37, baseType: !1903, size: 64, align: 64, offset: 128)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64, align: 64)
!1904 = !DISubroutineType(types: !1905)
!1905 = !{!971, !1132, !971}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "pix_norm1", scope: !1892, file: !1891, line: 38, baseType: !1903, size: 64, align: 64, offset: 192)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "shrink", scope: !1892, file: !1891, line: 40, baseType: !1908, size: 256, align: 64, offset: 256)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1909, size: 256, align: 64, elements: !1233)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64, align: 64)
!1910 = !DISubroutineType(types: !1911)
!1911 = !{null, !1132, !971, !1547, !971, !971, !971}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "draw_edges", scope: !1892, file: !1891, line: 43, baseType: !1913, size: 64, align: 64, offset: 512)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64, align: 64)
!1914 = !DISubroutineType(types: !1915)
!1915 = !{null, !1132, !971, !971, !971, !971, !971, !971}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "pdsp", scope: !1561, file: !1562, line: 234, baseType: !1917, size: 192, align: 64, offset: 36608)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixblockDSPContext", file: !1918, line: 41, baseType: !1919)
!1918 = !DIFile(filename: "libavcodec/pixblockdsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PixblockDSPContext", file: !1918, line: 28, size: 192, align: 64, elements: !1920)
!1920 = !{!1921, !1926, !1930}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "get_pixels", scope: !1919, file: !1918, line: 29, baseType: !1922, size: 64, align: 64)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64, align: 64)
!1923 = !DISubroutineType(types: !1924)
!1924 = !{null, !1925, !1547, !1620}
!1925 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1713)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "diff_pixels", scope: !1919, file: !1918, line: 32, baseType: !1927, size: 64, align: 64, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64, align: 64)
!1928 = !DISubroutineType(types: !1929)
!1929 = !{null, !1925, !1547, !1547, !1620}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "diff_pixels_unaligned", scope: !1919, file: !1918, line: 36, baseType: !1927, size: 64, align: 64, offset: 128)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "qdsp", scope: !1561, file: !1562, line: 235, baseType: !1932, size: 6144, align: 64, offset: 36800)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "QpelDSPContext", file: !1933, line: 76, baseType: !1934)
!1933 = !DIFile(filename: "libavcodec/qpeldsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QpelDSPContext", file: !1933, line: 72, size: 6144, align: 64, elements: !1935)
!1935 = !{!1936, !1943, !1944}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "put_qpel_pixels_tab", scope: !1934, file: !1933, line: 73, baseType: !1937, size: 2048, align: 64)
!1937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1938, size: 2048, align: 64, elements: !1942)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "qpel_mc_func", file: !1933, line: 65, baseType: !1939)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64, align: 64)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{null, !1132, !1547, !1620}
!1942 = !{!1639, !1725}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "avg_qpel_pixels_tab", scope: !1934, file: !1933, line: 74, baseType: !1937, size: 2048, align: 64, offset: 2048)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_qpel_pixels_tab", scope: !1934, file: !1933, line: 75, baseType: !1937, size: 2048, align: 64, offset: 4096)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "vdsp", scope: !1561, file: !1562, line: 236, baseType: !1946, size: 128, align: 64, offset: 42944)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "VideoDSPContext", file: !1947, line: 77, baseType: !1948)
!1947 = !DIFile(filename: "libavcodec/videodsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VideoDSPContext", file: !1947, line: 41, size: 128, align: 64, elements: !1949)
!1949 = !{!1950, !1954}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "emulated_edge_mc", scope: !1948, file: !1947, line: 63, baseType: !1951, size: 64, align: 64)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64, align: 64)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{null, !1132, !1547, !1620, !1620, !971, !971, !971, !971, !971, !971}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "prefetch", scope: !1948, file: !1947, line: 76, baseType: !1955, size: 64, align: 64, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64, align: 64)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{null, !1132, !1620, !971}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "h263dsp", scope: !1561, file: !1562, line: 237, baseType: !1959, size: 128, align: 64, offset: 43072)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "H263DSPContext", file: !1960, line: 29, baseType: !1961)
!1960 = !DIFile(filename: "libavcodec/h263dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "H263DSPContext", file: !1960, line: 26, size: 128, align: 64, elements: !1962)
!1962 = !{!1963, !1967}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "h263_h_loop_filter", scope: !1961, file: !1960, line: 27, baseType: !1964, size: 64, align: 64)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64, align: 64)
!1965 = !DISubroutineType(types: !1966)
!1966 = !{null, !1132, !971, !971}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "h263_v_loop_filter", scope: !1961, file: !1960, line: 28, baseType: !1964, size: 64, align: 64, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "f_code", scope: !1561, file: !1562, line: 238, baseType: !971, size: 32, align: 32, offset: 43200)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "b_code", scope: !1561, file: !1562, line: 239, baseType: !971, size: 32, align: 32, offset: 43232)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "p_mv_table_base", scope: !1561, file: !1562, line: 240, baseType: !1647, size: 64, align: 64, offset: 43264)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "b_forw_mv_table_base", scope: !1561, file: !1562, line: 241, baseType: !1647, size: 64, align: 64, offset: 43328)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "b_back_mv_table_base", scope: !1561, file: !1562, line: 242, baseType: !1647, size: 64, align: 64, offset: 43392)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_forw_mv_table_base", scope: !1561, file: !1562, line: 243, baseType: !1647, size: 64, align: 64, offset: 43456)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_back_mv_table_base", scope: !1561, file: !1562, line: 244, baseType: !1647, size: 64, align: 64, offset: 43520)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_mv_table_base", scope: !1561, file: !1562, line: 245, baseType: !1647, size: 64, align: 64, offset: 43584)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "p_field_mv_table_base", scope: !1561, file: !1562, line: 246, baseType: !1977, size: 256, align: 64, offset: 43648)
!1977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 256, align: 64, elements: !1978)
!1978 = !{!1639, !1639}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_mv_table_base", scope: !1561, file: !1562, line: 247, baseType: !1980, size: 512, align: 64, offset: 43904)
!1980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 512, align: 64, elements: !1981)
!1981 = !{!1639, !1639, !1639}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "p_mv_table", scope: !1561, file: !1562, line: 248, baseType: !1647, size: 64, align: 64, offset: 44416)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "b_forw_mv_table", scope: !1561, file: !1562, line: 249, baseType: !1647, size: 64, align: 64, offset: 44480)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "b_back_mv_table", scope: !1561, file: !1562, line: 250, baseType: !1647, size: 64, align: 64, offset: 44544)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_forw_mv_table", scope: !1561, file: !1562, line: 251, baseType: !1647, size: 64, align: 64, offset: 44608)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "b_bidir_back_mv_table", scope: !1561, file: !1562, line: 252, baseType: !1647, size: 64, align: 64, offset: 44672)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_mv_table", scope: !1561, file: !1562, line: 253, baseType: !1647, size: 64, align: 64, offset: 44736)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "p_field_mv_table", scope: !1561, file: !1562, line: 254, baseType: !1977, size: 256, align: 64, offset: 44800)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_mv_table", scope: !1561, file: !1562, line: 255, baseType: !1980, size: 512, align: 64, offset: 45056)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "p_field_select_table", scope: !1561, file: !1562, line: 256, baseType: !1991, size: 128, align: 64, offset: 45568)
!1991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1132, size: 128, align: 64, elements: !1638)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_select_table", scope: !1561, file: !1562, line: 257, baseType: !1993, size: 256, align: 64, offset: 45696)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1132, size: 256, align: 64, elements: !1978)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "motion_est", scope: !1561, file: !1562, line: 258, baseType: !971, size: 32, align: 32, offset: 45952)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "me_penalty_compensation", scope: !1561, file: !1562, line: 259, baseType: !971, size: 32, align: 32, offset: 45984)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "me_pre", scope: !1561, file: !1562, line: 260, baseType: !971, size: 32, align: 32, offset: 46016)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "mv_dir", scope: !1561, file: !1562, line: 261, baseType: !971, size: 32, align: 32, offset: 46048)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "mv_type", scope: !1561, file: !1562, line: 265, baseType: !971, size: 32, align: 32, offset: 46080)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !1561, file: !1562, line: 276, baseType: !2000, size: 512, align: 32, offset: 46112)
!2000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 512, align: 32, elements: !2001)
!2001 = !{!1639, !1234, !1639}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "field_select", scope: !1561, file: !1562, line: 277, baseType: !2003, size: 128, align: 32, offset: 46624)
!2003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 128, align: 32, elements: !1978)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "last_mv", scope: !1561, file: !1562, line: 278, baseType: !2005, size: 256, align: 32, offset: 46752)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 256, align: 32, elements: !1981)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "fcode_tab", scope: !1561, file: !1562, line: 279, baseType: !1132, size: 64, align: 64, offset: 47040)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "direct_scale_mv", scope: !1561, file: !1562, line: 280, baseType: !2008, size: 2048, align: 16, offset: 47104)
!2008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 2048, align: 16, elements: !2009)
!2009 = !{!1639, !1582}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "me", scope: !1561, file: !1562, line: 282, baseType: !2011, size: 4416, align: 64, offset: 49152)
!2011 = !DIDerivedType(tag: DW_TAG_typedef, name: "MotionEstContext", file: !2012, line: 99, baseType: !2013)
!2012 = !DIFile(filename: "libavcodec/motion_est.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MotionEstContext", file: !2012, line: 47, size: 4416, align: 64, elements: !2014)
!2014 = !{!2015, !2016, !2017, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2054, !2055, !2058, !2059, !2064, !2065}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2013, file: !2012, line: 48, baseType: !1104, size: 64, align: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !2013, file: !2012, line: 49, baseType: !971, size: 32, align: 32, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "co_located_mv", scope: !2013, file: !2012, line: 50, baseType: !2018, size: 256, align: 32, offset: 96)
!2018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 256, align: 32, elements: !2019)
!2019 = !{!1234, !1639}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "direct_basis_mv", scope: !2013, file: !2012, line: 51, baseType: !2018, size: 256, align: 32, offset: 352)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "scratchpad", scope: !2013, file: !2012, line: 52, baseType: !1132, size: 64, align: 64, offset: 640)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "best_mb", scope: !2013, file: !2012, line: 54, baseType: !1132, size: 64, align: 64, offset: 704)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "temp_mb", scope: !2013, file: !2012, line: 55, baseType: !1991, size: 128, align: 64, offset: 768)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2013, file: !2012, line: 56, baseType: !1132, size: 64, align: 64, offset: 896)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "best_bits", scope: !2013, file: !2012, line: 57, baseType: !971, size: 32, align: 32, offset: 960)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2013, file: !2012, line: 58, baseType: !1653, size: 64, align: 64, offset: 1024)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "score_map", scope: !2013, file: !2012, line: 59, baseType: !1653, size: 64, align: 64, offset: 1088)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "map_generation", scope: !2013, file: !2012, line: 60, baseType: !970, size: 32, align: 32, offset: 1152)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "pre_penalty_factor", scope: !2013, file: !2012, line: 61, baseType: !971, size: 32, align: 32, offset: 1184)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "penalty_factor", scope: !2013, file: !2012, line: 62, baseType: !971, size: 32, align: 32, offset: 1216)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "sub_penalty_factor", scope: !2013, file: !2012, line: 67, baseType: !971, size: 32, align: 32, offset: 1248)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "mb_penalty_factor", scope: !2013, file: !2012, line: 68, baseType: !971, size: 32, align: 32, offset: 1280)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2013, file: !2012, line: 69, baseType: !971, size: 32, align: 32, offset: 1312)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "sub_flags", scope: !2013, file: !2012, line: 70, baseType: !971, size: 32, align: 32, offset: 1344)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "mb_flags", scope: !2013, file: !2012, line: 71, baseType: !971, size: 32, align: 32, offset: 1376)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "pre_pass", scope: !2013, file: !2012, line: 72, baseType: !971, size: 32, align: 32, offset: 1408)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "dia_size", scope: !2013, file: !2012, line: 73, baseType: !971, size: 32, align: 32, offset: 1440)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2013, file: !2012, line: 74, baseType: !971, size: 32, align: 32, offset: 1472)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2013, file: !2012, line: 75, baseType: !971, size: 32, align: 32, offset: 1504)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2013, file: !2012, line: 76, baseType: !971, size: 32, align: 32, offset: 1536)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2013, file: !2012, line: 77, baseType: !971, size: 32, align: 32, offset: 1568)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "pred_x", scope: !2013, file: !2012, line: 78, baseType: !971, size: 32, align: 32, offset: 1600)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pred_y", scope: !2013, file: !2012, line: 79, baseType: !971, size: 32, align: 32, offset: 1632)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2013, file: !2012, line: 80, baseType: !2045, size: 1024, align: 64, offset: 1664)
!2045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1132, size: 1024, align: 64, elements: !1809)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2013, file: !2012, line: 81, baseType: !2045, size: 1024, align: 64, offset: 2688)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2013, file: !2012, line: 82, baseType: !971, size: 32, align: 32, offset: 3712)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "uvstride", scope: !2013, file: !2012, line: 83, baseType: !971, size: 32, align: 32, offset: 3744)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_sum_temp", scope: !2013, file: !2012, line: 85, baseType: !1037, size: 64, align: 64, offset: 3776)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_sum_temp", scope: !2013, file: !2012, line: 86, baseType: !1037, size: 64, align: 64, offset: 3840)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "scene_change_score", scope: !2013, file: !2012, line: 87, baseType: !971, size: 32, align: 32, offset: 3904)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "hpel_put", scope: !2013, file: !2012, line: 89, baseType: !2053, size: 64, align: 64, offset: 3968)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64, align: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "hpel_avg", scope: !2013, file: !2012, line: 90, baseType: !2053, size: 64, align: 64, offset: 4032)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "qpel_put", scope: !2013, file: !2012, line: 91, baseType: !2056, size: 64, align: 64, offset: 4096)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64, align: 64)
!2057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1938, size: 1024, align: 64, elements: !1724)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "qpel_avg", scope: !2013, file: !2012, line: 92, baseType: !2056, size: 64, align: 64, offset: 4160)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "mv_penalty", scope: !2013, file: !2012, line: 93, baseType: !2060, size: 64, align: 64, offset: 4224)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64, align: 64)
!2061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 131080, align: 8, elements: !2062)
!2062 = !{!2063}
!2063 = !DISubrange(count: 16385)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "current_mv_penalty", scope: !2013, file: !2012, line: 94, baseType: !1132, size: 64, align: 64, offset: 4288)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "sub_motion_search", scope: !2013, file: !2012, line: 95, baseType: !2066, size: 64, align: 64, offset: 4352)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 64, align: 64)
!2067 = !DISubroutineType(types: !2068)
!2068 = !{!971, !1560, !1396, !1396, !971, !971, !971, !971, !971}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "no_rounding", scope: !1561, file: !1562, line: 284, baseType: !971, size: 32, align: 32, offset: 53568)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "mb_x", scope: !1561, file: !1562, line: 288, baseType: !971, size: 32, align: 32, offset: 53600)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "mb_y", scope: !1561, file: !1562, line: 288, baseType: !971, size: 32, align: 32, offset: 53632)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "mb_skip_run", scope: !1561, file: !1562, line: 289, baseType: !971, size: 32, align: 32, offset: 53664)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "mb_intra", scope: !1561, file: !1562, line: 290, baseType: !971, size: 32, align: 32, offset: 53696)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !1561, file: !1562, line: 291, baseType: !1433, size: 64, align: 64, offset: 53760)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "block_index", scope: !1561, file: !1562, line: 293, baseType: !2076, size: 192, align: 32, offset: 53824)
!2076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 192, align: 32, elements: !1851)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "block_wrap", scope: !1561, file: !1562, line: 294, baseType: !2076, size: 192, align: 32, offset: 54016)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1561, file: !1562, line: 295, baseType: !2079, size: 192, align: 64, offset: 54208)
!2079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1132, size: 192, align: 64, elements: !1710)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "mb_index2xy", scope: !1561, file: !1562, line: 297, baseType: !1396, size: 64, align: 64, offset: 54400)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "intra_matrix", scope: !1561, file: !1562, line: 300, baseType: !2082, size: 1024, align: 16, offset: 54464)
!2082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1434, size: 1024, align: 16, elements: !1581)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1561, file: !1562, line: 301, baseType: !2082, size: 1024, align: 16, offset: 55488)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "inter_matrix", scope: !1561, file: !1562, line: 302, baseType: !2082, size: 1024, align: 16, offset: 56512)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_inter_matrix", scope: !1561, file: !1562, line: 303, baseType: !2082, size: 1024, align: 16, offset: 57536)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "force_duplicated_matrix", scope: !1561, file: !1562, line: 304, baseType: !971, size: 32, align: 32, offset: 58560)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "intra_quant_bias", scope: !1561, file: !1562, line: 306, baseType: !971, size: 32, align: 32, offset: 58592)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "inter_quant_bias", scope: !1561, file: !1562, line: 307, baseType: !971, size: 32, align: 32, offset: 58624)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "min_qcoeff", scope: !1561, file: !1562, line: 308, baseType: !971, size: 32, align: 32, offset: 58656)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "max_qcoeff", scope: !1561, file: !1562, line: 309, baseType: !971, size: 32, align: 32, offset: 58688)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "ac_esc_length", scope: !1561, file: !1562, line: 310, baseType: !971, size: 32, align: 32, offset: 58720)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "intra_ac_vlc_length", scope: !1561, file: !1562, line: 311, baseType: !1132, size: 64, align: 64, offset: 58752)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "intra_ac_vlc_last_length", scope: !1561, file: !1562, line: 312, baseType: !1132, size: 64, align: 64, offset: 58816)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "intra_chroma_ac_vlc_length", scope: !1561, file: !1562, line: 313, baseType: !1132, size: 64, align: 64, offset: 58880)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "intra_chroma_ac_vlc_last_length", scope: !1561, file: !1562, line: 314, baseType: !1132, size: 64, align: 64, offset: 58944)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "inter_ac_vlc_length", scope: !1561, file: !1562, line: 315, baseType: !1132, size: 64, align: 64, offset: 59008)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "inter_ac_vlc_last_length", scope: !1561, file: !1562, line: 316, baseType: !1132, size: 64, align: 64, offset: 59072)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "luma_dc_vlc_length", scope: !1561, file: !1562, line: 317, baseType: !1132, size: 64, align: 64, offset: 59136)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "coded_score", scope: !1561, file: !1562, line: 320, baseType: !1570, size: 384, align: 32, offset: 59200)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "q_intra_matrix", scope: !1561, file: !1562, line: 323, baseType: !2101, size: 64, align: 64, offset: 59584)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64, align: 64)
!2102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 2048, align: 32, elements: !1581)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "q_chroma_intra_matrix", scope: !1561, file: !1562, line: 324, baseType: !2101, size: 64, align: 64, offset: 59648)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "q_inter_matrix", scope: !1561, file: !1562, line: 325, baseType: !2101, size: 64, align: 64, offset: 59712)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "q_intra_matrix16", scope: !1561, file: !1562, line: 327, baseType: !2106, size: 64, align: 64, offset: 59776)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64, align: 64)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1434, size: 2048, align: 16, elements: !2009)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "q_chroma_intra_matrix16", scope: !1561, file: !1562, line: 328, baseType: !2106, size: 64, align: 64, offset: 59840)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "q_inter_matrix16", scope: !1561, file: !1562, line: 329, baseType: !2106, size: 64, align: 64, offset: 59904)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "dct_error_sum", scope: !1561, file: !1562, line: 332, baseType: !2101, size: 64, align: 64, offset: 59968)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "dct_count", scope: !1561, file: !1562, line: 333, baseType: !2112, size: 64, align: 32, offset: 60032)
!2112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 64, align: 32, elements: !1638)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "dct_offset", scope: !1561, file: !1562, line: 334, baseType: !2114, size: 64, align: 64, offset: 60096)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64, align: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "total_bits", scope: !1561, file: !1562, line: 337, baseType: !1037, size: 64, align: 64, offset: 60160)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "frame_bits", scope: !1561, file: !1562, line: 338, baseType: !971, size: 32, align: 32, offset: 60224)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "stuffing_bits", scope: !1561, file: !1562, line: 339, baseType: !971, size: 32, align: 32, offset: 60256)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "next_lambda", scope: !1561, file: !1562, line: 340, baseType: !971, size: 32, align: 32, offset: 60288)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "rc_context", scope: !1561, file: !1562, line: 341, baseType: !2120, size: 3584, align: 64, offset: 60352)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "RateControlContext", file: !2121, line: 87, baseType: !2122)
!2121 = !DIFile(filename: "libavcodec/ratecontrol.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RateControlContext", file: !2121, line: 63, size: 3584, align: 64, elements: !2123)
!2123 = !{!2124, !2125, !2146, !2147, !2155, !2156, !2157, !2158, !2159, !2160, !2162, !2163, !2164, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !2122, file: !2121, line: 64, baseType: !971, size: 32, align: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2122, file: !2121, line: 65, baseType: !2126, size: 64, align: 64, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64, align: 64)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "RateControlEntry", file: !2121, line: 58, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RateControlEntry", file: !2121, line: 41, size: 640, align: 64, elements: !2129)
!2129 = !{!2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "pict_type", scope: !2128, file: !2121, line: 42, baseType: !971, size: 32, align: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "qscale", scope: !2128, file: !2121, line: 43, baseType: !1403, size: 32, align: 32, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !2128, file: !2121, line: 44, baseType: !971, size: 32, align: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !2128, file: !2121, line: 45, baseType: !971, size: 32, align: 32, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !2128, file: !2121, line: 46, baseType: !971, size: 32, align: 32, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !2128, file: !2121, line: 47, baseType: !971, size: 32, align: 32, offset: 160)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !2128, file: !2121, line: 48, baseType: !971, size: 32, align: 32, offset: 192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "expected_bits", scope: !2128, file: !2121, line: 49, baseType: !1010, size: 64, align: 64, offset: 256)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "new_pict_type", scope: !2128, file: !2121, line: 50, baseType: !971, size: 32, align: 32, offset: 320)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "new_qscale", scope: !2128, file: !2121, line: 51, baseType: !1403, size: 32, align: 32, offset: 352)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "mc_mb_var_sum", scope: !2128, file: !2121, line: 52, baseType: !1037, size: 64, align: 64, offset: 384)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "mb_var_sum", scope: !2128, file: !2121, line: 53, baseType: !1037, size: 64, align: 64, offset: 448)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !2128, file: !2121, line: 54, baseType: !971, size: 32, align: 32, offset: 512)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !2128, file: !2121, line: 55, baseType: !971, size: 32, align: 32, offset: 544)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "f_code", scope: !2128, file: !2121, line: 56, baseType: !971, size: 32, align: 32, offset: 576)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "b_code", scope: !2128, file: !2121, line: 57, baseType: !971, size: 32, align: 32, offset: 608)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_index", scope: !2122, file: !2121, line: 66, baseType: !1040, size: 64, align: 64, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !2122, file: !2121, line: 67, baseType: !2148, size: 960, align: 64, offset: 192)
!2148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2149, size: 960, align: 64, elements: !1758)
!2149 = !DIDerivedType(tag: DW_TAG_typedef, name: "Predictor", file: !2121, line: 39, baseType: !2150)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Predictor", file: !2121, line: 35, size: 192, align: 64, elements: !2151)
!2151 = !{!2152, !2153, !2154}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "coeff", scope: !2150, file: !2121, line: 36, baseType: !1040, size: 64, align: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2150, file: !2121, line: 37, baseType: !1040, size: 64, align: 64, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "decay", scope: !2150, file: !2121, line: 38, baseType: !1040, size: 64, align: 64, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "short_term_qsum", scope: !2122, file: !2121, line: 68, baseType: !1040, size: 64, align: 64, offset: 1152)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "short_term_qcount", scope: !2122, file: !2121, line: 69, baseType: !1040, size: 64, align: 64, offset: 1216)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "pass1_rc_eq_output_sum", scope: !2122, file: !2121, line: 70, baseType: !1040, size: 64, align: 64, offset: 1280)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "pass1_wanted_bits", scope: !2122, file: !2121, line: 71, baseType: !1040, size: 64, align: 64, offset: 1344)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "last_qscale", scope: !2122, file: !2121, line: 72, baseType: !1040, size: 64, align: 64, offset: 1408)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "last_qscale_for", scope: !2122, file: !2121, line: 73, baseType: !2161, size: 320, align: 64, offset: 1472)
!2161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1040, size: 320, align: 64, elements: !1758)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "last_mc_mb_var_sum", scope: !2122, file: !2121, line: 74, baseType: !1037, size: 64, align: 64, offset: 1792)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "last_mb_var_sum", scope: !2122, file: !2121, line: 75, baseType: !1037, size: 64, align: 64, offset: 1856)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "i_cplx_sum", scope: !2122, file: !2121, line: 76, baseType: !2165, size: 320, align: 64, offset: 1920)
!2165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 320, align: 64, elements: !1758)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "p_cplx_sum", scope: !2122, file: !2121, line: 77, baseType: !2165, size: 320, align: 64, offset: 2240)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits_sum", scope: !2122, file: !2121, line: 78, baseType: !2165, size: 320, align: 64, offset: 2560)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "qscale_sum", scope: !2122, file: !2121, line: 79, baseType: !2165, size: 320, align: 64, offset: 2880)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "frame_count", scope: !2122, file: !2121, line: 80, baseType: !1757, size: 160, align: 32, offset: 3200)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "last_non_b_pict_type", scope: !2122, file: !2121, line: 81, baseType: !971, size: 32, align: 32, offset: 3360)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "non_lavc_opaque", scope: !2122, file: !2121, line: 83, baseType: !974, size: 64, align: 64, offset: 3392)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "dry_run_qscale", scope: !2122, file: !2121, line: 84, baseType: !1403, size: 32, align: 32, offset: 3456)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "last_picture_number", scope: !2122, file: !2121, line: 85, baseType: !971, size: 32, align: 32, offset: 3488)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "rc_eq_eval", scope: !2122, file: !2121, line: 86, baseType: !2175, size: 64, align: 64, offset: 3520)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64, align: 64)
!2176 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVExpr", file: !2177, line: 31, baseType: !2178)
!2177 = !DIFile(filename: "./libavutil/eval.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2178 = !DICompositeType(tag: DW_TAG_structure_type, name: "AVExpr", file: !2177, line: 31, flags: DIFlagFwdDecl)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "mv_bits", scope: !1561, file: !1562, line: 344, baseType: !971, size: 32, align: 32, offset: 63936)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "header_bits", scope: !1561, file: !1562, line: 345, baseType: !971, size: 32, align: 32, offset: 63968)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !1561, file: !1562, line: 346, baseType: !971, size: 32, align: 32, offset: 64000)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "p_tex_bits", scope: !1561, file: !1562, line: 347, baseType: !971, size: 32, align: 32, offset: 64032)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1561, file: !1562, line: 348, baseType: !971, size: 32, align: 32, offset: 64064)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1561, file: !1562, line: 349, baseType: !971, size: 32, align: 32, offset: 64096)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "b_count", scope: !1561, file: !1562, line: 350, baseType: !971, size: 32, align: 32, offset: 64128)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !1561, file: !1562, line: 351, baseType: !971, size: 32, align: 32, offset: 64160)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "misc_bits", scope: !1561, file: !1562, line: 352, baseType: !971, size: 32, align: 32, offset: 64192)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "last_bits", scope: !1561, file: !1562, line: 353, baseType: !971, size: 32, align: 32, offset: 64224)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "resync_mb_x", scope: !1561, file: !1562, line: 356, baseType: !971, size: 32, align: 32, offset: 64256)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "resync_mb_y", scope: !1561, file: !1562, line: 357, baseType: !971, size: 32, align: 32, offset: 64288)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "last_resync_gb", scope: !1561, file: !1562, line: 358, baseType: !2192, size: 256, align: 64, offset: 64320)
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "GetBitContext", file: !2193, line: 70, baseType: !2194)
!2193 = !DIFile(filename: "libavcodec/get_bits.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GetBitContext", file: !2193, line: 61, size: 256, align: 64, elements: !2195)
!2195 = !{!2196, !2197, !2198, !2199, !2200}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2194, file: !2193, line: 62, baseType: !1547, size: 64, align: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2194, file: !2193, line: 62, baseType: !1547, size: 64, align: 64, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2194, file: !2193, line: 67, baseType: !971, size: 32, align: 32, offset: 128)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits", scope: !2194, file: !2193, line: 68, baseType: !971, size: 32, align: 32, offset: 160)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "size_in_bits_plus8", scope: !2194, file: !2193, line: 69, baseType: !971, size: 32, align: 32, offset: 192)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "mb_num_left", scope: !1561, file: !1562, line: 359, baseType: !971, size: 32, align: 32, offset: 64576)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "next_p_frame_damaged", scope: !1561, file: !1562, line: 360, baseType: !971, size: 32, align: 32, offset: 64608)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "parse_context", scope: !1561, file: !1562, line: 362, baseType: !2204, size: 384, align: 64, offset: 64640)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParseContext", file: !2205, line: 38, baseType: !2206)
!2205 = !DIFile(filename: "libavcodec/parser.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParseContext", file: !2205, line: 28, size: 384, align: 64, elements: !2207)
!2207 = !{!2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2206, file: !2205, line: 29, baseType: !1132, size: 64, align: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2206, file: !2205, line: 30, baseType: !971, size: 32, align: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "last_index", scope: !2206, file: !2205, line: 31, baseType: !971, size: 32, align: 32, offset: 96)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !2206, file: !2205, line: 32, baseType: !970, size: 32, align: 32, offset: 128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2206, file: !2205, line: 33, baseType: !968, size: 32, align: 32, offset: 160)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "frame_start_found", scope: !2206, file: !2205, line: 34, baseType: !971, size: 32, align: 32, offset: 192)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "overread", scope: !2206, file: !2205, line: 35, baseType: !971, size: 32, align: 32, offset: 224)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "overread_index", scope: !2206, file: !2205, line: 36, baseType: !971, size: 32, align: 32, offset: 256)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "state64", scope: !2206, file: !2205, line: 37, baseType: !1010, size: 64, align: 64, offset: 320)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "gob_index", scope: !1561, file: !1562, line: 365, baseType: !971, size: 32, align: 32, offset: 65024)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "obmc", scope: !1561, file: !1562, line: 366, baseType: !971, size: 32, align: 32, offset: 65056)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "mb_info", scope: !1561, file: !1562, line: 367, baseType: !971, size: 32, align: 32, offset: 65088)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "prev_mb_info", scope: !1561, file: !1562, line: 368, baseType: !971, size: 32, align: 32, offset: 65120)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "last_mb_info", scope: !1561, file: !1562, line: 368, baseType: !971, size: 32, align: 32, offset: 65152)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "mb_info_ptr", scope: !1561, file: !1562, line: 369, baseType: !1132, size: 64, align: 64, offset: 65216)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "mb_info_size", scope: !1561, file: !1562, line: 370, baseType: !971, size: 32, align: 32, offset: 65280)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "ehc_mode", scope: !1561, file: !1562, line: 371, baseType: !971, size: 32, align: 32, offset: 65312)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "rc_strategy", scope: !1561, file: !1562, line: 372, baseType: !971, size: 32, align: 32, offset: 65344)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "umvplus", scope: !1561, file: !1562, line: 375, baseType: !971, size: 32, align: 32, offset: 65376)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "h263_aic_dir", scope: !1561, file: !1562, line: 376, baseType: !971, size: 32, align: 32, offset: 65408)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "h263_slice_structured", scope: !1561, file: !1562, line: 377, baseType: !971, size: 32, align: 32, offset: 65440)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "alt_inter_vlc", scope: !1561, file: !1562, line: 378, baseType: !971, size: 32, align: 32, offset: 65472)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "modified_quant", scope: !1561, file: !1562, line: 379, baseType: !971, size: 32, align: 32, offset: 65504)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "loop_filter", scope: !1561, file: !1562, line: 380, baseType: !971, size: 32, align: 32, offset: 65536)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "custom_pcf", scope: !1561, file: !1562, line: 381, baseType: !971, size: 32, align: 32, offset: 65568)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "studio_profile", scope: !1561, file: !1562, line: 384, baseType: !971, size: 32, align: 32, offset: 65600)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "dct_precision", scope: !1561, file: !1562, line: 385, baseType: !971, size: 32, align: 32, offset: 65632)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "time_increment_bits", scope: !1561, file: !1562, line: 387, baseType: !971, size: 32, align: 32, offset: 65664)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "last_time_base", scope: !1561, file: !1562, line: 388, baseType: !971, size: 32, align: 32, offset: 65696)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "time_base", scope: !1561, file: !1562, line: 389, baseType: !971, size: 32, align: 32, offset: 65728)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1561, file: !1562, line: 390, baseType: !1037, size: 64, align: 64, offset: 65792)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "last_non_b_time", scope: !1561, file: !1562, line: 391, baseType: !1037, size: 64, align: 64, offset: 65856)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "pp_time", scope: !1561, file: !1562, line: 392, baseType: !1434, size: 16, align: 16, offset: 65920)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "pb_time", scope: !1561, file: !1562, line: 393, baseType: !1434, size: 16, align: 16, offset: 65936)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "pp_field_time", scope: !1561, file: !1562, line: 394, baseType: !1434, size: 16, align: 16, offset: 65952)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "pb_field_time", scope: !1561, file: !1562, line: 395, baseType: !1434, size: 16, align: 16, offset: 65968)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "real_sprite_warping_points", scope: !1561, file: !1562, line: 396, baseType: !971, size: 32, align: 32, offset: 65984)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_offset", scope: !1561, file: !1562, line: 397, baseType: !2003, size: 128, align: 32, offset: 66016)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_delta", scope: !1561, file: !1562, line: 398, baseType: !2003, size: 128, align: 32, offset: 66144)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "mcsel", scope: !1561, file: !1562, line: 399, baseType: !971, size: 32, align: 32, offset: 66272)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "quant_precision", scope: !1561, file: !1562, line: 400, baseType: !971, size: 32, align: 32, offset: 66304)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "quarter_sample", scope: !1561, file: !1562, line: 401, baseType: !971, size: 32, align: 32, offset: 66336)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "aspect_ratio_info", scope: !1561, file: !1562, line: 402, baseType: !971, size: 32, align: 32, offset: 66368)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_warping_accuracy", scope: !1561, file: !1562, line: 403, baseType: !971, size: 32, align: 32, offset: 66400)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "data_partitioning", scope: !1561, file: !1562, line: 404, baseType: !971, size: 32, align: 32, offset: 66432)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "partitioned_frame", scope: !1561, file: !1562, line: 405, baseType: !971, size: 32, align: 32, offset: 66464)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "low_delay", scope: !1561, file: !1562, line: 406, baseType: !971, size: 32, align: 32, offset: 66496)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "vo_type", scope: !1561, file: !1562, line: 407, baseType: !971, size: 32, align: 32, offset: 66528)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pb", scope: !1561, file: !1562, line: 408, baseType: !1684, size: 320, align: 64, offset: 66560)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "pb2", scope: !1561, file: !1562, line: 409, baseType: !1684, size: 320, align: 64, offset: 66880)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_quant", scope: !1561, file: !1562, line: 410, baseType: !971, size: 32, align: 32, offset: 67200)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "padding_bug_score", scope: !1561, file: !1562, line: 411, baseType: !971, size: 32, align: 32, offset: 67232)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "divx_packed", scope: !1561, file: !1562, line: 414, baseType: !971, size: 32, align: 32, offset: 67264)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_buffer", scope: !1561, file: !1562, line: 415, baseType: !1132, size: 64, align: 64, offset: 67328)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "bitstream_buffer_size", scope: !1561, file: !1562, line: 416, baseType: !971, size: 32, align: 32, offset: 67392)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bitstream_buffer_size", scope: !1561, file: !1562, line: 417, baseType: !970, size: 32, align: 32, offset: 67424)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "rv10_version", scope: !1561, file: !1562, line: 420, baseType: !971, size: 32, align: 32, offset: 67456)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "rv10_first_dc_coded", scope: !1561, file: !1562, line: 421, baseType: !1709, size: 96, align: 32, offset: 67488)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "mjpeg_ctx", scope: !1561, file: !1562, line: 424, baseType: !2267, size: 64, align: 64, offset: 67584)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64, align: 64)
!2268 = !DICompositeType(tag: DW_TAG_structure_type, name: "MJpegContext", file: !1562, line: 424, flags: DIFlagFwdDecl)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "esc_pos", scope: !1561, file: !1562, line: 425, baseType: !971, size: 32, align: 32, offset: 67648)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "pred", scope: !1561, file: !1562, line: 426, baseType: !971, size: 32, align: 32, offset: 67680)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "huffman", scope: !1561, file: !1562, line: 427, baseType: !971, size: 32, align: 32, offset: 67712)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "mv_table_index", scope: !1561, file: !1562, line: 430, baseType: !971, size: 32, align: 32, offset: 67744)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "rl_table_index", scope: !1561, file: !1562, line: 431, baseType: !971, size: 32, align: 32, offset: 67776)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "rl_chroma_table_index", scope: !1561, file: !1562, line: 432, baseType: !971, size: 32, align: 32, offset: 67808)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "dc_table_index", scope: !1561, file: !1562, line: 433, baseType: !971, size: 32, align: 32, offset: 67840)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "use_skip_mb_code", scope: !1561, file: !1562, line: 434, baseType: !971, size: 32, align: 32, offset: 67872)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "slice_height", scope: !1561, file: !1562, line: 435, baseType: !971, size: 32, align: 32, offset: 67904)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "first_slice_line", scope: !1561, file: !1562, line: 436, baseType: !971, size: 32, align: 32, offset: 67936)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "flipflop_rounding", scope: !1561, file: !1562, line: 437, baseType: !971, size: 32, align: 32, offset: 67968)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "msmpeg4_version", scope: !1561, file: !1562, line: 438, baseType: !971, size: 32, align: 32, offset: 68000)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "per_mb_rl_table", scope: !1561, file: !1562, line: 439, baseType: !971, size: 32, align: 32, offset: 68032)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "esc3_level_length", scope: !1561, file: !1562, line: 440, baseType: !971, size: 32, align: 32, offset: 68064)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "esc3_run_length", scope: !1561, file: !1562, line: 441, baseType: !971, size: 32, align: 32, offset: 68096)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ac_stats", scope: !1561, file: !1562, line: 443, baseType: !2285, size: 64, align: 64, offset: 68160)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 64, align: 64)
!2286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 540800, align: 32, elements: !2287)
!2287 = !{!1639, !2288, !2288, !1639}
!2288 = !DISubrange(count: 65)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "inter_intra_pred", scope: !1561, file: !1562, line: 444, baseType: !971, size: 32, align: 32, offset: 68224)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "mspel", scope: !1561, file: !1562, line: 445, baseType: !971, size: 32, align: 32, offset: 68256)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !1561, file: !1562, line: 448, baseType: !2192, size: 256, align: 64, offset: 68288)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "gop_picture_number", scope: !1561, file: !1562, line: 451, baseType: !971, size: 32, align: 32, offset: 68544)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "last_mv_dir", scope: !1561, file: !1562, line: 452, baseType: !971, size: 32, align: 32, offset: 68576)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay_ptr", scope: !1561, file: !1562, line: 453, baseType: !1132, size: 64, align: 64, offset: 68608)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "progressive_sequence", scope: !1561, file: !1562, line: 456, baseType: !971, size: 32, align: 32, offset: 68672)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_f_code", scope: !1561, file: !1562, line: 457, baseType: !2003, size: 128, align: 32, offset: 68704)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "picture_structure", scope: !1561, file: !1562, line: 460, baseType: !971, size: 32, align: 32, offset: 68832)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "timecode_frame_start", scope: !1561, file: !1562, line: 462, baseType: !1037, size: 64, align: 64, offset: 68864)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "intra_dc_precision", scope: !1561, file: !1562, line: 463, baseType: !971, size: 32, align: 32, offset: 68928)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "frame_pred_frame_dct", scope: !1561, file: !1562, line: 464, baseType: !971, size: 32, align: 32, offset: 68960)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "top_field_first", scope: !1561, file: !1562, line: 465, baseType: !971, size: 32, align: 32, offset: 68992)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "concealment_motion_vectors", scope: !1561, file: !1562, line: 466, baseType: !971, size: 32, align: 32, offset: 69024)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "q_scale_type", scope: !1561, file: !1562, line: 467, baseType: !971, size: 32, align: 32, offset: 69056)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "brd_scale", scope: !1561, file: !1562, line: 468, baseType: !971, size: 32, align: 32, offset: 69088)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "intra_vlc_format", scope: !1561, file: !1562, line: 469, baseType: !971, size: 32, align: 32, offset: 69120)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "alternate_scan", scope: !1561, file: !1562, line: 470, baseType: !971, size: 32, align: 32, offset: 69152)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "seq_disp_ext", scope: !1561, file: !1562, line: 471, baseType: !971, size: 32, align: 32, offset: 69184)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "video_format", scope: !1561, file: !1562, line: 472, baseType: !971, size: 32, align: 32, offset: 69216)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_first_field", scope: !1561, file: !1562, line: 479, baseType: !971, size: 32, align: 32, offset: 69248)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_420_type", scope: !1561, file: !1562, line: 480, baseType: !971, size: 32, align: 32, offset: 69280)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_format", scope: !1561, file: !1562, line: 481, baseType: !971, size: 32, align: 32, offset: 69312)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_x_shift", scope: !1561, file: !1562, line: 485, baseType: !971, size: 32, align: 32, offset: 69344)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_y_shift", scope: !1561, file: !1562, line: 486, baseType: !971, size: 32, align: 32, offset: 69376)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "progressive_frame", scope: !1561, file: !1562, line: 488, baseType: !971, size: 32, align: 32, offset: 69408)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "full_pel", scope: !1561, file: !1562, line: 489, baseType: !2112, size: 64, align: 32, offset: 69440)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "interlaced_dct", scope: !1561, file: !1562, line: 490, baseType: !971, size: 32, align: 32, offset: 69504)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "first_field", scope: !1561, file: !1562, line: 491, baseType: !971, size: 32, align: 32, offset: 69536)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "drop_frame_timecode", scope: !1561, file: !1562, line: 492, baseType: !971, size: 32, align: 32, offset: 69568)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "scan_offset", scope: !1561, file: !1562, line: 493, baseType: !971, size: 32, align: 32, offset: 69600)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_mode", scope: !1561, file: !1562, line: 496, baseType: !971, size: 32, align: 32, offset: 69632)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "rtp_payload_size", scope: !1561, file: !1562, line: 497, baseType: !971, size: 32, align: 32, offset: 69664)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "tc_opt_str", scope: !1561, file: !1562, line: 499, baseType: !1521, size: 64, align: 64, offset: 69696)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1561, file: !1562, line: 500, baseType: !2324, size: 160, align: 32, offset: 69760)
!2324 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVTimecode", file: !2325, line: 46, baseType: !2326)
!2325 = !DIFile(filename: "./libavutil/timecode.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2325, line: 41, size: 160, align: 32, elements: !2327)
!2327 = !{!2328, !2329, !2330, !2331}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2326, file: !2325, line: 42, baseType: !971, size: 32, align: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2326, file: !2325, line: 43, baseType: !968, size: 32, align: 32, offset: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !2326, file: !2325, line: 44, baseType: !992, size: 64, align: 32, offset: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "fps", scope: !2326, file: !2325, line: 45, baseType: !970, size: 32, align: 32, offset: 128)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_lastgob", scope: !1561, file: !1562, line: 502, baseType: !1132, size: 64, align: 64, offset: 69952)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "swap_uv", scope: !1561, file: !1562, line: 503, baseType: !971, size: 32, align: 32, offset: 70016)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "pack_pblocks", scope: !1561, file: !1562, line: 504, baseType: !971, size: 32, align: 32, offset: 70048)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "pblocks", scope: !1561, file: !1562, line: 505, baseType: !2336, size: 768, align: 64, offset: 70080)
!2336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2337, size: 768, align: 64, elements: !1571)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64, align: 64)
!2338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 1024, align: 16, elements: !1581)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1561, file: !1562, line: 507, baseType: !2337, size: 64, align: 64, offset: 70848)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1561, file: !1562, line: 508, baseType: !2341, size: 64, align: 64, offset: 70912)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64, align: 64)
!2342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 12288, align: 16, elements: !2343)
!2343 = !{!1572, !1582}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !1561, file: !1562, line: 509, baseType: !2345, size: 64, align: 64, offset: 70976)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64, align: 64)
!2346 = !DISubroutineType(types: !2347)
!2347 = !{!971, !1560, !2337}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "block32", scope: !1561, file: !1562, line: 511, baseType: !2349, size: 64, align: 64, offset: 71040)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64, align: 64)
!2350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2351, size: 24576, align: 32, elements: !2343)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !969, line: 38, baseType: !971)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "dpcm_direction", scope: !1561, file: !1562, line: 512, baseType: !971, size: 32, align: 32, offset: 71104)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "dpcm_macroblock", scope: !1561, file: !1562, line: 513, baseType: !2354, size: 64, align: 64, offset: 71168)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64, align: 64)
!2355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 12288, align: 16, elements: !2356)
!2356 = !{!1711, !2357}
!2357 = !DISubrange(count: 256)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg1_intra", scope: !1561, file: !1562, line: 520, baseType: !2359, size: 64, align: 64, offset: 71232)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64, align: 64)
!2360 = !DISubroutineType(types: !2361)
!2361 = !{null, !1560, !1713, !971, !971}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg1_inter", scope: !1561, file: !1562, line: 522, baseType: !2359, size: 64, align: 64, offset: 71296)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg2_intra", scope: !1561, file: !1562, line: 524, baseType: !2359, size: 64, align: 64, offset: 71360)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_mpeg2_inter", scope: !1561, file: !1562, line: 526, baseType: !2359, size: 64, align: 64, offset: 71424)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_h263_intra", scope: !1561, file: !1562, line: 528, baseType: !2359, size: 64, align: 64, offset: 71488)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_h263_inter", scope: !1561, file: !1562, line: 530, baseType: !2359, size: 64, align: 64, offset: 71552)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_intra", scope: !1561, file: !1562, line: 532, baseType: !2359, size: 64, align: 64, offset: 71616)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "dct_unquantize_inter", scope: !1561, file: !1562, line: 534, baseType: !2359, size: 64, align: 64, offset: 71680)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "dct_quantize", scope: !1561, file: !1562, line: 536, baseType: !2370, size: 64, align: 64, offset: 71744)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64, align: 64)
!2371 = !DISubroutineType(types: !2372)
!2372 = !{!971, !1560, !1713, !971, !971, !1396}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "fast_dct_quantize", scope: !1561, file: !1562, line: 537, baseType: !2370, size: 64, align: 64, offset: 71808)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "denoise_dct", scope: !1561, file: !1562, line: 538, baseType: !2375, size: 64, align: 64, offset: 71872)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 64, align: 64)
!2376 = !DISubroutineType(types: !2377)
!2377 = !{null, !1560, !1713}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "mpv_flags", scope: !1561, file: !1562, line: 540, baseType: !971, size: 32, align: 32, offset: 71936)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "quantizer_noise_shaping", scope: !1561, file: !1562, line: 541, baseType: !971, size: 32, align: 32, offset: 71968)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "rc_qsquish", scope: !1561, file: !1562, line: 547, baseType: !1403, size: 32, align: 32, offset: 72000)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "rc_qmod_amp", scope: !1561, file: !1562, line: 548, baseType: !1403, size: 32, align: 32, offset: 72032)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "rc_qmod_freq", scope: !1561, file: !1562, line: 549, baseType: !971, size: 32, align: 32, offset: 72064)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "rc_initial_cplx", scope: !1561, file: !1562, line: 550, baseType: !1403, size: 32, align: 32, offset: 72096)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_aggressivity", scope: !1561, file: !1562, line: 551, baseType: !1403, size: 32, align: 32, offset: 72128)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "border_masking", scope: !1561, file: !1562, line: 552, baseType: !1403, size: 32, align: 32, offset: 72160)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "lmin", scope: !1561, file: !1562, line: 553, baseType: !971, size: 32, align: 32, offset: 72192)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "lmax", scope: !1561, file: !1562, line: 553, baseType: !971, size: 32, align: 32, offset: 72224)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_ignore_qmax", scope: !1561, file: !1562, line: 554, baseType: !971, size: 32, align: 32, offset: 72256)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "rc_eq", scope: !1561, file: !1562, line: 556, baseType: !1521, size: 64, align: 64, offset: 72320)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "cplx_tab", scope: !1561, file: !1562, line: 559, baseType: !2391, size: 64, align: 64, offset: 72384)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64, align: 64)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "bits_tab", scope: !1561, file: !1562, line: 559, baseType: !2391, size: 64, align: 64, offset: 72448)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "context_reinit", scope: !1561, file: !1562, line: 563, baseType: !971, size: 32, align: 32, offset: 72512)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "er", scope: !1561, file: !1562, line: 565, baseType: !2395, size: 12160, align: 64, offset: 72576)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "ERContext", file: !2396, line: 90, baseType: !2397)
!2396 = !DIFile(filename: "libavcodec/error_resilience.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ERContext", file: !2396, line: 53, size: 12160, align: 64, elements: !2398)
!2398 = !{!2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2443}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2397, file: !2396, line: 54, baseType: !1104, size: 64, align: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "mecc", scope: !2397, file: !2396, line: 55, baseType: !1837, size: 8640, align: 64, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "mecc_inited", scope: !2397, file: !2396, line: 56, baseType: !971, size: 32, align: 32, offset: 8704)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "mb_index2xy", scope: !2397, file: !2396, line: 58, baseType: !1396, size: 64, align: 64, offset: 8768)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "mb_num", scope: !2397, file: !2396, line: 59, baseType: !971, size: 32, align: 32, offset: 8832)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "mb_width", scope: !2397, file: !2396, line: 60, baseType: !971, size: 32, align: 32, offset: 8864)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "mb_height", scope: !2397, file: !2396, line: 60, baseType: !971, size: 32, align: 32, offset: 8896)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "mb_stride", scope: !2397, file: !2396, line: 61, baseType: !1620, size: 64, align: 64, offset: 8960)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "b8_stride", scope: !2397, file: !2396, line: 62, baseType: !1620, size: 64, align: 64, offset: 9024)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2397, file: !2396, line: 64, baseType: !2409, size: 32, align: 32, offset: 9088)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_int", file: !2410, line: 46, baseType: !971)
!2410 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdatomic.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "error_occurred", scope: !2397, file: !2396, line: 65, baseType: !971, size: 32, align: 32, offset: 9120)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "error_status_table", scope: !2397, file: !2396, line: 66, baseType: !1132, size: 64, align: 64, offset: 9152)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "er_temp_buffer", scope: !2397, file: !2396, line: 67, baseType: !1132, size: 64, align: 64, offset: 9216)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "dc_val", scope: !2397, file: !2396, line: 68, baseType: !1715, size: 192, align: 64, offset: 9280)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "mbskip_table", scope: !2397, file: !2396, line: 69, baseType: !1132, size: 64, align: 64, offset: 9472)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "mbintra_table", scope: !2397, file: !2396, line: 70, baseType: !1132, size: 64, align: 64, offset: 9536)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !2397, file: !2396, line: 71, baseType: !2000, size: 512, align: 32, offset: 9600)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "cur_pic", scope: !2397, file: !2396, line: 73, baseType: !2419, size: 512, align: 64, offset: 10112)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "ERPicture", file: !2396, line: 51, baseType: !2420)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ERPicture", file: !2396, line: 41, size: 512, align: 64, elements: !2421)
!2421 = !{!2422, !2423, !2425, !2426, !2427, !2428}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2420, file: !2396, line: 42, baseType: !1126, size: 64, align: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !2420, file: !2396, line: 43, baseType: !2424, size: 64, align: 64, offset: 64)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64, align: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val", scope: !2420, file: !2396, line: 46, baseType: !1646, size: 128, align: 64, offset: 128)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index", scope: !2420, file: !2396, line: 47, baseType: !1658, size: 128, align: 64, offset: 256)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !2420, file: !2396, line: 49, baseType: !1653, size: 64, align: 64, offset: 384)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "field_picture", scope: !2420, file: !2396, line: 50, baseType: !971, size: 32, align: 32, offset: 448)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "last_pic", scope: !2397, file: !2396, line: 74, baseType: !2419, size: 512, align: 64, offset: 10624)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "next_pic", scope: !2397, file: !2396, line: 75, baseType: !2419, size: 512, align: 64, offset: 11136)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "ref_index_buf", scope: !2397, file: !2396, line: 77, baseType: !1644, size: 128, align: 64, offset: 11648)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "motion_val_buf", scope: !2397, file: !2396, line: 78, baseType: !1644, size: 128, align: 64, offset: 11776)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "pp_time", scope: !2397, file: !2396, line: 80, baseType: !1434, size: 16, align: 16, offset: 11904)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "pb_time", scope: !2397, file: !2396, line: 81, baseType: !1434, size: 16, align: 16, offset: 11920)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "quarter_sample", scope: !2397, file: !2396, line: 82, baseType: !971, size: 32, align: 32, offset: 11936)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "partitioned_frame", scope: !2397, file: !2396, line: 83, baseType: !971, size: 32, align: 32, offset: 11968)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !2397, file: !2396, line: 84, baseType: !971, size: 32, align: 32, offset: 12000)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "decode_mb", scope: !2397, file: !2396, line: 86, baseType: !2439, size: 64, align: 64, offset: 12032)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64, align: 64)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{null, !974, !971, !971, !971, !2442, !971, !971, !971, !971}
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64, align: 64)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "opaque", scope: !2397, file: !2396, line: 89, baseType: !974, size: 64, align: 64, offset: 12096)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "error_rate", scope: !1561, file: !1562, line: 567, baseType: !971, size: 32, align: 32, offset: 84736)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_frames", scope: !1561, file: !1562, line: 570, baseType: !2446, size: 1152, align: 64, offset: 84800)
!2446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1126, size: 1152, align: 64, elements: !2447)
!2447 = !{!2448}
!2448 = !DISubrange(count: 18)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_strategy", scope: !1561, file: !1562, line: 571, baseType: !971, size: 32, align: 32, offset: 85952)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "b_sensitivity", scope: !1561, file: !1562, line: 572, baseType: !971, size: 32, align: 32, offset: 85984)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_threshold", scope: !1561, file: !1562, line: 575, baseType: !971, size: 32, align: 32, offset: 86016)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_factor", scope: !1561, file: !1562, line: 576, baseType: !971, size: 32, align: 32, offset: 86048)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_exp", scope: !1561, file: !1562, line: 577, baseType: !971, size: 32, align: 32, offset: 86080)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "frame_skip_cmp", scope: !1561, file: !1562, line: 578, baseType: !971, size: 32, align: 32, offset: 86112)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "scenechange_threshold", scope: !1561, file: !1562, line: 580, baseType: !971, size: 32, align: 32, offset: 86144)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "noise_reduction", scope: !1561, file: !1562, line: 581, baseType: !971, size: 32, align: 32, offset: 86176)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1532, file: !57, line: 3766, baseType: !1101, size: 64, align: 64, offset: 640)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "uninit", scope: !1532, file: !57, line: 3774, baseType: !1101, size: 64, align: 64, offset: 704)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "priv_data_size", scope: !1532, file: !57, line: 3780, baseType: !971, size: 32, align: 32, offset: 768)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !1532, file: !57, line: 3785, baseType: !971, size: 32, align: 32, offset: 800)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "frame_params", scope: !1532, file: !57, line: 3795, baseType: !2462, size: 64, align: 64, offset: 832)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64, align: 64)
!2463 = !DISubroutineType(types: !2464)
!2464 = !{!971, !1104, !1164}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_context", scope: !1106, file: !57, line: 2728, baseType: !974, size: 64, align: 64, offset: 5440)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1106, file: !57, line: 2735, baseType: !1154, size: 512, align: 64, offset: 5504)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "dct_algo", scope: !1106, file: !57, line: 2742, baseType: !971, size: 32, align: 32, offset: 6016)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "idct_algo", scope: !1106, file: !57, line: 2755, baseType: !971, size: 32, align: 32, offset: 6048)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_coded_sample", scope: !1106, file: !57, line: 2776, baseType: !971, size: 32, align: 32, offset: 6080)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_raw_sample", scope: !1106, file: !57, line: 2783, baseType: !971, size: 32, align: 32, offset: 6112)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !1106, file: !57, line: 2791, baseType: !971, size: 32, align: 32, offset: 6144)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !1106, file: !57, line: 2802, baseType: !1126, size: 64, align: 64, offset: 6208)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "thread_count", scope: !1106, file: !57, line: 2811, baseType: !971, size: 32, align: 32, offset: 6272)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "thread_type", scope: !1106, file: !57, line: 2821, baseType: !971, size: 32, align: 32, offset: 6304)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "active_thread_type", scope: !1106, file: !57, line: 2830, baseType: !971, size: 32, align: 32, offset: 6336)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "thread_safe_callbacks", scope: !1106, file: !57, line: 2840, baseType: !971, size: 32, align: 32, offset: 6368)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !1106, file: !57, line: 2851, baseType: !2478, size: 64, align: 64, offset: 6400)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64, align: 64)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{!971, !1393, !2481, !974, !1396, !971, !971}
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64, align: 64)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{!971, !1393, !974}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "execute2", scope: !1106, file: !57, line: 2871, baseType: !2485, size: 64, align: 64, offset: 6464)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64, align: 64)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{!971, !1393, !2488, !974, !1396, !971}
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64, align: 64)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{!971, !1393, !974, !971, !971}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "nsse_weight", scope: !1106, file: !57, line: 2878, baseType: !971, size: 32, align: 32, offset: 6528)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1106, file: !57, line: 2885, baseType: !971, size: 32, align: 32, offset: 6560)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1106, file: !57, line: 3005, baseType: !971, size: 32, align: 32, offset: 6592)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "skip_loop_filter", scope: !1106, file: !57, line: 3013, baseType: !914, size: 32, align: 32, offset: 6624)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "skip_idct", scope: !1106, file: !57, line: 3020, baseType: !914, size: 32, align: 32, offset: 6656)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "skip_frame", scope: !1106, file: !57, line: 3027, baseType: !914, size: 32, align: 32, offset: 6688)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header", scope: !1106, file: !57, line: 3037, baseType: !1132, size: 64, align: 64, offset: 6720)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "subtitle_header_size", scope: !1106, file: !57, line: 3038, baseType: !971, size: 32, align: 32, offset: 6784)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "vbv_delay", scope: !1106, file: !57, line: 3050, baseType: !1010, size: 64, align: 64, offset: 6848)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "side_data_only_packets", scope: !1106, file: !57, line: 3065, baseType: !971, size: 32, align: 32, offset: 6912)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "initial_padding", scope: !1106, file: !57, line: 3083, baseType: !971, size: 32, align: 32, offset: 6944)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "framerate", scope: !1106, file: !57, line: 3092, baseType: !992, size: 64, align: 32, offset: 6976)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "sw_pix_fmt", scope: !1106, file: !57, line: 3099, baseType: !516, size: 32, align: 32, offset: 7040)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_timebase", scope: !1106, file: !57, line: 3106, baseType: !992, size: 64, align: 32, offset: 7072)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "codec_descriptor", scope: !1106, file: !57, line: 3113, baseType: !2506, size: 64, align: 64, offset: 7168)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 64, align: 64)
!2507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2508)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDescriptor", file: !57, line: 740, baseType: !2509)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDescriptor", file: !57, line: 712, size: 384, align: 64, elements: !2510)
!2510 = !{!2511, !2512, !2513, !2514, !2515, !2516, !2519}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2509, file: !57, line: 713, baseType: !56, size: 32, align: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2509, file: !57, line: 714, baseType: !46, size: 32, align: 32, offset: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2509, file: !57, line: 720, baseType: !982, size: 64, align: 64, offset: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "long_name", scope: !2509, file: !57, line: 724, baseType: !982, size: 64, align: 64, offset: 128)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !2509, file: !57, line: 728, baseType: !971, size: 32, align: 32, offset: 192)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "mime_types", scope: !2509, file: !57, line: 734, baseType: !2517, size: 64, align: 64, offset: 256)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64, align: 64)
!2518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !2509, file: !57, line: 739, baseType: !2520, size: 64, align: 64, offset: 320)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64, align: 64)
!2521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1092)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_pts", scope: !1106, file: !57, line: 3129, baseType: !1037, size: 64, align: 64, offset: 7232)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_num_faulty_dts", scope: !1106, file: !57, line: 3130, baseType: !1037, size: 64, align: 64, offset: 7296)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_pts", scope: !1106, file: !57, line: 3131, baseType: !1037, size: 64, align: 64, offset: 7360)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "pts_correction_last_dts", scope: !1106, file: !57, line: 3132, baseType: !1037, size: 64, align: 64, offset: 7424)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc", scope: !1106, file: !57, line: 3139, baseType: !1521, size: 64, align: 64, offset: 7488)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "sub_charenc_mode", scope: !1106, file: !57, line: 3147, baseType: !971, size: 32, align: 32, offset: 7552)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "skip_alpha", scope: !1106, file: !57, line: 3165, baseType: !971, size: 32, align: 32, offset: 7584)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "seek_preroll", scope: !1106, file: !57, line: 3172, baseType: !971, size: 32, align: 32, offset: 7616)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "debug_mv", scope: !1106, file: !57, line: 3180, baseType: !971, size: 32, align: 32, offset: 7648)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_intra_matrix", scope: !1106, file: !57, line: 3191, baseType: !1433, size: 64, align: 64, offset: 7680)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "dump_separator", scope: !1106, file: !57, line: 3199, baseType: !1132, size: 64, align: 64, offset: 7744)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "codec_whitelist", scope: !1106, file: !57, line: 3207, baseType: !1521, size: 64, align: 64, offset: 7808)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1106, file: !57, line: 3214, baseType: !970, size: 32, align: 32, offset: 7872)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "coded_side_data", scope: !1106, file: !57, line: 3224, baseType: !1262, size: 64, align: 64, offset: 7936)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "nb_coded_side_data", scope: !1106, file: !57, line: 3225, baseType: !971, size: 32, align: 32, offset: 8000)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "hw_frames_ctx", scope: !1106, file: !57, line: 3249, baseType: !1164, size: 64, align: 64, offset: 8064)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "sub_text_format", scope: !1106, file: !57, line: 3256, baseType: !971, size: 32, align: 32, offset: 8128)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "trailing_padding", scope: !1106, file: !57, line: 3271, baseType: !971, size: 32, align: 32, offset: 8160)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "max_pixels", scope: !1106, file: !57, line: 3279, baseType: !1037, size: 64, align: 64, offset: 8192)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "hw_device_ctx", scope: !1106, file: !57, line: 3301, baseType: !1164, size: 64, align: 64, offset: 8256)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel_flags", scope: !1106, file: !57, line: 3310, baseType: !971, size: 32, align: 32, offset: 8320)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "apply_cropping", scope: !1106, file: !57, line: 3337, baseType: !971, size: 32, align: 32, offset: 8352)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "extra_hw_frames", scope: !1106, file: !57, line: 3351, baseType: !971, size: 32, align: 32, offset: 8384)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "discard_damaged_percentage", scope: !1106, file: !57, line: 3359, baseType: !971, size: 32, align: 32, offset: 8416)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "update_thread_context", scope: !979, file: !57, line: 3535, baseType: !2547, size: 64, align: 64, offset: 1024)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64, align: 64)
!2548 = !DISubroutineType(types: !2549)
!2549 = !{!971, !1104, !2550}
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64, align: 64)
!2551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "defaults", scope: !979, file: !57, line: 3541, baseType: !2553, size: 64, align: 64, offset: 1088)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 64, align: 64)
!2554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2555)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecDefault", file: !57, line: 3461, baseType: !2556)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecDefault", file: !1120, line: 223, size: 128, align: 64, elements: !2557)
!2557 = !{!2558, !2559}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2556, file: !1120, line: 224, baseType: !1547, size: 64, align: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2556, file: !1120, line: 225, baseType: !1547, size: 64, align: 64, offset: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "init_static_data", scope: !979, file: !57, line: 3549, baseType: !2561, size: 64, align: 64, offset: 1152)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64, align: 64)
!2562 = !DISubroutineType(types: !2563)
!2563 = !{null, !1099}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !979, file: !57, line: 3551, baseType: !1101, size: 64, align: 64, offset: 1216)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "encode_sub", scope: !979, file: !57, line: 3552, baseType: !2566, size: 64, align: 64, offset: 1280)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64, align: 64)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{!971, !1104, !1132, !971, !2569}
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 64, align: 64)
!2570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2571)
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitle", file: !57, line: 3920, size: 256, align: 64, elements: !2572)
!2572 = !{!2573, !2574, !2575, !2576, !2577, !2601}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !2571, file: !57, line: 3921, baseType: !1434, size: 16, align: 16)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "start_display_time", scope: !2571, file: !57, line: 3922, baseType: !968, size: 32, align: 32, offset: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "end_display_time", scope: !2571, file: !57, line: 3923, baseType: !968, size: 32, align: 32, offset: 64)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "num_rects", scope: !2571, file: !57, line: 3924, baseType: !970, size: 32, align: 32, offset: 96)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "rects", scope: !2571, file: !57, line: 3925, baseType: !2578, size: 64, align: 64, offset: 128)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64, align: 64)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 64, align: 64)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVSubtitleRect", file: !57, line: 3918, baseType: !2581)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVSubtitleRect", file: !57, line: 3885, size: 1600, align: 64, elements: !2582)
!2582 = !{!2583, !2584, !2585, !2586, !2587, !2588, !2594, !2596, !2597, !2598, !2599, !2600}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2581, file: !57, line: 3886, baseType: !971, size: 32, align: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2581, file: !57, line: 3887, baseType: !971, size: 32, align: 32, offset: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2581, file: !57, line: 3888, baseType: !971, size: 32, align: 32, offset: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2581, file: !57, line: 3889, baseType: !971, size: 32, align: 32, offset: 96)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "nb_colors", scope: !2581, file: !57, line: 3890, baseType: !971, size: 32, align: 32, offset: 128)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "pict", scope: !2581, file: !57, line: 3897, baseType: !2589, size: 768, align: 64, offset: 192)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVPicture", file: !57, line: 3858, baseType: !2590)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVPicture", file: !57, line: 3853, size: 768, align: 64, elements: !2591)
!2591 = !{!2592, !2593}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2590, file: !57, line: 3855, baseType: !1131, size: 512, align: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !2590, file: !57, line: 3857, baseType: !1136, size: 256, align: 32, offset: 512)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2581, file: !57, line: 3903, baseType: !2595, size: 256, align: 64, offset: 960)
!2595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1132, size: 256, align: 64, elements: !1233)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "linesize", scope: !2581, file: !57, line: 3904, baseType: !1240, size: 128, align: 32, offset: 1216)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2581, file: !57, line: 3906, baseType: !733, size: 32, align: 32, offset: 1344)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2581, file: !57, line: 3908, baseType: !1521, size: 64, align: 64, offset: 1408)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ass", scope: !2581, file: !57, line: 3915, baseType: !1521, size: 64, align: 64, offset: 1472)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2581, file: !57, line: 3917, baseType: !971, size: 32, align: 32, offset: 1536)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "pts", scope: !2571, file: !57, line: 3926, baseType: !1037, size: 64, align: 64, offset: 192)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "encode2", scope: !979, file: !57, line: 3564, baseType: !2603, size: 64, align: 64, offset: 1344)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64, align: 64)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{!971, !1104, !1250, !1394, !1396}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !979, file: !57, line: 3566, baseType: !2607, size: 64, align: 64, offset: 1408)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64, align: 64)
!2608 = !DISubroutineType(types: !2609)
!2609 = !{!971, !1104, !974, !1396, !1250}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !979, file: !57, line: 3567, baseType: !1101, size: 64, align: 64, offset: 1472)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "send_frame", scope: !979, file: !57, line: 3576, baseType: !2612, size: 64, align: 64, offset: 1536)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64, align: 64)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{!971, !1104, !1394}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "receive_packet", scope: !979, file: !57, line: 3577, baseType: !2616, size: 64, align: 64, offset: 1600)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64, align: 64)
!2617 = !DISubroutineType(types: !2618)
!2618 = !{!971, !1104, !1250}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "receive_frame", scope: !979, file: !57, line: 3584, baseType: !1540, size: 64, align: 64, offset: 1664)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !979, file: !57, line: 3589, baseType: !2621, size: 64, align: 64, offset: 1728)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 64, align: 64)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{null, !1104}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "caps_internal", scope: !979, file: !57, line: 3594, baseType: !971, size: 32, align: 32, offset: 1792)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "bsfs", scope: !979, file: !57, line: 3600, baseType: !982, size: 64, align: 64, offset: 1856)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "hw_configs", scope: !979, file: !57, line: 3609, baseType: !2627, size: 64, align: 64, offset: 1920)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64, align: 64)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64, align: 64)
!2629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2630)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfigInternal", file: !2631, line: 29, size: 192, align: 64, elements: !2632)
!2631 = !DIFile(filename: "libavcodec/hwaccel.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2632 = !{!2633, !2640}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "public", scope: !2630, file: !2631, line: 34, baseType: !2634, size: 96, align: 32)
!2634 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVCodecHWConfig", file: !57, line: 3459, baseType: !2635)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AVCodecHWConfig", file: !57, line: 3442, size: 96, align: 32, elements: !2636)
!2636 = !{!2637, !2638, !2639}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "pix_fmt", scope: !2635, file: !57, line: 3446, baseType: !516, size: 32, align: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "methods", scope: !2635, file: !57, line: 3451, baseType: !971, size: 32, align: 32, offset: 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !2635, file: !57, line: 3458, baseType: !880, size: 32, align: 32, offset: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "hwaccel", scope: !2630, file: !2631, line: 39, baseType: !2641, size: 64, align: 64, offset: 128)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64, align: 64)
!2642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2643)
!2643 = !DIDerivedType(tag: DW_TAG_typedef, name: "AVHWAccel", file: !57, line: 3796, baseType: !1532)
!2644 = distinct !DIGlobalVariable(name: "ff_wmv3_decoder", scope: !0, file: !977, line: 1228, type: !978, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_wmv3_decoder)
!2645 = distinct !DIGlobalVariable(name: "ff_wmv3image_decoder", scope: !0, file: !977, line: 1266, type: !978, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_wmv3image_decoder)
!2646 = distinct !DIGlobalVariable(name: "ff_vc1image_decoder", scope: !0, file: !977, line: 1285, type: !978, isLocal: false, isDefinition: true, variable: %struct.AVCodec* @ff_vc1image_decoder)
!2647 = distinct !DIGlobalVariable(name: "vc1_hwaccel_pixfmt_list_420", scope: !0, file: !977, line: 1170, type: !2648, isLocal: true, isDefinition: true, variable: [2 x i32]* @vc1_hwaccel_pixfmt_list_420)
!2648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1000, size: 64, align: 32, elements: !1638)
!2649 = !{i32 2, !"Dwarf Version", i32 4}
!2650 = !{i32 2, !"Debug Info Version", i32 3}
!2651 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!2652 = distinct !DISubprogram(name: "ff_vc1_decode_init_alloc_tables", scope: !977, file: !977, line: 324, type: !2653, isLocal: false, isDefinition: true, scopeLine: 325, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!971, !2655}
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64, align: 64)
!2656 = !DIDerivedType(tag: DW_TAG_typedef, name: "VC1Context", file: !940, line: 403, baseType: !2657)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VC1Context", file: !940, line: 173, size: 135936, align: 64, elements: !2658)
!2658 = !{!2659, !2661, !2742, !2743, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2891, !2892, !2893, !2894, !2895, !2896, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2657, file: !940, line: 174, baseType: !2660, size: 86208, align: 64)
!2660 = !DIDerivedType(tag: DW_TAG_typedef, name: "MpegEncContext", file: !1562, line: 582, baseType: !1561)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "x8", scope: !2657, file: !940, line: 175, baseType: !2662, size: 8768, align: 64, offset: 86208)
!2662 = !DIDerivedType(tag: DW_TAG_typedef, name: "IntraX8Context", file: !2663, line: 75, baseType: !2664)
!2663 = !DIFile(filename: "libavcodec/intrax8.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IntraX8Context", file: !2663, line: 29, size: 8768, align: 64, elements: !2665)
!2665 = !{!2666, !2677, !2678, !2680, !2681, !2682, !2684, !2694, !2695, !2696, !2697, !2698, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2723, !2724, !2725, !2726, !2727, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "j_ac_vlc", scope: !2664, file: !2663, line: 30, baseType: !2667, size: 256, align: 64)
!2667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2668, size: 256, align: 64, elements: !1233)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64, align: 64)
!2669 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLC", file: !2670, line: 30, baseType: !2671)
!2670 = !DIFile(filename: "libavcodec/vlc.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VLC", file: !2670, line: 26, size: 192, align: 64, elements: !2672)
!2672 = !{!2673, !2674, !2675, !2676}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2671, file: !2670, line: 27, baseType: !971, size: 32, align: 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2671, file: !2670, line: 28, baseType: !1647, size: 64, align: 64, offset: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "table_size", scope: !2671, file: !2670, line: 29, baseType: !971, size: 32, align: 32, offset: 128)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "table_allocated", scope: !2671, file: !2670, line: 29, baseType: !971, size: 32, align: 32, offset: 160)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "j_orient_vlc", scope: !2664, file: !2663, line: 31, baseType: !2668, size: 64, align: 64, offset: 256)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "j_dc_vlc", scope: !2664, file: !2663, line: 32, baseType: !2679, size: 192, align: 64, offset: 320)
!2679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2668, size: 192, align: 64, elements: !1710)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "use_quant_matrix", scope: !2664, file: !2663, line: 34, baseType: !971, size: 32, align: 32, offset: 512)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "prediction_table", scope: !2664, file: !2663, line: 37, baseType: !1132, size: 64, align: 64, offset: 576)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "scantable", scope: !2664, file: !2663, line: 38, baseType: !2683, size: 3264, align: 64, offset: 640)
!2683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1575, size: 3264, align: 64, elements: !1710)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "wdsp", scope: !2664, file: !2663, line: 39, baseType: !2685, size: 704, align: 64, offset: 3904)
!2685 = !DIDerivedType(tag: DW_TAG_typedef, name: "WMV2DSPContext", file: !2686, line: 33, baseType: !2687)
!2686 = !DIFile(filename: "libavcodec/wmv2dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WMV2DSPContext", file: !2686, line: 26, size: 704, align: 64, elements: !2688)
!2688 = !{!2689, !2690, !2691, !2693}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "idct_add", scope: !2687, file: !2686, line: 27, baseType: !1829, size: 64, align: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "idct_put", scope: !2687, file: !2686, line: 28, baseType: !1829, size: 64, align: 64, offset: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "put_mspel_pixels_tab", scope: !2687, file: !2686, line: 30, baseType: !2692, size: 512, align: 64, offset: 128)
!2692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1938, size: 512, align: 64, elements: !1133)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "idct_perm", scope: !2687, file: !2686, line: 32, baseType: !971, size: 32, align: 32, offset: 640)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "idct_permutation", scope: !2664, file: !2663, line: 40, baseType: !1580, size: 512, align: 8, offset: 4608)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "avctx", scope: !2664, file: !2663, line: 41, baseType: !1104, size: 64, align: 64, offset: 5120)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "block_last_index", scope: !2664, file: !2663, line: 42, baseType: !1396, size: 64, align: 64, offset: 5184)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2664, file: !2663, line: 43, baseType: !2337, size: 64, align: 64, offset: 5248)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "dsp", scope: !2664, file: !2663, line: 46, baseType: !2699, size: 960, align: 64, offset: 5312)
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "IntraX8DSPContext", file: !2700, line: 34, baseType: !2701)
!2700 = !DIFile(filename: "libavcodec/intrax8dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IntraX8DSPContext", file: !2700, line: 25, size: 960, align: 64, elements: !2702)
!2702 = !{!2703, !2704, !2705, !2710}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "v_loop_filter", scope: !2701, file: !2700, line: 26, baseType: !1955, size: 64, align: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "h_loop_filter", scope: !2701, file: !2700, line: 27, baseType: !1955, size: 64, align: 64, offset: 64)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "spatial_compensation", scope: !2701, file: !2700, line: 29, baseType: !2706, size: 768, align: 64, offset: 128)
!2706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2707, size: 768, align: 64, elements: !1571)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 64, align: 64)
!2708 = !DISubroutineType(types: !2709)
!2709 = !{null, !1132, !1132, !1620}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "setup_spatial_compensation", scope: !2701, file: !2700, line: 31, baseType: !2711, size: 64, align: 64, offset: 896)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64, align: 64)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{null, !1132, !1132, !1620, !1396, !1396, !971}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "idsp", scope: !2664, file: !2663, line: 47, baseType: !1815, size: 960, align: 64, offset: 6272)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "bdsp", scope: !2664, file: !2663, line: 48, baseType: !1764, size: 256, align: 64, offset: 7232)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "quant", scope: !2664, file: !2663, line: 49, baseType: !971, size: 32, align: 32, offset: 7488)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "dquant", scope: !2664, file: !2663, line: 50, baseType: !971, size: 32, align: 32, offset: 7520)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "qsum", scope: !2664, file: !2663, line: 51, baseType: !971, size: 32, align: 32, offset: 7552)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "loopfilter", scope: !2664, file: !2663, line: 52, baseType: !971, size: 32, align: 32, offset: 7584)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !2664, file: !2663, line: 53, baseType: !1126, size: 64, align: 64, offset: 7616)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !2664, file: !2663, line: 54, baseType: !2722, size: 64, align: 64, offset: 7680)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64, align: 64)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "quant_dc_chroma", scope: !2664, file: !2663, line: 57, baseType: !971, size: 32, align: 32, offset: 7744)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "divide_quant_dc_luma", scope: !2664, file: !2663, line: 58, baseType: !971, size: 32, align: 32, offset: 7776)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "divide_quant_dc_chroma", scope: !2664, file: !2663, line: 59, baseType: !971, size: 32, align: 32, offset: 7808)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !2664, file: !2663, line: 60, baseType: !2079, size: 192, align: 64, offset: 7872)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "scratchpad", scope: !2664, file: !2663, line: 61, baseType: !2728, size: 336, align: 8, offset: 8064)
!2728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 336, align: 8, elements: !2729)
!2729 = !{!2730}
!2730 = !DISubrange(count: 42)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !2664, file: !2663, line: 64, baseType: !971, size: 32, align: 32, offset: 8416)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "flat_dc", scope: !2664, file: !2663, line: 65, baseType: !971, size: 32, align: 32, offset: 8448)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "predicted_dc", scope: !2664, file: !2663, line: 66, baseType: !971, size: 32, align: 32, offset: 8480)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "raw_orient", scope: !2664, file: !2663, line: 67, baseType: !971, size: 32, align: 32, offset: 8512)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_orient", scope: !2664, file: !2663, line: 68, baseType: !971, size: 32, align: 32, offset: 8544)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "orient", scope: !2664, file: !2663, line: 69, baseType: !971, size: 32, align: 32, offset: 8576)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "est_run", scope: !2664, file: !2663, line: 70, baseType: !971, size: 32, align: 32, offset: 8608)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "mb_x", scope: !2664, file: !2663, line: 73, baseType: !971, size: 32, align: 32, offset: 8640)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "mb_y", scope: !2664, file: !2663, line: 73, baseType: !971, size: 32, align: 32, offset: 8672)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "mb_width", scope: !2664, file: !2663, line: 74, baseType: !971, size: 32, align: 32, offset: 8704)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "mb_height", scope: !2664, file: !2663, line: 74, baseType: !971, size: 32, align: 32, offset: 8736)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "h264chroma", scope: !2657, file: !940, line: 176, baseType: !1787, size: 512, align: 64, offset: 94976)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "vc1dsp", scope: !2657, file: !940, line: 177, baseType: !2744, size: 6016, align: 64, offset: 95488)
!2744 = !DIDerivedType(tag: DW_TAG_typedef, name: "VC1DSPContext", file: !2745, line: 83, baseType: !2746)
!2745 = !DIFile(filename: "libavcodec/vc1dsp.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VC1DSPContext", file: !2745, line: 35, size: 6016, align: 64, elements: !2747)
!2747 = !{!2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2760, !2761, !2765, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2778, !2779, !2781, !2782, !2786, !2790, !2791, !2795, !2799}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_inv_trans_8x8", scope: !2746, file: !2745, line: 37, baseType: !1769, size: 64, align: 64)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_inv_trans_8x4", scope: !2746, file: !2745, line: 38, baseType: !1829, size: 64, align: 64, offset: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_inv_trans_4x8", scope: !2746, file: !2745, line: 39, baseType: !1829, size: 64, align: 64, offset: 128)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_inv_trans_4x4", scope: !2746, file: !2745, line: 40, baseType: !1829, size: 64, align: 64, offset: 192)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_inv_trans_8x8_dc", scope: !2746, file: !2745, line: 41, baseType: !1829, size: 64, align: 64, offset: 256)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_inv_trans_8x4_dc", scope: !2746, file: !2745, line: 42, baseType: !1829, size: 64, align: 64, offset: 320)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_inv_trans_4x8_dc", scope: !2746, file: !2745, line: 43, baseType: !1829, size: 64, align: 64, offset: 384)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_inv_trans_4x4_dc", scope: !2746, file: !2745, line: 44, baseType: !1829, size: 64, align: 64, offset: 448)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_v_overlap", scope: !2746, file: !2745, line: 45, baseType: !2757, size: 64, align: 64, offset: 512)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64, align: 64)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{null, !1132, !971}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_h_overlap", scope: !2746, file: !2745, line: 46, baseType: !2757, size: 64, align: 64, offset: 576)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_v_s_overlap", scope: !2746, file: !2745, line: 47, baseType: !2762, size: 64, align: 64, offset: 640)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64, align: 64)
!2763 = !DISubroutineType(types: !2764)
!2764 = !{null, !1713, !1713}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_h_s_overlap", scope: !2746, file: !2745, line: 48, baseType: !2766, size: 64, align: 64, offset: 704)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64, align: 64)
!2767 = !DISubroutineType(types: !2768)
!2768 = !{null, !1713, !1713, !971, !971, !971}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_v_loop_filter4", scope: !2746, file: !2745, line: 49, baseType: !1964, size: 64, align: 64, offset: 768)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_h_loop_filter4", scope: !2746, file: !2745, line: 50, baseType: !1964, size: 64, align: 64, offset: 832)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_v_loop_filter8", scope: !2746, file: !2745, line: 51, baseType: !1964, size: 64, align: 64, offset: 896)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_h_loop_filter8", scope: !2746, file: !2745, line: 52, baseType: !1964, size: 64, align: 64, offset: 960)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_v_loop_filter16", scope: !2746, file: !2745, line: 53, baseType: !1964, size: 64, align: 64, offset: 1024)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "vc1_h_loop_filter16", scope: !2746, file: !2745, line: 54, baseType: !1964, size: 64, align: 64, offset: 1088)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "put_vc1_mspel_pixels_tab", scope: !2746, file: !2745, line: 59, baseType: !2776, size: 2048, align: 64, offset: 1152)
!2776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2777, size: 2048, align: 64, elements: !1942)
!2777 = !DIDerivedType(tag: DW_TAG_typedef, name: "vc1op_pixels_func", file: !2745, line: 33, baseType: !1806)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "avg_vc1_mspel_pixels_tab", scope: !2746, file: !2745, line: 60, baseType: !2776, size: 2048, align: 64, offset: 3200)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "put_no_rnd_vc1_chroma_pixels_tab", scope: !2746, file: !2745, line: 63, baseType: !2780, size: 192, align: 64, offset: 5248)
!2780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1793, size: 192, align: 64, elements: !1710)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "avg_no_rnd_vc1_chroma_pixels_tab", scope: !2746, file: !2745, line: 64, baseType: !2780, size: 192, align: 64, offset: 5440)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_h", scope: !2746, file: !2745, line: 67, baseType: !2783, size: 64, align: 64, offset: 5632)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64, align: 64)
!2784 = !DISubroutineType(types: !2785)
!2785 = !{null, !1132, !1547, !971, !971, !971}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_v_single", scope: !2746, file: !2745, line: 68, baseType: !2787, size: 64, align: 64, offset: 5696)
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 64, align: 64)
!2788 = !DISubroutineType(types: !2789)
!2789 = !{null, !1132, !1547, !1547, !971, !971}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_v_double_noscale", scope: !2746, file: !2745, line: 69, baseType: !2787, size: 64, align: 64, offset: 5760)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_v_double_onescale", scope: !2746, file: !2745, line: 70, baseType: !2792, size: 64, align: 64, offset: 5824)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64, align: 64)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{null, !1132, !1547, !1547, !971, !1547, !971, !971}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_v_double_twoscale", scope: !2746, file: !2745, line: 72, baseType: !2796, size: 64, align: 64, offset: 5888)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 64, align: 64)
!2797 = !DISubroutineType(types: !2798)
!2798 = !{null, !1132, !1547, !1547, !971, !1547, !1547, !971, !971, !971}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "startcode_find_candidate", scope: !2746, file: !2745, line: 82, baseType: !2800, size: 64, align: 64, offset: 5952)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64, align: 64)
!2801 = !DISubroutineType(types: !2802)
!2802 = !{!971, !1547, !971}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2657, file: !940, line: 179, baseType: !971, size: 32, align: 32, offset: 101504)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "res_sprite", scope: !2657, file: !940, line: 183, baseType: !971, size: 32, align: 32, offset: 101536)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "res_y411", scope: !2657, file: !940, line: 184, baseType: !971, size: 32, align: 32, offset: 101568)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "res_x8", scope: !2657, file: !940, line: 185, baseType: !971, size: 32, align: 32, offset: 101600)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !2657, file: !940, line: 186, baseType: !971, size: 32, align: 32, offset: 101632)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "res_fasttx", scope: !2657, file: !940, line: 187, baseType: !971, size: 32, align: 32, offset: 101664)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "res_transtab", scope: !2657, file: !940, line: 188, baseType: !971, size: 32, align: 32, offset: 101696)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "rangered", scope: !2657, file: !940, line: 189, baseType: !971, size: 32, align: 32, offset: 101728)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "res_rtm_flag", scope: !2657, file: !940, line: 191, baseType: !971, size: 32, align: 32, offset: 101760)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2657, file: !940, line: 192, baseType: !971, size: 32, align: 32, offset: 101792)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2657, file: !940, line: 197, baseType: !971, size: 32, align: 32, offset: 101824)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "chromaformat", scope: !2657, file: !940, line: 198, baseType: !971, size: 32, align: 32, offset: 101856)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "postprocflag", scope: !2657, file: !940, line: 199, baseType: !971, size: 32, align: 32, offset: 101888)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !2657, file: !940, line: 200, baseType: !971, size: 32, align: 32, offset: 101920)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !2657, file: !940, line: 201, baseType: !971, size: 32, align: 32, offset: 101952)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "tfcntrflag", scope: !2657, file: !940, line: 202, baseType: !971, size: 32, align: 32, offset: 101984)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "panscanflag", scope: !2657, file: !940, line: 203, baseType: !971, size: 32, align: 32, offset: 102016)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "refdist_flag", scope: !2657, file: !940, line: 204, baseType: !971, size: 32, align: 32, offset: 102048)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "extended_dmv", scope: !2657, file: !940, line: 205, baseType: !971, size: 32, align: 32, offset: 102080)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "color_prim", scope: !2657, file: !940, line: 206, baseType: !971, size: 32, align: 32, offset: 102112)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_char", scope: !2657, file: !940, line: 207, baseType: !971, size: 32, align: 32, offset: 102144)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_coef", scope: !2657, file: !940, line: 208, baseType: !971, size: 32, align: 32, offset: 102176)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "hrd_param_flag", scope: !2657, file: !940, line: 209, baseType: !971, size: 32, align: 32, offset: 102208)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "psf", scope: !2657, file: !940, line: 211, baseType: !971, size: 32, align: 32, offset: 102240)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2657, file: !940, line: 218, baseType: !971, size: 32, align: 32, offset: 102272)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "frmrtq_postproc", scope: !2657, file: !940, line: 219, baseType: !971, size: 32, align: 32, offset: 102304)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "bitrtq_postproc", scope: !2657, file: !940, line: 220, baseType: !971, size: 32, align: 32, offset: 102336)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "max_coded_width", scope: !2657, file: !940, line: 221, baseType: !971, size: 32, align: 32, offset: 102368)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "max_coded_height", scope: !2657, file: !940, line: 221, baseType: !971, size: 32, align: 32, offset: 102400)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "fastuvmc", scope: !2657, file: !940, line: 222, baseType: !971, size: 32, align: 32, offset: 102432)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "extended_mv", scope: !2657, file: !940, line: 223, baseType: !971, size: 32, align: 32, offset: 102464)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "dquant", scope: !2657, file: !940, line: 224, baseType: !971, size: 32, align: 32, offset: 102496)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "vstransform", scope: !2657, file: !940, line: 225, baseType: !971, size: 32, align: 32, offset: 102528)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !2657, file: !940, line: 226, baseType: !971, size: 32, align: 32, offset: 102560)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "quantizer_mode", scope: !2657, file: !940, line: 227, baseType: !971, size: 32, align: 32, offset: 102592)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "finterpflag", scope: !2657, file: !940, line: 228, baseType: !971, size: 32, align: 32, offset: 102624)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "mv_mode", scope: !2657, file: !940, line: 233, baseType: !972, size: 8, align: 8, offset: 102656)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "mv_mode2", scope: !2657, file: !940, line: 234, baseType: !972, size: 8, align: 8, offset: 102664)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "k_x", scope: !2657, file: !940, line: 235, baseType: !971, size: 32, align: 32, offset: 102688)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "k_y", scope: !2657, file: !940, line: 236, baseType: !971, size: 32, align: 32, offset: 102720)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "range_x", scope: !2657, file: !940, line: 237, baseType: !971, size: 32, align: 32, offset: 102752)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "range_y", scope: !2657, file: !940, line: 237, baseType: !971, size: 32, align: 32, offset: 102784)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "pq", scope: !2657, file: !940, line: 238, baseType: !972, size: 8, align: 8, offset: 102816)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "altpq", scope: !2657, file: !940, line: 238, baseType: !972, size: 8, align: 8, offset: 102824)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "zz_8x8", scope: !2657, file: !940, line: 239, baseType: !2848, size: 2048, align: 8, offset: 102832)
!2848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 2048, align: 8, elements: !2849)
!2849 = !{!1234, !1582}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "left_blk_sh", scope: !2657, file: !940, line: 240, baseType: !971, size: 32, align: 32, offset: 104896)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "top_blk_sh", scope: !2657, file: !940, line: 240, baseType: !971, size: 32, align: 32, offset: 104928)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "zz_8x4", scope: !2657, file: !940, line: 241, baseType: !1547, size: 64, align: 64, offset: 104960)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "zz_4x8", scope: !2657, file: !940, line: 242, baseType: !1547, size: 64, align: 64, offset: 105024)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "dquantfrm", scope: !2657, file: !940, line: 245, baseType: !972, size: 8, align: 8, offset: 105088)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "dqprofile", scope: !2657, file: !940, line: 246, baseType: !972, size: 8, align: 8, offset: 105096)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "dqsbedge", scope: !2657, file: !940, line: 247, baseType: !972, size: 8, align: 8, offset: 105104)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "dqbilevel", scope: !2657, file: !940, line: 248, baseType: !972, size: 8, align: 8, offset: 105112)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "c_ac_table_index", scope: !2657, file: !940, line: 254, baseType: !971, size: 32, align: 32, offset: 105120)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "y_ac_table_index", scope: !2657, file: !940, line: 255, baseType: !971, size: 32, align: 32, offset: 105152)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "ttfrm", scope: !2657, file: !940, line: 257, baseType: !971, size: 32, align: 32, offset: 105184)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "ttmbf", scope: !2657, file: !940, line: 258, baseType: !972, size: 8, align: 8, offset: 105216)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "ttblk_base", scope: !2657, file: !940, line: 259, baseType: !1396, size: 64, align: 64, offset: 105280)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "ttblk", scope: !2657, file: !940, line: 259, baseType: !1396, size: 64, align: 64, offset: 105344)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "codingset", scope: !2657, file: !940, line: 260, baseType: !971, size: 32, align: 32, offset: 105408)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "codingset2", scope: !2657, file: !940, line: 261, baseType: !971, size: 32, align: 32, offset: 105440)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "pqindex", scope: !2657, file: !940, line: 262, baseType: !971, size: 32, align: 32, offset: 105472)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "a_avail", scope: !2657, file: !940, line: 263, baseType: !971, size: 32, align: 32, offset: 105504)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "c_avail", scope: !2657, file: !940, line: 263, baseType: !971, size: 32, align: 32, offset: 105536)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type_base", scope: !2657, file: !940, line: 264, baseType: !1132, size: 64, align: 64, offset: 105600)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !2657, file: !940, line: 264, baseType: !2079, size: 192, align: 64, offset: 105664)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "lumscale", scope: !2657, file: !940, line: 269, baseType: !972, size: 8, align: 8, offset: 105856)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "lumshift", scope: !2657, file: !940, line: 270, baseType: !972, size: 8, align: 8, offset: 105864)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "bfraction", scope: !2657, file: !940, line: 272, baseType: !1649, size: 16, align: 16, offset: 105872)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "halfpq", scope: !2657, file: !940, line: 273, baseType: !972, size: 8, align: 8, offset: 105888)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "respic", scope: !2657, file: !940, line: 274, baseType: !972, size: 8, align: 8, offset: 105896)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_fullness", scope: !2657, file: !940, line: 275, baseType: !971, size: 32, align: 32, offset: 105920)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "mvrange", scope: !2657, file: !940, line: 282, baseType: !972, size: 8, align: 8, offset: 105952)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "pquantizer", scope: !2657, file: !940, line: 283, baseType: !972, size: 8, align: 8, offset: 105960)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "cbpcy_vlc", scope: !2657, file: !940, line: 284, baseType: !2668, size: 64, align: 64, offset: 105984)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "tt_index", scope: !2657, file: !940, line: 285, baseType: !971, size: 32, align: 32, offset: 106048)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "mv_type_mb_plane", scope: !2657, file: !940, line: 286, baseType: !1132, size: 64, align: 64, offset: 106112)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "direct_mb_plane", scope: !2657, file: !940, line: 287, baseType: !1132, size: 64, align: 64, offset: 106176)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "forward_mb_plane", scope: !2657, file: !940, line: 288, baseType: !1132, size: 64, align: 64, offset: 106240)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "mv_type_is_raw", scope: !2657, file: !940, line: 289, baseType: !971, size: 32, align: 32, offset: 106304)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "dmb_is_raw", scope: !2657, file: !940, line: 290, baseType: !971, size: 32, align: 32, offset: 106336)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "fmb_is_raw", scope: !2657, file: !940, line: 291, baseType: !971, size: 32, align: 32, offset: 106368)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "skip_is_raw", scope: !2657, file: !940, line: 292, baseType: !971, size: 32, align: 32, offset: 106400)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "last_luty", scope: !2657, file: !940, line: 293, baseType: !2889, size: 4096, align: 8, offset: 106432)
!2889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 4096, align: 8, elements: !2890)
!2890 = !{!1639, !2357}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "last_lutuv", scope: !2657, file: !940, line: 293, baseType: !2889, size: 4096, align: 8, offset: 110528)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "aux_luty", scope: !2657, file: !940, line: 294, baseType: !2889, size: 4096, align: 8, offset: 114624)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "aux_lutuv", scope: !2657, file: !940, line: 294, baseType: !2889, size: 4096, align: 8, offset: 118720)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "next_luty", scope: !2657, file: !940, line: 295, baseType: !2889, size: 4096, align: 8, offset: 122816)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "next_lutuv", scope: !2657, file: !940, line: 295, baseType: !2889, size: 4096, align: 8, offset: 126912)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "curr_luty", scope: !2657, file: !940, line: 296, baseType: !2897, size: 64, align: 64, offset: 131008)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64, align: 64)
!2898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 2048, align: 8, elements: !2899)
!2899 = !{!2357}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "curr_lutuv", scope: !2657, file: !940, line: 296, baseType: !2897, size: 64, align: 64, offset: 131072)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "last_use_ic", scope: !2657, file: !940, line: 297, baseType: !971, size: 32, align: 32, offset: 131136)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "curr_use_ic", scope: !2657, file: !940, line: 297, baseType: !1396, size: 64, align: 64, offset: 131200)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "next_use_ic", scope: !2657, file: !940, line: 297, baseType: !971, size: 32, align: 32, offset: 131264)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "aux_use_ic", scope: !2657, file: !940, line: 297, baseType: !971, size: 32, align: 32, offset: 131296)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "rnd", scope: !2657, file: !940, line: 298, baseType: !971, size: 32, align: 32, offset: 131328)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "cbptab", scope: !2657, file: !940, line: 299, baseType: !971, size: 32, align: 32, offset: 131360)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "rangeredfrm", scope: !2657, file: !940, line: 303, baseType: !972, size: 8, align: 8, offset: 131392)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "interpfrm", scope: !2657, file: !940, line: 304, baseType: !972, size: 8, align: 8, offset: 131400)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "fcm", scope: !2657, file: !940, line: 309, baseType: !939, size: 32, align: 32, offset: 131424)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "numpanscanwin", scope: !2657, file: !940, line: 310, baseType: !972, size: 8, align: 8, offset: 131456)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "tfcntr", scope: !2657, file: !940, line: 311, baseType: !972, size: 8, align: 8, offset: 131464)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "rptfrm", scope: !2657, file: !940, line: 312, baseType: !972, size: 8, align: 8, offset: 131472)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "tff", scope: !2657, file: !940, line: 312, baseType: !972, size: 8, align: 8, offset: 131480)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "rff", scope: !2657, file: !940, line: 312, baseType: !972, size: 8, align: 8, offset: 131488)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "topleftx", scope: !2657, file: !940, line: 313, baseType: !1434, size: 16, align: 16, offset: 131504)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "toplefty", scope: !2657, file: !940, line: 314, baseType: !1434, size: 16, align: 16, offset: 131520)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "bottomrightx", scope: !2657, file: !940, line: 315, baseType: !1434, size: 16, align: 16, offset: 131536)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "bottomrighty", scope: !2657, file: !940, line: 316, baseType: !1434, size: 16, align: 16, offset: 131552)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "uvsamp", scope: !2657, file: !940, line: 317, baseType: !972, size: 8, align: 8, offset: 131568)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "postproc", scope: !2657, file: !940, line: 318, baseType: !972, size: 8, align: 8, offset: 131576)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "hrd_num_leaky_buckets", scope: !2657, file: !940, line: 319, baseType: !971, size: 32, align: 32, offset: 131584)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "bit_rate_exponent", scope: !2657, file: !940, line: 320, baseType: !972, size: 8, align: 8, offset: 131616)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size_exponent", scope: !2657, file: !940, line: 321, baseType: !972, size: 8, align: 8, offset: 131624)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "acpred_plane", scope: !2657, file: !940, line: 322, baseType: !1132, size: 64, align: 64, offset: 131648)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "acpred_is_raw", scope: !2657, file: !940, line: 323, baseType: !971, size: 32, align: 32, offset: 131712)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "over_flags_plane", scope: !2657, file: !940, line: 324, baseType: !1132, size: 64, align: 64, offset: 131776)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "overflg_is_raw", scope: !2657, file: !940, line: 325, baseType: !971, size: 32, align: 32, offset: 131840)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "condover", scope: !2657, file: !940, line: 326, baseType: !972, size: 8, align: 8, offset: 131872)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "hrd_rate", scope: !2657, file: !940, line: 327, baseType: !1433, size: 64, align: 64, offset: 131904)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "hrd_buffer", scope: !2657, file: !940, line: 327, baseType: !1433, size: 64, align: 64, offset: 131968)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "hrd_fullness", scope: !2657, file: !940, line: 328, baseType: !1132, size: 64, align: 64, offset: 132032)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "range_mapy_flag", scope: !2657, file: !940, line: 329, baseType: !972, size: 8, align: 8, offset: 132096)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "range_mapuv_flag", scope: !2657, file: !940, line: 330, baseType: !972, size: 8, align: 8, offset: 132104)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "range_mapy", scope: !2657, file: !940, line: 331, baseType: !972, size: 8, align: 8, offset: 132112)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "range_mapuv", scope: !2657, file: !940, line: 332, baseType: !972, size: 8, align: 8, offset: 132120)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "dmvrange", scope: !2657, file: !940, line: 336, baseType: !972, size: 8, align: 8, offset: 132128)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "fourmvswitch", scope: !2657, file: !940, line: 337, baseType: !971, size: 32, align: 32, offset: 132160)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "intcomp", scope: !2657, file: !940, line: 338, baseType: !971, size: 32, align: 32, offset: 132192)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "lumscale2", scope: !2657, file: !940, line: 339, baseType: !972, size: 8, align: 8, offset: 132224)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "lumshift2", scope: !2657, file: !940, line: 340, baseType: !972, size: 8, align: 8, offset: 132232)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "mbmode_vlc", scope: !2657, file: !940, line: 341, baseType: !2668, size: 64, align: 64, offset: 132288)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "imv_vlc", scope: !2657, file: !940, line: 342, baseType: !2668, size: 64, align: 64, offset: 132352)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "twomvbp_vlc", scope: !2657, file: !940, line: 343, baseType: !2668, size: 64, align: 64, offset: 132416)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "fourmvbp_vlc", scope: !2657, file: !940, line: 344, baseType: !2668, size: 64, align: 64, offset: 132480)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "twomvbp", scope: !2657, file: !940, line: 345, baseType: !972, size: 8, align: 8, offset: 132544)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "fourmvbp", scope: !2657, file: !940, line: 346, baseType: !972, size: 8, align: 8, offset: 132552)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "fieldtx_plane", scope: !2657, file: !940, line: 347, baseType: !1132, size: 64, align: 64, offset: 132608)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "fieldtx_is_raw", scope: !2657, file: !940, line: 348, baseType: !971, size: 32, align: 32, offset: 132672)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "zzi_8x8", scope: !2657, file: !940, line: 349, baseType: !1580, size: 512, align: 8, offset: 132704)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "blk_mv_type_base", scope: !2657, file: !940, line: 350, baseType: !1132, size: 64, align: 64, offset: 133248)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "blk_mv_type", scope: !2657, file: !940, line: 350, baseType: !1132, size: 64, align: 64, offset: 133312)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "mv_f_base", scope: !2657, file: !940, line: 351, baseType: !1132, size: 64, align: 64, offset: 133376)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "mv_f", scope: !2657, file: !940, line: 351, baseType: !1991, size: 128, align: 64, offset: 133440)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "mv_f_next_base", scope: !2657, file: !940, line: 352, baseType: !1132, size: 64, align: 64, offset: 133568)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "mv_f_next", scope: !2657, file: !940, line: 352, baseType: !1991, size: 128, align: 64, offset: 133632)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "field_mode", scope: !2657, file: !940, line: 353, baseType: !971, size: 32, align: 32, offset: 133760)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "fptype", scope: !2657, file: !940, line: 354, baseType: !971, size: 32, align: 32, offset: 133792)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "second_field", scope: !2657, file: !940, line: 355, baseType: !971, size: 32, align: 32, offset: 133824)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "refdist", scope: !2657, file: !940, line: 356, baseType: !971, size: 32, align: 32, offset: 133856)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "numref", scope: !2657, file: !940, line: 357, baseType: !971, size: 32, align: 32, offset: 133888)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "reffield", scope: !2657, file: !940, line: 359, baseType: !971, size: 32, align: 32, offset: 133920)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "intcompfield", scope: !2657, file: !940, line: 361, baseType: !971, size: 32, align: 32, offset: 133952)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "cur_field_type", scope: !2657, file: !940, line: 363, baseType: !971, size: 32, align: 32, offset: 133984)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ref_field_type", scope: !2657, file: !940, line: 364, baseType: !2112, size: 64, align: 32, offset: 134016)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_off", scope: !2657, file: !940, line: 365, baseType: !971, size: 32, align: 32, offset: 134080)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "mb_off", scope: !2657, file: !940, line: 365, baseType: !971, size: 32, align: 32, offset: 134112)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "qs_last", scope: !2657, file: !940, line: 366, baseType: !971, size: 32, align: 32, offset: 134144)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "bmvtype", scope: !2657, file: !940, line: 367, baseType: !971, size: 32, align: 32, offset: 134176)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "frfd", scope: !2657, file: !940, line: 368, baseType: !971, size: 32, align: 32, offset: 134208)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "brfd", scope: !2657, file: !940, line: 368, baseType: !971, size: 32, align: 32, offset: 134240)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "first_pic_header_flag", scope: !2657, file: !940, line: 369, baseType: !971, size: 32, align: 32, offset: 134272)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "pic_header_flag", scope: !2657, file: !940, line: 370, baseType: !971, size: 32, align: 32, offset: 134304)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "mbmodetab", scope: !2657, file: !940, line: 371, baseType: !971, size: 32, align: 32, offset: 134336)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "icbptab", scope: !2657, file: !940, line: 372, baseType: !971, size: 32, align: 32, offset: 134368)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "imvtab", scope: !2657, file: !940, line: 373, baseType: !971, size: 32, align: 32, offset: 134400)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "twomvbptab", scope: !2657, file: !940, line: 374, baseType: !971, size: 32, align: 32, offset: 134432)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "fourmvbptab", scope: !2657, file: !940, line: 375, baseType: !971, size: 32, align: 32, offset: 134464)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "new_sprite", scope: !2657, file: !940, line: 379, baseType: !971, size: 32, align: 32, offset: 134496)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "two_sprites", scope: !2657, file: !940, line: 380, baseType: !971, size: 32, align: 32, offset: 134528)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_output_frame", scope: !2657, file: !940, line: 381, baseType: !1126, size: 64, align: 64, offset: 134592)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "output_width", scope: !2657, file: !940, line: 382, baseType: !971, size: 32, align: 32, offset: 134656)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "output_height", scope: !2657, file: !940, line: 382, baseType: !971, size: 32, align: 32, offset: 134688)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_width", scope: !2657, file: !940, line: 382, baseType: !971, size: 32, align: 32, offset: 134720)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "sprite_height", scope: !2657, file: !940, line: 382, baseType: !971, size: 32, align: 32, offset: 134752)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "sr_rows", scope: !2657, file: !940, line: 383, baseType: !1993, size: 256, align: 64, offset: 134784)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "p_frame_skipped", scope: !2657, file: !940, line: 386, baseType: !971, size: 32, align: 32, offset: 135040)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "bi_type", scope: !2657, file: !940, line: 387, baseType: !971, size: 32, align: 32, offset: 135072)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "x8_type", scope: !2657, file: !940, line: 388, baseType: !971, size: 32, align: 32, offset: 135104)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2657, file: !940, line: 390, baseType: !2990, size: 64, align: 64, offset: 135168)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64, align: 64)
!2991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 6144, align: 16, elements: !2992)
!2992 = !{!1852, !1582}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "n_allocated_blks", scope: !2657, file: !940, line: 391, baseType: !971, size: 32, align: 32, offset: 135232)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "cur_blk_idx", scope: !2657, file: !940, line: 391, baseType: !971, size: 32, align: 32, offset: 135264)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "left_blk_idx", scope: !2657, file: !940, line: 391, baseType: !971, size: 32, align: 32, offset: 135296)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "topleft_blk_idx", scope: !2657, file: !940, line: 391, baseType: !971, size: 32, align: 32, offset: 135328)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "top_blk_idx", scope: !2657, file: !940, line: 391, baseType: !971, size: 32, align: 32, offset: 135360)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "cbp_base", scope: !2657, file: !940, line: 392, baseType: !1653, size: 64, align: 64, offset: 135424)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "cbp", scope: !2657, file: !940, line: 392, baseType: !1653, size: 64, align: 64, offset: 135488)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "is_intra_base", scope: !2657, file: !940, line: 393, baseType: !1132, size: 64, align: 64, offset: 135552)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "is_intra", scope: !2657, file: !940, line: 393, baseType: !1132, size: 64, align: 64, offset: 135616)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "luma_mv_base", scope: !2657, file: !940, line: 394, baseType: !1647, size: 64, align: 64, offset: 135680)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "luma_mv", scope: !2657, file: !940, line: 394, baseType: !1647, size: 64, align: 64, offset: 135744)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "bfraction_lut_index", scope: !2657, file: !940, line: 395, baseType: !972, size: 8, align: 8, offset: 135808)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "broken_link", scope: !2657, file: !940, line: 396, baseType: !972, size: 8, align: 8, offset: 135816)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "closed_entry", scope: !2657, file: !940, line: 397, baseType: !972, size: 8, align: 8, offset: 135824)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "end_mb_x", scope: !2657, file: !940, line: 399, baseType: !971, size: 32, align: 32, offset: 135840)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "parse_only", scope: !2657, file: !940, line: 401, baseType: !971, size: 32, align: 32, offset: 135872)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "resync_marker", scope: !2657, file: !940, line: 402, baseType: !971, size: 32, align: 32, offset: 135904)
!3010 = !{}
!3011 = !DILocalVariable(name: "v", arg: 1, scope: !2652, file: !977, line: 324, type: !2655)
!3012 = !DIExpression()
!3013 = !DILocation(line: 324, column: 71, scope: !2652)
!3014 = !DILocalVariable(name: "s", scope: !2652, file: !977, line: 326, type: !3015)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64, align: 64)
!3016 = !DILocation(line: 326, column: 21, scope: !2652)
!3017 = !DILocation(line: 326, column: 26, scope: !2652)
!3018 = !DILocation(line: 326, column: 29, scope: !2652)
!3019 = !DILocalVariable(name: "i", scope: !2652, file: !977, line: 327, type: !971)
!3020 = !DILocation(line: 327, column: 9, scope: !2652)
!3021 = !DILocalVariable(name: "ret", scope: !2652, file: !977, line: 327, type: !971)
!3022 = !DILocation(line: 327, column: 12, scope: !2652)
!3023 = !DILocalVariable(name: "mb_height", scope: !2652, file: !977, line: 328, type: !971)
!3024 = !DILocation(line: 328, column: 9, scope: !2652)
!3025 = !DILocation(line: 328, column: 24, scope: !2652)
!3026 = !DILocation(line: 328, column: 27, scope: !2652)
!3027 = !DILocation(line: 328, column: 37, scope: !2652)
!3028 = !DILocation(line: 328, column: 41, scope: !2652)
!3029 = !DILocation(line: 328, column: 44, scope: !2652)
!3030 = !DILocation(line: 331, column: 38, scope: !2652)
!3031 = !DILocation(line: 331, column: 41, scope: !2652)
!3032 = !DILocation(line: 331, column: 53, scope: !2652)
!3033 = !DILocation(line: 331, column: 51, scope: !2652)
!3034 = !DILocation(line: 331, column: 27, scope: !2652)
!3035 = !DILocation(line: 331, column: 5, scope: !2652)
!3036 = !DILocation(line: 331, column: 8, scope: !2652)
!3037 = !DILocation(line: 331, column: 25, scope: !2652)
!3038 = !DILocation(line: 332, column: 37, scope: !2652)
!3039 = !DILocation(line: 332, column: 40, scope: !2652)
!3040 = !DILocation(line: 332, column: 52, scope: !2652)
!3041 = !DILocation(line: 332, column: 50, scope: !2652)
!3042 = !DILocation(line: 332, column: 26, scope: !2652)
!3043 = !DILocation(line: 332, column: 5, scope: !2652)
!3044 = !DILocation(line: 332, column: 8, scope: !2652)
!3045 = !DILocation(line: 332, column: 24, scope: !2652)
!3046 = !DILocation(line: 333, column: 38, scope: !2652)
!3047 = !DILocation(line: 333, column: 41, scope: !2652)
!3048 = !DILocation(line: 333, column: 53, scope: !2652)
!3049 = !DILocation(line: 333, column: 51, scope: !2652)
!3050 = !DILocation(line: 333, column: 27, scope: !2652)
!3051 = !DILocation(line: 333, column: 5, scope: !2652)
!3052 = !DILocation(line: 333, column: 8, scope: !2652)
!3053 = !DILocation(line: 333, column: 25, scope: !2652)
!3054 = !DILocation(line: 334, column: 35, scope: !2652)
!3055 = !DILocation(line: 334, column: 38, scope: !2652)
!3056 = !DILocation(line: 334, column: 50, scope: !2652)
!3057 = !DILocation(line: 334, column: 48, scope: !2652)
!3058 = !DILocation(line: 334, column: 24, scope: !2652)
!3059 = !DILocation(line: 334, column: 5, scope: !2652)
!3060 = !DILocation(line: 334, column: 8, scope: !2652)
!3061 = !DILocation(line: 334, column: 22, scope: !2652)
!3062 = !DILocation(line: 335, column: 34, scope: !2652)
!3063 = !DILocation(line: 335, column: 37, scope: !2652)
!3064 = !DILocation(line: 335, column: 49, scope: !2652)
!3065 = !DILocation(line: 335, column: 47, scope: !2652)
!3066 = !DILocation(line: 335, column: 23, scope: !2652)
!3067 = !DILocation(line: 335, column: 5, scope: !2652)
!3068 = !DILocation(line: 335, column: 8, scope: !2652)
!3069 = !DILocation(line: 335, column: 21, scope: !2652)
!3070 = !DILocation(line: 336, column: 38, scope: !2652)
!3071 = !DILocation(line: 336, column: 41, scope: !2652)
!3072 = !DILocation(line: 336, column: 53, scope: !2652)
!3073 = !DILocation(line: 336, column: 51, scope: !2652)
!3074 = !DILocation(line: 336, column: 27, scope: !2652)
!3075 = !DILocation(line: 336, column: 5, scope: !2652)
!3076 = !DILocation(line: 336, column: 8, scope: !2652)
!3077 = !DILocation(line: 336, column: 25, scope: !2652)
!3078 = !DILocation(line: 337, column: 10, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !2652, file: !977, line: 337, column: 9)
!3080 = !DILocation(line: 337, column: 13, scope: !3079)
!3081 = !DILocation(line: 337, column: 30, scope: !3079)
!3082 = !DILocation(line: 337, column: 34, scope: !3083)
!3083 = !DILexicalBlockFile(scope: !3079, file: !977, discriminator: 1)
!3084 = !DILocation(line: 337, column: 37, scope: !3083)
!3085 = !DILocation(line: 337, column: 53, scope: !3083)
!3086 = !DILocation(line: 337, column: 57, scope: !3087)
!3087 = !DILexicalBlockFile(scope: !3079, file: !977, discriminator: 2)
!3088 = !DILocation(line: 337, column: 60, scope: !3087)
!3089 = !DILocation(line: 337, column: 77, scope: !3087)
!3090 = !DILocation(line: 338, column: 10, scope: !3079)
!3091 = !DILocation(line: 338, column: 13, scope: !3079)
!3092 = !DILocation(line: 338, column: 27, scope: !3079)
!3093 = !DILocation(line: 338, column: 31, scope: !3083)
!3094 = !DILocation(line: 338, column: 34, scope: !3083)
!3095 = !DILocation(line: 338, column: 47, scope: !3083)
!3096 = !DILocation(line: 338, column: 51, scope: !3087)
!3097 = !DILocation(line: 338, column: 54, scope: !3087)
!3098 = !DILocation(line: 337, column: 9, scope: !3099)
!3099 = !DILexicalBlockFile(scope: !2652, file: !977, discriminator: 3)
!3100 = !DILocation(line: 339, column: 9, scope: !3079)
!3101 = !DILocation(line: 341, column: 27, scope: !2652)
!3102 = !DILocation(line: 341, column: 30, scope: !2652)
!3103 = !DILocation(line: 341, column: 39, scope: !2652)
!3104 = !DILocation(line: 341, column: 5, scope: !2652)
!3105 = !DILocation(line: 341, column: 8, scope: !2652)
!3106 = !DILocation(line: 341, column: 25, scope: !2652)
!3107 = !DILocation(line: 342, column: 46, scope: !2652)
!3108 = !DILocation(line: 342, column: 49, scope: !2652)
!3109 = !DILocation(line: 342, column: 44, scope: !2652)
!3110 = !DILocation(line: 342, column: 16, scope: !2652)
!3111 = !DILocation(line: 342, column: 5, scope: !2652)
!3112 = !DILocation(line: 342, column: 8, scope: !2652)
!3113 = !DILocation(line: 342, column: 14, scope: !2652)
!3114 = !DILocation(line: 343, column: 58, scope: !2652)
!3115 = !DILocation(line: 343, column: 61, scope: !2652)
!3116 = !DILocation(line: 343, column: 56, scope: !2652)
!3117 = !DILocation(line: 343, column: 19, scope: !2652)
!3118 = !DILocation(line: 343, column: 5, scope: !2652)
!3119 = !DILocation(line: 343, column: 8, scope: !2652)
!3120 = !DILocation(line: 343, column: 17, scope: !2652)
!3121 = !DILocation(line: 344, column: 10, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !2652, file: !977, line: 344, column: 9)
!3123 = !DILocation(line: 344, column: 13, scope: !3122)
!3124 = !DILocation(line: 344, column: 19, scope: !3122)
!3125 = !DILocation(line: 344, column: 23, scope: !3126)
!3126 = !DILexicalBlockFile(scope: !3122, file: !977, discriminator: 1)
!3127 = !DILocation(line: 344, column: 26, scope: !3126)
!3128 = !DILocation(line: 344, column: 9, scope: !3126)
!3129 = !DILocation(line: 345, column: 9, scope: !3122)
!3130 = !DILocation(line: 346, column: 14, scope: !2652)
!3131 = !DILocation(line: 346, column: 17, scope: !2652)
!3132 = !DILocation(line: 346, column: 32, scope: !2652)
!3133 = !DILocation(line: 346, column: 35, scope: !2652)
!3134 = !DILocation(line: 346, column: 30, scope: !2652)
!3135 = !DILocation(line: 346, column: 26, scope: !2652)
!3136 = !DILocation(line: 346, column: 5, scope: !2652)
!3137 = !DILocation(line: 346, column: 8, scope: !2652)
!3138 = !DILocation(line: 346, column: 12, scope: !2652)
!3139 = !DILocation(line: 347, column: 62, scope: !2652)
!3140 = !DILocation(line: 347, column: 65, scope: !2652)
!3141 = !DILocation(line: 347, column: 60, scope: !2652)
!3142 = !DILocation(line: 347, column: 21, scope: !2652)
!3143 = !DILocation(line: 347, column: 5, scope: !2652)
!3144 = !DILocation(line: 347, column: 8, scope: !2652)
!3145 = !DILocation(line: 347, column: 19, scope: !2652)
!3146 = !DILocation(line: 348, column: 10, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !2652, file: !977, line: 348, column: 9)
!3148 = !DILocation(line: 348, column: 13, scope: !3147)
!3149 = !DILocation(line: 348, column: 9, scope: !2652)
!3150 = !DILocation(line: 349, column: 9, scope: !3147)
!3151 = !DILocation(line: 350, column: 16, scope: !2652)
!3152 = !DILocation(line: 350, column: 19, scope: !2652)
!3153 = !DILocation(line: 350, column: 36, scope: !2652)
!3154 = !DILocation(line: 350, column: 39, scope: !2652)
!3155 = !DILocation(line: 350, column: 34, scope: !2652)
!3156 = !DILocation(line: 350, column: 30, scope: !2652)
!3157 = !DILocation(line: 350, column: 5, scope: !2652)
!3158 = !DILocation(line: 350, column: 8, scope: !2652)
!3159 = !DILocation(line: 350, column: 14, scope: !2652)
!3160 = !DILocation(line: 351, column: 69, scope: !2652)
!3161 = !DILocation(line: 351, column: 72, scope: !2652)
!3162 = !DILocation(line: 351, column: 67, scope: !2652)
!3163 = !DILocation(line: 351, column: 24, scope: !2652)
!3164 = !DILocation(line: 351, column: 5, scope: !2652)
!3165 = !DILocation(line: 351, column: 8, scope: !2652)
!3166 = !DILocation(line: 351, column: 22, scope: !2652)
!3167 = !DILocation(line: 352, column: 10, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !2652, file: !977, line: 352, column: 9)
!3169 = !DILocation(line: 352, column: 13, scope: !3168)
!3170 = !DILocation(line: 352, column: 9, scope: !2652)
!3171 = !DILocation(line: 353, column: 9, scope: !3168)
!3172 = !DILocation(line: 354, column: 19, scope: !2652)
!3173 = !DILocation(line: 354, column: 22, scope: !2652)
!3174 = !DILocation(line: 354, column: 42, scope: !2652)
!3175 = !DILocation(line: 354, column: 45, scope: !2652)
!3176 = !DILocation(line: 354, column: 40, scope: !2652)
!3177 = !DILocation(line: 354, column: 36, scope: !2652)
!3178 = !DILocation(line: 354, column: 5, scope: !2652)
!3179 = !DILocation(line: 354, column: 8, scope: !2652)
!3180 = !DILocation(line: 354, column: 17, scope: !2652)
!3181 = !DILocation(line: 355, column: 67, scope: !2652)
!3182 = !DILocation(line: 355, column: 70, scope: !2652)
!3183 = !DILocation(line: 355, column: 65, scope: !2652)
!3184 = !DILocation(line: 355, column: 23, scope: !2652)
!3185 = !DILocation(line: 355, column: 5, scope: !2652)
!3186 = !DILocation(line: 355, column: 8, scope: !2652)
!3187 = !DILocation(line: 355, column: 21, scope: !2652)
!3188 = !DILocation(line: 356, column: 10, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !2652, file: !977, line: 356, column: 9)
!3190 = !DILocation(line: 356, column: 13, scope: !3189)
!3191 = !DILocation(line: 356, column: 9, scope: !2652)
!3192 = !DILocation(line: 357, column: 9, scope: !3189)
!3193 = !DILocation(line: 358, column: 18, scope: !2652)
!3194 = !DILocation(line: 358, column: 21, scope: !2652)
!3195 = !DILocation(line: 358, column: 40, scope: !2652)
!3196 = !DILocation(line: 358, column: 43, scope: !2652)
!3197 = !DILocation(line: 358, column: 38, scope: !2652)
!3198 = !DILocation(line: 358, column: 34, scope: !2652)
!3199 = !DILocation(line: 358, column: 5, scope: !2652)
!3200 = !DILocation(line: 358, column: 8, scope: !2652)
!3201 = !DILocation(line: 358, column: 16, scope: !2652)
!3202 = !DILocation(line: 361, column: 33, scope: !2652)
!3203 = !DILocation(line: 361, column: 36, scope: !2652)
!3204 = !DILocation(line: 361, column: 49, scope: !2652)
!3205 = !DILocation(line: 361, column: 59, scope: !2652)
!3206 = !DILocation(line: 361, column: 63, scope: !2652)
!3207 = !DILocation(line: 361, column: 46, scope: !2652)
!3208 = !DILocation(line: 361, column: 70, scope: !2652)
!3209 = !DILocation(line: 361, column: 73, scope: !2652)
!3210 = !DILocation(line: 361, column: 86, scope: !2652)
!3211 = !DILocation(line: 361, column: 96, scope: !2652)
!3212 = !DILocation(line: 361, column: 83, scope: !2652)
!3213 = !DILocation(line: 361, column: 101, scope: !2652)
!3214 = !DILocation(line: 361, column: 68, scope: !2652)
!3215 = !DILocation(line: 361, column: 23, scope: !2652)
!3216 = !DILocation(line: 361, column: 5, scope: !2652)
!3217 = !DILocation(line: 361, column: 8, scope: !2652)
!3218 = !DILocation(line: 361, column: 21, scope: !2652)
!3219 = !DILocation(line: 362, column: 10, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !2652, file: !977, line: 362, column: 9)
!3221 = !DILocation(line: 362, column: 13, scope: !3220)
!3222 = !DILocation(line: 362, column: 9, scope: !2652)
!3223 = !DILocation(line: 363, column: 9, scope: !3220)
!3224 = !DILocation(line: 364, column: 21, scope: !2652)
!3225 = !DILocation(line: 364, column: 24, scope: !2652)
!3226 = !DILocation(line: 364, column: 39, scope: !2652)
!3227 = !DILocation(line: 364, column: 42, scope: !2652)
!3228 = !DILocation(line: 364, column: 37, scope: !2652)
!3229 = !DILocation(line: 364, column: 52, scope: !2652)
!3230 = !DILocation(line: 364, column: 5, scope: !2652)
!3231 = !DILocation(line: 364, column: 8, scope: !2652)
!3232 = !DILocation(line: 364, column: 19, scope: !2652)
!3233 = !DILocation(line: 365, column: 21, scope: !2652)
!3234 = !DILocation(line: 365, column: 24, scope: !2652)
!3235 = !DILocation(line: 365, column: 39, scope: !2652)
!3236 = !DILocation(line: 365, column: 42, scope: !2652)
!3237 = !DILocation(line: 365, column: 55, scope: !2652)
!3238 = !DILocation(line: 365, column: 65, scope: !2652)
!3239 = !DILocation(line: 365, column: 69, scope: !2652)
!3240 = !DILocation(line: 365, column: 52, scope: !2652)
!3241 = !DILocation(line: 365, column: 37, scope: !2652)
!3242 = !DILocation(line: 365, column: 76, scope: !2652)
!3243 = !DILocation(line: 365, column: 79, scope: !2652)
!3244 = !DILocation(line: 365, column: 74, scope: !2652)
!3245 = !DILocation(line: 365, column: 89, scope: !2652)
!3246 = !DILocation(line: 365, column: 5, scope: !2652)
!3247 = !DILocation(line: 365, column: 8, scope: !2652)
!3248 = !DILocation(line: 365, column: 19, scope: !2652)
!3249 = !DILocation(line: 366, column: 21, scope: !2652)
!3250 = !DILocation(line: 366, column: 24, scope: !2652)
!3251 = !DILocation(line: 366, column: 37, scope: !2652)
!3252 = !DILocation(line: 366, column: 40, scope: !2652)
!3253 = !DILocation(line: 366, column: 53, scope: !2652)
!3254 = !DILocation(line: 366, column: 63, scope: !2652)
!3255 = !DILocation(line: 366, column: 50, scope: !2652)
!3256 = !DILocation(line: 366, column: 35, scope: !2652)
!3257 = !DILocation(line: 366, column: 5, scope: !2652)
!3258 = !DILocation(line: 366, column: 8, scope: !2652)
!3259 = !DILocation(line: 366, column: 19, scope: !2652)
!3260 = !DILocation(line: 369, column: 39, scope: !2652)
!3261 = !DILocation(line: 369, column: 42, scope: !2652)
!3262 = !DILocation(line: 369, column: 55, scope: !2652)
!3263 = !DILocation(line: 369, column: 65, scope: !2652)
!3264 = !DILocation(line: 369, column: 69, scope: !2652)
!3265 = !DILocation(line: 369, column: 52, scope: !2652)
!3266 = !DILocation(line: 369, column: 76, scope: !2652)
!3267 = !DILocation(line: 369, column: 79, scope: !2652)
!3268 = !DILocation(line: 369, column: 92, scope: !2652)
!3269 = !DILocation(line: 369, column: 102, scope: !2652)
!3270 = !DILocation(line: 369, column: 89, scope: !2652)
!3271 = !DILocation(line: 369, column: 107, scope: !2652)
!3272 = !DILocation(line: 369, column: 74, scope: !2652)
!3273 = !DILocation(line: 369, column: 27, scope: !2652)
!3274 = !DILocation(line: 369, column: 5, scope: !2652)
!3275 = !DILocation(line: 369, column: 8, scope: !2652)
!3276 = !DILocation(line: 369, column: 25, scope: !2652)
!3277 = !DILocation(line: 370, column: 10, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !2652, file: !977, line: 370, column: 9)
!3279 = !DILocation(line: 370, column: 13, scope: !3278)
!3280 = !DILocation(line: 370, column: 9, scope: !2652)
!3281 = !DILocation(line: 371, column: 9, scope: !3278)
!3282 = !DILocation(line: 372, column: 22, scope: !2652)
!3283 = !DILocation(line: 372, column: 25, scope: !2652)
!3284 = !DILocation(line: 372, column: 44, scope: !2652)
!3285 = !DILocation(line: 372, column: 47, scope: !2652)
!3286 = !DILocation(line: 372, column: 42, scope: !2652)
!3287 = !DILocation(line: 372, column: 57, scope: !2652)
!3288 = !DILocation(line: 372, column: 5, scope: !2652)
!3289 = !DILocation(line: 372, column: 8, scope: !2652)
!3290 = !DILocation(line: 372, column: 20, scope: !2652)
!3291 = !DILocation(line: 373, column: 36, scope: !2652)
!3292 = !DILocation(line: 373, column: 39, scope: !2652)
!3293 = !DILocation(line: 373, column: 52, scope: !2652)
!3294 = !DILocation(line: 373, column: 62, scope: !2652)
!3295 = !DILocation(line: 373, column: 66, scope: !2652)
!3296 = !DILocation(line: 373, column: 49, scope: !2652)
!3297 = !DILocation(line: 373, column: 73, scope: !2652)
!3298 = !DILocation(line: 373, column: 76, scope: !2652)
!3299 = !DILocation(line: 373, column: 89, scope: !2652)
!3300 = !DILocation(line: 373, column: 99, scope: !2652)
!3301 = !DILocation(line: 373, column: 86, scope: !2652)
!3302 = !DILocation(line: 373, column: 104, scope: !2652)
!3303 = !DILocation(line: 373, column: 71, scope: !2652)
!3304 = !DILocation(line: 373, column: 33, scope: !2652)
!3305 = !DILocation(line: 373, column: 31, scope: !2652)
!3306 = !DILocation(line: 373, column: 20, scope: !2652)
!3307 = !DILocation(line: 373, column: 5, scope: !2652)
!3308 = !DILocation(line: 373, column: 8, scope: !2652)
!3309 = !DILocation(line: 373, column: 18, scope: !2652)
!3310 = !DILocation(line: 374, column: 10, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !2652, file: !977, line: 374, column: 9)
!3312 = !DILocation(line: 374, column: 13, scope: !3311)
!3313 = !DILocation(line: 374, column: 9, scope: !2652)
!3314 = !DILocation(line: 375, column: 9, scope: !3311)
!3315 = !DILocation(line: 376, column: 18, scope: !2652)
!3316 = !DILocation(line: 376, column: 21, scope: !2652)
!3317 = !DILocation(line: 376, column: 33, scope: !2652)
!3318 = !DILocation(line: 376, column: 36, scope: !2652)
!3319 = !DILocation(line: 376, column: 31, scope: !2652)
!3320 = !DILocation(line: 376, column: 46, scope: !2652)
!3321 = !DILocation(line: 376, column: 5, scope: !2652)
!3322 = !DILocation(line: 376, column: 8, scope: !2652)
!3323 = !DILocation(line: 376, column: 16, scope: !2652)
!3324 = !DILocation(line: 377, column: 18, scope: !2652)
!3325 = !DILocation(line: 377, column: 21, scope: !2652)
!3326 = !DILocation(line: 377, column: 32, scope: !2652)
!3327 = !DILocation(line: 377, column: 35, scope: !2652)
!3328 = !DILocation(line: 377, column: 48, scope: !2652)
!3329 = !DILocation(line: 377, column: 58, scope: !2652)
!3330 = !DILocation(line: 377, column: 62, scope: !2652)
!3331 = !DILocation(line: 377, column: 45, scope: !2652)
!3332 = !DILocation(line: 377, column: 69, scope: !2652)
!3333 = !DILocation(line: 377, column: 72, scope: !2652)
!3334 = !DILocation(line: 377, column: 85, scope: !2652)
!3335 = !DILocation(line: 377, column: 95, scope: !2652)
!3336 = !DILocation(line: 377, column: 82, scope: !2652)
!3337 = !DILocation(line: 377, column: 100, scope: !2652)
!3338 = !DILocation(line: 377, column: 67, scope: !2652)
!3339 = !DILocation(line: 377, column: 29, scope: !2652)
!3340 = !DILocation(line: 377, column: 5, scope: !2652)
!3341 = !DILocation(line: 377, column: 8, scope: !2652)
!3342 = !DILocation(line: 377, column: 16, scope: !2652)
!3343 = !DILocation(line: 378, column: 41, scope: !2652)
!3344 = !DILocation(line: 378, column: 44, scope: !2652)
!3345 = !DILocation(line: 378, column: 57, scope: !2652)
!3346 = !DILocation(line: 378, column: 67, scope: !2652)
!3347 = !DILocation(line: 378, column: 71, scope: !2652)
!3348 = !DILocation(line: 378, column: 54, scope: !2652)
!3349 = !DILocation(line: 378, column: 78, scope: !2652)
!3350 = !DILocation(line: 378, column: 81, scope: !2652)
!3351 = !DILocation(line: 378, column: 94, scope: !2652)
!3352 = !DILocation(line: 378, column: 104, scope: !2652)
!3353 = !DILocation(line: 378, column: 91, scope: !2652)
!3354 = !DILocation(line: 378, column: 109, scope: !2652)
!3355 = !DILocation(line: 378, column: 76, scope: !2652)
!3356 = !DILocation(line: 378, column: 38, scope: !2652)
!3357 = !DILocation(line: 378, column: 36, scope: !2652)
!3358 = !DILocation(line: 378, column: 25, scope: !2652)
!3359 = !DILocation(line: 378, column: 5, scope: !2652)
!3360 = !DILocation(line: 378, column: 8, scope: !2652)
!3361 = !DILocation(line: 378, column: 23, scope: !2652)
!3362 = !DILocation(line: 379, column: 10, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !2652, file: !977, line: 379, column: 9)
!3364 = !DILocation(line: 379, column: 13, scope: !3363)
!3365 = !DILocation(line: 379, column: 9, scope: !2652)
!3366 = !DILocation(line: 380, column: 9, scope: !3363)
!3367 = !DILocation(line: 381, column: 23, scope: !2652)
!3368 = !DILocation(line: 381, column: 26, scope: !2652)
!3369 = !DILocation(line: 381, column: 43, scope: !2652)
!3370 = !DILocation(line: 381, column: 46, scope: !2652)
!3371 = !DILocation(line: 381, column: 41, scope: !2652)
!3372 = !DILocation(line: 381, column: 56, scope: !2652)
!3373 = !DILocation(line: 381, column: 5, scope: !2652)
!3374 = !DILocation(line: 381, column: 8, scope: !2652)
!3375 = !DILocation(line: 381, column: 21, scope: !2652)
!3376 = !DILocation(line: 382, column: 23, scope: !2652)
!3377 = !DILocation(line: 382, column: 26, scope: !2652)
!3378 = !DILocation(line: 382, column: 42, scope: !2652)
!3379 = !DILocation(line: 382, column: 45, scope: !2652)
!3380 = !DILocation(line: 382, column: 58, scope: !2652)
!3381 = !DILocation(line: 382, column: 68, scope: !2652)
!3382 = !DILocation(line: 382, column: 72, scope: !2652)
!3383 = !DILocation(line: 382, column: 55, scope: !2652)
!3384 = !DILocation(line: 382, column: 79, scope: !2652)
!3385 = !DILocation(line: 382, column: 82, scope: !2652)
!3386 = !DILocation(line: 382, column: 95, scope: !2652)
!3387 = !DILocation(line: 382, column: 105, scope: !2652)
!3388 = !DILocation(line: 382, column: 92, scope: !2652)
!3389 = !DILocation(line: 382, column: 110, scope: !2652)
!3390 = !DILocation(line: 382, column: 77, scope: !2652)
!3391 = !DILocation(line: 382, column: 39, scope: !2652)
!3392 = !DILocation(line: 382, column: 5, scope: !2652)
!3393 = !DILocation(line: 382, column: 8, scope: !2652)
!3394 = !DILocation(line: 382, column: 21, scope: !2652)
!3395 = !DILocation(line: 384, column: 9, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !2652, file: !977, line: 384, column: 9)
!3397 = !DILocation(line: 384, column: 12, scope: !3396)
!3398 = !DILocation(line: 384, column: 19, scope: !3396)
!3399 = !DILocation(line: 384, column: 28, scope: !3396)
!3400 = !DILocation(line: 384, column: 53, scope: !3396)
!3401 = !DILocation(line: 384, column: 56, scope: !3402)
!3402 = !DILexicalBlockFile(scope: !3396, file: !977, discriminator: 1)
!3403 = !DILocation(line: 384, column: 59, scope: !3402)
!3404 = !DILocation(line: 384, column: 66, scope: !3402)
!3405 = !DILocation(line: 384, column: 75, scope: !3402)
!3406 = !DILocation(line: 384, column: 9, scope: !3402)
!3407 = !DILocation(line: 385, column: 16, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !977, line: 385, column: 9)
!3409 = distinct !DILexicalBlock(scope: !3396, file: !977, line: 384, column: 100)
!3410 = !DILocation(line: 385, column: 14, scope: !3408)
!3411 = !DILocation(line: 385, column: 21, scope: !3412)
!3412 = !DILexicalBlockFile(scope: !3413, file: !977, discriminator: 1)
!3413 = distinct !DILexicalBlock(scope: !3408, file: !977, line: 385, column: 9)
!3414 = !DILocation(line: 385, column: 23, scope: !3412)
!3415 = !DILocation(line: 385, column: 9, scope: !3412)
!3416 = !DILocation(line: 386, column: 57, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3413, file: !977, line: 386, column: 17)
!3418 = !DILocation(line: 386, column: 60, scope: !3417)
!3419 = !DILocation(line: 386, column: 47, scope: !3417)
!3420 = !DILocation(line: 386, column: 38, scope: !3417)
!3421 = !DILocation(line: 386, column: 40, scope: !3417)
!3422 = !DILocation(line: 386, column: 19, scope: !3417)
!3423 = !DILocation(line: 386, column: 30, scope: !3417)
!3424 = !DILocation(line: 386, column: 32, scope: !3417)
!3425 = !DILocation(line: 386, column: 22, scope: !3417)
!3426 = !DILocation(line: 386, column: 45, scope: !3417)
!3427 = !DILocation(line: 386, column: 17, scope: !3413)
!3428 = !DILocation(line: 387, column: 17, scope: !3417)
!3429 = !DILocation(line: 386, column: 73, scope: !3430)
!3430 = !DILexicalBlockFile(scope: !3417, file: !977, discriminator: 1)
!3431 = !DILocation(line: 385, column: 29, scope: !3432)
!3432 = !DILexicalBlockFile(scope: !3413, file: !977, discriminator: 2)
!3433 = !DILocation(line: 385, column: 9, scope: !3432)
!3434 = distinct !{!3434, !3435}
!3435 = !DILocation(line: 385, column: 9, scope: !3409)
!3436 = !DILocation(line: 388, column: 5, scope: !3409)
!3437 = !DILocation(line: 390, column: 34, scope: !2652)
!3438 = !DILocation(line: 390, column: 37, scope: !2652)
!3439 = !DILocation(line: 390, column: 45, scope: !2652)
!3440 = !DILocation(line: 390, column: 48, scope: !2652)
!3441 = !DILocation(line: 390, column: 53, scope: !2652)
!3442 = !DILocation(line: 390, column: 56, scope: !2652)
!3443 = !DILocation(line: 391, column: 34, scope: !2652)
!3444 = !DILocation(line: 391, column: 37, scope: !2652)
!3445 = !DILocation(line: 391, column: 44, scope: !2652)
!3446 = !DILocation(line: 391, column: 47, scope: !2652)
!3447 = !DILocation(line: 392, column: 34, scope: !2652)
!3448 = !DILocation(line: 392, column: 37, scope: !2652)
!3449 = !DILocation(line: 392, column: 47, scope: !2652)
!3450 = !DILocation(line: 392, column: 50, scope: !2652)
!3451 = !DILocation(line: 390, column: 11, scope: !2652)
!3452 = !DILocation(line: 390, column: 9, scope: !2652)
!3453 = !DILocation(line: 393, column: 9, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !2652, file: !977, line: 393, column: 9)
!3455 = !DILocation(line: 393, column: 13, scope: !3454)
!3456 = !DILocation(line: 393, column: 9, scope: !2652)
!3457 = !DILocation(line: 394, column: 9, scope: !3454)
!3458 = !DILocation(line: 396, column: 5, scope: !2652)
!3459 = !DILocation(line: 399, column: 23, scope: !2652)
!3460 = !DILocation(line: 399, column: 26, scope: !2652)
!3461 = !DILocation(line: 399, column: 5, scope: !2652)
!3462 = !DILocation(line: 400, column: 12, scope: !2652)
!3463 = !DILocation(line: 400, column: 5, scope: !2652)
!3464 = !DILocation(line: 401, column: 1, scope: !2652)
!3465 = distinct !DISubprogram(name: "ff_vc1_decode_end", scope: !977, file: !977, line: 587, type: !1102, isLocal: false, isDefinition: true, scopeLine: 588, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!3466 = !DILocalVariable(name: "avctx", arg: 1, scope: !3465, file: !977, line: 587, type: !1104)
!3467 = !DILocation(line: 587, column: 61, scope: !3465)
!3468 = !DILocalVariable(name: "v", scope: !3465, file: !977, line: 589, type: !2655)
!3469 = !DILocation(line: 589, column: 17, scope: !3465)
!3470 = !DILocation(line: 589, column: 21, scope: !3465)
!3471 = !DILocation(line: 589, column: 28, scope: !3465)
!3472 = !DILocalVariable(name: "i", scope: !3465, file: !977, line: 590, type: !971)
!3473 = !DILocation(line: 590, column: 9, scope: !3465)
!3474 = !DILocation(line: 592, column: 20, scope: !3465)
!3475 = !DILocation(line: 592, column: 23, scope: !3465)
!3476 = !DILocation(line: 592, column: 5, scope: !3465)
!3477 = !DILocation(line: 594, column: 12, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3465, file: !977, line: 594, column: 5)
!3479 = !DILocation(line: 594, column: 10, scope: !3478)
!3480 = !DILocation(line: 594, column: 17, scope: !3481)
!3481 = !DILexicalBlockFile(scope: !3482, file: !977, discriminator: 1)
!3482 = distinct !DILexicalBlock(scope: !3478, file: !977, line: 594, column: 5)
!3483 = !DILocation(line: 594, column: 19, scope: !3481)
!3484 = !DILocation(line: 594, column: 5, scope: !3481)
!3485 = !DILocation(line: 595, column: 38, scope: !3482)
!3486 = !DILocation(line: 595, column: 40, scope: !3482)
!3487 = !DILocation(line: 595, column: 19, scope: !3482)
!3488 = !DILocation(line: 595, column: 30, scope: !3482)
!3489 = !DILocation(line: 595, column: 32, scope: !3482)
!3490 = !DILocation(line: 595, column: 22, scope: !3482)
!3491 = !DILocation(line: 595, column: 18, scope: !3482)
!3492 = !DILocation(line: 595, column: 9, scope: !3482)
!3493 = !DILocation(line: 594, column: 25, scope: !3494)
!3494 = !DILexicalBlockFile(scope: !3482, file: !977, discriminator: 2)
!3495 = !DILocation(line: 594, column: 5, scope: !3494)
!3496 = distinct !{!3496, !3497}
!3497 = !DILocation(line: 594, column: 5, scope: !3465)
!3498 = !DILocation(line: 596, column: 15, scope: !3465)
!3499 = !DILocation(line: 596, column: 18, scope: !3465)
!3500 = !DILocation(line: 596, column: 14, scope: !3465)
!3501 = !DILocation(line: 596, column: 5, scope: !3465)
!3502 = !DILocation(line: 597, column: 15, scope: !3465)
!3503 = !DILocation(line: 597, column: 18, scope: !3465)
!3504 = !DILocation(line: 597, column: 14, scope: !3465)
!3505 = !DILocation(line: 597, column: 5, scope: !3465)
!3506 = !DILocation(line: 598, column: 24, scope: !3465)
!3507 = !DILocation(line: 598, column: 27, scope: !3465)
!3508 = !DILocation(line: 598, column: 5, scope: !3465)
!3509 = !DILocation(line: 599, column: 15, scope: !3465)
!3510 = !DILocation(line: 599, column: 18, scope: !3465)
!3511 = !DILocation(line: 599, column: 14, scope: !3465)
!3512 = !DILocation(line: 599, column: 5, scope: !3465)
!3513 = !DILocation(line: 600, column: 15, scope: !3465)
!3514 = !DILocation(line: 600, column: 18, scope: !3465)
!3515 = !DILocation(line: 600, column: 14, scope: !3465)
!3516 = !DILocation(line: 600, column: 5, scope: !3465)
!3517 = !DILocation(line: 601, column: 15, scope: !3465)
!3518 = !DILocation(line: 601, column: 18, scope: !3465)
!3519 = !DILocation(line: 601, column: 14, scope: !3465)
!3520 = !DILocation(line: 601, column: 5, scope: !3465)
!3521 = !DILocation(line: 602, column: 15, scope: !3465)
!3522 = !DILocation(line: 602, column: 18, scope: !3465)
!3523 = !DILocation(line: 602, column: 14, scope: !3465)
!3524 = !DILocation(line: 602, column: 5, scope: !3465)
!3525 = !DILocation(line: 603, column: 15, scope: !3465)
!3526 = !DILocation(line: 603, column: 18, scope: !3465)
!3527 = !DILocation(line: 603, column: 14, scope: !3465)
!3528 = !DILocation(line: 603, column: 5, scope: !3465)
!3529 = !DILocation(line: 604, column: 15, scope: !3465)
!3530 = !DILocation(line: 604, column: 18, scope: !3465)
!3531 = !DILocation(line: 604, column: 14, scope: !3465)
!3532 = !DILocation(line: 604, column: 5, scope: !3465)
!3533 = !DILocation(line: 605, column: 15, scope: !3465)
!3534 = !DILocation(line: 605, column: 18, scope: !3465)
!3535 = !DILocation(line: 605, column: 14, scope: !3465)
!3536 = !DILocation(line: 605, column: 5, scope: !3465)
!3537 = !DILocation(line: 606, column: 15, scope: !3465)
!3538 = !DILocation(line: 606, column: 18, scope: !3465)
!3539 = !DILocation(line: 606, column: 14, scope: !3465)
!3540 = !DILocation(line: 606, column: 5, scope: !3465)
!3541 = !DILocation(line: 607, column: 15, scope: !3465)
!3542 = !DILocation(line: 607, column: 18, scope: !3465)
!3543 = !DILocation(line: 607, column: 14, scope: !3465)
!3544 = !DILocation(line: 607, column: 5, scope: !3465)
!3545 = !DILocation(line: 608, column: 15, scope: !3465)
!3546 = !DILocation(line: 608, column: 18, scope: !3465)
!3547 = !DILocation(line: 608, column: 14, scope: !3465)
!3548 = !DILocation(line: 608, column: 5, scope: !3465)
!3549 = !DILocation(line: 609, column: 15, scope: !3465)
!3550 = !DILocation(line: 609, column: 18, scope: !3465)
!3551 = !DILocation(line: 609, column: 14, scope: !3465)
!3552 = !DILocation(line: 609, column: 5, scope: !3465)
!3553 = !DILocation(line: 610, column: 15, scope: !3465)
!3554 = !DILocation(line: 610, column: 18, scope: !3465)
!3555 = !DILocation(line: 610, column: 14, scope: !3465)
!3556 = !DILocation(line: 610, column: 5, scope: !3465)
!3557 = !DILocation(line: 611, column: 15, scope: !3465)
!3558 = !DILocation(line: 611, column: 18, scope: !3465)
!3559 = !DILocation(line: 611, column: 14, scope: !3465)
!3560 = !DILocation(line: 611, column: 5, scope: !3465)
!3561 = !DILocation(line: 612, column: 15, scope: !3465)
!3562 = !DILocation(line: 612, column: 18, scope: !3465)
!3563 = !DILocation(line: 612, column: 14, scope: !3465)
!3564 = !DILocation(line: 612, column: 5, scope: !3465)
!3565 = !DILocation(line: 613, column: 15, scope: !3465)
!3566 = !DILocation(line: 613, column: 18, scope: !3465)
!3567 = !DILocation(line: 613, column: 14, scope: !3465)
!3568 = !DILocation(line: 613, column: 5, scope: !3465)
!3569 = !DILocation(line: 614, column: 28, scope: !3465)
!3570 = !DILocation(line: 614, column: 31, scope: !3465)
!3571 = !DILocation(line: 614, column: 5, scope: !3465)
!3572 = !DILocation(line: 615, column: 5, scope: !3465)
!3573 = distinct !DISubprogram(name: "ff_vc1_init_transposed_scantables", scope: !977, file: !977, line: 403, type: !3574, isLocal: false, isDefinition: true, scopeLine: 404, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{null, !2655}
!3576 = !DILocalVariable(name: "v", arg: 1, scope: !3573, file: !977, line: 403, type: !2655)
!3577 = !DILocation(line: 403, column: 74, scope: !3573)
!3578 = !DILocalVariable(name: "i", scope: !3573, file: !977, line: 405, type: !971)
!3579 = !DILocation(line: 405, column: 9, scope: !3573)
!3580 = !DILocation(line: 406, column: 12, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3573, file: !977, line: 406, column: 5)
!3582 = !DILocation(line: 406, column: 10, scope: !3581)
!3583 = !DILocation(line: 406, column: 17, scope: !3584)
!3584 = !DILexicalBlockFile(scope: !3585, file: !977, discriminator: 1)
!3585 = distinct !DILexicalBlock(scope: !3581, file: !977, line: 406, column: 5)
!3586 = !DILocation(line: 406, column: 19, scope: !3584)
!3587 = !DILocation(line: 406, column: 5, scope: !3584)
!3588 = !DILocation(line: 408, column: 51, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3585, file: !977, line: 406, column: 30)
!3590 = !DILocation(line: 408, column: 30, scope: !3589)
!3591 = !DILocation(line: 408, column: 29, scope: !3589)
!3592 = !DILocation(line: 408, column: 55, scope: !3589)
!3593 = !DILocation(line: 408, column: 87, scope: !3589)
!3594 = !DILocation(line: 408, column: 66, scope: !3589)
!3595 = !DILocation(line: 408, column: 65, scope: !3589)
!3596 = !DILocation(line: 408, column: 91, scope: !3589)
!3597 = !DILocation(line: 408, column: 96, scope: !3589)
!3598 = !DILocation(line: 408, column: 61, scope: !3589)
!3599 = !DILocation(line: 408, column: 27, scope: !3589)
!3600 = !DILocation(line: 408, column: 22, scope: !3589)
!3601 = !DILocation(line: 408, column: 9, scope: !3589)
!3602 = !DILocation(line: 408, column: 12, scope: !3589)
!3603 = !DILocation(line: 408, column: 25, scope: !3589)
!3604 = !DILocation(line: 409, column: 51, scope: !3589)
!3605 = !DILocation(line: 409, column: 30, scope: !3589)
!3606 = !DILocation(line: 409, column: 29, scope: !3589)
!3607 = !DILocation(line: 409, column: 55, scope: !3589)
!3608 = !DILocation(line: 409, column: 87, scope: !3589)
!3609 = !DILocation(line: 409, column: 66, scope: !3589)
!3610 = !DILocation(line: 409, column: 65, scope: !3589)
!3611 = !DILocation(line: 409, column: 91, scope: !3589)
!3612 = !DILocation(line: 409, column: 96, scope: !3589)
!3613 = !DILocation(line: 409, column: 61, scope: !3589)
!3614 = !DILocation(line: 409, column: 27, scope: !3589)
!3615 = !DILocation(line: 409, column: 22, scope: !3589)
!3616 = !DILocation(line: 409, column: 9, scope: !3589)
!3617 = !DILocation(line: 409, column: 12, scope: !3589)
!3618 = !DILocation(line: 409, column: 25, scope: !3589)
!3619 = !DILocation(line: 410, column: 51, scope: !3589)
!3620 = !DILocation(line: 410, column: 30, scope: !3589)
!3621 = !DILocation(line: 410, column: 29, scope: !3589)
!3622 = !DILocation(line: 410, column: 55, scope: !3589)
!3623 = !DILocation(line: 410, column: 87, scope: !3589)
!3624 = !DILocation(line: 410, column: 66, scope: !3589)
!3625 = !DILocation(line: 410, column: 65, scope: !3589)
!3626 = !DILocation(line: 410, column: 91, scope: !3589)
!3627 = !DILocation(line: 410, column: 96, scope: !3589)
!3628 = !DILocation(line: 410, column: 61, scope: !3589)
!3629 = !DILocation(line: 410, column: 27, scope: !3589)
!3630 = !DILocation(line: 410, column: 22, scope: !3589)
!3631 = !DILocation(line: 410, column: 9, scope: !3589)
!3632 = !DILocation(line: 410, column: 12, scope: !3589)
!3633 = !DILocation(line: 410, column: 25, scope: !3589)
!3634 = !DILocation(line: 411, column: 51, scope: !3589)
!3635 = !DILocation(line: 411, column: 30, scope: !3589)
!3636 = !DILocation(line: 411, column: 29, scope: !3589)
!3637 = !DILocation(line: 411, column: 55, scope: !3589)
!3638 = !DILocation(line: 411, column: 87, scope: !3589)
!3639 = !DILocation(line: 411, column: 66, scope: !3589)
!3640 = !DILocation(line: 411, column: 65, scope: !3589)
!3641 = !DILocation(line: 411, column: 91, scope: !3589)
!3642 = !DILocation(line: 411, column: 96, scope: !3589)
!3643 = !DILocation(line: 411, column: 61, scope: !3589)
!3644 = !DILocation(line: 411, column: 27, scope: !3589)
!3645 = !DILocation(line: 411, column: 22, scope: !3589)
!3646 = !DILocation(line: 411, column: 9, scope: !3589)
!3647 = !DILocation(line: 411, column: 12, scope: !3589)
!3648 = !DILocation(line: 411, column: 25, scope: !3589)
!3649 = !DILocation(line: 412, column: 57, scope: !3589)
!3650 = !DILocation(line: 412, column: 28, scope: !3589)
!3651 = !DILocation(line: 412, column: 27, scope: !3589)
!3652 = !DILocation(line: 412, column: 61, scope: !3589)
!3653 = !DILocation(line: 412, column: 101, scope: !3589)
!3654 = !DILocation(line: 412, column: 72, scope: !3589)
!3655 = !DILocation(line: 412, column: 71, scope: !3589)
!3656 = !DILocation(line: 412, column: 105, scope: !3589)
!3657 = !DILocation(line: 412, column: 110, scope: !3589)
!3658 = !DILocation(line: 412, column: 67, scope: !3589)
!3659 = !DILocation(line: 412, column: 25, scope: !3589)
!3660 = !DILocation(line: 412, column: 20, scope: !3589)
!3661 = !DILocation(line: 412, column: 9, scope: !3589)
!3662 = !DILocation(line: 412, column: 12, scope: !3589)
!3663 = !DILocation(line: 412, column: 23, scope: !3589)
!3664 = !DILocation(line: 413, column: 5, scope: !3589)
!3665 = !DILocation(line: 406, column: 26, scope: !3666)
!3666 = !DILexicalBlockFile(scope: !3585, file: !977, discriminator: 2)
!3667 = !DILocation(line: 406, column: 5, scope: !3666)
!3668 = distinct !{!3668, !3669}
!3669 = !DILocation(line: 406, column: 5, scope: !3573)
!3670 = !DILocation(line: 414, column: 5, scope: !3573)
!3671 = !DILocation(line: 414, column: 8, scope: !3573)
!3672 = !DILocation(line: 414, column: 20, scope: !3573)
!3673 = !DILocation(line: 415, column: 5, scope: !3573)
!3674 = !DILocation(line: 415, column: 8, scope: !3573)
!3675 = !DILocation(line: 415, column: 19, scope: !3573)
!3676 = !DILocation(line: 416, column: 1, scope: !3573)
!3677 = distinct !DISubprogram(name: "vc1_decode_init", scope: !977, file: !977, line: 422, type: !1102, isLocal: true, isDefinition: true, scopeLine: 423, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!3678 = !DILocalVariable(name: "x", arg: 1, scope: !3679, file: !3680, line: 66, type: !968)
!3679 = distinct !DISubprogram(name: "av_bswap32", scope: !3680, file: !3680, line: 66, type: !3681, isLocal: true, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!3680 = !DIFile(filename: "./libavutil/bswap.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!3681 = !DISubroutineType(types: !3682)
!3682 = !{!968, !968}
!3683 = !DILocation(line: 66, column: 98, scope: !3679, inlinedAt: !3684)
!3684 = distinct !DILocation(line: 486, column: 21, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !977, line: 479, column: 42)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !977, line: 479, column: 9)
!3687 = distinct !DILexicalBlock(scope: !3688, file: !977, line: 479, column: 9)
!3688 = distinct !DILexicalBlock(scope: !3689, file: !977, line: 460, column: 12)
!3689 = distinct !DILexicalBlock(scope: !3677, file: !977, line: 440, column: 9)
!3690 = !DILocalVariable(name: "src", arg: 1, scope: !3691, file: !946, line: 70, type: !1547)
!3691 = distinct !DISubprogram(name: "vc1_unescape_buffer", scope: !946, file: !946, line: 70, type: !3692, isLocal: true, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{!971, !1547, !971, !1132}
!3694 = !DILocation(line: 70, column: 85, scope: !3691, inlinedAt: !3695)
!3695 = distinct !DILocation(line: 484, column: 25, scope: !3685)
!3696 = !DILocalVariable(name: "size", arg: 2, scope: !3691, file: !946, line: 70, type: !971)
!3697 = !DILocation(line: 70, column: 94, scope: !3691, inlinedAt: !3695)
!3698 = !DILocalVariable(name: "dst", arg: 3, scope: !3691, file: !946, line: 70, type: !1132)
!3699 = !DILocation(line: 70, column: 109, scope: !3691, inlinedAt: !3695)
!3700 = !DILocalVariable(name: "dsize", scope: !3691, file: !946, line: 72, type: !971)
!3701 = !DILocation(line: 72, column: 9, scope: !3691, inlinedAt: !3695)
!3702 = !DILocalVariable(name: "i", scope: !3691, file: !946, line: 72, type: !971)
!3703 = !DILocation(line: 72, column: 20, scope: !3691, inlinedAt: !3695)
!3704 = !DILocalVariable(name: "src", arg: 1, scope: !3705, file: !946, line: 59, type: !1547)
!3705 = distinct !DISubprogram(name: "find_next_marker", scope: !946, file: !946, line: 59, type: !3706, isLocal: true, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{!1547, !1547, !1547}
!3708 = !DILocation(line: 59, column: 93, scope: !3705, inlinedAt: !3709)
!3709 = distinct !DILocation(line: 480, column: 20, scope: !3685)
!3710 = !DILocalVariable(name: "end", arg: 2, scope: !3705, file: !946, line: 59, type: !1547)
!3711 = !DILocation(line: 59, column: 113, scope: !3705, inlinedAt: !3709)
!3712 = !DILocalVariable(name: "mrk", scope: !3713, file: !946, line: 62, type: !968)
!3713 = distinct !DILexicalBlock(scope: !3714, file: !946, line: 61, column: 25)
!3714 = distinct !DILexicalBlock(scope: !3705, file: !946, line: 61, column: 9)
!3715 = !DILocation(line: 62, column: 18, scope: !3713, inlinedAt: !3709)
!3716 = !DILocation(line: 59, column: 93, scope: !3705, inlinedAt: !3717)
!3717 = distinct !DILocation(line: 477, column: 17, scope: !3688)
!3718 = !DILocation(line: 59, column: 113, scope: !3705, inlinedAt: !3717)
!3719 = !DILocation(line: 62, column: 18, scope: !3713, inlinedAt: !3717)
!3720 = !DILocalVariable(name: "avctx", arg: 1, scope: !3677, file: !977, line: 422, type: !1104)
!3721 = !DILocation(line: 422, column: 66, scope: !3677)
!3722 = !DILocalVariable(name: "v", scope: !3677, file: !977, line: 424, type: !2655)
!3723 = !DILocation(line: 424, column: 17, scope: !3677)
!3724 = !DILocation(line: 424, column: 21, scope: !3677)
!3725 = !DILocation(line: 424, column: 28, scope: !3677)
!3726 = !DILocalVariable(name: "s", scope: !3677, file: !977, line: 425, type: !3015)
!3727 = !DILocation(line: 425, column: 21, scope: !3677)
!3728 = !DILocation(line: 425, column: 26, scope: !3677)
!3729 = !DILocation(line: 425, column: 29, scope: !3677)
!3730 = !DILocalVariable(name: "gb", scope: !3677, file: !977, line: 426, type: !2192)
!3731 = !DILocation(line: 426, column: 19, scope: !3677)
!3732 = !DILocalVariable(name: "ret", scope: !3677, file: !977, line: 427, type: !971)
!3733 = !DILocation(line: 427, column: 9, scope: !3677)
!3734 = !DILocation(line: 430, column: 23, scope: !3677)
!3735 = !DILocation(line: 430, column: 30, scope: !3677)
!3736 = !DILocation(line: 430, column: 5, scope: !3677)
!3737 = !DILocation(line: 430, column: 8, scope: !3677)
!3738 = !DILocation(line: 430, column: 21, scope: !3677)
!3739 = !DILocation(line: 431, column: 24, scope: !3677)
!3740 = !DILocation(line: 431, column: 31, scope: !3677)
!3741 = !DILocation(line: 431, column: 5, scope: !3677)
!3742 = !DILocation(line: 431, column: 8, scope: !3677)
!3743 = !DILocation(line: 431, column: 22, scope: !3677)
!3744 = !DILocation(line: 433, column: 10, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3677, file: !977, line: 433, column: 9)
!3746 = !DILocation(line: 433, column: 17, scope: !3745)
!3747 = !DILocation(line: 433, column: 32, scope: !3745)
!3748 = !DILocation(line: 433, column: 36, scope: !3749)
!3749 = !DILexicalBlockFile(scope: !3745, file: !977, discriminator: 1)
!3750 = !DILocation(line: 433, column: 43, scope: !3749)
!3751 = !DILocation(line: 433, column: 9, scope: !3749)
!3752 = !DILocation(line: 434, column: 9, scope: !3745)
!3753 = !DILocation(line: 435, column: 18, scope: !3677)
!3754 = !DILocation(line: 435, column: 5, scope: !3677)
!3755 = !DILocation(line: 435, column: 8, scope: !3677)
!3756 = !DILocation(line: 435, column: 10, scope: !3677)
!3757 = !DILocation(line: 435, column: 16, scope: !3677)
!3758 = !DILocation(line: 437, column: 35, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3677, file: !977, line: 437, column: 9)
!3760 = !DILocation(line: 437, column: 16, scope: !3759)
!3761 = !DILocation(line: 437, column: 14, scope: !3759)
!3762 = !DILocation(line: 437, column: 39, scope: !3759)
!3763 = !DILocation(line: 437, column: 9, scope: !3677)
!3764 = !DILocation(line: 438, column: 16, scope: !3759)
!3765 = !DILocation(line: 438, column: 9, scope: !3759)
!3766 = !DILocation(line: 440, column: 9, scope: !3689)
!3767 = !DILocation(line: 440, column: 16, scope: !3689)
!3768 = !DILocation(line: 440, column: 25, scope: !3689)
!3769 = !DILocation(line: 440, column: 45, scope: !3689)
!3770 = !DILocation(line: 440, column: 48, scope: !3771)
!3771 = !DILexicalBlockFile(scope: !3689, file: !977, discriminator: 1)
!3772 = !DILocation(line: 440, column: 55, scope: !3771)
!3773 = !DILocation(line: 440, column: 64, scope: !3771)
!3774 = !DILocation(line: 440, column: 9, scope: !3771)
!3775 = !DILocalVariable(name: "count", scope: !3776, file: !977, line: 441, type: !971)
!3776 = distinct !DILexicalBlock(scope: !3689, file: !977, line: 440, column: 90)
!3777 = !DILocation(line: 441, column: 13, scope: !3776)
!3778 = !DILocation(line: 448, column: 28, scope: !3776)
!3779 = !DILocation(line: 448, column: 35, scope: !3776)
!3780 = !DILocation(line: 448, column: 46, scope: !3776)
!3781 = !DILocation(line: 448, column: 53, scope: !3776)
!3782 = !DILocation(line: 448, column: 67, scope: !3776)
!3783 = !DILocation(line: 448, column: 9, scope: !3776)
!3784 = !DILocation(line: 450, column: 50, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3776, file: !977, line: 450, column: 13)
!3786 = !DILocation(line: 450, column: 57, scope: !3785)
!3787 = !DILocation(line: 450, column: 20, scope: !3785)
!3788 = !DILocation(line: 450, column: 18, scope: !3785)
!3789 = !DILocation(line: 450, column: 66, scope: !3785)
!3790 = !DILocation(line: 450, column: 13, scope: !3776)
!3791 = !DILocation(line: 451, column: 18, scope: !3785)
!3792 = !DILocation(line: 451, column: 11, scope: !3785)
!3793 = !DILocation(line: 453, column: 17, scope: !3776)
!3794 = !DILocation(line: 453, column: 24, scope: !3776)
!3795 = !DILocation(line: 453, column: 38, scope: !3776)
!3796 = !DILocation(line: 453, column: 43, scope: !3776)
!3797 = !DILocation(line: 453, column: 41, scope: !3776)
!3798 = !DILocation(line: 453, column: 15, scope: !3776)
!3799 = !DILocation(line: 454, column: 13, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3776, file: !977, line: 454, column: 13)
!3801 = !DILocation(line: 454, column: 19, scope: !3800)
!3802 = !DILocation(line: 454, column: 13, scope: !3776)
!3803 = !DILocation(line: 455, column: 20, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3800, file: !977, line: 454, column: 24)
!3805 = !DILocation(line: 456, column: 20, scope: !3804)
!3806 = !DILocation(line: 456, column: 48, scope: !3804)
!3807 = !DILocation(line: 456, column: 55, scope: !3804)
!3808 = !DILocation(line: 456, column: 47, scope: !3804)
!3809 = !DILocation(line: 456, column: 47, scope: !3810)
!3810 = !DILexicalBlockFile(scope: !3804, file: !977, discriminator: 1)
!3811 = !DILocation(line: 456, column: 72, scope: !3812)
!3812 = !DILexicalBlockFile(scope: !3804, file: !977, discriminator: 2)
!3813 = !DILocation(line: 456, column: 47, scope: !3812)
!3814 = !DILocation(line: 456, column: 47, scope: !3815)
!3815 = !DILexicalBlockFile(scope: !3804, file: !977, discriminator: 3)
!3816 = !DILocation(line: 456, column: 27, scope: !3815)
!3817 = !DILocation(line: 455, column: 13, scope: !3810)
!3818 = !DILocation(line: 457, column: 9, scope: !3804)
!3819 = !DILocation(line: 457, column: 20, scope: !3820)
!3820 = !DILexicalBlockFile(scope: !3821, file: !977, discriminator: 1)
!3821 = distinct !DILexicalBlock(scope: !3800, file: !977, line: 457, column: 20)
!3822 = !DILocation(line: 457, column: 26, scope: !3820)
!3823 = !DILocation(line: 458, column: 20, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3821, file: !977, line: 457, column: 31)
!3825 = !DILocation(line: 458, column: 62, scope: !3824)
!3826 = !DILocation(line: 458, column: 61, scope: !3824)
!3827 = !DILocation(line: 458, column: 13, scope: !3824)
!3828 = !DILocation(line: 459, column: 9, scope: !3824)
!3829 = !DILocation(line: 460, column: 5, scope: !3776)
!3830 = !DILocalVariable(name: "start", scope: !3688, file: !977, line: 461, type: !1547)
!3831 = !DILocation(line: 461, column: 24, scope: !3688)
!3832 = !DILocation(line: 461, column: 32, scope: !3688)
!3833 = !DILocation(line: 461, column: 39, scope: !3688)
!3834 = !DILocalVariable(name: "end", scope: !3688, file: !977, line: 462, type: !1132)
!3835 = !DILocation(line: 462, column: 18, scope: !3688)
!3836 = !DILocation(line: 462, column: 24, scope: !3688)
!3837 = !DILocation(line: 462, column: 31, scope: !3688)
!3838 = !DILocation(line: 462, column: 43, scope: !3688)
!3839 = !DILocation(line: 462, column: 50, scope: !3688)
!3840 = !DILocation(line: 462, column: 41, scope: !3688)
!3841 = !DILocalVariable(name: "next", scope: !3688, file: !977, line: 463, type: !1547)
!3842 = !DILocation(line: 463, column: 24, scope: !3688)
!3843 = !DILocalVariable(name: "size", scope: !3688, file: !977, line: 464, type: !971)
!3844 = !DILocation(line: 464, column: 13, scope: !3688)
!3845 = !DILocalVariable(name: "buf2_size", scope: !3688, file: !977, line: 464, type: !971)
!3846 = !DILocation(line: 464, column: 19, scope: !3688)
!3847 = !DILocalVariable(name: "buf2", scope: !3688, file: !977, line: 465, type: !1132)
!3848 = !DILocation(line: 465, column: 18, scope: !3688)
!3849 = !DILocalVariable(name: "seq_initialized", scope: !3688, file: !977, line: 466, type: !971)
!3850 = !DILocation(line: 466, column: 13, scope: !3688)
!3851 = !DILocalVariable(name: "ep_initialized", scope: !3688, file: !977, line: 466, type: !971)
!3852 = !DILocation(line: 466, column: 34, scope: !3688)
!3853 = !DILocation(line: 468, column: 13, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3688, file: !977, line: 468, column: 13)
!3855 = !DILocation(line: 468, column: 20, scope: !3854)
!3856 = !DILocation(line: 468, column: 35, scope: !3854)
!3857 = !DILocation(line: 468, column: 13, scope: !3688)
!3858 = !DILocation(line: 469, column: 20, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3854, file: !977, line: 468, column: 41)
!3860 = !DILocation(line: 469, column: 65, scope: !3859)
!3861 = !DILocation(line: 469, column: 72, scope: !3859)
!3862 = !DILocation(line: 469, column: 13, scope: !3859)
!3863 = !DILocation(line: 470, column: 13, scope: !3859)
!3864 = !DILocation(line: 473, column: 27, scope: !3688)
!3865 = !DILocation(line: 473, column: 34, scope: !3688)
!3866 = !DILocation(line: 473, column: 49, scope: !3688)
!3867 = !DILocation(line: 473, column: 16, scope: !3688)
!3868 = !DILocation(line: 473, column: 14, scope: !3688)
!3869 = !DILocation(line: 474, column: 14, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3688, file: !977, line: 474, column: 13)
!3871 = !DILocation(line: 474, column: 13, scope: !3688)
!3872 = !DILocation(line: 475, column: 13, scope: !3870)
!3873 = !DILocation(line: 477, column: 34, scope: !3688)
!3874 = !DILocation(line: 477, column: 41, scope: !3688)
!3875 = !DILocation(line: 477, column: 17, scope: !3688)
!3876 = !DILocation(line: 61, column: 9, scope: !3714, inlinedAt: !3717)
!3877 = !DILocation(line: 61, column: 15, scope: !3714, inlinedAt: !3717)
!3878 = !DILocation(line: 61, column: 13, scope: !3714, inlinedAt: !3717)
!3879 = !DILocation(line: 61, column: 19, scope: !3714, inlinedAt: !3717)
!3880 = !DILocation(line: 61, column: 9, scope: !3705, inlinedAt: !3717)
!3881 = !DILocation(line: 63, column: 38, scope: !3713, inlinedAt: !3717)
!3882 = !DILocation(line: 63, column: 43, scope: !3713, inlinedAt: !3717)
!3883 = !DILocation(line: 63, column: 15, scope: !3713, inlinedAt: !3717)
!3884 = !DILocation(line: 63, column: 13, scope: !3713, inlinedAt: !3717)
!3885 = !DILocation(line: 64, column: 16, scope: !3886, inlinedAt: !3717)
!3886 = distinct !DILexicalBlock(scope: !3713, file: !946, line: 64, column: 13)
!3887 = !DILocation(line: 64, column: 21, scope: !3886, inlinedAt: !3717)
!3888 = !DILocation(line: 64, column: 30, scope: !3886, inlinedAt: !3717)
!3889 = !DILocation(line: 64, column: 13, scope: !3713, inlinedAt: !3717)
!3890 = !DILocation(line: 65, column: 20, scope: !3886, inlinedAt: !3717)
!3891 = !DILocation(line: 65, column: 24, scope: !3886, inlinedAt: !3717)
!3892 = !DILocation(line: 65, column: 13, scope: !3886, inlinedAt: !3717)
!3893 = !DILocation(line: 66, column: 5, scope: !3713, inlinedAt: !3717)
!3894 = !DILocation(line: 67, column: 12, scope: !3705, inlinedAt: !3717)
!3895 = !DILocation(line: 67, column: 5, scope: !3705, inlinedAt: !3717)
!3896 = !DILocation(line: 68, column: 1, scope: !3705, inlinedAt: !3717)
!3897 = !DILocation(line: 477, column: 15, scope: !3688)
!3898 = !DILocation(line: 478, column: 16, scope: !3688)
!3899 = !DILocation(line: 478, column: 14, scope: !3688)
!3900 = !DILocation(line: 479, column: 9, scope: !3688)
!3901 = !DILocation(line: 479, column: 16, scope: !3902)
!3902 = !DILexicalBlockFile(scope: !3686, file: !977, discriminator: 1)
!3903 = !DILocation(line: 479, column: 23, scope: !3902)
!3904 = !DILocation(line: 479, column: 21, scope: !3902)
!3905 = !DILocation(line: 479, column: 9, scope: !3902)
!3906 = !DILocation(line: 480, column: 37, scope: !3685)
!3907 = !DILocation(line: 480, column: 43, scope: !3685)
!3908 = !DILocation(line: 480, column: 48, scope: !3685)
!3909 = !DILocation(line: 480, column: 20, scope: !3685)
!3910 = !DILocation(line: 61, column: 9, scope: !3714, inlinedAt: !3709)
!3911 = !DILocation(line: 61, column: 15, scope: !3714, inlinedAt: !3709)
!3912 = !DILocation(line: 61, column: 13, scope: !3714, inlinedAt: !3709)
!3913 = !DILocation(line: 61, column: 19, scope: !3714, inlinedAt: !3709)
!3914 = !DILocation(line: 61, column: 9, scope: !3705, inlinedAt: !3709)
!3915 = !DILocation(line: 63, column: 38, scope: !3713, inlinedAt: !3709)
!3916 = !DILocation(line: 63, column: 43, scope: !3713, inlinedAt: !3709)
!3917 = !DILocation(line: 63, column: 15, scope: !3713, inlinedAt: !3709)
!3918 = !DILocation(line: 63, column: 13, scope: !3713, inlinedAt: !3709)
!3919 = !DILocation(line: 64, column: 16, scope: !3886, inlinedAt: !3709)
!3920 = !DILocation(line: 64, column: 21, scope: !3886, inlinedAt: !3709)
!3921 = !DILocation(line: 64, column: 30, scope: !3886, inlinedAt: !3709)
!3922 = !DILocation(line: 64, column: 13, scope: !3713, inlinedAt: !3709)
!3923 = !DILocation(line: 65, column: 20, scope: !3886, inlinedAt: !3709)
!3924 = !DILocation(line: 65, column: 24, scope: !3886, inlinedAt: !3709)
!3925 = !DILocation(line: 65, column: 13, scope: !3886, inlinedAt: !3709)
!3926 = !DILocation(line: 66, column: 5, scope: !3713, inlinedAt: !3709)
!3927 = !DILocation(line: 67, column: 12, scope: !3705, inlinedAt: !3709)
!3928 = !DILocation(line: 67, column: 5, scope: !3705, inlinedAt: !3709)
!3929 = !DILocation(line: 68, column: 1, scope: !3705, inlinedAt: !3709)
!3930 = !DILocation(line: 480, column: 18, scope: !3685)
!3931 = !DILocation(line: 481, column: 20, scope: !3685)
!3932 = !DILocation(line: 481, column: 27, scope: !3685)
!3933 = !DILocation(line: 481, column: 25, scope: !3685)
!3934 = !DILocation(line: 481, column: 33, scope: !3685)
!3935 = !DILocation(line: 481, column: 18, scope: !3685)
!3936 = !DILocation(line: 482, column: 17, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3685, file: !977, line: 482, column: 17)
!3938 = !DILocation(line: 482, column: 22, scope: !3937)
!3939 = !DILocation(line: 482, column: 17, scope: !3685)
!3940 = !DILocation(line: 483, column: 17, scope: !3937)
!3941 = !DILocation(line: 484, column: 45, scope: !3685)
!3942 = !DILocation(line: 484, column: 51, scope: !3685)
!3943 = !DILocation(line: 484, column: 56, scope: !3685)
!3944 = !DILocation(line: 484, column: 62, scope: !3685)
!3945 = !DILocation(line: 484, column: 25, scope: !3685)
!3946 = !DILocation(line: 74, column: 9, scope: !3947, inlinedAt: !3695)
!3947 = distinct !DILexicalBlock(scope: !3691, file: !946, line: 74, column: 9)
!3948 = !DILocation(line: 74, column: 14, scope: !3947, inlinedAt: !3695)
!3949 = !DILocation(line: 74, column: 9, scope: !3691, inlinedAt: !3695)
!3950 = !DILocation(line: 75, column: 20, scope: !3951, inlinedAt: !3695)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !946, line: 75, column: 9)
!3952 = distinct !DILexicalBlock(scope: !3947, file: !946, line: 74, column: 19)
!3953 = !DILocation(line: 75, column: 14, scope: !3951, inlinedAt: !3695)
!3954 = !DILocation(line: 75, column: 25, scope: !3955, inlinedAt: !3695)
!3955 = !DILexicalBlockFile(scope: !3956, file: !946, discriminator: 1)
!3956 = distinct !DILexicalBlock(scope: !3951, file: !946, line: 75, column: 9)
!3957 = !DILocation(line: 75, column: 33, scope: !3955, inlinedAt: !3695)
!3958 = !DILocation(line: 75, column: 31, scope: !3955, inlinedAt: !3695)
!3959 = !DILocation(line: 75, column: 9, scope: !3955, inlinedAt: !3695)
!3960 = !DILocation(line: 76, column: 26, scope: !3956, inlinedAt: !3695)
!3961 = !DILocation(line: 76, column: 22, scope: !3956, inlinedAt: !3695)
!3962 = !DILocation(line: 76, column: 17, scope: !3956, inlinedAt: !3695)
!3963 = !DILocation(line: 76, column: 20, scope: !3956, inlinedAt: !3695)
!3964 = !DILocation(line: 75, column: 44, scope: !3965, inlinedAt: !3695)
!3965 = !DILexicalBlockFile(scope: !3956, file: !946, discriminator: 2)
!3966 = !DILocation(line: 75, column: 9, scope: !3965, inlinedAt: !3695)
!3967 = distinct !{!3967, !3968}
!3968 = !DILocation(line: 75, column: 9, scope: !3952)
!3969 = !DILocation(line: 77, column: 16, scope: !3952, inlinedAt: !3695)
!3970 = !DILocation(line: 77, column: 9, scope: !3952, inlinedAt: !3695)
!3971 = !DILocation(line: 79, column: 12, scope: !3972, inlinedAt: !3695)
!3972 = distinct !DILexicalBlock(scope: !3691, file: !946, line: 79, column: 5)
!3973 = !DILocation(line: 79, column: 10, scope: !3972, inlinedAt: !3695)
!3974 = !DILocation(line: 79, column: 17, scope: !3975, inlinedAt: !3695)
!3975 = !DILexicalBlockFile(scope: !3976, file: !946, discriminator: 1)
!3976 = distinct !DILexicalBlock(scope: !3972, file: !946, line: 79, column: 5)
!3977 = !DILocation(line: 79, column: 21, scope: !3975, inlinedAt: !3695)
!3978 = !DILocation(line: 79, column: 19, scope: !3975, inlinedAt: !3695)
!3979 = !DILocation(line: 79, column: 5, scope: !3975, inlinedAt: !3695)
!3980 = !DILocation(line: 80, column: 13, scope: !3981, inlinedAt: !3695)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !946, line: 80, column: 13)
!3982 = distinct !DILexicalBlock(scope: !3976, file: !946, line: 79, column: 39)
!3983 = !DILocation(line: 80, column: 20, scope: !3981, inlinedAt: !3695)
!3984 = !DILocation(line: 80, column: 25, scope: !3981, inlinedAt: !3695)
!3985 = !DILocation(line: 80, column: 28, scope: !3986, inlinedAt: !3695)
!3986 = !DILexicalBlockFile(scope: !3981, file: !946, discriminator: 1)
!3987 = !DILocation(line: 80, column: 30, scope: !3986, inlinedAt: !3695)
!3988 = !DILocation(line: 80, column: 35, scope: !3986, inlinedAt: !3695)
!3989 = !DILocation(line: 80, column: 39, scope: !3990, inlinedAt: !3695)
!3990 = !DILexicalBlockFile(scope: !3981, file: !946, discriminator: 2)
!3991 = !DILocation(line: 80, column: 47, scope: !3990, inlinedAt: !3695)
!3992 = !DILocation(line: 80, column: 51, scope: !3993, inlinedAt: !3695)
!3993 = !DILexicalBlockFile(scope: !3981, file: !946, discriminator: 3)
!3994 = !DILocation(line: 80, column: 59, scope: !3993, inlinedAt: !3695)
!3995 = !DILocation(line: 80, column: 62, scope: !3996, inlinedAt: !3695)
!3996 = !DILexicalBlockFile(scope: !3981, file: !946, discriminator: 4)
!3997 = !DILocation(line: 80, column: 66, scope: !3996, inlinedAt: !3695)
!3998 = !DILocation(line: 80, column: 70, scope: !3996, inlinedAt: !3695)
!3999 = !DILocation(line: 80, column: 64, scope: !3996, inlinedAt: !3695)
!4000 = !DILocation(line: 80, column: 73, scope: !3996, inlinedAt: !3695)
!4001 = !DILocation(line: 80, column: 76, scope: !4002, inlinedAt: !3695)
!4002 = !DILexicalBlockFile(scope: !3981, file: !946, discriminator: 5)
!4003 = !DILocation(line: 80, column: 83, scope: !4002, inlinedAt: !3695)
!4004 = !DILocation(line: 80, column: 13, scope: !4002, inlinedAt: !3695)
!4005 = !DILocation(line: 81, column: 28, scope: !4006, inlinedAt: !3695)
!4006 = distinct !DILexicalBlock(scope: !3981, file: !946, line: 80, column: 88)
!4007 = !DILocation(line: 81, column: 22, scope: !4006, inlinedAt: !3695)
!4008 = !DILocation(line: 81, column: 13, scope: !4006, inlinedAt: !3695)
!4009 = !DILocation(line: 81, column: 26, scope: !4006, inlinedAt: !3695)
!4010 = !DILocation(line: 82, column: 16, scope: !4006, inlinedAt: !3695)
!4011 = !DILocation(line: 83, column: 14, scope: !4006, inlinedAt: !3695)
!4012 = !DILocation(line: 84, column: 9, scope: !4006, inlinedAt: !3695)
!4013 = !DILocation(line: 85, column: 29, scope: !3981, inlinedAt: !3695)
!4014 = !DILocation(line: 85, column: 28, scope: !3981, inlinedAt: !3695)
!4015 = !DILocation(line: 85, column: 22, scope: !3981, inlinedAt: !3695)
!4016 = !DILocation(line: 85, column: 13, scope: !3981, inlinedAt: !3695)
!4017 = !DILocation(line: 85, column: 26, scope: !3981, inlinedAt: !3695)
!4018 = !DILocation(line: 79, column: 28, scope: !4019, inlinedAt: !3695)
!4019 = !DILexicalBlockFile(scope: !3976, file: !946, discriminator: 2)
!4020 = !DILocation(line: 79, column: 35, scope: !4019, inlinedAt: !3695)
!4021 = !DILocation(line: 79, column: 5, scope: !4019, inlinedAt: !3695)
!4022 = distinct !{!4022, !4023}
!4023 = !DILocation(line: 79, column: 5, scope: !3691)
!4024 = !DILocation(line: 87, column: 12, scope: !3691, inlinedAt: !3695)
!4025 = !DILocation(line: 87, column: 5, scope: !3691, inlinedAt: !3695)
!4026 = !DILocation(line: 88, column: 1, scope: !3691, inlinedAt: !3695)
!4027 = !DILocation(line: 484, column: 23, scope: !3685)
!4028 = !DILocation(line: 485, column: 32, scope: !3685)
!4029 = !DILocation(line: 485, column: 38, scope: !3685)
!4030 = !DILocation(line: 485, column: 48, scope: !3685)
!4031 = !DILocation(line: 485, column: 13, scope: !3685)
!4032 = !DILocation(line: 486, column: 64, scope: !3685)
!4033 = !DILocation(line: 486, column: 73, scope: !3685)
!4034 = !DILocation(line: 486, column: 21, scope: !3685)
!4035 = !DILocation(line: 68, column: 16, scope: !3679, inlinedAt: !3684)
!4036 = !DILocation(line: 68, column: 19, scope: !3679, inlinedAt: !3684)
!4037 = !DILocation(line: 68, column: 24, scope: !3679, inlinedAt: !3684)
!4038 = !DILocation(line: 68, column: 38, scope: !3679, inlinedAt: !3684)
!4039 = !DILocation(line: 68, column: 41, scope: !3679, inlinedAt: !3684)
!4040 = !DILocation(line: 68, column: 46, scope: !3679, inlinedAt: !3684)
!4041 = !DILocation(line: 68, column: 34, scope: !3679, inlinedAt: !3684)
!4042 = !DILocation(line: 68, column: 57, scope: !3679, inlinedAt: !3684)
!4043 = !DILocation(line: 68, column: 69, scope: !3679, inlinedAt: !3684)
!4044 = !DILocation(line: 68, column: 72, scope: !3679, inlinedAt: !3684)
!4045 = !DILocation(line: 68, column: 79, scope: !3679, inlinedAt: !3684)
!4046 = !DILocation(line: 68, column: 84, scope: !3679, inlinedAt: !3684)
!4047 = !DILocation(line: 68, column: 99, scope: !3679, inlinedAt: !3684)
!4048 = !DILocation(line: 68, column: 102, scope: !3679, inlinedAt: !3684)
!4049 = !DILocation(line: 68, column: 109, scope: !3679, inlinedAt: !3684)
!4050 = !DILocation(line: 68, column: 114, scope: !3679, inlinedAt: !3684)
!4051 = !DILocation(line: 68, column: 94, scope: !3679, inlinedAt: !3684)
!4052 = !DILocation(line: 68, column: 63, scope: !3679, inlinedAt: !3684)
!4053 = !DILocation(line: 486, column: 13, scope: !3685)
!4054 = !DILocation(line: 488, column: 58, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !977, line: 488, column: 21)
!4056 = distinct !DILexicalBlock(scope: !3685, file: !977, line: 486, column: 78)
!4057 = !DILocation(line: 488, column: 65, scope: !4055)
!4058 = !DILocation(line: 488, column: 28, scope: !4055)
!4059 = !DILocation(line: 488, column: 26, scope: !4055)
!4060 = !DILocation(line: 488, column: 74, scope: !4055)
!4061 = !DILocation(line: 488, column: 21, scope: !4056)
!4062 = !DILocation(line: 489, column: 29, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !4055, file: !977, line: 488, column: 79)
!4064 = !DILocation(line: 489, column: 21, scope: !4063)
!4065 = !DILocation(line: 490, column: 28, scope: !4063)
!4066 = !DILocation(line: 490, column: 21, scope: !4063)
!4067 = !DILocation(line: 492, column: 33, scope: !4056)
!4068 = !DILocation(line: 493, column: 17, scope: !4056)
!4069 = !DILocation(line: 495, column: 54, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4056, file: !977, line: 495, column: 21)
!4071 = !DILocation(line: 495, column: 61, scope: !4070)
!4072 = !DILocation(line: 495, column: 28, scope: !4070)
!4073 = !DILocation(line: 495, column: 26, scope: !4070)
!4074 = !DILocation(line: 495, column: 70, scope: !4070)
!4075 = !DILocation(line: 495, column: 21, scope: !4056)
!4076 = !DILocation(line: 496, column: 29, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4070, file: !977, line: 495, column: 75)
!4078 = !DILocation(line: 496, column: 21, scope: !4077)
!4079 = !DILocation(line: 497, column: 28, scope: !4077)
!4080 = !DILocation(line: 497, column: 21, scope: !4077)
!4081 = !DILocation(line: 499, column: 32, scope: !4056)
!4082 = !DILocation(line: 500, column: 17, scope: !4056)
!4083 = !DILocation(line: 502, column: 9, scope: !3685)
!4084 = !DILocation(line: 479, column: 36, scope: !4085)
!4085 = !DILexicalBlockFile(scope: !3686, file: !977, discriminator: 2)
!4086 = !DILocation(line: 479, column: 34, scope: !4085)
!4087 = !DILocation(line: 479, column: 9, scope: !4085)
!4088 = distinct !{!4088, !3900}
!4089 = !DILocation(line: 503, column: 17, scope: !3688)
!4090 = !DILocation(line: 503, column: 9, scope: !3688)
!4091 = !DILocation(line: 504, column: 14, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !3688, file: !977, line: 504, column: 13)
!4093 = !DILocation(line: 504, column: 30, scope: !4092)
!4094 = !DILocation(line: 504, column: 34, scope: !4095)
!4095 = !DILexicalBlockFile(scope: !4092, file: !977, discriminator: 1)
!4096 = !DILocation(line: 504, column: 13, scope: !4095)
!4097 = !DILocation(line: 505, column: 20, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4092, file: !977, line: 504, column: 50)
!4099 = !DILocation(line: 505, column: 13, scope: !4098)
!4100 = !DILocation(line: 506, column: 13, scope: !4098)
!4101 = !DILocation(line: 508, column: 26, scope: !3688)
!4102 = !DILocation(line: 508, column: 33, scope: !3688)
!4103 = !DILocation(line: 508, column: 42, scope: !3688)
!4104 = !DILocation(line: 508, column: 9, scope: !3688)
!4105 = !DILocation(line: 508, column: 12, scope: !3688)
!4106 = !DILocation(line: 508, column: 23, scope: !3688)
!4107 = !DILocation(line: 511, column: 22, scope: !3677)
!4108 = !DILocation(line: 511, column: 25, scope: !3677)
!4109 = !DILocation(line: 511, column: 5, scope: !3677)
!4110 = !DILocation(line: 511, column: 12, scope: !3677)
!4111 = !DILocation(line: 511, column: 20, scope: !3677)
!4112 = !DILocation(line: 512, column: 9, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !3677, file: !977, line: 512, column: 9)
!4114 = !DILocation(line: 512, column: 12, scope: !4113)
!4115 = !DILocation(line: 512, column: 20, scope: !4113)
!4116 = !DILocation(line: 512, column: 9, scope: !3677)
!4117 = !DILocation(line: 513, column: 24, scope: !4113)
!4118 = !DILocation(line: 513, column: 27, scope: !4113)
!4119 = !DILocation(line: 513, column: 9, scope: !4113)
!4120 = !DILocation(line: 513, column: 16, scope: !4113)
!4121 = !DILocation(line: 513, column: 22, scope: !4113)
!4122 = !DILocation(line: 516, column: 40, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !3677, file: !977, line: 515, column: 9)
!4124 = !DILocation(line: 516, column: 47, scope: !4123)
!4125 = !DILocation(line: 516, column: 54, scope: !4123)
!4126 = !DILocation(line: 516, column: 61, scope: !4123)
!4127 = !DILocation(line: 516, column: 26, scope: !4123)
!4128 = !DILocation(line: 516, column: 9, scope: !4123)
!4129 = !DILocation(line: 516, column: 16, scope: !4123)
!4130 = !DILocation(line: 516, column: 24, scope: !4123)
!4131 = !DILocation(line: 524, column: 39, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !3677, file: !977, line: 524, column: 9)
!4133 = !DILocation(line: 524, column: 16, scope: !4132)
!4134 = !DILocation(line: 524, column: 14, scope: !4132)
!4135 = !DILocation(line: 524, column: 47, scope: !4132)
!4136 = !DILocation(line: 524, column: 9, scope: !3677)
!4137 = !DILocation(line: 525, column: 16, scope: !4132)
!4138 = !DILocation(line: 525, column: 9, scope: !4132)
!4139 = !DILocation(line: 526, column: 48, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !3677, file: !977, line: 526, column: 9)
!4141 = !DILocation(line: 526, column: 16, scope: !4140)
!4142 = !DILocation(line: 526, column: 14, scope: !4140)
!4143 = !DILocation(line: 526, column: 52, scope: !4140)
!4144 = !DILocation(line: 526, column: 9, scope: !3677)
!4145 = !DILocation(line: 527, column: 16, scope: !4140)
!4146 = !DILocation(line: 527, column: 9, scope: !4140)
!4147 = !DILocation(line: 531, column: 23, scope: !3677)
!4148 = !DILocation(line: 531, column: 5, scope: !3677)
!4149 = !DILocation(line: 533, column: 23, scope: !3677)
!4150 = !DILocation(line: 533, column: 26, scope: !3677)
!4151 = !DILocation(line: 533, column: 32, scope: !3677)
!4152 = !DILocation(line: 533, column: 5, scope: !3677)
!4153 = !DILocation(line: 534, column: 25, scope: !3677)
!4154 = !DILocation(line: 534, column: 28, scope: !3677)
!4155 = !DILocation(line: 534, column: 5, scope: !3677)
!4156 = !DILocation(line: 535, column: 22, scope: !3677)
!4157 = !DILocation(line: 535, column: 25, scope: !3677)
!4158 = !DILocation(line: 535, column: 5, scope: !3677)
!4159 = !DILocation(line: 539, column: 30, scope: !3677)
!4160 = !DILocation(line: 539, column: 5, scope: !3677)
!4161 = !DILocation(line: 539, column: 8, scope: !3677)
!4162 = !DILocation(line: 539, column: 28, scope: !3677)
!4163 = !DILocation(line: 540, column: 10, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !3677, file: !977, line: 540, column: 9)
!4165 = !DILocation(line: 540, column: 13, scope: !4164)
!4166 = !DILocation(line: 540, column: 9, scope: !3677)
!4167 = !DILocation(line: 541, column: 9, scope: !4164)
!4168 = !DILocation(line: 543, column: 29, scope: !3677)
!4169 = !DILocation(line: 543, column: 36, scope: !3677)
!4170 = !DILocation(line: 543, column: 28, scope: !3677)
!4171 = !DILocation(line: 543, column: 27, scope: !3677)
!4172 = !DILocation(line: 543, column: 5, scope: !3677)
!4173 = !DILocation(line: 543, column: 12, scope: !3677)
!4174 = !DILocation(line: 543, column: 25, scope: !3677)
!4175 = !DILocation(line: 545, column: 9, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !3677, file: !977, line: 545, column: 9)
!4177 = !DILocation(line: 545, column: 12, scope: !4176)
!4178 = !DILocation(line: 545, column: 23, scope: !4176)
!4179 = !DILocation(line: 545, column: 28, scope: !4176)
!4180 = !DILocation(line: 545, column: 31, scope: !4181)
!4181 = !DILexicalBlockFile(scope: !4176, file: !977, discriminator: 1)
!4182 = !DILocation(line: 545, column: 34, scope: !4181)
!4183 = !DILocation(line: 545, column: 45, scope: !4181)
!4184 = !DILocation(line: 545, column: 50, scope: !4181)
!4185 = !DILocation(line: 545, column: 53, scope: !4186)
!4186 = !DILexicalBlockFile(scope: !4176, file: !977, discriminator: 2)
!4187 = !DILocation(line: 545, column: 56, scope: !4186)
!4188 = !DILocation(line: 545, column: 67, scope: !4186)
!4189 = !DILocation(line: 545, column: 9, scope: !4186)
!4190 = !DILocation(line: 546, column: 34, scope: !4176)
!4191 = !DILocation(line: 546, column: 37, scope: !4176)
!4192 = !DILocation(line: 546, column: 9, scope: !4176)
!4193 = !DILocation(line: 546, column: 16, scope: !4176)
!4194 = !DILocation(line: 546, column: 32, scope: !4176)
!4195 = !DILocation(line: 547, column: 9, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !3677, file: !977, line: 547, column: 9)
!4197 = !DILocation(line: 547, column: 12, scope: !4196)
!4198 = !DILocation(line: 547, column: 26, scope: !4196)
!4199 = !DILocation(line: 547, column: 31, scope: !4196)
!4200 = !DILocation(line: 547, column: 34, scope: !4201)
!4201 = !DILexicalBlockFile(scope: !4196, file: !977, discriminator: 1)
!4202 = !DILocation(line: 547, column: 37, scope: !4201)
!4203 = !DILocation(line: 547, column: 51, scope: !4201)
!4204 = !DILocation(line: 547, column: 9, scope: !4201)
!4205 = !DILocation(line: 548, column: 28, scope: !4196)
!4206 = !DILocation(line: 548, column: 31, scope: !4196)
!4207 = !DILocation(line: 548, column: 9, scope: !4196)
!4208 = !DILocation(line: 548, column: 16, scope: !4196)
!4209 = !DILocation(line: 548, column: 26, scope: !4196)
!4210 = !DILocation(line: 549, column: 9, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !3677, file: !977, line: 549, column: 9)
!4212 = !DILocation(line: 549, column: 12, scope: !4211)
!4213 = !DILocation(line: 549, column: 24, scope: !4211)
!4214 = !DILocation(line: 549, column: 29, scope: !4211)
!4215 = !DILocation(line: 549, column: 32, scope: !4216)
!4216 = !DILexicalBlockFile(scope: !4211, file: !977, discriminator: 1)
!4217 = !DILocation(line: 549, column: 35, scope: !4216)
!4218 = !DILocation(line: 549, column: 47, scope: !4216)
!4219 = !DILocation(line: 549, column: 52, scope: !4216)
!4220 = !DILocation(line: 549, column: 55, scope: !4221)
!4221 = !DILexicalBlockFile(scope: !4211, file: !977, discriminator: 2)
!4222 = !DILocation(line: 549, column: 58, scope: !4221)
!4223 = !DILocation(line: 549, column: 70, scope: !4221)
!4224 = !DILocation(line: 549, column: 9, scope: !4221)
!4225 = !DILocation(line: 550, column: 29, scope: !4211)
!4226 = !DILocation(line: 550, column: 32, scope: !4211)
!4227 = !DILocation(line: 550, column: 9, scope: !4211)
!4228 = !DILocation(line: 550, column: 16, scope: !4211)
!4229 = !DILocation(line: 550, column: 27, scope: !4211)
!4230 = !DILocation(line: 552, column: 20, scope: !3677)
!4231 = !DILocation(line: 552, column: 27, scope: !3677)
!4232 = !DILocation(line: 552, column: 39, scope: !3677)
!4233 = !DILocation(line: 552, column: 45, scope: !3677)
!4234 = !DILocation(line: 552, column: 5, scope: !3677)
!4235 = !DILocation(line: 552, column: 8, scope: !3677)
!4236 = !DILocation(line: 552, column: 17, scope: !3677)
!4237 = !DILocation(line: 553, column: 21, scope: !3677)
!4238 = !DILocation(line: 553, column: 28, scope: !3677)
!4239 = !DILocation(line: 553, column: 41, scope: !3677)
!4240 = !DILocation(line: 553, column: 47, scope: !3677)
!4241 = !DILocation(line: 553, column: 5, scope: !3677)
!4242 = !DILocation(line: 553, column: 8, scope: !3677)
!4243 = !DILocation(line: 553, column: 18, scope: !3677)
!4244 = !DILocation(line: 555, column: 9, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !3677, file: !977, line: 555, column: 9)
!4246 = !DILocation(line: 555, column: 12, scope: !4245)
!4247 = !DILocation(line: 555, column: 20, scope: !4245)
!4248 = !DILocation(line: 555, column: 40, scope: !4245)
!4249 = !DILocation(line: 555, column: 43, scope: !4250)
!4250 = !DILexicalBlockFile(scope: !4245, file: !977, discriminator: 1)
!4251 = !DILocation(line: 555, column: 46, scope: !4250)
!4252 = !DILocation(line: 555, column: 9, scope: !4250)
!4253 = !DILocation(line: 556, column: 43, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4245, file: !977, line: 555, column: 58)
!4255 = !DILocation(line: 556, column: 9, scope: !4254)
!4256 = !DILocation(line: 557, column: 5, scope: !4254)
!4257 = !DILocation(line: 558, column: 16, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4245, file: !977, line: 557, column: 12)
!4259 = !DILocation(line: 558, column: 19, scope: !4258)
!4260 = !DILocation(line: 558, column: 9, scope: !4258)
!4261 = !DILocation(line: 559, column: 9, scope: !4258)
!4262 = !DILocation(line: 559, column: 12, scope: !4258)
!4263 = !DILocation(line: 559, column: 24, scope: !4258)
!4264 = !DILocation(line: 560, column: 9, scope: !4258)
!4265 = !DILocation(line: 560, column: 12, scope: !4258)
!4266 = !DILocation(line: 560, column: 23, scope: !4258)
!4267 = !DILocation(line: 563, column: 9, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !3677, file: !977, line: 563, column: 9)
!4269 = !DILocation(line: 563, column: 16, scope: !4268)
!4270 = !DILocation(line: 563, column: 25, scope: !4268)
!4271 = !DILocation(line: 563, column: 50, scope: !4268)
!4272 = !DILocation(line: 563, column: 53, scope: !4273)
!4273 = !DILexicalBlockFile(scope: !4268, file: !977, discriminator: 1)
!4274 = !DILocation(line: 563, column: 60, scope: !4273)
!4275 = !DILocation(line: 563, column: 69, scope: !4273)
!4276 = !DILocation(line: 563, column: 9, scope: !4273)
!4277 = !DILocation(line: 564, column: 27, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4268, file: !977, line: 563, column: 94)
!4279 = !DILocation(line: 564, column: 34, scope: !4278)
!4280 = !DILocation(line: 564, column: 9, scope: !4278)
!4281 = !DILocation(line: 564, column: 12, scope: !4278)
!4282 = !DILocation(line: 564, column: 25, scope: !4278)
!4283 = !DILocation(line: 565, column: 28, scope: !4278)
!4284 = !DILocation(line: 565, column: 35, scope: !4278)
!4285 = !DILocation(line: 565, column: 9, scope: !4278)
!4286 = !DILocation(line: 565, column: 12, scope: !4278)
!4287 = !DILocation(line: 565, column: 26, scope: !4278)
!4288 = !DILocation(line: 567, column: 45, scope: !4278)
!4289 = !DILocation(line: 567, column: 48, scope: !4278)
!4290 = !DILocation(line: 567, column: 30, scope: !4278)
!4291 = !DILocation(line: 567, column: 37, scope: !4278)
!4292 = !DILocation(line: 567, column: 43, scope: !4278)
!4293 = !DILocation(line: 567, column: 9, scope: !4278)
!4294 = !DILocation(line: 567, column: 16, scope: !4278)
!4295 = !DILocation(line: 567, column: 28, scope: !4278)
!4296 = !DILocation(line: 568, column: 47, scope: !4278)
!4297 = !DILocation(line: 568, column: 50, scope: !4278)
!4298 = !DILocation(line: 568, column: 31, scope: !4278)
!4299 = !DILocation(line: 568, column: 38, scope: !4278)
!4300 = !DILocation(line: 568, column: 45, scope: !4278)
!4301 = !DILocation(line: 568, column: 9, scope: !4278)
!4302 = !DILocation(line: 568, column: 16, scope: !4278)
!4303 = !DILocation(line: 568, column: 29, scope: !4278)
!4304 = !DILocation(line: 571, column: 13, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4278, file: !977, line: 571, column: 13)
!4306 = !DILocation(line: 571, column: 16, scope: !4305)
!4307 = !DILocation(line: 571, column: 29, scope: !4305)
!4308 = !DILocation(line: 571, column: 39, scope: !4305)
!4309 = !DILocation(line: 572, column: 13, scope: !4305)
!4310 = !DILocation(line: 572, column: 16, scope: !4305)
!4311 = !DILocation(line: 572, column: 30, scope: !4305)
!4312 = !DILocation(line: 572, column: 40, scope: !4305)
!4313 = !DILocation(line: 573, column: 13, scope: !4305)
!4314 = !DILocation(line: 573, column: 16, scope: !4305)
!4315 = !DILocation(line: 573, column: 29, scope: !4305)
!4316 = !DILocation(line: 573, column: 39, scope: !4305)
!4317 = !DILocation(line: 574, column: 13, scope: !4305)
!4318 = !DILocation(line: 574, column: 16, scope: !4305)
!4319 = !DILocation(line: 574, column: 30, scope: !4305)
!4320 = !DILocation(line: 571, column: 13, scope: !4321)
!4321 = !DILexicalBlockFile(scope: !4278, file: !977, discriminator: 1)
!4322 = !DILocation(line: 574, column: 41, scope: !4323)
!4323 = !DILexicalBlockFile(scope: !4305, file: !977, discriminator: 1)
!4324 = !DILocation(line: 576, column: 14, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4278, file: !977, line: 576, column: 13)
!4326 = !DILocation(line: 576, column: 17, scope: !4325)
!4327 = !DILocation(line: 576, column: 29, scope: !4325)
!4328 = !DILocation(line: 576, column: 33, scope: !4325)
!4329 = !DILocation(line: 576, column: 37, scope: !4330)
!4330 = !DILexicalBlockFile(scope: !4325, file: !977, discriminator: 1)
!4331 = !DILocation(line: 576, column: 40, scope: !4330)
!4332 = !DILocation(line: 576, column: 53, scope: !4330)
!4333 = !DILocation(line: 576, column: 13, scope: !4330)
!4334 = !DILocation(line: 577, column: 35, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4325, file: !977, line: 576, column: 58)
!4336 = !DILocation(line: 577, column: 13, scope: !4335)
!4337 = !DILocation(line: 578, column: 13, scope: !4335)
!4338 = !DILocation(line: 580, column: 5, scope: !4278)
!4339 = !DILocation(line: 581, column: 5, scope: !3677)
!4340 = !DILocation(line: 582, column: 1, scope: !3677)
!4341 = distinct !DISubprogram(name: "vc1_decode_frame", scope: !977, file: !977, line: 622, type: !2608, isLocal: true, isDefinition: true, scopeLine: 624, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!4342 = !DILocation(line: 70, column: 85, scope: !3691, inlinedAt: !4343)
!4343 = distinct !DILocation(line: 772, column: 25, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4345, file: !977, line: 771, column: 16)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !977, line: 738, column: 20)
!4346 = distinct !DILexicalBlock(scope: !4347, file: !977, line: 667, column: 13)
!4347 = distinct !DILexicalBlock(scope: !4348, file: !977, line: 661, column: 88)
!4348 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 661, column: 9)
!4349 = !DILocation(line: 70, column: 94, scope: !3691, inlinedAt: !4343)
!4350 = !DILocation(line: 70, column: 109, scope: !3691, inlinedAt: !4343)
!4351 = !DILocation(line: 72, column: 9, scope: !3691, inlinedAt: !4343)
!4352 = !DILocation(line: 72, column: 20, scope: !3691, inlinedAt: !4343)
!4353 = !DILocation(line: 70, column: 85, scope: !3691, inlinedAt: !4354)
!4354 = distinct !DILocation(line: 770, column: 25, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4345, file: !977, line: 738, column: 63)
!4356 = !DILocation(line: 70, column: 94, scope: !3691, inlinedAt: !4354)
!4357 = !DILocation(line: 70, column: 109, scope: !3691, inlinedAt: !4354)
!4358 = !DILocation(line: 72, column: 9, scope: !3691, inlinedAt: !4354)
!4359 = !DILocation(line: 72, column: 20, scope: !3691, inlinedAt: !4354)
!4360 = !DILocation(line: 70, column: 85, scope: !3691, inlinedAt: !4361)
!4361 = distinct !DILocation(line: 761, column: 29, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !977, line: 747, column: 20)
!4363 = distinct !DILexicalBlock(scope: !4355, file: !977, line: 743, column: 17)
!4364 = !DILocation(line: 70, column: 94, scope: !3691, inlinedAt: !4361)
!4365 = !DILocation(line: 70, column: 109, scope: !3691, inlinedAt: !4361)
!4366 = !DILocation(line: 72, column: 9, scope: !3691, inlinedAt: !4361)
!4367 = !DILocation(line: 72, column: 20, scope: !3691, inlinedAt: !4361)
!4368 = !DILocation(line: 66, column: 98, scope: !3679, inlinedAt: !4369)
!4369 = distinct !DILocation(line: 743, column: 50, scope: !4370)
!4370 = !DILexicalBlockFile(scope: !4363, file: !977, discriminator: 1)
!4371 = !DILocation(line: 59, column: 93, scope: !3705, inlinedAt: !4372)
!4372 = distinct !DILocation(line: 742, column: 23, scope: !4355)
!4373 = !DILocation(line: 59, column: 113, scope: !3705, inlinedAt: !4372)
!4374 = !DILocation(line: 62, column: 18, scope: !3713, inlinedAt: !4372)
!4375 = !DILocation(line: 70, column: 85, scope: !3691, inlinedAt: !4376)
!4376 = distinct !DILocation(line: 726, column: 33, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4378, file: !977, line: 713, column: 38)
!4378 = distinct !DILexicalBlock(scope: !4379, file: !977, line: 676, column: 82)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !977, line: 672, column: 79)
!4380 = distinct !DILexicalBlock(scope: !4381, file: !977, line: 672, column: 13)
!4381 = distinct !DILexicalBlock(scope: !4382, file: !977, line: 672, column: 13)
!4382 = distinct !DILexicalBlock(scope: !4346, file: !977, line: 667, column: 99)
!4383 = !DILocation(line: 70, column: 94, scope: !3691, inlinedAt: !4376)
!4384 = !DILocation(line: 70, column: 109, scope: !3691, inlinedAt: !4376)
!4385 = !DILocation(line: 72, column: 9, scope: !3691, inlinedAt: !4376)
!4386 = !DILocation(line: 72, column: 20, scope: !3691, inlinedAt: !4376)
!4387 = !DILocation(line: 70, column: 85, scope: !3691, inlinedAt: !4388)
!4388 = distinct !DILocation(line: 709, column: 33, scope: !4378)
!4389 = !DILocation(line: 70, column: 94, scope: !3691, inlinedAt: !4388)
!4390 = !DILocation(line: 70, column: 109, scope: !3691, inlinedAt: !4388)
!4391 = !DILocation(line: 72, column: 9, scope: !3691, inlinedAt: !4388)
!4392 = !DILocation(line: 72, column: 20, scope: !3691, inlinedAt: !4388)
!4393 = !DILocation(line: 70, column: 85, scope: !3691, inlinedAt: !4394)
!4394 = distinct !DILocation(line: 697, column: 33, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4378, file: !977, line: 682, column: 38)
!4396 = !DILocation(line: 70, column: 94, scope: !3691, inlinedAt: !4394)
!4397 = !DILocation(line: 70, column: 109, scope: !3691, inlinedAt: !4394)
!4398 = !DILocation(line: 72, column: 9, scope: !3691, inlinedAt: !4394)
!4399 = !DILocation(line: 72, column: 20, scope: !3691, inlinedAt: !4394)
!4400 = !DILocation(line: 70, column: 85, scope: !3691, inlinedAt: !4401)
!4401 = distinct !DILocation(line: 680, column: 33, scope: !4378)
!4402 = !DILocation(line: 70, column: 94, scope: !3691, inlinedAt: !4401)
!4403 = !DILocation(line: 70, column: 109, scope: !3691, inlinedAt: !4401)
!4404 = !DILocation(line: 72, column: 9, scope: !3691, inlinedAt: !4401)
!4405 = !DILocation(line: 72, column: 20, scope: !3691, inlinedAt: !4401)
!4406 = !DILocation(line: 66, column: 98, scope: !3679, inlinedAt: !4407)
!4407 = distinct !DILocation(line: 676, column: 25, scope: !4379)
!4408 = !DILocation(line: 59, column: 93, scope: !3705, inlinedAt: !4409)
!4409 = distinct !DILocation(line: 673, column: 24, scope: !4379)
!4410 = !DILocation(line: 59, column: 113, scope: !3705, inlinedAt: !4409)
!4411 = !DILocation(line: 62, column: 18, scope: !3713, inlinedAt: !4409)
!4412 = !DILocation(line: 66, column: 98, scope: !3679, inlinedAt: !4413)
!4413 = distinct !DILocation(line: 667, column: 16, scope: !4346)
!4414 = !DILocation(line: 66, column: 98, scope: !3679, inlinedAt: !4415)
!4415 = distinct !DILocation(line: 647, column: 44, scope: !4416)
!4416 = !DILexicalBlockFile(scope: !4417, file: !977, discriminator: 2)
!4417 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 647, column: 9)
!4418 = !DILocalVariable(name: "avctx", arg: 1, scope: !4341, file: !977, line: 622, type: !1104)
!4419 = !DILocation(line: 622, column: 45, scope: !4341)
!4420 = !DILocalVariable(name: "data", arg: 2, scope: !4341, file: !977, line: 622, type: !974)
!4421 = !DILocation(line: 622, column: 58, scope: !4341)
!4422 = !DILocalVariable(name: "got_frame", arg: 3, scope: !4341, file: !977, line: 623, type: !1396)
!4423 = !DILocation(line: 623, column: 34, scope: !4341)
!4424 = !DILocalVariable(name: "avpkt", arg: 4, scope: !4341, file: !977, line: 623, type: !1250)
!4425 = !DILocation(line: 623, column: 55, scope: !4341)
!4426 = !DILocalVariable(name: "buf", scope: !4341, file: !977, line: 625, type: !1547)
!4427 = !DILocation(line: 625, column: 20, scope: !4341)
!4428 = !DILocation(line: 625, column: 26, scope: !4341)
!4429 = !DILocation(line: 625, column: 33, scope: !4341)
!4430 = !DILocalVariable(name: "buf_size", scope: !4341, file: !977, line: 626, type: !971)
!4431 = !DILocation(line: 626, column: 9, scope: !4341)
!4432 = !DILocation(line: 626, column: 20, scope: !4341)
!4433 = !DILocation(line: 626, column: 27, scope: !4341)
!4434 = !DILocalVariable(name: "n_slices", scope: !4341, file: !977, line: 626, type: !971)
!4435 = !DILocation(line: 626, column: 33, scope: !4341)
!4436 = !DILocalVariable(name: "i", scope: !4341, file: !977, line: 626, type: !971)
!4437 = !DILocation(line: 626, column: 47, scope: !4341)
!4438 = !DILocalVariable(name: "ret", scope: !4341, file: !977, line: 626, type: !971)
!4439 = !DILocation(line: 626, column: 50, scope: !4341)
!4440 = !DILocalVariable(name: "v", scope: !4341, file: !977, line: 627, type: !2655)
!4441 = !DILocation(line: 627, column: 17, scope: !4341)
!4442 = !DILocation(line: 627, column: 21, scope: !4341)
!4443 = !DILocation(line: 627, column: 28, scope: !4341)
!4444 = !DILocalVariable(name: "s", scope: !4341, file: !977, line: 628, type: !3015)
!4445 = !DILocation(line: 628, column: 21, scope: !4341)
!4446 = !DILocation(line: 628, column: 26, scope: !4341)
!4447 = !DILocation(line: 628, column: 29, scope: !4341)
!4448 = !DILocalVariable(name: "pict", scope: !4341, file: !977, line: 629, type: !1126)
!4449 = !DILocation(line: 629, column: 14, scope: !4341)
!4450 = !DILocation(line: 629, column: 21, scope: !4341)
!4451 = !DILocalVariable(name: "buf2", scope: !4341, file: !977, line: 630, type: !1132)
!4452 = !DILocation(line: 630, column: 14, scope: !4341)
!4453 = !DILocalVariable(name: "buf_start", scope: !4341, file: !977, line: 631, type: !1547)
!4454 = !DILocation(line: 631, column: 20, scope: !4341)
!4455 = !DILocation(line: 631, column: 32, scope: !4341)
!4456 = !DILocalVariable(name: "buf_start_second_field", scope: !4341, file: !977, line: 631, type: !1547)
!4457 = !DILocation(line: 631, column: 38, scope: !4341)
!4458 = !DILocalVariable(name: "mb_height", scope: !4341, file: !977, line: 632, type: !971)
!4459 = !DILocation(line: 632, column: 9, scope: !4341)
!4460 = !DILocalVariable(name: "n_slices1", scope: !4341, file: !977, line: 632, type: !971)
!4461 = !DILocation(line: 632, column: 20, scope: !4341)
!4462 = !DILocalVariable(name: "slices", scope: !4341, file: !977, line: 639, type: !4463)
!4463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4464, size: 64, align: 64)
!4464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4341, file: !977, line: 633, size: 512, align: 64, elements: !4465)
!4465 = !{!4466, !4467, !4468, !4469, !4470}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4464, file: !977, line: 634, baseType: !1132, size: 64, align: 64)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "gb", scope: !4464, file: !977, line: 635, baseType: !2192, size: 256, align: 64, offset: 64)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "mby_start", scope: !4464, file: !977, line: 636, baseType: !971, size: 32, align: 32, offset: 320)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "rawbuf", scope: !4464, file: !977, line: 637, baseType: !1547, size: 64, align: 64, offset: 384)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "raw_size", scope: !4464, file: !977, line: 638, baseType: !971, size: 32, align: 32, offset: 448)
!4471 = !DILocation(line: 639, column: 8, scope: !4341)
!4472 = !DILocalVariable(name: "tmp", scope: !4341, file: !977, line: 639, type: !4463)
!4473 = !DILocation(line: 639, column: 23, scope: !4341)
!4474 = !DILocation(line: 641, column: 5, scope: !4341)
!4475 = !DILocation(line: 641, column: 8, scope: !4341)
!4476 = !DILocation(line: 641, column: 21, scope: !4341)
!4477 = !DILocation(line: 643, column: 8, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 643, column: 8)
!4479 = !DILocation(line: 643, column: 11, scope: !4478)
!4480 = !DILocation(line: 643, column: 18, scope: !4478)
!4481 = !DILocation(line: 643, column: 24, scope: !4478)
!4482 = !DILocation(line: 643, column: 8, scope: !4341)
!4483 = !DILocation(line: 644, column: 9, scope: !4478)
!4484 = !DILocation(line: 644, column: 12, scope: !4478)
!4485 = !DILocation(line: 644, column: 22, scope: !4478)
!4486 = !DILocation(line: 647, column: 9, scope: !4417)
!4487 = !DILocation(line: 647, column: 18, scope: !4417)
!4488 = !DILocation(line: 647, column: 23, scope: !4417)
!4489 = !DILocation(line: 647, column: 27, scope: !4490)
!4490 = !DILexicalBlockFile(scope: !4417, file: !977, discriminator: 1)
!4491 = !DILocation(line: 647, column: 36, scope: !4490)
!4492 = !DILocation(line: 647, column: 41, scope: !4490)
!4493 = !DILocation(line: 647, column: 87, scope: !4416)
!4494 = !DILocation(line: 647, column: 94, scope: !4416)
!4495 = !DILocation(line: 647, column: 44, scope: !4416)
!4496 = !DILocation(line: 68, column: 16, scope: !3679, inlinedAt: !4415)
!4497 = !DILocation(line: 68, column: 19, scope: !3679, inlinedAt: !4415)
!4498 = !DILocation(line: 68, column: 24, scope: !3679, inlinedAt: !4415)
!4499 = !DILocation(line: 68, column: 38, scope: !3679, inlinedAt: !4415)
!4500 = !DILocation(line: 68, column: 41, scope: !3679, inlinedAt: !4415)
!4501 = !DILocation(line: 68, column: 46, scope: !3679, inlinedAt: !4415)
!4502 = !DILocation(line: 68, column: 34, scope: !3679, inlinedAt: !4415)
!4503 = !DILocation(line: 68, column: 57, scope: !3679, inlinedAt: !4415)
!4504 = !DILocation(line: 68, column: 69, scope: !3679, inlinedAt: !4415)
!4505 = !DILocation(line: 68, column: 72, scope: !3679, inlinedAt: !4415)
!4506 = !DILocation(line: 68, column: 79, scope: !3679, inlinedAt: !4415)
!4507 = !DILocation(line: 68, column: 84, scope: !3679, inlinedAt: !4415)
!4508 = !DILocation(line: 68, column: 99, scope: !3679, inlinedAt: !4415)
!4509 = !DILocation(line: 68, column: 102, scope: !3679, inlinedAt: !4415)
!4510 = !DILocation(line: 68, column: 109, scope: !3679, inlinedAt: !4415)
!4511 = !DILocation(line: 68, column: 114, scope: !3679, inlinedAt: !4415)
!4512 = !DILocation(line: 68, column: 94, scope: !3679, inlinedAt: !4415)
!4513 = !DILocation(line: 68, column: 63, scope: !3679, inlinedAt: !4415)
!4514 = !DILocation(line: 647, column: 98, scope: !4416)
!4515 = !DILocation(line: 647, column: 9, scope: !4416)
!4516 = !DILocation(line: 649, column: 13, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4518, file: !977, line: 649, column: 13)
!4518 = distinct !DILexicalBlock(scope: !4417, file: !977, line: 647, column: 121)
!4519 = !DILocation(line: 649, column: 16, scope: !4517)
!4520 = !DILocation(line: 649, column: 26, scope: !4517)
!4521 = !DILocation(line: 649, column: 31, scope: !4517)
!4522 = !DILocation(line: 649, column: 34, scope: !4523)
!4523 = !DILexicalBlockFile(scope: !4517, file: !977, discriminator: 1)
!4524 = !DILocation(line: 649, column: 37, scope: !4523)
!4525 = !DILocation(line: 649, column: 13, scope: !4523)
!4526 = !DILocation(line: 650, column: 37, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !977, line: 650, column: 17)
!4528 = distinct !DILexicalBlock(scope: !4517, file: !977, line: 649, column: 55)
!4529 = !DILocation(line: 650, column: 43, scope: !4527)
!4530 = !DILocation(line: 650, column: 46, scope: !4527)
!4531 = !DILocation(line: 650, column: 64, scope: !4527)
!4532 = !DILocation(line: 650, column: 24, scope: !4527)
!4533 = !DILocation(line: 650, column: 22, scope: !4527)
!4534 = !DILocation(line: 650, column: 68, scope: !4527)
!4535 = !DILocation(line: 650, column: 17, scope: !4528)
!4536 = !DILocation(line: 651, column: 24, scope: !4527)
!4537 = !DILocation(line: 651, column: 17, scope: !4527)
!4538 = !DILocation(line: 652, column: 13, scope: !4528)
!4539 = !DILocation(line: 652, column: 16, scope: !4528)
!4540 = !DILocation(line: 652, column: 33, scope: !4528)
!4541 = !DILocation(line: 654, column: 14, scope: !4528)
!4542 = !DILocation(line: 654, column: 24, scope: !4528)
!4543 = !DILocation(line: 655, column: 9, scope: !4528)
!4544 = !DILocation(line: 657, column: 16, scope: !4518)
!4545 = !DILocation(line: 657, column: 9, scope: !4518)
!4546 = !DILocation(line: 661, column: 9, scope: !4348)
!4547 = !DILocation(line: 661, column: 16, scope: !4348)
!4548 = !DILocation(line: 661, column: 25, scope: !4348)
!4549 = !DILocation(line: 661, column: 44, scope: !4348)
!4550 = !DILocation(line: 661, column: 47, scope: !4551)
!4551 = !DILexicalBlockFile(scope: !4348, file: !977, discriminator: 1)
!4552 = !DILocation(line: 661, column: 54, scope: !4551)
!4553 = !DILocation(line: 661, column: 63, scope: !4551)
!4554 = !DILocation(line: 661, column: 9, scope: !4551)
!4555 = !DILocalVariable(name: "buf_size2", scope: !4347, file: !977, line: 662, type: !971)
!4556 = !DILocation(line: 662, column: 13, scope: !4347)
!4557 = !DILocation(line: 663, column: 27, scope: !4347)
!4558 = !DILocation(line: 663, column: 36, scope: !4347)
!4559 = !DILocation(line: 663, column: 16, scope: !4347)
!4560 = !DILocation(line: 663, column: 14, scope: !4347)
!4561 = !DILocation(line: 664, column: 14, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4347, file: !977, line: 664, column: 13)
!4563 = !DILocation(line: 664, column: 13, scope: !4347)
!4564 = !DILocation(line: 665, column: 13, scope: !4562)
!4565 = !DILocation(line: 667, column: 59, scope: !4346)
!4566 = !DILocation(line: 667, column: 66, scope: !4346)
!4567 = !DILocation(line: 667, column: 16, scope: !4346)
!4568 = !DILocation(line: 68, column: 16, scope: !3679, inlinedAt: !4413)
!4569 = !DILocation(line: 68, column: 19, scope: !3679, inlinedAt: !4413)
!4570 = !DILocation(line: 68, column: 24, scope: !3679, inlinedAt: !4413)
!4571 = !DILocation(line: 68, column: 38, scope: !3679, inlinedAt: !4413)
!4572 = !DILocation(line: 68, column: 41, scope: !3679, inlinedAt: !4413)
!4573 = !DILocation(line: 68, column: 46, scope: !3679, inlinedAt: !4413)
!4574 = !DILocation(line: 68, column: 34, scope: !3679, inlinedAt: !4413)
!4575 = !DILocation(line: 68, column: 57, scope: !3679, inlinedAt: !4413)
!4576 = !DILocation(line: 68, column: 69, scope: !3679, inlinedAt: !4413)
!4577 = !DILocation(line: 68, column: 72, scope: !3679, inlinedAt: !4413)
!4578 = !DILocation(line: 68, column: 79, scope: !3679, inlinedAt: !4413)
!4579 = !DILocation(line: 68, column: 84, scope: !3679, inlinedAt: !4413)
!4580 = !DILocation(line: 68, column: 99, scope: !3679, inlinedAt: !4413)
!4581 = !DILocation(line: 68, column: 102, scope: !3679, inlinedAt: !4413)
!4582 = !DILocation(line: 68, column: 109, scope: !3679, inlinedAt: !4413)
!4583 = !DILocation(line: 68, column: 114, scope: !3679, inlinedAt: !4413)
!4584 = !DILocation(line: 68, column: 94, scope: !3679, inlinedAt: !4413)
!4585 = !DILocation(line: 68, column: 63, scope: !3679, inlinedAt: !4413)
!4586 = !DILocation(line: 667, column: 71, scope: !4346)
!4587 = !DILocation(line: 667, column: 80, scope: !4346)
!4588 = !DILocation(line: 667, column: 13, scope: !4347)
!4589 = !DILocalVariable(name: "start", scope: !4382, file: !977, line: 668, type: !1547)
!4590 = !DILocation(line: 668, column: 28, scope: !4382)
!4591 = !DILocalVariable(name: "end", scope: !4382, file: !977, line: 668, type: !1547)
!4592 = !DILocation(line: 668, column: 36, scope: !4382)
!4593 = !DILocalVariable(name: "next", scope: !4382, file: !977, line: 668, type: !1547)
!4594 = !DILocation(line: 668, column: 42, scope: !4382)
!4595 = !DILocalVariable(name: "size", scope: !4382, file: !977, line: 669, type: !971)
!4596 = !DILocation(line: 669, column: 17, scope: !4382)
!4597 = !DILocation(line: 671, column: 20, scope: !4382)
!4598 = !DILocation(line: 671, column: 18, scope: !4382)
!4599 = !DILocation(line: 672, column: 26, scope: !4381)
!4600 = !DILocation(line: 672, column: 24, scope: !4381)
!4601 = !DILocation(line: 672, column: 37, scope: !4381)
!4602 = !DILocation(line: 672, column: 43, scope: !4381)
!4603 = !DILocation(line: 672, column: 41, scope: !4381)
!4604 = !DILocation(line: 672, column: 35, scope: !4381)
!4605 = !DILocation(line: 672, column: 18, scope: !4381)
!4606 = !DILocation(line: 672, column: 53, scope: !4607)
!4607 = !DILexicalBlockFile(scope: !4380, file: !977, discriminator: 1)
!4608 = !DILocation(line: 672, column: 60, scope: !4607)
!4609 = !DILocation(line: 672, column: 58, scope: !4607)
!4610 = !DILocation(line: 672, column: 13, scope: !4607)
!4611 = !DILocation(line: 673, column: 41, scope: !4379)
!4612 = !DILocation(line: 673, column: 47, scope: !4379)
!4613 = !DILocation(line: 673, column: 52, scope: !4379)
!4614 = !DILocation(line: 673, column: 24, scope: !4379)
!4615 = !DILocation(line: 61, column: 9, scope: !3714, inlinedAt: !4409)
!4616 = !DILocation(line: 61, column: 15, scope: !3714, inlinedAt: !4409)
!4617 = !DILocation(line: 61, column: 13, scope: !3714, inlinedAt: !4409)
!4618 = !DILocation(line: 61, column: 19, scope: !3714, inlinedAt: !4409)
!4619 = !DILocation(line: 61, column: 9, scope: !3705, inlinedAt: !4409)
!4620 = !DILocation(line: 63, column: 38, scope: !3713, inlinedAt: !4409)
!4621 = !DILocation(line: 63, column: 43, scope: !3713, inlinedAt: !4409)
!4622 = !DILocation(line: 63, column: 15, scope: !3713, inlinedAt: !4409)
!4623 = !DILocation(line: 63, column: 13, scope: !3713, inlinedAt: !4409)
!4624 = !DILocation(line: 64, column: 16, scope: !3886, inlinedAt: !4409)
!4625 = !DILocation(line: 64, column: 21, scope: !3886, inlinedAt: !4409)
!4626 = !DILocation(line: 64, column: 30, scope: !3886, inlinedAt: !4409)
!4627 = !DILocation(line: 64, column: 13, scope: !3713, inlinedAt: !4409)
!4628 = !DILocation(line: 65, column: 20, scope: !3886, inlinedAt: !4409)
!4629 = !DILocation(line: 65, column: 24, scope: !3886, inlinedAt: !4409)
!4630 = !DILocation(line: 65, column: 13, scope: !3886, inlinedAt: !4409)
!4631 = !DILocation(line: 66, column: 5, scope: !3713, inlinedAt: !4409)
!4632 = !DILocation(line: 67, column: 12, scope: !3705, inlinedAt: !4409)
!4633 = !DILocation(line: 67, column: 5, scope: !3705, inlinedAt: !4409)
!4634 = !DILocation(line: 68, column: 1, scope: !3705, inlinedAt: !4409)
!4635 = !DILocation(line: 673, column: 22, scope: !4379)
!4636 = !DILocation(line: 674, column: 24, scope: !4379)
!4637 = !DILocation(line: 674, column: 31, scope: !4379)
!4638 = !DILocation(line: 674, column: 29, scope: !4379)
!4639 = !DILocation(line: 674, column: 37, scope: !4379)
!4640 = !DILocation(line: 674, column: 22, scope: !4379)
!4641 = !DILocation(line: 675, column: 21, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4379, file: !977, line: 675, column: 21)
!4643 = !DILocation(line: 675, column: 26, scope: !4642)
!4644 = !DILocation(line: 675, column: 21, scope: !4379)
!4645 = !DILocation(line: 675, column: 32, scope: !4646)
!4646 = !DILexicalBlockFile(scope: !4642, file: !977, discriminator: 1)
!4647 = !DILocation(line: 676, column: 68, scope: !4379)
!4648 = !DILocation(line: 676, column: 77, scope: !4379)
!4649 = !DILocation(line: 676, column: 25, scope: !4379)
!4650 = !DILocation(line: 68, column: 16, scope: !3679, inlinedAt: !4407)
!4651 = !DILocation(line: 68, column: 19, scope: !3679, inlinedAt: !4407)
!4652 = !DILocation(line: 68, column: 24, scope: !3679, inlinedAt: !4407)
!4653 = !DILocation(line: 68, column: 38, scope: !3679, inlinedAt: !4407)
!4654 = !DILocation(line: 68, column: 41, scope: !3679, inlinedAt: !4407)
!4655 = !DILocation(line: 68, column: 46, scope: !3679, inlinedAt: !4407)
!4656 = !DILocation(line: 68, column: 34, scope: !3679, inlinedAt: !4407)
!4657 = !DILocation(line: 68, column: 57, scope: !3679, inlinedAt: !4407)
!4658 = !DILocation(line: 68, column: 69, scope: !3679, inlinedAt: !4407)
!4659 = !DILocation(line: 68, column: 72, scope: !3679, inlinedAt: !4407)
!4660 = !DILocation(line: 68, column: 79, scope: !3679, inlinedAt: !4407)
!4661 = !DILocation(line: 68, column: 84, scope: !3679, inlinedAt: !4407)
!4662 = !DILocation(line: 68, column: 99, scope: !3679, inlinedAt: !4407)
!4663 = !DILocation(line: 68, column: 102, scope: !3679, inlinedAt: !4407)
!4664 = !DILocation(line: 68, column: 109, scope: !3679, inlinedAt: !4407)
!4665 = !DILocation(line: 68, column: 114, scope: !3679, inlinedAt: !4407)
!4666 = !DILocation(line: 68, column: 94, scope: !3679, inlinedAt: !4407)
!4667 = !DILocation(line: 68, column: 63, scope: !3679, inlinedAt: !4407)
!4668 = !DILocation(line: 676, column: 17, scope: !4379)
!4669 = !DILocation(line: 678, column: 25, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4378, file: !977, line: 678, column: 25)
!4671 = !DILocation(line: 678, column: 32, scope: !4670)
!4672 = !DILocation(line: 678, column: 25, scope: !4378)
!4673 = !DILocation(line: 679, column: 37, scope: !4670)
!4674 = !DILocation(line: 679, column: 35, scope: !4670)
!4675 = !DILocation(line: 679, column: 25, scope: !4670)
!4676 = !DILocation(line: 680, column: 53, scope: !4378)
!4677 = !DILocation(line: 680, column: 59, scope: !4378)
!4678 = !DILocation(line: 680, column: 64, scope: !4378)
!4679 = !DILocation(line: 680, column: 70, scope: !4378)
!4680 = !DILocation(line: 680, column: 33, scope: !4378)
!4681 = !DILocation(line: 74, column: 9, scope: !3947, inlinedAt: !4401)
!4682 = !DILocation(line: 74, column: 14, scope: !3947, inlinedAt: !4401)
!4683 = !DILocation(line: 74, column: 9, scope: !3691, inlinedAt: !4401)
!4684 = !DILocation(line: 75, column: 20, scope: !3951, inlinedAt: !4401)
!4685 = !DILocation(line: 75, column: 14, scope: !3951, inlinedAt: !4401)
!4686 = !DILocation(line: 75, column: 25, scope: !3955, inlinedAt: !4401)
!4687 = !DILocation(line: 75, column: 33, scope: !3955, inlinedAt: !4401)
!4688 = !DILocation(line: 75, column: 31, scope: !3955, inlinedAt: !4401)
!4689 = !DILocation(line: 75, column: 9, scope: !3955, inlinedAt: !4401)
!4690 = !DILocation(line: 76, column: 26, scope: !3956, inlinedAt: !4401)
!4691 = !DILocation(line: 76, column: 22, scope: !3956, inlinedAt: !4401)
!4692 = !DILocation(line: 76, column: 17, scope: !3956, inlinedAt: !4401)
!4693 = !DILocation(line: 76, column: 20, scope: !3956, inlinedAt: !4401)
!4694 = !DILocation(line: 75, column: 44, scope: !3965, inlinedAt: !4401)
!4695 = !DILocation(line: 75, column: 9, scope: !3965, inlinedAt: !4401)
!4696 = !DILocation(line: 77, column: 16, scope: !3952, inlinedAt: !4401)
!4697 = !DILocation(line: 77, column: 9, scope: !3952, inlinedAt: !4401)
!4698 = !DILocation(line: 79, column: 12, scope: !3972, inlinedAt: !4401)
!4699 = !DILocation(line: 79, column: 10, scope: !3972, inlinedAt: !4401)
!4700 = !DILocation(line: 79, column: 17, scope: !3975, inlinedAt: !4401)
!4701 = !DILocation(line: 79, column: 21, scope: !3975, inlinedAt: !4401)
!4702 = !DILocation(line: 79, column: 19, scope: !3975, inlinedAt: !4401)
!4703 = !DILocation(line: 79, column: 5, scope: !3975, inlinedAt: !4401)
!4704 = !DILocation(line: 80, column: 13, scope: !3981, inlinedAt: !4401)
!4705 = !DILocation(line: 80, column: 20, scope: !3981, inlinedAt: !4401)
!4706 = !DILocation(line: 80, column: 25, scope: !3981, inlinedAt: !4401)
!4707 = !DILocation(line: 80, column: 28, scope: !3986, inlinedAt: !4401)
!4708 = !DILocation(line: 80, column: 30, scope: !3986, inlinedAt: !4401)
!4709 = !DILocation(line: 80, column: 35, scope: !3986, inlinedAt: !4401)
!4710 = !DILocation(line: 80, column: 39, scope: !3990, inlinedAt: !4401)
!4711 = !DILocation(line: 80, column: 47, scope: !3990, inlinedAt: !4401)
!4712 = !DILocation(line: 80, column: 51, scope: !3993, inlinedAt: !4401)
!4713 = !DILocation(line: 80, column: 59, scope: !3993, inlinedAt: !4401)
!4714 = !DILocation(line: 80, column: 62, scope: !3996, inlinedAt: !4401)
!4715 = !DILocation(line: 80, column: 66, scope: !3996, inlinedAt: !4401)
!4716 = !DILocation(line: 80, column: 70, scope: !3996, inlinedAt: !4401)
!4717 = !DILocation(line: 80, column: 64, scope: !3996, inlinedAt: !4401)
!4718 = !DILocation(line: 80, column: 73, scope: !3996, inlinedAt: !4401)
!4719 = !DILocation(line: 80, column: 76, scope: !4002, inlinedAt: !4401)
!4720 = !DILocation(line: 80, column: 83, scope: !4002, inlinedAt: !4401)
!4721 = !DILocation(line: 80, column: 13, scope: !4002, inlinedAt: !4401)
!4722 = !DILocation(line: 81, column: 28, scope: !4006, inlinedAt: !4401)
!4723 = !DILocation(line: 81, column: 22, scope: !4006, inlinedAt: !4401)
!4724 = !DILocation(line: 81, column: 13, scope: !4006, inlinedAt: !4401)
!4725 = !DILocation(line: 81, column: 26, scope: !4006, inlinedAt: !4401)
!4726 = !DILocation(line: 82, column: 16, scope: !4006, inlinedAt: !4401)
!4727 = !DILocation(line: 83, column: 14, scope: !4006, inlinedAt: !4401)
!4728 = !DILocation(line: 84, column: 9, scope: !4006, inlinedAt: !4401)
!4729 = !DILocation(line: 85, column: 29, scope: !3981, inlinedAt: !4401)
!4730 = !DILocation(line: 85, column: 28, scope: !3981, inlinedAt: !4401)
!4731 = !DILocation(line: 85, column: 22, scope: !3981, inlinedAt: !4401)
!4732 = !DILocation(line: 85, column: 13, scope: !3981, inlinedAt: !4401)
!4733 = !DILocation(line: 85, column: 26, scope: !3981, inlinedAt: !4401)
!4734 = !DILocation(line: 79, column: 28, scope: !4019, inlinedAt: !4401)
!4735 = !DILocation(line: 79, column: 35, scope: !4019, inlinedAt: !4401)
!4736 = !DILocation(line: 79, column: 5, scope: !4019, inlinedAt: !4401)
!4737 = !DILocation(line: 87, column: 12, scope: !3691, inlinedAt: !4401)
!4738 = !DILocation(line: 87, column: 5, scope: !3691, inlinedAt: !4401)
!4739 = !DILocation(line: 88, column: 1, scope: !3691, inlinedAt: !4401)
!4740 = !DILocation(line: 680, column: 31, scope: !4378)
!4741 = !DILocation(line: 681, column: 21, scope: !4378)
!4742 = !DILocalVariable(name: "buf_size3", scope: !4395, file: !977, line: 683, type: !971)
!4743 = !DILocation(line: 683, column: 25, scope: !4395)
!4744 = !DILocation(line: 684, column: 25, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4395, file: !977, line: 684, column: 25)
!4746 = !DILocation(line: 684, column: 32, scope: !4745)
!4747 = !DILocation(line: 684, column: 25, scope: !4395)
!4748 = !DILocation(line: 685, column: 50, scope: !4745)
!4749 = !DILocation(line: 685, column: 48, scope: !4745)
!4750 = !DILocation(line: 685, column: 25, scope: !4745)
!4751 = !DILocation(line: 686, column: 44, scope: !4395)
!4752 = !DILocation(line: 686, column: 70, scope: !4395)
!4753 = !DILocation(line: 686, column: 78, scope: !4395)
!4754 = !DILocation(line: 686, column: 69, scope: !4395)
!4755 = !DILocation(line: 686, column: 27, scope: !4395)
!4756 = !DILocation(line: 686, column: 25, scope: !4395)
!4757 = !DILocation(line: 687, column: 26, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4395, file: !977, line: 687, column: 25)
!4759 = !DILocation(line: 687, column: 25, scope: !4395)
!4760 = !DILocation(line: 688, column: 29, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4758, file: !977, line: 687, column: 31)
!4762 = !DILocation(line: 689, column: 25, scope: !4761)
!4763 = !DILocation(line: 691, column: 30, scope: !4395)
!4764 = !DILocation(line: 691, column: 28, scope: !4395)
!4765 = !DILocation(line: 692, column: 55, scope: !4395)
!4766 = !DILocation(line: 692, column: 64, scope: !4395)
!4767 = !DILocation(line: 692, column: 44, scope: !4395)
!4768 = !DILocation(line: 692, column: 28, scope: !4395)
!4769 = !DILocation(line: 692, column: 21, scope: !4395)
!4770 = !DILocation(line: 692, column: 38, scope: !4395)
!4771 = !DILocation(line: 692, column: 42, scope: !4395)
!4772 = !DILocation(line: 693, column: 33, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4395, file: !977, line: 693, column: 25)
!4774 = !DILocation(line: 693, column: 26, scope: !4773)
!4775 = !DILocation(line: 693, column: 43, scope: !4773)
!4776 = !DILocation(line: 693, column: 25, scope: !4395)
!4777 = !DILocation(line: 694, column: 29, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4773, file: !977, line: 693, column: 48)
!4779 = !DILocation(line: 695, column: 25, scope: !4778)
!4780 = !DILocation(line: 697, column: 53, scope: !4395)
!4781 = !DILocation(line: 697, column: 59, scope: !4395)
!4782 = !DILocation(line: 697, column: 64, scope: !4395)
!4783 = !DILocation(line: 698, column: 60, scope: !4395)
!4784 = !DILocation(line: 698, column: 53, scope: !4395)
!4785 = !DILocation(line: 698, column: 70, scope: !4395)
!4786 = !DILocation(line: 697, column: 33, scope: !4395)
!4787 = !DILocation(line: 74, column: 9, scope: !3947, inlinedAt: !4394)
!4788 = !DILocation(line: 74, column: 14, scope: !3947, inlinedAt: !4394)
!4789 = !DILocation(line: 74, column: 9, scope: !3691, inlinedAt: !4394)
!4790 = !DILocation(line: 75, column: 20, scope: !3951, inlinedAt: !4394)
!4791 = !DILocation(line: 75, column: 14, scope: !3951, inlinedAt: !4394)
!4792 = !DILocation(line: 75, column: 25, scope: !3955, inlinedAt: !4394)
!4793 = !DILocation(line: 75, column: 33, scope: !3955, inlinedAt: !4394)
!4794 = !DILocation(line: 75, column: 31, scope: !3955, inlinedAt: !4394)
!4795 = !DILocation(line: 75, column: 9, scope: !3955, inlinedAt: !4394)
!4796 = !DILocation(line: 76, column: 26, scope: !3956, inlinedAt: !4394)
!4797 = !DILocation(line: 76, column: 22, scope: !3956, inlinedAt: !4394)
!4798 = !DILocation(line: 76, column: 17, scope: !3956, inlinedAt: !4394)
!4799 = !DILocation(line: 76, column: 20, scope: !3956, inlinedAt: !4394)
!4800 = !DILocation(line: 75, column: 44, scope: !3965, inlinedAt: !4394)
!4801 = !DILocation(line: 75, column: 9, scope: !3965, inlinedAt: !4394)
!4802 = !DILocation(line: 77, column: 16, scope: !3952, inlinedAt: !4394)
!4803 = !DILocation(line: 77, column: 9, scope: !3952, inlinedAt: !4394)
!4804 = !DILocation(line: 79, column: 12, scope: !3972, inlinedAt: !4394)
!4805 = !DILocation(line: 79, column: 10, scope: !3972, inlinedAt: !4394)
!4806 = !DILocation(line: 79, column: 17, scope: !3975, inlinedAt: !4394)
!4807 = !DILocation(line: 79, column: 21, scope: !3975, inlinedAt: !4394)
!4808 = !DILocation(line: 79, column: 19, scope: !3975, inlinedAt: !4394)
!4809 = !DILocation(line: 79, column: 5, scope: !3975, inlinedAt: !4394)
!4810 = !DILocation(line: 80, column: 13, scope: !3981, inlinedAt: !4394)
!4811 = !DILocation(line: 80, column: 20, scope: !3981, inlinedAt: !4394)
!4812 = !DILocation(line: 80, column: 25, scope: !3981, inlinedAt: !4394)
!4813 = !DILocation(line: 80, column: 28, scope: !3986, inlinedAt: !4394)
!4814 = !DILocation(line: 80, column: 30, scope: !3986, inlinedAt: !4394)
!4815 = !DILocation(line: 80, column: 35, scope: !3986, inlinedAt: !4394)
!4816 = !DILocation(line: 80, column: 39, scope: !3990, inlinedAt: !4394)
!4817 = !DILocation(line: 80, column: 47, scope: !3990, inlinedAt: !4394)
!4818 = !DILocation(line: 80, column: 51, scope: !3993, inlinedAt: !4394)
!4819 = !DILocation(line: 80, column: 59, scope: !3993, inlinedAt: !4394)
!4820 = !DILocation(line: 80, column: 62, scope: !3996, inlinedAt: !4394)
!4821 = !DILocation(line: 80, column: 66, scope: !3996, inlinedAt: !4394)
!4822 = !DILocation(line: 80, column: 70, scope: !3996, inlinedAt: !4394)
!4823 = !DILocation(line: 80, column: 64, scope: !3996, inlinedAt: !4394)
!4824 = !DILocation(line: 80, column: 73, scope: !3996, inlinedAt: !4394)
!4825 = !DILocation(line: 80, column: 76, scope: !4002, inlinedAt: !4394)
!4826 = !DILocation(line: 80, column: 83, scope: !4002, inlinedAt: !4394)
!4827 = !DILocation(line: 80, column: 13, scope: !4002, inlinedAt: !4394)
!4828 = !DILocation(line: 81, column: 28, scope: !4006, inlinedAt: !4394)
!4829 = !DILocation(line: 81, column: 22, scope: !4006, inlinedAt: !4394)
!4830 = !DILocation(line: 81, column: 13, scope: !4006, inlinedAt: !4394)
!4831 = !DILocation(line: 81, column: 26, scope: !4006, inlinedAt: !4394)
!4832 = !DILocation(line: 82, column: 16, scope: !4006, inlinedAt: !4394)
!4833 = !DILocation(line: 83, column: 14, scope: !4006, inlinedAt: !4394)
!4834 = !DILocation(line: 84, column: 9, scope: !4006, inlinedAt: !4394)
!4835 = !DILocation(line: 85, column: 29, scope: !3981, inlinedAt: !4394)
!4836 = !DILocation(line: 85, column: 28, scope: !3981, inlinedAt: !4394)
!4837 = !DILocation(line: 85, column: 22, scope: !3981, inlinedAt: !4394)
!4838 = !DILocation(line: 85, column: 13, scope: !3981, inlinedAt: !4394)
!4839 = !DILocation(line: 85, column: 26, scope: !3981, inlinedAt: !4394)
!4840 = !DILocation(line: 79, column: 28, scope: !4019, inlinedAt: !4394)
!4841 = !DILocation(line: 79, column: 35, scope: !4019, inlinedAt: !4394)
!4842 = !DILocation(line: 79, column: 5, scope: !4019, inlinedAt: !4394)
!4843 = !DILocation(line: 87, column: 12, scope: !3691, inlinedAt: !4394)
!4844 = !DILocation(line: 87, column: 5, scope: !3691, inlinedAt: !4394)
!4845 = !DILocation(line: 88, column: 1, scope: !3691, inlinedAt: !4394)
!4846 = !DILocation(line: 697, column: 31, scope: !4395)
!4847 = !DILocation(line: 699, column: 43, scope: !4395)
!4848 = !DILocation(line: 699, column: 36, scope: !4395)
!4849 = !DILocation(line: 699, column: 53, scope: !4395)
!4850 = !DILocation(line: 699, column: 64, scope: !4395)
!4851 = !DILocation(line: 699, column: 57, scope: !4395)
!4852 = !DILocation(line: 699, column: 74, scope: !4395)
!4853 = !DILocation(line: 700, column: 35, scope: !4395)
!4854 = !DILocation(line: 700, column: 45, scope: !4395)
!4855 = !DILocation(line: 699, column: 21, scope: !4395)
!4856 = !DILocation(line: 701, column: 50, scope: !4395)
!4857 = !DILocation(line: 701, column: 57, scope: !4395)
!4858 = !DILocation(line: 701, column: 70, scope: !4395)
!4859 = !DILocation(line: 701, column: 75, scope: !4395)
!4860 = !DILocation(line: 701, column: 28, scope: !4395)
!4861 = !DILocation(line: 701, column: 21, scope: !4395)
!4862 = !DILocation(line: 701, column: 38, scope: !4395)
!4863 = !DILocation(line: 701, column: 48, scope: !4395)
!4864 = !DILocation(line: 702, column: 47, scope: !4395)
!4865 = !DILocation(line: 702, column: 28, scope: !4395)
!4866 = !DILocation(line: 702, column: 21, scope: !4395)
!4867 = !DILocation(line: 702, column: 38, scope: !4395)
!4868 = !DILocation(line: 702, column: 45, scope: !4395)
!4869 = !DILocation(line: 703, column: 49, scope: !4395)
!4870 = !DILocation(line: 703, column: 54, scope: !4395)
!4871 = !DILocation(line: 703, column: 28, scope: !4395)
!4872 = !DILocation(line: 703, column: 21, scope: !4395)
!4873 = !DILocation(line: 703, column: 38, scope: !4395)
!4874 = !DILocation(line: 703, column: 47, scope: !4395)
!4875 = !DILocation(line: 704, column: 33, scope: !4395)
!4876 = !DILocation(line: 704, column: 42, scope: !4395)
!4877 = !DILocation(line: 704, column: 31, scope: !4395)
!4878 = !DILocation(line: 705, column: 29, scope: !4395)
!4879 = !DILocation(line: 706, column: 21, scope: !4395)
!4880 = !DILocation(line: 709, column: 53, scope: !4378)
!4881 = !DILocation(line: 709, column: 59, scope: !4378)
!4882 = !DILocation(line: 709, column: 64, scope: !4378)
!4883 = !DILocation(line: 709, column: 70, scope: !4378)
!4884 = !DILocation(line: 709, column: 33, scope: !4378)
!4885 = !DILocation(line: 74, column: 9, scope: !3947, inlinedAt: !4388)
!4886 = !DILocation(line: 74, column: 14, scope: !3947, inlinedAt: !4388)
!4887 = !DILocation(line: 74, column: 9, scope: !3691, inlinedAt: !4388)
!4888 = !DILocation(line: 75, column: 20, scope: !3951, inlinedAt: !4388)
!4889 = !DILocation(line: 75, column: 14, scope: !3951, inlinedAt: !4388)
!4890 = !DILocation(line: 75, column: 25, scope: !3955, inlinedAt: !4388)
!4891 = !DILocation(line: 75, column: 33, scope: !3955, inlinedAt: !4388)
!4892 = !DILocation(line: 75, column: 31, scope: !3955, inlinedAt: !4388)
!4893 = !DILocation(line: 75, column: 9, scope: !3955, inlinedAt: !4388)
!4894 = !DILocation(line: 76, column: 26, scope: !3956, inlinedAt: !4388)
!4895 = !DILocation(line: 76, column: 22, scope: !3956, inlinedAt: !4388)
!4896 = !DILocation(line: 76, column: 17, scope: !3956, inlinedAt: !4388)
!4897 = !DILocation(line: 76, column: 20, scope: !3956, inlinedAt: !4388)
!4898 = !DILocation(line: 75, column: 44, scope: !3965, inlinedAt: !4388)
!4899 = !DILocation(line: 75, column: 9, scope: !3965, inlinedAt: !4388)
!4900 = !DILocation(line: 77, column: 16, scope: !3952, inlinedAt: !4388)
!4901 = !DILocation(line: 77, column: 9, scope: !3952, inlinedAt: !4388)
!4902 = !DILocation(line: 79, column: 12, scope: !3972, inlinedAt: !4388)
!4903 = !DILocation(line: 79, column: 10, scope: !3972, inlinedAt: !4388)
!4904 = !DILocation(line: 79, column: 17, scope: !3975, inlinedAt: !4388)
!4905 = !DILocation(line: 79, column: 21, scope: !3975, inlinedAt: !4388)
!4906 = !DILocation(line: 79, column: 19, scope: !3975, inlinedAt: !4388)
!4907 = !DILocation(line: 79, column: 5, scope: !3975, inlinedAt: !4388)
!4908 = !DILocation(line: 80, column: 13, scope: !3981, inlinedAt: !4388)
!4909 = !DILocation(line: 80, column: 20, scope: !3981, inlinedAt: !4388)
!4910 = !DILocation(line: 80, column: 25, scope: !3981, inlinedAt: !4388)
!4911 = !DILocation(line: 80, column: 28, scope: !3986, inlinedAt: !4388)
!4912 = !DILocation(line: 80, column: 30, scope: !3986, inlinedAt: !4388)
!4913 = !DILocation(line: 80, column: 35, scope: !3986, inlinedAt: !4388)
!4914 = !DILocation(line: 80, column: 39, scope: !3990, inlinedAt: !4388)
!4915 = !DILocation(line: 80, column: 47, scope: !3990, inlinedAt: !4388)
!4916 = !DILocation(line: 80, column: 51, scope: !3993, inlinedAt: !4388)
!4917 = !DILocation(line: 80, column: 59, scope: !3993, inlinedAt: !4388)
!4918 = !DILocation(line: 80, column: 62, scope: !3996, inlinedAt: !4388)
!4919 = !DILocation(line: 80, column: 66, scope: !3996, inlinedAt: !4388)
!4920 = !DILocation(line: 80, column: 70, scope: !3996, inlinedAt: !4388)
!4921 = !DILocation(line: 80, column: 64, scope: !3996, inlinedAt: !4388)
!4922 = !DILocation(line: 80, column: 73, scope: !3996, inlinedAt: !4388)
!4923 = !DILocation(line: 80, column: 76, scope: !4002, inlinedAt: !4388)
!4924 = !DILocation(line: 80, column: 83, scope: !4002, inlinedAt: !4388)
!4925 = !DILocation(line: 80, column: 13, scope: !4002, inlinedAt: !4388)
!4926 = !DILocation(line: 81, column: 28, scope: !4006, inlinedAt: !4388)
!4927 = !DILocation(line: 81, column: 22, scope: !4006, inlinedAt: !4388)
!4928 = !DILocation(line: 81, column: 13, scope: !4006, inlinedAt: !4388)
!4929 = !DILocation(line: 81, column: 26, scope: !4006, inlinedAt: !4388)
!4930 = !DILocation(line: 82, column: 16, scope: !4006, inlinedAt: !4388)
!4931 = !DILocation(line: 83, column: 14, scope: !4006, inlinedAt: !4388)
!4932 = !DILocation(line: 84, column: 9, scope: !4006, inlinedAt: !4388)
!4933 = !DILocation(line: 85, column: 29, scope: !3981, inlinedAt: !4388)
!4934 = !DILocation(line: 85, column: 28, scope: !3981, inlinedAt: !4388)
!4935 = !DILocation(line: 85, column: 22, scope: !3981, inlinedAt: !4388)
!4936 = !DILocation(line: 85, column: 13, scope: !3981, inlinedAt: !4388)
!4937 = !DILocation(line: 85, column: 26, scope: !3981, inlinedAt: !4388)
!4938 = !DILocation(line: 79, column: 28, scope: !4019, inlinedAt: !4388)
!4939 = !DILocation(line: 79, column: 35, scope: !4019, inlinedAt: !4388)
!4940 = !DILocation(line: 79, column: 5, scope: !4019, inlinedAt: !4388)
!4941 = !DILocation(line: 87, column: 12, scope: !3691, inlinedAt: !4388)
!4942 = !DILocation(line: 87, column: 5, scope: !3691, inlinedAt: !4388)
!4943 = !DILocation(line: 88, column: 1, scope: !3691, inlinedAt: !4388)
!4944 = !DILocation(line: 709, column: 31, scope: !4378)
!4945 = !DILocation(line: 710, column: 36, scope: !4378)
!4946 = !DILocation(line: 710, column: 39, scope: !4378)
!4947 = !DILocation(line: 710, column: 43, scope: !4378)
!4948 = !DILocation(line: 710, column: 49, scope: !4378)
!4949 = !DILocation(line: 710, column: 59, scope: !4378)
!4950 = !DILocation(line: 710, column: 21, scope: !4378)
!4951 = !DILocation(line: 711, column: 47, scope: !4378)
!4952 = !DILocation(line: 711, column: 54, scope: !4378)
!4953 = !DILocation(line: 711, column: 58, scope: !4378)
!4954 = !DILocation(line: 711, column: 61, scope: !4378)
!4955 = !DILocation(line: 711, column: 21, scope: !4378)
!4956 = !DILocation(line: 712, column: 21, scope: !4378)
!4957 = !DILocalVariable(name: "buf_size3", scope: !4377, file: !977, line: 714, type: !971)
!4958 = !DILocation(line: 714, column: 25, scope: !4377)
!4959 = !DILocation(line: 715, column: 44, scope: !4377)
!4960 = !DILocation(line: 715, column: 70, scope: !4377)
!4961 = !DILocation(line: 715, column: 78, scope: !4377)
!4962 = !DILocation(line: 715, column: 69, scope: !4377)
!4963 = !DILocation(line: 715, column: 27, scope: !4377)
!4964 = !DILocation(line: 715, column: 25, scope: !4377)
!4965 = !DILocation(line: 716, column: 26, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4377, file: !977, line: 716, column: 25)
!4967 = !DILocation(line: 716, column: 25, scope: !4377)
!4968 = !DILocation(line: 717, column: 29, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4966, file: !977, line: 716, column: 31)
!4970 = !DILocation(line: 718, column: 25, scope: !4969)
!4971 = !DILocation(line: 720, column: 30, scope: !4377)
!4972 = !DILocation(line: 720, column: 28, scope: !4377)
!4973 = !DILocation(line: 721, column: 55, scope: !4377)
!4974 = !DILocation(line: 721, column: 64, scope: !4377)
!4975 = !DILocation(line: 721, column: 44, scope: !4377)
!4976 = !DILocation(line: 721, column: 28, scope: !4377)
!4977 = !DILocation(line: 721, column: 21, scope: !4377)
!4978 = !DILocation(line: 721, column: 38, scope: !4377)
!4979 = !DILocation(line: 721, column: 42, scope: !4377)
!4980 = !DILocation(line: 722, column: 33, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4377, file: !977, line: 722, column: 25)
!4982 = !DILocation(line: 722, column: 26, scope: !4981)
!4983 = !DILocation(line: 722, column: 43, scope: !4981)
!4984 = !DILocation(line: 722, column: 25, scope: !4377)
!4985 = !DILocation(line: 723, column: 29, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4981, file: !977, line: 722, column: 48)
!4987 = !DILocation(line: 724, column: 25, scope: !4986)
!4988 = !DILocation(line: 726, column: 53, scope: !4377)
!4989 = !DILocation(line: 726, column: 59, scope: !4377)
!4990 = !DILocation(line: 726, column: 64, scope: !4377)
!4991 = !DILocation(line: 727, column: 60, scope: !4377)
!4992 = !DILocation(line: 727, column: 53, scope: !4377)
!4993 = !DILocation(line: 727, column: 70, scope: !4377)
!4994 = !DILocation(line: 726, column: 33, scope: !4377)
!4995 = !DILocation(line: 74, column: 9, scope: !3947, inlinedAt: !4376)
!4996 = !DILocation(line: 74, column: 14, scope: !3947, inlinedAt: !4376)
!4997 = !DILocation(line: 74, column: 9, scope: !3691, inlinedAt: !4376)
!4998 = !DILocation(line: 75, column: 20, scope: !3951, inlinedAt: !4376)
!4999 = !DILocation(line: 75, column: 14, scope: !3951, inlinedAt: !4376)
!5000 = !DILocation(line: 75, column: 25, scope: !3955, inlinedAt: !4376)
!5001 = !DILocation(line: 75, column: 33, scope: !3955, inlinedAt: !4376)
!5002 = !DILocation(line: 75, column: 31, scope: !3955, inlinedAt: !4376)
!5003 = !DILocation(line: 75, column: 9, scope: !3955, inlinedAt: !4376)
!5004 = !DILocation(line: 76, column: 26, scope: !3956, inlinedAt: !4376)
!5005 = !DILocation(line: 76, column: 22, scope: !3956, inlinedAt: !4376)
!5006 = !DILocation(line: 76, column: 17, scope: !3956, inlinedAt: !4376)
!5007 = !DILocation(line: 76, column: 20, scope: !3956, inlinedAt: !4376)
!5008 = !DILocation(line: 75, column: 44, scope: !3965, inlinedAt: !4376)
!5009 = !DILocation(line: 75, column: 9, scope: !3965, inlinedAt: !4376)
!5010 = !DILocation(line: 77, column: 16, scope: !3952, inlinedAt: !4376)
!5011 = !DILocation(line: 77, column: 9, scope: !3952, inlinedAt: !4376)
!5012 = !DILocation(line: 79, column: 12, scope: !3972, inlinedAt: !4376)
!5013 = !DILocation(line: 79, column: 10, scope: !3972, inlinedAt: !4376)
!5014 = !DILocation(line: 79, column: 17, scope: !3975, inlinedAt: !4376)
!5015 = !DILocation(line: 79, column: 21, scope: !3975, inlinedAt: !4376)
!5016 = !DILocation(line: 79, column: 19, scope: !3975, inlinedAt: !4376)
!5017 = !DILocation(line: 79, column: 5, scope: !3975, inlinedAt: !4376)
!5018 = !DILocation(line: 80, column: 13, scope: !3981, inlinedAt: !4376)
!5019 = !DILocation(line: 80, column: 20, scope: !3981, inlinedAt: !4376)
!5020 = !DILocation(line: 80, column: 25, scope: !3981, inlinedAt: !4376)
!5021 = !DILocation(line: 80, column: 28, scope: !3986, inlinedAt: !4376)
!5022 = !DILocation(line: 80, column: 30, scope: !3986, inlinedAt: !4376)
!5023 = !DILocation(line: 80, column: 35, scope: !3986, inlinedAt: !4376)
!5024 = !DILocation(line: 80, column: 39, scope: !3990, inlinedAt: !4376)
!5025 = !DILocation(line: 80, column: 47, scope: !3990, inlinedAt: !4376)
!5026 = !DILocation(line: 80, column: 51, scope: !3993, inlinedAt: !4376)
!5027 = !DILocation(line: 80, column: 59, scope: !3993, inlinedAt: !4376)
!5028 = !DILocation(line: 80, column: 62, scope: !3996, inlinedAt: !4376)
!5029 = !DILocation(line: 80, column: 66, scope: !3996, inlinedAt: !4376)
!5030 = !DILocation(line: 80, column: 70, scope: !3996, inlinedAt: !4376)
!5031 = !DILocation(line: 80, column: 64, scope: !3996, inlinedAt: !4376)
!5032 = !DILocation(line: 80, column: 73, scope: !3996, inlinedAt: !4376)
!5033 = !DILocation(line: 80, column: 76, scope: !4002, inlinedAt: !4376)
!5034 = !DILocation(line: 80, column: 83, scope: !4002, inlinedAt: !4376)
!5035 = !DILocation(line: 80, column: 13, scope: !4002, inlinedAt: !4376)
!5036 = !DILocation(line: 81, column: 28, scope: !4006, inlinedAt: !4376)
!5037 = !DILocation(line: 81, column: 22, scope: !4006, inlinedAt: !4376)
!5038 = !DILocation(line: 81, column: 13, scope: !4006, inlinedAt: !4376)
!5039 = !DILocation(line: 81, column: 26, scope: !4006, inlinedAt: !4376)
!5040 = !DILocation(line: 82, column: 16, scope: !4006, inlinedAt: !4376)
!5041 = !DILocation(line: 83, column: 14, scope: !4006, inlinedAt: !4376)
!5042 = !DILocation(line: 84, column: 9, scope: !4006, inlinedAt: !4376)
!5043 = !DILocation(line: 85, column: 29, scope: !3981, inlinedAt: !4376)
!5044 = !DILocation(line: 85, column: 28, scope: !3981, inlinedAt: !4376)
!5045 = !DILocation(line: 85, column: 22, scope: !3981, inlinedAt: !4376)
!5046 = !DILocation(line: 85, column: 13, scope: !3981, inlinedAt: !4376)
!5047 = !DILocation(line: 85, column: 26, scope: !3981, inlinedAt: !4376)
!5048 = !DILocation(line: 79, column: 28, scope: !4019, inlinedAt: !4376)
!5049 = !DILocation(line: 79, column: 35, scope: !4019, inlinedAt: !4376)
!5050 = !DILocation(line: 79, column: 5, scope: !4019, inlinedAt: !4376)
!5051 = !DILocation(line: 87, column: 12, scope: !3691, inlinedAt: !4376)
!5052 = !DILocation(line: 87, column: 5, scope: !3691, inlinedAt: !4376)
!5053 = !DILocation(line: 88, column: 1, scope: !3691, inlinedAt: !4376)
!5054 = !DILocation(line: 726, column: 31, scope: !4377)
!5055 = !DILocation(line: 728, column: 43, scope: !4377)
!5056 = !DILocation(line: 728, column: 36, scope: !4377)
!5057 = !DILocation(line: 728, column: 53, scope: !4377)
!5058 = !DILocation(line: 728, column: 64, scope: !4377)
!5059 = !DILocation(line: 728, column: 57, scope: !4377)
!5060 = !DILocation(line: 728, column: 74, scope: !4377)
!5061 = !DILocation(line: 729, column: 35, scope: !4377)
!5062 = !DILocation(line: 729, column: 45, scope: !4377)
!5063 = !DILocation(line: 728, column: 21, scope: !4377)
!5064 = !DILocation(line: 730, column: 67, scope: !4377)
!5065 = !DILocation(line: 730, column: 60, scope: !4377)
!5066 = !DILocation(line: 730, column: 77, scope: !4377)
!5067 = !DILocation(line: 730, column: 50, scope: !4377)
!5068 = !DILocation(line: 730, column: 28, scope: !4377)
!5069 = !DILocation(line: 730, column: 21, scope: !4377)
!5070 = !DILocation(line: 730, column: 38, scope: !4377)
!5071 = !DILocation(line: 730, column: 48, scope: !4377)
!5072 = !DILocation(line: 731, column: 47, scope: !4377)
!5073 = !DILocation(line: 731, column: 28, scope: !4377)
!5074 = !DILocation(line: 731, column: 21, scope: !4377)
!5075 = !DILocation(line: 731, column: 38, scope: !4377)
!5076 = !DILocation(line: 731, column: 45, scope: !4377)
!5077 = !DILocation(line: 732, column: 49, scope: !4377)
!5078 = !DILocation(line: 732, column: 54, scope: !4377)
!5079 = !DILocation(line: 732, column: 28, scope: !4377)
!5080 = !DILocation(line: 732, column: 21, scope: !4377)
!5081 = !DILocation(line: 732, column: 38, scope: !4377)
!5082 = !DILocation(line: 732, column: 47, scope: !4377)
!5083 = !DILocation(line: 733, column: 29, scope: !4377)
!5084 = !DILocation(line: 734, column: 21, scope: !4377)
!5085 = !DILocation(line: 737, column: 13, scope: !4379)
!5086 = !DILocation(line: 672, column: 73, scope: !5087)
!5087 = !DILexicalBlockFile(scope: !4380, file: !977, discriminator: 2)
!5088 = !DILocation(line: 672, column: 71, scope: !5087)
!5089 = !DILocation(line: 672, column: 13, scope: !5087)
!5090 = distinct !{!5090, !5091}
!5091 = !DILocation(line: 672, column: 13, scope: !4382)
!5092 = !DILocation(line: 738, column: 9, scope: !4382)
!5093 = !DILocation(line: 738, column: 20, scope: !5094)
!5094 = !DILexicalBlockFile(scope: !4345, file: !977, discriminator: 1)
!5095 = !DILocation(line: 738, column: 23, scope: !5094)
!5096 = !DILocation(line: 738, column: 33, scope: !5094)
!5097 = !DILocation(line: 738, column: 38, scope: !5098)
!5098 = !DILexicalBlockFile(scope: !4345, file: !977, discriminator: 2)
!5099 = !DILocation(line: 738, column: 45, scope: !5098)
!5100 = !DILocation(line: 738, column: 53, scope: !5098)
!5101 = !DILocation(line: 738, column: 20, scope: !5098)
!5102 = !DILocalVariable(name: "divider", scope: !4355, file: !977, line: 739, type: !1547)
!5103 = !DILocation(line: 739, column: 28, scope: !4355)
!5104 = !DILocalVariable(name: "buf_size3", scope: !4355, file: !977, line: 740, type: !971)
!5105 = !DILocation(line: 740, column: 17, scope: !4355)
!5106 = !DILocation(line: 742, column: 40, scope: !4355)
!5107 = !DILocation(line: 742, column: 45, scope: !4355)
!5108 = !DILocation(line: 742, column: 51, scope: !4355)
!5109 = !DILocation(line: 742, column: 49, scope: !4355)
!5110 = !DILocation(line: 742, column: 23, scope: !4355)
!5111 = !DILocation(line: 61, column: 9, scope: !3714, inlinedAt: !4372)
!5112 = !DILocation(line: 61, column: 15, scope: !3714, inlinedAt: !4372)
!5113 = !DILocation(line: 61, column: 13, scope: !3714, inlinedAt: !4372)
!5114 = !DILocation(line: 61, column: 19, scope: !3714, inlinedAt: !4372)
!5115 = !DILocation(line: 61, column: 9, scope: !3705, inlinedAt: !4372)
!5116 = !DILocation(line: 63, column: 38, scope: !3713, inlinedAt: !4372)
!5117 = !DILocation(line: 63, column: 43, scope: !3713, inlinedAt: !4372)
!5118 = !DILocation(line: 63, column: 15, scope: !3713, inlinedAt: !4372)
!5119 = !DILocation(line: 63, column: 13, scope: !3713, inlinedAt: !4372)
!5120 = !DILocation(line: 64, column: 16, scope: !3886, inlinedAt: !4372)
!5121 = !DILocation(line: 64, column: 21, scope: !3886, inlinedAt: !4372)
!5122 = !DILocation(line: 64, column: 30, scope: !3886, inlinedAt: !4372)
!5123 = !DILocation(line: 64, column: 13, scope: !3713, inlinedAt: !4372)
!5124 = !DILocation(line: 65, column: 20, scope: !3886, inlinedAt: !4372)
!5125 = !DILocation(line: 65, column: 24, scope: !3886, inlinedAt: !4372)
!5126 = !DILocation(line: 65, column: 13, scope: !3886, inlinedAt: !4372)
!5127 = !DILocation(line: 66, column: 5, scope: !3713, inlinedAt: !4372)
!5128 = !DILocation(line: 67, column: 12, scope: !3705, inlinedAt: !4372)
!5129 = !DILocation(line: 67, column: 5, scope: !3705, inlinedAt: !4372)
!5130 = !DILocation(line: 68, column: 1, scope: !3705, inlinedAt: !4372)
!5131 = !DILocation(line: 742, column: 21, scope: !4355)
!5132 = !DILocation(line: 743, column: 18, scope: !4363)
!5133 = !DILocation(line: 743, column: 30, scope: !4363)
!5134 = !DILocation(line: 743, column: 36, scope: !4363)
!5135 = !DILocation(line: 743, column: 34, scope: !4363)
!5136 = !DILocation(line: 743, column: 26, scope: !4363)
!5137 = !DILocation(line: 743, column: 47, scope: !4363)
!5138 = !DILocation(line: 743, column: 93, scope: !4370)
!5139 = !DILocation(line: 743, column: 104, scope: !4370)
!5140 = !DILocation(line: 743, column: 50, scope: !4370)
!5141 = !DILocation(line: 68, column: 16, scope: !3679, inlinedAt: !4369)
!5142 = !DILocation(line: 68, column: 19, scope: !3679, inlinedAt: !4369)
!5143 = !DILocation(line: 68, column: 24, scope: !3679, inlinedAt: !4369)
!5144 = !DILocation(line: 68, column: 38, scope: !3679, inlinedAt: !4369)
!5145 = !DILocation(line: 68, column: 41, scope: !3679, inlinedAt: !4369)
!5146 = !DILocation(line: 68, column: 46, scope: !3679, inlinedAt: !4369)
!5147 = !DILocation(line: 68, column: 34, scope: !3679, inlinedAt: !4369)
!5148 = !DILocation(line: 68, column: 57, scope: !3679, inlinedAt: !4369)
!5149 = !DILocation(line: 68, column: 69, scope: !3679, inlinedAt: !4369)
!5150 = !DILocation(line: 68, column: 72, scope: !3679, inlinedAt: !4369)
!5151 = !DILocation(line: 68, column: 79, scope: !3679, inlinedAt: !4369)
!5152 = !DILocation(line: 68, column: 84, scope: !3679, inlinedAt: !4369)
!5153 = !DILocation(line: 68, column: 99, scope: !3679, inlinedAt: !4369)
!5154 = !DILocation(line: 68, column: 102, scope: !3679, inlinedAt: !4369)
!5155 = !DILocation(line: 68, column: 109, scope: !3679, inlinedAt: !4369)
!5156 = !DILocation(line: 68, column: 114, scope: !3679, inlinedAt: !4369)
!5157 = !DILocation(line: 68, column: 94, scope: !3679, inlinedAt: !4369)
!5158 = !DILocation(line: 68, column: 63, scope: !3679, inlinedAt: !4369)
!5159 = !DILocation(line: 743, column: 108, scope: !4370)
!5160 = !DILocation(line: 743, column: 17, scope: !4370)
!5161 = !DILocation(line: 744, column: 24, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !4363, file: !977, line: 743, column: 127)
!5163 = !DILocation(line: 744, column: 17, scope: !5162)
!5164 = !DILocation(line: 745, column: 21, scope: !5162)
!5165 = !DILocation(line: 746, column: 17, scope: !5162)
!5166 = !DILocation(line: 748, column: 21, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !4362, file: !977, line: 748, column: 21)
!5168 = !DILocation(line: 748, column: 28, scope: !5167)
!5169 = !DILocation(line: 748, column: 21, scope: !4362)
!5170 = !DILocation(line: 749, column: 46, scope: !5167)
!5171 = !DILocation(line: 749, column: 44, scope: !5167)
!5172 = !DILocation(line: 749, column: 21, scope: !5167)
!5173 = !DILocation(line: 750, column: 40, scope: !4362)
!5174 = !DILocation(line: 750, column: 66, scope: !4362)
!5175 = !DILocation(line: 750, column: 74, scope: !4362)
!5176 = !DILocation(line: 750, column: 65, scope: !4362)
!5177 = !DILocation(line: 750, column: 23, scope: !4362)
!5178 = !DILocation(line: 750, column: 21, scope: !4362)
!5179 = !DILocation(line: 751, column: 22, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !4362, file: !977, line: 751, column: 21)
!5181 = !DILocation(line: 751, column: 21, scope: !4362)
!5182 = !DILocation(line: 752, column: 25, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5180, file: !977, line: 751, column: 27)
!5184 = !DILocation(line: 753, column: 21, scope: !5183)
!5185 = !DILocation(line: 755, column: 26, scope: !4362)
!5186 = !DILocation(line: 755, column: 24, scope: !4362)
!5187 = !DILocation(line: 756, column: 51, scope: !4362)
!5188 = !DILocation(line: 756, column: 60, scope: !4362)
!5189 = !DILocation(line: 756, column: 40, scope: !4362)
!5190 = !DILocation(line: 756, column: 24, scope: !4362)
!5191 = !DILocation(line: 756, column: 17, scope: !4362)
!5192 = !DILocation(line: 756, column: 34, scope: !4362)
!5193 = !DILocation(line: 756, column: 38, scope: !4362)
!5194 = !DILocation(line: 757, column: 29, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !4362, file: !977, line: 757, column: 21)
!5196 = !DILocation(line: 757, column: 22, scope: !5195)
!5197 = !DILocation(line: 757, column: 39, scope: !5195)
!5198 = !DILocation(line: 757, column: 21, scope: !4362)
!5199 = !DILocation(line: 758, column: 25, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5195, file: !977, line: 757, column: 44)
!5201 = !DILocation(line: 759, column: 21, scope: !5200)
!5202 = !DILocation(line: 761, column: 49, scope: !4362)
!5203 = !DILocation(line: 761, column: 57, scope: !4362)
!5204 = !DILocation(line: 761, column: 62, scope: !4362)
!5205 = !DILocation(line: 761, column: 68, scope: !4362)
!5206 = !DILocation(line: 761, column: 66, scope: !4362)
!5207 = !DILocation(line: 761, column: 79, scope: !4362)
!5208 = !DILocation(line: 761, column: 77, scope: !4362)
!5209 = !DILocation(line: 761, column: 87, scope: !4362)
!5210 = !DILocation(line: 761, column: 99, scope: !4362)
!5211 = !DILocation(line: 761, column: 92, scope: !4362)
!5212 = !DILocation(line: 761, column: 109, scope: !4362)
!5213 = !DILocation(line: 761, column: 29, scope: !4362)
!5214 = !DILocation(line: 74, column: 9, scope: !3947, inlinedAt: !4361)
!5215 = !DILocation(line: 74, column: 14, scope: !3947, inlinedAt: !4361)
!5216 = !DILocation(line: 74, column: 9, scope: !3691, inlinedAt: !4361)
!5217 = !DILocation(line: 75, column: 20, scope: !3951, inlinedAt: !4361)
!5218 = !DILocation(line: 75, column: 14, scope: !3951, inlinedAt: !4361)
!5219 = !DILocation(line: 75, column: 25, scope: !3955, inlinedAt: !4361)
!5220 = !DILocation(line: 75, column: 33, scope: !3955, inlinedAt: !4361)
!5221 = !DILocation(line: 75, column: 31, scope: !3955, inlinedAt: !4361)
!5222 = !DILocation(line: 75, column: 9, scope: !3955, inlinedAt: !4361)
!5223 = !DILocation(line: 76, column: 26, scope: !3956, inlinedAt: !4361)
!5224 = !DILocation(line: 76, column: 22, scope: !3956, inlinedAt: !4361)
!5225 = !DILocation(line: 76, column: 17, scope: !3956, inlinedAt: !4361)
!5226 = !DILocation(line: 76, column: 20, scope: !3956, inlinedAt: !4361)
!5227 = !DILocation(line: 75, column: 44, scope: !3965, inlinedAt: !4361)
!5228 = !DILocation(line: 75, column: 9, scope: !3965, inlinedAt: !4361)
!5229 = !DILocation(line: 77, column: 16, scope: !3952, inlinedAt: !4361)
!5230 = !DILocation(line: 77, column: 9, scope: !3952, inlinedAt: !4361)
!5231 = !DILocation(line: 79, column: 12, scope: !3972, inlinedAt: !4361)
!5232 = !DILocation(line: 79, column: 10, scope: !3972, inlinedAt: !4361)
!5233 = !DILocation(line: 79, column: 17, scope: !3975, inlinedAt: !4361)
!5234 = !DILocation(line: 79, column: 21, scope: !3975, inlinedAt: !4361)
!5235 = !DILocation(line: 79, column: 19, scope: !3975, inlinedAt: !4361)
!5236 = !DILocation(line: 79, column: 5, scope: !3975, inlinedAt: !4361)
!5237 = !DILocation(line: 80, column: 13, scope: !3981, inlinedAt: !4361)
!5238 = !DILocation(line: 80, column: 20, scope: !3981, inlinedAt: !4361)
!5239 = !DILocation(line: 80, column: 25, scope: !3981, inlinedAt: !4361)
!5240 = !DILocation(line: 80, column: 28, scope: !3986, inlinedAt: !4361)
!5241 = !DILocation(line: 80, column: 30, scope: !3986, inlinedAt: !4361)
!5242 = !DILocation(line: 80, column: 35, scope: !3986, inlinedAt: !4361)
!5243 = !DILocation(line: 80, column: 39, scope: !3990, inlinedAt: !4361)
!5244 = !DILocation(line: 80, column: 47, scope: !3990, inlinedAt: !4361)
!5245 = !DILocation(line: 80, column: 51, scope: !3993, inlinedAt: !4361)
!5246 = !DILocation(line: 80, column: 59, scope: !3993, inlinedAt: !4361)
!5247 = !DILocation(line: 80, column: 62, scope: !3996, inlinedAt: !4361)
!5248 = !DILocation(line: 80, column: 66, scope: !3996, inlinedAt: !4361)
!5249 = !DILocation(line: 80, column: 70, scope: !3996, inlinedAt: !4361)
!5250 = !DILocation(line: 80, column: 64, scope: !3996, inlinedAt: !4361)
!5251 = !DILocation(line: 80, column: 73, scope: !3996, inlinedAt: !4361)
!5252 = !DILocation(line: 80, column: 76, scope: !4002, inlinedAt: !4361)
!5253 = !DILocation(line: 80, column: 83, scope: !4002, inlinedAt: !4361)
!5254 = !DILocation(line: 80, column: 13, scope: !4002, inlinedAt: !4361)
!5255 = !DILocation(line: 81, column: 28, scope: !4006, inlinedAt: !4361)
!5256 = !DILocation(line: 81, column: 22, scope: !4006, inlinedAt: !4361)
!5257 = !DILocation(line: 81, column: 13, scope: !4006, inlinedAt: !4361)
!5258 = !DILocation(line: 81, column: 26, scope: !4006, inlinedAt: !4361)
!5259 = !DILocation(line: 82, column: 16, scope: !4006, inlinedAt: !4361)
!5260 = !DILocation(line: 83, column: 14, scope: !4006, inlinedAt: !4361)
!5261 = !DILocation(line: 84, column: 9, scope: !4006, inlinedAt: !4361)
!5262 = !DILocation(line: 85, column: 29, scope: !3981, inlinedAt: !4361)
!5263 = !DILocation(line: 85, column: 28, scope: !3981, inlinedAt: !4361)
!5264 = !DILocation(line: 85, column: 22, scope: !3981, inlinedAt: !4361)
!5265 = !DILocation(line: 85, column: 13, scope: !3981, inlinedAt: !4361)
!5266 = !DILocation(line: 85, column: 26, scope: !3981, inlinedAt: !4361)
!5267 = !DILocation(line: 79, column: 28, scope: !4019, inlinedAt: !4361)
!5268 = !DILocation(line: 79, column: 35, scope: !4019, inlinedAt: !4361)
!5269 = !DILocation(line: 79, column: 5, scope: !4019, inlinedAt: !4361)
!5270 = !DILocation(line: 87, column: 12, scope: !3691, inlinedAt: !4361)
!5271 = !DILocation(line: 87, column: 5, scope: !3691, inlinedAt: !4361)
!5272 = !DILocation(line: 88, column: 1, scope: !3691, inlinedAt: !4361)
!5273 = !DILocation(line: 761, column: 27, scope: !4362)
!5274 = !DILocation(line: 762, column: 39, scope: !4362)
!5275 = !DILocation(line: 762, column: 32, scope: !4362)
!5276 = !DILocation(line: 762, column: 49, scope: !4362)
!5277 = !DILocation(line: 762, column: 60, scope: !4362)
!5278 = !DILocation(line: 762, column: 53, scope: !4362)
!5279 = !DILocation(line: 762, column: 70, scope: !4362)
!5280 = !DILocation(line: 763, column: 31, scope: !4362)
!5281 = !DILocation(line: 763, column: 41, scope: !4362)
!5282 = !DILocation(line: 762, column: 17, scope: !4362)
!5283 = !DILocation(line: 764, column: 46, scope: !4362)
!5284 = !DILocation(line: 764, column: 49, scope: !4362)
!5285 = !DILocation(line: 764, column: 59, scope: !4362)
!5286 = !DILocation(line: 764, column: 63, scope: !4362)
!5287 = !DILocation(line: 764, column: 24, scope: !4362)
!5288 = !DILocation(line: 764, column: 17, scope: !4362)
!5289 = !DILocation(line: 764, column: 34, scope: !4362)
!5290 = !DILocation(line: 764, column: 44, scope: !4362)
!5291 = !DILocation(line: 765, column: 43, scope: !4362)
!5292 = !DILocation(line: 765, column: 24, scope: !4362)
!5293 = !DILocation(line: 765, column: 17, scope: !4362)
!5294 = !DILocation(line: 765, column: 34, scope: !4362)
!5295 = !DILocation(line: 765, column: 41, scope: !4362)
!5296 = !DILocation(line: 766, column: 45, scope: !4362)
!5297 = !DILocation(line: 766, column: 51, scope: !4362)
!5298 = !DILocation(line: 766, column: 49, scope: !4362)
!5299 = !DILocation(line: 766, column: 62, scope: !4362)
!5300 = !DILocation(line: 766, column: 60, scope: !4362)
!5301 = !DILocation(line: 766, column: 24, scope: !4362)
!5302 = !DILocation(line: 766, column: 17, scope: !4362)
!5303 = !DILocation(line: 766, column: 34, scope: !4362)
!5304 = !DILocation(line: 766, column: 43, scope: !4362)
!5305 = !DILocation(line: 767, column: 29, scope: !4362)
!5306 = !DILocation(line: 767, column: 38, scope: !4362)
!5307 = !DILocation(line: 767, column: 27, scope: !4362)
!5308 = !DILocation(line: 768, column: 25, scope: !4362)
!5309 = !DILocation(line: 770, column: 45, scope: !4355)
!5310 = !DILocation(line: 770, column: 50, scope: !4355)
!5311 = !DILocation(line: 770, column: 60, scope: !4355)
!5312 = !DILocation(line: 770, column: 58, scope: !4355)
!5313 = !DILocation(line: 770, column: 65, scope: !4355)
!5314 = !DILocation(line: 770, column: 25, scope: !4355)
!5315 = !DILocation(line: 74, column: 9, scope: !3947, inlinedAt: !4354)
!5316 = !DILocation(line: 74, column: 14, scope: !3947, inlinedAt: !4354)
!5317 = !DILocation(line: 74, column: 9, scope: !3691, inlinedAt: !4354)
!5318 = !DILocation(line: 75, column: 20, scope: !3951, inlinedAt: !4354)
!5319 = !DILocation(line: 75, column: 14, scope: !3951, inlinedAt: !4354)
!5320 = !DILocation(line: 75, column: 25, scope: !3955, inlinedAt: !4354)
!5321 = !DILocation(line: 75, column: 33, scope: !3955, inlinedAt: !4354)
!5322 = !DILocation(line: 75, column: 31, scope: !3955, inlinedAt: !4354)
!5323 = !DILocation(line: 75, column: 9, scope: !3955, inlinedAt: !4354)
!5324 = !DILocation(line: 76, column: 26, scope: !3956, inlinedAt: !4354)
!5325 = !DILocation(line: 76, column: 22, scope: !3956, inlinedAt: !4354)
!5326 = !DILocation(line: 76, column: 17, scope: !3956, inlinedAt: !4354)
!5327 = !DILocation(line: 76, column: 20, scope: !3956, inlinedAt: !4354)
!5328 = !DILocation(line: 75, column: 44, scope: !3965, inlinedAt: !4354)
!5329 = !DILocation(line: 75, column: 9, scope: !3965, inlinedAt: !4354)
!5330 = !DILocation(line: 77, column: 16, scope: !3952, inlinedAt: !4354)
!5331 = !DILocation(line: 77, column: 9, scope: !3952, inlinedAt: !4354)
!5332 = !DILocation(line: 79, column: 12, scope: !3972, inlinedAt: !4354)
!5333 = !DILocation(line: 79, column: 10, scope: !3972, inlinedAt: !4354)
!5334 = !DILocation(line: 79, column: 17, scope: !3975, inlinedAt: !4354)
!5335 = !DILocation(line: 79, column: 21, scope: !3975, inlinedAt: !4354)
!5336 = !DILocation(line: 79, column: 19, scope: !3975, inlinedAt: !4354)
!5337 = !DILocation(line: 79, column: 5, scope: !3975, inlinedAt: !4354)
!5338 = !DILocation(line: 80, column: 13, scope: !3981, inlinedAt: !4354)
!5339 = !DILocation(line: 80, column: 20, scope: !3981, inlinedAt: !4354)
!5340 = !DILocation(line: 80, column: 25, scope: !3981, inlinedAt: !4354)
!5341 = !DILocation(line: 80, column: 28, scope: !3986, inlinedAt: !4354)
!5342 = !DILocation(line: 80, column: 30, scope: !3986, inlinedAt: !4354)
!5343 = !DILocation(line: 80, column: 35, scope: !3986, inlinedAt: !4354)
!5344 = !DILocation(line: 80, column: 39, scope: !3990, inlinedAt: !4354)
!5345 = !DILocation(line: 80, column: 47, scope: !3990, inlinedAt: !4354)
!5346 = !DILocation(line: 80, column: 51, scope: !3993, inlinedAt: !4354)
!5347 = !DILocation(line: 80, column: 59, scope: !3993, inlinedAt: !4354)
!5348 = !DILocation(line: 80, column: 62, scope: !3996, inlinedAt: !4354)
!5349 = !DILocation(line: 80, column: 66, scope: !3996, inlinedAt: !4354)
!5350 = !DILocation(line: 80, column: 70, scope: !3996, inlinedAt: !4354)
!5351 = !DILocation(line: 80, column: 64, scope: !3996, inlinedAt: !4354)
!5352 = !DILocation(line: 80, column: 73, scope: !3996, inlinedAt: !4354)
!5353 = !DILocation(line: 80, column: 76, scope: !4002, inlinedAt: !4354)
!5354 = !DILocation(line: 80, column: 83, scope: !4002, inlinedAt: !4354)
!5355 = !DILocation(line: 80, column: 13, scope: !4002, inlinedAt: !4354)
!5356 = !DILocation(line: 81, column: 28, scope: !4006, inlinedAt: !4354)
!5357 = !DILocation(line: 81, column: 22, scope: !4006, inlinedAt: !4354)
!5358 = !DILocation(line: 81, column: 13, scope: !4006, inlinedAt: !4354)
!5359 = !DILocation(line: 81, column: 26, scope: !4006, inlinedAt: !4354)
!5360 = !DILocation(line: 82, column: 16, scope: !4006, inlinedAt: !4354)
!5361 = !DILocation(line: 83, column: 14, scope: !4006, inlinedAt: !4354)
!5362 = !DILocation(line: 84, column: 9, scope: !4006, inlinedAt: !4354)
!5363 = !DILocation(line: 85, column: 29, scope: !3981, inlinedAt: !4354)
!5364 = !DILocation(line: 85, column: 28, scope: !3981, inlinedAt: !4354)
!5365 = !DILocation(line: 85, column: 22, scope: !3981, inlinedAt: !4354)
!5366 = !DILocation(line: 85, column: 13, scope: !3981, inlinedAt: !4354)
!5367 = !DILocation(line: 85, column: 26, scope: !3981, inlinedAt: !4354)
!5368 = !DILocation(line: 79, column: 28, scope: !4019, inlinedAt: !4354)
!5369 = !DILocation(line: 79, column: 35, scope: !4019, inlinedAt: !4354)
!5370 = !DILocation(line: 79, column: 5, scope: !4019, inlinedAt: !4354)
!5371 = !DILocation(line: 87, column: 12, scope: !3691, inlinedAt: !4354)
!5372 = !DILocation(line: 87, column: 5, scope: !3691, inlinedAt: !4354)
!5373 = !DILocation(line: 88, column: 1, scope: !3691, inlinedAt: !4354)
!5374 = !DILocation(line: 770, column: 23, scope: !4355)
!5375 = !DILocation(line: 771, column: 9, scope: !4355)
!5376 = !DILocation(line: 772, column: 45, scope: !4344)
!5377 = !DILocation(line: 772, column: 50, scope: !4344)
!5378 = !DILocation(line: 772, column: 60, scope: !4344)
!5379 = !DILocation(line: 772, column: 25, scope: !4344)
!5380 = !DILocation(line: 74, column: 9, scope: !3947, inlinedAt: !4343)
!5381 = !DILocation(line: 74, column: 14, scope: !3947, inlinedAt: !4343)
!5382 = !DILocation(line: 74, column: 9, scope: !3691, inlinedAt: !4343)
!5383 = !DILocation(line: 75, column: 20, scope: !3951, inlinedAt: !4343)
!5384 = !DILocation(line: 75, column: 14, scope: !3951, inlinedAt: !4343)
!5385 = !DILocation(line: 75, column: 25, scope: !3955, inlinedAt: !4343)
!5386 = !DILocation(line: 75, column: 33, scope: !3955, inlinedAt: !4343)
!5387 = !DILocation(line: 75, column: 31, scope: !3955, inlinedAt: !4343)
!5388 = !DILocation(line: 75, column: 9, scope: !3955, inlinedAt: !4343)
!5389 = !DILocation(line: 76, column: 26, scope: !3956, inlinedAt: !4343)
!5390 = !DILocation(line: 76, column: 22, scope: !3956, inlinedAt: !4343)
!5391 = !DILocation(line: 76, column: 17, scope: !3956, inlinedAt: !4343)
!5392 = !DILocation(line: 76, column: 20, scope: !3956, inlinedAt: !4343)
!5393 = !DILocation(line: 75, column: 44, scope: !3965, inlinedAt: !4343)
!5394 = !DILocation(line: 75, column: 9, scope: !3965, inlinedAt: !4343)
!5395 = !DILocation(line: 77, column: 16, scope: !3952, inlinedAt: !4343)
!5396 = !DILocation(line: 77, column: 9, scope: !3952, inlinedAt: !4343)
!5397 = !DILocation(line: 79, column: 12, scope: !3972, inlinedAt: !4343)
!5398 = !DILocation(line: 79, column: 10, scope: !3972, inlinedAt: !4343)
!5399 = !DILocation(line: 79, column: 17, scope: !3975, inlinedAt: !4343)
!5400 = !DILocation(line: 79, column: 21, scope: !3975, inlinedAt: !4343)
!5401 = !DILocation(line: 79, column: 19, scope: !3975, inlinedAt: !4343)
!5402 = !DILocation(line: 79, column: 5, scope: !3975, inlinedAt: !4343)
!5403 = !DILocation(line: 80, column: 13, scope: !3981, inlinedAt: !4343)
!5404 = !DILocation(line: 80, column: 20, scope: !3981, inlinedAt: !4343)
!5405 = !DILocation(line: 80, column: 25, scope: !3981, inlinedAt: !4343)
!5406 = !DILocation(line: 80, column: 28, scope: !3986, inlinedAt: !4343)
!5407 = !DILocation(line: 80, column: 30, scope: !3986, inlinedAt: !4343)
!5408 = !DILocation(line: 80, column: 35, scope: !3986, inlinedAt: !4343)
!5409 = !DILocation(line: 80, column: 39, scope: !3990, inlinedAt: !4343)
!5410 = !DILocation(line: 80, column: 47, scope: !3990, inlinedAt: !4343)
!5411 = !DILocation(line: 80, column: 51, scope: !3993, inlinedAt: !4343)
!5412 = !DILocation(line: 80, column: 59, scope: !3993, inlinedAt: !4343)
!5413 = !DILocation(line: 80, column: 62, scope: !3996, inlinedAt: !4343)
!5414 = !DILocation(line: 80, column: 66, scope: !3996, inlinedAt: !4343)
!5415 = !DILocation(line: 80, column: 70, scope: !3996, inlinedAt: !4343)
!5416 = !DILocation(line: 80, column: 64, scope: !3996, inlinedAt: !4343)
!5417 = !DILocation(line: 80, column: 73, scope: !3996, inlinedAt: !4343)
!5418 = !DILocation(line: 80, column: 76, scope: !4002, inlinedAt: !4343)
!5419 = !DILocation(line: 80, column: 83, scope: !4002, inlinedAt: !4343)
!5420 = !DILocation(line: 80, column: 13, scope: !4002, inlinedAt: !4343)
!5421 = !DILocation(line: 81, column: 28, scope: !4006, inlinedAt: !4343)
!5422 = !DILocation(line: 81, column: 22, scope: !4006, inlinedAt: !4343)
!5423 = !DILocation(line: 81, column: 13, scope: !4006, inlinedAt: !4343)
!5424 = !DILocation(line: 81, column: 26, scope: !4006, inlinedAt: !4343)
!5425 = !DILocation(line: 82, column: 16, scope: !4006, inlinedAt: !4343)
!5426 = !DILocation(line: 83, column: 14, scope: !4006, inlinedAt: !4343)
!5427 = !DILocation(line: 84, column: 9, scope: !4006, inlinedAt: !4343)
!5428 = !DILocation(line: 85, column: 29, scope: !3981, inlinedAt: !4343)
!5429 = !DILocation(line: 85, column: 28, scope: !3981, inlinedAt: !4343)
!5430 = !DILocation(line: 85, column: 22, scope: !3981, inlinedAt: !4343)
!5431 = !DILocation(line: 85, column: 13, scope: !3981, inlinedAt: !4343)
!5432 = !DILocation(line: 85, column: 26, scope: !3981, inlinedAt: !4343)
!5433 = !DILocation(line: 79, column: 28, scope: !4019, inlinedAt: !4343)
!5434 = !DILocation(line: 79, column: 35, scope: !4019, inlinedAt: !4343)
!5435 = !DILocation(line: 79, column: 5, scope: !4019, inlinedAt: !4343)
!5436 = !DILocation(line: 87, column: 12, scope: !3691, inlinedAt: !4343)
!5437 = !DILocation(line: 87, column: 5, scope: !3691, inlinedAt: !4343)
!5438 = !DILocation(line: 88, column: 1, scope: !3691, inlinedAt: !4343)
!5439 = !DILocation(line: 772, column: 23, scope: !4344)
!5440 = !DILocation(line: 774, column: 24, scope: !4347)
!5441 = !DILocation(line: 774, column: 27, scope: !4347)
!5442 = !DILocation(line: 774, column: 31, scope: !4347)
!5443 = !DILocation(line: 774, column: 37, scope: !4347)
!5444 = !DILocation(line: 774, column: 46, scope: !4347)
!5445 = !DILocation(line: 774, column: 9, scope: !4347)
!5446 = !DILocation(line: 775, column: 5, scope: !4347)
!5447 = !DILocation(line: 776, column: 24, scope: !4348)
!5448 = !DILocation(line: 776, column: 27, scope: !4348)
!5449 = !DILocation(line: 776, column: 31, scope: !4348)
!5450 = !DILocation(line: 776, column: 36, scope: !4348)
!5451 = !DILocation(line: 776, column: 44, scope: !4348)
!5452 = !DILocation(line: 776, column: 9, scope: !4348)
!5453 = !DILocation(line: 778, column: 9, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 778, column: 9)
!5455 = !DILocation(line: 778, column: 12, scope: !5454)
!5456 = !DILocation(line: 778, column: 9, scope: !4341)
!5457 = !DILocation(line: 779, column: 37, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5454, file: !977, line: 778, column: 24)
!5459 = !DILocation(line: 779, column: 40, scope: !5458)
!5460 = !DILocation(line: 779, column: 26, scope: !5458)
!5461 = !DILocation(line: 779, column: 25, scope: !5458)
!5462 = !DILocation(line: 779, column: 9, scope: !5458)
!5463 = !DILocation(line: 779, column: 12, scope: !5458)
!5464 = !DILocation(line: 779, column: 23, scope: !5458)
!5465 = !DILocation(line: 780, column: 37, scope: !5458)
!5466 = !DILocation(line: 780, column: 40, scope: !5458)
!5467 = !DILocation(line: 780, column: 26, scope: !5458)
!5468 = !DILocation(line: 780, column: 9, scope: !5458)
!5469 = !DILocation(line: 780, column: 12, scope: !5458)
!5470 = !DILocation(line: 780, column: 24, scope: !5458)
!5471 = !DILocation(line: 785, column: 13, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5458, file: !977, line: 785, column: 13)
!5473 = !DILocation(line: 785, column: 20, scope: !5472)
!5474 = !DILocation(line: 785, column: 29, scope: !5472)
!5475 = !DILocation(line: 785, column: 54, scope: !5472)
!5476 = !DILocation(line: 785, column: 57, scope: !5477)
!5477 = !DILexicalBlockFile(scope: !5472, file: !977, discriminator: 1)
!5478 = !DILocation(line: 785, column: 64, scope: !5477)
!5479 = !DILocation(line: 785, column: 73, scope: !5477)
!5480 = !DILocation(line: 785, column: 13, scope: !5477)
!5481 = !DILocation(line: 786, column: 17, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !977, line: 786, column: 17)
!5483 = distinct !DILexicalBlock(scope: !5472, file: !977, line: 785, column: 98)
!5484 = !DILocation(line: 786, column: 20, scope: !5482)
!5485 = !DILocation(line: 786, column: 17, scope: !5483)
!5486 = !DILocation(line: 788, column: 53, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5482, file: !977, line: 786, column: 32)
!5488 = !DILocation(line: 788, column: 56, scope: !5487)
!5489 = !DILocation(line: 788, column: 32, scope: !5487)
!5490 = !DILocation(line: 788, column: 39, scope: !5487)
!5491 = !DILocation(line: 788, column: 51, scope: !5487)
!5492 = !DILocation(line: 788, column: 17, scope: !5487)
!5493 = !DILocation(line: 788, column: 24, scope: !5487)
!5494 = !DILocation(line: 788, column: 30, scope: !5487)
!5495 = !DILocation(line: 789, column: 55, scope: !5487)
!5496 = !DILocation(line: 789, column: 58, scope: !5487)
!5497 = !DILocation(line: 789, column: 33, scope: !5487)
!5498 = !DILocation(line: 789, column: 40, scope: !5487)
!5499 = !DILocation(line: 789, column: 53, scope: !5487)
!5500 = !DILocation(line: 789, column: 17, scope: !5487)
!5501 = !DILocation(line: 789, column: 24, scope: !5487)
!5502 = !DILocation(line: 789, column: 31, scope: !5487)
!5503 = !DILocation(line: 790, column: 13, scope: !5487)
!5504 = !DILocation(line: 791, column: 17, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5482, file: !977, line: 790, column: 20)
!5506 = !DILocation(line: 793, column: 9, scope: !5483)
!5507 = !DILocation(line: 794, column: 5, scope: !5458)
!5508 = !DILocation(line: 796, column: 9, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 796, column: 9)
!5510 = !DILocation(line: 796, column: 12, scope: !5509)
!5511 = !DILocation(line: 796, column: 32, scope: !5509)
!5512 = !DILocation(line: 797, column: 10, scope: !5509)
!5513 = !DILocation(line: 797, column: 13, scope: !5509)
!5514 = !DILocation(line: 797, column: 22, scope: !5509)
!5515 = !DILocation(line: 797, column: 29, scope: !5509)
!5516 = !DILocation(line: 797, column: 19, scope: !5509)
!5517 = !DILocation(line: 797, column: 41, scope: !5509)
!5518 = !DILocation(line: 798, column: 10, scope: !5509)
!5519 = !DILocation(line: 798, column: 13, scope: !5509)
!5520 = !DILocation(line: 798, column: 23, scope: !5509)
!5521 = !DILocation(line: 798, column: 30, scope: !5509)
!5522 = !DILocation(line: 798, column: 20, scope: !5509)
!5523 = !DILocation(line: 796, column: 9, scope: !5524)
!5524 = !DILexicalBlockFile(scope: !4341, file: !977, discriminator: 1)
!5525 = !DILocation(line: 799, column: 27, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5509, file: !977, line: 798, column: 45)
!5527 = !DILocation(line: 799, column: 9, scope: !5526)
!5528 = !DILocation(line: 800, column: 5, scope: !5526)
!5529 = !DILocation(line: 802, column: 10, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 802, column: 9)
!5531 = !DILocation(line: 802, column: 13, scope: !5530)
!5532 = !DILocation(line: 802, column: 9, scope: !4341)
!5533 = !DILocation(line: 803, column: 43, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5535, file: !977, line: 803, column: 13)
!5535 = distinct !DILexicalBlock(scope: !5530, file: !977, line: 802, column: 34)
!5536 = !DILocation(line: 803, column: 20, scope: !5534)
!5537 = !DILocation(line: 803, column: 18, scope: !5534)
!5538 = !DILocation(line: 803, column: 51, scope: !5534)
!5539 = !DILocation(line: 803, column: 13, scope: !5535)
!5540 = !DILocation(line: 804, column: 13, scope: !5534)
!5541 = !DILocation(line: 805, column: 52, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5535, file: !977, line: 805, column: 13)
!5543 = !DILocation(line: 805, column: 20, scope: !5542)
!5544 = !DILocation(line: 805, column: 18, scope: !5542)
!5545 = !DILocation(line: 805, column: 56, scope: !5542)
!5546 = !DILocation(line: 805, column: 13, scope: !5535)
!5547 = !DILocation(line: 806, column: 31, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5542, file: !977, line: 805, column: 61)
!5549 = !DILocation(line: 806, column: 13, scope: !5548)
!5550 = !DILocation(line: 807, column: 13, scope: !5548)
!5551 = !DILocation(line: 810, column: 25, scope: !5535)
!5552 = !DILocation(line: 810, column: 32, scope: !5535)
!5553 = !DILocation(line: 810, column: 45, scope: !5535)
!5554 = !DILocation(line: 810, column: 48, scope: !5555)
!5555 = !DILexicalBlockFile(scope: !5535, file: !977, discriminator: 1)
!5556 = !DILocation(line: 810, column: 51, scope: !5555)
!5557 = !DILocation(line: 810, column: 45, scope: !5555)
!5558 = !DILocation(line: 810, column: 45, scope: !5559)
!5559 = !DILexicalBlockFile(scope: !5535, file: !977, discriminator: 2)
!5560 = !DILocation(line: 810, column: 9, scope: !5559)
!5561 = !DILocation(line: 810, column: 12, scope: !5559)
!5562 = !DILocation(line: 810, column: 22, scope: !5559)
!5563 = !DILocation(line: 812, column: 13, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5535, file: !977, line: 812, column: 13)
!5565 = !DILocation(line: 812, column: 16, scope: !5564)
!5566 = !DILocation(line: 812, column: 24, scope: !5564)
!5567 = !DILocation(line: 812, column: 13, scope: !5535)
!5568 = !DILocation(line: 813, column: 16, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5570, file: !977, line: 813, column: 16)
!5570 = distinct !DILexicalBlock(scope: !5564, file: !977, line: 812, column: 45)
!5571 = !DILocation(line: 813, column: 23, scope: !5569)
!5572 = !DILocation(line: 813, column: 34, scope: !5569)
!5573 = !DILocation(line: 813, column: 38, scope: !5569)
!5574 = !DILocation(line: 813, column: 41, scope: !5575)
!5575 = !DILexicalBlockFile(scope: !5569, file: !977, discriminator: 1)
!5576 = !DILocation(line: 813, column: 48, scope: !5575)
!5577 = !DILocation(line: 813, column: 60, scope: !5575)
!5578 = !DILocation(line: 813, column: 16, scope: !5575)
!5579 = !DILocation(line: 814, column: 21, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5569, file: !977, line: 813, column: 65)
!5581 = !DILocation(line: 815, column: 17, scope: !5580)
!5582 = !DILocation(line: 817, column: 29, scope: !5570)
!5583 = !DILocation(line: 817, column: 36, scope: !5570)
!5584 = !DILocation(line: 817, column: 13, scope: !5570)
!5585 = !DILocation(line: 817, column: 16, scope: !5570)
!5586 = !DILocation(line: 817, column: 27, scope: !5570)
!5587 = !DILocation(line: 818, column: 29, scope: !5570)
!5588 = !DILocation(line: 818, column: 36, scope: !5570)
!5589 = !DILocation(line: 818, column: 13, scope: !5570)
!5590 = !DILocation(line: 818, column: 16, scope: !5570)
!5591 = !DILocation(line: 818, column: 27, scope: !5570)
!5592 = !DILocation(line: 819, column: 9, scope: !5570)
!5593 = !DILocation(line: 820, column: 5, scope: !5535)
!5594 = !DILocation(line: 823, column: 5, scope: !4341)
!5595 = !DILocation(line: 823, column: 8, scope: !4341)
!5596 = !DILocation(line: 823, column: 24, scope: !4341)
!5597 = !DILocation(line: 824, column: 5, scope: !4341)
!5598 = !DILocation(line: 824, column: 8, scope: !4341)
!5599 = !DILocation(line: 824, column: 30, scope: !4341)
!5600 = !DILocation(line: 825, column: 9, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 825, column: 9)
!5602 = !DILocation(line: 825, column: 12, scope: !5601)
!5603 = !DILocation(line: 825, column: 20, scope: !5601)
!5604 = !DILocation(line: 825, column: 9, scope: !4341)
!5605 = !DILocation(line: 826, column: 46, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5607, file: !977, line: 826, column: 13)
!5607 = distinct !DILexicalBlock(scope: !5601, file: !977, line: 825, column: 40)
!5608 = !DILocation(line: 826, column: 50, scope: !5606)
!5609 = !DILocation(line: 826, column: 53, scope: !5606)
!5610 = !DILocation(line: 826, column: 20, scope: !5606)
!5611 = !DILocation(line: 826, column: 18, scope: !5606)
!5612 = !DILocation(line: 826, column: 58, scope: !5606)
!5613 = !DILocation(line: 826, column: 13, scope: !5607)
!5614 = !DILocation(line: 827, column: 13, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5606, file: !977, line: 826, column: 63)
!5616 = !DILocation(line: 829, column: 5, scope: !5607)
!5617 = !DILocation(line: 830, column: 50, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5619, file: !977, line: 830, column: 13)
!5619 = distinct !DILexicalBlock(scope: !5601, file: !977, line: 829, column: 12)
!5620 = !DILocation(line: 830, column: 54, scope: !5618)
!5621 = !DILocation(line: 830, column: 57, scope: !5618)
!5622 = !DILocation(line: 830, column: 20, scope: !5618)
!5623 = !DILocation(line: 830, column: 18, scope: !5618)
!5624 = !DILocation(line: 830, column: 62, scope: !5618)
!5625 = !DILocation(line: 830, column: 13, scope: !5619)
!5626 = !DILocation(line: 831, column: 13, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5618, file: !977, line: 830, column: 67)
!5628 = !DILocation(line: 834, column: 5, scope: !4341)
!5629 = !DILocation(line: 834, column: 8, scope: !4341)
!5630 = !DILocation(line: 834, column: 30, scope: !4341)
!5631 = !DILocation(line: 836, column: 9, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 836, column: 9)
!5633 = !DILocation(line: 836, column: 16, scope: !5632)
!5634 = !DILocation(line: 836, column: 22, scope: !5632)
!5635 = !DILocation(line: 836, column: 9, scope: !4341)
!5636 = !DILocation(line: 837, column: 16, scope: !5632)
!5637 = !DILocation(line: 837, column: 19, scope: !5632)
!5638 = !DILocation(line: 837, column: 21, scope: !5632)
!5639 = !DILocation(line: 837, column: 76, scope: !5632)
!5640 = !DILocation(line: 837, column: 79, scope: !5632)
!5641 = !DILocation(line: 837, column: 51, scope: !5632)
!5642 = !DILocation(line: 837, column: 9, scope: !5643)
!5643 = !DILexicalBlockFile(scope: !5632, file: !977, discriminator: 1)
!5644 = !DILocation(line: 837, column: 9, scope: !5632)
!5645 = !DILocation(line: 839, column: 10, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 839, column: 9)
!5647 = !DILocation(line: 839, column: 17, scope: !5646)
!5648 = !DILocation(line: 839, column: 26, scope: !5646)
!5649 = !DILocation(line: 839, column: 51, scope: !5646)
!5650 = !DILocation(line: 839, column: 54, scope: !5651)
!5651 = !DILexicalBlockFile(scope: !5646, file: !977, discriminator: 1)
!5652 = !DILocation(line: 839, column: 61, scope: !5651)
!5653 = !DILocation(line: 839, column: 70, scope: !5651)
!5654 = !DILocation(line: 840, column: 9, scope: !5646)
!5655 = !DILocation(line: 840, column: 12, scope: !5651)
!5656 = !DILocation(line: 840, column: 15, scope: !5651)
!5657 = !DILocation(line: 840, column: 25, scope: !5651)
!5658 = !DILocation(line: 839, column: 9, scope: !5659)
!5659 = !DILexicalBlockFile(scope: !4341, file: !977, discriminator: 2)
!5660 = !DILocation(line: 841, column: 16, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5646, file: !977, line: 840, column: 47)
!5662 = !DILocation(line: 841, column: 19, scope: !5661)
!5663 = !DILocation(line: 841, column: 21, scope: !5661)
!5664 = !DILocation(line: 841, column: 9, scope: !5661)
!5665 = !DILocation(line: 842, column: 13, scope: !5661)
!5666 = !DILocation(line: 843, column: 9, scope: !5661)
!5667 = !DILocation(line: 846, column: 10, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 846, column: 9)
!5669 = !DILocation(line: 846, column: 13, scope: !5668)
!5670 = !DILocation(line: 846, column: 26, scope: !5668)
!5671 = !DILocation(line: 846, column: 29, scope: !5668)
!5672 = !DILocation(line: 846, column: 23, scope: !5668)
!5673 = !DILocation(line: 846, column: 41, scope: !5668)
!5674 = !DILocation(line: 846, column: 9, scope: !4341)
!5675 = !DILocation(line: 847, column: 16, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5668, file: !977, line: 846, column: 47)
!5677 = !DILocation(line: 847, column: 19, scope: !5676)
!5678 = !DILocation(line: 847, column: 21, scope: !5676)
!5679 = !DILocation(line: 847, column: 9, scope: !5676)
!5680 = !DILocation(line: 848, column: 13, scope: !5676)
!5681 = !DILocation(line: 849, column: 9, scope: !5676)
!5682 = !DILocation(line: 853, column: 39, scope: !4341)
!5683 = !DILocation(line: 853, column: 42, scope: !4341)
!5684 = !DILocation(line: 853, column: 5, scope: !4341)
!5685 = !DILocation(line: 853, column: 8, scope: !4341)
!5686 = !DILocation(line: 853, column: 24, scope: !4341)
!5687 = !DILocation(line: 853, column: 27, scope: !4341)
!5688 = !DILocation(line: 853, column: 37, scope: !4341)
!5689 = !DILocation(line: 854, column: 39, scope: !4341)
!5690 = !DILocation(line: 854, column: 42, scope: !4341)
!5691 = !DILocation(line: 854, column: 52, scope: !4341)
!5692 = !DILocation(line: 854, column: 5, scope: !4341)
!5693 = !DILocation(line: 854, column: 8, scope: !4341)
!5694 = !DILocation(line: 854, column: 24, scope: !4341)
!5695 = !DILocation(line: 854, column: 27, scope: !4341)
!5696 = !DILocation(line: 854, column: 37, scope: !4341)
!5697 = !DILocation(line: 857, column: 10, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 857, column: 9)
!5699 = !DILocation(line: 857, column: 13, scope: !5698)
!5700 = !DILocation(line: 857, column: 30, scope: !5698)
!5701 = !DILocation(line: 857, column: 34, scope: !5702)
!5702 = !DILexicalBlockFile(scope: !5698, file: !977, discriminator: 1)
!5703 = !DILocation(line: 857, column: 37, scope: !5702)
!5704 = !DILocation(line: 857, column: 47, scope: !5702)
!5705 = !DILocation(line: 857, column: 68, scope: !5702)
!5706 = !DILocation(line: 857, column: 71, scope: !5707)
!5707 = !DILexicalBlockFile(scope: !5698, file: !977, discriminator: 2)
!5708 = !DILocation(line: 857, column: 74, scope: !5707)
!5709 = !DILocation(line: 857, column: 9, scope: !5707)
!5710 = !DILocation(line: 858, column: 16, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5698, file: !977, line: 857, column: 86)
!5712 = !DILocation(line: 858, column: 19, scope: !5711)
!5713 = !DILocation(line: 858, column: 21, scope: !5711)
!5714 = !DILocation(line: 858, column: 9, scope: !5711)
!5715 = !DILocation(line: 859, column: 9, scope: !5711)
!5716 = !DILocation(line: 861, column: 10, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 861, column: 9)
!5718 = !DILocation(line: 861, column: 17, scope: !5717)
!5719 = !DILocation(line: 861, column: 28, scope: !5717)
!5720 = !DILocation(line: 861, column: 48, scope: !5717)
!5721 = !DILocation(line: 861, column: 51, scope: !5722)
!5722 = !DILexicalBlockFile(scope: !5717, file: !977, discriminator: 1)
!5723 = !DILocation(line: 861, column: 54, scope: !5722)
!5724 = !DILocation(line: 861, column: 64, scope: !5722)
!5725 = !DILocation(line: 861, column: 86, scope: !5722)
!5726 = !DILocation(line: 862, column: 10, scope: !5717)
!5727 = !DILocation(line: 862, column: 17, scope: !5717)
!5728 = !DILocation(line: 862, column: 28, scope: !5717)
!5729 = !DILocation(line: 862, column: 48, scope: !5717)
!5730 = !DILocation(line: 862, column: 51, scope: !5722)
!5731 = !DILocation(line: 862, column: 54, scope: !5722)
!5732 = !DILocation(line: 862, column: 64, scope: !5722)
!5733 = !DILocation(line: 862, column: 86, scope: !5722)
!5734 = !DILocation(line: 863, column: 10, scope: !5717)
!5735 = !DILocation(line: 863, column: 17, scope: !5717)
!5736 = !DILocation(line: 863, column: 28, scope: !5717)
!5737 = !DILocation(line: 861, column: 9, scope: !5659)
!5738 = !DILocation(line: 864, column: 9, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5717, file: !977, line: 863, column: 46)
!5740 = !DILocation(line: 867, column: 9, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 867, column: 9)
!5742 = !DILocation(line: 867, column: 12, scope: !5741)
!5743 = !DILocation(line: 867, column: 9, scope: !4341)
!5744 = !DILocation(line: 868, column: 13, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !977, line: 868, column: 13)
!5746 = distinct !DILexicalBlock(scope: !5741, file: !977, line: 867, column: 34)
!5747 = !DILocation(line: 868, column: 16, scope: !5745)
!5748 = !DILocation(line: 868, column: 26, scope: !5745)
!5749 = !DILocation(line: 868, column: 13, scope: !5746)
!5750 = !DILocation(line: 869, column: 13, scope: !5745)
!5751 = !DILocation(line: 871, column: 13, scope: !5745)
!5752 = !DILocation(line: 871, column: 16, scope: !5745)
!5753 = !DILocation(line: 871, column: 37, scope: !5745)
!5754 = !DILocation(line: 872, column: 5, scope: !5746)
!5755 = !DILocation(line: 874, column: 35, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 874, column: 9)
!5757 = !DILocation(line: 874, column: 38, scope: !5756)
!5758 = !DILocation(line: 874, column: 16, scope: !5756)
!5759 = !DILocation(line: 874, column: 14, scope: !5756)
!5760 = !DILocation(line: 874, column: 46, scope: !5756)
!5761 = !DILocation(line: 874, column: 9, scope: !4341)
!5762 = !DILocation(line: 875, column: 9, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5756, file: !977, line: 874, column: 51)
!5764 = !DILocation(line: 878, column: 47, scope: !4341)
!5765 = !DILocation(line: 878, column: 50, scope: !4341)
!5766 = !DILocation(line: 878, column: 5, scope: !4341)
!5767 = !DILocation(line: 878, column: 8, scope: !4341)
!5768 = !DILocation(line: 878, column: 10, scope: !4341)
!5769 = !DILocation(line: 878, column: 31, scope: !4341)
!5770 = !DILocation(line: 878, column: 45, scope: !4341)
!5771 = !DILocation(line: 879, column: 54, scope: !4341)
!5772 = !DILocation(line: 879, column: 57, scope: !4341)
!5773 = !DILocation(line: 879, column: 61, scope: !4341)
!5774 = !DILocation(line: 879, column: 5, scope: !4341)
!5775 = !DILocation(line: 879, column: 8, scope: !4341)
!5776 = !DILocation(line: 879, column: 10, scope: !4341)
!5777 = !DILocation(line: 879, column: 31, scope: !4341)
!5778 = !DILocation(line: 879, column: 34, scope: !4341)
!5779 = !DILocation(line: 879, column: 51, scope: !4341)
!5780 = !DILocation(line: 880, column: 52, scope: !4341)
!5781 = !DILocation(line: 880, column: 55, scope: !4341)
!5782 = !DILocation(line: 880, column: 5, scope: !4341)
!5783 = !DILocation(line: 880, column: 8, scope: !4341)
!5784 = !DILocation(line: 880, column: 10, scope: !4341)
!5785 = !DILocation(line: 880, column: 31, scope: !4341)
!5786 = !DILocation(line: 880, column: 34, scope: !4341)
!5787 = !DILocation(line: 880, column: 50, scope: !4341)
!5788 = !DILocation(line: 883, column: 5, scope: !4341)
!5789 = !DILocation(line: 883, column: 8, scope: !4341)
!5790 = !DILocation(line: 883, column: 29, scope: !4341)
!5791 = !DILocation(line: 883, column: 32, scope: !4341)
!5792 = !DILocation(line: 883, column: 44, scope: !4341)
!5793 = !DILocation(line: 886, column: 9, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 886, column: 9)
!5795 = !DILocation(line: 886, column: 12, scope: !5794)
!5796 = !DILocation(line: 886, column: 9, scope: !4341)
!5797 = !DILocation(line: 888, column: 9, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5794, file: !977, line: 886, column: 17)
!5799 = !DILocation(line: 888, column: 12, scope: !5798)
!5800 = !DILocation(line: 888, column: 33, scope: !5798)
!5801 = !DILocation(line: 888, column: 36, scope: !5798)
!5802 = !DILocation(line: 888, column: 48, scope: !5798)
!5803 = !DILocation(line: 889, column: 5, scope: !5798)
!5804 = !DILocation(line: 889, column: 16, scope: !5805)
!5805 = !DILexicalBlockFile(scope: !5806, file: !977, discriminator: 1)
!5806 = distinct !DILexicalBlock(scope: !5794, file: !977, line: 889, column: 16)
!5807 = !DILocation(line: 889, column: 19, scope: !5805)
!5808 = !DILocation(line: 891, column: 50, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5806, file: !977, line: 889, column: 27)
!5810 = !DILocation(line: 891, column: 53, scope: !5809)
!5811 = !DILocation(line: 891, column: 60, scope: !5809)
!5812 = !DILocation(line: 891, column: 9, scope: !5809)
!5813 = !DILocation(line: 891, column: 12, scope: !5809)
!5814 = !DILocation(line: 891, column: 33, scope: !5809)
!5815 = !DILocation(line: 891, column: 36, scope: !5809)
!5816 = !DILocation(line: 891, column: 48, scope: !5809)
!5817 = !DILocation(line: 892, column: 5, scope: !5809)
!5818 = !DILocation(line: 894, column: 22, scope: !4341)
!5819 = !DILocation(line: 894, column: 25, scope: !4341)
!5820 = !DILocation(line: 894, column: 30, scope: !4341)
!5821 = !DILocation(line: 894, column: 5, scope: !4341)
!5822 = !DILocation(line: 894, column: 8, scope: !4341)
!5823 = !DILocation(line: 894, column: 11, scope: !4341)
!5824 = !DILocation(line: 894, column: 20, scope: !4341)
!5825 = !DILocation(line: 895, column: 22, scope: !4341)
!5826 = !DILocation(line: 895, column: 25, scope: !4341)
!5827 = !DILocation(line: 895, column: 30, scope: !4341)
!5828 = !DILocation(line: 895, column: 5, scope: !4341)
!5829 = !DILocation(line: 895, column: 8, scope: !4341)
!5830 = !DILocation(line: 895, column: 11, scope: !4341)
!5831 = !DILocation(line: 895, column: 20, scope: !4341)
!5832 = !DILocation(line: 897, column: 9, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 897, column: 9)
!5834 = !DILocation(line: 897, column: 16, scope: !5833)
!5835 = !DILocation(line: 897, column: 9, scope: !4341)
!5836 = !DILocation(line: 898, column: 9, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5833, file: !977, line: 897, column: 25)
!5838 = !DILocation(line: 898, column: 12, scope: !5837)
!5839 = !DILocation(line: 898, column: 17, scope: !5837)
!5840 = !DILocation(line: 899, column: 13, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5837, file: !977, line: 899, column: 13)
!5842 = !DILocation(line: 899, column: 16, scope: !5841)
!5843 = !DILocation(line: 899, column: 27, scope: !5841)
!5844 = !DILocation(line: 899, column: 30, scope: !5845)
!5845 = !DILexicalBlockFile(scope: !5841, file: !977, discriminator: 1)
!5846 = !DILocation(line: 899, column: 13, scope: !5845)
!5847 = !DILocation(line: 901, column: 40, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5841, file: !977, line: 899, column: 54)
!5849 = !DILocation(line: 901, column: 43, scope: !5848)
!5850 = !DILocation(line: 901, column: 38, scope: !5848)
!5851 = !DILocation(line: 901, column: 13, scope: !5848)
!5852 = !DILocation(line: 901, column: 16, scope: !5848)
!5853 = !DILocation(line: 901, column: 34, scope: !5848)
!5854 = !DILocation(line: 902, column: 24, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5848, file: !977, line: 902, column: 17)
!5856 = !DILocation(line: 902, column: 31, scope: !5855)
!5857 = !DILocation(line: 902, column: 40, scope: !5855)
!5858 = !DILocation(line: 902, column: 52, scope: !5855)
!5859 = !DILocation(line: 902, column: 59, scope: !5855)
!5860 = !DILocation(line: 902, column: 70, scope: !5855)
!5861 = !DILocation(line: 902, column: 95, scope: !5855)
!5862 = !DILocation(line: 902, column: 93, scope: !5855)
!5863 = !DILocation(line: 902, column: 22, scope: !5855)
!5864 = !DILocation(line: 902, column: 107, scope: !5855)
!5865 = !DILocation(line: 902, column: 17, scope: !5848)
!5866 = !DILocation(line: 903, column: 17, scope: !5855)
!5867 = !DILocation(line: 905, column: 17, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5848, file: !977, line: 905, column: 17)
!5869 = !DILocation(line: 905, column: 27, scope: !5868)
!5870 = !DILocation(line: 905, column: 17, scope: !5848)
!5871 = !DILocation(line: 907, column: 28, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5873, file: !977, line: 907, column: 21)
!5873 = distinct !DILexicalBlock(scope: !5868, file: !977, line: 905, column: 34)
!5874 = !DILocation(line: 907, column: 35, scope: !5872)
!5875 = !DILocation(line: 907, column: 44, scope: !5872)
!5876 = !DILocation(line: 907, column: 57, scope: !5872)
!5877 = !DILocation(line: 907, column: 64, scope: !5872)
!5878 = !DILocation(line: 907, column: 75, scope: !5872)
!5879 = !DILocation(line: 907, column: 100, scope: !5872)
!5880 = !DILocation(line: 907, column: 98, scope: !5872)
!5881 = !DILocation(line: 907, column: 26, scope: !5872)
!5882 = !DILocation(line: 907, column: 112, scope: !5872)
!5883 = !DILocation(line: 907, column: 21, scope: !5873)
!5884 = !DILocation(line: 908, column: 21, scope: !5872)
!5885 = !DILocation(line: 909, column: 13, scope: !5873)
!5886 = !DILocation(line: 910, column: 28, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5888, file: !977, line: 910, column: 21)
!5888 = distinct !DILexicalBlock(scope: !5868, file: !977, line: 909, column: 20)
!5889 = !DILocation(line: 910, column: 35, scope: !5887)
!5890 = !DILocation(line: 910, column: 44, scope: !5887)
!5891 = !DILocation(line: 910, column: 57, scope: !5887)
!5892 = !DILocation(line: 910, column: 64, scope: !5887)
!5893 = !DILocation(line: 910, column: 75, scope: !5887)
!5894 = !DILocation(line: 910, column: 85, scope: !5887)
!5895 = !DILocation(line: 910, column: 94, scope: !5887)
!5896 = !DILocation(line: 910, column: 92, scope: !5887)
!5897 = !DILocation(line: 910, column: 26, scope: !5887)
!5898 = !DILocation(line: 910, column: 106, scope: !5887)
!5899 = !DILocation(line: 910, column: 21, scope: !5888)
!5900 = !DILocation(line: 911, column: 21, scope: !5887)
!5901 = !DILocation(line: 913, column: 24, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5888, file: !977, line: 913, column: 17)
!5903 = !DILocation(line: 913, column: 22, scope: !5902)
!5904 = !DILocation(line: 913, column: 30, scope: !5905)
!5905 = !DILexicalBlockFile(scope: !5906, file: !977, discriminator: 1)
!5906 = distinct !DILexicalBlock(scope: !5902, file: !977, line: 913, column: 17)
!5907 = !DILocation(line: 913, column: 34, scope: !5905)
!5908 = !DILocation(line: 913, column: 44, scope: !5905)
!5909 = !DILocation(line: 913, column: 32, scope: !5905)
!5910 = !DILocation(line: 913, column: 17, scope: !5905)
!5911 = !DILocation(line: 914, column: 21, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5906, file: !977, line: 913, column: 54)
!5913 = !DILocation(line: 914, column: 24, scope: !5912)
!5914 = !DILocation(line: 914, column: 36, scope: !5912)
!5915 = !DILocation(line: 914, column: 29, scope: !5912)
!5916 = !DILocation(line: 914, column: 39, scope: !5912)
!5917 = !DILocation(line: 915, column: 38, scope: !5912)
!5918 = !DILocation(line: 915, column: 31, scope: !5912)
!5919 = !DILocation(line: 915, column: 41, scope: !5912)
!5920 = !DILocation(line: 915, column: 21, scope: !5912)
!5921 = !DILocation(line: 915, column: 24, scope: !5912)
!5922 = !DILocation(line: 915, column: 29, scope: !5912)
!5923 = !DILocation(line: 917, column: 53, scope: !5912)
!5924 = !DILocation(line: 917, column: 56, scope: !5912)
!5925 = !DILocation(line: 917, column: 42, scope: !5912)
!5926 = !DILocation(line: 917, column: 21, scope: !5912)
!5927 = !DILocation(line: 917, column: 24, scope: !5912)
!5928 = !DILocation(line: 917, column: 40, scope: !5912)
!5929 = !DILocation(line: 918, column: 25, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5912, file: !977, line: 918, column: 25)
!5931 = !DILocation(line: 918, column: 28, scope: !5930)
!5932 = !DILocation(line: 918, column: 25, scope: !5912)
!5933 = !DILocation(line: 919, column: 59, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5935, file: !977, line: 919, column: 29)
!5935 = distinct !DILexicalBlock(scope: !5930, file: !977, line: 918, column: 45)
!5936 = !DILocation(line: 919, column: 63, scope: !5934)
!5937 = !DILocation(line: 919, column: 66, scope: !5934)
!5938 = !DILocation(line: 919, column: 29, scope: !5934)
!5939 = !DILocation(line: 919, column: 70, scope: !5934)
!5940 = !DILocation(line: 919, column: 29, scope: !5935)
!5941 = !DILocation(line: 920, column: 36, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5934, file: !977, line: 919, column: 75)
!5943 = !DILocation(line: 920, column: 39, scope: !5942)
!5944 = !DILocation(line: 920, column: 41, scope: !5942)
!5945 = !DILocation(line: 920, column: 29, scope: !5942)
!5946 = !DILocation(line: 921, column: 33, scope: !5942)
!5947 = !DILocation(line: 922, column: 33, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5942, file: !977, line: 922, column: 33)
!5949 = !DILocation(line: 922, column: 40, scope: !5948)
!5950 = !DILocation(line: 922, column: 56, scope: !5948)
!5951 = !DILocation(line: 922, column: 33, scope: !5942)
!5952 = !DILocation(line: 923, column: 33, scope: !5948)
!5953 = !DILocation(line: 924, column: 29, scope: !5942)
!5954 = !DILocation(line: 926, column: 21, scope: !5935)
!5955 = !DILocation(line: 928, column: 32, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5912, file: !977, line: 928, column: 25)
!5957 = !DILocation(line: 928, column: 39, scope: !5956)
!5958 = !DILocation(line: 928, column: 48, scope: !5956)
!5959 = !DILocation(line: 928, column: 61, scope: !5956)
!5960 = !DILocation(line: 928, column: 75, scope: !5956)
!5961 = !DILocation(line: 928, column: 68, scope: !5956)
!5962 = !DILocation(line: 928, column: 78, scope: !5956)
!5963 = !DILocation(line: 928, column: 93, scope: !5956)
!5964 = !DILocation(line: 928, column: 86, scope: !5956)
!5965 = !DILocation(line: 928, column: 96, scope: !5956)
!5966 = !DILocation(line: 928, column: 30, scope: !5956)
!5967 = !DILocation(line: 928, column: 107, scope: !5956)
!5968 = !DILocation(line: 928, column: 25, scope: !5912)
!5969 = !DILocation(line: 929, column: 25, scope: !5956)
!5970 = !DILocation(line: 930, column: 17, scope: !5912)
!5971 = !DILocation(line: 913, column: 50, scope: !5972)
!5972 = !DILexicalBlockFile(scope: !5906, file: !977, discriminator: 2)
!5973 = !DILocation(line: 913, column: 17, scope: !5972)
!5974 = distinct !{!5974, !5975}
!5975 = !DILocation(line: 913, column: 17, scope: !5888)
!5976 = !DILocation(line: 933, column: 24, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5848, file: !977, line: 933, column: 17)
!5978 = !DILocation(line: 933, column: 31, scope: !5977)
!5979 = !DILocation(line: 933, column: 40, scope: !5977)
!5980 = !DILocation(line: 933, column: 50, scope: !5977)
!5981 = !DILocation(line: 933, column: 22, scope: !5977)
!5982 = !DILocation(line: 933, column: 58, scope: !5977)
!5983 = !DILocation(line: 933, column: 17, scope: !5848)
!5984 = !DILocation(line: 934, column: 17, scope: !5977)
!5985 = !DILocation(line: 937, column: 13, scope: !5848)
!5986 = !DILocation(line: 937, column: 16, scope: !5848)
!5987 = !DILocation(line: 937, column: 28, scope: !5848)
!5988 = !DILocation(line: 937, column: 38, scope: !5848)
!5989 = !DILocation(line: 937, column: 21, scope: !5848)
!5990 = !DILocation(line: 937, column: 43, scope: !5848)
!5991 = !DILocation(line: 938, column: 30, scope: !5848)
!5992 = !DILocation(line: 938, column: 40, scope: !5848)
!5993 = !DILocation(line: 938, column: 23, scope: !5848)
!5994 = !DILocation(line: 938, column: 45, scope: !5848)
!5995 = !DILocation(line: 938, column: 13, scope: !5848)
!5996 = !DILocation(line: 938, column: 16, scope: !5848)
!5997 = !DILocation(line: 938, column: 21, scope: !5848)
!5998 = !DILocation(line: 939, column: 40, scope: !5848)
!5999 = !DILocation(line: 939, column: 43, scope: !5848)
!6000 = !DILocation(line: 939, column: 38, scope: !5848)
!6001 = !DILocation(line: 939, column: 13, scope: !5848)
!6002 = !DILocation(line: 939, column: 16, scope: !5848)
!6003 = !DILocation(line: 939, column: 34, scope: !5848)
!6004 = !DILocation(line: 940, column: 13, scope: !5848)
!6005 = !DILocation(line: 940, column: 16, scope: !5848)
!6006 = !DILocation(line: 940, column: 29, scope: !5848)
!6007 = !DILocation(line: 941, column: 13, scope: !5848)
!6008 = !DILocation(line: 941, column: 16, scope: !5848)
!6009 = !DILocation(line: 941, column: 32, scope: !5848)
!6010 = !DILocation(line: 942, column: 47, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5848, file: !977, line: 942, column: 17)
!6012 = !DILocation(line: 942, column: 51, scope: !6011)
!6013 = !DILocation(line: 942, column: 54, scope: !6011)
!6014 = !DILocation(line: 942, column: 17, scope: !6011)
!6015 = !DILocation(line: 942, column: 58, scope: !6011)
!6016 = !DILocation(line: 942, column: 17, scope: !5848)
!6017 = !DILocation(line: 943, column: 24, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6011, file: !977, line: 942, column: 63)
!6019 = !DILocation(line: 943, column: 17, scope: !6018)
!6020 = !DILocation(line: 944, column: 21, scope: !6018)
!6021 = !DILocation(line: 945, column: 17, scope: !6018)
!6022 = !DILocation(line: 947, column: 54, scope: !5848)
!6023 = !DILocation(line: 947, column: 57, scope: !5848)
!6024 = !DILocation(line: 947, column: 59, scope: !5848)
!6025 = !DILocation(line: 947, column: 13, scope: !5848)
!6026 = !DILocation(line: 947, column: 16, scope: !5848)
!6027 = !DILocation(line: 947, column: 18, scope: !5848)
!6028 = !DILocation(line: 947, column: 39, scope: !5848)
!6029 = !DILocation(line: 947, column: 42, scope: !5848)
!6030 = !DILocation(line: 947, column: 52, scope: !5848)
!6031 = !DILocation(line: 949, column: 24, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !5848, file: !977, line: 949, column: 17)
!6033 = !DILocation(line: 949, column: 31, scope: !6032)
!6034 = !DILocation(line: 949, column: 40, scope: !6032)
!6035 = !DILocation(line: 949, column: 52, scope: !6032)
!6036 = !DILocation(line: 949, column: 59, scope: !6032)
!6037 = !DILocation(line: 949, column: 84, scope: !6032)
!6038 = !DILocation(line: 949, column: 90, scope: !6032)
!6039 = !DILocation(line: 949, column: 88, scope: !6032)
!6040 = !DILocation(line: 949, column: 102, scope: !6032)
!6041 = !DILocation(line: 949, column: 100, scope: !6032)
!6042 = !DILocation(line: 949, column: 83, scope: !6032)
!6043 = !DILocation(line: 949, column: 22, scope: !6032)
!6044 = !DILocation(line: 949, column: 127, scope: !6032)
!6045 = !DILocation(line: 949, column: 17, scope: !5848)
!6046 = !DILocation(line: 950, column: 17, scope: !6032)
!6047 = !DILocation(line: 952, column: 17, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !5848, file: !977, line: 952, column: 17)
!6049 = !DILocation(line: 952, column: 28, scope: !6048)
!6050 = !DILocation(line: 952, column: 26, scope: !6048)
!6051 = !DILocation(line: 952, column: 38, scope: !6048)
!6052 = !DILocation(line: 952, column: 17, scope: !5848)
!6053 = !DILocation(line: 954, column: 28, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6055, file: !977, line: 954, column: 21)
!6055 = distinct !DILexicalBlock(scope: !6048, file: !977, line: 952, column: 44)
!6056 = !DILocation(line: 954, column: 35, scope: !6054)
!6057 = !DILocation(line: 954, column: 44, scope: !6054)
!6058 = !DILocation(line: 954, column: 57, scope: !6054)
!6059 = !DILocation(line: 954, column: 64, scope: !6054)
!6060 = !DILocation(line: 954, column: 89, scope: !6054)
!6061 = !DILocation(line: 954, column: 95, scope: !6054)
!6062 = !DILocation(line: 954, column: 93, scope: !6054)
!6063 = !DILocation(line: 954, column: 107, scope: !6054)
!6064 = !DILocation(line: 954, column: 105, scope: !6054)
!6065 = !DILocation(line: 954, column: 88, scope: !6054)
!6066 = !DILocation(line: 954, column: 26, scope: !6054)
!6067 = !DILocation(line: 954, column: 132, scope: !6054)
!6068 = !DILocation(line: 954, column: 21, scope: !6055)
!6069 = !DILocation(line: 955, column: 21, scope: !6054)
!6070 = !DILocation(line: 956, column: 13, scope: !6055)
!6071 = !DILocation(line: 957, column: 28, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6073, file: !977, line: 957, column: 21)
!6073 = distinct !DILexicalBlock(scope: !6048, file: !977, line: 956, column: 20)
!6074 = !DILocation(line: 957, column: 35, scope: !6072)
!6075 = !DILocation(line: 957, column: 44, scope: !6072)
!6076 = !DILocation(line: 957, column: 57, scope: !6072)
!6077 = !DILocation(line: 957, column: 64, scope: !6072)
!6078 = !DILocation(line: 957, column: 95, scope: !6072)
!6079 = !DILocation(line: 957, column: 105, scope: !6072)
!6080 = !DILocation(line: 957, column: 88, scope: !6072)
!6081 = !DILocation(line: 957, column: 110, scope: !6072)
!6082 = !DILocation(line: 957, column: 119, scope: !6072)
!6083 = !DILocation(line: 957, column: 117, scope: !6072)
!6084 = !DILocation(line: 957, column: 26, scope: !6072)
!6085 = !DILocation(line: 957, column: 144, scope: !6072)
!6086 = !DILocation(line: 957, column: 21, scope: !6073)
!6087 = !DILocation(line: 958, column: 21, scope: !6072)
!6088 = !DILocation(line: 960, column: 26, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6073, file: !977, line: 960, column: 17)
!6090 = !DILocation(line: 960, column: 36, scope: !6089)
!6091 = !DILocation(line: 960, column: 24, scope: !6089)
!6092 = !DILocation(line: 960, column: 22, scope: !6089)
!6093 = !DILocation(line: 960, column: 41, scope: !6094)
!6094 = !DILexicalBlockFile(scope: !6095, file: !977, discriminator: 1)
!6095 = distinct !DILexicalBlock(scope: !6089, file: !977, line: 960, column: 17)
!6096 = !DILocation(line: 960, column: 45, scope: !6094)
!6097 = !DILocation(line: 960, column: 43, scope: !6094)
!6098 = !DILocation(line: 960, column: 17, scope: !6094)
!6099 = !DILocation(line: 961, column: 21, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6095, file: !977, line: 960, column: 60)
!6101 = !DILocation(line: 961, column: 24, scope: !6100)
!6102 = !DILocation(line: 961, column: 36, scope: !6100)
!6103 = !DILocation(line: 961, column: 29, scope: !6100)
!6104 = !DILocation(line: 961, column: 39, scope: !6100)
!6105 = !DILocation(line: 962, column: 38, scope: !6100)
!6106 = !DILocation(line: 962, column: 31, scope: !6100)
!6107 = !DILocation(line: 962, column: 41, scope: !6100)
!6108 = !DILocation(line: 962, column: 21, scope: !6100)
!6109 = !DILocation(line: 962, column: 24, scope: !6100)
!6110 = !DILocation(line: 962, column: 29, scope: !6100)
!6111 = !DILocation(line: 964, column: 53, scope: !6100)
!6112 = !DILocation(line: 964, column: 56, scope: !6100)
!6113 = !DILocation(line: 964, column: 42, scope: !6100)
!6114 = !DILocation(line: 964, column: 21, scope: !6100)
!6115 = !DILocation(line: 964, column: 24, scope: !6100)
!6116 = !DILocation(line: 964, column: 40, scope: !6100)
!6117 = !DILocation(line: 965, column: 25, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6100, file: !977, line: 965, column: 25)
!6119 = !DILocation(line: 965, column: 28, scope: !6118)
!6120 = !DILocation(line: 965, column: 25, scope: !6100)
!6121 = !DILocation(line: 966, column: 59, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6123, file: !977, line: 966, column: 29)
!6123 = distinct !DILexicalBlock(scope: !6118, file: !977, line: 965, column: 45)
!6124 = !DILocation(line: 966, column: 63, scope: !6122)
!6125 = !DILocation(line: 966, column: 66, scope: !6122)
!6126 = !DILocation(line: 966, column: 29, scope: !6122)
!6127 = !DILocation(line: 966, column: 70, scope: !6122)
!6128 = !DILocation(line: 966, column: 29, scope: !6123)
!6129 = !DILocation(line: 967, column: 36, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6122, file: !977, line: 966, column: 75)
!6131 = !DILocation(line: 967, column: 39, scope: !6130)
!6132 = !DILocation(line: 967, column: 41, scope: !6130)
!6133 = !DILocation(line: 967, column: 29, scope: !6130)
!6134 = !DILocation(line: 968, column: 33, scope: !6130)
!6135 = !DILocation(line: 969, column: 33, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6130, file: !977, line: 969, column: 33)
!6137 = !DILocation(line: 969, column: 40, scope: !6136)
!6138 = !DILocation(line: 969, column: 56, scope: !6136)
!6139 = !DILocation(line: 969, column: 33, scope: !6130)
!6140 = !DILocation(line: 970, column: 33, scope: !6136)
!6141 = !DILocation(line: 971, column: 29, scope: !6130)
!6142 = !DILocation(line: 973, column: 21, scope: !6123)
!6143 = !DILocation(line: 975, column: 32, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6100, file: !977, line: 975, column: 25)
!6145 = !DILocation(line: 975, column: 39, scope: !6144)
!6146 = !DILocation(line: 975, column: 48, scope: !6144)
!6147 = !DILocation(line: 975, column: 61, scope: !6144)
!6148 = !DILocation(line: 975, column: 75, scope: !6144)
!6149 = !DILocation(line: 975, column: 68, scope: !6144)
!6150 = !DILocation(line: 975, column: 78, scope: !6144)
!6151 = !DILocation(line: 975, column: 93, scope: !6144)
!6152 = !DILocation(line: 975, column: 86, scope: !6144)
!6153 = !DILocation(line: 975, column: 96, scope: !6144)
!6154 = !DILocation(line: 975, column: 30, scope: !6144)
!6155 = !DILocation(line: 975, column: 107, scope: !6144)
!6156 = !DILocation(line: 975, column: 25, scope: !6100)
!6157 = !DILocation(line: 976, column: 25, scope: !6144)
!6158 = !DILocation(line: 977, column: 17, scope: !6100)
!6159 = !DILocation(line: 960, column: 56, scope: !6160)
!6160 = !DILexicalBlockFile(scope: !6095, file: !977, discriminator: 2)
!6161 = !DILocation(line: 960, column: 17, scope: !6160)
!6162 = distinct !{!6162, !6163}
!6163 = !DILocation(line: 960, column: 17, scope: !6073)
!6164 = !DILocation(line: 980, column: 24, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !5848, file: !977, line: 980, column: 17)
!6166 = !DILocation(line: 980, column: 31, scope: !6165)
!6167 = !DILocation(line: 980, column: 40, scope: !6165)
!6168 = !DILocation(line: 980, column: 50, scope: !6165)
!6169 = !DILocation(line: 980, column: 22, scope: !6165)
!6170 = !DILocation(line: 980, column: 58, scope: !6165)
!6171 = !DILocation(line: 980, column: 17, scope: !5848)
!6172 = !DILocation(line: 981, column: 17, scope: !6165)
!6173 = !DILocation(line: 982, column: 9, scope: !5848)
!6174 = !DILocation(line: 983, column: 13, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !5841, file: !977, line: 982, column: 16)
!6176 = !DILocation(line: 983, column: 16, scope: !6175)
!6177 = !DILocation(line: 983, column: 34, scope: !6175)
!6178 = !DILocation(line: 984, column: 24, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6175, file: !977, line: 984, column: 17)
!6180 = !DILocation(line: 984, column: 31, scope: !6179)
!6181 = !DILocation(line: 984, column: 40, scope: !6179)
!6182 = !DILocation(line: 984, column: 52, scope: !6179)
!6183 = !DILocation(line: 984, column: 59, scope: !6179)
!6184 = !DILocation(line: 984, column: 71, scope: !6179)
!6185 = !DILocation(line: 984, column: 77, scope: !6179)
!6186 = !DILocation(line: 984, column: 75, scope: !6179)
!6187 = !DILocation(line: 984, column: 89, scope: !6179)
!6188 = !DILocation(line: 984, column: 87, scope: !6179)
!6189 = !DILocation(line: 984, column: 70, scope: !6179)
!6190 = !DILocation(line: 984, column: 22, scope: !6179)
!6191 = !DILocation(line: 984, column: 101, scope: !6179)
!6192 = !DILocation(line: 984, column: 17, scope: !6175)
!6193 = !DILocation(line: 985, column: 17, scope: !6179)
!6194 = !DILocation(line: 987, column: 17, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6175, file: !977, line: 987, column: 17)
!6196 = !DILocation(line: 987, column: 26, scope: !6195)
!6197 = !DILocation(line: 987, column: 17, scope: !6175)
!6198 = !DILocation(line: 989, column: 28, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !977, line: 989, column: 21)
!6200 = distinct !DILexicalBlock(scope: !6195, file: !977, line: 987, column: 32)
!6201 = !DILocation(line: 989, column: 35, scope: !6199)
!6202 = !DILocation(line: 989, column: 44, scope: !6199)
!6203 = !DILocation(line: 989, column: 57, scope: !6199)
!6204 = !DILocation(line: 989, column: 64, scope: !6199)
!6205 = !DILocation(line: 989, column: 76, scope: !6199)
!6206 = !DILocation(line: 989, column: 82, scope: !6199)
!6207 = !DILocation(line: 989, column: 80, scope: !6199)
!6208 = !DILocation(line: 989, column: 94, scope: !6199)
!6209 = !DILocation(line: 989, column: 92, scope: !6199)
!6210 = !DILocation(line: 989, column: 75, scope: !6199)
!6211 = !DILocation(line: 989, column: 26, scope: !6199)
!6212 = !DILocation(line: 989, column: 106, scope: !6199)
!6213 = !DILocation(line: 989, column: 21, scope: !6200)
!6214 = !DILocation(line: 990, column: 21, scope: !6199)
!6215 = !DILocation(line: 991, column: 13, scope: !6200)
!6216 = !DILocation(line: 993, column: 28, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !977, line: 993, column: 21)
!6218 = distinct !DILexicalBlock(scope: !6195, file: !977, line: 991, column: 20)
!6219 = !DILocation(line: 993, column: 35, scope: !6217)
!6220 = !DILocation(line: 993, column: 44, scope: !6217)
!6221 = !DILocation(line: 993, column: 57, scope: !6217)
!6222 = !DILocation(line: 993, column: 64, scope: !6217)
!6223 = !DILocation(line: 993, column: 75, scope: !6217)
!6224 = !DILocation(line: 993, column: 85, scope: !6217)
!6225 = !DILocation(line: 993, column: 94, scope: !6217)
!6226 = !DILocation(line: 993, column: 92, scope: !6217)
!6227 = !DILocation(line: 993, column: 26, scope: !6217)
!6228 = !DILocation(line: 993, column: 106, scope: !6217)
!6229 = !DILocation(line: 993, column: 21, scope: !6218)
!6230 = !DILocation(line: 994, column: 21, scope: !6217)
!6231 = !DILocation(line: 997, column: 24, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6218, file: !977, line: 997, column: 17)
!6233 = !DILocation(line: 997, column: 22, scope: !6232)
!6234 = !DILocation(line: 997, column: 30, scope: !6235)
!6235 = !DILexicalBlockFile(scope: !6236, file: !977, discriminator: 1)
!6236 = distinct !DILexicalBlock(scope: !6232, file: !977, line: 997, column: 17)
!6237 = !DILocation(line: 997, column: 34, scope: !6235)
!6238 = !DILocation(line: 997, column: 32, scope: !6235)
!6239 = !DILocation(line: 997, column: 17, scope: !6235)
!6240 = !DILocation(line: 998, column: 21, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6236, file: !977, line: 997, column: 49)
!6242 = !DILocation(line: 998, column: 24, scope: !6241)
!6243 = !DILocation(line: 998, column: 36, scope: !6241)
!6244 = !DILocation(line: 998, column: 29, scope: !6241)
!6245 = !DILocation(line: 998, column: 39, scope: !6241)
!6246 = !DILocation(line: 999, column: 38, scope: !6241)
!6247 = !DILocation(line: 999, column: 31, scope: !6241)
!6248 = !DILocation(line: 999, column: 41, scope: !6241)
!6249 = !DILocation(line: 999, column: 21, scope: !6241)
!6250 = !DILocation(line: 999, column: 24, scope: !6241)
!6251 = !DILocation(line: 999, column: 29, scope: !6241)
!6252 = !DILocation(line: 1001, column: 53, scope: !6241)
!6253 = !DILocation(line: 1001, column: 56, scope: !6241)
!6254 = !DILocation(line: 1001, column: 42, scope: !6241)
!6255 = !DILocation(line: 1001, column: 21, scope: !6241)
!6256 = !DILocation(line: 1001, column: 24, scope: !6241)
!6257 = !DILocation(line: 1001, column: 40, scope: !6241)
!6258 = !DILocation(line: 1002, column: 25, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6241, file: !977, line: 1002, column: 25)
!6260 = !DILocation(line: 1002, column: 28, scope: !6259)
!6261 = !DILocation(line: 1002, column: 25, scope: !6241)
!6262 = !DILocation(line: 1003, column: 59, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6264, file: !977, line: 1003, column: 29)
!6264 = distinct !DILexicalBlock(scope: !6259, file: !977, line: 1002, column: 45)
!6265 = !DILocation(line: 1003, column: 63, scope: !6263)
!6266 = !DILocation(line: 1003, column: 66, scope: !6263)
!6267 = !DILocation(line: 1003, column: 29, scope: !6263)
!6268 = !DILocation(line: 1003, column: 70, scope: !6263)
!6269 = !DILocation(line: 1003, column: 29, scope: !6264)
!6270 = !DILocation(line: 1004, column: 36, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6263, file: !977, line: 1003, column: 75)
!6272 = !DILocation(line: 1004, column: 39, scope: !6271)
!6273 = !DILocation(line: 1004, column: 41, scope: !6271)
!6274 = !DILocation(line: 1004, column: 29, scope: !6271)
!6275 = !DILocation(line: 1005, column: 33, scope: !6271)
!6276 = !DILocation(line: 1006, column: 33, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6271, file: !977, line: 1006, column: 33)
!6278 = !DILocation(line: 1006, column: 40, scope: !6277)
!6279 = !DILocation(line: 1006, column: 56, scope: !6277)
!6280 = !DILocation(line: 1006, column: 33, scope: !6271)
!6281 = !DILocation(line: 1007, column: 33, scope: !6277)
!6282 = !DILocation(line: 1008, column: 29, scope: !6271)
!6283 = !DILocation(line: 1010, column: 21, scope: !6264)
!6284 = !DILocation(line: 1012, column: 32, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6241, file: !977, line: 1012, column: 25)
!6286 = !DILocation(line: 1012, column: 39, scope: !6285)
!6287 = !DILocation(line: 1012, column: 48, scope: !6285)
!6288 = !DILocation(line: 1012, column: 61, scope: !6285)
!6289 = !DILocation(line: 1012, column: 75, scope: !6285)
!6290 = !DILocation(line: 1012, column: 68, scope: !6285)
!6291 = !DILocation(line: 1012, column: 78, scope: !6285)
!6292 = !DILocation(line: 1012, column: 93, scope: !6285)
!6293 = !DILocation(line: 1012, column: 86, scope: !6285)
!6294 = !DILocation(line: 1012, column: 96, scope: !6285)
!6295 = !DILocation(line: 1012, column: 30, scope: !6285)
!6296 = !DILocation(line: 1012, column: 107, scope: !6285)
!6297 = !DILocation(line: 1012, column: 25, scope: !6241)
!6298 = !DILocation(line: 1013, column: 25, scope: !6285)
!6299 = !DILocation(line: 1014, column: 17, scope: !6241)
!6300 = !DILocation(line: 997, column: 45, scope: !6301)
!6301 = !DILexicalBlockFile(scope: !6236, file: !977, discriminator: 2)
!6302 = !DILocation(line: 997, column: 17, scope: !6301)
!6303 = distinct !{!6303, !6304}
!6304 = !DILocation(line: 997, column: 17, scope: !6218)
!6305 = !DILocation(line: 1016, column: 24, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6175, file: !977, line: 1016, column: 17)
!6307 = !DILocation(line: 1016, column: 31, scope: !6306)
!6308 = !DILocation(line: 1016, column: 40, scope: !6306)
!6309 = !DILocation(line: 1016, column: 50, scope: !6306)
!6310 = !DILocation(line: 1016, column: 22, scope: !6306)
!6311 = !DILocation(line: 1016, column: 58, scope: !6306)
!6312 = !DILocation(line: 1016, column: 17, scope: !6175)
!6313 = !DILocation(line: 1017, column: 17, scope: !6306)
!6314 = !DILocation(line: 1019, column: 5, scope: !5837)
!6315 = !DILocalVariable(name: "header_ret", scope: !6316, file: !977, line: 1020, type: !971)
!6316 = distinct !DILexicalBlock(scope: !5833, file: !977, line: 1019, column: 12)
!6317 = !DILocation(line: 1020, column: 13, scope: !6316)
!6318 = !DILocation(line: 1022, column: 32, scope: !6316)
!6319 = !DILocation(line: 1022, column: 9, scope: !6316)
!6320 = !DILocation(line: 1024, column: 19, scope: !6316)
!6321 = !DILocation(line: 1024, column: 28, scope: !6316)
!6322 = !DILocation(line: 1024, column: 9, scope: !6316)
!6323 = !DILocation(line: 1024, column: 12, scope: !6316)
!6324 = !DILocation(line: 1024, column: 17, scope: !6316)
!6325 = !DILocation(line: 1025, column: 23, scope: !6316)
!6326 = !DILocation(line: 1025, column: 26, scope: !6316)
!6327 = !DILocation(line: 1025, column: 9, scope: !6316)
!6328 = !DILocation(line: 1025, column: 12, scope: !6316)
!6329 = !DILocation(line: 1025, column: 21, scope: !6316)
!6330 = !DILocation(line: 1026, column: 13, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6316, file: !977, line: 1026, column: 13)
!6332 = !DILocation(line: 1026, column: 16, scope: !6331)
!6333 = !DILocation(line: 1026, column: 13, scope: !6316)
!6334 = !DILocation(line: 1027, column: 13, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6331, file: !977, line: 1026, column: 28)
!6336 = !DILocation(line: 1027, column: 16, scope: !6335)
!6337 = !DILocation(line: 1027, column: 32, scope: !6335)
!6338 = !DILocation(line: 1027, column: 35, scope: !6335)
!6339 = !DILocation(line: 1027, column: 47, scope: !6335)
!6340 = !DILocation(line: 1028, column: 13, scope: !6335)
!6341 = !DILocation(line: 1028, column: 16, scope: !6335)
!6342 = !DILocation(line: 1028, column: 32, scope: !6335)
!6343 = !DILocation(line: 1028, column: 35, scope: !6335)
!6344 = !DILocation(line: 1028, column: 47, scope: !6335)
!6345 = !DILocation(line: 1029, column: 13, scope: !6335)
!6346 = !DILocation(line: 1029, column: 16, scope: !6335)
!6347 = !DILocation(line: 1029, column: 32, scope: !6335)
!6348 = !DILocation(line: 1029, column: 35, scope: !6335)
!6349 = !DILocation(line: 1029, column: 47, scope: !6335)
!6350 = !DILocation(line: 1030, column: 13, scope: !6335)
!6351 = !DILocation(line: 1030, column: 16, scope: !6335)
!6352 = !DILocation(line: 1030, column: 25, scope: !6335)
!6353 = !DILocation(line: 1031, column: 13, scope: !6335)
!6354 = !DILocation(line: 1031, column: 16, scope: !6335)
!6355 = !DILocation(line: 1031, column: 27, scope: !6335)
!6356 = !DILocation(line: 1032, column: 9, scope: !6335)
!6357 = !DILocation(line: 1033, column: 21, scope: !6316)
!6358 = !DILocation(line: 1033, column: 24, scope: !6316)
!6359 = !DILocation(line: 1033, column: 37, scope: !6316)
!6360 = !DILocation(line: 1033, column: 40, scope: !6316)
!6361 = !DILocation(line: 1033, column: 34, scope: !6316)
!6362 = !DILocation(line: 1033, column: 19, scope: !6316)
!6363 = !DILocation(line: 1035, column: 9, scope: !6316)
!6364 = distinct !{!6364, !6363}
!6365 = !DILocation(line: 1035, column: 20, scope: !6366)
!6366 = !DILexicalBlockFile(scope: !6367, file: !977, discriminator: 1)
!6367 = distinct !DILexicalBlock(scope: !6368, file: !977, line: 1035, column: 18)
!6368 = distinct !DILexicalBlock(scope: !6316, file: !977, line: 1035, column: 12)
!6369 = !DILocation(line: 1035, column: 30, scope: !6366)
!6370 = !DILocation(line: 1035, column: 18, scope: !6366)
!6371 = !DILocation(line: 1035, column: 38, scope: !6372)
!6372 = !DILexicalBlockFile(scope: !6373, file: !977, discriminator: 2)
!6373 = distinct !DILexicalBlock(scope: !6367, file: !977, line: 1035, column: 36)
!6374 = !DILocation(line: 1035, column: 94, scope: !6375)
!6375 = !DILexicalBlockFile(scope: !6372, file: !977, discriminator: 4)
!6376 = !DILocation(line: 1035, column: 94, scope: !6372)
!6377 = !DILocation(line: 1035, column: 105, scope: !6378)
!6378 = !DILexicalBlockFile(scope: !6368, file: !977, discriminator: 3)
!6379 = !DILocation(line: 1037, column: 16, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6316, file: !977, line: 1037, column: 9)
!6381 = !DILocation(line: 1037, column: 14, scope: !6380)
!6382 = !DILocation(line: 1037, column: 21, scope: !6383)
!6383 = !DILexicalBlockFile(scope: !6384, file: !977, discriminator: 1)
!6384 = distinct !DILexicalBlock(scope: !6380, file: !977, line: 1037, column: 9)
!6385 = !DILocation(line: 1037, column: 26, scope: !6383)
!6386 = !DILocation(line: 1037, column: 23, scope: !6383)
!6387 = !DILocation(line: 1037, column: 9, scope: !6383)
!6388 = !DILocation(line: 1038, column: 17, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6390, file: !977, line: 1038, column: 17)
!6390 = distinct !DILexicalBlock(scope: !6384, file: !977, line: 1037, column: 41)
!6391 = !DILocation(line: 1038, column: 19, scope: !6389)
!6392 = !DILocation(line: 1038, column: 23, scope: !6389)
!6393 = !DILocation(line: 1038, column: 33, scope: !6394)
!6394 = !DILexicalBlockFile(scope: !6389, file: !977, discriminator: 1)
!6395 = !DILocation(line: 1038, column: 35, scope: !6394)
!6396 = !DILocation(line: 1038, column: 26, scope: !6394)
!6397 = !DILocation(line: 1038, column: 40, scope: !6394)
!6398 = !DILocation(line: 1038, column: 53, scope: !6394)
!6399 = !DILocation(line: 1038, column: 50, scope: !6394)
!6400 = !DILocation(line: 1038, column: 17, scope: !6394)
!6401 = !DILocation(line: 1039, column: 21, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6403, file: !977, line: 1039, column: 21)
!6403 = distinct !DILexicalBlock(scope: !6389, file: !977, line: 1038, column: 64)
!6404 = !DILocation(line: 1039, column: 24, scope: !6402)
!6405 = !DILocation(line: 1039, column: 35, scope: !6402)
!6406 = !DILocation(line: 1039, column: 21, scope: !6403)
!6407 = !DILocation(line: 1040, column: 28, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6402, file: !977, line: 1039, column: 41)
!6409 = !DILocation(line: 1040, column: 31, scope: !6408)
!6410 = !DILocation(line: 1040, column: 33, scope: !6408)
!6411 = !DILocation(line: 1041, column: 61, scope: !6408)
!6412 = !DILocation(line: 1042, column: 35, scope: !6408)
!6413 = !DILocation(line: 1042, column: 37, scope: !6408)
!6414 = !DILocation(line: 1042, column: 28, scope: !6408)
!6415 = !DILocation(line: 1042, column: 42, scope: !6408)
!6416 = !DILocation(line: 1042, column: 53, scope: !6408)
!6417 = !DILocation(line: 1040, column: 21, scope: !6408)
!6418 = !DILocation(line: 1043, column: 21, scope: !6408)
!6419 = !DILocation(line: 1045, column: 17, scope: !6403)
!6420 = !DILocation(line: 1045, column: 20, scope: !6403)
!6421 = !DILocation(line: 1045, column: 33, scope: !6403)
!6422 = !DILocation(line: 1046, column: 17, scope: !6403)
!6423 = distinct !{!6423, !6422}
!6424 = !DILocation(line: 1046, column: 29, scope: !6425)
!6425 = !DILexicalBlockFile(scope: !6426, file: !977, discriminator: 1)
!6426 = distinct !DILexicalBlock(scope: !6427, file: !977, line: 1046, column: 26)
!6427 = distinct !DILexicalBlock(scope: !6403, file: !977, line: 1046, column: 20)
!6428 = !DILocation(line: 1046, column: 32, scope: !6425)
!6429 = !DILocation(line: 1046, column: 42, scope: !6425)
!6430 = !DILocation(line: 1046, column: 47, scope: !6425)
!6431 = !DILocation(line: 1046, column: 26, scope: !6425)
!6432 = !DILocation(line: 1046, column: 56, scope: !6433)
!6433 = !DILexicalBlockFile(scope: !6434, file: !977, discriminator: 2)
!6434 = distinct !DILexicalBlock(scope: !6426, file: !977, line: 1046, column: 54)
!6435 = !DILocation(line: 1046, column: 112, scope: !6436)
!6436 = !DILexicalBlockFile(scope: !6433, file: !977, discriminator: 4)
!6437 = !DILocation(line: 1046, column: 112, scope: !6433)
!6438 = !DILocation(line: 1046, column: 123, scope: !6439)
!6439 = !DILexicalBlockFile(scope: !6427, file: !977, discriminator: 3)
!6440 = !DILocation(line: 1047, column: 33, scope: !6403)
!6441 = !DILocation(line: 1047, column: 36, scope: !6403)
!6442 = !DILocation(line: 1047, column: 49, scope: !6403)
!6443 = !DILocation(line: 1047, column: 52, scope: !6403)
!6444 = !DILocation(line: 1047, column: 61, scope: !6403)
!6445 = !DILocation(line: 1047, column: 46, scope: !6403)
!6446 = !DILocation(line: 1047, column: 17, scope: !6403)
!6447 = !DILocation(line: 1047, column: 20, scope: !6403)
!6448 = !DILocation(line: 1047, column: 31, scope: !6403)
!6449 = !DILocation(line: 1048, column: 29, scope: !6403)
!6450 = !DILocation(line: 1048, column: 32, scope: !6403)
!6451 = !DILocation(line: 1048, column: 44, scope: !6403)
!6452 = !DILocation(line: 1048, column: 47, scope: !6403)
!6453 = !DILocation(line: 1048, column: 42, scope: !6403)
!6454 = !DILocation(line: 1048, column: 57, scope: !6403)
!6455 = !DILocation(line: 1048, column: 17, scope: !6403)
!6456 = !DILocation(line: 1048, column: 20, scope: !6403)
!6457 = !DILocation(line: 1048, column: 27, scope: !6403)
!6458 = !DILocation(line: 1049, column: 13, scope: !6403)
!6459 = !DILocation(line: 1050, column: 17, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6389, file: !977, line: 1049, column: 20)
!6461 = !DILocation(line: 1050, column: 20, scope: !6460)
!6462 = !DILocation(line: 1050, column: 33, scope: !6460)
!6463 = !DILocation(line: 1051, column: 17, scope: !6460)
!6464 = !DILocation(line: 1051, column: 20, scope: !6460)
!6465 = !DILocation(line: 1051, column: 31, scope: !6460)
!6466 = !DILocation(line: 1052, column: 17, scope: !6460)
!6467 = !DILocation(line: 1052, column: 20, scope: !6460)
!6468 = !DILocation(line: 1052, column: 27, scope: !6460)
!6469 = !DILocation(line: 1054, column: 17, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6390, file: !977, line: 1054, column: 17)
!6471 = !DILocation(line: 1054, column: 17, scope: !6390)
!6472 = !DILocation(line: 1055, column: 17, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6470, file: !977, line: 1054, column: 20)
!6474 = !DILocation(line: 1055, column: 20, scope: !6473)
!6475 = !DILocation(line: 1055, column: 36, scope: !6473)
!6476 = !DILocation(line: 1056, column: 21, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6473, file: !977, line: 1056, column: 21)
!6478 = !DILocation(line: 1056, column: 24, scope: !6477)
!6479 = !DILocation(line: 1056, column: 35, scope: !6477)
!6480 = !DILocation(line: 1056, column: 38, scope: !6481)
!6481 = !DILexicalBlockFile(scope: !6477, file: !977, discriminator: 1)
!6482 = !DILocation(line: 1056, column: 43, scope: !6481)
!6483 = !DILocation(line: 1056, column: 53, scope: !6481)
!6484 = !DILocation(line: 1056, column: 40, scope: !6481)
!6485 = !DILocation(line: 1056, column: 21, scope: !6481)
!6486 = !DILocation(line: 1057, column: 69, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6488, file: !977, line: 1057, column: 25)
!6488 = distinct !DILexicalBlock(scope: !6477, file: !977, line: 1056, column: 58)
!6489 = !DILocation(line: 1057, column: 73, scope: !6487)
!6490 = !DILocation(line: 1057, column: 76, scope: !6487)
!6491 = !DILocation(line: 1057, column: 39, scope: !6487)
!6492 = !DILocation(line: 1057, column: 37, scope: !6487)
!6493 = !DILocation(line: 1057, column: 81, scope: !6487)
!6494 = !DILocation(line: 1057, column: 25, scope: !6488)
!6495 = !DILocation(line: 1058, column: 32, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6487, file: !977, line: 1057, column: 86)
!6497 = !DILocation(line: 1058, column: 35, scope: !6496)
!6498 = !DILocation(line: 1058, column: 37, scope: !6496)
!6499 = !DILocation(line: 1058, column: 25, scope: !6496)
!6500 = !DILocation(line: 1059, column: 29, scope: !6496)
!6501 = !DILocation(line: 1060, column: 29, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6496, file: !977, line: 1060, column: 29)
!6503 = !DILocation(line: 1060, column: 36, scope: !6502)
!6504 = !DILocation(line: 1060, column: 52, scope: !6502)
!6505 = !DILocation(line: 1060, column: 29, scope: !6496)
!6506 = !DILocation(line: 1061, column: 29, scope: !6502)
!6507 = !DILocation(line: 1062, column: 25, scope: !6496)
!6508 = !DILocation(line: 1064, column: 17, scope: !6488)
!6509 = !DILocation(line: 1064, column: 39, scope: !6510)
!6510 = !DILexicalBlockFile(scope: !6511, file: !977, discriminator: 1)
!6511 = distinct !DILexicalBlock(scope: !6477, file: !977, line: 1064, column: 28)
!6512 = !DILocation(line: 1064, column: 42, scope: !6510)
!6513 = !DILocation(line: 1064, column: 28, scope: !6510)
!6514 = !DILocation(line: 1065, column: 21, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6511, file: !977, line: 1064, column: 47)
!6516 = !DILocation(line: 1065, column: 24, scope: !6515)
!6517 = !DILocation(line: 1065, column: 40, scope: !6515)
!6518 = !DILocation(line: 1066, column: 69, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6515, file: !977, line: 1066, column: 25)
!6520 = !DILocation(line: 1066, column: 73, scope: !6519)
!6521 = !DILocation(line: 1066, column: 76, scope: !6519)
!6522 = !DILocation(line: 1066, column: 39, scope: !6519)
!6523 = !DILocation(line: 1066, column: 37, scope: !6519)
!6524 = !DILocation(line: 1066, column: 81, scope: !6519)
!6525 = !DILocation(line: 1066, column: 25, scope: !6515)
!6526 = !DILocation(line: 1067, column: 32, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6519, file: !977, line: 1066, column: 86)
!6528 = !DILocation(line: 1067, column: 35, scope: !6527)
!6529 = !DILocation(line: 1067, column: 37, scope: !6527)
!6530 = !DILocation(line: 1067, column: 25, scope: !6527)
!6531 = !DILocation(line: 1068, column: 29, scope: !6527)
!6532 = !DILocation(line: 1069, column: 29, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6527, file: !977, line: 1069, column: 29)
!6534 = !DILocation(line: 1069, column: 36, scope: !6533)
!6535 = !DILocation(line: 1069, column: 52, scope: !6533)
!6536 = !DILocation(line: 1069, column: 29, scope: !6527)
!6537 = !DILocation(line: 1070, column: 29, scope: !6533)
!6538 = !DILocation(line: 1071, column: 25, scope: !6527)
!6539 = !DILocation(line: 1073, column: 17, scope: !6515)
!6540 = !DILocation(line: 1074, column: 13, scope: !6473)
!6541 = !DILocation(line: 1075, column: 17, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6390, file: !977, line: 1075, column: 17)
!6543 = !DILocation(line: 1075, column: 28, scope: !6542)
!6544 = !DILocation(line: 1075, column: 17, scope: !6390)
!6545 = !DILocation(line: 1076, column: 17, scope: !6542)
!6546 = !DILocation(line: 1077, column: 30, scope: !6390)
!6547 = !DILocation(line: 1077, column: 32, scope: !6390)
!6548 = !DILocation(line: 1077, column: 29, scope: !6390)
!6549 = !DILocation(line: 1077, column: 29, scope: !6550)
!6550 = !DILexicalBlockFile(scope: !6390, file: !977, discriminator: 1)
!6551 = !DILocation(line: 1077, column: 59, scope: !6552)
!6552 = !DILexicalBlockFile(scope: !6390, file: !977, discriminator: 2)
!6553 = !DILocation(line: 1077, column: 60, scope: !6552)
!6554 = !DILocation(line: 1077, column: 52, scope: !6552)
!6555 = !DILocation(line: 1077, column: 64, scope: !6552)
!6556 = !DILocation(line: 1077, column: 76, scope: !6552)
!6557 = !DILocation(line: 1077, column: 74, scope: !6552)
!6558 = !DILocation(line: 1077, column: 49, scope: !6552)
!6559 = !DILocation(line: 1077, column: 45, scope: !6552)
!6560 = !DILocation(line: 1077, column: 45, scope: !6561)
!6561 = !DILexicalBlockFile(scope: !6390, file: !977, discriminator: 3)
!6562 = !DILocation(line: 1077, column: 103, scope: !6563)
!6563 = !DILexicalBlockFile(scope: !6390, file: !977, discriminator: 4)
!6564 = !DILocation(line: 1077, column: 104, scope: !6563)
!6565 = !DILocation(line: 1077, column: 96, scope: !6563)
!6566 = !DILocation(line: 1077, column: 108, scope: !6563)
!6567 = !DILocation(line: 1077, column: 120, scope: !6563)
!6568 = !DILocation(line: 1077, column: 118, scope: !6563)
!6569 = !DILocation(line: 1077, column: 45, scope: !6563)
!6570 = !DILocation(line: 1077, column: 45, scope: !6571)
!6571 = !DILexicalBlockFile(scope: !6390, file: !977, discriminator: 5)
!6572 = !DILocation(line: 1077, column: 29, scope: !6571)
!6573 = !DILocation(line: 1077, column: 29, scope: !6574)
!6574 = !DILexicalBlockFile(scope: !6390, file: !977, discriminator: 6)
!6575 = !DILocation(line: 1077, column: 13, scope: !6574)
!6576 = !DILocation(line: 1077, column: 16, scope: !6574)
!6577 = !DILocation(line: 1077, column: 27, scope: !6574)
!6578 = !DILocation(line: 1078, column: 18, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6390, file: !977, line: 1078, column: 17)
!6580 = !DILocation(line: 1078, column: 21, scope: !6579)
!6581 = !DILocation(line: 1078, column: 32, scope: !6579)
!6582 = !DILocation(line: 1078, column: 35, scope: !6583)
!6583 = !DILexicalBlockFile(scope: !6579, file: !977, discriminator: 1)
!6584 = !DILocation(line: 1078, column: 38, scope: !6583)
!6585 = !DILocation(line: 1078, column: 17, scope: !6583)
!6586 = !DILocation(line: 1079, column: 32, scope: !6579)
!6587 = !DILocation(line: 1079, column: 37, scope: !6579)
!6588 = !DILocation(line: 1079, column: 34, scope: !6579)
!6589 = !DILocation(line: 1079, column: 31, scope: !6579)
!6590 = !DILocation(line: 1079, column: 50, scope: !6583)
!6591 = !DILocation(line: 1079, column: 31, scope: !6583)
!6592 = !DILocation(line: 1079, column: 64, scope: !6593)
!6593 = !DILexicalBlockFile(scope: !6579, file: !977, discriminator: 2)
!6594 = !DILocation(line: 1079, column: 85, scope: !6593)
!6595 = !DILocation(line: 1079, column: 78, scope: !6593)
!6596 = !DILocation(line: 1079, column: 88, scope: !6593)
!6597 = !DILocation(line: 1079, column: 100, scope: !6593)
!6598 = !DILocation(line: 1079, column: 98, scope: !6593)
!6599 = !DILocation(line: 1079, column: 75, scope: !6593)
!6600 = !DILocation(line: 1079, column: 63, scope: !6593)
!6601 = !DILocation(line: 1079, column: 121, scope: !6602)
!6602 = !DILexicalBlockFile(scope: !6579, file: !977, discriminator: 3)
!6603 = !DILocation(line: 1079, column: 114, scope: !6602)
!6604 = !DILocation(line: 1079, column: 124, scope: !6602)
!6605 = !DILocation(line: 1079, column: 136, scope: !6602)
!6606 = !DILocation(line: 1079, column: 134, scope: !6602)
!6607 = !DILocation(line: 1079, column: 63, scope: !6602)
!6608 = !DILocation(line: 1079, column: 150, scope: !6609)
!6609 = !DILexicalBlockFile(scope: !6579, file: !977, discriminator: 4)
!6610 = !DILocation(line: 1079, column: 63, scope: !6609)
!6611 = !DILocation(line: 1079, column: 63, scope: !6612)
!6612 = !DILexicalBlockFile(scope: !6579, file: !977, discriminator: 5)
!6613 = !DILocation(line: 1079, column: 31, scope: !6612)
!6614 = !DILocation(line: 1079, column: 31, scope: !6615)
!6615 = !DILexicalBlockFile(scope: !6579, file: !977, discriminator: 6)
!6616 = !DILocation(line: 1079, column: 17, scope: !6615)
!6617 = !DILocation(line: 1079, column: 20, scope: !6615)
!6618 = !DILocation(line: 1079, column: 29, scope: !6615)
!6619 = !DILocation(line: 1081, column: 21, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !977, line: 1081, column: 21)
!6621 = distinct !DILexicalBlock(scope: !6579, file: !977, line: 1080, column: 18)
!6622 = !DILocation(line: 1081, column: 26, scope: !6620)
!6623 = !DILocation(line: 1081, column: 23, scope: !6620)
!6624 = !DILocation(line: 1081, column: 21, scope: !6621)
!6625 = !DILocation(line: 1082, column: 28, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6620, file: !977, line: 1081, column: 36)
!6627 = !DILocation(line: 1082, column: 31, scope: !6626)
!6628 = !DILocation(line: 1082, column: 33, scope: !6626)
!6629 = !DILocation(line: 1082, column: 21, scope: !6626)
!6630 = !DILocation(line: 1083, column: 21, scope: !6626)
!6631 = !DILocation(line: 1085, column: 32, scope: !6621)
!6632 = !DILocation(line: 1085, column: 37, scope: !6621)
!6633 = !DILocation(line: 1085, column: 47, scope: !6621)
!6634 = !DILocation(line: 1085, column: 34, scope: !6621)
!6635 = !DILocation(line: 1085, column: 31, scope: !6621)
!6636 = !DILocation(line: 1085, column: 54, scope: !6637)
!6637 = !DILexicalBlockFile(scope: !6621, file: !977, discriminator: 1)
!6638 = !DILocation(line: 1085, column: 31, scope: !6637)
!6639 = !DILocation(line: 1085, column: 68, scope: !6640)
!6640 = !DILexicalBlockFile(scope: !6621, file: !977, discriminator: 2)
!6641 = !DILocation(line: 1085, column: 89, scope: !6640)
!6642 = !DILocation(line: 1085, column: 82, scope: !6640)
!6643 = !DILocation(line: 1085, column: 92, scope: !6640)
!6644 = !DILocation(line: 1085, column: 104, scope: !6640)
!6645 = !DILocation(line: 1085, column: 102, scope: !6640)
!6646 = !DILocation(line: 1085, column: 79, scope: !6640)
!6647 = !DILocation(line: 1085, column: 67, scope: !6640)
!6648 = !DILocation(line: 1085, column: 125, scope: !6649)
!6649 = !DILexicalBlockFile(scope: !6621, file: !977, discriminator: 3)
!6650 = !DILocation(line: 1085, column: 118, scope: !6649)
!6651 = !DILocation(line: 1085, column: 128, scope: !6649)
!6652 = !DILocation(line: 1085, column: 140, scope: !6649)
!6653 = !DILocation(line: 1085, column: 138, scope: !6649)
!6654 = !DILocation(line: 1085, column: 67, scope: !6649)
!6655 = !DILocation(line: 1085, column: 154, scope: !6656)
!6656 = !DILexicalBlockFile(scope: !6621, file: !977, discriminator: 4)
!6657 = !DILocation(line: 1085, column: 67, scope: !6656)
!6658 = !DILocation(line: 1085, column: 67, scope: !6659)
!6659 = !DILexicalBlockFile(scope: !6621, file: !977, discriminator: 5)
!6660 = !DILocation(line: 1085, column: 31, scope: !6659)
!6661 = !DILocation(line: 1085, column: 31, scope: !6662)
!6662 = !DILexicalBlockFile(scope: !6621, file: !977, discriminator: 6)
!6663 = !DILocation(line: 1085, column: 17, scope: !6662)
!6664 = !DILocation(line: 1085, column: 20, scope: !6662)
!6665 = !DILocation(line: 1085, column: 29, scope: !6662)
!6666 = !DILocation(line: 1087, column: 17, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6390, file: !977, line: 1087, column: 17)
!6668 = !DILocation(line: 1087, column: 20, scope: !6667)
!6669 = !DILocation(line: 1087, column: 32, scope: !6667)
!6670 = !DILocation(line: 1087, column: 35, scope: !6667)
!6671 = !DILocation(line: 1087, column: 29, scope: !6667)
!6672 = !DILocation(line: 1087, column: 17, scope: !6390)
!6673 = !DILocation(line: 1088, column: 24, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6667, file: !977, line: 1087, column: 47)
!6675 = !DILocation(line: 1088, column: 27, scope: !6674)
!6676 = !DILocation(line: 1088, column: 29, scope: !6674)
!6677 = !DILocation(line: 1088, column: 68, scope: !6674)
!6678 = !DILocation(line: 1088, column: 71, scope: !6674)
!6679 = !DILocation(line: 1088, column: 81, scope: !6674)
!6680 = !DILocation(line: 1088, column: 84, scope: !6674)
!6681 = !DILocation(line: 1088, column: 17, scope: !6674)
!6682 = !DILocation(line: 1089, column: 17, scope: !6674)
!6683 = !DILocation(line: 1091, column: 19, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6390, file: !977, line: 1091, column: 17)
!6685 = !DILocation(line: 1091, column: 22, scope: !6684)
!6686 = !DILocation(line: 1091, column: 32, scope: !6684)
!6687 = !DILocation(line: 1091, column: 53, scope: !6684)
!6688 = !DILocation(line: 1091, column: 57, scope: !6689)
!6689 = !DILexicalBlockFile(scope: !6684, file: !977, discriminator: 1)
!6690 = !DILocation(line: 1091, column: 60, scope: !6689)
!6691 = !DILocation(line: 1091, column: 77, scope: !6689)
!6692 = !DILocation(line: 1092, column: 19, scope: !6684)
!6693 = !DILocation(line: 1092, column: 22, scope: !6684)
!6694 = !DILocation(line: 1092, column: 32, scope: !6684)
!6695 = !DILocation(line: 1092, column: 53, scope: !6684)
!6696 = !DILocation(line: 1092, column: 57, scope: !6689)
!6697 = !DILocation(line: 1092, column: 60, scope: !6689)
!6698 = !DILocation(line: 1092, column: 70, scope: !6689)
!6699 = !DILocation(line: 1093, column: 18, scope: !6684)
!6700 = !DILocation(line: 1093, column: 21, scope: !6684)
!6701 = !DILocation(line: 1091, column: 17, scope: !6552)
!6702 = !DILocation(line: 1094, column: 24, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6684, file: !977, line: 1093, column: 32)
!6704 = !DILocation(line: 1094, column: 27, scope: !6703)
!6705 = !DILocation(line: 1094, column: 29, scope: !6703)
!6706 = !DILocation(line: 1094, column: 17, scope: !6703)
!6707 = !DILocation(line: 1095, column: 17, scope: !6703)
!6708 = !DILocation(line: 1097, column: 34, scope: !6390)
!6709 = !DILocation(line: 1097, column: 13, scope: !6390)
!6710 = !DILocation(line: 1098, column: 17, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6390, file: !977, line: 1098, column: 17)
!6712 = !DILocation(line: 1098, column: 22, scope: !6711)
!6713 = !DILocation(line: 1098, column: 19, scope: !6711)
!6714 = !DILocation(line: 1098, column: 17, scope: !6390)
!6715 = !DILocation(line: 1099, column: 17, scope: !6711)
!6716 = !DILocation(line: 1099, column: 20, scope: !6711)
!6717 = !DILocation(line: 1099, column: 32, scope: !6711)
!6718 = !DILocation(line: 1099, column: 25, scope: !6711)
!6719 = !DILocation(line: 1099, column: 35, scope: !6711)
!6720 = !DILocation(line: 1100, column: 9, scope: !6390)
!6721 = !DILocation(line: 1037, column: 37, scope: !6722)
!6722 = !DILexicalBlockFile(scope: !6384, file: !977, discriminator: 2)
!6723 = !DILocation(line: 1037, column: 9, scope: !6722)
!6724 = distinct !{!6724, !6725}
!6725 = !DILocation(line: 1037, column: 9, scope: !6316)
!6726 = !DILocation(line: 1101, column: 13, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6316, file: !977, line: 1101, column: 13)
!6728 = !DILocation(line: 1101, column: 16, scope: !6727)
!6729 = !DILocation(line: 1101, column: 13, scope: !6316)
!6730 = !DILocation(line: 1102, column: 13, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6727, file: !977, line: 1101, column: 28)
!6732 = !DILocation(line: 1102, column: 16, scope: !6731)
!6733 = !DILocation(line: 1102, column: 29, scope: !6731)
!6734 = !DILocation(line: 1103, column: 13, scope: !6731)
!6735 = !DILocation(line: 1103, column: 16, scope: !6731)
!6736 = !DILocation(line: 1103, column: 32, scope: !6731)
!6737 = !DILocation(line: 1103, column: 35, scope: !6731)
!6738 = !DILocation(line: 1103, column: 47, scope: !6731)
!6739 = !DILocation(line: 1104, column: 13, scope: !6731)
!6740 = !DILocation(line: 1104, column: 16, scope: !6731)
!6741 = !DILocation(line: 1104, column: 32, scope: !6731)
!6742 = !DILocation(line: 1104, column: 35, scope: !6731)
!6743 = !DILocation(line: 1104, column: 47, scope: !6731)
!6744 = !DILocation(line: 1105, column: 13, scope: !6731)
!6745 = !DILocation(line: 1105, column: 16, scope: !6731)
!6746 = !DILocation(line: 1105, column: 32, scope: !6731)
!6747 = !DILocation(line: 1105, column: 35, scope: !6731)
!6748 = !DILocation(line: 1105, column: 47, scope: !6731)
!6749 = !DILocation(line: 1106, column: 13, scope: !6731)
!6750 = !DILocation(line: 1106, column: 16, scope: !6731)
!6751 = !DILocation(line: 1106, column: 25, scope: !6731)
!6752 = !DILocation(line: 1107, column: 13, scope: !6731)
!6753 = !DILocation(line: 1107, column: 16, scope: !6731)
!6754 = !DILocation(line: 1107, column: 27, scope: !6731)
!6755 = !DILocation(line: 1108, column: 17, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6731, file: !977, line: 1108, column: 17)
!6757 = !DILocation(line: 1108, column: 20, scope: !6756)
!6758 = !DILocation(line: 1108, column: 22, scope: !6756)
!6759 = !DILocation(line: 1108, column: 32, scope: !6756)
!6760 = !DILocation(line: 1108, column: 54, scope: !6756)
!6761 = !DILocation(line: 1108, column: 57, scope: !6762)
!6762 = !DILexicalBlockFile(scope: !6756, file: !977, discriminator: 1)
!6763 = !DILocation(line: 1108, column: 60, scope: !6762)
!6764 = !DILocation(line: 1108, column: 62, scope: !6762)
!6765 = !DILocation(line: 1108, column: 72, scope: !6762)
!6766 = !DILocation(line: 1108, column: 17, scope: !6762)
!6767 = !DILocation(line: 1109, column: 17, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6756, file: !977, line: 1108, column: 94)
!6769 = distinct !{!6769, !6767}
!6770 = !DILocalVariable(name: "SWAP_tmp", scope: !6771, file: !977, line: 1109, type: !1132)
!6771 = distinct !DILexicalBlock(scope: !6768, file: !977, line: 1109, column: 19)
!6772 = !DILocation(line: 1109, column: 30, scope: !6771)
!6773 = !DILocation(line: 1109, column: 40, scope: !6774)
!6774 = !DILexicalBlockFile(scope: !6771, file: !977, discriminator: 1)
!6775 = !DILocation(line: 1109, column: 43, scope: !6774)
!6776 = !DILocation(line: 1109, column: 30, scope: !6774)
!6777 = !DILocation(line: 1109, column: 64, scope: !6774)
!6778 = !DILocation(line: 1109, column: 67, scope: !6774)
!6779 = !DILocation(line: 1109, column: 52, scope: !6774)
!6780 = !DILocation(line: 1109, column: 55, scope: !6774)
!6781 = !DILocation(line: 1109, column: 62, scope: !6774)
!6782 = !DILocation(line: 1109, column: 98, scope: !6774)
!6783 = !DILocation(line: 1109, column: 81, scope: !6774)
!6784 = !DILocation(line: 1109, column: 84, scope: !6774)
!6785 = !DILocation(line: 1109, column: 96, scope: !6774)
!6786 = !DILocation(line: 1109, column: 107, scope: !6774)
!6787 = !DILocation(line: 1110, column: 17, scope: !6768)
!6788 = distinct !{!6788, !6787}
!6789 = !DILocalVariable(name: "SWAP_tmp", scope: !6790, file: !977, line: 1110, type: !1132)
!6790 = distinct !DILexicalBlock(scope: !6768, file: !977, line: 1110, column: 19)
!6791 = !DILocation(line: 1110, column: 30, scope: !6790)
!6792 = !DILocation(line: 1110, column: 40, scope: !6793)
!6793 = !DILexicalBlockFile(scope: !6790, file: !977, discriminator: 1)
!6794 = !DILocation(line: 1110, column: 43, scope: !6793)
!6795 = !DILocation(line: 1110, column: 30, scope: !6793)
!6796 = !DILocation(line: 1110, column: 64, scope: !6793)
!6797 = !DILocation(line: 1110, column: 67, scope: !6793)
!6798 = !DILocation(line: 1110, column: 52, scope: !6793)
!6799 = !DILocation(line: 1110, column: 55, scope: !6793)
!6800 = !DILocation(line: 1110, column: 62, scope: !6793)
!6801 = !DILocation(line: 1110, column: 98, scope: !6793)
!6802 = !DILocation(line: 1110, column: 81, scope: !6793)
!6803 = !DILocation(line: 1110, column: 84, scope: !6793)
!6804 = !DILocation(line: 1110, column: 96, scope: !6793)
!6805 = !DILocation(line: 1110, column: 107, scope: !6793)
!6806 = !DILocation(line: 1111, column: 13, scope: !6768)
!6807 = !DILocation(line: 1112, column: 9, scope: !6731)
!6808 = !DILocation(line: 1113, column: 9, scope: !6316)
!6809 = distinct !{!6809, !6808}
!6810 = !DILocation(line: 1113, column: 112, scope: !6811)
!6811 = !DILexicalBlockFile(scope: !6812, file: !977, discriminator: 1)
!6812 = distinct !DILexicalBlock(scope: !6316, file: !977, line: 1113, column: 12)
!6813 = !DILocation(line: 1117, column: 12, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6316, file: !977, line: 1117, column: 12)
!6815 = !DILocation(line: 1117, column: 15, scope: !6814)
!6816 = !DILocation(line: 1117, column: 18, scope: !6814)
!6817 = !DILocation(line: 1117, column: 33, scope: !6814)
!6818 = !DILocation(line: 1117, column: 36, scope: !6819)
!6819 = !DILexicalBlockFile(scope: !6814, file: !977, discriminator: 1)
!6820 = !DILocation(line: 1117, column: 39, scope: !6819)
!6821 = !DILocation(line: 1117, column: 49, scope: !6819)
!6822 = !DILocation(line: 1117, column: 12, scope: !6819)
!6823 = !DILocation(line: 1118, column: 17, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6814, file: !977, line: 1117, column: 71)
!6825 = !DILocation(line: 1119, column: 13, scope: !6824)
!6826 = !DILocation(line: 1121, column: 14, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6316, file: !977, line: 1121, column: 13)
!6828 = !DILocation(line: 1121, column: 17, scope: !6827)
!6829 = !DILocation(line: 1121, column: 13, scope: !6316)
!6830 = !DILocation(line: 1122, column: 30, scope: !6827)
!6831 = !DILocation(line: 1122, column: 33, scope: !6827)
!6832 = !DILocation(line: 1122, column: 13, scope: !6827)
!6833 = !DILocation(line: 1125, column: 22, scope: !4341)
!6834 = !DILocation(line: 1125, column: 5, scope: !4341)
!6835 = !DILocation(line: 1127, column: 9, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 1127, column: 9)
!6837 = !DILocation(line: 1127, column: 16, scope: !6836)
!6838 = !DILocation(line: 1127, column: 25, scope: !6836)
!6839 = !DILocation(line: 1127, column: 50, scope: !6836)
!6840 = !DILocation(line: 1127, column: 53, scope: !6841)
!6841 = !DILexicalBlockFile(scope: !6836, file: !977, discriminator: 1)
!6842 = !DILocation(line: 1127, column: 60, scope: !6841)
!6843 = !DILocation(line: 1127, column: 69, scope: !6841)
!6844 = !DILocation(line: 1127, column: 9, scope: !6841)
!6845 = !DILocation(line: 1127, column: 94, scope: !6846)
!6846 = !DILexicalBlockFile(scope: !6836, file: !977, discriminator: 2)
!6847 = !DILocation(line: 1129, column: 45, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6836, file: !977, line: 1127, column: 94)
!6849 = !DILocation(line: 1129, column: 48, scope: !6848)
!6850 = !DILocation(line: 1129, column: 24, scope: !6848)
!6851 = !DILocation(line: 1129, column: 31, scope: !6848)
!6852 = !DILocation(line: 1129, column: 43, scope: !6848)
!6853 = !DILocation(line: 1129, column: 9, scope: !6848)
!6854 = !DILocation(line: 1129, column: 16, scope: !6848)
!6855 = !DILocation(line: 1129, column: 22, scope: !6848)
!6856 = !DILocation(line: 1130, column: 47, scope: !6848)
!6857 = !DILocation(line: 1130, column: 50, scope: !6848)
!6858 = !DILocation(line: 1130, column: 25, scope: !6848)
!6859 = !DILocation(line: 1130, column: 32, scope: !6848)
!6860 = !DILocation(line: 1130, column: 45, scope: !6848)
!6861 = !DILocation(line: 1130, column: 9, scope: !6848)
!6862 = !DILocation(line: 1130, column: 16, scope: !6848)
!6863 = !DILocation(line: 1130, column: 23, scope: !6848)
!6864 = !DILocation(line: 1131, column: 13, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6848, file: !977, line: 1131, column: 13)
!6866 = !DILocation(line: 1131, column: 20, scope: !6865)
!6867 = !DILocation(line: 1131, column: 31, scope: !6865)
!6868 = !DILocation(line: 1131, column: 13, scope: !6848)
!6869 = !DILocation(line: 1132, column: 13, scope: !6865)
!6870 = !DILocation(line: 1134, column: 39, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6848, file: !977, line: 1134, column: 13)
!6872 = !DILocation(line: 1134, column: 43, scope: !6871)
!6873 = !DILocation(line: 1134, column: 46, scope: !6871)
!6874 = !DILocation(line: 1134, column: 20, scope: !6871)
!6875 = !DILocation(line: 1134, column: 18, scope: !6871)
!6876 = !DILocation(line: 1134, column: 51, scope: !6871)
!6877 = !DILocation(line: 1134, column: 13, scope: !6848)
!6878 = !DILocation(line: 1135, column: 13, scope: !6871)
!6879 = !DILocation(line: 1137, column: 33, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6848, file: !977, line: 1137, column: 13)
!6881 = !DILocation(line: 1137, column: 39, scope: !6880)
!6882 = !DILocation(line: 1137, column: 42, scope: !6880)
!6883 = !DILocation(line: 1137, column: 20, scope: !6880)
!6884 = !DILocation(line: 1137, column: 18, scope: !6880)
!6885 = !DILocation(line: 1137, column: 64, scope: !6880)
!6886 = !DILocation(line: 1137, column: 13, scope: !6848)
!6887 = !DILocation(line: 1138, column: 13, scope: !6880)
!6888 = !DILocation(line: 1139, column: 10, scope: !6848)
!6889 = !DILocation(line: 1139, column: 20, scope: !6848)
!6890 = !DILocation(line: 1140, column: 5, scope: !6848)
!6891 = !DILocation(line: 1141, column: 13, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !977, line: 1141, column: 13)
!6893 = distinct !DILexicalBlock(scope: !6836, file: !977, line: 1140, column: 12)
!6894 = !DILocation(line: 1141, column: 16, scope: !6892)
!6895 = !DILocation(line: 1141, column: 26, scope: !6892)
!6896 = !DILocation(line: 1141, column: 47, scope: !6892)
!6897 = !DILocation(line: 1141, column: 50, scope: !6898)
!6898 = !DILexicalBlockFile(scope: !6892, file: !977, discriminator: 1)
!6899 = !DILocation(line: 1141, column: 53, scope: !6898)
!6900 = !DILocation(line: 1141, column: 13, scope: !6898)
!6901 = !DILocation(line: 1142, column: 37, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !977, line: 1142, column: 17)
!6903 = distinct !DILexicalBlock(scope: !6892, file: !977, line: 1141, column: 64)
!6904 = !DILocation(line: 1142, column: 43, scope: !6902)
!6905 = !DILocation(line: 1142, column: 46, scope: !6902)
!6906 = !DILocation(line: 1142, column: 67, scope: !6902)
!6907 = !DILocation(line: 1142, column: 24, scope: !6902)
!6908 = !DILocation(line: 1142, column: 22, scope: !6902)
!6909 = !DILocation(line: 1142, column: 71, scope: !6902)
!6910 = !DILocation(line: 1142, column: 17, scope: !6903)
!6911 = !DILocation(line: 1143, column: 17, scope: !6902)
!6912 = !DILocation(line: 1144, column: 33, scope: !6903)
!6913 = !DILocation(line: 1144, column: 36, scope: !6903)
!6914 = !DILocation(line: 1144, column: 39, scope: !6903)
!6915 = !DILocation(line: 1144, column: 60, scope: !6903)
!6916 = !DILocation(line: 1144, column: 13, scope: !6903)
!6917 = !DILocation(line: 1145, column: 14, scope: !6903)
!6918 = !DILocation(line: 1145, column: 24, scope: !6903)
!6919 = !DILocation(line: 1146, column: 9, scope: !6903)
!6920 = !DILocation(line: 1146, column: 20, scope: !6921)
!6921 = !DILexicalBlockFile(scope: !6922, file: !977, discriminator: 1)
!6922 = distinct !DILexicalBlock(scope: !6892, file: !977, line: 1146, column: 20)
!6923 = !DILocation(line: 1146, column: 23, scope: !6921)
!6924 = !DILocation(line: 1147, column: 37, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !977, line: 1147, column: 17)
!6926 = distinct !DILexicalBlock(scope: !6922, file: !977, line: 1146, column: 41)
!6927 = !DILocation(line: 1147, column: 43, scope: !6925)
!6928 = !DILocation(line: 1147, column: 46, scope: !6925)
!6929 = !DILocation(line: 1147, column: 64, scope: !6925)
!6930 = !DILocation(line: 1147, column: 24, scope: !6925)
!6931 = !DILocation(line: 1147, column: 22, scope: !6925)
!6932 = !DILocation(line: 1147, column: 68, scope: !6925)
!6933 = !DILocation(line: 1147, column: 17, scope: !6926)
!6934 = !DILocation(line: 1148, column: 17, scope: !6925)
!6935 = !DILocation(line: 1149, column: 33, scope: !6926)
!6936 = !DILocation(line: 1149, column: 36, scope: !6926)
!6937 = !DILocation(line: 1149, column: 39, scope: !6926)
!6938 = !DILocation(line: 1149, column: 57, scope: !6926)
!6939 = !DILocation(line: 1149, column: 13, scope: !6926)
!6940 = !DILocation(line: 1150, column: 14, scope: !6926)
!6941 = !DILocation(line: 1150, column: 24, scope: !6926)
!6942 = !DILocation(line: 1151, column: 9, scope: !6926)
!6943 = !DILocation(line: 1127, column: 72, scope: !6944)
!6944 = !DILexicalBlockFile(scope: !6836, file: !977, discriminator: 3)
!6945 = !DILocation(line: 1155, column: 13, scope: !4341)
!6946 = !DILocation(line: 1155, column: 5, scope: !4341)
!6947 = !DILocation(line: 1156, column: 12, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 1156, column: 5)
!6949 = !DILocation(line: 1156, column: 10, scope: !6948)
!6950 = !DILocation(line: 1156, column: 17, scope: !6951)
!6951 = !DILexicalBlockFile(scope: !6952, file: !977, discriminator: 1)
!6952 = distinct !DILexicalBlock(scope: !6948, file: !977, line: 1156, column: 5)
!6953 = !DILocation(line: 1156, column: 21, scope: !6951)
!6954 = !DILocation(line: 1156, column: 19, scope: !6951)
!6955 = !DILocation(line: 1156, column: 5, scope: !6951)
!6956 = !DILocation(line: 1157, column: 24, scope: !6952)
!6957 = !DILocation(line: 1157, column: 17, scope: !6952)
!6958 = !DILocation(line: 1157, column: 27, scope: !6952)
!6959 = !DILocation(line: 1157, column: 9, scope: !6952)
!6960 = !DILocation(line: 1156, column: 32, scope: !6961)
!6961 = !DILexicalBlockFile(scope: !6952, file: !977, discriminator: 2)
!6962 = !DILocation(line: 1156, column: 5, scope: !6961)
!6963 = distinct !{!6963, !6964}
!6964 = !DILocation(line: 1156, column: 5, scope: !4341)
!6965 = !DILocation(line: 1158, column: 13, scope: !4341)
!6966 = !DILocation(line: 1158, column: 5, scope: !4341)
!6967 = !DILocation(line: 1159, column: 12, scope: !4341)
!6968 = !DILocation(line: 1159, column: 5, scope: !4341)
!6969 = !DILocation(line: 1162, column: 13, scope: !4341)
!6970 = !DILocation(line: 1162, column: 5, scope: !4341)
!6971 = !DILocation(line: 1163, column: 12, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !4341, file: !977, line: 1163, column: 5)
!6973 = !DILocation(line: 1163, column: 10, scope: !6972)
!6974 = !DILocation(line: 1163, column: 17, scope: !6975)
!6975 = !DILexicalBlockFile(scope: !6976, file: !977, discriminator: 1)
!6976 = distinct !DILexicalBlock(scope: !6972, file: !977, line: 1163, column: 5)
!6977 = !DILocation(line: 1163, column: 21, scope: !6975)
!6978 = !DILocation(line: 1163, column: 19, scope: !6975)
!6979 = !DILocation(line: 1163, column: 5, scope: !6975)
!6980 = !DILocation(line: 1164, column: 24, scope: !6976)
!6981 = !DILocation(line: 1164, column: 17, scope: !6976)
!6982 = !DILocation(line: 1164, column: 27, scope: !6976)
!6983 = !DILocation(line: 1164, column: 9, scope: !6976)
!6984 = !DILocation(line: 1163, column: 32, scope: !6985)
!6985 = !DILexicalBlockFile(scope: !6976, file: !977, discriminator: 2)
!6986 = !DILocation(line: 1163, column: 5, scope: !6985)
!6987 = distinct !{!6987, !6988}
!6988 = !DILocation(line: 1163, column: 5, scope: !4341)
!6989 = !DILocation(line: 1165, column: 13, scope: !4341)
!6990 = !DILocation(line: 1165, column: 5, scope: !4341)
!6991 = !DILocation(line: 1166, column: 12, scope: !4341)
!6992 = !DILocation(line: 1166, column: 5, scope: !4341)
!6993 = !DILocation(line: 1167, column: 1, scope: !4341)
!6994 = distinct !DISubprogram(name: "vc1_sprite_flush", scope: !977, file: !977, line: 304, type: !2622, isLocal: true, isDefinition: true, scopeLine: 305, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!6995 = !DILocalVariable(name: "avctx", arg: 1, scope: !6994, file: !977, line: 304, type: !1104)
!6996 = !DILocation(line: 304, column: 46, scope: !6994)
!6997 = !DILocalVariable(name: "v", scope: !6994, file: !977, line: 306, type: !2655)
!6998 = !DILocation(line: 306, column: 17, scope: !6994)
!6999 = !DILocation(line: 306, column: 21, scope: !6994)
!7000 = !DILocation(line: 306, column: 28, scope: !6994)
!7001 = !DILocalVariable(name: "s", scope: !6994, file: !977, line: 307, type: !3015)
!7002 = !DILocation(line: 307, column: 21, scope: !6994)
!7003 = !DILocation(line: 307, column: 26, scope: !6994)
!7004 = !DILocation(line: 307, column: 29, scope: !6994)
!7005 = !DILocalVariable(name: "f", scope: !6994, file: !977, line: 308, type: !1126)
!7006 = !DILocation(line: 308, column: 14, scope: !6994)
!7007 = !DILocation(line: 308, column: 18, scope: !6994)
!7008 = !DILocation(line: 308, column: 21, scope: !6994)
!7009 = !DILocation(line: 308, column: 37, scope: !6994)
!7010 = !DILocalVariable(name: "plane", scope: !6994, file: !977, line: 309, type: !971)
!7011 = !DILocation(line: 309, column: 9, scope: !6994)
!7012 = !DILocalVariable(name: "i", scope: !6994, file: !977, line: 309, type: !971)
!7013 = !DILocation(line: 309, column: 16, scope: !6994)
!7014 = !DILocation(line: 315, column: 9, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6994, file: !977, line: 315, column: 9)
!7016 = !DILocation(line: 315, column: 11, scope: !7015)
!7017 = !DILocation(line: 315, column: 14, scope: !7018)
!7018 = !DILexicalBlockFile(scope: !7015, file: !977, discriminator: 1)
!7019 = !DILocation(line: 315, column: 17, scope: !7018)
!7020 = !DILocation(line: 315, column: 9, scope: !7018)
!7021 = !DILocation(line: 316, column: 20, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7015, file: !977, line: 316, column: 9)
!7023 = !DILocation(line: 316, column: 14, scope: !7022)
!7024 = !DILocation(line: 316, column: 25, scope: !7025)
!7025 = !DILexicalBlockFile(scope: !7026, file: !977, discriminator: 1)
!7026 = distinct !DILexicalBlock(scope: !7022, file: !977, line: 316, column: 9)
!7027 = !DILocation(line: 316, column: 31, scope: !7025)
!7028 = !DILocation(line: 316, column: 9, scope: !7025)
!7029 = !DILocation(line: 317, column: 20, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7026, file: !977, line: 317, column: 13)
!7031 = !DILocation(line: 317, column: 18, scope: !7030)
!7032 = !DILocation(line: 317, column: 25, scope: !7033)
!7033 = !DILexicalBlockFile(scope: !7034, file: !977, discriminator: 1)
!7034 = distinct !DILexicalBlock(scope: !7030, file: !977, line: 317, column: 13)
!7035 = !DILocation(line: 317, column: 29, scope: !7033)
!7036 = !DILocation(line: 317, column: 32, scope: !7033)
!7037 = !DILocation(line: 317, column: 49, scope: !7033)
!7038 = !DILocation(line: 317, column: 48, scope: !7033)
!7039 = !DILocation(line: 317, column: 47, scope: !7033)
!7040 = !DILocation(line: 317, column: 45, scope: !7033)
!7041 = !DILocation(line: 317, column: 27, scope: !7033)
!7042 = !DILocation(line: 317, column: 13, scope: !7033)
!7043 = !DILocation(line: 318, column: 32, scope: !7034)
!7044 = !DILocation(line: 318, column: 24, scope: !7034)
!7045 = !DILocation(line: 318, column: 27, scope: !7034)
!7046 = !DILocation(line: 318, column: 41, scope: !7034)
!7047 = !DILocation(line: 318, column: 57, scope: !7034)
!7048 = !DILocation(line: 318, column: 45, scope: !7034)
!7049 = !DILocation(line: 318, column: 48, scope: !7034)
!7050 = !DILocation(line: 318, column: 43, scope: !7034)
!7051 = !DILocation(line: 318, column: 39, scope: !7034)
!7052 = !DILocation(line: 319, column: 24, scope: !7034)
!7053 = !DILocation(line: 318, column: 17, scope: !7034)
!7054 = !DILocation(line: 319, column: 53, scope: !7034)
!7055 = !DILocation(line: 319, column: 41, scope: !7034)
!7056 = !DILocation(line: 319, column: 44, scope: !7034)
!7057 = !DILocation(line: 317, column: 57, scope: !7058)
!7058 = !DILexicalBlockFile(scope: !7034, file: !977, discriminator: 2)
!7059 = !DILocation(line: 317, column: 13, scope: !7058)
!7060 = distinct !{!7060, !7061}
!7061 = !DILocation(line: 317, column: 13, scope: !7026)
!7062 = !DILocation(line: 319, column: 59, scope: !7063)
!7063 = !DILexicalBlockFile(scope: !7030, file: !977, discriminator: 1)
!7064 = !DILocation(line: 316, column: 82, scope: !7065)
!7065 = !DILexicalBlockFile(scope: !7026, file: !977, discriminator: 2)
!7066 = !DILocation(line: 316, column: 9, scope: !7065)
!7067 = distinct !{!7067, !7068}
!7068 = !DILocation(line: 316, column: 9, scope: !7015)
!7069 = !DILocation(line: 319, column: 59, scope: !7070)
!7070 = !DILexicalBlockFile(scope: !7022, file: !977, discriminator: 2)
!7071 = !DILocation(line: 320, column: 1, scope: !6994)
!7072 = distinct !DISubprogram(name: "init_get_bits", scope: !2193, file: !2193, line: 615, type: !7073, isLocal: true, isDefinition: true, scopeLine: 617, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!7073 = !DISubroutineType(types: !7074)
!7074 = !{!971, !2722, !1547, !971}
!7075 = !DILocalVariable(name: "s", arg: 1, scope: !7072, file: !2193, line: 615, type: !2722)
!7076 = !DILocation(line: 615, column: 48, scope: !7072)
!7077 = !DILocalVariable(name: "buffer", arg: 2, scope: !7072, file: !2193, line: 615, type: !1547)
!7078 = !DILocation(line: 615, column: 66, scope: !7072)
!7079 = !DILocalVariable(name: "bit_size", arg: 3, scope: !7072, file: !2193, line: 616, type: !971)
!7080 = !DILocation(line: 616, column: 37, scope: !7072)
!7081 = !DILocalVariable(name: "buffer_size", scope: !7072, file: !2193, line: 618, type: !971)
!7082 = !DILocation(line: 618, column: 9, scope: !7072)
!7083 = !DILocalVariable(name: "ret", scope: !7072, file: !2193, line: 619, type: !971)
!7084 = !DILocation(line: 619, column: 9, scope: !7072)
!7085 = !DILocation(line: 621, column: 9, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7072, file: !2193, line: 621, column: 9)
!7087 = !DILocation(line: 621, column: 18, scope: !7086)
!7088 = !DILocation(line: 621, column: 64, scope: !7086)
!7089 = !DILocation(line: 621, column: 67, scope: !7090)
!7090 = !DILexicalBlockFile(scope: !7086, file: !2193, discriminator: 1)
!7091 = !DILocation(line: 621, column: 76, scope: !7090)
!7092 = !DILocation(line: 621, column: 80, scope: !7090)
!7093 = !DILocation(line: 621, column: 84, scope: !7094)
!7094 = !DILexicalBlockFile(scope: !7086, file: !2193, discriminator: 2)
!7095 = !DILocation(line: 621, column: 9, scope: !7094)
!7096 = !DILocation(line: 622, column: 18, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7086, file: !2193, line: 621, column: 92)
!7098 = !DILocation(line: 623, column: 16, scope: !7097)
!7099 = !DILocation(line: 624, column: 13, scope: !7097)
!7100 = !DILocation(line: 625, column: 5, scope: !7097)
!7101 = !DILocation(line: 627, column: 20, scope: !7072)
!7102 = !DILocation(line: 627, column: 29, scope: !7072)
!7103 = !DILocation(line: 627, column: 34, scope: !7072)
!7104 = !DILocation(line: 627, column: 17, scope: !7072)
!7105 = !DILocation(line: 629, column: 17, scope: !7072)
!7106 = !DILocation(line: 629, column: 5, scope: !7072)
!7107 = !DILocation(line: 629, column: 8, scope: !7072)
!7108 = !DILocation(line: 629, column: 15, scope: !7072)
!7109 = !DILocation(line: 630, column: 23, scope: !7072)
!7110 = !DILocation(line: 630, column: 5, scope: !7072)
!7111 = !DILocation(line: 630, column: 8, scope: !7072)
!7112 = !DILocation(line: 630, column: 21, scope: !7072)
!7113 = !DILocation(line: 631, column: 29, scope: !7072)
!7114 = !DILocation(line: 631, column: 38, scope: !7072)
!7115 = !DILocation(line: 631, column: 5, scope: !7072)
!7116 = !DILocation(line: 631, column: 8, scope: !7072)
!7117 = !DILocation(line: 631, column: 27, scope: !7072)
!7118 = !DILocation(line: 632, column: 21, scope: !7072)
!7119 = !DILocation(line: 632, column: 30, scope: !7072)
!7120 = !DILocation(line: 632, column: 28, scope: !7072)
!7121 = !DILocation(line: 632, column: 5, scope: !7072)
!7122 = !DILocation(line: 632, column: 8, scope: !7072)
!7123 = !DILocation(line: 632, column: 19, scope: !7072)
!7124 = !DILocation(line: 633, column: 5, scope: !7072)
!7125 = !DILocation(line: 633, column: 8, scope: !7072)
!7126 = !DILocation(line: 633, column: 14, scope: !7072)
!7127 = !DILocation(line: 639, column: 12, scope: !7072)
!7128 = !DILocation(line: 639, column: 5, scope: !7072)
!7129 = distinct !DISubprogram(name: "get_bits_count", scope: !2193, file: !2193, line: 219, type: !7130, isLocal: true, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!7130 = !DISubroutineType(types: !7131)
!7131 = !{!971, !7132}
!7132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7133, size: 64, align: 64)
!7133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2192)
!7134 = !DILocalVariable(name: "s", arg: 1, scope: !7129, file: !2193, line: 219, type: !7132)
!7135 = !DILocation(line: 219, column: 55, scope: !7129)
!7136 = !DILocation(line: 224, column: 12, scope: !7129)
!7137 = !DILocation(line: 224, column: 15, scope: !7129)
!7138 = !DILocation(line: 224, column: 5, scope: !7129)
!7139 = distinct !DISubprogram(name: "get_bits_long", scope: !2193, file: !2193, line: 531, type: !7140, isLocal: true, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!7140 = !DISubroutineType(types: !7141)
!7141 = !{!970, !2722, !971}
!7142 = !DILocalVariable(name: "s", arg: 1, scope: !7139, file: !2193, line: 531, type: !2722)
!7143 = !DILocation(line: 531, column: 57, scope: !7139)
!7144 = !DILocalVariable(name: "n", arg: 2, scope: !7139, file: !2193, line: 531, type: !971)
!7145 = !DILocation(line: 531, column: 64, scope: !7139)
!7146 = !DILocation(line: 534, column: 10, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7139, file: !2193, line: 534, column: 9)
!7148 = !DILocation(line: 534, column: 9, scope: !7139)
!7149 = !DILocation(line: 535, column: 9, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7147, file: !2193, line: 534, column: 13)
!7151 = !DILocation(line: 540, column: 16, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7147, file: !2193, line: 540, column: 16)
!7153 = !DILocation(line: 540, column: 18, scope: !7152)
!7154 = !DILocation(line: 540, column: 16, scope: !7147)
!7155 = !DILocation(line: 541, column: 25, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7152, file: !2193, line: 540, column: 25)
!7157 = !DILocation(line: 541, column: 28, scope: !7156)
!7158 = !DILocation(line: 541, column: 16, scope: !7156)
!7159 = !DILocation(line: 541, column: 9, scope: !7156)
!7160 = !DILocalVariable(name: "ret", scope: !7161, file: !2193, line: 547, type: !970)
!7161 = distinct !DILexicalBlock(scope: !7152, file: !2193, line: 542, column: 12)
!7162 = !DILocation(line: 547, column: 18, scope: !7161)
!7163 = !DILocation(line: 547, column: 33, scope: !7161)
!7164 = !DILocation(line: 547, column: 24, scope: !7161)
!7165 = !DILocation(line: 547, column: 44, scope: !7161)
!7166 = !DILocation(line: 547, column: 46, scope: !7161)
!7167 = !DILocation(line: 547, column: 40, scope: !7161)
!7168 = !DILocation(line: 548, column: 16, scope: !7161)
!7169 = !DILocation(line: 548, column: 31, scope: !7161)
!7170 = !DILocation(line: 548, column: 34, scope: !7161)
!7171 = !DILocation(line: 548, column: 36, scope: !7161)
!7172 = !DILocation(line: 548, column: 22, scope: !7161)
!7173 = !DILocation(line: 548, column: 20, scope: !7161)
!7174 = !DILocation(line: 548, column: 9, scope: !7161)
!7175 = !DILocation(line: 552, column: 1, scope: !7139)
!7176 = distinct !DISubprogram(name: "get_bits", scope: !2193, file: !2193, line: 381, type: !7140, isLocal: true, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!7177 = !DILocation(line: 66, column: 98, scope: !3679, inlinedAt: !7178)
!7178 = distinct !DILocation(line: 401, column: 16, scope: !7176)
!7179 = !DILocalVariable(name: "s", arg: 1, scope: !7176, file: !2193, line: 381, type: !2722)
!7180 = !DILocation(line: 381, column: 52, scope: !7176)
!7181 = !DILocalVariable(name: "n", arg: 2, scope: !7176, file: !2193, line: 381, type: !971)
!7182 = !DILocation(line: 381, column: 59, scope: !7176)
!7183 = !DILocalVariable(name: "tmp", scope: !7176, file: !2193, line: 383, type: !971)
!7184 = !DILocation(line: 383, column: 18, scope: !7176)
!7185 = !DILocalVariable(name: "re_index", scope: !7176, file: !2193, line: 399, type: !970)
!7186 = !DILocation(line: 399, column: 18, scope: !7176)
!7187 = !DILocation(line: 399, column: 30, scope: !7176)
!7188 = !DILocation(line: 399, column: 34, scope: !7176)
!7189 = !DILocalVariable(name: "re_cache", scope: !7176, file: !2193, line: 399, type: !970)
!7190 = !DILocation(line: 399, column: 78, scope: !7176)
!7191 = !DILocalVariable(name: "re_size_plus8", scope: !7176, file: !2193, line: 399, type: !970)
!7192 = !DILocation(line: 399, column: 101, scope: !7176)
!7193 = !DILocation(line: 399, column: 118, scope: !7176)
!7194 = !DILocation(line: 399, column: 122, scope: !7176)
!7195 = !DILocation(line: 401, column: 60, scope: !7176)
!7196 = !DILocation(line: 401, column: 64, scope: !7176)
!7197 = !DILocation(line: 401, column: 74, scope: !7176)
!7198 = !DILocation(line: 401, column: 83, scope: !7176)
!7199 = !DILocation(line: 401, column: 71, scope: !7176)
!7200 = !DILocation(line: 401, column: 92, scope: !7176)
!7201 = !DILocation(line: 401, column: 16, scope: !7176)
!7202 = !DILocation(line: 68, column: 16, scope: !3679, inlinedAt: !7178)
!7203 = !DILocation(line: 68, column: 19, scope: !3679, inlinedAt: !7178)
!7204 = !DILocation(line: 68, column: 24, scope: !3679, inlinedAt: !7178)
!7205 = !DILocation(line: 68, column: 38, scope: !3679, inlinedAt: !7178)
!7206 = !DILocation(line: 68, column: 41, scope: !3679, inlinedAt: !7178)
!7207 = !DILocation(line: 68, column: 46, scope: !3679, inlinedAt: !7178)
!7208 = !DILocation(line: 68, column: 34, scope: !3679, inlinedAt: !7178)
!7209 = !DILocation(line: 68, column: 57, scope: !3679, inlinedAt: !7178)
!7210 = !DILocation(line: 68, column: 69, scope: !3679, inlinedAt: !7178)
!7211 = !DILocation(line: 68, column: 72, scope: !3679, inlinedAt: !7178)
!7212 = !DILocation(line: 68, column: 79, scope: !3679, inlinedAt: !7178)
!7213 = !DILocation(line: 68, column: 84, scope: !3679, inlinedAt: !7178)
!7214 = !DILocation(line: 68, column: 99, scope: !3679, inlinedAt: !7178)
!7215 = !DILocation(line: 68, column: 102, scope: !3679, inlinedAt: !7178)
!7216 = !DILocation(line: 68, column: 109, scope: !3679, inlinedAt: !7178)
!7217 = !DILocation(line: 68, column: 114, scope: !3679, inlinedAt: !7178)
!7218 = !DILocation(line: 68, column: 94, scope: !3679, inlinedAt: !7178)
!7219 = !DILocation(line: 68, column: 63, scope: !3679, inlinedAt: !7178)
!7220 = !DILocation(line: 401, column: 100, scope: !7176)
!7221 = !DILocation(line: 401, column: 109, scope: !7176)
!7222 = !DILocation(line: 401, column: 96, scope: !7176)
!7223 = !DILocation(line: 401, column: 14, scope: !7176)
!7224 = !DILocation(line: 402, column: 21, scope: !7176)
!7225 = !DILocation(line: 402, column: 31, scope: !7176)
!7226 = !DILocation(line: 402, column: 11, scope: !7176)
!7227 = !DILocation(line: 402, column: 9, scope: !7176)
!7228 = !DILocation(line: 403, column: 18, scope: !7176)
!7229 = !DILocation(line: 403, column: 36, scope: !7176)
!7230 = !DILocation(line: 403, column: 48, scope: !7176)
!7231 = !DILocation(line: 403, column: 45, scope: !7176)
!7232 = !DILocation(line: 403, column: 33, scope: !7176)
!7233 = !DILocation(line: 403, column: 17, scope: !7176)
!7234 = !DILocation(line: 403, column: 55, scope: !7235)
!7235 = !DILexicalBlockFile(scope: !7176, file: !2193, discriminator: 1)
!7236 = !DILocation(line: 403, column: 67, scope: !7235)
!7237 = !DILocation(line: 403, column: 64, scope: !7235)
!7238 = !DILocation(line: 403, column: 17, scope: !7235)
!7239 = !DILocation(line: 403, column: 74, scope: !7240)
!7240 = !DILexicalBlockFile(scope: !7176, file: !2193, discriminator: 2)
!7241 = !DILocation(line: 403, column: 17, scope: !7240)
!7242 = !DILocation(line: 403, column: 17, scope: !7243)
!7243 = !DILexicalBlockFile(scope: !7176, file: !2193, discriminator: 3)
!7244 = !DILocation(line: 403, column: 14, scope: !7243)
!7245 = !DILocation(line: 404, column: 18, scope: !7176)
!7246 = !DILocation(line: 404, column: 6, scope: !7176)
!7247 = !DILocation(line: 404, column: 10, scope: !7176)
!7248 = !DILocation(line: 404, column: 16, scope: !7176)
!7249 = !DILocation(line: 406, column: 12, scope: !7176)
!7250 = !DILocation(line: 406, column: 5, scope: !7176)
!7251 = distinct !DISubprogram(name: "NEG_USR32", scope: !7252, file: !7252, line: 124, type: !7253, isLocal: true, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!7252 = !DIFile(filename: "libavcodec/x86/mathops.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7253 = !DISubroutineType(types: !7254)
!7254 = !{!968, !968, !1209}
!7255 = !DILocalVariable(name: "a", arg: 1, scope: !7251, file: !7252, line: 124, type: !968)
!7256 = !DILocation(line: 124, column: 43, scope: !7251)
!7257 = !DILocalVariable(name: "s", arg: 2, scope: !7251, file: !7252, line: 124, type: !1209)
!7258 = !DILocation(line: 124, column: 53, scope: !7251)
!7259 = !DILocation(line: 125, column: 5, scope: !7251)
!7260 = !DILocation(line: 127, column: 29, scope: !7251)
!7261 = !DILocation(line: 127, column: 28, scope: !7251)
!7262 = !DILocation(line: 127, column: 18, scope: !7251)
!7263 = !{i32 179456, i32 179470}
!7264 = !DILocation(line: 129, column: 12, scope: !7251)
!7265 = !DILocation(line: 129, column: 5, scope: !7251)
!7266 = distinct !DISubprogram(name: "get_bits1", scope: !2193, file: !2193, line: 487, type: !7267, isLocal: true, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!7267 = !DISubroutineType(types: !7268)
!7268 = !{!970, !2722}
!7269 = !DILocalVariable(name: "s", arg: 1, scope: !7266, file: !2193, line: 487, type: !2722)
!7270 = !DILocation(line: 487, column: 53, scope: !7266)
!7271 = !DILocalVariable(name: "index", scope: !7266, file: !2193, line: 499, type: !970)
!7272 = !DILocation(line: 499, column: 18, scope: !7266)
!7273 = !DILocation(line: 499, column: 26, scope: !7266)
!7274 = !DILocation(line: 499, column: 29, scope: !7266)
!7275 = !DILocalVariable(name: "result", scope: !7266, file: !2193, line: 500, type: !972)
!7276 = !DILocation(line: 500, column: 13, scope: !7266)
!7277 = !DILocation(line: 500, column: 32, scope: !7266)
!7278 = !DILocation(line: 500, column: 38, scope: !7266)
!7279 = !DILocation(line: 500, column: 22, scope: !7266)
!7280 = !DILocation(line: 500, column: 25, scope: !7266)
!7281 = !DILocation(line: 505, column: 16, scope: !7266)
!7282 = !DILocation(line: 505, column: 22, scope: !7266)
!7283 = !DILocation(line: 505, column: 12, scope: !7266)
!7284 = !DILocation(line: 506, column: 12, scope: !7266)
!7285 = !DILocation(line: 509, column: 9, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7266, file: !2193, line: 509, column: 9)
!7287 = !DILocation(line: 509, column: 12, scope: !7286)
!7288 = !DILocation(line: 509, column: 20, scope: !7286)
!7289 = !DILocation(line: 509, column: 23, scope: !7286)
!7290 = !DILocation(line: 509, column: 18, scope: !7286)
!7291 = !DILocation(line: 509, column: 9, scope: !7266)
!7292 = !DILocation(line: 511, column: 14, scope: !7286)
!7293 = !DILocation(line: 511, column: 9, scope: !7286)
!7294 = !DILocation(line: 512, column: 16, scope: !7266)
!7295 = !DILocation(line: 512, column: 5, scope: !7266)
!7296 = !DILocation(line: 512, column: 8, scope: !7266)
!7297 = !DILocation(line: 512, column: 14, scope: !7266)
!7298 = !DILocation(line: 514, column: 12, scope: !7266)
!7299 = !DILocation(line: 514, column: 5, scope: !7266)
!7300 = distinct !DISubprogram(name: "vc1_decode_sprites", scope: !977, file: !977, line: 272, type: !7301, isLocal: true, isDefinition: true, scopeLine: 273, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!7301 = !DISubroutineType(types: !7302)
!7302 = !{!971, !2655, !2722}
!7303 = !DILocalVariable(name: "v", arg: 1, scope: !7300, file: !977, line: 272, type: !2655)
!7304 = !DILocation(line: 272, column: 43, scope: !7300)
!7305 = !DILocalVariable(name: "gb", arg: 2, scope: !7300, file: !977, line: 272, type: !2722)
!7306 = !DILocation(line: 272, column: 61, scope: !7300)
!7307 = !DILocalVariable(name: "ret", scope: !7300, file: !977, line: 274, type: !971)
!7308 = !DILocation(line: 274, column: 9, scope: !7300)
!7309 = !DILocalVariable(name: "s", scope: !7300, file: !977, line: 275, type: !3015)
!7310 = !DILocation(line: 275, column: 21, scope: !7300)
!7311 = !DILocation(line: 275, column: 26, scope: !7300)
!7312 = !DILocation(line: 275, column: 29, scope: !7300)
!7313 = !DILocalVariable(name: "avctx", scope: !7300, file: !977, line: 276, type: !1104)
!7314 = !DILocation(line: 276, column: 21, scope: !7300)
!7315 = !DILocation(line: 276, column: 29, scope: !7300)
!7316 = !DILocation(line: 276, column: 32, scope: !7300)
!7317 = !DILocalVariable(name: "sd", scope: !7300, file: !977, line: 277, type: !7318)
!7318 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpriteData", file: !977, line: 63, baseType: !7319)
!7319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpriteData", file: !977, line: 46, size: 1376, align: 32, elements: !7320)
!7320 = !{!7321, !7325, !7326, !7327, !7328, !7329, !7333}
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "coefs", scope: !7319, file: !977, line: 58, baseType: !7322, size: 448, align: 32)
!7322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 448, align: 32, elements: !7323)
!7323 = !{!1639, !7324}
!7324 = !DISubrange(count: 7)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "effect_type", scope: !7319, file: !977, line: 60, baseType: !971, size: 32, align: 32, offset: 448)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "effect_flag", scope: !7319, file: !977, line: 60, baseType: !971, size: 32, align: 32, offset: 480)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "effect_pcount1", scope: !7319, file: !977, line: 61, baseType: !971, size: 32, align: 32, offset: 512)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "effect_pcount2", scope: !7319, file: !977, line: 61, baseType: !971, size: 32, align: 32, offset: 544)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "effect_params1", scope: !7319, file: !977, line: 62, baseType: !7330, size: 480, align: 32, offset: 576)
!7330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 480, align: 32, elements: !7331)
!7331 = !{!7332}
!7332 = !DISubrange(count: 15)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "effect_params2", scope: !7319, file: !977, line: 62, baseType: !7334, size: 320, align: 32, offset: 1056)
!7334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 320, align: 32, elements: !7335)
!7335 = !{!7336}
!7336 = !DISubrange(count: 10)
!7337 = !DILocation(line: 277, column: 16, scope: !7300)
!7338 = !DILocation(line: 279, column: 5, scope: !7300)
!7339 = !DILocation(line: 281, column: 29, scope: !7300)
!7340 = !DILocation(line: 281, column: 32, scope: !7300)
!7341 = !DILocation(line: 281, column: 11, scope: !7300)
!7342 = !DILocation(line: 281, column: 9, scope: !7300)
!7343 = !DILocation(line: 282, column: 9, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7300, file: !977, line: 282, column: 9)
!7345 = !DILocation(line: 282, column: 13, scope: !7344)
!7346 = !DILocation(line: 282, column: 9, scope: !7300)
!7347 = !DILocation(line: 283, column: 16, scope: !7344)
!7348 = !DILocation(line: 283, column: 9, scope: !7344)
!7349 = !DILocation(line: 285, column: 10, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7300, file: !977, line: 285, column: 9)
!7351 = !DILocation(line: 285, column: 13, scope: !7350)
!7352 = !DILocation(line: 285, column: 29, scope: !7350)
!7353 = !DILocation(line: 285, column: 31, scope: !7350)
!7354 = !DILocation(line: 285, column: 35, scope: !7355)
!7355 = !DILexicalBlockFile(scope: !7350, file: !977, discriminator: 1)
!7356 = !DILocation(line: 285, column: 38, scope: !7355)
!7357 = !DILocation(line: 285, column: 54, scope: !7355)
!7358 = !DILocation(line: 285, column: 57, scope: !7355)
!7359 = !DILocation(line: 285, column: 9, scope: !7355)
!7360 = !DILocation(line: 286, column: 16, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7350, file: !977, line: 285, column: 66)
!7362 = !DILocation(line: 286, column: 9, scope: !7361)
!7363 = !DILocation(line: 287, column: 9, scope: !7361)
!7364 = !DILocation(line: 290, column: 9, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7300, file: !977, line: 290, column: 9)
!7366 = !DILocation(line: 290, column: 12, scope: !7365)
!7367 = !DILocation(line: 290, column: 24, scope: !7365)
!7368 = !DILocation(line: 290, column: 29, scope: !7369)
!7369 = !DILexicalBlockFile(scope: !7365, file: !977, discriminator: 1)
!7370 = !DILocation(line: 290, column: 32, scope: !7369)
!7371 = !DILocation(line: 290, column: 49, scope: !7369)
!7372 = !DILocation(line: 290, column: 53, scope: !7373)
!7373 = !DILexicalBlockFile(scope: !7365, file: !977, discriminator: 2)
!7374 = !DILocation(line: 290, column: 56, scope: !7373)
!7375 = !DILocation(line: 290, column: 69, scope: !7373)
!7376 = !DILocation(line: 290, column: 72, scope: !7373)
!7377 = !DILocation(line: 290, column: 9, scope: !7373)
!7378 = !DILocation(line: 291, column: 16, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7365, file: !977, line: 290, column: 82)
!7380 = !DILocation(line: 291, column: 9, scope: !7379)
!7381 = !DILocation(line: 292, column: 9, scope: !7379)
!7382 = !DILocation(line: 292, column: 12, scope: !7379)
!7383 = !DILocation(line: 292, column: 24, scope: !7379)
!7384 = !DILocation(line: 293, column: 5, scope: !7379)
!7385 = !DILocation(line: 295, column: 20, scope: !7300)
!7386 = !DILocation(line: 295, column: 23, scope: !7300)
!7387 = !DILocation(line: 295, column: 5, scope: !7300)
!7388 = !DILocation(line: 296, column: 30, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7300, file: !977, line: 296, column: 9)
!7390 = !DILocation(line: 296, column: 37, scope: !7389)
!7391 = !DILocation(line: 296, column: 40, scope: !7389)
!7392 = !DILocation(line: 296, column: 16, scope: !7389)
!7393 = !DILocation(line: 296, column: 14, scope: !7389)
!7394 = !DILocation(line: 296, column: 65, scope: !7389)
!7395 = !DILocation(line: 296, column: 9, scope: !7300)
!7396 = !DILocation(line: 297, column: 16, scope: !7389)
!7397 = !DILocation(line: 297, column: 9, scope: !7389)
!7398 = !DILocation(line: 299, column: 22, scope: !7300)
!7399 = !DILocation(line: 299, column: 5, scope: !7300)
!7400 = !DILocation(line: 301, column: 5, scope: !7300)
!7401 = !DILocation(line: 302, column: 1, scope: !7300)
!7402 = distinct !DISubprogram(name: "vc1_parse_sprites", scope: !977, file: !977, line: 104, type: !7403, isLocal: true, isDefinition: true, scopeLine: 105, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!7403 = !DISubroutineType(types: !7404)
!7404 = !{!971, !2655, !2722, !7405}
!7405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7318, size: 64, align: 64)
!7406 = !DILocalVariable(name: "v", arg: 1, scope: !7402, file: !977, line: 104, type: !2655)
!7407 = !DILocation(line: 104, column: 42, scope: !7402)
!7408 = !DILocalVariable(name: "gb", arg: 2, scope: !7402, file: !977, line: 104, type: !2722)
!7409 = !DILocation(line: 104, column: 60, scope: !7402)
!7410 = !DILocalVariable(name: "sd", arg: 3, scope: !7402, file: !977, line: 104, type: !7405)
!7411 = !DILocation(line: 104, column: 76, scope: !7402)
!7412 = !DILocalVariable(name: "avctx", scope: !7402, file: !977, line: 106, type: !1104)
!7413 = !DILocation(line: 106, column: 21, scope: !7402)
!7414 = !DILocation(line: 106, column: 29, scope: !7402)
!7415 = !DILocation(line: 106, column: 32, scope: !7402)
!7416 = !DILocation(line: 106, column: 34, scope: !7402)
!7417 = !DILocalVariable(name: "sprite", scope: !7402, file: !977, line: 107, type: !971)
!7418 = !DILocation(line: 107, column: 9, scope: !7402)
!7419 = !DILocalVariable(name: "i", scope: !7402, file: !977, line: 107, type: !971)
!7420 = !DILocation(line: 107, column: 17, scope: !7402)
!7421 = !DILocation(line: 109, column: 17, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7402, file: !977, line: 109, column: 5)
!7423 = !DILocation(line: 109, column: 10, scope: !7422)
!7424 = !DILocation(line: 109, column: 22, scope: !7425)
!7425 = !DILexicalBlockFile(scope: !7426, file: !977, discriminator: 1)
!7426 = distinct !DILexicalBlock(scope: !7422, file: !977, line: 109, column: 5)
!7427 = !DILocation(line: 109, column: 32, scope: !7425)
!7428 = !DILocation(line: 109, column: 35, scope: !7425)
!7429 = !DILocation(line: 109, column: 29, scope: !7425)
!7430 = !DILocation(line: 109, column: 5, scope: !7425)
!7431 = !DILocation(line: 110, column: 36, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7426, file: !977, line: 109, column: 58)
!7433 = !DILocation(line: 110, column: 50, scope: !7432)
!7434 = !DILocation(line: 110, column: 40, scope: !7432)
!7435 = !DILocation(line: 110, column: 44, scope: !7432)
!7436 = !DILocation(line: 110, column: 9, scope: !7432)
!7437 = !DILocation(line: 111, column: 23, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7432, file: !977, line: 111, column: 13)
!7439 = !DILocation(line: 111, column: 13, scope: !7438)
!7440 = !DILocation(line: 111, column: 17, scope: !7438)
!7441 = !DILocation(line: 111, column: 34, scope: !7438)
!7442 = !DILocation(line: 111, column: 47, scope: !7443)
!7443 = !DILexicalBlockFile(scope: !7438, file: !977, discriminator: 1)
!7444 = !DILocation(line: 111, column: 37, scope: !7443)
!7445 = !DILocation(line: 111, column: 41, scope: !7443)
!7446 = !DILocation(line: 111, column: 13, scope: !7443)
!7447 = !DILocation(line: 112, column: 35, scope: !7438)
!7448 = !DILocation(line: 112, column: 13, scope: !7438)
!7449 = !DILocation(line: 113, column: 16, scope: !7432)
!7450 = !DILocation(line: 113, column: 27, scope: !7432)
!7451 = !DILocation(line: 113, column: 9, scope: !7432)
!7452 = !DILocation(line: 114, column: 16, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7432, file: !977, line: 114, column: 9)
!7454 = !DILocation(line: 114, column: 14, scope: !7453)
!7455 = !DILocation(line: 114, column: 21, scope: !7456)
!7456 = !DILexicalBlockFile(scope: !7457, file: !977, discriminator: 1)
!7457 = distinct !DILexicalBlock(scope: !7453, file: !977, line: 114, column: 9)
!7458 = !DILocation(line: 114, column: 23, scope: !7456)
!7459 = !DILocation(line: 114, column: 9, scope: !7456)
!7460 = !DILocation(line: 115, column: 20, scope: !7457)
!7461 = !DILocation(line: 116, column: 38, scope: !7457)
!7462 = !DILocation(line: 116, column: 20, scope: !7457)
!7463 = !DILocation(line: 116, column: 30, scope: !7457)
!7464 = !DILocation(line: 116, column: 24, scope: !7457)
!7465 = !DILocation(line: 116, column: 41, scope: !7457)
!7466 = !DILocation(line: 117, column: 43, scope: !7457)
!7467 = !DILocation(line: 117, column: 25, scope: !7457)
!7468 = !DILocation(line: 117, column: 35, scope: !7457)
!7469 = !DILocation(line: 117, column: 29, scope: !7457)
!7470 = !DILocation(line: 117, column: 21, scope: !7457)
!7471 = !DILocation(line: 117, column: 47, scope: !7457)
!7472 = !DILocation(line: 117, column: 57, scope: !7457)
!7473 = !DILocation(line: 117, column: 64, scope: !7457)
!7474 = !DILocation(line: 115, column: 13, scope: !7457)
!7475 = !DILocation(line: 114, column: 29, scope: !7476)
!7476 = !DILexicalBlockFile(scope: !7457, file: !977, discriminator: 2)
!7477 = !DILocation(line: 114, column: 9, scope: !7476)
!7478 = distinct !{!7478, !7479}
!7479 = !DILocation(line: 114, column: 9, scope: !7432)
!7480 = !DILocation(line: 118, column: 16, scope: !7432)
!7481 = !DILocation(line: 118, column: 9, scope: !7432)
!7482 = !DILocation(line: 119, column: 5, scope: !7432)
!7483 = !DILocation(line: 109, column: 54, scope: !7484)
!7484 = !DILexicalBlockFile(scope: !7426, file: !977, discriminator: 2)
!7485 = !DILocation(line: 109, column: 5, scope: !7484)
!7486 = distinct !{!7486, !7487}
!7487 = !DILocation(line: 109, column: 5, scope: !7402)
!7488 = !DILocation(line: 121, column: 15, scope: !7402)
!7489 = !DILocation(line: 121, column: 5, scope: !7402)
!7490 = !DILocation(line: 122, column: 41, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7402, file: !977, line: 122, column: 9)
!7492 = !DILocation(line: 122, column: 27, scope: !7491)
!7493 = !DILocation(line: 122, column: 9, scope: !7491)
!7494 = !DILocation(line: 122, column: 13, scope: !7491)
!7495 = !DILocation(line: 122, column: 25, scope: !7491)
!7496 = !DILocation(line: 122, column: 9, scope: !7402)
!7497 = !DILocation(line: 123, column: 47, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7491, file: !977, line: 122, column: 50)
!7499 = !DILocation(line: 123, column: 38, scope: !7498)
!7500 = !DILocation(line: 123, column: 17, scope: !7498)
!7501 = !DILocation(line: 123, column: 21, scope: !7498)
!7502 = !DILocation(line: 123, column: 36, scope: !7498)
!7503 = !DILocation(line: 123, column: 9, scope: !7498)
!7504 = !DILocation(line: 125, column: 40, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7498, file: !977, line: 123, column: 55)
!7506 = !DILocation(line: 125, column: 44, scope: !7505)
!7507 = !DILocation(line: 125, column: 48, scope: !7505)
!7508 = !DILocation(line: 125, column: 13, scope: !7505)
!7509 = !DILocation(line: 126, column: 13, scope: !7505)
!7510 = !DILocation(line: 128, column: 40, scope: !7505)
!7511 = !DILocation(line: 128, column: 44, scope: !7505)
!7512 = !DILocation(line: 128, column: 48, scope: !7505)
!7513 = !DILocation(line: 128, column: 13, scope: !7505)
!7514 = !DILocation(line: 129, column: 40, scope: !7505)
!7515 = !DILocation(line: 129, column: 44, scope: !7505)
!7516 = !DILocation(line: 129, column: 48, scope: !7505)
!7517 = !DILocation(line: 129, column: 63, scope: !7505)
!7518 = !DILocation(line: 129, column: 13, scope: !7505)
!7519 = !DILocation(line: 130, column: 13, scope: !7505)
!7520 = !DILocation(line: 132, column: 20, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7505, file: !977, line: 132, column: 13)
!7522 = !DILocation(line: 132, column: 18, scope: !7521)
!7523 = !DILocation(line: 132, column: 25, scope: !7524)
!7524 = !DILexicalBlockFile(scope: !7525, file: !977, discriminator: 1)
!7525 = distinct !DILexicalBlock(scope: !7521, file: !977, line: 132, column: 13)
!7526 = !DILocation(line: 132, column: 29, scope: !7524)
!7527 = !DILocation(line: 132, column: 33, scope: !7524)
!7528 = !DILocation(line: 132, column: 27, scope: !7524)
!7529 = !DILocation(line: 132, column: 13, scope: !7524)
!7530 = !DILocation(line: 133, column: 52, scope: !7525)
!7531 = !DILocation(line: 133, column: 41, scope: !7525)
!7532 = !DILocation(line: 133, column: 36, scope: !7525)
!7533 = !DILocation(line: 133, column: 17, scope: !7525)
!7534 = !DILocation(line: 133, column: 21, scope: !7525)
!7535 = !DILocation(line: 133, column: 39, scope: !7525)
!7536 = !DILocation(line: 132, column: 50, scope: !7537)
!7537 = !DILexicalBlockFile(scope: !7525, file: !977, discriminator: 2)
!7538 = !DILocation(line: 132, column: 13, scope: !7537)
!7539 = distinct !{!7539, !7540}
!7540 = !DILocation(line: 132, column: 13, scope: !7505)
!7541 = !DILocation(line: 134, column: 9, scope: !7505)
!7542 = !DILocation(line: 135, column: 13, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7498, file: !977, line: 135, column: 13)
!7544 = !DILocation(line: 135, column: 17, scope: !7543)
!7545 = !DILocation(line: 135, column: 29, scope: !7543)
!7546 = !DILocation(line: 135, column: 35, scope: !7543)
!7547 = !DILocation(line: 135, column: 38, scope: !7548)
!7548 = !DILexicalBlockFile(scope: !7543, file: !977, discriminator: 1)
!7549 = !DILocation(line: 135, column: 42, scope: !7548)
!7550 = !DILocation(line: 135, column: 63, scope: !7548)
!7551 = !DILocation(line: 135, column: 67, scope: !7548)
!7552 = !DILocation(line: 135, column: 60, scope: !7548)
!7553 = !DILocation(line: 135, column: 13, scope: !7548)
!7554 = !DILocation(line: 137, column: 20, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7543, file: !977, line: 135, column: 80)
!7556 = !DILocation(line: 137, column: 55, scope: !7555)
!7557 = !DILocation(line: 137, column: 59, scope: !7555)
!7558 = !DILocation(line: 137, column: 13, scope: !7555)
!7559 = !DILocation(line: 138, column: 20, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7555, file: !977, line: 138, column: 13)
!7561 = !DILocation(line: 138, column: 18, scope: !7560)
!7562 = !DILocation(line: 138, column: 25, scope: !7563)
!7563 = !DILexicalBlockFile(scope: !7564, file: !977, discriminator: 1)
!7564 = distinct !DILexicalBlock(scope: !7560, file: !977, line: 138, column: 13)
!7565 = !DILocation(line: 138, column: 29, scope: !7563)
!7566 = !DILocation(line: 138, column: 33, scope: !7563)
!7567 = !DILocation(line: 138, column: 27, scope: !7563)
!7568 = !DILocation(line: 138, column: 13, scope: !7563)
!7569 = !DILocation(line: 139, column: 24, scope: !7564)
!7570 = !DILocation(line: 140, column: 43, scope: !7564)
!7571 = !DILocation(line: 140, column: 24, scope: !7564)
!7572 = !DILocation(line: 140, column: 28, scope: !7564)
!7573 = !DILocation(line: 140, column: 46, scope: !7564)
!7574 = !DILocation(line: 141, column: 48, scope: !7564)
!7575 = !DILocation(line: 141, column: 29, scope: !7564)
!7576 = !DILocation(line: 141, column: 33, scope: !7564)
!7577 = !DILocation(line: 141, column: 25, scope: !7564)
!7578 = !DILocation(line: 141, column: 52, scope: !7564)
!7579 = !DILocation(line: 141, column: 62, scope: !7564)
!7580 = !DILocation(line: 141, column: 69, scope: !7564)
!7581 = !DILocation(line: 139, column: 17, scope: !7564)
!7582 = !DILocation(line: 138, column: 50, scope: !7583)
!7583 = !DILexicalBlockFile(scope: !7564, file: !977, discriminator: 2)
!7584 = !DILocation(line: 138, column: 13, scope: !7583)
!7585 = distinct !{!7585, !7586}
!7586 = !DILocation(line: 138, column: 13, scope: !7555)
!7587 = !DILocation(line: 142, column: 20, scope: !7555)
!7588 = !DILocation(line: 142, column: 13, scope: !7555)
!7589 = !DILocation(line: 143, column: 9, scope: !7555)
!7590 = !DILocation(line: 145, column: 39, scope: !7498)
!7591 = !DILocation(line: 145, column: 30, scope: !7498)
!7592 = !DILocation(line: 145, column: 9, scope: !7498)
!7593 = !DILocation(line: 145, column: 13, scope: !7498)
!7594 = !DILocation(line: 145, column: 28, scope: !7498)
!7595 = !DILocation(line: 146, column: 13, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7498, file: !977, line: 146, column: 13)
!7597 = !DILocation(line: 146, column: 17, scope: !7596)
!7598 = !DILocation(line: 146, column: 32, scope: !7596)
!7599 = !DILocation(line: 146, column: 13, scope: !7498)
!7600 = !DILocation(line: 147, column: 20, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7596, file: !977, line: 146, column: 38)
!7602 = !DILocation(line: 147, column: 13, scope: !7601)
!7603 = !DILocation(line: 148, column: 13, scope: !7601)
!7604 = !DILocation(line: 149, column: 20, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7596, file: !977, line: 149, column: 20)
!7606 = !DILocation(line: 149, column: 24, scope: !7605)
!7607 = !DILocation(line: 149, column: 20, scope: !7596)
!7608 = !DILocation(line: 150, column: 15, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7605, file: !977, line: 149, column: 40)
!7610 = !DILocation(line: 151, column: 20, scope: !7609)
!7611 = !DILocation(line: 151, column: 13, scope: !7609)
!7612 = !DILocation(line: 152, column: 13, scope: !7609)
!7613 = !DILocation(line: 152, column: 20, scope: !7614)
!7614 = !DILexicalBlockFile(scope: !7609, file: !977, discriminator: 1)
!7615 = !DILocation(line: 152, column: 26, scope: !7614)
!7616 = !DILocation(line: 152, column: 30, scope: !7614)
!7617 = !DILocation(line: 152, column: 24, scope: !7614)
!7618 = !DILocation(line: 152, column: 13, scope: !7614)
!7619 = !DILocation(line: 153, column: 52, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7609, file: !977, line: 152, column: 46)
!7621 = !DILocation(line: 153, column: 41, scope: !7620)
!7622 = !DILocation(line: 153, column: 36, scope: !7620)
!7623 = !DILocation(line: 153, column: 17, scope: !7620)
!7624 = !DILocation(line: 153, column: 21, scope: !7620)
!7625 = !DILocation(line: 153, column: 39, scope: !7620)
!7626 = !DILocation(line: 154, column: 24, scope: !7620)
!7627 = !DILocation(line: 155, column: 43, scope: !7620)
!7628 = !DILocation(line: 155, column: 24, scope: !7620)
!7629 = !DILocation(line: 155, column: 28, scope: !7620)
!7630 = !DILocation(line: 155, column: 46, scope: !7620)
!7631 = !DILocation(line: 156, column: 48, scope: !7620)
!7632 = !DILocation(line: 156, column: 29, scope: !7620)
!7633 = !DILocation(line: 156, column: 33, scope: !7620)
!7634 = !DILocation(line: 156, column: 25, scope: !7620)
!7635 = !DILocation(line: 156, column: 52, scope: !7620)
!7636 = !DILocation(line: 156, column: 62, scope: !7620)
!7637 = !DILocation(line: 156, column: 69, scope: !7620)
!7638 = !DILocation(line: 154, column: 17, scope: !7620)
!7639 = !DILocation(line: 152, column: 13, scope: !7640)
!7640 = !DILexicalBlockFile(scope: !7609, file: !977, discriminator: 2)
!7641 = distinct !{!7641, !7612}
!7642 = !DILocation(line: 158, column: 20, scope: !7609)
!7643 = !DILocation(line: 158, column: 13, scope: !7609)
!7644 = !DILocation(line: 159, column: 9, scope: !7609)
!7645 = !DILocation(line: 160, column: 5, scope: !7498)
!7646 = !DILocation(line: 161, column: 37, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7402, file: !977, line: 161, column: 9)
!7648 = !DILocation(line: 161, column: 27, scope: !7647)
!7649 = !DILocation(line: 161, column: 9, scope: !7647)
!7650 = !DILocation(line: 161, column: 13, scope: !7647)
!7651 = !DILocation(line: 161, column: 25, scope: !7647)
!7652 = !DILocation(line: 161, column: 9, scope: !7402)
!7653 = !DILocation(line: 162, column: 16, scope: !7647)
!7654 = !DILocation(line: 162, column: 9, scope: !7647)
!7655 = !DILocation(line: 164, column: 24, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7402, file: !977, line: 164, column: 9)
!7657 = !DILocation(line: 164, column: 9, scope: !7656)
!7658 = !DILocation(line: 164, column: 31, scope: !7656)
!7659 = !DILocation(line: 164, column: 35, scope: !7656)
!7660 = !DILocation(line: 165, column: 9, scope: !7656)
!7661 = !DILocation(line: 165, column: 16, scope: !7656)
!7662 = !DILocation(line: 165, column: 25, scope: !7656)
!7663 = !DILocation(line: 164, column: 48, scope: !7656)
!7664 = !DILocation(line: 164, column: 28, scope: !7656)
!7665 = !DILocation(line: 164, column: 9, scope: !7402)
!7666 = !DILocation(line: 166, column: 16, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7656, file: !977, line: 165, column: 61)
!7668 = !DILocation(line: 166, column: 9, scope: !7667)
!7669 = !DILocation(line: 167, column: 9, scope: !7667)
!7670 = !DILocation(line: 169, column: 24, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7402, file: !977, line: 169, column: 9)
!7672 = !DILocation(line: 169, column: 9, scope: !7671)
!7673 = !DILocation(line: 169, column: 30, scope: !7671)
!7674 = !DILocation(line: 169, column: 34, scope: !7671)
!7675 = !DILocation(line: 169, column: 47, scope: !7671)
!7676 = !DILocation(line: 169, column: 28, scope: !7671)
!7677 = !DILocation(line: 169, column: 9, scope: !7402)
!7678 = !DILocation(line: 170, column: 16, scope: !7671)
!7679 = !DILocation(line: 170, column: 9, scope: !7671)
!7680 = !DILocation(line: 172, column: 5, scope: !7402)
!7681 = !DILocation(line: 173, column: 1, scope: !7402)
!7682 = distinct !DISubprogram(name: "vc1_draw_sprites", scope: !977, file: !977, line: 175, type: !7683, isLocal: true, isDefinition: true, scopeLine: 176, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!7683 = !DISubroutineType(types: !7684)
!7684 = !{null, !2655, !7405}
!7685 = !DILocalVariable(name: "a", arg: 1, scope: !7686, file: !7687, line: 181, type: !971)
!7686 = distinct !DISubprogram(name: "av_clip_uint16_c", scope: !7687, file: !7687, line: 181, type: !7688, isLocal: true, isDefinition: true, scopeLine: 182, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!7687 = !DIFile(filename: "./libavutil/common.h", directory: "/home/ubuntu_1604/Desktop/ffmped_bcmake_outputs/[lib]libavcodec--libavcodec.a")
!7688 = !DISubroutineType(types: !7689)
!7689 = !{!1434, !971}
!7690 = !DILocation(line: 181, column: 99, scope: !7686, inlinedAt: !7691)
!7691 = distinct !DILocation(line: 193, column: 13, scope: !7682)
!7692 = !DILocalVariable(name: "a", arg: 1, scope: !7693, file: !7687, line: 127, type: !971)
!7693 = distinct !DISubprogram(name: "av_clip_c", scope: !7687, file: !7687, line: 127, type: !7694, isLocal: true, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!7694 = !DISubroutineType(types: !7695)
!7695 = !{!971, !971, !971, !971}
!7696 = !DILocation(line: 127, column: 87, scope: !7693, inlinedAt: !7697)
!7697 = distinct !DILocation(line: 191, column: 19, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7699, file: !977, line: 184, column: 43)
!7699 = distinct !DILexicalBlock(scope: !7700, file: !977, line: 184, column: 5)
!7700 = distinct !DILexicalBlock(scope: !7682, file: !977, line: 184, column: 5)
!7701 = !DILocalVariable(name: "amin", arg: 2, scope: !7693, file: !7687, line: 127, type: !971)
!7702 = !DILocation(line: 127, column: 94, scope: !7693, inlinedAt: !7697)
!7703 = !DILocalVariable(name: "amax", arg: 3, scope: !7693, file: !7687, line: 127, type: !971)
!7704 = !DILocation(line: 127, column: 104, scope: !7693, inlinedAt: !7697)
!7705 = !DILocation(line: 127, column: 87, scope: !7693, inlinedAt: !7706)
!7706 = distinct !DILocation(line: 190, column: 19, scope: !7698)
!7707 = !DILocation(line: 127, column: 94, scope: !7693, inlinedAt: !7706)
!7708 = !DILocation(line: 127, column: 104, scope: !7693, inlinedAt: !7706)
!7709 = !DILocation(line: 127, column: 87, scope: !7693, inlinedAt: !7710)
!7710 = distinct !DILocation(line: 188, column: 23, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7698, file: !977, line: 187, column: 13)
!7712 = !DILocation(line: 127, column: 94, scope: !7693, inlinedAt: !7710)
!7713 = !DILocation(line: 127, column: 104, scope: !7693, inlinedAt: !7710)
!7714 = !DILocation(line: 127, column: 87, scope: !7693, inlinedAt: !7715)
!7715 = distinct !DILocation(line: 185, column: 19, scope: !7698)
!7716 = !DILocation(line: 127, column: 94, scope: !7693, inlinedAt: !7715)
!7717 = !DILocation(line: 127, column: 104, scope: !7693, inlinedAt: !7715)
!7718 = !DILocalVariable(name: "v", arg: 1, scope: !7682, file: !977, line: 175, type: !2655)
!7719 = !DILocation(line: 175, column: 42, scope: !7682)
!7720 = !DILocalVariable(name: "sd", arg: 2, scope: !7682, file: !977, line: 175, type: !7405)
!7721 = !DILocation(line: 175, column: 57, scope: !7682)
!7722 = !DILocalVariable(name: "i", scope: !7682, file: !977, line: 177, type: !971)
!7723 = !DILocation(line: 177, column: 9, scope: !7682)
!7724 = !DILocalVariable(name: "plane", scope: !7682, file: !977, line: 177, type: !971)
!7725 = !DILocation(line: 177, column: 12, scope: !7682)
!7726 = !DILocalVariable(name: "row", scope: !7682, file: !977, line: 177, type: !971)
!7727 = !DILocation(line: 177, column: 19, scope: !7682)
!7728 = !DILocalVariable(name: "sprite", scope: !7682, file: !977, line: 177, type: !971)
!7729 = !DILocation(line: 177, column: 24, scope: !7682)
!7730 = !DILocalVariable(name: "sr_cache", scope: !7682, file: !977, line: 178, type: !2003)
!7731 = !DILocation(line: 178, column: 9, scope: !7682)
!7732 = !DILocalVariable(name: "src_h", scope: !7682, file: !977, line: 179, type: !1993)
!7733 = !DILocation(line: 179, column: 14, scope: !7682)
!7734 = !DILocalVariable(name: "xoff", scope: !7682, file: !977, line: 180, type: !2112)
!7735 = !DILocation(line: 180, column: 9, scope: !7682)
!7736 = !DILocalVariable(name: "xadv", scope: !7682, file: !977, line: 180, type: !2112)
!7737 = !DILocation(line: 180, column: 18, scope: !7682)
!7738 = !DILocalVariable(name: "yoff", scope: !7682, file: !977, line: 180, type: !2112)
!7739 = !DILocation(line: 180, column: 27, scope: !7682)
!7740 = !DILocalVariable(name: "yadv", scope: !7682, file: !977, line: 180, type: !2112)
!7741 = !DILocation(line: 180, column: 36, scope: !7682)
!7742 = !DILocalVariable(name: "alpha", scope: !7682, file: !977, line: 180, type: !971)
!7743 = !DILocation(line: 180, column: 45, scope: !7682)
!7744 = !DILocalVariable(name: "ysub", scope: !7682, file: !977, line: 181, type: !2112)
!7745 = !DILocation(line: 181, column: 9, scope: !7682)
!7746 = !DILocalVariable(name: "s", scope: !7682, file: !977, line: 182, type: !3015)
!7747 = !DILocation(line: 182, column: 21, scope: !7682)
!7748 = !DILocation(line: 182, column: 26, scope: !7682)
!7749 = !DILocation(line: 182, column: 29, scope: !7682)
!7750 = !DILocation(line: 184, column: 12, scope: !7700)
!7751 = !DILocation(line: 184, column: 10, scope: !7700)
!7752 = !DILocation(line: 184, column: 17, scope: !7753)
!7753 = !DILexicalBlockFile(scope: !7699, file: !977, discriminator: 1)
!7754 = !DILocation(line: 184, column: 22, scope: !7753)
!7755 = !DILocation(line: 184, column: 25, scope: !7753)
!7756 = !DILocation(line: 184, column: 19, scope: !7753)
!7757 = !DILocation(line: 184, column: 5, scope: !7753)
!7758 = !DILocation(line: 185, column: 39, scope: !7698)
!7759 = !DILocation(line: 185, column: 29, scope: !7698)
!7760 = !DILocation(line: 185, column: 33, scope: !7698)
!7761 = !DILocation(line: 185, column: 49, scope: !7698)
!7762 = !DILocation(line: 185, column: 52, scope: !7698)
!7763 = !DILocation(line: 185, column: 64, scope: !7698)
!7764 = !DILocation(line: 185, column: 67, scope: !7698)
!7765 = !DILocation(line: 185, column: 19, scope: !7698)
!7766 = !DILocation(line: 132, column: 9, scope: !7767, inlinedAt: !7715)
!7767 = distinct !DILexicalBlock(scope: !7693, file: !7687, line: 132, column: 9)
!7768 = !DILocation(line: 132, column: 13, scope: !7767, inlinedAt: !7715)
!7769 = !DILocation(line: 132, column: 11, scope: !7767, inlinedAt: !7715)
!7770 = !DILocation(line: 132, column: 9, scope: !7693, inlinedAt: !7715)
!7771 = !DILocation(line: 132, column: 26, scope: !7772, inlinedAt: !7715)
!7772 = !DILexicalBlockFile(scope: !7767, file: !7687, discriminator: 1)
!7773 = !DILocation(line: 132, column: 19, scope: !7772, inlinedAt: !7715)
!7774 = !DILocation(line: 133, column: 14, scope: !7775, inlinedAt: !7715)
!7775 = distinct !DILexicalBlock(scope: !7767, file: !7687, line: 133, column: 14)
!7776 = !DILocation(line: 133, column: 18, scope: !7775, inlinedAt: !7715)
!7777 = !DILocation(line: 133, column: 16, scope: !7775, inlinedAt: !7715)
!7778 = !DILocation(line: 133, column: 14, scope: !7767, inlinedAt: !7715)
!7779 = !DILocation(line: 133, column: 31, scope: !7780, inlinedAt: !7715)
!7780 = !DILexicalBlockFile(scope: !7775, file: !7687, discriminator: 1)
!7781 = !DILocation(line: 133, column: 24, scope: !7780, inlinedAt: !7715)
!7782 = !DILocation(line: 134, column: 17, scope: !7775, inlinedAt: !7715)
!7783 = !DILocation(line: 134, column: 10, scope: !7775, inlinedAt: !7715)
!7784 = !DILocation(line: 135, column: 1, scope: !7693, inlinedAt: !7715)
!7785 = !DILocation(line: 185, column: 14, scope: !7698)
!7786 = !DILocation(line: 185, column: 9, scope: !7698)
!7787 = !DILocation(line: 185, column: 17, scope: !7698)
!7788 = !DILocation(line: 186, column: 29, scope: !7698)
!7789 = !DILocation(line: 186, column: 19, scope: !7698)
!7790 = !DILocation(line: 186, column: 23, scope: !7698)
!7791 = !DILocation(line: 186, column: 14, scope: !7698)
!7792 = !DILocation(line: 186, column: 9, scope: !7698)
!7793 = !DILocation(line: 186, column: 17, scope: !7698)
!7794 = !DILocation(line: 187, column: 18, scope: !7711)
!7795 = !DILocation(line: 187, column: 13, scope: !7711)
!7796 = !DILocation(line: 187, column: 21, scope: !7711)
!7797 = !DILocation(line: 187, column: 30, scope: !7711)
!7798 = !DILocation(line: 187, column: 34, scope: !7799)
!7799 = !DILexicalBlockFile(scope: !7711, file: !977, discriminator: 1)
!7800 = !DILocation(line: 187, column: 37, scope: !7799)
!7801 = !DILocation(line: 187, column: 50, scope: !7799)
!7802 = !DILocation(line: 187, column: 60, scope: !7799)
!7803 = !DILocation(line: 187, column: 63, scope: !7799)
!7804 = !DILocation(line: 187, column: 76, scope: !7799)
!7805 = !DILocation(line: 187, column: 57, scope: !7799)
!7806 = !DILocation(line: 187, column: 90, scope: !7799)
!7807 = !DILocation(line: 187, column: 85, scope: !7799)
!7808 = !DILocation(line: 187, column: 83, scope: !7799)
!7809 = !DILocation(line: 187, column: 13, scope: !7799)
!7810 = !DILocation(line: 188, column: 38, scope: !7711)
!7811 = !DILocation(line: 188, column: 33, scope: !7711)
!7812 = !DILocation(line: 188, column: 47, scope: !7711)
!7813 = !DILocation(line: 188, column: 50, scope: !7711)
!7814 = !DILocation(line: 188, column: 62, scope: !7711)
!7815 = !DILocation(line: 188, column: 75, scope: !7711)
!7816 = !DILocation(line: 188, column: 70, scope: !7711)
!7817 = !DILocation(line: 188, column: 68, scope: !7711)
!7818 = !DILocation(line: 188, column: 78, scope: !7711)
!7819 = !DILocation(line: 188, column: 85, scope: !7711)
!7820 = !DILocation(line: 188, column: 88, scope: !7711)
!7821 = !DILocation(line: 188, column: 83, scope: !7711)
!7822 = !DILocation(line: 188, column: 23, scope: !7711)
!7823 = !DILocation(line: 132, column: 9, scope: !7767, inlinedAt: !7710)
!7824 = !DILocation(line: 132, column: 13, scope: !7767, inlinedAt: !7710)
!7825 = !DILocation(line: 132, column: 11, scope: !7767, inlinedAt: !7710)
!7826 = !DILocation(line: 132, column: 9, scope: !7693, inlinedAt: !7710)
!7827 = !DILocation(line: 132, column: 26, scope: !7772, inlinedAt: !7710)
!7828 = !DILocation(line: 132, column: 19, scope: !7772, inlinedAt: !7710)
!7829 = !DILocation(line: 133, column: 14, scope: !7775, inlinedAt: !7710)
!7830 = !DILocation(line: 133, column: 18, scope: !7775, inlinedAt: !7710)
!7831 = !DILocation(line: 133, column: 16, scope: !7775, inlinedAt: !7710)
!7832 = !DILocation(line: 133, column: 14, scope: !7767, inlinedAt: !7710)
!7833 = !DILocation(line: 133, column: 31, scope: !7780, inlinedAt: !7710)
!7834 = !DILocation(line: 133, column: 24, scope: !7780, inlinedAt: !7710)
!7835 = !DILocation(line: 134, column: 17, scope: !7775, inlinedAt: !7710)
!7836 = !DILocation(line: 134, column: 10, scope: !7775, inlinedAt: !7710)
!7837 = !DILocation(line: 135, column: 1, scope: !7693, inlinedAt: !7710)
!7838 = !DILocation(line: 188, column: 18, scope: !7711)
!7839 = !DILocation(line: 188, column: 13, scope: !7711)
!7840 = !DILocation(line: 188, column: 21, scope: !7711)
!7841 = !DILocation(line: 190, column: 39, scope: !7698)
!7842 = !DILocation(line: 190, column: 29, scope: !7698)
!7843 = !DILocation(line: 190, column: 33, scope: !7698)
!7844 = !DILocation(line: 190, column: 49, scope: !7698)
!7845 = !DILocation(line: 190, column: 52, scope: !7698)
!7846 = !DILocation(line: 190, column: 65, scope: !7698)
!7847 = !DILocation(line: 190, column: 68, scope: !7698)
!7848 = !DILocation(line: 190, column: 19, scope: !7698)
!7849 = !DILocation(line: 132, column: 9, scope: !7767, inlinedAt: !7706)
!7850 = !DILocation(line: 132, column: 13, scope: !7767, inlinedAt: !7706)
!7851 = !DILocation(line: 132, column: 11, scope: !7767, inlinedAt: !7706)
!7852 = !DILocation(line: 132, column: 9, scope: !7693, inlinedAt: !7706)
!7853 = !DILocation(line: 132, column: 26, scope: !7772, inlinedAt: !7706)
!7854 = !DILocation(line: 132, column: 19, scope: !7772, inlinedAt: !7706)
!7855 = !DILocation(line: 133, column: 14, scope: !7775, inlinedAt: !7706)
!7856 = !DILocation(line: 133, column: 18, scope: !7775, inlinedAt: !7706)
!7857 = !DILocation(line: 133, column: 16, scope: !7775, inlinedAt: !7706)
!7858 = !DILocation(line: 133, column: 14, scope: !7767, inlinedAt: !7706)
!7859 = !DILocation(line: 133, column: 31, scope: !7780, inlinedAt: !7706)
!7860 = !DILocation(line: 133, column: 24, scope: !7780, inlinedAt: !7706)
!7861 = !DILocation(line: 134, column: 17, scope: !7775, inlinedAt: !7706)
!7862 = !DILocation(line: 134, column: 10, scope: !7775, inlinedAt: !7706)
!7863 = !DILocation(line: 135, column: 1, scope: !7693, inlinedAt: !7706)
!7864 = !DILocation(line: 190, column: 14, scope: !7698)
!7865 = !DILocation(line: 190, column: 9, scope: !7698)
!7866 = !DILocation(line: 190, column: 17, scope: !7698)
!7867 = !DILocation(line: 191, column: 39, scope: !7698)
!7868 = !DILocation(line: 191, column: 29, scope: !7698)
!7869 = !DILocation(line: 191, column: 33, scope: !7698)
!7870 = !DILocation(line: 191, column: 51, scope: !7698)
!7871 = !DILocation(line: 191, column: 54, scope: !7698)
!7872 = !DILocation(line: 191, column: 68, scope: !7698)
!7873 = !DILocation(line: 191, column: 82, scope: !7698)
!7874 = !DILocation(line: 191, column: 77, scope: !7698)
!7875 = !DILocation(line: 191, column: 75, scope: !7698)
!7876 = !DILocation(line: 191, column: 88, scope: !7698)
!7877 = !DILocation(line: 191, column: 91, scope: !7698)
!7878 = !DILocation(line: 191, column: 86, scope: !7698)
!7879 = !DILocation(line: 191, column: 19, scope: !7698)
!7880 = !DILocation(line: 132, column: 9, scope: !7767, inlinedAt: !7697)
!7881 = !DILocation(line: 132, column: 13, scope: !7767, inlinedAt: !7697)
!7882 = !DILocation(line: 132, column: 11, scope: !7767, inlinedAt: !7697)
!7883 = !DILocation(line: 132, column: 9, scope: !7693, inlinedAt: !7697)
!7884 = !DILocation(line: 132, column: 26, scope: !7772, inlinedAt: !7697)
!7885 = !DILocation(line: 132, column: 19, scope: !7772, inlinedAt: !7697)
!7886 = !DILocation(line: 133, column: 14, scope: !7775, inlinedAt: !7697)
!7887 = !DILocation(line: 133, column: 18, scope: !7775, inlinedAt: !7697)
!7888 = !DILocation(line: 133, column: 16, scope: !7775, inlinedAt: !7697)
!7889 = !DILocation(line: 133, column: 14, scope: !7767, inlinedAt: !7697)
!7890 = !DILocation(line: 133, column: 31, scope: !7780, inlinedAt: !7697)
!7891 = !DILocation(line: 133, column: 24, scope: !7780, inlinedAt: !7697)
!7892 = !DILocation(line: 134, column: 17, scope: !7775, inlinedAt: !7697)
!7893 = !DILocation(line: 134, column: 10, scope: !7775, inlinedAt: !7697)
!7894 = !DILocation(line: 135, column: 1, scope: !7693, inlinedAt: !7697)
!7895 = !DILocation(line: 191, column: 14, scope: !7698)
!7896 = !DILocation(line: 191, column: 9, scope: !7698)
!7897 = !DILocation(line: 191, column: 17, scope: !7698)
!7898 = !DILocation(line: 192, column: 5, scope: !7698)
!7899 = !DILocation(line: 184, column: 39, scope: !7900)
!7900 = !DILexicalBlockFile(scope: !7699, file: !977, discriminator: 2)
!7901 = !DILocation(line: 184, column: 5, scope: !7900)
!7902 = distinct !{!7902, !7903}
!7903 = !DILocation(line: 184, column: 5, scope: !7682)
!7904 = !DILocation(line: 193, column: 30, scope: !7682)
!7905 = !DILocation(line: 193, column: 34, scope: !7682)
!7906 = !DILocation(line: 193, column: 13, scope: !7682)
!7907 = !DILocation(line: 183, column: 9, scope: !7908, inlinedAt: !7691)
!7908 = distinct !DILexicalBlock(scope: !7686, file: !7687, line: 183, column: 9)
!7909 = !DILocation(line: 183, column: 10, scope: !7908, inlinedAt: !7691)
!7910 = !DILocation(line: 183, column: 9, scope: !7686, inlinedAt: !7691)
!7911 = !DILocation(line: 183, column: 31, scope: !7912, inlinedAt: !7691)
!7912 = !DILexicalBlockFile(scope: !7908, file: !7687, discriminator: 1)
!7913 = !DILocation(line: 183, column: 30, scope: !7912, inlinedAt: !7691)
!7914 = !DILocation(line: 183, column: 33, scope: !7912, inlinedAt: !7691)
!7915 = !DILocation(line: 183, column: 29, scope: !7912, inlinedAt: !7691)
!7916 = !DILocation(line: 183, column: 22, scope: !7912, inlinedAt: !7691)
!7917 = !DILocation(line: 184, column: 17, scope: !7908, inlinedAt: !7691)
!7918 = !DILocation(line: 184, column: 10, scope: !7908, inlinedAt: !7691)
!7919 = !DILocation(line: 185, column: 1, scope: !7686, inlinedAt: !7691)
!7920 = !DILocation(line: 193, column: 11, scope: !7682)
!7921 = !DILocation(line: 195, column: 16, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7682, file: !977, line: 195, column: 5)
!7923 = !DILocation(line: 195, column: 10, scope: !7922)
!7924 = !DILocation(line: 195, column: 21, scope: !7925)
!7925 = !DILexicalBlockFile(scope: !7926, file: !977, discriminator: 1)
!7926 = distinct !DILexicalBlock(scope: !7922, file: !977, line: 195, column: 5)
!7927 = !DILocation(line: 195, column: 27, scope: !7925)
!7928 = !DILocation(line: 195, column: 5, scope: !7925)
!7929 = !DILocalVariable(name: "width", scope: !7930, file: !977, line: 196, type: !971)
!7930 = distinct !DILexicalBlock(scope: !7926, file: !977, line: 195, column: 82)
!7931 = !DILocation(line: 196, column: 13, scope: !7930)
!7932 = !DILocation(line: 196, column: 21, scope: !7930)
!7933 = !DILocation(line: 196, column: 24, scope: !7930)
!7934 = !DILocation(line: 196, column: 40, scope: !7930)
!7935 = !DILocation(line: 196, column: 39, scope: !7930)
!7936 = !DILocation(line: 196, column: 38, scope: !7930)
!7937 = !DILocation(line: 196, column: 36, scope: !7930)
!7938 = !DILocation(line: 198, column: 18, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7930, file: !977, line: 198, column: 9)
!7940 = !DILocation(line: 198, column: 14, scope: !7939)
!7941 = !DILocation(line: 198, column: 23, scope: !7942)
!7942 = !DILexicalBlockFile(scope: !7943, file: !977, discriminator: 1)
!7943 = distinct !DILexicalBlock(scope: !7939, file: !977, line: 198, column: 9)
!7944 = !DILocation(line: 198, column: 29, scope: !7942)
!7945 = !DILocation(line: 198, column: 32, scope: !7942)
!7946 = !DILocation(line: 198, column: 49, scope: !7942)
!7947 = !DILocation(line: 198, column: 48, scope: !7942)
!7948 = !DILocation(line: 198, column: 47, scope: !7942)
!7949 = !DILocation(line: 198, column: 45, scope: !7942)
!7950 = !DILocation(line: 198, column: 27, scope: !7942)
!7951 = !DILocation(line: 198, column: 9, scope: !7942)
!7952 = !DILocalVariable(name: "dst", scope: !7953, file: !977, line: 199, type: !1132)
!7953 = distinct !DILexicalBlock(scope: !7943, file: !977, line: 198, column: 63)
!7954 = !DILocation(line: 199, column: 22, scope: !7953)
!7955 = !DILocation(line: 199, column: 57, scope: !7953)
!7956 = !DILocation(line: 199, column: 28, scope: !7953)
!7957 = !DILocation(line: 199, column: 31, scope: !7953)
!7958 = !DILocation(line: 199, column: 52, scope: !7953)
!7959 = !DILocation(line: 200, column: 61, scope: !7953)
!7960 = !DILocation(line: 200, column: 28, scope: !7953)
!7961 = !DILocation(line: 200, column: 31, scope: !7953)
!7962 = !DILocation(line: 200, column: 52, scope: !7953)
!7963 = !DILocation(line: 200, column: 70, scope: !7953)
!7964 = !DILocation(line: 200, column: 68, scope: !7953)
!7965 = !DILocation(line: 199, column: 64, scope: !7953)
!7966 = !DILocation(line: 202, column: 25, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7953, file: !977, line: 202, column: 13)
!7968 = !DILocation(line: 202, column: 18, scope: !7967)
!7969 = !DILocation(line: 202, column: 30, scope: !7970)
!7970 = !DILexicalBlockFile(scope: !7971, file: !977, discriminator: 1)
!7971 = distinct !DILexicalBlock(scope: !7967, file: !977, line: 202, column: 13)
!7972 = !DILocation(line: 202, column: 40, scope: !7970)
!7973 = !DILocation(line: 202, column: 43, scope: !7970)
!7974 = !DILocation(line: 202, column: 37, scope: !7970)
!7975 = !DILocation(line: 202, column: 13, scope: !7970)
!7976 = !DILocalVariable(name: "iplane", scope: !7977, file: !977, line: 203, type: !1132)
!7977 = distinct !DILexicalBlock(scope: !7971, file: !977, line: 202, column: 66)
!7978 = !DILocation(line: 203, column: 26, scope: !7977)
!7979 = !DILocation(line: 203, column: 62, scope: !7977)
!7980 = !DILocation(line: 203, column: 35, scope: !7977)
!7981 = !DILocation(line: 203, column: 38, scope: !7977)
!7982 = !DILocation(line: 203, column: 54, scope: !7977)
!7983 = !DILocation(line: 203, column: 57, scope: !7977)
!7984 = !DILocalVariable(name: "iline", scope: !7977, file: !977, line: 204, type: !971)
!7985 = !DILocation(line: 204, column: 21, scope: !7977)
!7986 = !DILocation(line: 204, column: 60, scope: !7977)
!7987 = !DILocation(line: 204, column: 29, scope: !7977)
!7988 = !DILocation(line: 204, column: 32, scope: !7977)
!7989 = !DILocation(line: 204, column: 48, scope: !7977)
!7990 = !DILocation(line: 204, column: 51, scope: !7977)
!7991 = !DILocalVariable(name: "ycoord", scope: !7977, file: !977, line: 205, type: !971)
!7992 = !DILocation(line: 205, column: 21, scope: !7977)
!7993 = !DILocation(line: 205, column: 35, scope: !7977)
!7994 = !DILocation(line: 205, column: 30, scope: !7977)
!7995 = !DILocation(line: 205, column: 50, scope: !7977)
!7996 = !DILocation(line: 205, column: 45, scope: !7977)
!7997 = !DILocation(line: 205, column: 60, scope: !7977)
!7998 = !DILocation(line: 205, column: 58, scope: !7977)
!7999 = !DILocation(line: 205, column: 43, scope: !7977)
!8000 = !DILocalVariable(name: "yline", scope: !7977, file: !977, line: 206, type: !971)
!8001 = !DILocation(line: 206, column: 21, scope: !7977)
!8002 = !DILocation(line: 206, column: 29, scope: !7977)
!8003 = !DILocation(line: 206, column: 36, scope: !7977)
!8004 = !DILocalVariable(name: "next_line", scope: !7977, file: !977, line: 207, type: !971)
!8005 = !DILocation(line: 207, column: 21, scope: !7977)
!8006 = !DILocation(line: 208, column: 32, scope: !7977)
!8007 = !DILocation(line: 208, column: 39, scope: !7977)
!8008 = !DILocation(line: 208, column: 22, scope: !7977)
!8009 = !DILocation(line: 208, column: 17, scope: !7977)
!8010 = !DILocation(line: 208, column: 30, scope: !7977)
!8011 = !DILocation(line: 209, column: 21, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7977, file: !977, line: 209, column: 21)
!8013 = !DILocation(line: 209, column: 21, scope: !7977)
!8014 = !DILocation(line: 210, column: 54, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8012, file: !977, line: 209, column: 29)
!8016 = !DILocation(line: 210, column: 30, scope: !8015)
!8017 = !DILocation(line: 210, column: 33, scope: !8015)
!8018 = !DILocation(line: 210, column: 46, scope: !8015)
!8019 = !DILocation(line: 210, column: 49, scope: !8015)
!8020 = !DILocation(line: 210, column: 28, scope: !8015)
!8021 = !DILocation(line: 211, column: 57, scope: !8015)
!8022 = !DILocation(line: 211, column: 29, scope: !8015)
!8023 = !DILocation(line: 211, column: 32, scope: !8015)
!8024 = !DILocation(line: 211, column: 45, scope: !8015)
!8025 = !DILocation(line: 211, column: 48, scope: !8015)
!8026 = !DILocation(line: 211, column: 27, scope: !8015)
!8027 = !DILocation(line: 212, column: 17, scope: !8015)
!8028 = !DILocation(line: 213, column: 31, scope: !7977)
!8029 = !DILocation(line: 213, column: 37, scope: !7977)
!8030 = !DILocation(line: 213, column: 46, scope: !7977)
!8031 = !DILocation(line: 213, column: 49, scope: !7977)
!8032 = !DILocation(line: 213, column: 68, scope: !7977)
!8033 = !DILocation(line: 213, column: 67, scope: !7977)
!8034 = !DILocation(line: 213, column: 66, scope: !7977)
!8035 = !DILocation(line: 213, column: 63, scope: !7977)
!8036 = !DILocation(line: 213, column: 75, scope: !7977)
!8037 = !DILocation(line: 213, column: 42, scope: !7977)
!8038 = !DILocation(line: 213, column: 30, scope: !7977)
!8039 = !DILocation(line: 213, column: 84, scope: !8040)
!8040 = !DILexicalBlockFile(scope: !7977, file: !977, discriminator: 1)
!8041 = !DILocation(line: 213, column: 87, scope: !8040)
!8042 = !DILocation(line: 213, column: 106, scope: !8040)
!8043 = !DILocation(line: 213, column: 105, scope: !8040)
!8044 = !DILocation(line: 213, column: 104, scope: !8040)
!8045 = !DILocation(line: 213, column: 101, scope: !8040)
!8046 = !DILocation(line: 213, column: 113, scope: !8040)
!8047 = !DILocation(line: 213, column: 30, scope: !8040)
!8048 = !DILocation(line: 213, column: 121, scope: !8049)
!8049 = !DILexicalBlockFile(scope: !7977, file: !977, discriminator: 2)
!8050 = !DILocation(line: 213, column: 127, scope: !8049)
!8051 = !DILocation(line: 213, column: 30, scope: !8049)
!8052 = !DILocation(line: 213, column: 30, scope: !8053)
!8053 = !DILexicalBlockFile(scope: !7977, file: !977, discriminator: 3)
!8054 = !DILocation(line: 213, column: 135, scope: !8053)
!8055 = !DILocation(line: 213, column: 133, scope: !8053)
!8056 = !DILocation(line: 213, column: 27, scope: !8053)
!8057 = !DILocation(line: 214, column: 28, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !7977, file: !977, line: 214, column: 21)
!8059 = !DILocation(line: 214, column: 23, scope: !8058)
!8060 = !DILocation(line: 214, column: 36, scope: !8058)
!8061 = !DILocation(line: 214, column: 46, scope: !8058)
!8062 = !DILocation(line: 214, column: 54, scope: !8063)
!8063 = !DILexicalBlockFile(scope: !8058, file: !977, discriminator: 1)
!8064 = !DILocation(line: 214, column: 49, scope: !8063)
!8065 = !DILocation(line: 214, column: 62, scope: !8063)
!8066 = !DILocation(line: 214, column: 21, scope: !8063)
!8067 = !DILocation(line: 215, column: 44, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8058, file: !977, line: 214, column: 74)
!8069 = !DILocation(line: 215, column: 59, scope: !8068)
!8070 = !DILocation(line: 215, column: 54, scope: !8068)
!8071 = !DILocation(line: 215, column: 67, scope: !8068)
!8072 = !DILocation(line: 215, column: 51, scope: !8068)
!8073 = !DILocation(line: 215, column: 76, scope: !8068)
!8074 = !DILocation(line: 215, column: 84, scope: !8068)
!8075 = !DILocation(line: 215, column: 82, scope: !8068)
!8076 = !DILocation(line: 215, column: 74, scope: !8068)
!8077 = !DILocation(line: 215, column: 31, scope: !8068)
!8078 = !DILocation(line: 215, column: 25, scope: !8068)
!8079 = !DILocation(line: 215, column: 42, scope: !8068)
!8080 = !DILocation(line: 216, column: 30, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8068, file: !977, line: 216, column: 25)
!8082 = !DILocation(line: 216, column: 25, scope: !8081)
!8083 = !DILocation(line: 216, column: 25, scope: !8068)
!8084 = !DILocation(line: 217, column: 44, scope: !8081)
!8085 = !DILocation(line: 217, column: 59, scope: !8081)
!8086 = !DILocation(line: 217, column: 54, scope: !8081)
!8087 = !DILocation(line: 217, column: 67, scope: !8081)
!8088 = !DILocation(line: 217, column: 51, scope: !8081)
!8089 = !DILocation(line: 217, column: 76, scope: !8081)
!8090 = !DILocation(line: 217, column: 74, scope: !8081)
!8091 = !DILocation(line: 217, column: 31, scope: !8081)
!8092 = !DILocation(line: 217, column: 25, scope: !8081)
!8093 = !DILocation(line: 217, column: 42, scope: !8081)
!8094 = !DILocation(line: 218, column: 17, scope: !8068)
!8095 = !DILocation(line: 219, column: 34, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !977, line: 219, column: 25)
!8097 = distinct !DILexicalBlock(scope: !8058, file: !977, line: 218, column: 24)
!8098 = !DILocation(line: 219, column: 25, scope: !8096)
!8099 = !DILocation(line: 219, column: 48, scope: !8096)
!8100 = !DILocation(line: 219, column: 45, scope: !8096)
!8101 = !DILocation(line: 219, column: 25, scope: !8097)
!8102 = !DILocation(line: 220, column: 38, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !977, line: 220, column: 29)
!8104 = distinct !DILexicalBlock(scope: !8096, file: !977, line: 219, column: 55)
!8105 = !DILocation(line: 220, column: 29, scope: !8103)
!8106 = !DILocation(line: 220, column: 52, scope: !8103)
!8107 = !DILocation(line: 220, column: 49, scope: !8103)
!8108 = !DILocation(line: 220, column: 29, scope: !8104)
!8109 = !DILocation(line: 221, column: 29, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8103, file: !977, line: 220, column: 59)
!8111 = distinct !{!8111, !8109}
!8112 = !DILocalVariable(name: "SWAP_tmp", scope: !8113, file: !977, line: 221, type: !1132)
!8113 = distinct !DILexicalBlock(scope: !8110, file: !977, line: 221, column: 31)
!8114 = !DILocation(line: 221, column: 41, scope: !8113)
!8115 = !DILocation(line: 221, column: 62, scope: !8116)
!8116 = !DILexicalBlockFile(scope: !8113, file: !977, discriminator: 1)
!8117 = !DILocation(line: 221, column: 51, scope: !8116)
!8118 = !DILocation(line: 221, column: 54, scope: !8116)
!8119 = !DILocation(line: 221, column: 41, scope: !8116)
!8120 = !DILocation(line: 221, column: 108, scope: !8116)
!8121 = !DILocation(line: 221, column: 97, scope: !8116)
!8122 = !DILocation(line: 221, column: 100, scope: !8116)
!8123 = !DILocation(line: 221, column: 85, scope: !8116)
!8124 = !DILocation(line: 221, column: 74, scope: !8116)
!8125 = !DILocation(line: 221, column: 77, scope: !8116)
!8126 = !DILocation(line: 221, column: 95, scope: !8116)
!8127 = !DILocation(line: 221, column: 143, scope: !8116)
!8128 = !DILocation(line: 221, column: 131, scope: !8116)
!8129 = !DILocation(line: 221, column: 120, scope: !8116)
!8130 = !DILocation(line: 221, column: 123, scope: !8116)
!8131 = !DILocation(line: 221, column: 141, scope: !8116)
!8132 = !DILocation(line: 221, column: 152, scope: !8116)
!8133 = !DILocation(line: 222, column: 29, scope: !8110)
!8134 = distinct !{!8134, !8133}
!8135 = !DILocalVariable(name: "SWAP_tmp", scope: !8136, file: !977, line: 222, type: !971)
!8136 = distinct !DILexicalBlock(scope: !8110, file: !977, line: 222, column: 31)
!8137 = !DILocation(line: 222, column: 36, scope: !8136)
!8138 = !DILocation(line: 222, column: 55, scope: !8139)
!8139 = !DILexicalBlockFile(scope: !8136, file: !977, discriminator: 1)
!8140 = !DILocation(line: 222, column: 46, scope: !8139)
!8141 = !DILocation(line: 222, column: 36, scope: !8139)
!8142 = !DILocation(line: 222, column: 97, scope: !8139)
!8143 = !DILocation(line: 222, column: 88, scope: !8139)
!8144 = !DILocation(line: 222, column: 76, scope: !8139)
!8145 = !DILocation(line: 222, column: 67, scope: !8139)
!8146 = !DILocation(line: 222, column: 86, scope: !8139)
!8147 = !DILocation(line: 222, column: 130, scope: !8139)
!8148 = !DILocation(line: 222, column: 118, scope: !8139)
!8149 = !DILocation(line: 222, column: 109, scope: !8139)
!8150 = !DILocation(line: 222, column: 128, scope: !8139)
!8151 = !DILocation(line: 222, column: 139, scope: !8139)
!8152 = !DILocation(line: 223, column: 25, scope: !8110)
!8153 = !DILocation(line: 224, column: 29, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8103, file: !977, line: 223, column: 32)
!8155 = !DILocation(line: 224, column: 32, scope: !8154)
!8156 = !DILocation(line: 224, column: 39, scope: !8154)
!8157 = !DILocation(line: 224, column: 59, scope: !8154)
!8158 = !DILocation(line: 224, column: 48, scope: !8154)
!8159 = !DILocation(line: 224, column: 51, scope: !8154)
!8160 = !DILocation(line: 224, column: 71, scope: !8154)
!8161 = !DILocation(line: 224, column: 80, scope: !8154)
!8162 = !DILocation(line: 224, column: 88, scope: !8154)
!8163 = !DILocation(line: 224, column: 86, scope: !8154)
!8164 = !DILocation(line: 224, column: 78, scope: !8154)
!8165 = !DILocation(line: 224, column: 100, scope: !8154)
!8166 = !DILocation(line: 224, column: 95, scope: !8154)
!8167 = !DILocation(line: 224, column: 114, scope: !8154)
!8168 = !DILocation(line: 224, column: 109, scope: !8154)
!8169 = !DILocation(line: 224, column: 123, scope: !8154)
!8170 = !DILocation(line: 225, column: 51, scope: !8154)
!8171 = !DILocation(line: 225, column: 38, scope: !8154)
!8172 = !DILocation(line: 225, column: 29, scope: !8154)
!8173 = !DILocation(line: 225, column: 49, scope: !8154)
!8174 = !DILocation(line: 227, column: 21, scope: !8104)
!8175 = !DILocation(line: 228, column: 30, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8097, file: !977, line: 228, column: 25)
!8177 = !DILocation(line: 228, column: 25, scope: !8176)
!8178 = !DILocation(line: 228, column: 38, scope: !8176)
!8179 = !DILocation(line: 228, column: 50, scope: !8180)
!8180 = !DILexicalBlockFile(scope: !8176, file: !977, discriminator: 1)
!8181 = !DILocation(line: 228, column: 41, scope: !8180)
!8182 = !DILocation(line: 228, column: 64, scope: !8180)
!8183 = !DILocation(line: 228, column: 70, scope: !8180)
!8184 = !DILocation(line: 228, column: 61, scope: !8180)
!8185 = !DILocation(line: 228, column: 25, scope: !8180)
!8186 = !DILocation(line: 229, column: 25, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8176, file: !977, line: 228, column: 75)
!8188 = !DILocation(line: 229, column: 28, scope: !8187)
!8189 = !DILocation(line: 229, column: 35, scope: !8187)
!8190 = !DILocation(line: 229, column: 55, scope: !8187)
!8191 = !DILocation(line: 229, column: 44, scope: !8187)
!8192 = !DILocation(line: 229, column: 47, scope: !8187)
!8193 = !DILocation(line: 230, column: 44, scope: !8187)
!8194 = !DILocation(line: 230, column: 53, scope: !8187)
!8195 = !DILocation(line: 230, column: 51, scope: !8187)
!8196 = !DILocation(line: 230, column: 69, scope: !8187)
!8197 = !DILocation(line: 230, column: 64, scope: !8187)
!8198 = !DILocation(line: 231, column: 49, scope: !8187)
!8199 = !DILocation(line: 231, column: 44, scope: !8187)
!8200 = !DILocation(line: 231, column: 58, scope: !8187)
!8201 = !DILocation(line: 232, column: 47, scope: !8187)
!8202 = !DILocation(line: 232, column: 53, scope: !8187)
!8203 = !DILocation(line: 232, column: 34, scope: !8187)
!8204 = !DILocation(line: 232, column: 25, scope: !8187)
!8205 = !DILocation(line: 232, column: 45, scope: !8187)
!8206 = !DILocation(line: 233, column: 21, scope: !8187)
!8207 = !DILocation(line: 234, column: 51, scope: !8097)
!8208 = !DILocation(line: 234, column: 40, scope: !8097)
!8209 = !DILocation(line: 234, column: 43, scope: !8097)
!8210 = !DILocation(line: 234, column: 27, scope: !8097)
!8211 = !DILocation(line: 234, column: 21, scope: !8097)
!8212 = !DILocation(line: 234, column: 38, scope: !8097)
!8213 = !DILocation(line: 235, column: 51, scope: !8097)
!8214 = !DILocation(line: 235, column: 40, scope: !8097)
!8215 = !DILocation(line: 235, column: 43, scope: !8097)
!8216 = !DILocation(line: 235, column: 27, scope: !8097)
!8217 = !DILocation(line: 235, column: 21, scope: !8097)
!8218 = !DILocation(line: 235, column: 38, scope: !8097)
!8219 = !DILocation(line: 237, column: 13, scope: !7977)
!8220 = !DILocation(line: 202, column: 62, scope: !8221)
!8221 = !DILexicalBlockFile(scope: !7971, file: !977, discriminator: 2)
!8222 = !DILocation(line: 202, column: 13, scope: !8221)
!8223 = distinct !{!8223, !8224}
!8224 = !DILocation(line: 202, column: 13, scope: !7953)
!8225 = !DILocation(line: 239, column: 18, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !7953, file: !977, line: 239, column: 17)
!8227 = !DILocation(line: 239, column: 21, scope: !8226)
!8228 = !DILocation(line: 239, column: 17, scope: !7953)
!8229 = !DILocation(line: 240, column: 21, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8231, file: !977, line: 240, column: 21)
!8231 = distinct !DILexicalBlock(scope: !8226, file: !977, line: 239, column: 34)
!8232 = !DILocation(line: 240, column: 21, scope: !8231)
!8233 = !DILocation(line: 241, column: 21, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8230, file: !977, line: 240, column: 30)
!8235 = !DILocation(line: 241, column: 24, scope: !8234)
!8236 = !DILocation(line: 241, column: 31, scope: !8234)
!8237 = !DILocation(line: 241, column: 47, scope: !8234)
!8238 = !DILocation(line: 241, column: 52, scope: !8234)
!8239 = !DILocation(line: 241, column: 65, scope: !8234)
!8240 = !DILocation(line: 241, column: 78, scope: !8234)
!8241 = !DILocation(line: 241, column: 87, scope: !8234)
!8242 = !DILocation(line: 242, column: 17, scope: !8234)
!8243 = !DILocation(line: 243, column: 28, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8230, file: !977, line: 242, column: 24)
!8245 = !DILocation(line: 243, column: 33, scope: !8244)
!8246 = !DILocation(line: 243, column: 46, scope: !8244)
!8247 = !DILocation(line: 243, column: 21, scope: !8244)
!8248 = !DILocation(line: 245, column: 13, scope: !8231)
!8249 = !DILocation(line: 246, column: 21, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8251, file: !977, line: 246, column: 21)
!8251 = distinct !DILexicalBlock(scope: !8226, file: !977, line: 245, column: 20)
!8252 = !DILocation(line: 246, column: 29, scope: !8250)
!8253 = !DILocation(line: 246, column: 32, scope: !8254)
!8254 = !DILexicalBlockFile(scope: !8250, file: !977, discriminator: 1)
!8255 = !DILocation(line: 246, column: 21, scope: !8254)
!8256 = !DILocation(line: 247, column: 21, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8250, file: !977, line: 246, column: 41)
!8258 = !DILocation(line: 247, column: 24, scope: !8257)
!8259 = !DILocation(line: 247, column: 31, scope: !8257)
!8260 = !DILocation(line: 247, column: 56, scope: !8257)
!8261 = !DILocation(line: 247, column: 61, scope: !8257)
!8262 = !DILocation(line: 247, column: 74, scope: !8257)
!8263 = !DILocation(line: 247, column: 87, scope: !8257)
!8264 = !DILocation(line: 248, column: 56, scope: !8257)
!8265 = !DILocation(line: 248, column: 69, scope: !8257)
!8266 = !DILocation(line: 248, column: 82, scope: !8257)
!8267 = !DILocation(line: 248, column: 91, scope: !8257)
!8268 = !DILocation(line: 248, column: 98, scope: !8257)
!8269 = !DILocation(line: 249, column: 17, scope: !8257)
!8270 = !DILocation(line: 249, column: 28, scope: !8271)
!8271 = !DILexicalBlockFile(scope: !8272, file: !977, discriminator: 1)
!8272 = distinct !DILexicalBlock(scope: !8250, file: !977, line: 249, column: 28)
!8273 = !DILocation(line: 250, column: 21, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8272, file: !977, line: 249, column: 37)
!8275 = !DILocation(line: 250, column: 24, scope: !8274)
!8276 = !DILocation(line: 250, column: 31, scope: !8274)
!8277 = !DILocation(line: 250, column: 56, scope: !8274)
!8278 = !DILocation(line: 250, column: 61, scope: !8274)
!8279 = !DILocation(line: 250, column: 74, scope: !8274)
!8280 = !DILocation(line: 250, column: 87, scope: !8274)
!8281 = !DILocation(line: 251, column: 56, scope: !8274)
!8282 = !DILocation(line: 251, column: 69, scope: !8274)
!8283 = !DILocation(line: 251, column: 76, scope: !8274)
!8284 = !DILocation(line: 252, column: 17, scope: !8274)
!8285 = !DILocation(line: 252, column: 28, scope: !8286)
!8286 = !DILexicalBlockFile(scope: !8287, file: !977, discriminator: 1)
!8287 = distinct !DILexicalBlock(scope: !8272, file: !977, line: 252, column: 28)
!8288 = !DILocation(line: 253, column: 21, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8287, file: !977, line: 252, column: 37)
!8290 = !DILocation(line: 253, column: 24, scope: !8289)
!8291 = !DILocation(line: 253, column: 31, scope: !8289)
!8292 = !DILocation(line: 253, column: 56, scope: !8289)
!8293 = !DILocation(line: 253, column: 61, scope: !8289)
!8294 = !DILocation(line: 253, column: 74, scope: !8289)
!8295 = !DILocation(line: 253, column: 87, scope: !8289)
!8296 = !DILocation(line: 254, column: 56, scope: !8289)
!8297 = !DILocation(line: 254, column: 79, scope: !8289)
!8298 = !DILocation(line: 254, column: 78, scope: !8289)
!8299 = !DILocation(line: 254, column: 86, scope: !8289)
!8300 = !DILocation(line: 255, column: 17, scope: !8289)
!8301 = !DILocation(line: 256, column: 21, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8287, file: !977, line: 255, column: 24)
!8303 = !DILocation(line: 256, column: 24, scope: !8302)
!8304 = !DILocation(line: 256, column: 31, scope: !8302)
!8305 = !DILocation(line: 256, column: 55, scope: !8302)
!8306 = !DILocation(line: 256, column: 60, scope: !8302)
!8307 = !DILocation(line: 256, column: 73, scope: !8302)
!8308 = !DILocation(line: 256, column: 86, scope: !8302)
!8309 = !DILocation(line: 256, column: 93, scope: !8302)
!8310 = !DILocation(line: 259, column: 9, scope: !7953)
!8311 = !DILocation(line: 198, column: 59, scope: !8312)
!8312 = !DILexicalBlockFile(scope: !7943, file: !977, discriminator: 2)
!8313 = !DILocation(line: 198, column: 9, scope: !8312)
!8314 = distinct !{!8314, !8315}
!8315 = !DILocation(line: 198, column: 9, scope: !7930)
!8316 = !DILocation(line: 261, column: 14, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !7930, file: !977, line: 261, column: 13)
!8318 = !DILocation(line: 261, column: 13, scope: !7930)
!8319 = !DILocation(line: 262, column: 20, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !977, line: 262, column: 13)
!8321 = distinct !DILexicalBlock(scope: !8317, file: !977, line: 261, column: 21)
!8322 = !DILocation(line: 262, column: 18, scope: !8320)
!8323 = !DILocation(line: 262, column: 25, scope: !8324)
!8324 = !DILexicalBlockFile(scope: !8325, file: !977, discriminator: 1)
!8325 = distinct !DILexicalBlock(scope: !8320, file: !977, line: 262, column: 13)
!8326 = !DILocation(line: 262, column: 30, scope: !8324)
!8327 = !DILocation(line: 262, column: 33, scope: !8324)
!8328 = !DILocation(line: 262, column: 27, scope: !8324)
!8329 = !DILocation(line: 262, column: 13, scope: !8324)
!8330 = !DILocation(line: 263, column: 22, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8325, file: !977, line: 262, column: 51)
!8332 = !DILocation(line: 263, column: 17, scope: !8331)
!8333 = !DILocation(line: 263, column: 25, scope: !8331)
!8334 = !DILocation(line: 264, column: 22, scope: !8331)
!8335 = !DILocation(line: 264, column: 17, scope: !8331)
!8336 = !DILocation(line: 264, column: 25, scope: !8331)
!8337 = !DILocation(line: 265, column: 13, scope: !8331)
!8338 = !DILocation(line: 262, column: 47, scope: !8339)
!8339 = !DILexicalBlockFile(scope: !8325, file: !977, discriminator: 2)
!8340 = !DILocation(line: 262, column: 13, scope: !8339)
!8341 = distinct !{!8341, !8342}
!8342 = !DILocation(line: 262, column: 13, scope: !8321)
!8343 = !DILocation(line: 266, column: 9, scope: !8321)
!8344 = !DILocation(line: 268, column: 5, scope: !7930)
!8345 = !DILocation(line: 195, column: 78, scope: !8346)
!8346 = !DILexicalBlockFile(scope: !7926, file: !977, discriminator: 2)
!8347 = !DILocation(line: 195, column: 5, scope: !8346)
!8348 = distinct !{!8348, !8349}
!8349 = !DILocation(line: 195, column: 5, scope: !7682)
!8350 = !DILocation(line: 269, column: 1, scope: !7682)
!8351 = distinct !DISubprogram(name: "vc1_sprite_parse_transform", scope: !977, file: !977, line: 70, type: !8352, isLocal: true, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!8352 = !DISubroutineType(types: !8353)
!8353 = !{null, !2722, !1396}
!8354 = !DILocalVariable(name: "gb", arg: 1, scope: !8351, file: !977, line: 70, type: !2722)
!8355 = !DILocation(line: 70, column: 55, scope: !8351)
!8356 = !DILocalVariable(name: "c", arg: 2, scope: !8351, file: !977, line: 70, type: !1396)
!8357 = !DILocation(line: 70, column: 63, scope: !8351)
!8358 = !DILocation(line: 72, column: 12, scope: !8351)
!8359 = !DILocation(line: 72, column: 17, scope: !8351)
!8360 = !DILocation(line: 72, column: 5, scope: !8351)
!8361 = !DILocation(line: 72, column: 10, scope: !8351)
!8362 = !DILocation(line: 74, column: 22, scope: !8351)
!8363 = !DILocation(line: 74, column: 13, scope: !8351)
!8364 = !DILocation(line: 74, column: 5, scope: !8351)
!8365 = !DILocation(line: 76, column: 9, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8351, file: !977, line: 74, column: 30)
!8367 = !DILocation(line: 76, column: 14, scope: !8366)
!8368 = !DILocation(line: 77, column: 27, scope: !8366)
!8369 = !DILocation(line: 77, column: 16, scope: !8366)
!8370 = !DILocation(line: 77, column: 9, scope: !8366)
!8371 = !DILocation(line: 77, column: 14, scope: !8366)
!8372 = !DILocation(line: 78, column: 9, scope: !8366)
!8373 = !DILocation(line: 78, column: 14, scope: !8366)
!8374 = !DILocation(line: 79, column: 9, scope: !8366)
!8375 = !DILocation(line: 81, column: 34, scope: !8366)
!8376 = !DILocation(line: 81, column: 23, scope: !8366)
!8377 = !DILocation(line: 81, column: 16, scope: !8366)
!8378 = !DILocation(line: 81, column: 21, scope: !8366)
!8379 = !DILocation(line: 81, column: 9, scope: !8366)
!8380 = !DILocation(line: 81, column: 14, scope: !8366)
!8381 = !DILocation(line: 82, column: 27, scope: !8366)
!8382 = !DILocation(line: 82, column: 16, scope: !8366)
!8383 = !DILocation(line: 82, column: 9, scope: !8366)
!8384 = !DILocation(line: 82, column: 14, scope: !8366)
!8385 = !DILocation(line: 83, column: 9, scope: !8366)
!8386 = !DILocation(line: 85, column: 27, scope: !8366)
!8387 = !DILocation(line: 85, column: 16, scope: !8366)
!8388 = !DILocation(line: 85, column: 9, scope: !8366)
!8389 = !DILocation(line: 85, column: 14, scope: !8366)
!8390 = !DILocation(line: 86, column: 27, scope: !8366)
!8391 = !DILocation(line: 86, column: 16, scope: !8366)
!8392 = !DILocation(line: 86, column: 9, scope: !8366)
!8393 = !DILocation(line: 86, column: 14, scope: !8366)
!8394 = !DILocation(line: 87, column: 27, scope: !8366)
!8395 = !DILocation(line: 87, column: 16, scope: !8366)
!8396 = !DILocation(line: 87, column: 9, scope: !8366)
!8397 = !DILocation(line: 87, column: 14, scope: !8366)
!8398 = !DILocation(line: 88, column: 9, scope: !8366)
!8399 = !DILocation(line: 90, column: 27, scope: !8366)
!8400 = !DILocation(line: 90, column: 16, scope: !8366)
!8401 = !DILocation(line: 90, column: 9, scope: !8366)
!8402 = !DILocation(line: 90, column: 14, scope: !8366)
!8403 = !DILocation(line: 91, column: 27, scope: !8366)
!8404 = !DILocation(line: 91, column: 16, scope: !8366)
!8405 = !DILocation(line: 91, column: 9, scope: !8366)
!8406 = !DILocation(line: 91, column: 14, scope: !8366)
!8407 = !DILocation(line: 92, column: 27, scope: !8366)
!8408 = !DILocation(line: 92, column: 16, scope: !8366)
!8409 = !DILocation(line: 92, column: 9, scope: !8366)
!8410 = !DILocation(line: 92, column: 14, scope: !8366)
!8411 = !DILocation(line: 93, column: 27, scope: !8366)
!8412 = !DILocation(line: 93, column: 16, scope: !8366)
!8413 = !DILocation(line: 93, column: 9, scope: !8366)
!8414 = !DILocation(line: 93, column: 14, scope: !8366)
!8415 = !DILocation(line: 94, column: 27, scope: !8366)
!8416 = !DILocation(line: 94, column: 16, scope: !8366)
!8417 = !DILocation(line: 94, column: 9, scope: !8366)
!8418 = !DILocation(line: 94, column: 14, scope: !8366)
!8419 = !DILocation(line: 95, column: 9, scope: !8366)
!8420 = !DILocation(line: 97, column: 23, scope: !8351)
!8421 = !DILocation(line: 97, column: 12, scope: !8351)
!8422 = !DILocation(line: 97, column: 5, scope: !8351)
!8423 = !DILocation(line: 97, column: 10, scope: !8351)
!8424 = !DILocation(line: 98, column: 19, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8351, file: !977, line: 98, column: 9)
!8426 = !DILocation(line: 98, column: 9, scope: !8425)
!8427 = !DILocation(line: 98, column: 9, scope: !8351)
!8428 = !DILocation(line: 99, column: 27, scope: !8425)
!8429 = !DILocation(line: 99, column: 16, scope: !8425)
!8430 = !DILocation(line: 99, column: 9, scope: !8425)
!8431 = !DILocation(line: 99, column: 14, scope: !8425)
!8432 = !DILocation(line: 101, column: 9, scope: !8425)
!8433 = !DILocation(line: 101, column: 14, scope: !8425)
!8434 = !DILocation(line: 102, column: 1, scope: !8351)
!8435 = distinct !DISubprogram(name: "skip_bits", scope: !2193, file: !2193, line: 460, type: !8436, isLocal: true, isDefinition: true, scopeLine: 461, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!8436 = !DISubroutineType(types: !8437)
!8437 = !{null, !2722, !971}
!8438 = !DILocalVariable(name: "s", arg: 1, scope: !8435, file: !2193, line: 460, type: !2722)
!8439 = !DILocation(line: 460, column: 45, scope: !8435)
!8440 = !DILocalVariable(name: "n", arg: 2, scope: !8435, file: !2193, line: 460, type: !971)
!8441 = !DILocation(line: 460, column: 52, scope: !8435)
!8442 = !DILocalVariable(name: "re_index", scope: !8435, file: !2193, line: 481, type: !970)
!8443 = !DILocation(line: 481, column: 18, scope: !8435)
!8444 = !DILocation(line: 481, column: 30, scope: !8435)
!8445 = !DILocation(line: 481, column: 34, scope: !8435)
!8446 = !DILocalVariable(name: "re_cache", scope: !8435, file: !2193, line: 481, type: !970)
!8447 = !DILocation(line: 481, column: 78, scope: !8435)
!8448 = !DILocalVariable(name: "re_size_plus8", scope: !8435, file: !2193, line: 481, type: !970)
!8449 = !DILocation(line: 481, column: 101, scope: !8435)
!8450 = !DILocation(line: 481, column: 118, scope: !8435)
!8451 = !DILocation(line: 481, column: 122, scope: !8435)
!8452 = !DILocation(line: 482, column: 18, scope: !8435)
!8453 = !DILocation(line: 482, column: 36, scope: !8435)
!8454 = !DILocation(line: 482, column: 48, scope: !8435)
!8455 = !DILocation(line: 482, column: 45, scope: !8435)
!8456 = !DILocation(line: 482, column: 33, scope: !8435)
!8457 = !DILocation(line: 482, column: 17, scope: !8435)
!8458 = !DILocation(line: 482, column: 55, scope: !8459)
!8459 = !DILexicalBlockFile(scope: !8435, file: !2193, discriminator: 1)
!8460 = !DILocation(line: 482, column: 67, scope: !8459)
!8461 = !DILocation(line: 482, column: 64, scope: !8459)
!8462 = !DILocation(line: 482, column: 17, scope: !8459)
!8463 = !DILocation(line: 482, column: 74, scope: !8464)
!8464 = !DILexicalBlockFile(scope: !8435, file: !2193, discriminator: 2)
!8465 = !DILocation(line: 482, column: 17, scope: !8464)
!8466 = !DILocation(line: 482, column: 17, scope: !8467)
!8467 = !DILexicalBlockFile(scope: !8435, file: !2193, discriminator: 3)
!8468 = !DILocation(line: 482, column: 14, scope: !8467)
!8469 = !DILocation(line: 483, column: 18, scope: !8435)
!8470 = !DILocation(line: 483, column: 6, scope: !8435)
!8471 = !DILocation(line: 483, column: 10, scope: !8435)
!8472 = !DILocation(line: 483, column: 16, scope: !8435)
!8473 = !DILocation(line: 485, column: 1, scope: !8435)
!8474 = distinct !DISubprogram(name: "get_fp_val", scope: !977, file: !977, line: 65, type: !8475, isLocal: true, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !3010)
!8475 = !DISubroutineType(types: !8476)
!8476 = !{!971, !2722}
!8477 = !DILocalVariable(name: "gb", arg: 1, scope: !8474, file: !977, line: 65, type: !2722)
!8478 = !DILocation(line: 65, column: 45, scope: !8474)
!8479 = !DILocation(line: 67, column: 27, scope: !8474)
!8480 = !DILocation(line: 67, column: 13, scope: !8474)
!8481 = !DILocation(line: 67, column: 35, scope: !8474)
!8482 = !DILocation(line: 67, column: 48, scope: !8474)
!8483 = !DILocation(line: 67, column: 5, scope: !8474)
